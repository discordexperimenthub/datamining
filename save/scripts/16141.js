(this.webpackChunkdiscord_app = this.webpackChunkdiscord_app || []).push([
  ["16141"],
  {
    16873: function (e, t, n) {
      "use strict";
      e.exports = n.p + "86c8b17e10af5906ce4b.svg";
    },
    605834: function (e, t, n) {
      "use strict";
      e.exports = n.p + "dee199baf31d0fc4227d.svg";
    },
    976585: function (e, t, n) {
      "use strict";
      e.exports = n.p + "8f386efbc744b1e32997.svg";
    },
    41912: function (e, t, n) {
      "use strict";
      e.exports = n.p + "7a8aa360d0b7b01bf851.svg";
    },
    706692: function (e, t, n) {
      "use strict";
      e.exports = n.p + "604ee8350b6482bfec20.svg";
    },
    615184: function (e, t, n) {
      "use strict";
      e.exports = n.p + "9e2f412156e2ac1f14e9.svg";
    },
    992507: function (e, t, n) {
      "use strict";
      e.exports = n.p + "64df6f04b850029d2e78.svg";
    },
    184841: function (e, t, n) {
      "use strict";
      e.exports = n.p + "adfe130868d2bcf467b5.svg";
    },
    852294: function (e, t, n) {
      "use strict";
      e.exports = n.p + "bca43ea978949f10c4be.svg";
    },
    836938: function (e, t, n) {
      "use strict";
      e.exports = n.p + "07aa1f325ebe8b8af5cb.svg";
    },
    295021: function (e, t, n) {
      "use strict";
      e.exports = n.p + "adc405c99f845c4bd619.svg";
    },
    177642: function (e, t, n) {
      "use strict";
      e.exports = n.p + "336a8bdedb983df7fdbf.svg";
    },
    697221: function (e, t, n) {
      "use strict";
      e.exports = n.p + "83720a1a3ec0963a1f71.svg";
    },
    951076: function (e, t, n) {
      "use strict";
      e.exports = n.p + "332e869e414fbd8708de.svg";
    },
    760106: function (e, t, n) {
      "use strict";
      e.exports = n.p + "8eeb59bba0a61cbffc41.svg";
    },
    41352: function (e, t, n) {
      "use strict";
      e.exports = n.p + "d6dfb89ab06b62044dbb.svg";
    },
    21710: function (e, t, n) {
      "use strict";
      e.exports = n.p + "53d74eda11a4185c1acd.svg";
    },
    999523: function (e, t, n) {
      "use strict";
      e.exports = n.p + "6299f44c9c8c8c31cfdf.svg";
    },
    622650: function (e, t, n) {
      "use strict";
      e.exports = n.p + "99d35a435f00582ddf41.svg";
    },
    454758: function (e, t, n) {
      "use strict";
      e.exports = n.p + "8adc88268bfefa227846.svg";
    },
    456117: function (e, t, n) {
      "use strict";
      e.exports = n.p + "45cd76fed34c8e398cc8.svg";
    },
    606778: function (e, t, n) {
      "use strict";
      e.exports = n.p + "75081bdaad2d359c1469.svg";
    },
    665718: function (e, t, n) {
      "use strict";
      e.exports = n.p + "5420f8fd9d89897c6448.svg";
    },
    897327: function (e, t, n) {
      "use strict";
      e.exports = n.p + "d8197d45ef3e7289594d.svg";
    },
    678070: function (e, t, n) {
      "use strict";
      e.exports = n.p + "a004cb7fd77d4358a96d.svg";
    },
    789335: function (e, t, n) {
      "use strict";
      e.exports = n.p + "d79ae57779cdb98eeb61.svg";
    },
    861948: function (e, t, n) {
      "use strict";
      e.exports = n.p + "3ccc7040cdcbc1efaf36.svg";
    },
    233135: function (e, t, n) {
      "use strict";
      e.exports = n.p + "fd2a60d87996e1826c07.svg";
    },
    712967: function (e, t, n) {
      "use strict";
      e.exports = n.p + "9b36085226f30399f2f9.svg";
    },
    981726: function (e, t, n) {
      "use strict";
      e.exports = n.p + "440d8145b3dff23399e7.svg";
    },
    704176: function (e, t, n) {
      "use strict";
      e.exports = n.p + "690146a2083a857c3dd1.svg";
    },
    529547: function (e, t, n) {
      "use strict";
      e.exports = n.p + "62427879d943e487c053.svg";
    },
    21719: function (e, t, n) {
      "use strict";
      e.exports = n.p + "865d3a738134a692139a.svg";
    },
    117861: function (e, t, n) {
      "use strict";
      e.exports = n.p + "dce7aacb93fbfc80cd23.svg";
    },
    427230: function (e, t, n) {
      "use strict";
      e.exports = n.p + "3a354aac283f909d403d.svg";
    },
    707132: function (e, t, n) {
      "use strict";
      e.exports = n.p + "233617305061cc683540.svg";
    },
    846770: function (e, t, n) {
      "use strict";
      e.exports = n.p + "9cf8c36deaa3dc7b8d65.svg";
    },
    408426: function (e, t, n) {
      "use strict";
      e.exports = n.p + "0763b684871cf3aa4c4b.svg";
    },
    962296: function (e, t, n) {
      "use strict";
      e.exports = n.p + "053ece9d4d0e004f1c47.svg";
    },
    271861: function (e, t, n) {
      "use strict";
      e.exports = n.p + "c7fa42bca0c3ea28f681.svg";
    },
    149855: function (e, t, n) {
      "use strict";
      e.exports = n.p + "0c5c580c72a087382ee1.svg";
    },
    897204: function (e, t, n) {
      "use strict";
      e.exports = n.p + "590704d389aee197d7a5.svg";
    },
    465073: function (e, t, n) {
      "use strict";
      e.exports = n.p + "e86b4414e7dfa126abbd.svg";
    },
    227966: function (e, t, n) {
      "use strict";
      e.exports = n.p + "1a7474b52c42a84f530d.svg";
    },
    327893: function (e, t, n) {
      "use strict";
      e.exports = n.p + "acc5574629c0d16d8981.svg";
    },
    640593: function (e, t, n) {
      "use strict";
      e.exports = n.p + "4a17a4f6b479ae64f2bd.svg";
    },
    425643: function (e, t, n) {
      "use strict";
      e.exports = n.p + "21c5ac2b22352e58d143.svg";
    },
    328989: function (e, t, n) {
      "use strict";
      e.exports = n.p + "c4055dc18143c869ae27.svg";
    },
    534044: function (e, t, n) {
      "use strict";
      e.exports = n.p + "d8d0ba3c83140067ae2b.mp4";
    },
    277842: function (e, t, n) {
      "use strict";
      e.exports = n.p + "46d2034b95933b3d4e34.svg";
    },
    833345: function (e, t, n) {
      "use strict";
      e.exports = n.p + "30c5d0b920e7f142a6c6.svg";
    },
    289867: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var a = n("913144"),
        l = {
          toggleMembersSection() {
            a.default.dispatch({ type: "CHANNEL_TOGGLE_MEMBERS_SECTION" });
          },
          toggleProfilePanelSection() {
            a.default.dispatch({ type: "PROFILE_PANEL_TOGGLE_SECTION" });
          },
          toggleSummariesSection() {
            a.default.dispatch({ type: "CHANNEL_TOGGLE_SUMMARIES_SECTION" });
          },
        };
    },
    369008: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var a = n("913144"),
        l = {
          search(e, t) {
            a.default.dispatch({
              type: "PRIVATE_CHANNEL_RECIPIENTS_INVITE_QUERY",
              query: e,
              channelId: t,
            });
          },
          clear(e) {
            a.default.dispatch({
              type: "PRIVATE_CHANNEL_RECIPIENTS_INVITE_QUERY",
              query: "",
              channelId: e,
            });
          },
          select(e) {
            a.default.dispatch({
              type: "PRIVATE_CHANNEL_RECIPIENTS_INVITE_SELECT",
              row: e,
            });
          },
          addUser(e) {
            a.default.dispatch({
              type: "PRIVATE_CHANNEL_RECIPIENTS_ADD_USER",
              userId: e,
            });
          },
          removeUser(e) {
            a.default.dispatch({
              type: "PRIVATE_CHANNEL_RECIPIENTS_REMOVE_USER",
              userId: e,
            });
          },
          open(e) {
            a.default.dispatch({
              type: "PRIVATE_CHANNEL_RECIPIENTS_INVITE_OPEN",
              channelId: e,
            });
          },
          close() {
            a.default.dispatch({
              type: "PRIVATE_CHANNEL_RECIPIENTS_INVITE_CLOSE",
            });
          },
        };
    },
    363484: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var a = n("872717"),
        l = n("913144"),
        s = n("49111"),
        i = {
          fetchRegions(e) {
            a.default
              .get({
                url: s.Endpoints.REGIONS(e),
                retries: 1,
                oldFormErrors: !0,
              })
              .then(
                t =>
                  l.default.dispatch({
                    type: "LOAD_REGIONS",
                    regions: t.body,
                    guildId: e,
                  }),
                () =>
                  l.default.dispatch({
                    type: "LOAD_REGIONS",
                    regions: [],
                    guildId: e,
                  })
              );
          },
          changeCallRegion(e, t) {
            a.default.patch({
              url: s.Endpoints.CALL(e),
              body: { region: t },
              oldFormErrors: !0,
            });
          },
        };
    },
    112821: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return S;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("446674"),
        i = n("819855"),
        r = n("77078"),
        u = n("828986"),
        o = n("519841"),
        d = n("787336"),
        c = n("508229"),
        f = n("660478"),
        h = n("590514"),
        m = n("249561"),
        p = n("782340");
      let E = [];
      function S(e) {
        let { channel: t, onJump: S } = e,
          { messages: g, loading: C } = (0, s.useStateFromStoresObject)(
            [c.default],
            () => {
              let e = c.default.getPinnedMessages(t.id),
                n = null != e ? e.messages : E;
              return {
                messages: n,
                loading: null == n || (null != e && e.loading),
              };
            }
          ),
          _ = (0, s.useStateFromStores)([f.default], () =>
            f.default.hasUnreadPins(t.id)
          );
        return (
          l.useEffect(() => {
            o.AttachmentLinkRefreshExperiment.getCurrentConfig({
              location: "pins",
            }).enabled &&
              g.some(d.messageHasExpiredAttachmentUrl) &&
              u.default.fetchPins(t.id, !0);
          }, []),
          l.useEffect(() => {
            _ && u.default.ackPins(t.id);
          }, [_, t.id]),
          (0, a.jsx)(r.Dialog, {
            "aria-label": p.default.Messages.PINNED_MESSAGES,
            children: (0, a.jsx)(h.default, {
              onFetch: function () {
                u.default.ackPins(t.id), u.default.fetchPins(t.id);
              },
              channel: t,
              messages: g,
              loading: C,
              analyticsName: "Channel Pins",
              onCloseMessage: function (e, n) {
                null != e &&
                  (n.shiftKey
                    ? u.default.unpinMessage(t, e.id)
                    : m.default.confirmUnpin(t, e));
              },
              onJump: S,
              getProTip: function () {
                return t.isPrivate()
                  ? p.default.Messages.PINNED_MESSAGES_PRO_TIP_BODY_DMS
                  : p.default.Messages.PINNED_MESSAGES_PRO_TIP_BODY_CHANNEL;
              },
              renderHeader: () =>
                (0, a.jsx)(h.Header, {
                  title: p.default.Messages.PINNED_MESSAGES,
                }),
              renderEmptyState: function (e) {
                let l = p.default.Messages.NO_PINS_IN_CHANNEL;
                t.isPrivate() && (l = p.default.Messages.NO_PINS_IN_DM);
                let s = (0, i.isThemeLight)(e) ? n("615184") : n("992507");
                return (0, a.jsx)(
                  h.EmptyStateCenter,
                  { msg: l, image: s },
                  "emptystate"
                );
              },
              listName: "pins",
            }),
          })
        );
      }
    },
    942722: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return b;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("394846"),
        i = n("446674"),
        r = n("77078"),
        u = n("272030"),
        o = n("352674"),
        d = n("252063"),
        c = n("506885"),
        f = n("981601"),
        h = n("824563"),
        m = n("27618"),
        p = n("191542"),
        E = n("697218"),
        S = n("79798"),
        g = n("151185"),
        C = n("11056"),
        _ = n("826684"),
        I = n("599110"),
        T = n("315102"),
        v = n("659500"),
        x = n("519812"),
        N = n("158998"),
        A = n("50885"),
        M = n("888503"),
        R = n("49111"),
        j = n("782340"),
        L = n("591665"),
        y = n("559571");
      let O = A.default.getEnableHardwareAcceleration();
      function P(e) {
        let { user: t, channel: l } = e,
          { status: d, activities: S } = (0, i.useStateFromStoresObject)(
            [m.default, E.default, h.default],
            () =>
              m.default.isFriend(t.id) || t === E.default.getCurrentUser()
                ? {
                    status: h.default.getStatus(t.id),
                    activities: h.default.getActivities(t.id),
                  }
                : {}
          ),
          g = (0, i.useStateFromStores)(
            [p.default],
            () => null != p.default.getTypingUsers(l.id)[t.id]
          ),
          C = (0, i.useStateFromStores)([E.default], () =>
            E.default.getCurrentUser()
          ),
          _ = (0, i.useStateFromStores)([h.default], () =>
            h.default.isMobileOnline(t.id)
          ),
          I = (0, i.useStateFromStores)([m.default], () =>
            m.default.getNickname(t.id)
          ),
          T = e => {
            (0, u.openContextMenuLazy)(e, async () => {
              let { default: e } = await n
                .el("166452")
                .then(n.bind(n, "166452"));
              return n => (0, a.jsx)(e, { ...n, user: t, channel: l });
            });
          };
        return (0, a.jsx)(r.Popout, {
          preload: () => (0, c.default)(t.id, t.getAvatarURL(void 0, 80)),
          renderPopout: e =>
            (0, a.jsx)(f.default, { ...e, userId: t.id, channelId: l.id }),
          position: s.isMobile ? "window_center" : "left",
          spacing: 16,
          onShiftClick: () => {
            let e = "@".concat(
                N.default.getUserTag(t, { decoration: "never" })
              ),
              n = "<@".concat(t.id, ">");
            v.ComponentDispatch.dispatchToLastSubscribed(
              R.ComponentActions.INSERT_TEXT,
              { plainText: e, rawText: n }
            ),
              o.default.startTyping(l.id);
          },
          children: e =>
            (0, a.jsx)(
              M.default,
              {
                user: t,
                currentUser: C,
                isOwner: t.id === l.ownerId,
                ownerTooltipText: j.default.Messages.GROUP_OWNER,
                shouldAnimateStatus: O,
                isTyping: g,
                status: d,
                activities: S,
                channel: l,
                onContextMenu: T,
                isMobile: _,
                nick: I,
                ...e,
              },
              t.id
            ),
        });
      }
      function D(e) {
        var t;
        let { integration: i, channel: o } = e,
          d = l.useCallback(
            e => {
              (0, u.openContextMenuLazy)(e, async () => {
                let { default: e } = await n
                  .el("348866")
                  .then(n.bind(n, "348866"));
                return t => (0, a.jsx)(e, { ...t, channel: o, integration: i });
              });
            },
            [i, o]
          ),
          h = i.application.bot,
          m = T.default.getApplicationIconURL({
            id: i.application.id,
            icon: i.application.icon,
            bot: null === (t = i.application) || void 0 === t ? void 0 : t.bot,
            botIconFirst: !0,
          });
        return null != h
          ? (0, a.jsx)(r.Popout, {
              preload: () => (0, c.default)(h.id, m),
              renderPopout: e =>
                (0, a.jsx)(f.default, { ...e, userId: h.id, channelId: o.id }),
              position: s.isMobile ? "window_center" : "left",
              spacing: 16,
              children: e =>
                (0, a.jsx)(C.default, {
                  onContextMenu: d,
                  className: L.member,
                  name: (0, a.jsx)("span", {
                    className: L.username,
                    children: i.application.name,
                  }),
                  avatar: (0, a.jsx)(r.Avatar, {
                    size: r.AvatarSizes.SIZE_32,
                    src: m,
                    "aria-label": i.application.name,
                    statusTooltip: !0,
                  }),
                  decorators: (0, a.jsx)(S.default, {
                    className: L.botTag,
                    verified: null == h ? void 0 : h.isVerifiedBot(),
                  }),
                  id: i.application.id,
                  focusProps: {
                    offset: { top: 4, bottom: 4, left: 4, right: 4 },
                  },
                  ...e,
                }),
            })
          : null;
      }
      function b(e) {
        let { channel: t } = e,
          s = E.default.getCurrentUser(),
          u = null == s ? void 0 : s.isStaff(),
          o = (0, i.useStateFromStoresArray)(
            [E.default],
            () => (0, x.getRecipients)(t.recipients, E.default),
            [t.recipients]
          ),
          {
            installedIntegrations: f,
            applicationsShelf: h,
            fetched: m,
            appsInGDMEnabled: p,
            availableApplications: T,
          } = (0, d.usePrivateChannelIntegrationState)({ channelId: t.id });
        l.useEffect(() => {
          if (u)
            for (let e of o)
              (0, c.default)(e.id, e.getAvatarURL(void 0, 80), {
                dispatchWait: !0,
              });
        }, [u, o]),
          l.useEffect(() => {
            I.default.track(R.AnalyticEvents.MEMBER_LIST_VIEWED, {
              channel_id: t.id,
              channel_type: t.type,
              guild_id: t.guild_id,
            });
          }, [t.guild_id, t.id, t.type]);
        let v = u && o.every(e => e.isStaff());
        return (0, a.jsx)("div", {
          className: y.membersWrap,
          children: (0, a.jsxs)(r.Scroller, {
            className: y.members,
            fade: !0,
            children: [
              (0, a.jsxs)(_.default, {
                className: y.membersGroup,
                children: [
                  ""
                    .concat(j.default.Messages.MEMBERS, "—")
                    .concat(o.length, " "),
                  v
                    ? (0, a.jsx)(S.default, {
                        className: y.decorator,
                        type: S.default.Types.STAFF_ONLY_DM,
                      })
                    : null,
                ],
              }),
              o.map(e => (0, a.jsx)(P, { user: e, channel: t }, e.id)),
              p &&
                (f.length > 0 || (m && h.length > 0)) &&
                (0, a.jsxs)(a.Fragment, {
                  children: [
                    (0, a.jsx)(_.default, {
                      className: y.membersGroup,
                      children: ""
                        .concat(j.default.Messages.APPS, "—")
                        .concat(f.length),
                    }),
                    f.map(e =>
                      (0, a.jsx)(
                        D,
                        { integration: e, channel: t },
                        e.application.id
                      )
                    ),
                    T.length > 0 &&
                      (0, a.jsx)(C.default, {
                        className: L.member,
                        onClick: () => {
                          (0, r.openModalLazy)(async () => {
                            let { default: e } = await n
                              .el("724110")
                              .then(n.bind(n, "724110"));
                            return n =>
                              (0, a.jsx)(e, { ...n, channelId: t.id });
                          });
                        },
                        avatar: (0, a.jsx)("div", {
                          className: y.appIconWrapper,
                          children: (0, a.jsx)(g.default, {
                            width: 18,
                            height: 18,
                          }),
                        }),
                        name: j.default.Messages.PRIVATE_CHANNEL_ADD_APPS,
                      }),
                  ],
                }),
            ],
          }),
        });
      }
    },
    654978: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return g;
          },
        }),
        n("781738"),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("446674"),
        u = n("363484"),
        o = n("402904"),
        d = n("145131"),
        c = n("841283"),
        f = n("782340"),
        h = n("315426");
      let m = { position: "bottom", autoInvert: !1 },
        p = e => {
          let { region: t, className: n = h.regionSelectName } = e,
            l = t.name.replace(/ \(VIP\)$/, "");
          return (0, a.jsx)("div", { className: n, children: l });
        };
      class E extends l.PureComponent {
        render() {
          let { region: e, selected: t } = this.props;
          return (0, a.jsxs)(d.default, {
            align: d.default.Align.CENTER,
            className: i({ selected: t }),
            children: [
              (0, a.jsx)(p, { region: e, className: h.regionSelectName }),
              t ? (0, a.jsx)("i", { className: h.check }) : null,
            ],
          });
        }
      }
      class S extends l.PureComponent {
        componentDidMount() {
          null == this.props.regions && u.default.fetchRegions(null);
        }
        render() {
          let { regions: e } = this.props;
          if (null == e) return null;
          let t = this.getSelectedRegion(),
            n = { label: t.name, value: t },
            l = e
              .filter(e => !e.deprecated && !e.hidden)
              .map(e => ({ label: e.name, value: e, key: e.id }));
          return (0, a.jsx)(c.default, {
            label: f.default.Messages.REGION,
            options: l,
            value: n,
            onChange: this.handleChangeVoiceRegion,
            renderOption: this.renderOption,
            popoutProps: m,
            popoutClassName: h.regionSelectPopout,
          });
        }
        constructor(...e) {
          super(...e),
            (this.renderOption = (e, t) =>
              (0, a.jsx)(E, { region: e.value, selected: t }, e.value.id)),
            (this.getSelectedRegion = () => {
              var e;
              let { regions: t, call: n } = this.props;
              return n.regionUpdated && null != t && null != n.region
                ? null !==
                    (e = t.find(e => {
                      let { id: t } = e;
                      return t === n.region;
                    })) && void 0 !== e
                  ? e
                  : { name: n.region, id: n.region }
                : {
                    id: "automatic",
                    name: f.default.Messages.AUTOMATIC_REGION,
                    vip: !1,
                    deprecated: !1,
                    hidden: !1,
                  };
            }),
            (this.handleChangeVoiceRegion = e => {
              let { value: t } = e,
                { channelId: n } = this.props.call;
              u.default.changeCallRegion(n, t.id);
            });
        }
      }
      var g = r.default.connectStores([o.default], () => ({
        regions: o.default.getRegions(null),
      }))(S);
    },
    561963: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return Q;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("917351"),
        u = n.n(r),
        o = n("974667"),
        d = n("394846"),
        c = n("446674"),
        f = n("77078"),
        h = n("272030"),
        m = n("352674"),
        p = n("206230"),
        E = n("95039"),
        S = n("405645"),
        g = n("256648"),
        C = n("593752"),
        _ = n("506885"),
        I = n("981601"),
        T = n("373469"),
        v = n("26989"),
        x = n("305961"),
        N = n("824563"),
        A = n("101125"),
        M = n("191542"),
        R = n("697218"),
        j = n("543289"),
        L = n("45029"),
        y = n("155207"),
        O = n("826684"),
        P = n("483093"),
        D = n("599110"),
        b = n("659500"),
        U = n("991170"),
        w = n("158998"),
        F = n("50885"),
        V = n("888503"),
        k = n("49111"),
        B = n("782340"),
        G = n("363092"),
        H = n("559571");
      let W = F.default.getEnableHardwareAcceleration(),
        Y = 44 + V.AVATAR_DECORATION_PADDING,
        z = l.memo(function (e) {
          let { channel: t, sectionId: s, userId: i, guildOwnerId: r } = e,
            u = (0, c.useStateFromStores)([M.default], () =>
              M.default.isTyping(t.id, i)
            ),
            p = (0, c.useStateFromStores)([v.default], () =>
              v.default.getMember(t.guild_id, i)
            ),
            S = (0, c.useStateFromStores)(
              [x.default],
              () => {
                var e;
                return (null == p ? void 0 : p.colorRoleId) != null
                  ? null ===
                      (e = x.default.getRole(t.guild_id, p.colorRoleId)) ||
                    void 0 === e
                    ? void 0
                    : e.name
                  : void 0;
              },
              [t.guild_id, p]
            ),
            g = (0, c.useStateFromStores)([R.default], () =>
              R.default.getUser(i)
            ),
            j = (0, c.useStateFromStores)([R.default], () =>
              R.default.getCurrentUser()
            ),
            L = (null == g ? void 0 : g.id) === (null == j ? void 0 : j.id),
            y = (0, c.useStateFromStores)([N.default, A.default], () =>
              L ? A.default.getStatus() : N.default.getStatus(i, t.guild_id)
            ),
            O = (0, c.useStateFromStores)([N.default], () =>
              N.default.isMobileOnline(i)
            ),
            P = (0, c.useStateFromStores)([N.default, A.default], () =>
              L
                ? A.default.getActivities()
                : N.default.getActivities(i, t.guild_id)
            ),
            D = (0, c.useStateFromStores)([T.default], () =>
              T.default.getAnyStreamForUser(i)
            ),
            U = (0, o.useListItem)(i),
            F = (0, c.useStateFromStores)([C.default], () =>
              C.default.canUserViewChannel(t.id, s, i)
            ),
            G = (null == g ? void 0 : g.id) != null && g.id === r,
            H = l.useCallback(
              e => {
                null != g &&
                  (0, h.openContextMenuLazy)(e, async () => {
                    let { default: e } = await n
                      .el("721429")
                      .then(n.bind(n, "721429"));
                    return n =>
                      (0, a.jsx)(e, {
                        ...n,
                        user: g,
                        guildId: t.guild_id,
                        channel: t,
                      });
                  });
              },
              [g, t]
            ),
            Y = l.useCallback(() => {
              if (null == g) return;
              let e = "@".concat(
                  w.default.getUserTag(g, { decoration: "never" })
                ),
                n = "<@".concat(g.id, ">");
              b.ComponentDispatch.dispatchToLastSubscribed(
                k.ComponentActions.INSERT_TEXT,
                { plainText: e, rawText: n }
              ),
                m.default.startTyping(t.id);
            }, [g, t]),
            z = l.useCallback(
              e => {
                e.stopPropagation(),
                  (0, E.openGuildBoostingMarketingModal)({
                    guildId: t.guild_id,
                    location: {
                      section: k.AnalyticsSections.THREAD_MEMBER_LIST,
                      object: k.AnalyticsObjects.BOOST_GEM_ICON,
                    },
                  });
              },
              [t.guild_id]
            );
          if (null == g) return null;
          let K = null == p ? void 0 : p.premiumSince;
          return (0, a.jsx)(f.Popout, {
            preload: () =>
              (0, _.default)(g.id, g.getAvatarURL(t.guild_id, 80), {
                guildId: t.guild_id,
                channelId: t.id,
              }),
            renderPopout: e =>
              (0, a.jsx)(I.default, {
                ...e,
                userId: g.id,
                guildId: t.guild_id,
                channelId: t.id,
                analyticsParams: {
                  location: {
                    page: k.AnalyticsPages.GUILD_CHANNEL,
                    section: k.AnalyticsSections.THREAD_MEMBER_LIST,
                  },
                },
              }),
            position: d.isMobile ? "window_center" : "left",
            spacing: 16,
            onShiftClick: Y,
            children: (e, n) => {
              let { isShown: l } = n;
              return (0, a.jsx)(V.default, {
                onContextMenu: H,
                shouldAnimateStatus: W,
                user: g,
                currentUser: j,
                nick: null == p ? void 0 : p.nick,
                status: y,
                activities: P,
                colorString: null == p ? void 0 : p.colorString,
                colorRoleName: S,
                isTyping: u,
                channel: t,
                guildId: t.guild_id,
                isMobile: O,
                selected: l,
                applicationStream: D,
                premiumSince: null == K ? null : new Date(K),
                onClickPremiumGuildIcon: z,
                itemProps: U,
                lostPermissionTooltipText: F
                  ? void 0
                  : B.default.Messages.THREAD_MEMBER_WITHOUT_ACCESS,
                isOwner: G,
                ...e,
              });
            },
          });
        }),
        K = l.memo(function (e) {
          let { id: t, label: n, count: l, guildId: s } = e,
            i = (0, S.useRoleIcon)({ roleId: t, guildId: s, size: 16 });
          return t === k.StatusTypes.UNKNOWN
            ? (0, a.jsx)("div", {
                className: H.membersGroup,
                children: (0, a.jsx)("div", {
                  className: H.memberGroupsPlaceholder,
                }),
              })
            : (0, a.jsxs)(O.default, {
                className: H.membersGroup,
                "aria-label":
                  B.default.Messages.CHANNEL_MEMBERS_A11Y_LABEL.format({
                    title: n,
                    count: l,
                  }),
                children: [
                  null != i
                    ? (0, a.jsx)(P.default, { className: H.roleIcon, ...i })
                    : null,
                  (0, a.jsxs)("span", {
                    "aria-hidden": !0,
                    children: [n, " — ", l],
                  }),
                ],
              });
        }),
        Z = l.memo(function (e) {
          let { channel: t } = e;
          return t.type === k.ChannelTypes.PRIVATE_THREAD
            ? (0, a.jsxs)(a.Fragment, {
                children: [
                  (0, a.jsx)("div", { className: G.divider }),
                  (0, a.jsxs)(f.Text, {
                    variant: "text-xs/bold",
                    color: "header-secondary",
                    className: G.private,
                    children: [
                      (0, a.jsx)(L.default, { width: 12, height: 12 }),
                      "\xa0",
                      B.default.Messages.THREAD_BROWSER_PRIVATE,
                    ],
                  }),
                  (0, a.jsx)(f.Text, {
                    variant: "text-sm/normal",
                    color: "header-secondary",
                    className: G.instructions,
                    children:
                      B.default.Messages
                        .MEMBER_LIST_PRIVATE_THREAD_INSTRUCTIONS,
                  }),
                ],
              })
            : null;
        });
      function Q(e) {
        let { channel: t, guild: n } = e,
          s = "members-".concat(t.id),
          r = (0, g.useThreadMemberListSections)(t.id, n),
          d = r.filter(e => e.userIds.length > 0).reverse()[0],
          { navigator: h, listRef: m } = (function (e, t) {
            let n = (0, c.useStateFromStores)(
                [p.default],
                () => p.default.keyboardModeEnabled
              ),
              a = l.useRef(null),
              s = l.useCallback(
                (e, n) => {
                  let l = a.current;
                  if (null == l) return;
                  let s = parseInt(n, 10),
                    [i, r] = l.getSectionRowFromIndex(s),
                    u = 0 === i && 0 === r ? t : 0;
                  l.scrollToIndex({
                    section: i,
                    row: r,
                    padding: u,
                    callback: () => {
                      requestAnimationFrame(() => {
                        var t;
                        return null === (t = document.querySelector(e)) ||
                          void 0 === t
                          ? void 0
                          : t.focus({ preventScroll: !0 });
                      });
                    },
                  });
                },
                [t]
              ),
              i = l.useCallback(
                () =>
                  new Promise(e => {
                    let t = a.current;
                    if (null == t) return e();
                    t.scrollToTop({
                      callback: () => requestAnimationFrame(() => e()),
                    });
                  }),
                []
              ),
              r = l.useCallback(
                () =>
                  new Promise(e => {
                    let t = a.current;
                    if (null == t) return e();
                    t.scrollToBottom({
                      callback() {
                        requestAnimationFrame(() => setTimeout(e, 100));
                      },
                    });
                  }),
                []
              ),
              u = (0, o.default)({
                id: e,
                setFocus: s,
                isEnabled: n,
                scrollToStart: i,
                scrollToEnd: r,
              });
            return { navigator: u, listRef: a };
          })(s, Y),
          E = 0 === r.length || r.every(e => 0 === e.userIds.length);
        if (
          (l.useEffect(() => {
            D.default.track(k.AnalyticEvents.MEMBER_LIST_VIEWED, {
              channel_id: t.id,
              channel_type: t.type,
              guild_id: t.guild_id,
            });
          }, [t.guild_id, t.id, t.type]),
          E)
        )
          return (0, a.jsx)(X, { channel: t });
        let S = u.omit(h.containerProps, ["ref"]),
          C = U.default.getGuildVisualOwnerId(n);
        return (0, a.jsx)(o.ListNavigatorProvider, {
          navigator: h,
          children: (0, a.jsx)(f.FocusJumpSection, {
            children: e =>
              (0, a.jsx)("div", {
                className: i(H.membersWrap, H.hiddenMembers),
                children: (0, a.jsx)(
                  f.List,
                  {
                    ref: m,
                    className: H.members,
                    paddingTop: 0,
                    sectionHeight: 40,
                    renderSection: e => {
                      let { section: t } = e,
                        l = r[t];
                      return (0, a.jsx)(
                        K,
                        {
                          id: l.id,
                          label: l.label,
                          count: l.userIds.length,
                          guildId: n.id,
                        },
                        l.id
                      );
                    },
                    rowHeight: Y,
                    renderRow: e => {
                      let { section: n, row: l } = e,
                        { userIds: s, id: i } = r[n];
                      return (0, a.jsx)(
                        z,
                        {
                          channel: t,
                          sectionId: i,
                          userId: s[l],
                          guildOwnerId: C,
                        },
                        s[l]
                      );
                    },
                    footerHeight: e =>
                      r[e] === d && t.type === k.ChannelTypes.PRIVATE_THREAD
                        ? 80
                        : 0,
                    renderFooter: e =>
                      r[e.section] === d
                        ? (0, a.jsx)(Z, { channel: t }, "footer")
                        : null,
                    innerAriaLabel: B.default.Messages.MEMBERS,
                    innerTag: "ul",
                    sections: r.map(e => e.userIds.length),
                    fade: !0,
                    ...S,
                    ...e,
                  },
                  s
                ),
              }),
          }),
        });
      }
      function X(e) {
        let { channel: t } = e;
        return (0, a.jsxs)("div", {
          className: i(H.membersWrap, H.hiddenMembers, H.members, G.emptyState),
          children: [
            (0, a.jsx)(f.Text, {
              className: G.emptyStateHeader,
              variant: "text-xs/bold",
              color: "interactive-normal",
              children: B.default.Messages.MEMBERS,
            }),
            (0, a.jsxs)("div", {
              className: G.emptyStateIconContainer,
              children: [
                (0, a.jsx)("div", {
                  className: G.emptyStateIcon,
                  children: (0, a.jsx)(y.default, { width: 32, height: 32 }),
                }),
                (0, a.jsx)(j.default, { className: G.emptyStateStars }),
              ],
            }),
            (0, a.jsx)(f.Heading, {
              variant: "heading-md/semibold",
              children: t.isForumPost()
                ? B.default.Messages.FORUM_POST_MEMBER_LIST_EMPTY_STATE_HEADER
                : B.default.Messages.THREAD_MEMBER_LIST_EMPTY_STATE_HEADER,
            }),
            (0, a.jsx)(f.Text, {
              className: G.emptyStateSubtext,
              variant: "text-sm/normal",
              color: "header-secondary",
              children:
                B.default.Messages.THREAD_MEMBER_LIST_EMPTY_STATE_SUBTEXT,
            }),
          ],
        });
      }
    },
    841283: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("77078"),
        i = n("6466");
      class r extends l.PureComponent {
        render() {
          let {
            label: e,
            value: t,
            renderValue: n,
            className: l,
            popoutProps: r,
          } = this.props;
          return (0, a.jsx)(s.Popout, {
            ...r,
            renderPopout: this.renderPopout,
            children: (r, u) => {
              let { isShown: o } = u;
              return (0, a.jsx)(s.Clickable, {
                ...r,
                className: l,
                "aria-haspopup": "listbox",
                "aria-expanded": o,
                children: (0, a.jsx)(i.default, {
                  label: e,
                  value: t,
                  renderValue: n,
                }),
              });
            },
          });
        }
        constructor(...e) {
          super(...e),
            (this.renderPopout = e => {
              let { closePopout: t } = e,
                {
                  options: n,
                  value: l,
                  renderOption: s,
                  popoutClassName: r,
                  scroller: u,
                } = this.props;
              return (0, a.jsx)(i.QuickSelectPopout, {
                scroller: !!u,
                className: r,
                options: n,
                value: l,
                renderOption: s,
                onChange: e => {
                  this.handleChange(e), t();
                },
              });
            }),
            (this.handleChange = e => {
              let { onChange: t } = this.props;
              null == t || t(e);
            });
        }
      }
      var u = r;
    },
    738073: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return S;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("446674"),
        u = n("77078"),
        o = n("851387"),
        d = n("697218"),
        c = n("440351"),
        f = n("701909"),
        h = n("49111"),
        m = n("782340"),
        p = n("188298");
      class E extends l.PureComponent {
        componentDidMount() {
          let { current: e } = this.scroller;
          null == e || e.scrollToBottom();
        }
        render() {
          let { nsfwDisallowed: e } = this.props,
            t = m.default.Messages.NSFW_DESCRIPTION;
          t = e
            ? m.default.Messages.AGE_GATE_NSFW_UNDERAGE_BODY.format({
                helpURL: f.default.getArticleURL(
                  h.HelpdeskArticles.NSFW_AGE_GATING
                ),
              })
            : m.default.Messages.AGE_GATE_NSFW_DESCRIPTION;
          let n = e
            ? (0, a.jsx)(c.default, {
                onAgree: this.handleAgree,
                onDisagree: this.handleDisagree,
                title: m.default.Messages.AGE_GATE_NSFW_UNDERAGE_HEADER,
                description: t,
                agreement: null,
                disagreement: m.default.Messages.BACK,
                imageClassName: p.ageGatedImage,
              })
            : (0, a.jsx)(c.default, {
                onAgree: this.handleAgree,
                onDisagree: this.handleDisagree,
                title: m.default.Messages.NSFW_TITLE,
                description: t,
                agreement: m.default.Messages.NSFW_ACCEPT,
                disagreement: m.default.Messages.NSFW_DECLINE,
              });
          return (0, a.jsx)(u.AdvancedScroller, {
            ref: this.scroller,
            className: p.scroller,
            children: (0, a.jsx)("div", {
              className: i(this.props.className, p.wrapper),
              children: n,
            }),
          });
        }
        constructor(...e) {
          super(...e),
            (this.scroller = l.createRef()),
            (this.handleDisagree = () => {
              let { guild: e } = this.props;
              null != e && o.default.nsfwReturnToSafety(e.id);
            }),
            (this.handleAgree = () => {
              let { guild: e } = this.props;
              null != e && o.default.nsfwAgree(e.id);
            });
        }
      }
      var S = r.default.connectStores([d.default], () => {
        var e;
        return {
          nsfwDisallowed:
            (null === (e = d.default.getCurrentUser()) || void 0 === e
              ? void 0
              : e.nsfwAllowed) === !1,
        };
      })(E);
    },
    650912: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          makeVoiceUserDroppable: function () {
            return c;
          },
          makeVoiceUserDraggable: function () {
            return f;
          },
        });
      var a = n("476042"),
        l = n("851387"),
        s = n("305961"),
        i = n("957255"),
        r = n("800762"),
        u = n("316133"),
        o = n("49111");
      let d = "DRAGGABLE_USER";
      function c(e) {
        return (0, a.DropTarget)(
          d,
          {
            canDrop(e) {
              var t, n;
              let { channel: a } = e,
                l = a.getGuildId(),
                d =
                  null !==
                    (n =
                      null === (t = s.default.getGuild(l)) || void 0 === t
                        ? void 0
                        : t.maxVideoChannelUsers) && void 0 !== n
                    ? n
                    : -1,
                c = u.default.countVoiceStatesForChannel(a.id),
                f =
                  null != l && r.default.hasVideo(a.id) && d > 0 && c >= d + 1;
              return (
                i.default.can(o.Permissions.MOVE_MEMBERS, a) &&
                i.default.can(o.Permissions.CONNECT, a) &&
                !f
              );
            },
            drop(e, t) {
              let { channel: n } = e,
                a = r.default.getVoiceStateForUser(t.getItem().user.id);
              (null == a ? void 0 : a.channelId) !== n.id &&
                l.default.setChannel(n.getGuildId(), t.getItem().user.id, n.id);
            },
          },
          (e, t) => ({
            connectUserDropTarget: e.dropTarget(),
            isUserOver: t.isOver() && t.canDrop(),
          })
        )(e);
      }
      function f(e) {
        return (0, a.DragSource)(
          d,
          {
            canDrag(e) {
              let { user: t, canDrag: n } = e;
              return null != n && n;
            },
            beginDrag(e) {
              let { user: t } = e;
              return { user: t };
            },
          },
          e => ({ connectUserDragSource: e.dragSource() })
        )(e);
      }
    },
    903834: function (e, t, n) {
      "use strict";
      n.r(t);
      var a = n("462980");
      n.es(a, t);
    },
    47115: function (e, t, n) {
      "use strict";
      n.r(t);
      var a = n("7865");
      n.es(a, t);
    },
    598165: function (e, t, n) {
      "use strict";
      n.r(t);
      var a = n("716156");
      n.es(a, t);
    },
    918703: function (e, t, n) {
      "use strict";
      n.r(t);
      var a = n("824718");
      n.es(a, t);
    },
    426383: function (e, t, n) {
      "use strict";
      n.r(t);
      var a = n("364991");
      n.es(a, t);
    },
    352567: function (e, t, n) {
      "use strict";
      n.r(t);
      var a = n("763777");
      n.es(a, t);
    },
    831055: function (e, t, n) {
      "use strict";
      n.r(t);
      var a = n("280794");
      n.es(a, t);
    },
    821355: function (e, t, n) {
      "use strict";
      n.r(t);
      var a = n("695175");
      n.es(a, t);
    },
    392800: function (e, t, n) {
      "use strict";
      n.r(t);
      var a = n("266655");
      n.es(a, t);
    },
    26309: function (e, t, n) {
      "use strict";
      n.r(t);
      var a = n("335992");
      n.es(a, t);
    },
    337062: function (e, t, n) {
      "use strict";
      n.r(t);
      var a = n("272241");
      n.es(a, t);
    },
    966900: function (e, t, n) {
      "use strict";
      n.r(t);
      var a = n("407472");
      n.es(a, t);
    },
    838048: function (e, t, n) {
      "use strict";
      n.r(t);
      var a = n("253762");
      n.es(a, t);
    },
    923748: function (e, t, n) {
      "use strict";
      n.r(t);
      var a = n("254845");
      n.es(a, t);
    },
    359902: function (e, t, n) {
      "use strict";
      n.r(t);
      var a = n("859598");
      n.es(a, t);
    },
    780624: function (e, t, n) {
      "use strict";
      n.r(t);
      var a = n("449919");
      n.es(a, t);
    },
    594881: function (e, t, n) {
      "use strict";
      n.r(t);
      var a = n("532629");
      n.es(a, t);
    },
    283322: function (e, t, n) {
      "use strict";
      n.r(t);
      var a = n("231332");
      n.es(a, t);
    },
    473109: function (e, t, n) {
      "use strict";
      n.r(t);
      var a = n("198114");
      n.es(a, t);
    },
    565422: function (e, t, n) {
      "use strict";
      n.r(t);
      var a = n("526727");
      n.es(a, t);
    },
    202998: function (e, t, n) {
      "use strict";
      n.r(t);
      var a = n("610913");
      n.es(a, t);
    },
    543324: function (e, t, n) {
      "use strict";
      n.r(t);
      var a = n("396096");
      n.es(a, t);
    },
    382269: function (e, t, n) {
      "use strict";
      n.r(t);
      var a = n("286810");
      n.es(a, t);
    },
    120606: function (e, t, n) {
      "use strict";
      n.r(t);
      var a = n("783646");
      n.es(a, t);
    },
    265614: function (e, t, n) {
      "use strict";
      n.r(t);
      var a = n("247230");
      n.es(a, t);
    },
    496061: function (e, t, n) {
      "use strict";
      n.r(t);
      var a = n("122421");
      n.es(a, t);
    },
    233676: function (e, t, n) {
      "use strict";
      n.r(t);
      var a = n("759275");
      n.es(a, t);
    },
    392646: function (e, t, n) {
      "use strict";
      n.r(t);
      var a = n("30625");
      n.es(a, t);
    },
    559981: function (e, t, n) {
      "use strict";
      n.r(t);
      var a = n("392229");
      n.es(a, t);
    },
    560103: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useThrottledState: function () {
            return i;
          },
          useThrottledFunction: function () {
            return r;
          },
        }),
        n("222007");
      var a = n("884691"),
        l = n("917351");
      let s = e => e,
        i = function (e, t) {
          let n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : [],
            l = arguments.length > 3 ? arguments[3] : void 0,
            i = r(s, t, n, l),
            u = a.useRef(e);
          return (
            a.useEffect(() => {
              let t = i(e);
              u.current = t;
            }, [e, i]),
            0 === t ? e : u.current
          );
        },
        r = function (e, t) {
          let n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : [],
            s = arguments.length > 3 ? arguments[3] : void 0,
            i = a.useRef((0, l.throttle)(e, t, s));
          return (
            a.useEffect(
              () => (
                (i.current = (0, l.throttle)(e, t, s)),
                () => {
                  var e;
                  null === (e = i.current) || void 0 === e || e.cancel();
                }
              ),
              [e, t, s, ...n]
            ),
            i.current
          );
        };
    },
    133797: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
      var a,
        l = n("782340");
      let s = ["a", "b", "c", "d"],
        i = e => e;
      function r(e, t) {
        let n = {},
          a = Math.min(e.length, s.length);
        for (let l = 0; l < a; ++l) n[s[l]] = (n, a) => t(e[l], a);
        return n;
      }
      a = class {
        asString() {
          return this.transformed(i);
        }
        isEmpty() {
          return 0 === this.items.length;
        }
        transformed(e) {
          switch (this.items.length) {
            case 0:
              return "";
            case 1:
              return e(this.items[0], "");
            case 2:
              return l.default.Messages.GENERIC_FORMATTED_LIST_TWO.format(
                r(this.items, e)
              );
            case 3:
              return l.default.Messages.GENERIC_FORMATTED_LIST_THREE.format(
                r(this.items, e)
              );
            default:
              return l.default.Messages.GENERIC_FORMATTED_LIST_FOUR.format(
                r(this.items, e)
              );
          }
        }
        constructor(e) {
          this.items = e;
        }
      };
    },
    103723: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          VideoSpinnerContext: function () {
            return a;
          },
          VideoSpinnerTimer: function () {
            return p;
          },
        }),
        n("222007");
      var a,
        l,
        s = n("811022"),
        i = n("398183"),
        r = n("271938"),
        u = n("42203"),
        o = n("985365"),
        d = n("945956"),
        c = n("800762"),
        f = n("599110"),
        h = n("49111");
      ((l = a || (a = {})).SELF_VIDEO = "self_video"),
        (l.SELF_STREAM = "self_stream"),
        (l.REMOTE_VIDEO = "remote_video"),
        (l.REMOTE_STREAM = "remote_stream"),
        (l.CHANGE_VIDEO_BACKGROUND = "change_video_background"),
        (l.VIDEO_PLAYER = "video_player"),
        (l.REPLAY_VIDEO_STREAM = "replay_video_stream");
      let m = new Map();
      class p {
        onSpinnerStarted() {
          null == this.spinnerVisibleStart &&
            (this.spinnerVisibleStart = (0, i.now)());
        }
        trackSpinnerDuration(e, t, n) {
          if (null == this.spinnerVisibleStart) return;
          let a = (function (e) {
              var t;
              let n = (null !== (t = m.get(e)) && void 0 !== t ? t : 0) + 1;
              return m.set(e, n), n;
            })(n),
            l = (0, i.now)() - this.spinnerVisibleStart;
          if (((this.spinnerVisibleStart = null), l < 0)) {
            this.logger.warn(
              "spinner duration is negative: "
                .concat(l, " ms\n        [")
                .concat(e, ", count for stream: ")
                .concat(a, "]")
            );
            return;
          }
          this.logger.info(
            "spinner visible for "
              .concat(l, " ms\n      [")
              .concat(e, ", count for stream: ")
              .concat(a, "]")
          );
          let s = d.default.getGuildId(),
            p = c.default.getUserVoiceChannelId(s, r.default.getId()),
            E = (function (e) {
              if (null != e) {
                if (e.isGuildVoice()) return "guild_voice";
                if (e.isGuildStageVoice()) return "is_stage_channel";
                if (e.isDM()) return "dm";
                if (e.isGroupDM()) return "group_dm";
              }
              return null;
            })(u.default.getChannel(p));
          f.default.track(h.AnalyticEvents.VIDEO_SPINNER_SHOWN_V2, {
            video_spinner_context: e,
            duration_video_spinner_visible_ms: l,
            rtc_connection_id: d.default.getRTCConnectionId(),
            media_session_id: d.default.getMediaSessionId(),
            event_count_for_stream: a,
            guild_id: s,
            channel_id: p,
            channel_type: E,
            spinning_user_id: t,
            connection_type: o.default.getType(),
            effective_connection_speed: o.default.getEffectiveConnectionSpeed(),
            service_provider: o.default.getServiceProvider(),
          });
        }
        constructor(e) {
          (this.spinnerVisibleStart = null), (this.logger = new s.default(e));
        }
      }
    },
    955153: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          BirthdayActivitiesExperiment: function () {
            return l;
          },
        });
      var a = n("862205");
      let l = (0, a.createExperiment)({
        kind: "user",
        id: "2023-03_birthday_activities",
        label: "Birthday Activities",
        defaultConfig: { enabled: !1 },
        treatments: [
          {
            id: 1,
            label: "Enable Birthday Activities",
            config: { enabled: !0 },
          },
          {
            id: 2,
            label: "Geo test Enable Birthday Activities but no share",
            config: { enabled: !0 },
          },
        ],
      });
    },
    294926: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return O;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("446674"),
        u = n("577776"),
        o = n("452804"),
        d = n("579408"),
        c = n("168973"),
        f = n("981913"),
        h = n("576242"),
        m = n("18494"),
        p = n("697218"),
        E = n("717018"),
        S = n("811305"),
        g = n("659500"),
        C = n("439932"),
        _ = n("550766"),
        I = n("191225"),
        T = n("575136"),
        v = n("698372"),
        x = n("401207"),
        N = n("320817"),
        A = n("803997"),
        M = n("272505"),
        R = n("49111"),
        j = n("782340"),
        L = n("986304");
      let y = {
        [M.FocusedActivityLayouts.NO_CHAT]: L.noChat,
        [M.FocusedActivityLayouts.RESIZABLE]: L.resizable,
      };
      function O(e) {
        var t, n, s;
        let {
            maxHeight: O,
            connectedChannelId: P,
            renderExternalHeader: D,
          } = e,
          b = (0, v.default)(),
          U = (0, r.useStateFromStoresArray)(
            [I.default],
            () =>
              null != P ? I.default.getEmbeddedActivitiesForChannel(P) : [],
            [P]
          ),
          w = (0, T.useEmbeddedApps)(U),
          F = (0, T.useEmbeddedAppsWithPresence)(w),
          V = l.useCallback(() => {
            (0, _.updateActivityPanelMode)(M.ActivityPanelModes.PIP);
          }, []),
          k = l.useRef(null),
          B = (0, r.useStateFromStores)([I.default], () =>
            I.default.getFocusedLayout()
          ),
          G = B !== M.FocusedActivityLayouts.NO_CHAT,
          [H, W] = l.useState(
            null !== (s = c.default.activityPanelHeight) && void 0 !== s ? s : O
          ),
          Y = l.useCallback(e => {
            o.default.updatedUnsyncedSettings({ activityPanelHeight: e });
          }, []),
          z = l.useRef(null),
          [K, Z] = l.useState({ width: 0, height: 0 });
        l.useLayoutEffect(() => {
          if (null == z.current) return;
          let e = new ResizeObserver(() => {
            var e, t, n, a;
            let l =
              null !==
                (n =
                  null === (e = z.current) || void 0 === e
                    ? void 0
                    : e.clientWidth) && void 0 !== n
                ? n
                : 0;
            Z({
              width: l,
              height:
                null !==
                  (a =
                    null === (t = z.current) || void 0 === t
                      ? void 0
                      : t.clientHeight) && void 0 !== a
                  ? a
                  : 0,
            });
          });
          return e.observe(z.current), () => e.disconnect();
        }, []);
        let Q = K.width / Math.max(K.height, 1),
          X = Q < M.LANDSCAPE_ACTIVITY_ASPECT_RATIO,
          q = 0,
          J = 0,
          $ = K.width,
          ee = K.height;
        X
          ? ((ee = K.width / M.LANDSCAPE_ACTIVITY_ASPECT_RATIO) > K.height &&
              ($ = (ee = K.height) * M.LANDSCAPE_ACTIVITY_ASPECT_RATIO),
            (J = (K.height - ee) / 2))
          : (($ = Math.min(K.height * M.LANDSCAPE_ACTIVITY_ASPECT_RATIO)) >
              K.width &&
              (ee = ($ = K.width) / M.LANDSCAPE_ACTIVITY_ASPECT_RATIO),
            (q = (K.width - $) / 2));
        let et = (0, r.useStateFromStores)([m.default], () =>
          m.default.getChannelId()
        );
        if (null == b) return null;
        let en = F.get(
            null === (n = w[0]) || void 0 === n
              ? void 0
              : null === (t = n.application) || void 0 === t
                ? void 0
                : t.id
          ),
          ea = [];
        return (
          null != en &&
            (ea = Array.from(en.embeddedActivity.userIds)
              .map(e => p.default.getUser(e))
              .filter(e => null != e && void 0 !== e)),
          (0, a.jsxs)("div", {
            className: i(
              L.wrapper,
              y[B],
              (0, C.getThemeClass)(R.ThemeTypes.DARK)
            ),
            ref: k,
            style:
              G && null != H
                ? { minHeight: 200, maxHeight: O, height: H }
                : void 0,
            children: [
              null == D ? void 0 : D(),
              (0, a.jsxs)("div", {
                className: L.activityPanelContainer,
                children: [
                  G
                    ? null
                    : (0, a.jsx)("div", {
                        className: L.header,
                        children: (0, a.jsx)(u.Text, {
                          color: "header-primary",
                          variant: "text-md/semibold",
                          className: L.headerTitle,
                          children: null == b ? void 0 : b.name,
                        }),
                      }),
                  (0, a.jsx)("div", {
                    className: L.activityContainer,
                    style: {
                      paddingLeft: q,
                      paddingRight: q,
                      paddingTop: J,
                      paddingBottom: J,
                    },
                    ref: z,
                    children: (0, a.jsx)(x.default, {
                      className: L.iframe,
                      embedId: (0, N.default)(P, b.id),
                    }),
                  }),
                  null != et
                    ? (0, a.jsxs)("div", {
                        className: L.footer,
                        children: [
                          (0, a.jsx)(S.default, {
                            renderIcon: !1,
                            users: ea,
                            size: 32,
                            max: 6,
                            className: L.userAvatars,
                          }),
                          (0, a.jsxs)("div", {
                            className: L.footerButtons,
                            children: [
                              (0, a.jsx)(A.default, {
                                className: L.circularButton,
                                channelId: et,
                              }),
                              (0, a.jsx)("div", {
                                className: L.leaveButtonContainer,
                                children: (0, a.jsx)(h.default, {
                                  applicationId: b.id,
                                  channelId: P,
                                  className: L.leaveActivityButton,
                                  iconClassName: L.leaveActivityIcon,
                                  centerButton: !0,
                                  color: "red",
                                }),
                              }),
                              (0, a.jsx)(f.default, {
                                label:
                                  j.default.Messages
                                    .EMBEDDED_ACTIVITIES_MINIMIZE_A11Y_LABEL,
                                onClick: V,
                                className: L.circularButton,
                                iconComponent: E.default,
                                iconClassName: L.minimizeIcon,
                                themeable: !0,
                              }),
                            ],
                          }),
                          (0, a.jsx)("div", { className: L.flex }),
                        ],
                      })
                    : null,
                ],
              }),
              G
                ? (0, a.jsx)(d.default, {
                    minHeight: 480,
                    maxHeight: O,
                    resizableNode: k,
                    onResize: e => {
                      g.ComponentDispatch.dispatch(
                        R.ComponentActions.MANUAL_IFRAME_RESIZING,
                        { resizing: !0 }
                      ),
                        W(e);
                    },
                    onResizeEnd: e => {
                      g.ComponentDispatch.dispatch(
                        R.ComponentActions.MANUAL_IFRAME_RESIZING,
                        { resizing: !1 }
                      ),
                        Y(e);
                    },
                  })
                : null,
            ],
          })
        );
      }
    },
    169920: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("65597"),
        i = n("84339"),
        r = n("427953"),
        u = n("550766"),
        o = n("191225"),
        d = n("420444"),
        c = n("294926"),
        f = n("272505");
      function h(e) {
        let { maxHeight: t, renderExternalHeader: n } = e,
          {
            connectedChannelId: h,
            connectedActivity: m,
            activityPanelMode: p,
          } = (0, s.useStateFromStoresObject)([o.default], () => {
            var e;
            let t = o.default.getConnectedActivityChannelId();
            return {
              connectedChannelId: t,
              connectedActivity:
                null != t &&
                null !== (e = o.default.getSelfEmbeddedActivityForChannel(t)) &&
                void 0 !== e
                  ? e
                  : void 0,
              activityPanelMode: o.default.getActivityPanelMode(),
            };
          }),
          E = (0, r.useIsActivitiesInTextEnabled)(h, "ActivityPanelUI"),
          S = (0, i.default)(h);
        if (
          (l.useEffect(() => {
            null != h &&
              null == S &&
              (0, u.updateFocusedActivityLayout)(
                f.FocusedActivityLayouts.RESIZABLE
              );
          }, [h, S]),
          !E)
        )
          return null;
        let g = null == m ? void 0 : m.applicationId;
        return p !== f.ActivityPanelModes.PANEL || null == g
          ? null
          : null == h || null == m || (0, d.default)(h) || null == g
            ? null
            : (0, a.jsx)(c.default, {
                maxHeight: t,
                connectedChannelId: h,
                renderExternalHeader: n,
              });
      }
    },
    803997: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return I;
          },
        }),
        n("424973");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("917351"),
        u = n("446674"),
        o = n("996496"),
        d = n("981913"),
        c = n("660478"),
        f = n("191542"),
        h = n("256170"),
        m = n("378765"),
        p = n("550766"),
        E = n("191225"),
        S = n("272505"),
        g = n("49111"),
        C = n("782340"),
        _ = n("518958");
      function I(e) {
        let { channelId: t, className: n, ...s } = e,
          I = l.useRef(null),
          T = (0, u.useStateFromStores)(
            [E.default],
            () =>
              E.default.getFocusedLayout() ===
              S.FocusedActivityLayouts.RESIZABLE
          ),
          v = l.useCallback(() => {
            let e = T
              ? S.FocusedActivityLayouts.NO_CHAT
              : S.FocusedActivityLayouts.RESIZABLE;
            (0, p.updateFocusedActivityLayout)(e);
          }, [T]),
          { unreadCount: x, mentionCount: N } = (function (e) {
            let t = (0, u.useStateFromStores)(
                [f.default],
                () => !(0, r.isEmpty)(f.default.getTypingUsers(e)),
                [e]
              ),
              { unreadCount: n, mentionCount: a } = (0,
              u.useStateFromStoresObject)(
                [c.default],
                () => ({
                  unreadCount: c.default.getUnreadCount(e),
                  mentionCount: c.default.getMentionCount(e),
                }),
                [e]
              );
            return { unreadCount: n, mentionCount: a, isTyping: t };
          })(t),
          A = l.useCallback(() => {
            var e;
            null === (e = I.current) || void 0 === e || e.focus();
          }, []);
        (0, m.useComponentAction)({
          event: g.ComponentActions.FOCUS_CHAT_BUTTON,
          handler: A,
        });
        let M = T ? C.default.Messages.HIDE_CHAT : C.default.Messages.SHOW_CHAT,
          R = [M];
        N > 0 &&
          R.push(
            C.default.Messages.GUILD_SIDEBAR_CHANNEL_A11Y_LABEL_MENTIONS.format(
              { mentionCount: N }
            )
          ),
          x > 0 &&
            R.push(C.default.Messages.GUILD_SIDEBAR_CHANNEL_A11Y_LABEL_UNREAD);
        let j = (0, u.useStateFromStores)([E.default], () =>
            E.default.getFocusedLayout()
          ),
          L = N > 0 ? N : x,
          y = L > 0;
        return (0, a.jsxs)("div", {
          className: _.wrapper,
          children: [
            (0, a.jsx)(d.default, {
              buttonRef: I,
              onClick: v,
              label: M,
              "aria-label": R.join(", "),
              tooltipPosition: "top",
              iconComponent: h.default,
              themeable: !0,
              className: i(
                n,
                _.circularButton,
                j === S.FocusedActivityLayouts.NO_CHAT ? _.upArrow : _.downArrow
              ),
              ...s,
            }),
            y
              ? (0, a.jsx)(o.default, {
                  hasMentions: N > 0,
                  truncatedCount: L > 99 ? "99+" : L,
                  className: _.badge,
                })
              : null,
          ],
        });
      }
    },
    372610: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var a = n("884691"),
        l = n("550766"),
        s = n("126939"),
        i = n("702173");
      let r = e => null != e && "" !== e;
      function u(e, t) {
        let n = (0, s.useIsActivitiesEnabledForCurrentPlatform)(
            null != t ? t : void 0
          ),
          u = (0, i.default)(t),
          o = r(e) || u;
        a.useEffect(() => {
          o && n && (0, l.fetchShelf)({ guildId: e });
        }, [e, n, o]);
        let d = o && n;
        return d;
      }
    },
    426631: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
      var a = n("446674"),
        l = n("191225");
      function s(e) {
        let { channelId: t } = e;
        return (0, a.useStateFromStores)([l.default], () =>
          l.default
            .getEmbeddedActivitiesForChannel(t)
            .some(e => e.userIds.size > 0)
        );
      }
    },
    380691: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useShowActivityIndicator: function () {
            return s;
          },
        });
      var a = n("446674"),
        l = n("191225");
      let s = () => {
        let e = (0, a.useStateFromStores)(
          [l.default],
          () => l.default.getState().shouldShowNewActivityIndicator
        );
        return e;
      };
    },
    801852: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ActivitiesMiniShelf: function () {
            return P;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("90915"),
        u = n("748820"),
        o = n("446674"),
        d = n("77078"),
        c = n("997289"),
        f = n("244201"),
        h = n("206230"),
        m = n("812204"),
        p = n("685665"),
        E = n("161778"),
        S = n("124824"),
        g = n("772280"),
        C = n("82636"),
        _ = n("599110"),
        I = n("955153"),
        T = n("550766"),
        v = n("91761"),
        x = n("441821"),
        N = n("766914"),
        A = n("478272"),
        M = n("49111"),
        R = n("782340"),
        j = n("73687"),
        L = n("678070"),
        y = n("789335");
      let O = "vc-activities-".concat((0, u.v4)()),
        P = l.forwardRef(function (e, t) {
          let {
              channel: n,
              isHovered: s,
              closePopout: u,
              onMouseEnter: P,
              onMouseLeave: D,
              onClick: b,
              className: U,
            } = e,
            { enabled: w } = I.BirthdayActivitiesExperiment.useExperiment({
              location: "8009ca_3",
            }),
            F = (0, o.useStateFromStores)(
              [E.default],
              () => E.default.getState().theme
            ),
            V = (0, o.useStateFromStores)(
              [h.default],
              () => h.default.useReducedMotion
            ),
            { id: k, guild_id: B } = n;
          l.useEffect(() => {
            _.default.track(
              M.AnalyticEvents.ACTIVITIES_CENTER_CONTROL_TRAY_BUTTON_HOVERED,
              { channel_id: k, guild_id: B }
            );
          }, [k, B]),
            l.useEffect(() => {
              !s && u();
            }, [u, s]);
          let G = (0, f.useAppContext)(),
            { analyticsLocations: H, AnalyticsLocationProvider: W } = (0,
            p.default)(m.default.ACTIVITIES_MINI_SHELF),
            { analyticsLocations: Y, AnalyticsLocationProvider: z } = (0,
            p.default)([...H, m.default.ACTIVITIES_MINI_SHELF_BANNER]),
            K = G === M.AppContext.POPOUT,
            Z = (0, c.useAnalyticsContext)(),
            Q = (function (e) {
              let t = (0, v.default)({ guildId: e });
              return t.slice(0, 5);
            })(n.getGuildId());
          l.useEffect(() => {
            let e = setTimeout(() => T.dismissNewActivityIndicator(), 1e3);
            return () => clearTimeout(e);
          }, []);
          let X = l.useCallback(() => {
              var e;
              (0, A.default)({
                channel: n,
                guildId:
                  null !== (e = n.getGuildId()) && void 0 !== e ? e : void 0,
                locationObject: Z.location,
                openInPopout: K,
                analyticsLocations: H,
              }),
                D(),
                b();
            }, [Z, H, n, b, D, K]),
            q = l.useCallback(
              e => {
                P(),
                  _.default.track(
                    M.AnalyticEvents.ACTIVITIES_MINI_SHELF_HOVERED,
                    { channel_id: n.id, guild_id: n.getGuildId() }
                  );
              },
              [P, n]
            ),
            J = w
              ? (0, a.jsxs)(r.Link, {
                  to: M.Routes.ACTIVITIES,
                  children: [
                    (0, a.jsx)("img", {
                      alt: R.default.Messages
                        .EMBEDDED_ACTIVITIES_BIRTHDAY_ACTIVITIES_HERO_ALT,
                      src: "light" === F ? L : y,
                      className: j.poster,
                    }),
                    (0, a.jsx)("div", { className: j.posterDivider }),
                  ],
                })
              : null;
          return (0, a.jsx)(W, {
            children: (0, a.jsx)(S.default, {
              children: (0, a.jsxs)(d.Dialog, {
                ref: t,
                "aria-labelledby": O,
                className: U,
                children: [
                  (0, a.jsx)(d.HeadingLevel, {
                    forceLevel: 2,
                    children: (0, a.jsx)(d.HiddenVisually, {
                      children: (0, a.jsx)(d.H, {
                        id: O,
                        children:
                          R.default.Messages
                            .EMBEDDED_ACTIVITIES_MINI_SHELF_TITLE,
                      }),
                    }),
                  }),
                  (0, a.jsxs)("div", {
                    className: j.container,
                    onMouseEnter: q,
                    onMouseLeave: D,
                    children: [
                      (0, a.jsxs)("div", {
                        className: j.titleContainer,
                        children: [
                          (0, a.jsxs)("div", {
                            className: j.titleLeft,
                            children: [
                              (0, a.jsx)(C.default, {
                                className: j.titleLeftIcon,
                                color: "var(--interactive-active)",
                              }),
                              (0, a.jsx)(d.Text, {
                                variant: "eyebrow",
                                children:
                                  R.default.Messages
                                    .EMBEDDED_ACTIVITIES_AUTO_SUGGEST_ACTIVITIES_TITLE,
                              }),
                            ],
                          }),
                          (0, a.jsxs)(d.Clickable, {
                            className: j.titleRight,
                            onClick: X,
                            children: [
                              (0, a.jsx)(d.Text, {
                                variant: "eyebrow",
                                children:
                                  R.default.Messages
                                    .EMBEDDED_ACTIVITIES_AUTO_SUGGEST_SEE_ALL,
                              }),
                              (0, a.jsx)(g.default, {
                                width: 12,
                                height: 12,
                                color: "var(--interactive-active)",
                                className: j.titleRightIcon,
                              }),
                            ],
                          }),
                        ],
                      }),
                      (0, a.jsx)(z, { children: J }),
                      (0, a.jsxs)("div", {
                        className: j.activityContainer,
                        children: [
                          Q.map(e =>
                            (0, a.jsx)(
                              x.ActivitySuggestion,
                              {
                                channel: n,
                                activityItem: e,
                                onClick: () => {
                                  u(), b();
                                },
                                aspectRatio:
                                  x.ActivitySuggestion.AspectRatio
                                    .THIRTEEN_BY_ELEVEN,
                                animatedDivClass: j.activitySuggestion,
                              },
                              e.application.id
                            )
                          ),
                          (0, a.jsx)("div", {
                            className: i(j.wumpusRocketOuterContainer, {
                              [j.wumpusReducedMotion]: V,
                            }),
                            children: (0, a.jsx)("div", {
                              className: j.wumpusRocketInnerContainer,
                              children: (0, a.jsx)(N.default, {
                                className: j.wumpusRocket,
                              }),
                            }),
                          }),
                        ],
                      }),
                    ],
                  }),
                ],
              }),
            }),
          });
        });
    },
    441821: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ActivitySuggestion: function () {
            return I;
          },
        }),
        n("222007");
      var a,
        l,
        s = n("37983"),
        i = n("884691"),
        r = n("414456"),
        u = n.n(r),
        o = n("907002"),
        d = n("77078"),
        c = n("439932"),
        f = n("607573"),
        h = n("817039"),
        m = n("687292"),
        p = n("141962"),
        E = n("49111"),
        S = n("782340"),
        g = n("839430");
      let C = ["embedded_cover"],
        _ = { tension: 800, friction: 24 };
      function I(e) {
        var t;
        let {
            channel: n,
            activityItem: a,
            onClick: l,
            aspectRatio: r = 0,
            animatedDivClass: I,
          } = e,
          {
            onActivityItemSelected: T,
            imageBackground: v,
            activityAction: x,
            labelType: N,
          } = (0, f.default)({
            channel: n,
            activityItem: a,
            guildId: null !== (t = n.getGuildId()) && void 0 !== t ? t : void 0,
            locationObject: {},
            onActivityItemSelected: l,
            embeddedActivitiesManager: p.default,
            assetNames: C,
          }),
          [A, M] = i.useState(!1),
          R = i.useCallback(() => {
            M(!0);
          }, [M]),
          j = i.useCallback(() => {
            M(!1);
          }, [M]),
          L = i.useMemo(
            () =>
              (0, s.jsx)("div", {
                className: g.overlayBadge,
                children: (0, s.jsx)("div", {
                  className: g.badgeContainer,
                  children: (0, s.jsx)(m.default, {
                    name: a.application.name,
                    labelType: N,
                  }),
                }),
              }),
            [a.application.name, N]
          ),
          y = i.useMemo(() => {
            switch (x) {
              case f.ActivityAction.JOIN:
                return (0, s.jsx)("div", {
                  className: g.activityAction,
                  children: (0, s.jsx)("div", {
                    className: g.activityActionButton,
                    children: (0, s.jsx)(d.Text, {
                      variant: "text-sm/medium",
                      color: "always-white",
                      children: S.default.Messages.JOIN,
                    }),
                  }),
                });
              case f.ActivityAction.LEAVE:
                return (0, s.jsx)("div", {
                  className: g.activityAction,
                  children: (0, s.jsx)("div", {
                    className: u(
                      g.activityActionButton,
                      g.activityActionButtonDanger
                    ),
                    children: (0, s.jsx)(d.Text, {
                      variant: "text-sm/medium",
                      color: "always-white",
                      children: S.default.Messages.EMBEDDED_ACTIVITIES_LEAVE,
                    }),
                  }),
                });
              case f.ActivityAction.START:
              default:
                return (0, s.jsx)(s.Fragment, {});
            }
          }, [x]);
        return (0, s.jsx)(d.Button, {
          onClick: T,
          color: "transparent",
          look: d.Button.Looks.BLANK,
          size: d.Button.Sizes.NONE,
          onFocus: R,
          onBlur: j,
          onMouseEnter: R,
          onMouseLeave: j,
          innerClassName: g.activityItemButtonInnerClass,
          children: (0, s.jsx)(o.Spring, {
            config: _,
            from: { value: 0 },
            to: { value: A ? 1 : 0 },
            children: e => {
              let { value: t } = e;
              return (0, s.jsx)(o.animated.div, {
                className: u(
                  (0, c.getThemeClass)(E.ThemeTypes.DARK),
                  g.activityItem,
                  I,
                  {
                    [g.activityItem_13_11]: 0 === r,
                    [g.activityItem_16_9]: 1 === r,
                  }
                ),
                style: {
                  transform: t
                    .to([0, 1], [1, 1.05])
                    .to(e => "scale(".concat(e, ")")),
                },
                children: (0, s.jsxs)(s.Fragment, {
                  children: [
                    (0, s.jsx)(h.default, {
                      imageBackground: v,
                      applicationName: a.application.name,
                      imageClassName: g.activitySuggestionImage,
                      imageNotFoundClassName: g.brokenImageIconWrapper,
                    }),
                    L,
                    y,
                  ],
                }),
              });
            },
          }),
        });
      }
      ((l = a || (a = {}))[(l.THIRTEEN_BY_ELEVEN = 0)] = "THIRTEEN_BY_ELEVEN"),
        (l[(l.SIXTEEN_BY_NINE = 1)] = "SIXTEEN_BY_NINE"),
        (I.AspectRatio = a);
    },
    401207: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("446674"),
        i = n("913144"),
        r = n("600965"),
        u = n("292687"),
        o = n("659500"),
        d = n("191225"),
        c = n("420444"),
        f = n("577261"),
        h = n("272505"),
        m = n("49111");
      let p = (e, t) => {
        i.default.wait(() => {
          (0, r.updateRect)(e, t);
        });
      };
      function E(e) {
        let t,
          { embedId: n, className: i, style: r } = e,
          E = (0, s.useStateFromStores)([u.default], () =>
            u.default.getWindow(m.PopoutWindowKeys.CHANNEL_CALL_POPOUT)
          ),
          S = (0, f.default)(),
          g = (0, s.useStateFromStores)([d.default], () =>
            d.default.getActivityPanelMode()
          ),
          C =
            null != S &&
            !(0, c.default)(S.channelId) &&
            g === h.ActivityPanelModes.PANEL;
        if (C) t = window;
        else {
          var _;
          t =
            null !== (_ = null == E ? void 0 : E.window) && void 0 !== _
              ? _
              : window;
        }
        let I = l.useRef(null),
          T = l.useMemo(() => {
            let e = null;
            return () => {
              null == e &&
                (e = t.requestAnimationFrame(() => {
                  var t, a;
                  p(
                    n,
                    null !==
                      (a =
                        null === (t = I.current) || void 0 === t
                          ? void 0
                          : t.getBoundingClientRect()) && void 0 !== a
                      ? a
                      : null
                  ),
                    (e = null);
                }));
            };
          }, [n, t]);
        return (
          l.useEffect(
            () => (
              t.addEventListener("resize", T),
              o.ComponentDispatch.subscribe(
                m.ComponentActions.REMEASURE_TARGET,
                T
              ),
              () => {
                t.removeEventListener("resize", T),
                  o.ComponentDispatch.unsubscribe(
                    m.ComponentActions.REMEASURE_TARGET,
                    T
                  );
              }
            ),
            [T, t]
          ),
          l.useLayoutEffect(() => {
            let e = I.current;
            if (null == e) return;
            let t = e.ownerDocument.defaultView;
            if (null == t) return;
            T();
            let a = new t.ResizeObserver(T);
            return (
              a.observe(e),
              () => {
                a.disconnect(), p(n, null);
              }
            );
          }, [n, T]),
          (0, a.jsx)("div", { ref: I, style: r, className: i })
        );
      }
    },
    10524: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          MaskColor: function () {
            return l;
          },
          FreeActivityIndicatorDot: function () {
            return o;
          },
        });
      var a,
        l,
        s = n("37983");
      n("884691");
      var i = n("414456"),
        r = n.n(i),
        u = n("520696");
      ((a = l || (l = {}))[(a.POPOUT = 0)] = "POPOUT"),
        (a[(a.SECONDARY = 1)] = "SECONDARY"),
        (a[(a.BLACK = 2)] = "BLACK");
      let o = e => {
        let {
          left: t,
          top: n = 0,
          right: a = 0,
          bottom: l,
          size: i = 8,
          alert: o = !1,
          maskColor: d = 1,
        } = e;
        return (0, s.jsx)("span", {
          className: r(u.dot, {
            [u.alert]: o,
            [u.maskPopout]: 0 === d,
            [u.maskSecondary]: 1 === d,
            [u.maskBlack]: 2 === d,
          }),
          style: { height: i, width: i, left: t, top: n, right: a, bottom: l },
        });
      };
    },
    766914: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var a = n("37983");
      n("884691");
      var l = e =>
        (0, a.jsxs)("svg", {
          viewBox: "0 0 500 350",
          xmlns: "http://www.w3.org/2000/svg",
          ...e,
          children: [
            (0, a.jsxs)("defs", {
              children: [
                (0, a.jsxs)("linearGradient", {
                  id: "linear-gradient",
                  x1: 137.05,
                  y1: 259.98,
                  x2: 172.2,
                  y2: 237.66,
                  gradientUnits: "userSpaceOnUse",
                  children: [
                    (0, a.jsx)("stop", { offset: 0, stopColor: "#ffe75c" }),
                    (0, a.jsx)("stop", { offset: 1, stopColor: "#ff8c19" }),
                  ],
                }),
                (0, a.jsxs)("linearGradient", {
                  id: "linear-gradient-2",
                  x1: 146.1,
                  y1: 114.65,
                  x2: 204.28,
                  y2: 84.63,
                  gradientTransform: "matrix(-.99 .13 .13 .99 416 -12.92)",
                  gradientUnits: "userSpaceOnUse",
                  children: [
                    (0, a.jsx)("stop", { offset: 0, stopColor: "#7196ff" }),
                    (0, a.jsx)("stop", { offset: 0.2, stopColor: "#6990fc" }),
                    (0, a.jsx)("stop", { offset: 0.49, stopColor: "#547ff4" }),
                    (0, a.jsx)("stop", { offset: 0.67, stopColor: "#4572ee" }),
                  ],
                }),
                (0, a.jsxs)("linearGradient", {
                  id: "linear-gradient-3",
                  x1: 167.18,
                  y1: 156.28,
                  x2: 118.66,
                  y2: 238.11,
                  gradientUnits: "userSpaceOnUse",
                  children: [
                    (0, a.jsx)("stop", { offset: 0, stopColor: "#ff8c19" }),
                    (0, a.jsx)("stop", { offset: 0.55, stopColor: "#ffe75c" }),
                  ],
                }),
                (0, a.jsxs)("linearGradient", {
                  id: "linear-gradient-4",
                  x1: 125.79,
                  y1: 287.01,
                  x2: 241.87,
                  y2: 290.82,
                  gradientUnits: "userSpaceOnUse",
                  children: [
                    (0, a.jsx)("stop", { offset: 0.45, stopColor: "#ffe75c" }),
                    (0, a.jsx)("stop", { offset: 0.95, stopColor: "#ff8c19" }),
                  ],
                }),
                (0, a.jsxs)("linearGradient", {
                  id: "linear-gradient-5",
                  x1: 323.47,
                  y1: 303.47,
                  x2: 284.74,
                  y2: 147.93,
                  gradientUnits: "userSpaceOnUse",
                  children: [
                    (0, a.jsx)("stop", { offset: 0.08, stopColor: "#717f8e" }),
                    (0, a.jsx)("stop", { offset: 1, stopColor: "#d3d7db" }),
                  ],
                }),
                (0, a.jsxs)("linearGradient", {
                  id: "linear-gradient-6",
                  x1: 211.38,
                  y1: 109.6,
                  x2: 273.39,
                  y2: 77.6,
                  gradientTransform: "matrix(-.8 .6 .6 .8 325.62 -103.19)",
                  gradientUnits: "userSpaceOnUse",
                  children: [
                    (0, a.jsx)("stop", { offset: 0.32, stopColor: "#7196ff" }),
                    (0, a.jsx)("stop", { offset: 0.43, stopColor: "#6a90fc" }),
                    (0, a.jsx)("stop", { offset: 0.74, stopColor: "#5b84f6" }),
                    (0, a.jsx)("stop", { offset: 1, stopColor: "#5680f4" }),
                  ],
                }),
                (0, a.jsxs)("linearGradient", {
                  id: "linear-gradient-7",
                  x1: -96.32,
                  y1: 138.47,
                  x2: -101.4,
                  y2: 109.82,
                  gradientTransform: "scale(-1 1) rotate(14.5 27.61 -552.62)",
                  gradientUnits: "userSpaceOnUse",
                  children: [
                    (0, a.jsx)("stop", { offset: 0, stopColor: "#4572ee" }),
                    (0, a.jsx)("stop", { offset: 1, stopColor: "#7196ff" }),
                  ],
                }),
                (0, a.jsx)("linearGradient", {
                  id: "linear-gradient-8",
                  x1: -39.5,
                  y1: 59.37,
                  x2: -44.66,
                  y2: 30.24,
                  gradientTransform: "matrix(-.98 .17 .17 .98 119.49 49.25)",
                  xlinkHref: "#linear-gradient-7",
                }),
                (0, a.jsxs)("linearGradient", {
                  id: "linear-gradient-9",
                  x1: 299.25,
                  y1: 167.71,
                  x2: 244.21,
                  y2: 161.69,
                  gradientUnits: "userSpaceOnUse",
                  children: [
                    (0, a.jsx)("stop", { offset: 0.32, stopColor: "#4572f0" }),
                    (0, a.jsx)("stop", { offset: 0.52, stopColor: "#4d79f3" }),
                    (0, a.jsx)("stop", { offset: 0.84, stopColor: "#638bfa" }),
                    (0, a.jsx)("stop", { offset: 1, stopColor: "#7196ff" }),
                  ],
                }),
                (0, a.jsxs)("linearGradient", {
                  id: "linear-gradient-10",
                  x1: 423.96,
                  y1: 48.35,
                  x2: 363.72,
                  y2: 139.3,
                  gradientUnits: "userSpaceOnUse",
                  children: [
                    (0, a.jsx)("stop", { offset: 0.45, stopColor: "#ffe75c" }),
                    (0, a.jsx)("stop", { offset: 1, stopColor: "#ff8c19" }),
                  ],
                }),
                (0, a.jsx)("style", {
                  children:
                    ".cls-3{fill:#ff78b9}.cls-6{fill:#ed5f00}.cls-12{fill:#7196ff}.cls-16{fill:#b6cbff}.cls-18{fill:#7fa0ff}.cls-21{fill:#5783ff}.cls-24{fill:#8e99a5}",
                }),
              ],
            }),
            (0, a.jsx)("path", {
              d: "M391.43 240.7a19.35 19.35 0 0 1-8.76-13.59l-1.46-9.49a1 1 0 0 0-.31-.59.85.85 0 0 0-1.24 0 1 1 0 0 0-.31.59l-1.45 9.49a19.66 19.66 0 0 1-8.76 13.59l-1.26.79a.92.92 0 0 0-.3.35.9.9 0 0 0-.1.45.87.87 0 0 0 .1.45.92.92 0 0 0 .3.35l1.26.79a19.71 19.71 0 0 1 8.76 13.6l1.45 9.48a1 1 0 0 0 .32.57 1 1 0 0 0 1.23 0 .93.93 0 0 0 .31-.57l1.46-9.48a19.34 19.34 0 0 1 8.76-13.6l1.26-.79a1 1 0 0 0 .3-.35 1 1 0 0 0 .1-.45 1 1 0 0 0-.4-.8Z",
              style: { fill: "#57f287" },
            }),
            (0, a.jsx)("path", {
              d: "M79.4 119.28a19.34 19.34 0 0 1-8.76-13.6l-1.46-9.48a1 1 0 0 0-.31-.6.87.87 0 0 0-1.24 0 1.06 1.06 0 0 0-.31.6l-1.45 9.48a19.71 19.71 0 0 1-8.76 13.6l-1.26.79a.92.92 0 0 0-.3.35.87.87 0 0 0-.1.45.9.9 0 0 0 .1.45.83.83 0 0 0 .3.34l1.26.8a19.66 19.66 0 0 1 8.76 13.59l1.45 9.48a1 1 0 0 0 .32.58 1 1 0 0 0 1.23 0 .92.92 0 0 0 .31-.58l1.46-9.48a19.49 19.49 0 0 1 2.89-7.75 19.24 19.24 0 0 1 5.87-5.84l1.26-.8a.83.83 0 0 0 .3-.34 1 1 0 0 0 .1-.45 1 1 0 0 0-.1-.45.92.92 0 0 0-.3-.35Z",
              style: { fill: "#8cd9ff" },
            }),
            (0, a.jsx)("path", {
              className: "cls-3",
              d: "M424.29 277.52a13.59 13.59 0 0 1-4.15-4.12 13.85 13.85 0 0 1-2-5.48l-1-6.69a.66.66 0 0 0-1.31 0l-1 6.69a13.88 13.88 0 0 1-6.18 9.6l-.9.56a.72.72 0 0 0-.21.25.71.71 0 0 0-.07.32.68.68 0 0 0 .28.56l.9.56a13.88 13.88 0 0 1 6.18 9.6l1 6.7a.64.64 0 0 0 .22.4.67.67 0 0 0 .87 0 .64.64 0 0 0 .22-.4l1-6.7a13.85 13.85 0 0 1 2-5.48 13.7 13.7 0 0 1 4.15-4.12l.89-.56a.68.68 0 0 0 .28-.56.71.71 0 0 0-.07-.32.72.72 0 0 0-.21-.25ZM312.67 50.64a13.7 13.7 0 0 1-4.14-4.13 13.46 13.46 0 0 1-2-5.47l-1-6.7a.75.75 0 0 0-.22-.42.6.6 0 0 0-.88 0 .69.69 0 0 0-.22.42l-1 6.7a13.84 13.84 0 0 1-6.18 9.6l-.89.56a.69.69 0 0 0-.21.24.77.77 0 0 0 0 .64.61.61 0 0 0 .21.24l.89.57a13.79 13.79 0 0 1 6.18 9.6l1 6.69a.73.73 0 0 0 .23.41.69.69 0 0 0 .86 0 .73.73 0 0 0 .23-.41l1-6.69a13.65 13.65 0 0 1 6.18-9.6l.89-.57a.61.61 0 0 0 .21-.24.77.77 0 0 0 0-.64.69.69 0 0 0-.21-.24Z",
            }),
            (0, a.jsx)("path", {
              d: "M117 223.15s27.1-4.4 40.07 12.51 18.76 54.19-27.79 56.74c0 0 6.25-3.94 7.41-14.82 0 0-26.64 26.86-60.68 6.25 0 0 9-4.56 16.68-29.87C99.58 231.38 127 233.8 127 233.8s-2.6-5.55-10-10.65Z",
              style: { fill: "#eb459f" },
            }),
            (0, a.jsx)("path", {
              className: "cls-3",
              d: "M126.3 258.49s21.35-38.36 36.1-21.1c12.3 14.39 1.6 29.8-36.1 21.1Z",
            }),
            (0, a.jsx)("path", {
              d: "M140.49 210.84a39.73 39.73 0 0 1 36.29 70.69l-.24.12L140.25 211Z",
              style: { fill: "url(#linear-gradient)" },
            }),
            (0, a.jsx)("path", {
              className: "cls-6",
              d: "M185.46 233.56a1.25 1.25 0 1 0-1.08-2.25l-27 13 1.14 2.22ZM146.66 223.45c7.56-2.8 21.64-6.61 35.13-2.62a1.25 1.25 0 0 0 .71-2.4c-14.5-4.28-29.23-.2-37 2.75ZM193.82 240.23a1.25 1.25 0 0 0-2.41-.69c-4 14-15.42 24.07-21.73 28.74l1.17 2.28c6.51-4.72 18.63-15.19 22.97-30.33Z",
            }),
            (0, a.jsx)("path", {
              d: "M272.84 128.72c7.42.14 15.65-.7 25.48-1.7a9.76 9.76 0 1 0-2-19.41c-16.47 1.68-25.41 2.46-32.79.33-7.11-2-14.09-7.29-25.76-19.35a9.76 9.76 0 1 0-14 13.57c12.12 12.52 22.1 21 34.38 24.53a56.21 56.21 0 0 0 14.69 2.03Z",
              style: { fill: "url(#linear-gradient-2)" },
            }),
            (0, a.jsx)("path", {
              d: "M213.51 175.69 180.61 154a69.42 69.42 0 0 0-48.86-10.64l-14 2.17a4.88 4.88 0 0 0-2.09 8.78l51.53 36.94Z",
              style: { fill: "url(#linear-gradient-3)" },
            }),
            (0, a.jsx)("path", {
              d: "M247.56 242 246 281.4a69.31 69.31 0 0 1-19.83 45.9l-9.9 10.08a4.88 4.88 0 0 1-8.35-3.42v-63.41Z",
              style: { fill: "url(#linear-gradient-4)" },
            }),
            (0, a.jsx)("path", {
              d: "m195.12 271.32-35.64-69.44a6.69 6.69 0 0 1 2.89-9l172.52-88.56s35.91-16.82 74.81 4.87a13 13 0 0 1 6.63 12.81c-4.86 41.79-39.68 63.62-39.68 63.62l-172.52 88.6a6.69 6.69 0 0 1-9.01-2.9Z",
              style: { fill: "url(#linear-gradient-5)" },
            }),
            (0, a.jsx)("circle", { cx: 311.18, cy: 167.88, r: 30.46 }),
            (0, a.jsx)("path", {
              className: "cls-6",
              d: "M311.22 200.86a33 33 0 1 1 15-3.66 33 33 0 0 1-15 3.66Zm-.09-60.94a28 28 0 1 0 24.93 15.19 27.82 27.82 0 0 0-24.93-15.19Z",
            }),
            (0, a.jsx)("path", {
              d: "M213.42 126c7-3.71 14.22-8.75 22.86-14.78a10.4 10.4 0 1 0-11.9-17C209.9 104.24 202 109.6 194 111.44c-7.69 1.78-16.91.51-34-4.69a10.4 10.4 0 0 0-6 19.9c17.77 5.4 31.46 8.12 44.74 5a59.84 59.84 0 0 0 14.68-5.65Z",
              style: { fill: "url(#linear-gradient-6)" },
            }),
            (0, a.jsx)("path", {
              className: "cls-12",
              d: "M261.69 121.31c-2.89-11.31-5-17.25-13.46-28.37l-46.85 10.53c-1.67 25.92-6.72 34.81-5.67 43.93.83 7.25 8.38 18.18 23 18.42s21.94-9 32.9-16.55 12.55-18.27 10.08-27.96Z",
            }),
            (0, a.jsx)("path", {
              d: "M192.19 32.35c-12.59 2.17-3 15.4.4 18l29.55-7.24c-18.83-1.33-20.14-12.46-29.95-10.76Z",
              style: { fill: "#55ef84" },
            }),
            (0, a.jsx)("path", {
              d: "M205.44 47.31a1.23 1.23 0 0 1-.9-.38c-.14-.15-15-15.27-25.26-12.12a1.25 1.25 0 1 1-.73-2.39c11.73-3.59 27.14 12.1 27.79 12.77a1.25 1.25 0 0 1 0 1.77 1.27 1.27 0 0 1-.9.35Z",
            }),
            (0, a.jsx)("path", {
              d: "M230.71 38.82c8.19-3.11 15.33-22.12 1.67-26.55a15.5 15.5 0 0 0-8.25-.24c-22.91 5.18-6.34 30.84-25.54 35.31Z",
              style: { fill: "#47c26e" },
            }),
            (0, a.jsx)("path", {
              d: "M217.22 46.26a1.26 1.26 0 0 1-1.12-.7 1.24 1.24 0 0 1 .56-1.67c10.32-5.15 10.89-20.58 10.89-20.74a1.23 1.23 0 0 1 1.29-1.21 1.24 1.24 0 0 1 1.21 1.28c0 .7-.6 17.09-12.28 22.91a1.23 1.23 0 0 1-.55.13Z",
            }),
            (0, a.jsx)("path", {
              d: "M253.05 45.91c12-1.77 15.64-3.67 18.58 16 2.73 17.52.16 16.89-14 18.91Z",
              style: { fill: "url(#linear-gradient-7)" },
            }),
            (0, a.jsx)("path", {
              className: "cls-16",
              d: "M255.39 50c8.39-1.24 11.08-4.17 13 11.17 1.55 12.32.11 11.83-9.82 13.24Z",
            }),
            (0, a.jsx)("path", {
              className: "cls-12",
              d: "M194.32 38.29h43.29A25.74 25.74 0 0 1 263.35 64v20.2a20.59 20.59 0 0 1-20.59 20.59h-50.49a20.59 20.59 0 0 1-20.59-20.59V60.93a22.64 22.64 0 0 1 22.64-22.64Z",
              transform: "matrix(-.99 .17 -.17 -.99 443.95 105.64)",
            }),
            (0, a.jsx)("ellipse", {
              cx: 191.65,
              cy: 67.44,
              rx: 4.15,
              ry: 4.98,
              transform: "rotate(-10.19 191.598 67.447)",
            }),
            (0, a.jsx)("path", {
              className: "cls-16",
              d: "M215.13 55.86h20.38a13.26 13.26 0 0 1 13.26 13.26v7.29a9.45 9.45 0 0 1-9.45 9.45h-28a9.45 9.45 0 0 1-9.45-9.45v-7.29a13.26 13.26 0 0 1 13.26-13.26Z",
              transform: "rotate(170.35 225.325 70.857)",
            }),
            (0, a.jsx)("ellipse", {
              cx: 253.68,
              cy: 56.65,
              rx: 4.15,
              ry: 4.98,
              transform: "rotate(-10.19 253.608 56.64)",
            }),
            (0, a.jsx)("path", {
              d: "M213.51 92.38a49.86 49.86 0 0 1-7.2-1.71 1.22 1.22 0 0 0-1.52 1.55c1.48 4.27 5.12 12 9.63 1.86a1.21 1.21 0 0 0-.91-1.7Z",
            }),
            (0, a.jsx)("path", {
              d: "M213.09 96.62c-3.15 4.93-5.76 1.52-7.35-2a6.39 6.39 0 0 1 7.35 2Z",
              style: { fill: "#ff78b7" },
            }),
            (0, a.jsx)("rect", {
              className: "cls-18",
              x: 215.56,
              y: 78.58,
              width: 12.43,
              height: 3.55,
              rx: 1.76,
              transform: "rotate(-9.66 221.695 80.354)",
            }),
            (0, a.jsx)("rect", {
              className: "cls-18",
              x: 230.95,
              y: 76.24,
              width: 10.55,
              height: 3.55,
              rx: 1.78,
              transform: "rotate(-9.66 236.196 78.003)",
            }),
            (0, a.jsx)("path", {
              d: "M173.25 59c-13.14 2.31-17.43 1.63-14.12 21.19 2.85 17.5 6.11 15.93 20.21 13.43Z",
              style: { fill: "url(#linear-gradient-8)" },
            }),
            (0, a.jsx)("path", {
              className: "cls-16",
              d: "m173.44 62.83 4.77 24.7c-11.86 1.86-11.85 1.07-14.43-12.24-2.09-10.82.33-11.04 9.66-12.46Z",
            }),
            (0, a.jsx)("path", {
              d: "M230 137.26c31.47-9.59 39-.5 34.65 26.87-2.18 13.85-1.83 27.21-14.49 27-19.91-.34-12.71-17.14-12.14-32.18 0 0-6.33 1.33-11.61 2.24s-10.13-3.45-9.21-11.85 6.58-10.19 12.8-12.08Z",
              style: { fill: "url(#linear-gradient-9)" },
            }),
            (0, a.jsx)("path", {
              className: "cls-21",
              d: "M228.51 138.45a1.25 1.25 0 0 1-.51-2.39 42.25 42.25 0 0 1 17.69-3.33 1.27 1.27 0 0 1 1.24 1.27 1.25 1.25 0 0 1-1.25 1.23 39.77 39.77 0 0 0-16.68 3.11 1.34 1.34 0 0 1-.49.11ZM239.23 158a1.2 1.2 0 0 1-.74-.25 1.25 1.25 0 0 1-.26-1.75l5-6.65a1.25 1.25 0 1 1 2 1.49l-5 6.65a1.27 1.27 0 0 1-1 .51ZM199.73 132.31a1.26 1.26 0 0 1-1.17-.8 1.25 1.25 0 0 1 .72-1.62l9.07-3.51a1.25 1.25 0 1 1 .91 2.33l-9.08 3.51a1.2 1.2 0 0 1-.45.09Z",
            }),
            (0, a.jsx)("path", {
              d: "M409.7 109.18c-38.9-21.69-74.81-4.87-74.81-4.87l19.56 38.11 22.2 43.24s34.82-21.83 39.68-63.62a13 13 0 0 0-6.63-12.86Z",
              style: { fill: "url(#linear-gradient-10)" },
            }),
            (0, a.jsx)("ellipse", {
              cx: 367.61,
              cy: 110.41,
              rx: 12.8,
              ry: 5.19,
              style: { fill: "#fff" },
            }),
            (0, a.jsx)("path", {
              className: "cls-24",
              d: "m281.46 220.54-56.2 28.63a12.69 12.69 0 0 0-5.55 17.06L298.15 226a12.41 12.41 0 0 0-16.69-5.46ZM242.5 229.16a5.34 5.34 0 0 0-10 3.54l-4.21 2.09a5.36 5.36 0 1 0 1.1 2.24l4.22-2.09a5.27 5.27 0 0 0 2.38 1.65 5.25 5.25 0 0 0 4.08-.27 5.35 5.35 0 0 0 2.42-7.16Zm-17 11.59a2.84 2.84 0 1 1-2.53-5.09 2.81 2.81 0 0 1 1.26-.3 2.91 2.91 0 0 1 .92.15 2.78 2.78 0 0 1 1.63 1.43 2.84 2.84 0 0 1-1.31 3.81Zm13.5-6.67a2.78 2.78 0 0 1-2.17.14 2.84 2.84 0 1 1 2.17-.14Z",
            }),
          ],
        });
    },
    229661: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("77078"),
        s = n("452804"),
        i = n("135230"),
        r = n("168973"),
        u = n("782340");
      function o(e) {
        let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : () => {},
          n = t => {
            s.default.updatedUnsyncedSettings({
              disableEmbeddedActivityPopOutAlert: !0,
            }),
              t(),
              e();
          },
          o = !r.default.disableEmbeddedActivityPopOutAlert;
        o
          ? (0, l.openModal)(
              l =>
                (0, a.jsx)(i.default, {
                  confirmText: u.default.Messages.EMBEDDED_ACTIVITIES_YEP,
                  secondaryConfirmText: u.default.Messages.DONT_ASK_AGAIN,
                  title: u.default.Messages.EMBEDDED_ACTIVITIES_CAREFUL,
                  cancelText: u.default.Messages.EMBEDDED_ACTIVITIES_NVM,
                  onConfirm: () => {
                    l.onClose(), e();
                  },
                  onCancel: t,
                  onConfirmSecondary: () => n(l.onClose),
                  body: u.default.Messages.EMBEDDED_ACTIVITIES_POP_IN_WARNING,
                  ...l,
                }),
              {},
              l.POPOUT_MODAL_CONTEXT
            )
          : e();
      }
    },
    320817: function (e, t, n) {
      "use strict";
      function a(e, t) {
        return "activityembed:".concat(e, ":").concat(t);
      }
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
    },
    826332: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var a = n("913144"),
        l = {
          setCallChatToastsEnabled(e, t) {
            a.default.dispatch({
              type: "CALL_CHAT_TOASTS_SET_ENABLED",
              channelId: e,
              toastsEnabled: t,
            });
          },
        };
    },
    535348: function (e, t, n) {
      "use strict";
      var a, l;
      n.r(t),
        n.d(t, {
          SelfStreamAndVideoAlertType: function () {
            return a;
          },
        }),
        ((l = a || (a = {}))[(l.STREAM = 0)] = "STREAM"),
        (l[(l.VIDEO = 1)] = "VIDEO");
    },
    14124: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var a = n("782340");
      function l(e, t, n, l) {
        return l
          ? a.default.Messages.CONSOLE_CONNECTING_DISABLED
          : n
            ? a.default.Messages.SUPPRESSED
            : t
              ? a.default.Messages.SERVER_MUTED_DIALOG_TITLE
              : e
                ? a.default.Messages.UNMUTE
                : a.default.Messages.MUTE;
      }
    },
    236898: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("446674"),
        l = n("990766"),
        s = n("373469"),
        i = n("271938");
      function r(e, t) {
        let n = (0, a.useStateFromStores)([i.default], () => i.default.getId()),
          r = (0, a.useStateFromStores)(
            [s.default],
            () => {
              let t = s.default.getCurrentUserActiveStream();
              return null != t && t.channelId === e;
            },
            [e]
          ),
          u = (0, a.useStateFromStores)(
            [s.default],
            () => s.default.isSelfStreamHidden(e),
            [e]
          );
        return [
          (null == t || t === n) && r,
          u,
          t => {
            (0, l.toggleSelfStreamHidden)(e, t);
          },
        ];
      }
    },
    301603: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var a = n("446674"),
        l = n("629109"),
        s = n("271938"),
        i = n("42887"),
        r = n("49111"),
        u = n("353927");
      function o(e) {
        let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : u.MediaEngineContextTypes.DEFAULT,
          n = (0, a.useStateFromStores)([s.default], () => s.default.getId()),
          o = (0, a.useStateFromStores)(
            [i.default],
            () =>
              i.default.supports(u.Features.DISABLE_VIDEO) &&
              i.default.isVideoEnabled()
          ),
          d = (0, a.useStateFromStores)(
            [i.default],
            () => i.default.isLocalVideoDisabled(n, t),
            [n, t]
          ),
          c = null == e || e === n;
        return [
          c && (o || d),
          d,
          e => {
            let a = e
              ? r.VideoToggleState.DISABLED
              : r.VideoToggleState.MANUAL_ENABLED;
            l.default.setDisableLocalVideo(n, a, t);
          },
        ];
      }
    },
    598785: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
      var a = n("780166"),
        l = n("245463");
      function s(e) {
        let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
          n = (0, l.default)(e),
          { isSharedCanvasEnabled: s } = a.default.useExperiment(
            { guildId: e.guild_id, location: "6b64ff_1" },
            { autoTrackExposure: t }
          );
        return n || s;
      }
    },
    266392: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return p;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("77078"),
        s = n("901582"),
        i = n("252227"),
        r = n("143082"),
        u = n("832759"),
        o = n("60787"),
        d = n("466769"),
        c = n("736747"),
        f = n("49111"),
        h = n("782340"),
        m = n("978450");
      function p(e) {
        let {
            onClose: t,
            renderOutputDevices: n = !1,
            renderInputDevices: p = !1,
            renderInputModes: E = !1,
            renderInputVolume: S = !1,
            renderOutputVolume: g = !1,
            onSelect: C,
          } = e,
          _ = (0, c.default)(),
          I = (0, o.default)(),
          T = (0, d.default)(),
          v = (0, i.default)(),
          x = (0, r.default)(),
          N = (0, u.default)();
        return (0, a.jsx)(s.default, {
          object: f.AnalyticsObjects.CONTEXT_MENU,
          children: (0, a.jsxs)(l.Menu, {
            onSelect: C,
            className: m.menu,
            onClose: t,
            navId: "audio-device-context",
            "aria-label": h.default.Messages.AUDIO_DEVICE_ACTIONS,
            children: [
              p
                ? (0, a.jsx)(l.MenuGroup, {
                    label: h.default.Messages.INPUT_DEVICE,
                    children: I,
                  })
                : null,
              n
                ? (0, a.jsx)(l.MenuGroup, {
                    label: h.default.Messages.OUTPUT_DEVICE,
                    children: T,
                  })
                : null,
              E
                ? (0, a.jsx)(l.MenuGroup, {
                    label: h.default.Messages.FORM_LABEL_INPUT_MODE,
                    children: v,
                  })
                : null,
              (0, a.jsxs)(l.MenuGroup, {
                children: [S ? x : null, g ? N : null, _],
              }),
            ],
          }),
        });
      }
    },
    494286: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return eF;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("627445"),
        u = n.n(r),
        o = n("446674"),
        d = n("151426"),
        c = n("862337"),
        f = n("77078"),
        h = n("913144"),
        m = n("255397"),
        p = n("272030"),
        E = n("987317"),
        S = n("990766"),
        g = n("452804"),
        C = n("654978"),
        _ = n("901582"),
        I = n("731898"),
        T = n("84339"),
        v = n("244201"),
        x = n("84460"),
        N = n("191225"),
        A = n("372610"),
        M = n("735890"),
        R = n("812204"),
        j = n("716241"),
        L = n("685665"),
        y = n("862853"),
        O = n("76393"),
        P = n("261552"),
        D = n("710560"),
        b = n("374014"),
        U = n("223913"),
        w = n("383294"),
        F = n("292687"),
        V = n("393414"),
        k = n("168973"),
        B = n("581389"),
        G = n("103738"),
        H = n("486030"),
        W = n("908583"),
        Y = n("550410"),
        z = n("115531"),
        K = n("620592"),
        Z = n("172131"),
        Q = n("640553"),
        X = n("95032"),
        q = n("331759"),
        J = n("336971"),
        $ = n("555038"),
        ee = n("634472"),
        et = n("260014"),
        en = n("373469"),
        ea = n("271938"),
        el = n("712234"),
        es = n("950104"),
        ei = n("305961"),
        er = n("957255"),
        eu = n("660478"),
        eo = n("18494"),
        ed = n("697218"),
        ec = n("800762"),
        ef = n("145131"),
        eh = n("956089"),
        em = n("599110"),
        ep = n("404008"),
        eE = n("659500"),
        eS = n("773336"),
        eg = n("439932"),
        eC = n("50885"),
        e_ = n("563680"),
        eI = n("191145"),
        eT = n("161306"),
        ev = n("598785"),
        ex = n("412090"),
        eN = n("452027"),
        eA = n("328715"),
        eM = n("836087"),
        eR = n("579408"),
        ej = n("198755"),
        eL = n("636150"),
        ey = n("99795"),
        eO = n("49111"),
        eP = n("782340"),
        eD = n("65640");
      let eb = {
          [eO.ChannelLayouts.NORMAL]: eD.normal,
          [eO.ChannelLayouts.MINIMUM]: eD.minimum,
          [eO.ChannelLayouts.NO_CHAT]: eD.noChat,
          [eO.ChannelLayouts.FULL_SCREEN]: eD.fullScreen,
        },
        eU = {
          [eO.AppContext.POPOUT]: eD.popout,
          [eO.AppContext.APP]: null,
          [eO.AppContext.OVERLAY]: null,
        };
      class ew extends l.PureComponent {
        getRootNode() {
          var e, t;
          let n =
            null !==
              (t =
                null === (e = this.props.popoutWindow) || void 0 === e
                  ? void 0
                  : e.window) && void 0 !== t
              ? t
              : window;
          return n.document.getElementById("app-mount");
        }
        componentDidMount() {
          let { channel: e, layout: t } = this.props;
          this.currentDocument.addEventListener(
            e_.FULLSCREEN_CHANGE_EVENT,
            this.handleFullScreenChange
          ),
            em.default.track(eO.AnalyticEvents.VIDEO_LAYOUT_TOGGLED, {
              video_layout: this.inPopout ? "popout" : t,
              ...(0, j.collectVoiceAnalyticsMetadata)(e.id),
            });
        }
        componentWillUnmount() {
          this._videoBackgroundTooltipTimeout.stop(),
            this.currentDocument.removeEventListener(
              e_.FULLSCREEN_CHANGE_EVENT,
              this.handleFullScreenChange
            ),
            !(this.inPopout && (0, eS.isMac)()) && this.maybeLeaveFullScreen();
        }
        componentDidUpdate(e) {
          let {
              participantsOpen: t,
              inCall: n,
              mode: a,
              layout: l,
            } = this.props,
            s = this.getRootNode();
          if (
            (null != s &&
              e.mode === eO.ChannelModes.VIDEO &&
              a === eO.ChannelModes.VOICE &&
              (0, e_.isFullScreen)(s, this.currentDocument) &&
              (0, e_.exitFullScreen)(s, this.currentDocument),
            e.participantsOpen !== t || l !== e.layout)
          ) {
            var i;
            null === (i = this._contentRef.current) ||
              void 0 === i ||
              i.triggerResize();
          }
          e.inCall &&
            !n &&
            this.inPopout &&
            h.default.wait(() => this.handleClosePopout());
        }
        get nativePopoutSupported() {
          return (
            eS.isPlatformEmbedded &&
            eC.default.supportsFeature(eO.NativeFeatures.POPOUT_WINDOWS)
          );
        }
        get popoutSupported() {
          return !eS.isPlatformEmbedded || this.nativePopoutSupported;
        }
        get popoutOpen() {
          let { popoutWindow: e } = this.props;
          return null != e && !e.closed;
        }
        get currentDocument() {
          let { popoutWindow: e } = this.props;
          return null != e && this.popoutOpen && this.inPopout
            ? e.document
            : document;
        }
        get screenMessage() {
          return this.popoutOpen && !this.inPopout && this.props.inCall
            ? { mainText: eP.default.Messages.POPOUT_PLAYER_OPENED }
            : null;
        }
        get paused() {
          return this.popoutOpen && !this.inPopout;
        }
        get inPopout() {
          return this.props.appContext === eO.AppContext.POPOUT;
        }
        get viewProperties() {
          let { layout: e, mode: t, channel: n, inCall: a } = this.props,
            l =
              t === eO.ChannelModes.VIDEO &&
              a &&
              !(this.popoutOpen && !this.inPopout),
            s = t === eO.ChannelModes.VIDEO && a && this.popoutSupported,
            i =
              t !== eO.ChannelModes.VOICE &&
              n.isPrivate() &&
              !this.inPopout &&
              a,
            r = n.type === eO.ChannelTypes.GUILD_VOICE,
            u =
              e === eO.ChannelLayouts.MINIMUM || e === eO.ChannelLayouts.NORMAL,
            o = this.inPopout && this.nativePopoutSupported,
            d = n.isPrivate() && !n.isBroadcastChannel(),
            c = {
              renderHeader: !0,
              useTheme: !1,
              useExternalHeader: u,
              canInvite: r,
              canPopout: s,
              canFullscreen: l,
              canSelectRegion: d,
              canChangeLayout: i,
              canStayOnTop: o,
            };
          if (!a) return { ...c, canFullscreen: l, useTheme: !0 };
          switch (e) {
            case eO.ChannelLayouts.FULL_SCREEN:
              return {
                ...c,
                canPopout: !this.inPopout && this.popoutOpen && c.canPopout,
              };
            case eO.ChannelLayouts.MINIMUM:
              return { ...c, canPopout: !1, useTheme: !0 };
            case eO.ChannelLayouts.NO_CHAT:
            case eO.ChannelLayouts.NORMAL:
              return { ...c };
          }
        }
        renderContent(e) {
          let {
              selectedParticipant: t,
              inCall: n,
              hasConnectPermission: l,
              mode: s,
              popoutWindow: i,
              participantsOpen: r,
              participants: u,
              filteredParticipants: o,
              participantsVersion: d,
              channel: c,
              guild: f,
              layout: h,
              forceShowControls: m,
              awaitingRemoteSessionInfo: p,
            } = this.props,
            E = h === eO.ChannelLayouts.MINIMUM,
            S = E || h === eO.ChannelLayouts.NORMAL,
            g = n && s === eO.ChannelModes.VIDEO;
          return (
            (this._lastIdleProps = e),
            (0, a.jsx)(K.default, {
              renderHeader: this.renderHeader,
              renderBottomLeft: this.renderBottomLeft,
              renderBottomCenter: this.renderBottomCenter,
              renderBottomRight: this.renderBottomRight,
              renderChatButton: c.isGuildVoice()
                ? this.renderChatButton
                : void 0,
              renderChatToasts: c.isGuildVoice()
                ? this.renderChatToasts
                : void 0,
              renderVoiceChannelEffects: this.renderVoiceChannelEffects,
              ...e,
              screenMessage: this.screenMessage,
              disableGradients: E,
              idle: !m && n && !E && e.idle,
              children:
                n && this.popoutOpen && !this.inPopout
                  ? null
                  : (0, a.jsx)(G.default, {
                      ref: this._contentRef,
                      inCall: n,
                      paused: this.paused,
                      channel: c,
                      hasConnectPermission: l,
                      guild: f,
                      participants: u,
                      filteredParticipants: o,
                      participantsVersion: d,
                      selectedParticipant: g ? t : null,
                      layout: h,
                      idle: e.idle,
                      mode: s,
                      onSelectParticipant: this.handleSelectParticipant,
                      onContextMenuParticipant: this.handleContextMenu,
                      showParticipants: r && !S,
                      popoutWindow: this.inPopout ? i : null,
                      awaitingRemoteSessionInfo: p,
                    }),
            })
          );
        }
        render() {
          let {
              layout: e,
              channel: t,
              guild: n,
              mode: l,
              chatOpen: s,
              appContext: r,
              maxSidebarWidth: u,
              maxHeight: o,
              inCall: d,
            } = this.props,
            { resizedHeight: c } = this.state,
            f = l === eO.ChannelModes.VIDEO,
            h =
              e !== eO.ChannelLayouts.NO_CHAT &&
              e !== eO.ChannelLayouts.FULL_SCREEN &&
              null != o;
          return (0, a.jsxs)("div", {
            className: i(eD.wrapper, eb[e], eU[r], {
              [eD.poppedOut]:
                this.popoutOpen &&
                !this.inPopout &&
                e !== eO.ChannelLayouts.NO_CHAT &&
                t.isPrivate(),
              [eD.video]: f,
              [eD.chatSidebarOpen]: s,
            }),
            ref: e => {
              (this._wrapperRef.current = e),
                (this.props.wrapperRef.current = e);
            },
            style:
              h && null != c
                ? { minHeight: 200, maxHeight: o, height: c }
                : void 0,
            children: [
              (0, a.jsx)("div", {
                className: i(eD.callContainer, {
                  [(0, eg.getThemeClass)(eO.ThemeTypes.DARK)]: f,
                }),
                ref: e => {
                  (this._callContainerRef.current = e),
                    (this.props.callContainerRef.current = e);
                },
                children: (0, a.jsx)(W.default, {
                  timeout: 2e3,
                  children: e => this.renderContent(e),
                }),
              }),
              h &&
                (0, a.jsx)(eR.default, {
                  minHeight: 200,
                  maxHeight: o,
                  resizableNode: this._wrapperRef,
                  onResize: this.handleCallResize,
                  onResizeEnd: this.props.updateStoredCallHeaderHeight,
                }),
              (0, a.jsx)("div", {
                className: eD.channelChatWrapper,
                ref: e => {
                  (this._channelChatRef.current = e),
                    (this.props.channelChatRef.current = e);
                },
                children:
                  s &&
                  (!d || !this.popoutOpen || this.inPopout) &&
                  (0, a.jsx)(eN.default, { channel: t, guild: n, maxWidth: u }),
              }),
            ],
          });
        }
        constructor(...e) {
          super(...e),
            (this._prevLayout = eO.ChannelLayouts.MINIMUM),
            (this._wrapperRef = l.createRef()),
            (this._callContainerRef = l.createRef()),
            (this._channelChatRef = l.createRef()),
            (this._contentRef = l.createRef()),
            (this._videoBackgroundTooltipTimeout = new c.Timeout()),
            (this._lastIdleProps = null),
            (this.state = { resizedHeight: k.default.callHeaderHeight }),
            (this.handleFullScreenChange = () => {
              let e = this.getRootNode();
              null != e &&
                !(0, e_.isFullScreen)(e, this.currentDocument) &&
                this.props.layout === eO.ChannelLayouts.FULL_SCREEN &&
                this.handleFullScreen();
            }),
            (this.handleFullScreen = () => {
              let e = this.getRootNode();
              null != e &&
                (this.props.layout !== eO.ChannelLayouts.FULL_SCREEN
                  ? ((this._prevLayout = this.props.layout),
                    this.handleChangeLayout(eO.ChannelLayouts.FULL_SCREEN),
                    (0, e_.requestFullScreen)(e))
                  : this.maybeLeaveFullScreen());
            }),
            (this.maybeLeaveFullScreen = () => {
              let e = this.getRootNode();
              if (null != e)
                this.props.layout === eO.ChannelLayouts.FULL_SCREEN &&
                  (this.handleChangeLayout(this._prevLayout),
                  (0, e_.exitFullScreen)(e, this.currentDocument));
            }),
            (this.handleToggleLayout = () => {
              this.handleChangeLayout(
                this.props.layout === eO.ChannelLayouts.NORMAL
                  ? eO.ChannelLayouts.NO_CHAT
                  : eO.ChannelLayouts.NORMAL
              );
            }),
            (this.handleChangeLayout = e => {
              let { channel: t, appContext: n, layout: a } = this.props;
              a !== e &&
                (m.default.updateLayout(t.id, e, n),
                e === eO.ChannelLayouts.FULL_SCREEN &&
                  t.isPrivate() &&
                  eE.ComponentDispatch.dispatch(
                    eO.ComponentActions.TEXTAREA_BLUR
                  ));
            }),
            (this.handleDisconnect = () => {
              this.props.layout === eO.ChannelLayouts.FULL_SCREEN &&
                this.handleFullScreen();
            }),
            (this.handleContextMenu = (e, t) => {
              var l, s;
              let { channel: i, appContext: r, layout: o } = this.props,
                d = {
                  onClose: () => {
                    var e;
                    return null === (e = this._lastIdleProps) || void 0 === e
                      ? void 0
                      : e.onAllowIdle("menu");
                  },
                  context: r,
                };
              switch (
                (null === (l = this._lastIdleProps) ||
                  void 0 === l ||
                  l.onPreventIdle("menu"),
                null === (s = this._lastIdleProps) ||
                  void 0 === s ||
                  s.onActive(),
                e.type)
              ) {
                case ey.ParticipantTypes.HIDDEN_STREAM:
                case ey.ParticipantTypes.STREAM:
                  (0, p.openContextMenuLazy)(
                    t,
                    async () => {
                      let { default: t } = await n
                        .el("172844")
                        .then(n.bind(n, "172844"));
                      return n =>
                        (0, a.jsx)(t, {
                          ...n,
                          stream: e.stream,
                          exitFullscreen: this.maybeLeaveFullScreen,
                          appContext: r,
                        });
                    },
                    d
                  );
                  return;
                case ey.ParticipantTypes.USER:
                  let c = ed.default.getUser(e.id);
                  if (null != c)
                    switch (i.type) {
                      case eO.ChannelTypes.DM:
                        return (0, p.openContextMenuLazy)(
                          t,
                          async () => {
                            let { default: e } = await n
                              .el("130074")
                              .then(n.bind(n, "130074"));
                            return t =>
                              (0, a.jsx)(e, {
                                ...t,
                                showChannelCallItems: !0,
                                showMediaItems: !0,
                                user: c,
                                channel: i,
                                showModalItems: !0,
                              });
                          },
                          d
                        );
                      case eO.ChannelTypes.GROUP_DM:
                        return (0, p.openContextMenuLazy)(
                          t,
                          async () => {
                            let { default: e } = await n
                              .el("166452")
                              .then(n.bind(n, "166452"));
                            return t =>
                              (0, a.jsx)(e, {
                                ...t,
                                showChannelCallItems: !0,
                                showMediaItems: !0,
                                showChatItems:
                                  o === eO.ChannelLayouts.MINIMUM ||
                                  o === eO.ChannelLayouts.NORMAL,
                                user: c,
                                channel: i,
                                showModalItems: !0,
                              });
                          },
                          d
                        );
                      case eO.ChannelTypes.GUILD_VOICE:
                        let f = i.getGuildId();
                        return (
                          u(null != f, "GuildID null for guild voice channel"),
                          (0, p.openContextMenuLazy)(
                            t,
                            async () => {
                              let { default: e } = await n
                                .el("834247")
                                .then(n.bind(n, "834247"));
                              return t =>
                                (0, a.jsx)(e, {
                                  ...t,
                                  showMediaItems: !0,
                                  showChannelCallItems: !0,
                                  showChatItems: !1,
                                  user: c,
                                  channel: i,
                                  guildId: f,
                                  showModalItems: !0,
                                });
                            },
                            d
                          )
                        );
                    }
              }
            }),
            (this.handleCallResize = e => {
              this.setState({ resizedHeight: e });
            }),
            (this.handleSelectParticipant = (e, t) => {
              let {
                channel: n,
                selectedParticipant: a,
                allActiveStreams: l,
                inCall: s,
                mode: i,
              } = this.props;
              if (
                (0, ey.isStreamParticipant)(e) &&
                (0, U.canWatchStream)(
                  n,
                  ec.default,
                  ei.default,
                  er.default,
                  O.default
                )[0]
              ) {
                E.default.selectVoiceChannel(n.id);
                let a = l.filter(
                  t =>
                    (0, b.encodeStreamKey)(t) === e.id &&
                    t.state !== eO.ApplicationStreamStates.ENDED
                );
                0 === a.length &&
                  (0, S.watchStream)((0, b.decodeStreamKey)(e.id), {
                    forceMultiple: t.shiftKey,
                  });
              }
              s &&
                i === eO.ChannelModes.VIDEO &&
                ((null == a ? void 0 : a.id) === e.id
                  ? m.default.selectParticipant(n.id, null)
                  : m.default.selectParticipant(n.id, e.id));
            }),
            (this.handleOpenPopout = () => {
              let { channel: e, connectedToEmbeddedActivity: t } = this.props,
                n = () => {
                  let t = e.getGuildId();
                  null != t &&
                    (0, V.transitionTo)(
                      (0, ep.previousTextChannelRouteForGuild)(t)
                    ),
                    w.openChannelCallPopout(e);
                };
              t ? (0, M.default)(n) : n();
            }),
            (this.handleStayOnTop = e => {
              w.setAlwaysOnTop(eO.PopoutWindowKeys.CHANNEL_CALL_POPOUT, e);
            }),
            (this.handleClosePopout = () => {
              w.close(eO.PopoutWindowKeys.CHANNEL_CALL_POPOUT);
            }),
            (this.handleFullscreenParticipant = (e, t) => {
              let { layout: n, selectedParticipant: a } = this.props,
                l = n === eO.ChannelLayouts.FULL_SCREEN;
              ((!l && (null == a ? void 0 : a.id) !== e.id) ||
                (l && (null == a ? void 0 : a.id) === e.id)) &&
                this.handleSelectParticipant(e, t),
                this.handleFullScreen();
            }),
            (this.renderRegionSelect = () => {
              let e;
              let { call: t, channel: n, layout: l } = this.props;
              return (
                !this.inPopout &&
                  l !== eO.ChannelLayouts.FULL_SCREEN &&
                  null != t &&
                  !n.isManaged() &&
                  (e = (0, a.jsx)(C.default, { call: t })),
                (0, a.jsx)(ef.default, {
                  justify: ef.default.Justify.END,
                  children: e,
                })
              );
            }),
            (this.renderBottomCenter = () => {
              let { channel: e, inCall: t, layout: n } = this.props;
              return t ||
                n === eO.ChannelLayouts.MINIMUM ||
                n === eO.ChannelLayouts.NORMAL
                ? (0, a.jsx)(B.default, {
                    exitFullScreen: this.maybeLeaveFullScreen,
                    channel: e,
                    onDisconnectCall: this.handleDisconnect,
                    idleProps: this._lastIdleProps,
                  })
                : null;
            }),
            (this.renderBottomLeft = () => {
              let {
                layout: e,
                mentionCount: t,
                channel: n,
                appContext: l,
                useNewInviteButton: s,
                selectedParticipant: r,
                shouldUseVoiceEffectsActionBar: u,
                inCall: o,
                participants: d,
              } = this.props;
              if (!o) return null;
              let c =
                  e === eO.ChannelLayouts.NO_CHAT
                    ? Z.default.Directions.UP
                    : Z.default.Directions.DOWN,
                f = [
                  eO.ChannelLayouts.FULL_SCREEN,
                  eO.ChannelLayouts.NO_CHAT,
                ].includes(e),
                h = d.some(e => e.type === ey.ParticipantTypes.STREAM),
                m =
                  e === eO.ChannelLayouts.FULL_SCREEN
                    ? () => {
                        (this._prevLayout = eO.ChannelLayouts.NORMAL),
                          this.handleFullScreen();
                      }
                    : this.handleToggleLayout,
                { canChangeLayout: p, canInvite: E } = this.viewProperties,
                S = s
                  ? (0, a.jsx)(H.default, {
                      channel: n,
                      stream:
                        (null == r ? void 0 : r.type) ===
                        ey.ParticipantTypes.STREAM
                          ? (0, b.decodeStreamKey)(r.id)
                          : void 0,
                      applicationId:
                        (null == r ? void 0 : r.type) ===
                        ey.ParticipantTypes.ACTIVITY
                          ? r.id
                          : void 0,
                      appContext: l,
                      className: eD.leftTrayIcon,
                      exitFullScreen: this.maybeLeaveFullScreen,
                      analyticsLocation:
                        n.type === eO.ChannelTypes.GUILD_VOICE
                          ? eO.AnalyticsPages.GUILD_CHANNEL
                          : eO.AnalyticsPages.DM_CHANNEL,
                    })
                  : (0, a.jsx)(q.default, {
                      channel: n,
                      stream:
                        (null == r ? void 0 : r.type) ===
                        ey.ParticipantTypes.STREAM
                          ? (0, b.decodeStreamKey)(r.id)
                          : void 0,
                      className: eD.leftTrayIcon,
                      exitFullScreen: this.maybeLeaveFullScreen,
                      analyticsLocation:
                        n.type === eO.ChannelTypes.GUILD_VOICE
                          ? eO.AnalyticsPages.GUILD_CHANNEL
                          : eO.AnalyticsPages.DM_CHANNEL,
                    });
              return (0, a.jsxs)(a.Fragment, {
                children: [
                  E && !u ? S : null,
                  p
                    ? (0, a.jsxs)(ef.default, {
                        className: eD.iconWrapper,
                        align: ef.default.Align.CENTER,
                        grow: 0,
                        children: [
                          (0, a.jsx)(Z.default, {
                            label: f
                              ? eP.default.Messages.SHOW_CHAT
                              : eP.default.Messages.HIDE_CHAT,
                            direction: c,
                            className: eD.leftTrayIcon,
                            onClick: m,
                          }),
                          f && t > 0
                            ? (0, a.jsx)(eh.NumberBadge, {
                                className: eD.badge,
                                count: t,
                              })
                            : null,
                        ],
                      })
                    : null,
                  ((null == r ? void 0 : r.type) !==
                    ey.ParticipantTypes.STREAM &&
                    (null == r ? void 0 : r.type) !==
                      ey.ParticipantTypes.ACTIVITY) ||
                  u
                    ? null
                    : (0, a.jsx)(Y.default, {
                        children: (0, a.jsx)(eM.default, {
                          className: i(eD.leftTrayIcon, eD.viewersButton),
                          participant: r,
                          maxVisibleUsers: 4,
                          guildId: n.getGuildId(),
                          channelId: n.id,
                          disableInteraction:
                            this.inPopout ||
                            e === eO.ChannelLayouts.FULL_SCREEN,
                        }),
                      }),
                  u &&
                    (0, a.jsx)(eL.default, {
                      channel: n,
                      hasActiveStream: h,
                      themeable: this.viewProperties.useTheme,
                    }),
                  (0, a.jsx)(D.default, {
                    showLeftDivider: u,
                    themeable: this.viewProperties.useTheme,
                    className: eD.leftTrayIcon,
                    channel: n,
                  }),
                ],
              });
            }),
            (this.renderBottomRight = () => {
              let {
                  popoutWindow: e,
                  popoutWindowAlwaysOnTop: t,
                  currentUserId: n,
                  selectedParticipant: l,
                } = this.props,
                {
                  canFullscreen: s,
                  canStayOnTop: i,
                  canPopout: r,
                  useTheme: u,
                } = this.viewProperties;
              return (0, a.jsxs)(a.Fragment, {
                children: [
                  null != l &&
                  l.type !== ey.ParticipantTypes.ACTIVITY &&
                  l.user.id !== n
                    ? (0, a.jsx)(ee.default, {
                        context: (0, eT.default)(l.type),
                        userId: l.user.id,
                        currentWindow: this.inPopout
                          ? null != e
                            ? e
                            : void 0
                          : window,
                        sliderClassName: eD.volumeSlider,
                        className: eD.rightTrayIcon,
                      })
                    : null,
                  i
                    ? (0, a.jsx)($.default, {
                        className: eD.rightTrayIcon,
                        popoutWindowAlwaysOnTop: t,
                        onToggleStayOnTop: this.handleStayOnTop,
                      })
                    : null,
                  r
                    ? (0, a.jsx)(J.default, {
                        themeable: u,
                        popoutOpen: this.popoutOpen,
                        className: eD.rightTrayIcon,
                        onOpenPopout: this.handleOpenPopout,
                        onClosePopout: this.handleClosePopout,
                      })
                    : null,
                  s
                    ? (0, a.jsx)(X.default, {
                        themeable: u,
                        node: this.getRootNode(),
                        guestWindow: e,
                        className: eD.rightTrayIcon,
                        onClick: this.handleFullScreen,
                      })
                    : null,
                ],
              });
            }),
            (this.renderChatButton = e => {
              let { className: t, showingClassName: n } = e,
                { channel: l, chatOpen: s, inCall: i } = this.props;
              return s || (this.popoutOpen && !this.inPopout && i)
                ? null
                : (0, a.jsx)(Q.ChatButton, {
                    channelId: l.id,
                    className: t,
                    showingClassName: n,
                  });
            }),
            (this.renderChatToasts = () => {
              let {
                showChatToasts: e,
                chatOpen: t,
                channel: n,
                inCall: l,
              } = this.props;
              return !e || t || (this.popoutOpen && !this.inPopout && l)
                ? null
                : (0, a.jsx)(ex.default, {
                    children: (0, a.jsx)(z.default, {
                      className: eD.chatToasts,
                      channelId: n.id,
                    }),
                  });
            }),
            (this.renderVoiceChannelEffects = () => {
              let { channel: e, callContainerDimensions: t } = this.props;
              return (0, a.jsx)(ej.default, {
                children: (0, a.jsx)(et.default, {
                  callHeight: t.height,
                  channelId: e.id,
                }),
              });
            }),
            (this.renderHeader = () => {
              let {
                  renderExternalHeader: e,
                  channel: t,
                  guild: n,
                  appContext: l,
                  chatOpen: s,
                  inCall: i,
                } = this.props,
                {
                  useExternalHeader: r,
                  canSelectRegion: u,
                  renderHeader: o,
                } = this.viewProperties;
              return o
                ? (0, a.jsxs)(Y.default, {
                    children: [
                      (0, a.jsx)("div", {
                        className: eD.headerWrapper,
                        children: r
                          ? null == e
                            ? void 0
                            : e()
                          : (0, a.jsx)(eA.default, {
                              channel: t,
                              guild: n,
                              appContext: l,
                              inCall: i,
                              isChatOpen:
                                s || (this.popoutOpen && !this.inPopout && i),
                              exitFullScreen: this.maybeLeaveFullScreen,
                            }),
                      }),
                      u ? this.renderRegionSelect() : null,
                    ],
                  })
                : null;
            });
        }
      }
      var eF = function (e) {
        var t;
        let { channel: n, renderExternalHeader: s, maxHeight: i } = e,
          { width: r = 0, ref: u } = (0, I.default)(),
          { width: c = 0, height: h = 0, ref: m } = (0, I.default)(),
          { ref: p } = (0, I.default)(),
          E = (0, v.useAppContext)(),
          S = (0, P.default)(),
          C = (0, o.useStateFromStores)([eo.default], () => {
            var e;
            return (
              (null !== (e = null == S ? void 0 : S.channelId) && void 0 !== e
                ? e
                : eo.default.getVoiceChannelId()) === n.id
            );
          }),
          {
            participants: M,
            filteredParticipants: j,
            participantsVersion: D,
            mode: b,
            layout: U,
            participantsOpen: w,
            chatOpen: V,
            selectedParticipant: B,
          } = (0, o.useStateFromStoresObject)(
            [eI.default],
            () => {
              let e = E === eO.AppContext.POPOUT,
                t = eI.default.getMode(n.id);
              e && (t = eO.ChannelModes.VIDEO);
              let a =
                t === eO.ChannelModes.VIDEO
                  ? eI.default.getLayout(n.id, E)
                  : eO.ChannelLayouts.MINIMUM;
              return (
                e &&
                  a !== eO.ChannelLayouts.FULL_SCREEN &&
                  (a = eO.ChannelLayouts.NO_CHAT),
                {
                  mode: t,
                  layout: a,
                  selectedParticipant:
                    t !== eO.ChannelModes.VOICE
                      ? eI.default.getSelectedParticipant(n.id)
                      : null,
                  participants: eI.default.getParticipants(n.id),
                  filteredParticipants: eI.default.getFilteredParticipants(
                    n.id
                  ),
                  participantsOpen: eI.default.getParticipantsOpen(n.id),
                  chatOpen: eI.default.getChatOpen(n.id),
                  participantsVersion: eI.default.getParticipantsVersion(n.id),
                }
              );
            },
            [E, n.id]
          ),
          G = (0, o.useStateFromStoresArray)([en.default], () =>
            en.default.getAllActiveStreams()
          ),
          { selectedStream: H } = (0, o.useStateFromStoresObject)(
            [en.default],
            () => ({
              selectedStream:
                null != B ? en.default.getActiveStreamForStreamKey(B.id) : null,
            }),
            [B]
          ),
          W = (0, o.useStateFromStores)([ei.default], () =>
            ei.default.getGuild(n.getGuildId())
          ),
          Y = (0, o.useStateFromStores)(
            [es.default],
            () => es.default.getCall(n.id),
            [n.id]
          ),
          z = (0, o.useStateFromStores)(
            [eu.default],
            () => eu.default.getMentionCount(n.id),
            [n.id]
          ),
          K = (0, o.useStateFromStores)([ea.default], () => ea.default.getId()),
          { popoutWindow: Z, popoutWindowAlwaysOnTop: Q } = (0,
          o.useStateFromStoresObject)([F.default], () => ({
            popoutWindow: F.default.getWindow(
              eO.PopoutWindowKeys.CHANNEL_CALL_POPOUT
            ),
            popoutWindowAlwaysOnTop: F.default.getIsAlwaysOnTop(
              eO.PopoutWindowKeys.CHANNEL_CALL_POPOUT
            ),
          })),
          X = (0, o.useStateFromStores)([er.default], () =>
            er.default.can(eO.Permissions.CONNECT, n)
          ),
          q = (0, o.useStateFromStores)([el.default], () =>
            el.default.getToastsEnabled(n.id)
          ),
          J = (0, o.useStateFromStores)([O.default], () =>
            O.default.getAwaitingRemoteSessionInfo()
          ),
          $ = (0, o.useStateFromStores)(
            [k.default],
            () => k.default.callHeaderHeight
          ),
          ee = l.useCallback(e => {
            g.default.updatedUnsyncedSettings({ callHeaderHeight: e });
          }, []),
          et =
            null !== (t = null == W ? void 0 : W.id) && void 0 !== t ? t : null,
          ed = (0, A.default)(et, n.id),
          ec = (0, o.useStateFromStores)(
            [x.default],
            () => x.default.getFetchState(),
            []
          ),
          ef = (0, T.default)(ec);
        l.useEffect(() => {
          "errored" === ec &&
            "errored" !== ef &&
            (0, f.showToast)(
              (0, f.createToast)(
                eP.default.Messages
                  .EMBEDDED_ACTIVITIES_DEVELOPER_ACTIVITY_SHELF_FETCH_ERROR,
                f.ToastType.FAILURE
              )
            );
        }, [ec, ef]);
        let eh = (0, o.useStateFromStores)(
          [N.default],
          () => null != N.default.getSelfEmbeddedActivityForChannel(n.id),
          [n]
        );
        l.useEffect(() => {
          let e = !1,
            t = null,
            n = async () => {
              C &&
                b === eO.ChannelModes.VIDEO &&
                ((t = await eC.default.blockDisplaySleep()),
                e && null != t && eC.default.unblockDisplaySleep(t));
            };
          return (
            n(),
            () => {
              null != t ? eC.default.unblockDisplaySleep(t) : (e = !0);
            }
          );
        }, [C, b]);
        let em = (0, ev.default)(n, !0),
          ep = (0, y.useIsContentShown)(
            d.DismissibleContent.CALL_CHAT_BUTTON_TEXT_IN_VOICE_COACH_MARK
          ),
          { AnalyticsLocationProvider: eE } = (0, L.default)(
            R.default.CHANNEL_CALL
          );
        return (0, a.jsx)(eE, {
          children: (0, a.jsx)(_.default, {
            page: eO.AnalyticsPages.CHANNEL_CALL,
            children: (0, a.jsx)(ex.ChannelCallChatLayerProvider, {
              children: (0, a.jsxs)(ej.VoiceChannelEffectsLayerProvider, {
                children: [
                  (0, a.jsx)(ew, {
                    channel: n,
                    guild: W,
                    hasConnectPermission: X,
                    participantsOpen: w,
                    renderExternalHeader: s,
                    appContext: E,
                    call: Y,
                    popoutWindow: Z,
                    popoutWindowAlwaysOnTop: Q,
                    mentionCount: z,
                    selectedStream: H,
                    mode: b,
                    inCall: C,
                    participants: M,
                    filteredParticipants: j,
                    participantsVersion: D,
                    layout: U,
                    chatOpen: V,
                    maxSidebarWidth: r - 550,
                    shouldUseVoiceEffectsActionBar: em,
                    currentUserId: K,
                    selectedParticipant: B,
                    allActiveStreams: G,
                    useNewInviteButton: ed,
                    connectedToEmbeddedActivity: eh,
                    showChatToasts: q,
                    storedCallHeaderHeight: $,
                    updateStoredCallHeaderHeight: ee,
                    wrapperRef: u,
                    callContainerDimensions: { width: c, height: h },
                    callContainerRef: m,
                    channelChatRef: p,
                    width: r,
                    maxHeight: i,
                    forceShowControls: ep,
                    awaitingRemoteSessionInfo: J,
                  }),
                  !n.isPrivate() &&
                    (0, a.jsx)(ej.VoiceChannelEffectsLayerContainer, {}),
                  (0, a.jsx)(ex.ChannelCallChatLayerContainer, {}),
                ],
              }),
            }),
          }),
        });
      };
    },
    412090: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ChannelCallChatLayerContainer: function () {
            return r;
          },
          ChannelCallChatLayerProvider: function () {
            return u;
          },
          default: function () {
            return o;
          },
        });
      var a = n("77078");
      let {
          Layer: l,
          LayerContainer: s,
          LayerProvider: i,
        } = (0, a.createLayer)("ChannelCallChat"),
        r = s,
        u = i;
      var o = l;
    },
    452027: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return T;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("151426"),
        i = n("255397"),
        r = n("264732"),
        u = n("176347"),
        o = n("665182"),
        d = n("850391"),
        c = n("10641"),
        f = n("474643"),
        h = n("109264"),
        m = n("945330"),
        p = n("664336"),
        E = n("659500"),
        S = n("412090"),
        g = n("49111"),
        C = n("994428"),
        _ = n("782340"),
        I = n("370835"),
        T = function (e) {
          let { channel: t, guild: n, maxWidth: T } = e;
          l.useEffect(() => {
            (0, c.markDismissibleContentAsDismissed)(
              s.DismissibleContent.CALL_CHAT_BUTTON_TEXT_IN_VOICE_COACH_MARK,
              { dismissAction: C.ContentDismissActionType.AUTO }
            );
          }, []);
          let v = l.useCallback(() => {
              i.default.updateChatOpen(t.id, !1),
                E.ComponentDispatch.safeDispatch(
                  g.ComponentActions.FOCUS_CHAT_BUTTON
                );
            }, [t.id]),
            x = (0, a.jsx)(p.default.Icon, {
              icon: m.default,
              tooltip: _.default.Messages.CLOSE,
              onClick: v,
            });
          return (0, a.jsxs)(o.default, {
            sidebarType: o.ChatSidebarType.CallChatSidebar,
            maxWidth: T,
            floatingLayer: S.default,
            children: [
              (0, a.jsx)(r.default, {
                channel: t,
                draftType: f.DraftType.ChannelMessage,
              }),
              (0, a.jsxs)(p.default, {
                toolbar: x,
                "aria-label": _.default.Messages.CHANNEL_HEADER_BAR_A11Y_LABEL,
                children: [
                  (0, a.jsx)(p.default.Icon, {
                    icon: h.default,
                    disabled: !0,
                    "aria-label": _.default.Messages.VOICE_CHAT_TEXT_CHANNEL,
                  }),
                  (0, a.jsx)(p.default.Title, { children: t.name }),
                ],
              }),
              (0, a.jsx)("div", {
                className: I.chat,
                children: (0, a.jsx)(
                  u.default,
                  {
                    channel: t,
                    guild: n,
                    chatInputType: d.ChatInputTypes.SIDEBAR,
                  },
                  t.id
                ),
              }),
            ],
          });
        };
    },
    328715: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return H;
          },
        }),
        n("222007");
      var a = n("37983");
      n("884691");
      var l = n("414456"),
        s = n.n(l),
        i = n("446674"),
        r = n("77078"),
        u = n("308289"),
        o = n("244201"),
        d = n("204947"),
        c = n("442939"),
        f = n("207273"),
        h = n("679653"),
        m = n("619335"),
        p = n("534222"),
        E = n("822516"),
        S = n("138286"),
        g = n("539938"),
        C = n("557809"),
        _ = n("367376"),
        I = n("23033"),
        T = n("616718"),
        v = n("550410"),
        x = n("957255"),
        N = n("953109"),
        A = n("832132"),
        M = n("664336"),
        R = n("439932"),
        j = n("191145"),
        L = n("598785"),
        y = n("2830"),
        O = n("836087"),
        P = n("843624"),
        D = n("99795"),
        b = n("49111"),
        U = n("843455"),
        w = n("782340"),
        F = n("434225"),
        V = n("919163");
      function k(e) {
        let { focusedParticipant: t, channel: n } = e,
          l = (0, o.useAppContext)(),
          s = (0, i.useStateFromStores)([j.default], () =>
            j.default.getLayout(n.id, l)
          );
        return (0, a.jsx)(v.default, {
          children: (0, a.jsx)(O.default, {
            className: F.participants,
            participant: t,
            maxVisibleUsers: 5,
            guildId: n.getGuildId(),
            channelId: n.id,
            disableInteraction:
              l === b.AppContext.POPOUT || s === b.ChannelLayouts.FULL_SCREEN,
          }),
        });
      }
      function B(e) {
        let { user: t, channel: n, stream: l, color: s } = e,
          i = (0, T.default)(n, t, l);
        return null == t || null == l
          ? null
          : (0, a.jsxs)(a.Fragment, {
              children: [
                (0, a.jsx)(u.default, {
                  className: F.avatar,
                  size: r.AvatarSizes.SIZE_24,
                  user: t,
                  animate: !1,
                }),
                (0, a.jsx)(r.Text, {
                  className: F.playingText,
                  variant: "text-md/medium",
                  color: s,
                  children: i,
                }),
              ],
            });
      }
      function G(e) {
        let t,
          { focusedApplication: n, focusedParticipant: l, channel: s } = e,
          i = (0, L.default)(s, !0),
          u = (0, p.useActiveEvent)(s.id),
          o = null != u ? (0, E.getNextRecurrenceIdInEvent)(u) : null,
          c = null != u;
        if ((null == l ? void 0 : l.type) === D.ParticipantTypes.ACTIVITY)
          null != n &&
            (t = (0, a.jsxs)(a.Fragment, {
              children: [
                (0, a.jsx)(M.default.Divider, { className: F.divider }),
                (0, a.jsx)(N.default, { game: n, className: F.activityIcon }),
                (0, a.jsx)(r.Text, {
                  className: F.playingText,
                  variant: "text-md/normal",
                  color: "none",
                  children: (0, d.default)(n.name),
                }),
                i && (0, a.jsx)(k, { channel: s, focusedParticipant: l }),
              ],
            }));
        else if ((null == l ? void 0 : l.type) === D.ParticipantTypes.STREAM) {
          let e = l.user,
            n = l.stream;
          t = (0, a.jsxs)(a.Fragment, {
            children: [
              (0, a.jsx)(M.default.Divider, { className: F.divider }),
              (0, a.jsx)(B, {
                user: e,
                channel: s,
                stream: n,
                color: i ? "header-primary" : "none",
              }),
              i && (0, a.jsx)(k, { channel: s, focusedParticipant: l }),
            ],
          });
        } else
          c && (t = (0, a.jsx)(S.default, { guildEvent: u, recurrenceId: o }));
        return (0, a.jsx)("div", { className: F.container, children: t });
      }
      function H(e) {
        let {
            channel: t,
            guild: l,
            appContext: u,
            inCall: o,
            isChatOpen: d,
            exitFullScreen: p,
          } = e,
          { focusedParticipant: E } = (0, i.useStateFromStoresObject)(
            [j.default],
            () => ({
              focusedParticipant: j.default.getSelectedParticipant(t.id),
              participantsOpen: j.default.getParticipantsOpen(t.id),
            }),
            [t.id]
          ),
          S = (0, h.default)(t),
          T = (0, m.default)(t),
          [v] = (0, c.default)(
            (null == E ? void 0 : E.type) === D.ParticipantTypes.ACTIVITY
              ? [E.id]
              : []
          ),
          N = w.default.Messages.VOICE_CHANNEL;
        t.isDM()
          ? (N = w.default.Messages.DM)
          : t.isGroupDM() && (N = w.default.Messages.GROUP_DM);
        let L = (0, i.useStateFromStores)([f.default], () =>
            f.default.getChannelStatus(t)
          ),
          O = t.isGuildVoice() && o && null != L && L.length > 0,
          k = (0, i.useStateFromStores)([x.default], () =>
            x.default.can(b.Permissions.SET_VOICE_CHANNEL_STATUS, t)
          ),
          B = O
            ? (0, a.jsx)(r.Tooltip, {
                text: w.default.Messages.VOICE_CHANNEL_SET_STATUS,
                delay: 500,
                position: "bottom",
                shouldShow: k,
                children: e =>
                  (0, a.jsxs)(r.Clickable, {
                    ...e,
                    className: s(F.channelStatusClickable, {
                      [F.hoverable]: k,
                    }),
                    onClick: k ? H : void 0,
                    children: [
                      (0, a.jsx)(r.Text, {
                        variant: "text-xs/normal",
                        className: s(F.channelStatus, V.markup, {
                          [F.hoverable]: k,
                        }),
                        children: _.default.parseVoiceChannelStatus(L, !0, {
                          channelId: t.id,
                        }),
                      }),
                      k &&
                        (0, a.jsx)(A.default, {
                          className: s(F.pencilIcon, F.hoverable),
                          width: 14,
                          height: 14,
                        }),
                    ],
                  }),
              })
            : null;
        function H() {
          (0, r.openModalLazy)(
            async () => {
              let { default: e } = await n
                .el("843624")
                .then(n.bind(n, "843624"));
              return n => (0, a.jsx)(e, { channel: t, ...n });
            },
            { modalKey: P.VOICE_CHANNEL_STATUS_MODAL_KEY }
          );
        }
        return (0, a.jsxs)("div", {
          className: F.subtitleContainer,
          children: [
            (0, a.jsxs)(M.default, {
              onDoubleClick: g.handleDoubleClick,
              transparent: !0,
              className: (0, R.getThemeClass)(U.ThemeTypes.DARK),
              childrenBottom: B,
              toolbar: (0, a.jsx)(y.default, {
                inPopout: u === b.AppContext.POPOUT,
                channel: t,
                appContext: u,
                inCall: o,
                isChatOpen: d,
                exitFullScreen: p,
              }),
              children: [
                null != T
                  ? (0, a.jsx)(M.default.Icon, {
                      icon: T,
                      disabled: !0,
                      "aria-label": N,
                    })
                  : null,
                (0, a.jsx)(M.default.Title, { children: S }),
                (0, a.jsx)(C.HeaderGuildBreadcrumb, { channel: t, guild: l }),
                (0, a.jsx)(G, {
                  focusedApplication: v,
                  focusedParticipant: E,
                  channel: t,
                }),
              ],
            }),
            (0, a.jsx)(I.default, { channelId: t.id }),
          ],
        });
      }
    },
    2830: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return V;
          },
        }),
        n("424973");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("917351"),
        u = n.n(r),
        o = n("446674"),
        d = n("77078"),
        c = n("76813"),
        f = n("992207"),
        h = n("374014"),
        m = n("336804"),
        p = n("311197"),
        E = n("830251"),
        S = n("170643"),
        g = n("550410"),
        C = n("124824"),
        _ = n("640553"),
        I = n("104815"),
        T = n("925674"),
        v = n("331759"),
        x = n("63260"),
        N = n("422736"),
        A = n("280168"),
        M = n("664336"),
        R = n("68148"),
        j = n("980423"),
        L = n("191145"),
        y = n("598785"),
        O = n("226735"),
        P = n("340513"),
        D = n("99795"),
        b = n("49111"),
        U = n("782340"),
        w = n("963405");
      function F(e) {
        let { channelId: t, guildId: n } = e,
          l = Date.now(),
          s = (0, o.useStateFromStores)([A.default, L.default], () =>
            u(A.default.getSpeakers())
              .map(e => L.default.getParticipant(t, e))
              .filter(
                e =>
                  null != e &&
                  e.type === D.ParticipantTypes.USER &&
                  e.speaking &&
                  !(0, E.default)(e)
              )
              .sortBy(e => -A.default.getSpeakingDuration(e.user.id, l))
              .slice(0, 3)
              .value()
          );
        return 0 === s.length
          ? null
          : (0, a.jsx)(a.Fragment, {
              children: s.map((e, t) =>
                (0, a.jsx)(
                  d.Tooltip,
                  {
                    position: "bottom",
                    color: d.Tooltip.Colors.GREY,
                    text: U.default.Messages.CHANNEL_CALL_CURRENT_SPEAKER.format(
                      { username: e.user.username }
                    ),
                    children: l =>
                      (0, a.jsx)(R.default, {
                        ...l,
                        className: i(w.speaker, {
                          [w.last]: t === s.length - 1,
                        }),
                        user: e.user,
                        speaking: !0,
                        collapsed: !0,
                        guildId: n,
                      }),
                  },
                  e.id
                )
              ),
            });
      }
      function V(e) {
        let {
            inPopout: t,
            channel: n,
            appContext: s,
            inCall: i,
            isChatOpen: r,
            exitFullScreen: u,
          } = e,
          E = n.id,
          {
            voiceParticipantsHidden: A,
            selectedParticipant: R,
            userParticipantCount: U,
          } = (0, o.useStateFromStoresObject)(
            [L.default],
            () => ({
              selectedParticipant: L.default.getSelectedParticipant(E),
              voiceParticipantsHidden: L.default.getVoiceParticipantsHidden(E),
              userParticipantCount: L.default.getUserParticipantCount(E),
            }),
            [E]
          ),
          V = (0, y.default)(n),
          { preventIdle: k, allowIdle: B } = (0, g.usePreventIdle)("popup"),
          G = [];
        if (V) {
          let e =
              (null == R ? void 0 : R.type) === D.ParticipantTypes.STREAM
                ? (0, h.decodeStreamKey)(R.id)
                : void 0,
            t =
              (null == R ? void 0 : R.type) === D.ParticipantTypes.ACTIVITY
                ? R.id
                : void 0;
          G.push(
            (0, a.jsx)(
              v.default,
              {
                className: w.button,
                channel: n,
                applicationId: t,
                stream: e,
                exitFullScreen: u,
                analyticsLocation:
                  n.type === b.ChannelTypes.GUILD_VOICE
                    ? b.AnalyticsPages.GUILD_CHANNEL
                    : b.AnalyticsPages.DM_CHANNEL,
              },
              "invite-button"
            )
          );
        }
        return (
          A &&
            G.push(
              (0, a.jsx)(
                F,
                { channelId: E, guildId: n.guild_id },
                "current-speaker"
              )
            ),
          G.push(
            (0, a.jsx)(
              f.default,
              { className: w.button, channelId: E },
              "clips-enabled-indicator"
            )
          ),
          (null == R ? void 0 : R.type) === D.ParticipantTypes.STREAM &&
            (G.push(
              (0, a.jsx)(
                S.default,
                { className: w.button, participant: R },
                "warning"
              )
            ),
            G.push(
              (0, a.jsx)(
                m.default,
                {
                  size: j.default.Sizes.LARGE,
                  className: w.button,
                  participant: R,
                  showQuality: !0,
                },
                "live-indicator"
              )
            )),
          A &&
            G.push(
              (0, a.jsx)(
                d.Popout,
                {
                  position: "bottom",
                  renderPopout: () =>
                    (0, a.jsx)(C.default, {
                      children: (0, a.jsx)(P.default, { channel: n }),
                    }),
                  children: (e, t) => {
                    let { isShown: n } = t;
                    return (0, l.createElement)(x.default, {
                      ...e,
                      isActive: n,
                      count: U,
                      key: "call-members",
                      className: w.button,
                    });
                  },
                },
                "call-members-popout"
              )
            ),
          i &&
            G.push(
              null != R
                ? (0, a.jsx)(
                    T.default,
                    { className: w.button, channelId: E },
                    "deselect-participant"
                  )
                : (0, a.jsx)(
                    N.default,
                    { className: w.button, channelId: E, isHorizontal: !0 },
                    "select-participant"
                  )
            ),
          !t && G.push((0, a.jsx)(c.default, { className: w.button }, "clips")),
          G.push(
            (0, a.jsx)(
              p.default,
              { onOpen: k, onClose: B, className: w.button },
              "recents"
            )
          ),
          G.push(
            (0, a.jsx)(
              d.Popout,
              {
                position: "bottom",
                renderPopout: e => {
                  let { closePopout: t } = e;
                  return (0, a.jsx)(C.default, {
                    children: (0, a.jsx)(O.default, {
                      channelId: E,
                      onClose: t,
                      appContext: s,
                      exitFullScreen: u,
                    }),
                  });
                },
                children: (e, t) => {
                  let { isShown: n } = t;
                  return (0, l.createElement)(I.default, {
                    ...e,
                    key: "more-options",
                    isActive: n,
                    className: w.lastButton,
                  });
                },
              },
              "more-options-popout"
            )
          ),
          !r &&
            (G.push(
              (0, a.jsx)(M.default.Divider, { className: w.divider }, "divider")
            ),
            G.push(
              (0, a.jsx)(
                _.ChatButton,
                {
                  channelId: n.id,
                  className: w.chatButtonSpacer,
                  disabled: !0,
                },
                "chat-spacer"
              )
            )),
          (0, a.jsx)(a.Fragment, { children: G })
        );
      }
    },
    226735: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return m;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("446674"),
        s = n("77078"),
        i = n("191145"),
        r = n("243288"),
        u = n("769928"),
        o = n("321135"),
        d = n("976074"),
        c = n("639537"),
        f = n("99795"),
        h = n("782340");
      function m(e) {
        let {
            channelId: t,
            onClose: n,
            appContext: m,
            exitFullScreen: p,
            onSelect: E,
          } = e,
          S = (0, l.useStateFromStores)([i.default], () =>
            i.default.getSelectedParticipant(t)
          ),
          g =
            (null == S ? void 0 : S.type) === f.ParticipantTypes.STREAM
              ? S.stream
              : null,
          C = (0, r.default)(t),
          _ = (0, o.default)(),
          I = (0, u.default)(t),
          T = (0, c.default)(t);
        return (0, a.jsxs)(s.Menu, {
          navId: "channel-call-overflow-popout",
          onClose: n,
          "aria-label": h.default.Messages.CHANNEL_CALL_OVERFLOW_MENU_LABEL,
          onSelect: E,
          children: [C, _, I, T, (0, d.default)(g, m, p)],
        });
      }
    },
    340513: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("446674"),
        s = n("77078"),
        i = n("884155"),
        r = n("316133"),
        u = n("49111"),
        o = n("782340"),
        d = n("938467");
      function c(e) {
        let { channel: t } = e,
          n = (0, l.useStateFromStores)([r.default], () =>
            r.default.getVoiceStatesForChannel(t)
          );
        return (0, a.jsxs)("div", {
          className: d.root,
          children: [
            (0, a.jsx)(s.Text, {
              variant: "text-xs/bold",
              className: d.header,
              children:
                o.default.Messages.CHANNEL_CALL_MEMBERS_POPOUT_HEADER.format({
                  count: n.length,
                }),
            }),
            (0, a.jsx)(s.Scroller, {
              className: d.scroller,
              children: (0, a.jsx)(i.default, {
                allowDragging: !1,
                allowPreviews: !1,
                className: d.voiceUsers,
                channel: t,
                voiceStates: n,
                collapsed: !1,
                location: u.AnalyticsLocations.CHANNEL_CALL,
              }),
            }),
          ],
        });
      }
    },
    579408: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("594203"),
        i = n("592550");
      function r(e) {
        let {
            resizableNode: t,
            onResize: n,
            onResizeEnd: r,
            minHeight: u,
            maxHeight: o,
          } = e,
          [d, c] = l.useState(null);
        l.useEffect(() => {
          var e, n;
          c(
            null !==
              (n =
                null === (e = t.current) || void 0 === e
                  ? void 0
                  : e.offsetHeight) && void 0 !== n
              ? n
              : null
          );
        }, [t]);
        let f = (0, s.default)({
          initialElementDimension: d,
          minDimension: u,
          maxDimension: o,
          resizableDomNodeRef: t,
          onElementResize: n,
          onElementResizeEnd: r,
          orientation: s.ResizeOrientation.VERTICAL_BOTTOM,
        });
        return (0, a.jsx)("div", { onMouseDown: f, className: i.resizeHandle });
      }
    },
    458685: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return m;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("627445"),
        s = n.n(l),
        i = n("446674"),
        r = n("77078"),
        u = n("901582"),
        o = n("697218"),
        d = n("348852"),
        c = n("873254"),
        f = n("49111"),
        h = n("782340");
      function m(e) {
        let { onClose: t, onSelect: n } = e,
          l = (0, i.useStateFromStores)([o.default], () => {
            let e = o.default.getCurrentUser();
            return (
              s(null != e, "VideoDeviceMenu: currentUser cannot be undefined"),
              e
            );
          }),
          m = (0, d.default)(),
          p = (0, c.default)(l.id);
        return (0, a.jsx)(u.default, {
          object: f.AnalyticsObjects.CONTEXT_MENU,
          children: (0, a.jsxs)(r.Menu, {
            onClose: t,
            navId: "video-device-context",
            "aria-label": h.default.Messages.FORM_LABEL_VIDEO_DEVICE,
            onSelect: n,
            children: [
              (0, a.jsx)(r.MenuGroup, {
                label: h.default.Messages.FORM_LABEL_VIDEO_DEVICE,
                children: m,
              }),
              (0, a.jsx)(r.MenuGroup, { children: p }),
            ],
          }),
        });
      }
    },
    141681: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return v;
          },
        }),
        n("424973"),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("458960"),
        u = n("446674"),
        o = n("266491"),
        d = n("819855"),
        c = n("77078"),
        f = n("841098"),
        h = n("471671"),
        m = n("823050"),
        p = n("99795"),
        E = n("133006"),
        S = n("125047"),
        g = n("403693");
      let C = { STEPS: 23, FRAME_DURATION: 17, FRAME_SIZE: 26 },
        _ = {
          SCALE_MIN: 0.7,
          SCALE_MAX: 1,
          DURATION_IN: 300,
          DURATION_OUT: 170,
          EASING_IN: r.default.Easing.inOut(r.default.Easing.back()),
          EASING_OUT: r.default.Easing.quad,
        },
        I = { DURATION_IN: 200, DURATION_OUT: 125 };
      class T extends l.PureComponent {
        componentDidMount() {
          this.componentDidAppear();
        }
        componentDidAppear() {
          let { scaleAnimation: e, widthAnimation: t } = this;
          e.setValue(1), t.setValue(1);
        }
        componentWillEnter(e) {
          let { scaleAnimation: t, widthAnimation: n } = this;
          t.setValue(0),
            n.setValue(0),
            r.default
              .parallel([
                r.default.timing(t, {
                  toValue: 1,
                  duration: _.DURATION_IN,
                  easing: _.EASING_IN,
                }),
                r.default.timing(n, { toValue: 1, duration: 200 }),
              ])
              .start(e);
        }
        componentWillLeave(e) {
          let {
            scaleAnimation: t,
            spriteAnimation: n,
            spriteOpacity: a,
            widthAnimation: l,
          } = this;
          a.setValue(1), n.setValue(0);
          let s = [];
          for (let e = 0; e < C.STEPS; e++)
            s.push(
              r.default.timing(n, {
                toValue: -C.FRAME_SIZE * e,
                duration: C.FRAME_DURATION,
              })
            );
          r.default
            .sequence([
              r.default.timing(t, {
                toValue: 0,
                duration: _.DURATION_OUT,
                easing: _.EASING_OUT,
              }),
              r.default.sequence(s),
              r.default.timing(l, { toValue: 0, duration: 125 }),
            ])
            .start(e);
        }
        getScaleStyle() {
          let { scaleAnimation: e } = this;
          return r.default.accelerate({
            transform: [
              {
                scale: e.interpolate({
                  inputRange: [0, 1],
                  outputRange: [_.SCALE_MIN, _.SCALE_MAX],
                }),
              },
            ],
            opacity: e,
          });
        }
        getSpriteStyle() {
          let { spriteAnimation: e, spriteOpacity: t } = this;
          return { backgroundPosition: e, opacity: t };
        }
        getWidthStyle() {
          return {
            width: this.widthAnimation.interpolate({
              inputRange: [0, 1],
              outputRange: ["0px", "".concat(this.props.width, "px")],
            }),
          };
        }
        render() {
          let { theme: e, children: t, className: n } = this.props,
            l = (0, d.isThemeDark)(e),
            s = i(E.sprite, { [g.crossWhite]: l, [g.crossGrey]: !l });
          return (0, a.jsxs)(r.default.div, {
            className: i(E.transition, n),
            style: this.getWidthStyle(),
            children: [
              (0, a.jsx)("div", {
                className: i(
                  E.spriteWrapper,
                  S.horizontal,
                  S.justifyCenter,
                  S.alignCenter
                ),
                children: (0, a.jsx)(r.default.div, {
                  className: s,
                  style: this.getSpriteStyle(),
                }),
              }),
              (0, a.jsx)(r.default.div, {
                style: this.getScaleStyle(),
                children: t,
              }),
            ],
          });
        }
        constructor(...e) {
          super(...e),
            (this.scaleAnimation = new r.default.Value(0)),
            (this.spriteAnimation = new r.default.Value(0)),
            (this.spriteOpacity = new r.default.Value(0)),
            (this.widthAnimation = new r.default.Value(0));
        }
      }
      function v(e) {
        var t, n;
        let {
            participants: l,
            onContextMenu: s,
            className: r,
            onClick: d,
            width: S,
            guildId: g,
          } = e,
          C = (0, f.default)();
        let _ =
            ((t = S),
            (n = l.length),
            ((0, c.getAvatarSize)(c.AvatarSizes.SIZE_80) + 16) * n > t
              ? c.AvatarSizes.SIZE_40
              : c.AvatarSizes.SIZE_80),
          I = (0, u.useStateFromStores)([h.default], () =>
            h.default.isFocused()
          ),
          v = l.map(e => {
            var t, n;
            if (e.type !== p.ParticipantTypes.USER) return null;
            let { user: l, voiceState: i, speaking: r, ringing: u } = e;
            return (0, a.jsx)(
              T,
              {
                className: E.participant,
                width: (0, c.getAvatarSize)(_),
                theme: C,
                children: (0, a.jsx)(
                  m.default,
                  {
                    src: l.getAvatarURL(g, (0, c.getAvatarSize)(_), r && I),
                    size: _,
                    muted:
                      null !== (t = null == i ? void 0 : i.isVoiceMuted()) &&
                      void 0 !== t &&
                      t,
                    deafen:
                      null !== (n = null == i ? void 0 : i.isVoiceDeafened()) &&
                      void 0 !== n &&
                      n,
                    speaking: r,
                    ringing: u,
                    onClick: t => (null == d ? void 0 : d(e, t)),
                    onContextMenu: t => (null == s ? void 0 : s(e, t)),
                  },
                  e.id
                ),
              },
              l.id
            );
          });
        return (0, a.jsx)(o.default, {
          component: "div",
          className: i(E.root, r),
          children: v,
        });
      }
    },
    397443: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("748820"),
        i = n("446674"),
        r = n("913144"),
        u = n("206230"),
        o = n("716241"),
        d = n("170152"),
        c = n("391591"),
        f = n("397485"),
        h = n("738258"),
        m = n("49111"),
        p = n("83686");
      function E(e) {
        let { channelId: t, guildId: n, userId: E, containerDimensions: S } = e,
          g = (0, i.useStateFromStores)(
            [u.default],
            () => u.default.useReducedMotion
          ),
          [C, _] = l.useState([]),
          I = C.length < 50;
        l.useEffect(() => {
          function e(e) {
            var a;
            let {
              channelId: l,
              userId: i,
              emoji: r,
              animationType: u,
              animationId: h,
            } = e;
            if (
              (null != E && E !== i) ||
              (d.default.getEnabled() &&
                (0, c.default)(
                  null !== (a = null == r ? void 0 : r.name) && void 0 !== a
                    ? a
                    : ""
                ))
            )
              return;
            let p = null != r && null != u && null != h;
            if (l === t && !g && I && p) {
              let e = (0, f.getEffectUrl)(r),
                a = null != r.id && !r.animated,
                l = {
                  id: (0, s.v4)(),
                  animationType: u,
                  animationId: h,
                  shouldResize: a,
                  url: e,
                  userId: i,
                };
              _(e => [...e, l]),
                o.default.trackWithMetadata(
                  m.AnalyticEvents.VOICE_CHANNEL_EFFECT_VIEWED,
                  { channel_id: t, guild_id: n }
                );
            }
          }
          return (
            r.default.subscribe("VOICE_CHANNEL_EFFECT_SEND", e),
            () => {
              r.default.unsubscribe("VOICE_CHANNEL_EFFECT_SEND", e);
            }
          );
        }, [t, n, E, g, I]);
        let T = l.useCallback(e => {
          _(t => {
            let n = [...t],
              a = n.findIndex(t => t.id === e);
            return n.splice(a, 1), n;
          });
        }, []);
        return g
          ? null
          : (0, a.jsx)("div", {
              className: p.effectsWrapper,
              style: { width: S.width },
              children: (0, a.jsx)("div", {
                className: p.effects,
                children: C.map(e =>
                  (0, a.jsx)(
                    h.default,
                    { containerDimensions: S, effect: e, onComplete: T },
                    e.id
                  )
                ),
              }),
            });
      }
    },
    198755: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          VoiceChannelEffectsLayerContainer: function () {
            return r;
          },
          VoiceChannelEffectsLayerProvider: function () {
            return u;
          },
          default: function () {
            return o;
          },
        });
      var a = n("77078");
      let {
          Layer: l,
          LayerContainer: s,
          LayerProvider: i,
        } = (0, a.createLayer)("VoiceChannelEffectsCall"),
        r = s,
        u = i;
      var o = l;
    },
    338677: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("77078"),
        s = n("629109"),
        i = n("135230"),
        r = n("723872"),
        u = n("782340");
      function o(e, t) {
        if (t && (0, r.isRTCConnectedInHub)()) {
          (0, l.openModalLazy)(async () => {
            let { default: e } = await n.el("109253").then(n.bind(n, "109253"));
            return t => (0, a.jsx)(e, { ...t });
          });
          return;
        }
        if (t) {
          (0, l.openModal)(e =>
            (0, a.jsx)(i.default, {
              ...e,
              title: u.default.Messages.SUPPRESSED,
              body: u.default.Messages.SUPPRESSED_PERMISSION_BODY,
            })
          );
          return;
        }
        if (e) {
          (0, l.openModal)(e =>
            (0, a.jsx)(i.default, {
              ...e,
              title: u.default.Messages.SERVER_MUTED_DIALOG_TITLE,
              body: u.default.Messages.SERVER_MUTED_DIALOG_BODY,
            })
          );
          return;
        }
        s.default.toggleSelfMute();
      }
    },
    632616: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("452804"),
        s = n("135230"),
        i = n("535348"),
        r = n("782340");
      function u(e) {
        let { type: t, onConfirm: n, ...u } = e,
          o =
            t === i.SelfStreamAndVideoAlertType.STREAM
              ? r.default.Messages.HIDE_SELF_STREAM_CONFIRMATION_HEADER
              : r.default.Messages.HIDE_SELF_VIDEO_CONFIRMATION_HEADER,
          d =
            t === i.SelfStreamAndVideoAlertType.STREAM
              ? r.default.Messages.HIDE_SELF_STREAM_CONFIRMATION_BODY
              : r.default.Messages.HIDE_SELF_VIDEO_CONFIRMATION_BODY;
        return (0, a.jsx)(s.default, {
          confirmText: r.default.Messages.CONFIRM,
          secondaryConfirmText: r.default.Messages.DONT_ASK_AGAIN,
          title: o,
          cancelText: r.default.Messages.CANCEL,
          onConfirm: n,
          onConfirmSecondary: () => {
            l.default.updatedUnsyncedSettings({
              disableHideSelfStreamAndVideoConfirmationAlert: !0,
            }),
              n();
          },
          body: d,
          ...u,
        });
      }
    },
    243288: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("446674"),
        s = n("77078"),
        i = n("255397"),
        r = n("191145"),
        u = n("782340");
      function o(e) {
        let t = (0, l.useStateFromStores)([r.default], () =>
          r.default.getVoiceParticipantsHidden(e)
        );
        return (0, a.jsx)(s.MenuCheckboxItem, {
          id: "no-video-hide",
          label: u.default.Messages.STREAM_SHOW_NON_VIDEO,
          checked: !t,
          action: () => i.default.toggleVoiceParticipantsHidden(e, !t),
        });
      }
    },
    769928: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        }),
        n("222007");
      var a = n("37983");
      n("884691");
      var l = n("446674"),
        s = n("77078"),
        i = n("168973"),
        r = n("236898"),
        u = n("632616"),
        o = n("535348"),
        d = n("782340");
      function c(e, t) {
        let [n, c, f] = (0, r.default)(e, t),
          h = (0, l.useStateFromStores)(
            [i.default],
            () => i.default.disableHideSelfStreamAndVideoConfirmationAlert
          );
        return n
          ? (0, a.jsx)(s.MenuCheckboxItem, {
              id: "self-stream-hide",
              label: d.default.Messages.SHOW_SELF_STREAM,
              checked: !c,
              action: () => {
                if (h || c) return f(!c);
                (0, s.openModal)(e =>
                  (0, a.jsx)(u.default, {
                    ...e,
                    type: o.SelfStreamAndVideoAlertType.STREAM,
                    onConfirm: () => f(!c),
                  })
                );
              },
            })
          : null;
      }
    },
    321135: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        }),
        n("222007");
      var a = n("37983");
      n("884691");
      var l = n("446674"),
        s = n("77078"),
        i = n("168973"),
        r = n("301603"),
        u = n("632616"),
        o = n("535348"),
        d = n("353927"),
        c = n("782340");
      function f(e) {
        let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : d.MediaEngineContextTypes.DEFAULT,
          [n, f, h] = (0, r.default)(e, t),
          m = (0, l.useStateFromStores)(
            [i.default],
            () => i.default.disableHideSelfStreamAndVideoConfirmationAlert
          );
        return n
          ? (0, a.jsx)(s.MenuCheckboxItem, {
              id: "self-video-hide",
              label: c.default.Messages.SHOW_SELF_VIDEO,
              checked: !f,
              action: () => {
                if (m || f) return h(!f);
                (0, s.openModal)(e =>
                  (0, a.jsx)(u.default, {
                    ...e,
                    type: o.SelfStreamAndVideoAlertType.VIDEO,
                    onConfirm: () => h(!f),
                  })
                );
              },
            })
          : null;
      }
    },
    60787: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("446674"),
        s = n("77078"),
        i = n("629109"),
        r = n("42887");
      function u() {
        let e = (0, l.useStateFromStores)([r.default], () =>
            Object.values(r.default.getInputDevices())
          ),
          t = (0, l.useStateFromStores)([r.default], () =>
            r.default.getInputDeviceId()
          );
        return e.map(e => {
          let { id: n, disabled: l, name: r } = e;
          return (0, a.jsx)(
            s.MenuRadioItem,
            {
              id: "input-".concat(n),
              group: "input-devices",
              disabled: l,
              label: r,
              checked: n === t,
              action: () => i.default.setInputDevice(n),
            },
            "input-".concat(n)
          );
        });
      }
    },
    348852: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("446674"),
        s = n("77078"),
        i = n("629109"),
        r = n("42887");
      function u() {
        let e = (0, l.useStateFromStores)([r.default], () =>
            Object.values(r.default.getVideoDevices())
          ),
          t = (0, l.useStateFromStores)([r.default], () =>
            r.default.getVideoDeviceId()
          );
        return e.map(e => {
          let { id: n, disabled: l, name: r } = e;
          return (0, a.jsx)(
            s.MenuRadioItem,
            {
              group: "video-devices",
              id: "video-device-".concat(n),
              disabled: l,
              label: r,
              checked: n === t,
              action: () => i.default.setVideoDevice(n),
            },
            "video-device-".concat(n)
          );
        });
      }
    },
    466769: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("446674"),
        s = n("77078"),
        i = n("629109"),
        r = n("42887");
      function u() {
        let e = (0, l.useStateFromStores)([r.default], () =>
            Object.values(r.default.getOutputDevices())
          ),
          t = (0, l.useStateFromStores)([r.default], () =>
            r.default.getOutputDeviceId()
          );
        return e.map(e => {
          let { id: n, disabled: l, name: r } = e;
          return (0, a.jsx)(
            s.MenuRadioItem,
            {
              group: "output-devices",
              id: "output-".concat(n),
              disabled: l,
              label: r,
              checked: n === t,
              action: () => i.default.setOutputDevice(n),
            },
            "output-".concat(n)
          );
        });
      }
    },
    873254: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("446674"),
        s = n("77078"),
        i = n("648911"),
        r = n("271938"),
        u = n("42887"),
        o = n("782340"),
        d = n("325483");
      function c(e) {
        let t = (0, s.useModalContext)(),
          c = (0, l.useStateFromStores)([u.default], () =>
            u.default.isVideoEnabled()
          ),
          f = (0, l.useStateFromStores)(
            [r.default],
            () => r.default.getId() === e
          ),
          h = (0, i.default)();
        return (!c || h) && f
          ? (0, a.jsx)(s.MenuItem, {
              id: "change-video-background",
              label: (0, a.jsx)("div", {
                className: d.item,
                children: c
                  ? o.default.Messages.CAMERA_CHANGE_VIDEO_BACKGROUND_MENU_ITEM
                  : o.default.Messages.CAMERA_PREVIEW_MENU_ITEM,
              }),
              action: function () {
                (0, s.openModalLazy)(
                  async () => {
                    let { default: e } = await n
                      .el("381736")
                      .then(n.bind(n, "381736"));
                    return t => (0, a.jsx)(e, { ...t, videoEnabled: c });
                  },
                  { modalKey: "camera-preview", contextKey: t }
                );
              },
            })
          : null;
      }
    },
    639537: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("446674"),
        s = n("77078"),
        i = n("712234"),
        r = n("826332"),
        u = n("782340");
      function o(e) {
        let t = (0, l.useStateFromStores)([i.default], () =>
          i.default.getToastsEnabled(e)
        );
        return (0, a.jsx)(s.MenuCheckboxItem, {
          id: "show-call-chat-toasts",
          label: u.default.Messages.SHOW_NEW_MESSAGE_PREVIEWS,
          checked: t,
          action: () => r.default.setCallChatToastsEnabled(e, !t),
        });
      }
    },
    736747: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("77078"),
        s = n("79112"),
        i = n("474571"),
        r = n("49111"),
        u = n("782340");
      function o() {
        return (0, a.jsx)(l.MenuItem, {
          id: "voice-settings",
          label: u.default.Messages.VOICE_SETTINGS,
          action: () => s.default.open(r.UserSettingsSections.VOICE),
          icon: i.default,
        });
      }
    },
    456127: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return S;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("446674"),
        i = n("598165"),
        r = n("386045"),
        u = n("803725"),
        o = n("103979"),
        d = n("981913"),
        c = n("373469"),
        f = n("271938"),
        h = n("191145"),
        m = n("99795"),
        p = n("782340"),
        E = n("960863");
      function S(e) {
        let { channel: t } = e,
          n = (0, s.useStateFromStores)([h.default], () =>
            h.default.getSelectedParticipant(t.id)
          ),
          S = (null == n ? void 0 : n.type) === m.ParticipantTypes.STREAM,
          g = (0, s.useStateFromStores)([c.default], () =>
            S ? c.default.getActiveStreamForStreamKey(n.id) : null
          ),
          { ignoreSenderPreference: C } = o.default.useExperiment(
            { location: "ActionBarClipsButton" },
            { autoTrackExposure: !1 }
          ),
          { viewerClippingAllowed: _, isAtMaxSavingClipOperations: I } = (0,
          s.useStateFromStoresObject)([r.default], () => ({
            viewerClippingAllowed:
              null != g &&
              (r.default.isViewerClippingAllowedForUser(g.ownerId) || C),
            isAtMaxSavingClipOperations:
              r.default.getIsAtMaxSaveClipOperations(),
          })),
          T = r.default.getSettings().clipsEnabled,
          v = (null == g ? void 0 : g.ownerId) === f.default.getId(),
          x = !T || !(v || _) || I || null == n,
          N = l.useCallback(
            e => (0, a.jsx)(i.CameraIcon, { ...e, color: "currentColor" }),
            []
          );
        return (0, a.jsx)(d.default, {
          className: E.actionBarButton,
          onClick: () => {
            !x && (v ? (0, u.saveClip)() : (0, u.saveClip)(n.id));
          },
          disabled: x,
          iconComponent: N,
          label:
            null == g
              ? p.default.Messages.CLIPS_VIEWERSIDE_BUTTON_FOCUS_TOOLTIP
              : v || _
                ? T
                  ? I
                    ? void 0
                    : p.default.Messages.CLIPS_SAVE
                  : p.default.Messages
                      .CLIPS_VIEWERSIDE_BUTTON_ENABLE_CLIPS_TOOLTIP
                : p.default.Messages.CLIPS_VIEWERSIDE_BUTTON_DISABLED_TOOLTIP,
          grow: !1,
        });
      }
    },
    888814: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("65597"),
        s = n("760679"),
        i = n("242260"),
        r = n("315841"),
        u = n("981913"),
        o = n("987772"),
        d = n("814711"),
        c = n("782340");
      function f() {
        let e = (0, l.default)([i.default], () => i.default.getDrawMode()),
          t = (null == e ? void 0 : e.type) === r.DrawableType.LINE,
          n = () => {
            t
              ? (0, s.setDrawMode)(null)
              : (0, s.setDrawMode)({ type: r.DrawableType.LINE });
          };
        return (0, a.jsx)(d.default, {
          renderPopout: () => null,
          children: e => {
            let { ...l } = e;
            return (0, a.jsx)(u.default, {
              ...l,
              label: c.default.Messages.SHARED_CANVAS_DRAW_MODE_LINE,
              isActive: t,
              iconComponent: o.default,
              onClick: n,
            });
          },
        });
      }
    },
    943917: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return m;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("65597"),
        s = n("760679"),
        i = n("242260"),
        r = n("315841"),
        u = n("124824"),
        o = n("981913"),
        d = n("258901"),
        c = n("472037"),
        f = n("814711"),
        h = n("782340");
      function m(e) {
        let { channel: t } = e,
          n = (0, l.default)([i.default], () => i.default.getDrawMode()),
          m = (null == n ? void 0 : n.type) === r.DrawableType.EMOJI_HOSE,
          p = (e, t) => {
            null != e
              ? (0, s.setDrawMode)({
                  type: r.DrawableType.EMOJI_HOSE,
                  emojiName: e.name,
                  emojiId: e.id,
                })
              : m && (0, s.setDrawMode)(null),
              null == t || t();
          };
        return (0, a.jsx)(f.default, {
          renderPopout: e => {
            let { closePopout: n, onFocus: l } = e;
            return (0, a.jsx)(u.default, {
              children: (0, a.jsx)(d.default, {
                title: h.default.Messages.SHARED_CANVAS_DRAW_MODE_EMOJI_HOSE,
                channel: t,
                closePopout: n,
                onFocus: l,
                onSelectEmoji: e => p(e, n),
              }),
            });
          },
          children: e =>
            (0, a.jsx)(o.default, {
              ...e,
              iconComponent: c.default,
              isActive: m || e.isActive,
              onClick: t => {
                p(null), e.onClick(t);
              },
            }),
        });
      }
    },
    380116: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("446674"),
        i = n("174727"),
        r = n("124824"),
        u = n("515496"),
        o = n("568088"),
        d = n("257407"),
        c = n("814711");
      function f(e) {
        let { channel: t } = e,
          n = (0, s.useStateFromStores)(
            [o.default],
            () => o.default.effectCooldownEndTime
          ),
          f = l.useMemo(
            () => (null != n ? (n.getTime() - Date.now()) / 1e3 : 0),
            [n]
          ),
          { seconds: h } = (0, i.default)(null != n ? n : new Date()),
          m = h > 0;
        return (0, a.jsx)(c.default, {
          renderPopout: e => {
            let { closePopout: n, onFocus: l } = e;
            return (0, a.jsx)(r.default, {
              children: (0, a.jsx)(d.default, {
                channel: t,
                closePopout: n,
                onFocus: l,
              }),
            });
          },
          children: e => {
            let { onMouseEnter: t, ...n } = e;
            return (0, a.jsx)(u.default, {
              totalCooldownSeconds: f,
              remainingCooldownSeconds: h,
              onMouseEnter: e => {
                var n, a;
                return (n = e), (a = t), void (!m && a(n));
              },
              ...n,
            });
          },
        });
      }
    },
    814711: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("77078"),
        i = n("788220"),
        r = n("894282"),
        u = n("960863");
      function o(e) {
        let {
          renderPopout: t,
          onMouseEnter: n,
          onMouseLeave: s,
          closePopout: i,
          isHovered: r,
          ...u
        } = e;
        return (
          l.useEffect(() => {
            !r && i();
          }, [i, r]),
          (0, a.jsx)("div", {
            onMouseEnter: n,
            onMouseLeave: s,
            children: t({ closePopout: i, ...u }),
          })
        );
      }
      function d(e) {
        let { renderPopout: t, children: n } = e,
          [d, c] = l.useState(!1),
          {
            isHovered: f,
            setIsHovered: h,
            onMouseEnter: m,
            onMouseLeave: p,
            cancelTimers: E,
          } = (0, i.default)(200, 300);
        function S(e) {
          "focus" !== e.type && !d && m();
        }
        function g() {
          !d && p();
        }
        function C(e) {
          E(), c(!d), (!f || d) && e();
        }
        let _ = f || d;
        return (0, a.jsx)(s.Popout, {
          shouldShow: _,
          animationPosition: "top",
          position: "top",
          align: "left",
          spacing: 16,
          onRequestClose: () => {
            h(!1), c(!1);
          },
          renderPopout: e =>
            (0, a.jsx)(o, {
              isHovered: _,
              onFocus: () => c(!0),
              onMouseEnter: m,
              onMouseLeave: g,
              renderPopout: t,
              ...e,
            }),
          children: e => {
            let { onClick: t, onKeyDown: l } = e;
            return (0, a.jsx)(a.Fragment, {
              children: n({
                onClick: e => C(() => t(e)),
                onKeyDown: e => {
                  var t, n;
                  return (
                    (t = e),
                    (n = l),
                    void (
                      (t.key === r.KeyboardKeysUpdated.ENTER ||
                        t.key === r.KeyboardKeysUpdated.SPACE) &&
                      C(() => n(t))
                    )
                  );
                },
                className: u.actionBarButton,
                onMouseEnter: S,
                onMouseLeave: g,
                isActive: _,
              }),
            });
          },
        });
      }
    },
    149882: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return g;
          },
        }),
        n("222007");
      var a = n("37983");
      n("884691");
      var l = n("65597"),
        s = n("151426"),
        i = n("272030"),
        r = n("235145"),
        u = n("78581"),
        o = n("429829"),
        d = n("191191"),
        c = n("244390"),
        f = n("124824"),
        h = n("981913"),
        m = n("42887"),
        p = n("754576"),
        E = n("814711"),
        S = n("782340");
      function g(e) {
        let { channel: t, themeable: g } = e,
          C = t.getGuildId(),
          { mute: _, suppress: I } = (0, c.default)(t),
          T = (0, l.default)([m.default], () => m.default.isDeaf()),
          v = _ || I || T,
          x = (0, u.useSoundBoardDismissContentTypes)({
            isSoundboardButtonDisabled: v,
          }),
          [N, A] = (0, r.useGetDismissibleContent)(x);
        function M(e) {
          null != C &&
            (0, i.openContextMenuLazy)(e, async () => {
              let { default: e } = await n
                .el("136137")
                .then(n.bind(n, "136137"));
              return t => (0, a.jsx)(e, { guildId: C, ...t });
            });
        }
        return (0, a.jsx)(E.default, {
          renderPopout: e => {
            let { closePopout: n } = e;
            return (0, a.jsx)(f.default, {
              children: (0, a.jsx)(d.default, {
                guildId: C,
                channel: t,
                onClose: n,
                gridNotice:
                  N === s.DismissibleContent.CUSTOM_CALL_SOUNDS_PICKER_UPSELL &&
                  (0, a.jsx)(o.CustomCallSoundUpsell, {
                    onClose: n,
                    markAsDismissed: A,
                  }),
                analyticsSource: "action bar button",
              }),
            });
          },
          children: e =>
            (0, a.jsx)(h.default, {
              themeable: g,
              label: (function () {
                if (_)
                  return S.default.Messages
                    .SOUNDBOARD_OPEN_SOUNDBOARD_ERROR_GUILD_MUTE;
                if (I)
                  return S.default.Messages
                    .SOUNDBOARD_OPEN_SOUNDBOARD_ERROR_SUPPRESSED;
                if (T)
                  return S.default.Messages
                    .SOUNDBOARD_OPEN_SOUNBOARRD_ERROR_DEAFENED;
              })(),
              iconComponent: p.default,
              disabled: v,
              onContextMenu: M,
              ...e,
            }),
        });
      }
    },
    568009: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("65597"),
        s = n("760679"),
        i = n("242260"),
        r = n("981913"),
        u = n("462579"),
        o = n("814711"),
        d = n("782340");
      function c() {
        let e = (0, l.default)(
          [i.default],
          () => !i.default.visibleOverlayCanvas
        );
        return (0, a.jsx)(o.default, {
          renderPopout: () => null,
          children: t => {
            let { ...n } = t;
            return (0, a.jsx)(r.default, {
              ...n,
              label: d.default.Messages.SHARED_CANVAS_HIDE_OVERLAY_DRAWINGS,
              isActive: e,
              iconComponent: u.default,
              onClick: s.toggleOverlayCanvas,
            });
          },
        });
      }
    },
    636150: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return v;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("627445"),
        s = n.n(l),
        i = n("446674"),
        r = n("18346"),
        u = n("261552"),
        o = n("103979"),
        d = n("780166"),
        c = n("245463"),
        f = n("42887"),
        h = n("697218"),
        m = n("991170"),
        p = n("456127"),
        E = n("888814"),
        S = n("943917"),
        g = n("380116"),
        C = n("149882"),
        _ = n("568009"),
        I = n("49111"),
        T = n("851691");
      function v(e) {
        let { channel: t, hasActiveStream: n, themeable: l = !1 } = e,
          v = (0, i.useStateFromStores)([h.default], () => {
            let e = h.default.getCurrentUser();
            return (
              s(
                null != e,
                "CenterControlTray: currentUser cannot be undefined"
              ),
              e
            );
          }),
          x = (0, u.default)(),
          { isSharedCanvasEnabled: N } = d.default.useExperiment({
            guildId: null == t ? void 0 : t.guild_id,
            location: "b7309a_1",
          }),
          { enableViewerClipping: A } = o.default.useExperiment(
            { location: "VoiceEffectsActionBar" },
            { autoTrackExposure: !1 }
          ),
          M = (0, r.default)(f.default);
        if (null == t || null != x) return null;
        let R = (0, c.default)(t),
          j = m.default.can({
            permission: I.Permissions.ADD_REACTIONS,
            user: v,
            context: t,
          });
        return (0, a.jsxs)("div", {
          className: T.voiceEffectsActionBar,
          children: [
            R && (0, a.jsx)(C.default, { channel: t, themeable: l }),
            j && (0, a.jsx)(g.default, { channel: t }),
            A && M && (0, a.jsx)(p.default, { channel: t }),
            N && n && (0, a.jsx)(E.default, {}),
            N && n && (0, a.jsx)(S.default, { channel: t }),
            N && n && (0, a.jsx)(_.default, {}),
          ],
        });
      }
    },
    533466: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return e9;
          },
        }),
        n("222007"),
        n("424973");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("627445"),
        u = n.n(r),
        o = n("917351"),
        d = n.n(o),
        c = n("90915"),
        f = n("446674"),
        h = n("151426"),
        m = n("551042"),
        p = n("77078"),
        E = n("272030"),
        S = n("942722"),
        g = n("561963"),
        C = n("264732"),
        _ = n("738073"),
        I = n("737960"),
        T = n("734575"),
        v = n("84339"),
        x = n("191225"),
        N = n("169920"),
        A = n("420444"),
        M = n("191145"),
        R = n("494286"),
        j = n("850391"),
        L = n("992207"),
        y = n("269936"),
        O = n("69927"),
        P = n("40635"),
        D = n("10641"),
        b = n("499520"),
        U = n("327432"),
        w = n("579425"),
        F = n("336804"),
        V = n("928265"),
        k = n("744568"),
        B = n("257869"),
        G = n("848848"),
        H = n("93252"),
        W = n("661455"),
        Y = n("230035"),
        z = n("155832"),
        K = n("353054"),
        Z = n("262956"),
        Q = n("723431"),
        X = n("977983"),
        q = n("539938"),
        J = n("557809"),
        $ = n("853189"),
        ee = n("718091"),
        et = n("922164"),
        en = n("391751"),
        ea = n("148205"),
        el = n("969103"),
        es = n("361572"),
        ei = n("267567"),
        er = n("23033"),
        eu = n("393414"),
        eo = n("144491"),
        ed = n("200745"),
        ec = n("56778"),
        ef = n("208021"),
        eh = n("582713"),
        em = n("716214"),
        ep = n("58343"),
        eE = n("445375"),
        eS = n("38861"),
        eg = n("31673"),
        eC = n("338273"),
        e_ = n("861570"),
        eI = n("970366"),
        eT = n("401642"),
        ev = n("514917"),
        ex = n("223170"),
        eN = n("59811"),
        eA = n("824135"),
        eM = n("982108"),
        eR = n("42203"),
        ej = n("474643"),
        eL = n("341542"),
        ey = n("247013"),
        eO = n("305961"),
        eP = n("824563"),
        eD = n("744983"),
        eb = n("18494"),
        eU = n("162771"),
        ew = n("697218"),
        eF = n("800762"),
        eV = n("980423"),
        ek = n("439932"),
        eB = n("679653"),
        eG = n("176347"),
        eH = n("665182"),
        eW = n("61918"),
        eY = n("656612"),
        ez = n("624027"),
        eK = n("49111"),
        eZ = n("272505"),
        eQ = n("99795"),
        eX = n("994428"),
        eq = n("237542"),
        eJ = n("837979"),
        e$ = n("782340"),
        e0 = n("250455");
      let e1 = (0, y.makeLazy)({
        createPromise: () => n.el("479273").then(n.bind(n, "479273")),
        webpackId: "479273",
        renderLoader: () =>
          (0, a.jsx)("div", {
            className: e0.loader,
            children: (0, a.jsx)(p.Spinner, {}),
          }),
        name: "ForumChannel",
      });
      class e2 extends l.PureComponent {
        componentDidMount() {
          (0, eI.trackAppUIViewed)("guild_channel");
        }
        componentDidUpdate(e) {
          null != this.props.channel &&
            null != e.channel &&
            this.props.channel.id !== e.channel.id &&
            this.state.topicExpanded &&
            this.setState({ topicExpanded: !1 }),
            this.openChannelModal();
        }
        openChannelContextMenu(e, t) {
          let { guild: l } = this.props;
          u(null != t, "Missing channel in Channel.openChannelContextMenu"),
            u(null != l, "Missing guild in Channel.openChannelContextMenu"),
            (0, E.openContextMenuLazy)(e, async () => {
              let { default: e } = await n
                .el("229233")
                .then(n.bind(n, "229233"));
              return n => (0, a.jsx)(e, { ...n, channel: t, guild: l });
            });
        }
        openThreadContextMenu(e, t) {
          u(null != t, "Missing channel in Channel.openChannelContextMenu"),
            (0, E.openContextMenuLazy)(e, async () => {
              let { default: e } = await n
                .el("994827")
                .then(n.bind(n, "994827"));
              return n => (0, a.jsx)(e, { ...n, channel: t });
            });
        }
        openDMContextMenu(e, t) {
          u(null != t, "Missing channel in Channel.openDMContextMenu");
          let l = ew.default.getUser(t.getRecipientId());
          u(null != l, "Missing user in Channel.openDMContextMenu"),
            (0, E.openContextMenuLazy)(e, async () => {
              let { default: e } = await n
                .el("130074")
                .then(n.bind(n, "130074"));
              return n =>
                (0, a.jsx)(e, {
                  ...n,
                  user: l,
                  channelSelected: !0,
                  channel: t,
                });
            });
        }
        renderCall() {
          let {
            channel: e,
            showCall: t,
            nsfwAllowed: n,
            nsfwAgree: l,
          } = this.props;
          if (
            (u(null != e, "Missing channel in Channel.renderCall"),
            ((null == e ? void 0 : e.isNSFW()) && (!n || !l)) || !t)
          )
            return null;
          switch (e.type) {
            case eK.ChannelTypes.GUILD_STAGE_VOICE:
              return (0, a.jsx)(ep.default, { channel: e }, e.id);
            case eK.ChannelTypes.GUILD_VOICE:
            case eK.ChannelTypes.DM:
            case eK.ChannelTypes.GROUP_DM:
            case eK.ChannelTypes.PUBLIC_THREAD:
            case eK.ChannelTypes.PRIVATE_THREAD:
              let s = this.props.height - 200;
              return (0, a.jsx)(
                R.default,
                {
                  channel: e,
                  renderExternalHeader: this.renderHeaderBar,
                  maxHeight: s,
                },
                "call-".concat(e.id)
              );
            default:
              return null;
          }
        }
        renderEmbeddedActivityPanel() {
          let e = this.props.height - 200;
          return (0, a.jsx)(N.default, {
            maxHeight: e,
            renderExternalHeader: this.renderHeaderBar,
          });
        }
        renderChat() {
          let {
            channel: e,
            nsfwAgree: t,
            guild: n,
            nsfwAllowed: l,
            needSubscriptionToAccess: s,
          } = this.props;
          if ((u(null != e, "Missing channel in Channel.renderChat"), s))
            return (u(null != n, "premium channels must exist within a guild"),
            null == e ? void 0 : e.isRoleSubscriptionTemplatePreviewChannel())
              ? (0, a.jsx)(H.default, { guildId: n.id })
              : (0, a.jsx)(B.GroupListingsFetchContextProvider, {
                  guildId: n.id,
                  children: (0, a.jsx)(W.default, {
                    channelId: e.id,
                    guildId: n.id,
                  }),
                });
          if (e.isNSFW() && (!l || !t))
            return (0, a.jsx)(_.default, { guild: n });
          if (e.isGuildVocal()) return null;
          if (e.isDirectory())
            return (
              u(null != n, "directory channels must exist within a guild"),
              (0, a.jsx)(P.default, { channel: e, guild: n })
            );
          if (e.isForumLikeChannel()) {
            u(null != n, "forum channels must exist within a guild");
            let t = {
              isThreadSidebarFloating: this.state.isThreadSidebarFloating,
              threadSidebarWidth: this.state.threadSidebarWidth,
            };
            return (0, a.jsx)(
              e1,
              { channel: e, guild: n, sidebarState: t },
              e.id
            );
          }
          return (0, a.jsx)(
            eG.default,
            { channel: e, guild: n, chatInputType: j.ChatInputTypes.NORMAL },
            null != n ? n.id : "home"
          );
        }
        renderSidebar() {
          let {
            searchId: e,
            channel: t,
            parentChannel: n,
            guild: l,
            needSubscriptionToAccess: s,
            section: i,
            showCall: r,
          } = this.props;
          if (
            (u(null != t, "Missing channel in Channel.renderSidebar"),
            __OVERLAY__ || s)
          );
          else if (i === eK.ChannelSections.PROFILE && t.isPrivate())
            return (0, a.jsx)(
              ev.default,
              { channel: t, showCall: r },
              "private-channel-profile-".concat(t.id)
            );
          else if (i === eK.ChannelSections.MEMBERS)
            switch (t.type) {
              case eK.ChannelTypes.GROUP_DM:
                return (0, a.jsx)(
                  S.default,
                  { channel: t },
                  "private-channel-recipients-".concat(t.id)
                );
              case eK.ChannelTypes.GUILD_DIRECTORY:
              case eK.ChannelTypes.GUILD_FORUM:
              case eK.ChannelTypes.GUILD_MEDIA:
              case eK.ChannelTypes.GUILD_ANNOUNCEMENT:
              case eK.ChannelTypes.GUILD_TEXT:
                var o;
                if (null != l && l.hasFeature(eK.GuildFeatures.CLAN))
                  return (0, a.jsx)(
                    w.default,
                    { guildId: l.id, channel: t },
                    "clan-sidebar-".concat(t.id)
                  );
                let d =
                  !0 === eK.ChannelTypesSets.GUILD_THREADS_ONLY.has(t.type)
                    ? t.id
                    : null !== (o = t.guild_id) && void 0 !== o
                      ? o
                      : t.id;
                return (0, a.jsx)(
                  eW.default,
                  { channel: t },
                  "channel-members-".concat(d)
                );
              case eK.ChannelTypes.ANNOUNCEMENT_THREAD:
                if (null != n)
                  return (0, a.jsx)(
                    eW.default,
                    { channel: n },
                    "channel-members-".concat(n.id)
                  );
                break;
              case eK.ChannelTypes.PUBLIC_THREAD:
              case eK.ChannelTypes.PRIVATE_THREAD:
                if (!t.isArchivedThread() && null != l)
                  return (0, a.jsx)(
                    g.default,
                    { channel: t, guild: l },
                    "channel-members-".concat(t.id)
                  );
            }
          else if (i === eK.ChannelSections.SEARCH && null != e)
            return (0, a.jsx)(ec.default, { searchId: e });
          return null;
        }
        openChannelModal() {
          let {
            channel: e,
            guildId: t,
            hasModalOpen: l,
            showWelcomeModal: s,
            isLurking: i,
            isUnavailable: r,
            showRealNameModal: u,
          } = this.props;
          return null == e || null == t || r || l
            ? null
            : (u &&
                (0, p.openModalLazy)(
                  async () => {
                    let { default: e } = await n
                      .el("278999")
                      .then(n.bind(n, "278999"));
                    return n => (0, a.jsx)(e, { ...n, guildId: t });
                  },
                  {
                    onCloseCallback: () =>
                      V.default.viewPrompt(eq.GuildPrompts.REAL_NAME_PROMPT, t),
                    modalKey: "Guild Hub Real Name Modal",
                  }
                ),
              s &&
                (0, p.openModalLazy)(
                  async () => {
                    let { default: e } = await n
                      .el("900257")
                      .then(n.bind(n, "900257"));
                    return n => (0, a.jsx)(e, { ...n, guildId: t });
                  },
                  {
                    onCloseCallback: () => (0, ex.welcomeScreenViewed)(t, i),
                    modalKey: "Guild Welcome Screen Modal",
                  }
                ),
              null);
        }
        renderThreadSidebar() {
          let e;
          let {
            channel: t,
            section: n,
            channelSidebarState: l,
            guildSidebarState: s,
            nsfwAgree: i,
            nsfwAllowed: r,
            width: u,
          } = this.props;
          if (null == s && null == l) return null;
          if (n === eK.ChannelSections.SIDEBAR_CHAT && null != l) {
            if ((null == t ? void 0 : t.isNSFW()) && (!r || !i)) return null;
            switch (l.type) {
              case eh.SidebarType.CREATE_THREAD:
                if (null == t ? void 0 : t.isForumLikeChannel()) return null;
                e = (0, a.jsx)(eE.default, {
                  parentChannelId: l.parentChannelId,
                  parentMessageId: l.parentMessageId,
                  location: l.location,
                });
                break;
              case eh.SidebarType.VIEW_THREAD:
                let n = (null == t ? void 0 : t.isForumLikeChannel())
                  ? U.default
                  : e_.default;
                e = (0, a.jsx)(n, { channelId: l.channelId });
                break;
              case eh.SidebarType.VIEW_CHANNEL:
              case eh.SidebarType.VIEW_MESSAGE_REQUEST:
              default:
                return null;
            }
          }
          if (null != s && null == e) {
            if (s.type === eh.GuildSidebarType.GUILD_MEMBER_MOD_VIEW) {
              let { guildId: e, userId: t } = s.details;
              return (0, a.jsx)("div", {
                style: { width: eK.DEFAULT_CHAT_SIDEBAR_WIDTH },
                children: (0, a.jsx)(k.default, {
                  guildId: e,
                  userId: t,
                  onClose: () => ef.default.closeGuildSidebar(e),
                }),
              });
            } else return null;
          }
          if (null == e) return null;
          let o =
              (null == t ? void 0 : t.type) != null &&
              eK.ChannelTypesSets.GUILD_THREADS_ONLY.has(t.type)
                ? 528
                : 450,
            d = u - eK.CHANNEL_SIDEBAR_WIDTH - o;
          return (0, a.jsx)(eH.default, {
            sidebarType:
              (null == t ? void 0 : t.type) != null &&
              eK.ChannelTypesSets.GUILD_THREADS_ONLY.has(t.type)
                ? eH.ChatSidebarType.PostSidebar
                : eH.ChatSidebarType.ThreadSidebar,
            maxWidth: d,
            onWidthChange: this.handleThreadSidebarResize,
            children: e,
          });
        }
        render() {
          let {
              channel: e,
              guild: t,
              formattedChannelName: n,
              showCall: l,
              isUnavailable: s,
              layout: r,
              section: u,
              hasModalOpen: o,
              guildSidebarState: d,
            } = this.props,
            { threadSidebarWidth: c, isThreadSidebarFloating: f } = this.state;
          if (s) return (0, a.jsx)(eY.default, {});
          if (null == e)
            return (0, a.jsx)(ez.default, { channelId: this.props.channelId });
          let h = u === eK.ChannelSections.SIDEBAR_CHAT,
            m = null != d && !h,
            p = !e.isForumLikeChannel() && !o,
            E = null == t ? void 0 : t.name;
          return (0, a.jsxs)(a.Fragment, {
            children: [
              (0, a.jsx)(O.AppPageTitle, {
                location: E,
                subsection: null != n ? n : void 0,
              }),
              (0, a.jsxs)("div", {
                className: i(e0.chat, {
                  [e0.threadSidebarOpen]: h || m,
                  [e0.threadSidebarFloating]: h && f,
                }),
                children: [
                  p
                    ? (0, a.jsx)(C.default, {
                        style: { right: h ? c : void 0 },
                        className: e0.uploadArea,
                        channel: e,
                        draftType: ej.DraftType.ChannelMessage,
                      })
                    : null,
                  l ? null : this.renderHeaderBar(),
                  this.renderCall(),
                  this.renderEmbeddedActivityPanel(),
                  (0, a.jsxs)("div", {
                    className: i(e0.content, {
                      [e0.noChat]: r === eK.ChannelLayouts.NO_CHAT,
                    }),
                    children: [this.renderChat(), this.renderSidebar()],
                  }),
                ],
              }),
              this.renderThreadSidebar(),
              (0, a.jsx)(Y.default, {}),
            ],
          });
        }
        constructor(...e) {
          super(...e),
            (this.state = {
              topicExpanded: !1,
              threadSidebarWidth: void 0,
              isThreadSidebarFloating: !1,
            }),
            (this.handleTitleParentClick = () => {
              let { parentChannel: e } = this.props;
              null != e && (0, eo.transitionToChannel)(e.id);
            }),
            (this._handleContextMenu = (e, t) => {
              switch (t.type) {
                case eK.ChannelTypes.GUILD_VOICE:
                case eK.ChannelTypes.GUILD_ANNOUNCEMENT:
                case eK.ChannelTypes.GUILD_TEXT:
                case eK.ChannelTypes.GUILD_FORUM:
                case eK.ChannelTypes.GUILD_MEDIA:
                  this.openChannelContextMenu(e, t);
                  break;
                case eK.ChannelTypes.ANNOUNCEMENT_THREAD:
                case eK.ChannelTypes.PUBLIC_THREAD:
                case eK.ChannelTypes.PRIVATE_THREAD:
                  this.openThreadContextMenu(e, t);
                  break;
                case eK.ChannelTypes.DM:
                  this.openDMContextMenu(e, t);
              }
            }),
            (this.handleContextMenu = e => {
              u(
                null != this.props.channel,
                "Missing channel in Channel.handleContextMenu"
              ),
                this._handleContextMenu(e, this.props.channel);
            }),
            (this.handleParentContextMenu = e => {
              u(
                null != this.props.parentChannel,
                "Missing parentChannel in Channel.handleParentContextMenu"
              ),
                this._handleContextMenu(e, this.props.parentChannel);
            }),
            (this.handleThreadSidebarResize = (e, t) => {
              this.setState({
                threadSidebarWidth: e,
                isThreadSidebarFloating: t,
              });
            }),
            (this.openUserProfile = () => {
              let { channel: e } = this.props;
              u(
                null == e ? void 0 : e.isPrivate(),
                "Missing private channel in Channel.openUserProfile"
              ),
                (0, eT.openUserProfileModal)({
                  userId: e.getRecipientId(),
                  guildId: e.guild_id,
                  channelId: e.id,
                  analyticsLocation: {
                    section: eK.AnalyticsSections.CHANNEL_HEADER,
                  },
                });
            }),
            (this.renderClipsEnabledIndicatorToolbarItem = () => {
              let { inCall: e, voiceChannel: t } = this.props;
              return e
                ? (0, a.jsx)(L.default, { channelId: null != t ? t.id : null })
                : null;
            }),
            (this.renderStreamQualityLiveIndicatorToolbarItem = () => {
              let { selectedParticipant: e } = this.props;
              return (null == e ? void 0 : e.type) !==
                eQ.ParticipantTypes.STREAM
                ? null
                : (0, a.jsx)(
                    F.default,
                    {
                      size: eV.default.Sizes.LARGE,
                      participant: e,
                      showQuality: !0,
                    },
                    "live-indicator"
                  );
            }),
            (this.renderHeaderToolbar = () => {
              let {
                channel: e,
                parentChannel: t,
                isLurking: n,
                showCall: l,
              } = this.props;
              u(null != e, "Missing channel in Channel.renderHeaderToolbar");
              let s = [];
              if (e.isSystemDM()) return s;
              switch (e.type) {
                case eK.ChannelTypes.GUILD_STAGE_VOICE:
                case eK.ChannelTypes.GUILD_VOICE:
                  break;
                case eK.ChannelTypes.DM:
                  s.push(this.renderClipsEnabledIndicatorToolbarItem()),
                    s.push(this.renderStreamQualityLiveIndicatorToolbarItem()),
                    s.push((0, a.jsx)($.default, { channel: e }, "calls")),
                    s.push((0, a.jsx)(Z.default, { channel: e }, "pins")),
                    s.push(
                      (0, a.jsx)(
                        ee.default,
                        {
                          channel: e,
                          tooltip: e$.default.Messages.GROUP_DM_ADD_FRIENDS,
                        },
                        "invite"
                      )
                    ),
                    s.push(
                      (0, a.jsx)(
                        et.default,
                        { channel: e, showCall: l },
                        "profile"
                      )
                    ),
                    s.push(
                      (0, a.jsx)(en.default, { channel: e }, "safety_tools")
                    );
                  break;
                case eK.ChannelTypes.GROUP_DM:
                  if (
                    (s.push(this.renderClipsEnabledIndicatorToolbarItem()),
                    s.push(this.renderStreamQualityLiveIndicatorToolbarItem()),
                    s.push((0, a.jsx)($.default, { channel: e }, "calls")),
                    s.push((0, a.jsx)(Z.default, { channel: e }, "pins")),
                    !e.isManaged())
                  ) {
                    let t = e$.default.Messages.GROUP_DM_ADD_FRIENDS;
                    s.push(
                      (0, a.jsx)(
                        ee.default,
                        { channel: e, tooltip: t },
                        "invite"
                      )
                    );
                  }
                  s.push((0, a.jsx)(z.default, { channelId: e.id }, "members"));
                  break;
                case eK.ChannelTypes.ANNOUNCEMENT_THREAD:
                case eK.ChannelTypes.PRIVATE_THREAD:
                case eK.ChannelTypes.PUBLIC_THREAD:
                  null != t &&
                    !t.isForumLikeChannel() &&
                    s.push((0, a.jsx)(eS.default, { channel: t }, "browser")),
                    e.isVocalThread() &&
                      s.push(
                        (0, a.jsx)(ea.default, { channel: e }, "thread-call")
                      ),
                    s.push(
                      (0, a.jsx)(eg.default, { channel: e }, "notifications")
                    ),
                    s.push((0, a.jsx)(Z.default, { channel: e }, "pins")),
                    !e.isArchivedThread() &&
                      s.push(
                        (0, a.jsx)(z.default, { channelId: e.id }, "members")
                      ),
                    null != t &&
                      (0, T.canSeeChannelSummaries)(e) &&
                      s.push(
                        (0, a.jsx)(Q.default, { channel: e }, "summaries")
                      ),
                    s.push(
                      (0, a.jsx)(eC.default, { channel: e }, "threads-overflow")
                    );
                  break;
                case eK.ChannelTypes.GUILD_ANNOUNCEMENT:
                case eK.ChannelTypes.GUILD_TEXT:
                  s.push((0, a.jsx)(b.default, { channel: e }, "favorites")),
                    s.push((0, a.jsx)(eS.default, { channel: e }, "browser")),
                    !n &&
                      s.push(
                        (0, a.jsx)(K.default, { channel: e }, "notifications")
                      ),
                    s.push((0, a.jsx)(Z.default, { channel: e }, "pins")),
                    s.push(
                      (0, a.jsx)(z.default, { channelId: e.id }, "members")
                    ),
                    (0, T.canSeeChannelSummaries)(e) &&
                      s.push(
                        (0, a.jsx)(Q.default, { channel: e }, "summaries")
                      );
                  break;
                case eK.ChannelTypes.GUILD_FORUM:
                case eK.ChannelTypes.GUILD_MEDIA:
                  !n &&
                    (s.push(
                      (0, a.jsx)(X.default, { channel: e }, "forum-onboarding")
                    ),
                    s.push(
                      (0, a.jsx)(K.default, { channel: e }, "notifications")
                    )),
                    !__OVERLAY__ &&
                      s.push(
                        (0, a.jsx)(z.default, { channelId: e.id }, "members")
                      );
                  break;
                case eK.ChannelTypes.GUILD_DIRECTORY:
                  s.push((0, a.jsx)(z.default, { channelId: e.id }, "members"));
              }
              return s;
            }),
            (this.renderMobileToolbar = () => {
              let { channel: e } = this.props;
              u(null != e, "Missing channel in Channel.renderHeaderToolbar");
              let t = [];
              if (e.isSystemDM()) return t;
              switch (e.type) {
                case eK.ChannelTypes.GUILD_STAGE_VOICE:
                case eK.ChannelTypes.GUILD_VOICE:
                case eK.ChannelTypes.DM:
                  break;
                case eK.ChannelTypes.GROUP_DM:
                  t.push((0, a.jsx)(z.default, { channelId: e.id }, "members"));
                  break;
                case eK.ChannelTypes.ANNOUNCEMENT_THREAD:
                case eK.ChannelTypes.PRIVATE_THREAD:
                case eK.ChannelTypes.PUBLIC_THREAD:
                  !e.isArchivedThread() &&
                    t.push(
                      (0, a.jsx)(z.default, { channelId: e.id }, "members")
                    );
                  break;
                case eK.ChannelTypes.GUILD_ANNOUNCEMENT:
                case eK.ChannelTypes.GUILD_TEXT:
                case eK.ChannelTypes.GUILD_FORUM:
                case eK.ChannelTypes.GUILD_MEDIA:
                case eK.ChannelTypes.GUILD_DIRECTORY:
                  t.push((0, a.jsx)(z.default, { channelId: e.id }, "members"));
              }
              return t;
            }),
            (this.renderFollowButton = () => {
              let { showFollowButton: e, channel: t } = this.props;
              return e
                ? (0, a.jsx)(p.Button, {
                    size: p.Button.Sizes.MIN,
                    color: p.Button.Colors.PRIMARY,
                    className: e0.followButton,
                    onClick: () =>
                      (0, p.openModalLazy)(async () => {
                        let { default: e } = await n
                          .el("996177")
                          .then(n.bind(n, "996177"));
                        return n => (0, a.jsx)(e, { channel: t, ...n });
                      }),
                    children: e$.default.Messages.FOLLOW,
                  })
                : null;
            }),
            (this.renderHeaderBar = () => {
              let {
                channel: e,
                channelName: t,
                parentChannel: n,
                guild: l,
                guildId: s,
                showCall: r,
                hasVideo: o,
                headerGuildBreadcrumbPosition: d,
                isFavorites: c,
              } = this.props;
              u(null != e, "Missing channel in Channel.renderHeaderBar"),
                u(null != t, "Should not be null if channel is not null.");
              let f =
                  e.isDM() && !e.isSystemDM() ? this.openUserProfile : void 0,
                h =
                  (null == n ? void 0 : n.guild_id) != null &&
                  (null == n ? void 0 : n.id) != null
                    ? this.handleTitleParentClick
                    : void 0;
              return (0, a.jsxs)("div", {
                className: e0.subtitleContainer,
                children: [
                  (0, a.jsxs)(
                    q.default,
                    {
                      guildId: s,
                      channelId: e.id,
                      channelType: e.type,
                      hideSearch:
                        e.isDirectory() ||
                        (c && !(0, ed.isFavoriteSearchEnabled)()),
                      showDivider: c && !(0, ed.isFavoriteSearchEnabled)(),
                      toolbar: this.renderHeaderToolbar(),
                      mobileToolbar: this.renderMobileToolbar(),
                      className: i(
                        e0.title,
                        o && r
                          ? (0, ek.getThemeClass)(eK.ThemeTypes.DARK)
                          : null
                      ),
                      transparent: r,
                      "aria-label":
                        e$.default.Messages.CHANNEL_HEADER_BAR_A11Y_LABEL,
                      children: [
                        "left" === d &&
                          (0, a.jsx)(J.HeaderGuildBreadcrumb, {
                            channel: e,
                            guild: l,
                            caretPosition: "right",
                          }),
                        (0, J.renderTitle)({
                          channel: e,
                          channelName: t,
                          parentChannel: n,
                          guild: l,
                          hasVideo: o,
                          handleContextMenu: this.handleContextMenu,
                          handleParentContextMenu: this.handleParentContextMenu,
                          handleClick: f,
                          handleParentClick: h,
                          renderFollowButton: this.renderFollowButton,
                        }),
                        "right" === d &&
                          (0, a.jsx)(J.HeaderGuildBreadcrumb, {
                            channel: e,
                            guild: l,
                            caretPosition: "left",
                          }),
                        (0, J.renderTopic)(e, l),
                      ],
                    },
                    "header-".concat(e.id)
                  ),
                  (0, a.jsx)(er.default, { channelId: e.id }),
                ],
              });
            });
        }
      }
      let e4 = (0, I.default)(e2);
      var e9 = l.memo(function (e) {
        var t;
        let { providedChannel: n } = e,
          [s, i] = l.useState(null),
          r = (0, f.useStateFromStores)([eb.default], () =>
            eb.default.getChannelId()
          ),
          u = (0, f.useStateFromStores)([eb.default], () =>
            eb.default.getVoiceChannelId()
          ),
          o = (0, f.useStateFromStores)(
            [eR.default],
            () => (null != n ? n : eR.default.getChannel(r)),
            [r, n]
          ),
          p = (0, f.useStateFromStores)(
            [eR.default],
            () => eR.default.getChannel(u),
            [u]
          ),
          E = null == o ? void 0 : o.parent_id,
          S = (0, f.useStateFromStores)(
            [eR.default],
            () => eR.default.getChannel(E),
            [E]
          ),
          g = (0, f.useStateFromStores)(
            [eO.default],
            () => eO.default.getGuild(null == o ? void 0 : o.guild_id),
            [o]
          ),
          { needSubscriptionToAccess: C } = (0, G.default)(
            null !== (t = null == o ? void 0 : o.id) && void 0 !== t
              ? t
              : void 0
          ),
          _ = (0, f.useStateFromStores)(
            [M.default],
            () => {
              let e = null != r ? M.default.getParticipants(r) : [],
                t = null != r ? M.default.getActivityParticipants(r) : [];
              return e.length - t.length > 0;
            },
            [r]
          ),
          I = (0, f.useStateFromStores)([x.default], () => {
            var e;
            return x.default.getSelfEmbeddedActivityForChannel(
              null !== (e = null == o ? void 0 : o.id) && void 0 !== e
                ? e
                : eK.EMPTY_STRING_SNOWFLAKE_ID
            );
          }),
          N = (0, f.useStateFromStores)([x.default], () =>
            x.default.getActivityPanelMode()
          ),
          R =
            null != I &&
            !(0, A.default)(null == o ? void 0 : o.id) &&
            N === eZ.ActivityPanelModes.PANEL,
          j = (0, f.useStateFromStores)(
            [eF.default],
            () =>
              null != o &&
              o.isVocalThread() &&
              !d.isEmpty(eF.default.getVoiceStatesForChannel(o.id)),
            [o]
          ),
          L = (null == o ? void 0 : o.isGuildVocal()) || R || _ || j,
          { welcomeModalChannelId: y } = (0, c.useLocation)(),
          O = (0, f.useStateFromStores)(
            [ei.default],
            () => null != o && ei.default.isLurking(o.guild_id),
            [o]
          ),
          P = (0, f.useStateFromStores)(
            [eN.default],
            () => eN.default.hasSeen(null == o ? void 0 : o.guild_id, O),
            [o, O]
          ),
          b = (0, f.useStateFromStores)(
            [M.default, x.default],
            () =>
              null != x.default.getConnectedActivityChannelId() &&
              x.default.getActivityPanelMode() === eZ.ActivityPanelModes.PANEL
                ? x.default.getFocusedLayout() ===
                  eZ.FocusedActivityLayouts.NO_CHAT
                  ? eK.ChannelLayouts.NO_CHAT
                  : eK.ChannelLayouts.NORMAL
                : null != r
                  ? M.default.getLayout(r)
                  : eK.ChannelLayouts.NORMAL,
            [r]
          ),
          U = (0, f.useStateFromStores)([M.default], () =>
            null != o ? M.default.getSelectedParticipant(o.id) : null
          ),
          w = (0, f.useStateFromStores)([ew.default], () =>
            ew.default.getCurrentUser()
          ),
          F = (0, el.default)(g),
          V = (0, eA.default)(y, null == g ? void 0 : g.id),
          { section: k, channelSidebarState: B } = (0,
          f.useStateFromStoresObject)(
            [eM.default],
            () => ({
              section: eM.default.getSection(r, null == o ? void 0 : o.isDM()),
              channelSidebarState: eM.default.getSidebarState(r),
            }),
            [r, o]
          ),
          H = null == g ? void 0 : g.id,
          W = (0, f.useStateFromStores)(
            [eM.default],
            () => eM.default.getGuildSidebarState(H),
            [H]
          ),
          Y = (0, f.useStateFromStores)([eU.default], () =>
            eU.default.getGuildId()
          ),
          z = Y === eK.FAVORITES,
          K = (0, eB.default)(o),
          Z = (0, eB.default)(o, !0),
          Q = null != o && u === o.id,
          X = null != o && o.isGuildStageVoice();
        l.useEffect(() => {
          var e, t, n;
          let a = (0, eu.getHistory)();
          if (
            (null == a
              ? void 0
              : null === (e = a.location) || void 0 === e
                ? void 0
                : e.state) === eJ.STAGE_INVITE_STATE_KEY
          ) {
            let { channelId: e } =
              null !==
                (n = (0, es.tryParseChannelPath)(
                  null == a
                    ? void 0
                    : null === (t = a.location) || void 0 === t
                      ? void 0
                      : t.pathname
                )) && void 0 !== n
                ? n
                : {};
            null != e && i(e);
          }
        }, []),
          l.useEffect(() => {
            null != s &&
              null != o &&
              X &&
              o.id === s &&
              !Q &&
              ((0, em.connectAndOpen)(o), i(null));
          }, [s, X]);
        let q = (0, T.useChannelSummariesExperiment)(o),
          J = null != o && o.isPrivate(),
          $ = (0, v.default)(J),
          ee = (0, v.default)(null == o ? void 0 : o.id);
        l.useEffect(() => {
          let e = $ && !J,
            t = $ && J && (null == o ? void 0 : o.id) !== ee;
          (e || t) &&
            (0, D.markDismissibleContentAsDismissed)(
              h.DismissibleContent.ACTIVITY_GDM_CALL_TOOLTIP,
              { dismissAction: eX.ContentDismissActionType.AUTO }
            );
        }, [null == o ? void 0 : o.id, ee, J, $]);
        let et = (0, m.useHasAnyModalOpen)();
        return (0, a.jsx)(e4, {
          guildId: null == o ? void 0 : o.guild_id,
          channelId: r,
          channel: o,
          channelName: K,
          formattedChannelName: Z,
          parentChannel: S,
          voiceChannel: p,
          layout: b,
          needSubscriptionToAccess: C,
          isLurking: O,
          hasModalOpen: et,
          section: k,
          channelSidebarState: B,
          guildSidebarState: W,
          guild: g,
          searchId: (0, f.useStateFromStores)([eD.default], () =>
            eD.default.getCurrentSearchId()
          ),
          showCall: !C && L,
          nsfwAgree: (0, f.useStateFromStores)([ey.default], () =>
            ey.default.didAgree(null == o ? void 0 : o.guild_id)
          ),
          isMobile: (0, f.useStateFromStores)(
            [eP.default],
            () =>
              (null == o ? void 0 : o.type) === eK.ChannelTypes.DM &&
              eP.default.isMobileOnline(o.getRecipientId()),
            [o]
          ),
          isUnavailable: (0, f.useStateFromStores)(
            [eL.default],
            () =>
              (null == o ? void 0 : o.guild_id) != null &&
              eL.default.isUnavailable(o.guild_id),
            [o]
          ),
          showRealNameModal: F,
          showWelcomeModal: !P && V,
          showFollowButton:
            ((null == o ? void 0 : o.type) ===
              eK.ChannelTypes.GUILD_ANNOUNCEMENT &&
              (null == g ? void 0 : g.hasFeature(eK.GuildFeatures.NEWS))) ||
            !1,
          ...(0, f.useStateFromStoresObject)(
            [eF.default],
            () => ({ hasVideo: null != o && eF.default.hasVideo(o.id) }),
            [o]
          ),
          inCall: Q,
          selectedParticipant: U,
          nsfwAllowed: (null == w ? void 0 : w.nsfwAllowed) === !0,
          showChannelSummaries: q,
          isFavorites: z,
          headerGuildBreadcrumbPosition: z ? "left" : "right",
        });
      });
    },
    61918: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return J;
          },
        }),
        n("222007"),
        n("808653");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("917351"),
        u = n.n(r),
        o = n("974667"),
        d = n("394846"),
        c = n("446674"),
        f = n("233736"),
        h = n("77078"),
        m = n("272030"),
        p = n("666020"),
        E = n("352674"),
        S = n("888503"),
        g = n("206230"),
        C = n("716241"),
        _ = n("86097"),
        I = n("29319"),
        T = n("346967"),
        v = n("653319"),
        x = n("95039"),
        N = n("405645"),
        A = n("12896"),
        M = n("506885"),
        R = n("981601"),
        j = n("19766"),
        L = n("305961"),
        y = n("191542"),
        O = n("697218"),
        P = n("476765"),
        D = n("826684"),
        b = n("483093"),
        U = n("659500"),
        w = n("449008"),
        F = n("158998"),
        V = n("50885"),
        k = n("49111"),
        B = n("782340"),
        G = n("559571");
      let H = V.default.getEnableHardwareAcceleration(),
        W = 44 + S.AVATAR_DECORATION_PADDING,
        Y = {
          origin: { x: 38, y: 11 },
          targetWidth: 232,
          targetHeight: 40,
          offset: { x: 0, y: 0 },
        };
      class z extends l.Component {
        shouldComponentUpdate(e) {
          return !(0, f.default)(this.props, e, ["channelId"]);
        }
        render() {
          let {
              colorString: e,
              colorRoleName: t,
              isOwner: n,
              nick: l,
              user: s,
              currentUser: i,
              activities: r,
              applicationStream: u,
              status: o,
              channel: c,
              guildId: f,
              isTyping: m,
              isMobileOnline: p,
              premiumSince: E,
              ...g
            } = this.props,
            C = null != E ? new Date(E) : null;
          return (0, a.jsx)(h.Popout, {
            preload: () =>
              (0, M.default)(s.id, s.getAvatarURL(f, 80), {
                guildId: f,
                channelId: c.id,
              }),
            renderPopout: this.renderUserPopout,
            position: d.isMobile ? "window_center" : "left",
            spacing: 16,
            onShiftClick: this.handleShiftClick,
            children: (d, h) => {
              let { isShown: E } = h;
              return (0, a.jsx)(S.default, {
                className: G.member,
                onContextMenu: this.renderUserContextMenu,
                shouldAnimateStatus: H,
                user: s,
                currentUser: i,
                nick: l,
                status: o,
                activities: r,
                applicationStream: u,
                isOwner: n,
                premiumSince: C,
                colorString: e,
                colorRoleName: t,
                isTyping: m,
                channel: c,
                guildId: f,
                isMobile: p,
                onClickPremiumGuildIcon: this.openGuildSubscriptionModal,
                selected: E,
                itemProps: g,
                ...d,
              });
            },
          });
        }
        constructor(...e) {
          super(...e),
            (this.renderUserContextMenu = e => {
              (0, m.openContextMenuLazy)(e, async () => {
                let { default: e } = await n
                  .el("834247")
                  .then(n.bind(n, "834247"));
                return t =>
                  (0, a.jsx)(e, {
                    ...t,
                    user: this.props.user,
                    guildId: this.props.guildId,
                    channel: this.props.channel,
                    showMediaItems: !0,
                  });
              });
            }),
            (this.handleShiftClick = () => {
              let { user: e, channel: t } = this.props,
                n = "@".concat(
                  F.default.getUserTag(e, { decoration: "never" })
                ),
                a = "<@".concat(e.id, ">");
              U.ComponentDispatch.dispatchToLastSubscribed(
                k.ComponentActions.INSERT_TEXT,
                { plainText: n, rawText: a }
              ),
                E.default.startTyping(t.id);
            }),
            (this.openGuildSubscriptionModal = e => {
              let { guildId: t } = this.props;
              null != t &&
                (e.stopPropagation(),
                (0, x.openGuildBoostingMarketingModal)({
                  guildId: t,
                  location: {
                    section: k.AnalyticsSections.MEMBER_LIST,
                    object: k.AnalyticsObjects.BOOST_GEM_ICON,
                  },
                }));
            }),
            (this.renderUserPopout = e =>
              (0, a.jsx)(R.default, {
                ...e,
                userId: this.props.user.id,
                guildId: this.props.guildId,
                channelId: this.props.channel.id,
                analyticsParams: {
                  location: {
                    page: k.AnalyticsPages.GUILD_CHANNEL,
                    section: k.AnalyticsSections.MEMBER_LIST,
                  },
                },
              }));
        }
      }
      let K = l.memo(e => {
          let { colorRoleId: t, ...n } = e,
            { channel: l, user: s, index: i } = e,
            r = (0, o.useListItem)("".concat(i)),
            u = (0, c.useStateFromStores)([y.default], () =>
              y.default.isTyping(l.id, s.id)
            ),
            d = (0, c.useStateFromStores)([O.default], () =>
              O.default.getCurrentUser()
            ),
            f = (0, c.useStateFromStores)(
              [L.default],
              () => {
                var e;
                return null != t
                  ? null === (e = L.default.getRole(l.guild_id, t)) ||
                    void 0 === e
                    ? void 0
                    : e.name
                  : void 0;
              },
              [l, t]
            );
          return (0, a.jsx)(z, {
            ...n,
            ...r,
            isTyping: u,
            currentUser: d,
            colorRoleName: f,
          });
        }),
        Z = l.memo(function (e) {
          let { id: t, title: n, count: l, guildId: s } = e,
            i = (0, N.useRoleIcon)({ roleId: t, guildId: s, size: 16 });
          return t === k.StatusTypes.UNKNOWN
            ? (0, a.jsx)("div", {
                className: G.membersGroup,
                children: (0, a.jsx)("div", {
                  className: G.memberGroupsPlaceholder,
                }),
              })
            : (0, a.jsxs)(D.default, {
                className: G.membersGroup,
                children: [
                  (0, a.jsx)(h.HiddenVisually, {
                    children:
                      B.default.Messages.CHANNEL_MEMBERS_A11Y_LABEL.format({
                        title: n,
                        count: l,
                      }),
                  }),
                  (0, a.jsxs)("span", {
                    "aria-hidden": !0,
                    children: [
                      null != i
                        ? (0, a.jsx)(b.default, { className: G.roleIcon, ...i })
                        : null,
                      n,
                      " — ",
                      l,
                    ],
                  }),
                ],
              });
        });
      function Q(e) {
        let { index: t } = e,
          n = (0, o.useListItem)("".concat(t));
        return (0, a.jsx)(S.default, { itemProps: n });
      }
      class X extends l.Component {
        shouldComponentUpdate(e) {
          return (
            e.channel.id !== this.props.channel.id ||
            e.version !== this.props.version ||
            e.groups.length !== this.props.groups.length
          );
        }
        componentDidMount() {
          this.updateSubscription(),
            this.trackMemberListViewed(),
            (this._areActivitiesExperimentallyHidden = (0,
            _.isMemberListActivityHidden)("ChannelMembers"));
        }
        componentDidUpdate(e) {
          e.channel.id !== this.props.channel.id && this.updateSubscription(),
            this.trackMemberListViewed(),
            this.updateMaxContentFeedRowSeen();
        }
        getContentFeedAdjustedDimensions(e) {
          let { height: t, rowHeight: n, y: a } = e,
            l = this.getContentFeedHeight(),
            s = Math.max(0, t - Math.max(0, l - a));
          return {
            height: s,
            rowHeight: n,
            rowsVisible: Math.floor(s / n),
            y: Math.max(0, a - l),
          };
        }
        getDimensions() {
          let e = this._list;
          if (null == e) return { y: 0, height: 0, rowHeight: 0 };
          let { offsetHeight: t, scrollTop: n } = e.getScrollerState(),
            a = Math.floor(t / W);
          return this.getContentFeedAdjustedDimensions({
            height: t,
            rowHeight: W,
            rowsVisible: a,
            y: n,
          });
        }
        render() {
          let { groups: e, listId: t, channel: n } = this.props;
          return (0, a.jsx)(h.FocusJumpSection, {
            children: l =>
              (0, a.jsx)(P.UID, {
                children: s =>
                  (0, a.jsx)("aside", {
                    className: i(G.membersWrap, G.hiddenMembers),
                    "aria-labelledby": s,
                    children: (0, a.jsx)(h.HeadingLevel, {
                      component: (0, a.jsx)(h.HiddenVisually, {
                        children: (0, a.jsx)(h.H, {
                          id: s,
                          children:
                            B.default.Messages.MEMBERS_LIST_LANDMARK_LABEL.format(
                              { channel: n.name }
                            ),
                        }),
                      }),
                      children: (0, a.jsx)(o.ListNavigatorContainer, {
                        children: n => {
                          let { ref: s, role: r, ...u } = n;
                          return (0, a.jsx)(
                            h.List,
                            {
                              innerRole: r,
                              innerAriaLabel: B.default.Messages.MEMBERS,
                              ref: e => {
                                var t;
                                (this._list = e),
                                  (this.props.listRef.current = e),
                                  (s.current =
                                    null !==
                                      (t =
                                        null == e
                                          ? void 0
                                          : e.getScrollerNode()) && void 0 !== t
                                      ? t
                                      : null);
                              },
                              className: i(G.members, {
                                [G.fullWidth]: d.isMobile,
                              }),
                              paddingTop: 0,
                              sectionHeight: 40,
                              rowHeight: this.getRowHeightComputer(),
                              renderSection: this.renderSection,
                              renderRow: this.renderRow,
                              sections: e.map(e => e.count),
                              onScroll: this.handleScroll,
                              fade: !0,
                              customTheme: !0,
                              ...u,
                              ...l,
                            },
                            t
                          );
                        },
                      }),
                    }),
                  }),
              }),
          });
        }
        constructor(...e) {
          super(...e),
            (this._list = null),
            (this._areActivitiesExperimentallyHidden = !1),
            (this.setList = e => {
              (this._list = e), (this.props.listRef.current = e);
            }),
            (this.renderSection = e => {
              let { section: t } = e,
                { groups: n, channel: s } = this.props,
                i = n[t];
              return (0, I.isContentGroup)(i)
                ? (0, l.createElement)(I.default, {
                    ...i,
                    key: "section-".concat(t),
                  })
                : 0 === t
                  ? (0, a.jsx)(
                      A.default,
                      {
                        tutorialId: "whos-online",
                        position: "left",
                        inlineSpecs: Y,
                        children: (0, a.jsx)(Z, { ...i, guildId: s.guild_id }),
                      },
                      "section-".concat(t)
                    )
                  : (0, l.createElement)(Z, {
                      ...i,
                      key: "section-".concat(t),
                      guildId: s.guild_id,
                    });
            }),
            (this.getRowProps = e => {
              let { groups: t, rows: n } = this.props,
                a = t[e.section];
              if (null == a) return null;
              let { index: l } = a;
              return null == l || "row" !== e.type ? null : n[l + 1 + e.row];
            }),
            (this.renderRow = e => {
              let { section: t, row: n, rowIndex: l } = e,
                { channel: s } = this.props,
                i = this.getRowProps(e);
              if (null != i) {
                if (i.type === j.MemberListRowTypes.MEMBER && "user" in i) {
                  let {
                    colorString: e,
                    colorRoleId: t,
                    user: n,
                    status: r,
                    isOwner: u,
                    isMobileOnline: o,
                    nick: d,
                    activities: c,
                    applicationStream: f,
                    premiumSince: h,
                  } = i;
                  return (0, a.jsx)(
                    K,
                    {
                      colorString: e,
                      colorRoleId: t,
                      user: n,
                      status: r,
                      isOwner: u,
                      nick: d,
                      activities: this._areActivitiesExperimentallyHidden
                        ? []
                        : c,
                      applicationStream: f,
                      channel: s,
                      guildId: s.guild_id,
                      premiumSince: h,
                      isMobileOnline: o,
                      index: l,
                    },
                    "member-".concat(i.user.id)
                  );
                }
                if (i.type === j.MemberListRowTypes.CONTENT_INVENTORY)
                  return (0, a.jsx)(
                    T.default,
                    { ...i, channel: this.props.channel, index: l },
                    "content-inventory-".concat(i.entry.id)
                  );
              }
              return (0, a.jsx)(
                Q,
                { index: l },
                "placeholder-".concat(t, ":").concat(n)
              );
            }),
            (this.handleScroll = () => {
              this.updateSubscription(), this.updateMaxContentFeedRowSeen();
            }),
            (this.updateMaxContentFeedRowSeen = u.debounce(() => {
              let e = this._list;
              if (null == e) return;
              let { offsetHeight: t, scrollTop: n } = e.getScrollerState();
              this.props.updateMaxContentFeedRowSeen(n + t - 40);
            }, 50)),
            (this.getContentFeedGroup = () => {
              let e = this.props.groups[v.CONTENT_FEED_SECTION];
              if ((0, I.isContentGroup)(e)) return e;
            }),
            (this.hasContentFeed = () => null != this.getContentFeedGroup()),
            (this.getRowHeightComputer = () => {
              let e = this.getContentFeedGroup();
              if (null != e) {
                let { rows: t } = this.props,
                  n = e.index;
                return function (e, a) {
                  if (e === v.CONTENT_FEED_SECTION) {
                    let e = t[n + 1 + a];
                    return (0, T.getContentRowHeight)(e);
                  }
                  return W;
                };
              }
              return W;
            }),
            (this.getContentFeedHeight = () => {
              let e = this.getContentFeedGroup();
              if (null != e) {
                let t = e.feedHeight;
                return t + 40;
              }
              return 0;
            }),
            (this.updateSubscription = u.debounce(() => {
              let e = this._list;
              if (null == e) return;
              let { channel: t } = this.props,
                { rowHeight: n, y: a, height: l } = this.getDimensions();
              (0, p.subscribeChannelDimensions)({
                guildId: t.guild_id,
                channelId: t.id,
                y: a,
                height: l,
                rowHeight: n,
              });
            }, 50)),
            (this.trackMemberListViewed = () => {
              var e;
              if (this.lastReportedAnalyticsChannel === this.props.channel.id)
                return;
              let t =
                  null === (e = this._list) || void 0 === e
                    ? void 0
                    : e.getItems(),
                { rowsVisible: n } = this.getDimensions();
              if (void 0 === n || 0 === n || null == t) return;
              this.hasContentFeed() &&
                (t = t.filter(e => e.section !== v.CONTENT_FEED_SECTION));
              let a = t
                .map(e => this.getRowProps(e))
                .slice(0, n + 1)
                .filter(w.isNotNullish);
              if (0 === a.length) return;
              let l = a.reduce(
                (e, t) =>
                  t.type !== j.MemberListRowTypes.MEMBER
                    ? e
                    : (e.num_users_visible++,
                      t.isMobileOnline &&
                        e.num_users_visible_with_mobile_indicator++,
                      null != t.activities &&
                        t.activities.length > 0 &&
                        (e.num_users_visible_with_activity++,
                        t.activities.some(
                          e => e.type === k.ActivityTypes.PLAYING
                        ) && e.num_users_visible_with_game_activity++),
                      null != t.user.avatarDecoration &&
                        e.num_users_visible_with_avatar_decoration++,
                      e),
                {
                  num_users_visible: 0,
                  num_users_visible_with_mobile_indicator: 0,
                  num_users_visible_with_game_activity: 0,
                  num_users_visible_with_activity: 0,
                  num_users_visible_with_avatar_decoration: 0,
                }
              );
              (this.lastReportedAnalyticsChannel = this.props.channel.id),
                C.default.trackWithMetadata(
                  k.AnalyticEvents.MEMBER_LIST_VIEWED,
                  { ...l }
                );
            });
        }
      }
      function q(e) {
        let { channel: t, className: n } = e,
          s = (0, c.useStateFromStores)(
            [g.default],
            () => g.default.keyboardModeEnabled
          ),
          r = (0, c.useStateFromStoresObject)([j.default], () =>
            j.default.getProps(t.guild_id, t.id)
          ),
          {
            rows: u,
            groups: d,
            version: f,
            updateMaxRowSeen: h,
          } = (0, v.useInjectContentInventoryFeed)({
            memberStoreProps: r,
            channelId: t.id,
            guildId: t.guild_id,
          }),
          m = l.useRef(null),
          p = l.useCallback((e, t) => {
            let n = m.current;
            if (null == n) return;
            let a = parseInt(t, 10),
              [l, s] = n.getSectionRowFromIndex(a),
              i = 0 === l && 0 === s ? W : 0;
            n.scrollToIndex({
              section: l,
              row: s,
              padding: i,
              callback: () => {
                requestAnimationFrame(() => {
                  var t;
                  return null === (t = document.querySelector(e)) ||
                    void 0 === t
                    ? void 0
                    : t.focus({ preventScroll: !0 });
                });
              },
            });
          }, []),
          E = l.useCallback(
            () =>
              new Promise(e => {
                let t = m.current;
                if (null == t) return e();
                t.scrollToTop({
                  callback: () => requestAnimationFrame(() => e()),
                });
              }),
            []
          ),
          S = l.useCallback(
            () =>
              new Promise(e => {
                let t = m.current;
                if (null == t) return e();
                t.scrollToBottom({
                  callback() {
                    requestAnimationFrame(() => setTimeout(e, 100));
                  },
                });
              }),
            []
          ),
          C = (0, o.default)({
            id: "members-".concat(t.id),
            setFocus: p,
            isEnabled: s,
            scrollToStart: E,
            scrollToEnd: S,
          });
        return (0, a.jsx)("div", {
          className: i(G.container, n),
          children: (0, a.jsx)(o.ListNavigatorProvider, {
            navigator: C,
            children: (0, a.jsx)(X, {
              ...e,
              ...r,
              version: f,
              groups: d,
              rows: u,
              listRef: m,
              updateMaxContentFeedRowSeen: h,
            }),
          }),
        });
      }
      function J(e) {
        let { channel: t, className: n } = e,
          s = l.useDeferredValue(t);
        return l.useMemo(
          () => (0, a.jsx)(q, { channel: s, className: n }),
          [s, n]
        );
      }
    },
    656612: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("819855"),
        i = n("77078"),
        r = n("841098"),
        u = n("716241"),
        o = n("539938"),
        d = n("593195"),
        c = n("49111"),
        f = n("782340"),
        h = n("932454"),
        m = n("242412"),
        p = n("846770"),
        E = () => {
          let e = (0, r.default)();
          l.useEffect(() => {
            u.default.trackWithMetadata(
              c.AnalyticEvents.GUILD_OUTAGE_VIEWED,
              {}
            );
          }, []);
          let t = (0, s.isThemeDark)(e) ? m : p;
          return (0, a.jsxs)("div", {
            className: h.container,
            children: [
              (0, a.jsxs)(o.default, {
                toolbar: (0, a.jsx)(l.Fragment, {}),
                children: [
                  (0, a.jsx)(o.default.Icon, {
                    icon: d.default,
                    "aria-hidden": !0,
                  }),
                  (0, a.jsx)(o.default.Title, {
                    children: f.default.Messages.GUILD_UNAVAILABLE_HEADER,
                  }),
                ],
              }),
              (0, a.jsxs)("div", {
                className: h.content,
                children: [
                  (0, a.jsx)("img", {
                    alt: "",
                    className: h.splashImage,
                    src: t,
                  }),
                  (0, a.jsx)(i.Heading, {
                    className: h.splashHeader,
                    variant: "heading-lg/medium",
                    children: f.default.Messages.GUILD_UNAVAILABLE_TITLE,
                  }),
                  (0, a.jsx)(i.Text, {
                    className: h.splashText,
                    variant: "text-md/normal",
                    children: f.default.Messages.GUILD_UNAVAILABLE_BODY,
                  }),
                ],
              }),
            ],
          });
        };
    },
    624027: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("394846"),
        i = n("446674"),
        r = n("77078"),
        u = n("120252"),
        o = n("161778"),
        d = n("162771"),
        c = n("941886"),
        f = n("664336"),
        h = n("49111"),
        m = n("782340"),
        p = n("858319");
      function E(e) {
        let t,
          { channelId: E } = e;
        l.useEffect(() => {
          u.default.loadThread(E);
        });
        let S = (0, i.useStateFromStores)([d.default], () =>
            d.default.getGuildId()
          ),
          g = S === h.FAVORITES,
          C = (0, i.useStateFromStores)([o.default], () => o.default.theme);
        return (
          (t = g
            ? (0, a.jsx)(c.EmptyStateText, {
                note: m.default.Messages.FAVORITES_EMPTY_BODY,
                children: m.default.Messages.FAVORITES_EMPTY_TITLE,
              })
            : null != E
              ? (0, a.jsx)(r.Spinner, { type: r.Spinner.Type.SPINNING_CIRCLE })
              : (0, a.jsx)(c.EmptyStateText, {
                  note: m.default.Messages.CHANNELS_UNAVAILABLE_BODY,
                  children: m.default.Messages.CHANNELS_UNAVAILABLE_TITLE,
                })),
          (0, a.jsxs)("div", {
            className: p.noChannel,
            children: [
              s.isMobile &&
                (0, a.jsx)(f.default, { children: (0, a.jsx)(l.Fragment, {}) }),
              (0, a.jsxs)(c.default, {
                theme: C,
                children: [
                  (0, a.jsx)(c.EmptyStateImage, {
                    darkSrc: g ? n("41912") : n("605834"),
                    lightSrc: g ? n("706692") : n("976585"),
                    width: 272,
                    height: 222,
                  }),
                  t,
                ],
              }),
            ],
          })
        );
      }
    },
    878550: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return m;
          },
        }),
        n("222007");
      var a = n("446674"),
        l = n("913144"),
        s = n("32346"),
        i = n("271938"),
        r = n("824563"),
        u = n("299039"),
        o = n("49111");
      let d = {};
      function c(e) {
        var t;
        let n = e.find(e => e.type === o.ActivityTypes.CUSTOM_STATUS);
        return null == n
          ? null
          : (null === (t = n.emoji) || void 0 === t ? void 0 : t.name) ===
              "\uD83C\uDFAE"
            ? (function (e) {
                var t;
                return {
                  game: "Test Game",
                  description: null !== (t = e.state) && void 0 !== t ? t : "",
                  created_at: e.created_at,
                };
              })(n)
            : null;
      }
      function f(e, t) {
        let n = c(e);
        null != n ? (d[t] = { userId: t, ...n }) : delete d[t];
      }
      class h extends a.default.Store {
        initialize() {
          this.waitFor(i.default, s.default, r.default);
        }
        getDownToPlay(e) {
          return d[e];
        }
      }
      h.displayName = "DownToPlayStore";
      var m = new h(l.default, {
        CONNECTION_OPEN: function () {
          return !0;
        },
        CONNECTION_OPEN_SUPPLEMENTAL: function (e) {
          let { guilds: t, presences: n } = e;
          (d = {}),
            t.forEach(e => {
              e.presences.forEach(e => {
                f(e.activities, e.user.id);
              });
            }),
            n.forEach(e => {
              f(e.activities, e.user.id);
            });
        },
        OVERLAY_INITIALIZE: function (e) {
          let { presences: t } = e;
          (d = {}),
            u.default.keys(t.presencesForGuilds).forEach(e => {
              let n = t.presencesForGuilds[e];
              u.default.keys(n).forEach(t => {
                let a = n[t],
                  l = c(a.activities);
                null != l && (d[e] = { userId: e, ...l });
              });
            });
        },
        GUILD_CREATE: function (e) {
          let { guild: t } = e;
          t.presences.forEach(e => {
            f(e.activities, e.user.id);
          });
        },
        GUILD_DELETE: function (e) {
          let {} = e;
        },
        GUILD_MEMBER_REMOVE: function (e) {
          let {} = e;
        },
        PRESENCE_UPDATES: function (e) {
          let { updates: t } = e;
          return t.map(e => f(e.activities, e.user.id)).some(e => e);
        },
        PRESENCES_REPLACE: function (e) {
          let { presences: t } = e;
          (d = {}),
            t.forEach(e => {
              null != e.user && f(e.activities, e.user.id);
            });
        },
        THREAD_MEMBER_LIST_UPDATE: function (e) {
          let { members: t } = e;
          t.forEach(e => {
            null != e.presence && f(e.presence.activities, e.presence.user.id);
          });
        },
        THREAD_MEMBERS_UPDATE: function (e) {
          let { addedMembers: t } = e;
          null == t ||
            t.forEach(e => {
              null != e.presence &&
                f(e.presence.activities, e.presence.user.id);
            });
        },
        SELF_PRESENCE_STORE_UPDATE: function (e) {
          let t = i.default.getId();
          f(e.activities, t);
        },
      });
    },
    992207: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("414456"),
        s = n.n(l),
        i = n("446674"),
        r = n("669491"),
        u = n("77078"),
        o = n("191145"),
        d = n("161454"),
        c = n("584687"),
        f = n("373469"),
        h = n("522049"),
        m = n("956089"),
        p = n("56947"),
        E = n("386045"),
        S = n("99795"),
        g = n("782340"),
        C = n("688257"),
        _ = e => {
          let { className: t, channelId: n } = e,
            l = (0, p.useEnableClips)(),
            { enableDecoupledGameClipping: _ } = c.default.useExperiment(
              { location: "ClipsEnabledIndicator" },
              { autoTrackExposure: !1 }
            ),
            I = (0, i.useStateFromStores)(
              [f.default, o.default, E.default, d.default],
              () => {
                var e;
                if (null == n) return !1;
                let t = f.default.getCurrentUserActiveStream(),
                  a =
                    null === (e = d.default.getVisibleGame()) || void 0 === e
                      ? void 0
                      : e.windowHandle;
                return (
                  (null != t &&
                    !!E.default.getSettings().clipsEnabled &&
                    !!l) ||
                  (null != a &&
                    !!E.default.getSettings().decoupledClipsEnabled &&
                    !!_) ||
                  o.default
                    .getParticipants(n)
                    .some(
                      e =>
                        e.type === S.ParticipantTypes.USER &&
                        E.default.isClipsEnabledForUser(e.user.id)
                    )
                );
              }
            );
          return I
            ? (0, a.jsxs)(u.TooltipContainer, {
                text: g.default.Messages.CLIPS_ENABLED_VIEWER_TOOLTIP,
                color: u.TooltipColors.GREY,
                className: s(t, C.clipsEnabledIndicator),
                children: [
                  (0, a.jsx)(m.IconBadge, {
                    icon: h.default,
                    shape: m.BadgeShapes.ROUND_LEFT,
                    color: r.default.unsafe_rawColors.PRIMARY_500.css,
                    className: C.clipBadgeIcon,
                  }),
                  (0, a.jsx)(m.TextBadge, {
                    text: g.default.Messages.CLIPS_ENABLED_BADGE,
                    shape: m.BadgeShapes.ROUND_RIGHT,
                    color: r.default.unsafe_rawColors.PRIMARY_500.css,
                    className: C.clipBadgeText,
                  }),
                ],
              })
            : null;
        };
    },
    86097: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          isMemberListActivityHidden: function () {
            return s;
          },
        });
      var a = n("862205");
      let l = (0, a.createExperiment)({
        kind: "user",
        id: "2024-02_hide_member_list_activities",
        label: "Hide member list activities",
        defaultConfig: { hideActivities: !1 },
        treatments: [
          {
            id: 1,
            label: "Enabled (hide activities)",
            config: { hideActivities: !0 },
          },
        ],
      });
      function s(e) {
        return l.getCurrentConfig({ location: e }, { autoTrackExposure: !0 })
          .hideActivities;
      }
    },
    897163: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return p;
          },
        }),
        n("222007"),
        n("424973");
      var a = n("884691"),
        l = n("316693"),
        s = n("446674"),
        i = n("233736"),
        r = n("750560"),
        u = n("42203"),
        o = n("26989"),
        d = n("991170"),
        c = n("843455");
      let f = [],
        h = new Set(),
        m = {};
      function p(e) {
        let { entries: t, channelId: n } = e,
          p = (0, s.useStateFromStores)([u.default], () =>
            u.default.getChannel(n)
          ),
          E = null == p ? void 0 : p.guild_id,
          S = a.useRef(new Set()),
          g = a.useMemo(() => {
            let e = new Set(null == t ? void 0 : t.map(e => e.author_id));
            return (
              !(0, i.areArraysShallowEqual)([...S.current], [...e]) &&
                (S.current = e),
              S.current
            );
          }, [t]),
          C = a.useMemo(() => (null == E ? m : { [E]: Array.from(g) }), [g, E]);
        (0, r.useSubscribeGuildMembers)(C);
        let _ = (0, s.useStateFromStoresArray)(
            [o.default],
            () => {
              if (null == E) return f;
              let e = [];
              for (let t of g) o.default.isMember(E, t) && e.push(t);
              return e;
            },
            [g, E]
          ),
          I = a.useMemo(() => {
            if (null == p || 0 === _.length) return h;
            let e = new Set();
            for (let t of _) {
              let n = d.default.computePermissions({ user: t, context: p });
              l.default.has(n, c.Permissions.VIEW_CHANNEL) && e.add(t);
            }
            return e;
          }, [_, p]),
          T = a.useMemo(
            () => (null == t ? void 0 : t.filter(e => I.has(e.author_id))),
            [t, I]
          );
        return T;
      }
    },
    843719: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        }),
        n("222007");
      var a = n("884691"),
        l = n("446674"),
        s = n("42203"),
        i = n("282109");
      function r(e) {
        let t = (0, l.useStateFromStores)([s.default], () =>
            s.default.getPrivateChannelsVersion()
          ),
          n = (0, l.useStateFromStores)(
            [s.default],
            () => s.default.getMutableDMsByUserIds(),
            [t]
          ),
          r = (0, l.useStateFromStores)([i.default], () =>
            i.default.getMutedChannels(null)
          ),
          u = a.useMemo(() => {
            let e = new Set();
            for (let t in n) {
              let a = n[t];
              null != a && r.has(a) && e.add(t);
            }
            return e;
          }, [n, r]);
        return a.useMemo(
          () => (null == e ? void 0 : e.filter(e => !u.has(e.author_id))),
          [e, u]
        );
      }
    },
    626346: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var a = n("358977"),
        l = n("446674"),
        s = n("824563"),
        i = n("476774"),
        r = n("49111");
      let u = [];
      function o(e) {
        return (0, l.useStateFromStoresArray)(
          [s.default],
          () =>
            null == e
              ? u
              : e.filter(e => {
                  if ((0, i.isEntryExpired)(e)) return !1;
                  if (
                    (0, i.isEntryActive)(e) &&
                    e.author_type === a.ContentInventoryAuthorType.USER
                  ) {
                    let t = s.default.getActivities(e.author_id),
                      n = t.find(t => {
                        var n;
                        return (
                          t.type === r.ActivityTypes.PLAYING &&
                          t.application_id ===
                            (null === (n = e.extra) || void 0 === n
                              ? void 0
                              : n.application_id)
                        );
                      });
                    return null != n;
                  }
                  return !0;
                }),
          [e]
        );
      }
    },
    447313: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          MEMBER_LIST_CONTENT_GROUP_ID: function () {
            return a;
          },
        });
      let a = "content-inventory-feed";
    },
    773808: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          trackInteraction: function () {
            return i;
          },
        });
      var a = n("599110"),
        l = n("709377"),
        s = n("49111");
      let i = (e, t) => {
        a.default.track(s.AnalyticEvents.RANKING_ITEM_INTERACTED, {
          request_id: t.requestId,
          item_id: t.entry.id,
          surface_type: l.ContentInventorySurfaceTypes.GUILD_MEMBER_LIST,
          channel_id: t.channelId,
          guild_id: t.guildId,
          interaction_type: e,
        });
      };
    },
    868875: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          generateGamingContentImage: function () {
            return d;
          },
        });
      var a = n("407462"),
        l = n("695412"),
        s = n("999317"),
        i = n("476774"),
        r = n("878984"),
        u = n("782340");
      let o = (e, t) => ({
          AvatarImage: e,
          ...(null != t && { ApplicationImage: t }),
        }),
        d = async e => {
          let {
              applicationImageSrc: t,
              entry: n,
              avatarSrc: d,
              description: c,
              timestamp: f,
              colors: h,
            } = e,
            m = n.extra.game_name,
            p = o(d, t);
          return await (0, s.generateImageFromCanvas)({
            assetsToLoad: p,
            drawImage: e => {
              let t = h.map((e, t) => ({ color: e, stop: t }));
              e.setSize({ w: r.imageWidth, h: r.imageHeight }, 4),
                e.drawGradientRoundedRect(
                  t,
                  { x: 0, y: r.imageHeight },
                  { x: r.imageWidth, y: 0 },
                  { x: 0, y: 0, h: r.imageHeight, w: r.imageWidth },
                  8
                ),
                e.setColor("white");
              let s = e.drawRoundedImage(
                "ApplicationImage",
                { x: r.imagePadding, y: r.imagePadding },
                { w: r.applicationImageSize, h: r.applicationImageSize },
                8
              );
              s === l.DrawResultStatus.Failure &&
                e.drawPath(
                  a.ACTIVITY_IMAGE_FALLBACK_PATH,
                  { x: r.imagePadding, y: r.imagePadding },
                  !0,
                  2 + 2 / 3
                ),
                e.drawRoundedImage(
                  "AvatarImage",
                  { x: r.descriptionIndent, y: r.imagePadding },
                  { w: r.avatarImageSize, h: r.avatarImageSize },
                  50
                ),
                e.setFont({
                  size: 16,
                  family: '"gg sans", sans-serif',
                  weight: 500,
                  truncate: l.TextTruncationMethod.Wrap,
                }),
                e.drawText(
                  c,
                  {
                    x: r.descriptionIndent,
                    y: 64,
                    h: 32,
                    w: r.descriptionMaxWidth,
                  },
                  !0
                ),
                e.setFont({
                  size: 12,
                  family: '"gg sans", sans-serif',
                  weight: 500,
                  truncate: l.TextTruncationMethod.None,
                }),
                e.drawText(
                  f,
                  {
                    x: r.descriptionIndent + r.attributionSpacing,
                    y: r.attributionTextPosition,
                    w: r.descriptionMaxWidth,
                  },
                  !0
                ),
                e.drawPath(
                  r.GAME_CONTROLLER_ICON_PATH,
                  { x: r.descriptionIndent, y: r.attributionIconPosition },
                  !0,
                  0.6
                ),
                (0, i.isEntryNew)(n) &&
                  (e.drawPath(
                    r.NEW_GAME_ICON_PATH_TOP,
                    {
                      x: r.descriptionIndent + r.attributionSize,
                      y: r.attributionIconPosition,
                    },
                    !0,
                    0.6
                  ),
                  e.drawPath(
                    r.NEW_GAME_ICON_PATH_BOTTOM,
                    {
                      x: r.descriptionIndent + r.attributionSize,
                      y: r.attributionIconPosition,
                    },
                    !0,
                    0.6
                  ),
                  e.drawText(
                    u.default.Messages.MEMBER_LIST_CONTENT_FEED_FIRST_TIME,
                    {
                      x:
                        r.descriptionIndent +
                        r.attributionSize +
                        r.attributionSpacing,
                      y: r.attributionTextPosition,
                    },
                    !0
                  ));
            },
            exportConfigs: {
              format: l.DiscordCanvasExporterOutputFormats.File,
              quality: 1,
              fileName: "user-reacting-to-".concat(m, ".png").toLowerCase(),
              fileType: "png",
            },
          });
        };
    },
    878984: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          GAME_CONTROLLER_ICON_PATH: function () {
            return a;
          },
          NEW_GAME_ICON_PATH_TOP: function () {
            return l;
          },
          NEW_GAME_ICON_PATH_BOTTOM: function () {
            return s;
          },
          imageWidth: function () {
            return i;
          },
          imageHeight: function () {
            return r;
          },
          imagePadding: function () {
            return u;
          },
          applicationImageSize: function () {
            return o;
          },
          avatarImageSize: function () {
            return d;
          },
          descriptionIndent: function () {
            return c;
          },
          descriptionMaxWidth: function () {
            return f;
          },
          attributionIconPosition: function () {
            return h;
          },
          attributionTextPosition: function () {
            return m;
          },
          attributionSize: function () {
            return p;
          },
          attributionSpacing: function () {
            return E;
          },
        });
      let a =
          "M20.97 4.06c0 .18.08.35.24.43.55.28.9.82 1.04 1.42.3 1.24.75 3.7.75 7.09v4.91a3.09 3.09 0 0 1-5.85 1.38l-1.76-3.51a1.09 1.09 0 0 0-1.23-.55c-.57.13-1.36.27-2.16.27s-1.6-.14-2.16-.27c-.49-.11-1 .1-1.23.55l-1.76 3.51A3.09 3.09 0 0 1 1 17.91V13c0-3.38.46-5.85.75-7.1.15-.6.49-1.13 1.04-1.4a.47.47 0 0 0 .24-.44c0-.7.48-1.32 1.2-1.47l2.93-.62c.5-.1 1 .06 1.36.4.35.34.78.71 1.28.68a42.4 42.4 0 0 1 4.4 0c.5.03.93-.34 1.28-.69.35-.33.86-.5 1.36-.39l2.94.62c.7.15 1.19.78 1.19 1.47ZM20 7.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0ZM15.5 12a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3ZM5 7a1 1 0 0 1 2 0v1h1a1 1 0 0 1 0 2H7v1a1 1 0 1 1-2 0v-1H4a1 1 0 1 1 0-2h1V7Z",
        l =
          "M11.55 14.4c.28.17.62.17.9 0 1.6-.96 6.88-4.46 6.88-8.57A3.83 3.83 0 0 0 15.5 2c-1.56 0-2.58.6-3.5 1.5A4.66 4.66 0 0 0 8.5 2a3.83 3.83 0 0 0-3.83 3.83c0 4.1 5.29 7.61 6.88 8.57Z",
        s =
          "M3.11 14.86a1 1 0 0 0-.83 1.24l.23.89a6 6 0 0 0 6.46 4.45l2.03-.22V22a1 1 0 1 0 2 0v-.78l2.03.22A6 6 0 0 0 21.5 17l.23-.89a1 1 0 0 0-.83-1.24l-2.05-.29a6 6 0 0 0-6.1 3.07L12 19l-.74-1.36a6 6 0 0 0-6.1-3.07l-2.05.29ZM2.93 9.4a.6.6 0 0 1 1.14 0l.1.25a2 2 0 0 0 1.18 1.19l.25.1a.6.6 0 0 1 0 1.13l-.25.1a2 2 0 0 0-1.19 1.18l-.1.25a.6.6 0 0 1-1.13 0l-.1-.25a2 2 0 0 0-1.18-1.19l-.25-.1a.6.6 0 0 1 0-1.13l.25-.1a2 2 0 0 0 1.19-1.18l.1-.25ZM21.46 9.82a.49.49 0 0 0-.92 0v.03a2 2 0 0 1-1.19 1.18l-.03.01a.49.49 0 0 0 0 .92h.03a2 2 0 0 1 1.18 1.19l.01.03c.16.43.76.43.92 0v-.03a2 2 0 0 1 1.19-1.18l.03-.01a.49.49 0 0 0 0-.92h-.03a2 2 0 0 1-1.18-1.19l-.01-.03Z",
        i = 400,
        r = 120,
        u = 12,
        o = 96,
        d = 32,
        c = 120,
        f = 260,
        h = 88,
        m = 99,
        p = 72,
        E = 18;
    },
    909346: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          sendContentImageReply: function () {
            return i;
          },
        });
      var a = n("901803"),
        l = n("526409"),
        s = n("868875");
      let i = async e => {
          let { reply: t, user: n, altText: a, ...s } = e,
            i = await r(s);
          return (0, l.sendReply)({ file: i, altText: a, user: n, reply: t });
        },
        r = e => {
          if (e.entry.content_type === a.ContentInventoryEntryType.PLAYED_GAME)
            return (0, s.generateGamingContentImage)(e);
        };
    },
    205343: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        }),
        n("222007");
      var a = n("901803"),
        l = n("446674"),
        s = n("265596"),
        i = n("897163"),
        r = n("189819"),
        u = n("709377");
      let o = new Set([a.ContentInventoryEntryType.PLAYED_GAME]);
      function d(e) {
        let t = (0, r.default)(u.ContentInventoryFeedKey.GLOBAL_FEED);
        t =
          null == (t = (0, i.default)({ entries: t, channelId: e }))
            ? void 0
            : t.filter(e => o.has(e.content_type));
        let n = (0, l.useStateFromStores)([s.default], () =>
          s.default.getFeedRequestId(u.ContentInventoryFeedKey.GLOBAL_FEED)
        );
        return { requestId: n, entries: t };
      }
    },
    418882: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("862337"),
        i = n("77078"),
        r = n("866190"),
        u = n("476774");
      let o = e => {
        let { entry: t, textColor: n } = e,
          [o, d] = l.useState(Date.now()),
          c = (0, r.useIsWindowFocused)(),
          f = l.useMemo(() => {
            let { hours: e } = (0, u.calculateActiveTimestampDurations)(t, o);
            return e > 0 ? 3e5 : 1e3;
          }, [t, o]);
        l.useEffect(() => {
          let e = new s.Interval();
          return (
            e.start(f, () => {
              d(Date.now());
            }),
            !c && e.stop(),
            () => e.stop()
          );
        }, [f, c]);
        let h = l.useMemo(() => (0, u.formatEntryTimestamp)(t, o), [t, o]);
        return (0, a.jsx)(i.Text, {
          variant: "text-xs/normal",
          tabularNumbers: !0,
          color: n,
          children: h,
        });
      };
      var d = e => {
        let { entry: t, textColor: n } = e,
          l = (0, u.isEntryActive)(t);
        return l
          ? (0, a.jsx)(o, { entry: t, textColor: n })
          : (0, a.jsx)(i.Text, {
              variant: "text-xs/normal",
              color: n,
              children: (0, u.formatEntryTimestamp)(t, Date.now()),
            });
      };
    },
    29319: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          isContentGroup: function () {
            return h;
          },
          default: function () {
            return m;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("384737"),
        i = n("748802"),
        r = n("77078"),
        u = n("826684"),
        o = n("447313"),
        d = n("782340"),
        c = n("611800"),
        f = n("559571");
      function h(e) {
        return (null == e ? void 0 : e.id) === o.MEMBER_LIST_CONTENT_GROUP_ID;
      }
      var m = l.memo(function (e) {
        let { title: t, onToggleExpand: n, expanded: l, expandedCount: o } = e;
        return (0, a.jsxs)(u.default, {
          className: f.membersGroup,
          children: [
            (0, a.jsx)(r.HiddenVisually, {
              children: d.default.Messages.CHANNEL_MEMBERS_A11Y_LABEL.format({
                title: t,
                count: o,
              }),
            }),
            (0, a.jsxs)("span", {
              "aria-hidden": !0,
              children: [
                t,
                " — ",
                o,
                o > 3 &&
                  (0, a.jsx)(r.Clickable, {
                    onClick: n,
                    tag: "span",
                    className: c.toggleExpandButton,
                    children: l
                      ? (0, a.jsx)(s.ChevronSmallDownIcon, {
                          className: c.toggleExpandIcon,
                        })
                      : (0, a.jsx)(i.ChevronSmallRightIcon, {
                          className: c.toggleExpandIcon,
                        }),
                  }),
              ],
            }),
          ],
        });
      });
    },
    346967: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          DEFAULT_CONTENT_ROW_HEIGHT: function () {
            return m;
          },
          getContentRowHeight: function () {
            return p;
          },
          default: function () {
            return C;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("917351"),
        i = n.n(s),
        r = n("974667"),
        u = n("901803"),
        o = n("77078"),
        d = n("773808"),
        c = n("356980"),
        f = n("998268"),
        h = n("709377");
      let m = 72;
      function p(e) {
        return m;
      }
      let E = i.throttle(
          e => {
            (0, d.trackInteraction)(
              h.ContentInventoryInteractionTypes.CARD_HOVER,
              e
            );
          },
          5e3,
          { leading: !0, trailing: !1 }
        ),
        S = e => {
          let { entry: t, ...n } = e;
          if (t.content_type === u.ContentInventoryEntryType.PLAYED_GAME)
            return (0, a.jsx)(c.default, { ...n, entry: t });
          return null;
        },
        g = e => {
          let { entry: t, ...n } = e;
          if (t.content_type === u.ContentInventoryEntryType.PLAYED_GAME)
            return (0, a.jsx)(f.default, { ...n, entry: t });
          return null;
        };
      var C = l.memo(e => {
        let { index: t, ...n } = e,
          l = (0, r.useListItem)("".concat(t)),
          s = {
            entry: n.entry,
            channelId: n.channel.id,
            guildId: n.channel.guild_id,
            requestId: n.requestId,
          };
        return (0, a.jsx)(o.Popout, {
          renderPopout: e => {
            let { closePopout: t } = e;
            return (0, a.jsx)(g, { closePopout: t, ...n });
          },
          position: "left",
          onRequestOpen: () =>
            (0, d.trackInteraction)(
              h.ContentInventoryInteractionTypes.CARD_CLICK,
              s
            ),
          spacing: 16,
          children: (e, t) => {
            let { isShown: i } = t;
            return (0, a.jsx)(o.FocusRing, {
              offset: { top: 4, bottom: 4, left: 4, right: 4 },
              children: (0, a.jsx)("div", {
                ...e,
                ...l,
                onMouseEnter: () => E(s),
                children: (0, a.jsx)(S, { ...n, selected: i }),
              }),
            });
          },
        });
      });
    },
    356980: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useGamingContentData: function () {
            return T;
          },
          GamingContentImage: function () {
            return v;
          },
          ContentRowBadges: function () {
            return x;
          },
          default: function () {
            return N;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("446674"),
        u = n("823527"),
        o = n("114770"),
        d = n("77078"),
        c = n("841098"),
        f = n("442939"),
        h = n("26989"),
        m = n("305961"),
        p = n("697218"),
        E = n("547620"),
        S = n("387111"),
        g = n("476774"),
        C = n("418882"),
        _ = n("782340"),
        I = n("654852");
      let T = (e, t) => {
          let n = (0, f.useGetOrFetchApplication)(e.extra.application_id),
            a = null == n ? void 0 : n.getIconURL(128),
            l = (0, r.useStateFromStores)([p.default], () =>
              p.default.getUser(e.author_id)
            ),
            s = (0, r.useStateFromStores)([h.default], () =>
              h.default.getMember(t.guild_id, e.author_id)
            ),
            i = (0, r.useStateFromStores)(
              [m.default],
              () => {
                var e;
                return (null == s ? void 0 : s.colorRoleId) != null
                  ? null ===
                      (e = m.default.getRole(t.guild_id, s.colorRoleId)) ||
                    void 0 === e
                    ? void 0
                    : e.name
                  : void 0;
              },
              [t.guild_id, s]
            ),
            u = null == s ? void 0 : s.colorString;
          return {
            user: l,
            applicationImageSrc: a,
            colorRoleName: i,
            colorString: u,
          };
        },
        v = e => {
          let { src: t, size: n, className: l } = e,
            s = (0, c.default)();
          return null == t
            ? (0, a.jsx)(E.default, {
                width: n,
                height: n,
                color: "dark" === s ? "white" : "black",
                className: l,
              })
            : (0, a.jsx)("img", {
                style: {
                  width: "".concat(n, "px"),
                  height: "".concat(n, "px"),
                },
                className: l,
                src: t,
                alt: "icon",
              });
        },
        x = e => {
          let {
            entry: t,
            textColor: n = "text-secondary",
            iconColor: l,
            className: s,
          } = e;
          return (0, a.jsxs)("div", {
            className: i(I.badgesContainer, s),
            children: [
              (() => {
                let e = (0, g.isEntryActive)(t);
                return (0, a.jsxs)("div", {
                  className: I.badgeContainer,
                  children: [
                    (0, a.jsx)(u.GameControllerIcon, {
                      width: 12,
                      height: 12,
                      color:
                        null != l
                          ? l
                          : e
                            ? d.tokens.colors
                                .REDESIGN_BUTTON_PRIMARY_ON_BLURPLE_PRESSED_TEXT
                            : void 0,
                    }),
                    (0, a.jsx)(C.default, { entry: t, textColor: n }),
                  ],
                });
              })(),
              (0, g.isEntryNew)(t)
                ? (0, a.jsxs)("div", {
                    className: I.badgeContainer,
                    children: [
                      (0, a.jsx)(o.NewUserIcon, {
                        width: 12,
                        height: 12,
                        color: null != l ? l : d.tokens.colors.STATUS_POSITIVE,
                      }),
                      (0, a.jsx)(d.Text, {
                        variant: "text-xs/normal",
                        color: n,
                        children:
                          _.default.Messages
                            .MEMBER_LIST_CONTENT_FEED_FIRST_TIME,
                      }),
                    ],
                  })
                : null,
            ],
          });
        };
      var N = l.memo(e => {
        let { entry: t, channel: n, selected: l } = e,
          {
            user: s,
            applicationImageSrc: r,
            colorRoleName: u,
            colorString: o,
          } = T(t, n);
        if (null == s) return null;
        let c = S.default.getName(n.guild_id, n.id, s);
        return (0, a.jsxs)("div", {
          className: i(I.container, { [I.selected]: l }),
          children: [
            (0, a.jsxs)("div", {
              className: I.textSection,
              children: [
                (0, a.jsxs)("div", {
                  className: I.userSection,
                  children: [
                    (0, a.jsx)(d.Avatar, {
                      src: s.getAvatarURL(n.guild_id, 80),
                      size: d.AvatarSizes.SIZE_16,
                      "aria-label": "avatar",
                    }),
                    (0, a.jsx)(d.NameWithRole, {
                      color: null != o ? o : void 0,
                      roleName: u,
                      name: c,
                      className: I.userName,
                    }),
                  ],
                }),
                (0, a.jsxs)("div", {
                  children: [
                    (0, a.jsx)(d.Heading, {
                      variant: "heading-sm/semibold",
                      className: I.contentDescription,
                      lineClamp: 1,
                      children: (function (e) {
                        let t = (0, g.isEntryActive)(e);
                        return t
                          ? _.default.Messages.MEMBER_LIST_CONTENT_FEED_PLAYING_GAME.format(
                              { gameName: e.extra.game_name }
                            )
                          : _.default.Messages.MEMBER_LIST_CONTENT_FEED_PLAYED_GAME.format(
                              { gameName: e.extra.game_name }
                            );
                      })(t),
                    }),
                    (0, a.jsx)(x, { entry: t }),
                  ],
                }),
              ],
            }),
            (0, a.jsx)(v, { src: r, size: 48, className: I.contentImage }),
          ],
        });
      });
    },
    998268: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return L;
          },
        }),
        n("222007"),
        n("686130"),
        n("781738");
      var a = n("37983"),
        l = n("884691"),
        s = n("10371"),
        i = n.n(s),
        r = n("65597"),
        u = n("77078"),
        o = n("509043"),
        d = n("206230"),
        c = n("945701"),
        f = n("462274"),
        h = n("788506"),
        m = n("315102"),
        p = n("387111"),
        E = n("476774"),
        S = n("773808"),
        g = n("909346"),
        C = n("356980"),
        _ = n("709377"),
        I = n("49111"),
        T = n("782340"),
        v = n("150827");
      let x = e => {
          let t = (0, r.default)([d.default], () => d.default.saturation),
            [n, a] = (0, f.useAvatarColors)(
              e,
              u.tokens.colors.BACKGROUND_FLOATING.resolve({
                theme: I.ThemeTypes.DARK,
                saturation: t,
              }).hex()
            ),
            l = (0, o.hex2int)(n),
            s = (0, o.hex2int)(a),
            c = (0, o.getDarkness)(l) > 0.5 ? n : i(n).darken(2).hex(),
            h = (0, o.getDarkness)(s) > 0.5 ? a : i(a).darken(2).hex();
          return { primaryColor: c, secondaryColor: h };
        },
        N = e => {
          let { channel: t, onClickSuggestion: n } = e,
            l = (0, h.useFrequentlyUsedEmojis)(t.guild_id),
            s = l
              .slice(0, 5)
              .map(e =>
                null == e.id
                  ? { emoji: e, url: e.url }
                  : {
                      emoji: e,
                      url: (0, m.getEmojiURL)({
                        id: e.id,
                        animated: e.animated,
                        size: 58,
                      }),
                    }
              );
          return (0, a.jsx)(a.Fragment, {
            children: s.map(e => {
              let { emoji: t, url: l } = e;
              return null != l
                ? (0, a.jsx)(u.Clickable, {
                    onClick: () => n(t),
                    className: v.emojiSuggestionButton,
                    children: (0, a.jsx)("img", {
                      alt: t.name,
                      src: l,
                      className: v.emoji,
                    }),
                  })
                : null;
            }),
          });
        },
        A = e => {
          let t = (0, E.isEntryActive)(e),
            n = (0, E.isEntryNew)(e);
          return n
            ? t
              ? T.default.Messages
                  .MEMBER_LIST_CONTENT_FEED_USER_IS_PLAYING_NEW_GAME
              : T.default.Messages.MEMBER_LIST_CONTENT_FEED_USER_PLAYED_NEW_GAME
            : t
              ? T.default.Messages.MEMBER_LIST_CONTENT_FEED_USER_IS_PLAYING_GAME
              : T.default.Messages.MEMBER_LIST_CONTENT_FEED_USER_PLAYED_GAME;
        },
        M = (e, t, n) => {
          let a = A(e),
            l = p.default.getName(t.guild_id, t.id, n),
            s = e.extra.game_name,
            i = a.plainFormat({ gameName: s, userName: l });
          return i.replaceAll("*", "");
        },
        R = (e, t, n) => {
          let a = A(e),
            l = p.default.getName(t.guild_id, t.id, n),
            s = e.extra.game_name;
          return a.format({ userName: l, gameName: s });
        },
        j = (e, t) =>
          T.default.Messages.ACTIVITY_REACTION_IMAGE_ALT_TEXT_PLAYING.format({
            username: t.username,
            activity: e.extra.game_name,
          });
      var L = e => {
        let { closePopout: t, channel: n, entry: s, requestId: i } = e,
          { user: r, applicationImageSrc: o } = (0, C.useGamingContentData)(
            s,
            n
          ),
          { primaryColor: d, secondaryColor: f } = x(o),
          [h, m] = l.useState(null);
        if (null == r) return null;
        let p = r.getAvatarURL(n.guild_id, 128),
          I = {
            entry: s,
            user: r,
            applicationImageSrc: o,
            avatarSrc: p,
            altText: j(s, r),
            description: M(s, n, r),
            timestamp: (0, E.formatEntryTimestamp)(s, Date.now()),
            colors: [d, f],
          },
          A = { entry: s, channelId: n.id, guildId: n.guild_id, requestId: i },
          L = e => {
            null != e && null != h && (h.insertEmoji(e, !1, !0), h.focus());
          },
          y = async e => {
            try {
              await (0, g.sendContentImageReply)({ ...I, reply: e }),
                (0, S.trackInteraction)(
                  _.ContentInventoryInteractionTypes.REACTION_MESSAGE_SENT,
                  A
                );
            } finally {
              t();
            }
          };
        return (0, a.jsxs)("div", {
          className: v.popout,
          children: [
            (0, a.jsxs)("div", {
              className: v.hero,
              style: {
                background: "linear-gradient(45deg, "
                  .concat(d, ", ")
                  .concat(f, ")"),
              },
              children: [
                (0, a.jsxs)("div", {
                  className: v.heroDetails,
                  children: [
                    (0, a.jsxs)("div", {
                      children: [
                        (0, a.jsx)(u.Avatar, {
                          src: p,
                          size: u.AvatarSizes.SIZE_40,
                          "aria-label": "avatar",
                        }),
                        (0, a.jsx)(u.Heading, {
                          className: v.popoutDescription,
                          variant: "heading-md/normal",
                          color: "always-white",
                          lineClamp: 3,
                          children: R(s, n, r),
                        }),
                      ],
                    }),
                    (0, a.jsx)(C.GamingContentImage, {
                      size: 80,
                      src: o,
                      className: v.contentImage,
                    }),
                  ],
                }),
                (0, a.jsx)(C.ContentRowBadges, {
                  className: v.badgeContainer,
                  entry: s,
                  textColor: "always-white",
                  iconColor: u.tokens.colors.WHITE,
                }),
              ],
            }),
            (0, a.jsxs)("div", {
              className: v.reactions,
              children: [
                (0, a.jsxs)("div", {
                  className: v.emojiHotrail,
                  children: [
                    (0, a.jsx)(N, { channel: n, onClickSuggestion: L }),
                    (0, a.jsx)(c.ReactionPickerButton, { onSelectEmoji: L }),
                  ],
                }),
                (0, a.jsx)(c.ReplyInput, {
                  placeholder: T.default.Messages.TEXTAREA_PLACEHOLDER.format({
                    channel: "@".concat(r.globalName),
                  }),
                  onEnter: y,
                  setEditorRef: e => m(e),
                }),
              ],
            }),
          ],
        });
      };
    },
    653319: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          CONTENT_FEED_SECTION: function () {
            return f;
          },
          useInjectContentInventoryFeed: function () {
            return h;
          },
        }),
        n("222007"),
        n("808653");
      var a = n("884691"),
        l = n("19766"),
        s = n("599110"),
        i = n("205343"),
        r = n("346967"),
        u = n("709377"),
        o = n("447313"),
        d = n("49111"),
        c = n("782340");
      let f = 0;
      function h(e) {
        let {
            memberStoreProps: { groups: t, rows: n, version: f },
            channelId: h,
            guildId: m,
          } = e,
          [p, E] = a.useState(!1),
          { requestId: S, entries: g } = (0, i.default)(h),
          [C, _, I, T] = a.useMemo(() => {
            if (null == g || 0 === g.length || null == S) return [t, n, f];
            let e = p ? g.length : 3,
              a = g.slice(0, e),
              s = a.map(e => ({
                type: l.MemberListRowTypes.CONTENT_INVENTORY,
                entry: e,
                requestId: S,
              })),
              i = {
                id: o.MEMBER_LIST_CONTENT_GROUP_ID,
                type: l.MemberListRowTypes.CONTENT_INVENTORY_GROUP,
                key: o.MEMBER_LIST_CONTENT_GROUP_ID,
                count: s.length,
                index: n.length,
                title:
                  c.default.Messages.CONTENT_INVENTORY_MEMBERLIST_GROUP_TITLE,
                onToggleExpand: () => E(e => !e),
                expanded: p,
                expandedCount: g.length,
                feedHeight: s
                  .map(r.getContentRowHeight)
                  .reduce((e, t) => e + t, 0),
              },
              u = [i, ...t],
              d = [...n, i, ...s];
            return [u, d, Math.random(), s];
          }, [g, p, t, S, n, f]),
          v = a.useRef(0),
          x = a.useRef(g),
          N = a.useRef(),
          A = a.useCallback(
            e => {
              var t;
              let n = Math.floor(e / r.DEFAULT_CONTENT_ROW_HEIGHT),
                a = Math.min(
                  null !== (t = null == T ? void 0 : T.length) && void 0 !== t
                    ? t
                    : 0,
                  n
                );
              v.current = Math.max(v.current, a);
            },
            [T]
          );
        return (
          a.useEffect(() => {
            x.current = g;
          }, [g]),
          a.useEffect(
            () => (
              (v.current = 0),
              (N.current = Date.now()),
              () => {
                var e, t;
                if (null == S || null == N.current) return;
                let n = Date.now() - N.current;
                if (n < 3e3) return;
                let a =
                  null !==
                    (t =
                      null === (e = x.current) || void 0 === e
                        ? void 0
                        : e.slice(0, v.current).map(e => e.id)) && void 0 !== t
                    ? t
                    : [];
                s.default.track(d.AnalyticEvents.RANKING_ITEMS_SEEN, {
                  request_id: S,
                  first_shown_at: N.current,
                  item_ids: a,
                  surface_type:
                    u.ContentInventorySurfaceTypes.GUILD_MEMBER_LIST,
                  channel_id: h,
                  guild_id: m,
                });
              }
            ),
            [S, h, m]
          ),
          { groups: C, rows: _, version: I, updateMaxRowSeen: A }
        );
      }
    },
    189819: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        }),
        n("222007");
      var a = n("884691"),
        l = n("446674"),
        s = n("265596"),
        i = n("843719"),
        r = n("626346");
      function u(e) {
        let t = (0, l.useStateFromStores)([s.default], () =>
            s.default.getFeed(e)
          ),
          n = a.useMemo(
            () => (null == t ? void 0 : t.entries.map(e => e.content)),
            [t]
          );
        return (n = (0, i.default)(n)), (n = (0, r.default)(n));
      }
    },
    476774: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          calculateActiveTimestampDurations: function () {
            return o;
          },
          formatEntryTimestamp: function () {
            return c;
          },
          isEntryActive: function () {
            return f;
          },
          isEntryNew: function () {
            return h;
          },
          isEntryExpired: function () {
            return m;
          },
        });
      var a = n("866227"),
        l = n.n(a),
        s = n("417847"),
        i = n("718517"),
        r = n("299039"),
        u = n("782340");
      let o = (e, t) => {
          let n = r.default.extractTimestamp(e.id),
            a = Math.abs((t - n) / i.default.Millis.SECOND),
            l = Math.floor(a) % i.default.Seconds.MINUTE,
            s =
              Math.floor(a / i.default.Seconds.MINUTE) %
              i.default.Seconds.MINUTE,
            u = Math.floor(a / i.default.Seconds.HOUR),
            o = Math.floor(a / i.default.Seconds.DAY);
          return { seconds: l, minutes: s, hours: u, days: o };
        },
        d = (e, t) => {
          let { seconds: n, minutes: a, hours: l, days: s } = o(e, t);
          if (s > 0)
            return u.default.Messages.MEMBER_LIST_CONTENT_FEED_TIMESTAMP_FOR_DAYS.format(
              { days: s }
            );
          if (l > 0)
            return u.default.Messages.MEMBER_LIST_CONTENT_FEED_TIMESTAMP_FOR_HOURS.format(
              { hours: l }
            );
          return u.default.Messages.MEMBER_LIST_CONTENT_FEED_TIMESTAMP_ACTIVE.format(
            { minutes: a, seconds: String(n).padStart(2, "0") }
          );
        },
        c = (e, t) => {
          let n = f(e);
          if (n) return d(e, t);
          let a = l(r.default.extractTimestamp(e.id)),
            s = l().diff(a, "s");
          if (s > 7 * i.default.Seconds.DAY) {
            let e = Math.round(s / (7 * i.default.Seconds.DAY));
            return u.default.Messages.MEMBER_LIST_CONTENT_FEED_TIMESTAMP_WEEKS_AGO.format(
              { count: e }
            );
          }
          if (s > i.default.Seconds.DAY) {
            let e = Math.round(s / i.default.Seconds.DAY);
            return u.default.Messages.MEMBER_LIST_CONTENT_FEED_TIMESTAMP_DAYS_AGO.format(
              { count: e }
            );
          }
          if (s > i.default.Seconds.HOUR) {
            let e = Math.round(s / i.default.Seconds.HOUR);
            return u.default.Messages.MEMBER_LIST_CONTENT_FEED_TIMESTAMP_HOURS_AGO.format(
              { count: e }
            );
          } else {
            if (!(s > i.default.Seconds.MINUTE))
              return u.default.Messages.MEMBER_LIST_CONTENT_FEED_TIMESTAMP_SECONDS_AGO.format(
                { count: s }
              );
            let e = Math.round(s / i.default.Seconds.MINUTE);
            return u.default.Messages.MEMBER_LIST_CONTENT_FEED_TIMESTAMP_MINUTES_AGO.format(
              { count: e }
            );
          }
        };
      function f(e) {
        let t = e.traits.find(
          e => e.type === s.ContentInventoryTraitType.IS_LIVE
        );
        return null != t && t.is_live;
      }
      function h(e) {
        let t = e.traits.find(
          e => e.type === s.ContentInventoryTraitType.FIRST_TIME
        );
        return null != t && t.first_time;
      }
      function m(e) {
        return null != e.expires_at && new Date(e.expires_at) < new Date();
      }
    },
    71102: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          fetchDirectoryEntries: function () {
            return f;
          },
          fetchDirectoryCounts: function () {
            return h;
          },
          addDirectoryGuildEntry: function () {
            return m;
          },
          removeDirectoryGuildEntry: function () {
            return p;
          },
          searchDirectoryEntries: function () {
            return E;
          },
          clearDirectorySearch: function () {
            return S;
          },
          updateDirectoryEntry: function () {
            return g;
          },
          selectDirectoryCategory: function () {
            return C;
          },
          fetchGuildEntriesForIds: function () {
            return _;
          },
        });
      var a = n("483366"),
        l = n.n(a),
        s = n("759843"),
        i = n("872717"),
        r = n("913144"),
        u = n("840707"),
        o = n("393467"),
        d = n("730647"),
        c = n("49111");
      let f = l(async (e, t) => {
          try {
            r.default.dispatch({ type: "GUILD_DIRECTORY_FETCH_START" });
            let n = await i.default.get({
              url: c.Endpoints.DIRECTORY_CHANNEL_ENTRIES(e),
              query: { category_id: t },
            });
            r.default.dispatch({
              type: "GUILD_DIRECTORY_FETCH_SUCCESS",
              channelId: e,
              entries: n.body,
            });
          } catch (e) {
            r.default.dispatch({ type: "GUILD_DIRECTORY_FETCH_FAILURE" });
          }
        }, 200),
        h = l(async e => {
          try {
            let t = await i.default.get({
              url: c.Endpoints.DIRECTORY_CHANNEL_CATEGORY_COUNTS(e),
            });
            r.default.dispatch({
              type: "GUILD_DIRECTORY_COUNTS_FETCH_SUCCESS",
              channelId: e,
              counts: t.body,
            });
          } catch (e) {}
        }, 200);
      async function m(e, t, n) {
        let a =
            arguments.length > 3 && void 0 !== arguments[3]
              ? arguments[3]
              : d.DirectoryEntryCategories.UNCATEGORIZED,
          l = await u.default.post({
            url: c.Endpoints.DIRECTORY_CHANNEL_ENTRY(e, t),
            body: { description: n, primary_category_id: a },
            trackedActionData: {
              event: s.NetworkActionNames.DIRECTORY_GUILD_ENTRY_CREATE,
              properties: {
                directory_channel_id: e,
                guild_id: t,
                primary_category_id: a,
              },
            },
          });
        r.default.dispatch({
          type: "GUILD_DIRECTORY_ENTRY_CREATE",
          channelId: e,
          entry: l.body,
        });
      }
      function p(e, t) {
        u.default.delete({
          url: c.Endpoints.DIRECTORY_CHANNEL_ENTRY(e, t),
          trackedActionData: {
            event: s.NetworkActionNames.DIRECTORY_GUILD_ENTRY_DELETE,
            properties: { directory_channel_id: e, guild_id: t },
          },
        }),
          r.default.dispatch({
            type: "GUILD_DIRECTORY_ENTRY_DELETE",
            channelId: e,
            guildId: t,
          });
      }
      let E = l(async (e, t) => {
          let n = o.default.shouldFetch(e, t);
          if (!n) {
            r.default.dispatch({
              type: "GUILD_DIRECTORY_CACHED_SEARCH",
              channelId: e,
              query: t,
            });
            return;
          }
          try {
            r.default.dispatch({
              type: "GUILD_DIRECTORY_SEARCH_START",
              channelId: e,
              query: t,
            });
            let n = await i.default.get({
              url: c.Endpoints.DIRECTORY_ENTRIES_SEARCH(e),
              query: { query: t },
            });
            r.default.dispatch({
              type: "GUILD_DIRECTORY_SEARCH_SUCCESS",
              channelId: e,
              query: t,
              results: n.body,
            });
          } catch (e) {
            r.default.dispatch({ type: "GUILD_DIRECTORY_FETCH_FAILURE" });
          }
        }, 200),
        S = e => {
          r.default.dispatch({
            type: "GUILD_DIRECTORY_SEARCH_CLEAR",
            channelId: e,
          });
        },
        g = async function (e, t, n) {
          let a =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : d.DirectoryEntryCategories.UNCATEGORIZED,
            l = await i.default.patch({
              url: c.Endpoints.DIRECTORY_CHANNEL_ENTRY(e, t),
              body: { description: n, primary_category_id: a },
            });
          r.default.dispatch({
            type: "GUILD_DIRECTORY_ENTRY_UPDATE",
            channelId: e,
            entry: l.body,
          });
        },
        C = (e, t) => {
          r.default.dispatch({
            type: "GUILD_DIRECTORY_CATEGORY_SELECT",
            channelId: e,
            categoryId: t,
          });
        },
        _ = async (e, t) => {
          try {
            let n = await i.default.get({
              url: c.Endpoints.DIRECTORY_CHANNEL_LIST_BY_ID(e),
              query: { entity_ids: t },
            });
            r.default.dispatch({
              type: "GUILD_DIRECTORY_ADMIN_ENTRIES_FETCH_SUCCESS",
              channelId: e,
              entries: n.body,
            });
          } catch (e) {}
        };
    },
    393467: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        }),
        n("424973");
      var a = n("446674"),
        l = n("913144"),
        s = n("513688");
      let i = [],
        r = {},
        u = {};
      class o extends a.default.Store {
        getSearchState(e) {
          var t;
          return null !== (t = r[e]) && void 0 !== t
            ? t
            : { mostRecentQuery: "", fetching: !1 };
        }
        getSearchResults(e, t) {
          var n, a, l;
          return null !==
            (l =
              null === (a = u[e]) || void 0 === a
                ? void 0
                : null === (n = a[t]) || void 0 === n
                  ? void 0
                  : n.results) && void 0 !== l
            ? l
            : i;
        }
        shouldFetch(e, t) {
          var n, a;
          let l =
            null === (a = u[e]) || void 0 === a
              ? void 0
              : null === (n = a[t]) || void 0 === n
                ? void 0
                : n.lastSearchedAt;
          return null == l || Date.now() - l > 12e4;
        }
      }
      o.displayName = "GuildDirectorySearchStore";
      var d = new o(l.default, {
        GUILD_DIRECTORY_SEARCH_START: function (e) {
          let { channelId: t, query: n } = e;
          r[t] = { fetching: !0, mostRecentQuery: n };
        },
        GUILD_DIRECTORY_SEARCH_SUCCESS: function (e) {
          let { channelId: t, query: n, results: a } = e;
          r[t] = { ...r[t], fetching: !1 };
          let l = [];
          a.forEach(e => {
            let t = (0, s.guildDirectoryEntryFromServer)(e);
            l.push(t);
          }),
            (u[t] = {
              ...u[t],
              [n]: {
                results: (0, s.orderByTotalMemberCount)(l),
                lastSearchedAt: Date.now(),
              },
            });
        },
        GUILD_DIRECTORY_SEARCH_FAILURE: function (e) {
          let { channelId: t } = e;
          r[t] = { ...r[t], fetching: !1 };
        },
        GUILD_DIRECTORY_SEARCH_CLEAR: function (e) {
          let { channelId: t } = e;
          r[t] = { fetching: !1, mostRecentQuery: "" };
        },
        GUILD_DIRECTORY_CACHED_SEARCH: function (e) {
          let { channelId: t, query: n } = e;
          r[t] = { fetching: !1, mostRecentQuery: n };
        },
        GUILD_DIRECTORY_ENTRY_DELETE: function (e) {
          var t;
          let { channelId: n, guildId: a } = e,
            l =
              null === (t = r[n]) || void 0 === t ? void 0 : t.mostRecentQuery;
          if (null == l) return;
          let s = u[n][l];
          if (null == s) return;
          let i = s.results.filter(e => e.guildId !== a);
          u[n] = { ...u[n], [r[n].mostRecentQuery]: { ...s, results: i } };
        },
      });
    },
    209397: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return p;
          },
        }),
        n("222007");
      var a = n("446674"),
        l = n("913144"),
        s = n("513688"),
        i = n("730647");
      let r = Object.freeze({}),
        u = !1,
        o = {},
        d = {},
        c = {},
        f = {},
        h = {};
      class m extends a.default.Store {
        isFetching() {
          return u;
        }
        getCurrentCategoryId(e) {
          var t;
          return null !== (t = d[e]) && void 0 !== t
            ? t
            : i.DirectoryEntryCategories.ALL;
        }
        getDirectoryEntries(e, t) {
          var n;
          return null != t
            ? null === (n = c[e]) || void 0 === n
              ? void 0
              : n[t]
            : o[e];
        }
        getDirectoryEntry(e, t) {
          var n;
          return null === (n = o[e]) || void 0 === n ? void 0 : n[t];
        }
        getDirectoryAllEntriesCount(e) {
          var t;
          return Object.keys(null !== (t = o[e]) && void 0 !== t ? t : {})
            .length;
        }
        getDirectoryCategoryCounts(e) {
          var t;
          return null !== (t = f[e]) && void 0 !== t ? t : r;
        }
        getAdminGuildEntryIds(e) {
          return h[e];
        }
      }
      m.displayName = "GuildDirectoryStore";
      var p = new m(l.default, {
        GUILD_DIRECTORY_FETCH_START: function () {
          u = !0;
        },
        GUILD_DIRECTORY_FETCH_SUCCESS: function (e) {
          let { channelId: t, entries: n } = e;
          u = !1;
          let a = {},
            l = {};
          n.forEach(e => {
            let t = (0, s.guildDirectoryEntryFromServer)(e);
            (a[t.guildId] = t),
              null != l[t.primaryCategoryId]
                ? (l[t.primaryCategoryId][t.guildId] = t)
                : (l[t.primaryCategoryId] = { [t.guildId]: t });
          }),
            (o[t] = a),
            (c[t] = l);
        },
        GUILD_DIRECTORY_FETCH_FAILURE: function () {
          u = !1;
        },
        GUILD_DIRECTORY_ENTRY_CREATE: function (e) {
          var t, n, a, l, r;
          let { channelId: u, entry: d } = e,
            h = (0, s.guildDirectoryEntryFromServer)(d);
          if (
            null == h ||
            (null === (t = o[u]) || void 0 === t ? void 0 : t[h.guildId]) !=
              null
          )
            return;
          o[u] = { ...o[u], [h.guildId]: h };
          let m =
            null !== (a = h.primaryCategoryId) && void 0 !== a
              ? a
              : i.DirectoryEntryCategories.UNCATEGORIZED;
          if (
            ((c[u] = {
              ...c[u],
              [m]: {
                ...(null === (n = c[u]) || void 0 === n ? void 0 : n[m]),
                [h.guildId]: h,
              },
            }),
            null != f[u])
          ) {
            let e =
              null !==
                (r = null === (l = f[u]) || void 0 === l ? void 0 : l[m]) &&
              void 0 !== r
                ? r
                : 0;
            f[u] = { ...f[u], [m]: e + 1 };
          }
        },
        GUILD_DIRECTORY_ENTRY_DELETE: function (e) {
          var t, n;
          let { channelId: a, guildId: l } = e,
            s = null === (t = o[a]) || void 0 === t ? void 0 : t[l];
          if (null == s) return;
          let i = s.primaryCategoryId,
            r = Object.assign({}, o[a]);
          delete r[l],
            null === (n = h[a]) || void 0 === n || n.delete(l),
            (h[a] = new Set(h[a])),
            (o[a] = r);
          let u = Object.assign({}, c[a][i]);
          if ((delete u[l], (c[a] = { ...c[a], [i]: u }), null != f[a])) {
            let e = f[a][i] - 1;
            f[a] = { ...f[a], [i]: e >= 0 ? e : 0 };
          }
        },
        GUILD_DIRECTORY_ENTRY_UPDATE: function (e) {
          var t, n, a, l, r, u, d, h, m;
          let { channelId: p, entry: E } = e,
            S = (0, s.guildDirectoryEntryFromServer)(E),
            g = null === (t = o[p]) || void 0 === t ? void 0 : t[S.guildId];
          o[p] = { ...o[p], [S.guildId]: { ...g, ...S } };
          let C =
              null !== (l = null == g ? void 0 : g.primaryCategoryId) &&
              void 0 !== l
                ? l
                : i.DirectoryEntryCategories.UNCATEGORIZED,
            _ =
              null !== (r = S.primaryCategoryId) && void 0 !== r
                ? r
                : i.DirectoryEntryCategories.UNCATEGORIZED,
            I = Object.assign(
              {},
              null === (n = c[p]) || void 0 === n ? void 0 : n[C]
            );
          null != g && C !== _ && delete I[S.guildId],
            (c[p] = {
              ...c[p],
              [C]: I,
              [_]: {
                ...(null === (a = c[p]) || void 0 === a ? void 0 : a[_]),
                [S.guildId]: { ...g, ...S },
              },
            }),
            _ !== C &&
              null != f[p] &&
              (f[p] = {
                ...f[p],
                [C]:
                  (null === (u = f[p]) || void 0 === u ? void 0 : u[C]) > 0
                    ? (null === (d = f[p]) || void 0 === d ? void 0 : d[C]) - 1
                    : 0,
                [_]:
                  (null !==
                    (m = null === (h = f[p]) || void 0 === h ? void 0 : h[_]) &&
                  void 0 !== m
                    ? m
                    : 0) + 1,
              });
        },
        GUILD_DIRECTORY_CATEGORY_SELECT: function (e) {
          let { channelId: t, categoryId: n } = e;
          d[t] = n;
        },
        GUILD_DIRECTORY_COUNTS_FETCH_SUCCESS: function (e) {
          let { channelId: t, counts: n } = e;
          f[t] = n;
        },
        GUILD_DIRECTORY_ADMIN_ENTRIES_FETCH_SUCCESS: function (e) {
          let { channelId: t, entries: n } = e,
            a = new Set();
          n.forEach(e => {
            let t = (0, s.guildDirectoryEntryFromServer)(e);
            a.add(t.guildId);
          }),
            (h[t] = a);
        },
      });
    },
    513688: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          guildDirectoryEntryFromServer: function () {
            return u;
          },
          MAX_CATEGORY_SERVERS: function () {
            return o;
          },
          orderByTotalMemberCount: function () {
            return d;
          },
          rankByDateAdded: function () {
            return c;
          },
          rankGuildEntries: function () {
            return f;
          },
          hasMinimumMemberCount: function () {
            return h;
          },
        }),
        n("222007");
      var a = n("627445"),
        l = n.n(a),
        s = n("917351"),
        i = n.n(s),
        r = n("730647");
      function u(e) {
        var t, n, a, s, i, u, o;
        return (
          l(
            e.type === r.DirectoryEntryTypes.GUILD,
            "Directory entries must be connected to a guild!"
          ),
          {
            channelId: e.directory_channel_id,
            guildId: e.entity_id,
            type: e.type,
            authorId: e.author_id,
            createdAt: e.created_at,
            description: e.description,
            primaryCategoryId: e.primary_category_id,
            name: null === (t = e.guild) || void 0 === t ? void 0 : t.name,
            icon: null === (n = e.guild) || void 0 === n ? void 0 : n.icon,
            splash: null === (a = e.guild) || void 0 === a ? void 0 : a.splash,
            features: new Set(
              null === (s = e.guild) || void 0 === s ? void 0 : s.features
            ),
            approximateMemberCount:
              null === (i = e.guild) || void 0 === i
                ? void 0
                : i.approximate_member_count,
            approximatePresenceCount:
              null === (u = e.guild) || void 0 === u
                ? void 0
                : u.approximate_presence_count,
            featurableInDirectory:
              null === (o = e.guild) || void 0 === o
                ? void 0
                : o.featurable_in_directory,
          }
        );
      }
      let o = 5;
      function d(e) {
        return i.orderBy(e, [e => e.approximateMemberCount], ["desc"]);
      }
      function c(e) {
        var t;
        let n = e.filter(e => e.featurableInDirectory && h(e));
        return ((t = n), i.orderBy(t, [e => e.createdAt], ["desc"])).slice(
          0,
          o
        );
      }
      function f(e) {
        return d(e);
      }
      function h(e) {
        var t;
        return (
          (null !== (t = e.approximateMemberCount) && void 0 !== t ? t : 0) >= 5
        );
      }
    },
    187163: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
          useCanCreateOrAddGuildInDirectory: function () {
            return o;
          },
        });
      var a = n("446674"),
        l = n("42203"),
        s = n("305961"),
        i = n("957255"),
        r = n("49111");
      function u(e) {
        let t = (0, a.useStateFromStores)([s.default], () =>
            s.default.getGuild(e.guildId)
          ),
          n = (0, a.useStateFromStores)([l.default], () =>
            l.default.getChannel(e.channelId)
          ),
          u = (0, a.useStateFromStores)([i.default], () =>
            i.default.can(r.Permissions.ADMINISTRATOR, t)
          ),
          o = (0, a.useStateFromStores)([i.default], () =>
            i.default.can(r.Permissions.MANAGE_MESSAGES, n)
          );
        return { isEntryAdmin: u, canEdit: u || o, canRemove: u || o };
      }
      function o(e) {
        return (0, a.useStateFromStores)([i.default], () =>
          i.default.can(r.Permissions.SEND_MESSAGES, e)
        );
      }
    },
    40635: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return x;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("446674"),
        i = n("77078"),
        r = n("913144"),
        u = n("267363"),
        o = n("27978"),
        d = n("660478"),
        c = n("599110"),
        f = n("15433"),
        h = n("71102"),
        m = n("393467"),
        p = n("209397"),
        E = n("187163"),
        S = n("132615"),
        g = n("663685"),
        C = n("516056"),
        _ = n("30176"),
        I = n("730647"),
        T = n("49111"),
        v = n("794260"),
        x = e => {
          var t;
          let { channel: x, guild: N } = e,
            {
              currentCategoryId: A,
              directoryEntries: M,
              categoryCounts: R,
              allEntriesCount: j,
              isLoading: L,
            } = (0, s.useStateFromStoresObject)([p.default], () => {
              let e = p.default.getCurrentCategoryId(x.id),
                t = p.default.getDirectoryEntries(
                  x.id,
                  e === I.DirectoryEntryCategories.ALL ? null : e
                ),
                n = p.default.getDirectoryCategoryCounts(x.id),
                a = p.default.getDirectoryAllEntriesCount(x.id),
                l = p.default.isFetching();
              return {
                currentCategoryId: e,
                directoryEntries: t,
                categoryCounts: n,
                allEntriesCount: a,
                isLoading: l,
              };
            });
          l.useEffect(
            () => () => {
              let e = d.default.lastMessageId(x.id);
              null != e &&
                r.default.wait(() => {
                  (0, u.ack)(x.id, !0, !0, e);
                });
            },
            [x.id]
          );
          let y = l.useMemo(
              () =>
                null != M
                  ? (0, C.generateDirectoryRows)(Object.values(M), A)
                  : null,
              [M, A]
            ),
            {
              mostRecentQuery: O,
              searchFetching: P,
              searchResults: D,
            } = (0, s.useStateFromStoresObject)([m.default], () => {
              let { mostRecentQuery: e, fetching: t } =
                m.default.getSearchState(x.id);
              return {
                mostRecentQuery: e,
                searchFetching: t,
                searchResults: m.default.getSearchResults(x.id, e),
              };
            }),
            [b, U] = l.useState(O),
            w = "" !== O,
            { showHubEventsList: F } = o.default.useExperiment(
              {
                guildId: null !== (t = N.id) && void 0 !== t ? t : "",
                location: "6f7fb0_1",
              },
              { autoTrackExposure: !1 }
            );
          l.useEffect(() => {
            h.fetchDirectoryEntries(x.id),
              h.fetchDirectoryCounts(x.id),
              F && f.fetchDirectoryEntries(x.id),
              U(O);
          }, [x.id]),
            l.useEffect(() => {
              c.default.track(T.AnalyticEvents.GUILD_DIRECTORY_CHANNEL_VIEWED, {
                directory_channel_id: x.id,
                directory_guild_id: N.id,
                primary_category_id: A,
              });
            }, [x.id, N.id, A]);
          let V = (0, E.useCanCreateOrAddGuildInDirectory)(x),
            k = V
              ? () => {
                  (0, i.openModalLazy)(async () => {
                    let { default: e } = await n
                      .el("467085")
                      .then(n.bind(n, "467085"));
                    return t =>
                      (0, a.jsx)(e, {
                        ...t,
                        directoryGuildName: N.name,
                        directoryGuildId: N.id,
                        directoryChannelId: x.id,
                        currentCategoryId:
                          A === I.DirectoryEntryCategories.ALL ? null : A,
                      });
                  });
                }
              : void 0,
            B = e => {
              0 !== b.trim().length &&
                e.charCode === T.KeyboardKeys.ENTER &&
                (h.searchDirectoryEntries(x.id, b),
                c.default.track(T.AnalyticEvents.GUILD_DIRECTORY_SEARCH, {
                  directory_channel_id: x.id,
                  directory_guild_id: N.id,
                }));
            },
            G = () => {
              U(""), h.clearDirectorySearch(x.id);
            };
          return w
            ? (0, a.jsx)(_.default, {
                searchQuery: b,
                setSearchQuery: U,
                mostRecentQuery: O,
                handleSearchKeyPress: B,
                handleClearSearch: G,
                handleCreateOrAddGuild: k,
                searchResults: D,
                searchFetching: P,
              })
            : null == y && null == A
              ? (0, a.jsx)("div", {
                  className: v.pageContainer,
                  children: (0, a.jsx)(i.Spinner, { className: v.spinner }),
                })
              : (null == y ? void 0 : y.length) === 0 && null == A
                ? (0, a.jsx)("div", {
                    className: v.pageContainer,
                    children: (0, a.jsx)(S.default, {
                      guild: N,
                      onAddGuild: k,
                    }),
                  })
                : (0, a.jsx)(g.default, {
                    channel: x,
                    searchQuery: b,
                    setSearchQuery: U,
                    handleSearchKeyPress: B,
                    handleClearSearch: G,
                    handleCreateOrAddGuild: k,
                    currentCategoryId: A,
                    handleSelectCategory: e => {
                      h.selectDirectoryCategory(x.id, e);
                    },
                    directoryEntries: y,
                    categoryCounts: R,
                    allEntriesCount: j,
                    isLoading: L,
                  });
        };
    },
    132615: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("77078"),
        i = n("952999"),
        r = n("49111"),
        u = n("782340"),
        o = n("125833"),
        d = e => {
          let { guild: t, onAddGuild: d } = e,
            c = l.useCallback(() => {
              (0, s.openModalLazy)(async () => {
                let { default: e } = await n
                  .el("310688")
                  .then(n.bind(n, "310688"));
                return n =>
                  (0, a.jsx)(e, {
                    ...n,
                    guild: t,
                    source: r.InstantInviteSources.HUB_DIRECTORY,
                    analyticsLocation: {
                      section: r.AnalyticsSections.HUB_WELCOME_CTA,
                    },
                  });
              });
            }, [t]);
          return (0, a.jsxs)("div", {
            className: o.emptyWrapper,
            children: [
              (0, a.jsx)("img", {
                className: o.emptyImage,
                alt: "",
                src: n("704176"),
              }),
              (0, a.jsx)(s.Heading, {
                className: o.emptyTitle,
                variant: "heading-xl/semibold",
                children:
                  u.default.Messages.HUB_DIRECTORY_CHANNEL_EMPTY_TITLE.format({
                    guildName: t.name,
                  }),
              }),
              (0, a.jsx)(s.Text, {
                variant: "text-md/normal",
                className: o.emptySubtitle,
                children:
                  u.default.Messages.HUB_DIRECTORY_CHANNEL_EMPTY_SUBTITLE,
              }),
              null != d
                ? (0, a.jsx)(i.WelcomeMessageCTA, {
                    className: o.emptyCTA,
                    iconUrl: n("233135"),
                    header:
                      u.default.Messages.HUB_DIRECTORY_CHANNEL_EMPTY_ADD_SERVER,
                    completed: !1,
                    onClick: d,
                  })
                : null,
              (0, a.jsx)(i.WelcomeMessageCTA, {
                className: o.emptyCTA,
                iconUrl: n("243826"),
                header: u.default.Messages.HUB_DIRECTORY_CHANNEL_EMPTY_INVITE,
                completed: !1,
                onClick: c,
              }),
            ],
          });
        };
    },
    791679: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          AddEntryCard: function () {
            return R;
          },
          default: function () {
            return L;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("446674"),
        u = n("77078"),
        o = n("272030"),
        d = n("851387"),
        c = n("407063"),
        f = n("239380"),
        h = n("813006"),
        m = n("305961"),
        p = n("580357"),
        E = n("476263"),
        S = n("433487"),
        g = n("987772"),
        C = n("587974"),
        _ = n("149279"),
        I = n("315102"),
        T = n("187163"),
        v = n("175703"),
        x = n("49111"),
        N = n("782340"),
        A = n("843143"),
        M = n("712967");
      let R = e => {
        let { onClick: t } = e;
        return (0, a.jsxs)(u.Clickable, {
          onClick: t,
          className: A.addEntryCard,
          children: [
            (0, a.jsx)("img", { alt: "", src: M }),
            (0, a.jsx)(u.Text, {
              variant: "text-sm/semibold",
              color: "header-primary",
              className: A.addServerText,
              children: N.default.Messages.HUB_ADD_SERVER_CTA,
            }),
          ],
        });
      };
      function j(e) {
        let { entry: t } = e,
          [s, r] = l.useState(!1),
          { canEdit: o } = (0, T.default)(t);
        return (0, a.jsx)("div", {
          className: i(A.actionButtonsContainer, { [A.forceButtonsShow]: s }),
          children: (0, a.jsxs)(_.default, {
            children: [
              o
                ? (0, a.jsx)(u.Tooltip, {
                    text: N.default.Messages.HUB_ENTRY_UPDATE,
                    hideOnClick: !0,
                    children: e => {
                      let { onClick: l, ...s } = e;
                      return (0, a.jsx)(_.Button, {
                        ...s,
                        onClick: () => {
                          null == l || l(),
                            (0, u.openModalLazy)(async () => {
                              let { default: e } = await n
                                .el("895792")
                                .then(n.bind(n, "895792"));
                              return n => (0, a.jsx)(e, { ...n, entry: t });
                            });
                        },
                        "aria-label": N.default.Messages.HUB_ENTRY_UPDATE,
                        children: (0, a.jsx)(g.default, {
                          className: A.overflowIcon,
                        }),
                      });
                    },
                  })
                : null,
              (0, a.jsx)(v.default, {
                onRequestOpen: () => r(!0),
                onRequestClose: () => r(!1),
                entry: t,
                hideEditButton: !0,
                children: e => {
                  let { onClick: t, ...n } = e;
                  return (0, a.jsx)(u.Tooltip, {
                    text: N.default.Messages.MORE,
                    hideOnClick: !0,
                    children: e => {
                      let { onClick: l, ...s } = e;
                      return (0, a.jsx)(_.Button, {
                        ...n,
                        ...s,
                        onClick: e => {
                          null == l || l(), t(e);
                        },
                        "aria-label": N.default.Messages.MORE,
                        children: (0, a.jsx)(S.default, {
                          className: A.overflowIcon,
                        }),
                      });
                    },
                  });
                },
              }),
            ],
          }),
        });
      }
      var L = e => {
        var t;
        let { entry: s } = e,
          [i, S] = l.useState(!1),
          g = (0, r.useStateFromStores)([m.default], () =>
            m.default.getGuild(s.guildId)
          ),
          _ = null != g,
          T = async () => {
            S(!0);
            try {
              _
                ? (0, f.transitionToGuild)(s.guildId)
                : await d.default.joinGuild(s.guildId, {
                    source: x.JoinGuildSources.DIRECTORY_ENTRY,
                  });
            } finally {
              S(!1);
            }
          },
          v = I.default.getGuildSplashURL({
            id: s.guildId,
            splash: s.splash,
            size: 300 * (0, c.getDevicePixelRatio)(),
          }),
          M =
            null !==
              (t = I.default.getGuildIconURL({
                id: s.guildId,
                icon: s.icon,
                size: 40,
              })) && void 0 !== t
              ? t
              : void 0,
          R = N.default.Messages.JOIN;
        return (
          _ && (R = N.default.Messages.HUB_DIRECTORY_CARD_JOINED_GUILD_BUTTON),
          (0, a.jsxs)("div", {
            className: A.card,
            onContextMenu: e => {
              (0, o.openContextMenuLazy)(e, async () => {
                let { default: e } = await n
                  .el("184727")
                  .then(n.bind(n, "184727"));
                return t => (0, a.jsx)(e, { ...t, entry: s });
              });
            },
            children: [
              (0, a.jsxs)("div", {
                className: A.cardHeader,
                children: [
                  (0, a.jsx)("div", {
                    className: A.splash,
                    children:
                      null != v &&
                      (0, a.jsx)("img", {
                        src: v,
                        alt: "",
                        className: A.splashImage,
                      }),
                  }),
                  (0, a.jsx)("div", {
                    className: A.guildIcon,
                    children: (0, a.jsx)(C.default, {
                      mask: C.default.Masks.SQUIRCLE,
                      width: 48,
                      height: 48,
                      children: (0, a.jsx)("div", {
                        className: A.iconMask,
                        children: (0, a.jsx)(E.default, {
                          className: A.icon,
                          iconSrc: M,
                          guild: new h.default(s),
                          size: E.default.Sizes.MEDIUM,
                          active: !0,
                        }),
                      }),
                    }),
                  }),
                ],
              }),
              (0, a.jsxs)("div", {
                className: A.guildInfo,
                children: [
                  (0, a.jsxs)("div", {
                    className: A.title,
                    children: [
                      (0, a.jsx)(p.default, {
                        className: A.guildBadge,
                        guild: s,
                        tooltipColor: u.Tooltip.Colors.PRIMARY,
                      }),
                      (0, a.jsx)(u.Text, {
                        className: A.guildName,
                        variant: "heading-md/semibold",
                        color: "header-primary",
                        children: s.name,
                      }),
                    ],
                  }),
                  (0, a.jsx)(u.Text, {
                    className: A.description,
                    variant: "text-sm/normal",
                    color: "header-secondary",
                    children: s.description,
                  }),
                  (0, a.jsxs)("div", {
                    className: A.memberInfo,
                    children: [
                      null != s.approximatePresenceCount &&
                        (0, a.jsxs)("div", {
                          className: A.memberCount,
                          children: [
                            (0, a.jsx)("div", { className: A.dotOnline }),
                            (0, a.jsx)(u.Text, {
                              variant: "text-xs/normal",
                              color: "header-secondary",
                              children:
                                N.default.Messages.INSTANT_INVITE_GUILD_MEMBERS_ONLINE.format(
                                  { membersOnline: s.approximatePresenceCount }
                                ),
                            }),
                          ],
                        }),
                      null != s.approximateMemberCount &&
                        (0, a.jsxs)("div", {
                          className: A.memberCount,
                          children: [
                            (0, a.jsx)("div", { className: A.dotOffline }),
                            (0, a.jsx)(u.Text, {
                              variant: "text-xs/normal",
                              color: "header-secondary",
                              children:
                                N.default.Messages.INSTANT_INVITE_GUILD_MEMBERS_TOTAL.format(
                                  { count: s.approximateMemberCount }
                                ),
                            }),
                          ],
                        }),
                    ],
                  }),
                  (0, a.jsx)(u.Button, {
                    submitting: i,
                    className: A.joinButton,
                    color: _ ? u.Button.Colors.PRIMARY : u.Button.Colors.GREEN,
                    onClick: T,
                    children: R,
                  }),
                ],
              }),
              (0, a.jsx)(j, { entry: s }),
            ],
          })
        );
      };
    },
    184727: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("77078"),
        i = n("272030"),
        r = n("861370"),
        u = n("377114"),
        o = n("907566"),
        d = n("71102"),
        c = n("187163"),
        f = n("782340");
      function h(e) {
        let {
            entry: t,
            onSelect: h,
            closePopout: m,
            forceLightTheme: p,
            hideEditButton: E = !1,
          } = e,
          { isEntryAdmin: S, canEdit: g, canRemove: C } = (0, c.default)(t),
          _ = (0, r.default)({
            id: t.guildId,
            label: f.default.Messages.COPY_ID_GUILD,
            onSuccess: m,
          });
        l.useEffect(() => {
          !g && !C && null == _ && (0, i.closeContextMenu)();
        });
        let I = () => {
          d.removeDirectoryGuildEntry(t.channelId, t.guildId);
        };
        function T() {
          (0, i.closeContextMenu)(), null == m || m();
        }
        return (0, a.jsxs)(s.Menu, {
          className: p ? "theme-light" : null,
          navId: "guild-entry-context",
          onClose: T,
          "aria-label": f.default.Messages.GUILD_ACTIONS_MENU_LABEL,
          onSelect: h,
          children: [
            (0, a.jsxs)(s.MenuGroup, {
              children: [
                g && !E
                  ? (0, a.jsx)(s.MenuItem, {
                      id: "update-entry",
                      label: f.default.Messages.HUB_ENTRY_UPDATE,
                      action: function () {
                        (0, s.openModalLazy)(async () => {
                          let { default: e } = await n
                            .el("895792")
                            .then(n.bind(n, "895792"));
                          return n => (0, a.jsx)(e, { ...n, entry: t });
                        }),
                          T();
                      },
                    })
                  : null,
                C
                  ? (0, a.jsx)(s.MenuItem, {
                      id: "remove-from-hub",
                      label: f.default.Messages.HUB_ENTRY_REMOVE,
                      action: function () {
                        (0, s.openModal)(e =>
                          (0, a.jsx)(s.ConfirmModal, {
                            header: f.default.Messages.HUB_ENTRY_REMOVE,
                            confirmText: f.default.Messages.REMOVE,
                            cancelText: f.default.Messages.CANCEL,
                            onConfirm: I,
                            ...e,
                            children: (0, a.jsx)(s.Text, {
                              variant: "text-md/normal",
                              children:
                                f.default.Messages.HUB_ENTRY_REMOVE_BODY.format(
                                  { guildName: t.name }
                                ),
                            }),
                          })
                        ),
                          T();
                      },
                      color: "danger",
                    })
                  : null,
                S
                  ? null
                  : (0, a.jsx)(a.Fragment, {
                      children: (0, a.jsx)(s.MenuItem, {
                        id: "report-server-listing",
                        label: f.default.Messages.REPORT_SERVER_NO_NAME,
                        action: function () {
                          null != t &&
                            ((0, u.showReportModalForGuildDirectoryEntry)(t),
                            T());
                        },
                        icon: o.default,
                        color: "danger",
                      }),
                    }),
              ],
            }),
            (0, a.jsx)(s.MenuGroup, { children: _ }),
          ],
        });
      }
    },
    175703: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("77078"),
        s = n("184727"),
        i = e => {
          let {
            entry: t,
            forceLightTheme: n,
            hideEditButton: i,
            children: r,
            onRequestOpen: u,
            onRequestClose: o,
          } = e;
          return (0, a.jsx)(l.Popout, {
            onRequestOpen: u,
            onRequestClose: o,
            animation: l.Popout.Animation.NONE,
            position: "bottom",
            spacing: 4,
            align: "right",
            renderPopout: e => {
              let { closePopout: l } = e;
              return (0, a.jsx)(s.default, {
                entry: t,
                closePopout: l,
                forceLightTheme: n,
                hideEditButton: i,
              });
            },
            children: r,
          });
        };
    },
    663685: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return x;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("65597"),
        u = n("77078"),
        o = n("737960"),
        d = n("305961"),
        c = n("957255"),
        f = n("466857"),
        h = n("315102"),
        m = n("791679"),
        p = n("730647"),
        E = n("49111"),
        S = n("782340"),
        g = n("794260"),
        C = n("531591"),
        _ = n("981726"),
        I = n("529547");
      let T = (0, o.default)(e => {
        let {
            searchQuery: t,
            setSearchQuery: n,
            handleClearSearch: l,
            handleSearchKeyPress: s,
            width: r,
          } = e,
          o = null != r && r <= 800;
        return (0, a.jsxs)("div", {
          className: C.header,
          children: [
            (0, a.jsx)("img", {
              alt: "",
              className: C.headerImage,
              src: o ? I : _,
            }),
            (0, a.jsx)("div", {
              className: C.headerContentWrapper,
              children: (0, a.jsxs)("div", {
                className: i(C.headerContent, { [C.headerContentSmall]: o }),
                children: [
                  (0, a.jsx)(u.Heading, {
                    variant: "heading-xl/semibold",
                    className: C.searchTitle,
                    children: S.default.Messages.HUB_DIRECTORY_SEARCH_TITLE,
                  }),
                  (0, a.jsx)(u.Text, {
                    variant: "text-md/normal",
                    className: C.searchSubtitle,
                    children: S.default.Messages.HUB_DIRECTORY_SEARCH_SUBTITLE,
                  }),
                  (0, a.jsx)(f.default, {
                    searchTerm: t,
                    className: C.searchBox,
                    inputClassName: C.searchBoxInput,
                    closeIconClassName: C.closeIcon,
                    searchIconClassName: C.searchIcon,
                    label: S.default.Messages.DIRECTORY_SEARCH_PLACEHOLDER,
                    placeholder:
                      S.default.Messages.DIRECTORY_SEARCH_PLACEHOLDER,
                    onChange: n,
                    onClear: l,
                    onKeyPress: s,
                    cta:
                      null != t && t.length > 0
                        ? S.default.Messages.GUILD_DISCOVERY_SEARCH_ENTER_CTA
                        : null,
                  }),
                ],
              }),
            }),
          ],
        });
      });
      function v(e) {
        let {
            guild: t,
            directoryEntries: n,
            handleCreateOrAddGuild: l,
            isLoading: s,
          } = e,
          o = (0, r.default)([c.default], () =>
            c.default.can(E.Permissions.ADMINISTRATOR, t)
          ),
          d = [];
        null != n &&
          n.forEach(e => {
            d = d.concat(e.entries);
          }),
          d.sort((e, t) => {
            var n, a;
            return (
              (null !== (n = t.approximateMemberCount) && void 0 !== n
                ? n
                : 0) -
              (null !== (a = e.approximateMemberCount) && void 0 !== a ? a : 0)
            );
          });
        let f = h.default.getGuildSplashURL({ id: t.id, splash: t.splash });
        return (0, a.jsx)("div", {
          className: g.pageContainer,
          children: (0, a.jsxs)(u.AdvancedScrollerAuto, {
            className: g.scroller,
            children: [
              (0, a.jsxs)("div", {
                className: C.header,
                children: [
                  null != f
                    ? (0, a.jsx)("img", {
                        alt: "",
                        className: i(C.headerImage, C.headerImageSimple),
                        src: f,
                      })
                    : null,
                  (0, a.jsx)("div", { className: C.headerImageBG }),
                  (0, a.jsx)("div", {
                    className: C.headerContentWrapper,
                    children: (0, a.jsx)("div", {
                      className: i(C.headerContent, C.headerContentSmall),
                      children: (0, a.jsx)(u.Heading, {
                        variant: "heading-xl/semibold",
                        color: "always-white",
                        children:
                          S.default.Messages.GUILD_DISCOVERY_CATEGORY_SEARCH_PLACEHOLDER.format(
                            { categoryName: "Midjourney" }
                          ),
                      }),
                    }),
                  }),
                ],
              }),
              s && null == n
                ? (0, a.jsx)(u.Spinner, { className: g.spinner })
                : (0, a.jsxs)("div", {
                    className: g.cardsContainer,
                    children: [
                      d.map(e =>
                        (0, a.jsx)(m.default, { entry: e }, e.guildId)
                      ),
                      o && null != l
                        ? (0, a.jsx)(m.AddEntryCard, { onClick: l })
                        : null,
                    ],
                  }),
            ],
          }),
        });
      }
      var x = e => {
        let {
            channel: t,
            directoryEntries: n,
            handleCreateOrAddGuild: s,
            searchQuery: i,
            setSearchQuery: o,
            handleClearSearch: c,
            handleSearchKeyPress: f,
            currentCategoryId: h,
            handleSelectCategory: _,
            categoryCounts: I,
            allEntriesCount: x,
            isLoading: N,
          } = e,
          A = (0, r.default)([d.default], () =>
            d.default.getGuild(t.getGuildId())
          );
        return null != A && A.hasFeature(E.GuildFeatures.SHARD)
          ? (0, a.jsx)(v, {
              guild: A,
              directoryEntries: n,
              handleCreateOrAddGuild: s,
              isLoading: N,
            })
          : (0, a.jsx)("div", {
              className: g.pageContainer,
              children: (0, a.jsxs)(u.AdvancedScrollerAuto, {
                className: g.scroller,
                children: [
                  (0, a.jsx)(T, {
                    searchQuery: i,
                    setSearchQuery: o,
                    handleClearSearch: c,
                    handleSearchKeyPress: f,
                  }),
                  (0, a.jsx)(u.AdvancedScrollerThin, {
                    orientation: "horizontal",
                    children: (0, a.jsxs)(u.TabBar, {
                      className: C.tabBar,
                      type: "top",
                      look: "brand",
                      selectedItem: h,
                      onItemSelect: e => {
                        _(e);
                      },
                      children: [
                        (0, a.jsx)(
                          u.TabBar.Item,
                          {
                            className: C.tabBarItem,
                            id: p.DirectoryEntryCategories.ALL,
                            children: ""
                              .concat(
                                S.default.Messages.DIRECTORY_CATEGORY_ALL,
                                " ("
                              )
                              .concat(x, ")"),
                          },
                          p.DirectoryEntryCategories.ALL
                        ),
                        (0, p.getHubCategories)(t.id).map(e => {
                          let { value: t, label: n } = e;
                          return (0, a.jsx)(
                            u.TabBar.Item,
                            {
                              className: C.tabBarItem,
                              id: t,
                              children: ""
                                .concat(n, " ")
                                .concat(
                                  null != I[t] ? "(".concat(I[t], ")") : ""
                                ),
                            },
                            t
                          );
                        }),
                      ],
                    }),
                  }),
                  N && null == n
                    ? (0, a.jsx)(u.Spinner, { className: g.spinner })
                    : null == n
                      ? void 0
                      : n.map((e, t) =>
                          (0, a.jsxs)(
                            l.Fragment,
                            {
                              children: [
                                void 0 !== e.header
                                  ? (0, a.jsx)(u.Text, {
                                      variant: "text-md/semibold",
                                      className: C.sectionHeader,
                                      children: e.header,
                                    })
                                  : null,
                                (0, a.jsxs)("div", {
                                  className: g.cardsContainer,
                                  children: [
                                    e.entries.map(e =>
                                      (0, a.jsx)(
                                        m.default,
                                        { entry: e },
                                        e.guildId
                                      )
                                    ),
                                    e.appendEndCard && null != s
                                      ? (0, a.jsx)(m.AddEntryCard, {
                                          onClick: s,
                                        })
                                      : null,
                                  ],
                                }),
                              ],
                            },
                            t
                          )
                        ),
                ],
              }),
            });
      };
    },
    516056: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          generateDirectoryRows: function () {
            return i;
          },
        }),
        n("222007"),
        n("424973");
      var a = n("513688"),
        l = n("730647"),
        s = n("782340");
      function i(e, t) {
        if (t !== l.DirectoryEntryCategories.ALL)
          return [{ entries: (0, a.rankGuildEntries)(e), appendEndCard: !0 }];
        let n = [],
          i = (0, a.rankByDateAdded)(e),
          r = new Set(i.map(e => e.guildId));
        i.length > 0 &&
          n.push({
            header: s.default.Messages.SEARCH_NEWEST,
            entries: i,
            appendEndCard: !1,
          });
        let u = e.filter(e => !r.has(e.guildId));
        return (
          (u = (0, a.orderByTotalMemberCount)(u)).length > 0 &&
            n.push({
              header: s.default.Messages.ALL_SERVERS,
              entries: u,
              appendEndCard: !0,
            }),
          n
        );
      }
    },
    30176: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("77078"),
        s = n("466857"),
        i = n("246053"),
        r = n("791679"),
        u = n("782340"),
        o = n("794260"),
        d = n("880418"),
        c = n("16873"),
        f = e => {
          let t,
            {
              searchQuery: n,
              setSearchQuery: f,
              mostRecentQuery: h,
              handleClearSearch: m,
              handleSearchKeyPress: p,
              handleCreateOrAddGuild: E,
              searchResults: S,
              searchFetching: g,
            } = e;
          if (g)
            t = (0, a.jsx)("div", {
              className: o.pageContainer,
              children: (0, a.jsx)(l.Spinner, { className: o.spinner }),
            });
          else if (0 === S.length) {
            let e =
              null != E
                ? u.default.Messages.DIRECTORY_SEARCH_NO_RESULTS_SUBTITLE.format(
                    {
                      addServerHook: function (e, t) {
                        return (0, a.jsx)(
                          l.Anchor,
                          { onClick: E, children: e },
                          t
                        );
                      },
                    }
                  )
                : u.default.Messages.DIRECTORY_SEARCH_NO_RESULTS_NO_ADD;
            t = (0, a.jsxs)("div", {
              className: d.emptySearchWrapper,
              children: [
                (0, a.jsx)("img", {
                  className: d.emptySearchImage,
                  alt: "",
                  src: c,
                }),
                (0, a.jsx)(l.Heading, {
                  variant: "heading-xl/semibold",
                  color: "header-primary",
                  className: d.emptySearchTitle,
                  children:
                    u.default.Messages.DIRECTORY_SEARCH_NO_RESULTS_TITLE,
                }),
                (0, a.jsx)(l.Text, {
                  variant: "text-md/normal",
                  color: "header-secondary",
                  className: d.emptySearchSubtitle,
                  children: e,
                }),
              ],
            });
          } else
            t = (0, a.jsx)("div", {
              className: o.cardsContainer,
              children: S.map(e =>
                (0, a.jsx)(r.default, { entry: e }, e.guildId)
              ),
            });
          return (0, a.jsx)("div", {
            className: o.pageContainer,
            children: (0, a.jsxs)(l.ScrollerAuto, {
              className: o.scroller,
              children: [
                (0, a.jsxs)("div", {
                  className: d.searchHeader,
                  children: [
                    (0, a.jsxs)("div", {
                      className: d.headerTitleWrapper,
                      children: [
                        (0, a.jsx)(l.Clickable, {
                          onClick: m,
                          className: d.arrow,
                          children: (0, a.jsx)(i.default, {
                            direction: i.default.Directions.LEFT,
                          }),
                        }),
                        (0, a.jsx)(l.Heading, {
                          variant: "heading-xl/semibold",
                          className: d.searchPageTitle,
                          children:
                            u.default.Messages.DIRECTORY_SEARCH_RESULTS_HEADER.format(
                              { numResults: S.length, query: h }
                            ),
                        }),
                      ],
                    }),
                    (0, a.jsx)(s.default, {
                      searchTerm: n,
                      className: d.searchPageBox,
                      inputClassName: d.searchPageInput,
                      label: u.default.Messages.DIRECTORY_SEARCH_PLACEHOLDER,
                      placeholder:
                        u.default.Messages.DIRECTORY_SEARCH_PLACEHOLDER,
                      onChange: f,
                      onClear: m,
                      onKeyPress: p,
                      cta:
                        null != n && n.length > 0
                          ? u.default.Messages.GUILD_DISCOVERY_SEARCH_ENTER_CTA
                          : null,
                    }),
                  ],
                }),
                t,
              ],
            }),
          });
        };
    },
    393171: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useIsDismissibleContentTypeDismissed: function () {
            return r;
          },
        });
      var a = n("446674"),
        l = n("374363"),
        s = n("674268"),
        i = n("846614");
      function r(e) {
        let t = (0, i.useNewUserDismissibleContent)([e]),
          n = (0, a.useStateFromStores)([l.default], () => {
            var e;
            return null === (e = l.default.settings.userContent) || void 0 === e
              ? void 0
              : e.dismissedContents;
          });
        return 0 === t.length || (null != n && (0, s.hasBit)(n, e));
      }
    },
    499520: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return m;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("446674"),
        s = n("118849"),
        i = n("290581"),
        r = n("664336"),
        u = n("379881"),
        o = n("200008"),
        d = n("986373"),
        c = n("498139"),
        f = n("20209"),
        h = n("782340");
      function m(e) {
        let { channel: t } = e,
          { isFavoritesPerk: n } = (0, c.useFavoritesServerExperiment)(
            "ChannelFavoritesHeaderButton"
          ),
          m = (0, f.default)(),
          { notifyFavoriteAdded: p } = (0, d.useFavoriteAdded)(),
          E = (0, l.useStateFromStores)([u.default], () =>
            u.default.isFavorite(t.id)
          );
        if (!n || m) return null;
        let S = E ? i.default : s.default,
          g = E
            ? h.default.Messages.UNFAVORITE_CHANNEL
            : h.default.Messages.FAVORITE_CHANNEL;
        return (0, a.jsx)(r.default.Icon, {
          icon: S,
          tooltip: g,
          "aria-label": g,
          onClick: () => {
            E
              ? (0, o.removeFavoriteChannel)(t.id)
              : (p(), (0, o.addFavoriteChannel)(t.id));
          },
        });
      }
    },
    526812: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        }),
        n("222007");
      var a = n("446674"),
        l = n("913144");
      let s = new Set();
      class i extends a.default.PersistedStore {
        initialize(e) {
          null != e && (s = new Set(e));
        }
        hasHidden(e) {
          return s.has(e);
        }
        getState() {
          return s;
        }
      }
      (i.displayName = "ForumChannelAdminOnboardingGuideStore"),
        (i.persistKey = "ForumChannelAdminOnboardingGuideStore");
      var r = new i(l.default, {
        ADMIN_ONBOARDING_GUIDE_HIDE: function (e) {
          let { channelId: t, hide: n } = e;
          n ? s.add(t) : s.delete(t);
        },
      });
    },
    258039: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          isOnboardingDismissed: function () {
            return i;
          },
        });
      var a = n("866227"),
        l = n.n(a),
        s = n("299039");
      let i = e => {
        let t = s.default.extractTimestamp(e),
          n = l().isBefore(l(t).add(l.duration(15, "days")));
        return !n;
      };
    },
    327432: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return I;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("446674"),
        i = n("272030"),
        r = n("264732"),
        u = n("679653"),
        o = n("176347"),
        d = n("850391"),
        c = n("557809"),
        f = n("393414"),
        h = n("503220"),
        m = n("42203"),
        p = n("474643"),
        E = n("305961"),
        S = n("664336"),
        g = n("867965"),
        C = n("782340"),
        _ = n("295004");
      function I(e) {
        let { channelId: t } = e,
          I = (0, s.useStateFromStores)([m.default], () =>
            m.default.getChannel(t)
          ),
          T = (0, s.useStateFromStores)([m.default], () =>
            m.default.getChannel(null == I ? void 0 : I.parent_id)
          ),
          v = (0, s.useStateFromStores)([E.default], () =>
            E.default.getGuild(null == I ? void 0 : I.getGuildId())
          ),
          x = (0, u.default)(I),
          N = l.useRef(!1);
        if (
          (l.useEffect(() => {
            null != I &&
              !N.current &&
              ((N.current = !0), (0, g.trackForumPostSidebarViewed)(I));
          }, [I]),
          null == I || null == v)
        )
          return null;
        let A = (0, a.jsx)(h.default, { channel: I });
        return (0, a.jsxs)(a.Fragment, {
          children: [
            (0, a.jsx)(r.default, {
              channel: I,
              draftType: p.DraftType.ChannelMessage,
            }),
            (0, a.jsx)(S.default, {
              toolbar: A,
              "aria-label": C.default.Messages.THREAD_HEADER_BAR_A11Y_LABEL,
              children: (0, c.renderTitle)({
                channel: I,
                parentChannel: T,
                channelName: x,
                guild: v,
                inSidebar: !0,
                handleContextMenu: function (e) {
                  (0, i.openContextMenuLazy)(e, async () => {
                    let { default: e } = await n
                      .el("994827")
                      .then(n.bind(n, "994827"));
                    return t => (0, a.jsx)(e, { ...t, channel: I });
                  });
                },
                handleClick: function () {
                  null != I && (0, f.transitionToGuild)(I.guild_id, I.id);
                },
              }),
            }),
            (0, a.jsx)("div", {
              className: _.chat,
              children: (0, a.jsx)(
                o.default,
                {
                  channel: I,
                  guild: v,
                  chatInputType: d.ChatInputTypes.SIDEBAR,
                },
                t
              ),
            }),
          ],
        });
      }
    },
    845038: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
      var a = n("171644"),
        l = n("782340");
      function s(e) {
        switch (e) {
          case a.GameConsoleTypes.XBOX:
            return l.default.Messages.XBOX_REMOTE_CONNECTED_RAW;
          case a.GameConsoleTypes.PLAYSTATION:
            return l.default.Messages.PLAYSTATION_REMOTE_CONNECTED_RAW;
        }
      }
    },
    813893: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return p;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("627445"),
        s = n.n(l),
        i = n("917351"),
        r = n.n(i),
        u = n("5667"),
        o = n("49111"),
        d = n("782340"),
        c = n("289699"),
        f = n("21719"),
        h = n("117861");
      let m = null;
      function p(e) {
        let {
          onDismiss: t,
          onAccept: n,
          popoutPosition: l,
          gameConsoleAccounts: i,
        } = e;
        s(
          i.length > 0,
          "Rendering ConsoleNUXTooltip without a game console account"
        ),
          (null == m || null == i.find(e => e.type === m)) &&
            (m = r.shuffle(i)[0].type);
        let p = null,
          E = null;
        switch (m) {
          case o.PlatformTypes.XBOX:
            (p = d.default.Messages.CONSOLE_NUX_TOOLTIP_BODY_XBOX), (E = h);
            break;
          case o.PlatformTypes.PLAYSTATION:
          case o.PlatformTypes.PLAYSTATION_STAGING:
            (p = d.default.Messages.CONSOLE_NUX_TOOLTIP_BODY_PS5), (E = f);
        }
        return (0, a.jsx)(u.default, {
          header: d.default.Messages.CONSOLE_NUX_TOOLTIP_HEADER,
          content: p,
          asset: (0, a.jsx)("img", { src: E, alt: "", className: c.art }),
          onClick: n,
          onSecondaryClick: t,
          markAsDismissed: t,
          buttonCTA: d.default.Messages.CONSOLE_NUX_TOOLTIP_ACCEPT,
          secondaryButtonCTA: d.default.Messages.CONSOLE_NUX_TOOLTIP_DISMISS,
          caretPosition:
            "top" === l
              ? u.CaretPosition.BOTTOM_LEFT
              : u.CaretPosition.TOP_LEFT,
        });
      }
    },
    710560: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return N;
          },
        }),
        n("222007"),
        n("424973");
      var a = n("37983"),
        l = n("884691"),
        s = n("446674"),
        i = n("151426"),
        r = n("77078"),
        u = n("191145"),
        o = n("384997"),
        d = n("124824"),
        c = n("981913"),
        f = n("778588"),
        h = n("235660"),
        m = n("261552"),
        p = n("742898"),
        E = n("813893"),
        S = n("424024"),
        g = n("379304"),
        C = n("171644"),
        _ = n("49111"),
        I = n("994428"),
        T = n("782340"),
        v = n("819741");
      function x(e) {
        let { onClose: t, channel: n } = e,
          l = (0, g.default)(n);
        return (0, a.jsx)(r.Menu, {
          onClose: t,
          onSelect: () => null,
          navId: "transfer-menu",
          "aria-label": T.default.Messages.TRANSFER,
          children: l,
        });
      }
      function N(e) {
        let { channel: t, showLeftDivider: n = !1, ...g } = e,
          N = (0, m.default)(),
          A = (0, s.useStateFromStores)([h.default], () => {
            var e, t;
            return null ===
              (e = h.default.getSessionById(
                null !== (t = null == N ? void 0 : N.sessionId) && void 0 !== t
                  ? t
                  : ""
              )) || void 0 === e
              ? void 0
              : e.clientInfo.os;
          }),
          M = (0, s.useStateFromStores)([f.default], () =>
            f.default.hasLayers()
          ),
          [R, j] = (0, s.useStateFromStoresArray)([u.default], () => [
            u.default.getMode(t.id),
            u.default.getLayout(t.id),
          ]),
          L = (0, r.useModalsStore)(r.hasAnyModalOpenSelector),
          y = (0, p.default)(),
          O = y.filter(e => e.twoWayLink),
          [P, D] = l.useState(!1);
        if ((null == N && 0 === y.length) || t.isBroadcastChannel())
          return null;
        let b =
            _.ChannelModes.VOICE !== R &&
            [_.ChannelLayouts.NO_CHAT, _.ChannelLayouts.FULL_SCREEN].includes(j)
              ? "top"
              : "bottom",
          U = [];
        return (
          O.length > 0 && U.push(i.DismissibleContent.DONUT_DESKTOP_NUX),
          (0, a.jsx)(o.default, {
            contentTypes: U,
            children: e => {
              let { visibleContent: l, markAsDismissed: s } = e,
                u = l === i.DismissibleContent.DONUT_DESKTOP_NUX;
              return (0, a.jsxs)(a.Fragment, {
                children: [
                  n ? (0, a.jsx)("div", { className: v.leftDivider }) : null,
                  (0, a.jsx)(r.Popout, {
                    position: b,
                    spacing: u ? 16 : void 0,
                    positionKey: "".concat(R, ":").concat(j),
                    onRequestClose: () => D(!1),
                    shouldShow: (u || P) && !M && !L,
                    renderPopout: e => {
                      let { closePopout: n } = e;
                      return (0, a.jsx)(d.default, {
                        children: u
                          ? (0, a.jsx)(E.default, {
                              popoutPosition: b,
                              onDismiss: () =>
                                s(I.ContentDismissActionType.UNKNOWN),
                              onAccept: () => {
                                s(I.ContentDismissActionType.UNKNOWN), D(!0);
                              },
                              gameConsoleAccounts: O,
                            })
                          : (0, a.jsx)(x, {
                              onClose: () => {
                                n();
                              },
                              channel: t,
                            }),
                      });
                    },
                    children: e => {
                      var t;
                      return (0, a.jsx)(c.default, {
                        ...e,
                        ...g,
                        onClick: () => D(!0),
                        label:
                          null != (t = A)
                            ? t === C.GameConsoleTypes.XBOX
                              ? T.default.Messages.XBOX_REMOTE_CONNECTED_RAW
                              : T.default.Messages
                                  .PLAYSTATION_REMOTE_CONNECTED_RAW
                            : T.default.Messages.CONSOLE_TRANSFER,
                        iconComponent: (0, S.default)(A),
                      });
                    },
                  }),
                ],
              });
            },
          })
        );
      }
    },
    579425: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return v;
          },
        }),
        n("222007"),
        n("424973");
      var a = n("37983"),
        l = n("884691"),
        s = n("866227"),
        i = n.n(s),
        r = n("446674"),
        u = n("77078"),
        o = n("299285"),
        d = n("61918"),
        c = n("878550"),
        f = n("740822"),
        h = n("26989"),
        m = n("1017"),
        p = n("697218"),
        E = n("315102"),
        S = n("387111"),
        g = n("299039"),
        C = n("481931");
      function _(e) {
        let {
            guildId: t,
            channelId: n,
            userId: l,
            game: s,
            description: i,
          } = e,
          o = (0, r.useStateFromStores)([p.default], () =>
            p.default.getUser(l)
          ),
          d = S.default.getName(t, n, o),
          c = null != o ? E.default.getUserAvatarURL(o) : null;
        return (0, a.jsxs)("div", {
          className: C.userGameContainer,
          children: [
            (0, a.jsx)("div", {
              className: C.userGameAvatar,
              children: (0, a.jsx)(u.Avatar, {
                src: c,
                size: u.AvatarSizes.SIZE_32,
                "aria-label": null != d ? d : "",
              }),
            }),
            (0, a.jsxs)("div", {
              className: C.userGameInfo,
              children: [
                (0, a.jsx)(u.Text, {
                  variant: "text-md/semibold",
                  children: d,
                }),
                (0, a.jsxs)("div", {
                  className: C.downToPlayDetails,
                  children: [
                    (0, a.jsx)(u.Text, {
                      variant: "text-xs/medium",
                      children: i,
                    }),
                    (0, a.jsx)(u.Text, {
                      variant: "text-xs/medium",
                      children: s,
                    }),
                  ],
                }),
              ],
            }),
          ],
        });
      }
      function I(e) {
        let { nowPlaying: t, guildId: n, channelId: l } = e,
          s = (0, r.useStateFromStores)([p.default], () =>
            p.default.getUser(t.userId)
          ),
          o = null != s ? E.default.getUserAvatarURL(s) : null,
          d = S.default.getName(n, l, s),
          c = i.duration(i().diff(i(Number(t.startedPlaying)))).humanize(),
          f =
            null != t.activity.details
              ? "".concat(t.activity.details, " - ").concat(c)
              : c;
        return (0, a.jsxs)("div", {
          className: C.userGameContainer,
          children: [
            (0, a.jsx)("div", {
              className: C.userGameAvatar,
              children: (0, a.jsx)(u.Avatar, {
                src: o,
                size: u.AvatarSizes.SIZE_32,
                "aria-label": null != d ? d : "",
              }),
            }),
            (0, a.jsxs)("div", {
              className: C.userGameInfo,
              children: [
                (0, a.jsx)(u.Text, {
                  variant: "text-md/semibold",
                  children: d,
                }),
                (0, a.jsx)("div", {
                  children: (0, a.jsx)(u.Text, {
                    variant: "text-xs/medium",
                    children: f,
                  }),
                }),
              ],
            }),
          ],
        });
      }
      function T(e) {
        let { game: t, guildId: n, channelId: s } = e,
          i = l.useMemo(
            () => g.default.keys(t).filter(e => h.default.isMember(n, e)),
            [t, n]
          ),
          d = i.length > 0 ? t[i[0]] : null,
          c = null == d ? void 0 : d.activity.application_id,
          f = (0, r.useStateFromStores)([o.default], () =>
            null != c
              ? o.default.getApplication(c)
              : null != d
                ? o.default.getApplicationByName(d.activity.name)
                : null
          );
        return 0 === i.length || null == d
          ? null
          : (0, a.jsxs)("div", {
              className: C.gameContainer,
              children: [
                (0, a.jsxs)("div", {
                  className: C.gameHeader,
                  children: [
                    null != f &&
                      (0, a.jsx)(u.Avatar, {
                        src: f.getIconURL(16),
                        size: u.AvatarSizes.SIZE_16,
                        "aria-label": d.activity.name,
                      }),
                    (0, a.jsx)(u.Text, {
                      variant: "text-xs/bold",
                      color: "text-muted",
                      children: d.activity.name,
                    }),
                  ],
                }),
                i.map(e =>
                  (0, a.jsx)(
                    I,
                    { nowPlaying: t[e], guildId: n, channelId: s },
                    e
                  )
                ),
              ],
            });
      }
      function v(e) {
        var t;
        let { guildId: n, channel: l } = e,
          s = (0, r.useStateFromStoresArray)([m.default], () =>
            m.default.gameIds.sort((e, t) => ~~Number(e) - ~~Number(t))
          ),
          i = (0, r.useStateFromStoresObject)(
            [m.default],
            () => m.default.games
          );
        let o =
          ((t = n),
          (0, r.useStateFromStores)([c.default, h.default], () => {
            let e = h.default.getMembers(t),
              n = [];
            return (
              e.forEach(e => {
                let t = c.default.getDownToPlay(e.userId);
                null != t && n.push(t);
              }),
              n
            );
          }));
        return (0, a.jsxs)(u.ScrollerAuto, {
          className: C.container,
          children: [
            (0, a.jsx)(f.default, { className: C.alphaTag }),
            o.length > 0
              ? (0, a.jsxs)("div", {
                  className: C.downToPlayContainer,
                  children: [
                    (0, a.jsx)(u.Text, {
                      variant: "text-md/bold",
                      children: "Down to Play",
                    }),
                    o.map(e =>
                      (0, a.jsx)(
                        _,
                        {
                          guildId: n,
                          channelId: l.id,
                          userId: e.userId,
                          description: e.description,
                          game: e.game,
                        },
                        e.userId
                      )
                    ),
                  ],
                })
              : null,
            (0, a.jsx)("div", {
              className: C.games,
              children: s.map(e =>
                (0, a.jsx)(T, { game: i[e], guildId: n, channelId: l.id }, e)
              ),
            }),
            (0, a.jsx)(d.default, { channel: l, className: C.channelMembers }),
          ],
        });
      }
    },
    734488: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var a = n("446674"),
        l = n("271938"),
        s = n("855867"),
        i = n("205817"),
        r = n("12307"),
        u = n("944820"),
        o = n("49111");
      function d(e) {
        let t = (0, r.getMaxQuality)(e),
          n = e.stream.guildId,
          d = e.stream.ownerId;
        return (0, a.useStateFromStores)(
          [i.default, s.default, l.default],
          () =>
            null != d
              ? (0, u.default)(
                  i.default.getQuality(),
                  i.default.getStatsHistory(n, d, d === l.default.getId()),
                  d === l.default.getId() &&
                    null !=
                      s.default.getHookError(o.MediaEngineHookTypes.SOUND),
                  t
                )
              : null,
          [t, n, d]
        );
      }
    },
    795026: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("374014"),
        l = n("223913"),
        s = n("49111"),
        i = n("782340");
      function r(e, t, n, r) {
        return null == t ||
          t.state === s.ApplicationStreamStates.ENDED ||
          (0, a.encodeStreamKey)(t) !== (0, a.encodeStreamKey)(e)
          ? (0, l.getStreamCTAString)(r)
          : t.ownerId === n
            ? i.default.Messages.WATCH_STREAM_STREAMING
            : i.default.Messages.WATCH_STREAM_WATCHING;
      }
    },
    944820: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        });
      var a,
        l,
        s = n("117362"),
        i = n("449008"),
        r = n("49111"),
        u = n("782340");
      function o() {
        let e =
          arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 30;
        return e <= 5 ? 3 : e <= 15 ? 10 : 15;
      }
      function d(e, t) {
        let n = {
            packetsSentOrReceived: 0,
            packetsLost: 0,
            packetLossRate: 0,
            frameRate: 0,
            resolution: 0,
            numDatapoints: 0,
          },
          a = e.slice(-1 * t).filter(i.isNotNullish);
        if (0 === a.length) return { type: "streamer", ...n };
        a.forEach((e, t, a) => {
          (n.packetsSentOrReceived +=
            t > 0
              ? a[t].packetsSentOrReceived - a[t - 1].packetsSentOrReceived
              : 0),
            (n.packetsLost +=
              t > 0 ? a[t].packetsLost - a[t - 1].packetsLost : 0),
            (n.frameRate += e.frameRate),
            (n.resolution += e.resolution);
        });
        let l = a[0].type,
          s = a.length;
        return {
          type: l,
          packetsSentOrReceived: n.packetsSentOrReceived,
          packetsLost: n.packetsLost,
          packetLossRate:
            n.packetsLost / (n.packetsLost + n.packetsSentOrReceived),
          frameRate: n.frameRate / s,
          resolution: n.resolution / s,
          numDatapoints: s,
        };
      }
      ((a = l || (l = {})).PACKET_LOSS = "Packet Loss"),
        (a.FRAME_RATE_INPUT = "Frame Rate Encode"),
        (a.FRAME_RATE_NETWORK = "Frame Rate Decode"),
        (a.SOUNDSHARE_FAILED = "Soundshare Failed"),
        (a.BAD_CONNECTION = "Bad Connection");
      let c = (0, s.cachedFunction)((e, t) => ({ message: e, errorType: t }));
      function f(e, t) {
        if ("streamer" === e.type) {
          if (100 * e.packetLossRate > 10)
            return c(u.default.Messages.STREAM_BAD_STREAMER, "Packet Loss");
          if (e.frameRate <= o(t))
            return c(
              u.default.Messages.STREAM_BAD_STREAMER,
              "Frame Rate Encode"
            );
        } else {
          if (100 * e.packetLossRate > 10)
            return c(u.default.Messages.STREAM_BAD_SPECTATOR, "Packet Loss");
          if (e.frameRate <= o(t))
            return c(
              u.default.Messages.STREAM_BAD_SPECTATOR,
              "Frame Rate Decode"
            );
        }
        return null;
      }
      function h(e, t, n, a) {
        if (n)
          return c(
            u.default.Messages.STREAM_SOUNDSHARE_FAILED,
            "Soundshare Failed"
          );
        if (null != t) {
          let e = d(t, 5),
            n = d(t, 30);
          if (n.numDatapoints >= 5) {
            var l;
            return null !== (l = f(e, null == a ? void 0 : a.maxFrameRate)) &&
              void 0 !== l
              ? l
              : f(n, null == a ? void 0 : a.maxFrameRate);
          }
        }
        return e === r.RTCConnectionQuality.BAD
          ? c(u.default.Messages.STREAM_NETWORK_QUALITY_ERROR, "Bad Connection")
          : null;
      }
    },
    673527: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          DefaultFallback: function () {
            return p;
          },
          default: function () {
            return E;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("446674"),
        u = n("77078"),
        o = n("410348"),
        d = n("42203"),
        c = n("957255"),
        f = n("49111"),
        h = n("782340"),
        m = n("329422");
      function p(e) {
        let { isLoading: t, noText: n, previewText: l, className: s } = e;
        return (0, a.jsx)("div", {
          className: i(m.emptyPreviewContainer, s),
          children: t
            ? (0, a.jsx)(u.Spinner, {})
            : (0, a.jsxs)(a.Fragment, {
                children: [
                  (0, a.jsx)("div", { className: m.emptyPreviewImage }),
                  n
                    ? null
                    : (0, a.jsx)(u.Text, {
                        variant: "text-sm/normal",
                        color: "none",
                        className: m.emptyPreviewText,
                        children:
                          null != l ? l : h.default.Messages.STREAM_NO_PREVIEW,
                      }),
                ],
              }),
        });
      }
      function E(e) {
        let { stream: t, className: n, noText: s = !1 } = e,
          u = (0, r.useStateFromStores)([d.default], () =>
            d.default.getBasicChannel(t.channelId)
          ),
          E = (0, r.useStateFromStores)(
            [c.default],
            () =>
              null != u &&
              c.default.canBasicChannel(f.BasicPermissions.CONNECT, u)
          ),
          { url: S, isLoading: g } = (0, r.useStateFromStoresObject)(
            [o.default],
            () => ({
              url: E
                ? o.default.getPreviewURL(t.guildId, t.channelId, t.ownerId)
                : null,
              isLoading:
                E &&
                o.default.getIsPreviewLoading(
                  t.guildId,
                  t.channelId,
                  t.ownerId
                ),
            })
          ),
          C = l.useRef(g ? null : S);
        l.useEffect(() => {
          !g && (C.current = S);
        }, [S, g]);
        let _ = null == S || g ? C.current : S;
        return null == _
          ? (0, a.jsx)(p, {
              className: n,
              isLoading: g,
              noText: s,
              previewText: E
                ? void 0
                : h.default.Messages.STREAM_NO_PERMISSION_CTA,
            })
          : (0, a.jsx)("div", {
              className: i(n, m.root),
              children: (0, a.jsx)("img", {
                src: _,
                alt: "",
                className: m.image,
              }),
            });
      }
    },
    264429: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return j;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("446674"),
        u = n("77078"),
        o = n("463848"),
        d = n("750560"),
        c = n("632710"),
        f = n("76393"),
        h = n("373469"),
        m = n("271938"),
        p = n("305961"),
        E = n("957255"),
        S = n("824563"),
        g = n("800762"),
        C = n("822332"),
        _ = n("599110"),
        I = n("223913"),
        T = n("582415"),
        v = n("795026"),
        x = n("673527"),
        N = n("49111"),
        A = n("782340"),
        M = n("430868");
      class R extends l.PureComponent {
        componentDidMount() {
          let { user: e, streamApplication: t } = this.props;
          _.default.track(N.AnalyticEvents.OPEN_POPOUT, {
            type: "Stream Preview",
            other_user_id: e.id,
            application_id: null != t ? t.id : null,
            application_name: null != t ? t.name : null,
            game_id: null != t ? t.id : null,
            is_streaming: !0,
          });
        }
        renderPreview(e) {
          let {
            onWatch: t,
            activeStream: n,
            currentUserId: l,
            canWatch: s,
            unavailableReason: i,
          } = this.props;
          return (0, a.jsxs)(u.Clickable, {
            onClick: t,
            className: M.previewContainer,
            children: [
              (0, a.jsx)(x.default, { className: M.previewImage, stream: e }),
              s
                ? (0, a.jsx)("div", {
                    className: M.previewHover,
                    children: (0, a.jsx)(u.Text, {
                      variant: "text-sm/normal",
                      color: "none",
                      className: M.white,
                      children: (0, v.default)(e, n, l, i),
                    }),
                  })
                : null,
            ],
          });
        }
        render() {
          let {
            activity: e,
            user: t,
            stream: n,
            previewIsOpen: l,
          } = this.props;
          return null == n
            ? null
            : (0, a.jsx)("div", {
                className: i(M.streamPreviewWrapper, { [M.mounted]: l }),
                children: (0, a.jsxs)("div", {
                  className: M.streamPreview,
                  children: [
                    this.renderPreview(n),
                    (0, a.jsxs)("div", {
                      className: M.body,
                      children: [
                        null != e
                          ? (0, a.jsx)(o.default, {
                              hideHeader: !0,
                              type: o.UserActivityTypes.STREAM_PREVIEW,
                              activity: e,
                              user: t,
                              guildId: n.guildId,
                              channelId: n.channelId,
                              analyticsParams: {
                                location: {
                                  page: N.AnalyticsPages.GO_LIVE_MODAL,
                                  section:
                                    N.AnalyticsSections.STREAM_VIEWER_POPOUT,
                                },
                              },
                            })
                          : (0, a.jsx)(c.default, {
                              type: o.UserActivityTypes.STREAM_PREVIEW,
                              applicationStream: n,
                              user: t,
                              guildId: n.guildId,
                              channelId: n.channelId,
                              className: M.activityActions,
                              color: M.watchButton,
                            }),
                        (0, a.jsx)(C.default, {
                          type: C.default.Types.INLINE,
                          className: M.protip,
                          children: __OVERLAY__
                            ? A.default.Messages.WATCH_STREAM_IN_APP
                            : A.default.Messages.WATCH_STREAM_TIP,
                        }),
                      ],
                    }),
                  ],
                }),
              });
        }
      }
      function j(e) {
        let { user: t, channel: n, ...s } = e,
          [i, u] = (0, r.useStateFromStoresArray)(
            [g.default, p.default, E.default, f.default],
            () =>
              (0, I.canWatchStream)(
                n,
                g.default,
                p.default,
                E.default,
                f.default
              )
          ),
          o = (0, r.useStateFromStores)([h.default], () =>
            h.default.getStreamForUser(t.id, n.getGuildId())
          ),
          c = (0, r.useStateFromStores)([h.default], () =>
            h.default.getActiveStreamForApplicationStream(o)
          ),
          C = (0, r.useStateFromStores)([m.default], () => m.default.getId()),
          _ = (0, T.useGetStreamApplication)(o),
          v = (0, r.useStateFromStores)([S.default], () =>
            (0, T.getStreamerActivity)(o, S.default)
          ),
          x = l.useMemo(() => ({ [n.guild_id]: [t.id] }), [n.guild_id, t.id]);
        return (
          (0, d.useSubscribeGuildMembers)(x),
          (0, a.jsx)(R, {
            ...s,
            canWatch: i,
            unavailableReason: u,
            user: t,
            streamApplication: _,
            stream: o,
            activeStream: c,
            currentUserId: C,
            activity: v,
          })
        );
      }
    },
    336804: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return w;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("907002"),
        u = n("617258"),
        o = n("446674"),
        d = n("669491"),
        c = n("769846"),
        f = n("77078"),
        h = n("997289"),
        m = n("685665"),
        p = n("506885"),
        E = n("697218"),
        S = n("216422"),
        g = n("956089"),
        C = n("980423"),
        _ = n("599110"),
        I = n("719923"),
        T = n("12307"),
        v = n("734488"),
        x = n("49111"),
        N = n("646718"),
        A = n("782340"),
        M = n("72523");
      let R = (0, u.cssValueToNumber)(c.default.LIVE_INDICATOR_BORDER_RADIUS),
        j = { opacity: 0, transform: "translate3d(100%, 0, 0)" },
        L = { opacity: 1, transform: "translate3d(0%, 0, 0)" },
        y = { opacity: 0 },
        O = { opacity: 1 },
        P = {
          borderRadius: ""
            .concat(R, "px ")
            .concat(R, "px ")
            .concat(R, "px ")
            .concat(R, "px"),
        },
        D = { borderRadius: "0px ".concat(R, "px ").concat(R, "px 0px") },
        b = { mass: 1, tension: 500, friction: 18, clamp: !0 },
        U = e => {
          let t,
            s,
            {
              participant: r,
              isUpsellEnabled: u,
              shape: c,
              size: p,
              didTrackUpsellViewed: R,
              setDidTrackUpsellViewed: j,
              className: L,
            } = e,
            y = (0, T.getMaxQuality)(r),
            { analyticsLocations: O } = (0, m.default)(),
            P = null != (0, v.default)(r);
          try {
            t = (0, T.isPremiumFPS)(y);
          } catch (e) {
            t = !1;
          }
          try {
            s = (0, T.isPremiumResolution)(y);
          } catch (e) {
            s = !1;
          }
          let D = t || s,
            { location: b } = (0, h.useAnalyticsContext)(),
            U = (0, o.useStateFromStores)([E.default], () =>
              E.default.getCurrentUser()
            ),
            w =
              u &&
              !I.default.isPremium(U, N.PremiumTypes.TIER_1) &&
              !I.default.canStreamQuality(I.default.StreamQuality.MID, U),
            F = l.useCallback(() => {
              w &&
                D &&
                (0, f.openModalLazy)(async () => {
                  let { default: e } = await n
                    .el("754534")
                    .then(n.bind(n, "754534"));
                  return t => (0, a.jsx)(e, { ...t, analyticsSource: b });
                });
            }, [w, D, b]);
          if (
            (l.useEffect(() => {
              !R &&
                D &&
                (_.default.track(x.AnalyticEvents.PREMIUM_UPSELL_VIEWED, {
                  type: N.PremiumUpsellTypes.STREAM_QUALITY_INDICATOR,
                  has_premium_stream_fps: t,
                  has_premium_stream_resolution: s,
                  location_stack: O,
                }),
                j(!0));
            }, [t, s, D, R, j, O]),
            null == y)
          )
            return null;
          let V = (0, a.jsx)(f.Tooltip, {
            text: P
              ? A.default.Messages.SCREENSHARE_QUALITY_TOOLTIP_REDUCED
              : D
                ? A.default.Messages.SCREENSHARE_QUALITY_TOOLTIP_PREMIUM
                : A.default.Messages.SCREENSHARE_QUALITY_TOOLTIP_NORMAL,
            position: "bottom",
            color: f.Tooltip.Colors.GREY,
            children: e =>
              (0, a.jsxs)(f.Clickable, {
                ...e,
                onClick: F,
                className: i(
                  M.qualityIndicator,
                  p,
                  C.LiveIndicatorShapes[c],
                  P
                    ? M.qualityIndicatorLowQuality
                    : M.qualityIndicatorFullQuality,
                  { [M.clickable]: w && D }
                ),
                children: [
                  D
                    ? (0, a.jsx)(S.default, { className: M.premiumStreamIcon })
                    : null,
                  (0, a.jsx)("span", {
                    className: M.qualityResolution,
                    children: (0, T.getResolutionText)(y.maxResolution),
                  }),
                  (0, a.jsx)("span", {
                    children: (0, T.getFPSText)(y.maxFrameRate),
                  }),
                ],
              }),
          });
          return (0, a.jsx)(g.TextBadge, {
            text: V,
            className: i(L, M.qualityIndicatorBadge),
            color: d.default.unsafe_rawColors.PRIMARY_500.css,
            shape: c,
          });
        };
      var w = e => {
        let {
            participant: t,
            showQuality: n,
            isUpsellEnabled: s = !0,
            size: u,
            className: o,
          } = e,
          [d, c] = l.useState(!1),
          h = (0, T.getMaxQuality)(t),
          { reducedMotion: m } = l.useContext(
            f.AccessibilityPreferencesContext
          ),
          E = n && null != h;
        l.useEffect(() => {
          (0, p.default)(
            t.stream.ownerId,
            t.user.getAvatarURL(t.stream.guildId, 80),
            { dispatchWait: !0 }
          );
        }, [t]);
        let S = (0, r.useTransition)(E, {
            enter: { from: m.enabled ? y : j, to: m.enabled ? O : L },
            leave: m.enabled ? y : j,
            config: b,
          }),
          _ = (0, r.useSpring)({ to: E ? D : P, config: b });
        return (e => {
          let { className: n, popoutProps: l } = e;
          return (0, a.jsxs)("div", {
            className: i(M.streamQualityIndicator, n),
            ...l,
            children: [
              S((e, n) =>
                n
                  ? (0, a.jsx)(r.animated.div, {
                      style: e,
                      children: (0, a.jsx)(U, {
                        className: M.liveQualityIndicator,
                        participant: t,
                        size: u,
                        shape: g.BadgeShapes.ROUND_LEFT,
                        isUpsellEnabled: s,
                        didTrackUpsellViewed: d,
                        setDidTrackUpsellViewed: c,
                      }),
                    })
                  : null
              ),
              (0, a.jsx)(r.animated.div, {
                style: _,
                className: M.liveIndicator,
                children: (0, a.jsx)(C.default, {
                  look: C.LiveIndicatorLooks.RED,
                  size: u,
                  shape: E ? g.BadgeShapes.ROUND_RIGHT : g.BadgeShapes.ROUND,
                }),
              }),
            ],
          });
        })({ className: o });
      };
    },
    375202: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var a = n("819068");
      function l(e, t) {
        if (__OVERLAY__) {
          let e = t.getGame(),
            n = (0, a.getPID)();
          return null == e || null == n
            ? null
            : {
                id: e.id,
                pid: n,
                pidPath: [],
                nativeProcessObserverId: 0,
                hidden: !1,
                elevated: !1,
                name: e.name,
                lastFocused: 0,
                exePath: "",
                exeName: "",
                cmdLine: "",
                processName: "",
                distributor: null,
                windowHandle: null,
                fullscreenType: 0,
              };
        }
        return e.getVisibleGame();
      }
    },
    237542: function (e, t, n) {
      "use strict";
      var a;
      n.r(t),
        n.d(t, {
          GuildPrompts: function () {
            return a;
          },
        }),
        ((a || (a = {})).REAL_NAME_PROMPT = "REAL_NAME_PROMPT");
    },
    928265: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var a = n("913144"),
        l = {
          viewPrompt: function (e, t) {
            a.default.wait(() => {
              a.default.dispatch({
                type: "GUILD_PROMPT_VIEWED",
                prompt: e,
                guildId: t,
              });
            });
          },
        };
    },
    204743: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        }),
        n("222007");
      var a = n("446674"),
        l = n("913144");
      let s = {};
      class i extends a.default.PersistedStore {
        initialize(e) {
          for (let t in e) {
            let n = e[t];
            s[t] = new Set(n);
          }
        }
        hasViewedPrompt(e, t) {
          let n = s[t];
          return null != n && (!!n.has(e) || !1);
        }
        getState() {
          return s;
        }
      }
      (i.displayName = "GuildPromptsStore"),
        (i.persistKey = "GuildPromptsStore");
      var r = new i(l.default, {
        GUILD_PROMPT_VIEWED: function (e) {
          let { prompt: t, guildId: n } = e,
            a = s[n];
          return null == a
            ? ((s[n] = new Set()), s[n].add(t), !0)
            : !a.has(t) && (a.add(t), !0);
        },
        GUILD_DELETE: function (e) {
          let { guild: t } = e;
          return null != s[t.id] && !t.unavailable && (delete s[t.id], !0);
        },
      });
    },
    278483: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          openDisableCommunication: function () {
            return s;
          },
          openEnableCommunication: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("77078");
      function s(e, t, s) {
        (0, l.openModalLazy)(async () => {
          let { default: l } = await n.el("693120").then(n.bind(n, "693120"));
          return n =>
            (0, a.jsx)(l, {
              guildId: e,
              userId: t,
              anaylticsLocations: s,
              ...n,
            });
        });
      }
      function i(e, t, s) {
        (0, l.openModalLazy)(async () => {
          let { default: l } = await n.el("750331").then(n.bind(n, "750331"));
          return n =>
            (0, a.jsx)(l, {
              guildId: e,
              userId: t,
              anaylticsLocations: s,
              ...n,
            });
        });
      }
    },
    994906: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          openGuildMemberModViewSidebar: function () {
            return o;
          },
        });
      var a = n("812204"),
        l = n("208021"),
        s = n("582713"),
        i = n("383606"),
        r = n("459824"),
        u = n("789150");
      function o(e, t, n) {
        var o, d, c;
        let f =
          arguments.length > 3 && void 0 !== arguments[3]
            ? arguments[3]
            : { modViewPanel: u.ModViewPanel.INFO };
        if (!(0, r.canAccessGuildMemberModViewWithExperiment)(e))
          return Promise.resolve();
        let h =
            null !== (o = f.modViewPanel) && void 0 !== o
              ? o
              : u.ModViewPanel.INFO,
          m =
            null !== (d = f.sourceLocation) && void 0 !== d
              ? d
              : a.default.MEMBER_SAFETY_PAGE;
        return (
          (0, i.trackModViewOpened)(e, t, h, m),
          l.default.openGuildSidebar({
            guildId: e,
            baseChannelId: n,
            sidebarType: s.GuildSidebarType.GUILD_MEMBER_MOD_VIEW,
            details: {
              type: s.SidebarOpenDetailsType.GUILD_MEMBER_MOD_VIEW,
              userId: t,
              guildId: e,
              ...f,
              modViewPanel:
                null !== (c = f.modViewPanel) && void 0 !== c
                  ? c
                  : u.ModViewPanel.INFO,
            },
          })
        );
      }
    },
    383606: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          trackModViewOpened: function () {
            return u;
          },
        }),
        n("884691");
      var a = n("812204"),
        l = n("716241"),
        s = n("599110"),
        i = n("789150"),
        r = n("49111");
      function u(e, t, n) {
        let u =
            arguments.length > 3 && void 0 !== arguments[3]
              ? arguments[3]
              : a.default.MEMBER_SAFETY_PAGE,
          o = {
            guild_id: e,
            target_user_id: t,
            subpanel_name: i.ModViewPanelNameMap[n],
            location: u,
            ...(0, l.collectGuildAnalyticsMetadata)(e),
          };
        return s.default.track(r.AnalyticEvents.GUILD_MOD_VIEW_OPENED, o);
      }
    },
    789150: function (e, t, n) {
      "use strict";
      var a, l;
      n.r(t),
        n.d(t, {
          ModViewPanel: function () {
            return a;
          },
          ModViewPanelNameMap: function () {
            return s;
          },
        }),
        ((l = a || (a = {}))[(l.UNKNOWN = 0)] = "UNKNOWN"),
        (l[(l.INFO = 1)] = "INFO"),
        (l[(l.MESSAGE_HISTORY = 2)] = "MESSAGE_HISTORY"),
        (l[(l.PERMISSIONS = 3)] = "PERMISSIONS");
      let s = {
        0: "UNKNOWN",
        1: "INFO",
        2: "MESSAGE_HISTORY",
        3: "PERMISSIONS",
      };
    },
    180968: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          HAS_NO_COUNT: function () {
            return h;
          },
          SearchKeyType: function () {
            return a;
          },
          getSearchQueryForUser: function () {
            return C;
          },
          useServerMessageHistoryForUser: function () {
            return _;
          },
          useServerActivityCountsForUser: function () {
            return T;
          },
        }),
        n("222007");
      var a,
        l,
        s = n("884691"),
        i = n("308503"),
        r = n("16470"),
        u = n("913144"),
        o = n("84339"),
        d = n("390933"),
        c = n("25932"),
        f = n("49111");
      let h = -1;
      ((l = a || (a = {})).MESSAGES = "messages"),
        (l.LINKS = "links"),
        (l.MEDIA = "media"),
        (l.ALL_COUNTS = "all_counts");
      function m(e, t, n) {
        let a =
            arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {},
          l = arguments.length > 4 && void 0 !== arguments[4] && arguments[4],
          s = JSON.stringify(a);
        return l
          ? "guild_"
              .concat(t, "_search_tab_")
              .concat(n, "_for_")
              .concat(e, "_with_additonal_")
              .concat(s)
          : "guild_"
              .concat(t, "_search_")
              .concat(n, "_for_")
              .concat(e, "_with_additonal_")
              .concat(s);
      }
      let p = {
          searchFetcher: null,
          searchTabFetcher: null,
          result: null,
          messageCount: h,
          lastMessage: null,
        },
        E = (0, i.default)(() => new Map()),
        S = (e, t) => {
          E.setState(n => {
            let a = n.get(e);
            return (
              null == a ? n.set(e, { ...p, ...t }) : n.set(e, { ...a, ...t }), n
            );
          });
        },
        g = e => E(t => t.get(e), r.default);
      function C(e, t, n) {
        let a = null != n ? n : {};
        switch (t) {
          case "links":
            return { author_id: e, has: ["link"], ...a };
          case "media":
            return {
              author_id: e,
              attachment_extension: [
                "png",
                "jpg",
                "webp",
                "mov",
                "mp4",
                "gif",
                "mp3",
                "wav",
                "flac",
                "ogg",
              ],
              ...a,
            };
          case "all_counts":
            return { author_id: [e], limit: 1, cursor: null, ...a };
          default:
            return { author_id: e, ...a };
        }
      }
      function _(e, t, n) {
        return (function (e, t, n, a) {
          let { addtionalQuery: l, shouldDispatch: i = !1 } = a,
            r = s.useMemo(() => m(e, t, n, l), [e, t, n, l]),
            E = g(r),
            _ = (0, o.default)(r),
            [I, T] = s.useState({});
          return (
            s.useEffect(() => {
              if (_ !== r) {
                let a = C(e, n, l),
                  s = new d.default(t, f.SearchTypes.GUILD, a);
                S(r, { searchFetcher: s, messageCount: h, lastMessage: null }),
                  setTimeout(() => {
                    s.fetch(
                      e => {
                        let n = e.body,
                          a = n.messages[0];
                        if (
                          (S(r, {
                            searchFetcher: s,
                            result: n,
                            messageCount: n.total_results,
                            lastMessage: a,
                          }),
                          T({}),
                          i)
                        ) {
                          var l, o;
                          u.default.dispatch({
                            type: "MOD_VIEW_SEARCH_FINISH",
                            searchId: t,
                            guildId: t,
                            analyticsId: n.analytics_id,
                            totalResults: n.total_results,
                            channels: n.channels,
                            messages: n.messages,
                            threads:
                              null !== (l = n.threads) && void 0 !== l ? l : [],
                            members: (null !== (o = n.members) && void 0 !== o
                              ? o
                              : []
                            ).map(e => (0, c.default)(e)),
                            hasError: !1,
                            doingHistoricalIndex: n.doing_deep_historical_index,
                            documentsIndexed: n.documents_indexed,
                          });
                        }
                      },
                      e => {},
                      e => {
                        S(r, { messageCount: 0, lastMessage: null }), T({});
                      }
                    );
                  });
              }
              return () => {};
            }, [e, t, E, r, n, l]),
            null != E ? E : p
          );
        })(e, t, "messages", n);
      }
      function I(e, t, n, a) {
        let l = s.useMemo(() => m(e, t, n, a, !0), [e, t, n, a]),
          i = g(l),
          r = (0, o.default)(l);
        return { key: l, previousKey: r, state: i };
      }
      function T(e, t, n) {
        var a, l, i;
        let { key: r, state: u } = I(e, t, "messages", n),
          { key: o, state: c } = I(e, t, "links", n),
          { key: m, state: p } = I(e, t, "media", n),
          E = s.useMemo(() => C(e, "all_counts", n), [e, n]),
          g = s.useMemo(
            () => ({
              tabs: {
                messages: C(e, "messages", E),
                links: C(e, "links", E),
                media: C(e, "media", E),
              },
              track_exact_total_hits: !0,
            }),
            [e, E]
          ),
          _ = s.useCallback(
            e => {
              let t = e.messages,
                n = e.links,
                a = e.media;
              S(r, t), S(o, n), S(m, a);
            },
            [o, m, r]
          ),
          T = s.useCallback(
            e => {
              _({ messages: e, links: e, media: e });
            },
            [_]
          );
        s.useEffect(() => {
          let e = new d.SearchTabFetcherImpl(t, f.SearchTypes.GUILD, E, g);
          T({ searchTabFetcher: e, messageCount: h, lastMessage: null });
          let n = setTimeout(async () => {
            let t = null;
            try {
              let n = await e.makeRequest();
              t = null == n ? void 0 : n.body;
            } catch (e) {
              t = null;
            }
            if (null == t) T({ messageCount: 0, lastMessage: null });
            else {
              var n, a, l, s, i, r;
              let e = t.tabs.messages,
                u = t.tabs.links,
                o = t.tabs.media;
              _({
                messages: {
                  messageCount:
                    null !== (n = null == e ? void 0 : e.total_results) &&
                    void 0 !== n
                      ? n
                      : 0,
                  lastMessage:
                    null !== (a = null == e ? void 0 : e.messages[0]) &&
                    void 0 !== a
                      ? a
                      : null,
                },
                links: {
                  messageCount:
                    null !== (l = null == u ? void 0 : u.total_results) &&
                    void 0 !== l
                      ? l
                      : 0,
                  lastMessage:
                    null !== (s = null == u ? void 0 : u.messages[0]) &&
                    void 0 !== s
                      ? s
                      : null,
                },
                media: {
                  messageCount:
                    null !== (i = null == o ? void 0 : o.total_results) &&
                    void 0 !== i
                      ? i
                      : 0,
                  lastMessage:
                    null !== (r = null == o ? void 0 : o.messages[0]) &&
                    void 0 !== r
                      ? r
                      : null,
                },
              });
            }
            x({});
          });
          return () => {
            e.cancel(), clearTimeout(n);
          };
        }, [e, t, E, g, T, _]);
        let [v, x] = s.useState({});
        return {
          messagesCount:
            null !== (a = null == u ? void 0 : u.messageCount) && void 0 !== a
              ? a
              : h,
          linksCount:
            null !== (l = null == c ? void 0 : c.messageCount) && void 0 !== l
              ? l
              : h,
          mediaCount:
            null !== (i = null == p ? void 0 : p.messageCount) && void 0 !== i
              ? i
              : h,
        };
      }
    },
    744568: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return x;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("446674"),
        u = n("77078"),
        o = n("851387"),
        d = n("84339"),
        c = n("750560"),
        f = n("812204"),
        h = n("685665"),
        m = n("645266"),
        p = n("506885"),
        E = n("430312"),
        S = n("26989"),
        g = n("697218"),
        C = n("459824"),
        _ = n("516832"),
        I = n("986358"),
        T = n("590456"),
        v = n("561481");
      function x(e) {
        let {
            userId: t,
            guildId: n,
            onClose: s,
            className: x,
            infoPanelClassName: N,
            style: A,
          } = e,
          M = (0, C.useCanAccessGuildMemberModView)(n),
          R = (0, r.useStateFromStores)(
            [g.default],
            () => g.default.getUser(t),
            [t]
          ),
          j = (0, r.useStateFromStores)(
            [S.default],
            () => S.default.getMember(n, t),
            [n, t]
          ),
          [L, y] = l.useState(null == R || null == j),
          O = (0, d.default)(j),
          P = l.useRef(null),
          { AnalyticsLocationProvider: D } = (0, h.default)(
            f.default.GUILD_MEMBER_MOD_VIEW
          );
        return (l.useEffect(() => {
          !M && s();
        }, [M, s]),
        l.useEffect(() => {
          let e = null != O && null == j;
          e && !L && s();
        }, [L, j, s, O]),
        l.useEffect(() => {
          null != R && null != j && y(!1);
        }, [R, j]),
        l.useEffect(() => {
          let e = null == j;
          return (
            !L && e && (P.current = window.setTimeout(s, 500)),
            () => {
              null != P.current && window.clearTimeout(P.current);
            }
          );
        }, [L, j, s]),
        (0, c.useSubscribeGuildMembers)({ [n]: [t] }),
        l.useEffect(() => {
          (async function e() {
            let e = [
              o.default.requestMembersById(n, [t]),
              (0, m.getMemberSupplemental)(n, [t]),
              (0, p.default)(t, void 0, { guildId: n, dispatchWait: !0 }),
            ];
            await Promise.all(e), y(!1);
          })();
        }, [n, t]),
        M)
          ? L || null == R || null == j
            ? (0, a.jsx)("div", {
                className: i(v.sidebarContianer, v.loadingContainer, x),
                style: A,
                children: (0, a.jsx)(u.Spinner, {
                  animated: !0,
                  type: L
                    ? u.Spinner.Type.SPINNING_CIRCLE
                    : u.Spinner.Type.CHASING_DOTS,
                }),
              })
            : (0, a.jsx)(D, {
                children: (0, a.jsx)("div", {
                  className: i(v.sidebarContianer, x),
                  style: A,
                  children: (0, a.jsx)(E.default, {
                    user: R,
                    guildId: n,
                    profileType: T.UserProfileTypes.MODAL,
                    forceShowPremium: !0,
                    className: i(v.profileThemedContainer),
                    children: (0, a.jsxs)("div", {
                      className: i(v.innerContainer),
                      children: [
                        (0, a.jsx)(I.default, {
                          userId: t,
                          guildId: n,
                          onClose: s,
                        }),
                        (0, a.jsx)(_.default, {
                          userId: t,
                          guildId: n,
                          onClose: s,
                          className: N,
                        }),
                      ],
                    }),
                  }),
                }),
              })
          : null;
      }
    },
    473073: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("414456"),
        s = n.n(l),
        i = n("891722"),
        r = n("77078"),
        u = n("763225"),
        o = n("789150"),
        d = n("782340"),
        c = n("823494"),
        f = n("865331");
      function h(e) {
        let {
            userId: t,
            guildId: n,
            onNavigate: l,
            backPanel: h = o.ModViewPanel.INFO,
          } = e,
          m = (0, u.useProfileThemedPanelBackground)(
            t,
            n,
            0.8,
            r.tokens.colors.BACKGROUND_SECONDARY
          );
        return (0, a.jsxs)("div", {
          className: s(f.header),
          style: { backgroundColor: m },
          children: [
            (0, a.jsx)("div", {
              className: s(f.headerTitle),
              children: (0, a.jsxs)(r.Clickable, {
                className: s(c.backButton),
                onClick: () => (null == l ? void 0 : l(h)),
                children: [
                  (0, a.jsx)(i.ArrowSmallLeftIcon, {
                    className: s(c.backButtonIcon),
                    width: 20,
                    height: 20,
                  }),
                  (0, a.jsx)(r.Heading, {
                    variant: "heading-md/semibold",
                    children: d.default.Messages.BACK,
                  }),
                ],
              }),
            }),
            (0, a.jsx)("div", {
              className: s(c.options),
              children: (0, a.jsx)(r.KeyCombo, {
                shortcut: "esc",
                keyClassName: c.keyComboInner,
                className: c.keyComboContainer,
              }),
            }),
          ],
        });
      }
    },
    763225: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useProfileThemedPanelBackground: function () {
            return u;
          },
        });
      var a = n("446674"),
        l = n("77078"),
        s = n("217513"),
        i = n("906889"),
        r = n("697218");
      function u(e, t) {
        let n =
            arguments.length > 2 && void 0 !== arguments[2]
              ? arguments[2]
              : 0.8,
          u = arguments.length > 3 ? arguments[3] : void 0,
          o = (function (e, t) {
            let n = (0, a.useStateFromStores)(
                [r.default],
                () => r.default.getUser(e),
                [e]
              ),
              l = (0, s.default)(e, t),
              { profileTheme: u } = (0, i.default)(n, l, { isPreview: !0 });
            return u;
          })(e, t);
        return (0, l.useToken)(
          null != u ? u : l.tokens.colors.BACKGROUND_NESTED_FLOATING,
          o
        ).hex({ opacity: n });
      }
    },
    516832: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return C;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("907002"),
        i = n("446674"),
        r = n("413197"),
        u = n("84339"),
        o = n("485328"),
        d = n("982108"),
        c = n("561744"),
        f = n("994906"),
        h = n("249957"),
        m = n("598263"),
        p = n("276867"),
        E = n("789150"),
        S = n("49111");
      function g(e, t) {
        return n => {
          if (0 === n) return "auto";
          let a = "forwards" === t.current,
            l = n > 0,
            s = !1;
          return (
            l && a && "left" === e && (s = !0),
            l && !a && "right" === e && (s = !0),
            !l && a && "right" === e && (s = !0),
            !l && !a && "left" === e && (s = !0),
            s
              ? "calc("
                  .concat(100 * Math.abs(n), "% + ")
                  .concat(Math.round(12 * Math.abs(n)), "px)")
              : "auto"
          );
        };
      }
      function C(e) {
        var t, n;
        let {
            userId: C,
            guildId: _,
            onClose: I,
            analyticsLocation: T,
            className: v,
          } = e,
          x = (0, i.useStateFromStores)(
            [d.default],
            () => d.default.getGuildSidebarState(_),
            [_]
          ),
          N =
            null !== (t = null == x ? void 0 : x.details.modViewPanel) &&
            void 0 !== t
              ? t
              : E.ModViewPanel.INFO,
          A = (0, u.default)(C);
        let M =
            null == (n = N)
              ? null
              : n === E.ModViewPanel.INFO
                ? "backwards"
                : "forwards",
          R = (0, c.default)(M),
          { reducedMotion: j } = l.useContext(
            r.AccessibilityPreferencesContext
          ),
          L = l.useCallback(
            e => {
              null != x &&
                (0, f.openGuildMemberModViewSidebar)(_, C, x.baseChannelId, {
                  modViewPanel: e,
                });
            },
            [x, _, C]
          ),
          y = l.useMemo(
            () => ({
              [S.KeybindActions.CLOSE_MODAL]: {
                binds: ["esc"],
                comboKeysBindGlobal: !0,
                action() {
                  if (N === E.ModViewPanel.INFO) return I();
                  return L(E.ModViewPanel.INFO);
                },
              },
            }),
            [I, N, L]
          );
        l.useEffect(
          () => (
            o.default.enable(),
            o.default.enableTemp(y),
            () => o.default.disableTemp()
          ),
          [y]
        );
        let O = (0, s.useTransition)(N, {
          immediate: A !== C,
          value: 0,
          from: { value: 1 },
          enter: { value: 0 },
          leave: { value: -1 },
        });
        return (0, a.jsx)(s.animated.div, {
          style: {
            position: "relative",
            height: "100%",
            flex: 1,
            overflow: "hidden",
          },
          children: O((e, t, n) => {
            var l, i, r;
            let { key: u } = n;
            return (0, a.jsx)(
              s.animated.div,
              {
                style: {
                  position: "absolute",
                  display: "flex",
                  flexDirection: "column",
                  backfaceVisibility: "hidden",
                  width: "100%",
                  height: "100%",
                  ...(j.enabled
                    ? {
                        opacity:
                          null === (l = e.value) || void 0 === l
                            ? void 0
                            : l.to(e => 1 - Math.abs(e)),
                      }
                    : {
                        left:
                          null === (i = e.value) || void 0 === i
                            ? void 0
                            : i.to(g("left", R)),
                        right:
                          null === (r = e.value) || void 0 === r
                            ? void 0
                            : r.to(g("right", R)),
                      }),
                },
                children: (function (e) {
                  switch (e) {
                    case E.ModViewPanel.INFO:
                      return (0, a.jsx)(h.default, {
                        userId: C,
                        guildId: _,
                        onNavigate: L,
                        className: v,
                      });
                    case E.ModViewPanel.MESSAGE_HISTORY:
                      return (0, a.jsx)(m.default, {
                        userId: C,
                        guildId: _,
                        onNavigate: () => L(E.ModViewPanel.INFO),
                        className: v,
                      });
                    case E.ModViewPanel.PERMISSIONS:
                      return (0, a.jsx)(p.default, {
                        userId: C,
                        guildId: _,
                        onNavigate: () => L(E.ModViewPanel.INFO),
                        className: v,
                      });
                    default:
                      return null;
                  }
                })(t),
              },
              u
            );
          }),
        });
      }
    },
    703433: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return x;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("414456"),
        s = n.n(l),
        i = n("65597"),
        r = n("797350"),
        u = n("237020"),
        o = n("352567"),
        d = n("305861"),
        c = n("715072"),
        f = n("77078"),
        h = n("917397"),
        m = n("290491"),
        p = n("305961"),
        E = n("18494"),
        S = n("124969"),
        g = n("153769"),
        C = n("994906"),
        _ = n("136281"),
        I = n("49111"),
        T = n("782340"),
        v = n("865331");
      function x(e) {
        let { member: t } = e,
          n = (0, i.default)([p.default], () => p.default.getGuild(t.guildId), [
            t.guildId,
          ]),
          l = (0, h.useUserAccountVerified)(t.userId, t.guildId),
          x = (0, h.useUserRulesAgreementLevel)(t.userId, t.guildId),
          N = (0, h.useUserAccountAgeDate)(t.userId),
          A = (0, h.useGuildMemberJoinedAtDate)(t.userId, t.guildId);
        return null == n
          ? null
          : (0, a.jsx)("div", {
              className: s(v.safetySignalsMainContainer),
              children: (0, a.jsx)(f.FormItem, {
                title: T.default.Messages.ACCOUNT,
                titleClassName: v.infoTitle,
                children: (0, a.jsxs)(_.UserModInfoItemContainer, {
                  children: [
                    (0, a.jsx)(_.UserModInfoItem, {
                      icon: (0, a.jsx)(d.ShieldUserIcon, {
                        width: _.USER_MOD_ICON_SIZE_PX,
                        height: _.USER_MOD_ICON_SIZE_PX,
                        className: v.unusualDMLabelIcon,
                      }),
                      name: (0, a.jsx)(f.Text, {
                        variant: "text-sm/medium",
                        color: "text-normal",
                        children:
                          T.default.Messages
                            .MEMBER_VERIFICATION_ACCOUNT_VERIFIED,
                      }),
                      description: l
                        ? (0, a.jsx)(u.CheckmarkBoldIcon, {
                            width: _.USER_MOD_ICON_SIZE_PX,
                            height: _.USER_MOD_ICON_SIZE_PX,
                            color: f.tokens.colors.INFO_POSITIVE_FOREGROUND,
                          })
                        : (0, a.jsx)(o.CloseLargeBoldIcon, {
                            width: _.USER_MOD_ICON_SIZE_PX,
                            height: _.USER_MOD_ICON_SIZE_PX,
                            color: f.tokens.colors.INFO_DANGER_FOREGROUND,
                          }),
                    }),
                    x !== h.UserRulesAgreementLevel.NO_GATE &&
                      (0, a.jsx)(_.UserModInfoItem, {
                        icon: (0, a.jsx)(r.BookCheckIcon, {
                          width: _.USER_MOD_ICON_SIZE_PX,
                          height: _.USER_MOD_ICON_SIZE_PX,
                          className: v.unusualDMLabelIcon,
                        }),
                        name: (0, a.jsx)(f.Text, {
                          variant: "text-sm/medium",
                          color: "text-normal",
                          children:
                            T.default.Messages
                              .GUILD_MEMBER_MOD_VIEW_AGREE_TO_RULES,
                        }),
                        description:
                          x === h.UserRulesAgreementLevel.AGREED
                            ? (0, a.jsx)(u.CheckmarkBoldIcon, {
                                width: _.USER_MOD_ICON_SIZE_PX,
                                height: _.USER_MOD_ICON_SIZE_PX,
                                color: f.tokens.colors.INFO_POSITIVE_FOREGROUND,
                              })
                            : (0, a.jsx)(o.CloseLargeBoldIcon, {
                                width: _.USER_MOD_ICON_SIZE_PX,
                                height: _.USER_MOD_ICON_SIZE_PX,
                                color: f.tokens.colors.INFO_DANGER_FOREGROUND,
                              }),
                      }),
                    (0, a.jsx)(_.UserModInfoItem, {
                      icon: (0, a.jsx)(g.default, {
                        width: _.USER_MOD_ICON_SIZE_PX,
                        height: _.USER_MOD_ICON_SIZE_PX,
                      }),
                      name: (0, a.jsx)(f.Text, {
                        variant: "text-sm/medium",
                        color: "text-normal",
                        children:
                          T.default.Messages
                            .GUILD_MEMBER_MOD_VIEW_DISCORD_JOIN_DATE,
                      }),
                      description: (0, a.jsx)(f.Text, {
                        variant: "text-sm/medium",
                        color: "text-normal",
                        children: N,
                      }),
                    }),
                    (0, a.jsx)(_.UserModInfoItem, {
                      icon: (0, a.jsx)(S.GuildIcon, {
                        guild: n,
                        size: S.GuildIcon.Sizes.SMOL,
                        animate: !1,
                        className: v.guildIcon,
                      }),
                      name: (0, a.jsx)(f.Text, {
                        variant: "text-sm/medium",
                        color: "text-normal",
                        children:
                          T.default.Messages
                            .GUILD_MEMBER_MOD_VIEW_GUILD_JOIN_DATE,
                      }),
                      description: (0, a.jsx)(f.Text, {
                        variant: "text-sm/medium",
                        color: "text-normal",
                        children: A,
                      }),
                    }),
                    (0, a.jsx)(_.UserModInfoItem, {
                      icon: (0, a.jsx)(c.UserPlusIcon, {
                        width: _.USER_MOD_ICON_SIZE_PX,
                        height: _.USER_MOD_ICON_SIZE_PX,
                      }),
                      name: (0, a.jsx)(f.Text, {
                        variant: "text-sm/medium",
                        color: "text-normal",
                        children:
                          T.default.Messages
                            .GUILD_MEMBER_MOD_VIEW_INVITE_LINK_LABEL,
                      }),
                      description: (0, a.jsx)(f.Text, {
                        variant: "text-sm/medium",
                        color: "text-normal",
                        children: (0, a.jsx)(m.default, {
                          userId: t.userId,
                          guildId: t.guildId,
                          showInviterAsFooter: !0,
                          onClickInviter: e => {
                            let n = E.default.getChannelId();
                            (0, C.openGuildMemberModViewSidebar)(
                              t.guildId,
                              e.id,
                              null != n ? n : I.EMPTY_STRING_SNOWFLAKE_ID
                            );
                          },
                        }),
                      }),
                    }),
                  ],
                }),
              }),
            });
      }
    },
    21363: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return C;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("65597"),
        u = n("77078"),
        o = n("178406"),
        d = n("553275"),
        c = n("412013"),
        f = n("305961"),
        h = n("957255"),
        m = n("351825"),
        p = n("136281"),
        E = n("49111"),
        S = n("782340"),
        g = n("865331");
      function C(e) {
        let { member: t } = e,
          n = (0, r.default)([f.default], () => f.default.getGuild(t.guildId)),
          s = (0, r.default)([f.default], () => f.default.getRoles(t.guildId)),
          C = l.useMemo(
            () =>
              null == n
                ? []
                : null == t.highestRoleId
                  ? t.roles
                  : t.roles
                      .filter(e => null != e && e !== t.highestRoleId)
                      .sort((e, t) => {
                        var n, a, l, i;
                        return null !==
                          (i =
                            null !==
                              (l =
                                null === (n = s[t]) || void 0 === n
                                  ? void 0
                                  : n.position) && void 0 !== l
                              ? l
                              : 0 -
                                (null === (a = s[e]) || void 0 === a
                                  ? void 0
                                  : a.position)) && void 0 !== i
                          ? i
                          : 0;
                      }),
            [t.roles, t.highestRoleId, n, s]
          ),
          _ = (0, r.default)(
            [o.default],
            () => o.default.getEnhancedMember(t.guildId, t.userId),
            [t.guildId, t.userId]
          ),
          I = (0, d.useHighestRole)(_),
          T = (0, d.useContextMenuModerateRoles)(t),
          v = (0, r.default)(
            [h.default],
            () => h.default.can(E.Permissions.MANAGE_ROLES, n),
            [n]
          );
        return null == n
          ? null
          : (0, a.jsx)(u.FormItem, {
              title: S.default.Messages.ROLES,
              titleClassName: g.infoTitle,
              children: (0, a.jsx)(p.UserModInfoItemContainer, {
                children: (0, a.jsx)(p.UserModInfoItem, {
                  description: (0, a.jsxs)("div", {
                    className: g.roleContainer,
                    children: [
                      (0, a.jsx)(u.Tooltip, {
                        "aria-label":
                          S.default.Messages
                            .GUILD_MEMBER_MOD_VIEW_PERMISSION_GRANTED_BY_ARIA_LABEL,
                        tooltipContentClassName: g.permissionTooltip,
                        allowOverflow: !0,
                        text: S.default.Messages
                          .GUILD_MEMBER_MOD_VIEW_HIGHEST_ROLE,
                        children: e => {
                          let { onMouseEnter: n, onMouseLeave: l } = e;
                          return (0, a.jsx)(u.Clickable, {
                            onMouseEnter: n,
                            onMouseLeave: l,
                            children: (0, a.jsx)(c.default, {
                              className: i(g.roleTooltipItem, g.highestRole),
                              role: I,
                              guildId: t.guildId,
                            }),
                          });
                        },
                      }),
                      C.map(e =>
                        (0, a.jsx)(
                          c.default,
                          {
                            className: i(g.roleTooltipItem),
                            role: s[e],
                            guildId: t.guildId,
                          },
                          e
                        )
                      ),
                      v &&
                        (0, a.jsx)(u.Tooltip, {
                          "aria-label": S.default.Messages.ADD_ROLE_A11Y_LABEL,
                          tooltipContentClassName: g.permissionTooltip,
                          allowOverflow: !0,
                          text: S.default.Messages.ADD_ROLE_A11Y_LABEL,
                          children: e => {
                            let { onMouseEnter: t, onMouseLeave: n } = e;
                            return (0, a.jsx)(u.Clickable, {
                              className: i(g.addRoleContainer),
                              onClick: T,
                              onMouseEnter: t,
                              onMouseLeave: n,
                              children: (0, a.jsx)(m.default, {
                                className: i(g.addRoleIcon),
                                width: 20,
                                height: 20,
                              }),
                            });
                          },
                        }),
                    ],
                  }),
                }),
              }),
            });
      }
    },
    68777: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return M;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("866227"),
        u = n.n(r),
        o = n("65597"),
        d = n("77078"),
        c = n("252073"),
        f = n("309021"),
        h = n("917397"),
        m = n("553275"),
        p = n("287103"),
        E = n("817343"),
        S = n("26989"),
        g = n("305961"),
        C = n("987663"),
        _ = n("387111"),
        I = n("136281"),
        T = n("782340"),
        v = n("856527"),
        x = n("499559"),
        N = n("865331");
      function A(e) {
        let { log: t, member: n, guild: s } = e,
          r = f.getSimpleAuditLogTitleFromChange(t),
          c = f.getSimpleAuditLogTitleContextFromChange(t),
          p = f.getStringForBanReason(t),
          g = f.getSimpleAuditLogChangeDetails(t),
          C = (0, h.useAuditLogDate)(t.id),
          I = (0, o.default)(
            [S.default],
            () =>
              null != t.userId
                ? S.default.getMember(n.guildId, t.userId)
                : null,
            [n.guildId, t.userId]
          ),
          N = l.useCallback(
            e => t => {
              t.preventDefault(),
                t.stopPropagation(),
                null != e && (0, m.openMemberProfile)(e);
            },
            []
          ),
          A = l.useCallback(
            () =>
              null == t.user
                ? null
                : (0, a.jsx)(d.Tooltip, {
                    text: T.default.Messages
                      .GUILD_MEMBER_MOD_VIEW_AUDIT_LOG_SOURCE_USER,
                    children: e => {
                      var l;
                      let { onMouseEnter: s, onMouseLeave: r } = e;
                      return (0, a.jsx)(d.Clickable, {
                        tag: "span",
                        className: v.username,
                        onClick: N(I),
                        onMouseEnter: s,
                        onMouseLeave: r,
                        children: (0, a.jsxs)(d.Text, {
                          variant: "text-sm/medium",
                          tag: "span",
                          children: [
                            "@",
                            (0, a.jsx)(d.NameWithRole, {
                              name: _.default.getName(n.guildId, null, t.user),
                              color:
                                null !==
                                  (l = null == I ? void 0 : I.colorString) &&
                                void 0 !== l
                                  ? l
                                  : void 0,
                              className: i(v.memberNameText),
                            }),
                          ],
                        }),
                      });
                    },
                  }),
            [N, t.user, n.guildId, I]
          ),
          M = A();
        return (0, a.jsxs)("div", {
          className: i(x.modInfoItem, v.auditLogItem),
          children: [
            (0, a.jsxs)("div", {
              className: v.auditLogItemTitleContainer,
              children: [
                (0, a.jsxs)("div", {
                  className: v.auditLogItemTitle,
                  children: [
                    null != r &&
                      (0, a.jsx)(d.Text, {
                        variant: "text-sm/semibold",
                        color: "header-primary",
                        children: r,
                      }),
                    null != c &&
                      (0, a.jsxs)(d.Text, {
                        variant: "text-sm/normal",
                        color: "header-secondary",
                        children: [
                          "(",
                          "string" == typeof c ? c : u(c).fromNow(),
                          ")",
                        ],
                      }),
                  ],
                }),
                (0, a.jsx)("div", {
                  className: v.auditLogItemDate,
                  children: (0, a.jsx)(d.Text, {
                    variant: "text-sm/medium",
                    color: "header-primary",
                    children: C,
                  }),
                }),
              ],
            }),
            null != p &&
              (0, a.jsx)("div", {
                className: v.auditLogSecondaryContainer,
                children: (0, a.jsxs)("div", {
                  className: v.auditLogReason,
                  children: [
                    M,
                    (0, a.jsx)(d.Text, {
                      variant: "text-sm/normal",
                      color: "text-muted",
                      tag: "span",
                      children: p,
                    }),
                  ],
                }),
              }),
            null == p &&
              null != g &&
              (0, a.jsx)("div", {
                className: v.auditLogSecondaryContainer,
                children: (0, a.jsxs)("div", {
                  className: v.auditLogSecondary,
                  children: [
                    M,
                    (0, a.jsx)(d.Text, {
                      variant: "text-sm/normal",
                      color: "text-muted",
                      tag: "span",
                      children: g,
                    }),
                  ],
                }),
              }),
            null == p &&
              null == g &&
              (0, a.jsx)("div", {
                className: v.auditLogSecondaryContainer,
                children: (0, a.jsx)("div", {
                  className: v.auditLogSecondary,
                  children: (0, a.jsx)(d.Text, {
                    variant: "text-sm/normal",
                    color: "text-muted",
                    tag: "span",
                    children: (0, a.jsx)(E.AuditLogExpandedChangeDetails, {
                      log: t,
                      guild: s,
                      onContentClick: () => {},
                      className: v.auditLogExpandedChangeDetails,
                    }),
                  }),
                }),
              }),
          ],
        });
      }
      function M(e) {
        let { member: t } = e,
          n = (0, o.default)([g.default], () => g.default.getGuild(t.guildId), [
            t.guildId,
          ]),
          s = (0, o.default)(
            [p.default],
            () => {
              let e = p.default.logs;
              return null == e || null == n ? [] : C.transformLogs(e, n);
            },
            [n]
          );
        return (l.useEffect(() => {
          (async function e(e, t) {
            await c.filterByTargetId(t, e);
          })(t.guildId, t.userId);
        }, [t.guildId, t.userId]),
        null == n || 0 === s.length)
          ? null
          : (0, a.jsx)("div", {
              className: i(N.safetySignalsMainContainer),
              children: (0, a.jsx)(d.FormItem, {
                title:
                  T.default.Messages.GUILD_MEMBER_MOD_VIEW_RECENT_AUDIT_LOG,
                titleClassName: N.infoTitle,
                children:
                  s.length > 0
                    ? (0, a.jsx)(I.UserModInfoItemContainer, {
                        children: s.map(e =>
                          (0, a.jsx)(A, { log: e, member: t, guild: n }, e.id)
                        ),
                      })
                    : null,
              }),
            });
      }
    },
    136281: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          USER_MOD_ICON_SIZE_PX: function () {
            return o;
          },
          UserModInfoItem: function () {
            return d;
          },
          UserModInfoItemContainer: function () {
            return c;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("414456"),
        s = n.n(l),
        i = n("426383"),
        r = n("77078"),
        u = n("499559");
      let o = 16;
      function d(e) {
        let {
          description: t,
          name: n,
          icon: l,
          onNavigate: d,
          className: c,
          missingNavIcon: f,
        } = e;
        return (0, a.jsxs)(r.Clickable, {
          onClick: d,
          className: s(u.modInfoItem, null != d && u.modInfoAction, c),
          children: [
            null != l &&
              (0, a.jsx)("div", {
                className: s(u.modInfoItemIcon),
                children: l,
              }),
            null != n &&
              (0, a.jsx)("div", {
                className: s(u.modInfoItemName),
                children: n,
              }),
            (0, a.jsx)("div", {
              className: s(u.modInfoItemDescription),
              children: t,
            }),
            null != d &&
              (0, a.jsx)("div", {
                className: s(u.modInfoItemActionIcon),
                children: (0, a.jsx)(i.ChevronLargeRightIcon, {
                  width: o,
                  height: o,
                }),
              }),
            null == d &&
              null != f &&
              (0, a.jsx)("div", {
                className: s(u.modInfoItemActionIcon),
                children: f,
              }),
          ],
        });
      }
      function c(e) {
        let { children: t } = e;
        return (0, a.jsx)("div", {
          className: s(u.modInfoItemContainer),
          children: t,
        });
      }
    },
    463278: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return T;
          },
        }),
        n("424973");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("65597"),
        u = n("748802"),
        o = n("233676"),
        d = n("77078"),
        c = n("412013"),
        f = n("978970"),
        h = n("305961"),
        m = n("465305"),
        p = n("136281"),
        E = n("914275"),
        S = n("789150"),
        g = n("49111"),
        C = n("782340"),
        _ = n("206845");
      function I(e) {
        var t, n;
        let { permission: l, roleIds: s, guild: u, specMap: m } = e,
          p = g.Permissions[l],
          S =
            null !==
              (n =
                null === (t = m[p.toString()]) || void 0 === t
                  ? void 0
                  : t.title) && void 0 !== n
              ? n
              : (0, f.getPermissionName)(p),
          I = E.ELEVATED_PERMISSIONS.has(p),
          T = (0, r.default)([h.default], () => h.default.getRoles(u.id));
        return (0, a.jsx)(d.Tooltip, {
          "aria-label":
            C.default.Messages
              .GUILD_MEMBER_MOD_VIEW_PERMISSION_GRANTED_BY_ARIA_LABEL,
          tooltipClassName: _.roleTooltipContainer,
          tooltipContentClassName: _.roleTooltipContentContainer,
          allowOverflow: !0,
          text: (0, a.jsxs)(a.Fragment, {
            children: [
              (0, a.jsx)(d.Text, {
                variant: "text-sm/normal",
                children: I
                  ? C.default.Messages
                      .GUILD_MEMBER_MOD_VIEW_ELEVATED_PERMISSION_GRANTED_BY
                  : C.default.Messages
                      .GUILD_MEMBER_MOD_VIEW_PERMISSION_GRANTED_BY,
              }),
              s.map(e =>
                (0, a.jsx)(
                  "div",
                  {
                    className: i(_.roleTooltipItem),
                    children: (0, a.jsx)(c.default, {
                      role: T[e],
                      guildId: u.id,
                    }),
                  },
                  e
                )
              ),
            ],
          }),
          children: e => {
            let { onMouseEnter: t, onMouseLeave: n } = e;
            return (0, a.jsxs)(d.Clickable, {
              className: i(_.permissionChiplet, { [_.elevatedPermission]: I }),
              onMouseEnter: t,
              onMouseLeave: n,
              children: [
                I &&
                  (0, a.jsx)(o.ShieldLockIcon, {
                    width: 16,
                    height: 16,
                    color: d.tokens.colors.TEXT_BRAND,
                  }),
                (0, a.jsx)(d.Text, {
                  variant: "text-xs/medium",
                  color: "interactive-normal",
                  children: S,
                }),
              ],
            });
          },
        });
      }
      var T = l.memo(function (e) {
        let { member: t, onNavigate: n } = e,
          s = (0, r.default)([h.default], () => h.default.getGuild(t.guildId), [
            t.guildId,
          ]),
          o = (0, E.useUserPermissionsAndRoles)(
            t.userId,
            t.guildId,
            E.MOD_PERMISSIONS
          ),
          c = (0, E.useUserPermissionsAndRoles)(
            t.userId,
            t.guildId,
            E.ALL_PERMISSIONS
          ),
          f = Object.keys(o).length,
          T = Object.keys(c).length,
          v = l.useMemo(
            () => (null != s ? m.default.getGuildPermissionSpecMap(s) : null),
            [s]
          ),
          x = l.useMemo(
            () => (null != s ? m.default.generateGuildPermissionSpec(s) : null),
            [s]
          ),
          N = l.useMemo(() => {
            if (null == s || null == v) return null;
            if (0 === f)
              return (0, a.jsx)("div", {
                className: i(_.permissionChiplet, _.noModPerms),
                children: (0, a.jsx)(d.Text, {
                  variant: "text-sm/normal",
                  color: "text-positive",
                  children:
                    C.default.Messages
                      .GUILD_MEMBER_MOD_VIEW_MOD_NO_MOD_PERMS_FOUND,
                }),
              });
            let e = [];
            return (
              null == x ||
                x.forEach(t => {
                  t.permissions.forEach(t => {
                    let n = t.flag,
                      l = E.ALL_PERMISSIONS.find(e => g.Permissions[e] === n);
                    if (null == l) return;
                    let i = o[l];
                    null != i &&
                      e.push(
                        (0, a.jsx)(
                          I,
                          { permission: l, roleIds: i, guild: s, specMap: v },
                          l
                        )
                      );
                  });
                }),
              e
            );
          }, [s, f, o, x, v]);
        return null == s
          ? null
          : (0, a.jsx)(d.FormItem, {
              title: (0, a.jsxs)("div", {
                className: _.headerContainer,
                children: [
                  (0, a.jsx)(d.Text, {
                    variant: "eyebrow",
                    color: "header-secondary",
                    children:
                      C.default.Messages
                        .GUILD_MEMBER_MOD_VIEW_MOD_PERMSSISONS_TITLE,
                  }),
                  (0, a.jsxs)(d.Clickable, {
                    className: _.viewAllPermissions,
                    onClick: () => n(S.ModViewPanel.PERMISSIONS),
                    children: [
                      (0, a.jsx)(d.Text, {
                        variant: "eyebrow",
                        color: "interactive-normal",
                        children:
                          C.default.Messages.GUILD_MEMBER_MOD_VIEW_VIEW_ALL_PERMISSIONS.format(
                            { count: T }
                          ),
                      }),
                      (0, a.jsx)(u.ChevronSmallRightIcon, {
                        width: 16,
                        height: 16,
                      }),
                    ],
                  }),
                ],
              }),
              titleClassName: _.infoTitle,
              children: (0, a.jsx)(p.UserModInfoItemContainer, {
                children: (0, a.jsx)(p.UserModInfoItem, {
                  description: (0, a.jsx)("div", {
                    className: _.permissionsContainer,
                    children: N,
                  }),
                }),
              }),
            });
      });
    },
    249957: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return I;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("414456"),
        s = n.n(l),
        i = n("65597"),
        r = n("77078"),
        u = n("26989"),
        o = n("697218"),
        d = n("339123"),
        c = n("763225"),
        f = n("703433"),
        h = n("21363"),
        m = n("68777"),
        p = n("463278"),
        E = n("608973"),
        S = n("132881"),
        g = n("782340"),
        C = n("865331");
      function _(e) {
        let { userId: t, guildId: n } = e,
          l = (0, c.useProfileThemedPanelBackground)(
            t,
            n,
            0.8,
            r.tokens.colors.BACKGROUND_SECONDARY
          );
        return (0, a.jsxs)("div", {
          className: s(C.header),
          style: { backgroundColor: l },
          children: [
            (0, a.jsxs)("div", {
              className: s(C.headerTitle),
              children: [
                (0, a.jsx)(d.default, { width: 16, height: 16 }),
                (0, a.jsx)(r.Heading, {
                  variant: "heading-md/semibold",
                  children: g.default.Messages.GUILD_MEMBER_MOD_VIEW_TITLE,
                }),
              ],
            }),
            (0, a.jsx)("div", {
              children: (0, a.jsx)(r.KeyCombo, {
                shortcut: "esc",
                keyClassName: C.keyComboInner,
                className: C.keyComboContainer,
              }),
            }),
          ],
        });
      }
      function I(e) {
        let {
            userId: t,
            guildId: n,
            location: l,
            className: d,
            onNavigate: g,
          } = e,
          I = (0, i.default)([o.default], () => o.default.getUser(t), [t]),
          T = (0, i.default)([u.default], () => u.default.getMember(n, t), [
            n,
            t,
          ]),
          v = (0, c.useProfileThemedPanelBackground)(t, n);
        return null == I || null == T
          ? null
          : (0, a.jsxs)(r.Scroller, {
              className: s(C.container, d),
              style: { backgroundColor: v },
              children: [
                (0, a.jsx)(_, { userId: t, guildId: n }),
                (0, a.jsxs)("div", {
                  className: s(C.innerContainer),
                  children: [
                    (0, a.jsx)(E.default, { member: T }),
                    (0, a.jsx)(S.default, { userId: t, guildId: n }),
                    (0, a.jsx)(p.default, { member: T, onNavigate: g }),
                    (0, a.jsx)(h.default, { member: T }),
                    (0, a.jsx)(f.default, { member: T }),
                    (0, a.jsx)(m.default, { member: T }),
                  ],
                }),
              ],
            });
      }
    },
    608973: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("65597"),
        i = n("77078"),
        r = n("509"),
        u = n("64905"),
        o = n("178406"),
        d = n("91551"),
        c = n("4845"),
        f = n("491401"),
        h = n("136281"),
        m = n("782340"),
        p = n("865331");
      function E(e) {
        let { member: t } = e,
          n = t.userId,
          E = t.guildId,
          S = (0, s.default)(
            [o.default],
            () => o.default.getEnhancedMember(E, n),
            [n, E]
          ),
          g = null != S ? S : t,
          C = g.unusualDMActivityUntil,
          _ = l.useCallback(e => {
            if (null == e) return null;
            let t = new Date(e).getTime();
            return (0, u.formatDateRelativeTime)(
              t,
              u.MembersTableDateFormats.JOINED_AT
            );
          }, []),
          I = l.useMemo(() => (null == t ? null : _(C)), [t, _, C]),
          T = l.useMemo(
            () => (0, r.isCommunicationDisabled)(t.communicationDisabledUntil),
            [t.communicationDisabledUntil]
          ),
          v = l.useMemo(
            () =>
              null == t.communicationDisabledUntil
                ? new Date()
                : new Date(t.communicationDisabledUntil),
            [t.communicationDisabledUntil]
          ),
          x = null == C && !T;
        return x
          ? null
          : (0, a.jsx)(i.FormItem, {
              title: m.default.Messages.MEMBER_SAFETY_TABLE_HEADER_FLAGS,
              titleClassName: p.infoTitle,
              children: (0, a.jsxs)(h.UserModInfoItemContainer, {
                children: [
                  null != C &&
                    (0, a.jsx)(h.UserModInfoItem, {
                      icon: (0, a.jsx)(c.default, {
                        width: h.USER_MOD_ICON_SIZE_PX,
                        height: h.USER_MOD_ICON_SIZE_PX,
                        className: p.unusualDMLabelIcon,
                      }),
                      name: (0, a.jsx)(i.Text, {
                        variant: "text-sm/semibold",
                        color: "text-normal",
                        children:
                          m.default.Messages.MEMBER_SAFETY_UNUSUAL_DM_ACTIVITY,
                      }),
                      description: (0, a.jsx)(i.Text, {
                        variant: "text-sm/semibold",
                        color: "text-normal",
                        children: I,
                      }),
                    }),
                  T &&
                    null != v &&
                    (0, a.jsx)(h.UserModInfoItem, {
                      icon: (0, a.jsx)(f.default, {
                        width: h.USER_MOD_ICON_SIZE_PX,
                        height: h.USER_MOD_ICON_SIZE_PX,
                        className: p.unusualDMLabelIcon,
                      }),
                      name: (0, a.jsx)(i.Text, {
                        variant: "text-sm/semibold",
                        color: "text-normal",
                        children:
                          m.default.Messages
                            .GUILD_COMMUNICATION_DISABLED_ON_MEMBER,
                      }),
                      description: (0, a.jsx)(i.Text, {
                        variant: "text-sm/semibold",
                        color: "text-normal",
                        children: (0, a.jsx)(d.default, {
                          deadline: v,
                          showUnits: !0,
                          stopAtOneSec: !0,
                        }),
                      }),
                    }),
                ],
              }),
            });
      }
    },
    132881: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return S;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("446674"),
        i = n("305808"),
        r = n("753809"),
        u = n("77078"),
        o = n("982108"),
        d = n("109264"),
        c = n("994906"),
        f = n("180968"),
        h = n("136281"),
        m = n("789150"),
        p = n("782340"),
        E = n("865331");
      function S(e) {
        let { userId: t, guildId: n } = e,
          S = (0, s.useStateFromStores)(
            [o.default],
            () => o.default.getGuildSidebarState(n),
            [n]
          ),
          {
            messagesCount: g,
            linksCount: C,
            mediaCount: _,
          } = (0, f.useServerActivityCountsForUser)(t, n),
          I = new Intl.NumberFormat(p.default.getLocale()).format(g),
          T = new Intl.NumberFormat(p.default.getLocale()).format(C),
          v = new Intl.NumberFormat(p.default.getLocale()).format(_),
          x = l.useCallback(
            async e => {
              if (null == S) return;
              let a = (0, f.getSearchQueryForUser)(t, e);
              await (0, c.openGuildMemberModViewSidebar)(
                n,
                t,
                S.baseChannelId,
                {
                  modViewPanel: m.ModViewPanel.MESSAGE_HISTORY,
                  additionalSearchQuery: a,
                }
              );
            },
            [n, S, t]
          );
        return (0, a.jsx)(u.FormItem, {
          title:
            p.default.Messages
              .GUILD_MEMBER_MOD_VIEW_GUILD_MESSAGE_ACTIVITY_TITLE,
          titleClassName: E.infoTitle,
          children: (0, a.jsxs)(h.UserModInfoItemContainer, {
            children: [
              (0, a.jsx)(h.UserModInfoItem, {
                icon: (0, a.jsx)(d.default, {
                  width: h.USER_MOD_ICON_SIZE_PX,
                  height: h.USER_MOD_ICON_SIZE_PX,
                }),
                name: (0, a.jsx)(u.Text, {
                  variant: "text-sm/semibold",
                  color: "text-normal",
                  children: p.default.Messages.MESSAGES,
                }),
                description:
                  g === f.HAS_NO_COUNT
                    ? (0, a.jsx)(u.Spinner, {
                        type: u.SpinnerTypes.SPINNING_CIRCLE,
                        className: E.loadingSpinner,
                      })
                    : (0, a.jsx)(u.Text, {
                        variant: "text-sm/semibold",
                        color: "interactive-normal",
                        children: I,
                      }),
                onNavigate: g > 0 ? () => x(f.SearchKeyType.MESSAGES) : void 0,
              }),
              (0, a.jsx)(h.UserModInfoItem, {
                icon: (0, a.jsx)(r.LinkIcon, {
                  width: h.USER_MOD_ICON_SIZE_PX,
                  height: h.USER_MOD_ICON_SIZE_PX,
                }),
                name: (0, a.jsx)(u.Text, {
                  variant: "text-sm/semibold",
                  color: "text-normal",
                  children: p.default.Messages.QUICKSEARCH_LINKS,
                }),
                description:
                  C === f.HAS_NO_COUNT
                    ? (0, a.jsx)(u.Spinner, {
                        type: u.SpinnerTypes.SPINNING_CIRCLE,
                        className: E.loadingSpinner,
                      })
                    : (0, a.jsx)(u.Text, {
                        variant: "text-sm/semibold",
                        color: "interactive-normal",
                        children: T,
                      }),
                onNavigate: C > 0 ? () => x(f.SearchKeyType.LINKS) : void 0,
              }),
              (0, a.jsx)(h.UserModInfoItem, {
                icon: (0, a.jsx)(i.ImagesIcon, {
                  width: h.USER_MOD_ICON_SIZE_PX,
                  height: h.USER_MOD_ICON_SIZE_PX,
                }),
                name: (0, a.jsx)(u.Text, {
                  variant: "text-sm/semibold",
                  color: "text-normal",
                  children: p.default.Messages.QUICKSEARCH_MEDIA,
                }),
                description:
                  _ === f.HAS_NO_COUNT
                    ? (0, a.jsx)(u.Spinner, {
                        type: u.SpinnerTypes.SPINNING_CIRCLE,
                        className: E.loadingSpinner,
                      })
                    : (0, a.jsx)(u.Text, {
                        variant: "text-sm/semibold",
                        color: "interactive-normal",
                        children: v,
                      }),
                onNavigate: _ > 0 ? () => x(f.SearchKeyType.MEDIA) : void 0,
              }),
            ],
          }),
        });
      }
    },
    598263: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return N;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("917351"),
        u = n("65597"),
        o = n("77078"),
        d = n("419135"),
        c = n("574933"),
        f = n("692038"),
        h = n("95045"),
        m = n("549206"),
        p = n("982108"),
        E = n("26989"),
        S = n("697218"),
        g = n("994906"),
        C = n("180968"),
        _ = n("473073"),
        I = n("763225"),
        T = n("789150"),
        v = n("865331"),
        x = n("714605");
      function N(e) {
        var t, n;
        let {
            userId: s,
            guildId: N,
            location: A,
            className: M,
            onNavigate: R,
          } = e,
          j = l.useRef(null),
          L = (0, u.default)(
            [p.default],
            () => p.default.getGuildSidebarState(N),
            [N]
          ),
          y = l.useRef(0),
          [O, P] = l.useState(
            null !==
              (t = null == L ? void 0 : L.details.additionalSearchQuery) &&
              void 0 !== t
              ? t
              : {}
          ),
          D = (0, C.useServerMessageHistoryForUser)(s, N, {
            addtionalQuery: O,
            shouldDispatch: !0,
          }),
          b = (0, u.default)([S.default], () => S.default.getUser(s), [s]),
          U = (0, u.default)([E.default], () => E.default.getMember(N, s), [
            N,
            s,
          ]),
          w = (0, I.useProfileThemedPanelBackground)(s, N);
        l.useLayoutEffect(() => {
          let e = null == L ? void 0 : L.details.scrollOffset;
          if (null != e) {
            var t;
            null === (t = j.current) ||
              void 0 === t ||
              t.scrollTo({ to: e, animate: !1 });
          }
        }, []);
        let F = l.useCallback(
            e => {
              if (null == L) return;
              let t = e.target.scrollTop;
              (y.current = t),
                (0, g.openGuildMemberModViewSidebar)(N, s, L.baseChannelId, {
                  modViewPanel: T.ModViewPanel.MESSAGE_HISTORY,
                  additionalSearchQuery: O,
                  scrollOffset: y.current,
                });
            },
            [N, s, L, O]
          ),
          V = (0, r.throttle)(F, 300),
          k = l.useCallback(
            e => {
              if (null == L) return;
              let t = { ...O, offset: 25 * e };
              P(t),
                (0, g.openGuildMemberModViewSidebar)(N, s, L.baseChannelId, {
                  modViewPanel: T.ModViewPanel.MESSAGE_HISTORY,
                  additionalSearchQuery: t,
                  scrollOffset: y.current,
                });
            },
            [N, s, L, O]
          ),
          B =
            null !== (n = null == O ? void 0 : O.offset) && void 0 !== n
              ? n
              : 0,
          G = (0, u.default)(
            [c.default],
            () => {
              if (null == D.result) return [];
              let e = D.result.messages,
                t = (0, d.createASTHighlighter)("");
              return e.map(e =>
                e.map(e => {
                  let n = c.default.getMessage(e.id, e.channel_id),
                    a = (0, f.createMessageRecord)(e);
                  return (
                    null != n &&
                      (a = a.merge({
                        attachments: n.attachments,
                        embeds: n.embeds,
                      })),
                    a.isSearchHit
                      ? a.set(
                          "customRenderedContent",
                          (0, h.default)(a, {
                            postProcessor: t,
                            allowHeading: !0,
                            allowList: !0,
                          })
                        )
                      : a
                  );
                })
              );
            },
            [D.result]
          ),
          H = l.useMemo(() => {
            var e, t, n, a;
            return null == D.result
              ? {
                  documentsIndexed: 0,
                  isSearching: !0,
                  isIndexing: !1,
                  isHistoricalIndexing: !1,
                  offset: B,
                  totalResults: 0,
                  hasError: !1,
                  showBlockedResults: !1,
                  showNoResultsAlt: !1,
                }
              : {
                  documentsIndexed:
                    null !== (e = D.result.documents_indexed) && void 0 !== e
                      ? e
                      : 0,
                  isSearching: !1,
                  isIndexing:
                    null !== (t = D.result.doing_deep_historical_index) &&
                    void 0 !== t &&
                    t,
                  isHistoricalIndexing:
                    null !== (n = D.result.doing_deep_historical_index) &&
                    void 0 !== n &&
                    n,
                  offset: B,
                  totalResults:
                    null !== (a = D.result.total_results) && void 0 !== a
                      ? a
                      : 0,
                  hasError: !1,
                  showBlockedResults: !1,
                  showNoResultsAlt: !1,
                };
          }, [D.result, B]);
        return null == b || null == U || null == H
          ? null
          : (0, a.jsxs)("div", {
              className: i(v.container, M),
              style: { backgroundColor: w },
              children: [
                (0, a.jsx)(_.default, { guildId: N, userId: s, onNavigate: R }),
                (0, a.jsx)(o.AdvancedScroller, {
                  className: i(x.innerContainer),
                  ref: j,
                  onScroll: V,
                  children: (0, a.jsx)(m.default, {
                    searchResults: G,
                    search: H,
                    searchId: s,
                    renderEmbeds: !0,
                    blockCount: 0,
                    scrollTo: () => {},
                    onChangePage: k,
                  }),
                }),
              ],
            });
      }
    },
    276867: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return O;
          },
        }),
        n("222007"),
        n("424973");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("483366"),
        u = n.n(r),
        o = n("65597"),
        d = n("233676"),
        c = n("77078"),
        f = n("454273"),
        h = n("120027"),
        m = n("412013"),
        p = n("592407"),
        E = n("978970"),
        S = n("26989"),
        g = n("305961"),
        C = n("957255"),
        _ = n("697218"),
        I = n("810567"),
        T = n("465305"),
        v = n("473073"),
        x = n("763225"),
        N = n("914275"),
        A = n("49111"),
        M = n("782340"),
        R = n("865331"),
        j = n("680153");
      function L(e) {
        var t, n, s, r;
        let {
            permission: u,
            roleIds: S,
            guild: _,
            specMap: I,
            categoryTitle: T,
          } = e,
          v = (0, o.default)([g.default], () => g.default.getRoles(_.id)),
          x = A.Permissions[u],
          R =
            null !==
              (s =
                null === (t = I[x.toString()]) || void 0 === t
                  ? void 0
                  : t.title) && void 0 !== s
              ? s
              : (0, E.getPermissionName)(x),
          L =
            null !==
              (r =
                null === (n = I[x.toString()]) || void 0 === n
                  ? void 0
                  : n.description) && void 0 !== r
              ? r
              : "",
          y = N.ELEVATED_PERMISSIONS.has(x),
          O = N.MOD_PERMISSIONS.includes(u),
          P = S.length,
          D = (0, o.default)(
            [C.default],
            () => C.default.can(A.Permissions.MANAGE_ROLES, _),
            [_]
          ),
          b = l.useCallback(
            async e => {
              D &&
                (await p.default.open(_.id, A.GuildSettingsSections.ROLES),
                await p.default.selectRole(e));
            },
            [D, _.id]
          );
        return (0, a.jsxs)("div", {
          className: i(j.permissionItemContainer, {
            [j.elevatedPermission]: y,
          }),
          children: [
            (0, a.jsxs)("div", {
              className: i(j.permissionItemHeader),
              children: [
                (0, a.jsxs)("div", {
                  className: j.permissionTitle,
                  children: [
                    (0, a.jsx)(c.Text, {
                      variant: "text-md/medium",
                      color: "header-primary",
                      children: R,
                    }),
                    null != T &&
                      (0, a.jsxs)("div", {
                        className: j.permissionItemSubheader,
                        children: [
                          (0, a.jsx)(c.Text, {
                            variant: "text-xs/normal",
                            color: "header-muted",
                            children: T,
                          }),
                          y &&
                            (0, a.jsxs)(a.Fragment, {
                              children: [
                                (0, a.jsx)(h.default, {
                                  height: 4,
                                  width: 4,
                                  "aria-hidden": "true",
                                  color: c.tokens.colors.INTERACTIVE_MUTED.css,
                                }),
                                (0, a.jsx)(c.Tooltip, {
                                  text: M.default.Messages
                                    .GUILD_MEMBER_MOD_VIEW_ELEVATED_PERMISSION_TOOLTIP,
                                  children: e =>
                                    (0, a.jsxs)(c.Clickable, {
                                      className: j.elevatedPermissionContainer,
                                      ...e,
                                      children: [
                                        (0, a.jsx)(d.ShieldLockIcon, {
                                          width: 12,
                                          height: 12,
                                          color: c.tokens.colors.TEXT_BRAND,
                                        }),
                                        (0, a.jsx)(c.Text, {
                                          variant: "text-xs/normal",
                                          color: "text-brand",
                                          children:
                                            M.default.Messages
                                              .GUILD_MEMBER_MOD_VIEW_ELEVATED_PERMISSION,
                                        }),
                                      ],
                                    }),
                                }),
                              ],
                            }),
                          !y &&
                            O &&
                            (0, a.jsxs)(a.Fragment, {
                              children: [
                                (0, a.jsx)(h.default, {
                                  height: 4,
                                  width: 4,
                                  "aria-hidden": "true",
                                  color: c.tokens.colors.INTERACTIVE_MUTED.css,
                                }),
                                (0, a.jsx)("div", {
                                  className: j.elevatedPermissionContainer,
                                  children: (0, a.jsx)(c.Text, {
                                    variant: "text-xs/normal",
                                    color: "header-muted",
                                    children:
                                      M.default.Messages
                                        .GUILD_MEMBER_MOD_VIEW_MOD_PERMISSION,
                                  }),
                                }),
                              ],
                            }),
                        ],
                      }),
                  ],
                }),
                (0, a.jsx)(c.Text, {
                  variant: "text-sm/medium",
                  color: "text-normal",
                  children:
                    M.default.Messages.GUILD_MEMBER_MOD_VIEW_ROLE_COUNT.format({
                      roleCount: P,
                    }),
                }),
              ],
            }),
            null != L &&
              (0, a.jsx)("div", {
                className: j.permissionItemDescription,
                children: (0, a.jsx)(c.Text, {
                  variant: "text-sm/normal",
                  color: "text-secondary",
                  children: L,
                }),
              }),
            (0, a.jsx)("div", {
              className: j.permissionItemRoleContainer,
              children: S.map(e =>
                (0, a.jsx)(
                  c.Clickable,
                  {
                    className: i(j.roleTooltipItem, {
                      [j.editable]:
                        D &&
                        !(0, f.isEveryoneRoleId)(_.id, e) &&
                        !(0, N.isOwnerRole)(e, _.id),
                    }),
                    onClick: () => b(e),
                    children: (0, N.isOwnerRole)(e, _.id)
                      ? (0, a.jsx)("div", {
                          className: j.roleChiplet,
                          children: (0, a.jsx)(c.Text, {
                            variant: "text-xs/medium",
                            color: "text-normal",
                            children: M.default.Messages.GUILD_OWNER,
                          }),
                        })
                      : (0, a.jsx)(m.default, {
                          role: v[e],
                          guildId: _.id,
                          className: j.roleChiplet,
                        }),
                  },
                  e
                )
              ),
            }),
          ],
        });
      }
      function y(e, t) {
        return t.toLowerCase().includes(e.toLowerCase());
      }
      function O(e) {
        let {
            userId: t,
            guildId: n,
            location: s,
            className: r,
            onNavigate: d,
          } = e,
          f = (0, o.default)([_.default], () => _.default.getUser(t), [t]),
          h = (0, o.default)([g.default], () => g.default.getGuild(n), [n]),
          m = (0, o.default)([S.default], () => S.default.getMember(n, t), [
            n,
            t,
          ]),
          p = (0, x.useProfileThemedPanelBackground)(t, n),
          C = (0, N.useUserPermissionsAndRoles)(t, n, N.ALL_PERMISSIONS),
          O = Object.keys(C).length,
          P = l.useMemo(
            () => (null != h ? T.default.getGuildPermissionSpecMap(h) : null),
            [h]
          ),
          D = l.useMemo(
            () => (null != h ? T.default.generateGuildPermissionSpec(h) : null),
            [h]
          ),
          [b, U] = l.useState(""),
          [w, F] = l.useState(""),
          V = l.useCallback(u(F, 300), []),
          k = l.useCallback(
            e => {
              U(e), V(e);
            },
            [V]
          ),
          B = l.useCallback(() => {
            U(""), F("");
          }, []),
          G = l.useMemo(() => {
            if (null == h || null == P || null == m) return null;
            if (0 === O)
              return (0, a.jsx)("div", {
                className: i(j.permissionChiplet, j.noModPerms),
                children: (0, a.jsx)(c.Text, {
                  variant: "text-sm/normal",
                  color: "text-positive",
                  children:
                    M.default.Messages
                      .GUILD_MEMBER_MOD_VIEW_MOD_NO_MOD_PERMS_FOUND,
                }),
              });
            let e = [];
            return (
              null == D ||
                D.forEach(t => {
                  t.permissions.forEach(n => {
                    let l = n.flag,
                      s = N.ALL_PERMISSIONS.find(e => A.Permissions[e] === l);
                    if (null == s) return;
                    let i = C[s];
                    if (null != i) {
                      if (w.length > 0) {
                        var r, u, o, d, c;
                        let e =
                            null !==
                              (d =
                                null === (r = P[l.toString()]) || void 0 === r
                                  ? void 0
                                  : r.title) && void 0 !== d
                              ? d
                              : (0, E.getPermissionName)(l),
                          n =
                            null !==
                              (c =
                                null === (o = P[l.toString()]) || void 0 === o
                                  ? void 0
                                  : null === (u = o.description) || void 0 === u
                                    ? void 0
                                    : u.toString()) && void 0 !== c
                              ? c
                              : "",
                          a = t.title,
                          i = N.ELEVATED_PERMISSIONS.has(l),
                          f = N.MOD_PERMISSIONS.includes(s),
                          h = i
                            ? M.default.Messages
                                .GUILD_MEMBER_MOD_VIEW_ELEVATED_PERMISSION
                            : f
                              ? M.default.Messages
                                  .GUILD_MEMBER_MOD_VIEW_MOD_PERMISSION
                              : null,
                          m = y(w, e),
                          p = y(w, n),
                          S = y(w, a),
                          g = null != h && y(w, h);
                        if (!m && !p && !S && !g) return;
                      }
                      e.push(
                        (0, a.jsx)(
                          L,
                          {
                            permission: s,
                            roleIds: i,
                            guild: h,
                            specMap: P,
                            categoryTitle: t.title,
                          },
                          s
                        )
                      );
                    }
                  });
                }),
              e
            );
          }, [h, P, m, O, D, C, w]);
        return null == f || null == m
          ? null
          : (0, a.jsxs)("div", {
              className: i(R.container, r),
              style: { backgroundColor: p },
              children: [
                (0, a.jsx)(v.default, { guildId: n, userId: t, onNavigate: d }),
                (0, a.jsx)(c.Scroller, {
                  className: j.permissionsGroupContainer,
                  children: (0, a.jsx)(c.FormItem, {
                    title:
                      M.default.Messages
                        .GUILD_MEMBER_MOD_VIEW_MOD_PERMSSISONS_PANEL_TITLE,
                    titleClassName: j.infoTitle,
                    children: (0, a.jsxs)("div", {
                      className: j.permissionsItemContainer,
                      children: [
                        (0, a.jsx)(I.default, {
                          className: j.searchBar,
                          query: b,
                          placeholder:
                            M.default.Messages
                              .GUILD_MEMBER_MOD_VIEW_PERMISSIONS_SEARCH_PLACEHOLDER,
                          onChange: k,
                          onClear: B,
                          autoComplete: "off",
                          inputProps: {
                            autoCapitalize: "none",
                            autoCorrect: "off",
                            spellCheck: "false",
                          },
                        }),
                        G,
                      ],
                    }),
                  }),
                }),
              ],
            });
      }
    },
    914275: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ALL_PERMISSIONS: function () {
            return f;
          },
          MOD_PERMISSIONS: function () {
            return p;
          },
          ELEVATED_PERMISSIONS: function () {
            return E;
          },
          isOwnerRole: function () {
            return S;
          },
          useUserPermissionsAndRoles: function () {
            return g;
          },
        }),
        n("222007"),
        n("70102"),
        n("424973");
      var a = n("316693"),
        l = n("65597"),
        s = n("26989"),
        i = n("305961"),
        r = n("697218"),
        u = n("991170"),
        o = n("49111"),
        d = n("69741");
      let c = [o.Permissions.USE_CLYDE_AI],
        f = Object.keys(o.Permissions).filter(
          e => !c.includes(o.Permissions[e])
        ),
        h = [
          ...d.MODERATOR_PERMISSIONS,
          ...o.ElevatedPermissionsList,
          o.Permissions.ADMINISTRATOR,
          o.Permissions.KICK_MEMBERS,
          o.Permissions.BAN_MEMBERS,
          o.Permissions.MANAGE_GUILD,
          o.Permissions.MANAGE_CHANNELS,
          o.Permissions.MANAGE_ROLES,
          o.Permissions.MANAGE_MESSAGES,
          o.Permissions.MANAGE_THREADS,
          o.Permissions.MANAGE_GUILD_EXPRESSIONS,
          o.Permissions.CREATE_GUILD_EXPRESSIONS,
          o.Permissions.MANAGE_EVENTS,
          o.Permissions.CREATE_EVENTS,
          o.Permissions.MODERATE_MEMBERS,
          o.Permissions.MENTION_EVERYONE,
          o.Permissions.MANAGE_WEBHOOKS,
        ],
        m = new Set(h),
        p = Array.from(m).map(e => {
          let t = f.find(t => o.Permissions[t] === e);
          if (null == t)
            throw Error("Permission ".concat(e, " not found in Permissions"));
          return t;
        }),
        E = new Set(o.ElevatedPermissionsList);
      function S(e, t) {
        return e === t;
      }
      function g(e, t, n) {
        let d = (0, l.default)([i.default], () => i.default.getGuild(t), [t]);
        return (0, l.default)(
          [s.default, r.default, i.default],
          () => {
            let l = {},
              c = s.default.getMember(t, e),
              f = r.default.getUser(e);
            if (null == d || null == c || null == f) return l;
            let h = i.default.getRole(d.id, d.getEveryoneRoleId()),
              m = u.default.computePermissions({ user: f, context: d });
            for (let e of n) {
              let t = o.Permissions[e];
              if (a.default.has(m, t)) {
                for (let n of ((l[e] = []), c.roles)) {
                  let s = i.default.getRole(d.id, n);
                  if (null == s) continue;
                  let r = a.default.has(
                    s.permissions,
                    o.Permissions.ADMINISTRATOR
                  );
                  (r || a.default.hasAny(s.permissions, t)) && l[e].push(s.id);
                }
                if (null != h) {
                  let n = a.default.has(
                    h.permissions,
                    o.Permissions.ADMINISTRATOR
                  );
                  (n || a.default.hasAny(h.permissions, t)) && l[e].push(h.id);
                }
                d.isOwner(f) && l[e].push(f.id);
              }
            }
            return l;
          },
          [d, t, n, e]
        );
      }
    },
    986358: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return w;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("414456"),
        s = n.n(l),
        i = n("65597"),
        r = n("77078"),
        u = n("450911"),
        o = n("685665"),
        d = n("509"),
        c = n("278483"),
        f = n("700179"),
        h = n("130037"),
        m = n("271938"),
        p = n("26989"),
        E = n("305961"),
        S = n("957255"),
        g = n("824563"),
        C = n("101125"),
        _ = n("697218"),
        I = n("530346"),
        T = n("109264"),
        v = n("491401"),
        x = n("945330"),
        N = n("662255"),
        A = n("152224"),
        M = n("306160"),
        R = n("387111"),
        j = n("158998"),
        L = n("763225"),
        y = n("49111"),
        O = n("782340"),
        P = n("105871");
      function D(e) {
        let { user: t, backgroundColor: n, guildId: l, onClose: s } = e,
          u = t.id,
          o = (0, i.default)(
            [C.default, g.default, m.default],
            () =>
              u === m.default.getId()
                ? C.default.getStatus()
                : g.default.getStatus(u, l),
            [u, l]
          );
        return (0, a.jsxs)("div", {
          className: P.topRow,
          style: { backgroundColor: n },
          children: [
            (0, a.jsxs)("div", {
              className: P.memberNameContainer,
              children: [
                (0, a.jsx)("div", {
                  className: P.memberAvatar,
                  children: (0, a.jsx)(r.Avatar, {
                    src: t.getAvatarURL(l, 48),
                    "aria-label": t.username,
                    size: r.AvatarSizes.SIZE_48,
                    status: o,
                  }),
                }),
                (0, a.jsx)("div", {
                  className: P.memberName,
                  children: (0, a.jsx)(r.Text, {
                    variant: "text-lg/medium",
                    children: (0, a.jsx)(r.NameWithRole, {
                      name: R.default.getName(l, null, t),
                      color: r.tokens.colors.HEADER_PRIMARY.css,
                    }),
                  }),
                }),
                (0, a.jsx)("div", {
                  className: P.memberGlobalName,
                  children: (0, a.jsx)(r.Text, {
                    variant: "text-md/medium",
                    color: "text-normal",
                    children: j.default.getUserTag(t),
                  }),
                }),
              ],
            }),
            (0, a.jsx)("div", {
              className: P.close,
              children: (0, a.jsx)(r.Text, {
                variant: "text-md/medium",
                color: "text-normal",
                children: (0, a.jsx)(r.Clickable, {
                  className: P.closeAction,
                  onClick: s,
                  children: (0, a.jsx)(x.default, {}),
                }),
              }),
            }),
          ],
        });
      }
      function b(e) {
        let { tag: t = "div", disabled: n, children: l, onClick: i, ...u } = e;
        return (0, a.jsx)(r.Clickable, {
          ...u,
          tag: t,
          className: s(P.bottomRowAction, { [P.bottomRowActionDisabled]: n }),
          onClick: n ? void 0 : i,
          children: (0, a.jsx)("div", {
            className: P.innerBottomRowAction,
            children: l,
          }),
        });
      }
      function U(e) {
        let { backgroundColor: t, user: l, member: s, guildId: m } = e,
          p = (0, i.default)([E.default], () => E.default.getGuild(m)),
          {
            canKickUser: g,
            canBanUser: C,
            canModerateMembers: x,
          } = (0, i.useStateFromStoresObject)(
            [S.default, _.default, E.default],
            () => ({
              canKickUser:
                null != p &&
                S.default.canManageUser(y.Permissions.KICK_MEMBERS, l, p),
              canBanUser:
                null != p &&
                S.default.canManageUser(y.Permissions.BAN_MEMBERS, l, p),
              canModerateMembers:
                null != p &&
                (0, f.canToggleCommunicationDisableOnUser)(p.id, l.id, [
                  _.default,
                  E.default,
                  S.default,
                ]),
            }),
            [l, p]
          ),
          R = (0, d.isMemberCommunicationDisabled)(s),
          { analyticsLocations: j, newestAnalyticsLocation: L } = (0,
          o.default)(),
          D = (0, h.useTrackModerationAction)(m, {
            targetUserId: l.id,
            location: L,
            locations: j,
          });
        return (0, a.jsxs)("div", {
          className: P.bottomRow,
          children: [
            (0, a.jsxs)(b, {
              "aria-label": O.default.Messages.SEND_DM,
              style: { backgroundColor: t },
              onClick: () => {
                u.default.openPrivateChannel(l.id);
              },
              children: [
                (0, a.jsx)(T.default, { width: 22, height: 22 }),
                (0, a.jsx)(r.Text, {
                  variant: "text-sm/normal",
                  color: "none",
                  children: O.default.Messages.SEND_DM,
                }),
              ],
            }),
            (0, a.jsxs)(b, {
              disabled: !g,
              "aria-label": O.default.Messages.KICK,
              style: { backgroundColor: t },
              onClick: () => {
                (0, r.openModalLazy)(async () => {
                  let { default: e } = await n
                    .el("125104")
                    .then(n.bind(n, "125104"));
                  return t =>
                    (0, a.jsx)(e, { ...t, location: L, guildId: m, user: l });
                });
              },
              children: [
                (0, a.jsx)(A.default, {
                  width: 22,
                  height: 22,
                  color: r.tokens.colors.TEXT_NORMAL.css,
                }),
                (0, a.jsx)(r.Text, {
                  variant: "text-sm/normal",
                  color: "none",
                  children: O.default.Messages.KICK,
                }),
              ],
            }),
            (0, a.jsxs)(b, {
              disabled: !C,
              "aria-label": O.default.Messages.BAN,
              style: { backgroundColor: t },
              onClick: () => {
                (0, r.openModalLazy)(async () => {
                  let { default: e } = await n
                    .el("743506")
                    .then(n.bind(n, "743506"));
                  return t =>
                    (0, a.jsx)(e, { ...t, location: L, guildId: m, user: l });
                });
              },
              children: [
                (0, a.jsx)(I.default, {
                  width: 22,
                  height: 22,
                  color: r.tokens.colors.TEXT_NORMAL.css,
                }),
                (0, a.jsx)(r.Text, {
                  variant: "text-sm/normal",
                  color: "none",
                  children: O.default.Messages.BAN,
                }),
              ],
            }),
            (0, a.jsxs)(b, {
              disabled: !x,
              "aria-label": O.default.Messages.TIMEOUT_USER,
              style: { backgroundColor: t },
              onClick: () => {
                R
                  ? (0, c.openEnableCommunication)(s.guildId, s.userId, j)
                  : (0, c.openDisableCommunication)(s.guildId, s.userId, j);
              },
              children: [
                (0, a.jsx)(v.default, {
                  width: 22,
                  height: 22,
                  color: r.tokens.colors.TEXT_NORMAL.css,
                }),
                (0, a.jsx)(r.Text, {
                  variant: "text-sm/normal",
                  color: "none",
                  children: R
                    ? O.default.Messages.REMOVE
                    : O.default.Messages.TIMEOUT_USER,
                }),
              ],
            }),
            (0, a.jsxs)(b, {
              "aria-label": O.default.Messages.COPY_ID,
              style: { backgroundColor: t },
              onClick: () => {
                D(h.ModerationActionType.COPY_ID), (0, M.copy)(l.id);
              },
              disabled: !M.SUPPORTS_COPY,
              children: [
                (0, a.jsx)(N.default, {
                  width: 22,
                  height: 22,
                  color: r.tokens.colors.TEXT_NORMAL.css,
                }),
                (0, a.jsx)(r.Text, {
                  variant: "text-sm/normal",
                  color: "none",
                  children: O.default.Messages.COPY_ID,
                }),
              ],
            }),
          ],
        });
      }
      function w(e) {
        let { userId: t, guildId: n, onClose: l } = e,
          s = (0, i.default)([_.default], () => _.default.getUser(t), [t]),
          u = (0, i.default)([p.default], () => p.default.getMember(n, t), [
            n,
            t,
          ]),
          o = (0, L.useProfileThemedPanelBackground)(
            t,
            n,
            0.8,
            r.tokens.colors.BACKGROUND_SECONDARY
          );
        return null == s || null == u
          ? null
          : (0, a.jsxs)("div", {
              className: P.container,
              children: [
                (0, a.jsx)(D, {
                  user: s,
                  guildId: n,
                  onClose: l,
                  backgroundColor: o,
                }),
                (0, a.jsx)(U, {
                  user: s,
                  member: u,
                  guildId: n,
                  backgroundColor: o,
                }),
              ],
            });
      }
    },
    917397: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          UserRulesAgreementLevel: function () {
            return a;
          },
          useUserRulesAgreementLevel: function () {
            return p;
          },
          useUserAccountVerified: function () {
            return E;
          },
          useUserAccountAgeDate: function () {
            return S;
          },
          useAuditLogDate: function () {
            return g;
          },
          useGuildMemberJoinedAtDate: function () {
            return C;
          },
        }),
        n("702976"),
        n("222007");
      var a,
        l,
        s = n("884691"),
        i = n("866227"),
        r = n.n(i),
        u = n("65597"),
        o = n("26989"),
        d = n("305961"),
        c = n("697218"),
        f = n("568734"),
        h = n("299039");
      n("178406"), n("645266");
      var m = n("657944");
      function p(e, t) {
        var n, a;
        let l = (0, u.default)([c.default], () => c.default.getUser(e), [e]),
          s = (0, u.default)([o.default], () => o.default.getMember(t, e), [
            t,
            e,
          ]),
          i = (0, u.default)([d.default], () => d.default.getGuild(t), [t]),
          r = null == i ? void 0 : i.hasVerificationGate();
        return r
          ? null == l || null == s || null == i
            ? 1
            : (0, f.hasFlag)(
                  null !== (n = s.flags) && void 0 !== n ? n : 0,
                  m.GuildMemberFlags.BYPASSES_VERIFICATION
                ) ||
                (0, f.hasFlag)(
                  null !== (a = s.flags) && void 0 !== a ? a : 0,
                  m.GuildMemberFlags.COMPLETED_ONBOARDING
                )
              ? 2
              : 1
          : 0;
      }
      function E(e, t) {
        var n;
        let a = (0, u.default)([c.default], () => c.default.getUser(e), [e]),
          l = (0, u.default)([o.default], () => o.default.getMember(t, e), [
            t,
            e,
          ]);
        if (null == a || null == l) return !1;
        let s = (0, f.hasFlag)(
            null !== (n = l.flags) && void 0 !== n ? n : 0,
            m.GuildMemberFlags.BYPASSES_VERIFICATION
          ),
          i =
            (null == a ? void 0 : a.isPhoneVerified()) ||
            (null == a ? void 0 : a.isStaff()),
          r = (null == l ? void 0 : l.joinedAt) != null;
        return a.verified || i || r || s;
      }
      function S(e) {
        return s.useMemo(() => {
          let t = h.default.extractTimestamp(e);
          return r(new Date(t)).format("MMM DD, YYYY");
        }, [e]);
      }
      function g(e) {
        return s.useMemo(() => {
          let t = h.default.extractTimestamp(e);
          return r(new Date(t)).format("MM/DD/YYYY");
        }, [e]);
      }
      function C(e, t) {
        let n = (0, u.default)([o.default], () => o.default.getMember(t, e), [
            t,
            e,
          ]),
          a = null == n ? void 0 : n.joinedAt;
        return s.useMemo(
          () => (null == a ? "" : r(new Date(a)).format("MMM DD, YYYY")),
          [a]
        );
      }
      ((l = a || (a = {}))[(l.NO_GATE = 0)] = "NO_GATE"),
        (l[(l.NO_AGREEMENT = 1)] = "NO_AGREEMENT"),
        (l[(l.AGREED = 2)] = "AGREED");
    },
    809167: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        }),
        n("222007"),
        n("424973");
      var a = n("884691"),
        l = n("133797"),
        s = n("577357"),
        i = n("41391"),
        r = n("782340");
      function u(e) {
        let { includeFlairAsBenefit: t, listing: n, guildId: u } = e,
          o = 0,
          d = 0;
        for (let e of n.role_benefits.benefits)
          (0, s.isChannelBenefit)(e)
            ? (o += 1)
            : (0, s.isIntangibleBenefit)(e) && (d += 1);
        let c = n.role_id,
          f = (0, i.default)(u),
          h = f.filter(e => e.roles.includes(c)).length;
        return a.useMemo(() => {
          let e = [];
          return (
            !0 === t &&
              e.push(
                r.default.Messages.GUILD_ROLE_SUBSCRIPTION_BENEFIT_VISUAL_FLAIR
              ),
            0 !== o &&
              e.push(
                r.default.Messages.GUILD_ROLE_SUBSCRIPTION_PURCHASE_MODAL_CONFIRMATION_LITE_EXCLUSIVE_CHANNELS_SUBTITLE.format(
                  { channelCount: o }
                )
              ),
            0 !== d &&
              e.push(
                r.default.Messages.GUILD_ROLE_SUBSCRIPTION_PURCHASE_MODAL_CONFIRMATION_LITE_BENEFITS_SUBTITLE.format(
                  { benefitCount: d }
                )
              ),
            0 !== h &&
              e.push(
                r.default.Messages.GUILD_ROLE_SUBSCRIPTION_PURCHASE_MODAL_CONFIRMATION_LITE_EMOJI_SUBTITLE.format(
                  { emojiCount: h }
                )
              ),
            new l.default(e)
          );
        }, [o, d, h, t]);
      }
    },
    176687: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        }),
        n("222007");
      var a = n("884691"),
        l = n("446674"),
        s = n("775433"),
        i = n("10514"),
        r = n("521012"),
        u = n("648825"),
        o = n("136185"),
        d = n("49111");
      function c(e) {
        let t = (0, l.useStateFromStores)([r.default], () =>
            r.default.getSubscriptions()
          ),
          n = a.useMemo(() => {
            if (null == t) return {};
            let e = {};
            for (let n of Object.values(t))
              if (n.type === d.SubscriptionTypes.GUILD) {
                let t = (0, o.getRoleSubscriptionPlanId)(n);
                e[t] = n;
              }
            return e;
          }, [t]),
          { activeSubscription: c, activeSubscriptionListing: f } = (0,
          l.useStateFromStoresObject)([u.default], () => {
            var t;
            let a,
              l = null,
              s = null != e ? u.default.getSubscriptionGroupListing(e) : null,
              i =
                null !==
                  (t = null == s ? void 0 : s.subscription_listings_ids) &&
                void 0 !== t
                  ? t
                  : [];
            for (let e of i) {
              let t = u.default.getSubscriptionListing(e),
                s = null == t ? void 0 : t.subscription_plans[0].id;
              if (null == s) continue;
              let i = n[s];
              if (null != i) {
                (l = i), (a = t);
                break;
              }
            }
            return { activeSubscription: l, activeSubscriptionListing: a };
          }),
          h = null == f ? void 0 : f.subscription_plans[0],
          m = null == h ? void 0 : h.id,
          p = null == h ? void 0 : h.sku_id,
          E = (0, l.useStateFromStores)([i.default], () =>
            null != m ? i.default.get(m) : null
          ),
          S = null == f ? void 0 : f.soft_deleted;
        return (
          a.useEffect(() => {
            null == E &&
              null != p &&
              !i.default.isFetchingForSKU(p) &&
              (0, s.fetchSubscriptionPlansForSKU)(p, void 0, void 0, S);
          }, [E, p, S]),
          {
            activeSubscription: c,
            activeSubscriptionListing: f,
            activeSubscriptionPlanFromStore: E,
          }
        );
      }
    },
    492548: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useGetTrialPurchaseEligibility: function () {
            return s;
          },
        }),
        n("222007");
      var a = n("884691"),
        l = n("719726");
      let s = () => {
        let [e, t] = a.useState(!1),
          [n, s] = a.useState(null),
          i = a.useCallback(async (e, n, a) => {
            t(!0), s(null);
            try {
              let t = await (0, l.getGuildRoleSubscriptionTrialEligibility)(
                e,
                n,
                a
              );
              return t;
            } catch (e) {
              s(e);
            } finally {
              t(!1);
            }
          }, []);
        return { loading: e, error: n, getTrialPurchaseEligibility: i };
      };
    },
    595197: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
      var a = n("884691"),
        l = n("837008");
      function s(e, t) {
        let n = (0, l.useSubscriptionTrial)(t);
        return a.useMemo(() => {
          var e;
          return (
            null != n &&
            (null == n.max_num_active_trial_users ||
              n.max_num_active_trial_users >
                (null !== (e = n.num_active_trial_users) && void 0 !== e
                  ? e
                  : 0))
          );
        }, [n]);
      }
    },
    373622: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var a = n("617258"),
        l = n("769846"),
        s = n("834897"),
        i = n("677795");
      let r = (0, a.cssValueToNumber)(
          l.default.GUILD_ROLE_SUBSCRIPTION_CARD_BASIC_INFO_TIER_IMAGE_SIZE
        ),
        u = (0, a.cssValueToNumber)(
          l.default
            .GUILD_ROLE_SUBSCRIPTION_CARD_BASIC_INFO_TIER_IMAGE_SIZE_MOBILE
        );
      function o() {
        let e = (0, s.default)(i.RESPONSIVE_MOBILE_WIDTH_SIZE_QUERY);
        return e ? u : r;
      }
    },
    291444: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useSubscriptionListingsForChannel: function () {
            return c;
          },
        });
      var a = n("316693"),
        l = n("446674"),
        s = n("38654"),
        i = n("42203"),
        r = n("305961"),
        u = n("837008"),
        o = n("866595"),
        d = n("49111");
      function c(e) {
        let { guildId: t, channelId: n } = e,
          c = (0, u.useSubscriptionListingsForGuild)(t);
        return (0, l.useStateFromStoresArray)(
          [i.default, r.default, s.default],
          () => {
            let e = i.default.getChannel(n),
              l = r.default.getGuild(t),
              u = s.default.isViewingServerShop(t);
            return null != l && null != e
              ? c.filter(t =>
                  (function (e, t, n) {
                    let { isPreviewingRoles: l = !1 } =
                      arguments.length > 3 && void 0 !== arguments[3]
                        ? arguments[3]
                        : {};
                    if (!(l || e.published)) return !1;
                    let s = n.permissionOverwrites[e.role_id];
                    if ((0, o.isChannelAccessGrantedBy)(n, s)) return !0;
                    let i = r.default.getRole(t.id, t.getEveryoneRoleId()),
                      u =
                        null != i &&
                        !a.default.has(
                          i.permissions,
                          d.Permissions.VIEW_CHANNEL
                        ),
                      c = (0, o.isChannelAccessDeniedBy)(
                        n,
                        n.permissionOverwrites[t.id]
                      ),
                      f = r.default.getRole(t.id, e.role_id);
                    return (
                      u &&
                      !c &&
                      null != f &&
                      (0, o.isAllChannelsRole)(f) &&
                      !(0, o.isChannelAccessDeniedBy)(n, s)
                    );
                  })(t, l, e, { isPreviewingRoles: u })
                )
              : [];
          },
          [t, n, c]
        );
      }
    },
    847426: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        });
      var a = n("884691"),
        l = n("446674"),
        s = n("716241"),
        i = n("685665"),
        r = n("393414"),
        u = n("599110"),
        o = n("257869"),
        d = n("648825"),
        c = n("176687"),
        f = n("49111");
      function h(e) {
        var t;
        let {
            guildId: n,
            groupListingId: h,
            location: m,
            relevantSubscriptionListingIds: p,
          } = e,
          E = (0, o.useGroupListingsFetchContext)(
            "useTrackRoleSubscriptionUpsellAnalytics"
          ),
          { activeSubscription: S } = (0, c.default)(h),
          g = null != S,
          C = (0, l.useStateFromStoresArray)(
            [d.default],
            () =>
              (null != p ? p : []).filter(e => {
                var t;
                return (
                  (null === (t = d.default.getSubscriptionListing(e)) ||
                  void 0 === t
                    ? void 0
                    : t.published) === !0
                );
              }),
            [p]
          ),
          { analyticsLocations: _ } = (0, i.default)(
            null !== (t = (0, r.getLastRouteChangeSourceLocationStack)()) &&
              void 0 !== t
              ? t
              : []
          ),
          I = a.useRef(!1);
        a.useEffect(() => {
          E &&
            null != h &&
            null != C &&
            !I.current &&
            ((I.current = !0),
            u.default.track(
              f.AnalyticEvents.ROLE_SUBSCRIPTION_LISTING_UPSELL_PAGE_VIEWED,
              {
                role_subscription_group_listing_id: h,
                role_subscription_listing_ids: C,
                is_premium_member: g,
                location_stack: _,
                location: m,
                ...(0, s.collectGuildAnalyticsMetadata)(n),
              }
            ));
        }, [n, h, E, m, C, g, _]);
      }
    },
    93252: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("77078"),
        s = n("592407"),
        i = n("479756"),
        r = n("432153"),
        u = n("49111"),
        o = n("782340"),
        d = n("632189"),
        c = n("408426");
      function f(e) {
        let { guildId: t } = e;
        return (0, a.jsx)("div", {
          className: d.upsellPage,
          children: (0, a.jsxs)("div", {
            className: d.upsellContainer,
            children: [
              (0, a.jsx)("img", { src: c, alt: "" }),
              (0, a.jsxs)("div", {
                className: d.upsellContent,
                children: [
                  (0, a.jsx)(l.Heading, {
                    variant: "heading-xl/semibold",
                    children:
                      o.default.Messages
                        .GUILD_ROLE_SUBSCRIPTION_TEMPLATE_PREVIEW_CHANNEL_UPSELL_HEADER,
                  }),
                  (0, a.jsx)(l.Text, {
                    variant: "text-sm/normal",
                    className: d.bodyText,
                    children:
                      o.default.Messages
                        .GUILD_ROLE_SUBSCRIPTION_TEMPLATE_PREVIEW_CHANNEL_UPSELL_BODY,
                  }),
                  (0, a.jsx)(l.Button, {
                    size: l.Button.Sizes.MEDIUM,
                    onClick: () => {
                      (0, i.stopImpersonating)(t),
                        s.default.open(
                          t,
                          u.GuildSettingsSections.ROLE_SUBSCRIPTIONS,
                          void 0,
                          u.GuildSettingsSubsections.ROLE_SUBSCRIPTION_TIERS
                        ),
                        (0, r.announceDeleteTemplateChannels)(t);
                    },
                    className: d.button,
                    children:
                      o.default.Messages
                        .GUILD_ROLE_SUBSCRIPTION_TEMPLATE_PREVIEW_CHANNEL_UPSELL_BUTTON,
                  }),
                ],
              }),
            ],
          }),
        });
      }
    },
    548683: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("77078"),
        u = n("808388"),
        o = n("782340"),
        d = n("705542");
      function c(e) {
        let { text: t, hasScrolled: n } = e;
        return (0, a.jsxs)("div", {
          className: i(d.container, { [d.containerHide]: n }),
          children: [
            (0, a.jsx)("div", {
              className: d.notice,
              children: (0, a.jsx)(r.Text, {
                className: d.label,
                variant: "text-md/medium",
                color: "header-primary",
                children: t,
              }),
            }),
            (0, a.jsx)("div", { className: d.noticeArrow }),
          ],
        });
      }
      function f(e) {
        let [t, n] = l.useState(),
          [s, i] = l.useState(),
          [r, d] = l.useState(!1),
          [f, h] = l.useState(!1),
          { enabled: m } = (0, u.useRoleSubscriptionMaxTiersExperiment)(e);
        l.useEffect(() => {
          m && null != t && null != s ? d(t < s) : d(!1);
        }, [m, t, s]);
        let p = l.useMemo(
          () =>
            r
              ? (0, a.jsx)(c, {
                  text: o.default.Messages
                    .GUILD_ROLE_SUBSCRIPTION_LISTINGS_SCROLLABLE_NOTICE,
                  hasScrolled: f,
                })
              : null,
          [r, f]
        );
        return {
          horizontalScrollNotice: p,
          handleScroll: () => h(!0),
          handleSetScrollerRef: e => {
            var t;
            return i(
              null == e
                ? void 0
                : null === (t = e.getScrollerState()) || void 0 === t
                  ? void 0
                  : t.scrollWidth
            );
          },
          handleSetContainerRef: e => n(null == e ? void 0 : e.clientWidth),
        };
      }
    },
    900076: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("414456"),
        s = n.n(l),
        i = n("394846"),
        r = n("77078"),
        u = n("548683"),
        o = n("616264");
      function d(e) {
        let { guildId: t, children: n, className: l } = e,
          {
            horizontalScrollNotice: d,
            handleScroll: c,
            handleSetScrollerRef: f,
            handleSetContainerRef: h,
          } = (0, u.default)(t),
          m = (0, a.jsx)("div", {
            className: o.tierPreviewsContainer,
            children: (0, a.jsx)("div", {
              className: s(o.tierPreviews, l),
              children: n,
            }),
          });
        return (
          !i.isMobile &&
            (m = (0, a.jsxs)(a.Fragment, {
              children: [
                d,
                (0, a.jsx)(r.AdvancedScroller, {
                  className: o.scroller,
                  orientation: "horizontal",
                  ref: f,
                  onScroll: c,
                  children: m,
                }),
              ],
            })),
          (0, a.jsx)("div", {
            className: o.carouselMaxWidth,
            ref: h,
            children: m,
          })
        );
      }
    },
    226965: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("414456"),
        s = n.n(l),
        i = n("77078"),
        r = n("484456"),
        u = n("559979"),
        o = n("70695"),
        d = n("191169");
      function c(e) {
        let { benefit: t, guildId: n } = e,
          l = (0, o.default)(n, t.ref_id),
          c = (0, a.jsx)(r.default, {
            guildId: n,
            emojiId: t.emoji_id,
            emojiName: t.emoji_name,
          }),
          f =
            null != l
              ? (0, a.jsx)(i.Clickable, {
                  className: d.channelLink,
                  onClick: l.navigateToChannel,
                  "aria-label": l.ariaLabel,
                  role: "link",
                  children: (0, a.jsx)(i.Text, {
                    variant: "text-md/medium",
                    color: "header-primary",
                    className: s(d.name, d.linkedName),
                    children: (0, u.default)(t),
                  }),
                })
              : (0, a.jsx)(i.Text, {
                  variant: "text-md/medium",
                  color: "header-primary",
                  className: d.name,
                  children: (0, u.default)(t),
                });
        return (0, a.jsxs)("div", {
          className: d.container,
          children: [
            (0, a.jsxs)("div", {
              className: d.infoContainer,
              children: [
                f,
                (0, a.jsx)(i.Text, {
                  color: "interactive-normal",
                  variant: "text-sm/normal",
                  children: t.description,
                }),
              ],
            }),
            (0, a.jsx)("div", { className: d.emojiContainer, children: c }),
          ],
        });
      }
    },
    108314: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          GuildRoleSubscriptionBenefits: function () {
            return F;
          },
          default: function () {
            return k;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("446674"),
        u = n("77078"),
        o = n("834897"),
        d = n("38654"),
        c = n("160299"),
        f = n("191814"),
        h = n("476765"),
        m = n("837899"),
        p = n("425190"),
        E = n("68238"),
        S = n("315102"),
        g = n("577357"),
        C = n("837008"),
        _ = n("167109"),
        I = n("176687"),
        T = n("595197"),
        v = n("41391"),
        x = n("549590"),
        N = n("833531"),
        A = n("270295"),
        M = n("246506"),
        R = n("226965"),
        j = n("944256"),
        L = n("97116"),
        y = n("320946"),
        O = n("677795"),
        P = n("49111"),
        D = n("782340"),
        b = n("788036");
      let U = e => {
          let { benefits: t, header: n, guildId: s } = e,
            [i, r] = l.useState(!1),
            o = i ? t : t.slice(0, 5),
            d = t.length > 5,
            c = t.length - 5,
            m =
              D.default.Messages.GUILD_ROLE_SUBSCRIPTION_TIER_SHOW_MORE_DESCRIPTION_WITH_ITEMS.format(
                { numTruncated: c }
              ),
            p = (0, h.useUID)();
          return 0 === t.length
            ? null
            : (0, a.jsxs)("div", {
                className: b.benefitsSection,
                children: [
                  (0, a.jsx)(u.Heading, {
                    variant: "text-xs/bold",
                    color: "header-secondary",
                    className: b.sectionHeader,
                    id: p,
                    children: n,
                  }),
                  (0, a.jsx)(f.default, { size: 12 }),
                  (0, a.jsx)("ul", {
                    className: b.benefitsList,
                    "aria-labelledby": p,
                    children: o.map((e, t) =>
                      (0, a.jsx)(
                        "li",
                        {
                          children: (0, a.jsx)(
                            R.default,
                            { guildId: s, benefit: e },
                            (0, g.getBenefitKey)(e)
                          ),
                        },
                        t
                      )
                    ),
                  }),
                  d &&
                    (0, a.jsx)(V, {
                      isViewAll: i,
                      onToggle: () => r(e => !e),
                      showMoreText: m,
                    }),
                ],
              });
        },
        w = e => {
          let { guildId: t, listingId: n } = e,
            l = (0, v.default)(t),
            [s] = _.useTierEmojiIds(n, t),
            i = l.filter(e => s.has(e.id));
          return 0 === i.length
            ? null
            : (0, a.jsxs)("div", {
                className: b.benefitsSection,
                children: [
                  (0, a.jsx)(u.Heading, {
                    variant: "text-xs/bold",
                    color: "header-secondary",
                    className: b.sectionHeader,
                    children:
                      D.default.Messages.GUILD_ROLE_SUBSCRIPTION_TIER_EMOJI_SECTION_TITLE.format(
                        { count: i.length }
                      ),
                  }),
                  (0, a.jsx)(f.default, { size: 12 }),
                  (0, a.jsx)("div", {
                    className: b.emojiList,
                    children: i.map((e, t) => {
                      var n;
                      return (0, a.jsx)(
                        u.Tooltip,
                        {
                          text: e.name,
                          "aria-label": !1,
                          children: t => {
                            var n;
                            return (0, a.jsx)("img", {
                              ...t,
                              className: b.emojiListEmoji,
                              src:
                                ((n = e),
                                S.default.getEmojiURL({
                                  id: n.id,
                                  animated: n.animated,
                                  size: 24,
                                })),
                              width: 24,
                              height: 24,
                              alt: e.name,
                            });
                          },
                        },
                        null !== (n = e.id) && void 0 !== n ? n : t
                      );
                    }),
                  }),
                ],
              });
        },
        F = e => {
          let { listingId: t, guildId: n, className: l } = e,
            s = (0, x.default)(n, t),
            [r] = _.useChannelBenefits(t),
            o = (0, N.default)(r),
            [d] = _.useIntangibleBenefits(t),
            c = _.useRole(t, n),
            [h] = _.useTierEmojiIds(t, n);
          return null == s && 0 === o.length && 0 === d.length && 0 === h.size
            ? null
            : (0, a.jsxs)("div", {
                className: i(b.subscriptionPerks, l),
                children: [
                  null != s &&
                    (0, a.jsxs)(u.HeadingLevel, {
                      component: (0, a.jsx)(u.Heading, {
                        variant: "text-xs/bold",
                        color: "header-secondary",
                        className: b.sectionHeader,
                        children:
                          D.default.Messages
                            .GUILD_ROLE_SUBSCRIPTION_TIER_REVIEW_MEMBER_PREVIEW,
                      }),
                      children: [
                        (0, a.jsx)(f.default, { size: 8 }),
                        (0, a.jsx)(M.default, {
                          role: c,
                          guildId: n,
                          className: b.roleMessagePreview,
                        }),
                      ],
                    }),
                  (0, a.jsx)(U, {
                    header:
                      D.default.Messages
                        .GUILD_ROLE_SUBSCRIPTION_TIER_EXCLUSIVE_CHANNELS_SECTION_TITLE,
                    benefits: o,
                    guildId: n,
                  }),
                  (0, a.jsx)(U, {
                    header:
                      D.default.Messages
                        .GUILD_ROLE_SUBSCRIPTION_TIER_ADDITIONAL_BENEFITS_SECTION_TITLE,
                    benefits: d,
                    guildId: n,
                  }),
                  (0, a.jsx)(w, { guildId: n, listingId: t }),
                ],
              });
        },
        V = e => {
          let t,
            { onToggle: n, isViewAll: l, showMoreText: s } = e;
          return (
            (t = l
              ? (0, a.jsxs)(a.Fragment, {
                  children: [
                    D.default.Messages
                      .GUILD_ROLE_SUBSCRIPTION_TIER_SHOW_LESS_DESCRIPTION,
                    (0, a.jsx)(p.default, {
                      className: b.toggleTruncationButtonIcon,
                    }),
                  ],
                })
              : (0, a.jsxs)(a.Fragment, {
                  children: [
                    s,
                    (0, a.jsx)(m.default, {
                      className: b.toggleTruncationButtonIcon,
                    }),
                  ],
                })),
            (0, a.jsx)(u.Button, {
              look: u.Button.Looks.BLANK,
              size: u.Button.Sizes.NONE,
              className: b.toggleTruncationButton,
              innerClassName: b.toggleTruncationButtonInner,
              onClick: n,
              children: t,
            })
          );
        };
      var k = e => {
        var t;
        let {
            listingId: n,
            guildId: s,
            groupListingId: h,
            analyticsLocation: m,
          } = e,
          p = (0, C.useSubscriptionListing)(n),
          {
            openModal: S,
            canOpenModal: v,
            cannotOpenReason: x,
            isCheckingTrialEligibility: N,
          } = (0, y.default)(p, s, h, m),
          M = (0, r.useStateFromStores)([c.default], () => c.default.isSyncing),
          { activeSubscription: R, activeSubscriptionListing: U } = (0,
          I.default)(h),
          w = (null == U ? void 0 : U.id) === n,
          k =
            (null == R ? void 0 : R.status) ===
            P.SubscriptionStatusTypes.CANCELED,
          [B, G] = l.useState(!1),
          [H, W] = l.useState(!1),
          Y = l.useCallback(e => {
            let t = !1;
            null != e && (t = e.scrollHeight - e.clientHeight > 1), W(t);
          }, []),
          [z] = _.useName(n),
          [K] = _.useDescription(n),
          [Z] = _.useTrialInterval(n),
          [Q] = _.useTrialLimit(n),
          X = (0, T.default)(s, n),
          q = null != Z && null == R && X,
          J = (0, o.default)(O.RESPONSIVE_MOBILE_WIDTH_SIZE_QUERY),
          [$, ee] = l.useState(!1),
          et = $ || !J,
          en = (0, r.useStateFromStores)([d.default], () =>
            d.default.isViewingServerShop(s)
          ),
          ea = (null == p ? void 0 : p.published) === !0,
          el = (null == p ? void 0 : p.soft_deleted) === !0,
          es =
            D.default.Messages
              .GUILD_ROLE_SUBSCRIPTION_TIER_SHOW_MORE_DESCRIPTION;
        return (ea || en) && !el
          ? (0, a.jsxs)("article", {
              className: b.container,
              "aria-label": z,
              children: [
                q &&
                  (0, a.jsxs)("div", {
                    className: i(b.tierTrialIndicator, b.tierTopIndicator),
                    children: [
                      D.default.Messages.GUILD_ROLE_SUBSCRIPTION_TRIAL_PERIOD.format(
                        {
                          trialPeriodDuration: (0,
                          g.formatPlanIntervalDuration)({
                            interval: Z.interval,
                            interval_count: Z.interval_count,
                          }),
                        }
                      ),
                      (0, a.jsx)(u.Tooltip, {
                        clickableOnMobile: !0,
                        text: D.default.Messages.GUILD_ROLE_SUBSCRIPTION_TRIAL_DISCLAIMER.format(
                          { activeTrialUserLimit: null != Q ? Q : 0 }
                        ),
                        children: e =>
                          (0, a.jsx)(E.default, {
                            className: b.tierTrialIndicatorIcon,
                            ...e,
                          }),
                      }),
                    ],
                  }),
                (0, a.jsxs)("div", {
                  className: q ? void 0 : b.cardContainerWithoutTopIndicator,
                  children: [
                    (0, a.jsxs)("div", {
                      className: b.tierInfoContainer,
                      children: [
                        J
                          ? (0, a.jsx)(
                              L.GuildRoleSubscriptionCollapsibleCardBasicInfo,
                              {
                                listingId: n,
                                isListingPublished: ea,
                                expanded: et,
                                onToggleExpanded: () => ee(e => !e),
                              }
                            )
                          : (0, a.jsx)(j.GuildRoleSubscriptionCardBasicInfo, {
                              listingId: n,
                              isListingPublished: ea,
                            }),
                        et &&
                          (0, a.jsxs)(a.Fragment, {
                            children: [
                              J && (0, a.jsx)("div", { className: b.divider }),
                              w
                                ? (0, a.jsx)(u.Button, {
                                    fullWidth: !0,
                                    look: u.Button.Looks.OUTLINED,
                                    color: u.Button.Colors.PRIMARY,
                                    disabled: !0,
                                    children: k
                                      ? D.default.Messages
                                          .GUILD_ROLE_SUBSCRIPTION_TIER_REVIEW_CANCELED_LABEL
                                      : D.default.Messages
                                          .GUILD_ROLE_SUBSCRIPTION_TIER_REVIEW_SUBSCRIBED_LABEL,
                                  })
                                : (0, a.jsx)(u.Tooltip, {
                                    text: v ? null : x,
                                    "aria-label":
                                      null !== (t = v && x) &&
                                      void 0 !== t &&
                                      t,
                                    children: e =>
                                      (0, a.jsx)(A.default, {
                                        ...e,
                                        fullWidth: !0,
                                        disabled: !v || M,
                                        submitting: N,
                                        onClick: S,
                                        onlyShineOnHover: !0,
                                        children:
                                          D.default.Messages
                                            .GUILD_ROLE_SUBSCRIPTION_TIER_REVIEW_SUBSCRIBE_LABEL,
                                      }),
                                  }),
                              (0, a.jsx)(f.default, { size: 16 }),
                              (0, a.jsx)(u.Text, {
                                variant: "text-sm/normal",
                                color: "text-normal",
                                className: i(
                                  (!H || !B) && b.tierDescriptionTruncate
                                ),
                                children: (0, a.jsx)("div", {
                                  ref: Y,
                                  children: K,
                                }),
                              }),
                              H &&
                                (0, a.jsx)(V, {
                                  isViewAll: B,
                                  onToggle: () => G(e => !e),
                                  showMoreText: es,
                                }),
                            ],
                          }),
                      ],
                    }),
                    et &&
                      (0, a.jsx)(u.HeadingLevel, {
                        children: (0, a.jsx)(F, { listingId: n, guildId: s }),
                      }),
                  ],
                }),
              ],
            })
          : null;
      };
    },
    944256: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          GuildRoleSubscriptionCardTierName: function () {
            return f;
          },
          GuildRoleSubscriptionCardTierImage: function () {
            return h;
          },
          GuildRoleSubscriptionCardBasicInfo: function () {
            return m;
          },
        }),
        n("222007");
      var a = n("37983");
      n("884691");
      var l = n("77078"),
        s = n("944371"),
        i = n("153160"),
        r = n("577357"),
        u = n("167109"),
        o = n("373622"),
        d = n("782340"),
        c = n("753064");
      let f = e => {
        let { listingName: t } = e;
        return (0, a.jsx)(l.Heading, {
          variant: "text-md/normal",
          color: "interactive-active",
          className: c.tierName,
          children: t,
        });
      };
      function h(e) {
        let { image: t } = e;
        return null == t
          ? null
          : (0, a.jsx)("img", { src: t, alt: "", className: c.tierImage });
      }
      let m = e => {
        let { listingId: t, isListingPublished: n } = e,
          m = (0, o.default)(),
          [p] = u.useName(t),
          [E] = u.useImage(t, m),
          [S] = u.useSubscriptionPlan(t);
        return (0, a.jsxs)(a.Fragment, {
          children: [
            (0, a.jsx)(f, { listingName: p }),
            (0, a.jsx)(h, { image: E }),
            !n &&
              (0, a.jsx)("div", {
                className: c.draftBadgeContainer,
                children: (0, a.jsx)(s.MonetizationListingDraftBadge, {}),
              }),
            (0, a.jsx)(l.Text, {
              variant: "heading-xl/semibold",
              className: c.tierPrice,
              tag: "div",
              children: (0, i.formatPrice)(S.price, S.currency),
            }),
            (0, a.jsx)(l.Text, {
              variant: "text-xs/normal",
              color: "interactive-normal",
              className: c.tierPeriod,
              children:
                d.default.Messages.GUILD_ROLE_SUBSCRIPTION_AMOUNT_PER_PERIOD.format(
                  {
                    period: (0, r.formatPlanInterval)({
                      interval: S.interval,
                      interval_count: S.interval_count,
                    }),
                  }
                ),
            }),
          ],
        });
      };
    },
    97116: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          GuildRoleSubscriptionCollapsibleCardBasicInfo: function () {
            return p;
          },
        }),
        n("222007");
      var a = n("37983");
      n("884691");
      var l = n("77078"),
        s = n("944371"),
        i = n("837899"),
        r = n("425190"),
        u = n("153160"),
        o = n("577357"),
        d = n("167109"),
        c = n("373622"),
        f = n("944256"),
        h = n("782340"),
        m = n("176256");
      let p = e => {
        let {
            listingId: t,
            isListingPublished: n,
            expanded: p,
            onToggleExpanded: E,
          } = e,
          S = (0, c.default)(),
          [g] = d.useName(t),
          [C] = d.useImage(t, S),
          [_] = d.useSubscriptionPlan(t);
        return (0, a.jsxs)("div", {
          className: m.container,
          children: [
            (0, a.jsx)(f.GuildRoleSubscriptionCardTierImage, { image: C }),
            (0, a.jsxs)("div", {
              className: m.tierTextInfoContainer,
              children: [
                (0, a.jsx)(f.GuildRoleSubscriptionCardTierName, {
                  listingName: g,
                }),
                (0, a.jsxs)("div", {
                  className: m.tierPriceContainer,
                  children: [
                    !n && (0, a.jsx)(s.MonetizationListingDraftBadge, {}),
                    (0, a.jsxs)(l.Text, {
                      variant: "text-xs/normal",
                      className: m.tierPrice,
                      children: [
                        (0, u.formatPrice)(_.price, _.currency),
                        " ",
                        h.default.Messages.GUILD_ROLE_SUBSCRIPTION_AMOUNT_PER_PERIOD.format(
                          {
                            period: (0, o.formatPlanInterval)({
                              interval: _.interval,
                              interval_count: _.interval_count,
                            }),
                          }
                        ),
                      ],
                    }),
                  ],
                }),
              ],
            }),
            (0, a.jsx)(l.Clickable, {
              onClick: E,
              children: p
                ? (0, a.jsx)(r.default, { className: m.toggleButton })
                : (0, a.jsx)(i.default, { className: m.toggleButton }),
            }),
          ],
        });
      };
    },
    18544: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          PurchaseConfirmationLite: function () {
            return c;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("446674"),
        s = n("77078"),
        i = n("724038"),
        r = n("305961"),
        u = n("809167"),
        o = n("782340"),
        d = n("279793");
      let c = e => {
        let { onClose: t, listing: n, guildId: c } = e,
          f = (0, l.useStateFromStores)(
            [r.default],
            () => r.default.getGuild(c),
            [c]
          ),
          h = (0, u.default)({ listing: n, guildId: c });
        return (0, a.jsxs)("div", {
          className: d.confirmationContainer,
          children: [
            (0, a.jsx)(s.Heading, {
              className: d.confirmationHeader,
              variant: "heading-lg/extrabold",
              children:
                o.default.Messages.GUILD_ROLE_SUBSCRIPTION_PURCHASE_MODAL_CONFIRMATION_LITE_TITLE.format(
                  {
                    serverName: null == f ? void 0 : f.toString(),
                    tierName: n.name,
                  }
                ),
            }),
            !h.isEmpty() &&
              (0, a.jsx)(s.Text, {
                className: d.confirmationSubtitle,
                variant: "text-sm/normal",
                color: "header-secondary",
                children:
                  o.default.Messages.GUILD_ROLE_SUBSCRIPTION_PURCHASE_MODAL_CONFIRMATION_LITE_SUBTITLE.format(
                    { benefits: h.asString() }
                  ),
              }),
            (0, a.jsx)(s.Button, {
              className: d.openDiscordButton,
              onClick: () => (0, i.default)("role_sub_mweb_success_modal"),
              children:
                o.default.Messages
                  .GUILD_ROLE_SUBSCRIPTION_PURCHASE_MODAL_CONFIRMATION_LITE_OPEN_DISCORD_BUTTON,
            }),
            (0, a.jsx)(s.Button, {
              className: d.doneButton,
              look: s.Button.Looks.BLANK,
              onClick: () => t(!0),
              children:
                o.default.Messages
                  .GUILD_ROLE_SUBSCRIPTION_PURCHASE_MODAL_CONFIRMATION_LITE_DONE_BUTTON,
            }),
          ],
        });
      };
    },
    258501: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          Header: function () {
            return T;
          },
          PurchaseConfirmation: function () {
            return v;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("414456"),
        s = n.n(l),
        i = n("446674"),
        r = n("77078"),
        u = n("430568"),
        o = n("834897"),
        d = n("85336"),
        c = n("305961"),
        f = n("945330"),
        h = n("271560"),
        m = n("577357"),
        p = n("837008"),
        E = n("41391"),
        S = n("833531"),
        g = n("393381"),
        C = n("677795"),
        _ = n("782340"),
        I = n("935035");
      let T = e => {
          let { onClose: t, listing: n, step: l, guildId: i } = e,
            u = (0, p.useSubscriptionsSettings)(i),
            c = (0, o.default)(C.RESPONSIVE_MOBILE_HEIGHT_SMALL_QUERY),
            m = (() => {
              var e;
              if (c) return null;
              let t =
                (null == u
                  ? void 0
                  : null === (e = u.cover_image_asset) || void 0 === e
                    ? void 0
                    : e.application_id) != null
                  ? (0, h.getAssetURL)(
                      u.cover_image_asset.application_id,
                      u.cover_image_asset,
                      440
                    )
                  : void 0;
              return null == t && l !== d.Step.CONFIRM
                ? null
                : null == t
                  ? (0, a.jsx)("div", { className: I.headerImageEmpty })
                  : (0, a.jsx)("img", {
                      src: t,
                      alt: "",
                      className: I.headerImage,
                    });
            })();
          return (0, a.jsxs)("div", {
            className: s(I.headerContainer, {
              [I.headerEmpty]: c || null == m,
            }),
            children: [
              m,
              (() => {
                if (l !== d.Step.CONFIRM) return null;
                let e =
                  null == n.image_asset
                    ? void 0
                    : (0, h.getAssetURL)(n.application_id, n.image_asset, 80);
                return (0, a.jsx)("div", {
                  className: I.tierImageContainer,
                  children: (0, a.jsx)("img", {
                    src: e,
                    alt: "",
                    className: I.tierImage,
                  }),
                });
              })(),
              (0, a.jsx)(r.Clickable, {
                className: I.closeContainer,
                onClick: () => t(!1),
                "aria-label": _.default.Messages.CLOSE,
                children: (0, a.jsx)(f.default, { className: I.closeIcon }),
              }),
            ],
          });
        },
        v = e => {
          let { onClose: t, listing: n, guildId: l } = e,
            s = (0, i.useStateFromStores)(
              [c.default],
              () => c.default.getGuild(l),
              [l]
            ),
            o = (0, E.default)(l),
            d = o.filter(e => e.roles.includes(n.role_id)),
            f = n.role_benefits.benefits
              .filter(m.isChannelBenefit)
              .slice(0, null === d.length ? 4 : 3),
            h = (0, S.default)(f).slice(0, null === d.length ? 4 : 3);
          return (0, a.jsxs)("div", {
            className: I.confirmationContainer,
            children: [
              (0, a.jsx)(r.Heading, {
                className: I.confirmationHeader,
                variant: "heading-xl/semibold",
                color: "header-secondary",
                children:
                  _.default.Messages.GUILD_ROLE_SUBSCRIPTION_PURCHASE_MODAL_CONFIRMATION_TITLE.format(
                    { serverName: null == s ? void 0 : s.toString() }
                  ),
              }),
              (0, a.jsx)(r.Text, {
                className: I.confirmationSubtitle,
                variant: "text-md/normal",
                color: "header-secondary",
                children:
                  _.default.Messages.GUILD_ROLE_SUBSCRIPTION_PURCHASE_MODAL_CONFIRMATION_SUBTITLE.format(
                    { tier: n.name }
                  ),
              }),
              h.length > 0 &&
                (0, a.jsxs)(a.Fragment, {
                  children: [
                    (0, a.jsx)(r.Text, {
                      variant: "text-xs/normal",
                      color: "header-secondary",
                      className: I.confirmationSectionLabel,
                      children:
                        _.default.Messages
                          .GUILD_ROLE_SUBSCRIPTION_PURCHASE_MODAL_CONFIRMATION_CHANNEL_PREVIEW,
                    }),
                    (0, a.jsx)("div", {
                      className: I.confirmationBenefits,
                      children: h.map(e =>
                        (0, a.jsx)(
                          g.default,
                          { benefit: e, guildId: l, onClick: () => t(!0) },
                          (0, m.getBenefitKey)(e)
                        )
                      ),
                    }),
                  ],
                }),
              (() => {
                var e;
                if (0 === d.length) return null;
                let t = d[0];
                return (0, a.jsxs)(a.Fragment, {
                  children: [
                    (0, a.jsx)(r.Text, {
                      variant: "text-xs/medium",
                      color: "header-secondary",
                      className: I.confirmationSectionLabel,
                      children:
                        _.default.Messages
                          .GUILD_ROLE_SUBSCRIPTION_PURCHASE_MODAL_CONFIRMATION_PREMIUM_EMOJI_PREVIEW_TITLE,
                    }),
                    (0, a.jsxs)("div", {
                      className: I.emojiBenefitsRow,
                      children: [
                        (0, a.jsx)(u.default, {
                          emojiId: t.id,
                          emojiName: t.name,
                          animated:
                            null !== (e = t.animated) && void 0 !== e && e,
                          className: I.emojiImage,
                        }),
                        (0, a.jsxs)("div", {
                          children: [
                            (0, a.jsx)(r.Text, {
                              variant: "text-md/medium",
                              color: "header-primary",
                              className: I.emojiName,
                              children:
                                _.default.Messages
                                  .GUILD_ROLE_SUBSCRIPTION_PURCHASE_MODAL_CONFIRMATION_PREMIUM_EMOJI_BENEFIT_TEXT,
                            }),
                            (0, a.jsx)(r.Text, {
                              color: "interactive-normal",
                              variant: "text-sm/normal",
                              children:
                                _.default.Messages.GUILD_ROLE_SUBSCRIPTION_PURCHASE_MODAL_CONFIRMATION_PREMIUM_EMOJI_BENEFIT_DESCRIPTION.format(
                                  { count: d.length }
                                ),
                            }),
                          ],
                        }),
                      ],
                    }),
                  ],
                });
              })(),
              (0, a.jsx)(r.Button, {
                className: I.confirmationButton,
                onClick: () => t(!0),
                children:
                  _.default.Messages
                    .GUILD_ROLE_SUBSCRIPTION_PURCHASE_MODAL_CONFIRMATION_DONE_BUTTON,
              }),
            ],
          });
        };
    },
    393381: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("77078"),
        s = n("461380"),
        i = n("484456"),
        r = n("559979"),
        u = n("70695"),
        o = n("348091");
      function d(e) {
        let { benefit: t, guildId: n, onClick: d } = e,
          c = (0, u.default)(n, t.ref_id),
          f = (0, a.jsx)(i.default, {
            guildId: n,
            emojiId: t.emoji_id,
            emojiName: t.emoji_name,
          });
        return (0, a.jsxs)(l.Clickable, {
          className: o.container,
          onClick: () => {
            null == c || c.navigateToChannel(), d();
          },
          "aria-label": null == c ? void 0 : c.ariaLabel,
          role: "link",
          children: [
            (0, a.jsx)("div", { className: o.emojiContainer, children: f }),
            (0, a.jsxs)("div", {
              className: o.infoContainer,
              children: [
                (0, a.jsx)(l.Text, {
                  variant: "text-md/medium",
                  color: "header-primary",
                  className: o.name,
                  children: (0, r.default)(t),
                }),
                (0, a.jsx)(l.Text, {
                  color: "interactive-normal",
                  variant: "text-sm/normal",
                  children: t.description,
                }),
              ],
            }),
            (0, a.jsx)(s.default, {
              direction: s.default.Directions.RIGHT,
              className: o.caret,
            }),
          ],
        });
      }
    },
    320946: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return O;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("627445"),
        i = n.n(s),
        r = n("866227"),
        u = n.n(r),
        o = n("446674"),
        d = n("913144"),
        c = n("775433"),
        f = n("834897"),
        h = n("685665"),
        m = n("233322"),
        p = n("567054"),
        E = n("982527"),
        S = n("157186"),
        g = n("267567"),
        C = n("666391"),
        _ = n("10514"),
        I = n("701909"),
        T = n("577357"),
        v = n("837008"),
        x = n("136185"),
        N = n("176687"),
        A = n("492548"),
        M = n("18544"),
        R = n("258501"),
        j = n("677795"),
        L = n("49111"),
        y = n("782340"),
        O = (e, t, n, s) => {
          let r;
          let O = (0, o.useStateFromStores)([g.default], () =>
              g.default.isLurking(t)
            ),
            P = (0, S.useShowMemberVerificationGate)(t),
            D = (0, o.useStateFromStores)([E.default], () =>
              null != t ? E.default.getRequest(t) : null
            ),
            b =
              (null == D ? void 0 : D.applicationStatus) ===
              p.GuildJoinRequestApplicationStatuses.SUBMITTED,
            U = null == e ? void 0 : e.subscription_plans[0],
            w = null == U ? void 0 : U.id,
            F = (null == e ? void 0 : e.published) === !0,
            V = null == U ? void 0 : U.sku_id,
            k = (0, o.useStateFromStores)([_.default], () =>
              null != w ? _.default.get(w) : null
            ),
            { activeSubscription: B, activeSubscriptionPlanFromStore: G } = (0,
            N.default)(n),
            H = null == B || null != G,
            W = (0, v.useSubscriptionListingsForGroup)(n, {
              includeSoftDeleted: !0,
            }),
            Y = W.map(e => e.subscription_plans[0].id),
            z = (0, x.getRoleSubscriptionMutationPlanId)(B),
            K = null != z,
            Z = (null == B ? void 0 : B.trialId) != null,
            { loading: Q, getTrialPurchaseEligibility: X } = (0,
            A.useGetTrialPurchaseEligibility)(),
            q = (0, v.useSubscriptionTrial)(null == e ? void 0 : e.id),
            { analyticsLocations: J } = (0, h.default)(),
            $ =
              (null == B ? void 0 : B.paymentGateway) ===
              L.PaymentGateways.APPLE_PARTNER;
          b
            ? (r =
                y.default.Messages
                  .GUILD_ROLE_SUBSCRIPTIONS_REQUIRE_APPROVED_MEMBER)
            : O && !P
              ? (r =
                  y.default.Messages
                    .GUILD_ROLE_SUBSCRIPTIONS_REQUIRE_APPROVED_MEMBER)
              : z === w
                ? (r =
                    y.default.Messages.GUILD_ROLE_SUBSCRIPTION_HAS_PENDING_MUTATION_TO_CURRENT_LISTING.format(
                      {
                        changeDate:
                          null != B
                            ? u(B.currentPeriodEnd).format("MMM DD, YYYY")
                            : "",
                      }
                    ))
                : K
                  ? (r =
                      y.default.Messages
                        .GUILD_ROLE_SUBSCRIPTION_HAS_PENDING_MUTATION)
                  : Z
                    ? (r =
                        y.default.Messages
                          .GUILD_ROLE_SUBSCRIPTION_CHANGE_TIER_DISABLED_IN_TRIAL)
                    : $ &&
                      (r =
                        y.default.Messages
                          .GUILD_ROLE_SUBSCRIPTION_CHANGE_TIER_DISABLED_IF_IAP);
          let ee = (0, f.default)(j.RESPONSIVE_MOBILE_WIDTH_SIZE_QUERY);
          l.useEffect(() => {
            F &&
              null != V &&
              d.default.wait(() => {
                (0, c.fetchSubscriptionPlansForSKU)(V);
              });
          }, [F, V]);
          let et = l.useCallback(async () => {
              let n, l;
              if (
                (i(null != e, "No subscription listing"),
                i(null != U, "No subscription plan"),
                i(F, "Cannot purchase this unpublished plan"),
                (null == q ? void 0 : q.active_trial) != null)
              ) {
                let a = await X(t, e.id, q.active_trial.id);
                if ((null == a ? void 0 : a.is_eligible) === !0) {
                  var r;
                  n =
                    null == q
                      ? void 0
                      : null === (r = q.active_trial) || void 0 === r
                        ? void 0
                        : r.id;
                } else
                  l =
                    y.default.Messages
                      .GUILD_ROLE_SUBSCRIPTION_INELIGIBLE_TRIAL_DISCLAIMER;
              }
              (0, C.default)({
                activeSubscription: B,
                analyticsSubscriptionType: L.SubscriptionTypes.GUILD,
                trialId: n,
                trialFooterMessageOverride:
                  (null == q ? void 0 : q.active_trial) != null
                    ? y.default.Messages.GUILD_ROLE_SUBSCRIPTION_TRIAL_RENEWAL_FOOTER_V2.format(
                        {
                          buttonText:
                            y.default.Messages
                              .GUILD_ROLE_SUBSCRIPTION_TIER_SUBSCRIBE,
                          interval: (0, T.formatPlanIntervalDuration)(U),
                          days: 1,
                          contactLink: L.MarketingURLs.CONTACT,
                          cancelSubscriptionArticle: I.default.getArticleURL(
                            L.HelpdeskArticles.ROLE_SUBSCRIPTION_CANCEL
                          ),
                          helpdeskArticle: I.default.getArticleURL(
                            L.HelpdeskArticles.ROLE_SUBSCRIPTION_TRIAL
                          ),
                          paidServiceTermsArticle: I.default.getArticleURL(
                            L.HelpdeskArticles.PAID_TERMS
                          ),
                          tierName: U.name,
                        }
                      )
                    : void 0,
                analyticsLocations: J,
                analyticsLocation: s,
                renderHeader: (n, l, s) =>
                  (0, a.jsx)(R.Header, {
                    onClose: l,
                    listing: e,
                    step: s,
                    guildId: t,
                  }),
                initialPlanId: U.id,
                skuId: U.sku_id,
                planGroup: Y,
                renderPurchaseConfirmation: (n, l) =>
                  ee
                    ? (0, a.jsx)(M.PurchaseConfirmationLite, {
                        listing: e,
                        onClose: l,
                        guildId: t,
                      })
                    : (0, a.jsx)(R.PurchaseConfirmation, {
                        listing: e,
                        onClose: l,
                        guildId: t,
                      }),
                reviewWarningMessage: l,
              });
            }, [F, e, U, B, Y, t, J, s, X, q, ee]),
            en = l.useCallback(() => {
              (0, m.openMemberVerificationModal)(t);
            }, [t]);
          return {
            openModal: P ? en : et,
            canOpenModal: !O && null != k && H && !b && !K && !Z && !$,
            cannotOpenReason: r,
            isCheckingTrialEligibility: Q,
          };
        };
    },
    661455: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return S;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("446674"),
        i = n("77078"),
        r = n("42203"),
        u = n("305961"),
        o = n("837008"),
        d = n("291444"),
        c = n("847426"),
        f = n("900076"),
        h = n("108314"),
        m = n("49111"),
        p = n("782340"),
        E = n("72750");
      function S(e) {
        let { guildId: t, channelId: n } = e,
          S = (0, d.useSubscriptionListingsForChannel)({
            guildId: t,
            channelId: n,
          }),
          g = (0, o.useGroupListingsForGuild)(t),
          C = (0, o.useSubscriptionsSettings)(t),
          _ = (0, s.useStateFromStores)(
            [u.default],
            () => u.default.getGuild(t),
            [t]
          ),
          I = null == _ ? void 0 : _.name,
          T = (0, s.useStateFromStores)([r.default], () =>
            r.default.getChannel(n)
          ),
          v = l.useMemo(() => {
            let e = {};
            for (let t of g)
              for (let n of t.subscription_listings_ids) e[n] = t.id;
            return e;
          }, [g]);
        return ((0, c.default)({
          guildId: t,
          location: m.AnalyticsLocations.ROLE_SUBSCRIPTION_GATED_CHANNEL,
          relevantSubscriptionListingIds: S.map(e => e.id),
        }),
        null == _)
          ? (0, a.jsx)("div", {
              className: E.spinnerContainer,
              children: (0, a.jsx)(i.Spinner, { className: E.spinner }),
            })
          : (0, a.jsxs)(i.ScrollerAuto, {
              className: E.pageContainer,
              children: [
                (0, a.jsx)(i.Heading, {
                  variant: "heading-xl/semibold",
                  className: E.joinCtaTitle,
                  children:
                    p.default.Messages.GUILD_ROLE_SUBSCRIPTION_PURCHASE_UPSELL_PAGE_CTA.format(
                      {
                        serverName: I,
                        channelName: null == T ? void 0 : T.name,
                      }
                    ),
                }),
                (0, a.jsx)(i.Text, {
                  className: E.joinCtaSubtitle,
                  variant: "text-md/normal",
                  color: "header-secondary",
                  children: null == C ? void 0 : C.description,
                }),
                (0, a.jsx)(f.default, {
                  guildId: t,
                  children: S.filter(e => null != v[e.id]).map(e =>
                    (0, a.jsx)(
                      h.default,
                      {
                        guildId: t,
                        listingId: e.id,
                        groupListingId: v[e.id],
                        analyticsLocation:
                          m.AnalyticsLocations.ROLE_SUBSCRIPTION_GATED_CHANNEL,
                      },
                      e.id
                    )
                  ),
                }),
              ],
            });
      }
    },
    70695: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var a = n("446674"),
        l = n("139375"),
        s = n("242740"),
        i = n("393414"),
        r = n("42203"),
        u = n("800762"),
        o = n("848848"),
        d = n("49111");
      function c(e, t) {
        let n = (0, a.useStateFromStores)([r.default], () =>
            r.default.getChannel(t)
          ),
          { needSubscriptionToAccess: c } = (0, o.default)(
            null == n ? void 0 : n.id
          );
        if (null == n || c) return null;
        let f = n.isGuildVocal(),
          h = (0, l.default)({ channel: n });
        return {
          navigateToChannel: () => {
            f
              ? s.default.handleVoiceConnect({
                  channel: n,
                  connected: u.default.isInChannel(n.id),
                  needSubscriptionToAccess: !1,
                  routeDirectlyToChannel: !0,
                })
              : (0, i.transitionTo)(d.Routes.CHANNEL(e, n.id));
          },
          ariaLabel: h,
        };
      }
    },
    649275: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        }),
        n("222007");
      var a = n("271938"),
        l = n("957255"),
        s = n("316133"),
        i = n("991170"),
        r = n("398604"),
        u = n("270161");
      function o(e) {
        if (!e.isGuildVoice()) return !1;
        let t = r.default.getGuildScheduledEventsByIndex(
          r.StaticGuildEventIndexes.CHANNEL_EVENT_ACTIVE(e.id)
        );
        if (t.length < 1) return !1;
        let n = l.default.can(
          u.CREATE_GUILD_EVENT_VOICE_CHANNEL_PERMISSIONS,
          e
        );
        if (!n) return !1;
        let o = new Set(
            s.default.getVoiceStatesForChannel(e).map(e => e.user.id)
          ),
          d = a.default.getId();
        for (let t of o)
          if (
            t !== d &&
            i.default.can({
              permission: u.CREATE_GUILD_EVENT_VOICE_CHANNEL_PERMISSIONS,
              user: t,
              context: e,
            })
          )
            return !1;
        return !0;
      }
    },
    147257: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return C;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("446674"),
        s = n("77078"),
        i = n("244201"),
        r = n("817963"),
        u = n("124824"),
        o = n("981913"),
        d = n("42203"),
        c = n("293137"),
        f = n("381546"),
        h = n("374021"),
        m = n("322224"),
        p = n("649275"),
        E = n("534222"),
        S = n("782340"),
        g = n("864820");
      function C(e) {
        let { channelId: t, onClick: n } = e,
          C = (0, i.useAppContext)(),
          _ = (0, E.useActiveEvent)(t),
          I = (0, l.useStateFromStores)(
            [d.default],
            () => d.default.getChannel(t),
            [t]
          ),
          { canManageGuildEvent: T } = (0, r.useManageResourcePermissions)(I),
          v = T(_);
        if (null == _) return null;
        let x = () => {
            if (null != I && (0, p.default)(I)) {
              (0, h.openEndEventModal)(I, C);
              return;
            }
            n();
          },
          N = () => {
            m.default.endEvent(_.id, _.guild_id);
          };
        return v
          ? (0, a.jsx)(s.Popout, {
              renderPopout: e => {
                let { closePopout: t } = e;
                return (0, a.jsx)(u.default, {
                  children: (0, a.jsx)(s.Menu, {
                    navId: "exit-options",
                    onSelect: () => {},
                    "aria-label": S.default.Messages.DISCONNECT_MENU,
                    onClose: t,
                    children: (0, a.jsx)(s.MenuItem, {
                      id: "end-voice-event",
                      color: "danger",
                      action: N,
                      label: S.default.Messages.END_EVENT,
                      icon: f.default,
                    }),
                  }),
                });
              },
              align: "center",
              position: "top",
              animation: s.Popout.Animation.FADE,
              children: e => {
                let { onClick: t } = e;
                return (0, a.jsx)(o.CenterControlButton, {
                  label: S.default.Messages.DISCONNECT_SELF,
                  color: "red",
                  iconComponent: c.default,
                  onClick: x,
                  onPopoutClick: t,
                  className: g.buttonSpacing,
                });
              },
            })
          : (0, a.jsx)(o.CenterControlButton, {
              className: g.buttonSpacing,
              label: S.default.Messages.DISCONNECT_SELF,
              color: "red",
              iconComponent: c.default,
              onClick: n,
            });
      }
    },
    138286: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("77078"),
        s = n("664336"),
        i = n("466148"),
        r = n("393745"),
        u = n("782340"),
        o = n("992831");
      function d(e) {
        let { guildEvent: t, recurrenceId: n } = e,
          d = (0, i.default)(t.id, n);
        return null == t
          ? null
          : (0, a.jsxs)(a.Fragment, {
              children: [
                (0, a.jsx)(s.default.Divider, { className: o.divider }),
                (0, a.jsx)(r.GuildEventTimeStatus, {
                  startTime: d.startTime.toISOString(),
                  status: t.status,
                  liveText: u.default.Messages.LIVE_EVENT,
                  className: o.eventSchedule,
                  textVariant: "text-lg/semibold",
                  eventType: t.entity_type,
                  guildEventId: null == t ? void 0 : t.id,
                  recurrenceId: n,
                }),
                (0, a.jsx)(l.Text, {
                  color: "header-secondary",
                  variant: "text-md/normal",
                  className: o.eventName,
                  children: t.name,
                }),
              ],
            });
      }
    },
    888237: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("414456"),
        s = n.n(l),
        i = n("77078"),
        r = n("772280"),
        u = n("782340"),
        o = n("673224");
      function d(e) {
        let {
          className: t,
          iconContainerClassName: n,
          icon: l,
          color: d,
          title: c,
          description: f,
          userCount: h,
          onClick: m,
          highlight: p,
        } = e;
        return (0, a.jsxs)(i.Clickable, {
          className: s(o.container, t, null != p && { [o.pulse]: p }),
          onClick: m,
          children: [
            (0, a.jsx)("div", {
              style: { backgroundColor: d },
              className: s(o.icon, n),
              children: l,
            }),
            (0, a.jsxs)("div", {
              className: o.textContainer,
              children: [
                (0, a.jsx)(i.Heading, {
                  variant: "heading-md/semibold",
                  children: c,
                }),
                (0, a.jsx)(i.Text, {
                  variant: "text-xs/normal",
                  color: "header-secondary",
                  className: o.inline,
                  children: f,
                }),
                null != h && h > 0
                  ? (0, a.jsxs)(a.Fragment, {
                      children: [
                        (0, a.jsx)(i.Text, {
                          variant: "text-xs/normal",
                          color: "header-secondary",
                          className: o.dot,
                          children: "•",
                        }),
                        (0, a.jsx)(i.Text, {
                          variant: "text-xs/normal",
                          color: "header-secondary",
                          className: o.inline,
                          children:
                            u.default.Messages.GUILD_EVENT_INTERESTED.format({
                              count: h,
                            }),
                        }),
                      ],
                    })
                  : null,
              ],
            }),
            (0, a.jsx)(r.default, {
              height: 16,
              width: 16,
              className: o.caret,
            }),
          ],
        });
      }
    },
    18517: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("669491"),
        s = n("77078"),
        i = n("943232"),
        r = n("842672"),
        u = n("888237"),
        o = n("782340");
      function d(e) {
        let { className: t, guildId: d } = e,
          c = (0, r.default)();
        return (0, a.jsx)(u.default, {
          className: t,
          icon: (0, a.jsx)(i.default, { height: 20, width: 20 }),
          color: l.default.unsafe_rawColors.BRAND_500.css,
          title: o.default.Messages.SCHEDULE_EVENT,
          description: o.default.Messages.SCHEDULE_EVENT_DESCRIPTION,
          onClick: function () {
            (0, s.openModalLazy)(async () => {
              let { default: e } = await n
                .el("590942")
                .then(n.bind(n, "590942"));
              return t => (0, a.jsx)(e, { ...t, guildId: d });
            }, c);
          },
        });
      }
    },
    109526: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return S;
          },
        }),
        n("808653");
      var a = n("37983");
      n("884691");
      var l = n("446674"),
        s = n("669491"),
        i = n("77078"),
        r = n("817963"),
        u = n("42203"),
        o = n("943232"),
        d = n("374021"),
        c = n("398604"),
        f = n("534222"),
        h = n("822516"),
        m = n("888237"),
        p = n("782340"),
        E = n("647270");
      function S(e) {
        let { channelId: t } = e,
          S = (0, l.useStateFromStores)(
            [u.default],
            () => u.default.getChannel(t),
            [t]
          ),
          g = (0, f.useImminentUpcomingGuildEvents)(t),
          C = null != (0, f.useActiveEvent)(t),
          { canManageGuildEvent: _ } = (0, r.useManageResourcePermissions)(S),
          I = (0, l.useStateFromStoresObject)([c.default], () =>
            g.reduce(
              (e, t) => (
                (e[t.id] = c.default.getUserCount(
                  t.id,
                  (0, h.getNextRecurrenceIdInEvent)(t)
                )),
                e
              ),
              {}
            )
          );
        return g.length < 1 || C
          ? null
          : (0, a.jsx)(a.Fragment, {
              children: g.map(e =>
                (0, a.jsx)(
                  m.default,
                  {
                    icon: (0, a.jsx)(o.default, { height: 20, width: 20 }),
                    color: s.default.unsafe_rawColors.GREEN_360.css,
                    title: (_(e)
                      ? p.default.Messages.GUILD_EVENT_START_PROMPT
                      : p.default.Messages.GUILD_EVENT_UPCOMING_PROMPT
                    ).format({ eventName: e.name }),
                    description:
                      p.default.Messages.GUILD_EVENT_START_PROMPT_DESCRIPTION.format(
                        {
                          startTime: (0, h.getEventTimeData)(
                            e.scheduled_start_time
                          ).startDateTimeString,
                        }
                      ),
                    onClick: () => {
                      var t;
                      _((t = e))
                        ? (0, i.openModalLazy)(async () => {
                            let { default: e } = await n
                              .el("298843")
                              .then(n.bind(n, "298843"));
                            return n => (0, a.jsx)(e, { ...n, event: t });
                          })
                        : (0, d.openGuildEventDetails)({
                            eventId: t.id,
                            parentGuildId: t.guild_id,
                          });
                    },
                    userCount: I[e.id],
                    className: E.eventPrompt,
                  },
                  e.id
                )
              ),
            });
      }
    },
    487984: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("669491"),
        s = n("244201"),
        i = n("751661"),
        r = n("228427"),
        u = n("888237"),
        o = n("782340");
      function d(e) {
        let { className: t, channel: n, highlight: d } = e,
          c = (0, s.useAppContext)();
        return (0, a.jsx)(u.default, {
          highlight: null != d && d,
          className: t,
          icon: (0, a.jsx)(r.default, { height: 20, width: 20 }),
          color: l.default.unsafe_rawColors.GREEN_360.css,
          title: o.default.Messages.STAGE_CHANNEL_START_TITLE,
          description: o.default.Messages.STAGE_CHANNEL_START_SUBTITLE,
          onClick: function () {
            (0, i.openStageChannelSettings)(n, c);
          },
        });
      }
    },
    201380: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          MoreVoiceUser: function () {
            return D;
          },
          AudienceVoiceUser: function () {
            return b;
          },
          default: function () {
            return w;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("316693"),
        u = n("77078"),
        o = n("255397"),
        d = n("272030"),
        c = n("987317"),
        f = n("990766"),
        h = n("650912"),
        m = n("76393"),
        p = n("845038"),
        E = n("374014"),
        S = n("223913"),
        g = n("709463"),
        C = n("264429"),
        _ = n("930291"),
        I = n("506885"),
        T = n("981601"),
        v = n("271938"),
        x = n("305961"),
        N = n("957255"),
        A = n("800762"),
        M = n("272339"),
        R = n("68148"),
        j = n("49111"),
        L = n("171644"),
        y = n("706530"),
        O = n("782340"),
        P = n("698964");
      function D(e) {
        let { numUsers: t } = e;
        return (0, a.jsx)("div", {
          className: P.moreContainer,
          children: (0, a.jsxs)(u.Text, {
            color: "text-muted",
            variant: "text-sm/medium",
            children: ["+", t],
          }),
        });
      }
      function b(e) {
        let { numAudience: t, collapsed: n } = e,
          l = n ? t : O.default.Messages.LISTENING_COUNT.format({ count: t });
        return (0, a.jsxs)("div", {
          className: i(P.audienceContainer, {
            [P.audienceContainerCollapsed]: n,
          }),
          children: [
            (0, a.jsx)("div", {
              className: P.audienceIconContainer,
              children: (0, a.jsx)(M.default, { className: P.audienceIcon }),
            }),
            (0, a.jsx)(u.Text, {
              color: "text-muted",
              variant: "text-sm/medium",
              children: l,
            }),
          ],
        });
      }
      class U extends l.PureComponent {
        get canWatchStream() {
          let { channel: e, isStreaming: t } = this.props;
          return (
            t &&
            (0, S.canWatchStream)(
              e,
              A.default,
              x.default,
              N.default,
              m.default
            )[0]
          );
        }
        render() {
          let { userPopoutOpen: e } = this.state,
            {
              connectUserDragSource: t,
              canDrag: n,
              isSelfOnOtherClient: l,
              user: s,
              channel: i,
            } = this.props,
            r = (0, a.jsx)("div", {
              className: P.draggable,
              "data-dnd-name": i.name,
              onMouseEnter: l ? void 0 : this.handleMouseEnter,
              onMouseLeave: l ? void 0 : this.handleHidePreview,
              children: (0, a.jsx)(u.Popout, {
                preload: () =>
                  (0, I.default)(s.id, s.getAvatarURL(i.guild_id, 80), {
                    guildId: i.guild_id,
                    channelId: i.id,
                  }),
                position: "right",
                renderPopout: this.renderUserPopout,
                shouldShow: e,
                onRequestClose: this.handleCloseUserPopout,
                children: e => this.renderUser(e),
              }),
            });
          return n ? t(r) : r;
        }
        constructor(...e) {
          super(...e),
            (this.domElementRef = l.createRef()),
            (this.state = { userPopoutOpen: !1, isHoveringHangStatus: !1 }),
            (this.handleClickUser = () => {
              this.setState({ userPopoutOpen: !this.state.userPopoutOpen });
            }),
            (this.handleCloseUserPopout = () => {
              this.setState({ userPopoutOpen: !1 });
            }),
            (this.handleHidePreview = () => {
              let {
                hidePreview: e,
                isStreaming: t,
                user: n,
                showHangStatus: a,
              } = this.props;
              (t || a) && (null == e || e(n.id)),
                this.setState({ isHoveringHangStatus: !1 });
            }),
            (this.handleMouseEnter = () => {
              let {
                user: e,
                showPreview: t,
                isStreaming: n,
                showHangStatus: a,
              } = this.props;
              (n || a) && (null == t || t(e.id));
            }),
            (this.handleHoverHangStatus = e => {
              this.setState({ isHoveringHangStatus: e });
            }),
            (this.handleWatchStream = () => {
              let {
                user: e,
                channel: t,
                isWatching: n,
                hidePreview: a,
              } = this.props;
              if (!this.canWatchStream) return;
              let l = {
                streamType: y.StreamTypes.GUILD,
                ownerId: e.id,
                channelId: t.id,
                guildId: t.guild_id,
              };
              v.default.getId() !== e.id && c.default.selectVoiceChannel(t.id),
                n
                  ? ((0, g.default)(l),
                    o.default.selectParticipant(
                      l.channelId,
                      (0, E.encodeStreamKey)(l)
                    ))
                  : (0, f.watchStreamAndTransitionToStream)(l),
                null == a || a(e.id);
            }),
            (this.handleJoinVoice = () => {
              let { user: e, channel: t, hidePreview: n } = this.props;
              N.default.can(
                r.default.combine(
                  j.Permissions.CONNECT,
                  j.Permissions.VIEW_CHANNEL
                ),
                t
              ) && (c.default.selectVoiceChannel(t.id), null == n || n(e.id));
            }),
            (this.handleUserContextMenu = e => {
              let { channel: t, user: l } = this.props;
              (0, d.openContextMenuLazy)(e, async () => {
                let { default: e } = await n
                  .el("834247")
                  .then(n.bind(n, "834247"));
                return n =>
                  (0, a.jsx)(e, {
                    ...n,
                    user: l,
                    guildId: t.guild_id,
                    channel: t,
                    showMediaItems: !0,
                    showStageChannelItems: t.isGuildStageVoice(),
                  });
              });
            }),
            (this.renderUserPopout = e => {
              let { channel: t, user: n } = this.props,
                l = t.getGuildId();
              return (0, a.jsx)(T.default, {
                userId: n.id,
                guildId: null != l ? l : void 0,
                channelId: t.id,
                ...e,
              });
            }),
            (this.renderStreamPopout = () => {
              let {
                user: e,
                channel: t,
                previewIsOpen: n,
                location: l,
              } = this.props;
              return (0, a.jsx)(C.default, {
                user: e,
                channel: t,
                onWatch: this.handleWatchStream,
                previewIsOpen: n,
                location: l,
              });
            }),
            (this.renderHangStatusPopout = () => {
              let {
                hangStatusActivity: e,
                previewIsOpen: t,
                user: n,
                channel: l,
              } = this.props;
              return (0, a.jsx)(_.default, {
                userId: n.id,
                channel: l,
                hangStatusActivity: e,
                previewIsOpen: t,
              });
            }),
            (this.renderUser = e => {
              let {
                  isSelfOnOtherClient: t,
                  otherClientSessionType: n,
                  voicePlatform: l,
                  shouldShowPreview: s,
                  mute: r,
                  localMute: o,
                  localVideoDisabled: d,
                  speaking: c,
                  user: f,
                  deaf: h,
                  priority: m,
                  collapsed: E,
                  isStreaming: S,
                  isGuest: g,
                  nick: C,
                  video: _,
                  serverMute: I,
                  serverDeaf: T,
                  tabIndex: v,
                  embeddedApplication: x,
                  channel: N,
                  hangStatusActivity: A,
                  showHangStatus: M,
                  isSelf: j,
                  application: y,
                } = this.props,
                { userPopoutOpen: D, isHoveringHangStatus: b } = this.state,
                U = L.GAME_CONSOLE_SESSIONS.has(null != n ? n : ""),
                w = {
                  user: f,
                  speaking: c,
                  mute: r,
                  localMute: o,
                  localVideoDisabled: d,
                  isStreaming: S,
                  isGuest: g,
                  video: _,
                  priority: m,
                  deaf: h,
                  nick: C,
                  collapsed: E,
                  overlap: E,
                  serverMute: I,
                  serverDeaf: T,
                  tabIndex: v,
                  otherClientSessionType: n,
                  voicePlatform: l,
                  embeddedApplication: x,
                  avatarContainerClass: i({ [P.userAvatar]: !0 }),
                  disabled: t && !U,
                  selected: D,
                  onClick: U ? void 0 : this.handleClickUser,
                  onDoubleClick: this.handleWatchStream,
                  onContextMenu: this.handleUserContextMenu,
                  guildId: N.guild_id,
                  hangStatusActivity: A,
                  showHangStatus: M,
                  isSelf: j,
                  application: y,
                  channelId: N.id,
                };
              if (t) {
                var F;
                return (0, a.jsx)(u.Tooltip, {
                  text:
                    null !== (F = (0, p.default)(n)) && void 0 !== F
                      ? F
                      : O.default.Messages.CONNECTED_ON_ANOTHER_CLIENT,
                  children: e => {
                    let { onClick: t, onContextMenu: n, ...l } = e;
                    return (0, a.jsx)(R.default, { ...w, ...l });
                  },
                });
              }
              return (0, a.jsx)(u.Popout, {
                position: "right",
                renderPopout:
                  (M && b) || !S
                    ? this.renderHangStatusPopout
                    : this.renderStreamPopout,
                shouldShow: s && !D,
                onRequestClose: this.handleHidePreview,
                spacing: 0,
                children: () =>
                  (0, a.jsx)(R.default, {
                    ...w,
                    onMouseDown: e.onMouseDown,
                    onKeyDown: e.onKeyDown,
                    handleHoverHangStatus: this.handleHoverHangStatus,
                  }),
              });
            });
        }
      }
      U.defaultProps = { isSelfOnOtherClient: !1 };
      var w = (0, h.makeVoiceUserDraggable)(U);
    },
    884155: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return b;
          },
        }),
        n("222007"),
        n("424973");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("446674"),
        u = n("862337"),
        o = n("899633"),
        d = n("191225"),
        c = n("299285"),
        f = n("442939"),
        h = n("699209"),
        m = n("32346"),
        p = n("835040"),
        E = n("373469"),
        S = n("271938"),
        g = n("26989"),
        C = n("42887"),
        _ = n("957255"),
        I = n("824563"),
        T = n("101125"),
        v = n("235660"),
        x = n("280168"),
        N = n("800762"),
        A = n("68148"),
        M = n("991170"),
        R = n("158998"),
        j = n("774539"),
        L = n("201380"),
        y = n("49111"),
        O = n("39141"),
        P = n("886604");
      let D = l.memo(e => {
        var t;
        let {
            mute: n,
            deaf: l,
            user: s,
            channel: i,
            sessionId: u,
            nick: _,
          } = e,
          A = s.id,
          P = (0, r.useStateFromStores)(
            [S.default],
            () => S.default.getId() === A,
            [A]
          ),
          [D, b, U] = (0, r.useStateFromStoresArray)(
            [C.default],
            () =>
              P
                ? [
                    !C.default.isSupported() ||
                      C.default.isSelfMute() ||
                      C.default.isSelfMutedTemporarily(),
                    C.default.isSelfDeaf(),
                    !1,
                  ]
                : [
                    !C.default.isSupported() || C.default.isLocalMute(A),
                    !1,
                    C.default.isLocalVideoDisabled(A),
                  ],
            [P, A]
          ),
          w = (0, r.useStateFromStores)([x.default], () =>
            x.default.isPrioritySpeaker(A)
          ),
          F = (0, o.default)({ userId: A, checkSoundSharing: !0 }),
          V = (0, r.useStateFromStores)([g.default], () =>
            g.default.isGuestOrLurker(i.guild_id, A)
          ),
          k = (0, r.useStateFromStores)(
            [d.default],
            () =>
              d.default.getEmbeddedActivitiesForChannel(i.id).find(e => {
                let { userIds: t } = e;
                return t.has(A);
              }),
            [A, i.id]
          ),
          B = (0, f.default)(null != k ? [k.applicationId] : []),
          G = (0, j.useIsVoiceUserGameActivityEnabled)(
            "voice_users_eligibility_check",
            !1
          ),
          H = (0, r.useStateFromStores)([I.default, T.default], () =>
            P
              ? T.default.getActivities()
              : I.default.getActivities(A, i.guild_id)
          ),
          W = H.find(
            e => null != e.application_id && e.type === y.ActivityTypes.PLAYING
          ),
          Y = (0, r.useStateFromStores)([c.default], () =>
            (null == W ? void 0 : W.application_id) != null
              ? c.default.getApplication(null == W ? void 0 : W.application_id)
              : void 0
          );
        null != Y && j.default.trackExposure({ location: "voice_users" });
        let [z, K] = (0, r.useStateFromStoresArray)(
            [E.default],
            () => [
              E.default.getStreamForUser(A, i.getGuildId()),
              E.default.getActiveStreamForUser(A, i.getGuildId()),
            ],
            [i, A]
          ),
          Z = (0, r.useStateFromStores)([v.default], () =>
            v.default.getSessionById(u)
          ),
          Q = R.default.useName(s),
          X = (0, r.useStateFromStores)(
            [N.default],
            () => N.default.getVoicePlatformForChannel(i.id, A),
            [i.id, A]
          ),
          { enableHangStatus: q } = h.HangStatusExperiment.useExperiment({
            guildId: i.guild_id,
            location: "VoiceUsers",
          }),
          J = M.default.can({
            permission: y.Permissions.SET_VOICE_CHANNEL_STATUS,
            user: s,
            context: i,
          }),
          $ = (0, r.useStateFromStores)(
            [m.default],
            () => (P ? m.default.getHangStatusActivity() : null),
            [P]
          ),
          ee = (0, r.useStateFromStores)(
            [I.default],
            () =>
              I.default.findActivity(
                A,
                e => e.type === y.ActivityTypes.HANG_STATUS
              ),
            [A]
          );
        return (0, a.jsx)(p.default, {
          shakeLocation: O.ShakeLocation.VOICE_USER,
          isShaking: F,
          children: (0, a.jsx)(L.default, {
            ...e,
            nick: null != _ ? _ : Q,
            canDrag: e.canDrag && !V,
            otherClientSessionType:
              null == Z
                ? void 0
                : null === (t = Z.clientInfo) || void 0 === t
                  ? void 0
                  : t.os,
            voicePlatform: X,
            localMute: D && !P,
            localVideoDisabled: U,
            mute: n || D,
            deaf: l || b,
            speaking: F,
            priority: w,
            embeddedApplication: B[0],
            isStreaming: null != z && z.channelId === i.id,
            isWatching:
              null != K && K.state !== y.ApplicationStreamStates.ENDED,
            isGuest: V,
            showHangStatus:
              J && q && (S.default.getId() === s.id || null != ee),
            hangStatusActivity: P ? $ : ee,
            isSelf: S.default.getId() === s.id,
            application: q || G ? Y : void 0,
          }),
        });
      });
      D.displayName = "ConnectedVoiceUser";
      var b = function (e) {
        let {
            allowPreviews: t = !0,
            allowDragging: n = !0,
            channel: s,
            voiceStates: o,
            collapsed: d,
            collapsedMax: c = 6,
            tabIndex: h,
            location: m,
            numAudience: p,
            withGuildIcon: E = !1,
            className: g,
            children: C,
          } = e,
          [T, v] = l.useState(null),
          [x, N] = l.useState(!1),
          M = l.useRef(null),
          R = l.useRef(
            new u.DelayedCall(50, () => {
              v(M.current), (M.current = null);
            })
          ),
          j = l.useRef(
            new u.DelayedCall(175, () => {
              v(null);
            })
          ),
          O = l.useCallback(
            e => {
              t &&
                (N(!0), j.current.cancel(), (M.current = e), R.current.delay());
            },
            [t]
          ),
          b = l.useCallback(
            e => {
              t && (R.current.cancel(), T === e && (N(!1), j.current.delay()));
            },
            [t, T]
          ),
          U = (0, r.useStateFromStoresArray)([I.default], () => {
            if (d) return [];
            let e = new Set();
            return (
              null == o ||
                o.forEach(t => {
                  let { user: n } = t,
                    a = I.default.getActivities(n.id, s.guild_id);
                  a.forEach(t => {
                    null != t.application_id && e.add(t.application_id);
                  });
                }),
              Array.from(e)
            );
          });
        (0, f.default)(U);
        let w = (() => {
          if (null == o || 0 === o.length) return null;
          let e = d && o.length > c + 1 ? o.slice(0, c) : o,
            t = e.map(e => {
              var t;
              let { user: l, nick: i, voiceState: r } = e;
              return (0, a.jsx)(
                D,
                {
                  user: l,
                  nick: i,
                  isSelfOnOtherClient:
                    S.default.getId() === l.id &&
                    r.sessionId !== S.default.getSessionId(),
                  mute: r.isVoiceMuted(),
                  deaf: r.isVoiceDeafened(),
                  video: r.selfVideo,
                  serverMute: r.mute,
                  serverDeaf: r.deaf,
                  sessionId:
                    null !== (t = r.sessionId) && void 0 !== t ? t : "",
                  channel: s,
                  collapsed: d,
                  canDrag: n && _.default.can(y.Permissions.MOVE_MEMBERS, s),
                  showPreview: O,
                  hidePreview: b,
                  previewIsOpen: x,
                  shouldShowPreview: T === l.id,
                  tabIndex: h,
                  location: m,
                },
                l.id
              );
            });
          return (
            null != p && p > 0
              ? t.push(
                  (0, a.jsx)(L.AudienceVoiceUser, {
                    collapsed: d,
                    numAudience: p,
                  })
                )
              : d &&
                o.length > c + 1 &&
                t.push((0, a.jsx)(L.MoreVoiceUser, { numUsers: o.length - c })),
            t
          );
        })();
        return null == w && null == C
          ? null
          : (0, a.jsxs)(A.VoiceUserList, {
              className: i(g, P.list, {
                [P.collapsed]: d,
                [P.withGuildIcon]: E,
              }),
              collapsed: d,
              children: [w, C],
            });
      };
    },
    230035: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return m;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("65597"),
        i = n("151426"),
        r = n("551042"),
        u = n("77078"),
        o = n("384997"),
        d = n("619443"),
        c = n("162771"),
        f = n("994428");
      function h(e) {
        return "dismissible_content_"
          .concat(f.DismissibleContentGroupName.GUILD_TAKEOVER_MODAL, "-")
          .concat(e);
      }
      var m = l.memo(function () {
        return (
          !(function () {
            let e = (function () {
                let e = (0, s.default)([d.default], () =>
                  d.default.isConnected()
                );
                return e ? [] : [];
              })(),
              [t, m] = (0, o.useSelectedDismissibleContent)(
                e,
                f.DismissibleContentGroupName.GUILD_TAKEOVER_MODAL
              ),
              p = (0, r.useHasAnyModalOpen)(),
              E = l.useRef(null);
            l.useEffect(() => {
              if (null == t) {
                E.current = null;
                return;
              }
              !p &&
                E.current !== t &&
                (!(function (e) {
                  let { dismissibleContent: t, markAsDismissed: l } = e,
                    s = {
                      onCloseCallback: e =>
                        l(null != e ? e : f.ContentDismissActionType.UNKNOWN),
                      modalKey: h(t),
                    },
                    r = c.default.getGuildId();
                  if (t === i.DismissibleContent.SERVER_SHOP_UPSELL)
                    null != r &&
                      (0, u.openModalLazy)(async () => {
                        let { default: e } = await n
                          .el("730801")
                          .then(n.bind(n, "730801"));
                        return t =>
                          (0, a.jsx)(e, {
                            ...t,
                            guildId: r,
                            markAsDismissed: l,
                          });
                      }, s);
                })({ dismissibleContent: t, markAsDismissed: m }),
                (E.current = t));
            }, [t, p, m]),
              l.useEffect(
                () => () => {
                  null != t && (0, r.closeModal)(h(t));
                },
                [t]
              );
          })(),
          null
        );
      });
    },
    930291: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return N;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("65597"),
        u = n("77078"),
        o = n("987317"),
        d = n("771325"),
        c = n("271938"),
        f = n("26989"),
        h = n("957255"),
        m = n("945956"),
        p = n("697218"),
        E = n("599110"),
        S = n("233965"),
        g = n("699209"),
        C = n("808742"),
        _ = n("342845"),
        I = n("661743"),
        T = n("49111"),
        v = n("782340"),
        x = n("656007"),
        N = e => {
          let {
              hangStatusActivity: t,
              userId: s,
              channel: N,
              previewIsOpen: A,
            } = e,
            { enableHangStatus: M } = g.HangStatusExperiment.useExperiment({
              guildId: N.guild_id,
              location: "HangStatusPopout",
            }),
            R = (0, r.default)([c.default], () => c.default.getId()),
            j = (0, r.default)([p.default], () => p.default.getUser(s)),
            L = (0, r.default)(
              [m.default],
              () => m.default.getChannelId() === N.id
            ),
            y = (0, r.default)([h.default], () =>
              h.default.can(T.Permissions.CONNECT, N)
            ),
            O = (0, r.default)([f.default], () =>
              null != N.guild_id && null != j
                ? f.default.getMember(N.guild_id, s)
                : null
            ),
            P = l.useMemo(
              () =>
                null != j
                  ? (0, d.getPreviewAvatar)(void 0, O, j, { size: 40 })
                  : void 0,
              [O, j]
            );
          return (l.useEffect(() => {
            M &&
              null != t &&
              A &&
              null != j &&
              R !== s &&
              E.default.track(T.AnalyticEvents.VIEW_HANG_STATUS, {
                source: "HangStatusPopout",
                guild_id: N.guild_id,
                channel_id: N.id,
              });
          }, [M, t, A, j, R, s, N]),
          M && null != j)
            ? R === s
              ? (0, a.jsx)("div", {
                  className: i(x.popoutWrapper, { [x.mounted]: A }),
                  children: (0, a.jsx)(I.HangStatusPopout, {
                    currentStatus: t,
                  }),
                })
              : null == t
                ? null
                : (0, a.jsx)("div", {
                    className: i(x.popoutWrapper, { [x.mounted]: A }),
                    children: (0, a.jsxs)("div", {
                      className: x.popout,
                      children: [
                        (0, a.jsxs)("div", {
                          className: x.contentContainer,
                          children: [
                            (0, a.jsxs)("div", {
                              className: x.statusGroup,
                              children: [
                                (0, a.jsx)(u.Text, {
                                  variant: "text-xs/medium",
                                  color: "text-muted",
                                  children:
                                    v.default.Messages.STATUS_LEAD_IN_JUST,
                                }),
                                (0, a.jsx)(u.Text, {
                                  variant: "text-sm/semibold",
                                  color: "text-normal",
                                  className: x.statusText,
                                  children: (0, C.getHangStatusText)(t),
                                }),
                              ],
                            }),
                            (0, a.jsxs)("div", {
                              className: x.iconGroup,
                              children: [
                                (0, a.jsx)(_.default, {
                                  className: x.statusIcon,
                                  hangStatusActivity: t,
                                }),
                                (0, a.jsxs)("div", {
                                  className: x.avatarWrapper,
                                  children: [
                                    (0, a.jsx)(u.Avatar, {
                                      className: x.avatar,
                                      size: u.AvatarSizes.SIZE_40,
                                      src: P,
                                      "aria-hidden": !0,
                                    }),
                                    (0, a.jsx)("div", { className: x.outline }),
                                  ],
                                }),
                              ],
                            }),
                          ],
                        }),
                        !L && y
                          ? (0, a.jsx)(u.Button, {
                              className: x.cta,
                              size: u.Button.Sizes.SMALL,
                              onClick: () => {
                                !L &&
                                  y &&
                                  (o.default.selectVoiceChannel(N.id),
                                  E.default.track(
                                    T.AnalyticEvents.HANG_STATUS_CTA_CLICKED,
                                    {
                                      source: "HangStatusPopout",
                                      guild_id: N.guild_id,
                                      channel_id: N.id,
                                    }
                                  ));
                              },
                              children:
                                v.default.Messages.CUSTOM_HANG_STATUS_CTA,
                            })
                          : null,
                        L
                          ? (0, a.jsx)(u.Button, {
                              className: x.cta,
                              size: u.Button.Sizes.SMALL,
                              onClick: () => {
                                let e = t.state;
                                e === T.HangStatusTypes.CUSTOM
                                  ? (0, u.openModalLazy)(async () => {
                                      let { default: e } = await n
                                        .el("579371")
                                        .then(n.bind(n, "579371"));
                                      return n =>
                                        (0, a.jsx)(e, {
                                          ...n,
                                          startingText: t.details,
                                          startingEmoji: t.emoji,
                                        });
                                    })
                                  : (0, S.updateHangStatus)(e, !0),
                                  E.default.track(
                                    T.AnalyticEvents.SWIPE_HANG_STATUS,
                                    {
                                      guild_id: N.guild_id,
                                      channel_id: N.id,
                                      media_session_id:
                                        m.default.getMediaSessionId(),
                                    }
                                  );
                              },
                              children:
                                v.default.Messages.CUSTOM_HANGS_STATUS_COPY_CTA,
                            })
                          : null,
                      ],
                    }),
                  })
            : null;
        };
    },
    661743: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          HangStatusPopout: function () {
            return R;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("917351"),
        u = n.n(r),
        o = n("446674"),
        d = n("151426"),
        c = n("77078"),
        f = n("943722"),
        h = n("10641"),
        m = n("697218"),
        p = n("468759"),
        E = n("987772"),
        S = n("956089"),
        g = n("315102"),
        C = n("233965"),
        _ = n("32346"),
        I = n("808742"),
        T = n("342845"),
        v = n("49111"),
        x = n("843455"),
        N = n("782340"),
        A = n("45450");
      let M = e => {
          let { style: t, className: n, name: l, icon: s } = e;
          return (0, a.jsx)(c.Tooltip, {
            text: l,
            children: e =>
              (0, a.jsx)("div", {
                className: i(n, A.iconWidget),
                style: t,
                ...e,
                children: null != s && s,
              }),
          });
        },
        R = e => {
          let { currentStatus: t } = e,
            s = l.useRef(_.default.getRecentCustomStatuses()),
            r = l.useRef(
              (0, h.isDismissibleContentDismissed)(
                d.DismissibleContent.HANG_STATUS_NEW_BADGE
              )
            ).current,
            R = (0, I.getHangStatusOptions)(),
            [j, L] = l.useState(null != t ? t : null),
            y = (0, o.useStateFromStores)([m.default], () =>
              m.default.getCurrentUser()
            ),
            O = () => {
              !r &&
                (0, h.markDismissibleContentAsDismissed)(
                  d.DismissibleContent.HANG_STATUS_NEW_BADGE
                );
            },
            P = (e, t) => {
              e.stopPropagation(), (0, C.updateHangStatus)(t, !0), O();
            },
            D = (e, t) => {
              e.stopPropagation(),
                (0, C.updateCustomHangStatus)(t.status, t.emoji, !0),
                O();
            },
            b = l.useCallback(e => {
              e.stopPropagation(), (0, C.clearHangStatus)(!0);
            }, []),
            U = e => {
              e.stopPropagation(),
                (0, c.openModalLazy)(async () => {
                  let { default: e } = await n
                    .el("579371")
                    .then(n.bind(n, "579371"));
                  return t => (0, a.jsx)(e, { ...t });
                }),
                O();
            },
            w = l.useCallback(e => {
              L({
                type: v.ActivityTypes.HANG_STATUS,
                name: "Hang Status",
                state: e,
              });
            }, []),
            F = l.useCallback(e => {
              L({
                type: v.ActivityTypes.HANG_STATUS,
                name: "Hang Status",
                state: x.HangStatusTypes.CUSTOM,
                details: e.status,
                emoji: e.emoji,
              });
            }, []);
          return (0, a.jsxs)("div", {
            className: A.popout,
            children: [
              !r &&
                (0, a.jsxs)(a.Fragment, {
                  children: [
                    (0, a.jsx)("div", { className: A.popoutBackground }),
                    (0, a.jsxs)("div", {
                      className: A.onboarding,
                      children: [
                        (0, a.jsxs)("div", {
                          className: A.title,
                          children: [
                            (0, a.jsx)(c.Text, {
                              variant: "text-md/semibold",
                              color: "header-primary",
                              children: N.default.Messages.ACTIVITY_STATUS,
                            }),
                            (0, a.jsx)(S.TextBadge, {
                              text: N.default.Messages.BETA,
                              disableColor: !0,
                              className: A.newBadge,
                            }),
                          ],
                        }),
                        (0, a.jsx)(c.Text, {
                          variant: "text-xs/normal",
                          color: "text-muted",
                          className: A.helpText,
                          children: N.default.Messages.HANG_STATUS_HELP,
                        }),
                        (0, a.jsxs)("div", {
                          className: A.iconGroup,
                          children: [
                            null != y &&
                              (0, a.jsxs)("div", {
                                className: A.avatarWrapper,
                                children: [
                                  (0, a.jsx)(c.Avatar, {
                                    className: A.avatar,
                                    size: c.AvatarSizes.SIZE_40,
                                    src: (0, g.getUserAvatarURL)(y),
                                    "aria-hidden": !0,
                                  }),
                                  (0, a.jsx)("div", { className: A.outline }),
                                ],
                              }),
                            (0, a.jsx)(T.default, {
                              className: A.statusIcon,
                              hangStatusActivity: j,
                            }),
                          ],
                        }),
                      ],
                    }),
                  ],
                }),
              (0, a.jsxs)("div", {
                className: A.options,
                children: [
                  (0, a.jsxs)("div", {
                    className: A.iconsContainer,
                    children: [
                      Object.entries(R).map(e => {
                        let [n, l] = e;
                        return (0, a.jsx)(
                          c.Clickable,
                          {
                            "aria-label": l.title,
                            onMouseEnter: () => w(n),
                            onClick: e => P(e, n),
                            children: (0, a.jsx)(M, {
                              className: i(A.iconWidget, {
                                [A.selectedWidget]:
                                  n === (null == t ? void 0 : t.state),
                              }),
                              name: l.title,
                              icon: (0, a.jsx)("img", {
                                src: l.icon,
                                alt: "",
                                className: A.icon,
                              }),
                              style:
                                n === (null == t ? void 0 : t.state)
                                  ? {
                                      backgroundColor:
                                        null != l.color ? l.color : void 0,
                                    }
                                  : {},
                            }),
                          },
                          n
                        );
                      }),
                      (0, a.jsx)(c.Clickable, {
                        "aria-label":
                          N.default.Messages.STATUS_POPOUT_CLEAR_STATUS,
                        onClick: b,
                        onMouseEnter: () => L(null),
                        children: (0, a.jsx)(M, {
                          className: A.optionButton,
                          name: N.default.Messages.STATUS_POPOUT_CLEAR_STATUS,
                          icon: (0, a.jsx)(p.default, {
                            className: A.editIcon,
                            foreground: A.editIconColor,
                          }),
                        }),
                      }),
                    ],
                  }),
                  (0, a.jsx)("div", { className: A.divider }),
                  (0, a.jsxs)("div", {
                    className: A.iconsContainer,
                    children: [
                      s.current.map((e, n) => {
                        let l =
                          e.status === (null == t ? void 0 : t.details) &&
                          u.isEqual(e.emoji, null == t ? void 0 : t.emoji);
                        return (0, a.jsx)(
                          c.Clickable,
                          {
                            "aria-label": e.status,
                            onMouseEnter: () => F(e),
                            onClick: t => D(t, e),
                            children: (0, a.jsx)(M, {
                              className: i(A.iconWidget, {
                                [A.selectedWidget]: l,
                              }),
                              name: e.status,
                              icon:
                                null != e.emoji
                                  ? (0, a.jsx)(f.ActivityEmoji, {
                                      className: A.customIcon,
                                      emoji: e.emoji,
                                      hideTooltip: !0,
                                    })
                                  : null,
                              style: l
                                ? { backgroundColor: "#7174B7B3" }
                                : { backgroundColor: "#6466914D" },
                            }),
                          },
                          "custom-status-".concat(n)
                        );
                      }),
                      s.current.length > 0
                        ? (0, a.jsx)(
                            c.Clickable,
                            {
                              "aria-label":
                                null != t
                                  ? N.default.Messages.STATUS_POPOUT_EDIT_CUSTOM
                                  : N.default.Messages.STATUS_POPOUT_SET_CUSTOM,
                              onClick: U,
                              children: (0, a.jsx)(M, {
                                className: A.optionButton,
                                name:
                                  null != t
                                    ? N.default.Messages
                                        .STATUS_POPOUT_EDIT_CUSTOM
                                    : N.default.Messages
                                        .STATUS_POPOUT_SET_CUSTOM,
                                icon: (0, a.jsx)(E.default, {
                                  width: 20,
                                  height: 20,
                                  foreground: A.editIconColor,
                                }),
                              }),
                            },
                            "custom-status-edit"
                          )
                        : (0, a.jsxs)(
                            c.Clickable,
                            {
                              "aria-label":
                                N.default.Messages.STATUS_POPOUT_SET_CUSTOM,
                              onClick: U,
                              className: A.setCustomButton,
                              children: [
                                (0, a.jsx)(E.default, {
                                  className: A.editIcon,
                                  foreground: A.editIconColor,
                                }),
                                (0, a.jsx)(c.Text, {
                                  variant: "text-xs/medium",
                                  color: "interactive-active",
                                  children:
                                    N.default.Messages.STATUS_POPOUT_SET_CUSTOM,
                                }),
                              ],
                            },
                            "custom-status-edit-full"
                          ),
                    ],
                  }),
                ],
              }),
            ],
          });
        };
    },
    993063: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
      var a = n("862205");
      let l = (0, a.createExperiment)({
        kind: "user",
        id: "2021-04_longer_group_dm_invites",
        label: "Longer Group DM Invites",
        defaultConfig: { inviteMaxAgeSeconds: 86400 },
        treatments: [
          {
            id: 1,
            label: "Makes group DM invites expire after 1 week.",
            config: { inviteMaxAgeSeconds: 604800 },
          },
        ],
      });
      var s = l;
    },
    155832: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("446674"),
        s = n("289867"),
        i = n("716241"),
        r = n("982108"),
        u = n("162771"),
        o = n("155207"),
        d = n("664336"),
        c = n("49111"),
        f = n("782340");
      function h(e) {
        let { channelId: t } = e,
          n = (0, l.useStateFromStores)([r.default], () =>
            r.default.getSection(t)
          ),
          h = (0, l.useStateFromStores)([u.default], () =>
            u.default.getGuildId()
          ),
          m = n === c.ChannelSections.MEMBERS;
        return (0, a.jsx)(d.Icon, {
          tooltip: m
            ? f.default.Messages.MEMBER_LIST_SHOWN
            : f.default.Messages.MEMBER_LIST_HIDDEN,
          icon: o.default,
          onClick: () => {
            i.default.trackWithMetadata(c.AnalyticEvents.MEMBER_LIST_TOGGLED, {
              channel_id: t,
              guild_id: h,
              member_list_open: !m,
            }),
              s.default.toggleMembersSection();
          },
          selected: m,
        });
      }
    },
    353054: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return g;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("446674"),
        i = n("77078"),
        r = n("519705"),
        u = n("282109"),
        o = n("660279"),
        d = n("998650"),
        c = n("664336"),
        f = n("659500"),
        h = n("34676"),
        m = n("957825"),
        p = n("49111"),
        E = n("782340"),
        S = n("752024");
      function g(e) {
        let { channel: t } = e,
          n = (0, i.useRedesignIconContext)().enabled,
          [g, C] = (0, s.useStateFromStoresArray)(
            [u.default],
            () => [
              u.default.isChannelMuted(t.getGuildId(), t.id),
              u.default.resolvedMessageNotifications(t),
            ],
            [t]
          ),
          [_, I] = l.useState(!1);
        l.useEffect(() => {
          let e = () => I(!0);
          return (
            f.ComponentDispatch.subscribe(
              p.ComponentActions.OPEN_THREAD_NOTIFICATION_SETTINGS,
              e
            ),
            () => {
              f.ComponentDispatch.unsubscribe(
                p.ComponentActions.OPEN_THREAD_NOTIFICATION_SETTINGS,
                e
              );
            }
          );
        }, []);
        let T = e => {
            e.shiftKey
              ? r.default.updateChannelOverrideSettings(
                  t.guild_id,
                  t.id,
                  { muted: !g },
                  h.NotificationLabel.muted(!g)
                )
              : I(e => !e);
          },
          v = E.default.Messages.NOTIFICATION_SETTINGS;
        return (0, a.jsx)(i.Popout, {
          shouldShow: _,
          animation: i.Popout.Animation.NONE,
          position: "bottom",
          align: "right",
          autoInvert: !1,
          onRequestClose: () => I(!1),
          renderPopout: e =>
            (0, a.jsx)(m.default, {
              ...e,
              channel: t,
              navId: "channel-context",
              label: E.default.Messages.CHANNEL_ACTIONS_MENU_LABEL,
            }),
          children: (e, t) => {
            let { isShown: l } = t;
            return (0, a.jsx)(c.default.Icon, {
              ...e,
              onClick: T,
              tooltip: l ? null : v,
              icon:
                g || C !== p.UserNotificationSettings.ALL_MESSAGES
                  ? d.default
                  : o.default,
              foreground: g && !n ? S.strikethrough : null,
              "aria-label": v,
              selected: l,
            });
          },
        });
      }
    },
    262956: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return g;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("446674"),
        i = n("77078"),
        r = n("112821"),
        u = n("244201"),
        o = n("274870"),
        d = n("247013"),
        c = n("660478"),
        f = n("697218"),
        h = n("566998"),
        m = n("664336"),
        p = n("659500"),
        E = n("49111"),
        S = n("782340"),
        g = function (e) {
          let { channel: t } = e,
            n = (0, s.useStateFromStores)(
              [d.default, f.default],
              () => {
                let e = f.default.getCurrentUser();
                return (
                  null == e ||
                  (t.isNSFW() &&
                    (!e.nsfwAllowed || !d.default.didAgree(t.getGuildId())))
                );
              },
              [t]
            ),
            [g, C] = l.useState(!1),
            _ = (0, s.useStateFromStores)(
              [c.default],
              () => c.default.hasUnreadPins(t.id),
              [t]
            ),
            I = (0, u.useWindowDispatch)(),
            T = (0, o.useIsBroadcastingGDM)(t.id),
            v = l.useCallback(() => {
              !n && C(e => !e);
            }, [n]);
          function x(e) {
            !(null == e ? void 0 : e.shiftKey) &&
              I.dispatch(E.ComponentActions.POPOUT_CLOSE);
          }
          return (l.useEffect(
            () => (
              p.ComponentDispatch.subscribe(
                E.ComponentActions.TOGGLE_CHANNEL_PINS,
                v
              ),
              () => {
                p.ComponentDispatch.unsubscribe(
                  E.ComponentActions.TOGGLE_CHANNEL_PINS,
                  v
                );
              }
            ),
            [v]
          ),
          T)
            ? null
            : (0, a.jsx)(i.Popout, {
                shouldShow: g,
                animation: i.Popout.Animation.NONE,
                position: "bottom",
                align: "right",
                autoInvert: !1,
                ignoreModalClicks: !0,
                onRequestClose: () => C(!1),
                renderPopout: function (e) {
                  return (0, a.jsx)(r.default, { ...e, onJump: x, channel: t });
                },
                children: (e, t) => {
                  let { isShown: l } = t;
                  return (0, a.jsx)(m.Icon, {
                    ...e,
                    onClick: v,
                    tooltip: l ? null : S.default.Messages.PINNED_MESSAGES,
                    icon: h.default,
                    "aria-label": S.default.Messages.PINNED_MESSAGES,
                    disabled: n,
                    showBadge: _,
                    selected: l,
                  });
                },
              });
        };
    },
    723431: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("446674"),
        s = n("793237"),
        i = n("347738"),
        r = n("909004"),
        u = n("664336"),
        o = n("599110"),
        d = n("49111"),
        c = n("995307"),
        f = n("782340");
      function h(e) {
        let { channel: t } = e,
          n = (0, l.useStateFromStores)([i.default], () =>
            i.default.shouldShowTopicsBar()
          );
        return (0, a.jsx)(u.default.Icon, {
          icon: r.default,
          onClick: () => {
            o.default.track(d.AnalyticEvents.SUMMARIES_SIDEBAR_TOGGLED, {
              summaries_sidebar_open: !n,
              source: c.SummariesSidebarToggledSource.TOOLBAR_BUTTON,
              guild_id: t.guild_id,
              channel_id: t.id,
              channel_type: t.type,
            }),
              (0, s.toggleTopicsBar)();
          },
          tooltip: n
            ? f.default.Messages.SUMMARIES_SHOWN
            : f.default.Messages.SUMMARIES_HIDDEN,
          selected: n,
          "aria-expanded": n,
        });
      }
    },
    977983: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return p;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("446674"),
        s = n("526812"),
        i = n("404607"),
        r = n("670902"),
        u = n("339792"),
        o = n("680986"),
        d = n("258039"),
        c = n("821343"),
        f = n("68238"),
        h = n("664336"),
        m = n("782340");
      function p(e) {
        var t, n;
        let { channel: p } = e,
          E = (0, o.useCanManageChannel)(p),
          S = (0, l.useStateFromStores)([s.default], () =>
            s.default.hasHidden(p.id)
          ),
          g = (0, d.isOnboardingDismissed)(p.id),
          { sortOrder: C, tagFilter: _ } = (0, u.useForumChannelStore)(p.id),
          I = (0, l.useStateFromStores)(
            [r.default, c.default],
            () => {
              let e = r.default.getThreadIds(p.id, C, _);
              if (e.length > 0) return !0;
              let t = c.default.getThreads(p.id, C, _);
              return !!(t.length > 0) || !1;
            },
            [p.id, C, _]
          ),
          T = p.isMediaChannel();
        if (!E || g || (T && I)) return null;
        let v =
          ((t = S),
          (n = T),
          t
            ? n
              ? m.default.Messages.MEDIA_CHANNEL_ADMIN_EDUCATION_SHOW
              : m.default.Messages.FORUM_CHANNEL_ONBOARDING_SHOW
            : n
              ? m.default.Messages.MEDIA_CHANNEL_ADMIN_EDUCATION_HIDE
              : m.default.Messages.FORUM_CHANNEL_ONBOARDING_HIDE);
        return (0, a.jsx)(h.Icon, {
          tooltip: v,
          icon: f.default,
          onClick: () => i.default.hideAdminOnboarding(p.id, !S),
          selected: !S,
        });
      }
    },
    849324: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return p;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("414456"),
        s = n.n(l),
        i = n("974667"),
        r = n("446674"),
        u = n("77078"),
        o = n("145079"),
        d = n("87657"),
        c = n("824563"),
        f = n("145131"),
        h = n("158998"),
        m = n("855780");
      function p(e) {
        let {
            user: t,
            row: n,
            hideDiscriminator: l,
            comparator: p,
            selected: E,
            checked: S,
            onClick: g,
            onMouseEnter: C,
            "aria-setsize": _,
            "aria-posinset": I,
          } = e,
          T = (0, r.useStateFromStores)([c.default], () =>
            c.default.getStatus(t.id)
          ),
          v = (0, i.useListItem)(String(t.id));
        return (0, a.jsx)(u.Clickable, {
          id: "user-row-".concat(n),
          className: m.friendWrapper,
          onClick: () => {
            null != g && g(t.id);
          },
          onMouseEnter: () => {
            null != C && C(n);
          },
          ...v,
          role: "option",
          "aria-selected": S,
          "aria-setsize": _,
          "aria-posinset": I,
          children: (0, a.jsxs)(f.default, {
            align: f.default.Align.CENTER,
            className: s(m.friend, { [m.friendSelected]: E }),
            children: [
              (0, a.jsx)(d.default, {
                user: t,
                status: T,
                className: m.avatar,
              }),
              (0, a.jsxs)(f.default, {
                className: m.match,
                align: f.default.Align.BASELINE,
                children: [
                  (0, a.jsx)(u.Text, {
                    tag: "strong",
                    className: m.nickname,
                    "aria-hidden": !0,
                    variant: "text-md/medium",
                    children:
                      null != p && p === t.tag
                        ? h.default.getName(t)
                        : null != p && "" !== p
                          ? p
                          : h.default.getName(t),
                  }),
                  (0, a.jsx)(o.default, {
                    user: t,
                    hideDiscriminator: l,
                    className: m.discordTag,
                    usernameClass: m.weightMedium,
                    discriminatorClass: m.weightMedium,
                    forceUsername: !0,
                  }),
                ],
              }),
              (0, a.jsx)(u.Checkbox, {
                displayOnly: !0,
                size: 22,
                value: S,
                className: m.checkbox,
              }),
            ],
          }),
        });
      }
    },
    853189: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return F;
          },
        }),
        n("222007"),
        n("424973");
      var a = n("37983"),
        l = n("884691"),
        s = n("446674"),
        i = n("151426"),
        r = n("77078"),
        u = n("561288"),
        o = n("987317"),
        d = n("244201"),
        c = n("206230"),
        f = n("702173"),
        h = n("191145"),
        m = n("10641"),
        p = n("384997"),
        E = n("889014"),
        S = n("5667"),
        g = n("19065"),
        C = n("727284"),
        _ = n("950104"),
        I = n("778588"),
        T = n("42887"),
        v = n("27618"),
        x = n("697218"),
        N = n("800762"),
        A = n("887657"),
        M = n("437825"),
        R = n("664336"),
        j = n("58608"),
        L = n("659500"),
        y = n("701909"),
        O = n("49111"),
        P = n("994428"),
        D = n("353927"),
        b = n("782340"),
        U = n("319373");
      class w extends l.PureComponent {
        componentDidMount() {
          L.ComponentDispatch.subscribe(
            O.ComponentActions.CALL_START,
            this.handleVoiceClick
          );
        }
        componentWillUnmount() {
          L.ComponentDispatch.unsubscribe(
            O.ComponentActions.CALL_START,
            this.handleVoiceClick
          );
        }
        renderVideoCallButton() {
          let e, t;
          let {
            inCall: n,
            callActive: l,
            callUnavailable: s,
            isBlocked: i,
            channel: u,
            mode: o,
          } = this.props;
          if (n || (l && o === O.ChannelModes.VOICE)) return null;
          let d = u.isManaged(),
            c = null,
            f = !1;
          return (
            T.default.supports(D.Features.VIDEO)
              ? i
                ? ((c = b.default.Messages.CALL_UNAVAILABLE_BLOCKED_USERS),
                  (e = r.Tooltip.Colors.RED),
                  (f = !0))
                : l && o === O.ChannelModes.VIDEO
                  ? ((t = this.handleJoinVideoCall),
                    (c = d
                      ? b.default.Messages.CONNECT
                      : b.default.Messages.JOIN_VIDEO_CALL))
                  : ((t = this.handleStartVideoCall),
                    (c = d
                      ? b.default.Messages.CONNECT
                      : b.default.Messages.START_VIDEO_CALL))
              : ((f = !0),
                (t = this.handleBrowserNotSupported),
                (c = b.default.Messages.BROWSER_NOT_SUPPORTED)),
            (0, a.jsx)(R.default.Icon, {
              icon: M.default,
              onClick: t,
              disabled: f || s,
              tooltip: c,
              tooltipColor: e,
            })
          );
        }
        renderVoiceCallButton() {
          let e;
          let {
            inCall: t,
            canShowTooltip: n,
            callActive: l,
            callUnavailable: s,
            isBlocked: u,
            channel: o,
            canShowActivityGdmTooltip: d,
            dismissibleContentTypes: c,
            useReducedMotion: f,
          } = this.props;
          if (t) return null;
          let h = o.isManaged(),
            m = "",
            E = !1;
          s
            ? ((m = h
                ? b.default.Messages.VOICE_UNAVAILABLE
                : b.default.Messages.CALL_UNAVAILABLE),
              (e = r.Tooltip.Colors.RED),
              (E = !0))
            : u
              ? ((m = b.default.Messages.CALL_UNAVAILABLE_BLOCKED_USERS),
                (e = r.Tooltip.Colors.RED),
                (E = !0))
              : (m = l
                  ? h
                    ? b.default.Messages.CONNECT
                    : b.default.Messages.JOIN_VOICE_CALL
                  : h
                    ? b.default.Messages.CONNECT
                    : b.default.Messages.START_VOICE_CALL);
          let g = (0, a.jsx)(R.default.Icon, {
            icon: A.default,
            onClick: this.handleVoiceClick,
            disabled: E,
            tooltip: m,
            tooltipColor: e,
          });
          return (0, a.jsx)(p.default, {
            contentTypes: c,
            children: e => {
              let { visibleContent: l, markAsDismissed: s } = e;
              if (l === i.DismissibleContent.ACTIVITY_GDM_CALL_TOOLTIP)
                return (0, a.jsx)(r.Popout, {
                  position: "bottom",
                  align: "center",
                  animation: r.Popout.Animation.TRANSLATE,
                  shouldShow: n && d && !t,
                  renderPopout: e => {
                    let { closePopout: t } = e;
                    return (0, a.jsx)(S.default, {
                      header: (0, a.jsxs)("div", {
                        children: [
                          (0, a.jsx)(j.default, {
                            className: U.tooltipImage,
                            autoPlay: !f,
                            src: "https://cdn.discordapp.com/attachments/860252504826445825/1078051428028924006/mobile_coachmark.mp4",
                            width: 248,
                            height: 139.5,
                            loop: !0,
                            muted: !0,
                          }),
                          (0, a.jsx)(r.Heading, {
                            variant: "heading-md/bold",
                            color: "always-white",
                            children:
                              b.default.Messages
                                .EMBEDDED_ACTIVITIES_DM_TOOLTIP_HEADER,
                          }),
                        ],
                      }),
                      content: (0, a.jsxs)("div", {
                        children: [
                          (0, a.jsx)(r.Text, {
                            variant: "text-sm/normal",
                            color: "always-white",
                            children:
                              b.default.Messages
                                .EMBEDDED_ACTIVITIES_DM_TOOLTIP_BODY,
                          }),
                          (0, a.jsx)(r.Anchor, {
                            href: y.default.getArticleURL(
                              O.HelpdeskArticles.ACTIVITIES
                            ),
                            children: b.default.Messages.LEARN_MORE,
                          }),
                        ],
                      }),
                      buttonCTA: b.default.Messages.GOT_IT,
                      onClick: () => {
                        t(), s(P.ContentDismissActionType.UNKNOWN);
                      },
                      className: U.tooltip,
                    });
                  },
                  children: () => g,
                });
              return g;
            },
          });
        }
        render() {
          return (0, a.jsxs)(l.Fragment, {
            children: [
              this.renderVoiceCallButton(),
              this.renderVideoCallButton(),
            ],
          });
        }
        constructor(...e) {
          super(...e),
            (this.handleStartCall = (e, t) => {
              let { channel: n, notFriend: a, appContext: l } = this.props,
                s = a ? n.getRecipientId() : null,
                i = () =>
                  u.default.call(
                    n.id,
                    t,
                    !a && !n.isManaged() && !(null == e ? void 0 : e.shiftKey),
                    s
                  );
              t ? (0, C.default)(i, l) : i();
            }),
            (this.handleJoinCall = e => {
              o.default.selectVoiceChannel(this.props.channel.id, e);
            }),
            (this.handleVoiceClick = e => {
              let {
                callUnavailable: t,
                callActive: n,
                canShowActivityGdmTooltip: a,
              } = this.props;
              if (
                (a &&
                  (0, m.markDismissibleContentAsDismissed)(
                    i.DismissibleContent.ACTIVITY_GDM_CALL_TOOLTIP,
                    { dismissAction: P.ContentDismissActionType.AUTO }
                  ),
                t)
              );
              else if (n) return this.handleJoinCall(!1);
              else return this.handleStartCall(e, !1);
            }),
            (this.handleStartVideoCall = e => {
              this.handleStartCall(e, !0);
            }),
            (this.handleJoinVideoCall = () => {
              let { appContext: e } = this.props;
              (0, C.default)(() => this.handleJoinCall(!0), e);
            }),
            (this.handleBrowserNotSupported = () => {
              (0, g.default)();
            });
        }
      }
      function F(e) {
        let { channel: t } = e,
          n = (0, E.default)(),
          r = (0, s.useStateFromStores)([h.default], () =>
            h.default.getMode(t.id)
          ),
          u = (0, s.useStateFromStores)([N.default], () =>
            N.default.isInChannel(t.id)
          ),
          o = (0, s.useStateFromStores)(
            [c.default],
            () => c.default.useReducedMotion
          ),
          { callActive: m, callUnavailable: p } = (0,
          s.useStateFromStoresObject)([_.default], () => ({
            callActive: _.default.isCallActive(t.id),
            callUnavailable: _.default.isCallUnavailable(t.id),
          })),
          S = t.getRecipientId(),
          { notFriend: g, isBlocked: C } = (0, s.useStateFromStoresObject)(
            [v.default],
            () => ({
              notFriend:
                t.type === O.ChannelTypes.DM &&
                null != S &&
                !v.default.isFriend(S),
              isBlocked:
                t.type === O.ChannelTypes.DM &&
                null != S &&
                v.default.isBlocked(S),
            })
          ),
          T = (0, s.useStateFromStores)([x.default], () =>
            x.default.getUser(S)
          ),
          A = (0, d.useAppContext)(),
          M = [],
          R = (0, f.default)(t.id),
          j = (0, s.useStateFromStores)([I.default], () =>
            I.default.hasLayers()
          );
        R && !j && M.push(i.DismissibleContent.ACTIVITY_GDM_CALL_TOOLTIP);
        let [L, y] = l.useState(!1);
        return (l.useEffect(() => {
          let e = setTimeout(() => {
            y(!0);
          }, 250);
          return () => clearTimeout(e);
        }, []),
        n || (null == T ? void 0 : T.bot))
          ? null
          : (0, a.jsx)(w, {
              channel: t,
              mode: r,
              inCall: u,
              callActive: m,
              callUnavailable: p,
              notFriend: g,
              isBlocked: C,
              appContext: A,
              canShowTooltip: L,
              canShowActivityGdmTooltip: R,
              dismissibleContentTypes: M,
              useReducedMotion: o,
            });
      }
    },
    718091: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return ed;
          },
        }),
        n("70102"),
        n("424973"),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("917351"),
        u = n.n(r),
        o = n("866227"),
        d = n.n(o),
        c = n("394846"),
        f = n("446674"),
        h = n("77078"),
        m = n("913144"),
        p = n("561288"),
        E = n("450911"),
        S = n("630086"),
        g = n("970728"),
        C = n("369008"),
        _ = n("736964"),
        I = n("304580"),
        T = n("137223"),
        v = n("244201"),
        x = n("716241"),
        N = n("274870"),
        A = n("843962"),
        M = n("679653"),
        R = n("52393"),
        j = n("393414"),
        L = n("233069"),
        y = n("42203"),
        O = n("330154"),
        P = n("501090"),
        D = n("945956"),
        b = n("660478"),
        U = n("27618"),
        w = n("102985"),
        F = n("697218"),
        V = n("145131"),
        k = n("476765"),
        B = n("570443"),
        G = n("76539"),
        H = n("664336"),
        W = n("599110"),
        Y = n("306160"),
        z = n("659500"),
        K = n("449008"),
        Z = n("299039"),
        Q = n("158998"),
        X = n("993063"),
        q = n("849324"),
        J = n("49111"),
        $ = n("782340"),
        ee = n("366160"),
        et = n("182893"),
        en = n("890957");
      let ea = (0, k.uid)(),
        el = (0, k.uid)();
      function es(e) {
        let { className: t, children: n } = e;
        return (0, a.jsxs)(V.default, {
          align: V.default.Align.CENTER,
          justify: V.default.Justify.CENTER,
          direction: V.default.Direction.VERTICAL,
          className: i(ee.errorState, t),
          children: [
            (0, a.jsx)("div", {
              className: i(ee.errorStateIcon, en.marginBottom20),
            }),
            n,
          ],
        });
      }
      let ei = e => {
          var t;
          let { channel: n, onClose: l } = e,
            s = null !== (t = (0, M.default)(n)) && void 0 !== t ? t : "",
            i = (0, f.useStateFromStores)([b.default], () => {
              var e;
              return null !== (e = b.default.lastMessageId(n.id)) &&
                void 0 !== e
                ? e
                : n.id;
            });
          return (0, a.jsx)(h.Clickable, {
            onClick: () => {
              (0, j.transitionToGuild)(J.ME, n.id), l();
            },
            children: (0, a.jsxs)("div", {
              className: ee.confirmChannelItemContainer,
              children: [
                (0, a.jsx)(h.Avatar, {
                  src: (0, A.getChannelIconURL)(n),
                  size: h.AvatarSizes.SIZE_24,
                  "aria-label": s,
                }),
                (0, a.jsx)("span", {
                  className: ee.confirmChannelName,
                  children: s,
                }),
                (0, a.jsx)("span", {
                  className: ee.lastActiveTimestamp,
                  children: d(Z.default.extractTimestamp(i)).fromNow(),
                }),
              ],
            }),
          });
        },
        er = e => {
          let { onConfirm: t, channelIds: n, ...l } = e,
            s = (0, f.useStateFromStoresArray)(
              [y.default],
              () => Array.from(n).map(y.default.getChannel),
              [n]
            );
          return (0, a.jsxs)(h.ConfirmModal, {
            header: $.default.Messages.GROUP_DM_INVITE_CONFIRM,
            confirmText: $.default.Messages.GROUP_DM_INVITE_CONFIRM_BUTTON,
            cancelText: $.default.Messages.CANCEL,
            onConfirm: t,
            confirmButtonColor: h.Button.Colors.BRAND,
            ...l,
            children: [
              (0, a.jsx)(h.Text, {
                variant: "text-md/normal",
                children:
                  $.default.Messages.GROUP_DM_INVITE_CONFIRM_DESCRIPTION,
              }),
              (0, a.jsx)(h.FormTitle, {
                className: ee.selectExistingFormHeader,
                children: $.default.Messages.GROUP_DM_INVITE_SELECT_EXISTING,
              }),
              (0, a.jsx)(h.Scroller, {
                className: ee.confirmInviteScroller,
                children: s
                  .filter(K.isNotNullish)
                  .sort((e, t) => {
                    var n, a;
                    let l =
                        null !== (n = e.lastMessageId) && void 0 !== n
                          ? n
                          : e.id,
                      s =
                        null !== (a = t.lastMessageId) && void 0 !== a
                          ? a
                          : t.id;
                    return Z.default.compare(s, l);
                  })
                  .map(e =>
                    (0, a.jsx)(ei, { onClose: l.onClose, channel: e }, e.id)
                  ),
              }),
            ],
          });
        };
      class eu extends l.PureComponent {
        componentDidMount() {
          let { channel: e } = this.props;
          m.default.wait(() => C.default.open(null == e ? void 0 : e.id));
          let t = (0, x.collectChannelAnalyticsMetadata)(e);
          null != e
            ? e.isDM()
              ? W.default.track(J.AnalyticEvents.OPEN_POPOUT, {
                  ...t,
                  type: "Add Friends to DM",
                  source: "DM",
                  is_friend: !this.isNotFriends(),
                })
              : W.default.track(J.AnalyticEvents.OPEN_POPOUT, {
                  ...t,
                  type: "Add Friends to DM",
                  source: "Group DM",
                })
            : W.default.track(J.AnalyticEvents.OPEN_POPOUT, {
                ...t,
                type: "New Group DM",
                source: "Friends List",
              }),
            z.ComponentDispatch.subscribe(
              J.ComponentActions.SCROLL_PAGE_UP,
              this.scrollPageUp
            ),
            z.ComponentDispatch.subscribe(
              J.ComponentActions.SCROLL_PAGE_DOWN,
              this.scrollPageDown
            );
        }
        componentWillUnmount() {
          z.ComponentDispatch.unsubscribe(
            J.ComponentActions.SCROLL_PAGE_UP,
            this.scrollPageUp
          ),
            z.ComponentDispatch.unsubscribe(
              J.ComponentActions.SCROLL_PAGE_DOWN,
              this.scrollPageDown
            ),
            null != this.copyTimeout && clearTimeout(this.copyTimeout),
            m.default.wait(() => C.default.close());
        }
        isNotFriends() {
          let { channel: e } = this.props;
          if (null == e || !e.isDM()) return !1;
          let t = e.getRecipientId();
          if (null == t) throw Error("no recipient in DM");
          return !U.default.isFriend(t);
        }
        createInvite() {
          let { channel: e } = this.props;
          if (null == e || !e.isMultiUserDM() || this.isPartyFull()) return;
          let { inviteMaxAgeSeconds: t } = X.default.getCurrentConfig(
            { location: "5326c5_1" },
            { autoTrackExposure: !1 }
          );
          g.default.createInvite(
            e.id,
            { max_age: t },
            J.InstantInviteSources.GROUP_DM
          );
        }
        isPartyFull() {
          let { channel: e } = this.props;
          return (
            null != e && e.recipients.length + 1 >= this.getMaxParticipants()
          );
        }
        getMaxParticipants() {
          let { channel: e } = this.props,
            t = F.default.getCurrentUser();
          return null != t && t.isStaff()
            ? J.MAX_GROUP_DM_STAFF_PARTICIPANTS
            : null != e && e.isBroadcastChannel()
              ? J.MAX_GROUP_DM_BROADCAST_PARTICIPANTS
              : null != e && e.userLimit > 0
                ? e.userLimit
                : J.MAX_GROUP_DM_PARTICIPANTS;
        }
        getRemaining() {
          let { channel: e, selectedUsers: t } = this.props,
            n = (null == e ? 0 : e.recipients.length) + 1;
          return this.getMaxParticipants() - t.size - n;
        }
        renderCreateGroupButton() {
          let { channel: e, selectedUsers: t } = this.props,
            n = this.getRemaining(),
            l = (null != e && 0 === t.size) || n < 0,
            s =
              t.size > 1
                ? $.default.Messages.CREATE_GROUP_DM
                : $.default.Messages.CREATE_DM;
          return (0, a.jsx)(h.Button, {
            fullWidth: !0,
            disabled: l,
            onClick: this.handleInviteUsers,
            children: s,
          });
        }
        renderAddUsersButton() {
          let { channel: e, selectedUsers: t } = this.props;
          if (null == e || e.isDM()) return;
          let n = this.getRemaining(),
            l = 0 === t.size || n < 0;
          return (0, a.jsx)("div", {
            className: ee.addButton,
            children: (0, a.jsx)(h.Button, {
              size: h.Button.Sizes.SMALL,
              disabled: l,
              onClick: this.handleInviteUsers,
              children: $.default.Messages.ADD,
            }),
          });
        }
        renderSubtitle() {
          if (
            !this.props.hasFriends ||
            this.isNotFriends() ||
            this.isPartyFull()
          )
            return null;
          let e = this.getRemaining(),
            t =
              e <= 0
                ? $.default.Messages.GROUP_DM_INVITE_FULL_SUB2.format({
                    number: this.getMaxParticipants(),
                  })
                : $.default.Messages.GROUP_DM_INVITE_REMAINING.format({
                    number: e,
                  });
          return (0, a.jsx)(h.Text, {
            variant: "text-xs/normal",
            className: i(
              ee.subtitle,
              { [ee.subtitleWarning]: e < 0 },
              en.marginTop4
            ),
            children: t,
          });
        }
        renderSearchBar() {
          var e;
          let {
            query: t,
            hasFriends: n,
            results: l,
            selectedRow: s,
            selectedUsers: r,
          } = this.props;
          if (!n || this.isNotFriends()) return null;
          let u = [];
          return (
            r.forEach(e => {
              let t = F.default.getUser(e);
              null != t && u.push(Q.default.getName(t));
            }),
            (0, a.jsxs)(V.default, {
              className: i(ee.searchBar, en.marginTop20),
              children: [
                (0, a.jsx)(T.default, {
                  ref: this.searchBarRef,
                  className: ee.searchBarComponent,
                  autoFocus: !0,
                  placeholder:
                    0 === r.size
                      ? $.default.Messages.GROUP_DM_SEARCH_PLACEHOLDER
                      : void 0,
                  disabled: this.isPartyFull(),
                  size: T.default.Sizes.MEDIUM,
                  query: t,
                  selectedRow: s,
                  sections: [
                    null !== (e = null == l ? void 0 : l.length) && void 0 !== e
                      ? e
                      : 0,
                  ],
                  tags: u,
                  onSelect: this.handleSelect,
                  onSelectionChange: this.handleSelectionChange,
                  onQueryChange: this.handleQueryChange,
                  onRemoveTag: this.handleRemoveUser,
                  inputProps: {
                    "aria-labelledby": ea,
                    "aria-controls": el,
                    "aria-expanded": !0,
                    "aria-activedescendant": "user-row-".concat(s),
                  },
                }),
                this.renderAddUsersButton(),
              ],
            })
          );
        }
        renderHeader() {
          let e = null != this.scrollerRef.current && this.state.separator,
            t = this.isNotFriends()
              ? $.default.Messages.GROUP_DM_ADD_FRIENDS
              : $.default.Messages.GROUP_DM_HEADER;
          return (0, a.jsxs)(h.ModalHeader, {
            direction: V.default.Direction.VERTICAL,
            align: V.default.Align.STRETCH,
            className: ee.header,
            separator: e,
            children: [
              c.isMobile ? this.renderMobileCloseButton() : null,
              (0, a.jsx)(h.Heading, {
                id: ea,
                variant: "heading-lg/semibold",
                children: t,
              }),
              this.renderSubtitle(),
              this.renderSearchBar(),
            ],
          });
        }
        renderBody() {
          let { channel: e, hasFriends: t, results: n } = this.props;
          if (this.isNotFriends()) {
            let t = null != e ? e.getRecipientId() : null;
            if (null == t) throw Error("no recipient in DM");
            let n = F.default.getUser(t),
              l = null != n ? n.username : "",
              s =
                null != n &&
                U.default.getRelationshipType(n.id) ===
                  J.RelationshipTypes.PENDING_OUTGOING;
            return (0, a.jsxs)(es, {
              className: ee.notFriends,
              children: [
                (0, a.jsx)("div", {
                  children:
                    $.default.Messages.GROUP_DM_INVITE_NOT_FRIENDS.format({
                      username: l,
                    }),
                }),
                (0, a.jsx)(h.Button, {
                  disabled: s,
                  size: h.Button.Sizes.SMALL,
                  onClick: () => (null != n ? this.handleAddFriend(n) : null),
                  className: en.marginTop20,
                  children: s
                    ? $.default.Messages.ADD_FRIEND_BUTTON_AFTER
                    : $.default.Messages.ADD_FRIEND_BUTTON,
                }),
              ],
            });
          }
          return t
            ? this.isPartyFull()
              ? (0, a.jsxs)(es, {
                  className: ee.partyFull,
                  children: [
                    (0, a.jsx)("div", {
                      children: $.default.Messages.GROUP_DM_INVITE_FULL_MAIN,
                    }),
                    (0, a.jsx)("div", {
                      children:
                        $.default.Messages.GROUP_DM_INVITE_FULL_SUB2.format({
                          number: this.getMaxParticipants(),
                        }),
                    }),
                  ],
                })
              : 0 === n.length
                ? (0, a.jsx)(es, {
                    className: i(ee.noResults, en.marginBottom20),
                    children: (0, a.jsx)("div", {
                      children: $.default.Messages.GROUP_DM_INVITE_EMPTY,
                    }),
                  })
                : (0, a.jsx)(h.List, {
                    ref: this.scrollerRef,
                    sections: [n.length],
                    className: ee.scroller,
                    renderRow: this.renderRow,
                    rowHeight: this.getRowHeight,
                    renderSection: this.renderSection,
                    sectionHeight: 0,
                    onScroll: this.handleScroll,
                    paddingTop: 0,
                    paddingBottom: 14,
                    fade: !0,
                    role: void 0,
                    innerRole: "listbox",
                    innerId: el,
                    innerAriaMultiselectable: !0,
                    innerAriaOrientation: "vertical",
                  })
            : (0, a.jsxs)(es, {
                className: ee.noFriends,
                children: [
                  (0, a.jsx)("div", {
                    children: $.default.Messages.GROUP_DM_INVITE_NO_FRIENDS,
                  }),
                  (0, a.jsx)(h.Button, {
                    autoFocus: !0,
                    color: h.Button.Colors.GREEN,
                    fullWidth: !0,
                    size: h.Button.Sizes.SMALL,
                    onClick: this.handleAddFriendNavigation,
                    className: en.marginTop20,
                    children: $.default.Messages.ADD_FRIEND,
                  }),
                ],
              });
        }
        renderSection() {
          return null;
        }
        renderInviteLink() {
          let { channel: e, invite: t, hideInstantInvites: n } = this.props,
            { copied: s } = this.state;
          if (null == e || !e.isMultiUserDM() || this.isPartyFull())
            return null;
          let r = null != t ? (0, R.default)(t.code) : "";
          return (0, a.jsxs)(l.Fragment, {
            children: [
              (0, a.jsx)(h.FormTitle, {
                tag: "h5",
                className: en.marginBottom8,
                children: $.default.Messages.GROUP_DM_INVITE_LINK_TITLE,
              }),
              (0, a.jsxs)(V.default, {
                className: i(et.input, { [et.success]: s }),
                justify: V.default.Justify.BETWEEN,
                align: V.default.Align.CENTER,
                children: [
                  r.length > 0
                    ? (0, a.jsx)(h.TextInput, {
                        className: ee.copyInput,
                        name: "invite",
                        value: n ? $.default.Messages.INSTANT_INVITE_HIDDEN : r,
                        editable: !1,
                        inputClassName: ee.input,
                        spellCheck: "false",
                        onClick: e => e.currentTarget.select(),
                      })
                    : (0, a.jsx)(h.TextInput, {
                        className: ee.copyInput,
                        name: "invite",
                        value: r,
                        placeholder: (0, R.default)(
                          $.default.Messages.GROUP_DM_INVITE_LINK_EXAMPLE
                        ),
                        editable: !1,
                        inputClassName: ee.input,
                        spellCheck: "false",
                        onClick: () => this.createInvite(),
                      }),
                  Y.SUPPORTS_COPY && r.length > 0
                    ? (0, a.jsx)(h.Button, {
                        size: h.Button.Sizes.SMALL,
                        color: s
                          ? h.Button.Colors.GREEN
                          : h.Button.Colors.BRAND,
                        className: ee.copyButton,
                        onClick: () => this.handleCopyInvite(r),
                        children: s
                          ? $.default.Messages.INVITE_COPIED
                          : $.default.Messages.COPY,
                      })
                    : null,
                  0 === r.length
                    ? (0, a.jsx)(h.Button, {
                        size: h.Button.Sizes.SMALL,
                        color: h.Button.Colors.BRAND,
                        className: ee.copyButton,
                        onClick: () => this.createInvite(),
                        children:
                          $.default.Messages.GROUP_DM_INVITE_LINK_CREATE,
                      })
                    : null,
                ],
              }),
              r.length > 0
                ? (0, a.jsx)(h.Text, {
                    variant: "text-xs/normal",
                    className: i(en.marginTop8, ee.footerText),
                    children: $.default.Messages.INVITE_EXPIRES_HOURS.format({
                      numHours: "".concat(24),
                    }),
                  })
                : null,
            ],
          });
        }
        renderFooter() {
          let { hasFriends: e, channel: t } = this.props;
          if (this.isNotFriends() || !e || this.isPartyFull()) return null;
          let n =
            null == t || t.isDM()
              ? this.renderCreateGroupButton()
              : this.renderInviteLink();
          if (null != n)
            return (0, a.jsxs)(l.Fragment, {
              children: [
                (0, a.jsx)("div", { className: ee.footerSeparator }),
                (0, a.jsx)(V.default, {
                  direction: V.default.Direction.VERTICAL,
                  className: ee.footer,
                  children: n,
                }),
              ],
            });
        }
        render() {
          let { transitionState: e } = this.props;
          return (0, a.jsxs)(h.ModalRoot, {
            transitionState: null != e ? e : h.ModalTransitionState.ENTERED,
            className: ee.popout,
            children: [
              this.renderHeader(),
              this.renderBody(),
              this.renderFooter(),
            ],
          });
        }
        handleAddFriend(e) {
          this.props.onClose(),
            _.default.sendRequest({
              discordTag: Q.default.getUserTag(e, { identifiable: "always" }),
              context: { location: "Group DM" },
            });
        }
        constructor(...e) {
          super(...e),
            (this.state = { separator: !1, copied: !1 }),
            (this.scrollerRef = l.createRef()),
            (this.searchBarRef = l.createRef()),
            (this._mobileCloseRef = l.createRef()),
            (this.scrollPageUp = () => {
              var e;
              null === (e = this.scrollerRef.current) ||
                void 0 === e ||
                e.scrollPageUp({ animate: !0 });
            }),
            (this.scrollPageDown = () => {
              var e;
              null === (e = this.scrollerRef.current) ||
                void 0 === e ||
                e.scrollPageDown({ animate: !0 });
            }),
            (this.renderMobileCloseButton = () =>
              (0, a.jsx)("div", {
                className: i(ee.mobileToolsContainer),
                ref: this._mobileCloseRef,
                children: (0, a.jsx)(h.FocusRingScope, {
                  containerRef: this._mobileCloseRef,
                  children: (0, a.jsx)("div", {
                    children: (0, a.jsx)(I.default, {
                      className: ee.mobileToolsCloseIcon,
                      closeAction: this.props.onClose,
                      keybind: "ESC",
                    }),
                  }),
                }),
              })),
            (this.getRowHeight = (e, t) => {
              if (e > 0) return 0;
              let { results: n } = this.props,
                a = n[t];
              return null != a ? 42 : 0;
            }),
            (this.renderRow = e => {
              let { section: t, row: n } = e;
              if (t > 0) return null;
              let {
                  results: l,
                  selectedUsers: s,
                  selectedRow: i,
                  hideDiscriminator: r,
                } = this.props,
                u = l[n];
              if (null == u) return null;
              let { user: o, comparator: d } = u,
                c = s.has(o.id);
              return (0, a.jsx)(
                q.default,
                {
                  row: n,
                  user: o,
                  hideDiscriminator: r,
                  comparator: d,
                  checked: c,
                  selected: n === i,
                  onClick: this.handleClick,
                  onMouseEnter: this.focusResult,
                  "aria-posinset": n + 1,
                  "aria-setsize": l.length,
                },
                o.id
              );
            }),
            (this.forceFocus = () => {
              let e = this.searchBarRef.current;
              null == e || e.focus();
            }),
            (this.focusResult = e => {
              C.default.select(e);
            }),
            (this.handleSelect = (e, t) => {
              let { results: n, channel: a } = this.props;
              null == t
                ? C.default.clear(null == a ? void 0 : a.id)
                : null != n && this.handleClick(n[t].user.id);
            }),
            (this.handleSelectionChange = (e, t) => {
              C.default.select(t);
              let n = this.scrollerRef.current;
              null != n && n.scrollToIndex({ section: e, row: t, padding: 8 });
            }),
            (this.handleQueryChange = e => {
              let { channel: t } = this.props;
              C.default.search(e, null == t ? void 0 : t.id);
            }),
            (this.handleRemoveUser = e => {
              let t = Array.from(this.props.selectedUsers);
              C.default.removeUser(t[e]), this.forceFocus();
            }),
            (this.handleClick = e => {
              let { selectedUsers: t, query: n, channel: a } = this.props,
                l = !t.has(e);
              l
                ? (C.default.addUser(e),
                  n.length > 0 && C.default.clear(null == a ? void 0 : a.id))
                : C.default.removeUser(e),
                this.forceFocus();
            }),
            (this.handleAddFriendNavigation = () => {
              (0, j.transitionTo)(J.Routes.FRIENDS),
                S.default.setSection(J.FriendsSections.ADD_FRIEND),
                this.props.onClose();
            }),
            (this.handleScroll = () => {
              let e = this.scrollerRef.current;
              null != e && this.setState({ separator: !e.isScrolledToTop() });
            }),
            (this.createNewDM = e => {
              E.default.openPrivateChannel(e, !1, !1, "New Group DM");
            }),
            (this.pushToExistingDM = (e, t) => {
              let n = D.default.getChannelId() === e.id;
              E.default
                .addRecipients(e.id, t, J.AnalyticsLocations.ADD_FRIENDS_TO_DM)
                .then(a => {
                  if (n) {
                    if (e.isDM() && a !== e.id) {
                      p.default.call(a, !1, !0);
                      return;
                    }
                    p.default.ring(a, t);
                  }
                });
            }),
            (this.handleInviteUsers = () => {
              let { channel: e, selectedUsers: t, onClose: n } = this.props,
                l = Array.from(t);
              if (null != e) {
                let t = ec(Array.from(new Set([...e.recipients, ...l])));
                t.size > 0
                  ? (0, h.openModal)(
                      n =>
                        (0, a.jsx)(er, {
                          ...n,
                          onConfirm: () => this.pushToExistingDM(e, l),
                          channelIds: t,
                        }),
                      {},
                      (0, h.modalContextFromAppContext)(this.context.appContext)
                    )
                  : this.pushToExistingDM(e, l);
              } else {
                let e = ec(l);
                l.length > 1 && e.size > 0
                  ? (0, h.openModal)(
                      t =>
                        (0, a.jsx)(er, {
                          ...t,
                          onConfirm: () => this.createNewDM(l),
                          channelIds: e,
                        }),
                      {},
                      (0, h.modalContextFromAppContext)(this.context.appContext)
                    )
                  : this.createNewDM(l);
              }
              n();
            }),
            (this.handleCopyInvite = e => {
              let { channel: t, invite: n } = this.props;
              null != n && (0, Y.copy)(e),
                null != this.copyTimeout && clearTimeout(this.copyTimeout),
                this.setState({ copied: !0 }),
                (this.copyTimeout = setTimeout(() => {
                  this.setState({ copied: !1 });
                }, 1e3)),
                W.default.track(J.AnalyticEvents.COPY_INSTANT_INVITE, {
                  server: null,
                  channel: null != t ? t.id : null,
                  channel_type: null != t ? t.type : null,
                  location: J.AnalyticsLocations.ADD_FRIENDS_TO_DM,
                  code: null != n ? n.code : null,
                });
            });
        }
      }
      eu.contextType = v.default;
      let eo = f.default.connectStores([P.default, O.default, w.default], e => {
        let t,
          { channel: n } = e;
        return (
          null != n &&
            null != (t = O.default.getInvite(n.id)) &&
            t.isExpired() &&
            (t = null),
          {
            ...P.default.getState(),
            invite: t,
            hideDiscriminator: w.default.hidePersonalInformation,
            hideInstantInvites: w.default.hideInstantInvites,
          }
        );
      })(eu);
      function ed(e) {
        let {
            channel: t,
            iconClassName: n,
            icon: s,
            tooltip: i,
            tooltipPosition: r = "bottom",
            popoutPosition: u = "bottom",
            popoutAlign: o = "right",
            subscribeToGlobalHotkey: d = !1,
          } = e,
          [c, f] = l.useState(
            null != t && t.isGroupDM() && 0 === t.recipients.length
          ),
          m = (0, N.useIsBroadcastingGDM)(null == t ? void 0 : t.id),
          p = l.useCallback(() => f(e => !e), []);
        return (l.useEffect(
          () => (
            d &&
              z.ComponentDispatch.subscribe(
                J.ComponentActions.TOGGLE_DM_CREATE,
                p
              ),
            () => {
              z.ComponentDispatch.unsubscribe(
                J.ComponentActions.TOGGLE_DM_CREATE,
                p
              );
            }
          ),
          [d, p]
        ),
        m)
          ? null
          : (0, a.jsx)(h.Popout, {
              renderPopout: e =>
                (0, a.jsx)(eo, { ...e, onClose: e.closePopout, channel: t }),
              position: u,
              shouldShow: c,
              align: o,
              onRequestClose: () => f(!1),
              animation: h.Popout.Animation.NONE,
              children: e =>
                (0, a.jsx)(H.default.Icon, {
                  ...e,
                  onClick: p,
                  icon: null != s ? s : null == t ? B.default : G.default,
                  className: n,
                  iconClassName: n,
                  tooltip: i,
                  tooltipPosition: r,
                }),
            });
      }
      function ec(e) {
        let t = ef(e);
        return new Set(
          u(y.default.getMutablePrivateChannels())
            .values()
            .filter(e => (0, L.isMultiUserDM)(e.type))
            .filter(e => ef(e.recipients) === t)
            .map(e => e.id)
            .value()
        );
      }
      function ef(e) {
        return JSON.stringify(e.sort());
      }
    },
    922164: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return m;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("446674"),
        s = n("289867"),
        i = n("217513"),
        r = n("893980"),
        u = n("58351"),
        o = n("982108"),
        d = n("849483"),
        c = n("664336"),
        f = n("49111"),
        h = n("782340");
      function m(e) {
        let { channel: t, showCall: n } = e,
          m = (0, l.useStateFromStores)([o.default], () =>
            o.default.getSection(t.id, null == t ? void 0 : t.isDM())
          ),
          p = (0, i.default)(t.getRecipientId()),
          E = (0, u.default)(),
          S = m === f.ChannelSections.PROFILE && !E;
        return (0, a.jsx)(c.Icon, {
          disabled: E || n,
          tooltip:
            E || n
              ? h.default.Messages.SHOW_USER_PROFILE_UNAVAILABLE
              : S
                ? h.default.Messages.HIDE_USER_PROFILE
                : h.default.Messages.SHOW_USER_PROFILE,
          icon: d.default,
          onClick: () => {
            (0, r.trackProfilePanelToggled)(p, !S),
              s.default.toggleProfilePanelSection();
          },
          selected: S && !E && !n,
        });
      }
    },
    391751: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return C;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("446674"),
        i = n("551042"),
        r = n("77078"),
        u = n("277734"),
        o = n("774298"),
        d = n("408815"),
        c = n("13355"),
        f = n("217736"),
        h = n("778588"),
        m = n("561359"),
        p = n("664336"),
        E = n("324252"),
        S = n("782340"),
        g = n("209515"),
        C = l.memo(function (e) {
          let { channel: t } = e,
            C = (0, o.useInappropriateConversationSafetyToolsWarningForChannel)(
              t.id
            ),
            _ = (0, d.useShouldShowInitialSafetyToolsButtonTooltip)(t.id),
            I = (0, c.useSafetyToolsButtonTooltipForChannel)(t.id),
            T = (0, i.useHasAnyModalOpen)(),
            v = (0, s.useStateFromStores)([h.default], () =>
              h.default.hasLayers()
            ),
            x = l.useCallback(
              () =>
                _
                  ? S.default.Messages
                      .INAPPROPRIATE_CONVERSATION_INITIAL_TOOLTIP
                  : null != I
                    ? S.default.Messages
                        .INAPPROPRIATE_CONVERSATION_SAFETY_TOOLTIP
                    : null,
              [_, I]
            ),
            N = l.useMemo(() => (_ || null != I) && !T && !v, [_, I, T, v]),
            [A, M] = l.useState(x());
          l.useEffect(() => {
            null != I &&
              null != C &&
              (r.AccessibilityAnnouncer.announce(
                S.default.Messages
                  .INAPPROPRIATE_CONVERSATION_SAFETY_TOOLTIP_ANNOUNCEMENT
              ),
              setTimeout(() => {
                (0, u.dismissChannelSafetyWarnings)(t.id, [I.id]);
              }, 5e3),
              (0, f.trackNamedViewEvent)({
                channelId: t.id,
                senderId: t.getRecipientId(),
                warningId: I.id,
                warningType: I.type,
                isNudgeWarning: null != I,
                viewName: f.ViewNameTypes.SAFETY_TOOLS_NUDGE_TOOLTIP,
              })),
              _ &&
                (r.AccessibilityAnnouncer.announce(
                  S.default.Messages
                    .INAPPROPRIATE_CONVERSATION_INITIAL_TOOLTIP_ANNOUNCEMENT
                ),
                setTimeout(() => {
                  (0, u.acknowledgeChannelSafetyWarningTooltip)(t.id);
                }, 5e3));
          }, [t, I, C, _]),
            l.useEffect(() => {
              null != C &&
                (0, f.trackNamedViewEvent)({
                  channelId: t.id,
                  senderId: t.getRecipientId(),
                  warningId: C.id,
                  warningType: C.type,
                  isNudgeWarning: null != I,
                  viewName: f.ViewNameTypes.SAFETY_TOOLS_BUTTON,
                });
            }, []),
            l.useEffect(() => {
              let e = x();
              null != e && M(e);
            }, [_, I, x]);
          let R = l.useCallback(() => {
            null != I && (0, u.dismissChannelSafetyWarnings)(t.id, [I.id]),
              null != C &&
                ((0, r.openModalLazy)(
                  async () => {
                    let { default: e } = await n
                      .el("161297")
                      .then(n.bind(n, "161297"));
                    return n => {
                      let { onClose: l, transitionState: s } = n;
                      return (0, a.jsx)(e, {
                        otherUserId: t.getRecipientId(),
                        channelId: t.id,
                        warningId: C.id,
                        warningType: C.type,
                        onClose: l,
                        transitionState: s,
                      });
                    };
                  },
                  { modalKey: E.SAFETY_TOOLS_MODAL_KEY }
                ),
                (0, f.trackCtaEvent)({
                  channelId: t.id,
                  senderId: t.getRecipientId(),
                  warningId: C.id,
                  warningType: C.type,
                  cta: f.CtaEventTypes.USER_SAFETY_TOOLS_BUTTON_CLICK,
                  isNudgeWarning: null != I,
                }));
          }, [I, C, t]);
          return null == C
            ? null
            : (0, a.jsx)(r.Tooltip, {
                forceOpen: N,
                text: A,
                color: r.TooltipColors.BRAND,
                position: "bottom",
                tooltipClassName: g.tooltip,
                tooltipContentClassName: g.tooltipContent,
                children: () =>
                  (0, a.jsx)(p.default.Icon, {
                    icon: m.default,
                    onClick: R,
                    tooltip: S.default.Messages.SAFETY_TOOLS_BUTTON_LABEL,
                    tooltipDisabled: null != I,
                  }),
              });
        });
    },
    148205: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return C;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("917351"),
        i = n.n(s),
        r = n("446674"),
        u = n("242740"),
        o = n("889014"),
        d = n("848848"),
        c = n("300322"),
        f = n("957255"),
        h = n("800762"),
        m = n("887657"),
        p = n("664336"),
        E = n("659500"),
        S = n("49111"),
        g = n("782340"),
        C = l.memo(function (e) {
          let { channel: t } = e,
            n = (0, o.default)(),
            s = (0, r.useStateFromStores)([h.default], () =>
              h.default.isInChannel(t.id)
            ),
            C = (0, r.useStateFromStores)(
              [h.default],
              () => !i.isEmpty(h.default.getVoiceStatesForChannel(t.id))
            ),
            _ = (0, r.useStateFromStores)([f.default], () =>
              f.default.can(S.Permissions.CONNECT, t)
            ),
            { needSubscriptionToAccess: I } = (0, d.default)(t.id),
            T = (0, c.useIsActiveChannelOrUnarchivableThread)(t),
            v = l.useCallback(() => {
              u.default.handleVoiceConnect({
                channel: t,
                connected: s,
                needSubscriptionToAccess: I,
                locked: !1,
              });
            }, [t, s, I]);
          return (l.useEffect(
            () => (
              E.ComponentDispatch.subscribe(S.ComponentActions.CALL_START, v),
              () => {
                E.ComponentDispatch.unsubscribe(
                  S.ComponentActions.CALL_START,
                  v
                );
              }
            ),
            [v]
          ),
          c.VoiceInThreadsExperiment.useExperiment(
            { guildId: t.guild_id, location: "63250c_1" },
            { autoTrackExposure: !1 }
          ).enabled &&
            !n &&
            !s &&
            _ &&
            T &&
            t.isVocalThread())
            ? (0, a.jsx)(p.default.Icon, {
                icon: m.default,
                onClick: v,
                tooltip: C
                  ? g.default.Messages.JOIN_VOICE_CALL
                  : g.default.Messages.START_VOICE_CALL,
              })
            : null;
        });
    },
    431923: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        }),
        n("222007");
      var a = n("37983");
      n("884691");
      var l = n("414456"),
        s = n.n(l),
        i = n("446674"),
        r = n("397485"),
        u = n("170152"),
        o = n("782340"),
        d = n("613429");
      function c(e) {
        let t,
          { channelId: n, userId: l } = e,
          [c, f] = (0, i.useStateFromStoresArray)([u.default], () => [
            u.default.getWaitingHighFive(n, l),
            u.default.getCompletedHighFive(n, l),
          ]);
        if (null != f)
          t = (0, a.jsxs)(a.Fragment, {
            children: [
              (0, a.jsx)("img", {
                alt: o.default.Messages.CALL_HIGH_FIVE_EXCLAMATION,
                src: (0, r.getEffectUrl)({
                  name: f[0],
                  id: null,
                  animated: !1,
                }),
                className: s(d.completeLeft, d.highFive),
              }),
              (0, a.jsx)("img", {
                alt: o.default.Messages.CALL_HIGH_FIVE_EXCLAMATION,
                src: (0, r.getEffectUrl)({
                  name: f[1],
                  id: null,
                  animated: !1,
                }),
                className: s(d.completeRight, d.highFive),
              }),
            ],
          });
        else {
          if (null == c) return null;
          t = (0, a.jsx)("img", {
            alt: o.default.Messages.CALL_HIGH_FIVE_EXCLAMATION,
            src: (0, r.getEffectUrl)({ name: c, id: null, animated: !1 }),
            className: s(d.waiting, d.highFive),
          });
        }
        return (0, a.jsx)("div", { className: d.root, children: t });
      }
    },
    969103: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var a = n("884691"),
        l = n("446674"),
        s = n("928265"),
        i = n("204743"),
        r = n("26989"),
        u = n("697218"),
        o = n("49111"),
        d = n("237542"),
        c = e => {
          let t = (0, l.useStateFromStores)([i.default], () =>
              (null == e ? void 0 : e.hasFeature(o.GuildFeatures.HUB))
                ? i.default.hasViewedPrompt(
                    d.GuildPrompts.REAL_NAME_PROMPT,
                    e.id
                  )
                : null
            ),
            n = (0, l.useStateFromStores)([u.default], () =>
              u.default.getCurrentUser()
            ),
            c = (0, l.useStateFromStores)([r.default], () =>
              (null == e ? void 0 : e.id) != null && null != n
                ? r.default.getMember(null == e ? void 0 : e.id, n.id)
                : null
            ),
            f = (null == c ? void 0 : c.nick) != null;
          return (
            a.useEffect(() => {
              f &&
                null != e &&
                !1 === t &&
                s.default.viewPrompt(d.GuildPrompts.REAL_NAME_PROMPT, e.id);
            }, [f, e, t]),
            !1 === t && !f
          );
        };
    },
    177589: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var a = n("429928"),
        l = n("36539"),
        s = n("502651"),
        i = n("671071"),
        r = n("322631"),
        u = n("947297");
      function o(e) {
        return (0, l.default)(e)
          ? u.XBOX_APPLICATION_ID_PREFIX + e.name
          : (0, a.default)(e) && null != e.party && null != e.party.id
            ? i.SpotifyApplication.id
            : (0, s.default)(e) && null != e.url
              ? r.TWITCH_APPLICATION_ID_PREFIX + e.url
              : null != e.application_id
                ? e.application_id
                : null;
      }
    },
    666391: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("77078"),
        s = n("635357"),
        i = n("49111");
      function r(e) {
        let {
          initialPlanId: t,
          activeSubscription: r,
          trialId: u,
          trialFooterMessageOverride: o,
          onClose: d,
          analyticsObject: c,
          analyticsLocation: f,
          analyticsLocations: h,
          analyticsSubscriptionType: m,
          renderHeader: p,
          renderPurchaseConfirmation: E,
          planGroup: S,
          reviewWarningMessage: g,
          skuId: C,
        } = e;
        (0, l.openModalLazy)(
          async () => {
            let { PaymentContextProvider: e } = await n
                .el("642906")
                .then(n.bind(n, "642906")),
              { PaymentModal: l } = await n
                .el("385179")
                .then(n.bind(n, "385179")),
              { STEPS: i } = await n.el("646139").then(n.bind(n, "646139"));
            return n => {
              let { onClose: _, ...I } = n;
              return (0, a.jsx)(e, {
                activeSubscription: r,
                stepConfigs: i,
                skuIDs: [C],
                children: (0, a.jsx)(s.GiftContextProvider, {
                  children: (0, a.jsx)(l, {
                    ...I,
                    initialPlanId: t,
                    onClose: e => {
                      _(), null == d || d(e);
                    },
                    analyticsLocations: h,
                    analyticsObject: c,
                    analyticsLocation: f,
                    analyticsSubscriptionType: m,
                    skuId: C,
                    renderHeader: p,
                    renderPurchaseConfirmation: E,
                    planGroup: S,
                    trialId: u,
                    trialFooterMessageOverride: o,
                    reviewWarningMessage: g,
                  }),
                }),
              });
            };
          },
          {
            onCloseCallback: () => {
              null == d || d(!1);
            },
            onCloseRequest: i.NOOP,
          }
        );
      }
    },
    719761: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("232268"),
        i = n("759432"),
        r = n("798592"),
        u = n("39141");
      function o(e) {
        let { callTileRef: t, isFiring: n } = e,
          a = (0, r.default)(),
          s = (0, i.default)(t);
        return (
          l.useEffect(() => {
            n &&
              null != s &&
              null != t &&
              a.fire(s.x + t.clientWidth / 2, s.y + t.clientHeight / 2, {
                countMultiplier: 4,
              });
          }, [t, a, n, s]),
          null
        );
      }
      function d(e) {
        return (0, a.jsx)(s.default, {
          confettiLocation: u.ConfettiLocation.CALL_TILE,
          children: (0, a.jsx)(o, { ...e }),
        });
      }
    },
    835040: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("65597"),
        s = n("77078"),
        i = n("880731"),
        r = n("300586");
      function u(e) {
        let { isShaking: t, shakeLocation: n, children: u, className: o } = e,
          d = (0, r.default)(n),
          c = (0, l.default)([i.default], () =>
            i.default.isEnabled({ shakeLocation: n })
          );
        return c
          ? (0, a.jsx)(s.Shaker, {
              isShaking: t,
              intensity: d,
              className: o,
              children: u,
            })
          : (0, a.jsx)(a.Fragment, { children: u });
      }
    },
    292508: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return H;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("627445"),
        u = n.n(r),
        o = n("90915"),
        d = n("446674"),
        c = n("77078"),
        f = n("988738"),
        h = n("244201"),
        m = n("206230"),
        p = n("320679"),
        E = n("191225"),
        S = n("229661"),
        g = n("812204"),
        C = n("685665"),
        _ = n("338733"),
        I = n("779601"),
        T = n("967889"),
        v = n("160139"),
        x = n("983689"),
        N = n("628922"),
        A = n("928741"),
        M = n("915639"),
        R = n("161778"),
        j = n("168973"),
        L = n("471671"),
        y = n("983782"),
        O = n("587974"),
        P = n("773336"),
        D = n("439932"),
        b = n("50885"),
        U = n("336921"),
        w = n("292687"),
        F = n("49111"),
        V = n("782340"),
        k = n("928319");
      class B extends l.Component {
        componentDidMount() {
          let { guestWindow: e } = this.props,
            t = e.document,
            n = t.querySelector("title");
          null == n &&
            null != t.head &&
            t.head.appendChild(t.createElement("title")),
            this.updateTitle(),
            this.updateFontScale(),
            this.updateLocale(),
            this.updateClientTheme(),
            this.updateSaturationFactor(),
            (0, U.setupWindow)(e),
            e.addEventListener("blur", this.handleBlur),
            t.addEventListener("contextmenu", this.handleContextMenu, !0),
            e.addEventListener("beforeunload", this.warnPopoutClose);
        }
        componentDidUpdate(e) {
          let {
            title: t,
            fontScale: n,
            locale: a,
            clientThemesCSS: l,
          } = this.props;
          e.title !== t && this.updateTitle(),
            e.fontScale !== n && this.updateFontScale(),
            e.locale !== a && this.updateLocale(),
            e.clientThemesCSS !== l && this.updateClientTheme(),
            e.saturation !== this.props.saturation &&
              this.updateSaturationFactor();
        }
        componentWillUnmount() {
          let { guestWindow: e } = this.props,
            t = e.document;
          e.removeEventListener("blur", this.handleBlur),
            t.removeEventListener("contextmenu", this.handleContextMenu, !0),
            c.useModalsStore.setState(e => ({
              ...e,
              [c.POPOUT_MODAL_CONTEXT]: [],
            })),
            e.removeEventListener("beforeunload", this.warnPopoutClose);
        }
        updateSaturationFactor() {
          let { saturation: e, guestWindow: t } = this.props,
            n = t.document.documentElement;
          u(null != n, "Window document element was null"),
            n.style.setProperty("--saturation-factor", e.toString());
        }
        updateLocale() {
          let { locale: e, guestWindow: t } = this.props,
            n = t.document.documentElement;
          u(null != n, "Window document element was null"), (n.lang = e);
        }
        updateTitle() {
          let { title: e, guestWindow: t } = this.props,
            n = t.document.querySelector("title");
          null != n && (n.innerText = e);
        }
        updateFontScale() {
          let { fontScale: e, guestWindow: t } = this.props,
            n = t.document.documentElement;
          u(null != n, "Window document element was null"),
            (n.style.fontSize = "".concat(e, "%"));
        }
        updateClientTheme() {
          let { clientThemesCSS: e, guestWindow: t } = this.props,
            n = t.document,
            a = (0, n.head);
          u(null != a, "Window document ".concat("head", " was null"));
          let l = a.querySelector(
            "style[".concat(_.CLIENT_THEMES_DATA_ATTRIBUTE, "]")
          );
          if (null != l) {
            l.textContent = e;
            return;
          }
          let s = n.createElement("style");
          s.setAttribute(_.CLIENT_THEMES_DATA_ATTRIBUTE, "true"),
            (s.textContent = e),
            a.appendChild(s);
        }
        render() {
          let {
              theme: e,
              forcedColors: t,
              focused: n,
              appFocused: l,
              children: s,
              windowKey: r,
              mouseModeEnabled: u,
              keyboardModeEnabled: d,
              reducedMotionEnabled: m,
              fontScaleClass: E,
              saturation: S,
              withTitleBar: g,
              guestWindow: C,
              clientThemesClassName: _,
              contentClassName: x,
            } = this.props,
            N = (0, P.getPlatform)(),
            M = i(E, {
              "mouse-mode": u,
              "reduce-motion": m,
              "full-motion": !m,
              "keyboard-mode": d,
              "app-focused": n || l,
              "low-saturation": S <= 0.4,
            });
          return (0, a.jsx)(o.BrowserRouter, {
            children: (0, a.jsx)(
              A.default,
              {
                children: (0, a.jsx)(c.ThemeContextProvider, {
                  theme: e,
                  children: (0, a.jsx)(c.RedesignIconContextProvider, {
                    children: (0, a.jsx)("div", {
                      "data-popout-root": !0,
                      ref: this.rootRef,
                      className: i(
                        (0, D.getThemeClass)(e),
                        (0, I.default)(),
                        M,
                        _
                      ),
                      children: (0, a.jsx)(c.FocusRingScope, {
                        containerRef: this.rootRef,
                        children: (0, a.jsx)(p.default, {
                          children: (0, a.jsxs)(T.default, {
                            children: [
                              (0, a.jsx)(O.MaskLibrary, {}),
                              (0, a.jsx)(h.AppWindowContextProvider, {
                                appContext: F.AppContext.POPOUT,
                                renderWindow: C,
                                children: (0, a.jsxs)(y.AppLayerProvider, {
                                  children: [
                                    (0, a.jsxs)("div", {
                                      className: k.popout,
                                      children: [
                                        g && null != N
                                          ? (0, a.jsx)(v.default, {
                                              focused: n,
                                              type: N,
                                              windowKey: r,
                                              macOSFrame: !0,
                                            })
                                          : null,
                                        (0, a.jsx)("div", {
                                          className: i(k.content, x),
                                          children: s,
                                        }),
                                      ],
                                    }),
                                    (0, a.jsx)(c.Modals, {}),
                                    (0, a.jsx)(f.default, {}),
                                    (0, a.jsx)(y.AppLayerContainer, {}),
                                  ],
                                }),
                              }),
                            ],
                          }),
                        }),
                      }),
                    }),
                  }),
                }),
              },
              t
            ),
          });
        }
        constructor(...e) {
          super(...e),
            (this.rootRef = l.createRef()),
            (this._cleanupWindowActionCreators = void 0),
            (this.warnPopoutClose = e => {
              this.props.connectedToEmbeddedActivity &&
                !j.default.disableEmbeddedActivityPopOutAlert &&
                ((e.returnValue =
                  V.default.Messages.EMBEDDED_ACTIVITIES_ARE_YOU_SURE_WANT_TO_LEAVE),
                P.isPlatformEmbedded &&
                  (0, S.default)(() => {
                    w.default.unmountWindow(this.props.windowKey),
                      P.isPlatformEmbedded &&
                        b.default.close(this.props.windowKey);
                  }));
            }),
            (this.handleBlur = () => {
              var e, t;
              null === (e = (t = this.props).onBlur) ||
                void 0 === e ||
                e.call(t);
            }),
            (this.handleContextMenu = e => {
              e.preventDefault();
            });
        }
      }
      B.defaultProps = { withTitleBar: !0 };
      let G = l.forwardRef(function (e, t) {
        let { guestWindow: n, focused: l } = (0, d.useStateFromStoresObject)(
          [w.default],
          () => ({
            guestWindow: w.default.getWindow(e.windowKey),
            focused: w.default.getWindowFocused(e.windowKey),
          })
        );
        u(null != n, "Missing guestWindow reference");
        let s = (0, d.useStateFromStores)([L.default], () =>
            L.default.isFocused()
          ),
          { locale: i, theme: r } = (0, d.useStateFromStoresObject)(
            [R.default, M.default],
            () => ({ locale: M.default.locale, theme: R.default.theme })
          ),
          o = (0, d.useStateFromStores)([m.default], () =>
            m.default.useForcedColors ? "yes" : "no"
          ),
          {
            fontScale: f,
            keyboardModeEnabled: h,
            reducedMotionEnabled: p,
            fontScaleClass: S,
            saturation: I,
          } = (0, d.useStateFromStoresObject)([m.default], () => ({
            fontScale: m.default.fontScale,
            keyboardModeEnabled: m.default.keyboardModeEnabled,
            reducedMotionEnabled: m.default.useReducedMotion,
            fontScaleClass: m.default.fontScaleClass,
            saturation: m.default.saturation,
          })),
          T = (0, d.useStateFromStores)(
            [E.default],
            () =>
              null != e.channelId &&
              null !== E.default.getSelfEmbeddedActivityForChannel(e.channelId)
          );
        (0, x.default)(n, !1);
        let v = (0, N.default)(n, l),
          { AnalyticsLocationProvider: A } = (0, C.default)(
            g.default.POPOUT_WINDOW
          ),
          { clientThemesClassName: j, clientThemesCSS: y } = (0, _.default)();
        return null == n
          ? null
          : (0, a.jsx)(c.DnDProvider, {
              children: (0, a.jsx)(A, {
                children: (0, a.jsx)(B, {
                  ref: t,
                  ...e,
                  guestWindow: n,
                  focused: l,
                  appFocused: s,
                  locale: i,
                  theme: r,
                  forcedColors: o,
                  fontScale: f,
                  keyboardModeEnabled: h,
                  mouseModeEnabled: v,
                  reducedMotionEnabled: p,
                  connectedToEmbeddedActivity: T,
                  fontScaleClass: S,
                  saturation: I,
                  clientThemesClassName: j,
                  clientThemesCSS: y,
                }),
              }),
            });
      });
      var H = G;
    },
    788220: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        }),
        n("222007");
      var a = n("884691"),
        l = n("862337");
      function s(e, t) {
        let [n, s] = a.useState(!1),
          i = a.useRef(new l.DelayedCall(t, () => s(!1))),
          r = a.useRef(new l.DelayedCall(e, () => s(!0))),
          u = a.useCallback(() => {
            i.current.cancel(), r.current.cancel();
          }, []);
        a.useEffect(() => u, [u]);
        let o = a.useCallback(() => {
            u(), i.current.delay();
          }, [u]),
          d = a.useCallback(() => {
            u(), r.current.delay();
          }, [u]);
        return {
          isHovered: n,
          setIsHovered: s,
          onMouseEnter: d,
          onMouseLeave: o,
          cancelTimers: u,
        };
      }
    },
    635792: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return C;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("446674"),
        u = n("77078"),
        o = n("685665"),
        d = n("649844"),
        c = n("393414"),
        f = n("697218"),
        h = n("471671"),
        m = n("181114"),
        p = n("978679"),
        E = n("49111"),
        S = n("782340"),
        g = n("455701"),
        C = function (e) {
          let {
              subscriptionTier: t,
              onClick: n,
              size: s,
              className: C,
              buttonText: _,
              buttonTextClassName: I,
              onSubscribeModalClose: T,
              premiumModalAnalyticsLocation: v,
              disableShine: x,
              giftMessage: N,
              giftRecipient: A,
              ...M
            } = e,
            R = (0, r.useStateFromStores)([f.default], () =>
              f.default.getCurrentUser()
            ),
            j = (0, r.useStateFromStores)([h.default], () =>
              h.default.isFocused()
            ),
            [L, y] = l.useState(!1),
            { analyticsLocations: O } = (0, o.default)();
          return (0, a.jsxs)(m.default, {
            pauseAnimation: !j || x,
            size: s,
            className: i(g.giftButton, C),
            onlyShineOnHover: !0,
            innerClassName: g.innerGiftButton,
            color: u.Button.Colors.PRIMARY,
            onClick: e => {
              if ((e.preventDefault(), null == R)) {
                (0, c.transitionTo)(E.Routes.LOGIN);
                return;
              }
              null == n || n(e),
                (0, d.default)({
                  isGift: !0,
                  subscriptionTier: t,
                  analyticsLocations: O,
                  analyticsObject: {
                    object: E.AnalyticsObjects.BUTTON_CTA,
                    objectType: E.AnalyticsObjectTypes.GIFT,
                    ...v,
                  },
                  onClose: T,
                  giftMessage: N,
                  giftRecipient: A,
                });
            },
            onMouseEnter: () => y(!0),
            onMouseLeave: () => y(!1),
            ...M,
            children: [
              (0, a.jsx)("div", {
                className: i(g.gradientBackground, {
                  [g.gradientBackgroundHover]: L,
                }),
              }),
              (0, a.jsx)(p.default, { className: g.giftIcon }),
              (0, a.jsx)(u.Text, {
                variant: "text-sm/medium",
                color: "none",
                className: i(g.buttonText, I),
                children:
                  null != _ ? _ : S.default.Messages.PREMIUM_GIFTING_BUTTON,
              }),
            ],
          });
        };
    },
    724110: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return T;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("746379"),
        i = n.n(s),
        r = n("77078"),
        u = n("716241"),
        o = n("368639"),
        d = n("33942"),
        c = n("506885"),
        f = n("401642"),
        h = n("315102"),
        m = n("701909"),
        p = n("253981"),
        E = n("252063"),
        S = n("49111"),
        g = n("782340"),
        C = n("473240"),
        _ = n("271861");
      let I = new Set(["Spacebar", " ", "Enter"]);
      function T(e) {
        let { channelId: t, transitionState: n, onClose: s } = e,
          {
            fetched: T,
            applicationsShelf: v,
            installedIntegrations: x,
          } = (0, E.usePrivateChannelIntegrationState)({ channelId: t });
        l.useEffect(() => {
          (0, u.trackWithMetadata)(S.AnalyticEvents.GDM_STARTER_APPS_VIEWED);
        }, []);
        let N = e => {
            var t;
            (0, c.default)(
              null !== (t = null == e ? void 0 : e.id) && void 0 !== t ? t : "",
              null == e ? void 0 : e.getAvatarURL(void 0, 80),
              { dispatchWait: !0 }
            );
          },
          A = (e, t) => {
            I.has(e.key) && N(t);
          },
          M = l.useCallback(
            e => {
              let { application: t, location: n } = e;
              if (null == n) return !1;
              let { host: a, path: l } = i.parse(n, !0),
                r =
                  p.default.isDiscordHostname(a) || window.location.host === a;
              return (
                !!r &&
                l === S.Routes.OAUTH2_AUTHORIZED &&
                (null != t && s(), !0)
              );
            },
            [s]
          );
        return (0, a.jsxs)(r.ModalRoot, {
          transitionState: n,
          size: r.ModalSize.DYNAMIC,
          className: C.modal,
          children: [
            (0, a.jsx)(r.ModalContent, {
              className: C.modalContent,
              children: (0, a.jsxs)(a.Fragment, {
                children: [
                  (0, a.jsx)("img", { src: _, alt: "", className: C.image }),
                  (0, a.jsxs)("div", {
                    className: C.headingContainer,
                    children: [
                      (0, a.jsx)(r.Heading, {
                        variant: "heading-xl/bold",
                        className: C.modalHeader,
                        children:
                          g.default.Messages.PRIVATE_CHANNEL_AVAILABLE_APPS,
                      }),
                      (0, a.jsx)(r.Text, {
                        variant: "text-md/medium",
                        className: C.modalHeader,
                        children:
                          g.default.Messages.PRIVATE_CHANNEL_INTEGRATION_MORE_APPS_INFO_LINKED.format(
                            {
                              helpCenterLink: m.default.getArticleURL(
                                S.HelpdeskArticles.PRIVATE_CHANNEL_INTEGRATIONS
                              ),
                            }
                          ),
                      }),
                    ],
                  }),
                  (0, a.jsx)("div", {
                    className: C.applicationRowContainer,
                    children: T
                      ? v.map(e => {
                          if (null != x.find(t => t.application.id === e.id))
                            return null;
                          let n =
                              null != e.description
                                ? (0, o.parseBioReact)(e.description)
                                : null,
                            l = h.default.getApplicationIconURL({
                              id: e.id,
                              icon: e.icon,
                              size: 40,
                            }),
                            s = (0, a.jsxs)(a.Fragment, {
                              children: [
                                null != l &&
                                  (0, a.jsx)("img", {
                                    className: C.applicationIcon,
                                    alt: "",
                                    "aria-hidden": !0,
                                    src: l,
                                    width: 40,
                                    height: 40,
                                  }),
                                (0, a.jsxs)("div", {
                                  className: C.applicationRowContent,
                                  children: [
                                    (0, a.jsxs)("div", {
                                      className: C.applicationText,
                                      children: [
                                        (0, a.jsx)(r.Heading, {
                                          variant: "heading-md/medium",
                                          children: e.name,
                                        }),
                                        null != e.description &&
                                          (0, a.jsx)(r.Text, {
                                            variant: "text-sm/normal",
                                            color: "text-muted",
                                            lineClamp: 1,
                                            children: n,
                                          }),
                                      ],
                                    }),
                                    (0, a.jsx)(r.Button, {
                                      type: "button",
                                      innerClassName: C.applicationButtonHack,
                                      onClick: n => {
                                        n.stopPropagation(),
                                          (0, d.openOAuth2Modal)({
                                            clientId: e.id,
                                            scopes: [
                                              S.OAuth2Scopes
                                                .APPLICATIONS_COMMANDS,
                                            ],
                                            channelId: t,
                                            disableGuildSelect: !0,
                                            callback: M,
                                          });
                                      },
                                      size: r.Button.Sizes.SMALL,
                                      color: r.Button.Colors.PRIMARY,
                                      children: g.default.Messages.ADD,
                                    }),
                                  ],
                                }),
                              ],
                            }),
                            { bot: i } = e;
                          return null != i
                            ? (0, a.jsx)(
                                r.ClickableContainer,
                                {
                                  onMouseDown: () => N(i),
                                  onKeyDown: e => A(e, i),
                                  className: C.applicationRow,
                                  onClick: () => {
                                    (0, f.openUserProfileModal)({
                                      userId: i.id,
                                      channelId: t,
                                      analyticsLocation: {
                                        section:
                                          S.AnalyticsSections
                                            .ADD_PRIVATE_CHANNEL_INTEGRATION_MODAL,
                                      },
                                    });
                                  },
                                  "aria-label":
                                    g.default.Messages.PRIVATE_CHANNEL_INTEGRATION_ADD_MODAL_ROW_INFO.format(
                                      { appName: e.name }
                                    ),
                                  children: s,
                                },
                                e.id
                              )
                            : (0, a.jsx)(
                                "div",
                                { className: C.applicationRow, children: s },
                                e.id
                              );
                        })
                      : (0, a.jsx)(r.Spinner, {
                          className: C.spinner,
                          type: r.Spinner.Type.SPINNING_CIRCLE,
                        }),
                  }),
                ],
              }),
            }),
            (0, a.jsxs)(r.ModalFooter, {
              className: C.modalFooter,
              children: [
                (0, a.jsx)(r.Button, {
                  onClick: s,
                  children: g.default.Messages.DONE,
                }),
                (0, a.jsx)(r.Button, {
                  look: r.Button.Looks.LINK,
                  onClick: s,
                  color: r.Button.Colors.PRIMARY,
                  children: g.default.Messages.CANCEL,
                }),
              ],
            }),
          ],
        });
      }
    },
    632892: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          FeatureBorderTypes: function () {
            return l;
          },
          default: function () {
            return c;
          },
        });
      var a,
        l,
        s = n("37983"),
        i = n("884691"),
        r = n("414456"),
        u = n.n(r),
        o = n("834832");
      ((a = l || (l = {})).PREMIUM = "premium"), (a.LIMITED = "limited");
      let d = {
        premium: {
          border: o.premiumFeatureBorder,
          background: o.premiumBackground,
        },
        limited: {
          border: o.limitedFeatureBorder,
          background: o.limitedBackground,
        },
      };
      var c = i.forwardRef(function (e, t) {
        let {
          children: n,
          type: a = "premium",
          isShown: l,
          hasBackground: i = !1,
          className: r,
          backgroundClassName: c,
        } = e;
        if (!l) return (0, s.jsx)(s.Fragment, { children: n });
        let { border: f, background: h } = d[a];
        return (0, s.jsx)("div", {
          ref: t,
          className: u(f, r),
          children: (0, s.jsx)("div", {
            className: u(i ? h : o.background, c),
            children: n,
          }),
        });
      });
    },
    23033: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return O;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("446674"),
        u = n("77078"),
        o = n("79112"),
        d = n("191145"),
        c = n("582415"),
        f = n("908583"),
        h = n("824563"),
        m = n("697218"),
        p = n("433487"),
        E = n("815496"),
        S = n("448881"),
        g = n("879364"),
        C = n("2973"),
        _ = n("588025"),
        I = n("227231"),
        T = n("534801"),
        v = n("315130"),
        x = n("762985"),
        N = n("275986"),
        A = n("385416"),
        M = n("255697"),
        R = n("49111"),
        j = n("99795"),
        L = n("782340"),
        y = n("140999"),
        O = function (e) {
          var t, n;
          let { channelId: s } = e,
            O = l.useContext(f.IdleStateContext),
            P = (0, r.useStateFromStores)([m.default], () =>
              m.default.getCurrentUser()
            ),
            { isCurrentUserStreamingQuestApplication: D, quest: b } = (0,
            r.useStateFromStoresObject)(
              [h.default, d.default, C.default],
              () => {
                let e = d.default.getParticipants(s),
                  t = (function (e, t, n) {
                    for (let l of e)
                      if (l.type === j.ParticipantTypes.STREAM) {
                        var a;
                        let e = (0, c.getStreamerApplication)(l.stream, n),
                          s =
                            (null == e ? void 0 : e.id) != null
                              ? (0, I.getQuestByApplicationId)(t, e.id)
                              : null;
                        if (
                          null != s &&
                          (null === (a = s.userStatus) || void 0 === a
                            ? void 0
                            : a.claimedAt) == null
                        )
                          return s;
                      }
                    return null;
                  })(e, C.default.quests, h.default),
                  n =
                    null != t &&
                    null != P &&
                    (function (e, t, n, a) {
                      for (let s of e) {
                        var l;
                        if (
                          s.type === j.ParticipantTypes.STREAM &&
                          s.user.id === n.id &&
                          t.config.applicationId ===
                            (null ===
                              (l = (0, c.getStreamerApplication)(
                                s.stream,
                                a
                              )) || void 0 === l
                              ? void 0
                              : l.id)
                        )
                          return !0;
                      }
                      return !1;
                    })(e, t, P, h.default);
                return { isCurrentUserStreamingQuestApplication: n, quest: t };
              },
              [s, P]
            ),
            U = (0, r.useStateFromStores)(
              [C.default],
              () => null != b && C.default.isEnrolling(b.id),
              [b]
            ),
            w = (0, r.useStateFromStores)(
              [d.default],
              () =>
                ((null == P ? void 0 : P.id) == null
                  ? null
                  : d.default.getParticipant(s, P.id)) != null,
              [s, P]
            ),
            F = (0, g.useQuestFormattedDate)(
              null == b ? void 0 : b.config.expiresAt
            ),
            V = (0, g.useQuestFormattedDate)(
              null == b ? void 0 : b.config.rewardCodeExpiresAt
            ),
            k = l.useCallback(() => {
              null != b &&
                (0, S.enrollInQuest)(b.id, {
                  questContent: _.QuestContent.QUEST_LIVE_STREAM,
                  questContentCTA: E.QuestContentCTA.ACCEPT_QUEST,
                });
            }, [b]),
            B = l.useCallback(() => {
              null != b &&
                ((0, E.trackQuestContentClicked)(
                  b.id,
                  _.QuestContent.QUEST_LIVE_STREAM,
                  E.QuestContentCTA.TRACK_PROGRESS
                ),
                o.default.open(R.UserSettingsSections.INVENTORY));
            }, [b]),
            G = l.useCallback(() => {
              null != b &&
                ((0, E.trackQuestContentClicked)(
                  b.id,
                  _.QuestContent.QUEST_LIVE_STREAM,
                  E.QuestContentCTA.LEARN_MORE
                ),
                o.default.open(R.UserSettingsSections.INVENTORY));
            }, [b]),
            H = (0, A.useHandleClaimQuestsReward)({
              quest: b,
              location: _.QuestContent.QUEST_LIVE_STREAM,
            }),
            W = (0, g.useIsQuestExpired)(b);
          if (null == b) return null;
          let Y =
              (null === (t = b.userStatus) || void 0 === t
                ? void 0
                : t.enrolledAt) != null,
            z =
              (null === (n = b.userStatus) || void 0 === n
                ? void 0
                : n.completedAt) != null,
            K =
              null != b.userStatus &&
              (0, I.isDismissed)(
                b.userStatus,
                _.QuestContent.QUEST_LIVE_STREAM
              ),
            Z =
              null != b.userStatus &&
              (0, I.isDismissed)(b.userStatus, _.QuestContent.QUEST_BAR);
          return K || W || !Z || !w
            ? null
            : (0, a.jsx)(T.QuestContentImpressionTracker, {
                questId: b.id,
                overrideVisibility: !O,
                questContent: _.QuestContent.QUEST_LIVE_STREAM,
                children: () => {
                  var e;
                  return (0, a.jsxs)("div", {
                    className: i(y.wrapper, { [y.wrapperAccepted]: Y }),
                    children: [
                      !Y &&
                        (0, a.jsxs)("div", {
                          className: y.rewardTileWrapper,
                          children: [
                            (0, a.jsx)("img", {
                              alt: b.config.messages.rewardName,
                              className: y.rewardTile,
                              src: (0, I.getRewardAssetUrl)(b.id),
                            }),
                            (0, a.jsx)(x.default, {
                              bgOpacity: 0.32,
                              className: y.promotedTag,
                            }),
                          ],
                        }),
                      (0, a.jsxs)("div", {
                        className: y.content,
                        children: [
                          (0, a.jsxs)("div", {
                            className: y.heading,
                            children: [
                              Y && D
                                ? (0, a.jsx)("img", {
                                    alt: b.config.messages.rewardName,
                                    className: y.rewardTile,
                                    src: (0, I.getRewardAssetUrl)(b.id),
                                  })
                                : (0, a.jsx)("img", {
                                    className: y.gameTile,
                                    alt: b.config.messages.gameTitle,
                                    src: (0, I.getGameTileAssetUrl)(b.id),
                                  }),
                              (0, a.jsxs)("div", {
                                className: y.details,
                                children: [
                                  (0, a.jsxs)("div", {
                                    className: y.headingWithSubmenu,
                                    children: [
                                      (0, a.jsx)(u.Heading, {
                                        className: y.questTitle,
                                        variant: "heading-md/semibold",
                                        color: "header-primary",
                                        children: D
                                          ? (0,
                                            I.getContextualEntrypointHeading)(b)
                                          : L.default.Messages.QUESTS_TITLE.format(
                                              {
                                                questName:
                                                  b.config.messages.questName,
                                              }
                                            ),
                                      }),
                                      (0, a.jsx)(
                                        N.QuestsEntryContextMenuPopout,
                                        {
                                          questContent:
                                            _.QuestContent.QUEST_LIVE_STREAM,
                                          quest: b,
                                          preventIdle: !0,
                                          shouldShowDisclosure:
                                            (null === (e = b.userStatus) ||
                                            void 0 === e
                                              ? void 0
                                              : e.enrolledAt) == null,
                                          children: e =>
                                            (0, a.jsx)(u.Clickable, {
                                              ...e,
                                              className: y.submenuWrapper,
                                              children: (0, a.jsx)(p.default, {
                                                className: y.submenuIcon,
                                              }),
                                            }),
                                        }
                                      ),
                                    ],
                                  }),
                                  (0, a.jsx)(u.Text, {
                                    color: "header-secondary",
                                    variant: "text-xs/medium",
                                    children: z
                                      ? L.default.Messages.QUESTS_CLAIM_BY.format(
                                          { expirationDate: V }
                                        )
                                      : L.default.Messages.QUESTS_AVAILABLE_UNTIL.format(
                                          { expirationDate: F }
                                        ),
                                  }),
                                ],
                              }),
                            ],
                          }),
                          Y && !z && !D && (0, a.jsx)(M.default, { quest: b }),
                          (0, a.jsxs)("div", {
                            className: y.ctas,
                            children: [
                              !Y &&
                                (0, a.jsxs)(a.Fragment, {
                                  children: [
                                    (0, a.jsx)(u.Button, {
                                      className: y.cta,
                                      color: u.Button.Colors.PRIMARY,
                                      fullWidth: !0,
                                      size: u.Button.Sizes.SMALL,
                                      onClick: G,
                                      children:
                                        L.default.Messages.QUESTS_LEARN_MORE_V2,
                                    }),
                                    (0, a.jsx)(u.Button, {
                                      className: y.cta,
                                      color: u.Button.Colors.GREEN,
                                      fullWidth: !0,
                                      onClick: k,
                                      size: u.Button.Sizes.SMALL,
                                      submitting: U,
                                      children:
                                        L.default.Messages.QUESTS_ACCEPT_QUEST,
                                    }),
                                  ],
                                }),
                              Y &&
                                !z &&
                                D &&
                                (0, a.jsx)(v.default, {
                                  color: u.tokens.colors.BG_BRAND,
                                  quest: b,
                                }),
                              Y &&
                                !z &&
                                !D &&
                                (0, a.jsx)(u.Button, {
                                  className: y.cta,
                                  color: u.Button.Colors.BRAND,
                                  fullWidth: !0,
                                  onClick: B,
                                  size: u.Button.Sizes.SMALL,
                                  children:
                                    L.default.Messages
                                      .QUESTS_TRACK_YOUR_PROGRESS,
                                }),
                              z &&
                                (0, a.jsx)(u.Button, {
                                  className: y.cta,
                                  color: u.Button.Colors.BRAND,
                                  fullWidth: !0,
                                  onClick: H,
                                  size: u.Button.Sizes.SMALL,
                                  children:
                                    L.default.Messages.QUESTS_CLAIM_YOUR_REWARD,
                                }),
                            ],
                          }),
                        ],
                      }),
                    ],
                  });
                },
              });
        };
    },
    275986: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          QuestsEntryContextMenu: function () {
            return I;
          },
          QuestsEntryContextMenuPopout: function () {
            return T;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("821455"),
        i = n("923748"),
        r = n("551042"),
        u = n("77078"),
        o = n("272030"),
        d = n("79112"),
        c = n("545158"),
        f = n("124824"),
        h = n("306160"),
        m = n("815496"),
        p = n("448881"),
        E = n("588025"),
        S = n("227231"),
        g = n("49111"),
        C = n("843455"),
        _ = n("782340");
      function I(e) {
        var t;
        let l = (0, S.isDismissible)(e.questContent);
        return (0, a.jsxs)(u.Menu, {
          variant: "fixed",
          onSelect: () => {
            null != e.onSelect ? e.onSelect() : (0, o.closeContextMenu)();
          },
          navId: "quests-entry",
          "aria-label": _.default.Messages.GENERIC_ACTIONS_MENU_LABEL,
          onClose:
            null !== (t = null == e ? void 0 : e.onClose) && void 0 !== t
              ? t
              : C.NOOP,
          children: [
            (0, a.jsxs)(
              u.MenuGroup,
              {
                children: [
                  (0, a.jsx)(u.MenuItem, {
                    id: "get-game",
                    label: _.default.Messages.QUESTS_GET_THIS_GAME,
                    action: () => {
                      (0, m.trackQuestContentClicked)(
                        e.quest.id,
                        e.questContent,
                        m.QuestContentCTA.CONTEXT_MENU_OPEN_GAME_LINK
                      ),
                        (0, c.default)(e.quest.config.getGameLink);
                    },
                    icon: i.LinkExternalMediumIcon,
                  }),
                  e.questContent === E.QuestContent.QUESTS_EMBED &&
                    (0, a.jsx)(u.MenuItem, {
                      id: "share-link",
                      label: _.default.Messages.QUESTS_SHARE_LINK,
                      action: () => {
                        (0, m.trackQuestContentClicked)(
                          e.quest.id,
                          e.questContent,
                          m.QuestContentCTA.CONTEXT_MENU_COPY_LINK
                        ),
                          (0, h.copy)((0, S.getQuestUrl)(e.quest.id));
                      },
                      icon: s.CopyIcon,
                    }),
                ],
              },
              "major-actions"
            ),
            (0, a.jsxs)(
              u.MenuGroup,
              {
                children: [
                  !e.hideLearnMore &&
                    (0, a.jsx)(u.MenuItem, {
                      id: "learn-more",
                      label: _.default.Messages.QUESTS_LEARN_MORE_V2,
                      action: () => {
                        (0, m.trackQuestContentClicked)(
                          e.quest.id,
                          e.questContent,
                          m.QuestContentCTA.CONTEXT_MENU_LEARN_MORE
                        ),
                          d.default.open(g.UserSettingsSections.INVENTORY);
                      },
                    }),
                  e.shouldShowDisclosure &&
                    (0, a.jsx)(u.MenuItem, {
                      id: "display-disclosure",
                      label: _.default.Messages.QUESTS_DISCLOSURE_LABEL,
                      action: () => {
                        (0, m.trackQuestContentClicked)(
                          e.quest.id,
                          e.questContent,
                          m.QuestContentCTA.CONTEXT_MENU_OPEN_DISCLOSURE
                        ),
                          (0, r.openModalLazy)(async () => {
                            let { default: t } = await n
                              .el("970143")
                              .then(n.bind(n, "970143"));
                            return n =>
                              (0, a.jsx)(t, {
                                ...n,
                                questContent: e.questContent,
                                questConfig: e.quest.config,
                              });
                          });
                      },
                    }),
                  l &&
                    (0, a.jsx)(u.MenuItem, {
                      id: "hide-entrypoint",
                      label: _.default.Messages.QUESTS_HIDE_THIS,
                      action: () => {
                        (0, m.trackQuestContentClicked)(
                          e.quest.id,
                          e.questContent,
                          m.QuestContentCTA.CONTEXT_MENU_HIDE_CONTENT
                        ),
                          (0, S.isDismissible)(e.questContent) &&
                            (0, p.dismissQuestContent)(
                              e.quest.id,
                              e.questContent
                            );
                      },
                      subtext: _.default.Messages.QUESTS_FIND_QUEST,
                    }),
                ],
              },
              "minor-actions"
            ),
          ],
        });
      }
      function T(e) {
        let {
            children: t,
            onOpen: n,
            onClose: s,
            preventIdle: i,
            quest: r,
            questContent: o,
            ...d
          } = e,
          c = l.useCallback(() => {
            (0, m.trackQuestContentClicked)(
              r.id,
              o,
              m.QuestContentCTA.OPEN_CONTEXT_MENU
            ),
              null != n && n();
          }, [n, r, o]);
        return (0, a.jsx)(u.Popout, {
          onRequestOpen: c,
          onRequestClose: s,
          renderPopout: e => {
            let { closePopout: t } = e;
            return i
              ? (0, a.jsx)(f.default, {
                  children: (0, a.jsx)(I, {
                    ...d,
                    quest: r,
                    questContent: o,
                    onClose: t,
                  }),
                })
              : (0, a.jsx)(I, { ...d, quest: r, questContent: o, onClose: t });
          },
          animation: u.Popout.Animation.NONE,
          children: e => t(e),
        });
      }
    },
    385416: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useHandleClaimQuestsReward: function () {
            return r;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("77078"),
        i = n("815496");
      function r(e) {
        let { quest: t, location: r } = e;
        return l.useCallback(() => {
          null != t &&
            ((0, i.trackQuestContentClicked)(
              t.id,
              r,
              i.QuestContentCTA.CLAIM_REWARD
            ),
            (0, s.openModalLazy)(async () => {
              let { default: e } = await n.el("36170").then(n.bind(n, "36170"));
              return n => (0, a.jsx)(e, { ...n, quest: t, location: r });
            }));
        }, [t, r]);
      }
    },
    255697: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("414456"),
        s = n.n(l),
        i = n("77078"),
        r = n("227231"),
        u = n("782340"),
        o = n("267678"),
        d = function (e) {
          let { className: t, quest: n } = e;
          return (0, a.jsxs)("div", {
            className: s(o.wrapper, t),
            style: { color: n.config.colors.primary },
            children: [
              (0, a.jsx)("img", {
                alt: n.config.messages.rewardName,
                className: o.rewardTile,
                src: (0, r.getRewardAssetUrl)(n.id),
              }),
              (0, a.jsx)(i.Text, {
                className: o.instructions,
                variant: "text-sm/normal",
                color: "text-normal",
                children:
                  u.default.Messages.QUESTS_ACCEPTED_INSTRUCTIONS_TO_WIN_REWARD.format(
                    {
                      gameTitle: n.config.messages.gameTitle,
                      questReward: n.config.messages.rewardNameWithArticle,
                      streamingDurationRequirement:
                        n.config.streamDurationRequirementMinutes,
                    }
                  ),
              }),
            ],
          });
        };
    },
    767094: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        }),
        n("222007");
      var a = n("446674"),
        l = n("419135"),
        s = n("574933"),
        i = n("692038"),
        r = n("95045"),
        u = n("27618"),
        o = n("744983");
      function d(e) {
        let t = (0, a.useStateFromStores)(
            [o.default, s.default],
            () => {
              var t;
              let n = o.default.getQuery(e),
                a = o.default.getRawResults(e);
              if (null == n || null == a) return [];
              let u = (0, l.createASTHighlighter)(
                null !== (t = n.content) && void 0 !== t ? t : ""
              );
              return a.map(e =>
                e.map(e => {
                  let t = s.default.getMessage(e.id, e.channel_id),
                    n = (0, i.createMessageRecord)(e);
                  return (
                    null != t &&
                      (n = n.merge({
                        attachments: t.attachments,
                        embeds: t.embeds,
                      })),
                    n.isSearchHit
                      ? n.set(
                          "customRenderedContent",
                          (0, r.default)(n, {
                            postProcessor: u,
                            allowHeading: !0,
                            allowList: !0,
                          })
                        )
                      : n
                  );
                })
              );
            },
            [e],
            a.statesWillNeverBeEqual
          ),
          [n, d] = (0, a.useStateFromStores)(
            [u.default],
            () => {
              let e = 0,
                n = t.map(t =>
                  t.filter(t => {
                    let n = u.default.isBlocked(t.author.id);
                    return n && t.isSearchHit && e++, !n || t.isSearchHit;
                  })
                );
              return [n, e];
            },
            [t],
            a.statesWillNeverBeEqual
          );
        return { searchResults: n, blockCount: d };
      }
    },
    565996: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("77078"),
        s = n("701909"),
        i = n("49111"),
        r = n("782340"),
        u = n("881523");
      function o(e) {
        let { searchMode: t, searchByMode: n } = e;
        return (0, a.jsxs)("header", {
          className: u.searchHeader,
          children: [
            (0, a.jsx)(d, { ...e }),
            (0, a.jsxs)(l.TabBar, {
              orientation: "horizontal",
              className: u.searchHeaderTabList,
              selectedItem: t,
              onItemSelect: n,
              children: [
                (0, a.jsx)(l.TabBar.Item, {
                  id: i.SearchModes.NEWEST,
                  children: r.default.Messages.SEARCH_NEWEST_SHORT,
                }),
                (0, a.jsx)(l.TabBar.Item, {
                  id: i.SearchModes.OLDEST,
                  children: r.default.Messages.SEARCH_OLDEST_SHORT,
                }),
                (0, a.jsx)(l.TabBar.Item, {
                  id: i.SearchModes.MOST_RELEVANT,
                  children: r.default.Messages.SEARCH_MOST_RELEVANT_SHORT,
                }),
              ],
            }),
          ],
        });
      }
      function d(e) {
        let t;
        let { isSearching: n, isIndexing: s, documentsIndexed: i } = e;
        (s || n) &&
          (t = (0, a.jsx)("div", {
            className: u.spinnerWrapper,
            children: (0, a.jsx)(l.Spinner, {
              type: l.Spinner.Type.SPINNING_CIRCLE,
              className: u.spinner,
              itemClassName: u.spinnerPath,
            }),
          }));
        let o = s && !n;
        return (0, a.jsxs)("div", {
          className: u.totalResults,
          role: "status",
          children: [
            o
              ? (0, a.jsx)(l.Tooltip, {
                  text: r.default.Messages.SEARCH_STILL_INDEXING_HINT.format({
                    count: i,
                  }),
                  children: n =>
                    (0, a.jsxs)("div", {
                      className: u.totalResultsWrapper,
                      ...n,
                      children: [(0, a.jsx)(c, { ...e }), t],
                    }),
                })
              : (0, a.jsx)(c, { ...e }),
            o ? null : t,
          ],
        });
      }
      function c(e) {
        let { isSearching: t, isIndexing: n, totalResults: o } = e;
        if (t)
          return (0, a.jsx)(l.Text, {
            variant: "text-md/normal",
            color: "header-primary",
            children: r.default.Messages.SEARCHING,
          });
        {
          if (n)
            return (0, a.jsx)(l.Text, {
              variant: "text-md/normal",
              children: (0, a.jsx)(l.Anchor, {
                className: u.helpdeskLink,
                href: s.default.getArticleURL(
                  i.HelpdeskArticles.SEARCH_INDEXING
                ),
                children: r.default.Messages.STILL_INDEXING,
              }),
            });
          let e = o.toLocaleString();
          return (0, a.jsx)(l.Text, {
            variant: "text-md/normal",
            color: "header-primary",
            children: r.default.Messages.TOTAL_RESULTS.format({ count: e }),
          });
        }
      }
    },
    420861: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("77078"),
        s = n("416190");
      function i(e) {
        let { changePage: t, offset: n, totalResults: i, pageLength: r } = e;
        return (0, a.jsx)("div", {
          className: s.container,
          children: (0, a.jsx)(l.Paginator, {
            currentPage: Math.floor(n / r) + 1,
            totalCount: i,
            pageSize: r,
            onPageChange: t,
            maxVisiblePages: 5,
          }),
        });
      }
    },
    18061: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        }),
        n("222007");
      var a,
        l = n("37983"),
        s = n("884691"),
        i = n("917351"),
        r = n.n(i),
        u = n("118810"),
        o = n("77078"),
        d = n("272030"),
        c = n("699473"),
        f = n("42203"),
        h = n("782340"),
        m = n("139868");
      a = class extends s.PureComponent {
        render() {
          let {
              result: e,
              listItemProps: t,
              searchOffset: n,
              index: a,
              totalResults: s,
            } = this.props,
            i = r.find(e, e => e.isSearchHit);
          if (null == i) return null;
          let u = f.default.getChannel(i.channel_id);
          if (null == u) return null;
          let d = "search-result-".concat(i.id);
          return (0, l.jsx)(o.FocusRing, {
            ringTarget: this.hitRef,
            ringClassName: m.searchResultFocusRing,
            offset: 4,
            children: (0, l.jsxs)("li", {
              className: m.container,
              ...t,
              "aria-posinset": 1 + n + a,
              "aria-setsize": s,
              "aria-labelledby": d,
              children: [
                (0, l.jsx)(o.Clickable, {
                  tabIndex: -1,
                  onClick: this.handleMessageClick,
                  innerRef: this.containerRef,
                  className: m.searchResult,
                  focusProps: { enabled: !1 },
                  children: (0, l.jsx)(
                    "div",
                    {
                      ref: this.hitRef,
                      className: m.message,
                      children: (0, l.jsx)(c.default, {
                        id: d,
                        message: i,
                        channel: u,
                        onContextMenu: e => this.handleContextMenu(e, i),
                        animateAvatar: !1,
                        subscribeToComponentDispatch: !1,
                        trackAnnouncementViews: !0,
                      }),
                    },
                    i.id
                  ),
                }),
                (0, l.jsx)("div", {
                  className: m.buttonsContainer,
                  "aria-hidden": !0,
                  children: (0, l.jsx)(o.Clickable, {
                    className: m.button,
                    onClick: this.jumpTo,
                    children: h.default.Messages.JUMP,
                  }),
                }),
              ],
            }),
          });
        }
        constructor(...e) {
          super(...e),
            (this.containerRef = s.createRef()),
            (this.hitRef = s.createRef()),
            (this.handleContextMenu = (e, t) => {
              let a = f.default.getChannel(t.channel_id);
              null != a &&
                (e.stopPropagation(),
                (0, d.openContextMenuLazy)(e, async () => {
                  let { default: e } = await n
                    .el("13406")
                    .then(n.bind(n, "13406"));
                  return n => (0, l.jsx)(e, { ...n, message: t, channel: a });
                }));
            }),
            (this.jumpTo = e => {
              null != e && (e.preventDefault(), e.stopPropagation());
              let { onJump: t, result: n } = this.props,
                a = n.find(e => e.isSearchHit);
              null != a && t(a);
            }),
            (this.handleMessageClick = e => {
              if (
                (function (e, t) {
                  var n;
                  let a =
                    null === (n = window) || void 0 === n
                      ? void 0
                      : n.getSelection();
                  if (null != a && !a.isCollapsed) return !0;
                  if (null == e || null == t) return !1;
                  for (; (0, u.isElement)(e) && e !== t; ) {
                    let { tagName: t } = e;
                    if ("A" === t || "IMG" === t || "BUTTON" === t) return !0;
                    e = e.parentNode;
                  }
                  return !1;
                })(e.target, this.containerRef.current)
              ) {
                e.stopPropagation();
                return;
              }
              this.jumpTo(e);
            });
        }
      };
    },
    549206: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return P;
          },
        }),
        n("808653"),
        n("424973"),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("880317"),
        i = n("77078"),
        r = n("404118"),
        u = n("819689"),
        o = n("378438"),
        d = n("419135"),
        c = n("206230"),
        f = n("679653"),
        h = n("619335"),
        m = n("70845"),
        p = n("95045"),
        E = n("393414"),
        S = n("144491"),
        g = n("845579"),
        C = n("42203"),
        _ = n("305961"),
        I = n("957255"),
        T = n("27618"),
        v = n("744983"),
        x = n("18494"),
        N = n("697218"),
        A = n("505684"),
        M = n("593195"),
        R = n("420861"),
        j = n("18061"),
        L = n("49111"),
        y = n("782340"),
        O = n("680221");
      function P(e) {
        var t;
        let {
            search: n,
            searchId: f,
            renderEmbeds: h,
            scrollTo: m,
            searchResults: p,
            blockCount: S,
            onChangePage: g,
          } = e,
          {
            offset: _,
            totalResults: I,
            isSearching: x,
            showBlockedResults: N,
          } = n,
          A = l.useCallback(
            e => {
              if (x) return;
              let t = e - 1;
              null == g || g(t), o.changePage(f, t);
            },
            [f, x, g]
          ),
          M = l.useCallback(
            e => {
              if (e.blocked)
                r.default.show({
                  title: y.default.Messages.UNBLOCK_TO_JUMP_TITLE,
                  body: y.default.Messages.UNBLOCK_TO_JUMP_BODY.format({
                    name: e.author.username,
                  }),
                  confirmText: y.default.Messages.OKAY,
                });
              else {
                let t = C.default.getChannel(e.channel_id),
                  n = null != t ? t.getGuildId() : null;
                u.default.trackJump(e.channel_id, e.id, "Search Results", {
                  search_id: v.default.getAnalyticsId(f),
                }),
                  (0, E.transitionTo)(L.Routes.CHANNEL(n, e.channel_id, e.id));
              }
            },
            [f]
          ),
          j = l.useMemo(() => {
            let e;
            if (null == p) return [];
            let t = 0;
            return p.reduce((n, a) => {
              let l = a.find(e => e.isSearchHit);
              if (!N && null != l && T.default.isBlocked(l.author.id)) return n;
              let s = C.default.getChannel(a[0].channel_id);
              return null == s
                ? n
                : ((null == e || e !== s.id) &&
                    n.push({ channel: s, results: [], startIndex: t }),
                  (t += 1),
                  n[n.length - 1].results.push(a),
                  (e = null == s ? void 0 : s.id),
                  n);
            }, []);
          }, [p, N]),
          P = l.useRef([]),
          b = j.reduce((e, t) => e + 1 + t.results.length, 0),
          U = l.useCallback(
            (e, t) => {
              if (!c.default.keyboardModeEnabled) return;
              let n = P.current,
                a = null != t ? n[t] : void 0;
              if (null == a || null == a.hitRef.current) return;
              let l = a.hitRef.current.getClientRects()[0],
                s = l.top - 0.5 * l.height;
              m(s, !1, () => {
                var t;
                null === (t = document.getElementById(e)) ||
                  void 0 === t ||
                  t.focus();
              });
            },
            [m]
          ),
          w = l.useCallback(e => {
            let t = P.current[e];
            null == t || t.jumpTo();
          }, []),
          F = (0, s.useListNavigator)({
            navId: "search-results",
            itemCount: b,
            focusedIndex: 0,
            setFocus: U,
            onSelect: w,
          }),
          V = v.default.getQuery(f),
          k = v.default.getSearchType(f) === L.SearchTypes.FAVORITES,
          B = (0, d.createASTHighlighter)(
            null !== (t = null == V ? void 0 : V.content) && void 0 !== t
              ? t
              : ""
          ),
          G = j.map(e => {
            let { channel: t, results: n, startIndex: l } = e;
            return (0, a.jsx)(
              D,
              {
                channel: t,
                results: n,
                highlighter: B,
                startIndex: l,
                resultRefs: P,
                totalResults: I,
                scrollTo: m,
                searchId: f,
                renderEmbeds: h,
                offset: _,
                jumpToMessage: M,
                listNavigator: F,
                favoriteSearch: k,
              },
              "".concat(t.id, "-").concat(l)
            );
          });
        G.push();
        let H = l.useRef(null);
        l.useLayoutEffect(() => {
          var e;
          null === (e = H.current) || void 0 === e || e.focus();
        }, [p]);
        let W = (0, i.useFocusJumpSection)();
        return (0, a.jsxs)(a.Fragment, {
          children: [
            (0, a.jsx)("div", {
              ref: H,
              ...F.getContainerProps(),
              ...W,
              "aria-busy": x,
              children: G,
            }),
            S > 0
              ? (0, a.jsxs)(i.Clickable, {
                  tag: "div",
                  className: O.resultsBlocked,
                  onClick: () => o.setShowBlockedResults(f, !N),
                  children: [
                    (0, a.jsx)("div", { className: O.resultsBlockedImage }),
                    (0, a.jsx)("div", {
                      className: O.resultsBlockedText,
                      children: N
                        ? y.default.Messages.SEARCH_HIDE_BLOCKED_MESSAGES.format(
                            { count: S }
                          )
                        : y.default.Messages.SEARCH_NUM_RESULTS_BLOCKED_NOT_SHOWN.format(
                            { count: S }
                          ),
                    }),
                  ],
                })
              : null,
            !x &&
              !k &&
              (0, a.jsx)(R.default, {
                changePage: A,
                offset: _,
                totalResults: I,
                pageLength: L.SEARCH_PAGE_SIZE,
              }),
          ],
        });
      }
      function D(e) {
        var t, n;
        let {
            channel: s,
            results: r,
            highlighter: u,
            startIndex: o,
            resultRefs: d,
            totalResults: c,
            scrollTo: E,
            searchId: v,
            renderEmbeds: R,
            offset: y,
            jumpToMessage: P,
            listNavigator: D,
            favoriteSearch: b,
          } = e,
          U = g.RenderSpoilers.useSetting(),
          w = l.useCallback(e => {
            if (e === x.default.getChannelId()) return;
            let t = C.default.getChannel(e);
            if (null != t)
              I.default.can(L.Permissions.VIEW_CHANNEL, t) &&
                (0, S.transitionToChannel)(t.id);
          }, []),
          F =
            null != s
              ? (0, f.computeChannelName)(s, N.default, T.default, !1)
              : "???",
          V =
            b && null != s.guild_id
              ? null === (t = _.default.getGuild(s.guild_id)) || void 0 === t
                ? void 0
                : t.name
              : null,
          k =
            (null == s ? void 0 : s.parent_id) != null
              ? C.default.getChannel(s.parent_id)
              : null,
          B = null != k ? k.name : null,
          G = null !== (n = (0, h.default)(s)) && void 0 !== n ? n : M.default,
          H = null != k ? (0, h.default)(k) : null,
          W = I.default.can(L.Permissions.MANAGE_MESSAGES, s),
          { content: Y } = (0, p.default)(
            { content: F, embeds: [] },
            { postProcessor: u }
          ),
          z = l.useRef(null),
          [K, Z] = l.useState(!1);
        l.useEffect(() => {
          let e = z.current;
          null != e &&
            null != e.offsetWidth &&
            null != e.scrollWidth &&
            Z(e.offsetWidth < e.scrollWidth);
        }, []);
        let Q = [F, B, V].filter(e => null != e).join(", ");
        return (0, a.jsx)(A.ObscuredDisplayContext.Provider, {
          value: (0, m.default)(U, W),
          children: (0, a.jsxs)("ul", {
            role: "group",
            className: O.searchResultGroup,
            "aria-label": Q,
            children: [
              (0, a.jsx)(i.Clickable, {
                onClick: () => w(s.id),
                children: (0, a.jsxs)("div", {
                  className: O.channelNameContainer,
                  children: [
                    (0, a.jsx)(G, {
                      className: O.channelNameIcon,
                      width: 16,
                      height: 16,
                    }),
                    (0, a.jsx)(i.Tooltip, {
                      text: F,
                      shouldShow: K,
                      children: e =>
                        (0, a.jsxs)("span", {
                          ...e,
                          ref: z,
                          className: O.channelNameText,
                          children: [b && null !== V && "".concat(V, " : "), Y],
                        }),
                    }),
                    null != k && null != B && null != H
                      ? (0, a.jsxs)(i.Clickable, {
                          className: O.parentChannelNameClickable,
                          onClick: e => {
                            e.stopPropagation(), w(k.id);
                          },
                          children: [
                            (0, a.jsx)(H, {
                              className: O.parentChannelNameIcon,
                              width: 12,
                              height: 12,
                            }),
                            (0, a.jsx)(i.Text, {
                              className: O.parentChannelNameText,
                              variant: "text-xs/medium",
                              color: "header-secondary",
                              children: B,
                            }),
                          ],
                        })
                      : null,
                  ],
                }),
              }),
              r.map((e, t) => {
                let n = o + t;
                return (0, a.jsx)(
                  j.default,
                  {
                    ref: e => (d.current[n] = e),
                    totalResults: c,
                    scrollTo: E,
                    searchId: v,
                    renderEmbeds: R,
                    searchOffset: y,
                    pageResultsLength: r.length,
                    result: e,
                    index: n,
                    onJump: P,
                    listItemProps: D.getItemProps({ index: n }),
                  },
                  "search-result-".concat(n)
                );
              }),
            ],
          }),
        });
      }
    },
    56778: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return j;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("917351"),
        u = n.n(r),
        o = n("446674"),
        d = n("77078"),
        c = n("970728"),
        f = n("378438"),
        h = n("716241"),
        m = n("161778"),
        p = n("845579"),
        E = n("744983"),
        S = n("18494"),
        g = n("230559"),
        C = n("659500"),
        _ = n("767094"),
        I = n("565996"),
        T = n("549206"),
        v = n("49111"),
        x = n("782340"),
        N = n("427877");
      class A extends l.Component {
        componentDidMount() {
          this.autoAnalytics();
        }
        componentDidUpdate(e) {
          (this.props.searchAnalyticsId !== e.searchAnalyticsId ||
            this.props.searchOffset !== e.searchOffset) &&
            this.autoAnalytics(e.searchAnalyticsId);
        }
        render() {
          return null;
        }
        constructor(...e) {
          var t;
          super(...e),
            (t = this),
            (this.autoAnalytics = function () {
              let e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : null;
              if (null == t.props.searchAnalyticsId) return;
              let n = 0,
                a = 0,
                l = 0,
                s = 0;
              null != t.props.searchResults &&
                u(t.props.searchResults)
                  .flatten()
                  .filter(e => e.isSearchHit)
                  .forEach(e => {
                    null != e.content &&
                      "" !== e.content &&
                      (n++, /https?:\/\/[^\s]+/.test(e.content) && s++),
                      null != e.embeds && e.embeds.length > 0 && l++,
                      null != e.attachments && e.attachments.length > 0 && a++;
                  }),
                h.default.trackWithMetadata(
                  v.AnalyticEvents.SEARCH_RESULT_VIEWED,
                  {
                    search_type: t.props.searchType,
                    search_id: t.props.searchAnalyticsId,
                    prev_search_id: e !== t.props.searchAnalyticsId ? e : null,
                    is_error: t.props.searchHasError,
                    limit: t.props.searchLimit,
                    offset: t.props.searchOffset,
                    page:
                      Math.floor(t.props.searchOffset / t.props.searchLimit) +
                      1,
                    total_results: t.props.searchTotalResults,
                    page_results:
                      null != t.props.searchResults
                        ? t.props.searchResults.length
                        : null,
                    is_indexing: t.props.searchIsIndexing,
                    page_num_messages: n,
                    page_num_links: s,
                    page_num_embeds: l,
                    page_num_attach: a,
                  }
                );
            });
        }
      }
      let M = e => {
        let { children: t } = e;
        return (0, a.jsx)("div", {
          className: N.emptyResultsWrap,
          children: (0, a.jsx)("div", {
            className: N.emptyResultsContent,
            children: t,
          }),
        });
      };
      class R extends l.PureComponent {
        componentDidMount() {
          C.ComponentDispatch.subscribe(
            v.ComponentActions.SEARCH_RESULTS_CLOSE,
            this.handleSearchResultsClose
          );
        }
        componentWillUnmount() {
          C.ComponentDispatch.unsubscribe(
            v.ComponentActions.SEARCH_RESULTS_CLOSE,
            this.handleSearchResultsClose
          );
        }
        componentDidUpdate(e) {
          let { search: t } = e;
          if (this.props.search.showBlockedResults !== t.showBlockedResults) {
            let e = this.scrollerRef.current;
            if (null == e) return;
            e.scrollToBottom();
          }
          let n = E.default.getQuery(this.props.searchId);
          JSON.stringify(n) !== JSON.stringify(this.state.searchQuery) &&
            this.setState({
              searchQuery: n,
              searchMode:
                (null == n ? void 0 : n.sort_by) != null && null != n.sort_order
                  ? f.searchQueryParamsToSearchMode({
                      sort_by: n.sort_by,
                      sort_order: n.sort_order,
                    })
                  : v.SearchModes.NEWEST,
            });
        }
        render() {
          let {
              searchAnalyticsId: e,
              searchType: t,
              searchResults: n,
            } = this.props,
            {
              offset: l,
              hasError: s,
              totalResults: i,
              isHistoricalIndexing: r,
            } = this.props.search;
          return (0, a.jsxs)("section", {
            className: N.searchResultsWrap,
            "aria-label": x.default.Messages.SEARCH_RESULTS_SECTION_LABEL,
            children: [
              this.renderHeader(),
              (0, a.jsx)(d.AdvancedScroller, {
                ref: this.scrollerRef,
                className: N.scroller,
                children: this.renderContent(),
              }),
              (0, a.jsx)(A, {
                searchType: t,
                searchAnalyticsId: e,
                searchResults: n,
                searchOffset: l,
                searchLimit: v.SEARCH_PAGE_SIZE,
                searchHasError: s,
                searchTotalResults: i,
                searchIsIndexing: r,
              }),
            ],
          });
        }
        constructor(...e) {
          super(...e),
            (this.state = {
              searchMode: v.SearchModes.NEWEST,
              searchQuery: null,
            }),
            (this.scrollerRef = l.createRef()),
            (this.scrollTo = (e, t, n) => {
              let a = this.scrollerRef.current;
              if (null == a) return;
              let l = a.getScrollerState().scrollTop - e;
              a.scrollTo({ to: l, animate: t, callback: n });
            }),
            (this.selectChannel = e => {
              e !== S.default.getChannelId() &&
                c.default.transitionToInviteChannelSync(e);
            }),
            (this.searchPrevious = () => {
              let {
                searchId: e,
                search: { isSearching: t },
              } = this.props;
              !t && f.searchPreviousPage(e);
            }),
            (this.searchNext = () => {
              let {
                searchId: e,
                search: { isSearching: t },
              } = this.props;
              !t && f.searchNextPage(e);
            }),
            (this.handleSearchResultsClose = () => {
              let { searchId: e } = this.props;
              f.clearSearchState(e);
            }),
            (this.searchByMode = e => {
              let {
                  searchId: t,
                  search: { isSearching: n },
                } = this.props,
                { searchMode: a } = this.state;
              e !== a &&
                !n &&
                (h.default.trackWithMetadata(
                  v.AnalyticEvents.SEARCH_RESULT_SORT_CHANGED,
                  { search_id: E.default.getAnalyticsId(t), new_sort_type: e }
                ),
                f.searchByMode(t, e),
                this.setState({ searchMode: e }));
            }),
            (this.toggleShowBlockedMessages = () => {
              let {
                searchId: e,
                search: { showBlockedResults: t },
              } = this.props;
              f.setShowBlockedResults(e, !t);
            }),
            (this.renderHeader = () => {
              let { searchMode: e } = this.state,
                {
                  totalResults: t,
                  isSearching: n,
                  isHistoricalIndexing: l,
                  documentsIndexed: s,
                } = this.props.search;
              return (0, a.jsx)(I.default, {
                searchMode: e,
                searchByMode: this.searchByMode,
                totalResults: t,
                isSearching: n,
                isIndexing: l,
                documentsIndexed: s,
              });
            }),
            (this.renderIndexing = () => {
              let e = E.default.getSearchType(this.props.searchId),
                t =
                  e === v.SearchTypes.GUILD
                    ? x.default.Messages.SEARCH_GUILD_STILL_INDEXING
                    : x.default.Messages.SEARCH_DM_STILL_INDEXING;
              return (0, a.jsxs)(M, {
                children: [
                  (0, a.jsx)(g.default, {}),
                  (0, a.jsx)("div", {
                    className: (N.emptyResultsText, N.stillIndexing),
                    children: t,
                  }),
                ],
              });
            }),
            (this.renderNoResults = () => {
              let { showNoResultsAlt: e } = this.props.search,
                t = e
                  ? x.default.Messages.SEARCH_NO_RESULTS_ALT
                  : x.default.Messages.SEARCH_NO_RESULTS;
              return (0, a.jsxs)(M, {
                children: [
                  (0, a.jsx)("div", {
                    className: i(N.noResultsImage, { [N.alt]: e }),
                  }),
                  (0, a.jsx)("div", {
                    className: i(N.emptyResultsText, N.noResults, {
                      [N.alt]: e,
                    }),
                    children: t,
                  }),
                ],
              });
            }),
            (this.renderError = () =>
              (0, a.jsxs)(M, {
                children: [
                  (0, a.jsx)("div", { className: N.errorImage }),
                  (0, a.jsx)("div", {
                    className: i(N.emptyResultsText, N.errorMessage),
                    children: x.default.Messages.SEARCH_ERROR,
                  }),
                ],
              })),
            (this.renderContent = () => {
              let { searchResults: e, blockCount: t } = this.props,
                {
                  totalResults: n,
                  isSearching: l,
                  isIndexing: s,
                  hasError: i,
                } = this.props.search;
              return i
                ? this.renderError()
                : s
                  ? this.renderIndexing()
                  : l
                    ? null
                    : n > 0
                      ? (0, a.jsx)(T.default, {
                          search: this.props.search,
                          searchResults: e,
                          blockCount: t,
                          searchId: this.props.searchId,
                          renderEmbeds: this.props.renderEmbeds,
                          scrollTo: this.scrollTo,
                        })
                      : this.renderNoResults();
            });
        }
      }
      function j(e) {
        let { searchId: t } = e;
        return (0, a.jsx)(R, {
          searchId: t,
          ...(0, o.useStateFromStoresObject)(
            [E.default],
            () => ({
              search: E.default.getResultsState(t),
              searchAnalyticsId: E.default.getAnalyticsId(t),
              searchType: E.default.getSearchType(),
            }),
            [t]
          ),
          ...(0, _.default)(t),
          renderEmbeds: p.RenderEmbeds.useSetting(),
          developerMode: p.DeveloperMode.useSetting(),
          ...(0, o.useStateFromStoresObject)([m.default], () => {
            let { theme: e } = m.default;
            return { theme: e };
          }),
        });
      }
    },
    774298: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useInappropriateConversationSafetyToolsWarningForChannel:
            function () {
              return i;
            },
        });
      var a = n("761771"),
        l = n("888203"),
        s = n("328564");
      function i(e) {
        let t = (0, a.useIsEligibleForInappropriateConversationWarning)({
            location: "safety-tools-button",
          }),
          n = (0, s.useSafetyAlertsSettingOrDefault)(),
          i = (0, l.useInappropriateConversationWarningsForChannel)(e);
        if (!t || !n) return;
        let r = i.filter(e => null != e.dismiss_timestamp);
        if (0 === r.length) return;
        let u = r.sort((e, t) =>
          e.type > t.type
            ? 1
            : e.dismiss_timestamp < t.dismiss_timestamp
              ? 1
              : -1
        );
        return u[0];
      }
    },
    408815: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useShouldShowInitialSafetyToolsButtonTooltip: function () {
            return i;
          },
        });
      var a = n("446674"),
        l = n("764828"),
        s = n("774298");
      function i(e) {
        let t = (0, s.useInappropriateConversationSafetyToolsWarningForChannel)(
            e
          ),
          n = (0, a.useStateFromStores)([l.default], () =>
            l.default.hasShownInitialTooltipForChannel(e)
          );
        return null != t && !n;
      }
    },
    13355: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useSafetyToolsButtonTooltipForChannel: function () {
            return c;
          },
        }),
        n("700225");
      var a = n("718517"),
        l = n("764828"),
        s = n("821240"),
        i = n("774298"),
        r = n("888203"),
        u = n("408815");
      let o = 1 * a.default.Millis.HOUR,
        d = 12 * a.default.Millis.HOUR;
      function c(e) {
        var t;
        let n = (0, i.useInappropriateConversationSafetyToolsWarningForChannel)(
            e
          ),
          a = (0, r.useInappropriateConversationWarningsForChannel)(e),
          c = (0, u.useShouldShowInitialSafetyToolsButtonTooltip)(e);
        if (null == n || c || (0, s.shouldShowTakeoverForWarnings)(a)) return;
        let f = a.some(
            e =>
              e.type === l.SafetyWarningTypes.INAPPROPRIATE_CONVERSATION_TIER_1
          ),
          h = a
            .filter(e => null != e.dismiss_timestamp)
            .sort((e, t) =>
              t.dismiss_timestamp < e.dismiss_timestamp ? -1 : 1
            );
        if (h.length < 1) return;
        let m = h[0];
        if (
          !(function (e) {
            let t =
              arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
            if (null == e) return !0;
            let n = new Date(e).getTime() + (t ? o : d),
              a = new Date().getTime();
            return a >= n;
          })(m.dismiss_timestamp, f)
        )
          return;
        let p = a.filter(e => null == e.dismiss_timestamp);
        return null !==
          (t = p.findLast(
            e =>
              e.type === l.SafetyWarningTypes.INAPPROPRIATE_CONVERSATION_TIER_1
          )) && void 0 !== t
          ? t
          : p.findLast(
              e =>
                e.type ===
                l.SafetyWarningTypes.INAPPROPRIATE_CONVERSATION_TIER_2
            );
      }
    },
    760679: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          drawLinePoint: function () {
            return u;
          },
          addLinePoints: function () {
            return o;
          },
          updateLinePoints: function () {
            return d;
          },
          startEmojiHose: function () {
            return c;
          },
          stopEmojiHose: function () {
            return f;
          },
          stopRenderedEmojiHose: function () {
            return h;
          },
          updateEmojiHose: function () {
            return m;
          },
          clearDrawables: function () {
            return p;
          },
          setDrawMode: function () {
            return E;
          },
          toggleOverlayCanvas: function () {
            return S;
          },
        });
      var a = n("981980"),
        l = n("872717"),
        s = n("913144"),
        i = n("315841"),
        r = n("49111");
      function u(e, t, n, a, l) {
        s.default.dispatch({
          type: "SHARED_CANVAS_DRAW_LINE_POINT",
          channelId: e,
          userId: n,
          lineId: t,
          streamerId: a,
          point: l,
        });
      }
      function o(e, t, n, a) {
        return l.default.post({
          url: r.Endpoints.SHARED_CANVAS_LINES(e, n),
          body: { line_id: t, points: a },
        });
      }
      function d(e, t, n, a) {
        s.default.dispatch({
          type: "SHARED_CANVAS_UPDATE_LINE_POINTS",
          userId: t,
          lineId: e,
          newPoints: a,
          streamerId: n,
        });
      }
      function c(e, t, n) {
        return l.default.post({
          url: r.Endpoints.SHARED_CANVAS_EMOJI_HOSES(e, t),
          body: { emoji_hose: n },
        });
      }
      function f(e, t, n) {
        l.default.delete({
          url: r.Endpoints.SHARED_CANVAS_EMOJI_HOSE(e, t, n),
          backoff: new a.default(),
        });
      }
      function h(e, t) {
        (t.state = i.EmojiHoseState.STOP),
          s.default.dispatch({
            type: "SHARED_CANVAS_UPDATE_EMOJI_HOSE",
            emojiHose: t,
            userId: t.userId,
            streamerId: e,
          });
      }
      function m(e, t, n) {
        s.default.dispatch({
          type: "SHARED_CANVAS_UPDATE_EMOJI_HOSE",
          emojiHose: e,
          userId: t,
          streamerId: n,
        });
      }
      function p(e, t) {
        s.default.dispatch({
          type: "SHARED_CANVAS_CLEAR_DRAWABLES",
          drawables: e,
          streamerId: t,
        });
      }
      function E(e) {
        s.default.dispatch({
          type: "SHARED_CANVAS_SET_DRAW_MODE",
          drawMode: e,
        });
      }
      function S() {
        s.default.dispatch({ type: "TOGGLE_OVERLAY_CANVAS" });
      }
    },
    827520: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          AVATAR_COLOR_AVATAR_SIZE: function () {
            return a;
          },
          EMOJI_HOSE_EMOJI_SIZE: function () {
            return l;
          },
          OUTLINE_WIDTH: function () {
            return s;
          },
          EVENT_TICK_RATE: function () {
            return i;
          },
          EMOJI_HOSE_PING_DELAY: function () {
            return r;
          },
        });
      let a = 80,
        l = 48,
        s = 3,
        i = 500,
        r = 5e3;
    },
    780166: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
      var a = n("862205");
      let l = (0, a.createExperiment)({
        kind: "guild",
        id: "2023-01_shared_canvas",
        label: "Shared Canvas",
        defaultConfig: { isSharedCanvasEnabled: !1 },
        treatments: [
          {
            id: 1,
            label: "Enable Shared Canvas",
            config: { isSharedCanvasEnabled: !0 },
          },
        ],
      });
      var s = l;
    },
    242260: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return C;
          },
        }),
        n("424973"),
        n("222007");
      var a = n("446674"),
        l = n("913144"),
        s = n("867805"),
        i = n("697218"),
        r = n("402671"),
        u = n("315841"),
        o = n("52477"),
        d = n("827520");
      let c = {},
        f = {},
        h = {},
        m = !0,
        p = null;
      function E(e) {
        if (null == f[e]) {
          let t = i.default.getUser(e);
          if (null == t) return;
          let n = t.getAvatarURL(null, d.AVATAR_COLOR_AVATAR_SIZE),
            a = new Image();
          (a.src = n), (f[e] = a);
        }
      }
      class S extends a.default.Store {
        get visibleOverlayCanvas() {
          return m;
        }
        getDrawables(e) {
          return null != c[e] ? c[e] : [];
        }
        getAvatarImage(e) {
          return f[e];
        }
        getEmojiImage(e) {
          return h[e];
        }
        getDrawMode() {
          return p;
        }
      }
      S.displayName = "SharedCanvasStore";
      let g = new S(l.default, {
        SHARED_CANVAS_UPDATE_LINE_POINTS: function (e) {
          let { lineId: t, newPoints: n, userId: a, streamerId: l } = e,
            s = c[l];
          if (null == s)
            c[l] = [{ type: u.DrawableType.LINE, id: t, userId: a, points: n }];
          else {
            let e = s.find(e => e.id === t);
            null == e
              ? s.push({
                  type: u.DrawableType.LINE,
                  id: t,
                  userId: a,
                  points: n,
                })
              : (0, o.isLine)(e) && e.points.push(...n);
          }
          E(a);
        },
        SHARED_CANVAS_UPDATE_EMOJI_HOSE: function (e) {
          var t, n, a;
          let { emojiHose: l, streamerId: i, userId: o } = e,
            f = { ...l, type: u.DrawableType.EMOJI_HOSE };
          if (null == c[i]) c[i] = [f];
          else {
            let e = c[i].findIndex(e => e.id === l.id);
            e >= 0 ? (c[i][e] = { ...c[i][e], ...f }) : c[i].push(f);
          }
          let m =
            null !==
              (n =
                null !== (t = l.emojiId) && void 0 !== t ? t : l.emojiName) &&
            void 0 !== n
              ? n
              : "";
          if (null == h[m]) {
            let e =
              null != l.emojiName
                ? s.default.convertNameToSurrogate(l.emojiName)
                : null;
            (h[m] = new Image()),
              (h[m].src = (0, r.getEmojiUrl)(
                {
                  id: l.emojiId,
                  name:
                    null !== (a = null != e ? e : l.emojiName) && void 0 !== a
                      ? a
                      : "",
                  animated: !1,
                },
                d.EMOJI_HOSE_EMOJI_SIZE
              ));
          }
          E(o);
        },
        SHARED_CANVAS_CLEAR_DRAWABLES: function (e) {
          let { drawables: t, streamerId: n } = e;
          if (null != c[n]) {
            let e = new Set();
            t.forEach(t => e.add(t.id)),
              (c[n] = c[n].filter(t => !e.has(t.id)));
          }
        },
        SHARED_CANVAS_SET_DRAW_MODE: function (e) {
          let { drawMode: t } = e;
          p = t;
        },
        TOGGLE_OVERLAY_CANVAS: function (e) {
          let {} = e;
          m = !m;
        },
      });
      var C = g;
    },
    315841: function (e, t, n) {
      "use strict";
      var a, l, s, i;
      n.r(t),
        n.d(t, {
          DrawableType: function () {
            return a;
          },
          EmojiHoseState: function () {
            return l;
          },
        }),
        ((s = a || (a = {})).LINE = "line"),
        (s.EMOJI_HOSE = "emoji_hose"),
        ((i = l || (l = {})).START = "START"),
        (i.STOP = "STOP");
    },
    52477: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          clearCanvas: function () {
            return d;
          },
          getMouseCoordinatesPercent: function () {
            return c;
          },
          normalizeCoordinate: function () {
            return f;
          },
          normalizeCoordinates: function () {
            return h;
          },
          isLine: function () {
            return m;
          },
          getUserColors: function () {
            return p;
          },
        });
      var a = n("656280"),
        l = n.n(a),
        s = n("509043"),
        i = n("462274"),
        r = n("697218"),
        u = n("315841"),
        o = n("827520");
      function d(e) {
        let t = e.current,
          n = null == t ? void 0 : t.getContext("2d");
        null != t && null != n && n.clearRect(0, 0, t.width, t.height);
      }
      function c(e, t) {
        let {
            width: n,
            height: a,
            left: l,
            top: s,
          } = e.getBoundingClientRect(),
          i = (t.clientX - l) / n,
          r = (t.clientY - s) / a;
        return { x: i, y: r };
      }
      function f(e, t) {
        return Math.round(e * t * window.devicePixelRatio);
      }
      function h(e, t, n) {
        return { x: f(e.x, t), y: f(e.y, n), deltaTime: e.deltaTime };
      }
      function m(e) {
        return e.type === u.DrawableType.LINE;
      }
      function p(e, t, n, a) {
        var u;
        let d = r.default.getUser(e),
          c =
            null == d
              ? void 0
              : d.getAvatarURL(null, o.AVATAR_COLOR_AVATAR_SIZE),
          f =
            null != c
              ? null === (u = i.useColorStore.getState().palette[c]) ||
                void 0 === u
                ? void 0
                : u[0]
              : null,
          h =
            null != f
              ? "#".concat(l({ r: f[0], g: f[1], b: f[2] }).toHex())
              : a,
          m = (0, s.getDarkness)((0, s.hex2int)(h)) > 0.5 ? n : t;
        return { fillColor: h, outlineColor: m };
      }
    },
    357304: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          renderAvatarCursorOutline: function () {
            return l;
          },
          renderAvatarCursor: function () {
            return s;
          },
        });
      var a = n("242260");
      function l(e, t, n, a, l) {
        e.save(),
          e.beginPath(),
          (e.fillStyle = a),
          e.arc(
            t,
            n,
            Math.round(20 * window.devicePixelRatio) / 2 + l,
            0,
            2 * Math.PI
          ),
          e.fill(),
          e.restore();
      }
      function s(e, t, n, l) {
        e.save();
        let s = a.default.getAvatarImage(l);
        if (null == s) return;
        let i = 20 * window.devicePixelRatio;
        e.beginPath(),
          e.arc(t, n, i / 2, 0, 2 * Math.PI),
          e.clip(),
          e.drawImage(s, t - i / 2, n - i / 2, i, i),
          e.restore();
      }
    },
    553930: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useEmojiHoseStore: function () {
            return m;
          },
          default: function () {
            return E;
          },
        }),
        n("424973");
      var a = n("917351"),
        l = n.n(a),
        s = n("748820"),
        i = n("308503"),
        r = n("760679"),
        u = n("242260"),
        o = n("315841"),
        d = n("52477"),
        c = n("357304"),
        f = n("827520");
      let h = {
          X_OFFSET: 2 * f.EMOJI_HOSE_EMOJI_SIZE,
          Y_OFFSET: 25,
          X_SPEED: 0.5,
          Y_SPEED_MIN: -1,
          Y_SPEED_MAX: -5,
          OPACITY: 1,
          OPACITY_SPEED_MIN: 0.01,
          OPACITY_SPEED_MAX: 0.05,
          SIZE_MIN: f.EMOJI_HOSE_EMOJI_SIZE / 2,
          SIZE_MAX: f.EMOJI_HOSE_EMOJI_SIZE,
        },
        m = (0, i.default)(() => ({ particles: {}, lastSpawned: {} }));
      function p(e, t) {
        var n;
        l(
          null !== (n = m.getState().particles[e.id]) && void 0 !== n ? n : {}
        ).forEach(t);
      }
      function E(e) {
        var t, n, a, i;
        let {
          emojiHose: E,
          context: S,
          canvasWidth: g,
          canvasHeight: C,
          fallbackColor: _,
          outlineColorDark: I,
          outlineColorLight: T,
          streamerId: v,
          deadDrawables: x,
        } = e;
        S.save();
        let N = u.default.getEmojiImage(
            null !==
              (n =
                null !== (t = E.emojiId) && void 0 !== t ? t : E.emojiName) &&
              void 0 !== n
              ? n
              : ""
          ),
          A = (0, d.normalizeCoordinate)(E.x, g),
          M = (0, d.normalizeCoordinate)(E.y, C),
          { outlineColor: R } = (0, d.getUserColors)(E.userId, I, T, _);
        if (
          (p(E, e => {
            var t, n;
            return (
              (t = E),
              (n = e),
              void ((n.x += n.xSpeed * window.devicePixelRatio),
              (n.y += n.ySpeed * window.devicePixelRatio),
              (n.opacity -= n.opacitySpeed),
              n.opacity <= 0 &&
                m.setState(
                  e => (
                    delete e.particles[t.id][n.id],
                    0 === Object.keys(e.particles[t.id]).length &&
                      delete e.particles[t.id],
                    e
                  )
                ))
            );
          }),
          !(function (e, t, n) {
            var a;
            let i =
                null !== (a = m.getState().lastSpawned[e.id]) && void 0 !== a
                  ? a
                  : 0,
              r = Date.now();
            if (!(i + 100 > r) && e.state !== o.EmojiHoseState.STOP)
              (0.8 >= Math.random() || i + 300 < r) &&
                m.setState(a => {
                  var i, r, u;
                  let o =
                      null !== (i = a.particles[e.id]) && void 0 !== i ? i : {},
                    d = l.random(1, 2);
                  for (let e = 0; e < d; e++) {
                    let e =
                      ((r = t),
                      (u = n),
                      {
                        id: (0, s.v4)(),
                        x: r + l.random(-h.X_OFFSET, h.X_OFFSET),
                        y: u + l.random(-h.Y_OFFSET, h.Y_OFFSET),
                        xSpeed: l.random(-h.X_SPEED, h.X_SPEED),
                        ySpeed: l.random(h.Y_SPEED_MIN, h.Y_SPEED_MAX),
                        opacity: h.OPACITY,
                        opacitySpeed: l.random(
                          h.OPACITY_SPEED_MIN,
                          h.OPACITY_SPEED_MAX
                        ),
                        size: l.random(h.SIZE_MIN, h.SIZE_MAX),
                      });
                    o[e.id] = e;
                  }
                  return (
                    (a.particles[e.id] = o),
                    (a.lastSpawned[e.id] = Date.now()),
                    a
                  );
                });
          })(E, A, M),
          (0, c.renderAvatarCursorOutline)(S, A, M, R, f.OUTLINE_WIDTH),
          (0, c.renderAvatarCursor)(S, A, M, E.userId),
          p(E, e =>
            (function (e, t, n) {
              if (null == t) return;
              let a = n.size * window.devicePixelRatio,
                l = n.x - (a / 2) * window.devicePixelRatio,
                s = n.y - 1.2 * a * window.devicePixelRatio;
              (e.globalAlpha = n.opacity),
                e.drawImage(t, a / 2 + l, a / 2 + s, a, a);
            })(S, N, e)
          ),
          E.lastUpdatedAt + f.EMOJI_HOSE_PING_DELAY < Date.now() &&
            (0, r.stopRenderedEmojiHose)(v, E),
          E.state === o.EmojiHoseState.STOP &&
            ((a = E),
            !(
              Object.keys(
                null !== (i = m.getState().particles[a.id]) && void 0 !== i
                  ? i
                  : {}
              ).length > 0
            )))
        )
          x.push(E);
        S.restore();
      }
    },
    717482: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        }),
        n("424973");
      var a = n("52477"),
        l = n("357304"),
        s = n("827520");
      function i(e) {
        let {
          line: t,
          context: n,
          canvasWidth: i,
          canvasHeight: r,
          fallbackColor: u,
          outlineColorDark: o,
          outlineColorLight: d,
          linesDrawnAt: c,
          deadDrawables: f,
        } = e;
        null == c.current[t.id] && (c.current[t.id] = Date.now()),
          (n.lineCap = "round"),
          (n.lineJoin = "round");
        let h = t.points.map(e => (0, a.normalizeCoordinates)(e, i, r)),
          m = c.current[t.id],
          p = e => m + e.deltaTime,
          E = e => p(e) + 1500 >= Date.now(),
          S = e => p(e) <= Date.now() && E(e),
          g = h.find(S);
        if (null == g) {
          !E(t.points[t.points.length - 1]) && f.push(t);
          return;
        }
        let C = (e, t) => {
            let a = null;
            (n.lineWidth = t * window.devicePixelRatio),
              (n.strokeStyle = e),
              n.beginPath(),
              n.moveTo(g.x, g.y);
            for (let e = 1; e < h.length; e++) {
              let t = h[e];
              S(t) && (n.lineTo(t.x, t.y), (a = t));
            }
            return n.stroke(), a;
          },
          { fillColor: _, outlineColor: I } = (0, a.getUserColors)(
            t.userId,
            o,
            d,
            u
          ),
          T = C(I, 6 + s.OUTLINE_WIDTH),
          v = null != T && S(T);
        v && (0, l.renderAvatarCursorOutline)(n, T.x, T.y, I, s.OUTLINE_WIDTH),
          C(_, 6),
          v && (0, l.renderAvatarCursor)(n, T.x, T.y, t.userId);
      }
    },
    306645: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var a = n("884691"),
        l = n("446674"),
        s = n("374014"),
        i = n("205817"),
        r = n("599110"),
        u = n("49111"),
        o = n("646718");
      function d(e, t) {
        let {
            handleMouseDown: n,
            handleMouseMove: d,
            handleMouseUp: c,
            handleMouseEnter: f,
          } = e,
          h = a.useRef(null),
          m = (0, l.useStateFromStores)([i.default], () =>
            i.default.getRTCConnection((0, s.encodeStreamKey)(t))
          ),
          p = a.useCallback(
            (e, t, a) => {
              (h.current = Date.now()), n(e, t, a);
            },
            [n]
          ),
          E = a.useCallback(
            (e, t, n) => {
              if ((c(e, t, n), null != h.current)) {
                if (null != m) {
                  var a, l, s;
                  (a = e),
                    (l = m),
                    (s = Date.now() - h.current),
                    r.default.track(u.AnalyticEvents.PREMIUM_FEATURE_USAGE, {
                      feature_name: ""
                        .concat(
                          o.AnalyticsPremiumFeatureNames.SHARED_CANVAS,
                          "_"
                        )
                        .concat(a.type),
                      feature_tier: o.AnalyticsPremiumFeatureTiers.FREE,
                      media_session_id: l.getMediaSessionId(),
                      parent_media_session_id: l.parentMediaSessionId,
                      guild_id: l.guildId,
                      duration: s,
                    });
                }
                h.current = null;
              }
            },
            [c, m]
          );
        return {
          handleMouseUp: E,
          handleMouseDown: p,
          handleMouseMove: d,
          handleMouseEnter: f,
        };
      }
    },
    195513: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("884691"),
        l = n("748820"),
        s = n("760679");
      let i = () => {};
      function r(e, t, n) {
        let r = a.useRef((0, l.v4)()),
          u = a.useRef(Date.now()),
          o = a.useCallback(
            (a, l) => {
              let i = { x: a, y: l, deltaTime: Date.now() - u.current };
              (0, s.drawLinePoint)(t, r.current, e, n, i),
                (0, s.updateLinePoints)(r.current, e, n, [i]);
            },
            [t, n, e]
          ),
          d = a.useCallback(
            (e, t, n) => {
              (r.current = (0, l.v4)()), (u.current = Date.now()), o(t, n);
            },
            [o]
          ),
          c = a.useCallback((e, t, n) => o(t, n), [o]),
          f = a.useCallback((e, t, n) => d(e, t, n), [d]);
        return a.useMemo(
          () => ({
            handleMouseDown: d,
            handleMouseMove: c,
            handleMouseUp: i,
            handleMouseEnter: f,
          }),
          [d, f, c]
        );
      }
    },
    107517: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        });
      var a = n("884691"),
        l = n("917351"),
        s = n.n(l),
        i = n("748820"),
        r = n("862337"),
        u = n("760679"),
        o = n("315841"),
        d = n("827520");
      let c = s.debounce(u.startEmojiHose, d.EVENT_TICK_RATE, {
        maxWait: d.EVENT_TICK_RATE,
      });
      function f(e, t, n) {
        let l = a.useRef((0, i.v4)()),
          s = a.useRef(new r.Interval()),
          f = a.useCallback(
            a => {
              (a.lastUpdatedAt = Date.now()),
                (0, u.updateEmojiHose)(a, e, n),
                (0, u.startEmojiHose)(t, n, a);
            },
            [t, n, e]
          ),
          h = a.useCallback(
            (a, r, c) => {
              l.current = (0, i.v4)();
              let h = {
                ...a,
                id: l.current,
                x: r,
                y: c,
                userId: e,
                state: o.EmojiHoseState.START,
                lastUpdatedAt: Date.now(),
              };
              (0, u.startEmojiHose)(t, n, h),
                (0, u.updateEmojiHose)(h, e, n),
                s.current.start(d.EMOJI_HOSE_PING_DELAY, () => f(h));
            },
            [e, t, n, f]
          ),
          m = a.useCallback(
            (a, i, r) => {
              let h = {
                ...a,
                id: l.current,
                x: i,
                y: r,
                userId: e,
                state: o.EmojiHoseState.START,
                lastUpdatedAt: Date.now(),
              };
              c(t, n, h),
                (0, u.updateEmojiHose)(h, e, n),
                s.current.start(d.EMOJI_HOSE_PING_DELAY, () => f(h));
            },
            [e, t, n, f]
          ),
          p = a.useCallback(
            (a, i, r) => {
              c.cancel(),
                (0, u.stopEmojiHose)(t, n, l.current),
                (0, u.updateEmojiHose)(
                  {
                    ...a,
                    id: l.current,
                    x: i,
                    y: r,
                    userId: e,
                    state: o.EmojiHoseState.STOP,
                    lastUpdatedAt: Date.now(),
                  },
                  e,
                  n
                ),
                s.current.stop();
            },
            [t, n, e]
          ),
          E = a.useCallback((e, t, n) => m(e, t, n), [m]);
        return a.useMemo(
          () => ({
            handleMouseDown: h,
            handleMouseMove: m,
            handleMouseUp: p,
            handleMouseEnter: E,
          }),
          [h, E, m, p]
        );
      }
    },
    291499: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var a = n("884691"),
        l = n("65597"),
        s = n("242260"),
        i = n("315841"),
        r = n("52477"),
        u = n("306645"),
        o = n("195513"),
        d = n("107517");
      function c(e) {
        let {
            user: t,
            channelId: n,
            streamerId: c,
            stream: f,
            focused: h,
            canvas: m,
          } = e,
          p = a.useRef(!1),
          E = (0, l.default)([s.default], () => s.default.getDrawMode()),
          S = (0, u.default)((0, o.default)(t.id, n, c), f),
          g = (0, u.default)((0, d.default)(t.id, n, c), f),
          C = a.useCallback(
            (e, t, n) => {
              if (null == m) return;
              let { x: a, y: l } = (0, r.getMouseCoordinatesPercent)(m, n);
              switch (t.type) {
                case i.DrawableType.LINE:
                  return S[e](t, a, l);
                case i.DrawableType.EMOJI_HOSE:
                  return g[e](t, a, l);
              }
            },
            [m, S, g]
          ),
          _ = a.useCallback(
            e => {
              h &&
                null != E &&
                (e.stopPropagation(),
                (p.current = !0),
                C("handleMouseDown", E, e));
            },
            [C, E, h]
          ),
          I = a.useCallback(
            e => {
              h &&
                null != E &&
                (e.stopPropagation(), p.current && C("handleMouseMove", E, e));
            },
            [C, E, h]
          ),
          T = a.useCallback(
            e => {
              h &&
                null != E &&
                (e.stopPropagation(),
                (p.current = !1),
                C("handleMouseUp", E, e));
            },
            [C, E, h]
          ),
          v = a.useCallback(
            e => {
              p.current && null != E && C("handleMouseEnter", E, e);
            },
            [C, E]
          );
        a.useEffect(() => {
          let e = e => {
            null != E && ((p.current = !1), C("handleMouseUp", E, e));
          };
          return (
            window.addEventListener("mouseup", e),
            () => window.removeEventListener("mouseup", e)
          );
        }, [C, E]);
        let x = a.useCallback(
          e => {
            h && null != E && e.stopPropagation();
          },
          [E, h]
        );
        return {
          handleClick: x,
          handleMouseDown: _,
          handleMouseEnter: v,
          handleMouseMove: I,
          handleMouseUp: T,
        };
      }
    },
    154891: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return S;
          },
        }),
        n("424973");
      var a = n("884691"),
        l = n("862337"),
        s = n("669491"),
        i = n("77078"),
        r = n("462274"),
        u = n("800762"),
        o = n("760679"),
        d = n("242260"),
        c = n("315841"),
        f = n("52477"),
        h = n("553930"),
        m = n("717482"),
        p = n("827520");
      let E = 1e3 / 60;
      function S(e, t, n, S) {
        let g = (0, i.useToken)(s.default.unsafe_rawColors.BRAND_500).hex(),
          C = (0, i.useToken)(s.default.unsafe_rawColors.BLACK_500).hex(),
          _ = (0, i.useToken)(s.default.unsafe_rawColors.WHITE_500).hex(),
          I = a.useRef({}),
          T = a.useRef(new l.Interval()),
          v = a.useCallback(
            t => {
              let n = d.default.getDrawables(t);
              (0, f.clearCanvas)(e),
                !(function (e) {
                  let {
                    canvasRef: t,
                    drawables: n,
                    fallbackColor: a,
                    linesDrawnAt: l,
                    streamerId: s,
                    channelId: i,
                    outlineColorDark: r,
                    outlineColorLight: d,
                  } = e;
                  if (0 === n.length) return;
                  let f = t.current;
                  if (null == f) return;
                  let p = f.getContext("2d");
                  if (null == p) return;
                  let { width: E, height: S } = f.getBoundingClientRect(),
                    g = [];
                  n.forEach(e => {
                    let t =
                      null != u.default.getVoiceStateForChannel(i, e.userId);
                    if (!t) {
                      g.push(e);
                      return;
                    }
                    !(function (e) {
                      let {
                        drawable: t,
                        context: n,
                        canvasWidth: a,
                        canvasHeight: l,
                        fallbackColor: s,
                        outlineColorDark: i,
                        outlineColorLight: r,
                        linesDrawnAt: u,
                        streamerId: o,
                        deadDrawables: d,
                      } = e;
                      switch (t.type) {
                        case c.DrawableType.LINE:
                          return (0, m.default)({
                            line: t,
                            context: n,
                            canvasWidth: a,
                            canvasHeight: l,
                            fallbackColor: s,
                            outlineColorDark: i,
                            outlineColorLight: r,
                            linesDrawnAt: u,
                            deadDrawables: d,
                          });
                        case c.DrawableType.EMOJI_HOSE:
                          return (0, h.default)({
                            emojiHose: t,
                            context: n,
                            canvasWidth: a,
                            canvasHeight: l,
                            fallbackColor: s,
                            outlineColorDark: i,
                            outlineColorLight: r,
                            streamerId: o,
                            deadDrawables: d,
                          });
                      }
                    })({
                      drawable: e,
                      context: p,
                      canvasWidth: E,
                      canvasHeight: S,
                      fallbackColor: a,
                      outlineColorDark: r,
                      outlineColorLight: d,
                      linesDrawnAt: l,
                      deadDrawables: g,
                      streamerId: s,
                    });
                  }),
                    g.length > 0 && (0, o.clearDrawables)(g, s);
                })({
                  canvasRef: e,
                  drawables: n,
                  fallbackColor: g,
                  linesDrawnAt: I,
                  streamerId: t,
                  outlineColorDark: C,
                  outlineColorLight: _,
                  channelId: S,
                });
            },
            [e, S, g, C, _]
          );
        a.useEffect(() => {
          let t = new ResizeObserver(() => {
            let t = e.current;
            if (null == t) return;
            let { width: a, height: l } = t.getBoundingClientRect();
            (t.width = a * window.devicePixelRatio),
              (t.height = l * window.devicePixelRatio),
              v(n);
          });
          return (
            null != e.current && t.observe(e.current), () => t.disconnect()
          );
        }, [e, v, n]);
        let x = a.useCallback(() => {
          let t = d.default.getDrawables(n),
            a = h.useEmojiHoseStore.getState().particles,
            l = t.length > 0 || Object.keys(a).length > 0;
          l &&
            null == T.current._ref &&
            (null == T.current._ref
              ? (v(n), T.current.start(E, () => v(n)))
              : !l &&
                null != T.current._ref &&
                (T.current.stop(), (0, f.clearCanvas)(e)));
        }, [e, v, n]);
        a.useEffect(() => {
          let e = T.current;
          return (
            d.default.addChangeListener(x),
            x(),
            (0, r.maybeFetchColors)(
              t.getAvatarURL(null, p.AVATAR_COLOR_AVATAR_SIZE)
            ),
            () => {
              d.default.removeChangeListener(x), e.stop();
            }
          );
        });
      }
    },
    952221: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return p;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("627445"),
        i = n.n(s),
        r = n("65597"),
        u = n("550410"),
        o = n("697218"),
        d = n("780166"),
        c = n("291499"),
        f = n("154891"),
        h = n("173597");
      function m(e) {
        let { focused: t, channelId: n, streamerId: s, stream: d } = e,
          m = l.useRef(null),
          p = (0, r.default)([o.default], () => o.default.getCurrentUser());
        i(null != p, "user cannot be null"), (0, f.default)(m, p, s, n);
        let {
          handleClick: E,
          handleMouseDown: S,
          handleMouseEnter: g,
          handleMouseMove: C,
          handleMouseUp: _,
        } = (0, c.default)({
          user: p,
          channelId: n,
          streamerId: s,
          stream: d,
          focused: t,
          canvas: m.current,
        });
        return (0, a.jsx)(u.default, {
          children: (0, a.jsx)("canvas", {
            ref: m,
            onClick: E,
            onMouseDown: S,
            onMouseEnter: g,
            onMouseMove: C,
            onMouseUp: _,
            className: h.sharedCanvas,
          }),
        });
      }
      function p(e) {
        let { isSharedCanvasEnabled: t } = d.default.useExperiment(
          { guildId: e.guildId, location: "d0de1c_1" },
          { autoTrackExposure: !0 }
        );
        return !t || e.hasScreenMessage ? null : (0, a.jsx)(m, { ...e });
      }
    },
    429829: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          CustomCallSoundUpsell: function () {
            return T;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("446674"),
        s = n("271841"),
        i = n("605451"),
        r = n("577776"),
        u = n("77078"),
        o = n("79112"),
        d = n("635956"),
        c = n("632892"),
        f = n("697218"),
        h = n("945330"),
        m = n("216422"),
        p = n("719923"),
        E = n("49111"),
        S = n("994428"),
        g = n("646718"),
        C = n("397336"),
        _ = n("782340"),
        I = n("694393");
      function T(e) {
        var t;
        let { onClose: n, markAsDismissed: T } = e,
          v = (0, l.useStateFromStores)([f.default], () =>
            f.default.getCurrentUser()
          );
        let x =
            (t = null == v ? void 0 : v.premiumType) === g.PremiumTypes.TIER_2
              ? _.default.Messages.CALL_SOUNDS_UPSELL_DESCRIPTION_TIER_2
              : null == t
                ? _.default.Messages.CALL_SOUNDS_UPSELL_DESCRIPTION_NON_SUB
                : _.default.Messages.CALL_SOUNDS_UPSELL_DESCRIPTION_NON_TIER_2,
          N = p.default.canUseCustomCallSounds(v);
        return (0, a.jsxs)(c.default, {
          isShown: !0,
          type: c.FeatureBorderTypes.PREMIUM,
          className: I.upsellOuter,
          backgroundClassName: I.upsellInner,
          children: [
            null != T
              ? (0, a.jsx)(u.Clickable, {
                  className: I.close,
                  onClick: () =>
                    null == T ? void 0 : T(S.ContentDismissActionType.DISMISS),
                  "aria-label": _.default.Messages.CLOSE,
                  children: (0, a.jsx)(h.default, {
                    className: I.closeIcon,
                    width: 16,
                    height: 16,
                  }),
                })
              : null,
            (0, a.jsxs)("div", {
              className: I.upsellTitle,
              children: [
                (0, a.jsx)(m.default, {
                  className: I.nitroWheel,
                  width: 18,
                  height: 18,
                }),
                (0, a.jsx)(i.Heading, {
                  variant: "heading-sm/bold",
                  children: _.default.Messages.CALL_SOUNDS_UPSELL_TITLE_NON_SUB,
                }),
              ],
            }),
            (0, a.jsx)(r.Text, { variant: "text-sm/normal", children: x }),
            N
              ? (0, a.jsx)(s.Button, {
                  onClick: function () {
                    o.default.open(
                      E.UserSettingsSections.VOICE,
                      C.SOUNDBOARD_SUBSECTION
                    ),
                      null == n || n(),
                      null == T || T(S.ContentDismissActionType.PRIMARY);
                  },
                  children: _.default.Messages.CHECK_IT_OUT,
                })
              : (0, a.jsx)(d.default, {
                  buttonText: _.default.Messages.PREMIUM_UPSELL_GET_NITRO,
                  subscriptionTier: g.PremiumSubscriptionSKUs.TIER_2,
                  premiumModalAnalyticsLocation: {
                    section: E.AnalyticsSections.SOUNDBOARD_SOUND_PICKER,
                    object: E.AnalyticsObjects.BUTTON_CTA,
                  },
                  color: s.Button.Colors.GREEN,
                  onSubscribeModalClose: () =>
                    null == T ? void 0 : T(S.ContentDismissActionType.PRIMARY),
                }),
          ],
        });
      }
    },
    844208: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          participantMemberInfo: function () {
            return r;
          },
        });
      var a = n("718517"),
        l = n("158998"),
        s = n("782340");
      let i = 1 * a.default.Millis.DAY;
      function r(e) {
        var t, n, a;
        if ((0, l.isNewUser)(e.user))
          return s.default.Messages.REQUEST_TO_SPEAK_MEMBER_INFO_NEW_TO_DISCORD;
        let r = null === (t = e.member) || void 0 === t ? void 0 : t.joinedAt;
        if (null == r)
          return s.default.Messages.REQUEST_TO_SPEAK_MEMBER_INFO_NON_MEMBER;
        if (null != e.member && e.member.roles.length > 0)
          return null !==
            (a = null === (n = e.role) || void 0 === n ? void 0 : n.name) &&
            void 0 !== a
            ? a
            : s.default.Messages.REQUEST_TO_SPEAK_MEMBER_INFO_MEMBER_ROLES;
        let u = new Date().getTime() - Date.parse(r);
        return u < i
          ? s.default.Messages.REQUEST_TO_SPEAK_MEMBER_INFO_NEW_MEMBER
          : s.default.Messages.REQUEST_TO_SPEAK_MEMBER_INFO_MEMBER;
      }
    },
    111542: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          updateStageMusicMuted: function () {
            return l;
          },
          updateStageMusicShouldPlay: function () {
            return s;
          },
        });
      var a = n("913144");
      function l(e) {
        a.default.dispatch({ type: "STAGE_MUSIC_MUTE", muted: e });
      }
      function s(e) {
        a.default.dispatch({ type: "STAGE_MUSIC_PLAY", play: e });
      }
    },
    734019: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var a = n("271938"),
        l = n("488464"),
        s = n("998716"),
        i = n("325861"),
        r = n("834052");
      function u(e) {
        if (!e.isGuildStageVoice()) return !1;
        let t = r.default.isLive(e.id);
        if (!t) return !1;
        let n = a.default.getId(),
          u = i.default.isModerator(n, e.id);
        if (!u) return !1;
        let o = i.default.isSpeaker(n, e.id);
        if (!o) return !1;
        let d = l.default.getMutableParticipants(e.id),
          c = d.find(
            t => t.user.id !== n && i.default.isModerator(t.user.id, e.id)
          );
        if (null == c) return !0;
        let f = l.default.getMutableParticipants(
            e.id,
            s.StageChannelParticipantNamedIndex.SPEAKER
          ),
          h = f.find(
            t => t.user.id !== n && i.default.isModerator(t.user.id, e.id)
          );
        return null == h;
      }
    },
    519581: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var a = n("446674"),
        l = n("271938"),
        s = n("808422");
      function i(e) {
        let t = (0, a.useStateFromStores)([l.default], () => l.default.getId()),
          n = (0, s.default)(t, e);
        return n === s.RequestToSpeakStates.ON_STAGE;
      }
    },
    413882: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useRequestToSpeakPermission: function () {
            return o;
          },
        }),
        n("222007");
      var a = n("884691"),
        l = n("446674"),
        s = n("42203"),
        i = n("991170"),
        r = n("244480"),
        u = n("49111");
      function o(e) {
        let t = (0, l.useStateFromStores)(
            [s.default],
            () => s.default.getChannel(e),
            [e]
          ),
          n = i.default.canEveryoneRole(u.Permissions.REQUEST_TO_SPEAK, t),
          [o, d] = a.useState(n);
        return (
          a.useEffect(() => {
            n !== o && d(n);
          }, [n]),
          [
            o,
            e => {
              null != t &&
                (d(e),
                (0, r.setEveryoneRolePermissionAllowed)(
                  t,
                  u.Permissions.REQUEST_TO_SPEAK,
                  e
                ));
            },
          ]
        );
      }
    },
    223378: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useThrottleDurationForChannel: function () {
            return m;
          },
          useStageChannelParticipantsListThrottled: function () {
            return p;
          },
        }),
        n("424973"),
        n("222007");
      var a,
        l,
        s = n("884691"),
        i = n("917351"),
        r = n("446674"),
        u = n("560103"),
        o = n("191145"),
        d = n("334572"),
        c = n("488464"),
        f = n("567469"),
        h = n("998716");
      function m(e) {
        let t = (0, f.useStageParticipantsCount)(
            e,
            h.StageChannelParticipantNamedIndex.AUDIENCE
          ),
          [n, a] = s.useState(!1);
        return (
          s.useEffect(() => {
            t > 100 ? a(!0) : t < 75 && a(!1);
          }, [t]),
          n ? 5e3 : 0
        );
      }
      function p(e, t, n) {
        let a = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],
          l = (function (e, t, n) {
            let a = (0, r.useStateFromStores)(
                [c.default],
                () => [e, c.default.getParticipantsVersion(e)],
                [e],
                d.isVersionEqual
              ),
              l = (0, r.useStateFromStores)(
                [o.default],
                () => o.default.getSelectedParticipantId(e),
                [e]
              );
            return s.useMemo(() => {
              let s = [],
                r = [],
                u = -1,
                o = [];
              if (n) {
                let t = c.default.getMutableParticipants(
                  e,
                  h.StageChannelParticipantNamedIndex.SPEAKER
                );
                for (let e of t)
                  if (e.type === h.StageChannelParticipantTypes.STREAM)
                    e.id !== l && o.push(e), u++;
                  else break;
              }
              let d = (e, t, n) => {
                  let a = n ? e.filter((e, t) => e.id !== l && t > u) : e,
                    o = (0, i.chunk)(a, t);
                  r.push(o), s.push(o.length);
                },
                f = null != l ? c.default.getParticipant(e, l) : null;
              return (
                (null == f ? void 0 : f.speaker) ? d([f], 1, !1) : d([], 1, !1),
                [
                  h.StageChannelParticipantNamedIndex.SPEAKER,
                  h.StageChannelParticipantNamedIndex.AUDIENCE,
                ].forEach(e => {
                  d(
                    c.default.getMutableParticipants(a[0], e),
                    t[e],
                    e === h.StageChannelParticipantNamedIndex.SPEAKER
                  );
                }),
                d(o, 1, !1),
                [s, r]
              );
            }, [a, t, l, n, e]);
          })(e, t, a),
          [f, m] = l,
          [p, E] = (0, u.useThrottledState)(l, n, [
            t[h.StageChannelParticipantNamedIndex.AUDIENCE],
          ]),
          S = [f[a ? 3 : 0], f[1], p[2]],
          g = [m[a ? 3 : 0], m[1], E[2]];
        return [S, g];
      }
      ((l = a || (a = {}))[(l.SELECTED = 0)] = "SELECTED"),
        (l[(l.SPEAKER = 1)] = "SPEAKER"),
        (l[(l.AUDIENCE = 2)] = "AUDIENCE"),
        (l[(l.MEDIA = 3)] = "MEDIA");
    },
    759718: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        }),
        n("222007"),
        n("424973");
      var a = n("446674"),
        l = n("334572"),
        s = n("488464"),
        i = n("998716");
      function r(e) {
        let t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 3,
          [n] = (0, a.useStateFromStores)(
            [s.default],
            () => {
              let n = s.default
                  .getMutableParticipants(e)
                  .filter(e => e.type === i.StageChannelParticipantTypes.VOICE),
                a = [];
              for (let e of n) {
                if (a.length >= t) break;
                null == a.find(t => t.id === e.user.id) && a.push(e.user);
              }
              return [
                { participants: n, usersInSummary: a },
                s.default.getParticipantsVersion(e),
              ];
            },
            [e, t],
            l.isVersionEqual
          );
        return n;
      }
    },
    709752: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        }),
        n("222007");
      var a = n("884691"),
        l = n("446674"),
        s = n("271938"),
        i = n("244480"),
        r = n("808422");
      function u(e) {
        let t = (0, l.useStateFromStores)([s.default], () => s.default.getId()),
          n = (0, r.default)(t, e.id),
          u =
            n === r.RequestToSpeakStates.REQUESTED_TO_SPEAK ||
            n ===
              r.RequestToSpeakStates.REQUESTED_TO_SPEAK_AND_AWAITING_USER_ACK,
          [o, d] = a.useState(u);
        return (
          a.useEffect(() => {
            d(u);
          }, [u]),
          [
            o,
            function () {
              n ===
              r.RequestToSpeakStates.REQUESTED_TO_SPEAK_AND_AWAITING_USER_ACK
                ? (0, i.audienceAckRequestToSpeak)(e, !0)
                : (0, i.toggleRequestToSpeak)(e, !o),
                d(!o);
            },
          ]
        );
      }
    },
    973137: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        }),
        n("424973");
      var a = n("37983"),
        l = n("884691"),
        s = n("552700"),
        i = n("15698"),
        r = l.memo(function (e) {
          let { channel: t, participants: n, maxTiles: l } = e;
          if (0 === n.length) return null;
          let r = [];
          for (let e = 0; e < l; e++)
            if (e < n.length) {
              let l = n[e];
              r.push(
                (0, a.jsx)(s.default, { channel: t, participant: l }, l.id)
              );
            } else r.push((0, a.jsx)(s.AudienceEmptyTile, {}, e));
          return (0, a.jsx)("div", { className: i.participants, children: r });
        });
    },
    552700: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          AudienceEmptyTile: function () {
            return N;
          },
          default: function () {
            return A;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("627445"),
        u = n.n(r),
        o = n("446674"),
        d = n("669491"),
        c = n("77078"),
        f = n("272030"),
        h = n("244201"),
        m = n("506885"),
        p = n("981601"),
        E = n("26989"),
        S = n("328275"),
        g = n("118503"),
        C = n("711486"),
        _ = n("387111"),
        I = n("808422"),
        T = n("26324");
      let v = l.memo(function (e) {
          let {
            guildId: t,
            channelId: n,
            user: l,
            isPremium: s,
            isBlocked: i,
          } = e;
          return (0, a.jsxs)("div", {
            className: T.textContainer,
            children: [
              i
                ? (0, a.jsx)(S.default, {
                    className: T.blockedIcon,
                    color: d.default.unsafe_rawColors.RED_400.css,
                  })
                : null,
              (0, a.jsx)(c.Text, {
                className: T.text,
                variant: "text-sm/normal",
                color: "header-primary",
                children: _.default.getName(t, n, l),
              }),
              s
                ? (0, a.jsx)(g.default, {
                    className: T.boost,
                    color: d.default.unsafe_rawColors.GUILD_BOOSTING_PINK.css,
                  })
                : null,
            ],
          });
        }),
        x = l.memo(function (e) {
          var t;
          let { participant: n, guildId: l, channel: s, isPremium: r } = e,
            { user: u, blocked: o, rtsState: d } = n,
            c =
              d ===
              I.RequestToSpeakStates.REQUESTED_TO_SPEAK_AND_AWAITING_USER_ACK,
            f = d === I.RequestToSpeakStates.REQUESTED_TO_SPEAK || c;
          return (0, a.jsxs)(a.Fragment, {
            children: [
              (0, a.jsxs)("div", {
                className: T.avatarContainer,
                children: [
                  f &&
                    (0, a.jsx)(C.default, {
                      className: i(T.icon, { [T.invited]: c }),
                    }),
                  (0, a.jsx)("img", {
                    src:
                      null !== (t = u.getAvatarURL(s.guild_id, 56, !1)) &&
                      void 0 !== t
                        ? t
                        : void 0,
                    alt: u.username,
                    "aria-label": u.username,
                    className: i(T.avatar, { [T.faded]: o }),
                  }),
                ],
              }),
              (0, a.jsx)(v, {
                guildId: l,
                channelId: s.id,
                user: u,
                isPremium: r,
                isBlocked: o,
              }),
            ],
          });
        }),
        N = () => (0, a.jsx)("div", { className: T.tileBaseContainer });
      var A = l.memo(function (e) {
        let { participant: t, channel: s } = e,
          { user: r, blocked: d } = t,
          S = s.getGuildId(),
          g = (0, h.useAppContext)(),
          C = (0, o.useStateFromStores)(
            [E.default],
            () => {
              var e;
              return (
                null != S &&
                (null === (e = E.default.getMember(S, r.id)) || void 0 === e
                  ? void 0
                  : e.premiumSince) != null
              );
            },
            [S, r.id]
          );
        u(null != S, "Channel cannot be guildless");
        let _ = l.useCallback(
            e => {
              (0, f.openContextMenuLazy)(
                e,
                async () => {
                  let { default: e } = await n
                    .el("834247")
                    .then(n.bind(n, "834247"));
                  return t =>
                    (0, a.jsx)(e, {
                      ...t,
                      user: r,
                      guildId: S,
                      channel: s,
                      showMediaItems: !0,
                      showStageChannelItems: !0,
                      showChatItems: !1,
                    });
                },
                { context: g }
              );
            },
            [r, S, s, g]
          ),
          I = l.useCallback(
            e =>
              (0, a.jsx)(p.default, {
                ...e,
                guildId: S,
                channelId: s.id,
                userId: r.id,
              }),
            [s.id, S, r.id]
          );
        return (0, a.jsx)(c.Popout, {
          preload: () =>
            (0, m.default)(r.id, r.getAvatarURL(s.guild_id, 80), {
              guildId: s.guild_id,
              channelId: s.id,
            }),
          renderPopout: I,
          position: "right",
          spacing: 8,
          children: e =>
            (0, a.jsx)(c.Clickable, {
              className: i(T.tileContainer, {
                [T.singleIcon]: C || d,
                [T.doubleIcon]: C && d,
              }),
              onContextMenu: _,
              ...e,
              children: (0, a.jsx)(x, {
                participant: t,
                guildId: S,
                channel: s,
                isPremium: C,
              }),
            }),
        });
      });
    },
    584199: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("679243"),
        s = n("42887"),
        i = n("24541");
      function r(e) {
        let {
            aspectRatio: t,
            blocked: n,
            channel: r,
            className: u,
            focused: o,
            children: d,
            inCall: c,
            inPopout: f,
            noBorder: h,
            onClick: m,
            onContextMenu: p,
            onDoubleClick: E,
            onVideoResize: S,
            paused: g,
            pulseSpeakingIndicator: C,
            participant: _,
            width: I,
            ...T
          } = e,
          v = s.default.getVideoComponent();
        return (0, a.jsx)("div", {
          style: { width: I },
          className: i.spaceBetweenTiles,
          children: (0, a.jsxs)("div", {
            className: i.tileSizer,
            style: { aspectRatio: t },
            children: [
              (0, a.jsx)(l.default, {
                blocked: n,
                channel: r,
                className: u,
                focused: o,
                inCall: c,
                inPopout: f,
                noBorder: h,
                onClick: m,
                onContextMenu: p,
                onDoubleClick: E,
                onVideoResize: S,
                participant: _,
                paused: g,
                pulseSpeakingIndicator: C,
                videoComponent: v,
                width: I,
                ...T,
              }),
              d,
            ],
          }),
        });
      }
    },
    116386: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("669491"),
        s = n("77078"),
        i = n("625687"),
        r = n("782340"),
        u = n("713033"),
        o = () =>
          (0, a.jsx)(s.Tooltip, {
            text: r.default.Messages.STAGE_MODERATOR_TOOLTIP,
            children: e =>
              (0, a.jsx)("div", {
                ...e,
                className: u.container,
                children: (0, a.jsx)(i.default, {
                  color: l.default.unsafe_rawColors.WHITE_500.css,
                }),
              }),
          });
    },
    876534: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("228427"),
        s = n("119184"),
        i = n("126929");
      function r(e) {
        let { className: t } = e;
        return (0, a.jsx)(s.default, {
          className: t,
          children: (0, a.jsx)("div", {
            className: i.background,
            children: (0, a.jsx)(l.default, {
              className: i.foreground,
              width: 32,
              height: 32,
            }),
          }),
        });
      }
    },
    506466: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return p;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("748820"),
        u = n("337062"),
        o = n("77078"),
        d = n("981913"),
        c = n("782340"),
        f = n("583546");
      function h(e) {
        let { width: t = 24, height: n = 24, isBadged: s = !1 } = e,
          [i] = l.useState(() => (0, r.v4)()),
          d = (0, o.useRedesignIconContext)().enabled;
        return (0, a.jsxs)("svg", {
          width: t,
          height: n,
          viewBox: "0 0 24 24",
          children: [
            (0, a.jsx)("defs", {
              children: (0, a.jsxs)("mask", {
                id: i,
                children: [
                  (0, a.jsx)("rect", {
                    fill: "white",
                    width: "100%",
                    height: "100%",
                  }),
                  s &&
                    (0, a.jsx)("circle", {
                      cx: "20",
                      cy: "19",
                      r: "10",
                      fill: "black",
                    }),
                ],
              }),
            }),
            d
              ? (0, a.jsx)("g", {
                  mask: "url(#".concat(i, ")"),
                  children: (0, a.jsx)(u.HandRequestSpeakListIcon, {}),
                })
              : (0, a.jsx)("path", {
                  fill: "currentColor",
                  fillRule: "evenodd",
                  clipRule: "evenodd",
                  d: "M20.53 7.76998C20.455 7.60998 20.31 7.48998 20.135 7.44498C20.075 7.42832 20.0106 7.41165 19.9462 7.39498L19.85 7.36998C19.305 7.22998 18.635 7.56498 18.35 8.11498L17.37 9.99998C17.085 10.55 16.725 10.51 16.57 9.90998L14.395 1.38498C14.24 0.779981 13.64 0.459981 13.05 0.664981C12.46 0.869981 12.095 1.52498 12.225 2.13498L13.495 7.95998C13.63 8.56998 13.575 9.11498 13.375 9.18498C13.175 9.25498 12.85 8.83498 12.65 8.24498L10.55 2.07498C10.35 1.48498 9.71004 1.17498 9.12004 1.37998C8.53004 1.58498 8.21504 2.22998 8.41004 2.81998L10.47 8.99998C10.665 9.58998 10.665 10.125 10.465 10.195C10.265 10.265 9.88504 9.86498 9.62504 9.29998L7.27504 4.29998C7.01004 3.73998 6.32004 3.44498 5.73004 3.64998C5.14504 3.85498 4.87504 4.47498 5.14004 5.03998L8.10004 11.045C8.36004 11.61 8.41004 12.125 8.21004 12.195C8.01004 12.265 7.53004 11.93 7.14004 11.445L5.10504 8.82498C4.71504 8.33998 4.04004 8.07498 3.59504 8.22998C3.15504 8.38498 3.04004 8.94498 3.34504 9.48998L5.84504 13.865C5.90004 14.02 7.35504 16.8 7.46004 16.915C8.50004 18.565 10.145 19.51 12.23 18.79L12.96 18.5372V15.84C12.96 14.2494 14.2494 12.96 15.84 12.96H18.3887C18.763 12.143 19.1735 11.2467 19.5492 10.4262L19.5592 10.4045L19.5647 10.3926L19.5648 10.3922L19.5702 10.3804L19.581 10.3569C19.9595 9.53048 20.3003 8.78624 20.53 8.28498C20.605 8.11498 20.605 7.92998 20.53 7.76998ZM11.81 20.51L12.96 20.0792V23.395H11.815L11.185 22.03C11.055 21.75 11.045 21.425 11.165 21.135C11.285 20.845 11.52 20.62 11.81 20.51ZM14.4 16.32C14.4 15.2596 15.2596 14.4 16.32 14.4H22.08C23.1404 14.4 24 15.2596 24 16.32V22.08C24 23.1404 23.1404 24 22.08 24H16.32C15.2596 24 14.4 23.1404 14.4 22.08V16.32ZM16.32 16.56H22.08V17.52H16.32V16.56ZM22.08 18.72H16.32V19.68H22.08V18.72ZM16.32 20.88H22.08V21.84H16.32V20.88Z",
                  mask: "url(#".concat(i, ")"),
                }),
          ],
        });
      }
      function m(e) {
        let { className: t, numRequestToSpeak: n } = e,
          l = n > 0;
        return (0, a.jsxs)("div", {
          className: i(f.raisedHandIcon, t),
          children: [
            (0, a.jsx)(h, { isBadged: l }),
            l
              ? (0, a.jsx)(o.Text, {
                  className: f.raisedHandCount,
                  variant: "text-xs/semibold",
                  children: n > 99 ? "99+" : n,
                })
              : null,
          ],
        });
      }
      function p(e) {
        let {
            toggleRequestToSpeakSidebar: t,
            showRequestToSpeakSidebar: n,
            className: s,
            numRequestToSpeak: i,
            onClick: r,
            ...u
          } = e,
          o = l.useCallback(() => {
            null == r || r(), t();
          }, [r, t]);
        return (0, a.jsx)(d.default, {
          onClick: o,
          label: n
            ? c.default.Messages.REQUEST_TO_SPEAK_AREA_CLOSE
            : c.default.Messages.REQUEST_TO_SPEAK_AREA_OPEN,
          className: s,
          iconComponent: () =>
            (0, a.jsx)(m, { numRequestToSpeak: i, className: s }),
          ...u,
        });
      }
    },
    145635: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return F;
          },
        }),
        n("222007");
      var a,
        l,
        s = n("37983"),
        i = n("884691"),
        r = n("414456"),
        u = n.n(r),
        o = n("627445"),
        d = n.n(o),
        c = n("446674"),
        f = n("77078"),
        h = n("272030"),
        m = n("308289"),
        p = n("750560"),
        E = n("506885"),
        S = n("981601"),
        g = n("26989"),
        C = n("957255"),
        _ = n("824563"),
        I = n("945330"),
        T = n("277174"),
        v = n("711486"),
        x = n("664336"),
        N = n("244480"),
        A = n("567469"),
        M = n("844208"),
        R = n("808422"),
        j = n("413882"),
        L = n("876534"),
        y = n("843455"),
        O = n("782340"),
        P = n("512908");
      let D = i.memo(function (e) {
          let { toggleRequestToSpeakSidebar: t, chatOpen: n } = e,
            a = (0, s.jsx)(x.default.Icon, {
              icon: I.default,
              tooltip: O.default.Messages.CLOSE,
              onClick: t,
            });
          return (0, s.jsxs)(x.default, {
            toolbar: a,
            className: u(P.headerContainer, { [P.chatOpen]: n }),
            children: [
              (0, s.jsx)(x.default.Icon, {
                icon: v.default,
                disabled: !0,
                "aria-label": O.default.Messages.REQUEST_TO_SPEAK_AREA_TITLE,
              }),
              (0, s.jsx)(x.default.Title, {
                children: O.default.Messages.REQUEST_TO_SPEAK_AREA_TITLE,
              }),
            ],
          });
        }),
        b = i.memo(function (e) {
          let { channel: t, participant: a, tempDisableOnInit: l = !1 } = e,
            [r, o] = i.useState(l);
          i.useEffect(() => {
            if (!r) return;
            let e = setTimeout(() => o(!1), 1e3);
            return () => clearTimeout(e);
          }, []);
          let C = t.getGuildId();
          d(null != C, "Channel cannot be guildless");
          let { isMobile: v, status: x } = (0, c.useStateFromStoresObject)(
              [_.default],
              () => ({
                isMobile: _.default.isMobileOnline(a.user.id),
                status: _.default.getStatus(a.user.id, C),
              })
            ),
            A = (0, c.useStateFromStores)([g.default], () =>
              g.default.getMember(C, a.user.id)
            ),
            j = i.useMemo(() => ({ [C]: [a.user.id] }), [C, a.user.id]);
          (0, p.useSubscribeGuildMembers)(j);
          let L =
            a.rtsState ===
            R.RequestToSpeakStates.REQUESTED_TO_SPEAK_AND_AWAITING_USER_ACK;
          function y() {
            (0, N.setUserSuppress)(t, a.user.id, !1);
          }
          function D() {
            (0, N.setUserSuppress)(t, a.user.id, !0);
          }
          let b = e => {
            (0, h.openContextMenuLazy)(e, async () => {
              let { default: e } = await n
                .el("834247")
                .then(n.bind(n, "834247"));
              return n =>
                (0, s.jsx)(e, {
                  ...n,
                  user: a.user,
                  guildId: C,
                  channel: t,
                  showMediaItems: !0,
                });
            });
          };
          return (0, s.jsxs)("div", {
            className: P.participantRowContainer,
            children: [
              (0, s.jsx)(f.Popout, {
                preload: () =>
                  (0, E.default)(
                    a.user.id,
                    a.user.getAvatarURL(t.guild_id, 80),
                    { guildId: t.guild_id, channelId: t.id }
                  ),
                renderPopout: e =>
                  (0, s.jsx)(S.default, {
                    ...e,
                    userId: a.user.id,
                    guildId: C,
                    channelId: t.id,
                  }),
                position: "left",
                spacing: 16,
                children: e => {
                  var t;
                  return (0, s.jsxs)(f.Clickable, {
                    className: P.participantMemberContainer,
                    onContextMenu: b,
                    ...e,
                    children: [
                      (0, s.jsx)(m.default, {
                        size: f.AvatarSizes.SIZE_40,
                        className: P.participantAvatar,
                        user: a.user,
                        isMobile: v,
                        status: x,
                      }),
                      (0, s.jsxs)("div", {
                        className: P.participantTextContainer,
                        children: [
                          (0, s.jsx)(f.NameWithRole, {
                            name: a.userNick,
                            color:
                              null !==
                                (t = null == A ? void 0 : A.colorString) &&
                              void 0 !== t
                                ? t
                                : void 0,
                            className: P.participantName,
                          }),
                          (0, s.jsx)(f.Text, {
                            variant: "text-xs/normal",
                            color: "header-secondary",
                            children: (0, M.participantMemberInfo)(a),
                          }),
                        ],
                      }),
                    ],
                  });
                },
              }),
              (0, s.jsx)(f.Tooltip, {
                text: L
                  ? O.default.Messages.REQUEST_TO_SPEAK_INVITATION_SEND
                  : O.default.Messages.REQUEST_TO_SPEAK_ACCEPT,
                children: e =>
                  (0, s.jsx)(f.Button, {
                    ...e,
                    innerClassName: P.buttonContainer,
                    look: f.Button.Looks.BLANK,
                    size: f.Button.Sizes.NONE,
                    onClick: y,
                    disabled: L || r,
                    children: (0, s.jsx)(T.default, { width: 16, height: 16 }),
                  }),
              }),
              (0, s.jsx)(f.Tooltip, {
                text: O.default.Messages.REQUEST_TO_SPEAK_DECLINE,
                children: e =>
                  (0, s.jsx)(f.Button, {
                    ...e,
                    innerClassName: u(P.buttonContainer, P.buttonMargin),
                    look: f.Button.Looks.BLANK,
                    size: f.Button.Sizes.NONE,
                    onClick: D,
                    children: (0, s.jsx)(I.default, { width: 16, height: 16 }),
                  }),
              }),
            ],
          });
        }),
        U = i.memo(function (e) {
          let { channel: t } = e,
            [n, a] = (0, j.useRequestToSpeakPermission)(t.id);
          return (0, s.jsx)(f.FormSwitch, {
            className: P.toggle,
            onChange: a,
            value: n,
            children: O.default.Messages.MODERATOR_ALLOW_EVERYONE_RAISE_HAND,
          });
        }),
        w = i.memo(function () {
          return (0, s.jsxs)("div", {
            className: P.emptyStateContainer,
            children: [
              (0, s.jsx)(L.default, {}),
              (0, s.jsx)(f.Text, {
                className: P.emptyStateTitle,
                variant: "text-lg/semibold",
                color: "header-primary",
                children: O.default.Messages.REQUEST_TO_SPEAK_EMPTY_LIST_TITLE,
              }),
              (0, s.jsx)(f.Text, {
                className: P.emptyStateBody,
                variant: "text-sm/normal",
                color: "header-secondary",
                children: O.default.Messages.REQUEST_TO_SPEAK_EMPTY_LIST_BODY,
              }),
            ],
          });
        });
      function F(e) {
        let { channel: t, toggleRequestToSpeakSidebar: n, chatOpen: a } = e,
          l = (0, A.useSortedRequestToSpeakParticipants)(t.id),
          i = (0, c.useStateFromStores)(
            [C.default],
            () =>
              C.default.can(y.Permissions.MANAGE_CHANNELS, t) ||
              C.default.can(y.Permissions.MANAGE_ROLES, t)
          ),
          r = [i ? 1 : 0, Math.max(1, l.length)];
        return (0, s.jsxs)("div", {
          className: u(P.container, { [P.chatOpen]: a }),
          children: [
            (0, s.jsx)(D, { toggleRequestToSpeakSidebar: n, chatOpen: a }),
            (0, s.jsx)(f.List, {
              className: P.contentContainer,
              sections: r,
              sectionHeight: function (e) {
                if (1 === e) return 40;
                return 0;
              },
              rowHeight: function (e) {
                switch (e) {
                  case 0:
                    return 66;
                  case 1:
                    if (0 === l.length) return 178;
                    return 48;
                }
                return 0;
              },
              renderRow: function (e) {
                let { section: n, row: a } = e;
                switch (n) {
                  case 0:
                    return (0, s.jsx)(U, { channel: t }, "rts-toggle");
                  case 1: {
                    if (0 === l.length)
                      return (0, s.jsx)(w, {}, "participants-empty");
                    let e = l[a];
                    return (0, s.jsx)(
                      b,
                      { channel: t, participant: e, tempDisableOnInit: !0 },
                      e.id
                    );
                  }
                }
                return null;
              },
              renderSection: function (e) {
                let { section: t } = e;
                if (1 === t)
                  return (0, s.jsx)(
                    f.Text,
                    {
                      className: P.listTitle,
                      variant: "text-xs/bold",
                      color: "header-secondary",
                      children:
                        l.length > 0
                          ? O.default.Messages.REQUEST_TO_SPEAK_LIST_TITLE.format(
                              { numHands: l.length }
                            )
                          : O.default.Messages.REQUEST_TO_SPEAK_AREA_TITLE,
                    },
                    "participants-section"
                  );
                return null;
              },
            }),
          ],
        });
      }
      ((l = a || (a = {}))[(l.TOGGLE_REQUEST_TO_SPEAK = 0)] =
        "TOGGLE_REQUEST_TO_SPEAK"),
        (l[(l.PARTICIPANTS = 1)] = "PARTICIPANTS");
    },
    58343: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return es;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("917351"),
        u = n("446674"),
        o = n("95410"),
        d = n("77078"),
        c = n("913144"),
        f = n("731898"),
        h = n("244201"),
        m = n("191145"),
        p = n("161306"),
        E = n("412090"),
        S = n("452027"),
        g = n("383294"),
        C = n("292687"),
        _ = n("393414"),
        I = n("486030"),
        T = n("115531"),
        v = n("620592"),
        x = n("336971"),
        N = n("555038"),
        A = n("634472"),
        M = n("271938"),
        R = n("712234"),
        j = n("305961"),
        L = n("957255"),
        y = n("18494"),
        O = n("773336"),
        P = n("439932"),
        D = n("50885"),
        b = n("716214"),
        U = n("567469"),
        w = n("998716"),
        F = n("834052"),
        V = n("534471"),
        k = n("145635"),
        B = n("277354"),
        G = n("100082"),
        H = n("598050"),
        W = n("977026"),
        Y = n("679703"),
        z = n("92447"),
        K = n("96151"),
        Z = n("49111"),
        Q = n("99795"),
        X = n("782340"),
        q = n("716208");
      let J = "HasBeenInStageChannel",
        $ = (e, t) => () => {
          let n = e.getGuildId();
          null != n && null != t && (0, _.transitionToGuild)(n, t),
            g.openChannelCallPopout(e);
        },
        ee = () => {
          c.default.wait(() => g.close(Z.PopoutWindowKeys.CHANNEL_CALL_POPOUT));
        },
        et = e => {
          g.setAlwaysOnTop(Z.PopoutWindowKeys.CHANNEL_CALL_POPOUT, e);
        };
      function en(e) {
        let {
            channel: t,
            appContext: n,
            popoutOpen: s,
            popoutWindow: i,
            popoutWindowAlwaysOnTop: r,
            selectedParticipant: o,
          } = e,
          d = t.getGuildId(),
          c = (0, u.useStateFromStores)(
            [y.default],
            () => y.default.getMostRecentSelectedTextChannelId(d),
            [d]
          ),
          f = M.default.getId(),
          h = (0, u.useStateFromStores)([m.default], () =>
            m.default.isFullscreenInContext(n)
          ),
          E =
            !h &&
            (!O.isPlatformEmbedded ||
              (O.isPlatformEmbedded &&
                D.default.supportsFeature(Z.NativeFeatures.POPOUT_WINDOWS))),
          S =
            null != o &&
            o.type !== Q.ParticipantTypes.ACTIVITY &&
            o.user.id !== f,
          g = l.useMemo(() => {
            var e;
            return null !== (e = null == i ? void 0 : i.window) && void 0 !== e
              ? e
              : window;
          }, [i]),
          C = (0, z.default)({
            channel: t,
            appContext: n,
            popoutOpen: s,
            popoutWindow: i,
            currentWindow: g,
          }),
          _ =
            n === Z.AppContext.POPOUT &&
            O.isPlatformEmbedded &&
            D.default.supportsFeature(Z.NativeFeatures.POPOUT_WINDOWS);
        return (0, a.jsxs)(a.Fragment, {
          children: [
            S
              ? (0, a.jsx)(A.default, {
                  context: (0, p.default)(o.type),
                  userId: o.user.id,
                  currentWindow: g,
                  sliderClassName: q.volumeSlider,
                })
              : null,
            _
              ? (0, a.jsx)(N.default, {
                  className: q.rightTrayIcon,
                  popoutWindowAlwaysOnTop: r,
                  onToggleStayOnTop: et,
                })
              : null,
            E
              ? (0, a.jsx)(x.default, {
                  className: q.rightTrayIcon,
                  popoutOpen: s,
                  onOpenPopout: $(t, c),
                  onClosePopout: ee,
                })
              : null,
            C,
          ],
        });
      }
      function ea(e) {
        let { channel: t } = e,
          n = (0, h.useAppContext)(),
          l = (0, u.useStateFromStores)([L.default], () =>
            L.default.can(Z.Permissions.CREATE_INSTANT_INVITE, t)
          ),
          s = (0, u.useStateFromStores)([j.default], () =>
            j.default.getGuild(t.guild_id)
          ),
          i = (0, u.useStateFromStores)([F.default], () =>
            F.default.getStageInstanceByChannel(t.id)
          ),
          r = l || (null == i ? void 0 : i.invite_code) != null;
        return null != s && r
          ? (0, a.jsx)(I.default, {
              channel: t,
              appContext: n,
              className: q.leftTrayIcon,
              analyticsLocation: Z.AnalyticsPages.GUILD_CHANNEL,
            })
          : null;
      }
      function el(e) {
        let t,
          {
            channel: n,
            toggleRequestToSpeakSidebar: s,
            showRequestToSpeakSidebar: o,
            popoutWindow: d,
            popoutWindowAlwaysOnTop: c,
            popoutOpen: f,
            chatOpen: p,
          } = e,
          S = (0, h.useAppContext)(),
          g = (0, u.useStateFromStores)(
            [y.default],
            () => y.default.getVoiceChannelId() === n.id,
            [n.id]
          ),
          C = (0, u.useStateFromStores)([L.default], () =>
            L.default.can(Z.Permissions.CONNECT, n)
          ),
          _ = (0, U.useStageParticipants)(
            n.id,
            w.StageChannelParticipantNamedIndex.SPEAKER
          ),
          I = (0, u.useStateFromStores)([m.default], () =>
            m.default.getSelectedParticipant(n.id)
          ),
          x = f && S !== Z.AppContext.POPOUT,
          [N, A] = l.useState(0),
          { isOnStartStageScreen: M } = (0, V.default)();
        (0, V.useUpdateIsOnStartStageScreenEffect)(n);
        let j = (0, u.useStateFromStores)([R.default], () =>
            R.default.getToastsEnabled(n.id)
          ),
          O = (0, K.default)(n),
          P = O ? (null != I ? "84px" : "124px") : null != I ? "0px" : "48px";
        return (
          (t = M
            ? (0, a.jsx)(Y.default, {
                channel: n,
                onContinueClick: () => {
                  (0, V.setIsOnStartStageScreen)(!1),
                    !g && (0, b.connectToStage)(n);
                },
              })
            : g
              ? (0, a.jsx)(H.default, {
                  channel: n,
                  onScroll: e => {
                    let { scrollTop: t } = e.target;
                    (0, r.debounce)(() => A(t), 1e3, { leading: !0 })();
                  },
                })
              : (0, a.jsx)(B.default, {
                  participants: _,
                  channel: n,
                  hasConnectPermission: C,
                })),
          (0, a.jsx)(v.default, {
            style: { height: "calc(100% - ".concat(P, ")"), paddingTop: P },
            disableGradients: 0 === N && v.DisableGradient.TOP,
            renderBottomLeft: () => (0, a.jsx)(ea, { channel: n }),
            renderBottomCenter: () =>
              g
                ? (0, a.jsx)(W.default, { channel: n, isOnStartStageScreen: M })
                : null,
            renderBottomRight: () =>
              g
                ? (0, a.jsx)(en, {
                    channel: n,
                    appContext: S,
                    popoutOpen: f,
                    popoutWindow: d,
                    popoutWindowAlwaysOnTop: c,
                    selectedParticipant: I,
                  })
                : null,
            renderHeader: () =>
              (0, a.jsx)(G.default, {
                inPopout: S === Z.AppContext.POPOUT,
                toggleRequestToSpeakSidebar: s,
                showRequestToSpeakSidebar: o,
                channel: n,
              }),
            renderChatToasts: () =>
              !j || p || x
                ? null
                : (0, a.jsx)(E.default, {
                    children: (0, a.jsx)(T.default, {
                      className: i(q.chatToasts, { [q.rtsSidebarOpen]: o }),
                      channelId: n.id,
                    }),
                  }),
            onActive: () => {},
            onPreventIdle: () => {},
            onAllowIdle: () => {},
            onForceIdle: () => {},
            screenMessage: x
              ? { mainText: X.default.Messages.POPOUT_PLAYER_OPENED }
              : null,
            idle: !1,
            children: !x && t,
          })
        );
      }
      function es(e) {
        let { channel: t } = e,
          [s, r] = l.useState(!1),
          c = l.useCallback(() => {
            r(!s);
          }, [s, r]),
          { popoutWindow: p, popoutWindowAlwaysOnTop: g } = (0,
          u.useStateFromStoresObject)([C.default], () => ({
            popoutWindow: C.default.getWindow(
              Z.PopoutWindowKeys.CHANNEL_CALL_POPOUT
            ),
            popoutWindowAlwaysOnTop: C.default.getIsAlwaysOnTop(
              Z.PopoutWindowKeys.CHANNEL_CALL_POPOUT
            ),
          })),
          _ = null != p && !p.closed,
          I = (0, h.useAppContext)(),
          T = (0, u.useStateFromStores)(
            [m.default],
            () => m.default.getChatOpen(t.id),
            [t.id]
          ),
          v = (0, u.useStateFromStores)(
            [j.default],
            () => j.default.getGuild(t.guild_id),
            [t.guild_id]
          );
        l.useEffect(() => {
          null == o.default.get(J) &&
            ((0, d.openModalLazy)(async () => {
              let { default: e } = await n
                .el("108838")
                .then(n.bind(n, "108838"));
              return t => (0, a.jsx)(e, { ...t });
            }),
            o.default.set(J, Date.now()));
        }, []);
        let { width: x = 0, ref: N } = (0, f.default)();
        return (0, a.jsxs)(E.ChannelCallChatLayerProvider, {
          children: [
            (0, a.jsxs)("div", {
              className: q.container,
              ref: N,
              children: [
                (0, a.jsx)("div", {
                  className: i(
                    q.callContainer,
                    (0, P.getThemeClass)(Z.ThemeTypes.DARK),
                    { [q.sidebarVisible]: s, [q.sidebarOrChatVisible]: s || T }
                  ),
                  children: (0, a.jsx)(el, {
                    channel: t,
                    toggleRequestToSpeakSidebar: c,
                    showRequestToSpeakSidebar: s,
                    popoutWindow: p,
                    popoutWindowAlwaysOnTop: g,
                    popoutOpen: _,
                    chatOpen: T,
                  }),
                }),
                s
                  ? (0, a.jsx)(k.default, {
                      channel: t,
                      toggleRequestToSpeakSidebar: c,
                      chatOpen: T,
                    })
                  : null,
                (0, a.jsx)("div", {
                  className: q.channelChatWrapper,
                  children:
                    T &&
                    (!_ || (_ && I === Z.AppContext.POPOUT)) &&
                    (0, a.jsx)(S.default, {
                      channel: t,
                      guild: v,
                      maxWidth: x - 550,
                    }),
                }),
              ],
            }),
            (0, a.jsx)(E.ChannelCallChatLayerContainer, {}),
          ],
        });
      }
    },
    277354: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return g;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("446674"),
        i = n("77078"),
        r = n("987317"),
        u = n("191145"),
        o = n("233322"),
        d = n("157186"),
        c = n("679243"),
        f = n("449008"),
        h = n("387111"),
        m = n("998716"),
        p = n("782340"),
        E = n("139559");
      let S = (e, t) => h.default.getName(e.getGuildId(), e.id, t.user);
      var g = function (e) {
        var t, n;
        let { participants: h, channel: g, hasConnectPermission: C } = e,
          _ = (0, d.useShowMemberVerificationGate)(g.guild_id),
          I = l.useCallback(() => {
            _
              ? (0, o.openMemberVerificationModal)(g.guild_id, () =>
                  r.default.selectVoiceChannel(g.id)
                )
              : r.default.selectVoiceChannel(g.id);
          }, [g.id, g.guild_id, _]),
          T = h.filter(e => e.type === m.StageChannelParticipantTypes.VOICE),
          v = 4 === T.length ? 2 : 3,
          x = (0, s.useStateFromStoresArray)(
            [u.default],
            () =>
              T.map(e => u.default.getParticipant(g.id, e.id)).filter(
                f.isNotNullish
              ),
            [g.id, T]
          );
        return (0, a.jsxs)("div", {
          className: E.container,
          children: [
            (0, a.jsx)("div", {
              className: E.tiles,
              style: { maxWidth: 168 * v },
              children: x
                .slice(0, 5)
                .map(e =>
                  (0, a.jsx)(
                    c.default,
                    {
                      participant: e,
                      channel: g,
                      className: E.tile,
                      paused: !0,
                      inCall: !0,
                      noVideoRender: !0,
                      inPopout: !1,
                      width: 48,
                    },
                    e.id
                  )
                ),
            }),
            (0, a.jsx)(i.Heading, {
              className: E.channelName,
              variant: "heading-xxl/semibold",
              children: g.name,
            }),
            (0, a.jsx)("div", {
              className: E.participantsRow,
              children: (0, a.jsx)(i.Text, {
                color: "header-secondary",
                variant: "text-sm/normal",
                children:
                  ((t = g),
                  0 === (n = T).length
                    ? p.default.Messages.CURRENTLY_IN_STAGE_EMPTY
                    : 1 === n.length
                      ? p.default.Messages.CURRENTLY_IN_STAGE_1.format({
                          a: S(t, n[0]),
                        })
                      : 2 === n.length
                        ? p.default.Messages.CURRENTLY_IN_STAGE_2.format({
                            a: S(t, n[0]),
                            b: S(t, n[1]),
                          })
                        : n.length > 2
                          ? p.default.Messages.CURRENTLY_IN_STAGE_2_N.format({
                              a: S(t, n[0]),
                              b: S(t, n[1]),
                              n: n.length - 2,
                            })
                          : void 0),
              }),
            }),
            (0, a.jsx)(i.Button, {
              disabled: !C,
              className: E.joinButton,
              color: C ? i.Button.Colors.GREEN : i.Button.Colors.PRIMARY,
              onClick: I,
              size: i.Button.Sizes.MEDIUM,
              children: C
                ? p.default.Messages.STAGE_CHANNEL_JOIN
                : p.default.Messages.CHANNEL_LOCKED_SHORT,
            }),
          ],
        });
      };
    },
    100082: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return Y;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("446674"),
        u = n("669491"),
        o = n("77078"),
        d = n("255397"),
        c = n("244201"),
        f = n("191145"),
        h = n("679653"),
        m = n("76813"),
        p = n("992207"),
        E = n("95039"),
        S = n("539938"),
        g = n("311197"),
        C = n("550410"),
        _ = n("124824"),
        I = n("640553"),
        T = n("104815"),
        v = n("305961"),
        x = n("957255"),
        N = n("181114"),
        A = n("849467"),
        M = n("155207"),
        R = n("228427"),
        j = n("664336"),
        L = n("599110"),
        y = n("439932"),
        O = n("567469"),
        P = n("998716"),
        D = n("619395"),
        b = n("923510"),
        U = n("834052"),
        w = n("506466"),
        F = n("199811"),
        V = n("96151"),
        k = n("49111"),
        B = n("646718"),
        G = n("782340"),
        H = n("225243");
      function W(e) {
        let {
            inPopout: t,
            channel: n,
            toggleRequestToSpeakSidebar: s,
            showRequestToSpeakSidebar: u,
          } = e,
          h = (0, c.useAppContext)(),
          E = (0, r.useStateFromStores)([f.default], () =>
            f.default.getChatOpen(n.id)
          ),
          S = (0, D.useCanModerateRequestToSpeak)(n.id),
          v = (0, O.useStageParticipantsCount)(
            n.id,
            P.StageChannelParticipantNamedIndex.REQUESTED_TO_SPEAK_ONLY
          ),
          { preventIdle: x, allowIdle: N } = (0, C.usePreventIdle)("popup");
        return (0, a.jsxs)(a.Fragment, {
          children: [
            (0, a.jsx)(
              p.default,
              { channelId: n.id },
              "clips-enabled-indicator"
            ),
            (0, a.jsx)(
              o.Popout,
              {
                position: "bottom",
                animation: o.Popout.Animation.NONE,
                align: "right",
                renderPopout: e =>
                  (0, a.jsx)(_.default, {
                    children: (0, a.jsx)(F.default, {
                      ...e,
                      channelId: n.id,
                      appContext: h,
                    }),
                  }),
                autoInvert: !1,
                children: (e, t) => {
                  let { isShown: n } = t;
                  return (0, l.createElement)(T.default, {
                    ...e,
                    key: "more-options",
                    isActive: n,
                    className: H.button,
                    iconClassName: H.buttonIcon,
                  });
                },
              },
              "more-options-popout"
            ),
            !t && (0, a.jsx)(m.default, { className: H.button }, "clips"),
            (0, a.jsx)(
              g.default,
              { onOpen: x, onClose: N, className: H.button },
              "recents"
            ),
            !u && S
              ? (0, a.jsx)("div", {
                  className: H.button,
                  children: (0, a.jsx)(w.default, {
                    toggleRequestToSpeakSidebar: () => {
                      E && d.default.updateChatOpen(n.id, !1), s();
                    },
                    showRequestToSpeakSidebar: u,
                    numRequestToSpeak: v,
                  }),
                })
              : null,
            !E &&
              (0, a.jsx)("div", {
                className: i(H.button, { [H.sidebarOpen]: u }),
                children: (0, a.jsx)(I.ChatButton, {
                  channelId: n.id,
                  showRequestToSpeakSidebar: u,
                  toggleRequestToSpeakSidebar: s,
                  iconClassName: H.buttonIcon,
                }),
              }),
          ],
        });
      }
      function Y(e) {
        var t, n;
        let {
            inPopout: s,
            channel: c,
            toggleRequestToSpeakSidebar: f,
            showRequestToSpeakSidebar: m,
          } = e,
          p = (0, h.default)(c),
          g = (0, r.useStateFromStores)([U.default], () =>
            U.default.getStageInstanceByChannel(c.id)
          ),
          C = (0, O.useActualStageSpeakerCount)(c.id),
          _ = (0, O.useStageParticipantsCount)(
            c.id,
            P.StageChannelParticipantNamedIndex.AUDIENCE
          ),
          I = (0, r.useStateFromStores)(
            [v.default],
            () => v.default.getGuild(c.guild_id),
            [c.guild_id]
          ),
          T =
            null !== (t = null == I ? void 0 : I.maxStageVideoChannelUsers) &&
            void 0 !== t
              ? t
              : 0,
          D = (null == I ? void 0 : I.isCommunity())
            ? T < k.MAX_STAGE_VIDEO_USER_LIMIT_UNCAPPED
            : (null == I ? void 0 : I.premiumTier) !==
                k.BoostedGuildTiers.TIER_3 &&
              T <= k.MAX_STAGE_VIDEO_USER_LIMIT_TIER2,
          w = (0, V.default)(c),
          F = (0, r.useStateFromStores)([x.default], () =>
            x.default.can(b.MODERATE_STAGE_CHANNEL_PERMISSIONS, c)
          ),
          Y = () => {
            d.default.updateStageVideoLimitBoostUpsellDismissed(c.id, !0),
              L.default.track(k.AnalyticEvents.BOOSTING_UPSELL_CLICKED, {
                guild_id: c.guild_id,
                type: B.PremiumUpsellTypes.VIDEO_STAGE_LIMIT,
                is_moderator: F,
                action: B.BoostingUpsellAction.DISMISS,
              });
          };
        l.useEffect(() => {
          w &&
            L.default.track(k.AnalyticEvents.BOOSTING_UPSELL_VIEWED, {
              guild_id: c.guild_id,
              type: B.PremiumUpsellTypes.VIDEO_STAGE_LIMIT,
              is_moderator: F,
              listener_count: C + _,
            });
        }, [w]);
        let K = (0, a.jsxs)(j.default, {
          toolbar: (0, a.jsx)(W, {
            inPopout: s,
            toggleRequestToSpeakSidebar: f,
            showRequestToSpeakSidebar: m,
            channel: c,
          }),
          onDoubleClick: S.handleDoubleClick,
          transparent: !0,
          className: i((0, y.getThemeClass)(k.ThemeTypes.DARK), H.participants),
          children: [
            (0, a.jsx)(j.default.Icon, {
              icon: R.default,
              disabled: !0,
              "aria-label": G.default.Messages.STAGE_CHANNEL,
              className: H.icon,
              color:
                null != g ? u.default.unsafe_rawColors.GREEN_360.css : void 0,
            }),
            (0, a.jsx)(j.default.Title, {
              className: H.channelName,
              wrapperClassName: H.channelNameWrapper,
              children:
                null !== (n = null == g ? void 0 : g.topic) && void 0 !== n
                  ? n
                  : p,
            }),
            (0, a.jsx)(j.default.Divider, { className: H.divider }),
            (0, a.jsxs)(j.default.Title, {
              children: [
                (0, a.jsx)(A.default, { width: 16, height: 16 }),
                (0, a.jsx)(o.Text, {
                  variant: "text-xs/medium",
                  color: "header-secondary",
                  className: H.speakerCount,
                  children: G.default.Messages.SPEAKING_COUNT.format({
                    count: C,
                  }),
                }),
                (0, a.jsx)(M.default, { width: 16, height: 16 }),
                (0, a.jsx)(o.Text, {
                  variant: "text-xs/medium",
                  color: "header-secondary",
                  className: H.speakerCount,
                  children: G.default.Messages.LISTENING_COUNT.format({
                    count: _,
                  }),
                }),
              ],
            }),
          ],
        });
        return w
          ? (0, a.jsxs)("div", {
              children: [
                K,
                (0, a.jsxs)("div", {
                  className: H.boostUpsell,
                  children: [
                    (0, a.jsx)(z, {}),
                    (0, a.jsxs)("div", {
                      className: H.text,
                      children: [
                        (0, a.jsx)(o.Text, {
                          variant: "text-md/medium",
                          color: "header-primary",
                          children: D
                            ? G.default.Messages.STAGE_FULL_MODERATOR_TITLE
                            : G.default.Messages.STAGE_FULL_MODERATOR_MAX_TITLE,
                        }),
                        (0, a.jsx)(o.Text, {
                          variant: "text-xs/medium",
                          color: "text-normal",
                          children: D
                            ? G.default.Messages.STAGE_FULL_MODERATOR_BODY
                            : G.default.Messages.STAGE_FULL_MAX_BODY,
                        }),
                      ],
                    }),
                    (0, a.jsx)("div", {
                      className: H.buttons,
                      children: D
                        ? (0, a.jsxs)(a.Fragment, {
                            children: [
                              (0, a.jsx)(o.Button, {
                                className: H.notNowButton,
                                onClick: Y,
                                look: o.Button.Looks.BLANK,
                                size: o.Button.Sizes.SMALL,
                                children: G.default.Messages.NOT_NOW,
                              }),
                              (0, a.jsx)(N.default, {
                                size: o.Button.Sizes.SMALL,
                                onClick: () => {
                                  (0, E.openGuildBoostingMarketingModal)({
                                    guildId: c.guild_id,
                                    location: {
                                      section:
                                        k.AnalyticsSections.STAGE_VIDEO_LIMIT,
                                    },
                                  }),
                                    L.default.track(
                                      k.AnalyticEvents.BOOSTING_UPSELL_CLICKED,
                                      {
                                        guild_id: c.guild_id,
                                        type: B.PremiumUpsellTypes
                                          .VIDEO_STAGE_LIMIT,
                                        is_moderator: F,
                                        action: B.BoostingUpsellAction.BOOST,
                                      }
                                    );
                                },
                                className: H.boostButton,
                                children:
                                  G.default.Messages.PREMIUM_GUILD_SUBSCRIPTION,
                              }),
                            ],
                          })
                        : (0, a.jsx)(o.Button, {
                            className: H.notNowButton,
                            onClick: Y,
                            look: o.Button.Looks.BLANK,
                            size: o.Button.Sizes.SMALL,
                            children: G.default.Messages.DISMISS,
                          }),
                    }),
                  ],
                }),
              ],
            })
          : K;
      }
      function z() {
        return (0, a.jsxs)("svg", {
          width: "36",
          height: "36",
          viewBox: "0 0 36 36",
          fill: "none",
          children: [
            (0, a.jsxs)("g", {
              clipPath: "url(#clip0_595_59940)",
              children: [
                (0, a.jsx)("path", {
                  d: "M36 18C36 19.8 33.075 21.15 32.625 22.725C32.175 24.3 33.525 27.225 32.625 28.575C31.725 29.925 28.35 29.25 27 30.375C25.65 31.5 25.2 34.425 23.625 35.1C22.05 35.775 19.8 33.3 18 33.3C16.2 33.3 13.95 35.55 12.375 35.1C10.8 34.65 10.35 31.275 9 30.375C7.65 29.475 4.5 29.925 3.375 28.575C2.25 27.225 3.825 24.525 3.375 22.725C2.925 20.925 0 19.8 0 18C0 16.2 2.925 14.85 3.375 13.275C3.825 11.7 2.475 8.77497 3.375 7.42496C4.275 6.07497 7.65 6.74997 9 5.62497C10.35 4.49997 10.8 1.57497 12.375 0.899965C13.95 0.224965 16.2 2.69997 18 2.69997C19.8 2.69997 22.05 0.449965 23.625 0.899965C25.2 1.34997 25.65 4.49997 27 5.62497C28.35 6.74997 31.5 6.07497 32.625 7.42496C33.75 8.77497 32.175 11.475 32.625 13.275C33.075 15.075 36 16.2 36 18Z",
                  fill: "url(#paint0_linear_595_59940)",
                }),
                (0, a.jsx)("path", {
                  d: "M15.75 20.7001L18 22.9501L20.25 20.7001V15.3001L18 13.0501L15.75 15.3001V20.7001Z",
                  fill: "white",
                }),
                (0, a.jsx)("path", {
                  d: "M18 6.75L11.25 13.5V22.5L18 29.25L24.75 22.5V13.5L18 6.75ZM22.5 21.6L18 26.1L13.5 21.6V14.4L18 9.9L22.5 14.4V21.6Z",
                  fill: "white",
                }),
              ],
            }),
            (0, a.jsxs)("defs", {
              children: [
                (0, a.jsxs)("linearGradient", {
                  id: "paint0_linear_595_59940",
                  x1: "2.4046e-06",
                  y1: "35.2166",
                  x2: "35.7182",
                  y2: "-1.45185",
                  gradientUnits: "userSpaceOnUse",
                  children: [
                    (0, a.jsx)("stop", { stopColor: "#3E70DD" }),
                    (0, a.jsx)("stop", { offset: "1", stopColor: "#B377F3" }),
                  ],
                }),
                (0, a.jsx)("clipPath", {
                  id: "clip0_595_59940",
                  children: (0, a.jsx)("rect", {
                    width: "36",
                    height: "36",
                    fill: "white",
                  }),
                }),
              ],
            }),
          ],
        });
      }
    },
    199811: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return x;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("627445"),
        s = n.n(l),
        i = n("446674"),
        r = n("77078"),
        u = n("244201"),
        o = n("191145"),
        d = n("769928"),
        c = n("321135"),
        f = n("976074"),
        h = n("639537"),
        m = n("619436"),
        p = n("625399"),
        E = n("47495"),
        S = n("42203"),
        g = n("957255"),
        C = n("751661"),
        _ = n("923510"),
        I = n("834052"),
        T = n("99795"),
        v = n("782340");
      function x(e) {
        let { channelId: t, closePopout: n, appContext: l, onSelect: x } = e,
          N = (0, i.useStateFromStores)([o.default], () =>
            o.default.getSelectedParticipant(t)
          ),
          A =
            (null == N ? void 0 : N.type) === T.ParticipantTypes.STREAM
              ? N.stream
              : null,
          M = (0, h.default)(t);
        return (0, a.jsxs)(r.Menu, {
          navId: "stage-channel-call-overflow-popout",
          onClose: n,
          "aria-label": v.default.Messages.CHANNEL_CALL_OVERFLOW_MENU_LABEL,
          onSelect: x,
          children: [
            (function (e) {
              let t = (0, i.useStateFromStores)(
                  [S.default],
                  () => S.default.getChannel(e),
                  [e]
                ),
                n = (0, i.useStateFromStores)([g.default], () =>
                  g.default.can(_.MODERATE_STAGE_CHANNEL_PERMISSIONS, t)
                ),
                l = (0, i.useStateFromStores)(
                  [I.default],
                  () => I.default.getStageInstanceByChannel(e),
                  [e]
                ),
                s = (0, u.useAppContext)(),
                o = () => null != t && (0, C.openStageChannelSettings)(t, s);
              return (null == t ? void 0 : t.isGuildStageVoice()) && n
                ? null != l
                  ? (0, a.jsx)(r.MenuItem, {
                      id: "edit-stage",
                      label: v.default.Messages.EDIT_STAGE_SUBTITLE,
                      action: o,
                    })
                  : (0, a.jsx)(r.MenuItem, {
                      id: "start-stage",
                      label: v.default.Messages.STAGE_CHANNEL_START_TITLE,
                      action: o,
                    })
                : null;
            })(t),
            (function (e) {
              let t = (0, i.useStateFromStores)(
                [S.default],
                () => S.default.getChannel(e),
                [e]
              );
              s(
                null != t,
                "useNotificationSettingsItem: channel cannot be undefined"
              );
              let n = (0, E.useShouldUseNewNotificationSystem)(
                  "StageChannelCallOverflowMenu"
                ),
                a = (0, p.default)(t),
                l = (0, m.default)(t);
              return n ? a : l;
            })(t),
            (0, c.default)(),
            (0, d.default)(t),
            M,
            (0, f.default)(A, l),
          ],
        });
      }
    },
    598050: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return A;
          },
        }),
        n("222007");
      var a,
        l,
        s = n("37983"),
        i = n("884691"),
        r = n("446674"),
        u = n("737960"),
        o = n("191145"),
        d = n("488464"),
        c = n("567469"),
        f = n("998716"),
        h = n("223378"),
        m = n("973137"),
        p = n("661917"),
        E = n("85427"),
        S = n("620103"),
        g = n("297446"),
        C = n("782340"),
        _ = n("956630");
      let I = { singleSpeaker: 424, twoSpeakers: 624, threeSpeakers: 824 };
      ((l = a || (a = {}))[(l.SELECTED = 0)] = "SELECTED"),
        (l[(l.SPEAKER = 1)] = "SPEAKER"),
        (l[(l.AUDIENCE = 2)] = "AUDIENCE");
      let T = (e, t) => {
          let n = Math.floor(e / t - 8),
            a = Math.floor(n / g.SPEAKER_TILE_ASPECT_RATIO);
          return { speakerTileWidth: n, speakerTileHeight: a };
        },
        v = (e, t) =>
          e < I.singleSpeaker
            ? 1
            : e < I.twoSpeakers
              ? 2
              : e < I.threeSpeakers
                ? 3
                : t
                  ? 3
                  : 4,
        x = e => Math.floor((e - 32) / 102);
      function N(e) {
        return e.type === f.StageChannelParticipantTypes.VOICE;
      }
      var A = (0, u.default)(e => {
        var t, n;
        let { channel: a, width: l, onScroll: u } = e,
          {
            selectedParticipantId: I,
            largeStream: A,
            chatOpen: M,
          } = (0, r.useStateFromStoresObject)(
            [o.default],
            () => ({
              selectedParticipantId: o.default.getSelectedParticipantId(a.id),
              largeStream: o.default.getStageStreamSize(a.id),
              chatOpen: o.default.getChatOpen(a.id),
            }),
            [a.id]
          ),
          R = (0, c.useActualStageSpeakerCount)(a.id),
          j = (0, c.useStageParticipantsCount)(
            a.id,
            f.StageChannelParticipantNamedIndex.AUDIENCE
          ),
          L = (0, r.useStateFromStores)([d.default], () =>
            null != I ? d.default.getParticipant(a.id, I) : null
          ),
          y = (0, c.useStageParticipants)(
            a.id,
            f.StageChannelParticipantNamedIndex.SPEAKER
          ),
          O = y.filter(N),
          P =
            null !=
            y.find(e => e.type === f.StageChannelParticipantTypes.STREAM),
          D = x(l),
          b = v(l, M),
          U = {
            [f.StageChannelParticipantNamedIndex.SPEAKER]: b,
            [f.StageChannelParticipantNamedIndex.AUDIENCE]: D,
            [f.StageChannelParticipantNamedIndex.SELECTED]: 1,
          },
          w = (0, h.useThrottleDurationForChannel)(a.id),
          [F, V] = (0, h.useStageChannelParticipantsListThrottled)(a.id, U, w),
          k = [
            Math.max(null !== (t = F[0]) && void 0 !== t ? t : 1, 1),
            Math.max(null !== (n = F[1]) && void 0 !== n ? n : 1, 1),
            F[2],
          ],
          { speakerTileWidth: B, speakerTileHeight: G } = T(l, b),
          H = A ? l - 32 : Math.min(l - 64, 3 * B + 8),
          W = e => e === F.length - 1 || (0 === j && 1 === e),
          [Y, z] = i.useState(!1),
          [K, Z] = i.useState(!1);
        return (0, s.jsx)(p.default, {
          sections: k,
          renderSection: e => {
            let { section: t } = e;
            if (1 === t)
              return 0 === R
                ? null
                : (0, s.jsx)(
                    S.default,
                    {
                      participantCount: R,
                      label: C.default.Messages.SPEAKER_LABEL,
                      className: _.header,
                      onClick: () => z(!Y),
                      collapsed: Y,
                      speakers: O,
                      channel: a,
                      isStreamLive: P,
                    },
                    "speaker-header-".concat(t)
                  );
            if (2 === t)
              return 0 === j
                ? null
                : (0, s.jsx)(
                    S.default,
                    {
                      participantCount: j,
                      label: C.default.Messages.AUDIENCE_LABEL,
                      className: _.header,
                      onClick: () => Z(!K),
                      collapsed: K,
                      channel: a,
                    },
                    "audience-header-".concat(t)
                  );
            return null;
          },
          sectionHeight: e => 48,
          renderRow: e => {
            let { section: t, row: n } = e,
              l = V[t][n];
            if ((null == l ? void 0 : l.length) == null) return null;
            switch (t) {
              case 0:
                if (0 === l.length || null == l[0]) return null;
                return (0, s.jsx)(
                  "div",
                  {
                    className: _.focusedRow,
                    children: (0, s.jsx)(g.default, {
                      channel: a,
                      participant: l[0],
                      width: H,
                    }),
                  },
                  "selected-participant"
                );
              case 1:
                if (Y) return null;
                return (0, s.jsx)(
                  i.Fragment,
                  {
                    children: (0, s.jsx)(E.default, {
                      tileWidth: B,
                      channel: a,
                      participants: l,
                      selectedParticipant: L,
                    }),
                  },
                  "speakers-".concat(t, "-").concat(n)
                );
              case 2:
                if (K) return null;
                return (0, s.jsx)(
                  m.default,
                  { channel: a, participants: l, maxTiles: D },
                  "audience-".concat(t, "-").concat(n)
                );
              default:
                return null;
            }
          },
          rowHeight: e => {
            let t = null == V[e][0];
            return t
              ? 0
              : 0 === e
                ? H / g.SPEAKER_TILE_ASPECT_RATIO + 8
                : 1 === e
                  ? Y
                    ? 0
                    : G
                  : K
                    ? 0
                    : 98;
          },
          renderFooter: e => {
            let { section: t } = e;
            return W(t)
              ? (0, s.jsx)("div", { className: _.spacer }, "bottom-spacer")
              : null;
          },
          footerHeight: e => (1 === e ? 8 : 0 === e ? 12 : W(e) ? 88 : 0),
          className: _.scroller,
          chunkSize: 60,
          onScroll: u,
        });
      });
    },
    977026: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return eS;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("446674"),
        u = n("77078"),
        o = n("987317"),
        d = n("244201"),
        c = n("191145"),
        f = n("266392"),
        h = n("458685"),
        m = n("338677"),
        p = n("76393"),
        E = n("479788"),
        S = n("398604"),
        g = n("109526"),
        C = n("487984"),
        _ = n("817963"),
        I = n("999180"),
        T = n("830210"),
        v = n("289180"),
        x = n("244390"),
        N = n("581389"),
        A = n("19065"),
        M = n("124824"),
        R = n("981913"),
        j = n("785344"),
        L = n("116439"),
        y = n("271938"),
        O = n("42887"),
        P = n("957255"),
        D = n("18494"),
        b = n("697218"),
        U = n("887657"),
        w = n("293137"),
        F = n("381546"),
        V = n("293499"),
        k = n("277174"),
        B = n("711486"),
        G = n("394640"),
        H = n("343571"),
        W = n("751661"),
        Y = n("244480"),
        z = n("716214"),
        K = n("619395"),
        Z = n("923510"),
        Q = n("325861"),
        X = n("834052"),
        q = n("819450"),
        J = n("111542"),
        $ = n("924872"),
        ee = n("274438"),
        et = n("734019"),
        en = n("519581"),
        ea = n("58763"),
        el = n("709752"),
        es = n("49111"),
        ei = n("782340"),
        er = n("198281");
      function eu(e) {
        let { channel: t, appContext: n } = e,
          a = (0, et.default)(t);
        if (a) {
          (0, W.openEndStageModal)(t, n);
          return;
        }
        o.default.disconnect();
      }
      function eo(e) {
        var t, n;
        let { channel: l } = e,
          s = (0, en.default)(l.id),
          [i, u] = (0, el.default)(l),
          o = (0, r.useStateFromStores)([P.default], () =>
            P.default.can(es.Permissions.REQUEST_TO_SPEAK, l)
          );
        if (s) return null;
        return (0, a.jsx)(R.CenterControlButton, {
          isActive: i,
          label:
            ((t = i),
            (n = o),
            t
              ? ei.default.Messages.AUDIENCE_LOWER_HAND
              : n
                ? ei.default.Messages.AUDIENCE_RAISE_HAND_CTA
                : ei.default.Messages.AUDIENCE_RAISE_HAND_NO_PERMISSION),
          iconComponent: () =>
            (0, a.jsx)(B.default, {
              className: i
                ? er.raisedHandButtonIconActive
                : er.raisedHandButtonIcon,
            }),
          onClick: u,
          className: er.buttonSpacing,
          disabled: !o && !i,
        });
      }
      let ed = l.memo(function (e) {
        let { channel: t } = e,
          n = (0, r.useStateFromStores)(
            [D.default],
            () => D.default.getVoiceChannelId() === t.id,
            [t.id]
          );
        return (0, a.jsxs)("div", {
          className: er.container,
          children: [
            (0, a.jsx)(em, { channelId: t.id }),
            n ? (0, a.jsx)(eo, { channel: t }) : null,
            (0, a.jsx)(ef, { channel: t }),
          ],
        });
      });
      function ec(e) {
        let { onClick: t } = e;
        return (0, a.jsx)(u.Button, {
          size: u.Button.Sizes.MEDIUM,
          color: er.primaryButtonColor,
          className: i(er.buttonSpacing, er.buttonWithTextButton),
          onClick: t,
          children: (0, a.jsxs)("div", {
            className: er.buttonWithTextInnerContainer,
            children: [
              (0, a.jsx)(k.default, {
                height: 24,
                width: 24,
                className: er.buttonWithTextIcon,
              }),
              (0, a.jsx)(u.Text, {
                color: "none",
                variant: "text-sm/medium",
                children: ei.default.Messages.MODERATOR_RAISE_OWN_HAND,
              }),
            ],
          }),
        });
      }
      function ef(e) {
        let { channel: t, onSelect: n } = e,
          l = (0, d.useAppContext)(),
          { canManageGuildEvent: s } = (0, _.useManageResourcePermissions)(t),
          o = (0, r.useStateFromStores)(
            [X.default],
            () => X.default.getStageInstanceByChannel(t.id),
            [t.id]
          ),
          c = (0, r.useStateFromStores)([S.default], () =>
            S.default.getGuildScheduledEvent(
              null == o ? void 0 : o.guild_scheduled_event_id
            )
          ),
          f = (0, r.useStateFromStores)(
            [D.default],
            () => D.default.getVoiceChannelId() === t.id,
            [t.id]
          ),
          { suppress: h } = (0, x.default)(t),
          m = y.default.getId(),
          [p] = (0, el.default)(t),
          E = Q.default.isModerator(m, t.id),
          g = (0, K.useCanModerateRequestToSpeak)(t.id),
          C = s(c);
        return f
          ? (E || C) && null != o
            ? (0, a.jsx)(u.Popout, {
                renderPopout: e => {
                  let { closePopout: s } = e;
                  return (0, a.jsx)(M.default, {
                    children: (0, a.jsx)(u.Menu, {
                      navId: "exit-options",
                      "aria-label": ei.default.Messages.SET_STATUS,
                      onClose: s,
                      onSelect: n,
                      children: (0, a.jsx)(u.MenuItem, {
                        id: "end-stage",
                        color: "danger",
                        action: () =>
                          (0, W.openEndGuildEventConfirmationModal)(t, l),
                        label: ei.default.Messages.END_GUILD_EVENT_FOR_EVERYONE,
                        icon: F.default,
                      }),
                    }),
                  });
                },
                align: "center",
                position: "top",
                animation: u.Popout.Animation.FADE,
                children: (e, n) => {
                  let { onClick: s } = e,
                    { isShown: i } = n;
                  return (0, a.jsx)(R.CenterControlButton, {
                    className: er.buttonSpacing,
                    label: ei.default.Messages.EXIT_EVENT_STAGE_OPTIONS_LABEL,
                    color: "red",
                    iconComponent: () =>
                      (0, a.jsx)(w.default, { height: 24, width: 24 }),
                    onClick: () => eu({ channel: t, appContext: l }),
                    onPopoutClick: s,
                    popoutOpen: i,
                  });
                },
              })
            : (h && !g) || p
              ? (0, a.jsx)(u.Button, {
                  size: u.Button.Sizes.MEDIUM,
                  color: u.Button.Colors.RED,
                  className: i(er.buttonSpacing, er.buttonWithTextButton),
                  onClick: () => eu({ channel: t, appContext: l }),
                  children: (0, a.jsxs)("div", {
                    className: er.buttonWithTextInnerContainer,
                    children: [
                      (0, a.jsx)(w.default, {
                        height: 24,
                        width: 24,
                        className: er.buttonWithTextIcon,
                      }),
                      (0, a.jsx)(u.Text, {
                        color: "none",
                        variant: "text-sm/medium",
                        children: ei.default.Messages.AUDIENCE_DISCONNECT,
                      }),
                    ],
                  }),
                })
              : (0, a.jsx)(R.CenterControlButton, {
                  className: er.buttonSpacing,
                  label: ei.default.Messages.EXIT_EVENT_STAGE_OPTIONS_LABEL,
                  color: "red",
                  iconComponent: () =>
                    (0, a.jsx)(w.default, { height: 24, width: 24 }),
                  onClick: () => eu({ channel: t, appContext: l }),
                })
          : (0, a.jsx)(u.Button, {
              size: u.Button.Sizes.MEDIUM,
              color: u.Button.Colors.GREEN,
              className: i(er.buttonSpacing, er.buttonWithTextButton),
              onClick: () => {
                var e;
                return (e = t), void (0, z.connectToStage)(e);
              },
              children: (0, a.jsxs)("div", {
                className: er.buttonWithTextInnerContainer,
                children: [
                  (0, a.jsx)(U.default, {
                    height: 24,
                    width: 24,
                    className: er.buttonWithTextIcon,
                  }),
                  (0, a.jsx)(u.Text, {
                    color: "none",
                    variant: "text-sm/medium",
                    children: ei.default.Messages.STAGE_CHANNEL_JOIN,
                  }),
                ],
              }),
            });
      }
      function eh(e) {
        let { onClick: t } = e;
        return (0, a.jsx)(u.Button, {
          size: u.Button.Sizes.MEDIUM,
          color: er.primaryButtonColor,
          className: i(er.buttonSpacing, er.buttonWithTextButton),
          onClick: t,
          children: (0, a.jsxs)("div", {
            className: er.buttonWithTextInnerContainer,
            children: [
              (0, a.jsx)(V.default, {
                height: 24,
                width: 24,
                className: er.buttonWithTextIcon,
              }),
              (0, a.jsx)(u.Text, {
                color: "none",
                variant: "text-sm/medium",
                children: ei.default.Messages.MOVE_ME_TO_AUDIENCE,
              }),
            ],
          }),
        });
      }
      function em(e) {
        let { channelId: t } = e,
          n = (0, r.useStateFromStores)([ee.default], () =>
            ee.default.isMuted()
          ),
          l = (0, $.useShowStageMusicMuteButton)(t),
          s = (0, r.useStateFromStores)([ee.default], () =>
            ee.default.shouldPlay()
          );
        return l
          ? (0, a.jsx)(R.CenterControlButton, {
              isActive: n,
              className: er.buttonSpacing,
              label: n
                ? ei.default.Messages.STAGE_MUSIC_UNMUTE
                : ei.default.Messages.STAGE_MUSIC_MUTE,
              iconComponent: () =>
                n
                  ? (0, a.jsx)(H.default, { height: 24, width: 24 })
                  : (0, a.jsx)(G.default, { height: 24, width: 24 }),
              onClick: () => (0, J.updateStageMusicMuted)(!n),
            })
          : (0, a.jsx)(R.CenterControlButton, {
              isActive: s,
              className: er.buttonSpacing,
              label: s
                ? ei.default.Messages.STAGE_MUSIC_MUTE
                : ei.default.Messages.STAGE_MUSIC_UNMUTE,
              iconComponent: () =>
                s
                  ? (0, a.jsx)(G.default, { height: 24, width: 24 })
                  : (0, a.jsx)(H.default, { height: 24, width: 24 }),
              onClick: () => (0, J.updateStageMusicShouldPlay)(!s),
            });
      }
      let ep = l.memo(function (e) {
        let { channel: t } = e,
          { suppress: n, selfMute: l, mute: s } = (0, x.default)(t),
          o = (0, K.useCanModerateRequestToSpeak)(t.id),
          d = (0, r.useStateFromStores)(
            [p.default],
            () => null != p.default.getAwaitingRemoteSessionInfo()
          ),
          { cameraUnavailable: S, enabled: g } = (0, I.default)(),
          C = (0, v.default)(t),
          { limit: _, reachedLimit: R } = (0, T.default)(t),
          y = (0, r.useStateFromStores)([b.default], () =>
            b.default.getCurrentUser()
          ),
          P = (0, r.useStateFromStores)([O.default], () =>
            (0, E.default)(O.default)
          ),
          U = (0, r.useStateFromStores)(
            [D.default],
            () => D.default.getVoiceChannelId() === t.id,
            [t.id]
          ),
          w = (0, r.useStateFromStores)(
            [c.default],
            () => c.default.getStreamParticipants(t.id)[0],
            [t.id]
          ),
          F = (0, q.useStageHasMedia)(t.id),
          V = _ > 0,
          k =
            (R && !F) ||
            (null != w && w.user.id !== (null == y ? void 0 : y.id));
        if (null == y) return null;
        let B = (0, a.jsxs)(a.Fragment, {
          children: [
            (0, a.jsx)(u.Popout, {
              renderPopout: e => {
                let { closePopout: t } = e;
                return (0, a.jsx)(M.default, {
                  children: (0, a.jsx)(h.default, { onClose: t }),
                });
              },
              position: "top",
              align: "center",
              animation: u.Popout.Animation.FADE,
              children: (e, t) => {
                let { onClick: n } = e,
                  { isShown: l } = t;
                return (0, a.jsx)(L.default, {
                  centerButton: !0,
                  hasPermission: C,
                  enabled: g,
                  cameraUnavailable: S,
                  onChange: N.handleToggleVideo,
                  onCameraUnavailable: A.default,
                  channelLimitReached: R,
                  channelLimit: _,
                  popoutOpen: l,
                  onPopoutClick: n,
                });
              },
            }),
            (0, a.jsx)(N.GoLiveButton, {
              channel: t,
              currentUser: y,
              exitFullScreen: () => null,
              canGoLive: P,
              hasPermission: C,
              disabled: k,
            }),
          ],
        });
        return (0, a.jsxs)("div", {
          className: er.container,
          children: [
            (0, a.jsx)(em, { channelId: t.id }),
            U && (0, a.jsx)(eo, { channel: t }),
            U && !n
              ? (0, a.jsxs)("div", {
                  className: i(er.avControls, er.buttonSpacing),
                  children: [
                    V && _ > 0 && B,
                    (0, a.jsx)(u.Popout, {
                      renderPopout: e => {
                        let { closePopout: t } = e;
                        return (0, a.jsx)(M.default, {
                          children: (0, a.jsx)(f.default, {
                            onClose: t,
                            renderInputDevices: !0,
                            renderOutputDevices: !0,
                          }),
                        });
                      },
                      align: "center",
                      position: "top",
                      animation: u.Popout.Animation.FADE,
                      children: (e, t) => {
                        let { onClick: i } = e,
                          { isShown: r } = t;
                        return (0, a.jsx)(j.default, {
                          centerButton: !0,
                          onPopoutClick: i,
                          selfMute: l,
                          serverMute: s,
                          suppress: n,
                          popoutOpen: r,
                          onClick: () => (0, m.default)(s, n),
                          awaitingRemote: d,
                        });
                      },
                    }),
                  ],
                })
              : null,
            U &&
              o &&
              n &&
              (0, a.jsx)(ec, {
                onClick: () => (0, Y.audienceAckRequestToSpeak)(t, !1),
              }),
            U &&
              !n &&
              (0, a.jsx)(eh, { onClick: () => (0, Y.moveSelfToAudience)(t) }),
            (0, a.jsx)(ef, { channel: t }),
          ],
        });
      });
      function eE(e) {
        let { channel: t } = e;
        return (0, a.jsxs)("div", {
          className: er.container,
          children: [
            (0, a.jsx)(em, { channelId: t.id }),
            (0, a.jsx)(ef, { channel: t }),
          ],
        });
      }
      var eS = l.memo(function (e) {
        let { channel: t, isOnStartStageScreen: n } = e,
          l = (0, en.default)(t.id),
          s = (0, K.useCanModerateRequestToSpeak)(t.id),
          i = (0, r.useStateFromStores)(
            [P.default],
            () => P.default.can(Z.MODERATE_STAGE_CHANNEL_PERMISSIONS, t),
            [t]
          ),
          u = (0, ea.default)(t.id),
          o = (0, r.useStateFromStores)([c.default], () =>
            null != t ? c.default.getSelectedParticipant(t.id) : null
          ),
          d = !u && null == o;
        return n
          ? (0, a.jsx)(eE, { channel: t })
          : l || s
            ? (0, a.jsxs)("div", {
                className: er.containerColumn,
                children: [
                  (0, a.jsxs)("div", {
                    className: er.eventPrompts,
                    children: [
                      d
                        ? (0, a.jsx)(g.default, {
                            channelId: null == t ? void 0 : t.id,
                          })
                        : null,
                      (0, a.jsx)("div", { className: er.separator }),
                      d && i
                        ? (0, a.jsx)(C.default, { highlight: !0, channel: t })
                        : null,
                      (0, a.jsx)("div", { className: er.separator }),
                    ],
                  }),
                  (0, a.jsx)(ep, { channel: t }),
                ],
              })
            : (0, a.jsx)(ed, { channel: t });
      });
    },
    661917: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var a,
        l = n("405665"),
        s = n("77078"),
        i = n("401270"),
        r = n("38879");
      let u = (0, s.createListScroller)(
        i.auto,
        i.fade,
        r.customTheme,
        null !== (a = window.ResizeObserver) && void 0 !== a
          ? a
          : l.ResizeObserver
      );
      var o = u;
    },
    85427: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("297446"),
        i = n("18272"),
        r = l.memo(function (e) {
          let {
            channel: t,
            participants: n,
            tileWidth: l,
            selectedParticipant: r,
          } = e;
          return (0, a.jsx)("div", {
            className: i.rowContainer,
            children: n.map(e =>
              e.id === (null == r ? void 0 : r.id)
                ? null
                : (0, a.jsx)(
                    s.default,
                    { channel: t, participant: e, width: l },
                    e.id
                  )
            ),
          });
        });
    },
    620103: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return m;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("77078"),
        u = n("837899"),
        o = n("849467"),
        d = n("155207"),
        c = n("980423"),
        f = n("215536"),
        h = n("232027"),
        m = l.memo(function (e) {
          let {
            label: t,
            participantCount: n,
            onClick: l,
            className: s,
            collapsed: m,
            speakers: p,
            channel: E,
            isStreamLive: S,
          } = e;
          return (0, a.jsxs)(r.Clickable, {
            onClick: l,
            className: i(h.container, s),
            children: [
              null == p
                ? (0, a.jsx)(d.default, {
                    width: 20,
                    height: 20,
                    className: h.micIcon,
                  })
                : (0, a.jsx)(o.default, {
                    width: 20,
                    height: 20,
                    className: h.micIcon,
                  }),
              (0, a.jsxs)(r.Text, {
                color: "header-primary",
                variant: "text-md/semibold",
                className: h.text,
                children: [t, " — ", n],
              }),
              m &&
                null != E &&
                null != p &&
                p.length > 0 &&
                (0, a.jsxs)(a.Fragment, {
                  children: [
                    (0, a.jsx)(f.default, { channel: E, speakers: p }),
                    S && (0, a.jsx)(c.default, {}),
                  ],
                }),
              (0, a.jsx)(u.default, {
                width: 20,
                height: 20,
                className: i(h.downIcon, { [h.upIcon]: m }),
              }),
            ],
          });
        });
    },
    215536: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return S;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("77078"),
        u = n("272030"),
        o = n("899633"),
        d = n("244201"),
        c = n("506885"),
        f = n("981601"),
        h = n("533403"),
        m = n("315102"),
        p = n("893127");
      function E(e) {
        let { channel: t, speaker: s, className: h } = e,
          E = (0, d.useAppContext)(),
          { reducedMotion: S } = l.useContext(
            r.AccessibilityPreferencesContext
          ),
          g = (0, o.default)({ userId: s.id }),
          C =
            null != s.member ? (0, m.getGuildMemberAvatarURL)(s.member) : null,
          _ = e => {
            (0, u.openContextMenuLazy)(
              e,
              async () => {
                let { default: e } = await n
                  .el("834247")
                  .then(n.bind(n, "834247"));
                return n =>
                  (0, a.jsx)(e, {
                    ...n,
                    user: s.user,
                    guildId: t.guild_id,
                    channel: t,
                    showMediaItems: !0,
                    showStageChannelItems: !0,
                    showChatItems: !1,
                  });
              },
              { context: E }
            );
          };
        return (0, a.jsx)(r.Popout, {
          preload: () =>
            (0, c.default)(s.user.id, s.user.getAvatarURL(t.guild_id, 80), {
              guildId: t.guild_id,
              channelId: t.id,
            }),
          renderPopout: e =>
            (0, a.jsx)(f.default, {
              ...e,
              guildId: t.guild_id,
              channelId: t.id,
              userId: s.id,
            }),
          position: "right",
          spacing: 8,
          children: e =>
            (0, a.jsx)(r.Tooltip, {
              text: s.userNick,
              position: "bottom",
              children: n =>
                (0, a.jsx)(r.Clickable, {
                  ...n,
                  ...e,
                  onClick: t => {
                    t.stopPropagation(), e.onClick(t);
                  },
                  onContextMenu: _,
                  children: (0, a.jsx)(r.Avatar, {
                    src: null != C ? C : s.user.getAvatarURL(t.guild_id, 24),
                    size: r.AvatarSizes.SIZE_24,
                    className: i(p.avatar, h),
                    "aria-label": s.userNick,
                    isSpeaking: g && !S.enabled,
                  }),
                }),
            }),
        });
      }
      function S(e) {
        let { speakers: t, channel: n } = e;
        return (0, a.jsx)(h.default, {
          className: p.summary,
          guildId: n.guild_id,
          users: t,
          max: 10,
          renderUser: (e, t, l) =>
            (0, a.jsx)(E, { channel: n, speaker: e, className: t }, l),
          renderMoreUsers: (e, t, n) =>
            (0, a.jsx)("div", { className: i(p.speakers, t), children: e }, n),
        });
      }
    },
    297446: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          SPEAKER_TILE_ASPECT_RATIO: function () {
            return L;
          },
          default: function () {
            return P;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("627445"),
        i = n.n(s),
        r = n("446674"),
        u = n("77078"),
        o = n("255397"),
        d = n("272030"),
        c = n("990766"),
        f = n("244201"),
        h = n("191145"),
        m = n("76393"),
        p = n("374014"),
        E = n("223913"),
        S = n("506885"),
        g = n("981601"),
        C = n("373469"),
        _ = n("305961"),
        I = n("957255"),
        T = n("800762"),
        v = n("512264"),
        x = n("325861"),
        N = n("584199"),
        A = n("116386"),
        M = n("49111"),
        R = n("99795"),
        j = n("3110");
      let L = 16 / 9,
        y = e => {
          let {
              stageParticipant: t,
              rtcParticipant: n,
              channel: s,
              guildId: i,
              user: r,
              width: o,
              isModerator: d,
              onContextMenu: c,
              inPopout: f,
            } = e,
            { reducedMotion: h } = l.useContext(
              u.AccessibilityPreferencesContext
            ),
            { blocked: m, id: p } = t;
          return (0, a.jsx)(u.Popout, {
            preload:
              null == n
                ? void 0
                : () =>
                    (0, S.default)(
                      n.user.id,
                      n.user.getAvatarURL(s.guild_id, 80),
                      { guildId: s.guild_id, channelId: s.id }
                    ),
            renderPopout: e =>
              (0, a.jsx)(g.default, {
                ...e,
                guildId: i,
                channelId: s.id,
                userId: r.id,
              }),
            position: "right",
            spacing: 8,
            children: e =>
              (0, a.jsx)(u.Clickable, {
                onContextMenu: e => c(n, e),
                ...e,
                children: (0, a.jsx)(
                  N.default,
                  {
                    participant: n,
                    aspectRatio: L,
                    blocked: m,
                    channel: s,
                    className: j.tile,
                    inCall: !0,
                    inPopout: f,
                    paused: !1,
                    pulseSpeakingIndicator: !h.enabled,
                    width: o,
                    children: d && (0, a.jsx)(A.default, {}),
                  },
                  p
                ),
              }),
          });
        },
        O = e => {
          let {
              stageParticipant: t,
              rtcParticipant: n,
              channel: s,
              width: i,
              isModerator: d,
              onContextMenu: f,
              inPopout: S,
            } = e,
            { reducedMotion: g } = l.useContext(
              u.AccessibilityPreferencesContext
            ),
            { id: x, blocked: y } = t,
            O = (0, r.useStateFromStoresArray)(
              [C.default],
              () => C.default.getAllActiveStreams(),
              []
            ),
            { selectedParticipant: P, largeStream: D } = (0,
            r.useStateFromStoresObject)([h.default], () => ({
              selectedParticipant:
                null != s ? h.default.getSelectedParticipant(s.id) : null,
              largeStream: null != s && h.default.getStageStreamSize(s.id),
            })),
            b = l.useCallback(
              (e, t) => {
                if (e.type === R.ParticipantTypes.STREAM) {
                  let n = O.filter(
                    t =>
                      (0, p.encodeStreamKey)(t) === e.id &&
                      t.state !== M.ApplicationStreamStates.ENDED
                  );
                  if (0 === n.length) {
                    if (
                      !(0, E.canWatchStream)(
                        s,
                        T.default,
                        _.default,
                        I.default,
                        m.default
                      )[0]
                    )
                      return;
                    (0, c.watchStream)((0, p.decodeStreamKey)(e.id), {
                      forceMultiple: t.shiftKey,
                    });
                  }
                }
                (null == P ? void 0 : P.id) === e.id
                  ? D
                    ? (o.default.selectParticipant(s.id, null),
                      o.default.updateStageStreamSize(s.id, !1))
                    : o.default.updateStageStreamSize(s.id, !0)
                  : (o.default.updateStageStreamSize(s.id, !1),
                    o.default.selectParticipant(s.id, e.id));
              },
              [O, s, P, D]
            );
          return (0, a.jsx)(
            N.default,
            {
              participant: n,
              aspectRatio: L,
              fit:
                n.type === R.ParticipantTypes.USER
                  ? v.VideoStreamFit.COVER
                  : void 0,
              blocked: y,
              channel: s,
              className: j.tile,
              inCall: !0,
              inPopout: S,
              onClick: b,
              onContextMenu: f,
              paused: !1,
              pulseSpeakingIndicator: !g.enabled,
              width: i,
              children:
                d &&
                n.type === R.ParticipantTypes.USER &&
                (0, a.jsx)(A.default, {}),
            },
            x
          );
        };
      var P = l.memo(function (e) {
        var t;
        let { participant: l, channel: s, width: u } = e,
          o = (0, f.useAppContext)(),
          c = s.getGuildId();
        i(null != c, "Channel cannot be guildless");
        let { user: m } = l,
          p = (0, r.useStateFromStores)(
            [h.default],
            () => h.default.getParticipant(s.id, l.id),
            [s.id, l.id]
          ),
          E = (0, r.useStateFromStores)(
            [x.default],
            () => x.default.isModerator(m.id, s.id),
            [s.id, m.id]
          );
        if (null == p || p.type === R.ParticipantTypes.ACTIVITY) return null;
        let S = (e, t) => {
            switch (e.type) {
              case R.ParticipantTypes.HIDDEN_STREAM:
              case R.ParticipantTypes.STREAM:
                (0, d.openContextMenuLazy)(
                  t,
                  async () => {
                    let { default: t } = await n
                      .el("172844")
                      .then(n.bind(n, "172844"));
                    return n =>
                      (0, a.jsx)(t, {
                        ...n,
                        stream: e.stream,
                        appContext: o,
                        exitFullscreen: () => {},
                      });
                  },
                  { context: o }
                );
                return;
              case R.ParticipantTypes.USER:
              default:
                (0, d.openContextMenuLazy)(
                  t,
                  async () => {
                    let { default: e } = await n
                      .el("834247")
                      .then(n.bind(n, "834247"));
                    return t =>
                      (0, a.jsx)(e, {
                        ...t,
                        user: m,
                        guildId: c,
                        channel: s,
                        showMediaItems: !0,
                        showStageChannelItems: !0,
                        showChatItems: !1,
                      });
                  },
                  { context: o }
                );
            }
          },
          g =
            p.type === R.ParticipantTypes.USER &&
            !(null === (t = p.voiceState) || void 0 === t
              ? void 0
              : t.selfVideo);
        return (0, a.jsx)(a.Fragment, {
          children: g
            ? (0, a.jsx)(y, {
                stageParticipant: l,
                rtcParticipant: p,
                channel: s,
                guildId: c,
                user: m,
                width: u,
                isModerator: E,
                onContextMenu: S,
                inPopout: o === M.AppContext.POPOUT,
              })
            : (0, a.jsx)(O, {
                stageParticipant: l,
                rtcParticipant: p,
                channel: s,
                guildId: c,
                user: m,
                width: u,
                isModerator: E,
                onContextMenu: S,
                inPopout: o === M.AppContext.POPOUT,
              }),
        });
      });
    },
    679703: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return v;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("446674"),
        s = n("669491"),
        i = n("77078"),
        r = n("888237"),
        u = n("18517"),
        o = n("109526"),
        d = n("487984"),
        c = n("817963"),
        f = n("957255"),
        h = n("228427"),
        m = n("811305"),
        p = n("923510"),
        E = n("759718"),
        S = n("58763"),
        g = n("119184"),
        C = n("782340"),
        _ = n("921148");
      function I(e) {
        let { onClick: t } = e;
        return (0, a.jsx)(r.default, {
          iconContainerClassName: _.continueIconContainer,
          icon: (0, a.jsx)(h.default, {
            className: _.continueIcon,
            height: 20,
            width: 20,
          }),
          color: s.default.unsafe_rawColors.PRIMARY_700.css,
          title: C.default.Messages.STAGE_CONTINUE_PROMPT_TITLE,
          description: C.default.Messages.STAGE_CONTINUE_PROMPT_SUBTITLE,
          onClick: t,
        });
      }
      function T(e) {
        let { channel: t } = e,
          { participants: n, usersInSummary: l } = (0, E.default)(t.id);
        return (0, a.jsxs)("div", {
          className: _.audienceSummary,
          children: [
            (0, a.jsx)(m.default, {
              className: _.summaryItem,
              guildId: t.guild_id,
              users: l,
              size: m.Sizes.SIZE_16,
            }),
            (0, a.jsx)(i.Text, {
              variant: "text-sm/normal",
              color: "header-secondary",
              children: (function (e) {
                if (0 === e.length) return "";
                if (1 === e.length)
                  return C.default.Messages.STAGE_AUDIENCE_WAITING_ONE.format({
                    first: e[0].userNick,
                  });
                if (2 === e.length)
                  return C.default.Messages.STAGE_AUDIENCE_WAITING_TWO.format({
                    first: e[0].userNick,
                    second: e[1].userNick,
                  });
                let t = e.length - 2;
                return C.default.Messages.STAGE_AUDIENCE_WAITING_MANY.format({
                  first: e[0].userNick,
                  second: e[1].userNick,
                  numOthers: t,
                });
              })(n),
            }),
          ],
        });
      }
      function v(e) {
        let { channel: t, onContinueClick: n } = e,
          s = (0, l.useStateFromStores)(
            [f.default],
            () => f.default.can(p.MODERATE_STAGE_CHANNEL_PERMISSIONS, t),
            [t]
          ),
          r = t.guild_id,
          { canCreateGuildEvent: m } = (0, c.useManageResourcePermissions)(t),
          v = (0, S.default)(t.id),
          { usersInSummary: x } = (0, E.default)(t.id);
        return (0, a.jsxs)("div", {
          children: [
            (0, a.jsx)(g.default, {
              children: (0, a.jsx)("div", {
                className: _.iconBackground,
                children: (0, a.jsx)(h.default, {
                  width: 40,
                  height: 40,
                  className: _.icon,
                }),
              }),
            }),
            (0, a.jsxs)("div", {
              className: _.headerContainer,
              children: [
                (0, a.jsx)(i.Heading, {
                  className: _.title,
                  variant: "heading-xl/semibold",
                  children:
                    C.default.Messages.STAGE_START_PROMPT_TITLE_MODERATOR,
                }),
                (0, a.jsx)(i.Text, {
                  className: _.subtitle,
                  variant: "text-sm/normal",
                  children: C.default.Messages.STAGE_START_PROMPT_SUBTITLE,
                }),
              ],
            }),
            v ? null : (0, a.jsx)(o.default, { channelId: t.id }),
            s
              ? (0, a.jsx)(d.default, { className: _.eventPrompt, channel: t })
              : null,
            m
              ? (0, a.jsx)(u.default, { className: _.eventPrompt, guildId: r })
              : null,
            (s || x.length > 0) && (0, a.jsx)("hr", { className: _.separator }),
            s ? (0, a.jsx)(I, { onClick: n }) : null,
            (0, a.jsx)(T, { channel: t }),
          ],
        });
      }
    },
    92447: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("446674"),
        i = n("913144"),
        r = n("255397"),
        u = n("716241"),
        o = n("191145"),
        d = n("383294"),
        c = n("95032"),
        f = n("18494"),
        h = n("599110"),
        m = n("659500"),
        p = n("773336"),
        E = n("563680"),
        S = n("49111"),
        g = n("716208");
      let C = () => {
        i.default.wait(() => d.close(S.PopoutWindowKeys.CHANNEL_CALL_POPOUT));
      };
      function _(e) {
        let {
            channel: t,
            appContext: n,
            popoutOpen: i,
            popoutWindow: d,
            currentWindow: _,
          } = e,
          I = n === S.AppContext.POPOUT,
          T = l.useRef(null),
          { currentLayout: v, mode: x } = (0, s.useStateFromStoresObject)(
            [o.default],
            () => {
              let e = o.default.getMode(t.id),
                a = n === S.AppContext.POPOUT;
              a && (e = S.ChannelModes.VIDEO);
              let l =
                e === S.ChannelModes.VIDEO
                  ? o.default.getLayout(t.id, n)
                  : S.ChannelLayouts.MINIMUM;
              return (
                a &&
                  l !== S.ChannelLayouts.FULL_SCREEN &&
                  (l = S.ChannelLayouts.NO_CHAT),
                { currentLayout: l, mode: e }
              );
            },
            [t, n]
          ),
          N = (0, s.useStateFromStores)(
            [f.default],
            () => f.default.getVoiceChannelId() === t.id,
            [t.id]
          );
        l.useEffect(() => {
          T.current = x;
        });
        let A = l.useRef(v),
          { currentDocument: M, rootNode: R } = l.useMemo(() => {
            let e = null != d && I ? d.document : document,
              t = _.document.getElementById("app-mount");
            return { currentWindow: _, currentDocument: e, rootNode: t };
          }, [d, I, _]),
          j = i && !I,
          L = x === S.ChannelModes.VIDEO && N && !j,
          y = l.useCallback(
            (e, a) => {
              a !== e &&
                (r.default.updateLayout(t.id, a, n),
                a === S.ChannelLayouts.FULL_SCREEN &&
                  t.isPrivate() &&
                  m.ComponentDispatch.dispatch(
                    S.ComponentActions.TEXTAREA_BLUR
                  ));
            },
            [n, t]
          ),
          O = l.useCallback(
            e => {
              if (null != R)
                e === S.ChannelLayouts.FULL_SCREEN &&
                  (y(e, A.current),
                  (0, E.exitFullScreen)(e => {
                    A.current = e;
                  }, M));
            },
            [M, y, R]
          ),
          P = l.useCallback(
            e => () => {
              null != R &&
                (e !== S.ChannelLayouts.FULL_SCREEN
                  ? ((A.current = e),
                    y(e, S.ChannelLayouts.FULL_SCREEN),
                    (0, E.requestFullScreen)(R))
                  : O(e));
            },
            [y, O, R]
          );
        return (l.useEffect(() => {
          let e = () => {
            null != R &&
              !(0, E.isFullScreen)(R, M) &&
              v === S.ChannelLayouts.FULL_SCREEN &&
              P(v)();
          };
          return (
            M.addEventListener(E.FULLSCREEN_CHANGE_EVENT, e),
            () => {
              M.removeEventListener(E.FULLSCREEN_CHANGE_EVENT, e);
            }
          );
        }, [M, v, P, R]),
        l.useEffect(
          () => (
            h.default.track(S.AnalyticEvents.VIDEO_LAYOUT_TOGGLED, {
              video_layout: I ? "popout" : v,
              ...(0, u.collectVoiceAnalyticsMetadata)(t.id),
            }),
            () => {
              !(I && (0, p.isMac)()) && O(v);
            }
          ),
          [v, I]
        ),
        l.useEffect(() => {
          null != R &&
            T.current === S.ChannelModes.VIDEO &&
            x === S.ChannelModes.VOICE &&
            (0, E.exitFullScreen)(R, M);
        }, [M, x, T, R]),
        l.useEffect(() => {
          !N && I && C();
        }, [N, I]),
        L)
          ? (0, a.jsx)(c.default, {
              themeable: !1,
              node: R,
              guestWindow: d,
              className: g.rightTrayIcon,
              onClick: P(v),
            })
          : null;
      }
    },
    96151: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        });
      var a = n("446674"),
        l = n("191145"),
        s = n("305961"),
        i = n("957255"),
        r = n("567469"),
        u = n("998716"),
        o = n("923510"),
        d = n("819450"),
        c = n("49111");
      function f(e) {
        var t;
        let n = (0, a.useStateFromStores)(
            [l.default],
            () => l.default.getStageVideoLimitBoostUpsellDismissed(e.id),
            [e.id]
          ),
          f = (0, r.useActualStageSpeakerCount)(e.id),
          h = (0, r.useStageParticipantsCount)(
            e.id,
            u.StageChannelParticipantNamedIndex.AUDIENCE
          ),
          m = (0, d.useStageHasMedia)(e.id),
          p = (0, a.useStateFromStores)(
            [s.default],
            () => s.default.getGuild(e.guild_id),
            [e.guild_id]
          ),
          E = (0, a.useStateFromStores)(
            [i.default],
            () => i.default.can(o.MODERATE_STAGE_CHANNEL_PERMISSIONS, e),
            [e]
          ),
          S =
            null !== (t = null == p ? void 0 : p.maxStageVideoChannelUsers) &&
            void 0 !== t
              ? t
              : 0,
          g =
            !(null == p ? void 0 : p.isCommunity()) &&
            S > c.MAX_STAGE_VIDEO_USER_LIMIT_TIER3;
        return m && !n && E && !g && f + h >= S;
      }
    },
    910927: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          makeEmptyTitleError: function () {
            return o;
          },
          makeEmptyMessageError: function () {
            return d;
          },
          makeAutomodViolationError: function () {
            return c;
          },
          renderError: function () {
            return f;
          },
        });
      var a,
        l,
        s = n("600798"),
        i = n("782340");
      function r(e, t) {
        return { type: e, message: null != t ? t : null };
      }
      function u(e) {
        return r(0, e);
      }
      function o() {
        return r(0, i.default.Messages.FORM_THREAD_NAME_REQUIRED_ERROR);
      }
      function d() {
        return r(
          0,
          i.default.Messages.FORM_THREAD_STARTER_MESSAGE_REQUIRED_ERROR
        );
      }
      function c(e, t) {
        return r(
          1,
          (0, s.getAutomodErrorMessageFromErrorResponse)(
            e,
            null == t ? void 0 : t.id
          )
        );
      }
      function f(e, t) {
        var n;
        return null == e ||
          (0 === e.type && null != t.content && t.content.trim().length > 0)
          ? null
          : null !== (n = e.message) && void 0 !== n
            ? n
            : null;
      }
      ((a = l || (l = {}))[(a.EmptyContent = 0)] = "EmptyContent"),
        (a[(a.AutomodViolation = 1)] = "AutomodViolation");
    },
    256648: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useThreadMemberListSections: function () {
            return f;
          },
        }),
        n("222007"),
        n("424973");
      var a = n("884691"),
        l = n("917351"),
        s = n.n(l),
        i = n("446674"),
        r = n("305961"),
        u = n("593752"),
        o = n("843455"),
        d = n("782340");
      let c = [];
      function f(e, t) {
        let n = (0, i.useStateFromStores)([r.default], () =>
            null != t ? r.default.getRoles(t.id) : void 0
          ),
          { version: l, members: f } = (0, i.useStateFromStoresObject)(
            [u.default],
            () => ({
              version: u.default.getMemberListVersion(e),
              members: u.default.getMemberListSections(e),
            })
          ),
          h = a.useMemo(() => {
            if (null == t) return c;
            let e = s(n)
              .values()
              .filter(e => e.hoist)
              .sortBy(e => e.position)
              .reverse()
              .map(e => e.id)
              .value();
            return (
              e.push(o.StatusTypes.ONLINE, o.StatusTypes.OFFLINE),
              e.map(e => {
                var t, a, l, s;
                let i =
                    e === o.StatusTypes.ONLINE
                      ? d.default.Messages.STATUS_ONLINE
                      : e === o.StatusTypes.OFFLINE
                        ? d.default.Messages.STATUS_OFFLINE
                        : null !==
                              (l =
                                null == n
                                  ? void 0
                                  : null === (t = n[e]) || void 0 === t
                                    ? void 0
                                    : t.name) && void 0 !== l
                          ? l
                          : "",
                  r =
                    null !==
                      (s =
                        null == f
                          ? void 0
                          : null === (a = f[e]) || void 0 === a
                            ? void 0
                            : a.userIds) && void 0 !== s
                      ? s
                      : [];
                return { label: i, userIds: r, id: e, roleId: e };
              })
            );
          }, [n, f, l]);
        return null != f ? h : c;
      }
    },
    593752: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return x;
          },
        }),
        n("222007"),
        n("424973"),
        n("808653");
      var a = n("917351"),
        l = n.n(a),
        s = n("446674"),
        i = n("913144"),
        r = n("42203"),
        u = n("26989"),
        o = n("10802"),
        d = n("824563"),
        c = n("101125"),
        f = n("697218"),
        h = n("449008"),
        m = n("991170"),
        p = n("299039"),
        E = n("158998"),
        S = n("49111");
      let g = {};
      class C {
        rebuild(e) {
          this.version++,
            (this.sections = {}),
            null != e && (this.allUserIds = new Set(e));
          let t = r.default.getChannel(this.parentId);
          l(Array.from(this.allUserIds))
            .map(e => {
              let [n, a, l] = this.calculateNewState(e, t);
              return {
                userId: e,
                sectionId: n,
                displayName: a,
                canViewChannel: l,
              };
            })
            .sort((e, t) => p.default.compare(e.userId, t.userId))
            .sortBy(e => e.displayName)
            .forEach(e => {
              this.addUser(
                e.userId,
                e.sectionId,
                e.displayName,
                e.canViewChannel,
                !0
              );
            });
        }
        updateMultipleUserIds(e, t) {
          return (
            (null == t || this.guildId === t) &&
            0 !== (e = e.filter(e => this.allUserIds.has(e))).length &&
            (e.length > 50
              ? this.rebuild()
              : e.forEach(e => this.updateUserId(e)),
            !0)
          );
        }
        updateUserId(e) {
          if (!this.allUserIds.has(e)) return !1;
          let [t, n, a] = this.findOldState(e),
            [l, s, i] = this.calculateNewState(
              e,
              r.default.getChannel(this.parentId)
            );
          return (
            (t !== l || n !== s || a !== i) &&
            (this.removeUserId(e, t), this.addUser(e, l, s, i), !0)
          );
        }
        addUserId(e) {
          let [t, n, a] = this.calculateNewState(
            e,
            r.default.getChannel(this.parentId)
          );
          this.addUser(e, t, n, a);
        }
        removeUserId(e, t) {
          if (
            (this.allUserIds.delete(e),
            null != t && this.removeUserIdFromSection(e, t))
          )
            return !0;
          for (let t in this.sections)
            if (this.removeUserIdFromSection(e, t)) return !0;
          return !1;
        }
        addUser(e, t, n, a, l) {
          this.allUserIds.add(e);
          let s = f.default.getUser(e);
          if (null == s || "" === s.username) return;
          !(t in this.sections) &&
            (this.sections[t] = { sectionId: t, usersById: {}, userIds: [] });
          let i = this.sections[t];
          if (
            ((i.usersById[e] = {
              userId: e,
              displayName: n,
              canViewChannel: a,
            }),
            l)
          )
            i.userIds.push(e);
          else {
            let t = this.findUserIdSortedPosition(i, e, n);
            i.userIds.splice(t, 0, e);
          }
          this.version++;
        }
        findUserIdSortedPosition(e, t, n) {
          let { userIds: a, usersById: l } = e;
          for (let e = 0; e < a.length; e++) {
            let s = a[e],
              i = l[s].displayName;
            if (i === n) {
              if (t < s) return e;
            } else if (null == i) {
              if (null != n) return e;
            } else if (null != n && n < i) return e;
          }
          return a.length;
        }
        removeUserIdFromSection(e, t) {
          let n = this.sections[t];
          return (
            null != t &&
            e in n.usersById &&
            (delete n.usersById[e],
            (n.userIds = n.userIds.filter(t => t !== e)),
            this.version++,
            !0)
          );
        }
        findOldState(e) {
          for (let t in this.sections) {
            let n = this.sections[t];
            if (e in n.usersById) {
              let a = n.usersById[e];
              return [t, a.displayName, a.canViewChannel];
            }
          }
          return [void 0, void 0, !1];
        }
        calculateNewState(e, t) {
          var n, a;
          let l = u.default.getMember(this.guildId, e),
            s = f.default.getUser(e),
            i = f.default.getCurrentUser(),
            r = (null == s ? void 0 : s.id) === (null == i ? void 0 : i.id),
            o = r
              ? c.default.getStatus()
              : d.default.getStatus(e, this.guildId),
            h =
              null != s &&
              null != t &&
              m.default.can({
                permission: S.Permissions.VIEW_CHANNEL,
                user: s,
                context: t,
              }),
            p =
              o !== S.StatusTypes.OFFLINE &&
              o !== S.StatusTypes.INVISIBLE &&
              o !== S.StatusTypes.UNKNOWN,
            g = p
              ? null !== (n = null == l ? void 0 : l.hoistRoleId) &&
                void 0 !== n
                ? n
                : "online"
              : "offline",
            C =
              null !== (a = null == l ? void 0 : l.nick) && void 0 !== a
                ? a
                : E.default.getName(s);
          return [g, null == C ? void 0 : C.toLowerCase(), h];
        }
        constructor(e, t, n) {
          (this.guildId = e),
            (this.parentId = t),
            (this.threadId = n),
            (this.version = 0),
            (this.sections = {}),
            (this.allUserIds = new Set());
        }
      }
      function _(e) {
        return I(e.user.id);
      }
      function I(e) {
        if (null == e) return !1;
        let t = !1;
        for (let n in g) g[n].updateUserId(e) && (t = !0);
        return t;
      }
      function T(e) {
        let { guildId: t } = e,
          n = !1;
        for (let e in g) g[e].guildId === t && (g[e].rebuild(), (n = !0));
        return n;
      }
      class v extends s.default.Store {
        initialize() {
          this.waitFor(
            r.default,
            u.default,
            o.default,
            d.default,
            c.default,
            f.default
          ),
            this.syncWith([o.default], () => {
              let e = o.default.getSubscribedThreadIds(),
                t = !1;
              for (let n in g) !e.has(n) && (delete g[n], (t = !0));
              return t;
            }),
            this.syncWith([c.default], () => {
              var e;
              return I(
                null === (e = f.default.getCurrentUser()) || void 0 === e
                  ? void 0
                  : e.id
              );
            });
        }
        getMemberListVersion(e) {
          var t;
          return null === (t = g[e]) || void 0 === t ? void 0 : t.version;
        }
        getMemberListSections(e) {
          var t;
          return null === (t = g[e]) || void 0 === t ? void 0 : t.sections;
        }
        canUserViewChannel(e, t, n) {
          var a, l;
          let s = g[e];
          if (null == s) return !1;
          let i =
            null === (a = s.sections[t]) || void 0 === a
              ? void 0
              : a.usersById[n];
          return (
            null !== (l = null == i ? void 0 : i.canViewChannel) &&
            void 0 !== l &&
            l
          );
        }
      }
      v.displayName = "ThreadMemberListStore";
      var x = new v(i.default, {
        CONNECTION_OPEN: function () {
          g = {};
        },
        THREAD_MEMBERS_UPDATE: function (e) {
          var t, n;
          if (!(e.id in g)) return !1;
          null === (t = e.addedMembers) ||
            void 0 === t ||
            t.forEach(t => {
              let { userId: n } = t;
              return g[e.id].addUserId(n);
            }),
            null === (n = e.removedMemberIds) ||
              void 0 === n ||
              n.forEach(t => g[e.id].removeUserId(t));
        },
        THREAD_UPDATE: function (e) {
          var t;
          let { channel: n } = e;
          if (
            !(n.id in g) ||
            (null === (t = n.threadMetadata) || void 0 === t
              ? void 0
              : t.archived) !== !0
          )
            return !1;
          delete g[n.id];
        },
        THREAD_DELETE: function (e) {
          let { channel: t } = e;
          if (!(t.id in g)) return !1;
          delete g[t.id];
        },
        CHANNEL_UPDATES: function (e) {
          let { channels: t } = e,
            n = new Set(t.map(e => e.id)),
            a = !1;
          for (let e in g) n.has(g[e].parentId) && (g[e].rebuild(), (a = !0));
          return a;
        },
        THREAD_MEMBER_LIST_UPDATE: function (e) {
          let { threadId: t, guildId: n, members: a } = e,
            l = r.default.getChannel(t),
            s = null == l ? void 0 : l.parent_id;
          null != s &&
            ((g[t] = new C(n, s, t)), g[t].rebuild(a.map(e => e.user_id)));
        },
        USER_UPDATE: _,
        PRESENCE_UPDATES: function (e) {
          let { updates: t } = e;
          return t
            .map(e => {
              let { user: t } = e;
              return I(t.id);
            })
            .some(e => e);
        },
        GUILD_MEMBER_ADD: _,
        GUILD_MEMBER_UPDATE: _,
        GUILD_MEMBER_REMOVE: _,
        PRESENCES_REPLACE: function (e) {
          let { presences: t } = e,
            n = l(t)
              .map(e => {
                var t;
                return null === (t = e.user) || void 0 === t ? void 0 : t.id;
              })
              .filter(h.isNotNullish)
              .uniq()
              .value(),
            a = !1;
          for (let e in g) g[e].updateMultipleUserIds(n) && (a = !0);
          return a;
        },
        GUILD_MEMBERS_CHUNK: function (e) {
          let { guildId: t, members: n } = e,
            a = n.map(e => e.user.id),
            l = !1;
          for (let e in g) g[e].updateMultipleUserIds(a, t) && (l = !0);
          return l;
        },
        GUILD_ROLE_UPDATE: T,
        GUILD_ROLE_DELETE: T,
        PASSIVE_UPDATE_V1: function (e) {
          var t;
          return null === (t = e.members) || void 0 === t
            ? void 0
            : t.reduce((e, t) => I(t.user.id) || e, !1);
        },
      });
    },
    445375: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return Z;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("446674"),
        u = n("77078"),
        o = n("295426"),
        d = n("352674"),
        c = n("125667"),
        f = n("264732"),
        h = n("206230"),
        m = n("812204"),
        p = n("685665"),
        E = n("850391"),
        S = n("149022"),
        g = n("681060"),
        C = n("376215"),
        _ = n("172554"),
        I = n("699473"),
        T = n("328511"),
        v = n("467094"),
        x = n("845579"),
        N = n("42203"),
        A = n("474643"),
        M = n("377253"),
        R = n("957255"),
        j = n("585722"),
        L = n("476765"),
        y = n("945330"),
        O = n("745183"),
        P = n("959097"),
        D = n("664336"),
        b = n("378765"),
        U = n("718422"),
        w = n("412861"),
        F = n("910927"),
        V = n("730498"),
        k = n("24337"),
        B = n("967241"),
        G = n("517141"),
        H = n("49111"),
        W = n("782340"),
        Y = n("303283"),
        z = n("247703");
      let K = E.ChatInputTypes.THREAD_CREATION;
      function Z(e) {
        let { parentChannelId: t, parentMessageId: n, location: l } = e,
          s = (0, r.useStateFromStores)([N.default], () =>
            N.default.getChannel(t)
          ),
          { AnalyticsLocationProvider: i } = (0, p.default)(
            m.default.CREATE_THREAD
          );
        return null == s
          ? null
          : (0, a.jsx)(i, {
              children: (0, a.jsx)(b.ComponentDispatchGroupProvider, {
                children: (0, a.jsxs)("section", {
                  "aria-label": W.default.Messages.CREATE_THREAD,
                  className: Y.container,
                  children: [
                    (0, a.jsx)(f.default, {
                      channel: s,
                      draftType: A.DraftType.FirstThreadMessage,
                    }),
                    (0, a.jsxs)(D.default, {
                      toolbar: (0, a.jsx)(D.default.Icon, {
                        icon: y.default,
                        tooltip: W.default.Messages.CLOSE,
                        onClick: () => (0, B.closeAndClearThreadSidebar)(t),
                      }),
                      children: [
                        (0, a.jsx)(D.default.Icon, {
                          icon: P.default,
                          disabled: !0,
                          "aria-label": W.default.Messages.THREAD,
                        }),
                        (0, a.jsx)(D.default.Title, {
                          children: W.default.Messages.NEW_THREAD,
                        }),
                      ],
                    }),
                    (0, a.jsx)(Q, {
                      parentChannel: s,
                      parentMessageId: n,
                      location: l,
                    }),
                  ],
                }),
              }),
            });
      }
      function Q(e) {
        let { parentChannel: t, parentMessageId: n, location: s } = e,
          d = (0, r.useStateFromStores)(
            [h.default],
            () => h.default.messageGroupSpacing
          ),
          f = (function () {
            let e = l.useContext(b.ComponentDispatchGroupContext);
            return l.useCallback(() => {
              e.bumpDispatchPriority();
            }, [e]);
          })(),
          {
            threadSettings: m,
            setThreadSettings: p,
            updateThreadSettings: E,
          } = (function (e, t) {
            let [n, a] = l.useState({}),
              s = l.useCallback(
                n => {
                  a(e => ({ ...e, ...n })),
                    o.default.changeThreadSettings(e.id, {
                      ...n,
                      parentMessageId: t,
                    });
                },
                [e.id, t]
              );
            return {
              threadSettings: n,
              setThreadSettings: a,
              updateThreadSettings: s,
            };
          })(t, n),
          { textAreaState: g, setTextAreaState: C } = (function (e, t) {
            let [n, a] = l.useState((0, S.createEmptyState)());
            return (
              l.useEffect(() => {
                function n(n) {
                  var l;
                  let s = A.default.getDraft(
                    e.id,
                    A.DraftType.FirstThreadMessage
                  );
                  (0 === s.length || !0 === n) && a((0, S.createState)(s)),
                    t(
                      null !== (l = A.default.getThreadSettings(e.id)) &&
                        void 0 !== l
                        ? l
                        : {}
                    );
                }
                return (
                  n(!0),
                  A.default.addChangeListener(n),
                  () => {
                    A.default.removeChangeListener(n);
                  }
                );
              }, [e.id, t]),
              { textAreaState: n, setTextAreaState: a }
            );
          })(t, p),
          I = (0, V.usePrivateThreadMode)(t),
          {
            nameError: x,
            messageError: N,
            submit: M,
          } = (function (e) {
            let {
                parentChannel: t,
                parentMessageId: n,
                threadSettings: a,
                privateThreadMode: s,
                textAreaState: i,
                location: r,
              } = e,
              [u, o] = l.useState(null),
              [d, c] = l.useState(null),
              f = (0, G.default)({
                parentChannel: t,
                parentMessageId: n,
                threadSettings: a,
                privateThreadMode: s,
                location: r,
                onThreadCreated: B.openThreadSidebarForViewing,
                useDefaultThreadName: !0,
              }),
              h = l.useCallback(
                async (e, l, s) => {
                  var r, u, d;
                  null == e && (e = i.textValue),
                    (e = e.trim()),
                    (null == l || 0 === l.length) &&
                      (l =
                        null ===
                          (r = T.default.getStickerPreview(
                            t.id,
                            K.drafts.type
                          )) || void 0 === r
                          ? void 0
                          : r.map(e => e.id)),
                    (null == s || 0 === s.length) &&
                      (s = j.default.getUploads(
                        t.id,
                        A.DraftType.FirstThreadMessage
                      ));
                  let h = null !== (u = a.name) && void 0 !== u ? u : "",
                    m = null == n && 0 === h.length,
                    p =
                      "" === e &&
                      (null == l || 0 === l.length) &&
                      0 === s.length;
                  if (
                    (o(m ? (0, F.makeEmptyTitleError)() : null),
                    c(p ? (0, F.makeEmptyMessageError)() : null),
                    m || p)
                  )
                    return { shouldClear: !1, shouldRefocus: !0 };
                  if (null == n) {
                    let { valid: n } = await (0, U.applyChatRestrictions)({
                      content: e,
                      stickers: l,
                      uploads: s,
                      type: K,
                      channel: t,
                    });
                    if (!n) return { shouldClear: !1, shouldRefocus: !0 };
                  }
                  try {
                    await f(e, l, s);
                  } catch (e) {
                    return (
                      (null === (d = e.body) || void 0 === d
                        ? void 0
                        : d.code) === H.AbortCodes.AUTOMOD_TITLE_BLOCKED &&
                        o((0, F.makeAutomodViolationError)(e.body, t)),
                      { shouldClear: !1, shouldRefocus: !0 }
                    );
                  }
                  return (
                    (0, v.clearStickerPreview)(t.id, K.drafts.type),
                    { shouldClear: !0, shouldRefocus: !1 }
                  );
                },
                [f, i.textValue, a.name, n, t]
              );
            return { nameError: u, messageError: d, submit: h };
          })({
            parentChannel: t,
            parentMessageId: n,
            threadSettings: m,
            privateThreadMode: I,
            textAreaState: g,
            location: s,
          }),
          R = (0, V.getIsPrivate)(m, I) ? O.default : P.default;
        return (0, a.jsx)("div", {
          className: Y.chat,
          onMouseDown: f,
          onFocus: f,
          children: (0, a.jsx)("div", {
            className: i(Y.messagesWrapper, "group-spacing-".concat(d)),
            children: (0, a.jsxs)("form", {
              onSubmit: e => {
                e.preventDefault(), M();
              },
              className: Y.form,
              children: [
                (0, a.jsx)(u.Scroller, {
                  className: Y.scroller,
                  fade: !0,
                  children: (0, a.jsxs)("div", {
                    className: Y.scrollerInner,
                    children: [
                      (0, a.jsxs)(_.default, {
                        channelId: "create-thread-null",
                        children: [
                          (0, a.jsx)("div", {
                            className: z.iconWrapper,
                            children: (0, a.jsx)(R, { className: z.icon }),
                          }),
                          (0, a.jsx)(q, {
                            parentChannel: t,
                            parentMessageId: n,
                            threadSettings: m,
                            updateThreadSettings: E,
                            error: x,
                          }),
                          t.type === H.ChannelTypes.GUILD_TEXT
                            ? (0, a.jsx)(X, {
                                startedFromMessage: null != n,
                                threadSettings: m,
                                updateThreadSettings: E,
                                privateThreadMode: I,
                              })
                            : null,
                        ],
                      }),
                      (0, a.jsx)($, { parentChannel: t, parentMessageId: n }),
                    ],
                  }),
                }),
                (0, a.jsxs)("div", {
                  className: Y.submitContainer,
                  children: [
                    (0, a.jsx)(J, {
                      parentChannel: t,
                      textAreaState: g,
                      setTextAreaState: C,
                      submit: M,
                      error: N,
                    }),
                    (0, a.jsx)(c.default, { channel: t, isThreadCreation: !0 }),
                  ],
                }),
              ],
            }),
          }),
        });
      }
      function X(e) {
        let {
            startedFromMessage: t,
            threadSettings: n,
            updateThreadSettings: l,
            privateThreadMode: s,
          } = e,
          r = (0, V.getIsPrivate)(n, s),
          o = (0, a.jsx)("div", {
            className: Y.privateThreadFormTitle,
            children: (0, a.jsx)("span", {
              className: Y.privateThreadFormTitleText,
              children: W.default.Messages.PRIVATE_THREAD,
            }),
          }),
          d = (0, a.jsx)(u.Checkbox, {
            className: i(Y.checkbox),
            type: u.Checkbox.Types.INVERTED,
            disabled: s === V.PrivateThreadMode.PrivateOnly,
            value: r,
            onChange: (e, t) => l({ isPrivate: t }),
            children: (0, a.jsx)(u.Text, {
              variant: "text-md/normal",
              color: "none",
              children:
                W.default.Messages.FORM_THREAD_PRIVATE_THREAD_SECTION_LABEL,
            }),
          });
        return t || s === V.PrivateThreadMode.Disabled
          ? null
          : (0, a.jsxs)(u.FormSection, {
              title: o,
              className: Y.formSection,
              children: [
                d,
                r
                  ? (0, a.jsx)(u.Text, {
                      className: Y.privateThreadDescription,
                      variant: "text-xs/normal",
                      color: "header-secondary",
                      children:
                        W.default.Messages
                          .FORM_THREAD_PRIVATE_THREAD_DESCRIPTION,
                    })
                  : null,
              ],
            });
      }
      function q(e) {
        var t;
        let {
            parentChannel: n,
            parentMessageId: l,
            threadSettings: s,
            updateThreadSettings: i,
            error: r,
          } = e,
          o = null !== (t = s.name) && void 0 !== t ? t : "",
          c = (0, F.renderError)(r, { content: o }),
          f = (0, V.getDefaultThreadName)(n, l),
          h = null != l,
          m = (0, L.useUID)();
        return (0, a.jsx)(u.FormSection, {
          tag: "label",
          htmlFor: m,
          title: W.default.Messages.THREAD_NAME + (h ? " (Optional)" : ""),
          className: Y.formSection,
          children: (0, a.jsx)(u.TextInput, {
            value: o,
            id: m,
            placeholder:
              "" !== f ? f : W.default.Messages.FORM_THREAD_NAME_PLACEHOLDER,
            maxLength: H.MAX_CHANNEL_NAME_LENGTH,
            onChange: e => {
              i({ name: (0, k.default)(e, !1) }),
                "" !== e
                  ? d.default.startTyping(n.id)
                  : d.default.stopTyping(n.id);
            },
            onBlur: () => {
              let e = (0, k.default)(o, !0);
              e !== o && i({ name: e });
            },
            error: c,
          }),
        });
      }
      function J(e) {
        let {
            parentChannel: t,
            textAreaState: n,
            setTextAreaState: s,
            submit: c,
            error: f,
          } = e,
          [h, m] = l.useState(!0),
          p = l.useCallback(() => m(!0), []),
          E = l.useCallback(() => m(!1), []),
          S = l.useCallback(
            (e, n, a) => {
              o.default.saveDraft(t.id, n, A.DraftType.FirstThreadMessage),
                s(
                  e => (
                    "" !== n && e.textValue !== n
                      ? d.default.startTyping(t.id)
                      : "" === n && d.default.stopTyping(t.id),
                    { textValue: n, richValue: a }
                  )
                );
            },
            [t.id, s]
          ),
          _ = l.useCallback(
            e => {
              let { value: t, uploads: n, stickers: a } = e;
              return c(t, a, n);
            },
            [c]
          );
        (0, b.useComponentAction)({
          event: H.ComponentActions.TEXTAREA_FOCUS,
          handler: p,
        }),
          (0, b.useComponentAction)({
            event: H.ComponentActions.TEXTAREA_BLUR,
            handler: E,
          });
        let I = (0, r.useStateFromStores)([R.default], () =>
            R.default.can(H.Permissions.ATTACH_FILES, t)
          ),
          T = (0, F.renderError)(f, { content: n.textValue });
        return (0, a.jsxs)(a.Fragment, {
          children: [
            (0, a.jsx)(C.default, {
              channelId: t.id,
              type: K,
              canAttachFiles: I,
            }),
            (0, a.jsx)("div", {
              className: Y.starterMessageError,
              children: (0, a.jsx)(u.InputError, { error: T }),
            }),
            (0, a.jsx)(g.default, {
              type: K,
              channel: t,
              placeholder:
                W.default.Messages.FORM_THREAD_STARTER_MESSAGE_PLACEHOLDER,
              textValue: n.textValue,
              richValue: n.richValue,
              focused: h,
              className: Y.channelTextArea,
              innerClassName: i(Y.channelTextAreaInner, {
                [Y.channelTextAreaInnerError]: null != T,
              }),
              onFocus: p,
              onBlur: E,
              onChange: S,
              onSubmit: _,
              promptToUpload: w.promptToUpload,
            }),
          ],
        });
      }
      function $(e) {
        let { parentChannel: t, parentMessageId: n } = e,
          l = (0, r.useStateFromStores)([M.default], () =>
            null == n ? null : M.default.getMessage(t.id, n)
          ),
          s = x.MessageDisplayCompact.useSetting();
        return null != l
          ? (0, a.jsx)(I.default, {
              className: Y.messagePreview,
              message: l,
              channel: t,
              compact: s,
              renderThreadAccessory: !1,
              trackAnnouncementViews: !0,
            })
          : null;
      }
    },
    38861: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return p;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("446674"),
        i = n("77078"),
        r = n("247013"),
        u = n("697218"),
        o = n("959097"),
        d = n("664336"),
        c = n("487269"),
        f = n("537560"),
        h = n("782340"),
        m = n("613968");
      function p(e) {
        let { channel: t } = e,
          [n, p] = l.useState(!1),
          E = (0, s.useStateFromStores)(
            [r.default, u.default],
            () => {
              let e = u.default.getCurrentUser();
              return (
                null == e ||
                (t.isNSFW() &&
                  (!e.nsfwAllowed || !r.default.didAgree(t.getGuildId())))
              );
            },
            [t]
          ),
          S = l.useCallback(() => {
            p(!1);
          }, []),
          g = l.useCallback(() => {
            !n && (0, c.trackThreadBrowserOpened)("Popout"), p(!n);
          }, [n]);
        return (0, a.jsx)(i.Popout, {
          animation: i.Popout.Animation.NONE,
          position: "bottom",
          align: "right",
          autoInvert: !1,
          shouldShow: n,
          onRequestClose: S,
          renderPopout: function () {
            return (0, a.jsx)(i.Dialog, {
              children: (0, a.jsx)(f.default, {
                className: m.browser,
                channel: t,
                onClose: S,
              }),
            });
          },
          children: (e, t) => {
            let { isShown: n } = t;
            return (0, a.jsx)(d.Icon, {
              ...e,
              className: m.icon,
              onClick: g,
              icon: o.default,
              "aria-label": h.default.Messages.THREADS,
              tooltip: n ? null : h.default.Messages.THREADS,
              disabled: E,
              selected: n,
            });
          },
        });
      }
    },
    31673: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("77078"),
        i = n("660279"),
        r = n("998650"),
        u = n("664336"),
        o = n("659500"),
        d = n("414833"),
        c = n("547772"),
        f = n("648564"),
        h = n("49111"),
        m = n("782340"),
        p = n("447370");
      function E(e) {
        let { channel: t } = e,
          n = (0, d.useThreadNotificationSetting)(t),
          [E, S] = l.useState(!1),
          g = (0, s.useRedesignIconContext)().enabled;
        l.useEffect(() => {
          let e = () => S(!0);
          return (
            o.ComponentDispatch.subscribe(
              h.ComponentActions.OPEN_THREAD_NOTIFICATION_SETTINGS,
              e
            ),
            () => {
              o.ComponentDispatch.unsubscribe(
                h.ComponentActions.OPEN_THREAD_NOTIFICATION_SETTINGS,
                e
              );
            }
          );
        }, []);
        let C = m.default.Messages.NOTIFICATION_SETTINGS;
        return (0, a.jsx)(s.Popout, {
          shouldShow: E,
          animation: s.Popout.Animation.NONE,
          position: "bottom",
          align: "right",
          autoInvert: !1,
          onRequestClose: () => S(!1),
          renderPopout: e =>
            (0, a.jsx)(c.default, {
              ...e,
              channel: t,
              navId: "thread-context",
              label: m.default.Messages.THREAD_ACTIONS_MENU_LABEL,
            }),
          children: (e, t) => {
            let { isShown: l } = t;
            return (0, a.jsx)(u.default.Icon, {
              ...e,
              onClick: () => S(e => !e),
              tooltip: l ? null : C,
              icon:
                n === f.ThreadMemberFlags.NO_MESSAGES ? r.default : i.default,
              foreground:
                n !== f.ThreadMemberFlags.NO_MESSAGES || g
                  ? null
                  : p.strikethrough,
              "aria-label": C,
              selected: l,
            });
          },
        });
      }
    },
    338273: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return A;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("917351"),
        i = n.n(s),
        r = n("446674"),
        u = n("77078"),
        o = n("30874"),
        d = n("458574"),
        c = n("308798"),
        f = n("646240"),
        h = n("13777"),
        m = n("37774"),
        p = n("117399"),
        E = n("400501"),
        S = n("542640"),
        g = n("604656"),
        C = n("861370"),
        _ = n("845579"),
        I = n("800762"),
        T = n("433487"),
        v = n("664336"),
        x = n("967241"),
        N = n("782340");
      function A(e) {
        let { channel: t } = e,
          [n, s] = l.useState(!1);
        function i() {
          s(e => !e);
        }
        let r = N.default.Messages.MORE;
        return (0, a.jsx)(u.Popout, {
          shouldShow: n,
          animation: u.Popout.Animation.NONE,
          position: "bottom",
          align: "right",
          autoInvert: !1,
          onRequestClose: () => s(!1),
          renderPopout: function (e) {
            return (0, a.jsx)(M, { ...e, channel: t });
          },
          children: (e, t) => {
            let { isShown: n } = t;
            return (0, a.jsx)(v.default.Icon, {
              ...e,
              onClick: i,
              tooltip: n ? null : r,
              icon: T.default,
              "aria-label": r,
              selected: n,
            });
          },
        });
      }
      function M(e) {
        let { channel: t, closePopout: n, onSelect: l } = e,
          s = (0, o.default)(t),
          T = (0, m.default)(t),
          v = (0, S.default)(t.id),
          A = (0, E.default)(t),
          M = (0, C.default)({
            id: t.id,
            label: N.default.Messages.COPY_ID_THREAD,
          }),
          R = (0, d.default)(t),
          j = (0, c.default)(t),
          L = (0, f.default)(t, "Toolbar Overflow"),
          y = (0, p.default)(t),
          O = (0, h.default)(t),
          P = (0, g.default)(t),
          D = _.UseThreadSidebar.useSetting(),
          b = (0, r.useStateFromStores)(
            [I.default],
            () => !i.isEmpty(I.default.getVoiceStatesForChannel(t.id))
          );
        return (0, a.jsxs)(u.Menu, {
          navId: "thread-context",
          onClose: n,
          "aria-label": N.default.Messages.THREAD_ACTIONS_MENU_LABEL,
          onSelect: l,
          children: [
            (0, a.jsxs)(u.MenuGroup, { children: [L, O] }),
            (0, a.jsxs)(u.MenuGroup, {
              children: [
                A,
                y,
                v,
                D && !b
                  ? (0, a.jsx)(u.MenuItem, {
                      id: "open",
                      label: N.default.Messages.OPEN_IN_SPLIT_VIEW,
                      action: function () {
                        (0, x.openThreadSidebarForViewing)(t);
                      },
                    })
                  : null,
              ],
            }),
            (0, a.jsxs)(u.MenuGroup, { children: [P, s, T, j] }),
            (0, a.jsxs)(u.MenuGroup, { children: [R, M] }),
          ],
        });
      }
    },
    503220: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return L;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("77078"),
        i = n("30874"),
        r = n("308798"),
        u = n("646240"),
        o = n("37774"),
        d = n("117399"),
        c = n("400501"),
        f = n("542640"),
        h = n("255228"),
        m = n("772371"),
        p = n("604656"),
        E = n("861370"),
        S = n("565298"),
        g = n("144491"),
        C = n("945330"),
        _ = n("758710"),
        I = n("433487"),
        T = n("664336"),
        v = n("659500"),
        x = n("31673"),
        N = n("967241"),
        A = n("49111"),
        M = n("782340");
      function R(e) {
        let { channel: t } = e,
          [n, i] = l.useState(!1);
        function r() {
          i(e => !e);
        }
        let u = M.default.Messages.MORE;
        return (0, a.jsx)(s.Popout, {
          shouldShow: n,
          animation: s.Popout.Animation.NONE,
          position: "bottom",
          align: "right",
          autoInvert: !1,
          onRequestClose: () => i(!1),
          renderPopout: function (e) {
            return (0, a.jsx)(j, { ...e, channel: t });
          },
          children: (e, t) => {
            let { isShown: n } = t;
            return (0, a.jsx)(T.default.Icon, {
              ...e,
              onClick: r,
              tooltip: n ? null : u,
              icon: I.default,
              "aria-label": u,
              selected: n,
            });
          },
        });
      }
      function j(e) {
        let { channel: t, closePopout: n, onSelect: l } = e,
          S = (0, u.default)(t, "Sidebar Overflow"),
          C = (0, d.default)(t),
          I = (0, h.default)(t),
          T = (0, m.default)(t),
          x = (0, i.default)(t),
          N = (0, o.default)(t),
          R = (0, f.default)(t.id),
          j = (0, c.default)(t),
          L = (0, r.default)(t),
          y = (0, E.default)({
            id: t.id,
            label: M.default.Messages.COPY_ID_THREAD,
          }),
          O = (0, p.default)(t);
        function P() {
          (0, g.transitionToChannel)(t.id);
        }
        return (0, a.jsxs)(s.Menu, {
          navId: "thread-context",
          onClose: n,
          "aria-label": M.default.Messages.THREAD_ACTIONS_MENU_LABEL,
          onSelect: l,
          children: [
            (0, a.jsxs)(s.MenuGroup, {
              children: [
                S,
                (0, a.jsx)(s.MenuItem, {
                  id: "open",
                  label: M.default.Messages.OPEN_IN_FULL_VIEW,
                  action: P,
                }),
              ],
            }),
            (0, a.jsxs)(s.MenuGroup, { children: [I, T] }),
            (0, a.jsxs)(s.MenuGroup, { children: [j, C, R] }),
            (0, a.jsxs)(s.MenuGroup, {
              children: [
                (0, a.jsx)(s.MenuItem, {
                  id: "search",
                  label: M.default.Messages.SEARCH,
                  icon: _.default,
                  action: function () {
                    P(),
                      setTimeout(() => {
                        v.ComponentDispatch.dispatch(
                          A.ComponentActions.FOCUS_SEARCH,
                          { prefillCurrentChannel: !1 }
                        );
                      }, 2e3);
                  },
                }),
                (0, a.jsx)(s.MenuItem, {
                  id: "pins",
                  label: M.default.Messages.PINS,
                  icon: _.default,
                  action: function () {
                    P(),
                      v.ComponentDispatch.dispatch(
                        A.ComponentActions.TOGGLE_CHANNEL_PINS
                      );
                  },
                }),
              ],
            }),
            (0, a.jsxs)(s.MenuGroup, { children: [O, x, N, L] }),
            (0, a.jsx)(s.MenuGroup, { children: y }),
          ],
        });
      }
      function L(e) {
        let { channel: t, baseChannelId: n } = e;
        return (0, a.jsxs)(a.Fragment, {
          children: [
            t.isForumPost() ? null : (0, a.jsx)(x.default, { channel: t }),
            (0, a.jsx)(R, { channel: t }),
            (0, a.jsx)(T.default.Icon, {
              icon: C.default,
              tooltip: M.default.Messages.CLOSE,
              onClick: () =>
                (0, N.closeThreadSidebar)(
                  (0, S.getGuildIdForGenericRedirect)(t),
                  null != n ? n : t.parent_id
                ),
            }),
          ],
        });
      }
    },
    861570: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return R;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("917351"),
        i = n.n(s),
        r = n("446674"),
        u = n("913144"),
        o = n("272030"),
        d = n("264732"),
        c = n("716241"),
        f = n("701916"),
        h = n("679653"),
        m = n("176347"),
        p = n("850391"),
        E = n("557809"),
        S = n("144491"),
        g = n("42203"),
        C = n("474643"),
        _ = n("305961"),
        I = n("800762"),
        T = n("664336"),
        v = n("503220"),
        x = n("648564"),
        N = n("49111"),
        A = n("782340"),
        M = n("370835");
      function R(e) {
        let {
            channelId: t,
            baseChannelId: s,
            channelViewSource: R = "Split View",
          } = e,
          j = (0, r.useStateFromStores)([g.default], () =>
            g.default.getChannel(t)
          ),
          L = (0, r.useStateFromStores)([_.default], () =>
            _.default.getGuild(null == j ? void 0 : j.getGuildId())
          ),
          y = (0, h.default)(j);
        (function (e) {
          let t = (0, r.useStateFromStores)(
            [I.default],
            () =>
              null != e && !i.isEmpty(I.default.getVoiceStatesForChannel(e.id))
          );
          l.useEffect(() => {
            t &&
              null != e &&
              (u.default.dispatch({
                type: "SIDEBAR_CLOSE",
                baseChannelId: e.parent_id,
              }),
              (0, S.transitionToThread)(
                e,
                x.OpenThreadAnalyticsLocations.VOICE_AUTO_OPEN
              ));
          }, [t, e]);
        })(j);
        let O = l.useRef(!1);
        if (
          (l.useEffect(() => {
            if (null == j || O.current) return;
            O.current = !0;
            let e = (0, f.collectThreadMetadata)(
              g.default.getChannel(j.id),
              !0
            );
            (0, c.trackWithMetadata)(N.AnalyticEvents.CHANNEL_OPENED, {
              ...e,
              ...(0, c.getChannelOpenedMetadata)(j.id),
              channel_id: j.id,
              guild_id: j.guild_id,
              parent_id: j.parent_id,
              channel_view: R,
            });
          }, [j, R]),
          null == j || null == L)
        )
          return null;
        let P = (0, a.jsx)(v.default, { channel: j, baseChannelId: s });
        return (0, a.jsxs)(a.Fragment, {
          children: [
            (0, a.jsx)(d.default, {
              channel: j,
              draftType: C.DraftType.ChannelMessage,
            }),
            (0, a.jsx)(T.default, {
              toolbar: P,
              "aria-label": A.default.Messages.THREAD_HEADER_BAR_A11Y_LABEL,
              children: (0, E.renderTitle)({
                channel: j,
                channelName: y,
                guild: L,
                inSidebar: !0,
                handleContextMenu: function (e) {
                  (0, o.openContextMenuLazy)(e, async () => {
                    let { default: e } = await n
                      .el("994827")
                      .then(n.bind(n, "994827"));
                    return t => (0, a.jsx)(e, { ...t, channel: j });
                  });
                },
                handleClick: function () {
                  null != j && (0, S.transitionToChannel)(j.id);
                },
              }),
            }),
            (0, a.jsx)("div", {
              className: M.chat,
              children: (0, a.jsx)(
                m.default,
                {
                  channel: j,
                  guild: L,
                  chatInputType: p.ChatInputTypes.SIDEBAR,
                },
                t
              ),
            }),
          ],
        });
      }
    },
    517141: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
          useCreateForumPost: function () {
            return S;
          },
        });
      var a = n("884691"),
        l = n("16470"),
        s = n("404118"),
        i = n("783480"),
        r = n("681736"),
        u = n("578198"),
        o = n("884351"),
        d = n("474643"),
        c = n("305961"),
        f = n("254490"),
        h = n("730498"),
        m = n("49111"),
        p = n("782340");
      function E(e) {
        let {
            parentChannel: t,
            parentMessageId: n,
            threadSettings: l,
            privateThreadMode: s,
            location: r,
            onThreadCreated: u,
            useDefaultThreadName: c,
          } = e,
          f = a.useCallback((e, t, n, a) => {
            i.default.uploadFiles({
              channelId: e.id,
              uploads: t,
              draftType: d.DraftType.FirstThreadMessage,
              options: { stickerIds: a },
              parsedMessage: o.default.parse(e, n),
            });
          }, []);
        return (0, h.useCreateThreadCommon)({
          parentChannel: t,
          parentMessageId: n,
          threadSettings: l,
          privateThreadMode: s,
          location: r,
          onThreadCreated: u,
          useDefaultThreadName: c,
          uploadHandler: f,
        });
      }
      function S(e) {
        let { parentChannel: t } = e,
          { name: n, appliedTags: a } = (0, u.useForumPostComposerStore)(e => {
            let { name: t, appliedTags: n } = e;
            return { name: t, appliedTags: n };
          }, l.default);
        return (0, h.useCreateForumPostCommon)({
          parentChannel: t,
          name: n,
          appliedTags: a,
          upload: function (e, n, a) {
            return new Promise((l, i) => {
              let u = new r.default(e);
              u.on("error", (e, n, a) => {
                if (n === m.AbortCodes.EXPLICIT_CONTENT) {
                  var l;
                  let e = c.default.getGuild(
                    null !== (l = t.getGuildId()) && void 0 !== l
                      ? l
                      : m.EMPTY_STRING_SNOWFLAKE_ID
                  );
                  null != e &&
                    s.default.show({
                      title: p.default.Messages.UPLOAD_AREA_UPLOAD_FAILED_TITLE,
                      body: p.default.Messages.BOT_GUILD_EXPLICIT_CONTENT.format(
                        { name: e.toString() }
                      ),
                    });
                } else if (n === m.AbortCodes.ENTITY_TOO_LARGE) {
                  let e = (0, f.maxFileSize)(t.getGuildId());
                  s.default.show({
                    title: p.default.Messages.UPLOAD_AREA_TOO_LARGE_TITLE,
                    body: p.default.Messages.UPLOAD_AREA_TOO_LARGE_HELP.format({
                      maxSize: (0, f.sizeString)(e),
                    }),
                  });
                } else
                  n === m.AbortCodes.TOO_MANY_ATTACHMENTS &&
                    s.default.show({
                      title: p.default.Messages.ATTACHMENT_TOO_MANY_ERROR_TITLE,
                      body: p.default.Messages.ATTACHMENT_TOO_MANY_ERROR_MESSAGE.format(
                        { limit: m.MAX_UPLOAD_COUNT }
                      ),
                    });
                i({ body: a });
              }),
                u.on("complete", (e, t) => {
                  l({ body: t });
                }),
                u.uploadFiles(a, n, { addFilesTo: "message.attachments" });
            });
          },
        });
      }
    },
    893980: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          trackProfilePanelViewed: function () {
            return u;
          },
          trackProfilePanelToggled: function () {
            return o;
          },
        });
      var a = n("373469"),
        l = n("824563"),
        s = n("27618"),
        i = n("599110"),
        r = n("49111");
      let u = e => {
          let {
            displayProfile: t,
            isMobile: n,
            loadDurationMs: a,
            activity: l,
            customStatusActivity: s,
            status: u,
          } = e;
          i.default.track(r.AnalyticEvents.DM_PROFILE_VIEWED, {
            has_mobile_indicator: n,
            has_activity:
              null != l &&
              (null == l ? void 0 : l.type) !== r.ActivityTypes.CUSTOM_STATUS,
            has_game_activity:
              (null == l ? void 0 : l.type) === r.ActivityTypes.PLAYING,
            load_duration_ms: a,
            profile_user_status: u,
            has_custom_status: null != s,
            has_profile_effect: null != t.profileEffectId,
            ...d(t),
          });
        },
        o = (e, t) => {
          i.default.track(r.AnalyticEvents.DM_PROFILE_TOGGLED, {
            is_profile_open: t,
            ...d(e),
          });
        },
        d = e => {
          var t;
          if (null == e) return {};
          let n = e.userId,
            i = null != a.default.getAnyStreamForUser(n),
            u = l.default.findActivity(n, e => {
              let { type: t } = e;
              return i
                ? t === r.ActivityTypes.PLAYING
                : t !== r.ActivityTypes.CUSTOM_STATUS;
            }),
            o = null == u ? void 0 : u.assets,
            d = s.default.isFriend(n);
          return {
            has_images: !!(null !== (t = null == o ? void 0 : o.large_image) &&
            void 0 !== t
              ? t
              : null == o
                ? void 0
                : o.small_image),
            is_friend: d,
            viewed_profile_user_id: n,
            profile_has_nitro_customization: e.hasPremiumCustomization(),
            profile_has_theme_color_customized: e.hasThemeColors(),
            profile_has_theme_animation: null != e.popoutAnimationParticleType,
          };
        };
    },
    69682: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          FriendRow: function () {
            return E;
          },
          default: function () {
            return S;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("446674"),
        i = n("77078"),
        r = n("272030"),
        u = n("327037"),
        o = n("145079"),
        d = n("824563"),
        c = n("713135"),
        f = n("401642"),
        h = n("49111"),
        m = n("782340"),
        p = n("155502");
      function E(e) {
        let { user: t, status: n, onSelect: l, onContextMenu: r } = e,
          u = (0, s.useStateFromStores)([d.default], () =>
            d.default.isMobileOnline(t.id)
          );
        return (0, a.jsxs)(i.Clickable, {
          className: p.listRow,
          onClick: () => l(t.id),
          onContextMenu: e => r(e, t),
          children: [
            (0, a.jsx)(i.Avatar, {
              src: t.getAvatarURL(void 0, 40),
              "aria-label": t.username,
              size: i.AvatarSizes.SIZE_40,
              status: n,
              isMobile: u,
              className: p.listAvatar,
            }),
            (0, a.jsx)(o.default, {
              user: t,
              className: p.listName,
              discriminatorClass: p.listDiscriminator,
            }),
          ],
        });
      }
      function S(e) {
        let t,
          { user: o, onClose: d } = e,
          S = (0, s.useStateFromStores)([c.default], () =>
            c.default.getMutualFriends(o.id)
          );
        function g(e) {
          d(),
            (0, f.openUserProfileModal)({
              userId: e,
              analyticsLocation: {
                section: h.AnalyticsSections.USER_PROFILE_MUTUAL_FRIENDS,
              },
            });
        }
        function C(e, t) {
          (0, r.openContextMenuLazy)(e, async () => {
            let { default: e } = await n.el("406784").then(n.bind(n, "406784"));
            return n => (0, a.jsx)(e, { ...n, user: t });
          });
        }
        return (
          l.useEffect(() => {
            null == S && (0, u.fetchMutualFriends)(o.id);
          }, [S, o.id]),
          (t =
            null == S
              ? (0, a.jsx)("div", {
                  className: p.empty,
                  children: (0, a.jsx)(i.Spinner, {}),
                })
              : 0 === S.length
                ? (0, a.jsxs)("div", {
                    className: p.empty,
                    children: [
                      (0, a.jsx)("div", { className: p.emptyIconFriends }),
                      (0, a.jsx)("div", {
                        className: p.emptyText,
                        children: m.default.Messages.NO_MUTUAL_FRIENDS,
                      }),
                    ],
                  })
                : S.map(e =>
                    (0, a.jsx)(
                      E,
                      {
                        user: e.user,
                        status: e.status,
                        onSelect: g,
                        onContextMenu: C,
                      },
                      e.key
                    )
                  )),
          (0, a.jsx)(i.ScrollerThin, {
            className: p.listScroller,
            fade: !0,
            children: t,
          })
        );
      }
    },
    446509: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          GuildRow: function () {
            return I;
          },
          default: function () {
            return T;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("414456"),
        s = n.n(l),
        i = n("446674"),
        r = n("819855"),
        u = n("77078"),
        o = n("272030"),
        d = n("54239"),
        c = n("841098"),
        f = n("449918"),
        h = n("239380"),
        m = n("476263"),
        p = n("158998"),
        E = n("713135"),
        S = n("49111"),
        g = n("782340"),
        C = n("155502"),
        _ = n("56083");
      function I(e) {
        let {
            guild: t,
            nick: n,
            theme: l,
            onSelect: i,
            onContextMenu: o,
            user: d,
          } = e,
          c = d.hasAvatarForGuild(t.id);
        return (0, a.jsxs)(u.Clickable, {
          focusProps: { offset: { right: 8 } },
          className: C.listRow,
          onClick: () => i(t.id),
          onContextMenu: e => o(e, t),
          children: [
            (0, a.jsx)(m.default, {
              tabIndex: -1,
              guild: t,
              showBadge: !0,
              className: s(
                C.listAvatar,
                null == t.icon ? _.guildAvatarWithoutIcon : null
              ),
              badgeStrokeColor: (0, f.getColor)(
                (0, r.isThemeDark)(l) ? S.Color.PRIMARY_600 : S.Color.WHITE_500
              ),
              size: m.default.Sizes.MEDIUM,
              active: !0,
            }),
            (0, a.jsxs)("div", {
              className: C.listRowContent,
              children: [
                (0, a.jsx)("div", {
                  className: C.listName,
                  children: t.toString(),
                }),
                c || null != n
                  ? (0, a.jsxs)("div", {
                      className: _.guildNick,
                      children: [
                        c &&
                          (0, a.jsx)(u.Avatar, {
                            src: d.getAvatarURL(t.id, 16),
                            size: u.AvatarSizes.SIZE_16,
                            className: _.guildAvatar,
                            "aria-hidden": !0,
                          }),
                        null != n ? n : p.default.getName(d),
                      ],
                    })
                  : null,
              ],
            }),
          ],
        });
      }
      function T(e) {
        let t,
          { user: l, onClose: s } = e,
          r = (0, i.useStateFromStores)([E.default], () =>
            E.default.getMutualGuilds(l.id)
          ),
          f = (0, c.default)();
        function m(e) {
          (0, h.transitionToGuild)(e), s(), (0, d.popLayer)();
        }
        function p(e, t) {
          (0, o.openContextMenuLazy)(e, async () => {
            let { default: e } = await n.el("374705").then(n.bind(n, "374705"));
            return n => (0, a.jsx)(e, { ...n, guild: t });
          });
        }
        return (
          (t =
            null == r || 0 === r.length
              ? (0, a.jsxs)("div", {
                  className: C.empty,
                  children: [
                    (0, a.jsx)("div", { className: C.emptyIconGuilds }),
                    (0, a.jsx)("div", {
                      className: C.emptyText,
                      children: g.default.Messages.NO_MUTUAL_GUILDS,
                    }),
                  ],
                })
              : r.map(e => {
                  let { guild: t, nick: n } = e;
                  return (0, a.jsx)(
                    I,
                    {
                      user: l,
                      guild: t,
                      nick: n,
                      theme: f,
                      onSelect: m,
                      onContextMenu: p,
                    },
                    t.id
                  );
                })),
          (0, a.jsx)(u.ScrollerThin, {
            className: C.listScroller,
            fade: !0,
            children: t,
          })
        );
      }
    },
    817080: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("394846"),
        u = n("77078"),
        o = n("272030"),
        d = n("754474"),
        c = n("315102"),
        f = n("506885"),
        h = n("981601"),
        m = n("155502"),
        p = n("889367");
      function E(e) {
        var t;
        let { channel: s, integration: E } = e,
          S = c.default.getApplicationIconURL({
            id: E.application.id,
            icon: E.application.icon,
            size: 40,
          }),
          g = l.useCallback(
            e => {
              (0, o.openContextMenuLazy)(e, async () => {
                let { default: e } = await n
                  .el("348866")
                  .then(n.bind(n, "348866"));
                return t => (0, a.jsx)(e, { ...t, channel: s, integration: E });
              });
            },
            [E, s]
          ),
          C = (0, a.jsxs)("div", {
            className: m.listRow,
            onContextMenu: g,
            children: [
              (0, a.jsx)("img", {
                className: i(m.listAvatar, p.icon),
                alt: "",
                "aria-hidden": !0,
                src: S,
                width: 40,
                height: 40,
              }),
              (0, a.jsx)("div", {
                className: m.listRowContent,
                children: (0, a.jsx)(d.default, {
                  name: E.application.name,
                  botType: d.BotTypes.BOT,
                  botVerified:
                    null === (t = E.application.bot) || void 0 === t
                      ? void 0
                      : t.isVerifiedBot(),
                  className: m.listName,
                }),
              }),
            ],
          }),
          { bot: _ } = E.application;
        return null == _
          ? (0, a.jsx)("li", { children: C })
          : (0, a.jsx)(u.Popout, {
              preload: () => (0, f.default)(_.id, S),
              renderPopout: e =>
                (0, a.jsx)(h.default, { ...e, userId: _.id, channelId: s.id }),
              position: r.isMobile ? "window_center" : "left",
              children: e => (0, a.jsx)("li", { ...e, children: C }),
            });
      }
    },
    390413: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ListType: function () {
            return a;
          },
          default: function () {
            return m;
          },
        }),
        n("222007");
      var a,
        l,
        s = n("37983"),
        i = n("884691"),
        r = n("414456"),
        u = n.n(r),
        o = n("77078"),
        d = n("461380"),
        c = n("67602"),
        f = n("274210"),
        h = n("228450");
      ((l = a || (a = {}))[(l.MutualFriendsList = 0)] = "MutualFriendsList"),
        (l[(l.MutualGuildList = 1)] = "MutualGuildList"),
        (l[(l.AppsList = 2)] = "AppsList");
      var m = e => {
        let {
            header: t,
            children: n,
            itemType: a = 1,
            isLoadingHeader: l,
            isLoadingContents: r,
            loadingContentsCount: m = 0,
            className: p,
            onHover: E,
            onFocus: S,
          } = e,
          [g, C] = i.useState(!0),
          _ = (0, s.jsx)("div", {
            className: f.iconWrapper,
            children: (0, s.jsx)(d.default, {
              direction: g
                ? d.default.Directions.RIGHT
                : d.default.Directions.DOWN,
            }),
          });
        return (0, s.jsxs)("div", {
          className: u(f.listWrapper, p),
          children: [
            (0, s.jsx)(o.Button, {
              className: f.collapseBtn,
              innerClassName: f.collapseBtnContent,
              color: o.ButtonColors.CUSTOM,
              onMouseEnter: E,
              onFocus: S,
              onClick: () => C(!g),
              children: l
                ? (0, s.jsxs)(s.Fragment, {
                    children: [
                      (0, s.jsx)(c.ContentBlob, { width: 34, opacity: 0.08 }),
                      (0, s.jsx)(c.ContentBlob, { width: 135, opacity: 0.08 }),
                    ],
                  })
                : (0, s.jsxs)(s.Fragment, {
                    children: [
                      (0, s.jsx)(o.Text, {
                        variant: "text-sm/medium",
                        children: t,
                      }),
                      _,
                    ],
                  }),
            }),
            (0, s.jsx)("ul", {
              className: u(f.connectionList, { [f.isCollapsed]: g }),
              children: r
                ? Array.from({ length: m }).map((e, t) =>
                    (0, s.jsxs)(
                      "div",
                      {
                        className: u({
                          [h.mutualFriendItem]: 0 === a,
                          [h.mutualGuildsItem]: 1 === a,
                        }),
                        children: [
                          (0, s.jsx)(c.ContentBlob, {
                            width: 34,
                            opacity: 0.08,
                          }),
                          (0, s.jsx)(c.ContentBlob, {
                            width: 135,
                            opacity: 0.08,
                          }),
                        ],
                      },
                      t
                    )
                  )
                : n,
            }),
          ],
        });
      };
    },
    104649: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("446674"),
        s = n("272030"),
        i = n("824563"),
        r = n("401642"),
        u = n("69682"),
        o = n("49111"),
        d = e => {
          let { connection: t } = e,
            { user: d } = t,
            c = d.isNonUserBot(),
            f = (0, l.useStateFromStores)([i.default], () =>
              c ? null : i.default.getStatus(d.id)
            );
          return (0, a.jsx)(u.FriendRow, {
            user: d,
            status: null != f ? f : o.StatusTypes.UNKNOWN,
            onSelect: () => {
              (0, r.openUserProfileModal)({
                userId: d.id,
                analyticsLocation: { section: o.AnalyticsSections.DM_PROFILE },
              });
            },
            onContextMenu: e => {
              var t, l;
              return (
                (t = e),
                (l = d),
                void (0, s.openContextMenuLazy)(t, async () => {
                  let { default: e } = await n
                    .el("406784")
                    .then(n.bind(n, "406784"));
                  return t => (0, a.jsx)(e, { ...t, user: l });
                })
              );
            },
          });
        };
    },
    80615: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("272030"),
        s = n("239380"),
        i = n("446509"),
        r = e => {
          let { connection: t, user: r, theme: u } = e,
            { guild: o, nick: d } = t;
          return (0, a.jsx)(i.GuildRow, {
            guild: o,
            nick: d,
            theme: u,
            user: r,
            onContextMenu: function (e, t) {
              (0, l.openContextMenuLazy)(e, async () => {
                let { default: e } = await n
                  .el("374705")
                  .then(n.bind(n, "374705"));
                return n => (0, a.jsx)(e, { ...n, guild: t });
              });
            },
            onSelect: s.transitionToGuild,
          });
        };
    },
    514917: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return es;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("627445"),
        u = n.n(r),
        o = n("446674"),
        d = n("77078"),
        c = n("327037"),
        f = n("841098"),
        h = n("812204"),
        m = n("699209"),
        p = n("795696"),
        E = n("635792"),
        S = n("252063"),
        g = n("724110"),
        C = n("373469"),
        _ = n("271938"),
        I = n("42203"),
        T = n("957255"),
        v = n("824563"),
        x = n("102985"),
        N = n("697218"),
        A = n("800762"),
        M = n("387111"),
        R = n("158998"),
        j = n("337487"),
        L = n("713135"),
        y = n("765698"),
        O = n("506885"),
        P = n("217513"),
        D = n("893980"),
        b = n("58351"),
        U = n("430312"),
        w = n("840211"),
        F = n("789321"),
        V = n("627601"),
        k = n("10532"),
        B = n("915712"),
        G = n("369869"),
        H = n("802279"),
        W = n("465215"),
        Y = n("301998"),
        z = n("491250"),
        K = n("453649"),
        Z = n("849674"),
        Q = n("817080"),
        X = n("390413"),
        q = n("104649"),
        J = n("80615"),
        $ = n("80531"),
        ee = n("590456"),
        et = n("49111"),
        en = n("646718"),
        ea = n("782340"),
        el = n("620310"),
        es = e => {
          var t;
          let { channel: n, showCall: s } = e,
            r = n.recipients[0],
            [es, ei] = l.useState(!1),
            er = l.useRef(0),
            eu = (0, b.default)(),
            eo = (0, o.useStateFromStores)([N.default], () =>
              N.default.getUser(r)
            ),
            ed = null == eo ? void 0 : eo.isNonUserBot();
          u(null != eo, "Profile Panel: user cannot be undefined");
          let ec = (0, P.default)(eo.id),
            {
              installedIntegrations: ef,
              fetched: eh,
              appsInGDMEnabled: em,
              availableApplications: ep,
            } = (0, S.usePrivateChannelIntegrationState)({ channelId: n.id }),
            eE = !eu && !s,
            eS = (0, o.useStateFromStores)([A.default, I.default], () => {
              var e;
              return null != eo
                ? I.default.getChannel(
                    null === (e = A.default.getVoiceStateForUser(eo.id)) ||
                      void 0 === e
                      ? void 0
                      : e.channelId
                  )
                : null;
            }),
            { enableHangStatus: eg } = m.HangStatusExperiment.useExperiment(
              {
                guildId: null == eS ? void 0 : eS.guild_id,
                location: "ActivityStatus",
              },
              { autoTrackExposure: !1 }
            ),
            {
              activity: eC,
              customStatusActivity: e_,
              isApplicationStreaming: eI,
              isMobile: eT,
              status: ev,
              hangStatusActivity: ex,
              isHangStatusPrimaryActivity: eN,
            } = (0, o.useStateFromStoresObject)(
              [C.default, v.default, T.default],
              () => {
                var e;
                let t = null != C.default.getAnyStreamForUser(eo.id);
                return {
                  activity: v.default.findActivity(eo.id, e => {
                    let { type: n } = e;
                    return t
                      ? n === et.ActivityTypes.PLAYING
                      : n !== et.ActivityTypes.CUSTOM_STATUS &&
                          n !== et.ActivityTypes.HANG_STATUS;
                  }),
                  customStatusActivity: v.default.findActivity(eo.id, e => {
                    let { type: t } = e;
                    return t === et.ActivityTypes.CUSTOM_STATUS;
                  }),
                  isApplicationStreaming: t,
                  isMobile: v.default.isMobileOnline(eo.id),
                  status: ed ? null : v.default.getStatus(eo.id),
                  isHangStatusPrimaryActivity:
                    (null ===
                      (e = v.default.findActivity(eo.id, e => {
                        let { type: n } = e;
                        return t
                          ? n === et.ActivityTypes.PLAYING
                          : n !== et.ActivityTypes.CUSTOM_STATUS;
                      })) || void 0 === e
                      ? void 0
                      : e.type) === et.ActivityTypes.HANG_STATUS,
                  hangStatusActivity:
                    eg &&
                    null != eS &&
                    T.default.can(et.Permissions.CONNECT, eS)
                      ? v.default.findActivity(eo.id, e => {
                          let { type: t } = e;
                          return t === et.ActivityTypes.HANG_STATUS;
                        })
                      : null,
                };
              }
            ),
            eA = null != eC || null != ex || eI,
            eM =
              null !== (t = M.default.getNickname(null, n.id, eo)) &&
              void 0 !== t
                ? t
                : R.default.getName(eo),
            eR = (0, o.useStateFromStores)(
              [x.default],
              () => x.default.hidePersonalInformation
            ),
            [ej, eL, ey, eO, eP] = (0, o.useStateFromStoresArray)(
              [L.default],
              () => [
                L.default.getMutualFriendsCount(eo.id),
                L.default.getMutualFriends(eo.id),
                L.default.getMutualGuilds(eo.id),
                L.default.isFetchingProfile(eo.id),
                L.default.isFetchingFriends(eo.id),
              ]
            ),
            eD = (0, K.useGetVoiceChannelInfoForVoiceActivitySection)(eo.id),
            eb = null != eD && !eI && !eN,
            { showVoiceActivityInProfile: eU } =
              y.VoiceActivityProfileExperiment.useExperiment(
                { location: "user DM panel" },
                { autoTrackExposure: eb && eE }
              ),
            { enabled: ew } = p.default.useExperiment(
              { location: "user DM panel" },
              { autoTrackExposure: eE }
            ),
            eF = !eo.bot && null != ey && ey.length > 0,
            eV = !eo.bot && null != ej && ej > 0,
            ek = (0, Z.useShouldShowUserPopoutCollectiblesUpsell)({
              popoutUser: eo,
              source: V.UserPopoutUpsellSource.PROFILE_PANEL,
            }),
            eB = (0, f.default)();
          l.useEffect(() => {
            er.current = Date.now();
          }, []),
            l.useEffect(() => {
              (0, O.default)(eo.id, eo.getAvatarURL(void 0, 80), {
                withMutualGuilds: !eo.bot,
                withMutualFriendsCount: !eo.bot,
              });
            }, [eo]),
            l.useEffect(() => {
              null != ec &&
                eE &&
                (0, D.trackProfilePanelViewed)({
                  displayProfile: ec,
                  isMobile: eT,
                  loadDurationMs: Date.now() - er.current,
                  activity: eC,
                  customStatusActivity: e_,
                  status: ev,
                });
            }, [ec, eT, eC, e_, ev, eE]);
          let eG =
              null == ey
                ? void 0
                : ey.map(e =>
                    (0, a.jsx)(
                      J.default,
                      { connection: e, user: eo, theme: eB },
                      e.guild.id
                    )
                  ),
            eH =
              null == eL
                ? void 0
                : eL.map(e => (0, a.jsx)(q.default, { connection: e }, e.key)),
            eW = ef.map(e =>
              (0, a.jsx)(
                Q.default,
                { channel: n, integration: e },
                e.application.id
              )
            ),
            eY = l.useCallback(() => {
              !eo.bot && !eP && null == eH && (0, c.fetchMutualFriends)(eo.id);
            }, [eP, eH, eo.id, eo.bot]),
            ez = l.useCallback(() => ei(!0), []),
            eK = l.useCallback(() => ei(!1), []),
            eZ = (0, o.useStateFromStores)([_.default], () =>
              _.default.getId()
            ),
            eQ = eo.id === eZ,
            eX = eo.bot || eQ,
            { enabled: eq } = (0, j.useProfileMutualsExperiment)({
              autoTrackExposure: !0,
              location: h.default.PROFILE,
              disable: eX,
            });
          return eE
            ? (0, a.jsx)("aside", {
                className: el.profilePanel,
                onMouseEnter: ez,
                onMouseLeave: eK,
                children: (0, a.jsxs)(U.default, {
                  user: eo,
                  profileType: ee.UserProfileTypes.PANEL,
                  useDefaultClientTheme: !0,
                  children: [
                    ek.shouldShow &&
                      (0, a.jsx)(
                        F.default,
                        {
                          user: eo,
                          upsellSource: V.UserPopoutUpsellSource.PROFILE_PANEL,
                          displayProfile: ec,
                          isInSidebar: !0,
                          ...ek,
                        },
                        eo.id
                      ),
                    (0, a.jsxs)(d.ScrollerNone, {
                      children: [
                        (0, a.jsx)($.default, {
                          user: eo,
                          displayProfile: ec,
                          channel: n,
                          animateAssets: es,
                          forceShowPremiumBadge: es,
                        }),
                        (0, a.jsxs)(U.default.Inner, {
                          children: [
                            (0, a.jsx)(z.default, {
                              user: eo,
                              nickname: eM,
                              pronouns: null == ec ? void 0 : ec.pronouns,
                            }),
                            (0, a.jsx)(H.default, {
                              customStatusActivity: e_,
                              animate: es,
                            }),
                            eq &&
                              (0, a.jsx)(w.default, {
                                className: el.profileMutuals,
                                user: eo,
                              }),
                            (0, a.jsx)(k.default, {}),
                            (0, a.jsx)(G.default, {
                              bio: null == ec ? void 0 : ec.bio,
                              hidePersonalInformation: eR,
                              animateOnHover: !0,
                              isHovering: es,
                            }),
                            !eo.isSystemUser() &&
                              (0, a.jsxs)(a.Fragment, {
                                children: [
                                  (0, a.jsx)(W.default, { userId: r }),
                                  (0, a.jsx)(k.default, {}),
                                ],
                              }),
                            (0, a.jsx)(Y.default, {
                              user: eo,
                              setNote: !1,
                              hideNote: !1,
                            }),
                          ],
                        }),
                        eU && eb
                          ? (0, a.jsx)(U.default.Inner, {
                              children: (0, a.jsx)(K.default, {
                                voiceGuild: eD.voiceGuild,
                                voiceChannel: eD.voiceChannel,
                                color: el.appButtonColor,
                              }),
                            })
                          : null,
                        eA
                          ? (0, a.jsx)(U.default.Inner, {
                              children: (0, a.jsx)(B.default, {
                                activity: null != eC ? eC : ex,
                                user: eo,
                                channelId: n.id,
                                analyticsParams: {
                                  location: {
                                    page: et.AnalyticsPages.USER_PROFILE,
                                    section: et.AnalyticsSections.DM_PROFILE,
                                  },
                                },
                              }),
                            })
                          : null,
                        (eF || eV) &&
                          (0, a.jsxs)(U.default.Inner, {
                            className: el.profilePanelConnections,
                            children: [
                              eF
                                ? (0, a.jsx)(X.default, {
                                    className: el.mutualGuildsList,
                                    header:
                                      ea.default.Messages.MUTUAL_GUILDS_COUNT.format(
                                        {
                                          count:
                                            null == ey ? void 0 : ey.length,
                                        }
                                      ),
                                    isLoadingHeader: eO,
                                    children: eG,
                                  })
                                : null,
                              eV
                                ? (0, a.jsx)(X.default, {
                                    className: i(el.mutualFriendsList, {
                                      [el.mutualFriendsDivider]: eF,
                                    }),
                                    header:
                                      ea.default.Messages.MUTUAL_FRIENDS_COUNT.format(
                                        { count: ej }
                                      ),
                                    isLoadingHeader: eO,
                                    isLoadingContents: eP,
                                    loadingContentsCount: ej,
                                    onFocus: eY,
                                    onHover: eY,
                                    itemType: X.ListType.MutualFriendsList,
                                    children: eH,
                                  })
                                : null,
                            ],
                          }),
                        em &&
                          (0, a.jsx)(U.default.Inner, {
                            className: i(
                              el.profilePanelConnections,
                              el.appListThemedContainer
                            ),
                            children: (0, a.jsxs)(X.default, {
                              header:
                                eW.length > 0
                                  ? ea.default.Messages.PRIVATE_CHANNEL_APPS_HEADER_COUNT.format(
                                      { count: eW.length }
                                    )
                                  : ea.default.Messages
                                      .PRIVATE_CHANNEL_APPS_HEADER,
                              isLoadingContents: !eh,
                              isLoadingHeader: !1,
                              itemType: X.ListType.AppsList,
                              children: [
                                eW,
                                ep.length > 0 &&
                                  (0, a.jsxs)("div", {
                                    className: el.appButtonContainer,
                                    children: [
                                      0 === ef.length &&
                                        (0, a.jsx)(d.Text, {
                                          variant: "text-xs/normal",
                                          color: "header-secondary",
                                          children:
                                            ea.default.Messages
                                              .PRIVATE_CHANNEL_ADD_APPS_INFO,
                                        }),
                                      (0, a.jsx)(d.Button, {
                                        onClick: () => {
                                          (0, d.openModal)(e =>
                                            (0, a.jsx)(g.default, {
                                              channelId: n.id,
                                              ...e,
                                            })
                                          );
                                        },
                                        color: el.appButtonColor,
                                        className: el.appButton,
                                        fullWidth: !0,
                                        size: d.ButtonSizes.SMALL,
                                        children:
                                          ea.default.Messages
                                            .PRIVATE_CHANNEL_ADD_APPS,
                                      }),
                                    ],
                                  }),
                              ],
                            }),
                          }),
                        ew &&
                          (0, a.jsx)("div", {
                            className: el.giftButtonContainer,
                            children: (0, a.jsx)(E.default, {
                              className: el.giftButton,
                              look: d.Button.Looks.FILLED,
                              buttonText: ea.default.Messages.GIFT_NITRO,
                              buttonTextClassName: el.giftButtonCTA,
                              color: d.Button.Colors.CUSTOM,
                              giftRecipient: eo,
                              subscriptionTier:
                                en.PremiumSubscriptionSKUs.TIER_2,
                              premiumModalAnalyticsLocation: {
                                section: et.AnalyticsSections.DM_PROFILE,
                              },
                            }),
                          }),
                      ],
                    }),
                  ],
                }),
              })
            : null;
        };
    },
    80531: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        }),
        n("222007");
      var a = n("37983");
      n("884691");
      var l = n("446674"),
        s = n("635471"),
        i = n("824563"),
        r = n("289918"),
        u = n("590006"),
        o = n("935409"),
        d = n("590456"),
        c = n("290850"),
        f = e => {
          let {
              user: t,
              displayProfile: n,
              channel: f,
              animateAssets: h,
              forceShowPremiumBadge: m,
            } = e,
            p = t.isNonUserBot(),
            [E, S] = (0, l.useStateFromStoresArray)([i.default], () => [
              p ? null : i.default.getStatus(t.id),
              i.default.isMobileOnline(t.id),
            ]),
            g = null == n ? void 0 : n.profileEffectId;
          return (0, a.jsxs)("div", {
            children: [
              (0, a.jsx)(r.default, {
                user: t,
                displayProfile: n,
                profileType: d.UserProfileTypes.PANEL,
                showPremiumBadgeUpsell: !0,
                isHovering: m,
                animateOnHover: !h,
              }),
              (0, a.jsx)(o.UserPopoutAvatar, {
                user: t,
                displayProfile: n,
                status: E,
                isMobile: S,
                channelId: f.id,
                disableUserProfileLink: !0,
                hasBanner: (null == n ? void 0 : n.banner) != null,
                profileType: d.UserProfileTypes.PANEL,
                animateOnHover: !h,
              }),
              (0, a.jsx)("div", {
                className: c.badgelistGroup,
                children: (0, a.jsx)(u.default, {
                  className: c.badgeList,
                  user: t,
                  size: u.BadgeSizes.SIZE_22,
                }),
              }),
              null != g &&
                (0, a.jsx)(s.default, {
                  profileEffectId: g,
                  maxLoops: 0,
                  resetOnHover: !0,
                  isHovering: m,
                  urlQueryString: "dm-view",
                  noBorderRadius: !0,
                }),
            ],
          });
        };
    },
    58351: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        }),
        n("222007");
      var a = n("884691");
      function l() {
        var e;
        let [t, n] = a.useState(((e = window.innerWidth < 1132), e));
        return (
          a.useEffect(() => {
            function e() {
              n(window.innerWidth < 1132);
            }
            return (
              e(),
              window.addEventListener("resize", e),
              () => window.removeEventListener("resize", e)
            );
          }, [n]),
          t
        );
      }
    },
    143082: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("446674"),
        s = n("77078"),
        i = n("629109"),
        r = n("42887"),
        u = n("829536"),
        o = n("782340");
      function d() {
        let e = (0, l.useStateFromStores)([r.default], () =>
          (0, u.amplitudeToPerceptual)(r.default.getInputVolume())
        );
        return (0, a.jsx)(s.MenuControlItem, {
          id: "input",
          label: o.default.Messages.FORM_LABEL_INPUT_VOLUME,
          control: (t, n) =>
            (0, a.jsx)(s.MenuSliderControl, {
              ...t,
              ref: n,
              value: e,
              onChange: e =>
                i.default.setInputVolume((0, u.perceptualToAmplitude)(e)),
              "aria-label": o.default.Messages.FORM_LABEL_INPUT_VOLUME,
            }),
        });
      }
    },
    252227: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("446674"),
        s = n("77078"),
        i = n("629109"),
        r = n("42887"),
        u = n("773336"),
        o = n("49111"),
        d = n("782340");
      function c() {
        let e = !u.isPlatformEmbedded,
          t = (0, l.useStateFromStores)([r.default], () => r.default.getMode()),
          n = (e, n) =>
            (0, a.jsx)(
              s.MenuRadioItem,
              {
                id: e,
                group: "input-modes",
                label: n,
                checked: t === e,
                action: () => i.default.setMode(e),
              },
              e
            );
        return [
          n(o.InputModes.VOICE_ACTIVITY, d.default.Messages.INPUT_MODE_VAD),
          n(
            o.InputModes.PUSH_TO_TALK,
            e
              ? d.default.Messages.INPUT_MODE_PTT_LIMITED
              : d.default.Messages.INPUT_MODE_PTT
          ),
        ];
      }
    },
    832759: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("446674"),
        s = n("77078"),
        i = n("629109"),
        r = n("42887"),
        u = n("829536"),
        o = n("773336"),
        d = n("782340");
      function c() {
        let e = (0, l.useStateFromStores)([r.default], () =>
          (0, u.amplitudeToPerceptual)(r.default.getOutputVolume())
        );
        return (0, a.jsx)(s.MenuControlItem, {
          id: "output",
          label: d.default.Messages.FORM_LABEL_OUTPUT_VOLUME,
          control: (t, n) =>
            (0, a.jsx)(s.MenuSliderControl, {
              ...t,
              ref: n,
              value: e,
              maxValue: o.isPlatformEmbedded ? 200 : 100,
              onChange: e =>
                i.default.setOutputVolume((0, u.perceptualToAmplitude)(e)),
              "aria-label": d.default.Messages.FORM_LABEL_OUTPUT_VOLUME,
            }),
        });
      }
    },
    648911: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var a = n("446674"),
        l = n("42887"),
        s = n("512244");
      function i() {
        return (0, a.useStateFromStores)([l.default], () =>
          (0, s.default)(l.default)
        );
      }
    },
    491519: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("26989"),
        l = n("387111"),
        s = n("99795"),
        i = n("782340");
      function r(e, t, n) {
        var r, u;
        if (t.type === s.ParticipantTypes.ACTIVITY)
          return null !== (u = null == n ? void 0 : n.name) && void 0 !== u
            ? u
            : null;
        let o = a.default.isGuestOrLurker(
          e.guild_id,
          null === (r = t.user) || void 0 === r ? void 0 : r.id
        );
        return (
          l.default.getName(e.getGuildId(), e.id, t.user) +
          (o ? " ".concat(i.default.Messages.GUEST_NAME_SUFFIX) : "")
        );
      }
    },
    830251: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        }),
        n("446674"),
        n("271938"),
        n("42887");
      var a = n("99795");
      function l(e) {
        var t, n;
        return (
          e.type !== a.ParticipantTypes.ACTIVITY &&
          ((0, a.isStreamParticipant)(e)
            ? null != e.streamId
            : null !==
                (n =
                  null === (t = e.voiceState) || void 0 === t
                    ? void 0
                    : t.selfVideo) &&
              void 0 !== n &&
              n)
        );
      }
    },
    999180: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        }),
        n("222007");
      var a = n("917351"),
        l = n.n(a),
        s = n("446674"),
        i = n("42887"),
        r = n("353927");
      function u() {
        let { enabled: e, cameraUnavailable: t } = (0,
        s.useStateFromStoresObject)([i.default], () => {
          var e, t;
          let n =
            null ===
              (t =
                null ===
                  (e = l(i.default.getVideoDevices()).values().first()) ||
                void 0 === e
                  ? void 0
                  : e.disabled) ||
            void 0 === t ||
            t;
          return {
            enabled: i.default.isVideoEnabled(),
            cameraUnavailable: n || !i.default.supports(r.Features.VIDEO),
          };
        });
        return { enabled: e, cameraUnavailable: t };
      }
    },
    244390: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var a = n("446674"),
        l = n("38654"),
        s = n("271938"),
        i = n("42887"),
        r = n("957255"),
        u = n("800762"),
        o = n("49111");
      function d(e) {
        return (0, a.useStateFromStoresObject)(
          [s.default, u.default, i.default, r.default, l.default],
          () =>
            (function (e) {
              var t;
              let {
                  channel: n,
                  authenticationStore: a = s.default,
                  voiceStateStore: d = u.default,
                  mediaEngineStore: c = i.default,
                  permissionStore: f = r.default,
                  impersonateStore: h = l.default,
                } = e,
                m =
                  null != n ? d.getVoiceState(n.getGuildId(), a.getId()) : null,
                p = c.isSelfMute() || c.isSelfMutedTemporarily(),
                E = null == n ? void 0 : n.getGuildId(),
                S = h.isViewingRoles(E) && !f.can(o.Permissions.SPEAK, n);
              return {
                selfMute: p,
                suppress: (null == m ? void 0 : m.suppress) || S,
                mute:
                  null !== (t = null == m ? void 0 : m.mute) &&
                  void 0 !== t &&
                  t,
              };
            })({
              channel: e,
              authenticationStore: s.default,
              voiceStateStore: u.default,
              mediaEngineStore: i.default,
              permissionStore: r.default,
              impersonateStore: l.default,
            })
        );
      }
    },
    444657: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ActivityEntryPointTile: function () {
            return y;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("151426"),
        u = n("669491"),
        o = n("77078"),
        d = n("997289"),
        c = n("91761"),
        f = n("441821"),
        h = n("478272"),
        m = n("812204"),
        p = n("685665"),
        E = n("10641"),
        S = n("36562"),
        g = n("945330"),
        C = n("381546"),
        _ = n("564875"),
        I = n("82636"),
        T = n("924506"),
        v = n("599110"),
        x = n("439932"),
        N = n("784981"),
        A = n("49111"),
        M = n("954016"),
        R = n("782340"),
        j = n("885399"),
        L = n("861948");
      function y(e) {
        let {
          channel: t,
          guild: n,
          width: l,
          inPopout: s,
          handleClose: i,
          userParticipantCount: r,
        } = e;
        return l < 250
          ? (0, a.jsx)(O, {
              channel: t,
              guild: n,
              width: l,
              inPopout: s,
              handleClose: i,
              userParticipantCount: r,
            })
          : r > 1
            ? (0, a.jsx)(b, {
                channel: t,
                guild: n,
                width: l,
                inPopout: s,
                handleClose: i,
                userParticipantCount: r,
              })
            : (0, a.jsx)(P, { channel: t, guild: n, width: l, inPopout: s });
      }
      function O(e) {
        let { channel: t, inPopout: n, handleClose: l } = e,
          { analyticsLocations: s, AnalyticsLocationProvider: r } = (0,
          p.default)(m.default.VC_TILE_ACTIVITY_SHELF_BUTTON),
          c = (0, d.useAnalyticsContext)(),
          f = (0, o.useToken)(u.default.colors.INTERACTIVE_NORMAL).hex(),
          E = () => {
            (0, h.default)({
              channel: t,
              guildId: t.guild_id,
              locationObject: c.location,
              openInPopout: n,
              analyticsLocations: s,
            });
          };
        return (0, a.jsx)(r, {
          children: (0, a.jsxs)(a.Fragment, {
            children: [
              (0, a.jsx)(o.Tooltip, {
                text: R.default.Messages.EMBEDDED_ACTIVITIES_START_AN_ACTIVITY,
                children: e => {
                  let { onClick: t, ...n } = e;
                  return (0, a.jsx)(o.Clickable, {
                    ...n,
                    className: j.clickableTile,
                    onClick: () => {
                      null == t || t(), E();
                    },
                    children: (0, a.jsx)(N.default, {
                      className: j.root,
                      children: (0, a.jsx)("div", {
                        className: j.iconContainer,
                        children: (0, a.jsx)(T.default, {
                          width: 40,
                          height: 40,
                        }),
                      }),
                    }),
                  });
                },
              }),
              (0, a.jsx)(o.Clickable, {
                onClick: l,
                className: i(
                  (0, x.getThemeClass)(A.ThemeTypes.DARK),
                  j.shelfButtonCloseButton
                ),
                children: (0, a.jsx)(C.default, {
                  width: 24,
                  height: 24,
                  className: j.closeButtonIcon,
                  backgroundColor: f,
                }),
              }),
            ],
          }),
        });
      }
      function P(e) {
        let { channel: t, guild: s, inPopout: i, width: r } = e;
        l.useEffect(() => {
          v.default.track(
            A.AnalyticEvents.VC_TILE_ACTIVITIES_ENTRY_POINT_VIEWED,
            { tile_type: "activity invite", n_participants: 1 }
          );
        }, []);
        let u = (0, d.useAnalyticsContext)(),
          { analyticsLocations: c, AnalyticsLocationProvider: f } = (0,
          p.default)(m.default.VC_TILE_ACTIVITY_INVITE);
        return (0, a.jsx)(f, {
          children: (0, a.jsxs)(N.default, {
            className: j.root,
            children: [
              r > 400
                ? (0, a.jsx)("img", {
                    src: L,
                    className: j.art,
                    alt: R.default.Messages
                      .EMBEDDED_ACTIVITIES_SHELF_CHARACTERS_ALT_TEXT,
                  })
                : null,
              (0, a.jsx)(o.Text, {
                className: j.heading,
                variant: "text-md/semibold",
                children:
                  R.default.Messages
                    .EMBEDDED_ACTIVITIES_VC_TILE_ENTRY_POINT_INVITE,
              }),
              (0, a.jsxs)("div", {
                className: j.buttonContainer,
                children: [
                  (0, a.jsxs)(o.Button, {
                    size: o.Button.Sizes.LARGE,
                    color: o.Button.Colors.PRIMARY,
                    className: j.button,
                    innerClassName: j.buttonContents,
                    onClick: function () {
                      (0, o.openModalLazy)(
                        async () => {
                          let { default: e } = await n
                            .el("310688")
                            .then(n.bind(n, "310688"));
                          return n =>
                            (0, a.jsx)(e, {
                              ...n,
                              guild: s,
                              channel: t,
                              source:
                                A.InstantInviteSources
                                  .ACTIVITY_ENTRY_POINT_TILE,
                            });
                        },
                        {
                          contextKey: i
                            ? o.POPOUT_MODAL_CONTEXT
                            : o.DEFAULT_MODAL_CONTEXT,
                        }
                      );
                    },
                    children: [
                      (0, a.jsx)(_.default, { width: 16, height: 16 }),
                      (0, a.jsx)(o.Text, {
                        variant: "text-sm/medium",
                        children: R.default.Messages.INVITE_FRIENDS,
                      }),
                    ],
                  }),
                  (0, a.jsxs)(o.Button, {
                    size: o.Button.Sizes.LARGE,
                    className: j.button,
                    innerClassName: j.buttonContents,
                    onClick: function () {
                      (0, h.default)({
                        channel: t,
                        guildId: t.guild_id,
                        locationObject: u.location,
                        openInPopout: i,
                        analyticsLocations: c,
                      });
                    },
                    children: [
                      (0, a.jsx)(I.default, { width: 16, height: 16 }),
                      (0, a.jsx)(o.Text, {
                        variant: "text-sm/medium",
                        children:
                          R.default.Messages
                            .EMBEDDED_ACTIVITIES_ACTIVITY_ENTRY_POINT_TILE_CHOOSE_AN_ACTIVITY,
                      }),
                    ],
                  }),
                ],
              }),
            ],
          }),
        });
      }
      let D = e => {
        let { userParticipantCount: t, guildId: n } = e,
          a = (0, c.default)({ guildId: n });
        if (2 === t) {
          let e = [],
            t = [
              (0, M.WATCH_YOUTUBE_PROD_APP_ID),
              (0, M.PUTT_PARTY_APPLICATION_ID),
              (0, M.CHESS_IN_THE_PARK_APP_ID),
            ]
              .filter(Boolean)
              .slice(0, 3);
          return (
            a.forEach(n => {
              let a = t.indexOf(n.application.id);
              !(a < 0) && (e[a] = n);
            }),
            e
          );
        }
        return a.slice(0, 3);
      };
      function b(e) {
        let {
          channel: t,
          guild: n,
          handleClose: s,
          width: u,
          userParticipantCount: d,
        } = e;
        l.useEffect(() => {
          v.default.track(
            A.AnalyticEvents.VC_TILE_ACTIVITIES_ENTRY_POINT_VIEWED,
            { tile_type: "activity suggestion", n_participants: d }
          );
        }, []);
        let c = D({ userParticipantCount: d, guildId: n.id }),
          { AnalyticsLocationProvider: h } = (0, p.default)(
            m.default.VC_TILE_ACTIVITY_SUGGESTION
          );
        return (0, a.jsx)(h, {
          children: (0, a.jsxs)(N.default, {
            className: j.root,
            children: [
              u > 480
                ? (0, a.jsx)("img", {
                    className: j.art,
                    src: L,
                    alt: R.default.Messages
                      .EMBEDDED_ACTIVITIES_SHELF_CHARACTERS_ALT_TEXT,
                  })
                : null,
              u > 300
                ? (0, a.jsx)(o.Text, {
                    className: j.heading,
                    variant: u > 550 ? "text-md/semibold" : "text-sm/semibold",
                    children:
                      R.default.Messages
                        .EMBEDDED_ACTIVITIES_VC_TILE_ENTRY_POINT_TITLE,
                  })
                : null,
              (0, a.jsx)("div", {
                className: i(j.activitiesContainer, {
                  [j.activitiesContainerSmol]: u <= 300,
                }),
                children: c.map(e =>
                  (0, a.jsx)(
                    f.ActivitySuggestion,
                    {
                      channel: t,
                      activityItem: e,
                      aspectRatio:
                        f.ActivitySuggestion.AspectRatio.SIXTEEN_BY_NINE,
                      animatedDivClass: j.activitySuggestion,
                    },
                    e.application.id
                  )
                ),
              }),
              (0, a.jsxs)(o.Clickable, {
                className: j.checkboxContainer,
                onClick: function () {
                  v.default.track(
                    A.AnalyticEvents.VC_TILE_ACTIVITIES_ENTRY_POINT_CLOSED,
                    {
                      tile_type: "activity suggestion",
                      close_type: "permanent",
                      n_participants: d,
                    }
                  ),
                    (0, E.markDismissibleContentAsDismissed)(
                      r.DismissibleContent.VC_TILE_ACTIVITIES_ENTRY_POINT
                    );
                },
                children: [
                  (0, a.jsx)(S.default, {}),
                  (0, a.jsx)(o.Text, {
                    variant: "text-sm/medium",
                    children: R.default.Messages.DONT_SHOW_AGAIN,
                  }),
                ],
              }),
              (0, a.jsx)(o.Clickable, {
                className: j.closeButtonContainer,
                onClick: function () {
                  v.default.track(
                    A.AnalyticEvents.VC_TILE_ACTIVITIES_ENTRY_POINT_CLOSED,
                    {
                      tile_type: "activity suggestion",
                      close_type: "temporary",
                      n_participants: d,
                    }
                  ),
                    s();
                },
                children: (0, a.jsx)(g.default, { className: j.closeButton }),
              }),
            ],
          }),
        });
      }
    },
    395763: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          Avatars: function () {
            return y;
          },
          default: function () {
            return P;
          },
        }),
        n("222007");
      var a,
        l,
        s = n("37983");
      n("884691");
      var i = n("414456"),
        r = n.n(i),
        u = n("446674"),
        o = n("77078"),
        d = n("997289"),
        c = n("191225"),
        f = n("706508"),
        h = n("501260"),
        m = n("577261"),
        p = n("698372"),
        E = n("969380"),
        S = n("401207"),
        g = n("141962"),
        C = n("320817"),
        _ = n("812204"),
        I = n("685665"),
        T = n("442939"),
        v = n("271938"),
        x = n("697218"),
        N = n("811305"),
        A = n("449008"),
        M = n("387111"),
        R = n("782340"),
        j = n("734837");
      ((l = a || (a = {}))[(l.SMALL = 0)] = "SMALL"),
        (l[(l.MEDIUM = 1)] = "MEDIUM"),
        (l[(l.LARGE = 2)] = "LARGE");
      let L = ["embedded_background"];
      function y(e) {
        let { avatarSize: t, guildId: n, channelId: a, users: l } = e,
          i = null != t ? t : o.AvatarSizes.SIZE_32,
          r = (0, o.getAvatarSize)(i);
        return (0, s.jsx)(N.default, {
          size: r,
          guildId: n,
          users: l,
          max: 4,
          renderUser: e => {
            if (null == e) return null;
            let t = M.default.getName(n, a, e);
            return (0, s.jsx)(
              o.TooltipContainer,
              {
                text: t,
                color: o.TooltipColors.GREY,
                children: (0, s.jsx)(
                  "img",
                  { src: e.getAvatarURL(n, r), alt: t, className: j.avatar },
                  e.id
                ),
              },
              e.id
            );
          },
        });
      }
      function O(e) {
        var t, n, a, l;
        let {
          participants: i,
          application: m,
          currentEmbeddedApplication: p,
          channel: E,
          width: S,
        } = e;
        let C = (a = S) > 400 ? 2 : a > 300 ? 1 : 0;
        let [_] =
            (l = S) > 400
              ? [o.AvatarSizes.SIZE_56, 56]
              : l > 300
                ? [o.AvatarSizes.SIZE_32, 32]
                : [o.AvatarSizes.SIZE_24, 24],
          T = (0, u.useStateFromStoresArray)([x.default, v.default], () =>
            Array.from(i)
              .map(e => (v.default.getId() === e ? null : x.default.getUser(e)))
              .filter(A.isNotNullish)
          ),
          N = (0, u.useStateFromStores)([c.default], () =>
            c.default
              .getEmbeddedActivitiesForChannel(E.id)
              .find(e => e.applicationId === m.id)
          ),
          { analyticsLocations: L } = (0, I.default)(),
          O = (0, d.useAnalyticsContext)(),
          P = M.default.getName(
            E.getGuildId(),
            E.id,
            null == T ? void 0 : T[0]
          ),
          D = (0, h.useEmbeddedActivityJoinability)({
            userId:
              null === (t = x.default.getCurrentUser()) || void 0 === t
                ? void 0
                : t.id,
            channelId: E.id,
            application: m,
          }),
          b = D === h.EmbeddedActivityJoinability.CAN_JOIN,
          U = null !== (n = E.getGuildId()) && void 0 !== n ? n : void 0;
        return (0, s.jsxs)("div", {
          className: j.splash,
          children: [
            (0, s.jsx)(y, {
              avatarSize: _,
              guildId: U,
              channelId: E.id,
              users: T,
            }),
            (0, s.jsx)(o.Text, {
              className: r(j.subheader, {
                [j.small]: 0 === C,
                [j.medium]: 1 === C,
              }),
              variant: "text-sm/normal",
              children:
                T.length > 1
                  ? R.default.Messages.EMBEDDED_ACTIVITIES_USERNAME_AND_OTHERS.format(
                      { username: P, count: T.length - 1 }
                    )
                  : R.default.Messages.EMBEDDED_ACTIVITIES_IS_PLAYING.format({
                      username: P,
                    }),
            }),
            (0, s.jsx)(o.Text, {
              className: r(j.header, {
                [j.small]: 0 === C,
                [j.medium]: 1 === C,
              }),
              variant: "text-sm/normal",
              children: m.name,
            }),
            (0, s.jsx)("div", {
              className: j.buttons,
              children: b
                ? (0, s.jsx)(o.Button, {
                    onClick: function (e) {
                      e.stopPropagation(),
                        null != N &&
                          (0, f.default)({
                            applicationId: N.applicationId,
                            currentEmbeddedApplication: p,
                            activityChannelId: E.id,
                            locationObject: O.location,
                            embeddedActivitiesManager: g.default,
                            analyticsLocations: L,
                          });
                    },
                    size: (function (e) {
                      switch (e) {
                        case 2:
                          return o.Button.Sizes.LARGE;
                        case 1:
                          return o.Button.Sizes.MEDIUM;
                        case 0:
                          return o.Button.Sizes.SMALL;
                      }
                    })(C),
                    className: j.button,
                    color: o.Button.Colors.PRIMARY,
                    children:
                      R.default.Messages.EMBEDDED_ACTIVITIES_JOIN_ACTIVITY,
                  })
                : null,
            }),
          ],
        });
      }
      function P(e) {
        let {
            participant: t,
            width: n,
            selected: a,
            interactible: l,
            channel: i,
          } = e,
          { AnalyticsLocationProvider: r } = (0, I.default)(
            _.default.ACTIVITY_TILE
          ),
          { id: u } = t,
          o = (0, m.default)(),
          d =
            (null == o ? void 0 : o.channelId) === i.id &&
            o.applicationId === u,
          c = (0, p.default)(),
          [f] = (0, T.default)([u]),
          { url: h } = (0, E.default)({
            applicationId: u,
            names: L,
            size: 1024,
          }),
          g = !d;
        return (0, s.jsx)(r, {
          children: (0, s.jsx)("div", {
            className: j.container,
            children: (0, s.jsxs)(s.Fragment, {
              children: [
                !a &&
                  d &&
                  (0, s.jsx)(S.default, {
                    className: j.iframe,
                    embedId: (0, C.default)(i.id, u),
                  }),
                g && null != f && null != h && "" !== h
                  ? (0, s.jsx)("img", {
                      className: j.splashImage,
                      alt: f.name,
                      src: h,
                    })
                  : null,
                !d &&
                  !a &&
                  null != f &&
                  (0, s.jsx)(O, {
                    width: n,
                    channel: i,
                    participants: t.participants,
                    application: f,
                    currentEmbeddedApplication: c,
                  }),
                l || g ? null : (0, s.jsx)("div", { className: j.clickShield }),
              ],
            }),
          }),
        });
      }
    },
    679243: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          CallTileFit: function () {
            return ef;
          },
          default: function () {
            return eh;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("446674"),
        u = n("669491"),
        o = n("966900"),
        d = n("838048"),
        c = n("359902"),
        f = n("780624"),
        h = n("77078"),
        m = n("629109"),
        p = n("901582"),
        E = n("299285"),
        S = n("442939"),
        g = n("161306"),
        C = n("397443"),
        _ = n("774539"),
        I = n("699209"),
        T = n("808742"),
        v = n("342845"),
        x = n("170152"),
        N = n("431923"),
        A = n("719761"),
        M = n("835040"),
        R = n("908583"),
        j = n("568088"),
        L = n("560289"),
        y = n("271938"),
        O = n("546463"),
        P = n("42887"),
        D = n("824563"),
        b = n("800762"),
        U = n("953109"),
        w = n("512264"),
        F = n("328275"),
        V = n("437825"),
        k = n("142303"),
        B = n("200639"),
        G = n("97347"),
        H = n("216947"),
        W = n("267675"),
        Y = n("433487"),
        z = n("998564"),
        K = n("420145"),
        Z = n("368121"),
        Q = n("570511"),
        X = n("491519"),
        q = n("395763"),
        J = n("784981"),
        $ = n("729185"),
        ee = n("715764"),
        et = n("144565"),
        en = n("85208"),
        ea = n("49111"),
        el = n("99795"),
        es = n("39141"),
        ei = n("353927"),
        er = n("782340"),
        eu = n("532351");
      let eo = l.memo(e => {
        var t, n, s, u, o;
        let {
            participant: d,
            onDoubleClick: c,
            onContextMenu: f,
            onClick: T,
            onMouseDown: v,
            onKeyDown: U,
            className: F,
            style: k,
            channel: B,
            width: G,
            inPopout: H,
            onVideoResize: W,
            inCall: Y = !1,
            selected: z = !1,
            noBorder: K = !1,
            noVideoRender: Z = !1,
            focused: Q = !1,
            blocked: et = !1,
            fit: eo = w.VideoStreamFit.CONTAIN,
            paused: ed = !1,
            pulseSpeakingIndicator: ef = !1,
          } = e,
          eh = l.useContext(R.IdleStateContext),
          [em, ep] = l.useState(!1),
          eE = (0, r.useStateFromStores)([y.default], () => y.default.getId()),
          eS =
            d.type === el.ParticipantTypes.ACTIVITY
              ? null
              : null === (t = d.user) || void 0 === t
                ? void 0
                : t.id,
          [eg] = (0, S.default)(
            d.type === el.ParticipantTypes.ACTIVITY ? [d.id] : []
          ),
          eC = (0, r.useStateFromStores)([x.default], () =>
            x.default.getEnabled()
          ),
          e_ = (0, r.useStateFromStores)(
            [P.default],
            () =>
              null != eS &&
              P.default.isLocalVideoDisabled(eS, (0, g.default)(d.type)),
            [eS, d.type]
          ),
          eI = (0, r.useStateFromStores)(
            [P.default],
            () =>
              null != eS
                ? P.default.getVideoToggleState(eS, (0, g.default)(d.type))
                : ea.VideoToggleState.NONE,
            [eS, d.type]
          ),
          eT = eI === ea.VideoToggleState.AUTO_PROBING,
          { speaking: ev, ringing: ex, hasVideo: eN } = (0, en.default)(d, eE),
          eA = (function (e, t, n) {
            var a, l, s, i;
            let u = (0, r.useStateFromStoresObject)([b.default], () => {
                var e, a, l;
                let s = b.default.getVoiceState(n, t.id);
                return {
                  muted:
                    null !== (e = null == s ? void 0 : s.mute) &&
                    void 0 !== e &&
                    e,
                  deafened:
                    null !== (a = null == s ? void 0 : s.deaf) &&
                    void 0 !== a &&
                    a,
                  suppressed:
                    null !== (l = null == s ? void 0 : s.suppress) &&
                    void 0 !== l &&
                    l,
                  voiceChannelId: null == s ? void 0 : s.channelId,
                };
              }),
              o = (0, r.useStateFromStoresObject)(
                [P.default],
                () => {
                  let n = (0, g.default)(t.type),
                    a =
                      t.type !== el.ParticipantTypes.ACTIVITY
                        ? t.user.id
                        : t.id;
                  return e === a
                    ? { muted: !1, deafened: !1 }
                    : {
                        muted: P.default.isLocalMute(a, n),
                        localVideoDisabled: P.default.isLocalVideoDisabled(
                          a,
                          n
                        ),
                        localVideoAutoDisabled:
                          P.default.isLocalVideoAutoDisabled(a, n),
                      };
                },
                [e, t]
              );
            return {
              serverMuted: u.muted,
              serverDeafened: u.deafened,
              suppressed: u.suppressed,
              localMuted: o.muted,
              muted:
                null !==
                  (s =
                    t.type === el.ParticipantTypes.USER &&
                    (null === (a = t.voiceState) || void 0 === a
                      ? void 0
                      : a.isVoiceMuted())) &&
                void 0 !== s &&
                s,
              deafened:
                null !==
                  (i =
                    t.type === el.ParticipantTypes.USER &&
                    (null === (l = t.voiceState) || void 0 === l
                      ? void 0
                      : l.isVoiceDeafened())) &&
                void 0 !== i &&
                i,
            };
          })(eE, d, B.getGuildId()),
          eM = d.type === el.ParticipantTypes.STREAM && eS === eE,
          eR = (0, r.useStateFromStores)([j.default], () =>
            null != eS ? j.default.getEffectForUserId(eS) : null
          ),
          ej = (0, r.useStateFromStores)([b.default], () =>
            b.default.getVoicePlatformForChannel(
              B.id,
              null != eS ? eS : ea.EMPTY_STRING_SNOWFLAKE_ID
            )
          ),
          { enableHangStatus: eL } = I.HangStatusExperiment.useExperiment({
            guildId: B.guild_id,
            location: "VoiceUsers",
          }),
          { showGameIcon: ey } = _.default.useExperiment(
            { location: "voice_users" },
            { autoTrackExposure: !1 }
          ),
          eO = ey || eL,
          { hangStatusActivity: eP, gameActivity: eD } = (0,
          r.useStateFromStoresObject)(
            [D.default],
            () => ({
              hangStatusActivity:
                eL && null != eS
                  ? D.default.findActivity(
                      eS,
                      e => e.type === ea.ActivityTypes.HANG_STATUS
                    )
                  : null,
              gameActivity:
                eO && null != eS
                  ? D.default.findActivity(
                      eS,
                      e =>
                        null != e.application_id &&
                        e.type === ea.ActivityTypes.PLAYING
                    )
                  : null,
            }),
            [eL, eS, eO]
          ),
          eb = (0, r.useStateFromStores)([O.default], () =>
            (null == eD ? void 0 : eD.application_id) != null
              ? O.default.getDetectableGame(eD.application_id)
              : null
          ),
          eU = (0, r.useStateFromStores)([E.default], () =>
            null != eb && (null == eD ? void 0 : eD.application_id) != null
              ? E.default.getApplication(
                  null == eD ? void 0 : eD.application_id
                )
              : void 0
          );
        l.useEffect(() => {
          ep(Q);
        }, [Q]);
        let ew = l.useCallback(() => {
            null != eS &&
              m.default.toggleLocalMute(eS, ei.MediaEngineContextTypes.STREAM);
          }, [eS]),
          eF = l.useCallback(
            e => {
              null == T || T(d, e);
            },
            [T, d]
          ),
          eV = l.useCallback(
            e => {
              null == c || c(d, e);
            },
            [c, d]
          ),
          ek = l.useCallback(
            e => {
              null == f || f(d, e);
            },
            [f, d]
          ),
          eB = null,
          eG = null,
          eH = "";
        switch (d.type) {
          case el.ParticipantTypes.STREAM:
            (eB = (0, a.jsx)($.default, {
              participant: d,
              selected: z,
              width: G,
              fit: eo,
              onVideoResize: W,
              paused: ed,
              inPopout: H,
              focused: Q,
            })),
              (eG = (0, a.jsx)($.StreamTileIndicators, {
                participant: d,
                selected: z,
                width: G,
                focused: Q,
                idle: eh,
              })),
              (eH = er.default.Messages.CALL_TILE_A11Y_LABEL_STREAM.format({
                streamerName: d.user.username,
              }));
            break;
          case el.ParticipantTypes.USER:
            (eB = (0, a.jsx)(ee.default, {
              channel: B,
              inCall: Y,
              participant: d,
              fit: eo,
              onVideoResize: W,
              paused: ed,
              selected: z,
              width: G,
              blocked: et,
              noVideoRender: Z || eT,
              pulseSpeakingIndicator: ef,
            })),
              (eH = er.default.Messages.CALL_TILE_A11Y_LABEL_USER.format({
                username: d.user.username,
              }));
            break;
          case el.ParticipantTypes.ACTIVITY:
            (eB = (0, a.jsx)(q.default, {
              interactible: Q,
              participant: d,
              selected: z,
              channel: B,
              width: G,
            })),
              (eH = er.default.Messages.CALL_TILE_A11Y_LABEL_ACTIVITY.format({
                activityName: null == eg ? void 0 : eg.name,
              }));
            break;
          case el.ParticipantTypes.HIDDEN_STREAM:
            eB = (0, a.jsx)($.default, {
              participant: d,
              selected: z,
              width: G,
              fit: eo,
              onVideoResize: W,
              paused: ed,
              inPopout: H,
              focused: Q,
            });
        }
        let eW = l.useRef(null);
        return (0, a.jsx)(p.default, {
          section: ea.AnalyticsSections.VOICE_CHANNEL_TILE,
          children: (0, a.jsx)("div", {
            className: i(eu.wrapper, { [eu.ringing]: ex }, F),
            children: (0, a.jsxs)(M.default, {
              shakeLocation: es.ShakeLocation.VOICE_USER,
              isShaking: ev,
              className: eu.tile,
              children: [
                (0, a.jsx)(J.default, {
                  ref: eW,
                  className: i(eu.tile, {
                    [eu.noBorder]: K,
                    [eu.noInteraction]: null == T,
                    [eu.idle]: eh,
                  }),
                  noBorder: K,
                  style: k,
                  participantUserId: eS,
                  children: (0, a.jsxs)(h.ClickableContainer, {
                    "aria-label": eH,
                    className: eu.tileChild,
                    onDoubleClick: eV,
                    onContextMenu: ek,
                    onClick: eF,
                    onMouseDown: v,
                    onKeyDown: U,
                    focusProps: { offset: 1 },
                    children: [
                      d.type === el.ParticipantTypes.USER &&
                      null != eS &&
                      null != eR
                        ? (0, a.jsx)(L.default, {
                            voiceChannelEffect: eR,
                            onComplete: () =>
                              (0, j.clearVoiceChannelEffectForUser)(eS),
                            userId: eS,
                          })
                        : null,
                      d.type === el.ParticipantTypes.USER
                        ? (0, a.jsx)("div", {
                            className: eu.voiceChannelEffectsContainer,
                            children: (0, a.jsx)(C.default, {
                              userId: eS,
                              channelId: B.id,
                              guildId: B.getGuildId(),
                              containerDimensions: {
                                width:
                                  null !==
                                    (u =
                                      null == eW
                                        ? void 0
                                        : null === (n = eW.current) ||
                                            void 0 === n
                                          ? void 0
                                          : n.clientWidth) && void 0 !== u
                                    ? u
                                    : 0,
                                height:
                                  null !==
                                    (o =
                                      null == eW
                                        ? void 0
                                        : null === (s = eW.current) ||
                                            void 0 === s
                                          ? void 0
                                          : s.clientHeight) && void 0 !== o
                                    ? o
                                    : 0,
                              },
                            }),
                          })
                        : null,
                      eB,
                      K
                        ? null
                        : (0, a.jsx)("div", {
                            className: eu.indicators,
                            children: eG,
                          }),
                      z
                        ? (0, a.jsx)("div", {
                            className: eu.selectedScreen,
                            children: (0, a.jsx)(V.default, {
                              className: eu.selectedIcon,
                            }),
                          })
                        : null,
                      d.type !== el.ParticipantTypes.ACTIVITY
                        ? (0, a.jsx)(ec, {
                            focused: Q,
                            width: G,
                            inCall: Y,
                            participantType: d.type,
                            hasVideo: null != eN && eN,
                            ...eA,
                            idle: eh,
                            platform: ej,
                            title: (0, X.default)(B, d),
                            blocked: et,
                            localVideoDisabled: e_,
                            videoToggleState: eI,
                            hideAudioIcon: eM,
                            onContextMenu: ek,
                            onToggleMute: ew,
                            participantUserId: eS,
                            hangStatusActivity: eP,
                            application: eU,
                            speaking: ev,
                          })
                        : null,
                      d.type === el.ParticipantTypes.USER && eC
                        ? (0, a.jsx)(N.default, {
                            userId: d.id,
                            channelId: B.id,
                          })
                        : null,
                      Y && !K
                        ? (0, a.jsx)("div", {
                            className: i(eu.border, {
                              [eu.voiceChannelEffect]: !Q && null != eR,
                              [eu.speaking]: ev && !Q,
                            }),
                          })
                        : null,
                    ],
                  }),
                }),
                (0, a.jsx)(A.default, {
                  isFiring: em,
                  callTileRef: eW.current,
                }),
              ],
            }),
          }),
        });
      });
      function ed(e) {
        let { participantType: t, platform: n, className: l } = e;
        if (t === el.ParticipantTypes.STREAM)
          return n === el.VoicePlatforms.XBOX
            ? (0, a.jsx)(K.default, { className: l })
            : (0, a.jsx)(W.default, { className: l });
        switch (n) {
          case el.VoicePlatforms.MOBILE:
            return (0, a.jsx)(H.default, { className: l });
          case el.VoicePlatforms.XBOX:
            return (0, a.jsx)(K.default, { className: l });
          case el.VoicePlatforms.PLAYSTATION:
            return (0, a.jsx)(z.default, { className: l });
          default:
            return null;
        }
      }
      eo.displayName = "CallTile";
      let ec = l.memo(e => {
        let {
            muted: t,
            deafened: n,
            localMuted: l,
            serverMuted: s,
            serverDeafened: m,
            idle: p,
            title: E,
            width: S,
            hasVideo: C,
            inCall: _,
            localVideoDisabled: I,
            videoToggleState: x,
            focused: N,
            blocked: A,
            hideAudioIcon: M,
            participantType: R,
            participantUserId: j,
            onContextMenu: L,
            onToggleMute: y,
            platform: O,
            hangStatusActivity: D,
            application: b,
            speaking: w,
          } = e,
          H = null,
          W = null,
          z = null,
          K = null,
          X = (0, et.isVideoCompact)(S),
          q = (0, et.isNamesCompact)(S),
          J = (0, r.useStateFromStores)(
            [P.default],
            () =>
              null != j &&
              P.default.isLocalVideoAutoDisabled(j, (0, g.default)(R)),
            [j, R]
          ),
          $ = (0, h.useRedesignIconContext)().enabled;
        if (!M) {
          if (l && R === el.ParticipantTypes.STREAM && C && !N)
            H = (0, a.jsx)(h.Tooltip, {
              text: er.default.Messages.UNMUTE,
              children: e => {
                let { onClick: t, ...n } = e;
                return (0, a.jsx)(h.Clickable, {
                  ...n,
                  onClick: e => {
                    e.stopPropagation(), null == t || t(), y();
                  },
                  className: i(eu.interactive, eu.toggleMute),
                  children: (0, a.jsx)(Q.default, {}),
                });
              },
            });
          else if (l || R !== el.ParticipantTypes.STREAM || !C || X || N) {
            if ($) {
              let e;
              m
                ? (e = o.HeadphonesDenyIcon)
                : s
                  ? (e = c.MicrophoneDenyIcon)
                  : n
                    ? (e = d.HeadphonesSlashIcon)
                    : l
                      ? (e = c.MicrophoneDenyIcon)
                      : t && (e = f.MicrophoneSlashIcon),
                (H =
                  null != e
                    ? (0, a.jsx)(e, { color: u.default.colors.WHITE })
                    : null);
            } else if (n || t || l) {
              let e = n ? B.default : G.default;
              H = (0, a.jsx)(e, {
                foreground: i({ [eu.localMuteStrikethrough]: l && !n }),
              });
            }
          } else
            H = (0, a.jsx)(h.Tooltip, {
              text: er.default.Messages.MUTE,
              children: e => {
                let { onClick: t, ...n } = e;
                return (0, a.jsx)(h.Clickable, {
                  ...n,
                  onClick: e => {
                    e.stopPropagation(), null == t || t(), y();
                  },
                  className: i(eu.interactive, eu.toggleMute),
                  children: (0, a.jsx)(Z.default, {}),
                });
              },
            });
        }
        return (
          (_ && P.default.supports(ei.Features.VIDEO)) || !C
            ? _ &&
              C &&
              I &&
              !J &&
              (W = (0, a.jsx)(k.default, {
                foreground: eu.localMuteStrikethrough,
              }))
            : (W = (0, a.jsx)(V.default, {})),
          R === el.ParticipantTypes.STREAM &&
            !N &&
            C &&
            (z = (0, a.jsx)(h.Tooltip, {
              text: er.default.Messages.OPTIONS,
              children: e => {
                let { onClick: t, ...n } = e;
                return (0, a.jsx)(h.Clickable, {
                  ...n,
                  onClick: e => {
                    e.stopPropagation(), null == t || t(), L(e);
                  },
                  className: i(eu.status, eu.interactive),
                  children: (0, a.jsx)(Y.default, {}),
                });
              },
            })),
          R === el.ParticipantTypes.USER && null != D
            ? (K = (0, a.jsx)(h.Tooltip, {
                text: (0, T.getHangStatusText)(D),
                children: e =>
                  (0, a.jsx)("div", {
                    ...e,
                    className: i(eu.hangStatusContainer, {
                      [eu.hangStatusSmall]: S < 500,
                    }),
                    children: (0, a.jsx)(v.default, {
                      hangStatusActivity: D,
                      className: eu.hangStatusIcon,
                      animate: w,
                    }),
                  }),
              }))
            : R === el.ParticipantTypes.USER &&
              null != b &&
              (K = (0, a.jsx)(h.Tooltip, {
                text: er.default.Messages.UNFORMATTED_PLAYING_GAME.format({
                  game: b.name,
                }),
                children: e =>
                  (0, a.jsx)("div", {
                    ...e,
                    className: i(eu.hangStatusContainer, {
                      [eu.hangStatusSmall]: S < 500,
                    }),
                    children: (0, a.jsx)(U.default, {
                      className: eu.hangStatusIcon,
                      game: b,
                      size: U.default.Sizes.SMALL,
                    }),
                  }),
              })),
          (0, a.jsxs)("div", {
            className: eu.overlayContainer,
            children: [
              (0, a.jsx)("div", {
                className: i(eu.overlayTop, { [eu.small]: S < 195 }),
                children:
                  J || x === ea.VideoToggleState.AUTO_PROBING
                    ? p
                      ? (0, a.jsx)("div", {
                          className: eu.status,
                          children: (0, a.jsx)(k.default, {}),
                        })
                      : (0, a.jsxs)("div", {
                          className: i(eu.overlayTitle, eu.videoDisabledTitle),
                          children: [
                            (0, a.jsx)("div", {
                              className: eu.status,
                              children: (0, a.jsx)(k.default, {}),
                            }),
                            (0, a.jsx)(h.Text, {
                              variant: "text-sm/normal",
                              className: eu.overlayTitleText,
                              children: er.default.Messages.UNSTABLE_CONNECTION,
                            }),
                          ],
                        })
                    : null,
              }),
              (0, a.jsxs)("div", {
                className: i(eu.overlayBottom, { [eu.small]: S < 195 }),
                children: [
                  q
                    ? (0, a.jsx)("div", {})
                    : (0, a.jsxs)(h.Text, {
                        className: i(eu.overlayTitle, { [eu.idle]: p }),
                        color: "none",
                        variant: "text-md/normal",
                        children: [
                          A
                            ? (0, a.jsx)("div", {
                                className: eu.blocked,
                                children: (0, a.jsx)(F.default, {
                                  className: eu.blockedIcon,
                                  color: u.default.unsafe_rawColors.RED_400.css,
                                }),
                              })
                            : null,
                          (0, a.jsx)(ed, {
                            participantType: R,
                            platform: O,
                            className: eu.titleIcon,
                          }),
                          null != E && "" !== E
                            ? (0, a.jsx)("span", {
                                className: eu.overlayTitleText,
                                children: E,
                              })
                            : null,
                        ],
                      }),
                  (0, a.jsxs)("div", {
                    className: eu.statusContainer,
                    children: [
                      null != W &&
                        (0, a.jsx)("div", {
                          className: eu.status,
                          children: W,
                        }),
                      null != H &&
                        (0, a.jsx)("div", {
                          className: eu.status,
                          children: H,
                        }),
                      z,
                      K,
                    ],
                  }),
                ],
              }),
            ],
          })
        );
      });
      ec.displayName = "CallTileOverlay";
      let ef = w.VideoStreamFit;
      var eh = eo;
    },
    876715: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return m;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("95410"),
        u = n("457112"),
        o = n("679243"),
        d = n("49111"),
        c = n("802542"),
        f = n("678016");
      let h = "CameraPreviewPosition";
      function m(e) {
        let {
            width: t,
            onContextMenuParticipant: n,
            height: s,
            channel: m,
            participants: p,
          } = e,
          [E, S] = (function () {
            let [e, t] = l.useState(() =>
              r.default.get(h, d.PictureInPicturePositions.BOTTOM_RIGHT)
            );
            return [
              e,
              l.useCallback(e => {
                r.default.set(h, e), t(e);
              }, []),
            ];
          })(),
          g = l.useRef(null),
          C = null == m.getGuildId() ? 70 : 50;
        return (
          l.useLayoutEffect(() => {
            var e;
            null === (e = g.current) || void 0 === e || e.ensureIsInPosition();
          }, [p.length]),
          (0, a.jsx)("div", {
            className: c.container,
            children: (0, a.jsx)(u.PictureInPictureWindow, {
              position: E,
              id: 0,
              ref: g,
              onMove: (e, t) => S(t),
              maxX: t,
              maxY: s,
              edgeOffsetTop: C,
              edgeOffsetBottom: 70,
              edgeOffsetLeft: 16,
              edgeOffsetRight: 16,
              children: (0, a.jsx)("div", {
                className: c.tileContainer,
                children: p.map(e =>
                  (0, a.jsx)(
                    o.default,
                    {
                      participant: e,
                      channel: m,
                      onContextMenu: n,
                      className: i(c.tile, f.elevationHigh),
                      fit: o.CallTileFit.COVER,
                      inCall: !0,
                      inPopout: !1,
                      width: 160,
                    },
                    e.id
                  )
                ),
              }),
            }),
          })
        );
      }
    },
    581389: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          handleToggleVideo: function () {
            return e_;
          },
          GoLiveButton: function () {
            return eI;
          },
          default: function () {
            return eN;
          },
        }),
        n("222007");
      var a,
        l,
        s = n("37983"),
        i = n("884691"),
        r = n("414456"),
        u = n.n(r),
        o = n("627445"),
        d = n.n(o),
        c = n("907002"),
        f = n("446674"),
        h = n("77078"),
        m = n("629109"),
        p = n("987317"),
        E = n("990766"),
        S = n("901582"),
        g = n("244201"),
        C = n("191225"),
        _ = n("372610"),
        I = n("812204"),
        T = n("685665"),
        v = n("713726"),
        x = n("705565"),
        N = n("754493"),
        A = n("234755"),
        M = n("858944"),
        R = n("191145"),
        j = n("598785"),
        L = n("266392"),
        y = n("458685"),
        O = n("338677"),
        P = n("76393"),
        D = n("261552"),
        b = n("161454"),
        U = n("374014"),
        w = n("479788"),
        F = n("375202"),
        V = n("16916"),
        k = n("534222"),
        B = n("147257"),
        G = n("109526"),
        H = n("550410"),
        W = n("124824"),
        Y = n("213943"),
        z = n("742683"),
        K = n("576242"),
        Z = n("54727"),
        Q = n("785344"),
        X = n("954519"),
        q = n("719874"),
        J = n("116439"),
        $ = n("373469"),
        ee = n("950104"),
        et = n("42887"),
        en = n("18494"),
        ea = n("697218"),
        el = n("703370"),
        es = n("991170"),
        ei = n("999180"),
        er = n("830210"),
        eu = n("289180"),
        eo = n("244390"),
        ed = n("252234"),
        ec = n("696405"),
        ef = n("951691"),
        eh = n("19065"),
        em = n("977347"),
        ep = n("799808"),
        eE = n("727284"),
        eS = n("49111"),
        eg = n("99795"),
        eC = n("983127");
      function e_(e, t) {
        if (et.default.isVideoEnabled() === e) return;
        let n = () => m.default.setVideoEnabled(e);
        e ? (0, eE.default)(n, t) : n();
      }
      function eI(e) {
        let {
            channel: t,
            currentUser: n,
            exitFullScreen: a,
            canGoLive: l,
            hasPermission: r,
            disabled: u,
          } = e,
          o = (0, g.useAppContext)(),
          d = (0, f.useStateFromStoresArray)([$.default], () =>
            $.default.getAllActiveStreams()
          ),
          c = d.find(e => e.ownerId === n.id),
          m = t.getGuildId(),
          p = i.useCallback(() => {
            if ((null == a || a(), !l)) return (0, em.default)();
            (0, ep.default)(m, t.id, eS.AnalyticsPages.GUILD_CHANNEL);
          }, [m, t.id, l, a]),
          S = (0, f.useStateFromStores)([b.default, el.default], () =>
            (0, F.default)(b.default, el.default)
          ),
          C = (0, N.default)(),
          _ = (0, x.default)() && null != S,
          I = () => {
            _ &&
              (null == c
                ? (0, E.createBroadcastChannelOrStartStream)({
                    channelId: t.id,
                    pid: null == S ? void 0 : S.pid,
                  })
                : (0, v.startBroadcastForStream)(
                    (0, U.encodeStreamKey)(c),
                    null == S ? void 0 : S.pid
                  ));
          },
          T = () => {
            if (_) {
              (0, M.openStartBroadcastConfirmModal)(I);
              return;
            }
            if (l) {
              p();
              return;
            }
            (0, em.default)();
          },
          A = () => {
            if (C) {
              (0, M.openStopBroadcastConfirmModal)(() => (0, V.default)(c));
              return;
            }
            (0, V.default)(c);
          },
          R = (e, t) => {
            let { onClick: n, ...a } = null != e ? e : { onClick: void 0 },
              l = null != c && !C;
            return null != c
              ? (0, s.jsx)(X.default, {
                  ...a,
                  centerButton: !0,
                  className: eC.controlButton,
                  onClick: A,
                  isSelfStream: !0,
                  onPopoutClick: l ? n : null,
                  popoutOpen: t,
                  shouldShowTooltip: !t,
                })
              : (0, s.jsx)(q.default, {
                  ...a,
                  centerButton: !0,
                  className: eC.controlButton,
                  hasPermission: r,
                  onClick: T,
                  onPopoutClick: l ? n : null,
                  popoutOpen: t,
                  shouldShowTooltip: !t,
                  disabled: u,
                });
          };
        return C
          ? R()
          : (0, s.jsx)(H.default, {
              children: (0, s.jsx)(h.Popout, {
                renderPopout: e => {
                  let { closePopout: a } = e;
                  return (0, s.jsx)(W.default, {
                    children: (0, s.jsx)(ef.default, {
                      channel: t,
                      currentUser: n,
                      activeStreams: null != c ? [c] : [],
                      handleGoLive: p,
                      onClose: a,
                      appContext: o,
                    }),
                  });
                },
                position: "top",
                align: "center",
                animation: h.Popout.Animation.FADE,
                children: (e, t) => {
                  let { ...n } = e,
                    { isShown: a } = t;
                  return (0, s.jsx)("div", { children: R(n, a) });
                },
              }),
            });
      }
      function eT(e) {
        let { channel: t } = e,
          n = t.getGuildId(),
          a = (0, _.default)(n, t.id);
        return a
          ? (0, s.jsx)("div", {
              className: eC.buttonContainer,
              children: (0, s.jsx)(ed.CenterControlTrayActivityButton, {
                channel: t,
              }),
            })
          : null;
      }
      ((l = a || (a = {})).ACTIVITY = "ACTIVITY"),
        (l.STREAM = "STREAM"),
        (l.CALL = "CALL"),
        (l.EVENT = "EVENT"),
        (l.BROADCAST = "BROADCAST");
      let ev = i.memo(function (e) {
        let {
            connectedActivityApplicationId: t,
            currentUser: n,
            onDisconnectCall: a,
            channel: l,
          } = e,
          r = (0, f.useStateFromStores)([R.default], () =>
            R.default.getSelectedParticipant(l.id)
          ),
          { reducedMotion: u } = i.useContext(
            h.AccessibilityPreferencesContext
          ),
          [o, d] = i.useState(!1),
          m = null == r ? void 0 : r.id,
          S = (0, f.useStateFromStores)(
            [$.default],
            () => (null != m ? $.default.getActiveStreamForStreamKey(m) : null),
            [m]
          ),
          g =
            (null == r ? void 0 : r.type) === eg.ParticipantTypes.STREAM &&
            null != S &&
            S.ownerId !== (null == n ? void 0 : n.id),
          C = (0, f.useStateFromStoresArray)([$.default], () =>
            $.default.getAllActiveStreamsForChannel(l.id).filter(e => {
              let { ownerId: t } = e;
              return t !== (null == n ? void 0 : n.id);
            })
          ),
          _ = (0, k.useActiveEvent)(l.id),
          I = (0, N.useIsBroadcastingInChannel)(l.id),
          T = i.useCallback(() => {
            if (
              (null == r ? void 0 : r.type) === eg.ParticipantTypes.ACTIVITY &&
              r.id === t
            )
              return "ACTIVITY";
            if (g) return "STREAM";
            if (null != _) return "EVENT";
            return "CALL";
          }, [r, t, g, _]),
          [v, x] = i.useState(T()),
          M = (0, c.useSpring)({
            opacity: o ? 0.2 : 1,
            transform: o && !u.enabled ? "scale(0.7)" : "scale(1)",
            config: {
              mass: 2,
              tension: o ? 600 : 1e3,
              friction: 45,
              precision: 0.01,
              clamp: o,
            },
            onRest: () => {
              x(T()), d(!1);
            },
          });
        i.useEffect(() => {
          let e = T();
          e !== v && d(!0);
        }, [v, T]);
        let j = i.useCallback(() => {
            if (null != S) (0, E.stopStream)((0, U.encodeStreamKey)(S));
            else for (let e of C) (0, E.stopStream)((0, U.encodeStreamKey)(e));
          }, [C, S]),
          L = (e, t) => {
            let i = {
              centerButton: !0,
              className: eC.controlButton,
              popoutOpen: e,
            };
            switch (v) {
              case "ACTIVITY":
                if (null == r || null == n) return;
                return (0, s.jsx)(K.default, {
                  ...i,
                  applicationId: r.id,
                  color: "red",
                  channelId: l.id,
                  onPopoutClick: C.length > 0 ? t : null,
                });
              case "STREAM":
                return (0, s.jsx)(X.default, {
                  ...i,
                  color: "red",
                  onClick: j,
                  onPopoutClick: C.length > 1 ? t : null,
                  isSelfStream: !1,
                });
              case "CALL":
                return (0, s.jsx)(Z.default, {
                  ...i,
                  color: "red",
                  onClick: () => (null == a ? void 0 : a()),
                  onPopoutClick: C.length > 0 ? t : null,
                  channel: l,
                });
              case "EVENT":
                return (0, s.jsx)(B.default, {
                  channelId: l.id,
                  onClick: () => {
                    p.default.disconnect(), null == a || a();
                  },
                });
            }
          };
        return (0, s.jsx)(h.Popout, {
          renderPopout: e => {
            let { closePopout: t } = e;
            return I
              ? (0, s.jsx)(A.default, { onClose: t })
              : (0, s.jsx)(ef.default, {
                  channel: l,
                  currentUser: n,
                  activeStreams: C,
                  handleGoLive: eS.NOOP_NULL,
                  hideSelfOptions: !0,
                  onClose: t,
                });
          },
          position: "top",
          align: "center",
          animation: h.Popout.Animation.FADE,
          children: (e, t) => {
            let { onClick: n } = e,
              { isShown: a } = t;
            return (0, s.jsx)(c.animated.div, { style: M, children: L(a, n) });
          },
        });
      });
      function ex(e) {
        let {
            channel: t,
            cameraUnavailable: n,
            hasCameraPermission: a,
            currentUser: l,
          } = e,
          r = (0, g.useAppContext)(),
          { reachedLimit: o, limit: d } = (0, er.default)(t),
          c = i.useCallback(() => {
            (0, eE.default)(() => p.default.selectVoiceChannel(t.id, !0), r);
          }, [t.id, r]),
          h = i.useCallback(() => {
            p.default.selectVoiceChannel(t.id, !1);
          }, [t.id]),
          m = i.useCallback(() => {
            n ? (0, eh.default)() : c();
          }, [n, c]),
          E = (0, f.useStateFromStores)([ee.default], () => {
            let e = ee.default.getCall(t.id);
            return (null == e ? void 0 : e.ringing.includes(l.id)) === !0;
          });
        return (0, s.jsxs)(s.Fragment, {
          children: [
            (0, s.jsx)(J.default, {
              enabled: !0,
              centerButton: !0,
              join: !0,
              color: "green",
              channelLimitReached: o,
              channelLimit: d,
              channel: t,
              cameraUnavailable: n,
              hasPermission: a,
              onCameraUnavailable: m,
              className: eC.controlButton,
              iconClassName: eC.joinIcon,
              onChange: c,
            }),
            (0, s.jsx)(z.default, {
              centerButton: !0,
              color: "green",
              channel: t,
              className: u(eC.controlButton, eC.lastButton),
              onClick: h,
            }),
            E
              ? (0, s.jsx)(Y.default, {
                  color: "red",
                  channel: t,
                  className: eC.controlButton,
                })
              : null,
          ],
        });
      }
      var eN = function (e) {
        let {
            channel: t,
            className: n,
            onDisconnectCall: a,
            exitFullScreen: l,
          } = e,
          i = (0, f.useStateFromStores)([ea.default], () => {
            let e = ea.default.getCurrentUser();
            return (
              d(
                null != e,
                "CenterControlTray: currentUser cannot be undefined"
              ),
              e
            );
          }),
          { cameraUnavailable: r, enabled: o } = (0, ei.default)(),
          c = (0, eu.default)(t),
          { suppress: m, selfMute: p, mute: E } = (0, eo.default)(t),
          { canGoLive: g } = (0, f.useStateFromStoresObject)(
            [et.default],
            () => ({ canGoLive: (0, w.default)(et.default) })
          ),
          _ = (0, D.default)(),
          v = (0, f.useStateFromStores)(
            [P.default],
            () => null != P.default.getAwaitingRemoteSessionInfo()
          ),
          x = null != _,
          N = (0, f.useStateFromStores)([en.default], () => {
            var e;
            return (
              (null !== (e = null == _ ? void 0 : _.channelId) && void 0 !== e
                ? e
                : en.default.getVoiceChannelId()) === t.id
            );
          }),
          A = (0, j.default)(t, !0),
          M = (0, f.useStateFromStores)([C.default], () => {
            let e = C.default.getSelfEmbeddedActivityForChannel(t.id);
            return null != e ? e.applicationId : null;
          }),
          { reachedLimit: R, limit: b } = (0, er.default)(t),
          { AnalyticsLocationProvider: U } = (0, T.default)(
            I.default.VOICE_CONTROL_TRAY
          );
        if (!N)
          return (0, s.jsx)(U, {
            children: (0, s.jsx)(ex, {
              channel: t,
              cameraUnavailable: r,
              hasCameraPermission: c,
              currentUser: i,
            }),
          });
        let F =
          es.default.can({
            permission: eS.Permissions.ADD_REACTIONS,
            user: i,
            context: t,
          }) &&
          !t.isPrivate() &&
          !A;
        return (0, s.jsx)(U, {
          children: (0, s.jsxs)(S.default, {
            section: eS.AnalyticsSections.VOICE_CONTROL_TRAY,
            children: [
              (0, s.jsx)("div", {
                className: eC.eventPromptsContainer,
                children: (0, s.jsx)(G.default, { channelId: t.id }),
              }),
              (0, s.jsxs)("div", {
                className: u(eC.wrapper, n),
                children: [
                  !x &&
                    (0, s.jsx)(h.Popout, {
                      renderPopout: e => {
                        let { closePopout: t } = e;
                        return (0, s.jsx)(W.default, {
                          children: (0, s.jsx)(y.default, { onClose: t }),
                        });
                      },
                      position: "top",
                      align: "center",
                      animation: h.Popout.Animation.FADE,
                      children: (e, t) => {
                        let { onClick: n } = e,
                          { isShown: a } = t;
                        return (0, s.jsx)(J.default, {
                          centerButton: !0,
                          hasPermission: c,
                          className: eC.controlButton,
                          enabled: o,
                          cameraUnavailable: r,
                          onChange: e_,
                          onCameraUnavailable: eh.default,
                          channelLimitReached: R,
                          channelLimit: b,
                          popoutOpen: a,
                          onPopoutClick: n,
                        });
                      },
                    }),
                  !x && (0, s.jsx)(eT, { channel: t }),
                  !x &&
                    (0, s.jsx)(eI, {
                      channel: t,
                      currentUser: i,
                      exitFullScreen: l,
                      canGoLive: g,
                      hasPermission: c,
                    }),
                  (0, s.jsx)(h.Popout, {
                    renderPopout: e => {
                      let { closePopout: t } = e;
                      return (0, s.jsx)(W.default, {
                        children: (0, s.jsx)(L.default, {
                          onClose: t,
                          renderInputDevices: !0,
                          renderOutputDevices: !0,
                          renderInputModes: !0,
                        }),
                      });
                    },
                    align: "center",
                    position: "top",
                    animation: h.Popout.Animation.FADE,
                    children: (e, t) => {
                      let { onClick: n } = e,
                        { isShown: a } = t;
                      return (0, s.jsx)(Q.default, {
                        centerButton: !0,
                        onPopoutClick: x ? null : n,
                        className: eC.controlButton,
                        selfMute: p,
                        serverMute: E,
                        suppress: m,
                        popoutOpen: a,
                        awaitingRemote: v,
                        onClick: () => (0, O.default)(E, m),
                      });
                    },
                  }),
                  F && !x
                    ? (0, s.jsx)("div", {
                        className: eC.buttonContainer,
                        children: (0, s.jsx)(ec.default, { channel: t }),
                      })
                    : null,
                  (0, s.jsx)(ev, {
                    connectedActivityApplicationId: M,
                    currentUser: i,
                    channel: t,
                    onDisconnectCall: a,
                  }),
                ],
              }),
            ],
          }),
        });
      };
    },
    252234: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          CenterControlTrayActivityButton: function () {
            return N;
          },
        }),
        n("424973");
      var a = n("37983"),
        l = n("884691"),
        s = n("446674"),
        i = n("151426"),
        r = n("77078"),
        u = n("997289"),
        o = n("244201"),
        d = n("191225"),
        c = n("426631"),
        f = n("380691"),
        h = n("943349"),
        m = n("702173"),
        p = n("801852"),
        E = n("10524"),
        S = n("478272"),
        g = n("685665"),
        C = n("384997"),
        _ = n("788220"),
        I = n("863590"),
        T = n("49111"),
        v = n("994428"),
        x = n("983127");
      function N(e) {
        let { channel: t } = e,
          n = (0, s.useStateFromStores)([d.default], () =>
            d.default.isLaunchingActivity()
          ),
          N = (0, h.useEmbeddedActivityLaunchability)(t.id),
          A = (0, h.getEmbeddedActivityLaunchabilityLabel)(N),
          M = N !== h.EmbeddedActivityLaunchability.CAN_LAUNCH || n,
          {
            isHovered: R,
            setIsHovered: j,
            onMouseEnter: L,
            onMouseLeave: y,
          } = (0, _.default)(200, 300),
          O = (0, f.useShowActivityIndicator)(),
          P = (0, c.default)({ channelId: t.id }),
          D = !M,
          b = l.useCallback(
            e => {
              "focus" !== e.type && L();
            },
            [L]
          ),
          U = (0, u.useAnalyticsContext)(),
          w = (0, o.useAppContext)(),
          F = w === T.AppContext.POPOUT,
          { analyticsLocations: V } = (0, g.default)(),
          k = l.useCallback(() => {
            (0, S.default)({
              channel: t,
              guildId: t.guild_id,
              locationObject: U.location,
              openInPopout: F,
              analyticsLocations: V,
            });
          }, [U.location, V, t, F]),
          B = [];
        !M && B.push(i.DismissibleContent.ACTIVITIES_MINI_SHELF_SPARKLES);
        let G = (0, m.default)(t.id);
        return (
          G && !M && B.push(i.DismissibleContent.ACTIVITY_GDM_ROCKET_SPARKLE),
          (0, a.jsx)(C.default, {
            contentTypes: B,
            children: e => {
              let { visibleContent: n, markAsDismissed: l } = e;
              return (0, a.jsx)(r.Popout, {
                fixed: !0,
                shouldShow: R,
                animationPosition: "bottom",
                position: "bottom",
                align: "center",
                spacing: 16,
                onRequestClose: () => {
                  j(!1);
                },
                renderPopout: e => {
                  let { closePopout: n, setPopoutRef: s } = e;
                  return D
                    ? (0, a.jsx)(p.ActivitiesMiniShelf, {
                        ref: s,
                        channel: t,
                        closePopout: n,
                        onMouseEnter: L,
                        onMouseLeave: y,
                        isHovered: R,
                        onClick: () => l(v.ContentDismissActionType.UNKNOWN),
                      })
                    : (0, a.jsx)(a.Fragment, {});
                },
                children: () =>
                  (0, a.jsxs)(a.Fragment, {
                    children: [
                      (0, a.jsx)(I.default, {
                        disabled: M,
                        "aria-label": A,
                        label: D ? void 0 : A,
                        isActivityActive: P || R,
                        className: x.controlButton,
                        onClick: () => {
                          k(),
                            (n ===
                              i.DismissibleContent
                                .ACTIVITIES_MINI_SHELF_SPARKLES ||
                              n ===
                                i.DismissibleContent
                                  .ACTIVITY_GDM_ROCKET_SPARKLE ||
                              n ===
                                i.DismissibleContent
                                  .ACTIVITIES_WATCH_TOGETHER_APRIL_2023_WEEK_1_SPARKLES ||
                              n ===
                                i.DismissibleContent
                                  .ACTIVITIES_WATCH_TOGETHER_APRIL_2023_WEEK_2_SPARKLES) &&
                              l(v.ContentDismissActionType.UNKNOWN);
                        },
                        onMouseEnter: b,
                        onMouseLeave: y,
                      }),
                      O
                        ? (0, a.jsx)(E.FreeActivityIndicatorDot, {
                            top: 4,
                            right: 10,
                            size: 12,
                            maskColor: E.MaskColor.BLACK,
                          })
                        : null,
                    ],
                  }),
              });
            },
          })
        );
      }
    },
    696405: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("446674"),
        u = n("77078"),
        o = n("174727"),
        d = n("788220"),
        c = n("515496"),
        f = n("568088"),
        h = n("624567"),
        m = n("49111"),
        p = n("983127"),
        E = e => {
          let { channel: t, className: n } = e,
            {
              isHovered: s,
              setIsHovered: E,
              onMouseEnter: S,
              onMouseLeave: g,
              cancelTimers: C,
            } = (0, d.default)(200, 300),
            [_, I] = l.useState(!1),
            T = (0, r.useStateFromStores)(
              [f.default],
              () => f.default.effectCooldownEndTime
            ),
            v = l.useMemo(
              () => (null != T ? (T.getTime() - Date.now()) / 1e3 : 0),
              [T]
            ),
            { seconds: x } = (0, o.default)(null != T ? T : new Date()),
            N = x > 0,
            A = l.useCallback(
              e => {
                if ("focus" !== e.type) !_ && !N && S();
              },
              [_, N, S]
            ),
            M = l.useCallback(() => {
              !_ && g();
            }, [g, _]),
            R = l.useCallback(
              (e, t) => {
                C(), I(!_), (!s || _) && (null == t || t(e));
              },
              [C, _, s]
            ),
            j = s || _;
          return (0, a.jsx)(u.Popout, {
            shouldShow: j,
            animationPosition: "bottom",
            position: "bottom",
            align: "center",
            spacing: 16,
            onRequestClose: () => {
              E(!1), I(!1);
            },
            renderPopout: e => {
              let { closePopout: n } = e;
              return (0, a.jsx)(h.default, {
                isHovered: j,
                channel: t,
                closePopout: n,
                onMouseEnter: S,
                onMouseLeave: M,
                onFocus: () => I(!0),
              });
            },
            children: e => {
              let { onClick: t, onKeyDown: l } = e;
              return (0, a.jsx)(c.default, {
                isCenterButton: !0,
                totalCooldownSeconds: v,
                remainingCooldownSeconds: x,
                className: i(p.controlButton, n),
                onKeyDown: e => {
                  var t, n;
                  return (
                    (t = e),
                    (n = l),
                    void (
                      t.keyCode === m.KeyboardKeys.ENTER &&
                      t.keyCode === m.KeyboardKeys.SPACE &&
                      R(t, n)
                    )
                  );
                },
                onClick: e => {
                  R(e, t);
                },
                onMouseEnter: A,
                onMouseLeave: M,
                isActive: j,
              });
            },
          });
        };
    },
    624567: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("124824"),
        i = n("257407"),
        r = e => {
          let {
            isHovered: t,
            closePopout: n,
            onMouseEnter: r,
            onMouseLeave: u,
            onFocus: o,
            channel: d,
          } = e;
          return (
            l.useEffect(() => {
              !t && n();
            }, [n, t]),
            (0, a.jsx)(s.default, {
              children: (0, a.jsx)("div", {
                onMouseEnter: r,
                onMouseLeave: u,
                children: (0, a.jsx)(i.default, {
                  channel: d,
                  closePopout: n,
                  onFocus: o,
                }),
              }),
            })
          );
        };
    },
    103738: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("737960"),
        u = n("141681"),
        o = n("271938"),
        d = n("145131"),
        c = n("659500"),
        f = n("119106"),
        h = n("573540"),
        m = n("972155"),
        p = n("732961"),
        E = n("153984"),
        S = n("49111"),
        g = n("99795"),
        C = n("772313"),
        _ = (0, r.default)(e => {
          let {
            participants: t,
            filteredParticipants: n,
            selectedParticipant: s,
            participantsVersion: r,
            layout: _,
            onSelectParticipant: I,
            onContextMenuParticipant: T,
            onFullscreenParticipant: v,
            channel: x,
            hasConnectPermission: N,
            className: A,
            inCall: M,
            showParticipants: R = !0,
            paused: j = !1,
            width: L,
            height: y,
            idle: O,
            mode: P,
            popoutWindow: D,
            awaitingRemoteSessionInfo: b,
          } = e;
          l.useEffect(() => {
            c.ComponentDispatch.dispatch(S.ComponentActions.REMEASURE_TARGET);
          }, [L, y]);
          let U = l.useMemo(
            () =>
              n.filter(
                e =>
                  e.type !== g.ParticipantTypes.ACTIVITY ||
                  !e.participants.has(o.default.getId())
              ),
            [n, r]
          );
          if ((null == b ? void 0 : b.channelId) === x.id)
            return (0, a.jsx)(h.default, { height: y });
          if ((null == x ? void 0 : x.isGuildVocal()) && !M)
            return (0, a.jsx)(f.default, {
              channel: x,
              participants: t,
              hasConnectPermission: N,
            });
          if (P === S.ChannelModes.VOICE)
            return (0, a.jsx)(u.default, {
              guildId: x.guild_id,
              width: L,
              className: C.voiceCallWrapper,
              participants: t,
              onContextMenu: T,
            });
          if (((n = M ? n : t), null == s))
            return 0 === n.length
              ? (0, a.jsx)(E.default, {
                  className: i(C.videoGrid, C.hiddenParticipants),
                  channelId: x.id,
                  width: L,
                })
              : (0, a.jsx)(d.default, {
                  className: C.videoGridWrapper,
                  justify: d.default.Justify.CENTER,
                  align: d.default.Align.CENTER,
                  children: (0, a.jsx)(m.default, {
                    channel: x,
                    className: C.videoGrid,
                    participants: U,
                    totalNumberOfParticipants: t.length,
                    onClick: I,
                    onDoubleClick: v,
                    onContextMenu: T,
                    paused: j,
                    inCall: M,
                  }),
                });
          return (0, a.jsx)(p.default, {
            onFullscreenParticipant: v,
            onContextMenuParticipant: T,
            onSelectParticipant: I,
            selectedParticipant: s,
            filteredParticipants: U,
            participants: t,
            popoutWindow: D,
            className: A,
            idle: O,
            height: y,
            width: L,
            layout: _,
            inCall: M,
            channel: x,
            showParticipants: R,
          });
        });
    },
    842044: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getPipParticipants: function () {
            return i;
          },
        });
      var a = n("449008"),
        l = n("830251"),
        s = n("99795");
      function i(e, t, n) {
        return null == t || t.type === s.ParticipantTypes.ACTIVITY
          ? []
          : [
              t.type === s.ParticipantTypes.STREAM
                ? e.find(
                    e =>
                      e.type === s.ParticipantTypes.USER &&
                      e.id === (null == t ? void 0 : t.user.id) &&
                      e.id !== n &&
                      (0, l.default)(e)
                  )
                : null,
              t.type === s.ParticipantTypes.USER
                ? e.find(
                    e =>
                      e.type === s.ParticipantTypes.STREAM &&
                      e.user.id === (null == t ? void 0 : t.user.id) &&
                      null != e.streamId
                  )
                : null,
              t.id !== n
                ? e.find(
                    e =>
                      e.type === s.ParticipantTypes.USER &&
                      e.id === n &&
                      (0, l.default)(e)
                  )
                : null,
            ].filter(a.isNotNullish);
      }
    },
    119106: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return m;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("77078"),
        i = n("987317"),
        r = n("233322"),
        u = n("157186"),
        o = n("491519"),
        d = n("679243"),
        c = n("99795"),
        f = n("782340"),
        h = n("139559"),
        m = function (e) {
          var t, n;
          let { participants: m, channel: p, hasConnectPermission: E } = e,
            S = m.filter(c.isUserParticipant),
            g = (0, u.useShowMemberVerificationGate)(p.guild_id),
            C = l.useCallback(() => {
              g
                ? (0, r.openMemberVerificationModal)(p.guild_id, () =>
                    i.default.selectVoiceChannel(p.id)
                  )
                : i.default.selectVoiceChannel(p.id);
            }, [p.id, p.guild_id, g]),
            _ = 4 === S.length ? 2 : 3;
          return (0, a.jsxs)("div", {
            className: h.container,
            children: [
              (0, a.jsx)("div", {
                className: h.tiles,
                style: { maxWidth: 168 * _ },
                children: S.slice(0, 5).map(e =>
                  (0, a.jsx)(
                    d.default,
                    {
                      participant: e,
                      channel: p,
                      className: h.tile,
                      paused: !0,
                      inCall: !0,
                      noVideoRender: !0,
                      inPopout: !1,
                      width: 48,
                    },
                    e.id
                  )
                ),
              }),
              (0, a.jsx)(s.Heading, {
                className: h.channelName,
                variant: "heading-xxl/semibold",
                children: p.name,
              }),
              (0, a.jsx)("div", {
                className: h.participantsRow,
                children: (0, a.jsx)(s.Text, {
                  color: "header-secondary",
                  variant: "text-sm/normal",
                  children:
                    ((t = p),
                    0 === (n = S).length
                      ? f.default.Messages.CURRENTLY_IN_VOICE_EMPTY
                      : 1 === n.length
                        ? f.default.Messages.CURRENTLY_IN_VOICE_1.format({
                            a: (0, o.default)(t, n[0]),
                          })
                        : 2 === n.length
                          ? f.default.Messages.CURRENTLY_IN_VOICE_2.format({
                              a: (0, o.default)(t, n[0]),
                              b: (0, o.default)(t, n[1]),
                            })
                          : n.length > 2
                            ? f.default.Messages.CURRENTLY_IN_VOICE_2_N.format({
                                a: (0, o.default)(t, n[0]),
                                b: (0, o.default)(t, n[1]),
                                n: n.length - 2,
                              })
                            : void 0),
                }),
              }),
              (0, a.jsx)(s.Button, {
                disabled: !E,
                className: h.joinButton,
                color: E ? s.Button.Colors.GREEN : s.Button.Colors.PRIMARY,
                onClick: C,
                size: s.Button.Sizes.MEDIUM,
                children: E
                  ? f.default.Messages.JOIN_VOICE
                  : f.default.Messages.CHANNEL_LOCKED_SHORT,
              }),
            ],
          });
        };
    },
    573540: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("414456"),
        s = n.n(l),
        i = n("446674"),
        r = n("77078"),
        u = n("206230"),
        o = n("700507"),
        d = n("491605"),
        c = n("782340"),
        f = n("701206");
      function h(e) {
        let { height: t } = e,
          l = (0, i.useStateFromStores)(
            [u.default],
            () => u.default.useReducedMotion
          );
        return (0, a.jsxs)("div", {
          className: f.root,
          children: [
            (0, a.jsx)(d.default, {
              importData: () =>
                n
                  .el("210565")
                  .then(n.t.bind(n, "210565", 19))
                  .then(e => {
                    let { default: t } = e;
                    return t;
                  }),
              shouldAnimate: !l,
              className: s(f.art, { [f.hidden]: t <= 280 }),
            }),
            (0, a.jsx)(r.Heading, {
              className: f.header,
              variant: "heading-md/bold",
              children: c.default.Messages.PLAYSTATION_TRANSFERRING,
            }),
            (0, a.jsx)(r.Text, {
              variant: "text-md/normal",
              color: "header-secondary",
              children: c.default.Messages.CONSOLE_TRANSFERRING_SUBTITLE.format(
                { onCancel: o.disconnectRemote }
              ),
            }),
          ],
        });
      }
    },
    972155: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return x;
          },
        }),
        n("424973");
      var a = n("37983"),
        l = n("884691"),
        s = n("759843"),
        i = n("446674"),
        r = n("151426"),
        u = n("244201"),
        o = n("191225"),
        d = n("943349"),
        c = n("428958"),
        f = n("191145"),
        h = n("393171"),
        m = n("242757"),
        p = n("305961"),
        E = n("957255"),
        S = n("466079"),
        g = n("444657"),
        C = n("679243"),
        _ = n("832897"),
        I = n("308419"),
        T = n("49111"),
        v = n("842030");
      function x(e) {
        let {
            participants: t,
            onClick: n,
            onDoubleClick: x,
            onContextMenu: N,
            channel: A,
            className: M,
            inCall: R,
            totalNumberOfParticipants: j,
            paused: L = !1,
          } = e,
          y = (0, u.useAppContext)(),
          O = y === T.AppContext.POPOUT,
          P = (0, i.useStateFromStores)(
            [p.default],
            () => p.default.getGuild(A.guild_id),
            [A.guild_id]
          ),
          { dismissedActivityEntryPointTileChannel: D } = (0,
          _.useChannelCallVideoGridStore)(),
          b = (0, i.useStateFromStores)(
            [f.default],
            () => f.default.getUserParticipantCount(A.id),
            [A]
          ),
          U = l.useCallback(() => {
            _.useChannelCallVideoGridStore.setState({
              dismissedActivityEntryPointTileChannel: A.id,
            });
          }, [A.id]);
        l.useEffect(() => {
          null != D &&
            A.id !== D &&
            _.useChannelCallVideoGridStore.setState({
              dismissedActivityEntryPointTileChannel: null,
            });
        }, [A.id, D]);
        let w = (0, i.useStateFromStores)(
            [E.default],
            () => A.isPrivate() || (0, m.canViewInviteModal)(E.default, P, A),
            [P, A]
          ),
          F = (null == P ? void 0 : P.afkChannelId) === A.id,
          V = A.userLimit <= 0 || A.userLimit > 1,
          k = (0, i.useStateFromStores)(
            [o.default],
            () => o.default.getEmbeddedActivitiesForChannel(A.id).length <= 0
          ),
          B = (0, h.useIsDismissibleContentTypeDismissed)(
            r.DismissibleContent.VC_TILE_ACTIVITIES_ENTRY_POINT
          ),
          G = (0, d.useEmbeddedActivityLaunchability)(A.id),
          H = G !== d.EmbeddedActivityLaunchability.CAN_LAUNCH,
          W = null != D && D === A.id,
          Y = t.map(
            e => t =>
              (0, a.jsx)(
                C.default,
                {
                  participant: e,
                  channel: A,
                  className: v.tile,
                  paused: L,
                  onClick: n,
                  onDoubleClick: x,
                  onContextMenu: N,
                  inCall: R,
                  width: t,
                  inPopout: O,
                },
                e.id
              )
          );
        (0, c.default)(
          {
            type: s.ImpressionTypes.VIEW,
            name: s.ImpressionNames.CHANNEL_CALL_VIDEO_GRID_VIEW,
            properties: {
              total_participants: j,
              can_invite: w,
              is_afk_channel: F,
              channel_user_limit: A.userLimit,
            },
          },
          { trackOnInitialLoad: !0 },
          []
        ),
          null != P &&
            !F &&
            (!(b >= 2) || !k || H || B || W
              ? V &&
                1 === b &&
                w &&
                (k && !H
                  ? Y.push(e =>
                      (0, a.jsx)(g.ActivityEntryPointTile, {
                        channel: A,
                        guild: P,
                        width: e,
                        inPopout: O,
                        handleClose: U,
                        userParticipantCount: b,
                      })
                    )
                  : Y.push(e =>
                      (0, a.jsx)(I.default, {
                        width: e,
                        channel: A,
                        guild: P,
                        inPopout: O,
                      })
                    ))
              : Y.push(e =>
                  (0, a.jsx)(g.ActivityEntryPointTile, {
                    channel: A,
                    guild: P,
                    width: e,
                    inPopout: O,
                    handleClose: U,
                    userParticipantCount: b,
                  })
                ));
        let z = l.useCallback(
          e => {
            var n, a;
            return null !==
              (a = null === (n = t[e]) || void 0 === n ? void 0 : n.id) &&
              void 0 !== a
              ? a
              : "empty-tile";
          },
          [t]
        );
        return (0, a.jsx)(S.default, {
          className: M,
          keyExtractor: z,
          paddingTop: 64,
          paddingBottom: 64,
          children: Y,
        });
      }
    },
    832897: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useChannelCallVideoGridStore: function () {
            return l;
          },
        });
      var a = n("308503");
      let l = (0, a.default)(() => ({
        dismissedActivityEntryPointTileChannel: null,
      }));
    },
    308419: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("77078"),
        s = n("784981"),
        i = n("607391"),
        r = n("49111"),
        u = n("782340"),
        o = n("194868"),
        d = n("425643");
      function c(e) {
        let { channel: t, guild: c, width: f, inPopout: h } = e;
        return (0, a.jsx)(s.default, {
          className: o.root,
          children: (0, a.jsx)(i.default, {
            artURL: d,
            size: (0, i.getSizeForWidth)(f),
            header: u.default.Messages.STREAM_SINGLE_PERSON_BODY,
            onCTAClick: () =>
              (0, l.openModalLazy)(
                async () => {
                  let { default: e } = await n
                    .el("310688")
                    .then(n.bind(n, "310688"));
                  return n =>
                    (0, a.jsx)(e, {
                      ...n,
                      guild: c,
                      channel: t,
                      source: r.InstantInviteSources.CHANNEL_CALL,
                    });
                },
                {
                  contextKey: h
                    ? l.POPOUT_MODAL_CONTEXT
                    : l.DEFAULT_MODAL_CONTEXT,
                }
              ),
            callToAction: u.default.Messages.INSTANT_INVITE,
          }),
        });
      }
    },
    732961: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return v;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("907002"),
        u = n("84339"),
        o = n("109489"),
        d = n("271938"),
        c = n("42887"),
        f = n("659500"),
        h = n("679243"),
        m = n("876715"),
        p = n("842044"),
        E = n("329515"),
        S = n("49111"),
        g = n("99795"),
        C = n("772313"),
        _ = n("233636");
      let I = 16 / 9,
        T = 8 + E.PARTICIPANTS_HEIGHT;
      function v(e) {
        let t,
          {
            onSelectParticipant: n,
            onContextMenuParticipant: s,
            onFullscreenParticipant: v,
            participants: x,
            filteredParticipants: N,
            popoutWindow: A,
            inCall: M,
            channel: R,
            selectedParticipant: j,
            showParticipants: L = !0,
            className: y,
            paused: O,
            width: P,
            height: D,
            layout: b,
            idle: U,
          } = e,
          w = null != A,
          F = c.default.getVideoComponent(),
          V = d.default.getId(),
          [k, B] = l.useState(null),
          [G, H] = l.useState(!0),
          [W, Y] = l.useState(!1),
          z = j.type === g.ParticipantTypes.ACTIVITY,
          K = !z && null != j.streamId,
          Z =
            K && null != k && k.width > 0 && k.height > 0
              ? k.width / k.height
              : I,
          Q = D <= 2 * T + 144,
          X = L && !Q,
          q = (0, u.default)(X),
          J = 0;
        (z || X) && (J += 72), z && !X && (J += 48), X && (J += 0.5 * T + 8);
        let $ = D - 2 * J,
          ee = $ * Z,
          et = Math.floor(Math.min(P, ee) / Z),
          en = D > P / Z + 72 + T + 8,
          ea = !X && !z;
        (t = ea ? 40 + Math.max(0, 72 - (D - et) / 2) : X ? -16 : -8),
          l.useEffect(() => {
            let e = setTimeout(() => {
              H(!1);
            }, 250);
            return () => {
              clearTimeout(e);
            };
          }, []);
        let el = (0, r.useSpring)({
            value: X ? 1 : 0,
            delay: en || !X ? 0 : 100,
            config: { ...r.config.stiff, clamp: !0 },
            onStart: () => Y(!0),
            onChange: () =>
              f.ComponentDispatch.dispatch(S.ComponentActions.REMEASURE_TARGET),
            onRest: () => {
              Y(!1),
                f.ComponentDispatch.dispatch(
                  S.ComponentActions.REMEASURE_TARGET
                );
            },
          }),
          es = (0, r.useSpring)({
            value: X ? 1 : 0,
            config: { ...r.config.stiff, clamp: !0 },
          }),
          ei = (0, r.useSpring)({
            value: ee,
            config: { ...r.config.stiff, clamp: !0 },
            immediate: q === X && es.value.idle,
          }),
          er = (0, r.useSpring)({
            value: t,
            config: { ...r.config.stiff, clamp: !0 },
          }),
          eu = (0, r.useTransition)(j, {
            keys: e => (null == e ? void 0 : e.id),
            config: { ...r.config.stiff, clamp: !0 },
            initial: null,
            from: { opacity: 0 },
            enter: { opacity: 1 },
            leave: { opacity: 0 },
          }),
          eo = l.useCallback(e => {
            B(e), H(!1);
          }, []),
          ed = X || O ? [] : (0, p.getPipParticipants)(x, j, V),
          { visibleParticipants: ec, participantTileWidth: ef } = (0,
          E.useVisibleParticipants)(P, N);
        return (0, a.jsxs)("div", {
          className: i(_.root, C.flexCenter, y),
          children: [
            (0, a.jsxs)("div", {
              className: _.tileWrapper,
              style: { opacity: K && G ? 0 : 1 },
              children: [
                (0, a.jsxs)(r.animated.div, {
                  className: _.videoFrame,
                  style: { top: es.value.to(e => (-e * T) / 2) },
                  children: [
                    (0, a.jsx)(r.animated.div, {
                      style: { width: ei.value },
                      className: _.videoWrapper,
                      children: (0, a.jsx)("div", {
                        className: i(C.videoSizer),
                        style: { aspectRatio: Z },
                        children: eu((e, t, l) => {
                          let { key: i } = l;
                          return null != t
                            ? (0, a.jsx)(
                                r.animated.div,
                                {
                                  className: C.videoWrapperAnimated,
                                  style: e,
                                  children: (0, a.jsx)(h.default, {
                                    focused: !0,
                                    noBorder: ee >= P || $ >= D,
                                    channel: R,
                                    className: C.focusedVideo,
                                    videoComponent: F,
                                    paused: O,
                                    width: P,
                                    participant: t,
                                    onClick: n,
                                    onDoubleClick: v,
                                    onContextMenu: s,
                                    onVideoResize: eo,
                                    inCall: M,
                                    inPopout: w,
                                  }),
                                },
                                i
                              )
                            : null;
                        }),
                      }),
                    }),
                    Q ||
                    b === S.ChannelLayouts.MINIMUM ||
                    b === S.ChannelLayouts.NORMAL
                      ? null
                      : (0, a.jsx)(r.animated.div, {
                          className: i(_.actionRow, { [_.idle]: U }),
                          style: { bottom: er.value },
                          children: (0, a.jsx)(o.default, {
                            channelId: R.id,
                            isParticipantsOpen: L,
                            isVertical: !0,
                          }),
                        }),
                  ],
                }),
                (0, a.jsx)(r.animated.div, {
                  className: _.participantsWrapperAnimated,
                  style: {
                    translateY: el.value.to(e => (e * T) / 2),
                    opacity: el.value,
                    visibility: el.value.to(e =>
                      0 === e ? "hidden" : "visible"
                    ),
                  },
                  children: (0, a.jsx)(E.default, {
                    channel: R,
                    onClick: n,
                    onContextMenu: s,
                    onDoubleClick: v,
                    participants: ec,
                    participantTileWidth: ef,
                    selectedParticipantId: j.id,
                    inCall: M,
                    paused: O || W || !L,
                    popoutWindow: A,
                  }),
                }),
              ],
            }),
            ed.length > 0
              ? (0, a.jsx)(m.default, {
                  onContextMenuParticipant: s,
                  width: P,
                  height: D,
                  channel: R,
                  participants: ed,
                })
              : null,
          ],
        });
      }
    },
    329515: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          PARTICIPANTS_HEIGHT: function () {
            return h;
          },
          useVisibleParticipants: function () {
            return S;
          },
          default: function () {
            return g;
          },
        }),
        n("222007"),
        n("424973");
      var a = n("37983"),
        l = n("884691"),
        s = n("917351"),
        i = n("246846"),
        r = n("271938"),
        u = n("718517"),
        o = n("449008"),
        d = n("679243"),
        c = n("99795"),
        f = n("11417");
      let h = 112,
        m = (16 / 9) * h + 8,
        p = 10 * u.default.Millis.SECOND;
      function E(e) {
        var t;
        let n = r.default.getId();
        return (
          e.type === c.ParticipantTypes.USER &&
          e.user.id === n &&
          (null === (t = e.voiceState) || void 0 === t ? void 0 : t.selfVideo)
        );
      }
      function S(e, t) {
        let [n, a] = l.useState(Date.now());
        l.useEffect(() => {
          let e = setTimeout(() => {
            a(Date.now());
          }, p);
          return () => {
            clearTimeout(e);
          };
        }, [t]);
        let r = l.useRef({}),
          { visibleParticipants: u, participantTileWidth: d } =
            l.useMemo(() => {
              let n = Date.now(),
                a = (0, s.sortBy)(t, e =>
                  (function (e) {
                    let t =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : Date.now();
                    switch (e.type) {
                      case c.ParticipantTypes.ACTIVITY:
                        return "\x00".concat(e.sortKey);
                      case c.ParticipantTypes.HIDDEN_STREAM:
                      case c.ParticipantTypes.STREAM:
                        return "\x01".concat(
                          (0, i.default)(e.userNick, e.user)
                        );
                      case c.ParticipantTypes.USER:
                        var n;
                        let a = "\x05";
                        return (
                          e.speaking
                            ? (a = "\x02")
                            : t - e.lastSpoke < p
                              ? (a = "\x03")
                              : (null === (n = e.voiceState) || void 0 === n
                                  ? void 0
                                  : n.selfVideo) && (a = "\x04"),
                          ""
                            .concat(a)
                            .concat(
                              (function (e) {
                                let t = String(864e13).length;
                                return String(864e13 - e).padStart(t, "0");
                              })(e.lastSpoke)
                            )
                            .concat((0, i.default)(e.userNick, e.user))
                        );
                    }
                  })(e, n)
                ),
                [l, u] = (0, s.partition)(a, c.isStreamParticipant),
                d = u.findIndex(E),
                f = null;
              -1 !== d && ((f = u[d]), u.splice(d, 1));
              let h = null != f ? e - m - 8 : e,
                S = Math.max(
                  0,
                  Math.min(Math.floor((h - 8) / 132), 12, t.length)
                ),
                g = Math.min((h - 8) / S - 8, m),
                C = Math.max(0, S - l.length),
                _ = l.slice(0, S),
                I = u.slice(0, C),
                T = Array(C);
              if (C > 0) {
                let e = [];
                for (let t of I) {
                  let n = r.current[t.id];
                  null != n && n < C ? (T[n] = t) : e.push(t);
                }
                for (let t = 0; t < T.length; t++) {
                  if (null != T[t]) continue;
                  let n = e.shift();
                  if (null == n) break;
                  T[t] = n;
                }
              }
              let v = T.filter(o.isNotNullish),
                x = (0, s.keyBy)((0, s.range)(v.length), e => v[e].id);
              r.current = x;
              let N = [..._, ...v];
              return (
                null != f && N.push(f),
                { visibleParticipants: N, participantTileWidth: g }
              );
            }, [e, t, n]);
        return { visibleParticipants: u, participantTileWidth: d };
      }
      function g(e) {
        let {
            participants: t,
            participantTileWidth: n,
            selectedParticipantId: l,
            onDoubleClick: s,
            onContextMenu: i,
            onClick: r,
            channel: u,
            inCall: o,
            popoutWindow: c,
            paused: h = !1,
          } = e,
          p = null != c;
        return (0, a.jsx)("div", {
          className: f.root,
          children: t.map(e => {
            if (null == e) return null;
            let t = E(e);
            return (0, a.jsx)(
              "div",
              {
                className: f.tileSizer,
                style: t ? { flexShrink: 0 } : void 0,
                children: (0, a.jsx)(d.default, {
                  participant: e,
                  selected: l === e.id,
                  channel: u,
                  className: f.tile,
                  fit: d.CallTileFit.COVER,
                  onClick: r,
                  onDoubleClick: s,
                  onContextMenu: i,
                  width: t ? m : n,
                  inCall: o,
                  paused: h,
                  inPopout: p,
                }),
              },
              e.id
            );
          }),
        });
      }
    },
    486030: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return S;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("414456"),
        s = n.n(l),
        i = n("627445"),
        r = n.n(i),
        u = n("446674"),
        o = n("77078"),
        d = n("398604"),
        c = n("331759"),
        f = n("305961"),
        h = n("957255"),
        m = n("49111"),
        p = n("782340"),
        E = n("363768");
      function S(e) {
        var t, l;
        let {
            stream: i,
            applicationId: S,
            channel: g,
            exitFullScreen: C,
            appContext: _,
            analyticsLocation: I,
            className: T,
            ...v
          } = e,
          x = null == g ? void 0 : g.getGuildId(),
          N = null == g ? void 0 : g.id,
          A = (0, u.useStateFromStores)(
            [f.default],
            () => (null != x ? f.default.getGuild(x) : null),
            [x]
          ),
          M = (0, u.useStateFromStores)(
            [d.default],
            () => d.default.getActiveEventByChannel(N),
            [N]
          );
        if (
          ((t = A),
          (l = g),
          !(
            null != t &&
            null != l &&
            h.default.can(m.Permissions.CREATE_INSTANT_INVITE, l)
          ))
        )
          return null;
        let R = p.default.Messages.INSTANT_INVITE;
        return (
          null != i
            ? (R = p.default.Messages.INVITE_STREAM_HEADER)
            : null != S &&
              (R = p.default.Messages.EMBEDDED_ACTIVITIES_INVITE_TO_ACTIVITY),
          (0, a.jsxs)(a.Fragment, {
            children: [
              (0, a.jsx)(o.Button, {
                size: o.Button.Sizes.SMALL,
                color: E.buttonColor,
                onClick: () => {
                  r(null != A, "guild cannot be null"),
                    r(null != g, "channel cannot be null"),
                    !(function (e) {
                      let {
                        guild: t,
                        channel: l,
                        streamUserId: s,
                        applicationId: i,
                        appContext: r,
                        exitFullScreen: u,
                        analyticsLocation: d,
                        guildScheduledEvent: c,
                      } = e;
                      null == u || u(),
                        (0, o.openModalLazy)(
                          async () => {
                            let { default: e } = await n
                              .el("310688")
                              .then(n.bind(n, "310688"));
                            return n =>
                              (0, a.jsx)(e, {
                                ...n,
                                guild: t,
                                channel: l,
                                streamUserId: s,
                                applicationId: i,
                                analyticsLocation: d,
                                source: l.isGuildStageVoice()
                                  ? m.InstantInviteSources.STAGE_CHANNEL
                                  : m.InstantInviteSources.STREAM_INVITE,
                                guildScheduledEvent: c,
                              });
                          },
                          {
                            modalKey: "stream-invite-modal",
                            contextKey:
                              r === m.AppContext.POPOUT
                                ? o.POPOUT_MODAL_CONTEXT
                                : o.DEFAULT_MODAL_CONTEXT,
                          }
                        );
                    })({
                      guild: A,
                      channel: g,
                      streamUserId: null == i ? void 0 : i.ownerId,
                      applicationId: S,
                      appContext: _,
                      exitFullScreen: C,
                      analyticsLocation: I,
                      guildScheduledEvent: M,
                    });
                },
                className: s(T, E.textButton),
                ...v,
                children: R,
              }),
              (0, a.jsx)(c.default, {
                channel: g,
                stream: i,
                appContext: _,
                className: s(T, E.iconButton),
                exitFullScreen: C,
                analyticsLocation: I,
                guildScheduledEvent: M,
              }),
            ],
          })
        );
      }
    },
    153984: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("255397"),
        s = n("607391"),
        i = n("782340");
      let r = n("328989");
      function u(e) {
        let { width: t, className: n, channelId: u, noArt: o = !1 } = e;
        return (0, a.jsx)(s.default, {
          artURL: r,
          noArt: o,
          size: (0, s.getSizeForWidth)(t),
          className: n,
          callToAction: i.default.Messages.STREAM_SHOW_ALL_PARTICIPANTS,
          header: i.default.Messages.STREAM_PARTICIPANTS_HIDDEN.format(),
          onCTAClick: () => l.default.toggleVoiceParticipantsHidden(u, !1),
        });
      }
    },
    466211: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return g;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("907002"),
        i = n("446674"),
        r = n("819855"),
        u = n("386045"),
        o = n("803725"),
        d = n("728658"),
        c = n("374014"),
        f = n("983782"),
        h = n("62931");
      let m = { visibility: "hidden" },
        p = { precision: 1e-4, duration: 300 },
        E = { tension: 150, friction: 20, precision: 1e-4, bounce: 0 },
        S = { duration: 1e3 };
      function g(e) {
        let { stream: t, inPopout: n } = e,
          { reducedMotion: g } = l.useContext(
            r.AccessibilityPreferencesContext
          ),
          C = (0, l.useRef)(null),
          _ = d.useClipsButtonStore.getState().clipsButtonRef,
          I = (0, c.encodeStreamKey)(t),
          T = (0, i.useStateFromStores)([u.default], () =>
            u.default.getActiveAnimation()
          ),
          v = (0, i.useStateFromStoresArray)([u.default], () =>
            u.default.getStreamClipAnimations(I)
          ),
          x = (0, l.useRef)();
        l.useEffect(
          () => () => {
            (0, o.dismissSaveClipAnimation)(I);
          },
          [I]
        );
        let N = () => {
            var e;
            let t =
              null === (e = C.current) || void 0 === e
                ? void 0
                : e.getBoundingClientRect();
            return null == t || n
              ? m
              : { width: t.width, height: t.height, top: t.top, left: t.left };
          },
          A = e => {
            let t = null == _ ? void 0 : _.getBoundingClientRect();
            if (((x.current = t), e.timestamp !== T || null == t || n))
              return m;
            let { top: a, left: l } = t;
            return { top: a + 36, left: l - 216, height: 151, width: 268 };
          },
          M = (0, l.useRef)(null),
          R = (0, s.useTransition)(v, {
            keys: e => e.timestamp,
            ref: M,
            from: { opacity: 0.2 },
            enter: { opacity: 0 },
            config: p,
          }),
          j = (0, l.useRef)(null),
          L = (0, s.useTransition)(v, {
            ref: j,
            keys: e => e.timestamp,
            from: e => ({
              position: "fixed",
              visibility: "hidden",
              opacity: 1,
              ...(g.enabled ? A(e) : N()),
            }),
            enter: e => [{ opacity: 1, visibility: "visible", ...A(e) }],
            leave: {
              opacity: 0,
              ...(!g.enabled && {
                height: 0,
                width: 0,
                ...(() => {
                  if (null != x.current)
                    return {
                      top: x.current.top + 12,
                      left: x.current.left + 12,
                    };
                })(),
              }),
            },
            config: g.enabled ? S : E,
            onRest: (e, t) => {
              null != t.item &&
                null != v.find(e => e.timestamp === t.item.timestamp) &&
                (0, o.dismissSaveClipAnimation)(I, t.item.timestamp);
            },
          });
        return (
          (0, s.useChain)([M, j], [0, 0.1], 3e3),
          (0, a.jsxs)(a.Fragment, {
            children: [
              (0, a.jsx)("div", { className: h.hidden, ref: C }),
              R(
                (e, t) =>
                  null != t &&
                  (0, a.jsx)(s.animated.div, {
                    className: h.whiteFlash,
                    style: e,
                  })
              ),
              (0, a.jsx)(f.default, {
                children: (0, a.jsx)("div", {
                  className: h.hidden,
                  children: L(
                    (e, t, n, l) =>
                      (null == t ? void 0 : t.thumbnail) != null &&
                      (0, a.jsx)(s.animated.img, {
                        src: t.thumbnail,
                        className: h.movingImage,
                        style: e,
                      })
                  ),
                }),
              }),
            ],
          })
        );
      }
    },
    810640: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("414456"),
        s = n.n(l),
        i = n("77078"),
        r = n("673527"),
        u = n("821391"),
        o = n("782340"),
        d = n("532351");
      function c(e) {
        let { stream: t, isSmall: n, selected: l, isSelfStream: c } = e;
        return (0, a.jsxs)(a.Fragment, {
          children: [
            (0, a.jsx)(r.default, {
              className: s(d.absoluteFill, d.streamPreviewOpacity),
              stream: t,
              noText: !0,
            }),
            !l &&
              (0, a.jsxs)("div", {
                className: s(d.content, d.streamUnavailable, { [d.small]: n }),
                children: [
                  (0, a.jsx)(i.Text, {
                    className: d.streamUnavailableText,
                    color: "always-white",
                    variant: n ? "text-sm/semibold" : "text-md/semibold",
                    children: c
                      ? o.default.Messages.CONSOLE_STREAMING
                      : o.default.Messages.CONSOLE_STREAM_UNAVAILABLE,
                  }),
                  (0, a.jsx)(i.TooltipContainer, {
                    text: c
                      ? o.default.Messages.CONSOLE_STREAMING_TOOLTIP
                      : o.default.Messages.CONSOLE_STREAM_UNAVAILABLE_TOOLTIP,
                    className: d.darkCircle,
                    children: (0, a.jsx)("div", {
                      children: (0, a.jsx)(u.default, {
                        className: d.stopStreamIcon,
                        foreground: d.stopStreamForeground,
                      }),
                    }),
                  }),
                ],
              }),
          ],
        });
      }
    },
    729185: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          StreamTileIndicators: function () {
            return G;
          },
          default: function () {
            return H;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("446674"),
        u = n("77078"),
        o = n("255397"),
        d = n("990766"),
        c = n("103723"),
        f = n("605250"),
        h = n("889014"),
        m = n("430951"),
        p = n("673527"),
        E = n("336804"),
        S = n("952221"),
        g = n("600123"),
        C = n("373469"),
        _ = n("271938"),
        I = n("42203"),
        T = n("42887"),
        v = n("471671"),
        x = n("512264"),
        N = n("30672"),
        A = n("980423"),
        M = n("100844"),
        R = n("607391"),
        j = n("466211"),
        L = n("683245"),
        y = n("772442"),
        O = n("211019"),
        P = n("810640"),
        D = n("170643"),
        b = n("144565"),
        U = n("49111"),
        w = n("99795"),
        F = n("353927"),
        V = n("782340"),
        k = n("532351");
      let B = new f.default("StreamTile");
      function G(e) {
        let { participant: t, selected: n, focused: l, idle: s, width: i } = e,
          u = (0, r.useStateFromStores)([C.default], () =>
            C.default.getActiveStreamForUser(t.user.id, t.stream.guildId)
          ),
          o = (0, b.isVideoCompact)(i);
        return (0, a.jsxs)(a.Fragment, {
          children: [
            n ? null : (0, a.jsx)(D.default, { participant: t }),
            l ||
            null == u ||
            u.state === U.ApplicationStreamStates.ENDED ||
            u.state === U.ApplicationStreamStates.FAILED
              ? null
              : (0, a.jsx)(E.default, {
                  size: A.default.Sizes.SMALL,
                  className: k.liveIndicator,
                  participant: t,
                  showQuality: !o && !s,
                  isUpsellEnabled: !1,
                }),
          ],
        });
      }
      function H(e) {
        let {
            participant: t,
            selected: n,
            onVideoResize: s,
            paused: f,
            fit: E,
            inPopout: A,
            width: D,
            focused: b,
          } = e,
          G = T.default.getVideoComponent(),
          H = (0, r.useStateFromStores)([_.default], () => _.default.getId()),
          W = (0, h.default)(),
          { stream: Y, user: z, streamId: K } = t,
          Z = (0, r.useStateFromStores)([I.default], () =>
            I.default.getChannel(Y.channelId)
          ),
          Q = (0, r.useStateFromStores)(
            [C.default],
            () => C.default.getActiveStreamForUser(z.id, Y.guildId),
            [z.id, Y.guildId]
          ),
          X = (0, r.useStateFromStores)(
            [C.default],
            () => C.default.getAllActiveStreams().length > 0
          ),
          q = (0, r.useStateFromStores)([v.default], () =>
            v.default.isFocused()
          ),
          J = (null == Q ? void 0 : Q.ownerId) === H,
          $ = J && !q && !A,
          ee = null != Q ? (0, m.default)(Q, z, z.id === H, $) : null,
          et = D < 195;
        if (
          (l.useEffect(() => {
            !X &&
              (null == Z ? void 0 : Z.isGuildStageVoice()) &&
              !J &&
              ((0, d.watchStream)(Y),
              o.default.updateStageStreamSize(Y.channelId, !1));
          }, []),
          l.useEffect(() => {
            B.info(
              "Stream Tile State - activeStream: "
                .concat(null != Q, " | selected: ")
                .concat(n, " | Video: ")
                .concat(null != G, " | MediaEngine: ")
                .concat(T.default.supports(F.Features.VIDEO))
            );
          }, [G, Q, n]),
          W)
        )
          return (0, a.jsx)(P.default, {
            stream: t.stream,
            isSmall: et,
            selected: n,
            isSelfStream: z.id === H,
          });
        if ((null == Q ? void 0 : Q.state) === U.ApplicationStreamStates.ENDED)
          return (0, a.jsx)(L.default, { selected: n, stream: Q, width: D });
        if ((null == Q ? void 0 : Q.state) === U.ApplicationStreamStates.FAILED)
          return (0, a.jsx)(y.default, { selected: n, stream: Q, width: D });
        else if (t.type === w.ParticipantTypes.HIDDEN_STREAM)
          return (0, a.jsx)(O.default, {
            selected: n,
            participant: t,
            width: D,
          });
        else if (
          null != Q &&
          !n &&
          null != G &&
          T.default.supports(F.Features.VIDEO)
        )
          return (0, a.jsxs)(a.Fragment, {
            children: [
              null != Z
                ? (0, a.jsx)(S.default, {
                    focused: b,
                    channelId: Z.id,
                    guildId: Z.guild_id,
                    streamerId: z.id,
                    hasScreenMessage: null != ee,
                    stream: Y,
                  })
                : null,
              (0, a.jsx)(
                x.default,
                {
                  onResize: s,
                  wrapperClassName: k.videoWrapper,
                  className: k.content,
                  streamId: K,
                  videoComponent: G,
                  fit: E,
                  paused: f || $,
                  videoSpinnerContext: J
                    ? c.VideoSpinnerContext.SELF_STREAM
                    : c.VideoSpinnerContext.REMOTE_STREAM,
                  userId: z.id,
                },
                K
              ),
              null != ee
                ? (0, a.jsx)(g.default, {
                    size: (0, R.getSizeForWidth)(D),
                    ...ee,
                  })
                : null,
              (0, a.jsx)(j.default, { stream: Y, inPopout: A }),
            ],
          });
        else
          return (0, a.jsxs)("div", {
            className: i(k.content, k.streamPreview, { [k.small]: et }),
            children: [
              (0, a.jsx)(p.default, {
                noText: !0,
                className: i(k.absoluteFill, {
                  [k.streamPreviewOpacity]: null == Q,
                }),
                stream: t.stream,
              }),
              n
                ? null
                : (0, a.jsxs)(a.Fragment, {
                    children: [
                      (0, a.jsx)(M.CallTileCTA, {
                        isSmall: et,
                        children: (0, a.jsx)(u.Text, {
                          variant: et ? "text-sm/semibold" : "text-md/semibold",
                          color: "none",
                          children:
                            D < 175
                              ? V.default.Messages.WATCH
                              : V.default.Messages.WATCH_STREAM,
                        }),
                      }),
                      X
                        ? (0, a.jsx)(M.CallTileCTA, {
                            className: k.addCTA,
                            tooltip:
                              V.default.Messages.STREAM_WATCH_MULTIPLE_TOOLTIP,
                            onClick: e => {
                              e.stopPropagation(),
                                (0, d.watchStream)(Y, { forceMultiple: !0 });
                            },
                            isSmall: et,
                            children: (0, a.jsx)(N.default, {
                              className: k.addStreamIcon,
                            }),
                          })
                        : null,
                    ],
                  }),
            ],
          });
      }
    },
    170643: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("734488"),
        s = n("787912"),
        i = n("368694");
      function r(e) {
        let { participant: t, className: n } = e,
          r = (0, l.default)(t),
          u = (function (e) {
            if (null == e) return null;
            let t = i.default.isDeveloper;
            return t
              ? "".concat(e.message, " (").concat(e.errorType, ")")
              : e.message;
          })(r);
        return null != u
          ? (0, a.jsx)(s.default, { className: n, errorMessage: u })
          : null;
      }
    },
    715764: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return j;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("446674"),
        u = n("77078"),
        o = n("255397"),
        d = n("103723"),
        c = n("191145"),
        f = n("161306"),
        h = n("292687"),
        m = n("106435"),
        p = n("271938"),
        E = n("26989"),
        S = n("42887"),
        g = n("471671"),
        C = n("754775"),
        _ = n("512264"),
        I = n("387111"),
        T = n("830251"),
        v = n("49111"),
        x = n("353927"),
        N = n("782340"),
        A = n("532351");
      let M = u.AvatarSizes.SIZE_80,
        R = u.AvatarSizes.SIZE_40;
      function j(e) {
        let {
            participant: t,
            channel: n,
            inCall: s,
            width: u,
            paused: j,
            selected: L,
            fit: y,
            onVideoResize: O,
            blocked: P,
            noVideoRender: D = !1,
            pulseSpeakingIndicator: b = !1,
          } = e,
          U = S.default.getVideoComponent(),
          w = (0, r.useStateFromStores)([p.default], () => p.default.getId()),
          { user: F, streamId: V, speaking: k } = t,
          B = F.id === w,
          G = (0, T.default)(t),
          H = (0, r.useStateFromStores)([g.default], () =>
            g.default.isFocused()
          ),
          W = (0, r.useStateFromStores)([h.default], () =>
            h.default.getWindowFocused(v.PopoutWindowKeys.CHANNEL_CALL_POPOUT)
          ),
          Y = (0, r.useStateFromStores)(
            [S.default],
            () =>
              null != F.id &&
              S.default.isLocalVideoDisabled(F.id, (0, f.default)(t.type)),
            [F.id, t.type]
          ),
          z = (0, r.useStateFromStores)([E.default], () =>
            E.default.isGuestOrLurker(n.guild_id, F.id)
          ),
          K =
            I.default.getName(n.getGuildId(), n.id, F) +
            (z ? " ".concat(N.default.Messages.GUEST_NAME_SUFFIX) : ""),
          Z = k && (W || H),
          Q = u < 124 ? R : M,
          { avatarSrc: X, avatarDecorationSrc: q } = (0, m.default)({
            user: F,
            guildId: n.guild_id,
            size: Q,
            animateOnHover: !Z,
          }),
          J = (0, r.useStateFromStores)([c.default], () =>
            c.default.getSelectedParticipant(n.id)
          );
        return (l.useEffect(() => {
          n.isGuildStageVoice() &&
            !G &&
            (null == J ? void 0 : J.id) === F.id &&
            o.default.selectParticipant(n.id, null);
        }, [G]),
        s &&
          !Y &&
          !D &&
          G &&
          !L &&
          null != U &&
          S.default.supports(x.Features.VIDEO))
          ? (0, a.jsx)(
              _.default,
              {
                onResize: O,
                wrapperClassName: A.videoWrapper,
                className: A.content,
                mirror: B,
                streamId: V,
                videoComponent: U,
                fit: y,
                paused: j,
                videoSpinnerContext:
                  F.id === w
                    ? d.VideoSpinnerContext.SELF_VIDEO
                    : d.VideoSpinnerContext.REMOTE_VIDEO,
                userId: F.id,
              },
              V
            )
          : (0, a.jsx)("div", {
              className: i(A.content, { [A.blockedAvatar]: P }),
              children: (0, a.jsx)(C.default, {
                "aria-label": K,
                src: X,
                avatarDecoration: q,
                backgroundSrc: F.getAvatarURL(n.guild_id, 80),
                size: Q,
                pulseSpeakingIndicator: b,
                speaking: k,
                userId: F.id,
              }),
            });
      }
    },
    144565: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          isVideoCompact: function () {
            return a;
          },
          isNamesCompact: function () {
            return l;
          },
        });
      function a(e) {
        return e <= 220;
      }
      function l(e) {
        return e <= 124;
      }
    },
    85208: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
      var a = n("830251"),
        l = n("99795");
      function s(e, t) {
        var n, s;
        let i = null,
          r = null,
          u = null,
          o = !1,
          d = !1;
        switch (e.type) {
          case l.ParticipantTypes.ACTIVITY:
            break;
          case l.ParticipantTypes.USER:
            (i = e.streamId),
              (u = e.voiceState),
              (o = e.speaking),
              (d = e.ringing);
            break;
          case l.ParticipantTypes.STREAM:
            (i = e.streamId), (r = e.stream);
        }
        return {
          streamId: i,
          stream: r,
          speaking: o,
          ringing: d,
          muted:
            null !== (n = null == u ? void 0 : u.isVoiceMuted()) &&
            void 0 !== n &&
            n,
          deafen:
            null !== (s = null == u ? void 0 : u.isVoiceDeafened()) &&
            void 0 !== s &&
            s,
          mirror: e.type === l.ParticipantTypes.USER && e.user.id === t,
          hasVideo: (0, a.default)(e),
        };
      }
    },
    616718: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var a = n("582415"),
        l = n("387111"),
        s = n("782340");
      function i(e, t, n) {
        let i = (0, a.useGetStreamApplication)(n),
          r = l.default.getName(e.getGuildId(), e.id, t);
        return null == n
          ? r
          : (null == i ? void 0 : i.name) != null
            ? s.default.Messages.GO_LIVE_USER_PLAYING.format({
                applicationName: null == i ? void 0 : i.name,
                username: r,
              })
            : s.default.Messages.GO_LIVE_TILE_SCREEN.format({ username: r });
      }
    },
    124824: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("550410");
      function i(e) {
        let { children: t } = e,
          { preventIdle: n, allowIdle: i } = (0, s.usePreventIdle)("popup");
        return (
          l.useEffect(() => (n(), () => i()), [i, n]),
          (0, a.jsx)(a.Fragment, { children: t })
        );
      }
    },
    115531: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          TOAST_LINGER_MS: function () {
            return j;
          },
          default: function () {
            return y;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("917351"),
        u = n("907002"),
        o = n("446674"),
        d = n("77078"),
        c = n("913144"),
        f = n("255397"),
        h = n("819689"),
        m = n("390236"),
        p = n("95045"),
        E = n("574073"),
        S = n("24373"),
        g = n("41170"),
        C = n("377253"),
        _ = n("27618"),
        I = n("93427"),
        T = n("315102"),
        v = n("718517"),
        x = n("449008"),
        N = n("439932"),
        A = n("49111"),
        M = n("719347"),
        R = n("907646");
      let j = 10 * v.default.Millis.SECOND;
      function L(e) {
        var t;
        let { message: n } = e,
          s = (0, o.useStateFromStores)([_.default], () =>
            _.default.isBlocked(n.author.id)
          ),
          r = (0, E.useNullableMessageAuthor)(n),
          u = l.useContext(m.default),
          [c, C] = l.useState(!1),
          v = l.useCallback(
            e => {
              "A" !== e.target.nodeName &&
                (f.default.updateChatOpen(n.channel_id, !0),
                h.default.jumpToMessage({
                  channelId: n.channel_id,
                  messageId: n.id,
                  flash: !0,
                }));
            },
            [n.channel_id, n.id]
          ),
          x =
            null != n.content && "" !== n.content
              ? (0, p.default)(n, { isInteracting: c }).content
              : null,
          {
            contentPlaceholder: N,
            renderedContent: A,
            icon: j,
          } = (0, I.renderSingleLineMessage)(n, x, s, R.messageContent, {
            iconClass: R.messageContentIcon,
            iconSize: M.SINGLE_LINE_MESSAGE_DEFAULT_ICON_SIZE,
          }),
          L = (0, S.getMessageStickers)(n),
          y = L.length > 0,
          O = y
            ? L.map(e =>
                (0, a.jsx)(
                  g.default,
                  {
                    className: R.sticker,
                    size: 128,
                    sticker: e,
                    isInteracting: c,
                  },
                  e.id
                )
              )
            : null;
        return (0, a.jsxs)(d.Clickable, {
          className: R.toast,
          onMouseEnter: () => {
            C(!0);
          },
          onMouseLeave: () => {
            C(!1);
          },
          onClick: v,
          children: [
            (0, a.jsxs)("div", {
              className: i(R.messageContentWrapper, {
                [R.mentioned]: n.mentioned,
              }),
              children: [
                null !== (t = null != A ? A : O) && void 0 !== t
                  ? t
                  : (0, a.jsx)("span", { children: N }),
                null != O ? null : j,
              ],
            }),
            (0, a.jsx)("img", {
              alt: "",
              src:
                (null == r ? void 0 : r.guildMemberAvatar) != null && null != u
                  ? (0, T.getGuildMemberAvatarURLSimple)({
                      guildId: u,
                      userId: n.author.id,
                      avatar: r.guildMemberAvatar,
                    })
                  : n.author.getAvatarURL(u, 32),
              className: R.avatar,
            }),
          ],
        });
      }
      function y(e) {
        let { channelId: t, className: n } = e,
          [s, d] = l.useState(!1),
          { toastsHidden: f, toastMessages: h } = (function (e) {
            var t;
            let { channelId: n, isFrozen: a, count: s, lingerMs: i } = e,
              [r, u] = l.useState([]),
              [d, f] = l.useState(!1),
              h = l.useRef(null),
              m = l.useRef(),
              p = l.useCallback(() => {
                u([]), f(!0);
              }, []);
            l.useEffect(() => {
              function e(e) {
                let { channelId: t, message: a } = e;
                t === n &&
                  a.type !== A.MessageTypes.STAGE_START &&
                  a.type !== A.MessageTypes.STAGE_END &&
                  a.type !== A.MessageTypes.STAGE_TOPIC &&
                  a.type !== A.MessageTypes.STAGE_SPEAKER &&
                  a.type !== A.MessageTypes.STAGE_RAISE_HAND &&
                  (clearTimeout(m.current),
                  (m.current = setTimeout(p, i)),
                  u(e => [...e, a.id]));
              }
              return (
                c.default.subscribe("MESSAGE_CREATE", e),
                () => {
                  c.default.unsubscribe("MESSAGE_CREATE", e);
                }
              );
            }, [n, p, s, i]),
              l.useEffect(
                () => () => {
                  clearTimeout(m.current);
                },
                []
              ),
              l.useEffect(() => {
                r.length > 3 &&
                  u(e => {
                    let t = e.length - 3;
                    return [...e.slice(t)];
                  });
              }, [r]),
              a && null == h.current
                ? (h.current = r)
                : !a && null != h.current && (h.current = null);
            let E = null !== (t = h.current) && void 0 !== t ? t : r,
              S = (0, o.useStateFromStoresArray)(
                [C.default],
                () => E.map(e => C.default.getMessage(n, e)),
                [n, E]
              );
            return { toastsHidden: d, toastMessages: S.filter(x.isNotNullish) };
          })({ channelId: t, isFrozen: s, count: 3, lingerMs: j }),
          m = l.useRef({}),
          [p, E] = l.useState({}),
          S = l.useCallback((e, t) => {
            null == t ? delete m.current[e] : (m.current[e] = t);
          }, []);
        l.useLayoutEffect(() => {
          let e = {},
            t = 0;
          for (let a of h) {
            var n;
            let l = null !== (n = m.current[a.id]) && void 0 !== n ? n : 0;
            (e[a.id] = t), (t += l + 8);
          }
          !(0, r.isEqual)(e, p) && E(e);
        }, [h]);
        let g = h.map(e => ({
            message: e,
            height: m.current[e.id],
            y: p[e.id],
          })),
          _ = (0, u.useTransition)(g, {
            keys: e => e.message.id,
            from: () => ({ opacity: 0 }),
            enter: e => {
              let { y: t } = e;
              return { opacity: 1, translateY: t };
            },
            update: e => {
              let { y: t } = e;
              return { translateY: t };
            },
            leave: e => {
              let { height: t, y: n } = e;
              return {
                opacity: 0,
                translateY: f ? n : -(null != t ? t : 0) - 8,
                pointerEvents: "none",
              };
            },
          });
        return (0, a.jsx)("div", {
          className: i(n, (0, N.getThemeClass)(A.ThemeTypes.DARK)),
          onMouseEnter: () => {
            d(!0);
          },
          onMouseLeave: () => {
            d(!1);
          },
          children: _((e, t) =>
            (0, a.jsx)(u.animated.div, {
              ref: e => S(t.message.id, null != e ? e.offsetHeight : null),
              className: R.toastWrapper,
              style: e,
              children: (0, a.jsx)(L, { message: t.message }),
            })
          ),
        });
      }
    },
    620592: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          DisableGradient: function () {
            return l;
          },
          default: function () {
            return f;
          },
        });
      var a,
        l,
        s = n("37983");
      n("884691");
      var i = n("414456"),
        r = n.n(i),
        u = n("145131"),
        o = n("600123"),
        d = n("890317");
      function c(e) {
        let {
          disableGradients: t = !1,
          renderHeader: n,
          renderBottomLeft: a,
          renderBottomCenter: l,
          renderBottomRight: i,
          renderCenter: r,
        } = e;
        return (0, s.jsxs)("div", {
          className: d.videoControls,
          children: [
            !(0 === t || !0 === t) &&
              (0, s.jsx)("div", { className: d.gradientTop }),
            !(1 === t || !0 === t) &&
              (0, s.jsx)("div", { className: d.gradientBottom }),
            (0, s.jsx)("div", {
              className: d.topControls,
              children: null == n ? void 0 : n(),
            }),
            null == r ? void 0 : r(),
            (0, s.jsxs)("div", {
              className: d.bottomControls,
              children: [
                (0, s.jsx)(u.default, {
                  grow: 0,
                  shrink: 1,
                  basis: "50%",
                  align: u.default.Align.CENTER,
                  children: null == a ? void 0 : a(),
                }),
                (0, s.jsx)(u.default, {
                  grow: 1,
                  justify: u.default.Justify.CENTER,
                  align: u.default.Align.CENTER,
                  children: null == l ? void 0 : l(),
                }),
                (0, s.jsx)(u.default, {
                  grow: 0,
                  shrink: 1,
                  justify: u.default.Justify.END,
                  basis: "50%",
                  align: u.default.Align.CENTER,
                  children: null == i ? void 0 : i(),
                }),
              ],
            }),
          ],
        });
      }
      function f(e) {
        let {
          screenMessage: t,
          onDoubleClick: n,
          onActive: a,
          onForceIdle: l,
          idle: i,
          children: u,
          renderChatButton: f,
          renderChatToasts: h,
          renderVoiceChannelEffects: m,
          style: p,
          ...E
        } = e;
        return (0, s.jsxs)("div", {
          className: r(d.root, { [d.idle]: i }),
          style: p,
          onMouseMove: a,
          onMouseDown: a,
          onMouseLeave: l,
          onDoubleClick: n,
          children: [
            u,
            null != t ? (0, s.jsx)(o.default, { size: "large", ...t }) : null,
            (0, s.jsx)(c, { ...E }),
            null == f
              ? void 0
              : f({
                  className: d.chatButton,
                  showingClassName: d.chatButtonShowing,
                }),
            null == h ? void 0 : h(),
            null == m ? void 0 : m(),
          ],
        });
      }
      ((a = l || (l = {}))[(a.TOP = 0)] = "TOP"),
        (a[(a.BOTTOM = 1)] = "BOTTOM");
    },
    787912: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("414456"),
        s = n.n(l),
        i = n("77078"),
        r = n("423487"),
        u = n("550410"),
        o = n("410539");
      function d(e) {
        let { errorMessage: t, className: n } = e;
        return (0, a.jsx)(i.TooltipContainer, {
          className: s(n, o.root),
          text: t,
          position: "bottom",
          color: i.TooltipColors.GREY,
          children: (0, a.jsx)(u.default, {
            children: (0, a.jsx)(r.default, {
              "aria-label": null != t ? t : "",
              className: o.warningIcon,
            }),
          }),
        });
      }
    },
    863590: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("82636"),
        s = n("981913");
      function i(e) {
        let t,
          { isActivityActive: n, ...i } = e;
        return (0, a.jsx)(s.CenterControlButton, {
          isActive: n,
          color: t,
          iconComponent: l.default,
          ...i,
        });
      }
    },
    172131: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        });
      var a,
        l,
        s = n("37983");
      n("884691");
      var i = n("414456"),
        r = n.n(i),
        u = n("256170"),
        o = n("981913"),
        d = n("608845");
      function c(e) {
        let { direction: t, className: n, themeable: a, ...l } = e;
        return (0, s.jsx)(o.default, {
          className: r(n, d.arrow, { [d.up]: 0 === t }),
          iconComponent: u.default,
          themeable: a,
          ...l,
        });
      }
      ((a = l || (l = {}))[(a.UP = 0)] = "UP"),
        (a[(a.DOWN = 1)] = "DOWN"),
        (c.Directions = l);
      var f = c;
    },
    640553: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ChatButton: function () {
            return T;
          },
        }),
        n("222007"),
        n("424973");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("917351"),
        u = n("446674"),
        o = n("255397"),
        d = n("191145"),
        c = n("660478"),
        f = n("18494"),
        h = n("191542"),
        m = n("378765"),
        p = n("115531"),
        E = n("585513"),
        S = n("981913"),
        g = n("49111"),
        C = n("782340");
      function _(e) {
        let t = (0, u.useStateFromStores)(
            [h.default],
            () => !(0, r.isEmpty)(h.default.getTypingUsers(e)),
            [e]
          ),
          n = (0, u.useStateFromStores)(
            [f.default],
            () => f.default.getVoiceChannelId() === e,
            [e]
          ),
          { unreadCount: a, mentionCount: l } = (0, u.useStateFromStoresObject)(
            [c.default],
            () => ({
              unreadCount: c.default.getUnreadCount(e),
              mentionCount: c.default.getMentionCount(e),
            }),
            [e]
          );
        return {
          unreadCount: a,
          mentionCount: l,
          voiceChannelIsSelected: n,
          isTyping: t,
        };
      }
      function I(e) {
        let { className: t, channelId: n } = e,
          {
            unreadCount: l,
            mentionCount: s,
            isTyping: i,
            voiceChannelIsSelected: r,
          } = _(n);
        return (0, a.jsx)(E.default, {
          className: t,
          unreadCount: l,
          mentionCount: s,
          isTyping: i,
          canBadge: r,
        });
      }
      function T(e) {
        let t,
          {
            channelId: n,
            className: s,
            showingClassName: r,
            onClick: c,
            inPopout: f,
            showRequestToSpeakSidebar: h,
            toggleRequestToSpeakSidebar: E,
            ...T
          } = e,
          { disabled: v } = T,
          x = l.useRef(null),
          N = (0, u.useStateFromStores)(
            [d.default],
            () => d.default.getChatOpen(n),
            [n]
          ),
          {
            isShowing: A,
            unreadCount: M,
            mentionCount: R,
          } = (function (e) {
            let { unreadCount: t, mentionCount: n, isTyping: a } = _(e),
              [s, i] = l.useState(!1);
            return (
              l.useEffect(() => {
                i(t > 0);
                let e = setTimeout(() => {
                  i(!1);
                }, p.TOAST_LINGER_MS);
                return () => {
                  clearTimeout(e), i(!1);
                };
              }, [t]),
              { isShowing: s || n > 0 || a, unreadCount: t, mentionCount: n }
            );
          })(n),
          j = l.useCallback(() => {
            null == c || c(),
              !N && h && (null == E || E()),
              o.default.updateChatOpen(n, !N);
          }, [n, N, c, h, E]),
          L = l.useCallback(
            e => {
              let { className: t } = e;
              return (0, a.jsx)(I, { className: t, channelId: n });
            },
            [n]
          ),
          y = l.useCallback(() => {
            var e;
            null === (e = x.current) || void 0 === e || e.focus();
          }, []);
        (0, m.useComponentAction)({
          event: g.ComponentActions.FOCUS_CHAT_BUTTON,
          handler: v ? null : y,
        });
        let [O, P] = l.useState(!1),
          D = l.useCallback(() => {
            f && P(!0);
          }, [f]);
        (0, m.useComponentAction)({
          event: g.ComponentActions.SHOW_TEXT_IN_VOICE_POPOUT_COMING_SOON_TIP,
          handler: D,
        }),
          l.useEffect(() => {
            let e;
            return (
              O &&
                (e = setTimeout(() => {
                  P(!1);
                }, 3e3)),
              () => {
                clearTimeout(e);
              }
            );
          }, [O]),
          (t =
            f && v
              ? C.default.Messages.TEXT_IN_VOICE_POPOUT_DISABLED
              : N
                ? C.default.Messages.VIDEO_CALL_HIDE_CHAT
                : C.default.Messages.VIDEO_CALL_SHOW_CHAT);
        let b = [t];
        return (
          R > 0 &&
            b.push(
              C.default.Messages.GUILD_SIDEBAR_CHANNEL_A11Y_LABEL_MENTIONS.format(
                { mentionCount: R }
              )
            ),
          M > 0 &&
            b.push(C.default.Messages.GUILD_SIDEBAR_CHANNEL_A11Y_LABEL_UNREAD),
          (0, a.jsx)(S.default, {
            buttonRef: x,
            onClick: j,
            label: t,
            "aria-label": b.join(", "),
            iconComponent: L,
            tooltipPosition: "bottom",
            wrapperClassName: i(s, null != r && { [r]: A }),
            forceTooltipOpen: O,
            ...T,
          })
        );
      }
    },
    996496: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("414456"),
        s = n.n(l),
        i = n("77078"),
        r = n("882587");
      function u(e) {
        let { hasMentions: t, truncatedCount: n, className: l } = e;
        return (0, a.jsx)(i.Text, {
          className: s(r.unreadCount, l, { [r.mention]: t }),
          variant: "text-xs/normal",
          children: n,
        });
      }
    },
    585513: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return m;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("748820"),
        u = n("469563"),
        o = n("733154"),
        d = n("77078"),
        c = n("996496"),
        f = n("881242");
      function h(e) {
        let {
            width: t = 24,
            height: n = 24,
            isBadged: s = !1,
            isTyping: i = !1,
          } = e,
          [c] = l.useState(() => (0, r.v4)()),
          f = (0, u.useRedesignIconContext)().enabled;
        return (0, a.jsxs)("svg", {
          width: t,
          height: n,
          viewBox: "0 0 24 24",
          children: [
            (0, a.jsx)("defs", {
              children: (0, a.jsxs)("mask", {
                id: c,
                children: [
                  (0, a.jsx)("rect", {
                    fill: "white",
                    width: "100%",
                    height: "100%",
                  }),
                  i &&
                    (0, a.jsx)("g", {
                      fill: "black",
                      transform: "translate(5.5, "
                        .concat(f ? 10.5 : 8.5, ") scale(")
                        .concat(11 / 24, ")"),
                      children: (0, a.jsx)(d.AnimatedDots, {
                        dotRadius: 3.5,
                        spacing: 3,
                        fill: "black",
                      }),
                    }),
                  s &&
                    (0, a.jsx)("circle", {
                      cx: "20",
                      cy: "19",
                      r: "10",
                      fill: "red",
                    }),
                ],
              }),
            }),
            f
              ? (0, a.jsx)("g", {
                  mask: "url(#".concat(c, ")"),
                  children: (0, a.jsx)(o.ChatIcon, {
                    width: t,
                    height: n,
                    color: "currentColor",
                  }),
                })
              : (0, a.jsx)("path", {
                  fill: "currentColor",
                  d: "M4.79805 3C3.80445 3 2.99805 3.8055 2.99805 4.8V15.6C2.99805 16.5936 3.80445 17.4 4.79805 17.4H7.49805V21L11.098 17.4H19.198C20.1925 17.4 20.998 16.5936 20.998 15.6V4.8C20.998 3.8055 20.1925 3 19.198 3H4.79805Z",
                  mask: "url(#".concat(c, ")"),
                }),
          ],
        });
      }
      function m(e) {
        var t;
        let {
            className: n,
            unreadCount: l,
            mentionCount: s,
            isTyping: r,
            canBadge: u,
          } = e,
          o = null != s && s > 0,
          d = null !== (t = o ? s : l) && void 0 !== t ? t : 0,
          m = u && null != l && l > 0;
        return (0, a.jsxs)("div", {
          className: i(f.chatIcon, n),
          children: [
            (0, a.jsx)(h, { isBadged: m, isTyping: r }),
            m &&
              (0, a.jsx)(c.default, {
                hasMentions: o,
                truncatedCount: d > 99 ? "99+" : d,
                className: f.badge,
              }),
          ],
        });
      }
    },
    104815: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("433487"),
        s = n("981913"),
        i = n("782340");
      function r(e) {
        let { ...t } = e;
        return (0, a.jsx)(s.default, {
          label: i.default.Messages.MORE,
          iconComponent: l.default,
          tooltipPosition: "bottom",
          ...t,
        });
      }
    },
    213943: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("561288"),
        s = n("945330"),
        i = n("981913"),
        r = n("782340");
      function u(e) {
        let { channel: t, ...n } = e;
        return (0, a.jsx)(i.CenterControlButton, {
          ...n,
          iconComponent: s.default,
          label: r.default.Messages.DISMISS,
          onClick: () => l.default.stopRinging(t.id),
        });
      }
    },
    515496: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("907002"),
        s = n("46829"),
        i = n("981913"),
        r = n("782340"),
        u = n("643708");
      let o = (0, l.animated)(e => {
        let { percentComplete: t } = e,
          n = 20;
        return (0, a.jsx)("svg", {
          className: u.countdown,
          width: 40,
          height: 40,
          viewBox: "0 0 ".concat(40, " ").concat(40),
          children: (0, a.jsx)("circle", {
            style: { strokeDashoffset: Math.round(100 * t) },
            className: u.progress,
            cx: n,
            cy: n,
            r: n - 6,
            fill: "none",
            stroke: "#4F545C",
            pathLength: "100",
          }),
        });
      });
      function d(e) {
        let {
            totalCooldownSeconds: t,
            remainingCooldownSeconds: n,
            onClick: d,
            onKeyDown: c,
            onMouseEnter: f,
            onMouseLeave: h,
            isActive: m = !1,
            isCenterButton: p = !1,
            ...E
          } = e,
          S = n > 0,
          g = (0, l.useSpring)({
            percentComplete: 0 !== n ? (t - n) / t : 0,
            config: { ...l.config.molasses, duration: 1e3 },
          }),
          C = S
            ? r.default.Messages.VOICE_CHANNEL_EFFECTS_COOLDOWN.format({
                seconds: n,
              })
            : void 0,
          _ = p ? i.CenterControlButton : i.default;
        return (0, a.jsxs)("div", {
          className: u.container,
          children: [
            S ? (0, a.jsx)(o, { percentComplete: g.percentComplete }) : null,
            (0, a.jsx)(_, {
              ...E,
              disabled: S,
              label: C,
              iconComponent: s.default,
              onClick: d,
              onKeyDown: c,
              onMouseEnter: f,
              onMouseLeave: h,
              isActive: m,
              grow: !1,
            }),
          ],
        });
      }
    },
    925674: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("255397"),
        s = n("407691"),
        i = n("981913"),
        r = n("782340");
      function u(e) {
        let { channelId: t, ...n } = e;
        return (0, a.jsx)(i.default, {
          onClick: function () {
            l.default.selectParticipant(t, null);
          },
          label: r.default.Messages.VIDEO_CALL_RETURN_TO_GRID,
          iconComponent: s.default,
          tooltipPosition: "bottom",
          ...n,
        });
      }
    },
    331759: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("627445"),
        s = n.n(l),
        i = n("446674"),
        r = n("77078"),
        u = n("244201"),
        o = n("305961"),
        d = n("957255"),
        c = n("76539"),
        f = n("924506"),
        h = n("981913"),
        m = n("49111"),
        p = n("782340");
      function E(e) {
        var t, l;
        let {
            applicationId: E,
            stream: S,
            channel: g,
            exitFullScreen: C,
            appContext: _,
            analyticsLocation: I,
            guildScheduledEvent: T,
            ...v
          } = e,
          x = (0, u.useAppContext)(),
          N = null == g ? void 0 : g.getGuildId(),
          A = (0, i.useStateFromStores)(
            [o.default],
            () => (null != N ? o.default.getGuild(N) : null),
            [N]
          );
        return ((t = A),
        (l = g),
        null != t &&
          null != l &&
          d.default.can(m.Permissions.CREATE_INSTANT_INVITE, l))
          ? (0, a.jsx)(h.default, {
              onClick: () => {
                s(null != A, "guild cannot be null"),
                  s(null != g, "channel cannot be null"),
                  !(function (e) {
                    let {
                      guild: t,
                      channel: l,
                      streamUserId: s,
                      applicationId: i,
                      appContext: u,
                      exitFullScreen: o,
                      analyticsLocation: d,
                      guildScheduledEvent: c,
                    } = e;
                    null == o || o(),
                      (0, r.openModalLazy)(
                        async () => {
                          let { default: e } = await n
                            .el("310688")
                            .then(n.bind(n, "310688"));
                          return n =>
                            (0, a.jsx)(e, {
                              ...n,
                              guild: t,
                              channel: l,
                              streamUserId: s,
                              applicationId: i,
                              analyticsLocation: d,
                              source: l.isGuildStageVoice()
                                ? m.InstantInviteSources.STAGE_CHANNEL
                                : m.InstantInviteSources.STREAM_INVITE,
                              guildScheduledEvent: c,
                            });
                        },
                        {
                          modalKey: "stream-invite-modal",
                          contextKey:
                            u === m.AppContext.POPOUT
                              ? r.POPOUT_MODAL_CONTEXT
                              : r.DEFAULT_MODAL_CONTEXT,
                        }
                      );
                  })({
                    guild: A,
                    channel: g,
                    streamUserId: null == S ? void 0 : S.ownerId,
                    applicationId: E,
                    appContext: null != _ ? _ : x,
                    exitFullScreen: C,
                    analyticsLocation: I,
                    guildScheduledEvent: T,
                  });
              },
              iconComponent: null != E ? f.default : c.default,
              label:
                null != E
                  ? p.default.Messages.EMBEDDED_ACTIVITIES_INVITE_TO_ACTIVITY
                  : p.default.Messages.ACTIVITY_INVITE_MODAL_INVITE,
              ...v,
            })
          : null;
      }
    },
    742683: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("887657"),
        s = n("981913"),
        i = n("782340");
      function r(e) {
        let { channel: t, centerButton: n = !1, ...r } = e,
          u = n ? s.CenterControlButton : s.default,
          o = t.isManaged() || !t.isPrivate(),
          d = o ? i.default.Messages.CONNECT : i.default.Messages.JOIN_CALL;
        return (0, a.jsx)(u, { ...r, iconComponent: l.default, label: d });
      }
    },
    785344: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("77078"),
        s = n("14124"),
        i = n("849467"),
        r = n("97347"),
        u = n("981913"),
        o = n("365064");
      function d(e) {
        let { className: t } = e,
          n = (0, l.useRedesignIconContext)().enabled;
        return (0, a.jsx)(r.default, {
          foreground: n ? void 0 : o.slash,
          className: t,
        });
      }
      function c(e) {
        let {
            selfMute: t,
            serverMute: n,
            suppress: l,
            centerButton: r = !1,
            awaitingRemote: o,
            ...c
          } = e,
          f = t || n || l,
          h = r ? u.CenterControlButton : u.default,
          m = (0, s.default)(t, n, l, o),
          p = f ? d : i.default;
        return (0, a.jsx)(h, {
          isActive: !f,
          iconComponent: p,
          label: m,
          ...c,
        });
      }
    },
    63260: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("414456"),
        s = n.n(l),
        i = n("77078"),
        r = n("155207"),
        u = n("981913"),
        o = n("782340"),
        d = n("164825");
      function c(e) {
        let { className: t, count: n } = e;
        return (0, a.jsxs)("div", {
          className: s(d.root, d.comboIcon, t),
          children: [
            (0, a.jsx)(r.default, { className: d.icon }),
            (0, a.jsx)(i.Text, {
              color: "none",
              className: d.count,
              variant: "text-md/normal",
              children: n,
            }),
          ],
        });
      }
      function f(e) {
        let { count: t, ...n } = e;
        return (0, a.jsx)(u.default, {
          label: o.default.Messages.CHANNEL_CALL_PARTICIPANTS,
          iconComponent: e => {
            let { className: n } = e;
            return (0, a.jsx)(c, { className: n, count: t });
          },
          tooltipPosition: "bottom",
          ...n,
        });
      }
    },
    555038: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("519794"),
        s = n("393900"),
        i = n("981913"),
        r = n("782340");
      function u(e) {
        let { popoutWindowAlwaysOnTop: t, onToggleStayOnTop: n, ...u } = e,
          o = t
            ? r.default.Messages.POPOUT_REMOVE_FROM_TOP
            : r.default.Messages.POPOUT_STAY_ON_TOP,
          d = t ? s.default : l.default;
        return (0, a.jsx)(i.default, {
          onClick: () => n(!t),
          label: o,
          iconComponent: d,
          ...u,
        });
      }
    },
    719874: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("394832"),
        s = n("981913"),
        i = n("782340");
      function r(e) {
        let { hasPermission: t, centerButton: n = !1, ...r } = e,
          u = n ? s.CenterControlButton : s.default,
          o = t
            ? i.default.Messages.SHARE_YOUR_SCREEN
            : i.default.Messages
                .ACTIVITY_PANEL_GO_LIVE_TOOLTIP_NO_PERMISSION_IN_VOICE;
        return (0, a.jsx)(u, {
          label: o,
          disabled: !t,
          iconComponent: l.default,
          ...r,
        });
      }
    },
    422736: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("255397"),
        s = n("229997"),
        i = n("763984"),
        r = n("981913"),
        u = n("99795"),
        o = n("782340");
      function d(e) {
        let { channelId: t, isHorizontal: n, ...d } = e;
        return (0, a.jsx)(r.default, {
          onClick: function () {
            l.default.selectParticipant(t, u.ParticipantSelectionTypes.AUTO);
          },
          label: o.default.Messages.VIDEO_CALL_AUTO_SELECT,
          iconComponent: n ? s.default : i.default,
          tooltipPosition: "bottom",
          ...d,
        });
      }
    },
    634472: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return m;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("414456"),
        s = n.n(l),
        i = n("446674"),
        r = n("629109"),
        u = n("42887"),
        o = n("316680"),
        d = n("829536"),
        c = n("773336"),
        f = n("550410"),
        h = n("4536"),
        m = i.default.connectStores([u.default], e => {
          let { userId: t, context: n } = e;
          return {
            currentVolume: u.default.getLocalVolume(t, n),
            muted: u.default.isLocalMute(t, n),
          };
        })(function (e) {
          let {
            className: t,
            iconClassName: n,
            sliderClassName: l,
            userId: i,
            currentVolume: u,
            muted: m,
            context: p,
            currentWindow: E = window,
          } = e;
          return (0, a.jsx)(f.default, {
            children: (0, a.jsx)(o.default, {
              currentWindow: E,
              iconClassName: s(n, h.controlIcon),
              sliderClassName: l,
              className: t,
              value: (0, d.amplitudeToPerceptual)(u),
              muted: m,
              maxValue: c.isPlatformEmbedded ? 200 : 100,
              onValueChange: e => {
                var t, n, a, l;
                return (
                  (t = e),
                  (n = i),
                  (a = m),
                  (l = p),
                  void (t > 0 && a && r.default.toggleLocalMute(n, l),
                  r.default.setLocalVolume(
                    n,
                    (0, d.perceptualToAmplitude)(t),
                    l
                  ))
                );
              },
              onToggleMute: () => {
                var e, t;
                return (e = i), (t = p), void r.default.toggleLocalMute(e, t);
              },
            }),
          });
        });
    },
    560289: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return g;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("907002"),
        u = n("446674"),
        o = n("430568"),
        d = n("206230"),
        c = n("718517"),
        f = n("568088"),
        h = n("86807");
      let m = 6 * c.default.Millis.SECOND,
        p = 2 * c.default.Millis.SECOND,
        E = 2 * c.default.Millis.SECOND,
        S = e => "scale(".concat(1 - -(e / 120), ") rotate(").concat(e, "deg)");
      function g(e) {
        let { userId: t, voiceChannelEffect: n, onComplete: s } = e,
          { emoji: c, sentAt: g } = n,
          C = (0, u.useStateFromStores)(
            [d.default],
            () => d.default.useReducedMotion
          ),
          [_, I] = l.useState(!0),
          T = !C,
          v = (0, r.useTransition)(_, {
            from: { rotate: -120 },
            enter: { rotate: 0 },
            leave: { rotate: -120 },
            config: r.config.default,
            immediate: C,
            onRest: (e, t) => {
              let { phase: n } = t;
              "leave" === n && s();
            },
          });
        return (l.useEffect(() => {
          let e;
          return (
            Date.now() - g >= E
              ? (0, f.clearVoiceChannelEffectForUser)(t)
              : (e = setTimeout(
                  () => {
                    I(!1), T && (0, f.clearVoiceChannelEffectForUser)(t);
                  },
                  T ? p : m
                )),
            () => {
              null != e && clearTimeout(e);
            }
          );
        }, [g, t, T]),
        T)
          ? null
          : v((e, t) => {
              var n;
              let { rotate: l } = e;
              return (
                t &&
                (0, a.jsx)(r.animated.div, {
                  className: h.voiceChannelEffectEmojiContainer,
                  style: { transform: l.to(S) },
                  children: (0, a.jsx)(o.default, {
                    className: i(h.voiceChannelEffectEmoji),
                    emojiId: c.id,
                    emojiName: c.name,
                    animated: null !== (n = c.animated) && void 0 !== n && n,
                  }),
                })
              );
            });
      }
    },
    367489: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return g;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("446674"),
        u = n("819855"),
        o = n("77078"),
        d = n("731898"),
        c = n("841098"),
        f = n("206230"),
        h = n("62587"),
        m = n("181114"),
        p = n("227054"),
        E = n("277842"),
        S = n("833345");
      function g(e) {
        let {
            checked: t,
            labelText: n,
            tooltipText: s,
            canToggle: g,
            iconAltText: C,
            onChange: _,
            tooltipColor: I,
            className: T,
            id: v = "fancybutton-toggle",
            collapseWhenChecked: x = !0,
            onClick: N,
            disabled: A,
          } = e,
          M = (0, r.useStateFromStores)(
            [f.default],
            () => f.default.useReducedMotion
          ),
          [R, j] = l.useState(!1),
          L = (0, c.default)(),
          y = (0, u.isThemeDark)(L) || t ? S : E,
          { width: O = 0, ref: P } = (0, d.default)(),
          { width: D = 0, ref: b } = (0, d.default)();
        return (0, a.jsxs)(o.TooltipContainer, {
          text: (0, a.jsx)(h.NitroTooltipLabel, {
            textColor: "always-white",
            tooltipText: s,
          }),
          position: "top",
          color:
            null != I ? I : A ? o.Tooltip.Colors.BLACK : o.Tooltip.Colors.BRAND,
          "aria-label": s,
          tooltipClassName: p.tooltip,
          className: p.tooltipContainer,
          children: [
            (0, a.jsx)("input", {
              className: p.visuallyHidden,
              checked: t,
              onChange: function () {
                if (g) {
                  let e = !t;
                  j(!0), null == _ || _(e);
                }
                "function" == typeof N && N();
              },
              id: v,
              type: "checkbox",
              disabled: A,
            }),
            (0, a.jsxs)("label", {
              htmlFor: v,
              className: i(p.label, T, {
                [p.transition]: R,
                [p.labelChecked]: t,
                [p.labelUnchecked]: !t && !g,
              }),
              style: x ? { width: t ? O : O + D } : void 0,
              children: [
                t
                  ? (0, a.jsx)(m.Shine, { className: p.shine, shinePaused: M })
                  : null,
                (0, a.jsx)("img", { ref: P, src: y, alt: C }),
                (0, a.jsx)("span", {
                  ref: b,
                  children: (0, a.jsx)(o.Text, {
                    className: i(p.burstText, {
                      [p.visuallyHidden]: t && x,
                      [p.burstTextChecked]: t,
                    }),
                    variant: "text-sm/semibold",
                    children: n,
                  }),
                }),
              ],
            }),
          ],
        });
      }
    },
    738258: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("917351"),
        i = n("865981"),
        r = n.n(i),
        u = n("397485"),
        o = n("626334"),
        d = n("156451");
      let c = async e => {
        var t;
        let { animationType: n, animationId: a, url: l, shouldResize: i } = e,
          r =
            null !== (t = u.AnimationTypeToAnimations[n]) && void 0 !== t
              ? t
              : u.AnimationTypeToAnimations[
                  o.VoiceChannelEffectAnimationType.BASIC
                ],
          d = null != a && a < r.length ? r[a] : (0, s.sample)(r),
          c = JSON.parse(JSON.stringify(d));
        return (c.assets[0].p = i ? await (0, u.getResizedEmojiData)(l) : l), c;
      };
      function f(e) {
        let { containerDimensions: t, effect: n, onComplete: s } = e,
          i = l.useRef(null);
        return (
          l.useEffect(() => {
            let e;
            return (
              !(async function () {
                if (null != i.current) {
                  let t = await c(n);
                  (e = r.loadAnimation({
                    container: i.current,
                    renderer: "svg",
                    loop: !1,
                    autoplay: !0,
                    animationData: t,
                    rendererSettings: { preserveAspectRatio: "xMidYMax slice" },
                  })),
                    n.animationType ===
                      o.VoiceChannelEffectAnimationType.PREMIUM &&
                      e.setSpeed(0.8),
                    e.addEventListener("complete", () =>
                      null == s ? void 0 : s(n.id)
                    );
                }
              })(),
              () => {
                null == e || e.destroy();
              }
            );
          }, [s, n]),
          (0, a.jsx)("div", {
            className: d.effect,
            style: { height: t.height, width: t.width },
            ref: i,
          })
        );
      }
    },
    260014: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("917351"),
        u = n("748820"),
        o = n("446674"),
        d = n("913144"),
        c = n("430568"),
        f = n("206230"),
        h = n("540060");
      let m = [h.emoji1, h.emoji2, h.emoji3, h.emoji4],
        p = l.memo(function (e) {
          var t;
          let { emoji: n, onAnimationEnd: s } = e,
            u = (0, r.sample)(m),
            o = l.useCallback(() => {
              s(n.key);
            }, [n.key, s]);
          return (0, a.jsx)("div", {
            className: i(h.emoji, u),
            onAnimationEnd: o,
            children: (0, a.jsx)(c.default, {
              emojiId: n.id,
              emojiName: n.name,
              animated: null !== (t = n.animated) && void 0 !== t && t,
            }),
          });
        });
      function E(e) {
        let { channelId: t, callHeight: n } = e,
          s = (0, o.useStateFromStores)(
            [f.default],
            () => f.default.useReducedMotion
          ),
          [i, r] = l.useState([]);
        l.useEffect(() => {
          function e(e) {
            let { channelId: n, emoji: a } = e;
            n === t &&
              !s &&
              null != a &&
              r(e => [...e, { key: (0, u.v4)(), ...a }]);
          }
          return (
            d.default.subscribe("VOICE_CHANNEL_EFFECT_SEND", e),
            () => {
              d.default.unsubscribe("VOICE_CHANNEL_EFFECT_SEND", e);
            }
          );
        }, [t, s]);
        let c = l.useCallback(e => {
          r(t => t.filter(t => t.key !== e));
        }, []);
        return s
          ? null
          : (0, a.jsx)("div", {
              className: h.container,
              style: { top: n - 16 },
              "aria-hidden": !0,
              children: i.map(e =>
                (0, a.jsx)(p, { emoji: e, onAnimationEnd: c }, e.key)
              ),
            });
      }
    },
    257407: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return V;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("917351"),
        i = n("446674"),
        r = n("151426"),
        u = n("77078"),
        o = n("913144"),
        d = n("79112"),
        c = n("206230"),
        f = n("716241"),
        h = n("384997"),
        m = n("788506"),
        p = n("867805"),
        E = n("5667"),
        S = n("697218"),
        g = n("402671"),
        C = n("449008"),
        _ = n("719923"),
        I = n("229502"),
        T = n("82230"),
        v = n("568088"),
        x = n("397485"),
        N = n("463532"),
        A = n("718350"),
        M = n("258901"),
        R = n("626334"),
        j = n("49111"),
        L = n("99795"),
        y = n("958706"),
        O = n("646718"),
        P = n("397336"),
        D = n("782340"),
        b = n("531055");
      let U = y.EmojiIntention.CHAT,
        w = {
          section: j.AnalyticsSections.VOICE_CHANNEL_EFFECTS_EMOJI_PICKER,
          openPopoutType: "voice_channel_effect_emoji_picker",
        },
        F = [
          p.default.getByName("thumbsup"),
          p.default.getByName("eyes"),
          p.default.getByName("laughing"),
          p.default.getByName("watermelon"),
          p.default.getByName("fork_and_knife"),
          p.default.getByName("yum"),
        ].filter(C.isNotNullish);
      function V(e) {
        var t;
        let { channel: n, closePopout: p, onFocus: C } = e,
          y = (0, i.useStateFromStores)(
            [c.default],
            () => c.default.useReducedMotion
          ),
          V = (0, i.useStateFromStores)([S.default], () =>
            S.default.getCurrentUser()
          ),
          k = _.default.canUseFancyVoiceChannelReactions(V),
          B = (0, i.useStateFromStores)(
            [T.default],
            () => T.default.getState().animationType
          ),
          G = l.useRef(!1),
          H = (0, m.useFrequentlyUsedEmojis)(n.guild_id),
          W = (0, s.uniqBy)([...H, ...F], "name")
            .filter(
              e =>
                !g.default.isEmojiFilteredOrLocked({
                  emoji: e,
                  channel: n,
                  intention: U,
                })
            )
            .slice(0, L.EMOJI_PICKER_EMOJI_TO_SHOW_COUNT),
          Y =
            null !== (t = v.default.recentlyUsedEmojis) && void 0 !== t
              ? t
              : [],
          z = Y.filter(
            e =>
              !W.slice(0, L.EMOJI_PICKER_EMOJI_TO_SHOW_COUNT - 1).some(
                t => t.name === e.name
              )
          );
        z.length > 0 && W.splice(W.length - 1, 1, z[0]);
        let K = (0, x.sampleAnimationId)(B),
          Z = e => {
            o.default.dispatch({
              type: "VOICE_CHANNEL_EFFECT_RECENT_EMOJI",
              emoji: e,
            }),
              (0, I.sendVoiceChannelEffect)({
                channel: n,
                emoji: e,
                location: I.VoiceChannelEffectSentLocation.EMOJI_PICKER,
                animationType: B,
                animationId: K,
                isPremium: k,
              });
          },
          Q = () => {
            (0, A.openEffectsUpsellModal)({
              analytics: {
                type: O.PremiumUpsellTypes.EMOJI_PICKER_EMOJI_CLICKED,
                object: j.AnalyticsObjects.BUTTON_CTA,
                section: j.AnalyticsSections.VOICE_CHANNEL_EFFECTS_BAR,
              },
            });
          },
          X = e => {
            (G.current = e),
              e &&
                f.default.trackWithMetadata(
                  j.AnalyticEvents.VOICE_CHANNEL_EFFECT_EMOJI_PICKER_EXPANDED,
                  { channel_id: q, guild_id: J }
                );
          },
          { id: q, guild_id: J } = n;
        l.useEffect(() => {
          f.default.trackWithMetadata(
            j.AnalyticEvents.VOICE_CHANNEL_EFFECT_BAR_VIEWED,
            { channel_id: q, guild_id: J }
          );
        }, [q, J]);
        let $ = y
            ? [
                r.DismissibleContent
                  .VOICE_CHANNEL_EFFECTS_REDUCED_MOTION_TOOLTIP,
              ]
            : [],
          ee = B === R.VoiceChannelEffectAnimationType.PREMIUM;
        return (0, a.jsx)(h.default, {
          contentTypes: $,
          children: e => {
            let { visibleContent: t, markAsDismissed: l } = e,
              s =
                y &&
                t ===
                  r.DismissibleContent
                    .VOICE_CHANNEL_EFFECTS_REDUCED_MOTION_TOOLTIP;
            return (0, a.jsx)(u.Popout, {
              position: "left",
              "aria-label": D.default.Messages.VOICE_CHANNEL_EFFECTS_MORE,
              shouldShow: s,
              renderPopout: () =>
                (0, a.jsx)("div", {
                  onMouseEnter: C,
                  children: (0, a.jsx)(E.default, {
                    className: b.reducedMotionTooltip,
                    header:
                      D.default.Messages
                        .VOICE_CHANNEL_EFFECTS_REDUCED_MOTION_TOOLTIP_TITLE,
                    content:
                      D.default.Messages
                        .VOICE_CHANNEL_EFFECTS_REDUCED_MOTION_TOOLTIP_BODY,
                    onClick: () => {
                      d.default.open(
                        j.UserSettingsSections.ACCESSIBILITY,
                        null,
                        {
                          scrollPosition:
                            P.AccessibilityScrollPositions.REDUCED_MOTION,
                        }
                      ),
                        p();
                    },
                    markAsDismissed: l,
                    buttonCTA:
                      D.default.Messages
                        .VOICE_CHANNEL_EFFECTS_REDUCED_MOTION_TOOLTIP_CONFIRM,
                    secondaryButtonCTA:
                      D.default.Messages
                        .VOICE_CHANNEL_EFFECTS_REDUCED_MOTION_TOOLTIP_CANCEL,
                    caretPosition: E.CaretPosition.RIGHT_CENTER,
                  }),
                }),
              children: () =>
                (0, a.jsx)(M.default, {
                  title: D.default.Messages.VOICE_CHANNEL_EFFECTS_HOTBAR_TITLE,
                  channel: n,
                  closePopout: p,
                  onSelectEmoji: Z,
                  onSelectDisabledEmoji: Q,
                  onFocus: C,
                  onExpandedToggle: X,
                  analyticsOverride: w,
                  emojiSearchProps: {
                    accessory: (0, a.jsx)(N.default, {
                      labelText:
                        D.default.Messages.VOICE_CHANNEL_EFFECTS_TOGGLE,
                      value: ee,
                      onChange: () => {
                        if (k)
                          return (
                            f.default.trackWithMetadata(
                              j.AnalyticEvents
                                .VOICE_CHANNEL_EFFECT_FANCY_ANIMATION_TOGGLED,
                              { channel_id: q, guild_id: J, enabled: !ee }
                            ),
                            o.default.dispatch({
                              type: "VOICE_CHANNEL_EFFECT_TOGGLE_ANIMATION_TYPE",
                            })
                          );
                      },
                      onShowUpsell: () =>
                        (0, A.openEffectsUpsellModal)({
                          analytics: {
                            type: G.current
                              ? O.PremiumUpsellTypes
                                  .VOICE_CHANNEL_EFFECTS_TOGGLE_CLICKED_EXPANDED
                              : O.PremiumUpsellTypes
                                  .VOICE_CHANNEL_EFFECTS_TOGGLE_CLICKED,
                            object:
                              j.AnalyticsObjects.VOICE_CHANNEL_EFFECTS_TOGGLE,
                            section: G.current
                              ? j.AnalyticsSections
                                  .VOICE_CHANNEL_EFFECTS_EMOJI_PICKER
                              : j.AnalyticsSections.VOICE_CHANNEL_EFFECTS_BAR,
                          },
                        }),
                    }),
                  },
                  recentlyUsedEmojis: z,
                }),
            });
          },
        });
      }
    },
    463532: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("446674"),
        s = n("697218"),
        i = n("719923"),
        r = n("367489"),
        u = n("782340");
      function o(e) {
        let { value: t, labelText: n, onChange: o, onShowUpsell: d } = e,
          c = (0, l.useStateFromStores)([s.default], () =>
            s.default.getCurrentUser()
          ),
          f = i.default.canUseFancyVoiceChannelReactions(c),
          h = "";
        return (
          (h = f
            ? t
              ? u.default.Messages.VOICE_CHANNEL_EFFECTS_TOGGLE_TOOLTIP_ENABLED
              : u.default.Messages.VOICE_CHANNEL_EFFECTS_TOGGLE_TOOLTIP_DISABLED
            : u.default.Messages.VOICE_CHANNEL_EFFECTS_TOGGLE_UPSELL),
          (0, a.jsx)(r.default, {
            checked: t,
            onChange: o,
            labelText: n,
            tooltipText: h,
            iconAltText:
              u.default.Messages.VOICE_CHANNEL_EFFECTS_TOGGLE_TADA_ALT,
            canToggle: f,
            onClick: f ? () => {} : d,
          })
        );
      }
    },
    718350: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return m;
          },
          openEffectsUpsellModal: function () {
            return p;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("77078"),
        s = n("349171"),
        i = n("626301"),
        r = n("789946"),
        u = n("58608"),
        o = n("599110"),
        d = n("49111"),
        c = n("782340"),
        f = n("469347"),
        h = n("534044");
      function m(e) {
        let { onClose: t, analytics: n, ...l } = e,
          m = c.default.Messages.VOICE_CHANNEL_EFFECTS_UPSELL_BODY_2.format({
            onPressMore: function () {
              (0, s.default)(),
                t(),
                o.default.track(d.AnalyticEvents.PREMIUM_PROMOTION_OPENED, {
                  location_section:
                    d.AnalyticsSections.VOICE_CHANNEL_EFFECTS_UPSELL_MODAL,
                  location_object: d.AnalyticsObjects.NAVIGATION_LINK,
                }),
                (0, i.navigateToPremiumMarketingPage)();
            },
          });
        return (0, a.jsx)(r.default, {
          title: c.default.Messages.VOICE_CHANNEL_EFFECTS_UPSELL_HEADER_2,
          glowUp: m,
          body: m,
          artContainerClassName: f.artContainer,
          enableArtBoxShadow: !1,
          type: n.type,
          analyticsLocation: {
            section: d.AnalyticsSections.VOICE_CHANNEL_EFFECTS_UPSELL_MODAL,
            object: n.object,
          },
          analyticsSource: {
            page: d.AnalyticsPages.CHANNEL_CALL,
            section: n.section,
          },
          onClose: t,
          onSubscribeClick: s.default,
          artElement: (0, a.jsx)(u.default, {
            className: f.video,
            src: h,
            loop: !0,
            autoPlay: !0,
          }),
          ...l,
        });
      }
      function p(e) {
        let { analytics: t } = e;
        (0, l.openModalLazy)(async () => {
          let { default: e } = await n.el("718350").then(n.bind(n, "718350"));
          return n => (0, a.jsx)(e, { analytics: t, ...n });
        });
      }
    },
    258901: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return j;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("917351"),
        u = n("907002"),
        o = n("77078"),
        d = n("430568"),
        c = n("252744"),
        f = n("788506"),
        h = n("86678"),
        m = n("867805"),
        p = n("986632"),
        E = n("882641"),
        S = n("476765"),
        g = n("837899"),
        C = n("402671"),
        _ = n("449008"),
        I = n("99795"),
        T = n("958706"),
        v = n("894282"),
        x = n("448765");
      let N = T.EmojiIntention.CHAT,
        A = [
          m.default.getByName("thumbsup"),
          m.default.getByName("eyes"),
          m.default.getByName("laughing"),
          m.default.getByName("watermelon"),
          m.default.getByName("fork_and_knife"),
          m.default.getByName("yum"),
        ].filter(_.isNotNullish);
      function M(e) {
        let { emoji: t, isDisabled: n = !1, onClick: s } = e,
          r = l.useRef(null),
          f = (0, c.default)(r);
        return (0, a.jsx)("span", {
          ref: r,
          children: (0, a.jsx)(o.Button, {
            onClick: s,
            look: o.Button.Looks.BLANK,
            size: o.Button.Sizes.NONE,
            children: (0, a.jsx)(u.Spring, {
              config: E.EMOJI_BUTTON_SPRING_CONFIG,
              from: { value: 0 },
              to: { value: f ? 1 : 0 },
              children: e => {
                let { value: l } = e;
                return (0, a.jsx)(u.animated.div, {
                  style: {
                    transform: l
                      .to([0, 1], [1, 1.14])
                      .to(e => "scale(".concat(e, ")")),
                  },
                  children: (0, a.jsx)(d.default, {
                    className: i(x.emoji, { [x.emojiItemDisabled]: n }),
                    emojiId: t.id,
                    emojiName: null == t ? void 0 : t.surrogates,
                    animated: t.animated,
                  }),
                });
              },
            }),
          }),
        });
      }
      function R(e) {
        let {
          otherAccessories: t,
          isEmojiPickerExpanded: n,
          onSetExpanded: l,
          onFocus: s,
        } = e;
        return (0, a.jsxs)(a.Fragment, {
          children: [
            t,
            (0, a.jsx)(o.Clickable, {
              className: x.dropDownContainer,
              onClick: () => {
                l(!n), s();
              },
              children: (0, a.jsx)(g.default, {
                className: i(x.dropDown, { [x.dropDownOpen]: n }),
              }),
            }),
          ],
        });
      }
      function j(e) {
        let {
            channel: t,
            title: n,
            closePopout: s,
            onFocus: u,
            onSelectEmoji: d,
            onSelectDisabledEmoji: c,
            onExpandedToggle: m,
            emojiSearchProps: E,
            recentlyUsedEmojis: g,
            analyticsOverride: _,
          } = e,
          j = (0, S.useUID)(),
          [L, y] = l.useState(!1),
          O = (0, f.useFrequentlyUsedEmojis)(t.guild_id),
          P = (0, r.uniqBy)([...O, ...A], "name")
            .filter(
              e =>
                !C.default.isEmojiFilteredOrLocked({
                  emoji: e,
                  channel: t,
                  intention: N,
                })
            )
            .slice(0, I.EMOJI_PICKER_EMOJI_TO_SHOW_COUNT);
        null != g && g.length > 0 && P.splice(P.length - 1, 1, g[0]);
        let D = e => {
            y(e), null == m || m(e);
          },
          b = (e, t) => {
            if (null == e && t) {
              s();
              return;
            }
            null != e && d(e);
            D(!t), t && p.EmojiPickerStore.setSearchPlaceholder(null);
          };
        return (0, a.jsxs)(o.Dialog, {
          "aria-labelledby": j,
          children: [
            (0, a.jsx)(o.HeadingLevel, {
              forceLevel: 2,
              children: (0, a.jsx)(o.HiddenVisually, {
                children: (0, a.jsx)(o.H, { id: j, children: n }),
              }),
            }),
            (0, a.jsxs)("div", {
              className: x.container,
              children: [
                (0, a.jsx)(h.default, {
                  analyticsOverride: _,
                  channel: t,
                  className: i(x.animatedPicker, { [x.animatedPickerTall]: L }),
                  headerClassName: i(x.emojiPickerHeader, {
                    [x.emojiPickerHeaderExpanded]: L,
                  }),
                  closePopout: s,
                  onSelectEmoji: L ? b : () => {},
                  shouldHidePickerActions: !L,
                  wrapper: "div",
                  pickerIntention: N,
                  searchProps: {
                    ...E,
                    accessory: (0, a.jsx)(R, {
                      otherAccessories: null == E ? void 0 : E.accessory,
                      isEmojiPickerExpanded: L,
                      onSetExpanded: D,
                      onFocus: u,
                    }),
                    onKeyDown: e => {
                      null != e &&
                        e.key !== v.KeyboardKeysUpdated.TAB &&
                        (e.key !== v.KeyboardKeysUpdated.ENTER || e.shiftKey
                          ? D(!0)
                          : D(!L));
                    },
                  },
                }),
                (0, a.jsx)("div", {
                  className: x.slotsContainer,
                  children: (0, a.jsx)("div", {
                    className: i(x.slots, x.slotsWide),
                    children: P.map(e => {
                      let n = C.default.isEmojiDisabled({
                        emoji: e,
                        channel: t,
                        intention: T.EmojiIntention.CHAT,
                      });
                      return (0, a.jsx)(
                        "div",
                        {
                          className: x.slot,
                          children: (0, a.jsx)(o.TooltipContainer, {
                            text: e.name,
                            position: "top",
                            "aria-label": e.name,
                            tooltipClassName: x.tooltipContainer,
                            color: o.Tooltip.Colors.BRAND,
                            children: (0, a.jsx)(M, {
                              emoji: e,
                              isDisabled: n,
                              onClick: () => {
                                n ? null == c || c(e) : b(e, !0);
                              },
                            }),
                          }),
                        },
                        e.name
                      );
                    }),
                  }),
                }),
              ],
            }),
          ],
        });
      }
    },
    824135: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var a = n("446674"),
        l = n("233069"),
        s = n("42203"),
        i = n("305961"),
        r = n("18494"),
        u = n("49111");
      function o(e, t) {
        let n = (0, a.useStateFromStores)([i.default], () =>
            i.default.getGuild(t)
          ),
          o = (0, a.useStateFromStores)([s.default], () =>
            s.default.getChannel(e)
          ),
          d = (0, a.useStateFromStores)([r.default], () =>
            r.default.getChannelId(t)
          );
        return (
          e === d &&
          null != o &&
          null != n &&
          o.getGuildId() === n.id &&
          (0, l.isGuildTextChannelType)(o.type) &&
          n.hasFeature(u.GuildFeatures.WELCOME_SCREEN_ENABLED) &&
          n.hasFeature(u.GuildFeatures.COMMUNITY) &&
          !n.hasFeature(u.GuildFeatures.GUILD_SERVER_GUIDE)
        );
      }
    },
    322631: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          TWITCH_APPLICATION_ID_PREFIX: function () {
            return r;
          },
          default: function () {
            return a;
          },
        });
      var a,
        l = n("376556"),
        s = n("653047"),
        i = n("782340");
      let r = "twitch:";
      a = class extends s.default {
        getIconURL() {
          return l.default.get("twitch").icon.lightPNG;
        }
        constructor(e) {
          super(e),
            (this.id = "".concat(r).concat(e.url)),
            (this.name =
              i.default.Messages.GAME_FEED_ACTIVITY_STREAMING_TWITCH);
        }
      };
    },
    947297: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          XBOX_APPLICATION_ID_PREFIX: function () {
            return i;
          },
          default: function () {
            return a;
          },
        });
      var a,
        l = n("376556"),
        s = n("653047");
      let i = "xbox:";
      a = class extends s.default {
        getIconURL() {
          return l.default.get("xbox").icon.lightPNG;
        }
        constructor(e) {
          super(e),
            (this.id = "".concat(i).concat(e.name)),
            (this.name = e.name);
        }
      };
    },
    410348: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return p;
          },
        }),
        n("222007"),
        n("808653");
      var a = n("917351"),
        l = n.n(a),
        s = n("446674"),
        i = n("913144"),
        r = n("990766"),
        u = n("374014"),
        o = n("706530");
      let d = {},
        c = {},
        f = new Set();
      function h() {
        (d = {}), (c = {});
      }
      class m extends s.default.Store {
        getPreviewURL(e, t, n) {
          let a = (0, u.encodeStreamKey)({
              streamType: null != e ? o.StreamTypes.GUILD : o.StreamTypes.CALL,
              guildId: e,
              channelId: t,
              ownerId: n,
            }),
            l = d[a];
          return null == l || Date.now() > l.expires
            ? (!f.has(a) &&
                (f.add(a),
                Promise.resolve().then(() => {
                  (0, r.fetchStreamPreview)(e, t, n);
                })),
              null)
            : l.url;
        }
        getPreviewURLForStreamKey(e) {
          let {
            guildId: t,
            channelId: n,
            ownerId: a,
          } = (0, u.decodeStreamKey)(e);
          return this.getPreviewURL(t, n, a);
        }
        getIsPreviewLoading(e, t, n) {
          let a = (0, u.encodeStreamKey)({
            streamType: null != e ? o.StreamTypes.GUILD : o.StreamTypes.CALL,
            guildId: e,
            channelId: t,
            ownerId: n,
          });
          return f.has(a);
        }
      }
      m.displayName = "ApplicationStreamPreviewStore";
      var p = new m(i.default, {
        CONNECTION_OPEN: h,
        LOGOUT: h,
        STREAM_PREVIEW_FETCH_START: function (e) {
          var t;
          let { streamKey: n } = e;
          (c[n] = (null !== (t = c[n]) && void 0 !== t ? t : 0) + 1), f.add(n);
        },
        STREAM_PREVIEW_FETCH_SUCCESS: function (e) {
          let { streamKey: t, previewURL: n } = e;
          (d[t] = { url: n, expires: Date.now() + 12e4 }),
            (c[t] = 0),
            f.delete(t);
        },
        STREAM_PREVIEW_FETCH_FAIL: function (e) {
          let { streamKey: t, retryAfter: n } = e;
          (d[t] = {
            url: null,
            expires: Date.now() + (null != n ? n : 1e4 * c[t]),
          }),
            f.delete(t);
        },
        VOICE_STATE_UPDATES: function (e) {
          let { voiceStates: t } = e;
          return (
            !(l.isEmpty(d) && l.isEmpty(c)) &&
            t.reduce((e, t) => {
              let { userId: n, guildId: a, channelId: l, selfStream: s } = t;
              if (s) return e;
              let i = (0, u.encodeStreamKey)({
                streamType:
                  null != a ? o.StreamTypes.GUILD : o.StreamTypes.CALL,
                guildId: a,
                channelId: l,
                ownerId: n,
              });
              return delete d[i], delete c[i], !0;
            }, !1)
          );
        },
      });
    },
    712234: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var a = n("446674"),
        l = n("913144");
      let s = { toastsEnabledForChannel: {} },
        i = s;
      class r extends a.default.PersistedStore {
        initialize(e) {
          i = null != e ? e : s;
        }
        getToastsEnabled(e) {
          var t;
          return (
            null === (t = i.toastsEnabledForChannel[e]) || void 0 === t || t
          );
        }
        getState() {
          return i;
        }
      }
      (r.displayName = "CallChatToastsStore"),
        (r.persistKey = "CallChatToasts");
      var u = new r(l.default, {
        CALL_CHAT_TOASTS_SET_ENABLED: function (e) {
          let { channelId: t, toastsEnabled: n } = e;
          i.toastsEnabledForChannel[t] = n;
        },
        LOGOUT: function () {
          i.toastsEnabledForChannel = {};
        },
      });
    },
    1017: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return g;
          },
        });
      var a = n("446674"),
        l = n("913144"),
        s = n("177589"),
        i = n("824563"),
        r = n("843823"),
        u = n("697218"),
        o = n("49111");
      let d = !1,
        c = {},
        f = {};
      function h(e) {
        let t = !1;
        return (
          e.forEach(e => {
            t = !1 !== p(e) || t;
          }),
          t
        );
      }
      function m(e) {
        let t = f[e];
        if (null == t) return !1;
        let n = t.gameId;
        return (
          null != c[n] &&
            ((c = { ...c }),
            delete c[n][e],
            0 === Object.values(c[n]).length && delete c[n]),
          (f = { ...f }),
          delete f[e],
          !0
        );
      }
      function p(e) {
        let { user: t, activities: n } = e;
        if (null == t) return !1;
        let a = n.filter(e => e.type !== o.ActivityTypes.CUSTOM_STATUS);
        if (0 === a.length) return m(t.id);
        let l = !1;
        return (
          a.forEach(e => {
            (function (e, t) {
              var n, a, l, i;
              let r = (0, s.default)(e);
              if (null == r) return m(t.id);
              let u = f[t.id];
              null != u && u.gameId !== r && m(t.id);
              let o =
                  null !==
                    (a =
                      null === (n = e.timestamps) || void 0 === n
                        ? void 0
                        : n.start) && void 0 !== a
                    ? a
                    : Date.now(),
                d = { userId: t.id, activity: e, startedPlaying: o };
              return (
                (l = r),
                (i = d),
                (c = { ...c, [l]: { ...c[l], [i.userId]: i } }),
                (f = {
                  ...f,
                  [i.userId]: { gameId: l, startedPlaying: i.startedPlaying },
                }),
                !0
              );
            })(e, t) && (l = !0);
          }),
          l
        );
      }
      function E() {
        let e = !1;
        if (!r.default.needsRefresh() && !d) {
          let t;
          (c = {}),
            (f = {}),
            (t = !1),
            i.default.getUserIds().forEach(e => {
              let n = u.default.getUser(e);
              null != n &&
                (t =
                  p({ user: n, activities: i.default.getActivities(e) }) || t);
            }),
            (e = t);
        }
        return (d = !r.default.needsRefresh()), e;
      }
      class S extends a.default.Store {
        initialize() {
          this.waitFor(r.default), this.syncWith([r.default], E);
        }
        get games() {
          return c;
        }
        get usersPlaying() {
          return f;
        }
        get gameIds() {
          return Object.keys(c);
        }
        getNowPlaying(e) {
          return c[e];
        }
        getUserGame(e) {
          return f[e];
        }
      }
      S.displayName = "NowPlayingStore";
      var g = new S(l.default, {
        CONNECTION_OPEN: function () {
          (c = {}), (f = {});
        },
        CONNECTION_OPEN_SUPPLEMENTAL: function (e) {
          let { guilds: t, presences: n } = e,
            a = !1;
          return (
            t.forEach(e => {
              h(e.presences) && (a = !0);
            }),
            h(n) && (a = !0),
            a
          );
        },
        LOGOUT: function () {
          (c = {}), (f = {});
        },
        PRESENCE_UPDATES: function (e) {
          let { updates: t } = e;
          return t.map(e => p(e)).some(e => e);
        },
        PRESENCES_REPLACE: function (e) {
          let { presences: t } = e;
          return h(t);
        },
      });
    },
    501090: function (e, t, n) {
      "use strict";
      let a;
      n.r(t),
        n.d(t, {
          default: function () {
            return U;
          },
        }),
        n("222007"),
        n("808653"),
        n("424973");
      var l = n("917351"),
        s = n.n(l),
        i = n("446674"),
        r = n("913144"),
        u = n("447909"),
        o = n("233069"),
        d = n("159885"),
        c = n("158998"),
        f = n("42203"),
        h = n("319781"),
        m = n("27618"),
        p = n("697218"),
        E = n("49111");
      let S = !1,
        g = "",
        C = 0,
        _ = [],
        I = !1,
        T = new Set(),
        v = null;
      function x() {
        (g = ""), (C = 0), (_ = []), (T = new Set()), (S = !1), (v = null);
      }
      function N(e) {
        (g = e), (C = 0), A();
      }
      function A() {
        if (!S) return !1;
        let e = f.default.getChannel(v);
        if (0 === g.trim().length)
          return (
            null != a && a.clearQuery(),
            (_ = (function (e) {
              let t = m.default.getFriendIDs();
              return (
                (null == e ? void 0 : e.isPrivate()) &&
                  (t = t.filter(t => !e.recipients.includes(t))),
                t
                  .reduce((e, t) => {
                    let n = p.default.getUser(t);
                    return null == n ? e : (e.push({ user: n }), e);
                  }, [])
                  .sort(R)
              );
            })(e)),
            !0
          );
        let t = null != e ? e.recipients : [];
        return (
          null != a &&
            a.setQuery(
              g,
              { friends: !0 },
              t,
              (function () {
                let e = h.default.getFrequentlyWithoutFetchingLatest(),
                  t = e.filter(
                    e => e instanceof o.PrivateChannelRecord && e.isDM()
                  ),
                  n = Math.max(
                    ...t.map(e => {
                      let { id: t } = e;
                      return h.default.getScoreWithoutFetchingLatest(t);
                    })
                  ),
                  a = {};
                return (
                  t.forEach(e => {
                    let t = h.default.getScoreWithoutFetchingLatest(e.id),
                      l = e.getRecipientId(),
                      s = m.default.isFriend(l) ? 0.2 : 0,
                      i = null != f.default.getDMFromUserId(l) ? 0.1 : 0;
                    a[l] = 1 + t / n + s + i;
                  }),
                  a
                );
              })()
            ),
          !1
        );
      }
      function M() {
        if (!S) return !1;
        let e = I;
        return (
          (I = s.some(
            m.default.getRelationships(),
            e => e === E.RelationshipTypes.FRIEND
          )) !== e
        );
      }
      function R(e, t) {
        return (0, d.stripDiacritics)(
          c.default.getName(e.user).toLocaleLowerCase()
        ).localeCompare(
          (0, d.stripDiacritics)(c.default.getName(t.user).toLocaleLowerCase())
        );
      }
      function j(e) {
        let { results: t } = e;
        S &&
          "" !== g &&
          ((_ = t
            .map(e => {
              let { id: t } = e;
              return { user: p.default.getUser(t) };
            })
            .filter(e => null != e.user)),
          b.emitChange());
      }
      function L() {
        return (
          null != a && (a.destroy(), (a = null)),
          u.default.getSearchContext(j, 1e3)
        );
      }
      function y(e) {
        if (e.key !== E.NEW_GROUP_DM_POPOUT_ID) return !1;
        (S = !0), M(), (a = L()), (v = null), N("");
      }
      function O(e) {
        if (e.key !== E.NEW_GROUP_DM_POPOUT_ID) return !1;
        P();
      }
      function P() {
        null != a && (a.destroy(), (a = null)), x();
      }
      class D extends i.default.Store {
        initialize() {
          this.waitFor(p.default, f.default, m.default),
            this.syncWith([p.default, f.default], A),
            this.syncWith([m.default], M);
        }
        getResults() {
          return _;
        }
        hasFriends() {
          return I;
        }
        getSelectedUsers() {
          return T;
        }
        getQuery() {
          return g;
        }
        getState() {
          return {
            query: g,
            selectedRow: C,
            selectedUsers: T,
            results: _,
            hasFriends: I,
          };
        }
      }
      D.displayName = "PrivateChannelRecipientsInviteStore";
      let b = new D(r.default, {
        CONNECTION_OPEN: function () {
          x();
        },
        CHANNEL_SELECT: function (e) {
          let { guildId: t, channelId: n } = e;
          if (null != t) return !1;
          let a = S;
          return x(), (S = a), (v = n), A();
        },
        MODAL_PUSH: y,
        SHOW_ACTION_SHEET: y,
        PRIVATE_CHANNEL_RECIPIENTS_INVITE_OPEN: function (e) {
          (S = !0), M(), (a = L()), (v = e.channelId), N("");
        },
        MODAL_POP: O,
        HIDE_ACTION_SHEET: O,
        PRIVATE_CHANNEL_RECIPIENTS_INVITE_CLOSE: P,
        PRIVATE_CHANNEL_RECIPIENTS_INVITE_QUERY: function (e) {
          (v = e.channelId), N(e.query);
        },
        PRIVATE_CHANNEL_RECIPIENTS_INVITE_SELECT: function (e) {
          C = e.row;
        },
        PRIVATE_CHANNEL_RECIPIENTS_ADD_USER: function (e) {
          let { userId: t } = e;
          T.add(t), (T = new Set(T));
        },
        PRIVATE_CHANNEL_RECIPIENTS_REMOVE_USER: function (e) {
          let { userId: t } = e;
          T.delete(t), (T = new Set(T));
        },
      });
      var U = b;
    },
    402904: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var a = n("917351"),
        l = n.n(a),
        s = n("446674"),
        i = n("913144"),
        r = n("305961");
      let u = null,
        o = {};
      class d extends s.default.Store {
        initialize() {
          this.waitFor(r.default);
        }
        getOptimalRegion() {
          var e;
          let t =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : null,
            n = this.getRegions(t);
          return null != n
            ? null !==
                (e = n.find(e => {
                  let { optimal: t } = e;
                  return t;
                })) && void 0 !== e
              ? e
              : l.sample(n)
            : null;
        }
        getOptimalRegionId() {
          let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : null,
            t = this.getOptimalRegion(e);
          return null != t ? t.id : null;
        }
        getRandomRegion() {
          let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : null,
            t = this.getRegions(e);
          return null != t ? l.sample(t) : null;
        }
        getRandomRegionId() {
          let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : null,
            t = this.getRandomRegion(e);
          return null != t ? t.id : null;
        }
        getRegions(e) {
          return null != e ? o[e] : u;
        }
      }
      d.displayName = "RegionStore";
      var c = new d(i.default, {
        LOAD_REGIONS: function (e) {
          let t = l.sortBy(e.regions, e => e.name);
          null != e.guildId ? (o[e.guildId] = t) : (u = t);
        },
        GUILD_DELETE: function (e) {
          delete o[e.guild.id];
        },
      });
    },
    440351: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        });
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("77078"),
        u = n("145131"),
        o = n("750457"),
        d = n("890957");
      class c extends l.PureComponent {
        render() {
          let {
            title: e,
            description: t,
            agreement: n,
            disagreement: l,
            onAgree: s,
            onDisagree: c,
            imageClassName: f,
          } = this.props;
          return (0, a.jsxs)(u.default, {
            className: o.gatedContent,
            justify: u.default.Justify.CENTER,
            align: u.default.Align.CENTER,
            direction: u.default.Direction.VERTICAL,
            children: [
              (0, a.jsx)("div", { className: i(o.image, f) }),
              (0, a.jsx)("div", {
                className: i(o.title, d.marginBottom8),
                children: e,
              }),
              (0, a.jsx)("div", {
                className: i(o.description, d.marginBottom20),
                children: t,
              }),
              (0, a.jsxs)(u.default, {
                justify: u.default.Justify.CENTER,
                align: u.default.Align.CENTER,
                grow: 0,
                children: [
                  null != l
                    ? (0, a.jsx)(r.Button, {
                        className: o.action,
                        size: r.ButtonSizes.LARGE,
                        color: r.ButtonColors.PRIMARY,
                        onClick: c,
                        children: l,
                      })
                    : null,
                  null != n
                    ? (0, a.jsx)(r.Button, {
                        className: o.action,
                        color: r.Button.Colors.RED,
                        size: r.ButtonSizes.LARGE,
                        onClick: s,
                        children: n,
                      })
                    : null,
                ],
              }),
            ],
          });
        }
      }
      var f = c;
    },
    466857: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("77078"),
        u = n("381546"),
        o = n("229915"),
        d = n("782340"),
        c = n("717386");
      class f extends l.Component {
        render() {
          let {
              autoFocus: e,
              label: t,
              placeholder: n,
              searchTerm: l,
              inputClassName: s,
              className: f,
              onChange: h,
              onFocus: m,
              onBlur: p,
              onKeyPress: E,
              autoComplete: S,
              forwardedRef: g,
              closeIconClassName: C,
              searchIconClassName: _,
              cta: I,
            } = this.props,
            T = null != l && l.length > 0,
            v = null != g ? g : this._textInputRef;
          return (0, a.jsx)(r.FocusRing, {
            focusTarget: v,
            ringTarget: this._containerRef,
            children: (0, a.jsxs)("div", {
              className: i(c.searchBox, f),
              ref: this._containerRef,
              children: [
                (0, a.jsx)(r.TextInput, {
                  inputRef: v,
                  focusProps: { enabled: !1 },
                  name: "search",
                  maxLength: 100,
                  className: c.searchBoxInputWrapper,
                  inputClassName: i(c.searchBoxInput, s),
                  onChange: h,
                  onFocus: m,
                  onBlur: p,
                  onKeyPress: E,
                  value: T ? l : "",
                  placeholder: n,
                  autoFocus: e,
                  "aria-label": t,
                  autoComplete: S ? "on" : "off",
                }),
                null != I
                  ? (0, a.jsx)(r.Text, {
                      color: "text-muted",
                      variant: "text-xs/normal",
                      className: c.cta,
                      children: I,
                    })
                  : null,
                T
                  ? (0, a.jsx)(r.Clickable, {
                      onClick: this.handleClear,
                      className: c.clear,
                      "aria-label": d.default.Messages.SEARCH_CLEAR,
                      children: (0, a.jsx)(u.default, {
                        className: i(c.clearIcon, C),
                      }),
                    })
                  : (0, a.jsx)(o.default, {
                      className: i(c.searchIcon, _),
                      "aria-label": d.default.Messages.SEARCH,
                    }),
              ],
            }),
          });
        }
        constructor(...e) {
          super(...e),
            (this._textInputRef = l.createRef()),
            (this._containerRef = l.createRef()),
            (this.handleClear = () => {
              let { onClear: e, forwardedRef: t } = this.props,
                { current: n } = null != t ? t : this._textInputRef;
              null != n && n.focus(), null != e && e();
            });
        }
      }
      f.defaultProps = { autoComplete: !1 };
      var h = l.forwardRef((e, t) => (0, a.jsx)(f, { forwardedRef: t, ...e }));
    },
    466079: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("124299"),
        u = n("154462");
      let o = 16 / 9;
      function d(e, t) {
        return Math.floor((t - e) / (8 + e)) + 1;
      }
      function c(e, t, n) {
        let a = t - e;
        for (; a > 0; ) {
          let t = e,
            l = Math.floor(a / 2);
          n((t += l)) ? ((e = t + 1), (a -= l + 1)) : (a = l);
        }
        return e;
      }
      function f(e) {
        var t;
        let {
            className: n,
            children: s,
            keyExtractor: f,
            paddingTop: h = 0,
            paddingBottom: m = 0,
          } = e,
          [p, E] = l.useState({ width: 0, height: 0 }),
          { width: S, height: g } = p,
          C =
            null !== (t = null == s ? void 0 : s.length) && void 0 !== t
              ? t
              : 0,
          _ = S - 16,
          I = g - (h + m),
          {
            tileStyle: T,
            tileWidth: v,
            rows: x,
            columns: N,
          } = l.useMemo(
            () =>
              (function (e, t, n) {
                let {
                  rows: a,
                  columns: l,
                  tileWidth: s,
                } = (function (e, t, n) {
                  let a;
                  let l = Math.floor(t / 25);
                  a =
                    e > 25
                      ? c(l, t, e => {
                          let a = d(e, t),
                            l = (function (e, t) {
                              let n = e / o;
                              return Math.ceil((t - n) / (8 + n)) + 1;
                            })(e, n);
                          return a * l > 25;
                        })
                      : c(l, t, a => {
                          let l = d(a, t),
                            s = (function (e, t) {
                              let n = e / o;
                              return Math.floor((t - n) / (8 + n)) + 1;
                            })(a, n);
                          return l * s >= e;
                        }) - 1;
                  let s = d(a, t),
                    i = Math.ceil(e / s);
                  return { tileWidth: a, columns: Math.max(1, s), rows: i };
                })(e, t, n);
                return {
                  tileStyle: { width: s },
                  tileWidth: s,
                  rows: a,
                  columns: l,
                };
              })(C, _, I),
            [C, _, I]
          ),
          A = N + 1,
          M = A * v + (A - 1) * 8,
          R = M <= S,
          j = Math.floor(v / o) + 8,
          L = Math.max(0, I - j * x) / 2;
        return (0, a.jsx)(r.default, {
          fade: !0,
          className: n,
          listPadding: [h + L, 0, m + L - 8, 8],
          renderRow: function (e) {
            var t;
            let n = e * N;
            return (0, a.jsx)(
              "div",
              {
                className: u.row,
                children:
                  null == s
                    ? void 0
                    : null === (t = s.slice(n, n + N)) || void 0 === t
                      ? void 0
                      : t.map((e, t) => {
                          var l;
                          let s = n + t;
                          return (0, a.jsx)(
                            "div",
                            {
                              style: T,
                              className: i(u.tile, {
                                [u.padColumn]: R,
                                [u.noVerticalMargin]: s >= (x - 1) * N,
                                [u.noHorizontalMargin]:
                                  (s + 1) % N == 0 || s === C - 1,
                              }),
                              children: (0, a.jsx)("div", {
                                className: u.tileSizer,
                                children: e(v),
                              }),
                            },
                            null !== (l = null == f ? void 0 : f(s)) &&
                              void 0 !== l
                              ? l
                              : s
                          );
                        }),
              },
              e
            );
          },
          rowCount: x,
          rowCountBySection: [x],
          rowHeight: j,
          onResize: E,
        });
      }
    },
    512264: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          VideoStreamFit: function () {
            return a;
          },
          default: function () {
            return m;
          },
        }),
        n("222007");
      var a,
        l,
        s = n("37983"),
        i = n("884691"),
        r = n("414456"),
        u = n.n(r),
        o = n("77078"),
        d = n("103723"),
        c = n("474293"),
        f = n("757182");
      ((l = a || (a = {})).CONTAIN = "contain"), (l.COVER = "cover");
      let h = i.memo(function (e) {
        let {
            streamId: t,
            onResize: n,
            wrapperClassName: a,
            videoComponent: l,
            className: r,
            fit: h = "contain",
            mirror: m = !1,
            paused: p = !1,
            streamPreviewURL: E,
            videoSpinnerContext: S,
            userId: g,
          } = e,
          [C, _] = i.useState(!0),
          [I] = i.useState(() => new d.VideoSpinnerTimer("VideoStream"));
        i.useEffect(() => {
          !p &&
            (C
              ? I.onSpinnerStarted()
              : null != t && I.trackSpinnerDuration(S, g, t));
        }, [C, p, t, I, S, g]);
        let T = i.useCallback(() => {
          _(!1);
        }, []);
        return (0, s.jsxs)("div", {
          className: u(f.wrapper, a),
          children: [
            null != t &&
              (0, s.jsx)(l, {
                className: u(
                  f.video,
                  (0, c.getClass)(f, "video", h),
                  { [f.mirror]: m },
                  r
                ),
                streamId: t,
                onResize: n,
                onReady: T,
                paused: p,
              }),
            p
              ? null
              : (0, s.jsx)("div", {
                  className: u(f.previewWrapper, { [f.loading]: C }),
                  children:
                    C &&
                    (0, s.jsxs)(i.Fragment, {
                      children: [
                        null != E
                          ? (0, s.jsx)("img", {
                              src: E,
                              alt: "",
                              className: f.previewImage,
                            })
                          : (0, s.jsx)("div", {
                              className: f.emptyPreviewWrapper,
                              children: (0, s.jsx)("div", {
                                className: f.emptyPreview,
                              }),
                            }),
                        (0, s.jsx)(o.Spinner, { className: f.spinner }),
                      ],
                    }),
                }),
          ],
        });
      });
      var m = h;
    },
    998650: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("469563"),
        s = n("47115"),
        i = n("75196"),
        r = (0, l.replaceIcon)(
          function (e) {
            let {
              width: t = 24,
              height: n = 24,
              color: l = "currentColor",
              foreground: s,
              background: r,
              ...u
            } = e;
            return (0, a.jsxs)("svg", {
              ...(0, i.default)(u),
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              children: [
                (0, a.jsx)("path", {
                  className: s,
                  fill: l,
                  d: "M21.178 1.70703L22.592 3.12103L4.12103 21.593L2.70703 20.178L21.178 1.70703Z",
                }),
                (0, a.jsx)("path", {
                  className: r,
                  fill: l,
                  d: "M18 10.5283L10.5287 18H21V17C19.344 17 18 15.657 18 14V10.5283Z",
                }),
                (0, a.jsx)("path", {
                  className: r,
                  fill: l,
                  d: "M8.957 19.5718L9.52877 19H15.4449C14.7519 20.19 13.4759 21 11.9999 21C10.7748 21 9.68752 20.442 8.957 19.5718Z",
                }),
                (0, a.jsx)("path", {
                  className: r,
                  fill: l,
                  d: "M12 3C13.417 3 14.71 3.5 15.734 4.321L5.99805 14.058C5.99805 14.0479 5.99856 14.038 5.99907 14.0283C5.99956 14.0188 6.00005 14.0094 6.00005 14V9C6.00005 5.686 8.68605 3 12 3Z",
                }),
              ],
            });
          },
          s.BellSlashIcon,
          void 0,
          { size: 24 }
        );
    },
    887657: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("469563"),
        s = n("202998"),
        i = n("75196"),
        r = (0, l.replaceIcon)(
          function (e) {
            let {
              width: t = 24,
              height: n = 24,
              color: l = "currentColor",
              foreground: s,
              ...r
            } = e;
            return (0, a.jsx)("svg", {
              ...(0, i.default)(r),
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              children: (0, a.jsx)("path", {
                className: s,
                fill: l,
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M11 5V3C16.515 3 21 7.486 21 13H19C19 8.589 15.411 5 11 5ZM17 13H15C15 10.795 13.206 9 11 9V7C14.309 7 17 9.691 17 13ZM11 11V13H13C13 11.896 12.105 11 11 11ZM14 16H18C18.553 16 19 16.447 19 17V21C19 21.553 18.553 22 18 22H13C6.925 22 2 17.075 2 11V6C2 5.447 2.448 5 3 5H7C7.553 5 8 5.447 8 6V10C8 10.553 7.553 11 7 11H6C6.063 14.938 9 18 13 18V17C13 16.447 13.447 16 14 16Z",
              }),
            });
          },
          s.PhoneCallIcon,
          void 0,
          { size: 24 }
        );
    },
    570443: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("469563"),
        s = n("918703"),
        i = n("75196"),
        r = (0, l.replaceIcon)(
          function (e) {
            let {
              width: t = 24,
              height: n = 24,
              color: l = "currentColor",
              foreground: s,
              ...r
            } = e;
            return (0, a.jsx)("svg", {
              ...(0, i.default)(r),
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              children: (0, a.jsx)("path", {
                className: s,
                fill: l,
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M20.998 0V3H23.998V5H20.998V8H18.998V5H15.998V3H18.998V0H20.998ZM2.99805 20V24L8.33205 20H14.998C16.102 20 16.998 19.103 16.998 18V9C16.998 7.896 16.102 7 14.998 7H1.99805C0.894047 7 -0.00195312 7.896 -0.00195312 9V18C-0.00195312 19.103 0.894047 20 1.99805 20H2.99805Z",
              }),
            });
          },
          s.ChatPlusIcon,
          void 0,
          { size: 24 }
        );
    },
    717018: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("469563"),
        s = n("594881"),
        i = n("75196"),
        r = (0, l.replaceIcon)(
          function (e) {
            let {
              width: t = 16,
              height: n = 16,
              color: l = "currentColor",
              foreground: s,
              ...r
            } = e;
            return (0, a.jsxs)("svg", {
              ...(0, i.default)(r),
              width: t,
              height: n,
              viewBox: "0 0 16 16",
              children: [
                (0, a.jsx)("path", {
                  className: s,
                  fill: l,
                  d: "M6.78802 8.60547H2.54555C2.211 8.60547 1.93949 8.87699 1.93949 9.21154C1.93949 9.54608 2.211 9.8176 2.54555 9.8176H5.32498L1.511 13.6316C1.27433 13.8682 1.27433 14.2519 1.511 14.4886C1.62918 14.607 1.78433 14.6661 1.93949 14.6661C2.09464 14.6661 2.24979 14.607 2.36798 14.4886L6.18195 10.6746V13.454C6.18195 13.7886 6.45347 14.0601 6.78802 14.0601C7.12257 14.0601 7.39409 13.7886 7.39409 13.454V9.21154C7.39409 8.87699 7.12257 8.60547 6.78802 8.60547Z",
                }),
                (0, a.jsx)("path", {
                  className: s,
                  fill: l,
                  d: "M14.4891 1.50953C14.2524 1.27286 13.8687 1.27286 13.6321 1.50953L9.81809 5.32351V2.54409C9.81809 2.20954 9.54657 1.93802 9.21202 1.93802C8.87748 1.93802 8.60596 2.20954 8.60596 2.54409V6.78655C8.60596 7.1211 8.87748 7.39262 9.21202 7.39262H13.4545C13.789 7.39262 14.0606 7.1211 14.0606 6.78655C14.0606 6.45201 13.789 6.18049 13.4545 6.18049H10.6751L14.4891 2.36651C14.7257 2.12984 14.7257 1.7462 14.4891 1.50953Z",
                }),
              ],
            });
          },
          s.MinimizeIcon,
          void 0,
          { size: 16 }
        );
    },
    293499: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("469563"),
        s = n("26309"),
        i = n("75196"),
        r = (0, l.replaceIcon)(
          function (e) {
            let {
              width: t = 22,
              height: n = 20,
              color: l = "currentColor",
              ...s
            } = e;
            return (0, a.jsxs)("svg", {
              ...(0, i.default)(s),
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              children: [
                (0, a.jsx)("path", {
                  d: "M15.9829 8.45685C16.4834 8.9082 17.0602 9.27649 17.6918 9.53992C17.1979 10.7194 16.1545 11.6141 14.8834 11.9017C14.8022 11.8683 14.7203 11.8358 14.6378 11.8041C15.3982 10.8785 15.8873 9.72192 15.9829 8.45685Z",
                  fill: l,
                }),
                (0, a.jsx)("path", {
                  d: "M14 8C14 10.205 12.206 12 10 12C7.79501 12 6 10.205 6 8C6 5.79498 7.79401 4 10 4C12.206 4 14 5.79498 14 8Z",
                  fill: l,
                }),
                (0, a.jsx)("path", {
                  d: "M2 19C2 15.467 5.29001 13 10 13C14.711 13 18 15.467 18 19V20H2V19Z",
                  fill: l,
                }),
                (0, a.jsx)("path", {
                  d: "M22.0001 20H20.0001V19C20.0001 16.7999 19.0621 14.9067 17.5213 13.5292C20.2697 14.4355 22.0001 16.4374 22.0001 19V20Z",
                  fill: l,
                }),
                (0, a.jsx)("path", {
                  d: "M-439.135 -677.865L-436.999 -675.729H-442V-674.271H-436.999L-439.135 -672.135L-438 -671L-434 -675L-438 -679L-439.135 -677.865Z",
                  fill: l,
                }),
                (0, a.jsx)("path", {
                  d: "M-446 -677C-445.566 -677 -445.153 -676.908 -444.781 -676.743C-444.924 -676.186 -445 -675.602 -445 -675C-445 -673.096 -444.24 -671.37 -443.007 -670.108L-443.01 -668C-443.01 -666.34 -444.34 -665 -446 -665C-447.66 -665 -449 -666.34 -449 -668V-674C-449 -675.66 -447.66 -677 -446 -677Z",
                  fill: l,
                }),
                (0, a.jsx)("path", {
                  d: "M-446 -662.9C-443.24 -662.9 -440.7 -665 -440.7 -668H-439C-439 -664.58 -441.72 -661.76 -445 -661.28V-657H-447V-661.28C-450.28 -661.77 -453 -664.59 -453 -668H-451.3C-451.3 -665 -448.76 -662.9 -446 -662.9Z",
                  fill: l,
                }),
                (0, a.jsx)("path", {
                  d: "M22.8648 2.86484L20.7293 5.00126L20.7293 -1.42968e-07L19.2707 -2.06723e-07L19.2707 5.00126L17.1352 2.86484L16 4L20 8L24 4L22.8648 2.86484Z",
                  fill: l,
                }),
              ],
            });
          },
          s.GroupArrowDownIcon,
          void 0,
          { size: 22 }
        );
    },
    407691: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("469563"),
        s = n("821355"),
        i = n("75196"),
        r = (0, l.replaceIcon)(
          function (e) {
            let {
              width: t = 24,
              height: n = 24,
              color: l = "currentColor",
              foreground: s,
              ...r
            } = e;
            return (0, a.jsxs)("svg", {
              ...(0, i.default)(r),
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              fill: "none",
              children: [
                (0, a.jsx)("rect", {
                  className: s,
                  x: "4",
                  y: "4",
                  width: "7",
                  height: "7",
                  rx: "1",
                  fill: l,
                }),
                (0, a.jsx)("rect", {
                  className: s,
                  x: "4",
                  y: "13",
                  width: "7",
                  height: "7",
                  rx: "1",
                  fill: l,
                }),
                (0, a.jsx)("rect", {
                  className: s,
                  x: "13",
                  y: "4",
                  width: "7",
                  height: "7",
                  rx: "1",
                  fill: l,
                }),
                (0, a.jsx)("rect", {
                  className: s,
                  x: "13",
                  y: "13",
                  width: "7",
                  height: "7",
                  rx: "1",
                  fill: l,
                }),
              ],
            });
          },
          s.GridSquareIcon,
          void 0,
          { size: 24 }
        );
    },
    200639: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("469563"),
        s = n("838048"),
        i = n("75196"),
        r = (0, l.replaceIcon)(
          function (e) {
            let {
              width: t = 24,
              height: n = 24,
              color: l = "currentColor",
              foreground: s,
              ...r
            } = e;
            return (0, a.jsxs)("svg", {
              ...(0, i.default)(r),
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              children: [
                (0, a.jsx)("path", {
                  d: "M6.16204 15.0065C6.10859 15.0022 6.05455 15 6 15H4V12C4 7.588 7.589 4 12 4C13.4809 4 14.8691 4.40439 16.0599 5.10859L17.5102 3.65835C15.9292 2.61064 14.0346 2 12 2C6.486 2 2 6.485 2 12V19.1685L6.16204 15.0065Z",
                  fill: l,
                }),
                (0, a.jsx)("path", {
                  d: "M19.725 9.91686C19.9043 10.5813 20 11.2796 20 12V15H18C16.896 15 16 15.896 16 17V20C16 21.104 16.896 22 18 22H20C21.105 22 22 21.104 22 20V12C22 10.7075 21.7536 9.47149 21.3053 8.33658L19.725 9.91686Z",
                  fill: l,
                }),
                (0, a.jsx)("path", {
                  d: "M3.20101 23.6243L1.7868 22.2101L21.5858 2.41113L23 3.82535L3.20101 23.6243Z",
                  className: s,
                  fill: l,
                }),
              ],
            });
          },
          s.HeadphonesSlashIcon,
          void 0,
          { size: 24 }
        );
    },
    229997: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("469563"),
        s = n("831055"),
        i = n("75196"),
        r = (0, l.replaceIcon)(
          function (e) {
            let {
              width: t = 24,
              height: n = 24,
              color: l = "currentColor",
              foreground: s,
              ...r
            } = e;
            return (0, a.jsxs)("svg", {
              ...(0, i.default)(r),
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              fill: "none",
              children: [
                (0, a.jsx)("rect", {
                  className: s,
                  x: "3",
                  y: "3",
                  width: "18",
                  height: "10",
                  rx: "1",
                  fill: l,
                }),
                (0, a.jsx)("rect", {
                  className: s,
                  x: "3",
                  y: "15",
                  width: "8",
                  height: "6",
                  rx: "1",
                  fill: l,
                }),
                (0, a.jsx)("rect", {
                  className: s,
                  x: "13",
                  y: "15",
                  width: "8",
                  height: "6",
                  rx: "1",
                  fill: l,
                }),
              ],
            });
          },
          s.GridHorizontalIcon,
          void 0,
          { size: 24 }
        );
    },
    472037: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("469563"),
        s = n("565422"),
        i = n("75196"),
        r = (0, l.replaceIcon)(
          function (e) {
            let {
              width: t = 24,
              height: n = 24,
              color: l = "currentColor",
              foreground: s,
              ...r
            } = e;
            return (0, a.jsxs)("svg", {
              ...(0, i.default)(r),
              width: t,
              height: n,
              viewBox: "0 0 20 16",
              children: [
                (0, a.jsx)("path", {
                  d: "M15.428 8.127H4.368a.923.923 0 0 1-.921-.921c0-.576.533-.859 1.012-.931l8.656-1.754-.49-2.782L4.3 3.524C2.068 3.856.681 5.267.681 7.206a3.69 3.69 0 0 0 3.687 3.686h11.06a.922.922 0 0 1 0 1.843H2.063a.46.46 0 0 0-.461.461v1.843a.46.46 0 0 0 .46.461h13.364a3.686 3.686 0 1 0 0-7.373Z",
                  fill: l,
                  className: s,
                }),
                (0, a.jsx)("path", {
                  d: "M19.152 1.602a.46.46 0 0 0-.477-.38l-3.305.166-.089-.507a.46.46 0 0 0-.534-.374l-.907.16a.46.46 0 0 0-.374.534l.64 3.63a.46.46 0 0 0 .534.374l.908-.16a.46.46 0 0 0 .373-.534l-.09-.507 3.163-.974a.46.46 0 0 0 .318-.52l-.16-.908Z",
                  fill: l,
                  className: s,
                }),
              ],
            });
          },
          s.PaintbrushThinIcon,
          void 0,
          { size: 24 }
        );
    },
    97347: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("469563"),
        s = n("780624"),
        i = n("75196"),
        r = (0, l.replaceIcon)(
          function (e) {
            let {
              width: t = 24,
              height: n = 24,
              color: l = "currentColor",
              foreground: s,
              ...r
            } = e;
            return (0, a.jsxs)("svg", {
              ...(0, i.default)(r),
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              children: [
                (0, a.jsx)("path", {
                  d: "M6.7 11H5C5 12.19 5.34 13.3 5.9 14.28L7.13 13.05C6.86 12.43 6.7 11.74 6.7 11Z",
                  fill: l,
                }),
                (0, a.jsx)("path", {
                  d: "M9.01 11.085C9.015 11.1125 9.02 11.14 9.02 11.17L15 5.18V5C15 3.34 13.66 2 12 2C10.34 2 9 3.34 9 5V11C9 11.03 9.005 11.0575 9.01 11.085Z",
                  fill: l,
                }),
                (0, a.jsx)("path", {
                  d: "M11.7237 16.0927L10.9632 16.8531L10.2533 17.5688C10.4978 17.633 10.747 17.6839 11 17.72V22H13V17.72C16.28 17.23 19 14.41 19 11H17.3C17.3 14 14.76 16.1 12 16.1C11.9076 16.1 11.8155 16.0975 11.7237 16.0927Z",
                  fill: l,
                }),
                (0, a.jsx)("path", {
                  d: "M21 4.27L19.73 3L3 19.73L4.27 21L8.46 16.82L9.69 15.58L11.35 13.92L14.99 10.28L21 4.27Z",
                  className: s,
                  fill: l,
                }),
              ],
            });
          },
          s.MicrophoneSlashIcon,
          void 0,
          { size: 24 }
        );
    },
    267675: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("469563"),
        s = n("265614"),
        i = n("75196"),
        r = (0, l.replaceIcon)(
          function (e) {
            let {
              width: t = 24,
              height: n = 24,
              color: l = "currentColor",
              foreground: s,
              ...r
            } = e;
            return (0, a.jsx)("svg", {
              ...(0, i.default)(r),
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              children: (0, a.jsx)("path", {
                className: s,
                fill: l,
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M4 2.5C2.897 2.5 2 3.397 2 4.5V15.5C2 16.604 2.897 17.5 4 17.5H11V19.5H7V21.5H17V19.5H13V17.5H20C21.103 17.5 22 16.604 22 15.5V4.5C22 3.397 21.103 2.5 20 2.5H4ZM20 4.5V13.5H4V4.5H20Z",
              }),
            });
          },
          s.ScreenIcon,
          void 0,
          { size: 24 }
        );
    },
    821391: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        }),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("748820"),
        i = n("469563"),
        r = n("496061"),
        u = n("75196"),
        o = (0, i.replaceIcon)(
          function (e) {
            let {
                width: t = 24,
                height: n = 24,
                color: i = "currentColor",
                foreground: r,
                ...o
              } = e,
              [d] = l.useState(() => (0, s.v4)());
            return (0, a.jsxs)("svg", {
              ...(0, u.default)(o),
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              fill: "none",
              children: [
                (0, a.jsxs)("g", {
                  clipPath: "url(".concat(d, ")"),
                  children: [
                    (0, a.jsx)("path", {
                      fillRule: "evenodd",
                      clipRule: "evenodd",
                      d: "M2 4.49956C2 3.39656 2.897 2.49956 4 2.49956H16.3994L2.3179 16.5811C2.11679 16.2692 2 15.8979 2 15.4996L2 4.49956ZM7.88469 19.4996H11L11 17.4996H9.88469L22 5.38426L22 15.4996C22 16.6036 21.103 17.4996 20 17.4996L13 17.4996L13 19.4996L17 19.4996L17 21.4996H7L7 20.3843L7.88469 19.4996Z",
                      fill: i,
                    }),
                    (0, a.jsx)("rect", {
                      className: r,
                      x: "1.53553",
                      y: "20.1924",
                      width: "28",
                      height: "2",
                      transform: "rotate(-45 1.53553 20.1924)",
                      fill: "#ED4245",
                    }),
                  ],
                }),
                (0, a.jsx)("defs", {
                  children: (0, a.jsx)("clipPath", {
                    id: d,
                    children: (0, a.jsx)("rect", {
                      width: "24",
                      height: "24",
                      fill: "white",
                    }),
                  }),
                }),
              ],
            });
          },
          r.ScreenSlashIcon,
          void 0,
          { size: 24 }
        );
    },
    152224: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("469563"),
        s = n("559981"),
        i = n("75196"),
        r = (0, l.replaceIcon)(
          function (e) {
            let {
              width: t = 24,
              height: n = 24,
              color: l = "currentColor",
              foreground: s,
              ...r
            } = e;
            return (0, a.jsx)("svg", {
              ...(0, i.default)(r),
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              children: (0, a.jsx)("path", {
                className: s,
                fill: l,
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M20.2949 0.298996L21.7089 1.713L19.4169 4.006L21.7089 6.299L20.2949 7.713L18.0019 5.42L15.7099 7.713L14.2949 6.299L16.5879 4.006L14.2949 1.713L15.7099 0.298996L18.0019 2.592L20.2949 0.298996ZM8.00195 13.006C10.207 13.006 12.002 11.211 12.002 9.006C12.002 6.801 10.207 5.006 8.00195 5.006C5.79695 5.006 4.00195 6.801 4.00195 9.006C4.00195 11.211 5.79695 13.006 8.00195 13.006ZM8.00195 14.006C3.29095 14.006 0.00195312 16.473 0.00195312 20.006V21.006H16.002V20.006C16.002 16.473 12.713 14.006 8.00195 14.006Z",
              }),
            });
          },
          s.UserMinusIcon,
          void 0,
          { size: 24 }
        );
    },
    849483: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("469563"),
        s = n("392646"),
        i = n("75196"),
        r = (0, l.replaceIcon)(
          function (e) {
            let {
              width: t = 24,
              height: n = 24,
              color: l = "currentColor",
              foreground: s,
              ...r
            } = e;
            return (0, a.jsx)("svg", {
              ...(0, i.default)(r),
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              children: (0, a.jsxs)("g", {
                fill: "none",
                className: s,
                children: [
                  (0, a.jsx)("path", {
                    fillRule: "evenodd",
                    clipRule: "evenodd",
                    d: "M12 22C12.4883 22 12.9684 21.965 13.438 21.8974C12.5414 20.8489 12 19.4877 12 18C12 17.6593 12.0284 17.3252 12.083 17H6V16.0244C6 14.0732 10 13 12 13C12.6215 13 13.436 13.1036 14.2637 13.305C15.2888 12.4882 16.5874 12 18 12C19.4877 12 20.8489 12.5414 21.8974 13.438C21.965 12.9684 22 12.4883 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22ZM12 12C13.66 12 15 10.66 15 9C15 7.34 13.66 6 12 6C10.34 6 9 7.34 9 9C9 10.66 10.34 12 12 12Z",
                    fill: l,
                  }),
                  (0, a.jsx)("path", {
                    d: "M18 22C20.2091 22 22 20.2091 22 18C22 15.7909 20.2091 14 18 14C15.7909 14 14 15.7909 14 18C14 20.2091 15.7909 22 18 22Z",
                    fill: l,
                  }),
                ],
              }),
            });
          },
          s.UserCircleStatusIcon,
          void 0,
          { size: 24 }
        );
    },
    519794: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("469563"),
        s = n("543324"),
        i = n("75196"),
        r = (0, l.replaceIcon)(
          function (e) {
            let {
              width: t = 16,
              height: n = 16,
              color: l = "currentColor",
              foreground: s,
              ...r
            } = e;
            return (0, a.jsx)("svg", {
              ...(0, i.default)(r),
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              xmlns: "http://www.w3.org/2000/svg",
              children: (0, a.jsx)("g", {
                fill: "none",
                fillRule: "evenodd",
                children: (0, a.jsx)("path", {
                  className: s,
                  fill: l,
                  d: "M19 3H5V5H7V12H5V14H11V22H13V14H19V12H17V5H19V3Z",
                }),
              }),
            });
          },
          s.PinUprightIcon,
          void 0,
          { size: 16 }
        );
    },
    924506: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("469563"),
        s = n("903834"),
        i = n("75196"),
        r = (0, l.replaceIcon)(
          function (e) {
            let {
              width: t = 24,
              height: n = 24,
              color: l = "currentColor",
              foreground: s,
              ...r
            } = e;
            return (0, a.jsxs)("svg", {
              ...(0, i.default)(r),
              width: t,
              height: n,
              viewBox: "0 0 32 32",
              fill: "none",
              xmlns: "http://www.w3.org/2000/svg",
              children: [
                (0, a.jsx)("path", {
                  d: "M5.66747 20.3625C4.60336 21.4277 4.25395 25.5781 4.25395 25.5781C4.25395 25.5781 8.40516 25.2302 9.47018 24.165C9.96634 23.6697 10.2203 23.0275 10.2539 22.3785L7.46675 22.3647L7.4522 19.5781C6.80337 19.6118 6.16363 19.8662 5.66747 20.3625Z",
                  fill: l,
                  className: s,
                }),
                (0, a.jsx)("path", {
                  fillRule: "evenodd",
                  clipRule: "evenodd",
                  d: "M7.18187 16.9929L12.8389 22.6489L14.253 21.2347L15.3137 25.8309L17.0815 24.0632V18.4063L20.6171 14.8707C22.0313 13.4566 24.8598 10.0617 23.4455 6.38545C19.7684 4.97117 16.3744 7.79971 14.9606 9.21422L7.18187 16.9929ZM18.3172 13.5111C19.4217 13.5111 20.3172 12.6156 20.3172 11.5111C20.3172 10.4065 19.4217 9.51106 18.3172 9.51106C17.2126 9.51106 16.3172 10.4065 16.3172 11.5111C16.3172 12.6156 17.2126 13.5111 18.3172 13.5111Z",
                  fill: l,
                  className: s,
                }),
                (0, a.jsx)("path", {
                  d: "M11.4246 12.7495H5.76775L4 14.5172L8.59617 15.5779L11.4246 12.7495Z",
                  fill: l,
                  className: s,
                }),
                (0, a.jsx)("path", {
                  d: "M25 18V21H28V23H25V26H23V23H20V21H23V18H25Z",
                  fill: l,
                  className: s,
                }),
              ],
            });
          },
          s.ActivitiesPlusIcon,
          void 0,
          { size: 24 }
        );
    },
    394640: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("469563"),
        s = n("283322"),
        i = n("75196"),
        r = (0, l.replaceIcon)(
          function (e) {
            let {
              width: t = 24,
              height: n = 24,
              color: l = "currentColor",
              className: s,
              foreground: r,
              ...u
            } = e;
            return (0, a.jsx)("svg", {
              ...(0, i.default)(u),
              className: s,
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              children: (0, a.jsx)("path", {
                className: r,
                fill: l,
                d: "M22 16.53C22 18.3282 20.2485 19.7837 18.089 19.7837C15.9285 19.7837 14.5396 18.3277 14.5396 16.53C14.5396 14.7319 15.9286 13.2746 18.089 13.2746C18.7169 13.2746 19.3089 13.4013 19.8353 13.6205V5.814L9.46075 7.32352V18.7449C9.46075 20.5424 7.70957 22 5.54941 22C3.38871 22 2 20.5443 2 18.7456C2 16.9481 3.3892 15.4898 5.54941 15.4898C6.17823 15.4898 6.76966 15.6162 7.29604 15.836C7.29604 11.3608 7.29604 8.5366 7.29604 4.1395L21.9996 2L22 16.53Z",
              }),
            });
          },
          s.MusicIcon,
          void 0,
          { size: 24 }
        );
    },
    343571: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("469563"),
        s = n("473109"),
        i = n("75196"),
        r = (0, l.replaceIcon)(
          function (e) {
            let {
              width: t = 24,
              height: n = 24,
              color: l = "currentColor",
              slashColor: s,
              className: r,
              foreground: u,
              ...o
            } = e;
            return (0, a.jsxs)("svg", {
              ...(0, i.default)(o),
              className: r,
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              children: [
                (0, a.jsx)("path", {
                  className: u,
                  fill: l,
                  fillRule: "evenodd",
                  clipRule: "evenodd",
                  d: "M5.25208 21.9906C5.34946 21.9968 5.44859 22 5.54939 22C7.70956 22 9.46073 20.5424 9.46073 18.7449V17.782L5.25208 21.9906ZM11.7699 6.98753L9.46073 7.32352V9.29667L7.29603 11.4614V4.13949L15.8647 2.89267L11.7699 6.98753ZM19.8353 7.4074V13.6205C19.3089 13.4013 18.7169 13.2746 18.089 13.2746C15.9286 13.2746 14.5395 14.7319 14.5395 16.53C14.5395 18.3277 15.9284 19.7837 18.089 19.7837C20.2485 19.7837 22 18.3282 22 16.53L21.9996 5.24304L19.8353 7.4074Z",
                }),
                (0, a.jsx)("rect", {
                  fill: null != s ? s : l,
                  x: "2.80762",
                  y: "18.7783",
                  width: "24",
                  height: "2",
                  transform: "rotate(-45 2.80762 18.7783)",
                }),
              ],
            });
          },
          s.MusicSlashIcon,
          void 0,
          { size: 24 }
        );
    },
    625687: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("75196");
      function s(e) {
        let {
          width: t = 32,
          height: n = 32,
          color: s = "currentColor",
          foreground: i,
          ...r
        } = e;
        return (0, a.jsxs)("svg", {
          ...(0, l.default)(r),
          width: t,
          height: n,
          viewBox: "0 0 32 32",
          children: [
            (0, a.jsx)("rect", {
              width: "32",
              height: "32",
              rx: "16",
              fill: s,
            }),
            (0, a.jsx)("path", {
              d: "M23 9.99995C19.56 9.99995 16.826 6.43495 16.799 6.39795C16.421 5.89795 15.579 5.89795 15.201 6.39795C15.174 6.43495 12.44 9.99995 9 9.99995C8.447 9.99995 8 10.4479 8 10.9999V17.9999C8 21.8069 14.764 25.4779 15.534 25.8839C15.68 25.9609 15.84 25.9979 16 25.9979C16.16 25.9979 16.32 25.9599 16.466 25.8839C17.236 25.4779 24 21.8069 24 17.9999V10.9999C24 10.4479 23.553 9.99995 23 9.99995ZM19 19.9999L16 17.9999L13 19.9999L14 16.9999L12 14.9999H15L16 11.9999L17 14.9999H20L18 16.9999L19 19.9999Z",
              className: i,
            }),
          ],
        });
      }
    },
    393900: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("669491"),
        s = n("469563"),
        i = n("382269"),
        r = n("75196"),
        u = (0, s.replaceIcon)(
          function (e) {
            let {
              width: t = 24,
              height: n = 24,
              color: s = "currentColor",
              foregroundColor: i = l.default.unsafe_rawColors.RED_400.css,
              foreground: u,
              background: o,
              ...d
            } = e;
            return (0, a.jsxs)("svg", {
              ...(0, r.default)(d),
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              xmlns: "http://www.w3.org/2000/svg",
              children: [
                (0, a.jsx)("g", {
                  fill: "none",
                  fillRule: "evenodd",
                  children: (0, a.jsx)("path", {
                    className: u,
                    fill: i,
                    d: "M21.47,3.39,20.14,2.05,2.53,19.66,3.86,21l4.41-4.4,1.3-1.31,1.75-1.74,3.83-3.83Z",
                  }),
                }),
                (0, a.jsxs)("g", {
                  fill: "none",
                  children: [
                    (0, a.jsx)("polygon", {
                      points:
                        "17 11.14 16.55 11.59 14.14 14 19 14 19 12 17 12 17 11.14",
                      className: o,
                      fill: s,
                    }),
                    (0, a.jsx)("polygon", {
                      points:
                        "16.91 3 5 3 5 5 7 5 7 12 5 12 5 14 5.91 14 16.91 3",
                      className: o,
                      fill: s,
                    }),
                    (0, a.jsx)("polygon", {
                      points:
                        "12.72 15.42 11 17.14 11 22 13 22 13 15.14 12.72 15.42",
                      className: o,
                      fill: s,
                    }),
                  ],
                }),
              ],
            });
          },
          i.PinUprightSlashIcon,
          void 0,
          { size: 24 }
        );
    },
    763984: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("469563"),
        s = n("392800"),
        i = n("75196"),
        r = (0, l.replaceIcon)(
          function (e) {
            let {
              width: t = 24,
              height: n = 24,
              color: l = "currentColor",
              foreground: s,
              ...r
            } = e;
            return (0, a.jsxs)("svg", {
              ...(0, i.default)(r),
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              fill: "none",
              children: [
                (0, a.jsx)("rect", {
                  className: s,
                  x: "1",
                  y: "4",
                  width: "13",
                  height: "16",
                  rx: "2",
                  fill: l,
                }),
                (0, a.jsx)("rect", {
                  className: s,
                  x: "16",
                  y: "4",
                  width: "7",
                  height: "7",
                  rx: "1",
                  fill: l,
                }),
                (0, a.jsx)("rect", {
                  className: s,
                  x: "16",
                  y: "13",
                  width: "7",
                  height: "7",
                  rx: "1",
                  fill: l,
                }),
              ],
            });
          },
          s.GridVerticalIcon,
          void 0,
          { size: 24 }
        );
    },
    823050: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return p;
          },
        });
      var a,
        l,
        s = n("37983"),
        i = n("884691"),
        r = n("414456"),
        u = n.n(r),
        o = n("77078"),
        d = n("200639"),
        c = n("97347"),
        f = n("587974"),
        h = n("688843");
      ((a = l || (l = {}))[(a.OUTGOING = 0)] = "OUTGOING"),
        (a[(a.INCOMING = 1)] = "INCOMING");
      class m extends i.PureComponent {
        renderStatus() {
          let { muted: e, deafen: t } = this.props,
            n = t ? d.default : c.default;
          return e || t
            ? (0, s.jsx)(n, { className: h.status }, "status")
            : null;
        }
        renderBorder() {
          let { speaking: e } = this.props;
          return (0, s.jsx)(
            "div",
            { className: u(h.border, { [h.speaking]: e }) },
            "border"
          );
        }
        renderMask() {
          let { muted: e, speaking: t, deafen: n } = this.props;
          return e && t
            ? (0, s.jsxs)(s.Fragment, {
                children: [this.renderBorder(), this.renderStatus()],
              })
            : e || n
              ? (0, s.jsx)(s.Fragment, { children: this.renderStatus() })
              : (0, s.jsx)(s.Fragment, { children: this.renderBorder() });
        }
        renderVoiceCallAvatar() {
          let {
              src: e,
              disabled: t,
              ringing: n,
              ringingType: a,
              avatarClassName: l,
              muted: i,
              deafen: r,
              size: d,
              renderIcon: c,
            } = this.props,
            m = (0, o.getAvatarSize)(d),
            p = (0, s.jsx)("img", {
              src: e,
              alt: " ",
              className: u(h.voiceAvatar, l, {
                [h.ringingOutgoing]: n && 0 === a,
              }),
            });
          if (t) return p;
          let E = f.MaskIDs.AVATAR_DEFAULT;
          return (
            null != c
              ? (E =
                  d === o.AvatarSizes.SIZE_32
                    ? f.MaskIDs.AVATAR_CALL_ICON_32
                    : f.MaskIDs.AVATAR_CALL_ICON)
              : (i || r) && (E = f.MaskIDs.AVATAR_VOICE_CALL_80),
            (0, s.jsxs)("div", {
              className: h.callAvatarMaskContainer,
              children: [
                (0, s.jsxs)(f.default, {
                  className: h.callAvatarMask,
                  width: m,
                  height: m,
                  mask: E,
                  children: [null == c ? void 0 : c(), p],
                }),
                this.renderMask(),
              ],
            })
          );
        }
        render() {
          let {
              size: e,
              onClick: t,
              style: n,
              onContextMenu: a,
              className: l,
              ringingType: i,
              ringing: r,
            } = this.props,
            d = u(
              h.wrapper,
              {
                [h.clickable]: null != t,
                [h.ringingOutgoing]: r && 0 === i,
                [h.ringingIncoming]: r && 1 === i,
              },
              l
            ),
            c = (0, o.getAvatarSize)(e),
            f = { height: c, width: c, ...n };
          return (0, s.jsx)("div", {
            style: f,
            onContextMenu: a,
            className: d,
            children: this.renderVoiceCallAvatar(),
          });
        }
      }
      (m.defaultProps = {
        size: o.AvatarSizes.SIZE_80,
        ringingType: 0,
        speaking: !1,
        soundsharing: !1,
        ringing: !1,
        muted: !1,
        deafen: !1,
        hasVideo: !1,
        mirror: !1,
        disabled: !1,
        paused: !1,
      }),
        (m.RingingType = l);
      var p = m;
    },
    68148: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          VoiceUserList: function () {
            return b;
          },
          default: function () {
            return F;
          },
        }),
        n("424973"),
        n("702976"),
        n("222007");
      var a = n("37983"),
        l = n("884691"),
        s = n("414456"),
        i = n.n(s),
        r = n("966900"),
        u = n("838048"),
        o = n("359902"),
        d = n("780624"),
        c = n("120606"),
        f = n("77078"),
        h = n("811425"),
        m = n("204947"),
        p = n("716241"),
        E = n("808742"),
        S = n("342845"),
        g = n("953109"),
        C = n("437825"),
        _ = n("142303"),
        I = n("462579"),
        T = n("200639"),
        v = n("97347"),
        x = n("998564"),
        N = n("420145"),
        A = n("82636"),
        M = n("980423"),
        R = n("568734"),
        j = n("158998"),
        L = n("49111"),
        y = n("99795"),
        O = n("171644"),
        P = n("782340"),
        D = n("274750");
      let b = e => {
          let { children: t, collapsed: n = !1, className: l } = e;
          return (0, a.jsx)("div", {
            className: i(l, D.list, n ? D.listCollapse : D.listDefault),
            role: "group",
            children: t,
          });
        },
        U = e => {
          let { hangStatusActivity: t, iconClassName: n, isSelf: l } = e;
          return l && null == t
            ? (0, a.jsx)(
                f.TooltipContainer,
                {
                  className: D.iconSpacing,
                  text: P.default.Messages.HANG_STATUS_VC_ROW_ADD,
                  children: (0, a.jsx)(c.PlusLargeIcon, {
                    className: i(D.icon, n),
                  }),
                },
                "add-status"
              )
            : (0, a.jsx)(
                f.TooltipContainer,
                {
                  className: D.iconSpacing,
                  text: (0, E.getHangStatusText)(t),
                  children: (0, a.jsx)(S.default, {
                    hangStatusActivity: t,
                    className: i(D.hangStatusIcon, n),
                  }),
                },
                "hang-status"
              );
        };
      class w extends l.Component {
        renderPrioritySpeaker() {
          let {
            speaking: e,
            priority: t,
            collapsed: n,
            mute: l,
            serverMute: s,
          } = this.props;
          return t && !n
            ? (0, a.jsx)(f.Tooltip, {
                text: P.default.Messages.PRIORITY_SPEAKER,
                children: t =>
                  (0, a.jsx)("div", {
                    className: i(D.iconPriortySpeaker, {
                      [D.iconPriortySpeakerSpeaking]: !l && !s && e,
                    }),
                    ...t,
                  }),
              })
            : null;
        }
        renderAvatar() {
          let {
            speaking: e,
            user: t,
            size: n,
            avatarContainerClass: l,
            guildId: s,
          } = this.props;
          return (0, a.jsx)("div", {
            className: i(l, D.avatar, {
              [D.avatarLarge]: n === L.OverlayAvatarSizes.LARGE,
              [D.avatarSmall]: n === L.OverlayAvatarSizes.SMALL,
              [D.avatarSpeaking]: e,
            }),
            style: {
              backgroundImage: "url(".concat(
                t.getAvatarURL(s, n === L.OverlayAvatarSizes.LARGE ? 38 : 24),
                ")"
              ),
            },
          });
        }
        renderName() {
          let {
            nick: e,
            user: t,
            collapsed: n,
            speaking: l,
            userNameClassName: s,
            mute: r,
            serverMute: u,
            isGuest: o,
          } = this.props;
          return n
            ? null
            : (0, a.jsxs)("div", {
                className: i(s, {
                  [D.username]: !0,
                  [D.usernameSpeaking]: !r && !u && l,
                }),
                children: [
                  null != e ? e : j.default.getName(t),
                  o
                    ? (0, a.jsxs)("span", {
                        className: D.guestSuffix,
                        children: [
                          "\xa0",
                          P.default.Messages.GUEST_NAME_SUFFIX,
                        ],
                      })
                    : "",
                ],
              });
        }
        renderIcons() {
          let {
            mute: e,
            localMute: t,
            localVideoDisabled: n,
            serverMute: l,
            deaf: s,
            serverDeaf: r,
            collapsed: u,
            video: o,
            isStreaming: d,
            disabled: c,
            isWatching: h,
            iconClassName: p,
            embeddedApplication: E,
            otherClientSessionType: S,
            voicePlatform: g,
            hangStatusActivity: T,
            showHangStatus: v,
            isSelf: j,
            application: b,
            guildId: w,
            channelId: F,
            user: B,
            handleHoverHangStatus: G,
          } = this.props;
          if (u || c) return null;
          let H = [],
            W = (0, a.jsx)(k, {
              iconClassName: p,
              mute: e,
              localMute: t,
              serverMute: l,
              deaf: s,
              serverDeaf: r,
            });
          o &&
            (n
              ? H.push(
                  (0, a.jsx)(
                    f.TooltipContainer,
                    {
                      className: D.iconSpacing,
                      text: P.default.Messages.LOCAL_VIDEO_DISABLED,
                      children: (0, a.jsx)(_.default, {
                        className: i(D.icon, p),
                        foreground: D.strikethrough,
                      }),
                    },
                    "video"
                  )
                )
              : H.push(
                  (0, a.jsx)(
                    f.TooltipContainer,
                    {
                      className: D.iconSpacing,
                      text: P.default.Messages.VIDEO,
                      children: (0, a.jsx)(C.default, {
                        className: i(D.icon, p),
                      }),
                    },
                    "video"
                  )
                )),
            null != E &&
              H.push(
                (0, a.jsx)(
                  f.TooltipContainer,
                  {
                    text: (0, m.default)(E.name),
                    className: D.iconSpacing,
                    children: (0, a.jsx)(A.default, {
                      className: i(D.icon, p),
                    }),
                  },
                  "activity"
                )
              ),
            S === O.GameConsoleTypes.XBOX || g === y.VoicePlatforms.XBOX
              ? H.push(
                  (0, a.jsx)(
                    "div",
                    {
                      className: i(D.iconSpacing),
                      children: (0, a.jsx)(N.default, {
                        className: i(D.icon, p),
                      }),
                    },
                    "xbox"
                  )
                )
              : (S === O.GameConsoleTypes.PLAYSTATION ||
                  g === y.VoicePlatforms.PLAYSTATION) &&
                H.push(
                  (0, a.jsx)(
                    "div",
                    {
                      className: i(D.iconSpacing),
                      children: (0, a.jsx)(x.default, {
                        className: i(D.icon, p),
                      }),
                    },
                    "playstation"
                  )
                ),
            d
              ? H.push(
                  (0, a.jsx)(
                    "div",
                    {
                      className: i(D.iconSpacing, D.liveIconSpacing),
                      children: (0, a.jsx)(M.default, {
                        size: M.default.Sizes.SMALL,
                      }),
                    },
                    "stream"
                  )
                )
              : h &&
                H.push(
                  (0, a.jsx)(
                    f.TooltipContainer,
                    {
                      className: D.iconSpacing,
                      text: P.default.Messages.WATCH_STREAM_WATCHING,
                      children: (0, a.jsx)(I.default, {
                        className: i(D.icon, p),
                      }),
                    },
                    "watch"
                  )
                );
          let Y =
              null != b &&
              !(0, R.hasFlag)(b.flags, L.ApplicationFlags.EMBEDDED),
            z = null == T && Y;
          return 0 !== H.length || null != W || v || z
            ? (0, a.jsxs)("div", {
                className: D.icons,
                children: [
                  (0, a.jsxs)("div", {
                    className: D.iconGroup,
                    onMouseEnter: () => (null == G ? void 0 : G(!1)),
                    children: [W, H],
                  }),
                  v || z
                    ? (0, a.jsx)("div", {
                        className: D.iconGroup,
                        onMouseEnter: () => (null == G ? void 0 : G(!0)),
                        children: z
                          ? (0, a.jsx)(
                              V,
                              {
                                application: b,
                                iconClassName: p,
                                guildId: w,
                                channelId: F,
                                userId: B.id,
                              },
                              "".concat(B.id, "-game")
                            )
                          : (0, a.jsx)(U, {
                              hangStatusActivity: T,
                              iconClassName: p,
                              isSelf: j,
                            }),
                      })
                    : null,
                ],
              })
            : null;
        }
        render() {
          let {
            onClick: e,
            onKeyDown: t,
            flipped: n,
            size: l,
            className: s,
            selected: r,
            disabled: u,
            overlap: o,
            "aria-label": d,
            tabIndex: c,
          } = this.props;
          return (0, a.jsx)(f.Clickable, {
            className: i(s, {
              [D.voiceUser]: !0,
              [D.overlap]: o,
              [D.selected]: r,
              [D.clickable]: null != e,
              [D.userSmall]: l === L.OverlayAvatarSizes.SMALL,
              [D.userLarge]: l === L.OverlayAvatarSizes.LARGE,
              [D.disabled]: !r && u,
            }),
            onClick: this.handleClick,
            onDoubleClick: this.handleDoubleClick,
            onContextMenu: this.handleContextMenu,
            onMouseEnter: this.handleMouseEnter,
            onMouseLeave: this.handleMouseLeave,
            onMouseDown: this.handleMouseDown,
            onKeyDown: t,
            "aria-label": d,
            tabIndex: c,
            children: (0, a.jsxs)("div", {
              className: i(D.content, { [D.flipped]: n }),
              children: [
                this.renderPrioritySpeaker(),
                this.renderAvatar(),
                this.renderName(),
                this.renderIcons(),
              ],
            }),
          });
        }
        constructor(...e) {
          super(...e),
            (this.handleClick = e => {
              let { onClick: t, user: n } = this.props;
              null == t || t(e, n);
            }),
            (this.handleDoubleClick = e => {
              let { onDoubleClick: t, user: n } = this.props;
              null == t || t(e, n);
            }),
            (this.handleContextMenu = e => {
              let { onContextMenu: t, user: n } = this.props;
              null == t || t(e, n);
            }),
            (this.handleMouseLeave = e => {
              let { onMouseLeave: t, user: n } = this.props;
              null == t || t(e, n);
            }),
            (this.handleMouseEnter = e => {
              let { onMouseEnter: t, user: n } = this.props;
              null == t || t(e, n);
            }),
            (this.handleMouseDown = e => {
              let { onMouseDown: t, user: n } = this.props;
              null == t || t(e, n);
            });
        }
      }
      w.defaultProps = {
        avatarContainerClass: D.avatarContainer,
        userNameClassName: D.usernameFont,
        size: L.OverlayAvatarSizes.SMALL,
        selected: !1,
        disabled: !1,
      };
      var F = w;
      function V(e) {
        let {
            application: t,
            iconClassName: n,
            guildId: s,
            channelId: r,
            userId: u,
          } = e,
          [o, d] = l.useState(!1),
          c = (0, h.useIsVisible)(e => d(e));
        return (
          l.useEffect(() => {
            o &&
              p.default.trackWithMetadata(
                L.AnalyticEvents.VOICE_CHANNEL_GAME_ACTIVITY_INDICATOR_VIEWED,
                { channel_id: r, guild_id: s, user_id: u }
              );
          }, [t.id, r, s, u, o]),
          (0, a.jsx)(f.TooltipContainer, {
            text: P.default.Messages.UNFORMATTED_PLAYING_GAME.format({
              game: t.name,
            }),
            "aria-label": P.default.Messages.UNFORMATTED_PLAYING_GAME.format({
              game: t.name,
            }),
            className: D.iconSpacing,
            children: (0, a.jsx)("div", {
              ref: c,
              children: (0, a.jsx)(g.default, {
                className: i(D.icon, n),
                game: t,
                size: g.default.Sizes.XSMALL,
                onMouseEnter: () => {
                  p.default.trackWithMetadata(
                    L.AnalyticEvents
                      .VOICE_CHANNEL_GAME_ACTIVITY_INDICATOR_HOVERED,
                    {
                      channel_id: r,
                      guild_id: s,
                      game_name: t.name,
                      user_id: u,
                    }
                  );
                },
              }),
            }),
          })
        );
      }
      function k(e) {
        let {
            iconClassName: t,
            mute: n,
            localMute: l,
            serverMute: s,
            deaf: c,
            serverDeaf: h,
          } = e,
          m = (0, f.useRedesignIconContext)().enabled,
          p = [];
        if (n) {
          let e;
          if (m) {
            let n;
            (n = s
              ? o.MicrophoneDenyIcon
              : l
                ? o.MicrophoneDenyIcon
                : d.MicrophoneSlashIcon),
              (e = (0, a.jsx)(n, {
                className: i(D.icon, t, { [D.iconServer]: s }),
                color: "currentColor",
              }));
          } else
            e = (0, a.jsx)(v.default, {
              className: i(D.icon, t, { [D.iconServer]: s }),
              foreground: l ? D.strikethrough : void 0,
            });
          p.push(
            (0, a.jsx)(
              f.TooltipContainer,
              {
                text: l
                  ? P.default.Messages.LOCAL_MUTED
                  : s
                    ? P.default.Messages.SERVER_MUTED
                    : P.default.Messages.VOICE_CHANNEL_MUTED,
                className: D.iconSpacing,
                children: e,
              },
              "mute"
            )
          );
        }
        if (h || c) {
          let e;
          if (m) {
            let n = h ? r.HeadphonesDenyIcon : u.HeadphonesSlashIcon;
            e = (0, a.jsx)(n, {
              className: i(D.icon, t, { [D.iconServer]: h }),
              color: "currentColor",
            });
          } else
            e = (0, a.jsx)(T.default, {
              className: i(D.icon, t, { [D.iconServer]: h }),
            });
          p.push(
            (0, a.jsx)(
              f.TooltipContainer,
              {
                className: D.iconSpacing,
                text: h
                  ? P.default.Messages.SERVER_DEAFENED
                  : P.default.Messages.VOICE_CHANNEL_DEAFENED,
                children: e,
              },
              "deaf"
            )
          );
        }
        return 0 === p.length ? null : (0, a.jsx)(a.Fragment, { children: p });
      }
    },
    519812: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getRecipients: function () {
            return i;
          },
        }),
        n("843762");
      var a = n("917351"),
        l = n.n(a),
        s = n("449008");
      function i(e, t) {
        return l(e)
          .map(t.getUser)
          .unshift(t.getCurrentUser())
          .filter(s.isNotNullish)
          .sortBy(e => e.username.toLowerCase())
          .value();
      }
    },
    462980: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ActivitiesPlusIcon: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("669491"),
        s = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = l.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...u
        } = e;
        return (0, a.jsxs)("svg", {
          ...(0, s.default)(u),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: [
            (0, a.jsx)("path", {
              fill: "string" == typeof i ? i : i.css,
              fillRule: "evenodd",
              d: "M22 4v1.51a6 6 0 0 1-1.76 4.25l-4.1 4.1a.5.5 0 0 0-.14.35v1.29a.5.5 0 0 1-.5.5H15a3 3 0 0 0-3 3c0 .21-.3.26-.36.07l-.8-2.17a.5.5 0 0 0-.12-.18l-3.46-3.46a.5.5 0 0 0-.17-.11l-4.8-1.85a.5.5 0 0 1-.15-.85l2.02-1.73A3 3 0 0 1 6.1 8h3.68a.5.5 0 0 0 .36-.15l4.1-4.1A6 6 0 0 1 18.48 2H20a2 2 0 0 1 2 2Zm-5 5a2 2 0 1 0 0-4 2 2 0 0 0 0 4Z",
              clipRule: "evenodd",
              className: r,
            }),
            (0, a.jsx)("path", {
              fill: "string" == typeof i ? i : i.css,
              d: "M9 19a1 1 0 0 0-1-1H7a1 1 0 0 1-1-1v-1a1 1 0 0 0-1-1 3 3 0 0 0-3 3v3a1 1 0 0 0 1 1h3a3 3 0 0 0 3-3ZM19 14a1 1 0 0 1 1 1v3h3a1 1 0 0 1 0 2h-3v3a1 1 0 0 1-2 0v-3h-3a1 1 0 1 1 0-2h3v-3a1 1 0 0 1 1-1Z",
              className: r,
            }),
          ],
        });
      };
    },
    7865: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          BellSlashIcon: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("669491"),
        s = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = l.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...u
        } = e;
        return (0, a.jsx)("svg", {
          ...(0, s.default)(u),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: (0, a.jsx)("path", {
            fill: "string" == typeof i ? i : i.css,
            d: "M1.3 21.3a1 1 0 1 0 1.4 1.4l20-20a1 1 0 0 0-1.4-1.4l-20 20ZM3.13 16.13c.11.27.46.28.66.08L15.73 4.27a.47.47 0 0 0-.07-.74 6.97 6.97 0 0 0-1.35-.64.62.62 0 0 1-.38-.43 2 2 0 0 0-3.86 0 .62.62 0 0 1-.38.43A7 7 0 0 0 5 9.5v2.09a.5.5 0 0 1-.13.33l-1.1 1.22A3 3 0 0 0 3 15.15v.28c0 .24.04.48.13.7ZM18.64 9.36c.13-.13.36-.05.36.14v2.09c0 .12.05.24.13.33l1.1 1.22a3 3 0 0 1 .77 2.01v.28c0 .67-.34 1.29-.95 1.56-1.31.6-4 1.51-8.05 1.51-.46 0-.9-.01-1.33-.03a.48.48 0 0 1-.3-.83l8.27-8.28ZM9.18 19.84A.16.16 0 0 0 9 20a3 3 0 1 0 6 0c0-.1-.09-.17-.18-.16a24.84 24.84 0 0 1-5.64 0Z",
            className: r,
          }),
        });
      };
    },
    716156: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          CameraIcon: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("669491"),
        s = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = l.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...u
        } = e;
        return (0, a.jsxs)("svg", {
          ...(0, s.default)(u),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: [
            (0, a.jsx)("path", {
              fill: "string" == typeof i ? i : i.css,
              d: "M15 13a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z",
              className: r,
            }),
            (0, a.jsx)("path", {
              fill: "string" == typeof i ? i : i.css,
              fillRule: "evenodd",
              d: "M7.17 4.66A3 3 0 0 1 9.85 3h4.3a3 3 0 0 1 2.68 1.66c.34.69.94 1.34 1.71 1.34H20a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3H4a3 3 0 0 1-3-3V9a3 3 0 0 1 3-3h1.46c.77 0 1.37-.65 1.71-1.34ZM17 13a5 5 0 1 1-10 0 5 5 0 0 1 10 0Z",
              clipRule: "evenodd",
              className: r,
            }),
          ],
        });
      };
    },
    824718: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ChatPlusIcon: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("669491"),
        s = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = l.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...u
        } = e;
        return (0, a.jsxs)("svg", {
          ...(0, s.default)(u),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: [
            (0, a.jsx)("path", {
              d: "M19 14a1 1 0 0 1 1 1v3h3a1 1 0 1 1 0 2h-3v3a1 1 0 1 1-2 0v-3h-3a1 1 0 1 1 0-2h3v-3a1 1 0 0 1 1-1Z",
              fill: "string" == typeof i ? i : i.css,
              className: r,
            }),
            (0, a.jsx)("path", {
              d: "M20.76 12.57c.4.3 1.23.13 1.24-.37V12a10 10 0 1 0-18.44 5.36c.12.19.1.44-.04.61l-2.07 2.37A1 1 0 0 0 2.2 22h10c.5-.01.67-.84.37-1.24A3 3 0 0 1 15 16h.5a.5.5 0 0 0 .5-.5V15a3 3 0 0 1 4.76-2.43Z",
              fill: "string" == typeof i ? i : i.css,
              className: r,
            }),
          ],
        });
      };
    },
    364991: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ChevronLargeRightIcon: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("669491"),
        s = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = l.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...u
        } = e;
        return (0, a.jsx)("svg", {
          ...(0, s.default)(u),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: (0, a.jsx)("path", {
            fill: "string" == typeof i ? i : i.css,
            d: "M8.3 3.3a1 1 0 0 0 0 1.4l7.29 7.3-7.3 7.3a1 1 0 1 0 1.42 1.4l8-8a1 1 0 0 0 0-1.4l-8-8a1 1 0 0 0-1.42 0Z",
            className: r,
          }),
        });
      };
    },
    763777: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          CloseLargeBoldIcon: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("669491"),
        s = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = l.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...u
        } = e;
        return (0, a.jsx)("svg", {
          ...(0, s.default)(u),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: (0, a.jsx)("path", {
            fill: "string" == typeof i ? i : i.css,
            d: "M18.94 21.06a1.5 1.5 0 1 0 2.12-2.12L14.12 12l6.94-6.94a1.5 1.5 0 1 0-2.12-2.12L12 9.88 5.06 2.94a1.5 1.5 0 1 0-2.12 2.12L9.88 12l-6.94 6.94a1.5 1.5 0 1 0 2.12 2.12L12 14.12l6.94 6.94Z",
            className: r,
          }),
        });
      };
    },
    280794: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          GridHorizontalIcon: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("669491"),
        s = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = l.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...u
        } = e;
        return (0, a.jsx)("svg", {
          ...(0, s.default)(u),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: (0, a.jsx)("path", {
            fill: "string" == typeof i ? i : i.css,
            d: "M2 4c0-1.1.9-2 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V4ZM2 15c0-1.1.9-2 2-2h5a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-5ZM15 13a2 2 0 0 0-2 2v5c0 1.1.9 2 2 2h5a2 2 0 0 0 2-2v-5a2 2 0 0 0-2-2h-5Z",
            className: r,
          }),
        });
      };
    },
    695175: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          GridSquareIcon: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("669491"),
        s = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = l.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...u
        } = e;
        return (0, a.jsx)("svg", {
          ...(0, s.default)(u),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: (0, a.jsx)("path", {
            fill: "string" == typeof i ? i : i.css,
            d: "M15 11a2 2 0 0 1-2-2V4c0-1.1.9-2 2-2h5a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-5ZM2 20c0 1.1.9 2 2 2h5a2 2 0 0 0 2-2v-5a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v5ZM13 20c0 1.1.9 2 2 2h5a2 2 0 0 0 2-2v-5a2 2 0 0 0-2-2h-5a2 2 0 0 0-2 2v5ZM2 9c0 1.1.9 2 2 2h5a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v5Z",
            className: r,
          }),
        });
      };
    },
    266655: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          GridVerticalIcon: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("669491"),
        s = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = l.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...u
        } = e;
        return (0, a.jsx)("svg", {
          ...(0, s.default)(u),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: (0, a.jsx)("path", {
            fill: "string" == typeof i ? i : i.css,
            d: "M4 22a2 2 0 0 1-2-2V4c0-1.1.9-2 2-2h5a2 2 0 0 1 2 2v16a2 2 0 0 1-2 2H4ZM15 22a2 2 0 0 1-2-2v-5c0-1.1.9-2 2-2h5a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-5ZM13 9c0 1.1.9 2 2 2h5a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2h-5a2 2 0 0 0-2 2v5Z",
            className: r,
          }),
        });
      };
    },
    335992: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          GroupArrowDownIcon: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("669491"),
        s = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = l.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...u
        } = e;
        return (0, a.jsxs)("svg", {
          ...(0, s.default)(u),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: [
            (0, a.jsx)("path", {
              d: "M14.5 8a3 3 0 1 0-2.7-4.3c-.2.4.06.86.44 1.12a5 5 0 0 1 2.14 3.08c.01.06.06.1.12.1ZM20 15a1 1 0 1 0-2 0v5.59l-1.08-1.08-1.21-1.22a1 1 0 0 0-1.42 1.42l1.85 1.84 2.15 2.16a1 1 0 0 0 1.42 0l4-4a1 1 0 0 0-1.42-1.42L20 20.6V15ZM19 12c.4 0 .94-.68.65-.95a7.47 7.47 0 0 0-4.15-1.98c-.55-.08-.99.38-1.1.92-.06.3-.15.6-.26.87-.23.58-.05 1.3.47 1.63.39.25.75.52 1.1.82.26.23.7.15.9-.14A3 3 0 0 1 19 12Z",
              fill: "string" == typeof i ? i : i.css,
              className: r,
            }),
            (0, a.jsx)("path", {
              d: "M14.29 16.09c.44-.11.74-.67.42-.99A7.5 7.5 0 0 0 2 20.5c-.01.83.66 1.5 1.49 1.5a.2.2 0 0 0 .2-.16c.2-.96.56-1.87.88-2.54.1-.23.42-.15.42.1v2.1c0 .28.22.5.5.5h8c.1 0 .13-.13.06-.2l-.68-.68a3 3 0 0 1 1.4-5.03ZM9.5 12a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z",
              fill: "string" == typeof i ? i : i.css,
              className: r,
            }),
          ],
        });
      };
    },
    272241: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          HandRequestSpeakListIcon: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("669491"),
        s = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = l.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...u
        } = e;
        return (0, a.jsxs)("svg", {
          ...(0, s.default)(u),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: [
            (0, a.jsx)("path", {
              fill: "string" == typeof i ? i : i.css,
              d: "M16.02 3.06a1.23 1.23 0 0 0-2.39-.6l-2.14 7.76-.61-.24.83-6.97a1.26 1.26 0 0 0-2.49-.34L8.13 9.65l-.47 2.86a.42.42 0 0 1-.8.1l-.66-1.47a3.92 3.92 0 0 0-1.85-1.9l-.32-.17a1.53 1.53 0 0 0-1.91.47.61.61 0 0 0-.05.65l1.33 2.5c.06.12.12.24.16.37l1.26 4.11a7.47 7.47 0 0 0 7.77 5.25.48.48 0 0 0 .43-.48v-2.59L13 16a3 3 0 0 1 3-3h4.2a.5.5 0 0 0 .47-.3l1.23-2.9a1.19 1.19 0 0 0-2.17-.97l-1.8 3.87-.56-.22 2.4-7.64a1.17 1.17 0 0 0-2.21-.75l-2.78 7.4-.67-.26 1.9-8.17Z",
              className: r,
            }),
            (0, a.jsx)("path", {
              fill: "string" == typeof i ? i : i.css,
              d: "M16 15a1 1 0 1 0 0 2h6a1 1 0 1 0 0-2h-6ZM16 18a1 1 0 1 0 0 2h6a1 1 0 1 0 0-2h-6ZM16 21a1 1 0 1 0 0 2h6a1 1 0 1 0 0-2h-6Z",
              className: r,
            }),
          ],
        });
      };
    },
    407472: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          HeadphonesDenyIcon: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("669491"),
        s = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = l.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...u
        } = e;
        return (0, a.jsxs)("svg", {
          ...(0, s.default)(u),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: [
            (0, a.jsx)("path", {
              fill: "string" == typeof i ? i : i.css,
              fillRule: "evenodd",
              d: "M21.76.83a5.02 5.02 0 0 1 .78 7.7 5 5 0 0 1-7.07 0 5.02 5.02 0 0 1 0-7.07 5 5 0 0 1 6.29-.63Zm-4.88 2.05a3 3 0 0 1 3.41-.59l-4 4a3 3 0 0 1 .59-3.41Zm4.83.83-4 4a3 3 0 0 0 4-4Z",
              clipRule: "evenodd",
              className: r,
            }),
            (0, a.jsx)("path", {
              fill: "string" == typeof i ? i : i.css,
              d: "M12.38 1c.38.02.58.45.4.78-.15.3-.3.62-.4.95A.4.4 0 0 1 12 3a9 9 0 0 0-8.95 10h1.87a5 5 0 0 1 4.1 2.13l1.37 1.97a3.1 3.1 0 0 1-.17 3.78 2.85 2.85 0 0 1-3.55.74 11 11 0 0 1 5.71-20.61ZM22.22 11.22c.34-.18.76.02.77.4L23 12a11 11 0 0 1-5.67 9.62c-1.27.71-2.73.23-3.55-.74a3.1 3.1 0 0 1-.17-3.78l1.38-1.97a5 5 0 0 1 4.1-2.13h1.86c.03-.33.05-.66.05-1a.4.4 0 0 1 .27-.38c.33-.1.65-.25.95-.4Z",
              className: r,
            }),
          ],
        });
      };
    },
    253762: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          HeadphonesSlashIcon: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("669491"),
        s = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = l.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...u
        } = e;
        return (0, a.jsx)("svg", {
          ...(0, s.default)(u),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: (0, a.jsx)("path", {
            fill: "string" == typeof i ? i : i.css,
            d: "M22.7 2.7a1 1 0 0 0-1.4-1.4l-20 20a1 1 0 1 0 1.4 1.4l20-20ZM17.06 2.94a.48.48 0 0 0-.11-.77A11 11 0 0 0 2.18 16.94c.14.3.53.35.76.12l3.2-3.2c.25-.25.15-.68-.2-.76a5 5 0 0 0-1.02-.1H3.05a9 9 0 0 1 12.66-9.2c.2.09.44.05.59-.1l.76-.76ZM20.2 8.28a.52.52 0 0 1 .1-.58l.76-.76a.48.48 0 0 1 .77.11 11 11 0 0 1-4.5 14.57c-1.27.71-2.73.23-3.55-.74a3.1 3.1 0 0 1-.17-3.78l1.38-1.97a5 5 0 0 1 4.1-2.13h1.86a9.1 9.1 0 0 0-.75-4.72ZM10.1 17.9c.25-.25.65-.18.74.14a3.1 3.1 0 0 1-.62 2.84 2.85 2.85 0 0 1-3.55.74.16.16 0 0 1-.04-.25l3.48-3.48Z",
            className: r,
          }),
        });
      };
    },
    254845: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          LinkExternalMediumIcon: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("669491"),
        s = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = l.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...u
        } = e;
        return (0, a.jsx)("svg", {
          ...(0, s.default)(u),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: (0, a.jsx)("path", {
            fill: "string" == typeof i ? i : i.css,
            d: "M7 4a1 1 0 0 0 0 2h9.59L4.29 18.3a1 1 0 1 0 1.42 1.4L18 7.42V17a1 1 0 1 0 2 0V5a1 1 0 0 0-1-1H7Z",
            className: r,
          }),
        });
      };
    },
    859598: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          MicrophoneDenyIcon: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("669491"),
        s = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = l.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...u
        } = e;
        return (0, a.jsxs)("svg", {
          ...(0, s.default)(u),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: [
            (0, a.jsx)("path", {
              fill: "string" == typeof i ? i : i.css,
              fillRule: "evenodd",
              d: "M21.76.83a5.02 5.02 0 0 1 .78 7.7 5 5 0 0 1-7.07 0 5.02 5.02 0 0 1 0-7.07 5 5 0 0 1 6.29-.63Zm-4.88 2.05a3 3 0 0 1 3.41-.59l-4 4a3 3 0 0 1 .59-3.41Zm4.83.83-4 4a3 3 0 0 0 4-4Z",
              clipRule: "evenodd",
              className: r,
            }),
            (0, a.jsx)("path", {
              fill: "string" == typeof i ? i : i.css,
              d: "M12 2c.33 0 .51.35.4.66a6.99 6.99 0 0 0 3.04 8.37c.2.12.31.37.21.6A4 4 0 0 1 8 10V6a4 4 0 0 1 4-4Z",
              className: r,
            }),
            (0, a.jsx)("path", {
              fill: "string" == typeof i ? i : i.css,
              d: "M17.55 12.29c.1-.23.33-.37.58-.34.29.03.58.05.87.05h.04c.35 0 .63.32.51.65A8 8 0 0 1 13 17.94V20h2a1 1 0 1 1 0 2H9a1 1 0 1 1 0-2h2v-2.06A8 8 0 0 1 4 10a1 1 0 0 1 2 0 6 6 0 0 0 11.55 2.29Z",
              className: r,
            }),
          ],
        });
      };
    },
    449919: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          MicrophoneSlashIcon: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("669491"),
        s = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = l.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...u
        } = e;
        return (0, a.jsx)("svg", {
          ...(0, s.default)(u),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: (0, a.jsx)("path", {
            fill: "string" == typeof i ? i : i.css,
            d: "m2.7 22.7 20-20a1 1 0 0 0-1.4-1.4l-20 20a1 1 0 1 0 1.4 1.4ZM10.8 17.32c-.21.21-.1.58.2.62V20H9a1 1 0 1 0 0 2h6a1 1 0 1 0 0-2h-2v-2.06A8 8 0 0 0 20 10a1 1 0 0 0-2 0c0 1.45-.52 2.79-1.38 3.83l-.02.02A5.99 5.99 0 0 1 12.32 16a.52.52 0 0 0-.34.15l-1.18 1.18ZM15.36 4.52c.15-.15.19-.38.08-.56A4 4 0 0 0 8 6v4c0 .3.03.58.1.86.07.34.49.43.74.18l6.52-6.52ZM5.06 13.98c.16.28.53.31.75.09l.75-.75c.16-.16.19-.4.08-.61A5.97 5.97 0 0 1 6 10a1 1 0 0 0-2 0c0 1.45.39 2.81 1.06 3.98Z",
            className: r,
          }),
        });
      };
    },
    532629: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          MinimizeIcon: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("669491"),
        s = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = l.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...u
        } = e;
        return (0, a.jsx)("svg", {
          ...(0, s.default)(u),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: (0, a.jsx)("path", {
            fill: "string" == typeof i ? i : i.css,
            d: "M15 4v3.59l5.3-5.3a1 1 0 1 1 1.4 1.42L16.42 9H20a1 1 0 1 1 0 2h-6a1 1 0 0 1-1-1V4a1 1 0 1 1 2 0ZM9 16.41l-5.3 5.3a1 1 0 0 1-1.4-1.42L7.58 15H4a1 1 0 1 1 0-2h6a1 1 0 0 1 1 1v6a1 1 0 1 1-2 0v-3.59Z",
            className: r,
          }),
        });
      };
    },
    231332: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          MusicIcon: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("669491"),
        s = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = l.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...u
        } = e;
        return (0, a.jsx)("svg", {
          ...(0, s.default)(u),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: (0, a.jsx)("path", {
            fill: "string" == typeof i ? i : i.css,
            d: "M8.65 1.51A2 2 0 0 0 6 3.41v9.88A3.98 3.98 0 0 0 4.5 13C2.57 13 1 14.34 1 16s1.57 3 3.5 3S8 17.66 8 16V5.4l11 3.81v7.08a3.98 3.98 0 0 0-1.5-.29c-1.93 0-3.5 1.34-3.5 3s1.57 3 3.5 3 3.5-1.34 3.5-3V7.03c0-.74-.47-1.4-1.18-1.65L8.65 1.51Z",
            className: r,
          }),
        });
      };
    },
    198114: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          MusicSlashIcon: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("669491"),
        s = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = l.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...u
        } = e;
        return (0, a.jsx)("svg", {
          ...(0, s.default)(u),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: (0, a.jsx)("path", {
            fill: "string" == typeof i ? i : i.css,
            d: "M22.7 2.7a1 1 0 0 0-1.4-1.4l-20 20a1 1 0 1 0 1.4 1.4l20-20ZM15.2 3.78a.5.5 0 0 1 .2.83l-2.28 2.27a.5.5 0 0 1-.52.12L8 5.4v6.4a.5.5 0 0 1-.15.35L2.3 17.7c-.2.2-.5.2-.67 0A2.7 2.7 0 0 1 1 16c0-1.66 1.57-3 3.5-3 .54 0 1.05.1 1.5.29V3.4a2 2 0 0 1 2.65-1.89l6.55 2.27ZM19.15 8.85a.5.5 0 0 0-.15.36v7.08a3.98 3.98 0 0 0-1.5-.29c-1.93 0-3.5 1.34-3.5 3s1.57 3 3.5 3 3.5-1.34 3.5-3V7.6a.25.25 0 0 0-.43-.17l-1.42 1.42Z",
            className: r,
          }),
        });
      };
    },
    526727: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          PaintbrushThinIcon: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("669491"),
        s = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = l.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...u
        } = e;
        return (0, a.jsx)("svg", {
          ...(0, s.default)(u),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: (0, a.jsx)("path", {
            fill: "string" == typeof i ? i : i.css,
            d: "m9.17 12.67 2.16 2.16a1 1 0 0 0 .99.25l2.57-.75A3 3 0 0 0 16.6 13l4.91-8.05a1.8 1.8 0 0 0-2.47-2.47L11 7.39a3 3 0 0 0-1.32 1.72l-.75 2.57a1 1 0 0 0 .25.99ZM8.03 13.14c.27.07.51.23.7.43l1.7 1.7c.2.19.36.43.43.7A4 4 0 0 1 7 21H2a1 1 0 1 1 0-2c.68 0 1.13-.77 1.04-1.44a4 4 0 0 1 5-4.42Z",
            className: r,
          }),
        });
      };
    },
    610913: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          PhoneCallIcon: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("669491"),
        s = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = l.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...u
        } = e;
        return (0, a.jsxs)("svg", {
          ...(0, s.default)(u),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: [
            (0, a.jsx)("path", {
              fill: "string" == typeof i ? i : i.css,
              d: "M2 7.4A5.4 5.4 0 0 1 7.4 2c.36 0 .7.22.83.55l1.93 4.64a1 1 0 0 1-.43 1.25L7 10a8.52 8.52 0 0 0 7 7l1.12-2.24a1 1 0 0 1 1.19-.51l5.06 1.56c.38.11.63.46.63.85C22 19.6 19.6 22 16.66 22h-.37C8.39 22 2 15.6 2 7.71V7.4ZM13 3a1 1 0 0 1 1-1 8 8 0 0 1 8 8 1 1 0 1 1-2 0 6 6 0 0 0-6-6 1 1 0 0 1-1-1Z",
              className: r,
            }),
            (0, a.jsx)("path", {
              fill: "string" == typeof i ? i : i.css,
              d: "M13 7a1 1 0 0 1 1-1 4 4 0 0 1 4 4 1 1 0 1 1-2 0 2 2 0 0 0-2-2 1 1 0 0 1-1-1Z",
              className: r,
            }),
          ],
        });
      };
    },
    396096: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          PinUprightIcon: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("669491"),
        s = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = l.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...u
        } = e;
        return (0, a.jsx)("svg", {
          ...(0, s.default)(u),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: (0, a.jsx)("path", {
            fill: "string" == typeof i ? i : i.css,
            d: "M16.91 5C18.61 5 20 3.48 20 1.6v-.1a.5.5 0 0 0-.5-.5h-15a.5.5 0 0 0-.5.5v.1C4 3.49 5.38 5 7.09 5H8v4.35l-3.39 3.26A2 2 0 0 0 4 14.05V15a1 1 0 0 0 1 1h14a1 1 0 0 0 1-1v-.95a2 2 0 0 0-.61-1.44L16 9.35V5h.91ZM13.37 17.25c.33 0 .56.3.5.61l-1.08 4.75a.5.5 0 0 1-.49.39h-.6a.5.5 0 0 1-.49-.39l-1.07-4.75a.5.5 0 0 1 .49-.61h2.74Z",
            className: r,
          }),
        });
      };
    },
    286810: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          PinUprightSlashIcon: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("669491"),
        s = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = l.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...u
        } = e;
        return (0, a.jsx)("svg", {
          ...(0, s.default)(u),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: (0, a.jsx)("path", {
            fill: "string" == typeof i ? i : i.css,
            d: "M22.7 2.7a1 1 0 0 0-1.4-1.4l-20 20a1 1 0 1 0 1.4 1.4l20-20ZM4.5 1h13.17a.5.5 0 0 1 .36.85L4.62 15.25c-.2.22-.56.2-.6-.1A1 1 0 0 1 4 15v-.95a2 2 0 0 1 .61-1.44L8 9.35V5h-.91C5.39 5 4 3.48 4 1.6v-.1c0-.28.22-.5.5-.5ZM17.77 11.05a.5.5 0 0 0-.7 0l-4.1 4.1a.5.5 0 0 0 .36.85H19a1 1 0 0 0 1-1v-.95a2 2 0 0 0-.61-1.44l-1.62-1.56ZM11.08 17.25a.5.5 0 0 0-.36.15l-.36.37a.5.5 0 0 0-.14.46l.99 4.38a.5.5 0 0 0 .49.39h.6a.5.5 0 0 0 .49-.39l1.07-4.75a.5.5 0 0 0-.49-.61h-2.3Z",
            className: r,
          }),
        });
      };
    },
    783646: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          PlusLargeIcon: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("669491"),
        s = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = l.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...u
        } = e;
        return (0, a.jsx)("svg", {
          ...(0, s.default)(u),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: (0, a.jsx)("path", {
            fill: "string" == typeof i ? i : i.css,
            d: "M13 3a1 1 0 1 0-2 0v8H3a1 1 0 1 0 0 2h8v8a1 1 0 0 0 2 0v-8h8a1 1 0 0 0 0-2h-8V3Z",
            className: r,
          }),
        });
      };
    },
    247230: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ScreenIcon: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("669491"),
        s = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = l.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...u
        } = e;
        return (0, a.jsx)("svg", {
          ...(0, s.default)(u),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: (0, a.jsx)("path", {
            fill: "string" == typeof i ? i : i.css,
            d: "M5 2a3 3 0 0 0-3 3v8a3 3 0 0 0 3 3h14a3 3 0 0 0 3-3V5a3 3 0 0 0-3-3H5ZM13.5 20a.5.5 0 0 1-.5-.5v-2a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v2a.5.5 0 0 1-.5.5H9a1 1 0 1 0 0 2h6a1 1 0 1 0 0-2h-1.5Z",
            className: r,
          }),
        });
      };
    },
    122421: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ScreenSlashIcon: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("669491"),
        s = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = l.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...u
        } = e;
        return (0, a.jsx)("svg", {
          ...(0, s.default)(u),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: (0, a.jsx)("path", {
            fill: "string" == typeof i ? i : i.css,
            d: "m2.7 22.7 20-20a1 1 0 0 0-1.4-1.4l-20 20a1 1 0 1 0 1.4 1.4ZM13.2 16a.5.5 0 0 1-.35-.85l8.3-8.3a.5.5 0 0 1 .85.36V13a3 3 0 0 1-3 3h-5.8ZM17.15 2.85a.5.5 0 0 0-.36-.85H5a3 3 0 0 0-3 3v8a3 3 0 0 0 1.85 2.77c.17.07.36.02.49-.11l12.8-12.8ZM13.5 20a.5.5 0 0 1-.5-.5v-2a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v2a.5.5 0 0 1-.5.5H9a1 1 0 1 0 0 2h6a1 1 0 1 0 0-2h-1.5Z",
            className: r,
          }),
        });
      };
    },
    759275: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ShieldLockIcon: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("669491"),
        s = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = l.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...u
        } = e;
        return (0, a.jsx)("svg", {
          ...(0, s.default)(u),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: (0, a.jsx)("path", {
            fill: "string" == typeof i ? i : i.css,
            fillRule: "evenodd",
            d: "M4.56 4.22A2.83 2.83 0 0 0 3 6.75v3.03c0 5.6 3.3 10.69 8.42 12.96.37.17.79.17 1.16 0A14.19 14.19 0 0 0 21 9.78V6.75c0-1.07-.6-2.05-1.56-2.53l-6.1-3.05a3 3 0 0 0-2.68 0l-6.1 3.05ZM14 11a2 2 0 0 1-1 1.73v2.77a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-2.77A2 2 0 1 1 14 11Z",
            clipRule: "evenodd",
            className: r,
          }),
        });
      };
    },
    30625: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          UserCircleStatusIcon: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("669491"),
        s = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = l.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...u
        } = e;
        return (0, a.jsxs)("svg", {
          ...(0, s.default)(u),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: [
            (0, a.jsx)("path", {
              fill: "string" == typeof i ? i : i.css,
              fillRule: "evenodd",
              d: "M23 12.38c-.02.38-.45.58-.78.4a6.97 6.97 0 0 0-6.27-.08.54.54 0 0 1-.44 0 8.97 8.97 0 0 0-11.16 3.55c-.1.15-.1.35 0 .5.37.58.8 1.13 1.28 1.61.24.24.64.15.8-.15.19-.38.39-.73.58-1.02.14-.21.43-.1.4.15l-.19 1.96c-.02.19.07.37.23.47A8.96 8.96 0 0 0 12 21a.4.4 0 0 1 .38.27c.1.33.25.65.4.95.18.34-.02.76-.4.77L12 23a11 11 0 1 1 11-10.62ZM15.5 7.5a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0Z",
              clipRule: "evenodd",
              className: r,
            }),
            (0, a.jsx)("path", {
              fill: "string" == typeof i ? i : i.css,
              d: "M24 19a5 5 0 1 1-10 0 5 5 0 0 1 10 0Z",
              className: r,
            }),
          ],
        });
      };
    },
    392229: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          UserMinusIcon: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var l = n("669491"),
        s = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = l.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...u
        } = e;
        return (0, a.jsxs)("svg", {
          ...(0, s.default)(u),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: [
            (0, a.jsx)("path", {
              d: "M11.53 11A9.53 9.53 0 0 0 2 20.53c0 .81.66 1.47 1.47 1.47h.22c.24 0 .44-.17.5-.4.29-1.12.84-2.17 1.32-2.91.14-.21.43-.1.4.15l-.25 2.61c-.03.3.2.55.5.55h7.63c.12 0 .17-.31.06-.36C12.82 21.14 12 20.22 12 19a3 3 0 0 1 3-3h5.02c.38 0 .61-.4.4-.72A9.52 9.52 0 0 0 12.47 11h-.94ZM12 10a4 4 0 1 0 0-8 4 4 0 0 0 0 8Z",
              fill: "string" == typeof i ? i : i.css,
              className: r,
            }),
            (0, a.jsx)("path", {
              d: "M15 18a1 1 0 1 0 0 2h8a1 1 0 0 0 0-2h-8Z",
              fill: "string" == typeof i ? i : i.css,
              className: r,
            }),
          ],
        });
      };
    },
    358977: function (e, t, n) {
      "use strict";
      var a, l;
      n.r(t),
        n.d(t, {
          ContentInventoryAuthorType: function () {
            return a;
          },
        }),
        ((l = a || (a = {}))[(l.AUTHOR_TYPE_UNSPECIFIED = 0)] =
          "AUTHOR_TYPE_UNSPECIFIED"),
        (l[(l.USER = 1)] = "USER");
    },
    901803: function (e, t, n) {
      "use strict";
      var a, l;
      n.r(t),
        n.d(t, {
          ContentInventoryEntryType: function () {
            return a;
          },
        }),
        ((l = a || (a = {}))[(l.CONTENT_TYPE_UNSPECIFIED = 0)] =
          "CONTENT_TYPE_UNSPECIFIED"),
        (l[(l.PLAYED_GAME = 1)] = "PLAYED_GAME"),
        (l[(l.WATCHED_MEDIA = 2)] = "WATCHED_MEDIA");
    },
    417847: function (e, t, n) {
      "use strict";
      var a, l;
      n.r(t),
        n.d(t, {
          ContentInventoryTraitType: function () {
            return a;
          },
        }),
        ((l = a || (a = {}))[(l.TRAIT_TYPE_UNSPECIFIED = 0)] =
          "TRAIT_TYPE_UNSPECIFIED"),
        (l[(l.FIRST_TIME = 1)] = "FIRST_TIME"),
        (l[(l.DURATION_SECONDS = 2)] = "DURATION_SECONDS"),
        (l[(l.IS_LIVE = 3)] = "IS_LIVE");
    },
  },
]);
//# sourceMappingURL=e7d81feea238b714038f.js.map
