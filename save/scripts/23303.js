(this.webpackChunkdiscord_app = this.webpackChunkdiscord_app || []).push([
  ["23303"],
  {
    952110: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          emojiTermsImporter: function () {
            return s;
          },
        });
      let s = {
        bg: () => n.el("326778").then(n.t.bind(n, "326778", 19)),
        cs: () => n.el("838264").then(n.t.bind(n, "838264", 19)),
        da: () => n.el("573975").then(n.t.bind(n, "573975", 19)),
        de: () => n.el("4282").then(n.t.bind(n, "4282", 19)),
        el: () => n.el("16046").then(n.t.bind(n, "16046", 19)),
        "en-US": () => n.el("240419").then(n.t.bind(n, "240419", 19)),
        "es-ES": () => n.el("613364").then(n.t.bind(n, "613364", 19)),
        "es-419": () => n.el("521992").then(n.t.bind(n, "521992", 19)),
        fi: () => n.el("641819").then(n.t.bind(n, "641819", 19)),
        fr: () => n.el("396103").then(n.t.bind(n, "396103", 19)),
        hr: () => n.el("611523").then(n.t.bind(n, "611523", 19)),
        hu: () => n.el("799904").then(n.t.bind(n, "799904", 19)),
        it: () => n.el("66179").then(n.t.bind(n, "66179", 19)),
        ja: () => n.el("634557").then(n.t.bind(n, "634557", 19)),
        ko: () => n.el("970725").then(n.t.bind(n, "970725", 19)),
        lt: () => n.el("699836").then(n.t.bind(n, "699836", 19)),
        nl: () => n.el("534178").then(n.t.bind(n, "534178", 19)),
        no: () => n.el("290600").then(n.t.bind(n, "290600", 19)),
        pl: () => n.el("363481").then(n.t.bind(n, "363481", 19)),
        "pt-BR": () => n.el("869317").then(n.t.bind(n, "869317", 19)),
        ro: () => n.el("820013").then(n.t.bind(n, "820013", 19)),
        ru: () => n.el("720728").then(n.t.bind(n, "720728", 19)),
        "sv-SE": () => n.el("25750").then(n.t.bind(n, "25750", 19)),
        th: () => n.el("104023").then(n.t.bind(n, "104023", 19)),
        tr: () => n.el("859047").then(n.t.bind(n, "859047", 19)),
        uk: () => n.el("66271").then(n.t.bind(n, "66271", 19)),
        vi: () => n.el("984210").then(n.t.bind(n, "984210", 19)),
        "zh-CN": () => n.el("923933").then(n.t.bind(n, "923933", 19)),
        hi: () => n.el("479160").then(n.t.bind(n, "479160", 19)),
      };
    },
    331246: function (e, t, n) {
      var s = {
        "./1f004.svg": "343607",
        "./1f0cf.svg": "487841",
        "./1f170.svg": "887207",
        "./1f171.svg": "982156",
        "./1f17e.svg": "177424",
        "./1f17f.svg": "970411",
        "./1f18e.svg": "704868",
        "./1f191.svg": "916874",
        "./1f192.svg": "163160",
        "./1f193.svg": "673890",
        "./1f194.svg": "731615",
        "./1f195.svg": "471463",
        "./1f196.svg": "712028",
        "./1f197.svg": "748005",
        "./1f198.svg": "154656",
        "./1f199.svg": "783638",
        "./1f19a.svg": "469846",
        "./1f1e6-1f1e8.svg": "202158",
        "./1f1e6-1f1e9.svg": "974077",
        "./1f1e6-1f1ea.svg": "710660",
        "./1f1e6-1f1eb.svg": "938658",
        "./1f1e6-1f1ec.svg": "456603",
        "./1f1e6-1f1ee.svg": "994202",
        "./1f1e6-1f1f1.svg": "123517",
        "./1f1e6-1f1f2.svg": "729550",
        "./1f1e6-1f1f4.svg": "615512",
        "./1f1e6-1f1f6.svg": "265085",
        "./1f1e6-1f1f7.svg": "907598",
        "./1f1e6-1f1f8.svg": "770494",
        "./1f1e6-1f1f9.svg": "873583",
        "./1f1e6-1f1fa.svg": "620619",
        "./1f1e6-1f1fc.svg": "274148",
        "./1f1e6-1f1fd.svg": "482325",
        "./1f1e6-1f1ff.svg": "648129",
        "./1f1e6.svg": "795420",
        "./1f1e7-1f1e6.svg": "948467",
        "./1f1e7-1f1e7.svg": "352636",
        "./1f1e7-1f1e9.svg": "953255",
        "./1f1e7-1f1ea.svg": "221535",
        "./1f1e7-1f1eb.svg": "175958",
        "./1f1e7-1f1ec.svg": "735623",
        "./1f1e7-1f1ed.svg": "745884",
        "./1f1e7-1f1ee.svg": "597468",
        "./1f1e7-1f1ef.svg": "119699",
        "./1f1e7-1f1f1.svg": "223316",
        "./1f1e7-1f1f2.svg": "858143",
        "./1f1e7-1f1f3.svg": "497003",
        "./1f1e7-1f1f4.svg": "742102",
        "./1f1e7-1f1f6.svg": "803955",
        "./1f1e7-1f1f7.svg": "907334",
        "./1f1e7-1f1f8.svg": "145843",
        "./1f1e7-1f1f9.svg": "305653",
        "./1f1e7-1f1fb.svg": "327674",
        "./1f1e7-1f1fc.svg": "238778",
        "./1f1e7-1f1fe.svg": "607692",
        "./1f1e7-1f1ff.svg": "118268",
        "./1f1e7.svg": "195103",
        "./1f1e8-1f1e6.svg": "15650",
        "./1f1e8-1f1e8.svg": "810834",
        "./1f1e8-1f1e9.svg": "678826",
        "./1f1e8-1f1eb.svg": "350131",
        "./1f1e8-1f1ec.svg": "215916",
        "./1f1e8-1f1ed.svg": "401127",
        "./1f1e8-1f1ee.svg": "997220",
        "./1f1e8-1f1f0.svg": "606529",
        "./1f1e8-1f1f1.svg": "246792",
        "./1f1e8-1f1f2.svg": "525171",
        "./1f1e8-1f1f3.svg": "893555",
        "./1f1e8-1f1f4.svg": "594593",
        "./1f1e8-1f1f5.svg": "409171",
        "./1f1e8-1f1f7.svg": "872233",
        "./1f1e8-1f1fa.svg": "815364",
        "./1f1e8-1f1fb.svg": "388379",
        "./1f1e8-1f1fc.svg": "254070",
        "./1f1e8-1f1fd.svg": "424827",
        "./1f1e8-1f1fe.svg": "709082",
        "./1f1e8-1f1ff.svg": "843739",
        "./1f1e8.svg": "881123",
        "./1f1e9-1f1ea.svg": "518419",
        "./1f1e9-1f1ec.svg": "929346",
        "./1f1e9-1f1ef.svg": "257042",
        "./1f1e9-1f1f0.svg": "37087",
        "./1f1e9-1f1f2.svg": "45302",
        "./1f1e9-1f1f4.svg": "40589",
        "./1f1e9-1f1ff.svg": "636130",
        "./1f1e9.svg": "758744",
        "./1f1ea-1f1e6.svg": "767902",
        "./1f1ea-1f1e8.svg": "807110",
        "./1f1ea-1f1ea.svg": "893558",
        "./1f1ea-1f1ec.svg": "333376",
        "./1f1ea-1f1ed.svg": "212305",
        "./1f1ea-1f1f7.svg": "707016",
        "./1f1ea-1f1f8.svg": "662067",
        "./1f1ea-1f1f9.svg": "466376",
        "./1f1ea-1f1fa.svg": "349855",
        "./1f1ea.svg": "571332",
        "./1f1eb-1f1ee.svg": "545219",
        "./1f1eb-1f1ef.svg": "772684",
        "./1f1eb-1f1f0.svg": "206583",
        "./1f1eb-1f1f2.svg": "839834",
        "./1f1eb-1f1f4.svg": "233583",
        "./1f1eb-1f1f7.svg": "974175",
        "./1f1eb.svg": "208550",
        "./1f1ec-1f1e6.svg": "757912",
        "./1f1ec-1f1e7.svg": "535382",
        "./1f1ec-1f1e9.svg": "694424",
        "./1f1ec-1f1ea.svg": "513808",
        "./1f1ec-1f1eb.svg": "615439",
        "./1f1ec-1f1ec.svg": "725934",
        "./1f1ec-1f1ed.svg": "384789",
        "./1f1ec-1f1ee.svg": "981083",
        "./1f1ec-1f1f1.svg": "389923",
        "./1f1ec-1f1f2.svg": "768142",
        "./1f1ec-1f1f3.svg": "399216",
        "./1f1ec-1f1f5.svg": "634138",
        "./1f1ec-1f1f6.svg": "825369",
        "./1f1ec-1f1f7.svg": "664784",
        "./1f1ec-1f1f8.svg": "747794",
        "./1f1ec-1f1f9.svg": "48515",
        "./1f1ec-1f1fa.svg": "982766",
        "./1f1ec-1f1fc.svg": "380559",
        "./1f1ec-1f1fe.svg": "157015",
        "./1f1ec.svg": "804115",
        "./1f1ed-1f1f0.svg": "22597",
        "./1f1ed-1f1f2.svg": "491367",
        "./1f1ed-1f1f3.svg": "98811",
        "./1f1ed-1f1f7.svg": "828657",
        "./1f1ed-1f1f9.svg": "664644",
        "./1f1ed-1f1fa.svg": "812859",
        "./1f1ed.svg": "375361",
        "./1f1ee-1f1e8.svg": "973967",
        "./1f1ee-1f1e9.svg": "75282",
        "./1f1ee-1f1ea.svg": "282044",
        "./1f1ee-1f1f1.svg": "163515",
        "./1f1ee-1f1f2.svg": "922411",
        "./1f1ee-1f1f3.svg": "157880",
        "./1f1ee-1f1f4.svg": "162616",
        "./1f1ee-1f1f6.svg": "334505",
        "./1f1ee-1f1f7.svg": "148895",
        "./1f1ee-1f1f8.svg": "228652",
        "./1f1ee-1f1f9.svg": "986990",
        "./1f1ee.svg": "827845",
        "./1f1ef-1f1ea.svg": "545087",
        "./1f1ef-1f1f2.svg": "533423",
        "./1f1ef-1f1f4.svg": "152431",
        "./1f1ef-1f1f5.svg": "400964",
        "./1f1ef.svg": "29659",
        "./1f1f0-1f1ea.svg": "276269",
        "./1f1f0-1f1ec.svg": "552208",
        "./1f1f0-1f1ed.svg": "604693",
        "./1f1f0-1f1ee.svg": "144434",
        "./1f1f0-1f1f2.svg": "275761",
        "./1f1f0-1f1f3.svg": "755704",
        "./1f1f0-1f1f5.svg": "177616",
        "./1f1f0-1f1f7.svg": "450929",
        "./1f1f0-1f1fc.svg": "79972",
        "./1f1f0-1f1fe.svg": "187003",
        "./1f1f0-1f1ff.svg": "597570",
        "./1f1f0.svg": "436297",
        "./1f1f1-1f1e6.svg": "77523",
        "./1f1f1-1f1e7.svg": "907282",
        "./1f1f1-1f1e8.svg": "215952",
        "./1f1f1-1f1ee.svg": "8833",
        "./1f1f1-1f1f0.svg": "404786",
        "./1f1f1-1f1f7.svg": "89432",
        "./1f1f1-1f1f8.svg": "230541",
        "./1f1f1-1f1f9.svg": "92754",
        "./1f1f1-1f1fa.svg": "348424",
        "./1f1f1-1f1fb.svg": "423057",
        "./1f1f1-1f1fe.svg": "541923",
        "./1f1f1.svg": "405144",
        "./1f1f2-1f1e6.svg": "963449",
        "./1f1f2-1f1e8.svg": "654332",
        "./1f1f2-1f1e9.svg": "795986",
        "./1f1f2-1f1ea.svg": "77844",
        "./1f1f2-1f1eb.svg": "939231",
        "./1f1f2-1f1ec.svg": "131091",
        "./1f1f2-1f1ed.svg": "766690",
        "./1f1f2-1f1f0.svg": "291030",
        "./1f1f2-1f1f1.svg": "946210",
        "./1f1f2-1f1f2.svg": "634234",
        "./1f1f2-1f1f3.svg": "373690",
        "./1f1f2-1f1f4.svg": "543412",
        "./1f1f2-1f1f5.svg": "623201",
        "./1f1f2-1f1f6.svg": "970660",
        "./1f1f2-1f1f7.svg": "384271",
        "./1f1f2-1f1f8.svg": "850470",
        "./1f1f2-1f1f9.svg": "444368",
        "./1f1f2-1f1fa.svg": "403442",
        "./1f1f2-1f1fb.svg": "975713",
        "./1f1f2-1f1fc.svg": "354432",
        "./1f1f2-1f1fd.svg": "828094",
        "./1f1f2-1f1fe.svg": "593807",
        "./1f1f2-1f1ff.svg": "481029",
        "./1f1f2.svg": "817726",
        "./1f1f3-1f1e6.svg": "557021",
        "./1f1f3-1f1e8.svg": "270447",
        "./1f1f3-1f1ea.svg": "332717",
        "./1f1f3-1f1eb.svg": "652424",
        "./1f1f3-1f1ec.svg": "796921",
        "./1f1f3-1f1ee.svg": "615805",
        "./1f1f3-1f1f1.svg": "164145",
        "./1f1f3-1f1f4.svg": "608660",
        "./1f1f3-1f1f5.svg": "302634",
        "./1f1f3-1f1f7.svg": "145584",
        "./1f1f3-1f1fa.svg": "77368",
        "./1f1f3-1f1ff.svg": "535145",
        "./1f1f3.svg": "198869",
        "./1f1f4-1f1f2.svg": "417189",
        "./1f1f4.svg": "255506",
        "./1f1f5-1f1e6.svg": "636660",
        "./1f1f5-1f1ea.svg": "737933",
        "./1f1f5-1f1eb.svg": "650624",
        "./1f1f5-1f1ec.svg": "722189",
        "./1f1f5-1f1ed.svg": "388209",
        "./1f1f5-1f1f0.svg": "327905",
        "./1f1f5-1f1f1.svg": "76074",
        "./1f1f5-1f1f2.svg": "674991",
        "./1f1f5-1f1f3.svg": "339203",
        "./1f1f5-1f1f7.svg": "131286",
        "./1f1f5-1f1f8.svg": "420494",
        "./1f1f5-1f1f9.svg": "888803",
        "./1f1f5-1f1fc.svg": "805046",
        "./1f1f5-1f1fe.svg": "968369",
        "./1f1f5.svg": "885229",
        "./1f1f6-1f1e6.svg": "419235",
        "./1f1f6.svg": "552378",
        "./1f1f7-1f1ea.svg": "796236",
        "./1f1f7-1f1f4.svg": "218769",
        "./1f1f7-1f1f8.svg": "653077",
        "./1f1f7-1f1fa.svg": "745427",
        "./1f1f7-1f1fc.svg": "442323",
        "./1f1f7.svg": "764979",
        "./1f1f8-1f1e6.svg": "168",
        "./1f1f8-1f1e7.svg": "751966",
        "./1f1f8-1f1e8.svg": "470728",
        "./1f1f8-1f1e9.svg": "689621",
        "./1f1f8-1f1ea.svg": "453170",
        "./1f1f8-1f1ec.svg": "667179",
        "./1f1f8-1f1ed.svg": "994781",
        "./1f1f8-1f1ee.svg": "926636",
        "./1f1f8-1f1ef.svg": "991301",
        "./1f1f8-1f1f0.svg": "251472",
        "./1f1f8-1f1f1.svg": "268367",
        "./1f1f8-1f1f2.svg": "599290",
        "./1f1f8-1f1f3.svg": "727732",
        "./1f1f8-1f1f4.svg": "311822",
        "./1f1f8-1f1f7.svg": "192902",
        "./1f1f8-1f1f8.svg": "13873",
        "./1f1f8-1f1f9.svg": "910581",
        "./1f1f8-1f1fb.svg": "585063",
        "./1f1f8-1f1fd.svg": "143917",
        "./1f1f8-1f1fe.svg": "255231",
        "./1f1f8-1f1ff.svg": "596887",
        "./1f1f8.svg": "578011",
        "./1f1f9-1f1e6.svg": "805988",
        "./1f1f9-1f1e8.svg": "711840",
        "./1f1f9-1f1e9.svg": "105234",
        "./1f1f9-1f1eb.svg": "136793",
        "./1f1f9-1f1ec.svg": "19564",
        "./1f1f9-1f1ed.svg": "289905",
        "./1f1f9-1f1ef.svg": "947789",
        "./1f1f9-1f1f0.svg": "322293",
        "./1f1f9-1f1f1.svg": "807534",
        "./1f1f9-1f1f2.svg": "397929",
        "./1f1f9-1f1f3.svg": "210100",
        "./1f1f9-1f1f4.svg": "933769",
        "./1f1f9-1f1f7.svg": "2631",
        "./1f1f9-1f1f9.svg": "341930",
        "./1f1f9-1f1fb.svg": "679051",
        "./1f1f9-1f1fc.svg": "935272",
        "./1f1f9-1f1ff.svg": "563583",
        "./1f1f9.svg": "778818",
        "./1f1fa-1f1e6.svg": "932290",
        "./1f1fa-1f1ec.svg": "378008",
        "./1f1fa-1f1f2.svg": "782042",
        "./1f1fa-1f1f3.svg": "758532",
        "./1f1fa-1f1f8.svg": "16188",
        "./1f1fa-1f1fe.svg": "103899",
        "./1f1fa-1f1ff.svg": "33806",
        "./1f1fa.svg": "776885",
        "./1f1fb-1f1e6.svg": "895874",
        "./1f1fb-1f1e8.svg": "733716",
        "./1f1fb-1f1ea.svg": "992158",
        "./1f1fb-1f1ec.svg": "956896",
        "./1f1fb-1f1ee.svg": "662856",
        "./1f1fb-1f1f3.svg": "265914",
        "./1f1fb-1f1fa.svg": "310645",
        "./1f1fb.svg": "26763",
        "./1f1fc-1f1eb.svg": "854170",
        "./1f1fc-1f1f8.svg": "301978",
        "./1f1fc.svg": "525105",
        "./1f1fd-1f1f0.svg": "122446",
        "./1f1fd.svg": "262939",
        "./1f1fe-1f1ea.svg": "654637",
        "./1f1fe-1f1f9.svg": "539817",
        "./1f1fe.svg": "86967",
        "./1f1ff-1f1e6.svg": "706083",
        "./1f1ff-1f1f2.svg": "850848",
        "./1f1ff-1f1fc.svg": "364647",
        "./1f1ff.svg": "366964",
        "./1f201.svg": "306211",
        "./1f202.svg": "355582",
        "./1f21a.svg": "506867",
        "./1f22f.svg": "694565",
        "./1f232.svg": "598071",
        "./1f233.svg": "397217",
        "./1f234.svg": "510399",
        "./1f235.svg": "721299",
        "./1f236.svg": "702558",
        "./1f237.svg": "22704",
        "./1f238.svg": "590724",
        "./1f239.svg": "226826",
        "./1f23a.svg": "666149",
        "./1f250.svg": "631952",
        "./1f251.svg": "310670",
        "./1f300.svg": "821229",
        "./1f301.svg": "887575",
        "./1f302.svg": "753298",
        "./1f303.svg": "208828",
        "./1f304.svg": "703343",
        "./1f305.svg": "280150",
        "./1f306.svg": "628659",
        "./1f307.svg": "264235",
        "./1f308.svg": "615308",
        "./1f309.svg": "473898",
        "./1f30a.svg": "259044",
        "./1f30b.svg": "341911",
        "./1f30c.svg": "494900",
        "./1f30d.svg": "97567",
        "./1f30e.svg": "898351",
        "./1f30f.svg": "369714",
        "./1f310.svg": "880259",
        "./1f311.svg": "611305",
        "./1f312.svg": "93122",
        "./1f313.svg": "222041",
        "./1f314.svg": "20420",
        "./1f315.svg": "556162",
        "./1f316.svg": "7511",
        "./1f317.svg": "451162",
        "./1f318.svg": "116984",
        "./1f319.svg": "734645",
        "./1f31a.svg": "661594",
        "./1f31b.svg": "631236",
        "./1f31c.svg": "707285",
        "./1f31d.svg": "48653",
        "./1f31e.svg": "142979",
        "./1f31f.svg": "842974",
        "./1f320.svg": "53744",
        "./1f321.svg": "811534",
        "./1f324.svg": "597556",
        "./1f325.svg": "978409",
        "./1f326.svg": "557856",
        "./1f327.svg": "935509",
        "./1f328.svg": "411965",
        "./1f329.svg": "720640",
        "./1f32a.svg": "413164",
        "./1f32b.svg": "276236",
        "./1f32c.svg": "403802",
        "./1f32d.svg": "487336",
        "./1f32e.svg": "312981",
        "./1f32f.svg": "528588",
        "./1f330.svg": "775818",
        "./1f331.svg": "75632",
        "./1f332.svg": "616136",
        "./1f333.svg": "831263",
        "./1f334.svg": "422488",
        "./1f335.svg": "995045",
        "./1f336.svg": "498314",
        "./1f337.svg": "713579",
        "./1f338.svg": "394162",
        "./1f339.svg": "217389",
        "./1f33a.svg": "53211",
        "./1f33b.svg": "108327",
        "./1f33c.svg": "576027",
        "./1f33d.svg": "104207",
        "./1f33e.svg": "918285",
        "./1f33f.svg": "386060",
        "./1f340.svg": "611637",
        "./1f341.svg": "12710",
        "./1f342.svg": "36311",
        "./1f343.svg": "38530",
        "./1f344.svg": "32371",
        "./1f345.svg": "419647",
        "./1f346.svg": "702666",
        "./1f347.svg": "67346",
        "./1f348.svg": "864868",
        "./1f349.svg": "99010",
        "./1f34a.svg": "194343",
        "./1f34b.svg": "895196",
        "./1f34c.svg": "242875",
        "./1f34d.svg": "278553",
        "./1f34e.svg": "563207",
        "./1f34f.svg": "378776",
        "./1f350.svg": "28608",
        "./1f351.svg": "624233",
        "./1f352.svg": "10194",
        "./1f353.svg": "509483",
        "./1f354.svg": "780049",
        "./1f355.svg": "797441",
        "./1f356.svg": "548991",
        "./1f357.svg": "458689",
        "./1f358.svg": "810742",
        "./1f359.svg": "7727",
        "./1f35a.svg": "915387",
        "./1f35b.svg": "225833",
        "./1f35c.svg": "761441",
        "./1f35d.svg": "284112",
        "./1f35e.svg": "814139",
        "./1f35f.svg": "786776",
        "./1f360.svg": "30686",
        "./1f361.svg": "607783",
        "./1f362.svg": "683598",
        "./1f363.svg": "361907",
        "./1f364.svg": "390014",
        "./1f365.svg": "408597",
        "./1f366.svg": "775825",
        "./1f367.svg": "710637",
        "./1f368.svg": "465111",
        "./1f369.svg": "747397",
        "./1f36a.svg": "807683",
        "./1f36b.svg": "358565",
        "./1f36c.svg": "487768",
        "./1f36d.svg": "264128",
        "./1f36e.svg": "556500",
        "./1f36f.svg": "605326",
        "./1f370.svg": "407567",
        "./1f371.svg": "8173",
        "./1f372.svg": "925681",
        "./1f373.svg": "70634",
        "./1f374.svg": "124106",
        "./1f375.svg": "676856",
        "./1f376.svg": "336863",
        "./1f377.svg": "991956",
        "./1f378.svg": "95702",
        "./1f379.svg": "29982",
        "./1f37a.svg": "299665",
        "./1f37b.svg": "586933",
        "./1f37c.svg": "825077",
        "./1f37d.svg": "31651",
        "./1f37e.svg": "360967",
        "./1f37f.svg": "968843",
        "./1f380.svg": "840197",
        "./1f381.svg": "982837",
        "./1f382.svg": "432450",
        "./1f383.svg": "120610",
        "./1f384.svg": "600275",
        "./1f385-1f3fb.svg": "49685",
        "./1f385-1f3fc.svg": "418860",
        "./1f385-1f3fd.svg": "662515",
        "./1f385-1f3fe.svg": "866292",
        "./1f385-1f3ff.svg": "190805",
        "./1f385.svg": "499689",
        "./1f386.svg": "683873",
        "./1f387.svg": "912121",
        "./1f388.svg": "651468",
        "./1f389.svg": "972415",
        "./1f38a.svg": "959204",
        "./1f38b.svg": "353289",
        "./1f38c.svg": "932768",
        "./1f38d.svg": "873838",
        "./1f38e.svg": "551775",
        "./1f38f.svg": "34813",
        "./1f390.svg": "383674",
        "./1f391.svg": "151722",
        "./1f392.svg": "655684",
        "./1f393.svg": "440802",
        "./1f396.svg": "927396",
        "./1f397.svg": "224781",
        "./1f399.svg": "733554",
        "./1f39a.svg": "82958",
        "./1f39b.svg": "951972",
        "./1f39e.svg": "368442",
        "./1f39f.svg": "858132",
        "./1f3a0.svg": "345170",
        "./1f3a1.svg": "228817",
        "./1f3a2.svg": "207081",
        "./1f3a3.svg": "510469",
        "./1f3a4.svg": "970311",
        "./1f3a5.svg": "460004",
        "./1f3a6.svg": "617631",
        "./1f3a7.svg": "922863",
        "./1f3a8.svg": "705615",
        "./1f3a9.svg": "203156",
        "./1f3aa.svg": "669525",
        "./1f3ab.svg": "491647",
        "./1f3ac.svg": "262006",
        "./1f3ad.svg": "805728",
        "./1f3ae.svg": "601551",
        "./1f3af.svg": "84626",
        "./1f3b0.svg": "811044",
        "./1f3b1.svg": "292521",
        "./1f3b2.svg": "845587",
        "./1f3b3.svg": "368903",
        "./1f3b4.svg": "80266",
        "./1f3b5.svg": "843643",
        "./1f3b6.svg": "834396",
        "./1f3b7.svg": "945189",
        "./1f3b8.svg": "756106",
        "./1f3b9.svg": "766320",
        "./1f3ba.svg": "350279",
        "./1f3bb.svg": "265",
        "./1f3bc.svg": "654065",
        "./1f3bd.svg": "320492",
        "./1f3be.svg": "726972",
        "./1f3bf.svg": "940924",
        "./1f3c0.svg": "304959",
        "./1f3c1.svg": "721905",
        "./1f3c2-1f3fb.svg": "789468",
        "./1f3c2-1f3fc.svg": "849265",
        "./1f3c2-1f3fd.svg": "63875",
        "./1f3c2-1f3fe.svg": "655340",
        "./1f3c2-1f3ff.svg": "742840",
        "./1f3c2.svg": "834142",
        "./1f3c3-1f3fb-200d-2640-fe0f.svg": "741719",
        "./1f3c3-1f3fb-200d-2642-fe0f.svg": "262768",
        "./1f3c3-1f3fb.svg": "924091",
        "./1f3c3-1f3fc-200d-2640-fe0f.svg": "301149",
        "./1f3c3-1f3fc-200d-2642-fe0f.svg": "693113",
        "./1f3c3-1f3fc.svg": "450599",
        "./1f3c3-1f3fd-200d-2640-fe0f.svg": "939243",
        "./1f3c3-1f3fd-200d-2642-fe0f.svg": "735590",
        "./1f3c3-1f3fd.svg": "18267",
        "./1f3c3-1f3fe-200d-2640-fe0f.svg": "869063",
        "./1f3c3-1f3fe-200d-2642-fe0f.svg": "762735",
        "./1f3c3-1f3fe.svg": "309",
        "./1f3c3-1f3ff-200d-2640-fe0f.svg": "261099",
        "./1f3c3-1f3ff-200d-2642-fe0f.svg": "776776",
        "./1f3c3-1f3ff.svg": "408534",
        "./1f3c3-200d-2640-fe0f.svg": "467114",
        "./1f3c3-200d-2642-fe0f.svg": "54845",
        "./1f3c3.svg": "346653",
        "./1f3c4-1f3fb-200d-2640-fe0f.svg": "717615",
        "./1f3c4-1f3fb-200d-2642-fe0f.svg": "583224",
        "./1f3c4-1f3fb.svg": "537523",
        "./1f3c4-1f3fc-200d-2640-fe0f.svg": "241751",
        "./1f3c4-1f3fc-200d-2642-fe0f.svg": "846577",
        "./1f3c4-1f3fc.svg": "882060",
        "./1f3c4-1f3fd-200d-2640-fe0f.svg": "974307",
        "./1f3c4-1f3fd-200d-2642-fe0f.svg": "357424",
        "./1f3c4-1f3fd.svg": "124152",
        "./1f3c4-1f3fe-200d-2640-fe0f.svg": "839628",
        "./1f3c4-1f3fe-200d-2642-fe0f.svg": "901338",
        "./1f3c4-1f3fe.svg": "903461",
        "./1f3c4-1f3ff-200d-2640-fe0f.svg": "83989",
        "./1f3c4-1f3ff-200d-2642-fe0f.svg": "625622",
        "./1f3c4-1f3ff.svg": "100947",
        "./1f3c4-200d-2640-fe0f.svg": "528322",
        "./1f3c4-200d-2642-fe0f.svg": "416098",
        "./1f3c4.svg": "614135",
        "./1f3c5.svg": "859156",
        "./1f3c6.svg": "431216",
        "./1f3c7-1f3fb.svg": "501009",
        "./1f3c7-1f3fc.svg": "204849",
        "./1f3c7-1f3fd.svg": "379372",
        "./1f3c7-1f3fe.svg": "994969",
        "./1f3c7-1f3ff.svg": "118030",
        "./1f3c7.svg": "173847",
        "./1f3c8.svg": "513162",
        "./1f3c9.svg": "613772",
        "./1f3ca-1f3fb-200d-2640-fe0f.svg": "879101",
        "./1f3ca-1f3fb-200d-2642-fe0f.svg": "263565",
        "./1f3ca-1f3fb.svg": "304161",
        "./1f3ca-1f3fc-200d-2640-fe0f.svg": "989415",
        "./1f3ca-1f3fc-200d-2642-fe0f.svg": "182863",
        "./1f3ca-1f3fc.svg": "911034",
        "./1f3ca-1f3fd-200d-2640-fe0f.svg": "979653",
        "./1f3ca-1f3fd-200d-2642-fe0f.svg": "695902",
        "./1f3ca-1f3fd.svg": "542692",
        "./1f3ca-1f3fe-200d-2640-fe0f.svg": "478455",
        "./1f3ca-1f3fe-200d-2642-fe0f.svg": "47852",
        "./1f3ca-1f3fe.svg": "116633",
        "./1f3ca-1f3ff-200d-2640-fe0f.svg": "544862",
        "./1f3ca-1f3ff-200d-2642-fe0f.svg": "370598",
        "./1f3ca-1f3ff.svg": "372719",
        "./1f3ca-200d-2640-fe0f.svg": "156627",
        "./1f3ca-200d-2642-fe0f.svg": "715150",
        "./1f3ca.svg": "306988",
        "./1f3cb-1f3fb-200d-2640-fe0f.svg": "679341",
        "./1f3cb-1f3fb-200d-2642-fe0f.svg": "138317",
        "./1f3cb-1f3fb.svg": "722767",
        "./1f3cb-1f3fc-200d-2640-fe0f.svg": "742825",
        "./1f3cb-1f3fc-200d-2642-fe0f.svg": "379044",
        "./1f3cb-1f3fc.svg": "292130",
        "./1f3cb-1f3fd-200d-2640-fe0f.svg": "806156",
        "./1f3cb-1f3fd-200d-2642-fe0f.svg": "889898",
        "./1f3cb-1f3fd.svg": "152095",
        "./1f3cb-1f3fe-200d-2640-fe0f.svg": "24307",
        "./1f3cb-1f3fe-200d-2642-fe0f.svg": "879074",
        "./1f3cb-1f3fe.svg": "302799",
        "./1f3cb-1f3ff-200d-2640-fe0f.svg": "286598",
        "./1f3cb-1f3ff-200d-2642-fe0f.svg": "583324",
        "./1f3cb-1f3ff.svg": "972757",
        "./1f3cb-fe0f-200d-2640-fe0f.svg": "833434",
        "./1f3cb-fe0f-200d-2642-fe0f.svg": "151195",
        "./1f3cb.svg": "479658",
        "./1f3cc-1f3fb-200d-2640-fe0f.svg": "186447",
        "./1f3cc-1f3fb-200d-2642-fe0f.svg": "960229",
        "./1f3cc-1f3fb.svg": "199216",
        "./1f3cc-1f3fc-200d-2640-fe0f.svg": "933185",
        "./1f3cc-1f3fc-200d-2642-fe0f.svg": "181068",
        "./1f3cc-1f3fc.svg": "512501",
        "./1f3cc-1f3fd-200d-2640-fe0f.svg": "921727",
        "./1f3cc-1f3fd-200d-2642-fe0f.svg": "461855",
        "./1f3cc-1f3fd.svg": "316835",
        "./1f3cc-1f3fe-200d-2640-fe0f.svg": "870758",
        "./1f3cc-1f3fe-200d-2642-fe0f.svg": "442431",
        "./1f3cc-1f3fe.svg": "618038",
        "./1f3cc-1f3ff-200d-2640-fe0f.svg": "683994",
        "./1f3cc-1f3ff-200d-2642-fe0f.svg": "659135",
        "./1f3cc-1f3ff.svg": "190252",
        "./1f3cc-fe0f-200d-2640-fe0f.svg": "668659",
        "./1f3cc-fe0f-200d-2642-fe0f.svg": "682476",
        "./1f3cc.svg": "622596",
        "./1f3cd.svg": "742377",
        "./1f3ce.svg": "771129",
        "./1f3cf.svg": "462995",
        "./1f3d0.svg": "345363",
        "./1f3d1.svg": "667526",
        "./1f3d2.svg": "501870",
        "./1f3d3.svg": "388108",
        "./1f3d4.svg": "261587",
        "./1f3d5.svg": "983679",
        "./1f3d6.svg": "439336",
        "./1f3d7.svg": "497290",
        "./1f3d8.svg": "17273",
        "./1f3d9.svg": "386645",
        "./1f3da.svg": "993588",
        "./1f3db.svg": "533948",
        "./1f3dc.svg": "331485",
        "./1f3dd.svg": "761687",
        "./1f3de.svg": "176241",
        "./1f3df.svg": "987812",
        "./1f3e0.svg": "320214",
        "./1f3e1.svg": "134543",
        "./1f3e2.svg": "375214",
        "./1f3e3.svg": "421774",
        "./1f3e4.svg": "974717",
        "./1f3e5.svg": "885434",
        "./1f3e6.svg": "546609",
        "./1f3e7.svg": "806096",
        "./1f3e8.svg": "263175",
        "./1f3e9.svg": "727397",
        "./1f3ea.svg": "242036",
        "./1f3eb.svg": "926539",
        "./1f3ec.svg": "905683",
        "./1f3ed.svg": "108952",
        "./1f3ee.svg": "466077",
        "./1f3ef.svg": "370626",
        "./1f3f0.svg": "215719",
        "./1f3f3-fe0f-200d-1f308.svg": "194809",
        "./1f3f3-fe0f-200d-26a7-fe0f.svg": "982209",
        "./1f3f3.svg": "139689",
        "./1f3f4-200d-2620-fe0f.svg": "6902",
        "./1f3f4-e0067-e0062-e0065-e006e-e0067-e007f.svg": "62882",
        "./1f3f4-e0067-e0062-e0073-e0063-e0074-e007f.svg": "58785",
        "./1f3f4-e0067-e0062-e0077-e006c-e0073-e007f.svg": "3625",
        "./1f3f4.svg": "187958",
        "./1f3f5.svg": "507891",
        "./1f3f7.svg": "231168",
        "./1f3f8.svg": "528208",
        "./1f3f9.svg": "55662",
        "./1f3fa.svg": "168375",
        "./1f3fb.svg": "90755",
        "./1f3fc.svg": "926990",
        "./1f3fd.svg": "118148",
        "./1f3fe.svg": "341048",
        "./1f3ff.svg": "227844",
        "./1f400.svg": "891847",
        "./1f401.svg": "614979",
        "./1f402.svg": "491948",
        "./1f403.svg": "514061",
        "./1f404.svg": "617502",
        "./1f405.svg": "950880",
        "./1f406.svg": "603407",
        "./1f407.svg": "410125",
        "./1f408-200d-2b1b.svg": "340272",
        "./1f408.svg": "63530",
        "./1f409.svg": "161174",
        "./1f40a.svg": "27893",
        "./1f40b.svg": "345683",
        "./1f40c.svg": "314313",
        "./1f40d.svg": "549988",
        "./1f40e.svg": "936725",
        "./1f40f.svg": "469093",
        "./1f410.svg": "921606",
        "./1f411.svg": "178110",
        "./1f412.svg": "667012",
        "./1f413.svg": "818899",
        "./1f414.svg": "832072",
        "./1f415-200d-1f9ba.svg": "610586",
        "./1f415.svg": "399686",
        "./1f416.svg": "769965",
        "./1f417.svg": "888147",
        "./1f418.svg": "20322",
        "./1f419.svg": "842276",
        "./1f41a.svg": "644948",
        "./1f41b.svg": "541386",
        "./1f41c.svg": "592810",
        "./1f41d.svg": "318954",
        "./1f41e.svg": "955536",
        "./1f41f.svg": "783984",
        "./1f420.svg": "911216",
        "./1f421.svg": "567232",
        "./1f422.svg": "239990",
        "./1f423.svg": "268776",
        "./1f424.svg": "830271",
        "./1f425.svg": "550873",
        "./1f426-200d-2b1b.svg": "721599",
        "./1f426.svg": "986418",
        "./1f427.svg": "318028",
        "./1f428.svg": "239739",
        "./1f429.svg": "226540",
        "./1f42a.svg": "214772",
        "./1f42b.svg": "200141",
        "./1f42c.svg": "128427",
        "./1f42d.svg": "654657",
        "./1f42e.svg": "391364",
        "./1f42f.svg": "361856",
        "./1f430.svg": "673850",
        "./1f431.svg": "641627",
        "./1f432.svg": "911899",
        "./1f433.svg": "510078",
        "./1f434.svg": "943011",
        "./1f435.svg": "202776",
        "./1f436.svg": "178428",
        "./1f437.svg": "317254",
        "./1f438.svg": "295275",
        "./1f439.svg": "763752",
        "./1f43a.svg": "793441",
        "./1f43b-200d-2744-fe0f.svg": "867980",
        "./1f43b.svg": "108461",
        "./1f43c.svg": "993307",
        "./1f43d.svg": "697261",
        "./1f43e.svg": "898947",
        "./1f43f.svg": "200984",
        "./1f440.svg": "206175",
        "./1f441-200d-1f5e8.svg": "766167",
        "./1f441.svg": "377100",
        "./1f442-1f3fb.svg": "395456",
        "./1f442-1f3fc.svg": "424765",
        "./1f442-1f3fd.svg": "100155",
        "./1f442-1f3fe.svg": "990976",
        "./1f442-1f3ff.svg": "302595",
        "./1f442.svg": "644159",
        "./1f443-1f3fb.svg": "741826",
        "./1f443-1f3fc.svg": "53587",
        "./1f443-1f3fd.svg": "733053",
        "./1f443-1f3fe.svg": "173922",
        "./1f443-1f3ff.svg": "82613",
        "./1f443.svg": "616589",
        "./1f444.svg": "304129",
        "./1f445.svg": "470818",
        "./1f446-1f3fb.svg": "675371",
        "./1f446-1f3fc.svg": "446352",
        "./1f446-1f3fd.svg": "828019",
        "./1f446-1f3fe.svg": "85080",
        "./1f446-1f3ff.svg": "330522",
        "./1f446.svg": "622793",
        "./1f447-1f3fb.svg": "558598",
        "./1f447-1f3fc.svg": "206976",
        "./1f447-1f3fd.svg": "967848",
        "./1f447-1f3fe.svg": "744644",
        "./1f447-1f3ff.svg": "755364",
        "./1f447.svg": "797463",
        "./1f448-1f3fb.svg": "286752",
        "./1f448-1f3fc.svg": "738366",
        "./1f448-1f3fd.svg": "327545",
        "./1f448-1f3fe.svg": "993328",
        "./1f448-1f3ff.svg": "100541",
        "./1f448.svg": "318436",
        "./1f449-1f3fb.svg": "994514",
        "./1f449-1f3fc.svg": "983349",
        "./1f449-1f3fd.svg": "78928",
        "./1f449-1f3fe.svg": "987221",
        "./1f449-1f3ff.svg": "84462",
        "./1f449.svg": "508303",
        "./1f44a-1f3fb.svg": "237783",
        "./1f44a-1f3fc.svg": "653156",
        "./1f44a-1f3fd.svg": "290016",
        "./1f44a-1f3fe.svg": "649766",
        "./1f44a-1f3ff.svg": "353687",
        "./1f44a.svg": "136551",
        "./1f44b-1f3fb.svg": "550114",
        "./1f44b-1f3fc.svg": "776923",
        "./1f44b-1f3fd.svg": "860411",
        "./1f44b-1f3fe.svg": "454844",
        "./1f44b-1f3ff.svg": "806177",
        "./1f44b.svg": "791610",
        "./1f44c-1f3fb.svg": "616607",
        "./1f44c-1f3fc.svg": "706246",
        "./1f44c-1f3fd.svg": "535329",
        "./1f44c-1f3fe.svg": "618909",
        "./1f44c-1f3ff.svg": "577076",
        "./1f44c.svg": "913201",
        "./1f44d-1f3fb.svg": "459452",
        "./1f44d-1f3fc.svg": "395162",
        "./1f44d-1f3fd.svg": "708800",
        "./1f44d-1f3fe.svg": "804399",
        "./1f44d-1f3ff.svg": "846599",
        "./1f44d.svg": "646560",
        "./1f44e-1f3fb.svg": "746718",
        "./1f44e-1f3fc.svg": "742019",
        "./1f44e-1f3fd.svg": "206378",
        "./1f44e-1f3fe.svg": "624264",
        "./1f44e-1f3ff.svg": "429028",
        "./1f44e.svg": "223572",
        "./1f44f-1f3fb.svg": "173174",
        "./1f44f-1f3fc.svg": "948424",
        "./1f44f-1f3fd.svg": "226865",
        "./1f44f-1f3fe.svg": "562720",
        "./1f44f-1f3ff.svg": "131280",
        "./1f44f.svg": "278434",
        "./1f450-1f3fb.svg": "839311",
        "./1f450-1f3fc.svg": "921744",
        "./1f450-1f3fd.svg": "964302",
        "./1f450-1f3fe.svg": "792947",
        "./1f450-1f3ff.svg": "993455",
        "./1f450.svg": "430433",
        "./1f451.svg": "920024",
        "./1f452.svg": "466081",
        "./1f453.svg": "949303",
        "./1f454.svg": "505875",
        "./1f455.svg": "50219",
        "./1f456.svg": "266229",
        "./1f457.svg": "879690",
        "./1f458.svg": "496074",
        "./1f459.svg": "38299",
        "./1f45a.svg": "3036",
        "./1f45b.svg": "866293",
        "./1f45c.svg": "107891",
        "./1f45d.svg": "821518",
        "./1f45e.svg": "532796",
        "./1f45f.svg": "228797",
        "./1f460.svg": "472687",
        "./1f461.svg": "319173",
        "./1f462.svg": "107975",
        "./1f463.svg": "457417",
        "./1f464.svg": "60240",
        "./1f465.svg": "114330",
        "./1f466-1f3fb.svg": "159879",
        "./1f466-1f3fc.svg": "537405",
        "./1f466-1f3fd.svg": "142717",
        "./1f466-1f3fe.svg": "176407",
        "./1f466-1f3ff.svg": "905620",
        "./1f466.svg": "736257",
        "./1f467-1f3fb.svg": "328018",
        "./1f467-1f3fc.svg": "529756",
        "./1f467-1f3fd.svg": "945651",
        "./1f467-1f3fe.svg": "817303",
        "./1f467-1f3ff.svg": "782797",
        "./1f467.svg": "551556",
        "./1f468-1f3fb-200d-1f33e.svg": "289622",
        "./1f468-1f3fb-200d-1f373.svg": "277893",
        "./1f468-1f3fb-200d-1f37c.svg": "11548",
        "./1f468-1f3fb-200d-1f384.svg": "288400",
        "./1f468-1f3fb-200d-1f393.svg": "569106",
        "./1f468-1f3fb-200d-1f3a4.svg": "704737",
        "./1f468-1f3fb-200d-1f3a8.svg": "470826",
        "./1f468-1f3fb-200d-1f3eb.svg": "426757",
        "./1f468-1f3fb-200d-1f3ed.svg": "139763",
        "./1f468-1f3fb-200d-1f4bb.svg": "719551",
        "./1f468-1f3fb-200d-1f4bc.svg": "428481",
        "./1f468-1f3fb-200d-1f527.svg": "291051",
        "./1f468-1f3fb-200d-1f52c.svg": "747619",
        "./1f468-1f3fb-200d-1f680.svg": "497341",
        "./1f468-1f3fb-200d-1f692.svg": "436534",
        "./1f468-1f3fb-200d-1f91d-200d-1f468-1f3fc.svg": "443533",
        "./1f468-1f3fb-200d-1f91d-200d-1f468-1f3fd.svg": "351233",
        "./1f468-1f3fb-200d-1f91d-200d-1f468-1f3fe.svg": "928399",
        "./1f468-1f3fb-200d-1f91d-200d-1f468-1f3ff.svg": "530718",
        "./1f468-1f3fb-200d-1f9af.svg": "65529",
        "./1f468-1f3fb-200d-1f9b0.svg": "190404",
        "./1f468-1f3fb-200d-1f9b1.svg": "534501",
        "./1f468-1f3fb-200d-1f9b2.svg": "82762",
        "./1f468-1f3fb-200d-1f9b3.svg": "254596",
        "./1f468-1f3fb-200d-1f9bc.svg": "413833",
        "./1f468-1f3fb-200d-1f9bd.svg": "685203",
        "./1f468-1f3fb-200d-2695-fe0f.svg": "966942",
        "./1f468-1f3fb-200d-2696-fe0f.svg": "129173",
        "./1f468-1f3fb-200d-2708-fe0f.svg": "978485",
        "./1f468-1f3fb-200d-2764-fe0f-200d-1f468-1f3fb.svg": "899314",
        "./1f468-1f3fb-200d-2764-fe0f-200d-1f468-1f3fc.svg": "61366",
        "./1f468-1f3fb-200d-2764-fe0f-200d-1f468-1f3fd.svg": "930283",
        "./1f468-1f3fb-200d-2764-fe0f-200d-1f468-1f3fe.svg": "759109",
        "./1f468-1f3fb-200d-2764-fe0f-200d-1f468-1f3ff.svg": "300827",
        "./1f468-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb.svg":
          "367585",
        "./1f468-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc.svg":
          "880053",
        "./1f468-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd.svg":
          "514743",
        "./1f468-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe.svg":
          "922387",
        "./1f468-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff.svg":
          "416239",
        "./1f468-1f3fb.svg": "314555",
        "./1f468-1f3fc-200d-1f33e.svg": "868496",
        "./1f468-1f3fc-200d-1f373.svg": "708466",
        "./1f468-1f3fc-200d-1f37c.svg": "763974",
        "./1f468-1f3fc-200d-1f384.svg": "877952",
        "./1f468-1f3fc-200d-1f393.svg": "483748",
        "./1f468-1f3fc-200d-1f3a4.svg": "868984",
        "./1f468-1f3fc-200d-1f3a8.svg": "939477",
        "./1f468-1f3fc-200d-1f3eb.svg": "271869",
        "./1f468-1f3fc-200d-1f3ed.svg": "990554",
        "./1f468-1f3fc-200d-1f4bb.svg": "558021",
        "./1f468-1f3fc-200d-1f4bc.svg": "7580",
        "./1f468-1f3fc-200d-1f527.svg": "97966",
        "./1f468-1f3fc-200d-1f52c.svg": "568523",
        "./1f468-1f3fc-200d-1f680.svg": "135459",
        "./1f468-1f3fc-200d-1f692.svg": "716282",
        "./1f468-1f3fc-200d-1f91d-200d-1f468-1f3fb.svg": "105028",
        "./1f468-1f3fc-200d-1f91d-200d-1f468-1f3fd.svg": "416830",
        "./1f468-1f3fc-200d-1f91d-200d-1f468-1f3fe.svg": "170004",
        "./1f468-1f3fc-200d-1f91d-200d-1f468-1f3ff.svg": "967730",
        "./1f468-1f3fc-200d-1f9af.svg": "941650",
        "./1f468-1f3fc-200d-1f9b0.svg": "277907",
        "./1f468-1f3fc-200d-1f9b1.svg": "13855",
        "./1f468-1f3fc-200d-1f9b2.svg": "700242",
        "./1f468-1f3fc-200d-1f9b3.svg": "450202",
        "./1f468-1f3fc-200d-1f9bc.svg": "446114",
        "./1f468-1f3fc-200d-1f9bd.svg": "852816",
        "./1f468-1f3fc-200d-2695-fe0f.svg": "667960",
        "./1f468-1f3fc-200d-2696-fe0f.svg": "425394",
        "./1f468-1f3fc-200d-2708-fe0f.svg": "557083",
        "./1f468-1f3fc-200d-2764-fe0f-200d-1f468-1f3fb.svg": "144528",
        "./1f468-1f3fc-200d-2764-fe0f-200d-1f468-1f3fc.svg": "780580",
        "./1f468-1f3fc-200d-2764-fe0f-200d-1f468-1f3fd.svg": "849809",
        "./1f468-1f3fc-200d-2764-fe0f-200d-1f468-1f3fe.svg": "630538",
        "./1f468-1f3fc-200d-2764-fe0f-200d-1f468-1f3ff.svg": "260106",
        "./1f468-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb.svg": "35506",
        "./1f468-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc.svg":
          "252708",
        "./1f468-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd.svg":
          "466018",
        "./1f468-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe.svg":
          "629746",
        "./1f468-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff.svg":
          "488189",
        "./1f468-1f3fc.svg": "274416",
        "./1f468-1f3fd-200d-1f33e.svg": "937913",
        "./1f468-1f3fd-200d-1f373.svg": "124382",
        "./1f468-1f3fd-200d-1f37c.svg": "32163",
        "./1f468-1f3fd-200d-1f384.svg": "415154",
        "./1f468-1f3fd-200d-1f393.svg": "596983",
        "./1f468-1f3fd-200d-1f3a4.svg": "304502",
        "./1f468-1f3fd-200d-1f3a8.svg": "336381",
        "./1f468-1f3fd-200d-1f3eb.svg": "663794",
        "./1f468-1f3fd-200d-1f3ed.svg": "215150",
        "./1f468-1f3fd-200d-1f4bb.svg": "468085",
        "./1f468-1f3fd-200d-1f4bc.svg": "443644",
        "./1f468-1f3fd-200d-1f527.svg": "997271",
        "./1f468-1f3fd-200d-1f52c.svg": "839603",
        "./1f468-1f3fd-200d-1f680.svg": "230165",
        "./1f468-1f3fd-200d-1f692.svg": "8286",
        "./1f468-1f3fd-200d-1f91d-200d-1f468-1f3fb.svg": "344275",
        "./1f468-1f3fd-200d-1f91d-200d-1f468-1f3fc.svg": "268623",
        "./1f468-1f3fd-200d-1f91d-200d-1f468-1f3fe.svg": "251767",
        "./1f468-1f3fd-200d-1f91d-200d-1f468-1f3ff.svg": "287437",
        "./1f468-1f3fd-200d-1f9af.svg": "746073",
        "./1f468-1f3fd-200d-1f9b0.svg": "820562",
        "./1f468-1f3fd-200d-1f9b1.svg": "287407",
        "./1f468-1f3fd-200d-1f9b2.svg": "175410",
        "./1f468-1f3fd-200d-1f9b3.svg": "204740",
        "./1f468-1f3fd-200d-1f9bc.svg": "297162",
        "./1f468-1f3fd-200d-1f9bd.svg": "337467",
        "./1f468-1f3fd-200d-2695-fe0f.svg": "561719",
        "./1f468-1f3fd-200d-2696-fe0f.svg": "524995",
        "./1f468-1f3fd-200d-2708-fe0f.svg": "249308",
        "./1f468-1f3fd-200d-2764-fe0f-200d-1f468-1f3fb.svg": "163293",
        "./1f468-1f3fd-200d-2764-fe0f-200d-1f468-1f3fc.svg": "418134",
        "./1f468-1f3fd-200d-2764-fe0f-200d-1f468-1f3fd.svg": "19232",
        "./1f468-1f3fd-200d-2764-fe0f-200d-1f468-1f3fe.svg": "197028",
        "./1f468-1f3fd-200d-2764-fe0f-200d-1f468-1f3ff.svg": "142254",
        "./1f468-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb.svg":
          "246703",
        "./1f468-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc.svg":
          "566988",
        "./1f468-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd.svg":
          "232572",
        "./1f468-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe.svg":
          "911343",
        "./1f468-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff.svg":
          "794896",
        "./1f468-1f3fd.svg": "832296",
        "./1f468-1f3fe-200d-1f33e.svg": "358242",
        "./1f468-1f3fe-200d-1f373.svg": "251808",
        "./1f468-1f3fe-200d-1f37c.svg": "310718",
        "./1f468-1f3fe-200d-1f384.svg": "606261",
        "./1f468-1f3fe-200d-1f393.svg": "798875",
        "./1f468-1f3fe-200d-1f3a4.svg": "514181",
        "./1f468-1f3fe-200d-1f3a8.svg": "492043",
        "./1f468-1f3fe-200d-1f3eb.svg": "899330",
        "./1f468-1f3fe-200d-1f3ed.svg": "945281",
        "./1f468-1f3fe-200d-1f4bb.svg": "164005",
        "./1f468-1f3fe-200d-1f4bc.svg": "413669",
        "./1f468-1f3fe-200d-1f527.svg": "67908",
        "./1f468-1f3fe-200d-1f52c.svg": "431964",
        "./1f468-1f3fe-200d-1f680.svg": "814058",
        "./1f468-1f3fe-200d-1f692.svg": "72070",
        "./1f468-1f3fe-200d-1f91d-200d-1f468-1f3fb.svg": "340185",
        "./1f468-1f3fe-200d-1f91d-200d-1f468-1f3fc.svg": "628836",
        "./1f468-1f3fe-200d-1f91d-200d-1f468-1f3fd.svg": "749666",
        "./1f468-1f3fe-200d-1f91d-200d-1f468-1f3ff.svg": "298991",
        "./1f468-1f3fe-200d-1f9af.svg": "356706",
        "./1f468-1f3fe-200d-1f9b0.svg": "944856",
        "./1f468-1f3fe-200d-1f9b1.svg": "919363",
        "./1f468-1f3fe-200d-1f9b2.svg": "469475",
        "./1f468-1f3fe-200d-1f9b3.svg": "331755",
        "./1f468-1f3fe-200d-1f9bc.svg": "67773",
        "./1f468-1f3fe-200d-1f9bd.svg": "627425",
        "./1f468-1f3fe-200d-2695-fe0f.svg": "294967",
        "./1f468-1f3fe-200d-2696-fe0f.svg": "23049",
        "./1f468-1f3fe-200d-2708-fe0f.svg": "642025",
        "./1f468-1f3fe-200d-2764-fe0f-200d-1f468-1f3fb.svg": "900588",
        "./1f468-1f3fe-200d-2764-fe0f-200d-1f468-1f3fc.svg": "233082",
        "./1f468-1f3fe-200d-2764-fe0f-200d-1f468-1f3fd.svg": "963669",
        "./1f468-1f3fe-200d-2764-fe0f-200d-1f468-1f3fe.svg": "513996",
        "./1f468-1f3fe-200d-2764-fe0f-200d-1f468-1f3ff.svg": "886312",
        "./1f468-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb.svg":
          "402873",
        "./1f468-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc.svg":
          "305385",
        "./1f468-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd.svg":
          "627951",
        "./1f468-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe.svg":
          "817038",
        "./1f468-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff.svg":
          "443135",
        "./1f468-1f3fe.svg": "269493",
        "./1f468-1f3ff-200d-1f33e.svg": "734368",
        "./1f468-1f3ff-200d-1f373.svg": "165823",
        "./1f468-1f3ff-200d-1f37c.svg": "995429",
        "./1f468-1f3ff-200d-1f384.svg": "455043",
        "./1f468-1f3ff-200d-1f393.svg": "698122",
        "./1f468-1f3ff-200d-1f3a4.svg": "195722",
        "./1f468-1f3ff-200d-1f3a8.svg": "993657",
        "./1f468-1f3ff-200d-1f3eb.svg": "529685",
        "./1f468-1f3ff-200d-1f3ed.svg": "130481",
        "./1f468-1f3ff-200d-1f4bb.svg": "94784",
        "./1f468-1f3ff-200d-1f4bc.svg": "919602",
        "./1f468-1f3ff-200d-1f527.svg": "856232",
        "./1f468-1f3ff-200d-1f52c.svg": "559517",
        "./1f468-1f3ff-200d-1f680.svg": "965834",
        "./1f468-1f3ff-200d-1f692.svg": "658616",
        "./1f468-1f3ff-200d-1f91d-200d-1f468-1f3fb.svg": "291519",
        "./1f468-1f3ff-200d-1f91d-200d-1f468-1f3fc.svg": "314338",
        "./1f468-1f3ff-200d-1f91d-200d-1f468-1f3fd.svg": "851771",
        "./1f468-1f3ff-200d-1f91d-200d-1f468-1f3fe.svg": "985940",
        "./1f468-1f3ff-200d-1f9af.svg": "720769",
        "./1f468-1f3ff-200d-1f9b0.svg": "430417",
        "./1f468-1f3ff-200d-1f9b1.svg": "253738",
        "./1f468-1f3ff-200d-1f9b2.svg": "703201",
        "./1f468-1f3ff-200d-1f9b3.svg": "315859",
        "./1f468-1f3ff-200d-1f9bc.svg": "56411",
        "./1f468-1f3ff-200d-1f9bd.svg": "815901",
        "./1f468-1f3ff-200d-2695-fe0f.svg": "500885",
        "./1f468-1f3ff-200d-2696-fe0f.svg": "112715",
        "./1f468-1f3ff-200d-2708-fe0f.svg": "282996",
        "./1f468-1f3ff-200d-2764-fe0f-200d-1f468-1f3fb.svg": "626359",
        "./1f468-1f3ff-200d-2764-fe0f-200d-1f468-1f3fc.svg": "15771",
        "./1f468-1f3ff-200d-2764-fe0f-200d-1f468-1f3fd.svg": "116852",
        "./1f468-1f3ff-200d-2764-fe0f-200d-1f468-1f3fe.svg": "677575",
        "./1f468-1f3ff-200d-2764-fe0f-200d-1f468-1f3ff.svg": "288107",
        "./1f468-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb.svg":
          "691513",
        "./1f468-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc.svg":
          "285036",
        "./1f468-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd.svg":
          "369384",
        "./1f468-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe.svg":
          "505388",
        "./1f468-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff.svg":
          "318311",
        "./1f468-1f3ff.svg": "101155",
        "./1f468-200d-1f33e.svg": "253314",
        "./1f468-200d-1f373.svg": "522507",
        "./1f468-200d-1f37c.svg": "862179",
        "./1f468-200d-1f384.svg": "15036",
        "./1f468-200d-1f393.svg": "630512",
        "./1f468-200d-1f3a4.svg": "409070",
        "./1f468-200d-1f3a8.svg": "839480",
        "./1f468-200d-1f3eb.svg": "623074",
        "./1f468-200d-1f3ed.svg": "682370",
        "./1f468-200d-1f466-200d-1f466.svg": "177420",
        "./1f468-200d-1f466.svg": "196361",
        "./1f468-200d-1f467-200d-1f466.svg": "136995",
        "./1f468-200d-1f467-200d-1f467.svg": "38458",
        "./1f468-200d-1f467.svg": "363858",
        "./1f468-200d-1f468-200d-1f466-200d-1f466.svg": "380783",
        "./1f468-200d-1f468-200d-1f466.svg": "782958",
        "./1f468-200d-1f468-200d-1f467-200d-1f466.svg": "41498",
        "./1f468-200d-1f468-200d-1f467-200d-1f467.svg": "759295",
        "./1f468-200d-1f468-200d-1f467.svg": "60775",
        "./1f468-200d-1f469-200d-1f466-200d-1f466.svg": "607662",
        "./1f468-200d-1f469-200d-1f466.svg": "709286",
        "./1f468-200d-1f469-200d-1f467-200d-1f466.svg": "309507",
        "./1f468-200d-1f469-200d-1f467-200d-1f467.svg": "877909",
        "./1f468-200d-1f469-200d-1f467.svg": "702336",
        "./1f468-200d-1f4bb.svg": "959514",
        "./1f468-200d-1f4bc.svg": "731533",
        "./1f468-200d-1f527.svg": "901410",
        "./1f468-200d-1f52c.svg": "438555",
        "./1f468-200d-1f680.svg": "716409",
        "./1f468-200d-1f692.svg": "326726",
        "./1f468-200d-1f9af.svg": "751738",
        "./1f468-200d-1f9b0.svg": "850121",
        "./1f468-200d-1f9b1.svg": "25439",
        "./1f468-200d-1f9b2.svg": "523207",
        "./1f468-200d-1f9b3.svg": "120831",
        "./1f468-200d-1f9bc.svg": "640526",
        "./1f468-200d-1f9bd.svg": "208568",
        "./1f468-200d-2695-fe0f.svg": "901382",
        "./1f468-200d-2696-fe0f.svg": "434420",
        "./1f468-200d-2708-fe0f.svg": "878132",
        "./1f468-200d-2764-fe0f-200d-1f468.svg": "663502",
        "./1f468-200d-2764-fe0f-200d-1f48b-200d-1f468.svg": "485641",
        "./1f468.svg": "205141",
        "./1f469-1f3fb-200d-1f33e.svg": "751411",
        "./1f469-1f3fb-200d-1f373.svg": "65941",
        "./1f469-1f3fb-200d-1f37c.svg": "235934",
        "./1f469-1f3fb-200d-1f384.svg": "261685",
        "./1f469-1f3fb-200d-1f393.svg": "270084",
        "./1f469-1f3fb-200d-1f3a4.svg": "823433",
        "./1f469-1f3fb-200d-1f3a8.svg": "376568",
        "./1f469-1f3fb-200d-1f3eb.svg": "331111",
        "./1f469-1f3fb-200d-1f3ed.svg": "771302",
        "./1f469-1f3fb-200d-1f4bb.svg": "123142",
        "./1f469-1f3fb-200d-1f4bc.svg": "648000",
        "./1f469-1f3fb-200d-1f527.svg": "342171",
        "./1f469-1f3fb-200d-1f52c.svg": "673118",
        "./1f469-1f3fb-200d-1f680.svg": "60414",
        "./1f469-1f3fb-200d-1f692.svg": "432652",
        "./1f469-1f3fb-200d-1f91d-200d-1f468-1f3fc.svg": "441817",
        "./1f469-1f3fb-200d-1f91d-200d-1f468-1f3fd.svg": "799690",
        "./1f469-1f3fb-200d-1f91d-200d-1f468-1f3fe.svg": "206950",
        "./1f469-1f3fb-200d-1f91d-200d-1f468-1f3ff.svg": "581838",
        "./1f469-1f3fb-200d-1f91d-200d-1f469-1f3fc.svg": "283292",
        "./1f469-1f3fb-200d-1f91d-200d-1f469-1f3fd.svg": "207544",
        "./1f469-1f3fb-200d-1f91d-200d-1f469-1f3fe.svg": "435905",
        "./1f469-1f3fb-200d-1f91d-200d-1f469-1f3ff.svg": "241957",
        "./1f469-1f3fb-200d-1f9af.svg": "344117",
        "./1f469-1f3fb-200d-1f9b0.svg": "56484",
        "./1f469-1f3fb-200d-1f9b1.svg": "789606",
        "./1f469-1f3fb-200d-1f9b2.svg": "195054",
        "./1f469-1f3fb-200d-1f9b3.svg": "436934",
        "./1f469-1f3fb-200d-1f9bc.svg": "169522",
        "./1f469-1f3fb-200d-1f9bd.svg": "301607",
        "./1f469-1f3fb-200d-2695-fe0f.svg": "91972",
        "./1f469-1f3fb-200d-2696-fe0f.svg": "202732",
        "./1f469-1f3fb-200d-2708-fe0f.svg": "861479",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f468-1f3fb.svg": "168749",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f468-1f3fc.svg": "104642",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f468-1f3fd.svg": "843215",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f468-1f3fe.svg": "168237",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f468-1f3ff.svg": "470354",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f469-1f3fb.svg": "178951",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f469-1f3fc.svg": "478239",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f469-1f3fd.svg": "428426",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f469-1f3fe.svg": "941365",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f469-1f3ff.svg": "860440",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb.svg":
          "792172",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc.svg":
          "536878",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd.svg":
          "949146",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe.svg":
          "919368",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff.svg":
          "760986",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fb.svg":
          "183573",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fc.svg":
          "301028",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fd.svg":
          "639481",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fe.svg":
          "832366",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3ff.svg":
          "213811",
        "./1f469-1f3fb.svg": "685538",
        "./1f469-1f3fc-200d-1f33e.svg": "50284",
        "./1f469-1f3fc-200d-1f373.svg": "324211",
        "./1f469-1f3fc-200d-1f37c.svg": "843348",
        "./1f469-1f3fc-200d-1f384.svg": "685486",
        "./1f469-1f3fc-200d-1f393.svg": "41290",
        "./1f469-1f3fc-200d-1f3a4.svg": "549429",
        "./1f469-1f3fc-200d-1f3a8.svg": "222890",
        "./1f469-1f3fc-200d-1f3eb.svg": "334771",
        "./1f469-1f3fc-200d-1f3ed.svg": "511788",
        "./1f469-1f3fc-200d-1f4bb.svg": "677723",
        "./1f469-1f3fc-200d-1f4bc.svg": "281928",
        "./1f469-1f3fc-200d-1f527.svg": "610068",
        "./1f469-1f3fc-200d-1f52c.svg": "930747",
        "./1f469-1f3fc-200d-1f680.svg": "654388",
        "./1f469-1f3fc-200d-1f692.svg": "644021",
        "./1f469-1f3fc-200d-1f91d-200d-1f468-1f3fb.svg": "241644",
        "./1f469-1f3fc-200d-1f91d-200d-1f468-1f3fd.svg": "820115",
        "./1f469-1f3fc-200d-1f91d-200d-1f468-1f3fe.svg": "307941",
        "./1f469-1f3fc-200d-1f91d-200d-1f468-1f3ff.svg": "860393",
        "./1f469-1f3fc-200d-1f91d-200d-1f469-1f3fb.svg": "898601",
        "./1f469-1f3fc-200d-1f91d-200d-1f469-1f3fd.svg": "220182",
        "./1f469-1f3fc-200d-1f91d-200d-1f469-1f3fe.svg": "291715",
        "./1f469-1f3fc-200d-1f91d-200d-1f469-1f3ff.svg": "804905",
        "./1f469-1f3fc-200d-1f9af.svg": "819954",
        "./1f469-1f3fc-200d-1f9b0.svg": "342307",
        "./1f469-1f3fc-200d-1f9b1.svg": "635192",
        "./1f469-1f3fc-200d-1f9b2.svg": "352063",
        "./1f469-1f3fc-200d-1f9b3.svg": "465909",
        "./1f469-1f3fc-200d-1f9bc.svg": "878940",
        "./1f469-1f3fc-200d-1f9bd.svg": "942398",
        "./1f469-1f3fc-200d-2695-fe0f.svg": "21207",
        "./1f469-1f3fc-200d-2696-fe0f.svg": "428110",
        "./1f469-1f3fc-200d-2708-fe0f.svg": "514978",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f468-1f3fb.svg": "914964",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f468-1f3fc.svg": "826167",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f468-1f3fd.svg": "725636",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f468-1f3fe.svg": "826192",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f468-1f3ff.svg": "466151",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f469-1f3fb.svg": "236693",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f469-1f3fc.svg": "899670",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f469-1f3fd.svg": "275736",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f469-1f3fe.svg": "301658",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f469-1f3ff.svg": "892267",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb.svg":
          "323158",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc.svg":
          "925312",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd.svg":
          "612887",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe.svg":
          "132294",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff.svg":
          "123882",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fb.svg":
          "921902",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fc.svg":
          "835188",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fd.svg":
          "553761",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fe.svg": "92497",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3ff.svg":
          "182802",
        "./1f469-1f3fc.svg": "666209",
        "./1f469-1f3fd-200d-1f33e.svg": "76911",
        "./1f469-1f3fd-200d-1f373.svg": "95123",
        "./1f469-1f3fd-200d-1f37c.svg": "704772",
        "./1f469-1f3fd-200d-1f384.svg": "209078",
        "./1f469-1f3fd-200d-1f393.svg": "475586",
        "./1f469-1f3fd-200d-1f3a4.svg": "318906",
        "./1f469-1f3fd-200d-1f3a8.svg": "415850",
        "./1f469-1f3fd-200d-1f3eb.svg": "431259",
        "./1f469-1f3fd-200d-1f3ed.svg": "702140",
        "./1f469-1f3fd-200d-1f4bb.svg": "413381",
        "./1f469-1f3fd-200d-1f4bc.svg": "636308",
        "./1f469-1f3fd-200d-1f527.svg": "323317",
        "./1f469-1f3fd-200d-1f52c.svg": "613418",
        "./1f469-1f3fd-200d-1f680.svg": "165458",
        "./1f469-1f3fd-200d-1f692.svg": "555091",
        "./1f469-1f3fd-200d-1f91d-200d-1f468-1f3fb.svg": "8220",
        "./1f469-1f3fd-200d-1f91d-200d-1f468-1f3fc.svg": "529564",
        "./1f469-1f3fd-200d-1f91d-200d-1f468-1f3fe.svg": "801897",
        "./1f469-1f3fd-200d-1f91d-200d-1f468-1f3ff.svg": "333898",
        "./1f469-1f3fd-200d-1f91d-200d-1f469-1f3fb.svg": "154471",
        "./1f469-1f3fd-200d-1f91d-200d-1f469-1f3fc.svg": "969224",
        "./1f469-1f3fd-200d-1f91d-200d-1f469-1f3fe.svg": "827444",
        "./1f469-1f3fd-200d-1f91d-200d-1f469-1f3ff.svg": "11168",
        "./1f469-1f3fd-200d-1f9af.svg": "723311",
        "./1f469-1f3fd-200d-1f9b0.svg": "189473",
        "./1f469-1f3fd-200d-1f9b1.svg": "350196",
        "./1f469-1f3fd-200d-1f9b2.svg": "19316",
        "./1f469-1f3fd-200d-1f9b3.svg": "987011",
        "./1f469-1f3fd-200d-1f9bc.svg": "616244",
        "./1f469-1f3fd-200d-1f9bd.svg": "97450",
        "./1f469-1f3fd-200d-2695-fe0f.svg": "613481",
        "./1f469-1f3fd-200d-2696-fe0f.svg": "155048",
        "./1f469-1f3fd-200d-2708-fe0f.svg": "124170",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f468-1f3fb.svg": "176942",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f468-1f3fc.svg": "602653",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f468-1f3fd.svg": "824041",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f468-1f3fe.svg": "766408",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f468-1f3ff.svg": "114222",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f469-1f3fb.svg": "778596",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f469-1f3fc.svg": "973068",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f469-1f3fd.svg": "602584",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f469-1f3fe.svg": "938200",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f469-1f3ff.svg": "554342",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb.svg":
          "630382",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc.svg":
          "886952",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd.svg":
          "986147",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe.svg":
          "880202",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff.svg":
          "684085",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fb.svg":
          "508547",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fc.svg":
          "673679",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fd.svg":
          "532869",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fe.svg":
          "731069",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3ff.svg":
          "196589",
        "./1f469-1f3fd.svg": "934721",
        "./1f469-1f3fe-200d-1f33e.svg": "840757",
        "./1f469-1f3fe-200d-1f373.svg": "321853",
        "./1f469-1f3fe-200d-1f37c.svg": "688884",
        "./1f469-1f3fe-200d-1f384.svg": "120650",
        "./1f469-1f3fe-200d-1f393.svg": "675094",
        "./1f469-1f3fe-200d-1f3a4.svg": "145851",
        "./1f469-1f3fe-200d-1f3a8.svg": "778119",
        "./1f469-1f3fe-200d-1f3eb.svg": "326196",
        "./1f469-1f3fe-200d-1f3ed.svg": "205500",
        "./1f469-1f3fe-200d-1f4bb.svg": "562214",
        "./1f469-1f3fe-200d-1f4bc.svg": "345900",
        "./1f469-1f3fe-200d-1f527.svg": "531827",
        "./1f469-1f3fe-200d-1f52c.svg": "957876",
        "./1f469-1f3fe-200d-1f680.svg": "962567",
        "./1f469-1f3fe-200d-1f692.svg": "961891",
        "./1f469-1f3fe-200d-1f91d-200d-1f468-1f3fb.svg": "925716",
        "./1f469-1f3fe-200d-1f91d-200d-1f468-1f3fc.svg": "109475",
        "./1f469-1f3fe-200d-1f91d-200d-1f468-1f3fd.svg": "882648",
        "./1f469-1f3fe-200d-1f91d-200d-1f468-1f3ff.svg": "654474",
        "./1f469-1f3fe-200d-1f91d-200d-1f469-1f3fb.svg": "321284",
        "./1f469-1f3fe-200d-1f91d-200d-1f469-1f3fc.svg": "112744",
        "./1f469-1f3fe-200d-1f91d-200d-1f469-1f3fd.svg": "480928",
        "./1f469-1f3fe-200d-1f91d-200d-1f469-1f3ff.svg": "459008",
        "./1f469-1f3fe-200d-1f9af.svg": "100112",
        "./1f469-1f3fe-200d-1f9b0.svg": "910324",
        "./1f469-1f3fe-200d-1f9b1.svg": "69342",
        "./1f469-1f3fe-200d-1f9b2.svg": "905377",
        "./1f469-1f3fe-200d-1f9b3.svg": "329298",
        "./1f469-1f3fe-200d-1f9bc.svg": "380720",
        "./1f469-1f3fe-200d-1f9bd.svg": "797610",
        "./1f469-1f3fe-200d-2695-fe0f.svg": "140928",
        "./1f469-1f3fe-200d-2696-fe0f.svg": "789007",
        "./1f469-1f3fe-200d-2708-fe0f.svg": "673680",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f468-1f3fb.svg": "940023",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f468-1f3fc.svg": "716985",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f468-1f3fd.svg": "592798",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f468-1f3fe.svg": "356700",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f468-1f3ff.svg": "261450",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f469-1f3fb.svg": "938790",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f469-1f3fc.svg": "249514",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f469-1f3fd.svg": "493124",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f469-1f3fe.svg": "447374",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f469-1f3ff.svg": "209578",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb.svg":
          "707153",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc.svg":
          "370415",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd.svg":
          "815007",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe.svg":
          "535409",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff.svg": "34168",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fb.svg":
          "581728",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fc.svg":
          "652647",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fd.svg":
          "970309",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fe.svg":
          "743810",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3ff.svg":
          "300850",
        "./1f469-1f3fe.svg": "534324",
        "./1f469-1f3ff-200d-1f33e.svg": "319932",
        "./1f469-1f3ff-200d-1f373.svg": "431299",
        "./1f469-1f3ff-200d-1f37c.svg": "142978",
        "./1f469-1f3ff-200d-1f384.svg": "891066",
        "./1f469-1f3ff-200d-1f393.svg": "422075",
        "./1f469-1f3ff-200d-1f3a4.svg": "550971",
        "./1f469-1f3ff-200d-1f3a8.svg": "527643",
        "./1f469-1f3ff-200d-1f3eb.svg": "971430",
        "./1f469-1f3ff-200d-1f3ed.svg": "908459",
        "./1f469-1f3ff-200d-1f4bb.svg": "819967",
        "./1f469-1f3ff-200d-1f4bc.svg": "89779",
        "./1f469-1f3ff-200d-1f527.svg": "374666",
        "./1f469-1f3ff-200d-1f52c.svg": "492906",
        "./1f469-1f3ff-200d-1f680.svg": "865207",
        "./1f469-1f3ff-200d-1f692.svg": "824963",
        "./1f469-1f3ff-200d-1f91d-200d-1f468-1f3fb.svg": "204617",
        "./1f469-1f3ff-200d-1f91d-200d-1f468-1f3fc.svg": "5282",
        "./1f469-1f3ff-200d-1f91d-200d-1f468-1f3fd.svg": "99677",
        "./1f469-1f3ff-200d-1f91d-200d-1f468-1f3fe.svg": "453152",
        "./1f469-1f3ff-200d-1f91d-200d-1f469-1f3fb.svg": "101645",
        "./1f469-1f3ff-200d-1f91d-200d-1f469-1f3fc.svg": "481603",
        "./1f469-1f3ff-200d-1f91d-200d-1f469-1f3fd.svg": "821729",
        "./1f469-1f3ff-200d-1f91d-200d-1f469-1f3fe.svg": "490816",
        "./1f469-1f3ff-200d-1f9af.svg": "568346",
        "./1f469-1f3ff-200d-1f9b0.svg": "302305",
        "./1f469-1f3ff-200d-1f9b1.svg": "428422",
        "./1f469-1f3ff-200d-1f9b2.svg": "676930",
        "./1f469-1f3ff-200d-1f9b3.svg": "66734",
        "./1f469-1f3ff-200d-1f9bc.svg": "31381",
        "./1f469-1f3ff-200d-1f9bd.svg": "723029",
        "./1f469-1f3ff-200d-2695-fe0f.svg": "500398",
        "./1f469-1f3ff-200d-2696-fe0f.svg": "910420",
        "./1f469-1f3ff-200d-2708-fe0f.svg": "558550",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f468-1f3fb.svg": "501093",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f468-1f3fc.svg": "666751",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f468-1f3fd.svg": "764023",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f468-1f3fe.svg": "688934",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f468-1f3ff.svg": "593605",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f469-1f3fb.svg": "7505",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f469-1f3fc.svg": "8746",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f469-1f3fd.svg": "172864",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f469-1f3fe.svg": "344197",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f469-1f3ff.svg": "487519",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb.svg":
          "352614",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc.svg":
          "462042",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd.svg":
          "284213",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe.svg":
          "212656",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff.svg": "86979",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fb.svg":
          "605869",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fc.svg":
          "989380",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fd.svg": "13652",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fe.svg":
          "701131",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3ff.svg":
          "585757",
        "./1f469-1f3ff.svg": "4351",
        "./1f469-200d-1f33e.svg": "512054",
        "./1f469-200d-1f373.svg": "291779",
        "./1f469-200d-1f37c.svg": "502120",
        "./1f469-200d-1f384.svg": "850897",
        "./1f469-200d-1f393.svg": "144152",
        "./1f469-200d-1f3a4.svg": "897081",
        "./1f469-200d-1f3a8.svg": "188950",
        "./1f469-200d-1f3eb.svg": "527705",
        "./1f469-200d-1f3ed.svg": "145267",
        "./1f469-200d-1f466-200d-1f466.svg": "158450",
        "./1f469-200d-1f466.svg": "312012",
        "./1f469-200d-1f467-200d-1f466.svg": "721201",
        "./1f469-200d-1f467-200d-1f467.svg": "340845",
        "./1f469-200d-1f467.svg": "42895",
        "./1f469-200d-1f469-200d-1f466-200d-1f466.svg": "528061",
        "./1f469-200d-1f469-200d-1f466.svg": "651788",
        "./1f469-200d-1f469-200d-1f467-200d-1f466.svg": "772914",
        "./1f469-200d-1f469-200d-1f467-200d-1f467.svg": "715391",
        "./1f469-200d-1f469-200d-1f467.svg": "374245",
        "./1f469-200d-1f4bb.svg": "56221",
        "./1f469-200d-1f4bc.svg": "289420",
        "./1f469-200d-1f527.svg": "350005",
        "./1f469-200d-1f52c.svg": "120764",
        "./1f469-200d-1f680.svg": "820663",
        "./1f469-200d-1f692.svg": "440553",
        "./1f469-200d-1f9af.svg": "322646",
        "./1f469-200d-1f9b0.svg": "743236",
        "./1f469-200d-1f9b1.svg": "188525",
        "./1f469-200d-1f9b2.svg": "595773",
        "./1f469-200d-1f9b3.svg": "61613",
        "./1f469-200d-1f9bc.svg": "33668",
        "./1f469-200d-1f9bd.svg": "380015",
        "./1f469-200d-2695-fe0f.svg": "540758",
        "./1f469-200d-2696-fe0f.svg": "416366",
        "./1f469-200d-2708-fe0f.svg": "93186",
        "./1f469-200d-2764-fe0f-200d-1f468.svg": "428211",
        "./1f469-200d-2764-fe0f-200d-1f469.svg": "142331",
        "./1f469-200d-2764-fe0f-200d-1f48b-200d-1f468.svg": "647260",
        "./1f469-200d-2764-fe0f-200d-1f48b-200d-1f469.svg": "444269",
        "./1f469.svg": "900072",
        "./1f46a.svg": "991579",
        "./1f46b-1f3fb.svg": "22754",
        "./1f46b-1f3fc.svg": "428924",
        "./1f46b-1f3fd.svg": "99424",
        "./1f46b-1f3fe.svg": "847233",
        "./1f46b-1f3ff.svg": "863220",
        "./1f46b.svg": "847099",
        "./1f46c-1f3fb.svg": "505488",
        "./1f46c-1f3fc.svg": "804236",
        "./1f46c-1f3fd.svg": "764434",
        "./1f46c-1f3fe.svg": "919359",
        "./1f46c-1f3ff.svg": "454071",
        "./1f46c.svg": "57250",
        "./1f46d-1f3fb.svg": "504860",
        "./1f46d-1f3fc.svg": "83538",
        "./1f46d-1f3fd.svg": "201768",
        "./1f46d-1f3fe.svg": "74686",
        "./1f46d-1f3ff.svg": "460081",
        "./1f46d.svg": "284659",
        "./1f46e-1f3fb-200d-2640-fe0f.svg": "923608",
        "./1f46e-1f3fb-200d-2642-fe0f.svg": "844344",
        "./1f46e-1f3fb.svg": "832153",
        "./1f46e-1f3fc-200d-2640-fe0f.svg": "15354",
        "./1f46e-1f3fc-200d-2642-fe0f.svg": "256788",
        "./1f46e-1f3fc.svg": "649416",
        "./1f46e-1f3fd-200d-2640-fe0f.svg": "61067",
        "./1f46e-1f3fd-200d-2642-fe0f.svg": "556340",
        "./1f46e-1f3fd.svg": "502743",
        "./1f46e-1f3fe-200d-2640-fe0f.svg": "715018",
        "./1f46e-1f3fe-200d-2642-fe0f.svg": "712048",
        "./1f46e-1f3fe.svg": "99777",
        "./1f46e-1f3ff-200d-2640-fe0f.svg": "105339",
        "./1f46e-1f3ff-200d-2642-fe0f.svg": "81534",
        "./1f46e-1f3ff.svg": "800986",
        "./1f46e-200d-2640-fe0f.svg": "903378",
        "./1f46e-200d-2642-fe0f.svg": "589976",
        "./1f46e.svg": "903891",
        "./1f46f-200d-2640-fe0f.svg": "395420",
        "./1f46f-200d-2642-fe0f.svg": "567680",
        "./1f46f.svg": "727641",
        "./1f470-1f3fb-200d-2640-fe0f.svg": "269593",
        "./1f470-1f3fb-200d-2642-fe0f.svg": "991626",
        "./1f470-1f3fb.svg": "464092",
        "./1f470-1f3fc-200d-2640-fe0f.svg": "841545",
        "./1f470-1f3fc-200d-2642-fe0f.svg": "389974",
        "./1f470-1f3fc.svg": "62103",
        "./1f470-1f3fd-200d-2640-fe0f.svg": "51536",
        "./1f470-1f3fd-200d-2642-fe0f.svg": "878643",
        "./1f470-1f3fd.svg": "295860",
        "./1f470-1f3fe-200d-2640-fe0f.svg": "217585",
        "./1f470-1f3fe-200d-2642-fe0f.svg": "652991",
        "./1f470-1f3fe.svg": "30873",
        "./1f470-1f3ff-200d-2640-fe0f.svg": "977834",
        "./1f470-1f3ff-200d-2642-fe0f.svg": "651643",
        "./1f470-1f3ff.svg": "732234",
        "./1f470-200d-2640-fe0f.svg": "739543",
        "./1f470-200d-2642-fe0f.svg": "997830",
        "./1f470.svg": "688272",
        "./1f471-1f3fb-200d-2640-fe0f.svg": "33066",
        "./1f471-1f3fb-200d-2642-fe0f.svg": "901040",
        "./1f471-1f3fb.svg": "489064",
        "./1f471-1f3fc-200d-2640-fe0f.svg": "409509",
        "./1f471-1f3fc-200d-2642-fe0f.svg": "299292",
        "./1f471-1f3fc.svg": "30256",
        "./1f471-1f3fd-200d-2640-fe0f.svg": "801152",
        "./1f471-1f3fd-200d-2642-fe0f.svg": "375179",
        "./1f471-1f3fd.svg": "529718",
        "./1f471-1f3fe-200d-2640-fe0f.svg": "772340",
        "./1f471-1f3fe-200d-2642-fe0f.svg": "77268",
        "./1f471-1f3fe.svg": "369111",
        "./1f471-1f3ff-200d-2640-fe0f.svg": "385705",
        "./1f471-1f3ff-200d-2642-fe0f.svg": "303089",
        "./1f471-1f3ff.svg": "571184",
        "./1f471-200d-2640-fe0f.svg": "211534",
        "./1f471-200d-2642-fe0f.svg": "665195",
        "./1f471.svg": "933941",
        "./1f472-1f3fb.svg": "753560",
        "./1f472-1f3fc.svg": "476177",
        "./1f472-1f3fd.svg": "613665",
        "./1f472-1f3fe.svg": "857735",
        "./1f472-1f3ff.svg": "917214",
        "./1f472.svg": "449380",
        "./1f473-1f3fb-200d-2640-fe0f.svg": "827085",
        "./1f473-1f3fb-200d-2642-fe0f.svg": "274862",
        "./1f473-1f3fb.svg": "677195",
        "./1f473-1f3fc-200d-2640-fe0f.svg": "634845",
        "./1f473-1f3fc-200d-2642-fe0f.svg": "878006",
        "./1f473-1f3fc.svg": "330931",
        "./1f473-1f3fd-200d-2640-fe0f.svg": "257432",
        "./1f473-1f3fd-200d-2642-fe0f.svg": "229318",
        "./1f473-1f3fd.svg": "467054",
        "./1f473-1f3fe-200d-2640-fe0f.svg": "3005",
        "./1f473-1f3fe-200d-2642-fe0f.svg": "986561",
        "./1f473-1f3fe.svg": "379545",
        "./1f473-1f3ff-200d-2640-fe0f.svg": "665692",
        "./1f473-1f3ff-200d-2642-fe0f.svg": "733831",
        "./1f473-1f3ff.svg": "235560",
        "./1f473-200d-2640-fe0f.svg": "759402",
        "./1f473-200d-2642-fe0f.svg": "839950",
        "./1f473.svg": "500884",
        "./1f474-1f3fb.svg": "966753",
        "./1f474-1f3fc.svg": "345202",
        "./1f474-1f3fd.svg": "387823",
        "./1f474-1f3fe.svg": "481657",
        "./1f474-1f3ff.svg": "378642",
        "./1f474.svg": "811018",
        "./1f475-1f3fb.svg": "641582",
        "./1f475-1f3fc.svg": "730325",
        "./1f475-1f3fd.svg": "432141",
        "./1f475-1f3fe.svg": "525055",
        "./1f475-1f3ff.svg": "622053",
        "./1f475.svg": "670376",
        "./1f476-1f3fb.svg": "952136",
        "./1f476-1f3fc.svg": "53451",
        "./1f476-1f3fd.svg": "496319",
        "./1f476-1f3fe.svg": "983318",
        "./1f476-1f3ff.svg": "896526",
        "./1f476.svg": "521035",
        "./1f477-1f3fb-200d-2640-fe0f.svg": "492525",
        "./1f477-1f3fb-200d-2642-fe0f.svg": "216575",
        "./1f477-1f3fb.svg": "110888",
        "./1f477-1f3fc-200d-2640-fe0f.svg": "408045",
        "./1f477-1f3fc-200d-2642-fe0f.svg": "287639",
        "./1f477-1f3fc.svg": "615650",
        "./1f477-1f3fd-200d-2640-fe0f.svg": "287303",
        "./1f477-1f3fd-200d-2642-fe0f.svg": "972196",
        "./1f477-1f3fd.svg": "717811",
        "./1f477-1f3fe-200d-2640-fe0f.svg": "736833",
        "./1f477-1f3fe-200d-2642-fe0f.svg": "56662",
        "./1f477-1f3fe.svg": "453942",
        "./1f477-1f3ff-200d-2640-fe0f.svg": "135233",
        "./1f477-1f3ff-200d-2642-fe0f.svg": "192903",
        "./1f477-1f3ff.svg": "245034",
        "./1f477-200d-2640-fe0f.svg": "602840",
        "./1f477-200d-2642-fe0f.svg": "658924",
        "./1f477.svg": "70182",
        "./1f478-1f3fb.svg": "189514",
        "./1f478-1f3fc.svg": "168115",
        "./1f478-1f3fd.svg": "82653",
        "./1f478-1f3fe.svg": "551832",
        "./1f478-1f3ff.svg": "654699",
        "./1f478.svg": "441077",
        "./1f479.svg": "160125",
        "./1f47a.svg": "731772",
        "./1f47b.svg": "602366",
        "./1f47c-1f3fb.svg": "748925",
        "./1f47c-1f3fc.svg": "58074",
        "./1f47c-1f3fd.svg": "861116",
        "./1f47c-1f3fe.svg": "71378",
        "./1f47c-1f3ff.svg": "714576",
        "./1f47c.svg": "580821",
        "./1f47d.svg": "212832",
        "./1f47e.svg": "849732",
        "./1f47f.svg": "352701",
        "./1f480.svg": "270579",
        "./1f481-1f3fb-200d-2640-fe0f.svg": "105491",
        "./1f481-1f3fb-200d-2642-fe0f.svg": "3472",
        "./1f481-1f3fb.svg": "816103",
        "./1f481-1f3fc-200d-2640-fe0f.svg": "584779",
        "./1f481-1f3fc-200d-2642-fe0f.svg": "678812",
        "./1f481-1f3fc.svg": "757999",
        "./1f481-1f3fd-200d-2640-fe0f.svg": "182212",
        "./1f481-1f3fd-200d-2642-fe0f.svg": "192267",
        "./1f481-1f3fd.svg": "290573",
        "./1f481-1f3fe-200d-2640-fe0f.svg": "758195",
        "./1f481-1f3fe-200d-2642-fe0f.svg": "387768",
        "./1f481-1f3fe.svg": "636771",
        "./1f481-1f3ff-200d-2640-fe0f.svg": "589852",
        "./1f481-1f3ff-200d-2642-fe0f.svg": "201070",
        "./1f481-1f3ff.svg": "16654",
        "./1f481-200d-2640-fe0f.svg": "727665",
        "./1f481-200d-2642-fe0f.svg": "5390",
        "./1f481.svg": "370578",
        "./1f482-1f3fb-200d-2640-fe0f.svg": "578796",
        "./1f482-1f3fb-200d-2642-fe0f.svg": "988789",
        "./1f482-1f3fb.svg": "714912",
        "./1f482-1f3fc-200d-2640-fe0f.svg": "569751",
        "./1f482-1f3fc-200d-2642-fe0f.svg": "926558",
        "./1f482-1f3fc.svg": "737504",
        "./1f482-1f3fd-200d-2640-fe0f.svg": "279594",
        "./1f482-1f3fd-200d-2642-fe0f.svg": "115813",
        "./1f482-1f3fd.svg": "649222",
        "./1f482-1f3fe-200d-2640-fe0f.svg": "22725",
        "./1f482-1f3fe-200d-2642-fe0f.svg": "624702",
        "./1f482-1f3fe.svg": "746603",
        "./1f482-1f3ff-200d-2640-fe0f.svg": "542735",
        "./1f482-1f3ff-200d-2642-fe0f.svg": "929478",
        "./1f482-1f3ff.svg": "666989",
        "./1f482-200d-2640-fe0f.svg": "356907",
        "./1f482-200d-2642-fe0f.svg": "444954",
        "./1f482.svg": "816679",
        "./1f483-1f3fb.svg": "398297",
        "./1f483-1f3fc.svg": "257506",
        "./1f483-1f3fd.svg": "150010",
        "./1f483-1f3fe.svg": "144700",
        "./1f483-1f3ff.svg": "728325",
        "./1f483.svg": "715855",
        "./1f484.svg": "75520",
        "./1f485-1f3fb.svg": "310224",
        "./1f485-1f3fc.svg": "172299",
        "./1f485-1f3fd.svg": "311905",
        "./1f485-1f3fe.svg": "636271",
        "./1f485-1f3ff.svg": "235273",
        "./1f485.svg": "703931",
        "./1f486-1f3fb-200d-2640-fe0f.svg": "33964",
        "./1f486-1f3fb-200d-2642-fe0f.svg": "474694",
        "./1f486-1f3fb.svg": "543265",
        "./1f486-1f3fc-200d-2640-fe0f.svg": "264893",
        "./1f486-1f3fc-200d-2642-fe0f.svg": "555956",
        "./1f486-1f3fc.svg": "839428",
        "./1f486-1f3fd-200d-2640-fe0f.svg": "930813",
        "./1f486-1f3fd-200d-2642-fe0f.svg": "291475",
        "./1f486-1f3fd.svg": "241493",
        "./1f486-1f3fe-200d-2640-fe0f.svg": "329807",
        "./1f486-1f3fe-200d-2642-fe0f.svg": "874330",
        "./1f486-1f3fe.svg": "401909",
        "./1f486-1f3ff-200d-2640-fe0f.svg": "324361",
        "./1f486-1f3ff-200d-2642-fe0f.svg": "189250",
        "./1f486-1f3ff.svg": "252267",
        "./1f486-200d-2640-fe0f.svg": "951884",
        "./1f486-200d-2642-fe0f.svg": "34863",
        "./1f486.svg": "769743",
        "./1f487-1f3fb-200d-2640-fe0f.svg": "469872",
        "./1f487-1f3fb-200d-2642-fe0f.svg": "633179",
        "./1f487-1f3fb.svg": "24711",
        "./1f487-1f3fc-200d-2640-fe0f.svg": "788869",
        "./1f487-1f3fc-200d-2642-fe0f.svg": "83993",
        "./1f487-1f3fc.svg": "307455",
        "./1f487-1f3fd-200d-2640-fe0f.svg": "838428",
        "./1f487-1f3fd-200d-2642-fe0f.svg": "512698",
        "./1f487-1f3fd.svg": "481722",
        "./1f487-1f3fe-200d-2640-fe0f.svg": "695262",
        "./1f487-1f3fe-200d-2642-fe0f.svg": "740449",
        "./1f487-1f3fe.svg": "956435",
        "./1f487-1f3ff-200d-2640-fe0f.svg": "278777",
        "./1f487-1f3ff-200d-2642-fe0f.svg": "611084",
        "./1f487-1f3ff.svg": "726920",
        "./1f487-200d-2640-fe0f.svg": "103339",
        "./1f487-200d-2642-fe0f.svg": "276114",
        "./1f487.svg": "791371",
        "./1f488.svg": "936167",
        "./1f489.svg": "119550",
        "./1f48a.svg": "745597",
        "./1f48b.svg": "591463",
        "./1f48c.svg": "198417",
        "./1f48d.svg": "357572",
        "./1f48e.svg": "832649",
        "./1f48f-1f3fb.svg": "921968",
        "./1f48f-1f3fc.svg": "345037",
        "./1f48f-1f3fd.svg": "197571",
        "./1f48f-1f3fe.svg": "506066",
        "./1f48f-1f3ff.svg": "331706",
        "./1f48f.svg": "811415",
        "./1f490.svg": "88102",
        "./1f491-1f3fb.svg": "887908",
        "./1f491-1f3fc.svg": "749906",
        "./1f491-1f3fd.svg": "769851",
        "./1f491-1f3fe.svg": "204957",
        "./1f491-1f3ff.svg": "408951",
        "./1f491.svg": "48998",
        "./1f492.svg": "866101",
        "./1f493.svg": "46181",
        "./1f494.svg": "810889",
        "./1f495.svg": "368214",
        "./1f496.svg": "712081",
        "./1f497.svg": "259955",
        "./1f498.svg": "8171",
        "./1f499.svg": "627709",
        "./1f49a.svg": "1324",
        "./1f49b.svg": "19417",
        "./1f49c.svg": "270861",
        "./1f49d.svg": "432873",
        "./1f49e.svg": "328988",
        "./1f49f.svg": "938187",
        "./1f4a0.svg": "227967",
        "./1f4a1.svg": "989407",
        "./1f4a2.svg": "849939",
        "./1f4a3.svg": "594377",
        "./1f4a4.svg": "184849",
        "./1f4a5.svg": "658908",
        "./1f4a6.svg": "59225",
        "./1f4a7.svg": "451843",
        "./1f4a8.svg": "176309",
        "./1f4a9.svg": "539922",
        "./1f4aa-1f3fb.svg": "772890",
        "./1f4aa-1f3fc.svg": "843947",
        "./1f4aa-1f3fd.svg": "326095",
        "./1f4aa-1f3fe.svg": "671920",
        "./1f4aa-1f3ff.svg": "799830",
        "./1f4aa.svg": "735990",
        "./1f4ab.svg": "596536",
        "./1f4ac.svg": "774656",
        "./1f4ad.svg": "641429",
        "./1f4ae.svg": "498075",
        "./1f4af.svg": "278746",
        "./1f4b0.svg": "746474",
        "./1f4b1.svg": "932017",
        "./1f4b2.svg": "534573",
        "./1f4b3.svg": "114693",
        "./1f4b4.svg": "524830",
        "./1f4b5.svg": "725813",
        "./1f4b6.svg": "962405",
        "./1f4b7.svg": "222923",
        "./1f4b8.svg": "415931",
        "./1f4b9.svg": "804778",
        "./1f4ba.svg": "881149",
        "./1f4bb.svg": "850453",
        "./1f4bc.svg": "900029",
        "./1f4bd.svg": "208043",
        "./1f4be.svg": "342930",
        "./1f4bf.svg": "401411",
        "./1f4c0.svg": "917768",
        "./1f4c1.svg": "871434",
        "./1f4c2.svg": "781998",
        "./1f4c3.svg": "362081",
        "./1f4c4.svg": "588705",
        "./1f4c5.svg": "180365",
        "./1f4c6.svg": "827848",
        "./1f4c7.svg": "650369",
        "./1f4c8.svg": "945111",
        "./1f4c9.svg": "785739",
        "./1f4ca.svg": "589539",
        "./1f4cb.svg": "916532",
        "./1f4cc.svg": "204158",
        "./1f4cd.svg": "168071",
        "./1f4ce.svg": "731651",
        "./1f4cf.svg": "838371",
        "./1f4d0.svg": "214684",
        "./1f4d1.svg": "315517",
        "./1f4d2.svg": "798338",
        "./1f4d3.svg": "236056",
        "./1f4d4.svg": "681347",
        "./1f4d5.svg": "501723",
        "./1f4d6.svg": "294256",
        "./1f4d7.svg": "655326",
        "./1f4d8.svg": "768175",
        "./1f4d9.svg": "661593",
        "./1f4da.svg": "689043",
        "./1f4db.svg": "2728",
        "./1f4dc.svg": "519127",
        "./1f4dd.svg": "158764",
        "./1f4de.svg": "905138",
        "./1f4df.svg": "136092",
        "./1f4e0.svg": "376942",
        "./1f4e1.svg": "498317",
        "./1f4e2.svg": "441470",
        "./1f4e3.svg": "219215",
        "./1f4e4.svg": "696753",
        "./1f4e5.svg": "211235",
        "./1f4e6.svg": "338838",
        "./1f4e7.svg": "671070",
        "./1f4e8.svg": "128271",
        "./1f4e9.svg": "455464",
        "./1f4ea.svg": "550704",
        "./1f4eb.svg": "468397",
        "./1f4ec.svg": "233989",
        "./1f4ed.svg": "768166",
        "./1f4ee.svg": "780998",
        "./1f4ef.svg": "637194",
        "./1f4f0.svg": "220445",
        "./1f4f1.svg": "939975",
        "./1f4f2.svg": "136371",
        "./1f4f3.svg": "88742",
        "./1f4f4.svg": "574801",
        "./1f4f5.svg": "734478",
        "./1f4f6.svg": "23561",
        "./1f4f7.svg": "23510",
        "./1f4f8.svg": "115608",
        "./1f4f9.svg": "486986",
        "./1f4fa.svg": "236723",
        "./1f4fb.svg": "187168",
        "./1f4fc.svg": "291730",
        "./1f4fd.svg": "67733",
        "./1f4ff.svg": "514010",
        "./1f500.svg": "496198",
        "./1f501.svg": "741137",
        "./1f502.svg": "819794",
        "./1f503.svg": "129062",
        "./1f504.svg": "156874",
        "./1f505.svg": "487979",
        "./1f506.svg": "29339",
        "./1f507.svg": "509678",
        "./1f508.svg": "631357",
        "./1f509.svg": "727611",
        "./1f50a.svg": "889342",
        "./1f50b.svg": "862872",
        "./1f50c.svg": "775893",
        "./1f50d.svg": "283874",
        "./1f50e.svg": "603735",
        "./1f50f.svg": "696515",
        "./1f510.svg": "33495",
        "./1f511.svg": "683653",
        "./1f512.svg": "273263",
        "./1f513.svg": "763157",
        "./1f514.svg": "358120",
        "./1f515.svg": "825137",
        "./1f516.svg": "613984",
        "./1f517.svg": "976988",
        "./1f518.svg": "981116",
        "./1f519.svg": "374999",
        "./1f51a.svg": "954764",
        "./1f51b.svg": "450451",
        "./1f51c.svg": "818655",
        "./1f51d.svg": "684346",
        "./1f51e.svg": "815858",
        "./1f51f.svg": "560969",
        "./1f520.svg": "531310",
        "./1f521.svg": "4070",
        "./1f522.svg": "871630",
        "./1f523.svg": "528537",
        "./1f524.svg": "749732",
        "./1f525.svg": "272308",
        "./1f526.svg": "970100",
        "./1f527.svg": "621157",
        "./1f528.svg": "582027",
        "./1f529.svg": "844866",
        "./1f52a.svg": "536590",
        "./1f52b.svg": "847170",
        "./1f52c.svg": "69380",
        "./1f52d.svg": "504292",
        "./1f52e.svg": "203351",
        "./1f52f.svg": "727470",
        "./1f530.svg": "598573",
        "./1f531.svg": "713309",
        "./1f532.svg": "619346",
        "./1f533.svg": "146297",
        "./1f534.svg": "532262",
        "./1f535.svg": "663569",
        "./1f536.svg": "671044",
        "./1f537.svg": "142468",
        "./1f538.svg": "535029",
        "./1f539.svg": "170469",
        "./1f53a.svg": "897843",
        "./1f53b.svg": "567442",
        "./1f53c.svg": "447833",
        "./1f53d.svg": "857734",
        "./1f549.svg": "196165",
        "./1f54a.svg": "989538",
        "./1f54b.svg": "327353",
        "./1f54c.svg": "795983",
        "./1f54d.svg": "407056",
        "./1f54e.svg": "10765",
        "./1f550.svg": "785709",
        "./1f551.svg": "141679",
        "./1f552.svg": "46895",
        "./1f553.svg": "442185",
        "./1f554.svg": "294347",
        "./1f555.svg": "594820",
        "./1f556.svg": "819570",
        "./1f557.svg": "413351",
        "./1f558.svg": "47182",
        "./1f559.svg": "86347",
        "./1f55a.svg": "290173",
        "./1f55b.svg": "8269",
        "./1f55c.svg": "487957",
        "./1f55d.svg": "255570",
        "./1f55e.svg": "886160",
        "./1f55f.svg": "954593",
        "./1f560.svg": "757196",
        "./1f561.svg": "463885",
        "./1f562.svg": "34963",
        "./1f563.svg": "430298",
        "./1f564.svg": "598634",
        "./1f565.svg": "497170",
        "./1f566.svg": "11394",
        "./1f567.svg": "766963",
        "./1f56f.svg": "216566",
        "./1f570.svg": "937998",
        "./1f573.svg": "7719",
        "./1f574-1f3fb-200d-2640-fe0f.svg": "388805",
        "./1f574-1f3fb-200d-2642-fe0f.svg": "83275",
        "./1f574-1f3fb.svg": "338830",
        "./1f574-1f3fc-200d-2640-fe0f.svg": "829347",
        "./1f574-1f3fc-200d-2642-fe0f.svg": "774381",
        "./1f574-1f3fc.svg": "856113",
        "./1f574-1f3fd-200d-2640-fe0f.svg": "432326",
        "./1f574-1f3fd-200d-2642-fe0f.svg": "592866",
        "./1f574-1f3fd.svg": "737962",
        "./1f574-1f3fe-200d-2640-fe0f.svg": "272446",
        "./1f574-1f3fe-200d-2642-fe0f.svg": "924489",
        "./1f574-1f3fe.svg": "683735",
        "./1f574-1f3ff-200d-2640-fe0f.svg": "2176",
        "./1f574-1f3ff-200d-2642-fe0f.svg": "35397",
        "./1f574-1f3ff.svg": "963469",
        "./1f574-fe0f-200d-2640-fe0f.svg": "709287",
        "./1f574-fe0f-200d-2642-fe0f.svg": "286684",
        "./1f574.svg": "515721",
        "./1f575-1f3fb-200d-2640-fe0f.svg": "886427",
        "./1f575-1f3fb-200d-2642-fe0f.svg": "606085",
        "./1f575-1f3fb.svg": "122026",
        "./1f575-1f3fc-200d-2640-fe0f.svg": "583281",
        "./1f575-1f3fc-200d-2642-fe0f.svg": "335204",
        "./1f575-1f3fc.svg": "841357",
        "./1f575-1f3fd-200d-2640-fe0f.svg": "834570",
        "./1f575-1f3fd-200d-2642-fe0f.svg": "548304",
        "./1f575-1f3fd.svg": "433122",
        "./1f575-1f3fe-200d-2640-fe0f.svg": "99812",
        "./1f575-1f3fe-200d-2642-fe0f.svg": "958696",
        "./1f575-1f3fe.svg": "282814",
        "./1f575-1f3ff-200d-2640-fe0f.svg": "809317",
        "./1f575-1f3ff-200d-2642-fe0f.svg": "860960",
        "./1f575-1f3ff.svg": "67110",
        "./1f575-fe0f-200d-2640-fe0f.svg": "463381",
        "./1f575-fe0f-200d-2642-fe0f.svg": "614030",
        "./1f575.svg": "17710",
        "./1f576.svg": "685643",
        "./1f577.svg": "396134",
        "./1f578.svg": "895997",
        "./1f579.svg": "989760",
        "./1f57a-1f3fb.svg": "735493",
        "./1f57a-1f3fc.svg": "767768",
        "./1f57a-1f3fd.svg": "689338",
        "./1f57a-1f3fe.svg": "339098",
        "./1f57a-1f3ff.svg": "67891",
        "./1f57a.svg": "145540",
        "./1f587.svg": "964525",
        "./1f58a.svg": "72990",
        "./1f58b.svg": "635319",
        "./1f58c.svg": "943276",
        "./1f58d.svg": "341226",
        "./1f590-1f3fb.svg": "461265",
        "./1f590-1f3fc.svg": "572625",
        "./1f590-1f3fd.svg": "631750",
        "./1f590-1f3fe.svg": "61908",
        "./1f590-1f3ff.svg": "598936",
        "./1f590.svg": "870660",
        "./1f595-1f3fb.svg": "882287",
        "./1f595-1f3fc.svg": "611960",
        "./1f595-1f3fd.svg": "825154",
        "./1f595-1f3fe.svg": "965553",
        "./1f595-1f3ff.svg": "529684",
        "./1f595.svg": "457816",
        "./1f596-1f3fb.svg": "572269",
        "./1f596-1f3fc.svg": "952429",
        "./1f596-1f3fd.svg": "930599",
        "./1f596-1f3fe.svg": "932437",
        "./1f596-1f3ff.svg": "4826",
        "./1f596.svg": "964668",
        "./1f5a4.svg": "251646",
        "./1f5a5.svg": "32823",
        "./1f5a8.svg": "230647",
        "./1f5b1.svg": "444277",
        "./1f5b2.svg": "854415",
        "./1f5bc.svg": "468199",
        "./1f5c2.svg": "931022",
        "./1f5c3.svg": "176693",
        "./1f5c4.svg": "129152",
        "./1f5d1.svg": "560651",
        "./1f5d2.svg": "910270",
        "./1f5d3.svg": "925200",
        "./1f5dc.svg": "996384",
        "./1f5dd.svg": "624132",
        "./1f5de.svg": "189679",
        "./1f5e1.svg": "675952",
        "./1f5e3.svg": "163603",
        "./1f5e8.svg": "68725",
        "./1f5ef.svg": "563541",
        "./1f5f3.svg": "234203",
        "./1f5fa.svg": "194162",
        "./1f5fb.svg": "316261",
        "./1f5fc.svg": "507619",
        "./1f5fd.svg": "902708",
        "./1f5fe.svg": "147670",
        "./1f5ff.svg": "185385",
        "./1f600.svg": "224869",
        "./1f601.svg": "630375",
        "./1f602.svg": "352361",
        "./1f603.svg": "833275",
        "./1f604.svg": "621720",
        "./1f605.svg": "373008",
        "./1f606.svg": "949392",
        "./1f607.svg": "34077",
        "./1f608.svg": "18678",
        "./1f609.svg": "653137",
        "./1f60a.svg": "819290",
        "./1f60b.svg": "568513",
        "./1f60c.svg": "361734",
        "./1f60d.svg": "585815",
        "./1f60e.svg": "917812",
        "./1f60f.svg": "308126",
        "./1f610.svg": "688737",
        "./1f611.svg": "79022",
        "./1f612.svg": "749039",
        "./1f613.svg": "968792",
        "./1f614.svg": "994307",
        "./1f615.svg": "680385",
        "./1f616.svg": "721334",
        "./1f617.svg": "524170",
        "./1f618.svg": "426000",
        "./1f619.svg": "953016",
        "./1f61a.svg": "415101",
        "./1f61b.svg": "618947",
        "./1f61c.svg": "964914",
        "./1f61d.svg": "922703",
        "./1f61e.svg": "915161",
        "./1f61f.svg": "248182",
        "./1f620.svg": "511245",
        "./1f621.svg": "543567",
        "./1f622.svg": "673543",
        "./1f623.svg": "229200",
        "./1f624.svg": "189324",
        "./1f625.svg": "20357",
        "./1f626.svg": "49035",
        "./1f627.svg": "165595",
        "./1f628.svg": "304385",
        "./1f629.svg": "913128",
        "./1f62a.svg": "186975",
        "./1f62b.svg": "723835",
        "./1f62c.svg": "122059",
        "./1f62d.svg": "425393",
        "./1f62e-200d-1f4a8.svg": "799214",
        "./1f62e.svg": "564526",
        "./1f62f.svg": "979492",
        "./1f630.svg": "787519",
        "./1f631.svg": "14381",
        "./1f632.svg": "180657",
        "./1f633.svg": "834506",
        "./1f634.svg": "674483",
        "./1f635-200d-1f4ab.svg": "284352",
        "./1f635.svg": "96593",
        "./1f636-200d-1f32b-fe0f.svg": "459767",
        "./1f636.svg": "343831",
        "./1f637.svg": "425578",
        "./1f638.svg": "484497",
        "./1f639.svg": "905814",
        "./1f63a.svg": "947282",
        "./1f63b.svg": "933295",
        "./1f63c.svg": "306009",
        "./1f63d.svg": "140986",
        "./1f63e.svg": "741529",
        "./1f63f.svg": "806293",
        "./1f640.svg": "837004",
        "./1f641.svg": "709015",
        "./1f642.svg": "789741",
        "./1f643.svg": "129892",
        "./1f644.svg": "983271",
        "./1f645-1f3fb-200d-2640-fe0f.svg": "533717",
        "./1f645-1f3fb-200d-2642-fe0f.svg": "984607",
        "./1f645-1f3fb.svg": "573457",
        "./1f645-1f3fc-200d-2640-fe0f.svg": "542272",
        "./1f645-1f3fc-200d-2642-fe0f.svg": "316903",
        "./1f645-1f3fc.svg": "772386",
        "./1f645-1f3fd-200d-2640-fe0f.svg": "259934",
        "./1f645-1f3fd-200d-2642-fe0f.svg": "855170",
        "./1f645-1f3fd.svg": "516882",
        "./1f645-1f3fe-200d-2640-fe0f.svg": "749687",
        "./1f645-1f3fe-200d-2642-fe0f.svg": "901570",
        "./1f645-1f3fe.svg": "494855",
        "./1f645-1f3ff-200d-2640-fe0f.svg": "356240",
        "./1f645-1f3ff-200d-2642-fe0f.svg": "154832",
        "./1f645-1f3ff.svg": "397659",
        "./1f645-200d-2640-fe0f.svg": "579011",
        "./1f645-200d-2642-fe0f.svg": "68061",
        "./1f645.svg": "95718",
        "./1f646-1f3fb-200d-2640-fe0f.svg": "982595",
        "./1f646-1f3fb-200d-2642-fe0f.svg": "917759",
        "./1f646-1f3fb.svg": "572308",
        "./1f646-1f3fc-200d-2640-fe0f.svg": "9901",
        "./1f646-1f3fc-200d-2642-fe0f.svg": "812299",
        "./1f646-1f3fc.svg": "380892",
        "./1f646-1f3fd-200d-2640-fe0f.svg": "878851",
        "./1f646-1f3fd-200d-2642-fe0f.svg": "467526",
        "./1f646-1f3fd.svg": "163069",
        "./1f646-1f3fe-200d-2640-fe0f.svg": "306576",
        "./1f646-1f3fe-200d-2642-fe0f.svg": "835408",
        "./1f646-1f3fe.svg": "910775",
        "./1f646-1f3ff-200d-2640-fe0f.svg": "973716",
        "./1f646-1f3ff-200d-2642-fe0f.svg": "868063",
        "./1f646-1f3ff.svg": "713064",
        "./1f646-200d-2640-fe0f.svg": "635423",
        "./1f646-200d-2642-fe0f.svg": "796287",
        "./1f646.svg": "736351",
        "./1f647-1f3fb-200d-2640-fe0f.svg": "115430",
        "./1f647-1f3fb-200d-2642-fe0f.svg": "922372",
        "./1f647-1f3fb.svg": "131374",
        "./1f647-1f3fc-200d-2640-fe0f.svg": "417021",
        "./1f647-1f3fc-200d-2642-fe0f.svg": "415416",
        "./1f647-1f3fc.svg": "514026",
        "./1f647-1f3fd-200d-2640-fe0f.svg": "202775",
        "./1f647-1f3fd-200d-2642-fe0f.svg": "229753",
        "./1f647-1f3fd.svg": "48843",
        "./1f647-1f3fe-200d-2640-fe0f.svg": "846076",
        "./1f647-1f3fe-200d-2642-fe0f.svg": "797608",
        "./1f647-1f3fe.svg": "827368",
        "./1f647-1f3ff-200d-2640-fe0f.svg": "530542",
        "./1f647-1f3ff-200d-2642-fe0f.svg": "172868",
        "./1f647-1f3ff.svg": "967336",
        "./1f647-200d-2640-fe0f.svg": "991010",
        "./1f647-200d-2642-fe0f.svg": "770443",
        "./1f647.svg": "802626",
        "./1f648.svg": "396467",
        "./1f649.svg": "679928",
        "./1f64a.svg": "286244",
        "./1f64b-1f3fb-200d-2640-fe0f.svg": "182267",
        "./1f64b-1f3fb-200d-2642-fe0f.svg": "326469",
        "./1f64b-1f3fb.svg": "439628",
        "./1f64b-1f3fc-200d-2640-fe0f.svg": "27816",
        "./1f64b-1f3fc-200d-2642-fe0f.svg": "561846",
        "./1f64b-1f3fc.svg": "254665",
        "./1f64b-1f3fd-200d-2640-fe0f.svg": "579234",
        "./1f64b-1f3fd-200d-2642-fe0f.svg": "66282",
        "./1f64b-1f3fd.svg": "869081",
        "./1f64b-1f3fe-200d-2640-fe0f.svg": "702570",
        "./1f64b-1f3fe-200d-2642-fe0f.svg": "264185",
        "./1f64b-1f3fe.svg": "261159",
        "./1f64b-1f3ff-200d-2640-fe0f.svg": "908800",
        "./1f64b-1f3ff-200d-2642-fe0f.svg": "40401",
        "./1f64b-1f3ff.svg": "979194",
        "./1f64b-200d-2640-fe0f.svg": "289782",
        "./1f64b-200d-2642-fe0f.svg": "128325",
        "./1f64b.svg": "595672",
        "./1f64c-1f3fb.svg": "503780",
        "./1f64c-1f3fc.svg": "953881",
        "./1f64c-1f3fd.svg": "26315",
        "./1f64c-1f3fe.svg": "394118",
        "./1f64c-1f3ff.svg": "525638",
        "./1f64c.svg": "324504",
        "./1f64d-1f3fb-200d-2640-fe0f.svg": "598412",
        "./1f64d-1f3fb-200d-2642-fe0f.svg": "700009",
        "./1f64d-1f3fb.svg": "266907",
        "./1f64d-1f3fc-200d-2640-fe0f.svg": "173057",
        "./1f64d-1f3fc-200d-2642-fe0f.svg": "603385",
        "./1f64d-1f3fc.svg": "975665",
        "./1f64d-1f3fd-200d-2640-fe0f.svg": "334273",
        "./1f64d-1f3fd-200d-2642-fe0f.svg": "776010",
        "./1f64d-1f3fd.svg": "583627",
        "./1f64d-1f3fe-200d-2640-fe0f.svg": "141355",
        "./1f64d-1f3fe-200d-2642-fe0f.svg": "529882",
        "./1f64d-1f3fe.svg": "488238",
        "./1f64d-1f3ff-200d-2640-fe0f.svg": "236998",
        "./1f64d-1f3ff-200d-2642-fe0f.svg": "147773",
        "./1f64d-1f3ff.svg": "229844",
        "./1f64d-200d-2640-fe0f.svg": "801108",
        "./1f64d-200d-2642-fe0f.svg": "902511",
        "./1f64d.svg": "224696",
        "./1f64e-1f3fb-200d-2640-fe0f.svg": "702182",
        "./1f64e-1f3fb-200d-2642-fe0f.svg": "730539",
        "./1f64e-1f3fb.svg": "614049",
        "./1f64e-1f3fc-200d-2640-fe0f.svg": "390945",
        "./1f64e-1f3fc-200d-2642-fe0f.svg": "393630",
        "./1f64e-1f3fc.svg": "583124",
        "./1f64e-1f3fd-200d-2640-fe0f.svg": "188294",
        "./1f64e-1f3fd-200d-2642-fe0f.svg": "232045",
        "./1f64e-1f3fd.svg": "112108",
        "./1f64e-1f3fe-200d-2640-fe0f.svg": "980524",
        "./1f64e-1f3fe-200d-2642-fe0f.svg": "26404",
        "./1f64e-1f3fe.svg": "834058",
        "./1f64e-1f3ff-200d-2640-fe0f.svg": "215965",
        "./1f64e-1f3ff-200d-2642-fe0f.svg": "473365",
        "./1f64e-1f3ff.svg": "595606",
        "./1f64e-200d-2640-fe0f.svg": "464072",
        "./1f64e-200d-2642-fe0f.svg": "953155",
        "./1f64e.svg": "19457",
        "./1f64f-1f3fb.svg": "734342",
        "./1f64f-1f3fc.svg": "947171",
        "./1f64f-1f3fd.svg": "64800",
        "./1f64f-1f3fe.svg": "327177",
        "./1f64f-1f3ff.svg": "639626",
        "./1f64f.svg": "972305",
        "./1f680.svg": "154988",
        "./1f681.svg": "958389",
        "./1f682.svg": "142620",
        "./1f683.svg": "281675",
        "./1f684.svg": "914423",
        "./1f685.svg": "92696",
        "./1f686.svg": "160787",
        "./1f687.svg": "194564",
        "./1f688.svg": "72676",
        "./1f689.svg": "835969",
        "./1f68a.svg": "55466",
        "./1f68b.svg": "748183",
        "./1f68c.svg": "243446",
        "./1f68d.svg": "393334",
        "./1f68e.svg": "521268",
        "./1f68f.svg": "506882",
        "./1f690.svg": "400475",
        "./1f691.svg": "76092",
        "./1f692.svg": "712356",
        "./1f693.svg": "250778",
        "./1f694.svg": "167589",
        "./1f695.svg": "441089",
        "./1f696.svg": "252261",
        "./1f697.svg": "725416",
        "./1f698.svg": "230902",
        "./1f699.svg": "743558",
        "./1f69a.svg": "226433",
        "./1f69b.svg": "315276",
        "./1f69c.svg": "849387",
        "./1f69d.svg": "121304",
        "./1f69e.svg": "737411",
        "./1f69f.svg": "869121",
        "./1f6a0.svg": "903584",
        "./1f6a1.svg": "654401",
        "./1f6a2.svg": "821903",
        "./1f6a3-1f3fb-200d-2640-fe0f.svg": "296562",
        "./1f6a3-1f3fb-200d-2642-fe0f.svg": "372272",
        "./1f6a3-1f3fb.svg": "656884",
        "./1f6a3-1f3fc-200d-2640-fe0f.svg": "891281",
        "./1f6a3-1f3fc-200d-2642-fe0f.svg": "868878",
        "./1f6a3-1f3fc.svg": "746359",
        "./1f6a3-1f3fd-200d-2640-fe0f.svg": "393272",
        "./1f6a3-1f3fd-200d-2642-fe0f.svg": "277154",
        "./1f6a3-1f3fd.svg": "42385",
        "./1f6a3-1f3fe-200d-2640-fe0f.svg": "834404",
        "./1f6a3-1f3fe-200d-2642-fe0f.svg": "804857",
        "./1f6a3-1f3fe.svg": "780562",
        "./1f6a3-1f3ff-200d-2640-fe0f.svg": "862175",
        "./1f6a3-1f3ff-200d-2642-fe0f.svg": "681303",
        "./1f6a3-1f3ff.svg": "934723",
        "./1f6a3-200d-2640-fe0f.svg": "563723",
        "./1f6a3-200d-2642-fe0f.svg": "354334",
        "./1f6a3.svg": "73828",
        "./1f6a4.svg": "306498",
        "./1f6a5.svg": "817633",
        "./1f6a6.svg": "488237",
        "./1f6a7.svg": "429818",
        "./1f6a8.svg": "779945",
        "./1f6a9.svg": "38457",
        "./1f6aa.svg": "424270",
        "./1f6ab.svg": "924775",
        "./1f6ac.svg": "358537",
        "./1f6ad.svg": "726360",
        "./1f6ae.svg": "289130",
        "./1f6af.svg": "450605",
        "./1f6b0.svg": "917208",
        "./1f6b1.svg": "870977",
        "./1f6b2.svg": "664041",
        "./1f6b3.svg": "213092",
        "./1f6b4-1f3fb-200d-2640-fe0f.svg": "686032",
        "./1f6b4-1f3fb-200d-2642-fe0f.svg": "148233",
        "./1f6b4-1f3fb.svg": "934480",
        "./1f6b4-1f3fc-200d-2640-fe0f.svg": "776646",
        "./1f6b4-1f3fc-200d-2642-fe0f.svg": "329600",
        "./1f6b4-1f3fc.svg": "225513",
        "./1f6b4-1f3fd-200d-2640-fe0f.svg": "412427",
        "./1f6b4-1f3fd-200d-2642-fe0f.svg": "33629",
        "./1f6b4-1f3fd.svg": "548577",
        "./1f6b4-1f3fe-200d-2640-fe0f.svg": "446764",
        "./1f6b4-1f3fe-200d-2642-fe0f.svg": "323876",
        "./1f6b4-1f3fe.svg": "390836",
        "./1f6b4-1f3ff-200d-2640-fe0f.svg": "86389",
        "./1f6b4-1f3ff-200d-2642-fe0f.svg": "254818",
        "./1f6b4-1f3ff.svg": "600929",
        "./1f6b4-200d-2640-fe0f.svg": "172382",
        "./1f6b4-200d-2642-fe0f.svg": "16737",
        "./1f6b4.svg": "655590",
        "./1f6b5-1f3fb-200d-2640-fe0f.svg": "71751",
        "./1f6b5-1f3fb-200d-2642-fe0f.svg": "157956",
        "./1f6b5-1f3fb.svg": "266497",
        "./1f6b5-1f3fc-200d-2640-fe0f.svg": "728457",
        "./1f6b5-1f3fc-200d-2642-fe0f.svg": "51108",
        "./1f6b5-1f3fc.svg": "753993",
        "./1f6b5-1f3fd-200d-2640-fe0f.svg": "528620",
        "./1f6b5-1f3fd-200d-2642-fe0f.svg": "316811",
        "./1f6b5-1f3fd.svg": "540804",
        "./1f6b5-1f3fe-200d-2640-fe0f.svg": "602242",
        "./1f6b5-1f3fe-200d-2642-fe0f.svg": "554424",
        "./1f6b5-1f3fe.svg": "962322",
        "./1f6b5-1f3ff-200d-2640-fe0f.svg": "802439",
        "./1f6b5-1f3ff-200d-2642-fe0f.svg": "506651",
        "./1f6b5-1f3ff.svg": "429019",
        "./1f6b5-200d-2640-fe0f.svg": "896501",
        "./1f6b5-200d-2642-fe0f.svg": "551168",
        "./1f6b5.svg": "862323",
        "./1f6b6-1f3fb-200d-2640-fe0f.svg": "74313",
        "./1f6b6-1f3fb-200d-2642-fe0f.svg": "638166",
        "./1f6b6-1f3fb.svg": "431374",
        "./1f6b6-1f3fc-200d-2640-fe0f.svg": "128747",
        "./1f6b6-1f3fc-200d-2642-fe0f.svg": "505052",
        "./1f6b6-1f3fc.svg": "400323",
        "./1f6b6-1f3fd-200d-2640-fe0f.svg": "939783",
        "./1f6b6-1f3fd-200d-2642-fe0f.svg": "876999",
        "./1f6b6-1f3fd.svg": "848770",
        "./1f6b6-1f3fe-200d-2640-fe0f.svg": "68848",
        "./1f6b6-1f3fe-200d-2642-fe0f.svg": "838083",
        "./1f6b6-1f3fe.svg": "591125",
        "./1f6b6-1f3ff-200d-2640-fe0f.svg": "16821",
        "./1f6b6-1f3ff-200d-2642-fe0f.svg": "623271",
        "./1f6b6-1f3ff.svg": "962583",
        "./1f6b6-200d-2640-fe0f.svg": "687262",
        "./1f6b6-200d-2642-fe0f.svg": "190388",
        "./1f6b6.svg": "678327",
        "./1f6b7.svg": "757069",
        "./1f6b8.svg": "222011",
        "./1f6b9.svg": "159461",
        "./1f6ba.svg": "279676",
        "./1f6bb.svg": "583403",
        "./1f6bc.svg": "302763",
        "./1f6bd.svg": "930445",
        "./1f6be.svg": "821223",
        "./1f6bf.svg": "68149",
        "./1f6c0-1f3fb.svg": "633072",
        "./1f6c0-1f3fc.svg": "7477",
        "./1f6c0-1f3fd.svg": "452843",
        "./1f6c0-1f3fe.svg": "226028",
        "./1f6c0-1f3ff.svg": "983951",
        "./1f6c0.svg": "73467",
        "./1f6c1.svg": "173844",
        "./1f6c2.svg": "908078",
        "./1f6c3.svg": "754552",
        "./1f6c4.svg": "764205",
        "./1f6c5.svg": "584129",
        "./1f6cb.svg": "410403",
        "./1f6cc-1f3fb.svg": "319002",
        "./1f6cc-1f3fc.svg": "586562",
        "./1f6cc-1f3fd.svg": "418372",
        "./1f6cc-1f3fe.svg": "978230",
        "./1f6cc-1f3ff.svg": "622251",
        "./1f6cc.svg": "676522",
        "./1f6cd.svg": "442404",
        "./1f6ce.svg": "440774",
        "./1f6cf.svg": "145935",
        "./1f6d0.svg": "503777",
        "./1f6d1.svg": "765787",
        "./1f6d2.svg": "575269",
        "./1f6d5.svg": "231626",
        "./1f6d6.svg": "436858",
        "./1f6d7.svg": "974151",
        "./1f6dc.svg": "490936",
        "./1f6dd.svg": "501516",
        "./1f6de.svg": "713583",
        "./1f6df.svg": "306132",
        "./1f6e0.svg": "120568",
        "./1f6e1.svg": "903912",
        "./1f6e2.svg": "648427",
        "./1f6e3.svg": "606211",
        "./1f6e4.svg": "204327",
        "./1f6e5.svg": "601396",
        "./1f6e9.svg": "495064",
        "./1f6eb.svg": "444932",
        "./1f6ec.svg": "350623",
        "./1f6f0.svg": "328691",
        "./1f6f3.svg": "29422",
        "./1f6f4.svg": "400705",
        "./1f6f5.svg": "253555",
        "./1f6f6.svg": "181842",
        "./1f6f7.svg": "208559",
        "./1f6f8.svg": "995615",
        "./1f6f9.svg": "441243",
        "./1f6fa.svg": "582668",
        "./1f6fb.svg": "814046",
        "./1f6fc.svg": "539411",
        "./1f7e0.svg": "8628",
        "./1f7e1.svg": "25490",
        "./1f7e2.svg": "524488",
        "./1f7e3.svg": "105544",
        "./1f7e4.svg": "387570",
        "./1f7e5.svg": "758633",
        "./1f7e6.svg": "888418",
        "./1f7e7.svg": "808586",
        "./1f7e8.svg": "132334",
        "./1f7e9.svg": "995926",
        "./1f7ea.svg": "711949",
        "./1f7eb.svg": "778637",
        "./1f7f0.svg": "216189",
        "./1f90c-1f3fb.svg": "778859",
        "./1f90c-1f3fc.svg": "995622",
        "./1f90c-1f3fd.svg": "829902",
        "./1f90c-1f3fe.svg": "137198",
        "./1f90c-1f3ff.svg": "353562",
        "./1f90c.svg": "861617",
        "./1f90d.svg": "554643",
        "./1f90e.svg": "298905",
        "./1f90f-1f3fb.svg": "652900",
        "./1f90f-1f3fc.svg": "92771",
        "./1f90f-1f3fd.svg": "229324",
        "./1f90f-1f3fe.svg": "464131",
        "./1f90f-1f3ff.svg": "322808",
        "./1f90f.svg": "622924",
        "./1f910.svg": "775871",
        "./1f911.svg": "57428",
        "./1f912.svg": "16453",
        "./1f913.svg": "653614",
        "./1f914.svg": "522367",
        "./1f915.svg": "106907",
        "./1f916.svg": "807382",
        "./1f917.svg": "191698",
        "./1f918-1f3fb.svg": "503638",
        "./1f918-1f3fc.svg": "389023",
        "./1f918-1f3fd.svg": "923397",
        "./1f918-1f3fe.svg": "600551",
        "./1f918-1f3ff.svg": "7286",
        "./1f918.svg": "160518",
        "./1f919-1f3fb.svg": "190916",
        "./1f919-1f3fc.svg": "866594",
        "./1f919-1f3fd.svg": "105254",
        "./1f919-1f3fe.svg": "934090",
        "./1f919-1f3ff.svg": "916221",
        "./1f919.svg": "726151",
        "./1f91a-1f3fb.svg": "228981",
        "./1f91a-1f3fc.svg": "195920",
        "./1f91a-1f3fd.svg": "415516",
        "./1f91a-1f3fe.svg": "528816",
        "./1f91a-1f3ff.svg": "256142",
        "./1f91a.svg": "457298",
        "./1f91b-1f3fb.svg": "197023",
        "./1f91b-1f3fc.svg": "847030",
        "./1f91b-1f3fd.svg": "340184",
        "./1f91b-1f3fe.svg": "178936",
        "./1f91b-1f3ff.svg": "853036",
        "./1f91b.svg": "649868",
        "./1f91c-1f3fb.svg": "238984",
        "./1f91c-1f3fc.svg": "551540",
        "./1f91c-1f3fd.svg": "632514",
        "./1f91c-1f3fe.svg": "279074",
        "./1f91c-1f3ff.svg": "628658",
        "./1f91c.svg": "688207",
        "./1f91d-1f3fb.svg": "794244",
        "./1f91d-1f3fc.svg": "757902",
        "./1f91d-1f3fd.svg": "271817",
        "./1f91d-1f3fe.svg": "858312",
        "./1f91d-1f3ff.svg": "953709",
        "./1f91d.svg": "401628",
        "./1f91e-1f3fb.svg": "322031",
        "./1f91e-1f3fc.svg": "235245",
        "./1f91e-1f3fd.svg": "997943",
        "./1f91e-1f3fe.svg": "253678",
        "./1f91e-1f3ff.svg": "636214",
        "./1f91e.svg": "44951",
        "./1f91f-1f3fb.svg": "152021",
        "./1f91f-1f3fc.svg": "846210",
        "./1f91f-1f3fd.svg": "440007",
        "./1f91f-1f3fe.svg": "384592",
        "./1f91f-1f3ff.svg": "857104",
        "./1f91f.svg": "712687",
        "./1f920.svg": "534122",
        "./1f921.svg": "553252",
        "./1f922.svg": "479925",
        "./1f923.svg": "706345",
        "./1f924.svg": "699458",
        "./1f925.svg": "677869",
        "./1f926-1f3fb-200d-2640-fe0f.svg": "492097",
        "./1f926-1f3fb-200d-2642-fe0f.svg": "298406",
        "./1f926-1f3fb.svg": "746358",
        "./1f926-1f3fc-200d-2640-fe0f.svg": "361822",
        "./1f926-1f3fc-200d-2642-fe0f.svg": "285877",
        "./1f926-1f3fc.svg": "385278",
        "./1f926-1f3fd-200d-2640-fe0f.svg": "977990",
        "./1f926-1f3fd-200d-2642-fe0f.svg": "97598",
        "./1f926-1f3fd.svg": "105974",
        "./1f926-1f3fe-200d-2640-fe0f.svg": "349514",
        "./1f926-1f3fe-200d-2642-fe0f.svg": "469788",
        "./1f926-1f3fe.svg": "587429",
        "./1f926-1f3ff-200d-2640-fe0f.svg": "211758",
        "./1f926-1f3ff-200d-2642-fe0f.svg": "316517",
        "./1f926-1f3ff.svg": "529144",
        "./1f926-200d-2640-fe0f.svg": "258260",
        "./1f926-200d-2642-fe0f.svg": "119070",
        "./1f926.svg": "210316",
        "./1f927.svg": "635013",
        "./1f928.svg": "676906",
        "./1f929.svg": "915531",
        "./1f92a.svg": "424151",
        "./1f92b.svg": "921121",
        "./1f92c.svg": "244504",
        "./1f92d.svg": "374605",
        "./1f92e.svg": "262265",
        "./1f92f.svg": "932275",
        "./1f930-1f3fb.svg": "217368",
        "./1f930-1f3fc.svg": "980076",
        "./1f930-1f3fd.svg": "139824",
        "./1f930-1f3fe.svg": "704021",
        "./1f930-1f3ff.svg": "41899",
        "./1f930.svg": "591704",
        "./1f931-1f3fb.svg": "267110",
        "./1f931-1f3fc.svg": "911465",
        "./1f931-1f3fd.svg": "545956",
        "./1f931-1f3fe.svg": "98315",
        "./1f931-1f3ff.svg": "758062",
        "./1f931.svg": "254483",
        "./1f932-1f3fb.svg": "118656",
        "./1f932-1f3fc.svg": "244522",
        "./1f932-1f3fd.svg": "601695",
        "./1f932-1f3fe.svg": "168953",
        "./1f932-1f3ff.svg": "988632",
        "./1f932.svg": "552731",
        "./1f933-1f3fb.svg": "265791",
        "./1f933-1f3fc.svg": "836043",
        "./1f933-1f3fd.svg": "416222",
        "./1f933-1f3fe.svg": "476907",
        "./1f933-1f3ff.svg": "35735",
        "./1f933.svg": "417693",
        "./1f934-1f3fb.svg": "289994",
        "./1f934-1f3fc.svg": "846777",
        "./1f934-1f3fd.svg": "147065",
        "./1f934-1f3fe.svg": "439376",
        "./1f934-1f3ff.svg": "872927",
        "./1f934.svg": "948307",
        "./1f935-1f3fb-200d-2640-fe0f.svg": "904068",
        "./1f935-1f3fb-200d-2642-fe0f.svg": "66015",
        "./1f935-1f3fb.svg": "99106",
        "./1f935-1f3fc-200d-2640-fe0f.svg": "949378",
        "./1f935-1f3fc-200d-2642-fe0f.svg": "514921",
        "./1f935-1f3fc.svg": "184741",
        "./1f935-1f3fd-200d-2640-fe0f.svg": "230919",
        "./1f935-1f3fd-200d-2642-fe0f.svg": "828143",
        "./1f935-1f3fd.svg": "860689",
        "./1f935-1f3fe-200d-2640-fe0f.svg": "150823",
        "./1f935-1f3fe-200d-2642-fe0f.svg": "585342",
        "./1f935-1f3fe.svg": "404249",
        "./1f935-1f3ff-200d-2640-fe0f.svg": "182015",
        "./1f935-1f3ff-200d-2642-fe0f.svg": "9380",
        "./1f935-1f3ff.svg": "918623",
        "./1f935-200d-2640-fe0f.svg": "860849",
        "./1f935-200d-2642-fe0f.svg": "821436",
        "./1f935.svg": "378210",
        "./1f936-1f3fb.svg": "156041",
        "./1f936-1f3fc.svg": "118640",
        "./1f936-1f3fd.svg": "102343",
        "./1f936-1f3fe.svg": "244105",
        "./1f936-1f3ff.svg": "523399",
        "./1f936.svg": "798557",
        "./1f937-1f3fb-200d-2640-fe0f.svg": "20788",
        "./1f937-1f3fb-200d-2642-fe0f.svg": "148360",
        "./1f937-1f3fb.svg": "614797",
        "./1f937-1f3fc-200d-2640-fe0f.svg": "273",
        "./1f937-1f3fc-200d-2642-fe0f.svg": "287591",
        "./1f937-1f3fc.svg": "178388",
        "./1f937-1f3fd-200d-2640-fe0f.svg": "194979",
        "./1f937-1f3fd-200d-2642-fe0f.svg": "468358",
        "./1f937-1f3fd.svg": "621032",
        "./1f937-1f3fe-200d-2640-fe0f.svg": "38959",
        "./1f937-1f3fe-200d-2642-fe0f.svg": "719803",
        "./1f937-1f3fe.svg": "205380",
        "./1f937-1f3ff-200d-2640-fe0f.svg": "709495",
        "./1f937-1f3ff-200d-2642-fe0f.svg": "62047",
        "./1f937-1f3ff.svg": "595328",
        "./1f937-200d-2640-fe0f.svg": "406385",
        "./1f937-200d-2642-fe0f.svg": "65819",
        "./1f937.svg": "825725",
        "./1f938-1f3fb-200d-2640-fe0f.svg": "267169",
        "./1f938-1f3fb-200d-2642-fe0f.svg": "925138",
        "./1f938-1f3fb.svg": "213681",
        "./1f938-1f3fc-200d-2640-fe0f.svg": "878470",
        "./1f938-1f3fc-200d-2642-fe0f.svg": "888104",
        "./1f938-1f3fc.svg": "420411",
        "./1f938-1f3fd-200d-2640-fe0f.svg": "493728",
        "./1f938-1f3fd-200d-2642-fe0f.svg": "125349",
        "./1f938-1f3fd.svg": "617058",
        "./1f938-1f3fe-200d-2640-fe0f.svg": "431115",
        "./1f938-1f3fe-200d-2642-fe0f.svg": "131434",
        "./1f938-1f3fe.svg": "122675",
        "./1f938-1f3ff-200d-2640-fe0f.svg": "185787",
        "./1f938-1f3ff-200d-2642-fe0f.svg": "539165",
        "./1f938-1f3ff.svg": "51691",
        "./1f938-200d-2640-fe0f.svg": "789680",
        "./1f938-200d-2642-fe0f.svg": "540850",
        "./1f938.svg": "446335",
        "./1f939-1f3fb-200d-2640-fe0f.svg": "518420",
        "./1f939-1f3fb-200d-2642-fe0f.svg": "278315",
        "./1f939-1f3fb.svg": "267220",
        "./1f939-1f3fc-200d-2640-fe0f.svg": "719683",
        "./1f939-1f3fc-200d-2642-fe0f.svg": "249366",
        "./1f939-1f3fc.svg": "321538",
        "./1f939-1f3fd-200d-2640-fe0f.svg": "700545",
        "./1f939-1f3fd-200d-2642-fe0f.svg": "529248",
        "./1f939-1f3fd.svg": "234519",
        "./1f939-1f3fe-200d-2640-fe0f.svg": "638667",
        "./1f939-1f3fe-200d-2642-fe0f.svg": "884945",
        "./1f939-1f3fe.svg": "604517",
        "./1f939-1f3ff-200d-2640-fe0f.svg": "272295",
        "./1f939-1f3ff-200d-2642-fe0f.svg": "483015",
        "./1f939-1f3ff.svg": "848104",
        "./1f939-200d-2640-fe0f.svg": "32182",
        "./1f939-200d-2642-fe0f.svg": "31943",
        "./1f939.svg": "404696",
        "./1f93a.svg": "833123",
        "./1f93c-200d-2640-fe0f.svg": "55907",
        "./1f93c-200d-2642-fe0f.svg": "631640",
        "./1f93c.svg": "978177",
        "./1f93d-1f3fb-200d-2640-fe0f.svg": "900756",
        "./1f93d-1f3fb-200d-2642-fe0f.svg": "445237",
        "./1f93d-1f3fb.svg": "212910",
        "./1f93d-1f3fc-200d-2640-fe0f.svg": "344595",
        "./1f93d-1f3fc-200d-2642-fe0f.svg": "701434",
        "./1f93d-1f3fc.svg": "910386",
        "./1f93d-1f3fd-200d-2640-fe0f.svg": "509749",
        "./1f93d-1f3fd-200d-2642-fe0f.svg": "148650",
        "./1f93d-1f3fd.svg": "217062",
        "./1f93d-1f3fe-200d-2640-fe0f.svg": "47767",
        "./1f93d-1f3fe-200d-2642-fe0f.svg": "45558",
        "./1f93d-1f3fe.svg": "923387",
        "./1f93d-1f3ff-200d-2640-fe0f.svg": "267502",
        "./1f93d-1f3ff-200d-2642-fe0f.svg": "105730",
        "./1f93d-1f3ff.svg": "902013",
        "./1f93d-200d-2640-fe0f.svg": "508324",
        "./1f93d-200d-2642-fe0f.svg": "138191",
        "./1f93d.svg": "152719",
        "./1f93e-1f3fb-200d-2640-fe0f.svg": "509873",
        "./1f93e-1f3fb-200d-2642-fe0f.svg": "479541",
        "./1f93e-1f3fb.svg": "404204",
        "./1f93e-1f3fc-200d-2640-fe0f.svg": "716354",
        "./1f93e-1f3fc-200d-2642-fe0f.svg": "164970",
        "./1f93e-1f3fc.svg": "212673",
        "./1f93e-1f3fd-200d-2640-fe0f.svg": "163146",
        "./1f93e-1f3fd-200d-2642-fe0f.svg": "364478",
        "./1f93e-1f3fd.svg": "718956",
        "./1f93e-1f3fe-200d-2640-fe0f.svg": "699647",
        "./1f93e-1f3fe-200d-2642-fe0f.svg": "294767",
        "./1f93e-1f3fe.svg": "711622",
        "./1f93e-1f3ff-200d-2640-fe0f.svg": "16929",
        "./1f93e-1f3ff-200d-2642-fe0f.svg": "934621",
        "./1f93e-1f3ff.svg": "787908",
        "./1f93e-200d-2640-fe0f.svg": "305293",
        "./1f93e-200d-2642-fe0f.svg": "370888",
        "./1f93e.svg": "606045",
        "./1f93f.svg": "794138",
        "./1f940.svg": "279820",
        "./1f941.svg": "762026",
        "./1f942.svg": "730885",
        "./1f943.svg": "689457",
        "./1f944.svg": "823919",
        "./1f945.svg": "750961",
        "./1f947.svg": "894707",
        "./1f948.svg": "82926",
        "./1f949.svg": "446220",
        "./1f94a.svg": "400627",
        "./1f94b.svg": "433739",
        "./1f94c.svg": "173941",
        "./1f94d.svg": "780839",
        "./1f94e.svg": "191967",
        "./1f94f.svg": "941596",
        "./1f950.svg": "299026",
        "./1f951.svg": "629284",
        "./1f952.svg": "279854",
        "./1f953.svg": "608484",
        "./1f954.svg": "492550",
        "./1f955.svg": "519315",
        "./1f956.svg": "390315",
        "./1f957.svg": "49208",
        "./1f958.svg": "686195",
        "./1f959.svg": "420740",
        "./1f95a.svg": "902722",
        "./1f95b.svg": "198472",
        "./1f95c.svg": "548833",
        "./1f95d.svg": "649980",
        "./1f95e.svg": "977138",
        "./1f95f.svg": "452314",
        "./1f960.svg": "894122",
        "./1f961.svg": "184856",
        "./1f962.svg": "76077",
        "./1f963.svg": "348238",
        "./1f964.svg": "198392",
        "./1f965.svg": "750898",
        "./1f966.svg": "272375",
        "./1f967.svg": "565863",
        "./1f968.svg": "169722",
        "./1f969.svg": "296038",
        "./1f96a.svg": "402071",
        "./1f96b.svg": "221493",
        "./1f96c.svg": "456761",
        "./1f96d.svg": "196593",
        "./1f96e.svg": "709879",
        "./1f96f.svg": "399484",
        "./1f970.svg": "196346",
        "./1f971.svg": "41432",
        "./1f972.svg": "271283",
        "./1f973.svg": "961032",
        "./1f974.svg": "79986",
        "./1f975.svg": "682743",
        "./1f976.svg": "872297",
        "./1f977-1f3fb.svg": "73390",
        "./1f977-1f3fc.svg": "96786",
        "./1f977-1f3fd.svg": "845041",
        "./1f977-1f3fe.svg": "134287",
        "./1f977-1f3ff.svg": "471997",
        "./1f977.svg": "27589",
        "./1f978.svg": "923473",
        "./1f979.svg": "109491",
        "./1f97a.svg": "194861",
        "./1f97b.svg": "955293",
        "./1f97c.svg": "874798",
        "./1f97d.svg": "525198",
        "./1f97e.svg": "468427",
        "./1f97f.svg": "636477",
        "./1f980.svg": "323679",
        "./1f981.svg": "587689",
        "./1f982.svg": "837888",
        "./1f983.svg": "240558",
        "./1f984.svg": "92275",
        "./1f985.svg": "232065",
        "./1f986.svg": "863162",
        "./1f987.svg": "808169",
        "./1f988.svg": "337730",
        "./1f989.svg": "172229",
        "./1f98a.svg": "730782",
        "./1f98b.svg": "846151",
        "./1f98c.svg": "769964",
        "./1f98d.svg": "241498",
        "./1f98e.svg": "190270",
        "./1f98f.svg": "607503",
        "./1f990.svg": "182830",
        "./1f991.svg": "64716",
        "./1f992.svg": "200381",
        "./1f993.svg": "736076",
        "./1f994.svg": "942868",
        "./1f995.svg": "168123",
        "./1f996.svg": "32461",
        "./1f997.svg": "916934",
        "./1f998.svg": "968510",
        "./1f999.svg": "28033",
        "./1f99a.svg": "633456",
        "./1f99b.svg": "208087",
        "./1f99c.svg": "85900",
        "./1f99d.svg": "701110",
        "./1f99e.svg": "449683",
        "./1f99f.svg": "396046",
        "./1f9a0.svg": "50546",
        "./1f9a1.svg": "768537",
        "./1f9a2.svg": "51993",
        "./1f9a3.svg": "774880",
        "./1f9a4.svg": "39553",
        "./1f9a5.svg": "528270",
        "./1f9a6.svg": "874351",
        "./1f9a7.svg": "489898",
        "./1f9a8.svg": "967907",
        "./1f9a9.svg": "597320",
        "./1f9aa.svg": "495540",
        "./1f9ab.svg": "187753",
        "./1f9ac.svg": "696477",
        "./1f9ad.svg": "357544",
        "./1f9ae.svg": "531178",
        "./1f9af.svg": "991604",
        "./1f9b0.svg": "412489",
        "./1f9b1.svg": "447278",
        "./1f9b2.svg": "995126",
        "./1f9b3.svg": "676017",
        "./1f9b4.svg": "603462",
        "./1f9b5-1f3fb.svg": "654894",
        "./1f9b5-1f3fc.svg": "162197",
        "./1f9b5-1f3fd.svg": "81520",
        "./1f9b5-1f3fe.svg": "840505",
        "./1f9b5-1f3ff.svg": "523069",
        "./1f9b5.svg": "822386",
        "./1f9b6-1f3fb.svg": "446045",
        "./1f9b6-1f3fc.svg": "935491",
        "./1f9b6-1f3fd.svg": "509605",
        "./1f9b6-1f3fe.svg": "267931",
        "./1f9b6-1f3ff.svg": "545568",
        "./1f9b6.svg": "22726",
        "./1f9b7.svg": "809087",
        "./1f9b8-1f3fb-200d-2640-fe0f.svg": "870115",
        "./1f9b8-1f3fb-200d-2642-fe0f.svg": "905497",
        "./1f9b8-1f3fb.svg": "24550",
        "./1f9b8-1f3fc-200d-2640-fe0f.svg": "838753",
        "./1f9b8-1f3fc-200d-2642-fe0f.svg": "832008",
        "./1f9b8-1f3fc.svg": "431117",
        "./1f9b8-1f3fd-200d-2640-fe0f.svg": "599923",
        "./1f9b8-1f3fd-200d-2642-fe0f.svg": "3399",
        "./1f9b8-1f3fd.svg": "616527",
        "./1f9b8-1f3fe-200d-2640-fe0f.svg": "807623",
        "./1f9b8-1f3fe-200d-2642-fe0f.svg": "138067",
        "./1f9b8-1f3fe.svg": "871927",
        "./1f9b8-1f3ff-200d-2640-fe0f.svg": "620556",
        "./1f9b8-1f3ff-200d-2642-fe0f.svg": "937579",
        "./1f9b8-1f3ff.svg": "402007",
        "./1f9b8-200d-2640-fe0f.svg": "498889",
        "./1f9b8-200d-2642-fe0f.svg": "567461",
        "./1f9b8.svg": "399072",
        "./1f9b9-1f3fb-200d-2640-fe0f.svg": "850770",
        "./1f9b9-1f3fb-200d-2642-fe0f.svg": "145289",
        "./1f9b9-1f3fb.svg": "109917",
        "./1f9b9-1f3fc-200d-2640-fe0f.svg": "464542",
        "./1f9b9-1f3fc-200d-2642-fe0f.svg": "234778",
        "./1f9b9-1f3fc.svg": "755387",
        "./1f9b9-1f3fd-200d-2640-fe0f.svg": "944564",
        "./1f9b9-1f3fd-200d-2642-fe0f.svg": "293889",
        "./1f9b9-1f3fd.svg": "404609",
        "./1f9b9-1f3fe-200d-2640-fe0f.svg": "885334",
        "./1f9b9-1f3fe-200d-2642-fe0f.svg": "601757",
        "./1f9b9-1f3fe.svg": "365728",
        "./1f9b9-1f3ff-200d-2640-fe0f.svg": "174396",
        "./1f9b9-1f3ff-200d-2642-fe0f.svg": "644727",
        "./1f9b9-1f3ff.svg": "115193",
        "./1f9b9-200d-2640-fe0f.svg": "12285",
        "./1f9b9-200d-2642-fe0f.svg": "601940",
        "./1f9b9.svg": "458834",
        "./1f9ba.svg": "721269",
        "./1f9bb-1f3fb.svg": "121384",
        "./1f9bb-1f3fc.svg": "934241",
        "./1f9bb-1f3fd.svg": "33519",
        "./1f9bb-1f3fe.svg": "967540",
        "./1f9bb-1f3ff.svg": "396351",
        "./1f9bb.svg": "665530",
        "./1f9bc.svg": "70696",
        "./1f9bd.svg": "378567",
        "./1f9be.svg": "575565",
        "./1f9bf.svg": "993045",
        "./1f9c0.svg": "307866",
        "./1f9c1.svg": "485724",
        "./1f9c2.svg": "898557",
        "./1f9c3.svg": "718353",
        "./1f9c4.svg": "238002",
        "./1f9c5.svg": "314952",
        "./1f9c6.svg": "387924",
        "./1f9c7.svg": "458656",
        "./1f9c8.svg": "203402",
        "./1f9c9.svg": "539695",
        "./1f9ca.svg": "931975",
        "./1f9cb.svg": "361475",
        "./1f9cc.svg": "117456",
        "./1f9cd-1f3fb-200d-2640-fe0f.svg": "477781",
        "./1f9cd-1f3fb-200d-2642-fe0f.svg": "586234",
        "./1f9cd-1f3fb.svg": "237264",
        "./1f9cd-1f3fc-200d-2640-fe0f.svg": "107520",
        "./1f9cd-1f3fc-200d-2642-fe0f.svg": "264431",
        "./1f9cd-1f3fc.svg": "332573",
        "./1f9cd-1f3fd-200d-2640-fe0f.svg": "304430",
        "./1f9cd-1f3fd-200d-2642-fe0f.svg": "994216",
        "./1f9cd-1f3fd.svg": "158446",
        "./1f9cd-1f3fe-200d-2640-fe0f.svg": "346869",
        "./1f9cd-1f3fe-200d-2642-fe0f.svg": "333882",
        "./1f9cd-1f3fe.svg": "41441",
        "./1f9cd-1f3ff-200d-2640-fe0f.svg": "245500",
        "./1f9cd-1f3ff-200d-2642-fe0f.svg": "59622",
        "./1f9cd-1f3ff.svg": "18145",
        "./1f9cd-200d-2640-fe0f.svg": "682179",
        "./1f9cd-200d-2642-fe0f.svg": "310175",
        "./1f9cd.svg": "273554",
        "./1f9ce-1f3fb-200d-2640-fe0f.svg": "700979",
        "./1f9ce-1f3fb-200d-2642-fe0f.svg": "382651",
        "./1f9ce-1f3fb.svg": "284497",
        "./1f9ce-1f3fc-200d-2640-fe0f.svg": "584013",
        "./1f9ce-1f3fc-200d-2642-fe0f.svg": "912327",
        "./1f9ce-1f3fc.svg": "570420",
        "./1f9ce-1f3fd-200d-2640-fe0f.svg": "4924",
        "./1f9ce-1f3fd-200d-2642-fe0f.svg": "728297",
        "./1f9ce-1f3fd.svg": "20928",
        "./1f9ce-1f3fe-200d-2640-fe0f.svg": "268081",
        "./1f9ce-1f3fe-200d-2642-fe0f.svg": "794935",
        "./1f9ce-1f3fe.svg": "331364",
        "./1f9ce-1f3ff-200d-2640-fe0f.svg": "640883",
        "./1f9ce-1f3ff-200d-2642-fe0f.svg": "195688",
        "./1f9ce-1f3ff.svg": "530264",
        "./1f9ce-200d-2640-fe0f.svg": "848858",
        "./1f9ce-200d-2642-fe0f.svg": "439785",
        "./1f9ce.svg": "987413",
        "./1f9cf-1f3fb-200d-2640-fe0f.svg": "323520",
        "./1f9cf-1f3fb-200d-2642-fe0f.svg": "199963",
        "./1f9cf-1f3fb.svg": "512757",
        "./1f9cf-1f3fc-200d-2640-fe0f.svg": "111641",
        "./1f9cf-1f3fc-200d-2642-fe0f.svg": "145315",
        "./1f9cf-1f3fc.svg": "514620",
        "./1f9cf-1f3fd-200d-2640-fe0f.svg": "158099",
        "./1f9cf-1f3fd-200d-2642-fe0f.svg": "329981",
        "./1f9cf-1f3fd.svg": "428134",
        "./1f9cf-1f3fe-200d-2640-fe0f.svg": "79018",
        "./1f9cf-1f3fe-200d-2642-fe0f.svg": "77854",
        "./1f9cf-1f3fe.svg": "386908",
        "./1f9cf-1f3ff-200d-2640-fe0f.svg": "925121",
        "./1f9cf-1f3ff-200d-2642-fe0f.svg": "405078",
        "./1f9cf-1f3ff.svg": "753021",
        "./1f9cf-200d-2640-fe0f.svg": "628111",
        "./1f9cf-200d-2642-fe0f.svg": "264380",
        "./1f9cf.svg": "432061",
        "./1f9d0.svg": "696939",
        "./1f9d1-1f3fb-200d-1f33e.svg": "392524",
        "./1f9d1-1f3fb-200d-1f373.svg": "215872",
        "./1f9d1-1f3fb-200d-1f37c.svg": "97415",
        "./1f9d1-1f3fb-200d-1f384.svg": "865426",
        "./1f9d1-1f3fb-200d-1f393.svg": "925799",
        "./1f9d1-1f3fb-200d-1f3a4.svg": "374203",
        "./1f9d1-1f3fb-200d-1f3a8.svg": "725377",
        "./1f9d1-1f3fb-200d-1f3eb.svg": "966311",
        "./1f9d1-1f3fb-200d-1f3ed.svg": "716069",
        "./1f9d1-1f3fb-200d-1f4bb.svg": "549506",
        "./1f9d1-1f3fb-200d-1f4bc.svg": "853527",
        "./1f9d1-1f3fb-200d-1f527.svg": "654287",
        "./1f9d1-1f3fb-200d-1f52c.svg": "789089",
        "./1f9d1-1f3fb-200d-1f680.svg": "30247",
        "./1f9d1-1f3fb-200d-1f692.svg": "753984",
        "./1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fb.svg": "866835",
        "./1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fc.svg": "639468",
        "./1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fd.svg": "360778",
        "./1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fe.svg": "271505",
        "./1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3ff.svg": "718134",
        "./1f9d1-1f3fb-200d-1f9af.svg": "175213",
        "./1f9d1-1f3fb-200d-1f9b0.svg": "837110",
        "./1f9d1-1f3fb-200d-1f9b1.svg": "695407",
        "./1f9d1-1f3fb-200d-1f9b2.svg": "687491",
        "./1f9d1-1f3fb-200d-1f9b3.svg": "83305",
        "./1f9d1-1f3fb-200d-1f9bc.svg": "560479",
        "./1f9d1-1f3fb-200d-1f9bd.svg": "899074",
        "./1f9d1-1f3fb-200d-2695-fe0f.svg": "521163",
        "./1f9d1-1f3fb-200d-2696-fe0f.svg": "995909",
        "./1f9d1-1f3fb-200d-2708-fe0f.svg": "219352",
        "./1f9d1-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fc.svg":
          "799574",
        "./1f9d1-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fd.svg":
          "456487",
        "./1f9d1-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fe.svg": "47518",
        "./1f9d1-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3ff.svg":
          "394858",
        "./1f9d1-1f3fb-200d-2764-fe0f-200d-1f9d1-1f3fc.svg": "994800",
        "./1f9d1-1f3fb-200d-2764-fe0f-200d-1f9d1-1f3fd.svg": "268487",
        "./1f9d1-1f3fb-200d-2764-fe0f-200d-1f9d1-1f3fe.svg": "954717",
        "./1f9d1-1f3fb-200d-2764-fe0f-200d-1f9d1-1f3ff.svg": "304374",
        "./1f9d1-1f3fb.svg": "142430",
        "./1f9d1-1f3fc-200d-1f33e.svg": "487020",
        "./1f9d1-1f3fc-200d-1f373.svg": "287028",
        "./1f9d1-1f3fc-200d-1f37c.svg": "851671",
        "./1f9d1-1f3fc-200d-1f384.svg": "419808",
        "./1f9d1-1f3fc-200d-1f393.svg": "233685",
        "./1f9d1-1f3fc-200d-1f3a4.svg": "617491",
        "./1f9d1-1f3fc-200d-1f3a8.svg": "844416",
        "./1f9d1-1f3fc-200d-1f3eb.svg": "452825",
        "./1f9d1-1f3fc-200d-1f3ed.svg": "39077",
        "./1f9d1-1f3fc-200d-1f4bb.svg": "842229",
        "./1f9d1-1f3fc-200d-1f4bc.svg": "938516",
        "./1f9d1-1f3fc-200d-1f527.svg": "186290",
        "./1f9d1-1f3fc-200d-1f52c.svg": "418898",
        "./1f9d1-1f3fc-200d-1f680.svg": "173243",
        "./1f9d1-1f3fc-200d-1f692.svg": "433235",
        "./1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fb.svg": "756561",
        "./1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fc.svg": "104661",
        "./1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fd.svg": "813176",
        "./1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fe.svg": "943849",
        "./1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3ff.svg": "269616",
        "./1f9d1-1f3fc-200d-1f9af.svg": "131417",
        "./1f9d1-1f3fc-200d-1f9b0.svg": "109612",
        "./1f9d1-1f3fc-200d-1f9b1.svg": "743694",
        "./1f9d1-1f3fc-200d-1f9b2.svg": "291539",
        "./1f9d1-1f3fc-200d-1f9b3.svg": "610857",
        "./1f9d1-1f3fc-200d-1f9bc.svg": "57037",
        "./1f9d1-1f3fc-200d-1f9bd.svg": "744121",
        "./1f9d1-1f3fc-200d-2695-fe0f.svg": "337231",
        "./1f9d1-1f3fc-200d-2696-fe0f.svg": "34359",
        "./1f9d1-1f3fc-200d-2708-fe0f.svg": "745580",
        "./1f9d1-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fb.svg":
          "707990",
        "./1f9d1-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fd.svg":
          "737972",
        "./1f9d1-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fe.svg":
          "804021",
        "./1f9d1-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3ff.svg":
          "278071",
        "./1f9d1-1f3fc-200d-2764-fe0f-200d-1f9d1-1f3fb.svg": "420994",
        "./1f9d1-1f3fc-200d-2764-fe0f-200d-1f9d1-1f3fd.svg": "961581",
        "./1f9d1-1f3fc-200d-2764-fe0f-200d-1f9d1-1f3fe.svg": "32578",
        "./1f9d1-1f3fc-200d-2764-fe0f-200d-1f9d1-1f3ff.svg": "188576",
        "./1f9d1-1f3fc.svg": "455063",
        "./1f9d1-1f3fd-200d-1f33e.svg": "786703",
        "./1f9d1-1f3fd-200d-1f373.svg": "403361",
        "./1f9d1-1f3fd-200d-1f37c.svg": "177130",
        "./1f9d1-1f3fd-200d-1f384.svg": "707563",
        "./1f9d1-1f3fd-200d-1f393.svg": "812265",
        "./1f9d1-1f3fd-200d-1f3a4.svg": "529785",
        "./1f9d1-1f3fd-200d-1f3a8.svg": "852686",
        "./1f9d1-1f3fd-200d-1f3eb.svg": "772157",
        "./1f9d1-1f3fd-200d-1f3ed.svg": "978703",
        "./1f9d1-1f3fd-200d-1f4bb.svg": "23458",
        "./1f9d1-1f3fd-200d-1f4bc.svg": "501545",
        "./1f9d1-1f3fd-200d-1f527.svg": "869524",
        "./1f9d1-1f3fd-200d-1f52c.svg": "689750",
        "./1f9d1-1f3fd-200d-1f680.svg": "978421",
        "./1f9d1-1f3fd-200d-1f692.svg": "379552",
        "./1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fb.svg": "188001",
        "./1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fc.svg": "403283",
        "./1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fd.svg": "739988",
        "./1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fe.svg": "383035",
        "./1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3ff.svg": "895471",
        "./1f9d1-1f3fd-200d-1f9af.svg": "912774",
        "./1f9d1-1f3fd-200d-1f9b0.svg": "856430",
        "./1f9d1-1f3fd-200d-1f9b1.svg": "374496",
        "./1f9d1-1f3fd-200d-1f9b2.svg": "932460",
        "./1f9d1-1f3fd-200d-1f9b3.svg": "687577",
        "./1f9d1-1f3fd-200d-1f9bc.svg": "244837",
        "./1f9d1-1f3fd-200d-1f9bd.svg": "804837",
        "./1f9d1-1f3fd-200d-2695-fe0f.svg": "138787",
        "./1f9d1-1f3fd-200d-2696-fe0f.svg": "247791",
        "./1f9d1-1f3fd-200d-2708-fe0f.svg": "326492",
        "./1f9d1-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fb.svg":
          "780776",
        "./1f9d1-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fc.svg":
          "968936",
        "./1f9d1-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fe.svg":
          "797048",
        "./1f9d1-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3ff.svg":
          "370013",
        "./1f9d1-1f3fd-200d-2764-fe0f-200d-1f9d1-1f3fb.svg": "422150",
        "./1f9d1-1f3fd-200d-2764-fe0f-200d-1f9d1-1f3fc.svg": "675518",
        "./1f9d1-1f3fd-200d-2764-fe0f-200d-1f9d1-1f3fe.svg": "47316",
        "./1f9d1-1f3fd-200d-2764-fe0f-200d-1f9d1-1f3ff.svg": "65584",
        "./1f9d1-1f3fd.svg": "479063",
        "./1f9d1-1f3fe-200d-1f33e.svg": "296602",
        "./1f9d1-1f3fe-200d-1f373.svg": "410739",
        "./1f9d1-1f3fe-200d-1f37c.svg": "291762",
        "./1f9d1-1f3fe-200d-1f384.svg": "70086",
        "./1f9d1-1f3fe-200d-1f393.svg": "18381",
        "./1f9d1-1f3fe-200d-1f3a4.svg": "104443",
        "./1f9d1-1f3fe-200d-1f3a8.svg": "765735",
        "./1f9d1-1f3fe-200d-1f3eb.svg": "982453",
        "./1f9d1-1f3fe-200d-1f3ed.svg": "138019",
        "./1f9d1-1f3fe-200d-1f4bb.svg": "193116",
        "./1f9d1-1f3fe-200d-1f4bc.svg": "164740",
        "./1f9d1-1f3fe-200d-1f527.svg": "557099",
        "./1f9d1-1f3fe-200d-1f52c.svg": "386962",
        "./1f9d1-1f3fe-200d-1f680.svg": "38486",
        "./1f9d1-1f3fe-200d-1f692.svg": "690567",
        "./1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fb.svg": "989342",
        "./1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fc.svg": "729154",
        "./1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fd.svg": "40638",
        "./1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fe.svg": "534023",
        "./1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3ff.svg": "103837",
        "./1f9d1-1f3fe-200d-1f9af.svg": "150787",
        "./1f9d1-1f3fe-200d-1f9b0.svg": "464068",
        "./1f9d1-1f3fe-200d-1f9b1.svg": "755212",
        "./1f9d1-1f3fe-200d-1f9b2.svg": "59385",
        "./1f9d1-1f3fe-200d-1f9b3.svg": "281456",
        "./1f9d1-1f3fe-200d-1f9bc.svg": "988458",
        "./1f9d1-1f3fe-200d-1f9bd.svg": "556835",
        "./1f9d1-1f3fe-200d-2695-fe0f.svg": "489249",
        "./1f9d1-1f3fe-200d-2696-fe0f.svg": "357576",
        "./1f9d1-1f3fe-200d-2708-fe0f.svg": "702425",
        "./1f9d1-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fb.svg":
          "639498",
        "./1f9d1-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fc.svg":
          "426311",
        "./1f9d1-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fd.svg":
          "857766",
        "./1f9d1-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3ff.svg":
          "666314",
        "./1f9d1-1f3fe-200d-2764-fe0f-200d-1f9d1-1f3fb.svg": "681769",
        "./1f9d1-1f3fe-200d-2764-fe0f-200d-1f9d1-1f3fc.svg": "671261",
        "./1f9d1-1f3fe-200d-2764-fe0f-200d-1f9d1-1f3fd.svg": "975459",
        "./1f9d1-1f3fe-200d-2764-fe0f-200d-1f9d1-1f3ff.svg": "155146",
        "./1f9d1-1f3fe.svg": "926172",
        "./1f9d1-1f3ff-200d-1f33e.svg": "45002",
        "./1f9d1-1f3ff-200d-1f373.svg": "677330",
        "./1f9d1-1f3ff-200d-1f37c.svg": "936986",
        "./1f9d1-1f3ff-200d-1f384.svg": "620298",
        "./1f9d1-1f3ff-200d-1f393.svg": "204219",
        "./1f9d1-1f3ff-200d-1f3a4.svg": "708909",
        "./1f9d1-1f3ff-200d-1f3a8.svg": "888069",
        "./1f9d1-1f3ff-200d-1f3eb.svg": "756792",
        "./1f9d1-1f3ff-200d-1f3ed.svg": "250278",
        "./1f9d1-1f3ff-200d-1f4bb.svg": "284674",
        "./1f9d1-1f3ff-200d-1f4bc.svg": "981484",
        "./1f9d1-1f3ff-200d-1f527.svg": "999351",
        "./1f9d1-1f3ff-200d-1f52c.svg": "853144",
        "./1f9d1-1f3ff-200d-1f680.svg": "128005",
        "./1f9d1-1f3ff-200d-1f692.svg": "634211",
        "./1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fb.svg": "311560",
        "./1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fc.svg": "103912",
        "./1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fd.svg": "477094",
        "./1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fe.svg": "817944",
        "./1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3ff.svg": "885934",
        "./1f9d1-1f3ff-200d-1f9af.svg": "974929",
        "./1f9d1-1f3ff-200d-1f9b0.svg": "350412",
        "./1f9d1-1f3ff-200d-1f9b1.svg": "689067",
        "./1f9d1-1f3ff-200d-1f9b2.svg": "57574",
        "./1f9d1-1f3ff-200d-1f9b3.svg": "166875",
        "./1f9d1-1f3ff-200d-1f9bc.svg": "714172",
        "./1f9d1-1f3ff-200d-1f9bd.svg": "172310",
        "./1f9d1-1f3ff-200d-2695-fe0f.svg": "328150",
        "./1f9d1-1f3ff-200d-2696-fe0f.svg": "524112",
        "./1f9d1-1f3ff-200d-2708-fe0f.svg": "608476",
        "./1f9d1-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fb.svg":
          "273988",
        "./1f9d1-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fc.svg":
          "488165",
        "./1f9d1-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fd.svg":
          "969711",
        "./1f9d1-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fe.svg":
          "150100",
        "./1f9d1-1f3ff-200d-2764-fe0f-200d-1f9d1-1f3fb.svg": "965444",
        "./1f9d1-1f3ff-200d-2764-fe0f-200d-1f9d1-1f3fc.svg": "780647",
        "./1f9d1-1f3ff-200d-2764-fe0f-200d-1f9d1-1f3fd.svg": "860511",
        "./1f9d1-1f3ff-200d-2764-fe0f-200d-1f9d1-1f3fe.svg": "879806",
        "./1f9d1-1f3ff.svg": "304565",
        "./1f9d1-200d-1f33e.svg": "48154",
        "./1f9d1-200d-1f373.svg": "333115",
        "./1f9d1-200d-1f37c.svg": "477935",
        "./1f9d1-200d-1f384.svg": "483592",
        "./1f9d1-200d-1f393.svg": "633715",
        "./1f9d1-200d-1f3a4.svg": "496619",
        "./1f9d1-200d-1f3a8.svg": "466517",
        "./1f9d1-200d-1f3eb.svg": "619939",
        "./1f9d1-200d-1f3ed.svg": "137006",
        "./1f9d1-200d-1f4bb.svg": "781059",
        "./1f9d1-200d-1f4bc.svg": "544445",
        "./1f9d1-200d-1f527.svg": "202509",
        "./1f9d1-200d-1f52c.svg": "559500",
        "./1f9d1-200d-1f680.svg": "510534",
        "./1f9d1-200d-1f692.svg": "908032",
        "./1f9d1-200d-1f91d-200d-1f9d1.svg": "143472",
        "./1f9d1-200d-1f9af.svg": "92479",
        "./1f9d1-200d-1f9b0.svg": "562566",
        "./1f9d1-200d-1f9b1.svg": "262910",
        "./1f9d1-200d-1f9b2.svg": "296858",
        "./1f9d1-200d-1f9b3.svg": "442199",
        "./1f9d1-200d-1f9bc.svg": "99935",
        "./1f9d1-200d-1f9bd.svg": "463793",
        "./1f9d1-200d-2695-fe0f.svg": "420464",
        "./1f9d1-200d-2696-fe0f.svg": "959213",
        "./1f9d1-200d-2708-fe0f.svg": "349355",
        "./1f9d1.svg": "276222",
        "./1f9d2-1f3fb.svg": "303813",
        "./1f9d2-1f3fc.svg": "796501",
        "./1f9d2-1f3fd.svg": "734651",
        "./1f9d2-1f3fe.svg": "808569",
        "./1f9d2-1f3ff.svg": "402447",
        "./1f9d2.svg": "231002",
        "./1f9d3-1f3fb.svg": "716546",
        "./1f9d3-1f3fc.svg": "283625",
        "./1f9d3-1f3fd.svg": "644686",
        "./1f9d3-1f3fe.svg": "485274",
        "./1f9d3-1f3ff.svg": "477119",
        "./1f9d3.svg": "785588",
        "./1f9d4-1f3fb-200d-2640-fe0f.svg": "114054",
        "./1f9d4-1f3fb-200d-2642-fe0f.svg": "241831",
        "./1f9d4-1f3fb.svg": "164329",
        "./1f9d4-1f3fc-200d-2640-fe0f.svg": "184892",
        "./1f9d4-1f3fc-200d-2642-fe0f.svg": "710708",
        "./1f9d4-1f3fc.svg": "563891",
        "./1f9d4-1f3fd-200d-2640-fe0f.svg": "581548",
        "./1f9d4-1f3fd-200d-2642-fe0f.svg": "254003",
        "./1f9d4-1f3fd.svg": "21075",
        "./1f9d4-1f3fe-200d-2640-fe0f.svg": "544058",
        "./1f9d4-1f3fe-200d-2642-fe0f.svg": "623537",
        "./1f9d4-1f3fe.svg": "253956",
        "./1f9d4-1f3ff-200d-2640-fe0f.svg": "809931",
        "./1f9d4-1f3ff-200d-2642-fe0f.svg": "200719",
        "./1f9d4-1f3ff.svg": "445615",
        "./1f9d4-200d-2640-fe0f.svg": "508054",
        "./1f9d4-200d-2642-fe0f.svg": "121560",
        "./1f9d4.svg": "306635",
        "./1f9d5-1f3fb.svg": "148399",
        "./1f9d5-1f3fc.svg": "199955",
        "./1f9d5-1f3fd.svg": "922450",
        "./1f9d5-1f3fe.svg": "234620",
        "./1f9d5-1f3ff.svg": "665319",
        "./1f9d5.svg": "839365",
        "./1f9d6-1f3fb-200d-2640-fe0f.svg": "337713",
        "./1f9d6-1f3fb-200d-2642-fe0f.svg": "62557",
        "./1f9d6-1f3fb.svg": "578342",
        "./1f9d6-1f3fc-200d-2640-fe0f.svg": "23507",
        "./1f9d6-1f3fc-200d-2642-fe0f.svg": "182121",
        "./1f9d6-1f3fc.svg": "798848",
        "./1f9d6-1f3fd-200d-2640-fe0f.svg": "973774",
        "./1f9d6-1f3fd-200d-2642-fe0f.svg": "259104",
        "./1f9d6-1f3fd.svg": "656964",
        "./1f9d6-1f3fe-200d-2640-fe0f.svg": "396502",
        "./1f9d6-1f3fe-200d-2642-fe0f.svg": "272823",
        "./1f9d6-1f3fe.svg": "837973",
        "./1f9d6-1f3ff-200d-2640-fe0f.svg": "559443",
        "./1f9d6-1f3ff-200d-2642-fe0f.svg": "606919",
        "./1f9d6-1f3ff.svg": "636101",
        "./1f9d6-200d-2640-fe0f.svg": "602331",
        "./1f9d6-200d-2642-fe0f.svg": "968869",
        "./1f9d6.svg": "440632",
        "./1f9d7-1f3fb-200d-2640-fe0f.svg": "880867",
        "./1f9d7-1f3fb-200d-2642-fe0f.svg": "441751",
        "./1f9d7-1f3fb.svg": "598084",
        "./1f9d7-1f3fc-200d-2640-fe0f.svg": "328608",
        "./1f9d7-1f3fc-200d-2642-fe0f.svg": "433585",
        "./1f9d7-1f3fc.svg": "529341",
        "./1f9d7-1f3fd-200d-2640-fe0f.svg": "805753",
        "./1f9d7-1f3fd-200d-2642-fe0f.svg": "653389",
        "./1f9d7-1f3fd.svg": "200377",
        "./1f9d7-1f3fe-200d-2640-fe0f.svg": "136877",
        "./1f9d7-1f3fe-200d-2642-fe0f.svg": "905901",
        "./1f9d7-1f3fe.svg": "408227",
        "./1f9d7-1f3ff-200d-2640-fe0f.svg": "64269",
        "./1f9d7-1f3ff-200d-2642-fe0f.svg": "76905",
        "./1f9d7-1f3ff.svg": "789977",
        "./1f9d7-200d-2640-fe0f.svg": "258997",
        "./1f9d7-200d-2642-fe0f.svg": "795928",
        "./1f9d7.svg": "805943",
        "./1f9d8-1f3fb-200d-2640-fe0f.svg": "256100",
        "./1f9d8-1f3fb-200d-2642-fe0f.svg": "264519",
        "./1f9d8-1f3fb.svg": "885396",
        "./1f9d8-1f3fc-200d-2640-fe0f.svg": "778378",
        "./1f9d8-1f3fc-200d-2642-fe0f.svg": "729260",
        "./1f9d8-1f3fc.svg": "303464",
        "./1f9d8-1f3fd-200d-2640-fe0f.svg": "911326",
        "./1f9d8-1f3fd-200d-2642-fe0f.svg": "273395",
        "./1f9d8-1f3fd.svg": "145345",
        "./1f9d8-1f3fe-200d-2640-fe0f.svg": "510884",
        "./1f9d8-1f3fe-200d-2642-fe0f.svg": "102093",
        "./1f9d8-1f3fe.svg": "332321",
        "./1f9d8-1f3ff-200d-2640-fe0f.svg": "414845",
        "./1f9d8-1f3ff-200d-2642-fe0f.svg": "459540",
        "./1f9d8-1f3ff.svg": "375598",
        "./1f9d8-200d-2640-fe0f.svg": "115962",
        "./1f9d8-200d-2642-fe0f.svg": "620415",
        "./1f9d8.svg": "922931",
        "./1f9d9-1f3fb-200d-2640-fe0f.svg": "349909",
        "./1f9d9-1f3fb-200d-2642-fe0f.svg": "533904",
        "./1f9d9-1f3fb.svg": "540114",
        "./1f9d9-1f3fc-200d-2640-fe0f.svg": "879798",
        "./1f9d9-1f3fc-200d-2642-fe0f.svg": "359478",
        "./1f9d9-1f3fc.svg": "362057",
        "./1f9d9-1f3fd-200d-2640-fe0f.svg": "466778",
        "./1f9d9-1f3fd-200d-2642-fe0f.svg": "29302",
        "./1f9d9-1f3fd.svg": "626557",
        "./1f9d9-1f3fe-200d-2640-fe0f.svg": "845359",
        "./1f9d9-1f3fe-200d-2642-fe0f.svg": "11268",
        "./1f9d9-1f3fe.svg": "35447",
        "./1f9d9-1f3ff-200d-2640-fe0f.svg": "943452",
        "./1f9d9-1f3ff-200d-2642-fe0f.svg": "512798",
        "./1f9d9-1f3ff.svg": "328803",
        "./1f9d9-200d-2640-fe0f.svg": "365833",
        "./1f9d9-200d-2642-fe0f.svg": "430380",
        "./1f9d9.svg": "695377",
        "./1f9da-1f3fb-200d-2640-fe0f.svg": "769725",
        "./1f9da-1f3fb-200d-2642-fe0f.svg": "322233",
        "./1f9da-1f3fb.svg": "889443",
        "./1f9da-1f3fc-200d-2640-fe0f.svg": "812538",
        "./1f9da-1f3fc-200d-2642-fe0f.svg": "240110",
        "./1f9da-1f3fc.svg": "353097",
        "./1f9da-1f3fd-200d-2640-fe0f.svg": "610374",
        "./1f9da-1f3fd-200d-2642-fe0f.svg": "271225",
        "./1f9da-1f3fd.svg": "419446",
        "./1f9da-1f3fe-200d-2640-fe0f.svg": "52298",
        "./1f9da-1f3fe-200d-2642-fe0f.svg": "373749",
        "./1f9da-1f3fe.svg": "674749",
        "./1f9da-1f3ff-200d-2640-fe0f.svg": "456143",
        "./1f9da-1f3ff-200d-2642-fe0f.svg": "702059",
        "./1f9da-1f3ff.svg": "743329",
        "./1f9da-200d-2640-fe0f.svg": "809199",
        "./1f9da-200d-2642-fe0f.svg": "675373",
        "./1f9da.svg": "906825",
        "./1f9db-1f3fb-200d-2640-fe0f.svg": "527436",
        "./1f9db-1f3fb-200d-2642-fe0f.svg": "56111",
        "./1f9db-1f3fb.svg": "86030",
        "./1f9db-1f3fc-200d-2640-fe0f.svg": "809005",
        "./1f9db-1f3fc-200d-2642-fe0f.svg": "905676",
        "./1f9db-1f3fc.svg": "315376",
        "./1f9db-1f3fd-200d-2640-fe0f.svg": "765404",
        "./1f9db-1f3fd-200d-2642-fe0f.svg": "669515",
        "./1f9db-1f3fd.svg": "525421",
        "./1f9db-1f3fe-200d-2640-fe0f.svg": "558560",
        "./1f9db-1f3fe-200d-2642-fe0f.svg": "455442",
        "./1f9db-1f3fe.svg": "632187",
        "./1f9db-1f3ff-200d-2640-fe0f.svg": "306656",
        "./1f9db-1f3ff-200d-2642-fe0f.svg": "379853",
        "./1f9db-1f3ff.svg": "707763",
        "./1f9db-200d-2640-fe0f.svg": "128523",
        "./1f9db-200d-2642-fe0f.svg": "935704",
        "./1f9db.svg": "490950",
        "./1f9dc-1f3fb-200d-2640-fe0f.svg": "931176",
        "./1f9dc-1f3fb-200d-2642-fe0f.svg": "608317",
        "./1f9dc-1f3fb.svg": "153446",
        "./1f9dc-1f3fc-200d-2640-fe0f.svg": "293872",
        "./1f9dc-1f3fc-200d-2642-fe0f.svg": "372206",
        "./1f9dc-1f3fc.svg": "802026",
        "./1f9dc-1f3fd-200d-2640-fe0f.svg": "567605",
        "./1f9dc-1f3fd-200d-2642-fe0f.svg": "646151",
        "./1f9dc-1f3fd.svg": "733088",
        "./1f9dc-1f3fe-200d-2640-fe0f.svg": "263964",
        "./1f9dc-1f3fe-200d-2642-fe0f.svg": "880002",
        "./1f9dc-1f3fe.svg": "583646",
        "./1f9dc-1f3ff-200d-2640-fe0f.svg": "788316",
        "./1f9dc-1f3ff-200d-2642-fe0f.svg": "447404",
        "./1f9dc-1f3ff.svg": "587115",
        "./1f9dc-200d-2640-fe0f.svg": "340586",
        "./1f9dc-200d-2642-fe0f.svg": "239011",
        "./1f9dc.svg": "166618",
        "./1f9dd-1f3fb-200d-2640-fe0f.svg": "254858",
        "./1f9dd-1f3fb-200d-2642-fe0f.svg": "177206",
        "./1f9dd-1f3fb.svg": "991486",
        "./1f9dd-1f3fc-200d-2640-fe0f.svg": "509643",
        "./1f9dd-1f3fc-200d-2642-fe0f.svg": "849598",
        "./1f9dd-1f3fc.svg": "52201",
        "./1f9dd-1f3fd-200d-2640-fe0f.svg": "46791",
        "./1f9dd-1f3fd-200d-2642-fe0f.svg": "722511",
        "./1f9dd-1f3fd.svg": "907965",
        "./1f9dd-1f3fe-200d-2640-fe0f.svg": "478328",
        "./1f9dd-1f3fe-200d-2642-fe0f.svg": "671145",
        "./1f9dd-1f3fe.svg": "487395",
        "./1f9dd-1f3ff-200d-2640-fe0f.svg": "212119",
        "./1f9dd-1f3ff-200d-2642-fe0f.svg": "878294",
        "./1f9dd-1f3ff.svg": "25282",
        "./1f9dd-200d-2640-fe0f.svg": "90154",
        "./1f9dd-200d-2642-fe0f.svg": "173360",
        "./1f9dd.svg": "177238",
        "./1f9de-200d-2640-fe0f.svg": "759229",
        "./1f9de-200d-2642-fe0f.svg": "599374",
        "./1f9de.svg": "184313",
        "./1f9df-200d-2640-fe0f.svg": "207695",
        "./1f9df-200d-2642-fe0f.svg": "184733",
        "./1f9df.svg": "829736",
        "./1f9e0.svg": "668066",
        "./1f9e1.svg": "294408",
        "./1f9e2.svg": "985317",
        "./1f9e3.svg": "969374",
        "./1f9e4.svg": "472317",
        "./1f9e5.svg": "294418",
        "./1f9e6.svg": "579244",
        "./1f9e7.svg": "290754",
        "./1f9e8.svg": "258291",
        "./1f9e9.svg": "304847",
        "./1f9ea.svg": "339874",
        "./1f9eb.svg": "456945",
        "./1f9ec.svg": "76058",
        "./1f9ed.svg": "17306",
        "./1f9ee.svg": "621782",
        "./1f9ef.svg": "272871",
        "./1f9f0.svg": "469638",
        "./1f9f1.svg": "949111",
        "./1f9f2.svg": "600617",
        "./1f9f3.svg": "9005",
        "./1f9f4.svg": "190494",
        "./1f9f5.svg": "906851",
        "./1f9f6.svg": "577165",
        "./1f9f7.svg": "519456",
        "./1f9f8.svg": "960379",
        "./1f9f9.svg": "94959",
        "./1f9fa.svg": "810273",
        "./1f9fb.svg": "649815",
        "./1f9fc.svg": "146758",
        "./1f9fd.svg": "394351",
        "./1f9fe.svg": "518189",
        "./1f9ff.svg": "306684",
        "./1fa70.svg": "273198",
        "./1fa71.svg": "173172",
        "./1fa72.svg": "530715",
        "./1fa73.svg": "420572",
        "./1fa74.svg": "697869",
        "./1fa75.svg": "520026",
        "./1fa76.svg": "541547",
        "./1fa77.svg": "690219",
        "./1fa78.svg": "895838",
        "./1fa79.svg": "499969",
        "./1fa7a.svg": "41843",
        "./1fa7b.svg": "956769",
        "./1fa7c.svg": "734823",
        "./1fa80.svg": "107669",
        "./1fa81.svg": "355996",
        "./1fa82.svg": "736803",
        "./1fa83.svg": "658540",
        "./1fa84.svg": "500521",
        "./1fa85.svg": "443292",
        "./1fa86.svg": "793231",
        "./1fa87.svg": "392664",
        "./1fa88.svg": "794762",
        "./1fa90.svg": "72459",
        "./1fa91.svg": "28925",
        "./1fa92.svg": "83632",
        "./1fa93.svg": "507224",
        "./1fa94.svg": "926524",
        "./1fa95.svg": "96066",
        "./1fa96.svg": "499470",
        "./1fa97.svg": "441981",
        "./1fa98.svg": "241811",
        "./1fa99.svg": "522222",
        "./1fa9a.svg": "217270",
        "./1fa9b.svg": "250166",
        "./1fa9c.svg": "752720",
        "./1fa9d.svg": "136481",
        "./1fa9e.svg": "87845",
        "./1fa9f.svg": "352409",
        "./1faa0.svg": "139946",
        "./1faa1.svg": "572601",
        "./1faa2.svg": "219449",
        "./1faa3.svg": "668310",
        "./1faa4.svg": "201245",
        "./1faa5.svg": "279996",
        "./1faa6.svg": "613756",
        "./1faa7.svg": "290290",
        "./1faa8.svg": "943577",
        "./1faa9.svg": "24784",
        "./1faaa.svg": "357211",
        "./1faab.svg": "905106",
        "./1faac.svg": "446427",
        "./1faad.svg": "171399",
        "./1faae.svg": "783093",
        "./1faaf.svg": "305369",
        "./1fab0.svg": "774957",
        "./1fab1.svg": "865843",
        "./1fab2.svg": "811523",
        "./1fab3.svg": "111898",
        "./1fab4.svg": "264493",
        "./1fab5.svg": "361185",
        "./1fab6.svg": "744447",
        "./1fab7.svg": "456380",
        "./1fab8.svg": "318077",
        "./1fab9.svg": "355090",
        "./1faba.svg": "462018",
        "./1fabb.svg": "104281",
        "./1fabc.svg": "998349",
        "./1fabd.svg": "383902",
        "./1fabf.svg": "307645",
        "./1fac0.svg": "259951",
        "./1fac1.svg": "901617",
        "./1fac2.svg": "149036",
        "./1fac3-1f3fb.svg": "954583",
        "./1fac3-1f3fc.svg": "701034",
        "./1fac3-1f3fd.svg": "524521",
        "./1fac3-1f3fe.svg": "899543",
        "./1fac3-1f3ff.svg": "182878",
        "./1fac3.svg": "711345",
        "./1fac4-1f3fb.svg": "516695",
        "./1fac4-1f3fc.svg": "691879",
        "./1fac4-1f3fd.svg": "699656",
        "./1fac4-1f3fe.svg": "757686",
        "./1fac4-1f3ff.svg": "543029",
        "./1fac4.svg": "49698",
        "./1fac5-1f3fb.svg": "577317",
        "./1fac5-1f3fc.svg": "179332",
        "./1fac5-1f3fd.svg": "46491",
        "./1fac5-1f3fe.svg": "720907",
        "./1fac5-1f3ff.svg": "903495",
        "./1fac5.svg": "992788",
        "./1face.svg": "897656",
        "./1facf.svg": "506522",
        "./1fad0.svg": "679355",
        "./1fad1.svg": "359975",
        "./1fad2.svg": "297728",
        "./1fad3.svg": "232104",
        "./1fad4.svg": "702498",
        "./1fad5.svg": "468978",
        "./1fad6.svg": "982259",
        "./1fad7.svg": "379794",
        "./1fad8.svg": "308401",
        "./1fad9.svg": "125584",
        "./1fada.svg": "122519",
        "./1fadb.svg": "411766",
        "./1fae0.svg": "207832",
        "./1fae1.svg": "33514",
        "./1fae2.svg": "53736",
        "./1fae3.svg": "8152",
        "./1fae4.svg": "746005",
        "./1fae5.svg": "515873",
        "./1fae6.svg": "403708",
        "./1fae7.svg": "785773",
        "./1fae8.svg": "72688",
        "./1faf0-1f3fb.svg": "664701",
        "./1faf0-1f3fc.svg": "59924",
        "./1faf0-1f3fd.svg": "627824",
        "./1faf0-1f3fe.svg": "216258",
        "./1faf0-1f3ff.svg": "954419",
        "./1faf0.svg": "490096",
        "./1faf1-1f3fb-200d-1faf2-1f3fc.svg": "718680",
        "./1faf1-1f3fb-200d-1faf2-1f3fd.svg": "842770",
        "./1faf1-1f3fb-200d-1faf2-1f3fe.svg": "118021",
        "./1faf1-1f3fb-200d-1faf2-1f3ff.svg": "947841",
        "./1faf1-1f3fb.svg": "663527",
        "./1faf1-1f3fc-200d-1faf2-1f3fb.svg": "512558",
        "./1faf1-1f3fc-200d-1faf2-1f3fd.svg": "719567",
        "./1faf1-1f3fc-200d-1faf2-1f3fe.svg": "391958",
        "./1faf1-1f3fc-200d-1faf2-1f3ff.svg": "724821",
        "./1faf1-1f3fc.svg": "775535",
        "./1faf1-1f3fd-200d-1faf2-1f3fb.svg": "767433",
        "./1faf1-1f3fd-200d-1faf2-1f3fc.svg": "767828",
        "./1faf1-1f3fd-200d-1faf2-1f3fe.svg": "83277",
        "./1faf1-1f3fd-200d-1faf2-1f3ff.svg": "348780",
        "./1faf1-1f3fd.svg": "597199",
        "./1faf1-1f3fe-200d-1faf2-1f3fb.svg": "161933",
        "./1faf1-1f3fe-200d-1faf2-1f3fc.svg": "760736",
        "./1faf1-1f3fe-200d-1faf2-1f3fd.svg": "811926",
        "./1faf1-1f3fe-200d-1faf2-1f3ff.svg": "1055",
        "./1faf1-1f3fe.svg": "707251",
        "./1faf1-1f3ff-200d-1faf2-1f3fb.svg": "151733",
        "./1faf1-1f3ff-200d-1faf2-1f3fc.svg": "642127",
        "./1faf1-1f3ff-200d-1faf2-1f3fd.svg": "251719",
        "./1faf1-1f3ff-200d-1faf2-1f3fe.svg": "418342",
        "./1faf1-1f3ff.svg": "802929",
        "./1faf1.svg": "82498",
        "./1faf2-1f3fb.svg": "512983",
        "./1faf2-1f3fc.svg": "234611",
        "./1faf2-1f3fd.svg": "42415",
        "./1faf2-1f3fe.svg": "237972",
        "./1faf2-1f3ff.svg": "399799",
        "./1faf2.svg": "177774",
        "./1faf3-1f3fb.svg": "245229",
        "./1faf3-1f3fc.svg": "499915",
        "./1faf3-1f3fd.svg": "410340",
        "./1faf3-1f3fe.svg": "901495",
        "./1faf3-1f3ff.svg": "557918",
        "./1faf3.svg": "429398",
        "./1faf4-1f3fb.svg": "212860",
        "./1faf4-1f3fc.svg": "83193",
        "./1faf4-1f3fd.svg": "598963",
        "./1faf4-1f3fe.svg": "496217",
        "./1faf4-1f3ff.svg": "820213",
        "./1faf4.svg": "954872",
        "./1faf5-1f3fb.svg": "628103",
        "./1faf5-1f3fc.svg": "206912",
        "./1faf5-1f3fd.svg": "86554",
        "./1faf5-1f3fe.svg": "57834",
        "./1faf5-1f3ff.svg": "652063",
        "./1faf5.svg": "709783",
        "./1faf6-1f3fb.svg": "182578",
        "./1faf6-1f3fc.svg": "938692",
        "./1faf6-1f3fd.svg": "352371",
        "./1faf6-1f3fe.svg": "125308",
        "./1faf6-1f3ff.svg": "911200",
        "./1faf6.svg": "552177",
        "./1faf7-1f3fb.svg": "742665",
        "./1faf7-1f3fc.svg": "858371",
        "./1faf7-1f3fd.svg": "228440",
        "./1faf7-1f3fe.svg": "616269",
        "./1faf7-1f3ff.svg": "83374",
        "./1faf7.svg": "312772",
        "./1faf8-1f3fb.svg": "12803",
        "./1faf8-1f3fc.svg": "389490",
        "./1faf8-1f3fd.svg": "411540",
        "./1faf8-1f3fe.svg": "731841",
        "./1faf8-1f3ff.svg": "320132",
        "./1faf8.svg": "905301",
        "./203c.svg": "631937",
        "./2049.svg": "926156",
        "./2122.svg": "304295",
        "./2139.svg": "865247",
        "./2194.svg": "187677",
        "./2195.svg": "646206",
        "./2196.svg": "216261",
        "./2197.svg": "866084",
        "./2198.svg": "10063",
        "./2199.svg": "877438",
        "./21a9.svg": "148065",
        "./21aa.svg": "113893",
        "./23-20e3.svg": "48999",
        "./231a.svg": "942565",
        "./231b.svg": "257475",
        "./2328.svg": "572046",
        "./23cf.svg": "282961",
        "./23e9.svg": "156678",
        "./23ea.svg": "460821",
        "./23eb.svg": "728590",
        "./23ec.svg": "847238",
        "./23ed.svg": "512871",
        "./23ee.svg": "315325",
        "./23ef.svg": "872406",
        "./23f0.svg": "420153",
        "./23f1.svg": "905413",
        "./23f2.svg": "818667",
        "./23f3.svg": "559111",
        "./23f8.svg": "714611",
        "./23f9.svg": "475994",
        "./23fa.svg": "483705",
        "./24c2.svg": "711926",
        "./25aa.svg": "206956",
        "./25ab.svg": "897709",
        "./25b6.svg": "450478",
        "./25c0.svg": "390185",
        "./25fb.svg": "230750",
        "./25fc.svg": "994828",
        "./25fd.svg": "892486",
        "./25fe.svg": "268009",
        "./2600.svg": "983574",
        "./2601.svg": "35004",
        "./2602.svg": "710894",
        "./2603.svg": "921117",
        "./2604.svg": "197916",
        "./260e.svg": "523015",
        "./2611.svg": "181452",
        "./2614.svg": "121834",
        "./2615.svg": "974611",
        "./2618.svg": "242221",
        "./261d-1f3fb.svg": "776220",
        "./261d-1f3fc.svg": "836030",
        "./261d-1f3fd.svg": "549160",
        "./261d-1f3fe.svg": "630245",
        "./261d-1f3ff.svg": "976998",
        "./261d.svg": "320043",
        "./2620.svg": "716528",
        "./2622.svg": "611777",
        "./2623.svg": "238575",
        "./2626.svg": "689916",
        "./262a.svg": "325981",
        "./262e.svg": "236161",
        "./262f.svg": "103612",
        "./2638.svg": "74059",
        "./2639.svg": "668556",
        "./263a.svg": "318439",
        "./2640.svg": "666303",
        "./2642.svg": "467490",
        "./2648.svg": "543325",
        "./2649.svg": "809405",
        "./264a.svg": "209424",
        "./264b.svg": "938086",
        "./264c.svg": "569875",
        "./264d.svg": "130881",
        "./264e.svg": "61764",
        "./264f.svg": "48473",
        "./2650.svg": "564847",
        "./2651.svg": "735379",
        "./2652.svg": "223051",
        "./2653.svg": "253006",
        "./265f.svg": "288224",
        "./2660.svg": "240385",
        "./2663.svg": "763285",
        "./2665.svg": "596862",
        "./2666.svg": "490873",
        "./2668.svg": "995214",
        "./267b.svg": "319296",
        "./267e.svg": "137329",
        "./267f.svg": "953579",
        "./2692.svg": "819486",
        "./2693.svg": "113488",
        "./2694.svg": "849159",
        "./2695.svg": "707535",
        "./2696.svg": "784676",
        "./2697.svg": "99919",
        "./2699.svg": "436547",
        "./269b.svg": "122633",
        "./269c.svg": "18192",
        "./26a0.svg": "67493",
        "./26a1.svg": "972115",
        "./26a7.svg": "208385",
        "./26aa.svg": "28370",
        "./26ab.svg": "289387",
        "./26b0.svg": "794409",
        "./26b1.svg": "756533",
        "./26bd.svg": "618218",
        "./26be.svg": "253568",
        "./26c4.svg": "47219",
        "./26c5.svg": "361105",
        "./26c8.svg": "6687",
        "./26ce.svg": "960928",
        "./26cf.svg": "843434",
        "./26d1.svg": "693324",
        "./26d3.svg": "591084",
        "./26d4.svg": "672553",
        "./26e9.svg": "733512",
        "./26ea.svg": "271547",
        "./26f0.svg": "48576",
        "./26f1.svg": "840667",
        "./26f2.svg": "10217",
        "./26f3.svg": "461631",
        "./26f4.svg": "879689",
        "./26f5.svg": "218685",
        "./26f7-1f3fb.svg": "782467",
        "./26f7-1f3fc.svg": "889181",
        "./26f7-1f3fd.svg": "959863",
        "./26f7-1f3fe.svg": "787284",
        "./26f7-1f3ff.svg": "854539",
        "./26f7.svg": "750390",
        "./26f8.svg": "122041",
        "./26f9-1f3fb-200d-2640-fe0f.svg": "499996",
        "./26f9-1f3fb-200d-2642-fe0f.svg": "147404",
        "./26f9-1f3fb.svg": "494152",
        "./26f9-1f3fc-200d-2640-fe0f.svg": "859245",
        "./26f9-1f3fc-200d-2642-fe0f.svg": "310164",
        "./26f9-1f3fc.svg": "370780",
        "./26f9-1f3fd-200d-2640-fe0f.svg": "816345",
        "./26f9-1f3fd-200d-2642-fe0f.svg": "484182",
        "./26f9-1f3fd.svg": "884478",
        "./26f9-1f3fe-200d-2640-fe0f.svg": "320876",
        "./26f9-1f3fe-200d-2642-fe0f.svg": "303620",
        "./26f9-1f3fe.svg": "598982",
        "./26f9-1f3ff-200d-2640-fe0f.svg": "425061",
        "./26f9-1f3ff-200d-2642-fe0f.svg": "804121",
        "./26f9-1f3ff.svg": "293805",
        "./26f9-fe0f-200d-2640-fe0f.svg": "367568",
        "./26f9-fe0f-200d-2642-fe0f.svg": "637916",
        "./26f9.svg": "280742",
        "./26fa.svg": "312275",
        "./26fd.svg": "212937",
        "./2702.svg": "91530",
        "./2705.svg": "708221",
        "./2708.svg": "197216",
        "./2709.svg": "507559",
        "./270a-1f3fb.svg": "84082",
        "./270a-1f3fc.svg": "756567",
        "./270a-1f3fd.svg": "281586",
        "./270a-1f3fe.svg": "543548",
        "./270a-1f3ff.svg": "618345",
        "./270a.svg": "88679",
        "./270b-1f3fb.svg": "145912",
        "./270b-1f3fc.svg": "379248",
        "./270b-1f3fd.svg": "3794",
        "./270b-1f3fe.svg": "31471",
        "./270b-1f3ff.svg": "342817",
        "./270b.svg": "709508",
        "./270c-1f3fb.svg": "423756",
        "./270c-1f3fc.svg": "825185",
        "./270c-1f3fd.svg": "865046",
        "./270c-1f3fe.svg": "490131",
        "./270c-1f3ff.svg": "145659",
        "./270c.svg": "767886",
        "./270d-1f3fb.svg": "708134",
        "./270d-1f3fc.svg": "346640",
        "./270d-1f3fd.svg": "771000",
        "./270d-1f3fe.svg": "501261",
        "./270d-1f3ff.svg": "884284",
        "./270d.svg": "81983",
        "./270f.svg": "50469",
        "./2712.svg": "248047",
        "./2714.svg": "658443",
        "./2716.svg": "759224",
        "./271d.svg": "684537",
        "./2721.svg": "34208",
        "./2728.svg": "113732",
        "./2733.svg": "137685",
        "./2734.svg": "130218",
        "./2744.svg": "608567",
        "./2747.svg": "5508",
        "./274c.svg": "185009",
        "./274e.svg": "854525",
        "./2753.svg": "920385",
        "./2754.svg": "271213",
        "./2755.svg": "894926",
        "./2757.svg": "531145",
        "./2763.svg": "132729",
        "./2764-fe0f-200d-1f525.svg": "961109",
        "./2764-fe0f-200d-1fa79.svg": "836981",
        "./2764.svg": "259567",
        "./2795.svg": "912660",
        "./2796.svg": "888527",
        "./2797.svg": "323454",
        "./27a1.svg": "805359",
        "./27b0.svg": "766426",
        "./27bf.svg": "617430",
        "./2934.svg": "530397",
        "./2935.svg": "275567",
        "./2a-20e3.svg": "187630",
        "./2b05.svg": "680782",
        "./2b06.svg": "735499",
        "./2b07.svg": "70579",
        "./2b1b.svg": "965443",
        "./2b1c.svg": "34102",
        "./2b50.svg": "16717",
        "./2b55.svg": "293229",
        "./30-20e3.svg": "552069",
        "./3030.svg": "773696",
        "./303d.svg": "414951",
        "./31-20e3.svg": "758273",
        "./32-20e3.svg": "851719",
        "./3297.svg": "894570",
        "./3299.svg": "774884",
        "./33-20e3.svg": "714505",
        "./34-20e3.svg": "455198",
        "./35-20e3.svg": "584084",
        "./36-20e3.svg": "434206",
        "./37-20e3.svg": "628889",
        "./38-20e3.svg": "999500",
        "./39-20e3.svg": "556245",
        "./a9.svg": "551564",
        "./ae.svg": "805979",
        "./e50a.svg": "395968",
      };
      function i(e) {
        return n(r(e));
      }
      function r(e) {
        if (!n.o(s, e)) {
          var t = Error("Cannot find module '" + e + "'");
          throw ((t.code = "MODULE_NOT_FOUND"), t);
        }
        return s[e];
      }
      (i.id = '"331246"'),
        (i.keys = function () {
          return Object.keys(s);
        }),
        (i.resolve = r),
        (e.exports = i);
    },
    273215: function (e, t, n) {
      "use strict";
      e.exports = n.p + "63900a1ba1f23d305c53.png";
    },
    719933: function (e, t, n) {
      "use strict";
      e.exports = n.p + "2d8d31d0ce7c0e673266.png";
    },
    90026: function (e, t, n) {
      "use strict";
      e.exports = n.p + "a5bb35518e19a27b57be.png";
    },
    824839: function (e, t, n) {
      "use strict";
      e.exports = n.p + "16b667dc5539a47aa346.svg";
    },
    935119: function (e, t, n) {
      "use strict";
      e.exports = n.p + "b0efcdc15f8bd689c89f.svg";
    },
    1890: function (e, t, n) {
      "use strict";
      e.exports = n.p + "6d387ec5eedee450a1c6.svg";
    },
    27562: function (e, t, n) {
      "use strict";
      e.exports = n.p + "6adc630fe0534895ff0f.mp4";
    },
    851703: function (e, t, n) {
      "use strict";
      e.exports = n.p + "f3c9e56752e6e7dae615.mp4";
    },
    902577: function (e, t, n) {
      "use strict";
      e.exports = n.p + "61220d00e627e7f4a440.png";
    },
    351288: function (e, t, n) {
      "use strict";
      e.exports = n.p + "c3f841e9edf0f8c90ca2.mp4";
    },
    595726: function (e, t, n) {
      "use strict";
      e.exports = n.p + "c694675351be2cd8923b.png";
    },
    462641: function (e, t, n) {
      "use strict";
      e.exports = n.p + "0a10740d903f2a7e3f1e.png";
    },
    95937: function (e, t, n) {
      "use strict";
      e.exports = n.p + "4c6d753b661bdac6ed49.png";
    },
    929461: function (e, t, n) {
      "use strict";
      e.exports = n.p + "a1aa5e5cf3f255bb84cd.mp4";
    },
    898085: function (e, t, n) {},
    495873: function (e, t, n) {},
    778583: function (e, t, n) {},
    527870: function (e, t, n) {},
    482803: function (e, t, n) {},
    503745: function (e, t, n) {},
    620501: function (e, t, n) {
      "use strict";
      e.exports = {
        ">:(": "angry",
        ">:-(": "angry",
        ">=(": "angry",
        ">=-(": "angry",
        ':")': "blush",
        ':-")': "blush",
        '=")': "blush",
        '=-")': "blush",
        "</3": "broken_heart",
        "<\\3": "broken_heart",
        ":-\\": "confused",
        ":-/": "confused",
        "=-\\": "confused",
        "=-/": "confused",
        ":'(": "cry",
        ":'-(": "cry",
        ":,(": "cry",
        ":,-(": "cry",
        "='(": "cry",
        "='-(": "cry",
        "=,(": "cry",
        "=,-(": "cry",
        ":(": "frowning",
        ":-(": "frowning",
        "=(": "frowning",
        "=-(": "frowning",
        "<3": "heart",
        "♡": "heart",
        "]:(": "imp",
        "]:-(": "imp",
        "]=(": "imp",
        "]=-(": "imp",
        "o:)": "innocent",
        "O:)": "innocent",
        "o:-)": "innocent",
        "O:-)": "innocent",
        "0:)": "innocent",
        "0:-)": "innocent",
        "o=)": "innocent",
        "O=)": "innocent",
        "o=-)": "innocent",
        "O=-)": "innocent",
        "0=)": "innocent",
        "0=-)": "innocent",
        ":'D": "joy",
        ":'-D": "joy",
        ":,D": "joy",
        ":,-D": "joy",
        "='D": "joy",
        "='-D": "joy",
        "=,D": "joy",
        "=,-D": "joy",
        ":*": "kissing",
        ":-*": "kissing",
        "=*": "kissing",
        "=-*": "kissing",
        "x-)": "laughing",
        "X-)": "laughing",
        ":|": "neutral_face",
        ":-|": "neutral_face",
        "=|": "neutral_face",
        "=-|": "neutral_face",
        ":o": "open_mouth",
        ":-o": "open_mouth",
        ":O": "open_mouth",
        ":-O": "open_mouth",
        "=o": "open_mouth",
        "=-o": "open_mouth",
        "=O": "open_mouth",
        "=-O": "open_mouth",
        ":@": "rage",
        ":-@": "rage",
        "=@": "rage",
        "=-@": "rage",
        ":D": "smile",
        ":-D": "smile",
        "=D": "smile",
        "=-D": "smile",
        ":')": "smiling_face_with_tear",
        ":'-)": "smiling_face_with_tear",
        ":,)": "smiling_face_with_tear",
        ":,-)": "smiling_face_with_tear",
        "=')": "smiling_face_with_tear",
        "='-)": "smiling_face_with_tear",
        "=,)": "smiling_face_with_tear",
        "=,-)": "smiling_face_with_tear",
        ":)": "slight_smile",
        ":-)": "slight_smile",
        "=)": "slight_smile",
        "=-)": "slight_smile",
        "]:)": "smiling_imp",
        "]:-)": "smiling_imp",
        "]=)": "smiling_imp",
        "]=-)": "smiling_imp",
        ":,'(": "sob",
        ":,'-(": "sob",
        ";(": "sob",
        ";-(": "sob",
        "=,'(": "sob",
        "=,'-(": "sob",
        ":P": "stuck_out_tongue",
        ":-P": "stuck_out_tongue",
        "=P": "stuck_out_tongue",
        "=-P": "stuck_out_tongue",
        "8-)": "sunglasses",
        "B-)": "sunglasses",
        ",:(": "sweat",
        ",:-(": "sweat",
        ",=(": "sweat",
        ",=-(": "sweat",
        ",:)": "sweat_smile",
        ",:-)": "sweat_smile",
        ",=)": "sweat_smile",
        ",=-)": "sweat_smile",
        ":s": "unamused",
        ":-S": "unamused",
        ":z": "unamused",
        ":-Z": "unamused",
        ":$": "unamused",
        ":-$": "unamused",
        "=s": "unamused",
        "=-S": "unamused",
        "=z": "unamused",
        "=-Z": "unamused",
        "=$": "unamused",
        "=-$": "unamused",
        ";)": "wink",
        ";-)": "wink",
      };
    },
    838426: function (e, t, n) {
      "use strict";
      e.exports = {
        people: [
          {
            names: ["grinning", "grinning_face"],
            surrogates: "\uD83D\uDE00",
            unicodeVersion: 6.1,
          },
          { names: ["smiley"], surrogates: "\uD83D\uDE03", unicodeVersion: 6 },
          { names: ["smile"], surrogates: "\uD83D\uDE04", unicodeVersion: 6 },
          { names: ["grin"], surrogates: "\uD83D\uDE01", unicodeVersion: 6 },
          {
            names: ["laughing", "satisfied"],
            surrogates: "\uD83D\uDE06",
            unicodeVersion: 6,
          },
          {
            names: ["face_holding_back_tears"],
            surrogates: "\uD83E\uDD79",
            unicodeVersion: 14,
          },
          {
            names: ["sweat_smile"],
            surrogates: "\uD83D\uDE05",
            unicodeVersion: 6,
          },
          { names: ["joy"], surrogates: "\uD83D\uDE02", unicodeVersion: 6 },
          {
            names: ["rofl", "rolling_on_the_floor_laughing"],
            surrogates: "\uD83E\uDD23",
            unicodeVersion: 9,
          },
          {
            names: ["smiling_face_with_tear"],
            surrogates: "\uD83E\uDD72",
            unicodeVersion: 13,
          },
          {
            names: ["relaxed", "smiling_face"],
            surrogates: "☺️",
            unicodeVersion: 1.1,
          },
          { names: ["blush"], surrogates: "\uD83D\uDE0A", unicodeVersion: 6 },
          {
            names: ["innocent"],
            surrogates: "\uD83D\uDE07",
            unicodeVersion: 6,
          },
          {
            names: ["slight_smile", "slightly_smiling_face"],
            surrogates: "\uD83D\uDE42",
            unicodeVersion: 7,
          },
          {
            names: ["upside_down", "upside_down_face"],
            surrogates: "\uD83D\uDE43",
            unicodeVersion: 8,
          },
          {
            names: ["wink", "winking_face"],
            surrogates: "\uD83D\uDE09",
            unicodeVersion: 6,
          },
          {
            names: ["relieved", "relieved_face"],
            surrogates: "\uD83D\uDE0C",
            unicodeVersion: 6,
          },
          {
            names: ["heart_eyes"],
            surrogates: "\uD83D\uDE0D",
            unicodeVersion: 6,
          },
          {
            names: ["smiling_face_with_3_hearts"],
            surrogates: "\uD83E\uDD70",
            unicodeVersion: 11,
          },
          {
            names: ["kissing_heart"],
            surrogates: "\uD83D\uDE18",
            unicodeVersion: 6,
          },
          {
            names: ["kissing", "kissing_face"],
            surrogates: "\uD83D\uDE17",
            unicodeVersion: 6.1,
          },
          {
            names: ["kissing_smiling_eyes"],
            surrogates: "\uD83D\uDE19",
            unicodeVersion: 6.1,
          },
          {
            names: ["kissing_closed_eyes"],
            surrogates: "\uD83D\uDE1A",
            unicodeVersion: 6,
          },
          { names: ["yum"], surrogates: "\uD83D\uDE0B", unicodeVersion: 6 },
          {
            names: ["stuck_out_tongue"],
            surrogates: "\uD83D\uDE1B",
            unicodeVersion: 6.1,
          },
          {
            names: ["stuck_out_tongue_closed_eyes"],
            surrogates: "\uD83D\uDE1D",
            unicodeVersion: 6,
          },
          {
            names: ["stuck_out_tongue_winking_eye"],
            surrogates: "\uD83D\uDE1C",
            unicodeVersion: 6,
          },
          {
            names: ["zany_face"],
            surrogates: "\uD83E\uDD2A",
            unicodeVersion: 10,
          },
          {
            names: ["face_with_raised_eyebrow"],
            surrogates: "\uD83E\uDD28",
            unicodeVersion: 10,
          },
          {
            names: ["face_with_monocle"],
            surrogates: "\uD83E\uDDD0",
            unicodeVersion: 10,
          },
          {
            names: ["nerd", "nerd_face"],
            surrogates: "\uD83E\uDD13",
            unicodeVersion: 8,
          },
          {
            names: ["sunglasses"],
            surrogates: "\uD83D\uDE0E",
            unicodeVersion: 6,
          },
          {
            names: ["disguised_face"],
            surrogates: "\uD83E\uDD78",
            unicodeVersion: 13,
          },
          {
            names: ["star_struck"],
            surrogates: "\uD83E\uDD29",
            unicodeVersion: 10,
          },
          {
            names: ["partying_face"],
            surrogates: "\uD83E\uDD73",
            unicodeVersion: 11,
          },
          {
            names: ["smirk", "smirking_face"],
            surrogates: "\uD83D\uDE0F",
            unicodeVersion: 6,
          },
          {
            names: ["unamused", "unamused_face"],
            surrogates: "\uD83D\uDE12",
            unicodeVersion: 6,
          },
          {
            names: ["disappointed"],
            surrogates: "\uD83D\uDE1E",
            unicodeVersion: 6,
          },
          {
            names: ["pensive", "pensive_face"],
            surrogates: "\uD83D\uDE14",
            unicodeVersion: 6,
          },
          {
            names: ["worried", "worried_face"],
            surrogates: "\uD83D\uDE1F",
            unicodeVersion: 6.1,
          },
          {
            names: ["confused", "confused_face"],
            surrogates: "\uD83D\uDE15",
            unicodeVersion: 6.1,
          },
          {
            names: ["slight_frown", "slightly_frowning_face"],
            surrogates: "\uD83D\uDE41",
            unicodeVersion: 7,
          },
          {
            names: ["frowning2", "white_frowning_face", "frowning_face"],
            surrogates: "☹️",
            unicodeVersion: 1.1,
          },
          {
            names: ["persevere"],
            surrogates: "\uD83D\uDE23",
            unicodeVersion: 6,
          },
          {
            names: ["confounded"],
            surrogates: "\uD83D\uDE16",
            unicodeVersion: 6,
          },
          {
            names: ["tired_face"],
            surrogates: "\uD83D\uDE2B",
            unicodeVersion: 6,
          },
          {
            names: ["weary", "weary_face"],
            surrogates: "\uD83D\uDE29",
            unicodeVersion: 6,
          },
          {
            names: ["pleading_face"],
            surrogates: "\uD83E\uDD7A",
            unicodeVersion: 11,
          },
          {
            names: ["cry", "crying_face"],
            surrogates: "\uD83D\uDE22",
            unicodeVersion: 6,
          },
          { names: ["sob"], surrogates: "\uD83D\uDE2D", unicodeVersion: 6 },
          { names: ["triumph"], surrogates: "\uD83D\uDE24", unicodeVersion: 6 },
          {
            names: ["angry", "angry_face"],
            surrogates: "\uD83D\uDE20",
            unicodeVersion: 6,
          },
          {
            names: ["rage", "pouting_face"],
            surrogates: "\uD83D\uDE21",
            unicodeVersion: 6,
          },
          {
            names: ["face_with_symbols_over_mouth"],
            surrogates: "\uD83E\uDD2C",
            unicodeVersion: 10,
          },
          {
            names: ["exploding_head"],
            surrogates: "\uD83E\uDD2F",
            unicodeVersion: 10,
          },
          {
            names: ["flushed", "flushed_face"],
            surrogates: "\uD83D\uDE33",
            unicodeVersion: 6,
          },
          {
            names: ["hot_face"],
            surrogates: "\uD83E\uDD75",
            unicodeVersion: 11,
          },
          {
            names: ["cold_face"],
            surrogates: "\uD83E\uDD76",
            unicodeVersion: 11,
          },
          {
            names: ["face_in_clouds"],
            surrogates: "\uD83D\uDE36‍\uD83C\uDF2B️",
            unicodeVersion: 13.1,
          },
          { names: ["scream"], surrogates: "\uD83D\uDE31", unicodeVersion: 6 },
          {
            names: ["fearful", "fearful_face"],
            surrogates: "\uD83D\uDE28",
            unicodeVersion: 6,
          },
          {
            names: ["cold_sweat"],
            surrogates: "\uD83D\uDE30",
            unicodeVersion: 6,
          },
          {
            names: ["disappointed_relieved"],
            surrogates: "\uD83D\uDE25",
            unicodeVersion: 6,
          },
          { names: ["sweat"], surrogates: "\uD83D\uDE13", unicodeVersion: 6 },
          {
            names: ["hugging", "hugging_face"],
            surrogates: "\uD83E\uDD17",
            unicodeVersion: 8,
          },
          {
            names: ["thinking", "thinking_face"],
            surrogates: "\uD83E\uDD14",
            unicodeVersion: 8,
          },
          {
            names: ["face_with_peeking_eye"],
            surrogates: "\uD83E\uDEE3",
            unicodeVersion: 14,
          },
          {
            names: ["face_with_hand_over_mouth"],
            surrogates: "\uD83E\uDD2D",
            unicodeVersion: 10,
          },
          {
            names: ["face_with_open_eyes_and_hand_over_mouth"],
            surrogates: "\uD83E\uDEE2",
            unicodeVersion: 14,
          },
          {
            names: ["saluting_face"],
            surrogates: "\uD83E\uDEE1",
            unicodeVersion: 14,
          },
          {
            names: ["shushing_face"],
            surrogates: "\uD83E\uDD2B",
            unicodeVersion: 10,
          },
          {
            names: ["melting_face"],
            surrogates: "\uD83E\uDEE0",
            unicodeVersion: 14,
          },
          {
            names: ["lying_face", "liar"],
            surrogates: "\uD83E\uDD25",
            unicodeVersion: 9,
          },
          {
            names: ["no_mouth"],
            surrogates: "\uD83D\uDE36",
            unicodeVersion: 6,
          },
          {
            names: ["dotted_line_face"],
            surrogates: "\uD83E\uDEE5",
            unicodeVersion: 14,
          },
          {
            names: ["neutral_face"],
            surrogates: "\uD83D\uDE10",
            unicodeVersion: 6,
          },
          {
            names: ["face_with_diagonal_mouth"],
            surrogates: "\uD83E\uDEE4",
            unicodeVersion: 14,
          },
          {
            names: ["expressionless"],
            surrogates: "\uD83D\uDE11",
            unicodeVersion: 6.1,
          },
          {
            names: ["shaking_face"],
            surrogates: "\uD83E\uDEE8",
            unicodeVersion: 15,
          },
          {
            names: ["grimacing"],
            surrogates: "\uD83D\uDE2C",
            unicodeVersion: 6.1,
          },
          {
            names: ["rolling_eyes", "face_with_rolling_eyes"],
            surrogates: "\uD83D\uDE44",
            unicodeVersion: 8,
          },
          {
            names: ["hushed", "hushed_face"],
            surrogates: "\uD83D\uDE2F",
            unicodeVersion: 6.1,
          },
          {
            names: ["frowning"],
            surrogates: "\uD83D\uDE26",
            unicodeVersion: 6.1,
          },
          {
            names: ["anguished"],
            surrogates: "\uD83D\uDE27",
            unicodeVersion: 6.1,
          },
          {
            names: ["open_mouth"],
            surrogates: "\uD83D\uDE2E",
            unicodeVersion: 6.1,
          },
          {
            names: ["astonished"],
            surrogates: "\uD83D\uDE32",
            unicodeVersion: 6,
          },
          {
            names: ["yawning_face"],
            surrogates: "\uD83E\uDD71",
            unicodeVersion: 12,
          },
          {
            names: ["sleeping", "sleeping_face"],
            surrogates: "\uD83D\uDE34",
            unicodeVersion: 6.1,
          },
          {
            names: ["drooling_face", "drool"],
            surrogates: "\uD83E\uDD24",
            unicodeVersion: 9,
          },
          {
            names: ["sleepy", "sleepy_face"],
            surrogates: "\uD83D\uDE2A",
            unicodeVersion: 6,
          },
          {
            names: ["face_exhaling"],
            surrogates: "\uD83D\uDE2E‍\uD83D\uDCA8",
            unicodeVersion: 13.1,
          },
          {
            names: ["dizzy_face"],
            surrogates: "\uD83D\uDE35",
            unicodeVersion: 6,
          },
          {
            names: ["face_with_spiral_eyes"],
            surrogates: "\uD83D\uDE35‍\uD83D\uDCAB",
            unicodeVersion: 13.1,
          },
          {
            names: ["zipper_mouth", "zipper_mouth_face"],
            surrogates: "\uD83E\uDD10",
            unicodeVersion: 8,
          },
          {
            names: ["woozy_face"],
            surrogates: "\uD83E\uDD74",
            unicodeVersion: 11,
          },
          {
            names: ["nauseated_face", "sick"],
            surrogates: "\uD83E\uDD22",
            unicodeVersion: 9,
          },
          {
            names: ["face_vomiting"],
            surrogates: "\uD83E\uDD2E",
            unicodeVersion: 10,
          },
          {
            names: ["sneezing_face", "sneeze"],
            surrogates: "\uD83E\uDD27",
            unicodeVersion: 9,
          },
          { names: ["mask"], surrogates: "\uD83D\uDE37", unicodeVersion: 6 },
          {
            names: ["thermometer_face", "face_with_thermometer"],
            surrogates: "\uD83E\uDD12",
            unicodeVersion: 8,
          },
          {
            names: ["head_bandage", "face_with_head_bandage"],
            surrogates: "\uD83E\uDD15",
            unicodeVersion: 8,
          },
          {
            names: ["money_mouth", "money_mouth_face"],
            surrogates: "\uD83E\uDD11",
            unicodeVersion: 8,
          },
          {
            names: ["cowboy", "face_with_cowboy_hat"],
            surrogates: "\uD83E\uDD20",
            unicodeVersion: 9,
          },
          {
            names: ["smiling_imp"],
            surrogates: "\uD83D\uDE08",
            unicodeVersion: 6,
          },
          { names: ["imp"], surrogates: "\uD83D\uDC7F", unicodeVersion: 6 },
          {
            names: ["japanese_ogre", "ogre"],
            surrogates: "\uD83D\uDC79",
            unicodeVersion: 6,
          },
          {
            names: ["japanese_goblin", "goblin"],
            surrogates: "\uD83D\uDC7A",
            unicodeVersion: 6,
          },
          {
            names: ["clown", "clown_face"],
            surrogates: "\uD83E\uDD21",
            unicodeVersion: 9,
          },
          {
            names: ["poop", "shit", "hankey", "poo", "pile_of_poo"],
            surrogates: "\uD83D\uDCA9",
            unicodeVersion: 6,
          },
          { names: ["ghost"], surrogates: "\uD83D\uDC7B", unicodeVersion: 6 },
          {
            names: ["skull", "skeleton"],
            surrogates: "\uD83D\uDC80",
            unicodeVersion: 6,
          },
          {
            names: ["skull_crossbones", "skull_and_crossbones"],
            surrogates: "☠️",
            unicodeVersion: 1.1,
          },
          { names: ["alien"], surrogates: "\uD83D\uDC7D", unicodeVersion: 6 },
          {
            names: ["space_invader", "alien_monster"],
            surrogates: "\uD83D\uDC7E",
            unicodeVersion: 6,
          },
          {
            names: ["robot", "robot_face"],
            surrogates: "\uD83E\uDD16",
            unicodeVersion: 8,
          },
          {
            names: ["jack_o_lantern"],
            surrogates: "\uD83C\uDF83",
            unicodeVersion: 6,
          },
          {
            names: ["smiley_cat", "grinning_cat"],
            surrogates: "\uD83D\uDE3A",
            unicodeVersion: 6,
          },
          {
            names: ["smile_cat"],
            surrogates: "\uD83D\uDE38",
            unicodeVersion: 6,
          },
          { names: ["joy_cat"], surrogates: "\uD83D\uDE39", unicodeVersion: 6 },
          {
            names: ["heart_eyes_cat"],
            surrogates: "\uD83D\uDE3B",
            unicodeVersion: 6,
          },
          {
            names: ["smirk_cat"],
            surrogates: "\uD83D\uDE3C",
            unicodeVersion: 6,
          },
          {
            names: ["kissing_cat"],
            surrogates: "\uD83D\uDE3D",
            unicodeVersion: 6,
          },
          {
            names: ["scream_cat", "weary_cat"],
            surrogates: "\uD83D\uDE40",
            unicodeVersion: 6,
          },
          {
            names: ["crying_cat_face", "crying_cat"],
            surrogates: "\uD83D\uDE3F",
            unicodeVersion: 6,
          },
          {
            names: ["pouting_cat"],
            surrogates: "\uD83D\uDE3E",
            unicodeVersion: 6,
          },
          {
            names: ["heart_hands"],
            surrogates: "\uD83E\uDEF6",
            unicodeVersion: 14,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["heart_hands_tone1", "heart_hands_light_skin_tone"],
                surrogates: "\uD83E\uDEF6\uD83C\uDFFB",
                unicodeVersion: 14,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "heart_hands_tone2",
                  "heart_hands_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDEF6\uD83C\uDFFC",
                unicodeVersion: 14,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["heart_hands_tone3", "heart_hands_medium_skin_tone"],
                surrogates: "\uD83E\uDEF6\uD83C\uDFFD",
                unicodeVersion: 14,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "heart_hands_tone4",
                  "heart_hands_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDEF6\uD83C\uDFFE",
                unicodeVersion: 14,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["heart_hands_tone5", "heart_hands_dark_skin_tone"],
                surrogates: "\uD83E\uDEF6\uD83C\uDFFF",
                unicodeVersion: 14,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["palms_up_together"],
            surrogates: "\uD83E\uDD32",
            unicodeVersion: 10,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "palms_up_together_tone1",
                  "palms_up_together_light_skin_tone",
                ],
                surrogates: "\uD83E\uDD32\uD83C\uDFFB",
                unicodeVersion: 10,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "palms_up_together_tone2",
                  "palms_up_together_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDD32\uD83C\uDFFC",
                unicodeVersion: 10,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "palms_up_together_tone3",
                  "palms_up_together_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDD32\uD83C\uDFFD",
                unicodeVersion: 10,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "palms_up_together_tone4",
                  "palms_up_together_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDD32\uD83C\uDFFE",
                unicodeVersion: 10,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "palms_up_together_tone5",
                  "palms_up_together_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDD32\uD83C\uDFFF",
                unicodeVersion: 10,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["open_hands"],
            surrogates: "\uD83D\uDC50",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["open_hands_tone1"],
                surrogates: "\uD83D\uDC50\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["open_hands_tone2"],
                surrogates: "\uD83D\uDC50\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["open_hands_tone3"],
                surrogates: "\uD83D\uDC50\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["open_hands_tone4"],
                surrogates: "\uD83D\uDC50\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["open_hands_tone5"],
                surrogates: "\uD83D\uDC50\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["raised_hands", "raising_hands"],
            surrogates: "\uD83D\uDE4C",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["raised_hands_tone1"],
                surrogates: "\uD83D\uDE4C\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["raised_hands_tone2"],
                surrogates: "\uD83D\uDE4C\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["raised_hands_tone3"],
                surrogates: "\uD83D\uDE4C\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["raised_hands_tone4"],
                surrogates: "\uD83D\uDE4C\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["raised_hands_tone5"],
                surrogates: "\uD83D\uDE4C\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["clap"],
            surrogates: "\uD83D\uDC4F",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["clap_tone1"],
                surrogates: "\uD83D\uDC4F\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["clap_tone2"],
                surrogates: "\uD83D\uDC4F\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["clap_tone3"],
                surrogates: "\uD83D\uDC4F\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["clap_tone4"],
                surrogates: "\uD83D\uDC4F\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["clap_tone5"],
                surrogates: "\uD83D\uDC4F\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["handshake", "shaking_hands"],
            surrogates: "\uD83E\uDD1D",
            unicodeVersion: 9,
            diversityChildren: [
              {
                names: ["handshake_tone1", "handshake_light_skin_tone"],
                surrogates: "\uD83E\uDD1D\uD83C\uDFFB",
                unicodeVersion: 14,
                diversity: ["1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "handshake_tone1_tone2",
                  "handshake_light_skin_tone_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDEF1\uD83C\uDFFB‍\uD83E\uDEF2\uD83C\uDFFC",
                unicodeVersion: 14,
                diversity: ["1f3fb", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "handshake_tone1_tone3",
                  "handshake_light_skin_tone_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDEF1\uD83C\uDFFB‍\uD83E\uDEF2\uD83C\uDFFD",
                unicodeVersion: 14,
                diversity: ["1f3fb", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "handshake_tone1_tone4",
                  "handshake_light_skin_tone_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDEF1\uD83C\uDFFB‍\uD83E\uDEF2\uD83C\uDFFE",
                unicodeVersion: 14,
                diversity: ["1f3fb", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "handshake_tone1_tone5",
                  "handshake_light_skin_tone_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDEF1\uD83C\uDFFB‍\uD83E\uDEF2\uD83C\uDFFF",
                unicodeVersion: 14,
                diversity: ["1f3fb", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "handshake_tone2_tone1",
                  "handshake_medium_light_skin_tone_light_skin_tone",
                ],
                surrogates: "\uD83E\uDEF1\uD83C\uDFFC‍\uD83E\uDEF2\uD83C\uDFFB",
                unicodeVersion: 14,
                diversity: ["1f3fc", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: ["handshake_tone2", "handshake_medium_light_skin_tone"],
                surrogates: "\uD83E\uDD1D\uD83C\uDFFC",
                unicodeVersion: 14,
                diversity: ["1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "handshake_tone2_tone3",
                  "handshake_medium_light_skin_tone_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDEF1\uD83C\uDFFC‍\uD83E\uDEF2\uD83C\uDFFD",
                unicodeVersion: 14,
                diversity: ["1f3fc", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "handshake_tone2_tone4",
                  "handshake_medium_light_skin_tone_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDEF1\uD83C\uDFFC‍\uD83E\uDEF2\uD83C\uDFFE",
                unicodeVersion: 14,
                diversity: ["1f3fc", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "handshake_tone2_tone5",
                  "handshake_medium_light_skin_tone_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDEF1\uD83C\uDFFC‍\uD83E\uDEF2\uD83C\uDFFF",
                unicodeVersion: 14,
                diversity: ["1f3fc", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "handshake_tone3_tone1",
                  "handshake_medium_skin_tone_light_skin_tone",
                ],
                surrogates: "\uD83E\uDEF1\uD83C\uDFFD‍\uD83E\uDEF2\uD83C\uDFFB",
                unicodeVersion: 14,
                diversity: ["1f3fd", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "handshake_tone3_tone2",
                  "handshake_medium_skin_tone_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDEF1\uD83C\uDFFD‍\uD83E\uDEF2\uD83C\uDFFC",
                unicodeVersion: 14,
                diversity: ["1f3fd", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: ["handshake_tone3", "handshake_medium_skin_tone"],
                surrogates: "\uD83E\uDD1D\uD83C\uDFFD",
                unicodeVersion: 14,
                diversity: ["1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "handshake_tone3_tone4",
                  "handshake_medium_skin_tone_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDEF1\uD83C\uDFFD‍\uD83E\uDEF2\uD83C\uDFFE",
                unicodeVersion: 14,
                diversity: ["1f3fd", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "handshake_tone3_tone5",
                  "handshake_medium_skin_tone_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDEF1\uD83C\uDFFD‍\uD83E\uDEF2\uD83C\uDFFF",
                unicodeVersion: 14,
                diversity: ["1f3fd", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "handshake_tone4_tone1",
                  "handshake_medium_dark_skin_tone_light_skin_tone",
                ],
                surrogates: "\uD83E\uDEF1\uD83C\uDFFE‍\uD83E\uDEF2\uD83C\uDFFB",
                unicodeVersion: 14,
                diversity: ["1f3fe", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "handshake_tone4_tone2",
                  "handshake_medium_dark_skin_tone_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDEF1\uD83C\uDFFE‍\uD83E\uDEF2\uD83C\uDFFC",
                unicodeVersion: 14,
                diversity: ["1f3fe", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "handshake_tone4_tone3",
                  "handshake_medium_dark_skin_tone_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDEF1\uD83C\uDFFE‍\uD83E\uDEF2\uD83C\uDFFD",
                unicodeVersion: 14,
                diversity: ["1f3fe", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: ["handshake_tone4", "handshake_medium_dark_skin_tone"],
                surrogates: "\uD83E\uDD1D\uD83C\uDFFE",
                unicodeVersion: 14,
                diversity: ["1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "handshake_tone4_tone5",
                  "handshake_medium_dark_skin_tone_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDEF1\uD83C\uDFFE‍\uD83E\uDEF2\uD83C\uDFFF",
                unicodeVersion: 14,
                diversity: ["1f3fe", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "handshake_tone5_tone1",
                  "handshake_dark_skin_tone_light_skin_tone",
                ],
                surrogates: "\uD83E\uDEF1\uD83C\uDFFF‍\uD83E\uDEF2\uD83C\uDFFB",
                unicodeVersion: 14,
                diversity: ["1f3ff", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "handshake_tone5_tone2",
                  "handshake_dark_skin_tone_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDEF1\uD83C\uDFFF‍\uD83E\uDEF2\uD83C\uDFFC",
                unicodeVersion: 14,
                diversity: ["1f3ff", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "handshake_tone5_tone3",
                  "handshake_dark_skin_tone_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDEF1\uD83C\uDFFF‍\uD83E\uDEF2\uD83C\uDFFD",
                unicodeVersion: 14,
                diversity: ["1f3ff", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "handshake_tone5_tone4",
                  "handshake_dark_skin_tone_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDEF1\uD83C\uDFFF‍\uD83E\uDEF2\uD83C\uDFFE",
                unicodeVersion: 14,
                diversity: ["1f3ff", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: ["handshake_tone5", "handshake_dark_skin_tone"],
                surrogates: "\uD83E\uDD1D\uD83C\uDFFF",
                unicodeVersion: 14,
                diversity: ["1f3ff"],
                hasMultiDiversityParent: !0,
              },
            ],
            hasMultiDiversity: !0,
          },
          {
            names: ["thumbsup", "+1", "thumbup", "thumbs_up"],
            surrogates: "\uD83D\uDC4D",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["thumbsup_tone1", "+1_tone1", "thumbup_tone1"],
                surrogates: "\uD83D\uDC4D\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["thumbsup_tone2", "+1_tone2", "thumbup_tone2"],
                surrogates: "\uD83D\uDC4D\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["thumbsup_tone3", "+1_tone3", "thumbup_tone3"],
                surrogates: "\uD83D\uDC4D\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["thumbsup_tone4", "+1_tone4", "thumbup_tone4"],
                surrogates: "\uD83D\uDC4D\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["thumbsup_tone5", "+1_tone5", "thumbup_tone5"],
                surrogates: "\uD83D\uDC4D\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["thumbsdown", "-1", "thumbdown", "thumbs_down"],
            surrogates: "\uD83D\uDC4E",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["thumbsdown_tone1", "_1_tone1", "thumbdown_tone1"],
                surrogates: "\uD83D\uDC4E\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["thumbsdown_tone2", "_1_tone2", "thumbdown_tone2"],
                surrogates: "\uD83D\uDC4E\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["thumbsdown_tone3", "_1_tone3", "thumbdown_tone3"],
                surrogates: "\uD83D\uDC4E\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["thumbsdown_tone4", "_1_tone4", "thumbdown_tone4"],
                surrogates: "\uD83D\uDC4E\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["thumbsdown_tone5", "_1_tone5", "thumbdown_tone5"],
                surrogates: "\uD83D\uDC4E\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["punch", "oncoming_fist"],
            surrogates: "\uD83D\uDC4A",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["punch_tone1"],
                surrogates: "\uD83D\uDC4A\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["punch_tone2"],
                surrogates: "\uD83D\uDC4A\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["punch_tone3"],
                surrogates: "\uD83D\uDC4A\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["punch_tone4"],
                surrogates: "\uD83D\uDC4A\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["punch_tone5"],
                surrogates: "\uD83D\uDC4A\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["fist", "raised_fist"],
            surrogates: "✊",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["fist_tone1"],
                surrogates: "✊\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["fist_tone2"],
                surrogates: "✊\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["fist_tone3"],
                surrogates: "✊\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["fist_tone4"],
                surrogates: "✊\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["fist_tone5"],
                surrogates: "✊\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["left_facing_fist", "left_fist"],
            surrogates: "\uD83E\uDD1B",
            unicodeVersion: 9,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["left_facing_fist_tone1", "left_fist_tone1"],
                surrogates: "\uD83E\uDD1B\uD83C\uDFFB",
                unicodeVersion: 9,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["left_facing_fist_tone2", "left_fist_tone2"],
                surrogates: "\uD83E\uDD1B\uD83C\uDFFC",
                unicodeVersion: 9,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["left_facing_fist_tone3", "left_fist_tone3"],
                surrogates: "\uD83E\uDD1B\uD83C\uDFFD",
                unicodeVersion: 9,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["left_facing_fist_tone4", "left_fist_tone4"],
                surrogates: "\uD83E\uDD1B\uD83C\uDFFE",
                unicodeVersion: 9,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["left_facing_fist_tone5", "left_fist_tone5"],
                surrogates: "\uD83E\uDD1B\uD83C\uDFFF",
                unicodeVersion: 9,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["right_facing_fist", "right_fist"],
            surrogates: "\uD83E\uDD1C",
            unicodeVersion: 9,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["right_facing_fist_tone1", "right_fist_tone1"],
                surrogates: "\uD83E\uDD1C\uD83C\uDFFB",
                unicodeVersion: 9,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["right_facing_fist_tone2", "right_fist_tone2"],
                surrogates: "\uD83E\uDD1C\uD83C\uDFFC",
                unicodeVersion: 9,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["right_facing_fist_tone3", "right_fist_tone3"],
                surrogates: "\uD83E\uDD1C\uD83C\uDFFD",
                unicodeVersion: 9,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["right_facing_fist_tone4", "right_fist_tone4"],
                surrogates: "\uD83E\uDD1C\uD83C\uDFFE",
                unicodeVersion: 9,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["right_facing_fist_tone5", "right_fist_tone5"],
                surrogates: "\uD83E\uDD1C\uD83C\uDFFF",
                unicodeVersion: 9,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["leftwards_pushing_hand"],
            surrogates: "\uD83E\uDEF7",
            unicodeVersion: 15,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "leftwards_pushing_hand_tone1",
                  "leftwards_pushing_hand_light_skin_tone",
                ],
                surrogates: "\uD83E\uDEF7\uD83C\uDFFB",
                unicodeVersion: 15,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "leftwards_pushing_hand_tone2",
                  "leftwards_pushing_hand_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDEF7\uD83C\uDFFC",
                unicodeVersion: 15,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "leftwards_pushing_hand_tone3",
                  "leftwards_pushing_hand_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDEF7\uD83C\uDFFD",
                unicodeVersion: 15,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "leftwards_pushing_hand_tone4",
                  "leftwards_pushing_hand_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDEF7\uD83C\uDFFE",
                unicodeVersion: 15,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "leftwards_pushing_hand_tone5",
                  "leftwards_pushing_hand_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDEF7\uD83C\uDFFF",
                unicodeVersion: 15,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["rightwards_pushing_hand"],
            surrogates: "\uD83E\uDEF8",
            unicodeVersion: 15,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "rightwards_pushing_hand_tone1",
                  "rightwards_pushing_hand_light_skin_tone",
                ],
                surrogates: "\uD83E\uDEF8\uD83C\uDFFB",
                unicodeVersion: 15,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "rightwards_pushing_hand_tone2",
                  "rightwards_pushing_hand_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDEF8\uD83C\uDFFC",
                unicodeVersion: 15,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "rightwards_pushing_hand_tone3",
                  "rightwards_pushing_hand_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDEF8\uD83C\uDFFD",
                unicodeVersion: 15,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "rightwards_pushing_hand_tone4",
                  "rightwards_pushing_hand_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDEF8\uD83C\uDFFE",
                unicodeVersion: 15,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "rightwards_pushing_hand_tone5",
                  "rightwards_pushing_hand_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDEF8\uD83C\uDFFF",
                unicodeVersion: 15,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: [
              "fingers_crossed",
              "hand_with_index_and_middle_finger_crossed",
            ],
            surrogates: "\uD83E\uDD1E",
            unicodeVersion: 9,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "fingers_crossed_tone1",
                  "hand_with_index_and_middle_fingers_crossed_tone1",
                ],
                surrogates: "\uD83E\uDD1E\uD83C\uDFFB",
                unicodeVersion: 9,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "fingers_crossed_tone2",
                  "hand_with_index_and_middle_fingers_crossed_tone2",
                ],
                surrogates: "\uD83E\uDD1E\uD83C\uDFFC",
                unicodeVersion: 9,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "fingers_crossed_tone3",
                  "hand_with_index_and_middle_fingers_crossed_tone3",
                ],
                surrogates: "\uD83E\uDD1E\uD83C\uDFFD",
                unicodeVersion: 9,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "fingers_crossed_tone4",
                  "hand_with_index_and_middle_fingers_crossed_tone4",
                ],
                surrogates: "\uD83E\uDD1E\uD83C\uDFFE",
                unicodeVersion: 9,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "fingers_crossed_tone5",
                  "hand_with_index_and_middle_fingers_crossed_tone5",
                ],
                surrogates: "\uD83E\uDD1E\uD83C\uDFFF",
                unicodeVersion: 9,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["v", "victory_hand"],
            surrogates: "✌️",
            unicodeVersion: 1.1,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["v_tone1"],
                surrogates: "✌\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["v_tone2"],
                surrogates: "✌\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["v_tone3"],
                surrogates: "✌\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["v_tone4"],
                surrogates: "✌\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["v_tone5"],
                surrogates: "✌\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["hand_with_index_finger_and_thumb_crossed"],
            surrogates: "\uD83E\uDEF0",
            unicodeVersion: 14,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "hand_with_index_finger_and_thumb_crossed_tone1",
                  "hand_with_index_finger_and_thumb_crossed_light_skin_tone",
                ],
                surrogates: "\uD83E\uDEF0\uD83C\uDFFB",
                unicodeVersion: 14,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "hand_with_index_finger_and_thumb_crossed_tone2",
                  "hand_with_index_finger_and_thumb_crossed_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDEF0\uD83C\uDFFC",
                unicodeVersion: 14,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "hand_with_index_finger_and_thumb_crossed_tone3",
                  "hand_with_index_finger_and_thumb_crossed_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDEF0\uD83C\uDFFD",
                unicodeVersion: 14,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "hand_with_index_finger_and_thumb_crossed_tone4",
                  "hand_with_index_finger_and_thumb_crossed_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDEF0\uD83C\uDFFE",
                unicodeVersion: 14,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "hand_with_index_finger_and_thumb_crossed_tone5",
                  "hand_with_index_finger_and_thumb_crossed_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDEF0\uD83C\uDFFF",
                unicodeVersion: 14,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["love_you_gesture"],
            surrogates: "\uD83E\uDD1F",
            unicodeVersion: 10,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "love_you_gesture_tone1",
                  "love_you_gesture_light_skin_tone",
                ],
                surrogates: "\uD83E\uDD1F\uD83C\uDFFB",
                unicodeVersion: 10,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "love_you_gesture_tone2",
                  "love_you_gesture_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDD1F\uD83C\uDFFC",
                unicodeVersion: 10,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "love_you_gesture_tone3",
                  "love_you_gesture_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDD1F\uD83C\uDFFD",
                unicodeVersion: 10,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "love_you_gesture_tone4",
                  "love_you_gesture_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDD1F\uD83C\uDFFE",
                unicodeVersion: 10,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "love_you_gesture_tone5",
                  "love_you_gesture_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDD1F\uD83C\uDFFF",
                unicodeVersion: 10,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["metal", "sign_of_the_horns"],
            surrogates: "\uD83E\uDD18",
            unicodeVersion: 8,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["metal_tone1", "sign_of_the_horns_tone1"],
                surrogates: "\uD83E\uDD18\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["metal_tone2", "sign_of_the_horns_tone2"],
                surrogates: "\uD83E\uDD18\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["metal_tone3", "sign_of_the_horns_tone3"],
                surrogates: "\uD83E\uDD18\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["metal_tone4", "sign_of_the_horns_tone4"],
                surrogates: "\uD83E\uDD18\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["metal_tone5", "sign_of_the_horns_tone5"],
                surrogates: "\uD83E\uDD18\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["ok_hand"],
            surrogates: "\uD83D\uDC4C",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["ok_hand_tone1"],
                surrogates: "\uD83D\uDC4C\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["ok_hand_tone2"],
                surrogates: "\uD83D\uDC4C\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["ok_hand_tone3"],
                surrogates: "\uD83D\uDC4C\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["ok_hand_tone4"],
                surrogates: "\uD83D\uDC4C\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["ok_hand_tone5"],
                surrogates: "\uD83D\uDC4C\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["pinched_fingers"],
            surrogates: "\uD83E\uDD0C",
            unicodeVersion: 13,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "pinched_fingers_tone2",
                  "pinched_fingers_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDD0C\uD83C\uDFFC",
                unicodeVersion: 13,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "pinched_fingers_tone1",
                  "pinched_fingers_light_skin_tone",
                ],
                surrogates: "\uD83E\uDD0C\uD83C\uDFFB",
                unicodeVersion: 13,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "pinched_fingers_tone3",
                  "pinched_fingers_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDD0C\uD83C\uDFFD",
                unicodeVersion: 13,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "pinched_fingers_tone4",
                  "pinched_fingers_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDD0C\uD83C\uDFFE",
                unicodeVersion: 13,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "pinched_fingers_tone5",
                  "pinched_fingers_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDD0C\uD83C\uDFFF",
                unicodeVersion: 13,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["pinching_hand"],
            surrogates: "\uD83E\uDD0F",
            unicodeVersion: 12,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["pinching_hand_tone1", "pinching_hand_light_skin_tone"],
                surrogates: "\uD83E\uDD0F\uD83C\uDFFB",
                unicodeVersion: 12,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "pinching_hand_tone2",
                  "pinching_hand_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDD0F\uD83C\uDFFC",
                unicodeVersion: 12,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "pinching_hand_tone3",
                  "pinching_hand_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDD0F\uD83C\uDFFD",
                unicodeVersion: 12,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "pinching_hand_tone4",
                  "pinching_hand_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDD0F\uD83C\uDFFE",
                unicodeVersion: 12,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["pinching_hand_tone5", "pinching_hand_dark_skin_tone"],
                surrogates: "\uD83E\uDD0F\uD83C\uDFFF",
                unicodeVersion: 12,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["palm_down_hand"],
            surrogates: "\uD83E\uDEF3",
            unicodeVersion: 14,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "palm_down_hand_tone1",
                  "palm_down_hand_light_skin_tone",
                ],
                surrogates: "\uD83E\uDEF3\uD83C\uDFFB",
                unicodeVersion: 14,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "palm_down_hand_tone2",
                  "palm_down_hand_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDEF3\uD83C\uDFFC",
                unicodeVersion: 14,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "palm_down_hand_tone3",
                  "palm_down_hand_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDEF3\uD83C\uDFFD",
                unicodeVersion: 14,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "palm_down_hand_tone4",
                  "palm_down_hand_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDEF3\uD83C\uDFFE",
                unicodeVersion: 14,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "palm_down_hand_tone5",
                  "palm_down_hand_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDEF3\uD83C\uDFFF",
                unicodeVersion: 14,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["palm_up_hand"],
            surrogates: "\uD83E\uDEF4",
            unicodeVersion: 14,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["palm_up_hand_tone1", "palm_up_hand_light_skin_tone"],
                surrogates: "\uD83E\uDEF4\uD83C\uDFFB",
                unicodeVersion: 14,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "palm_up_hand_tone2",
                  "palm_up_hand_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDEF4\uD83C\uDFFC",
                unicodeVersion: 14,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["palm_up_hand_tone3", "palm_up_hand_medium_skin_tone"],
                surrogates: "\uD83E\uDEF4\uD83C\uDFFD",
                unicodeVersion: 14,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "palm_up_hand_tone4",
                  "palm_up_hand_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDEF4\uD83C\uDFFE",
                unicodeVersion: 14,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["palm_up_hand_tone5", "palm_up_hand_dark_skin_tone"],
                surrogates: "\uD83E\uDEF4\uD83C\uDFFF",
                unicodeVersion: 14,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["point_left"],
            surrogates: "\uD83D\uDC48",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["point_left_tone1"],
                surrogates: "\uD83D\uDC48\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["point_left_tone2"],
                surrogates: "\uD83D\uDC48\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["point_left_tone3"],
                surrogates: "\uD83D\uDC48\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["point_left_tone4"],
                surrogates: "\uD83D\uDC48\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["point_left_tone5"],
                surrogates: "\uD83D\uDC48\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["point_right"],
            surrogates: "\uD83D\uDC49",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["point_right_tone1"],
                surrogates: "\uD83D\uDC49\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["point_right_tone2"],
                surrogates: "\uD83D\uDC49\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["point_right_tone3"],
                surrogates: "\uD83D\uDC49\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["point_right_tone4"],
                surrogates: "\uD83D\uDC49\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["point_right_tone5"],
                surrogates: "\uD83D\uDC49\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["point_up_2"],
            surrogates: "\uD83D\uDC46",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["point_up_2_tone1"],
                surrogates: "\uD83D\uDC46\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["point_up_2_tone2"],
                surrogates: "\uD83D\uDC46\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["point_up_2_tone3"],
                surrogates: "\uD83D\uDC46\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["point_up_2_tone4"],
                surrogates: "\uD83D\uDC46\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["point_up_2_tone5"],
                surrogates: "\uD83D\uDC46\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["point_down"],
            surrogates: "\uD83D\uDC47",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["point_down_tone1"],
                surrogates: "\uD83D\uDC47\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["point_down_tone2"],
                surrogates: "\uD83D\uDC47\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["point_down_tone3"],
                surrogates: "\uD83D\uDC47\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["point_down_tone4"],
                surrogates: "\uD83D\uDC47\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["point_down_tone5"],
                surrogates: "\uD83D\uDC47\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["point_up"],
            surrogates: "☝️",
            unicodeVersion: 1.1,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["point_up_tone1"],
                surrogates: "☝\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["point_up_tone2"],
                surrogates: "☝\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["point_up_tone3"],
                surrogates: "☝\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["point_up_tone4"],
                surrogates: "☝\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["point_up_tone5"],
                surrogates: "☝\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["raised_hand"],
            surrogates: "✋",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["raised_hand_tone1"],
                surrogates: "✋\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["raised_hand_tone2"],
                surrogates: "✋\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["raised_hand_tone3"],
                surrogates: "✋\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["raised_hand_tone4"],
                surrogates: "✋\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["raised_hand_tone5"],
                surrogates: "✋\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["raised_back_of_hand", "back_of_hand"],
            surrogates: "\uD83E\uDD1A",
            unicodeVersion: 9,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["raised_back_of_hand_tone1", "back_of_hand_tone1"],
                surrogates: "\uD83E\uDD1A\uD83C\uDFFB",
                unicodeVersion: 9,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["raised_back_of_hand_tone2", "back_of_hand_tone2"],
                surrogates: "\uD83E\uDD1A\uD83C\uDFFC",
                unicodeVersion: 9,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["raised_back_of_hand_tone3", "back_of_hand_tone3"],
                surrogates: "\uD83E\uDD1A\uD83C\uDFFD",
                unicodeVersion: 9,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["raised_back_of_hand_tone4", "back_of_hand_tone4"],
                surrogates: "\uD83E\uDD1A\uD83C\uDFFE",
                unicodeVersion: 9,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["raised_back_of_hand_tone5", "back_of_hand_tone5"],
                surrogates: "\uD83E\uDD1A\uD83C\uDFFF",
                unicodeVersion: 9,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["hand_splayed", "raised_hand_with_fingers_splayed"],
            surrogates: "\uD83D\uDD90️",
            unicodeVersion: 7,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "hand_splayed_tone1",
                  "raised_hand_with_fingers_splayed_tone1",
                ],
                surrogates: "\uD83D\uDD90\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "hand_splayed_tone2",
                  "raised_hand_with_fingers_splayed_tone2",
                ],
                surrogates: "\uD83D\uDD90\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "hand_splayed_tone3",
                  "raised_hand_with_fingers_splayed_tone3",
                ],
                surrogates: "\uD83D\uDD90\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "hand_splayed_tone4",
                  "raised_hand_with_fingers_splayed_tone4",
                ],
                surrogates: "\uD83D\uDD90\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "hand_splayed_tone5",
                  "raised_hand_with_fingers_splayed_tone5",
                ],
                surrogates: "\uD83D\uDD90\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: [
              "vulcan",
              "raised_hand_with_part_between_middle_and_ring_fingers",
              "vulcan_salute",
            ],
            surrogates: "\uD83D\uDD96",
            unicodeVersion: 7,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "vulcan_tone1",
                  "raised_hand_with_part_between_middle_and_ring_fingers_tone1",
                ],
                surrogates: "\uD83D\uDD96\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "vulcan_tone2",
                  "raised_hand_with_part_between_middle_and_ring_fingers_tone2",
                ],
                surrogates: "\uD83D\uDD96\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "vulcan_tone3",
                  "raised_hand_with_part_between_middle_and_ring_fingers_tone3",
                ],
                surrogates: "\uD83D\uDD96\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "vulcan_tone4",
                  "raised_hand_with_part_between_middle_and_ring_fingers_tone4",
                ],
                surrogates: "\uD83D\uDD96\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "vulcan_tone5",
                  "raised_hand_with_part_between_middle_and_ring_fingers_tone5",
                ],
                surrogates: "\uD83D\uDD96\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["wave", "waving_hand"],
            surrogates: "\uD83D\uDC4B",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["wave_tone1"],
                surrogates: "\uD83D\uDC4B\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["wave_tone2"],
                surrogates: "\uD83D\uDC4B\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["wave_tone3"],
                surrogates: "\uD83D\uDC4B\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["wave_tone4"],
                surrogates: "\uD83D\uDC4B\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["wave_tone5"],
                surrogates: "\uD83D\uDC4B\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["call_me", "call_me_hand"],
            surrogates: "\uD83E\uDD19",
            unicodeVersion: 9,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["call_me_tone1", "call_me_hand_tone1"],
                surrogates: "\uD83E\uDD19\uD83C\uDFFB",
                unicodeVersion: 9,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["call_me_tone2", "call_me_hand_tone2"],
                surrogates: "\uD83E\uDD19\uD83C\uDFFC",
                unicodeVersion: 9,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["call_me_tone3", "call_me_hand_tone3"],
                surrogates: "\uD83E\uDD19\uD83C\uDFFD",
                unicodeVersion: 9,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["call_me_tone4", "call_me_hand_tone4"],
                surrogates: "\uD83E\uDD19\uD83C\uDFFE",
                unicodeVersion: 9,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["call_me_tone5", "call_me_hand_tone5"],
                surrogates: "\uD83E\uDD19\uD83C\uDFFF",
                unicodeVersion: 9,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["leftwards_hand"],
            surrogates: "\uD83E\uDEF2",
            unicodeVersion: 14,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "leftwards_hand_tone1",
                  "leftwards_hand_light_skin_tone",
                ],
                surrogates: "\uD83E\uDEF2\uD83C\uDFFB",
                unicodeVersion: 14,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "leftwards_hand_tone2",
                  "leftwards_hand_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDEF2\uD83C\uDFFC",
                unicodeVersion: 14,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "leftwards_hand_tone3",
                  "leftwards_hand_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDEF2\uD83C\uDFFD",
                unicodeVersion: 14,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "leftwards_hand_tone4",
                  "leftwards_hand_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDEF2\uD83C\uDFFE",
                unicodeVersion: 14,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "leftwards_hand_tone5",
                  "leftwards_hand_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDEF2\uD83C\uDFFF",
                unicodeVersion: 14,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["rightwards_hand"],
            surrogates: "\uD83E\uDEF1",
            unicodeVersion: 14,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "rightwards_hand_tone1",
                  "rightwards_hand_light_skin_tone",
                ],
                surrogates: "\uD83E\uDEF1\uD83C\uDFFB",
                unicodeVersion: 14,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "rightwards_hand_tone2",
                  "rightwards_hand_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDEF1\uD83C\uDFFC",
                unicodeVersion: 14,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "rightwards_hand_tone3",
                  "rightwards_hand_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDEF1\uD83C\uDFFD",
                unicodeVersion: 14,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "rightwards_hand_tone4",
                  "rightwards_hand_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDEF1\uD83C\uDFFE",
                unicodeVersion: 14,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "rightwards_hand_tone5",
                  "rightwards_hand_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDEF1\uD83C\uDFFF",
                unicodeVersion: 14,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["muscle", "flexed_biceps"],
            surrogates: "\uD83D\uDCAA",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["muscle_tone1"],
                surrogates: "\uD83D\uDCAA\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["muscle_tone2"],
                surrogates: "\uD83D\uDCAA\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["muscle_tone3"],
                surrogates: "\uD83D\uDCAA\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["muscle_tone4"],
                surrogates: "\uD83D\uDCAA\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["muscle_tone5"],
                surrogates: "\uD83D\uDCAA\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["mechanical_arm"],
            surrogates: "\uD83E\uDDBE",
            unicodeVersion: 12,
          },
          {
            names: [
              "middle_finger",
              "reversed_hand_with_middle_finger_extended",
            ],
            surrogates: "\uD83D\uDD95",
            unicodeVersion: 7,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "middle_finger_tone1",
                  "reversed_hand_with_middle_finger_extended_tone1",
                ],
                surrogates: "\uD83D\uDD95\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "middle_finger_tone2",
                  "reversed_hand_with_middle_finger_extended_tone2",
                ],
                surrogates: "\uD83D\uDD95\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "middle_finger_tone3",
                  "reversed_hand_with_middle_finger_extended_tone3",
                ],
                surrogates: "\uD83D\uDD95\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "middle_finger_tone4",
                  "reversed_hand_with_middle_finger_extended_tone4",
                ],
                surrogates: "\uD83D\uDD95\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "middle_finger_tone5",
                  "reversed_hand_with_middle_finger_extended_tone5",
                ],
                surrogates: "\uD83D\uDD95\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["writing_hand"],
            surrogates: "✍️",
            unicodeVersion: 1.1,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["writing_hand_tone1"],
                surrogates: "✍\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["writing_hand_tone2"],
                surrogates: "✍\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["writing_hand_tone3"],
                surrogates: "✍\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["writing_hand_tone4"],
                surrogates: "✍\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["writing_hand_tone5"],
                surrogates: "✍\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["pray", "folded_hands"],
            surrogates: "\uD83D\uDE4F",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["pray_tone1"],
                surrogates: "\uD83D\uDE4F\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["pray_tone2"],
                surrogates: "\uD83D\uDE4F\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["pray_tone3"],
                surrogates: "\uD83D\uDE4F\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["pray_tone4"],
                surrogates: "\uD83D\uDE4F\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["pray_tone5"],
                surrogates: "\uD83D\uDE4F\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["index_pointing_at_the_viewer"],
            surrogates: "\uD83E\uDEF5",
            unicodeVersion: 14,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "index_pointing_at_the_viewer_tone1",
                  "index_pointing_at_the_viewer_light_skin_tone",
                ],
                surrogates: "\uD83E\uDEF5\uD83C\uDFFB",
                unicodeVersion: 14,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "index_pointing_at_the_viewer_tone2",
                  "index_pointing_at_the_viewer_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDEF5\uD83C\uDFFC",
                unicodeVersion: 14,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "index_pointing_at_the_viewer_tone3",
                  "index_pointing_at_the_viewer_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDEF5\uD83C\uDFFD",
                unicodeVersion: 14,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "index_pointing_at_the_viewer_tone4",
                  "index_pointing_at_the_viewer_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDEF5\uD83C\uDFFE",
                unicodeVersion: 14,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "index_pointing_at_the_viewer_tone5",
                  "index_pointing_at_the_viewer_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDEF5\uD83C\uDFFF",
                unicodeVersion: 14,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["foot"],
            surrogates: "\uD83E\uDDB6",
            unicodeVersion: 11,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["foot_tone1", "foot_light_skin_tone"],
                surrogates: "\uD83E\uDDB6\uD83C\uDFFB",
                unicodeVersion: 11,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["foot_tone2", "foot_medium_light_skin_tone"],
                surrogates: "\uD83E\uDDB6\uD83C\uDFFC",
                unicodeVersion: 11,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["foot_tone3", "foot_medium_skin_tone"],
                surrogates: "\uD83E\uDDB6\uD83C\uDFFD",
                unicodeVersion: 11,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["foot_tone4", "foot_medium_dark_skin_tone"],
                surrogates: "\uD83E\uDDB6\uD83C\uDFFE",
                unicodeVersion: 11,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["foot_tone5", "foot_dark_skin_tone"],
                surrogates: "\uD83E\uDDB6\uD83C\uDFFF",
                unicodeVersion: 11,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["leg"],
            surrogates: "\uD83E\uDDB5",
            unicodeVersion: 11,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["leg_tone1", "leg_light_skin_tone"],
                surrogates: "\uD83E\uDDB5\uD83C\uDFFB",
                unicodeVersion: 11,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["leg_tone2", "leg_medium_light_skin_tone"],
                surrogates: "\uD83E\uDDB5\uD83C\uDFFC",
                unicodeVersion: 11,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["leg_tone3", "leg_medium_skin_tone"],
                surrogates: "\uD83E\uDDB5\uD83C\uDFFD",
                unicodeVersion: 11,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["leg_tone4", "leg_medium_dark_skin_tone"],
                surrogates: "\uD83E\uDDB5\uD83C\uDFFE",
                unicodeVersion: 11,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["leg_tone5", "leg_dark_skin_tone"],
                surrogates: "\uD83E\uDDB5\uD83C\uDFFF",
                unicodeVersion: 11,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["mechanical_leg"],
            surrogates: "\uD83E\uDDBF",
            unicodeVersion: 12,
          },
          {
            names: ["lipstick"],
            surrogates: "\uD83D\uDC84",
            unicodeVersion: 6,
          },
          {
            names: ["kiss", "kiss_mark"],
            surrogates: "\uD83D\uDC8B",
            unicodeVersion: 6,
          },
          {
            names: ["lips", "mouth"],
            surrogates: "\uD83D\uDC44",
            unicodeVersion: 6,
          },
          {
            names: ["biting_lip"],
            surrogates: "\uD83E\uDEE6",
            unicodeVersion: 14,
          },
          { names: ["tooth"], surrogates: "\uD83E\uDDB7", unicodeVersion: 11 },
          { names: ["tongue"], surrogates: "\uD83D\uDC45", unicodeVersion: 6 },
          {
            names: ["ear"],
            surrogates: "\uD83D\uDC42",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["ear_tone1"],
                surrogates: "\uD83D\uDC42\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["ear_tone2"],
                surrogates: "\uD83D\uDC42\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["ear_tone3"],
                surrogates: "\uD83D\uDC42\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["ear_tone4"],
                surrogates: "\uD83D\uDC42\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["ear_tone5"],
                surrogates: "\uD83D\uDC42\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["ear_with_hearing_aid"],
            surrogates: "\uD83E\uDDBB",
            unicodeVersion: 12,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "ear_with_hearing_aid_tone1",
                  "ear_with_hearing_aid_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDBB\uD83C\uDFFB",
                unicodeVersion: 12,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "ear_with_hearing_aid_tone2",
                  "ear_with_hearing_aid_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDBB\uD83C\uDFFC",
                unicodeVersion: 12,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "ear_with_hearing_aid_tone3",
                  "ear_with_hearing_aid_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDDBB\uD83C\uDFFD",
                unicodeVersion: 12,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "ear_with_hearing_aid_tone4",
                  "ear_with_hearing_aid_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDBB\uD83C\uDFFE",
                unicodeVersion: 12,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "ear_with_hearing_aid_tone5",
                  "ear_with_hearing_aid_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDBB\uD83C\uDFFF",
                unicodeVersion: 12,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["nose"],
            surrogates: "\uD83D\uDC43",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["nose_tone1"],
                surrogates: "\uD83D\uDC43\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["nose_tone2"],
                surrogates: "\uD83D\uDC43\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["nose_tone3"],
                surrogates: "\uD83D\uDC43\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["nose_tone4"],
                surrogates: "\uD83D\uDC43\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["nose_tone5"],
                surrogates: "\uD83D\uDC43\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["footprints"],
            surrogates: "\uD83D\uDC63",
            unicodeVersion: 6,
          },
          { names: ["eye"], surrogates: "\uD83D\uDC41️", unicodeVersion: 7 },
          { names: ["eyes"], surrogates: "\uD83D\uDC40", unicodeVersion: 6 },
          {
            names: ["anatomical_heart"],
            surrogates: "\uD83E\uDEC0",
            unicodeVersion: 13,
          },
          { names: ["lungs"], surrogates: "\uD83E\uDEC1", unicodeVersion: 13 },
          { names: ["brain"], surrogates: "\uD83E\uDDE0", unicodeVersion: 10 },
          {
            names: ["speaking_head", "speaking_head_in_silhouette"],
            surrogates: "\uD83D\uDDE3️",
            unicodeVersion: 7,
          },
          {
            names: ["bust_in_silhouette"],
            surrogates: "\uD83D\uDC64",
            unicodeVersion: 6,
          },
          {
            names: ["busts_in_silhouette"],
            surrogates: "\uD83D\uDC65",
            unicodeVersion: 6,
          },
          {
            names: ["people_hugging"],
            surrogates: "\uD83E\uDEC2",
            unicodeVersion: 13,
          },
          {
            names: ["baby"],
            surrogates: "\uD83D\uDC76",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["baby_tone1"],
                surrogates: "\uD83D\uDC76\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["baby_tone2"],
                surrogates: "\uD83D\uDC76\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["baby_tone3"],
                surrogates: "\uD83D\uDC76\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["baby_tone4"],
                surrogates: "\uD83D\uDC76\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["baby_tone5"],
                surrogates: "\uD83D\uDC76\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["child"],
            surrogates: "\uD83E\uDDD2",
            unicodeVersion: 10,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["child_tone1", "child_light_skin_tone"],
                surrogates: "\uD83E\uDDD2\uD83C\uDFFB",
                unicodeVersion: 10,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["child_tone2", "child_medium_light_skin_tone"],
                surrogates: "\uD83E\uDDD2\uD83C\uDFFC",
                unicodeVersion: 10,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["child_tone3", "child_medium_skin_tone"],
                surrogates: "\uD83E\uDDD2\uD83C\uDFFD",
                unicodeVersion: 10,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["child_tone4", "child_medium_dark_skin_tone"],
                surrogates: "\uD83E\uDDD2\uD83C\uDFFE",
                unicodeVersion: 10,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["child_tone5", "child_dark_skin_tone"],
                surrogates: "\uD83E\uDDD2\uD83C\uDFFF",
                unicodeVersion: 10,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["girl"],
            surrogates: "\uD83D\uDC67",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["girl_tone1"],
                surrogates: "\uD83D\uDC67\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["girl_tone2"],
                surrogates: "\uD83D\uDC67\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["girl_tone3"],
                surrogates: "\uD83D\uDC67\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["girl_tone4"],
                surrogates: "\uD83D\uDC67\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["girl_tone5"],
                surrogates: "\uD83D\uDC67\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["boy"],
            surrogates: "\uD83D\uDC66",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["boy_tone1"],
                surrogates: "\uD83D\uDC66\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["boy_tone2"],
                surrogates: "\uD83D\uDC66\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["boy_tone3"],
                surrogates: "\uD83D\uDC66\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["boy_tone4"],
                surrogates: "\uD83D\uDC66\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["boy_tone5"],
                surrogates: "\uD83D\uDC66\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["adult", "person"],
            surrogates: "\uD83E\uDDD1",
            unicodeVersion: 10,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["adult_tone1", "adult_light_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFB",
                unicodeVersion: 10,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["adult_tone2", "adult_medium_light_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFC",
                unicodeVersion: 10,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["adult_tone3", "adult_medium_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFD",
                unicodeVersion: 10,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["adult_tone4", "adult_medium_dark_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFE",
                unicodeVersion: 10,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["adult_tone5", "adult_dark_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFF",
                unicodeVersion: 10,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman"],
            surrogates: "\uD83D\uDC69",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["woman_tone1"],
                surrogates: "\uD83D\uDC69\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_tone2"],
                surrogates: "\uD83D\uDC69\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_tone3"],
                surrogates: "\uD83D\uDC69\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_tone4"],
                surrogates: "\uD83D\uDC69\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_tone5"],
                surrogates: "\uD83D\uDC69\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man"],
            surrogates: "\uD83D\uDC68",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["man_tone1"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_tone2"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_tone3"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_tone4"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_tone5"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["person_curly_hair"],
            surrogates: "\uD83E\uDDD1‍\uD83E\uDDB1",
            unicodeVersion: 12.1,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "person_tone1_curly_hair",
                  "person_light_skin_tone_curly_hair",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFB‍\uD83E\uDDB1",
                unicodeVersion: 12.1,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_tone2_curly_hair",
                  "person_medium_light_skin_tone_curly_hair",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFC‍\uD83E\uDDB1",
                unicodeVersion: 12.1,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_tone3_curly_hair",
                  "person_medium_skin_tone_curly_hair",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFD‍\uD83E\uDDB1",
                unicodeVersion: 12.1,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_tone4_curly_hair",
                  "person_medium_dark_skin_tone_curly_hair",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFE‍\uD83E\uDDB1",
                unicodeVersion: 12.1,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_tone5_curly_hair",
                  "person_dark_skin_tone_curly_hair",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFF‍\uD83E\uDDB1",
                unicodeVersion: 12.1,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_curly_haired"],
            surrogates: "\uD83D\uDC69‍\uD83E\uDDB1",
            unicodeVersion: 11,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_curly_haired_tone1",
                  "woman_curly_haired_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFB‍\uD83E\uDDB1",
                unicodeVersion: 11,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_curly_haired_tone2",
                  "woman_curly_haired_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFC‍\uD83E\uDDB1",
                unicodeVersion: 11,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_curly_haired_tone3",
                  "woman_curly_haired_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFD‍\uD83E\uDDB1",
                unicodeVersion: 11,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_curly_haired_tone4",
                  "woman_curly_haired_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFE‍\uD83E\uDDB1",
                unicodeVersion: 11,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_curly_haired_tone5",
                  "woman_curly_haired_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFF‍\uD83E\uDDB1",
                unicodeVersion: 11,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_curly_haired"],
            surrogates: "\uD83D\uDC68‍\uD83E\uDDB1",
            unicodeVersion: 11,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "man_curly_haired_tone1",
                  "man_curly_haired_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFB‍\uD83E\uDDB1",
                unicodeVersion: 11,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_curly_haired_tone2",
                  "man_curly_haired_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFC‍\uD83E\uDDB1",
                unicodeVersion: 11,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_curly_haired_tone3",
                  "man_curly_haired_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFD‍\uD83E\uDDB1",
                unicodeVersion: 11,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_curly_haired_tone4",
                  "man_curly_haired_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFE‍\uD83E\uDDB1",
                unicodeVersion: 11,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_curly_haired_tone5",
                  "man_curly_haired_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFF‍\uD83E\uDDB1",
                unicodeVersion: 11,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["person_red_hair"],
            surrogates: "\uD83E\uDDD1‍\uD83E\uDDB0",
            unicodeVersion: 12.1,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "person_tone1_red_hair",
                  "person_light_skin_tone_red_hair",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFB‍\uD83E\uDDB0",
                unicodeVersion: 12.1,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_tone2_red_hair",
                  "person_medium_light_skin_tone_red_hair",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFC‍\uD83E\uDDB0",
                unicodeVersion: 12.1,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_tone3_red_hair",
                  "person_medium_skin_tone_red_hair",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFD‍\uD83E\uDDB0",
                unicodeVersion: 12.1,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_tone4_red_hair",
                  "person_medium_dark_skin_tone_red_hair",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFE‍\uD83E\uDDB0",
                unicodeVersion: 12.1,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_tone5_red_hair",
                  "person_dark_skin_tone_red_hair",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFF‍\uD83E\uDDB0",
                unicodeVersion: 12.1,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_red_haired"],
            surrogates: "\uD83D\uDC69‍\uD83E\uDDB0",
            unicodeVersion: 11,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_red_haired_tone1",
                  "woman_red_haired_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFB‍\uD83E\uDDB0",
                unicodeVersion: 11,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_red_haired_tone2",
                  "woman_red_haired_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFC‍\uD83E\uDDB0",
                unicodeVersion: 11,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_red_haired_tone3",
                  "woman_red_haired_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFD‍\uD83E\uDDB0",
                unicodeVersion: 11,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_red_haired_tone4",
                  "woman_red_haired_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFE‍\uD83E\uDDB0",
                unicodeVersion: 11,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_red_haired_tone5",
                  "woman_red_haired_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFF‍\uD83E\uDDB0",
                unicodeVersion: 11,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_red_haired", "man_red_hair"],
            surrogates: "\uD83D\uDC68‍\uD83E\uDDB0",
            unicodeVersion: 11,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "man_red_haired_tone1",
                  "man_red_haired_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFB‍\uD83E\uDDB0",
                unicodeVersion: 11,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_red_haired_tone2",
                  "man_red_haired_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFC‍\uD83E\uDDB0",
                unicodeVersion: 11,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_red_haired_tone3",
                  "man_red_haired_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFD‍\uD83E\uDDB0",
                unicodeVersion: 11,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_red_haired_tone4",
                  "man_red_haired_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFE‍\uD83E\uDDB0",
                unicodeVersion: 11,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_red_haired_tone5",
                  "man_red_haired_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFF‍\uD83E\uDDB0",
                unicodeVersion: 11,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["blond_haired_person", "person_with_blond_hair"],
            surrogates: "\uD83D\uDC71",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "blond_haired_person_tone1",
                  "person_with_blond_hair_tone1",
                ],
                surrogates: "\uD83D\uDC71\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "blond_haired_person_tone2",
                  "person_with_blond_hair_tone2",
                ],
                surrogates: "\uD83D\uDC71\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "blond_haired_person_tone3",
                  "person_with_blond_hair_tone3",
                ],
                surrogates: "\uD83D\uDC71\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "blond_haired_person_tone4",
                  "person_with_blond_hair_tone4",
                ],
                surrogates: "\uD83D\uDC71\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "blond_haired_person_tone5",
                  "person_with_blond_hair_tone5",
                ],
                surrogates: "\uD83D\uDC71\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["blond_haired_woman"],
            surrogates: "\uD83D\uDC71‍♀️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "blond_haired_woman_tone1",
                  "blond_haired_woman_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC71\uD83C\uDFFB‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "blond_haired_woman_tone2",
                  "blond_haired_woman_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC71\uD83C\uDFFC‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "blond_haired_woman_tone3",
                  "blond_haired_woman_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC71\uD83C\uDFFD‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "blond_haired_woman_tone4",
                  "blond_haired_woman_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC71\uD83C\uDFFE‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "blond_haired_woman_tone5",
                  "blond_haired_woman_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC71\uD83C\uDFFF‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["blond_haired_man"],
            surrogates: "\uD83D\uDC71‍♂️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "blond_haired_man_tone1",
                  "blond_haired_man_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC71\uD83C\uDFFB‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "blond_haired_man_tone2",
                  "blond_haired_man_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC71\uD83C\uDFFC‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "blond_haired_man_tone3",
                  "blond_haired_man_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC71\uD83C\uDFFD‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "blond_haired_man_tone4",
                  "blond_haired_man_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC71\uD83C\uDFFE‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "blond_haired_man_tone5",
                  "blond_haired_man_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC71\uD83C\uDFFF‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["person_white_hair"],
            surrogates: "\uD83E\uDDD1‍\uD83E\uDDB3",
            unicodeVersion: 12.1,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "person_tone1_white_hair",
                  "person_light_skin_tone_white_hair",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFB‍\uD83E\uDDB3",
                unicodeVersion: 12.1,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_tone2_white_hair",
                  "person_medium_light_skin_tone_white_hair",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFC‍\uD83E\uDDB3",
                unicodeVersion: 12.1,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_tone3_white_hair",
                  "person_medium_skin_tone_white_hair",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFD‍\uD83E\uDDB3",
                unicodeVersion: 12.1,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_tone4_white_hair",
                  "person_medium_dark_skin_tone_white_hair",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFE‍\uD83E\uDDB3",
                unicodeVersion: 12.1,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_tone5_white_hair",
                  "person_dark_skin_tone_white_hair",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFF‍\uD83E\uDDB3",
                unicodeVersion: 12.1,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_white_haired"],
            surrogates: "\uD83D\uDC69‍\uD83E\uDDB3",
            unicodeVersion: 11,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_white_haired_tone1",
                  "woman_white_haired_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFB‍\uD83E\uDDB3",
                unicodeVersion: 11,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_white_haired_tone2",
                  "woman_white_haired_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFC‍\uD83E\uDDB3",
                unicodeVersion: 11,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_white_haired_tone3",
                  "woman_white_haired_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFD‍\uD83E\uDDB3",
                unicodeVersion: 11,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_white_haired_tone4",
                  "woman_white_haired_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFE‍\uD83E\uDDB3",
                unicodeVersion: 11,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_white_haired_tone5",
                  "woman_white_haired_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFF‍\uD83E\uDDB3",
                unicodeVersion: 11,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_white_haired"],
            surrogates: "\uD83D\uDC68‍\uD83E\uDDB3",
            unicodeVersion: 11,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "man_white_haired_tone1",
                  "man_white_haired_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFB‍\uD83E\uDDB3",
                unicodeVersion: 11,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_white_haired_tone2",
                  "man_white_haired_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFC‍\uD83E\uDDB3",
                unicodeVersion: 11,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_white_haired_tone3",
                  "man_white_haired_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFD‍\uD83E\uDDB3",
                unicodeVersion: 11,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_white_haired_tone4",
                  "man_white_haired_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFE‍\uD83E\uDDB3",
                unicodeVersion: 11,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_white_haired_tone5",
                  "man_white_haired_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFF‍\uD83E\uDDB3",
                unicodeVersion: 11,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["person_bald"],
            surrogates: "\uD83E\uDDD1‍\uD83E\uDDB2",
            unicodeVersion: 12.1,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["person_tone1_bald", "person_light_skin_tone_bald"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFB‍\uD83E\uDDB2",
                unicodeVersion: 12.1,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_tone2_bald",
                  "person_medium_light_skin_tone_bald",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFC‍\uD83E\uDDB2",
                unicodeVersion: 12.1,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_tone3_bald", "person_medium_skin_tone_bald"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFD‍\uD83E\uDDB2",
                unicodeVersion: 12.1,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_tone4_bald",
                  "person_medium_dark_skin_tone_bald",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFE‍\uD83E\uDDB2",
                unicodeVersion: 12.1,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_tone5_bald", "person_dark_skin_tone_bald"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFF‍\uD83E\uDDB2",
                unicodeVersion: 12.1,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_bald"],
            surrogates: "\uD83D\uDC69‍\uD83E\uDDB2",
            unicodeVersion: 11,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["woman_bald_tone1", "woman_bald_light_skin_tone"],
                surrogates: "\uD83D\uDC69\uD83C\uDFFB‍\uD83E\uDDB2",
                unicodeVersion: 11,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_bald_tone2",
                  "woman_bald_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFC‍\uD83E\uDDB2",
                unicodeVersion: 11,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_bald_tone3", "woman_bald_medium_skin_tone"],
                surrogates: "\uD83D\uDC69\uD83C\uDFFD‍\uD83E\uDDB2",
                unicodeVersion: 11,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_bald_tone4", "woman_bald_medium_dark_skin_tone"],
                surrogates: "\uD83D\uDC69\uD83C\uDFFE‍\uD83E\uDDB2",
                unicodeVersion: 11,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_bald_tone5", "woman_bald_dark_skin_tone"],
                surrogates: "\uD83D\uDC69\uD83C\uDFFF‍\uD83E\uDDB2",
                unicodeVersion: 11,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_bald"],
            surrogates: "\uD83D\uDC68‍\uD83E\uDDB2",
            unicodeVersion: 11,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["man_bald_tone1", "man_bald_light_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFB‍\uD83E\uDDB2",
                unicodeVersion: 11,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_bald_tone2", "man_bald_medium_light_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFC‍\uD83E\uDDB2",
                unicodeVersion: 11,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_bald_tone3", "man_bald_medium_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFD‍\uD83E\uDDB2",
                unicodeVersion: 11,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_bald_tone4", "man_bald_medium_dark_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFE‍\uD83E\uDDB2",
                unicodeVersion: 11,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_bald_tone5", "man_bald_dark_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFF‍\uD83E\uDDB2",
                unicodeVersion: 11,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["bearded_person", "person_beard"],
            surrogates: "\uD83E\uDDD4",
            unicodeVersion: 10,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "bearded_person_tone1",
                  "bearded_person_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDD4\uD83C\uDFFB",
                unicodeVersion: 10,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "bearded_person_tone2",
                  "bearded_person_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDD4\uD83C\uDFFC",
                unicodeVersion: 10,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "bearded_person_tone3",
                  "bearded_person_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDDD4\uD83C\uDFFD",
                unicodeVersion: 10,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "bearded_person_tone4",
                  "bearded_person_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDD4\uD83C\uDFFE",
                unicodeVersion: 10,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "bearded_person_tone5",
                  "bearded_person_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDD4\uD83C\uDFFF",
                unicodeVersion: 10,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_beard"],
            surrogates: "\uD83E\uDDD4‍♀️",
            unicodeVersion: 13.1,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["woman_tone1_beard", "woman_light_skin_tone_beard"],
                surrogates: "\uD83E\uDDD4\uD83C\uDFFB‍♀️",
                unicodeVersion: 13.1,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_tone2_beard",
                  "woman_medium_light_skin_tone_beard",
                ],
                surrogates: "\uD83E\uDDD4\uD83C\uDFFC‍♀️",
                unicodeVersion: 13.1,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_tone3_beard", "woman_medium_skin_tone_beard"],
                surrogates: "\uD83E\uDDD4\uD83C\uDFFD‍♀️",
                unicodeVersion: 13.1,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_tone4_beard",
                  "woman_medium_dark_skin_tone_beard",
                ],
                surrogates: "\uD83E\uDDD4\uD83C\uDFFE‍♀️",
                unicodeVersion: 13.1,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_tone5_beard", "woman_dark_skin_tone_beard"],
                surrogates: "\uD83E\uDDD4\uD83C\uDFFF‍♀️",
                unicodeVersion: 13.1,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_beard"],
            surrogates: "\uD83E\uDDD4‍♂️",
            unicodeVersion: 13.1,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["man_tone1_beard", "man_light_skin_tone_beard"],
                surrogates: "\uD83E\uDDD4\uD83C\uDFFB‍♂️",
                unicodeVersion: 13.1,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_tone2_beard", "man_medium_light_skin_tone_beard"],
                surrogates: "\uD83E\uDDD4\uD83C\uDFFC‍♂️",
                unicodeVersion: 13.1,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_tone3_beard", "man_medium_skin_tone_beard"],
                surrogates: "\uD83E\uDDD4\uD83C\uDFFD‍♂️",
                unicodeVersion: 13.1,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_tone4_beard", "man_medium_dark_skin_tone_beard"],
                surrogates: "\uD83E\uDDD4\uD83C\uDFFE‍♂️",
                unicodeVersion: 13.1,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_tone5_beard", "man_dark_skin_tone_beard"],
                surrogates: "\uD83E\uDDD4\uD83C\uDFFF‍♂️",
                unicodeVersion: 13.1,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["older_adult", "older_person"],
            surrogates: "\uD83E\uDDD3",
            unicodeVersion: 10,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["older_adult_tone1", "older_adult_light_skin_tone"],
                surrogates: "\uD83E\uDDD3\uD83C\uDFFB",
                unicodeVersion: 10,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "older_adult_tone2",
                  "older_adult_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDD3\uD83C\uDFFC",
                unicodeVersion: 10,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["older_adult_tone3", "older_adult_medium_skin_tone"],
                surrogates: "\uD83E\uDDD3\uD83C\uDFFD",
                unicodeVersion: 10,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "older_adult_tone4",
                  "older_adult_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDD3\uD83C\uDFFE",
                unicodeVersion: 10,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["older_adult_tone5", "older_adult_dark_skin_tone"],
                surrogates: "\uD83E\uDDD3\uD83C\uDFFF",
                unicodeVersion: 10,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["older_woman", "grandma", "old_woman"],
            surrogates: "\uD83D\uDC75",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["older_woman_tone1", "grandma_tone1"],
                surrogates: "\uD83D\uDC75\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["older_woman_tone2", "grandma_tone2"],
                surrogates: "\uD83D\uDC75\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["older_woman_tone3", "grandma_tone3"],
                surrogates: "\uD83D\uDC75\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["older_woman_tone4", "grandma_tone4"],
                surrogates: "\uD83D\uDC75\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["older_woman_tone5", "grandma_tone5"],
                surrogates: "\uD83D\uDC75\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["older_man", "old_man"],
            surrogates: "\uD83D\uDC74",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["older_man_tone1"],
                surrogates: "\uD83D\uDC74\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["older_man_tone2"],
                surrogates: "\uD83D\uDC74\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["older_man_tone3"],
                surrogates: "\uD83D\uDC74\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["older_man_tone4"],
                surrogates: "\uD83D\uDC74\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["older_man_tone5"],
                surrogates: "\uD83D\uDC74\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_with_chinese_cap", "man_with_gua_pi_mao"],
            surrogates: "\uD83D\uDC72",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "man_with_chinese_cap_tone1",
                  "man_with_gua_pi_mao_tone1",
                ],
                surrogates: "\uD83D\uDC72\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_with_chinese_cap_tone2",
                  "man_with_gua_pi_mao_tone2",
                ],
                surrogates: "\uD83D\uDC72\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_with_chinese_cap_tone3",
                  "man_with_gua_pi_mao_tone3",
                ],
                surrogates: "\uD83D\uDC72\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_with_chinese_cap_tone4",
                  "man_with_gua_pi_mao_tone4",
                ],
                surrogates: "\uD83D\uDC72\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_with_chinese_cap_tone5",
                  "man_with_gua_pi_mao_tone5",
                ],
                surrogates: "\uD83D\uDC72\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["person_wearing_turban", "man_with_turban"],
            surrogates: "\uD83D\uDC73",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["person_wearing_turban_tone1", "man_with_turban_tone1"],
                surrogates: "\uD83D\uDC73\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_wearing_turban_tone2", "man_with_turban_tone2"],
                surrogates: "\uD83D\uDC73\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_wearing_turban_tone3", "man_with_turban_tone3"],
                surrogates: "\uD83D\uDC73\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_wearing_turban_tone4", "man_with_turban_tone4"],
                surrogates: "\uD83D\uDC73\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_wearing_turban_tone5", "man_with_turban_tone5"],
                surrogates: "\uD83D\uDC73\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_wearing_turban"],
            surrogates: "\uD83D\uDC73‍♀️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_wearing_turban_tone1",
                  "woman_wearing_turban_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC73\uD83C\uDFFB‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_wearing_turban_tone2",
                  "woman_wearing_turban_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC73\uD83C\uDFFC‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_wearing_turban_tone3",
                  "woman_wearing_turban_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC73\uD83C\uDFFD‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_wearing_turban_tone4",
                  "woman_wearing_turban_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC73\uD83C\uDFFE‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_wearing_turban_tone5",
                  "woman_wearing_turban_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC73\uD83C\uDFFF‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_wearing_turban"],
            surrogates: "\uD83D\uDC73‍♂️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "man_wearing_turban_tone1",
                  "man_wearing_turban_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC73\uD83C\uDFFB‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_wearing_turban_tone2",
                  "man_wearing_turban_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC73\uD83C\uDFFC‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_wearing_turban_tone3",
                  "man_wearing_turban_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC73\uD83C\uDFFD‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_wearing_turban_tone4",
                  "man_wearing_turban_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC73\uD83C\uDFFE‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_wearing_turban_tone5",
                  "man_wearing_turban_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC73\uD83C\uDFFF‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_with_headscarf"],
            surrogates: "\uD83E\uDDD5",
            unicodeVersion: 10,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_with_headscarf_tone1",
                  "woman_with_headscarf_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDD5\uD83C\uDFFB",
                unicodeVersion: 10,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_with_headscarf_tone2",
                  "woman_with_headscarf_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDD5\uD83C\uDFFC",
                unicodeVersion: 10,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_with_headscarf_tone3",
                  "woman_with_headscarf_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDDD5\uD83C\uDFFD",
                unicodeVersion: 10,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_with_headscarf_tone4",
                  "woman_with_headscarf_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDD5\uD83C\uDFFE",
                unicodeVersion: 10,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_with_headscarf_tone5",
                  "woman_with_headscarf_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDD5\uD83C\uDFFF",
                unicodeVersion: 10,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["police_officer", "cop"],
            surrogates: "\uD83D\uDC6E",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["police_officer_tone1", "cop_tone1"],
                surrogates: "\uD83D\uDC6E\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["police_officer_tone2", "cop_tone2"],
                surrogates: "\uD83D\uDC6E\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["police_officer_tone3", "cop_tone3"],
                surrogates: "\uD83D\uDC6E\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["police_officer_tone4", "cop_tone4"],
                surrogates: "\uD83D\uDC6E\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["police_officer_tone5", "cop_tone5"],
                surrogates: "\uD83D\uDC6E\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_police_officer"],
            surrogates: "\uD83D\uDC6E‍♀️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_police_officer_tone1",
                  "woman_police_officer_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC6E\uD83C\uDFFB‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_police_officer_tone2",
                  "woman_police_officer_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC6E\uD83C\uDFFC‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_police_officer_tone3",
                  "woman_police_officer_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC6E\uD83C\uDFFD‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_police_officer_tone4",
                  "woman_police_officer_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC6E\uD83C\uDFFE‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_police_officer_tone5",
                  "woman_police_officer_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC6E\uD83C\uDFFF‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_police_officer"],
            surrogates: "\uD83D\uDC6E‍♂️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "man_police_officer_tone1",
                  "man_police_officer_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC6E\uD83C\uDFFB‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_police_officer_tone2",
                  "man_police_officer_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC6E\uD83C\uDFFC‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_police_officer_tone3",
                  "man_police_officer_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC6E\uD83C\uDFFD‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_police_officer_tone4",
                  "man_police_officer_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC6E\uD83C\uDFFE‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_police_officer_tone5",
                  "man_police_officer_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC6E\uD83C\uDFFF‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["construction_worker"],
            surrogates: "\uD83D\uDC77",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["construction_worker_tone1"],
                surrogates: "\uD83D\uDC77\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["construction_worker_tone2"],
                surrogates: "\uD83D\uDC77\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["construction_worker_tone3"],
                surrogates: "\uD83D\uDC77\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["construction_worker_tone4"],
                surrogates: "\uD83D\uDC77\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["construction_worker_tone5"],
                surrogates: "\uD83D\uDC77\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_construction_worker"],
            surrogates: "\uD83D\uDC77‍♀️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_construction_worker_tone1",
                  "woman_construction_worker_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC77\uD83C\uDFFB‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_construction_worker_tone2",
                  "woman_construction_worker_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC77\uD83C\uDFFC‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_construction_worker_tone3",
                  "woman_construction_worker_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC77\uD83C\uDFFD‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_construction_worker_tone4",
                  "woman_construction_worker_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC77\uD83C\uDFFE‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_construction_worker_tone5",
                  "woman_construction_worker_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC77\uD83C\uDFFF‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_construction_worker"],
            surrogates: "\uD83D\uDC77‍♂️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "man_construction_worker_tone1",
                  "man_construction_worker_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC77\uD83C\uDFFB‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_construction_worker_tone2",
                  "man_construction_worker_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC77\uD83C\uDFFC‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_construction_worker_tone3",
                  "man_construction_worker_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC77\uD83C\uDFFD‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_construction_worker_tone4",
                  "man_construction_worker_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC77\uD83C\uDFFE‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_construction_worker_tone5",
                  "man_construction_worker_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC77\uD83C\uDFFF‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["guard", "guardsman"],
            surrogates: "\uD83D\uDC82",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["guard_tone1", "guardsman_tone1"],
                surrogates: "\uD83D\uDC82\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["guard_tone2", "guardsman_tone2"],
                surrogates: "\uD83D\uDC82\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["guard_tone3", "guardsman_tone3"],
                surrogates: "\uD83D\uDC82\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["guard_tone4", "guardsman_tone4"],
                surrogates: "\uD83D\uDC82\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["guard_tone5", "guardsman_tone5"],
                surrogates: "\uD83D\uDC82\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_guard"],
            surrogates: "\uD83D\uDC82‍♀️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["woman_guard_tone1", "woman_guard_light_skin_tone"],
                surrogates: "\uD83D\uDC82\uD83C\uDFFB‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_guard_tone2",
                  "woman_guard_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC82\uD83C\uDFFC‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_guard_tone3", "woman_guard_medium_skin_tone"],
                surrogates: "\uD83D\uDC82\uD83C\uDFFD‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_guard_tone4",
                  "woman_guard_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC82\uD83C\uDFFE‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_guard_tone5", "woman_guard_dark_skin_tone"],
                surrogates: "\uD83D\uDC82\uD83C\uDFFF‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_guard"],
            surrogates: "\uD83D\uDC82‍♂️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["man_guard_tone1", "man_guard_light_skin_tone"],
                surrogates: "\uD83D\uDC82\uD83C\uDFFB‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_guard_tone2", "man_guard_medium_light_skin_tone"],
                surrogates: "\uD83D\uDC82\uD83C\uDFFC‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_guard_tone3", "man_guard_medium_skin_tone"],
                surrogates: "\uD83D\uDC82\uD83C\uDFFD‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_guard_tone4", "man_guard_medium_dark_skin_tone"],
                surrogates: "\uD83D\uDC82\uD83C\uDFFE‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_guard_tone5", "man_guard_dark_skin_tone"],
                surrogates: "\uD83D\uDC82\uD83C\uDFFF‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["detective", "spy", "sleuth_or_spy"],
            surrogates: "\uD83D\uDD75️",
            unicodeVersion: 7,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["detective_tone1", "spy_tone1", "sleuth_or_spy_tone1"],
                surrogates: "\uD83D\uDD75\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["detective_tone2", "spy_tone2", "sleuth_or_spy_tone2"],
                surrogates: "\uD83D\uDD75\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["detective_tone3", "spy_tone3", "sleuth_or_spy_tone3"],
                surrogates: "\uD83D\uDD75\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["detective_tone4", "spy_tone4", "sleuth_or_spy_tone4"],
                surrogates: "\uD83D\uDD75\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["detective_tone5", "spy_tone5", "sleuth_or_spy_tone5"],
                surrogates: "\uD83D\uDD75\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_detective"],
            surrogates: "\uD83D\uDD75️‍♀️",
            unicodeVersion: 7,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_detective_tone1",
                  "woman_detective_light_skin_tone",
                ],
                surrogates: "\uD83D\uDD75\uD83C\uDFFB‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_detective_tone2",
                  "woman_detective_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDD75\uD83C\uDFFC‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_detective_tone3",
                  "woman_detective_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDD75\uD83C\uDFFD‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_detective_tone4",
                  "woman_detective_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDD75\uD83C\uDFFE‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_detective_tone5",
                  "woman_detective_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDD75\uD83C\uDFFF‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_detective"],
            surrogates: "\uD83D\uDD75️‍♂️",
            unicodeVersion: 7,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["man_detective_tone1", "man_detective_light_skin_tone"],
                surrogates: "\uD83D\uDD75\uD83C\uDFFB‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_detective_tone2",
                  "man_detective_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDD75\uD83C\uDFFC‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_detective_tone3",
                  "man_detective_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDD75\uD83C\uDFFD‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_detective_tone4",
                  "man_detective_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDD75\uD83C\uDFFE‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_detective_tone5", "man_detective_dark_skin_tone"],
                surrogates: "\uD83D\uDD75\uD83C\uDFFF‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["health_worker"],
            surrogates: "\uD83E\uDDD1‍⚕️",
            unicodeVersion: 12.1,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["health_worker_tone1", "health_worker_light_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFB‍⚕️",
                unicodeVersion: 12.1,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "health_worker_tone2",
                  "health_worker_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFC‍⚕️",
                unicodeVersion: 12.1,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "health_worker_tone3",
                  "health_worker_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFD‍⚕️",
                unicodeVersion: 12.1,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "health_worker_tone4",
                  "health_worker_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFE‍⚕️",
                unicodeVersion: 12.1,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["health_worker_tone5", "health_worker_dark_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFF‍⚕️",
                unicodeVersion: 12.1,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_health_worker"],
            surrogates: "\uD83D\uDC69‍⚕️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_health_worker_tone1",
                  "woman_health_worker_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFB‍⚕️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_health_worker_tone2",
                  "woman_health_worker_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFC‍⚕️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_health_worker_tone3",
                  "woman_health_worker_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFD‍⚕️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_health_worker_tone4",
                  "woman_health_worker_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFE‍⚕️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_health_worker_tone5",
                  "woman_health_worker_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFF‍⚕️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_health_worker"],
            surrogates: "\uD83D\uDC68‍⚕️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "man_health_worker_tone1",
                  "man_health_worker_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFB‍⚕️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_health_worker_tone2",
                  "man_health_worker_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFC‍⚕️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_health_worker_tone3",
                  "man_health_worker_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFD‍⚕️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_health_worker_tone4",
                  "man_health_worker_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFE‍⚕️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_health_worker_tone5",
                  "man_health_worker_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFF‍⚕️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["farmer"],
            surrogates: "\uD83E\uDDD1‍\uD83C\uDF3E",
            unicodeVersion: 12.1,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["farmer_tone1", "farmer_light_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFB‍\uD83C\uDF3E",
                unicodeVersion: 12.1,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["farmer_tone2", "farmer_medium_light_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFC‍\uD83C\uDF3E",
                unicodeVersion: 12.1,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["farmer_tone3", "farmer_medium_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFD‍\uD83C\uDF3E",
                unicodeVersion: 12.1,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["farmer_tone4", "farmer_medium_dark_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFE‍\uD83C\uDF3E",
                unicodeVersion: 12.1,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["farmer_tone5", "farmer_dark_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFF‍\uD83C\uDF3E",
                unicodeVersion: 12.1,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_farmer"],
            surrogates: "\uD83D\uDC69‍\uD83C\uDF3E",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["woman_farmer_tone1", "woman_farmer_light_skin_tone"],
                surrogates: "\uD83D\uDC69\uD83C\uDFFB‍\uD83C\uDF3E",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_farmer_tone2",
                  "woman_farmer_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFC‍\uD83C\uDF3E",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_farmer_tone3", "woman_farmer_medium_skin_tone"],
                surrogates: "\uD83D\uDC69\uD83C\uDFFD‍\uD83C\uDF3E",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_farmer_tone4",
                  "woman_farmer_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFE‍\uD83C\uDF3E",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_farmer_tone5", "woman_farmer_dark_skin_tone"],
                surrogates: "\uD83D\uDC69\uD83C\uDFFF‍\uD83C\uDF3E",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_farmer"],
            surrogates: "\uD83D\uDC68‍\uD83C\uDF3E",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["man_farmer_tone1", "man_farmer_light_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFB‍\uD83C\uDF3E",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_farmer_tone2",
                  "man_farmer_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFC‍\uD83C\uDF3E",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_farmer_tone3", "man_farmer_medium_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFD‍\uD83C\uDF3E",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_farmer_tone4", "man_farmer_medium_dark_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFE‍\uD83C\uDF3E",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_farmer_tone5", "man_farmer_dark_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFF‍\uD83C\uDF3E",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["cook"],
            surrogates: "\uD83E\uDDD1‍\uD83C\uDF73",
            unicodeVersion: 12.1,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["cook_tone1", "cook_light_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFB‍\uD83C\uDF73",
                unicodeVersion: 12.1,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["cook_tone2", "cook_medium_light_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFC‍\uD83C\uDF73",
                unicodeVersion: 12.1,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["cook_tone3", "cook_medium_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFD‍\uD83C\uDF73",
                unicodeVersion: 12.1,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["cook_tone4", "cook_medium_dark_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFE‍\uD83C\uDF73",
                unicodeVersion: 12.1,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["cook_tone5", "cook_dark_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFF‍\uD83C\uDF73",
                unicodeVersion: 12.1,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_cook"],
            surrogates: "\uD83D\uDC69‍\uD83C\uDF73",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["woman_cook_tone1", "woman_cook_light_skin_tone"],
                surrogates: "\uD83D\uDC69\uD83C\uDFFB‍\uD83C\uDF73",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_cook_tone2",
                  "woman_cook_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFC‍\uD83C\uDF73",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_cook_tone3", "woman_cook_medium_skin_tone"],
                surrogates: "\uD83D\uDC69\uD83C\uDFFD‍\uD83C\uDF73",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_cook_tone4", "woman_cook_medium_dark_skin_tone"],
                surrogates: "\uD83D\uDC69\uD83C\uDFFE‍\uD83C\uDF73",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_cook_tone5", "woman_cook_dark_skin_tone"],
                surrogates: "\uD83D\uDC69\uD83C\uDFFF‍\uD83C\uDF73",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_cook"],
            surrogates: "\uD83D\uDC68‍\uD83C\uDF73",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["man_cook_tone1", "man_cook_light_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFB‍\uD83C\uDF73",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_cook_tone2", "man_cook_medium_light_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFC‍\uD83C\uDF73",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_cook_tone3", "man_cook_medium_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFD‍\uD83C\uDF73",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_cook_tone4", "man_cook_medium_dark_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFE‍\uD83C\uDF73",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_cook_tone5", "man_cook_dark_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFF‍\uD83C\uDF73",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["student"],
            surrogates: "\uD83E\uDDD1‍\uD83C\uDF93",
            unicodeVersion: 12.1,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["student_tone1", "student_light_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFB‍\uD83C\uDF93",
                unicodeVersion: 12.1,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["student_tone2", "student_medium_light_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFC‍\uD83C\uDF93",
                unicodeVersion: 12.1,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["student_tone3", "student_medium_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFD‍\uD83C\uDF93",
                unicodeVersion: 12.1,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["student_tone4", "student_medium_dark_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFE‍\uD83C\uDF93",
                unicodeVersion: 12.1,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["student_tone5", "student_dark_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFF‍\uD83C\uDF93",
                unicodeVersion: 12.1,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_student"],
            surrogates: "\uD83D\uDC69‍\uD83C\uDF93",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["woman_student_tone1", "woman_student_light_skin_tone"],
                surrogates: "\uD83D\uDC69\uD83C\uDFFB‍\uD83C\uDF93",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_student_tone2",
                  "woman_student_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFC‍\uD83C\uDF93",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_student_tone3",
                  "woman_student_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFD‍\uD83C\uDF93",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_student_tone4",
                  "woman_student_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFE‍\uD83C\uDF93",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_student_tone5", "woman_student_dark_skin_tone"],
                surrogates: "\uD83D\uDC69\uD83C\uDFFF‍\uD83C\uDF93",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_student"],
            surrogates: "\uD83D\uDC68‍\uD83C\uDF93",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["man_student_tone1", "man_student_light_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFB‍\uD83C\uDF93",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_student_tone2",
                  "man_student_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFC‍\uD83C\uDF93",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_student_tone3", "man_student_medium_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFD‍\uD83C\uDF93",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_student_tone4",
                  "man_student_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFE‍\uD83C\uDF93",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_student_tone5", "man_student_dark_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFF‍\uD83C\uDF93",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["singer"],
            surrogates: "\uD83E\uDDD1‍\uD83C\uDFA4",
            unicodeVersion: 12.1,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["singer_tone1", "singer_light_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFB‍\uD83C\uDFA4",
                unicodeVersion: 12.1,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["singer_tone2", "singer_medium_light_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFC‍\uD83C\uDFA4",
                unicodeVersion: 12.1,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["singer_tone3", "singer_medium_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFD‍\uD83C\uDFA4",
                unicodeVersion: 12.1,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["singer_tone4", "singer_medium_dark_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFE‍\uD83C\uDFA4",
                unicodeVersion: 12.1,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["singer_tone5", "singer_dark_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFF‍\uD83C\uDFA4",
                unicodeVersion: 12.1,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_singer"],
            surrogates: "\uD83D\uDC69‍\uD83C\uDFA4",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["woman_singer_tone1", "woman_singer_light_skin_tone"],
                surrogates: "\uD83D\uDC69\uD83C\uDFFB‍\uD83C\uDFA4",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_singer_tone2",
                  "woman_singer_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFC‍\uD83C\uDFA4",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_singer_tone3", "woman_singer_medium_skin_tone"],
                surrogates: "\uD83D\uDC69\uD83C\uDFFD‍\uD83C\uDFA4",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_singer_tone4",
                  "woman_singer_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFE‍\uD83C\uDFA4",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_singer_tone5", "woman_singer_dark_skin_tone"],
                surrogates: "\uD83D\uDC69\uD83C\uDFFF‍\uD83C\uDFA4",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_singer"],
            surrogates: "\uD83D\uDC68‍\uD83C\uDFA4",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["man_singer_tone1", "man_singer_light_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFB‍\uD83C\uDFA4",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_singer_tone2",
                  "man_singer_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFC‍\uD83C\uDFA4",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_singer_tone3", "man_singer_medium_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFD‍\uD83C\uDFA4",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_singer_tone4", "man_singer_medium_dark_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFE‍\uD83C\uDFA4",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_singer_tone5", "man_singer_dark_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFF‍\uD83C\uDFA4",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["teacher"],
            surrogates: "\uD83E\uDDD1‍\uD83C\uDFEB",
            unicodeVersion: 12.1,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["teacher_tone1", "teacher_light_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFB‍\uD83C\uDFEB",
                unicodeVersion: 12.1,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["teacher_tone2", "teacher_medium_light_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFC‍\uD83C\uDFEB",
                unicodeVersion: 12.1,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["teacher_tone3", "teacher_medium_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFD‍\uD83C\uDFEB",
                unicodeVersion: 12.1,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["teacher_tone4", "teacher_medium_dark_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFE‍\uD83C\uDFEB",
                unicodeVersion: 12.1,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["teacher_tone5", "teacher_dark_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFF‍\uD83C\uDFEB",
                unicodeVersion: 12.1,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_teacher"],
            surrogates: "\uD83D\uDC69‍\uD83C\uDFEB",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["woman_teacher_tone1", "woman_teacher_light_skin_tone"],
                surrogates: "\uD83D\uDC69\uD83C\uDFFB‍\uD83C\uDFEB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_teacher_tone2",
                  "woman_teacher_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFC‍\uD83C\uDFEB",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_teacher_tone3",
                  "woman_teacher_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFD‍\uD83C\uDFEB",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_teacher_tone4",
                  "woman_teacher_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFE‍\uD83C\uDFEB",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_teacher_tone5", "woman_teacher_dark_skin_tone"],
                surrogates: "\uD83D\uDC69\uD83C\uDFFF‍\uD83C\uDFEB",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_teacher"],
            surrogates: "\uD83D\uDC68‍\uD83C\uDFEB",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["man_teacher_tone1", "man_teacher_light_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFB‍\uD83C\uDFEB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_teacher_tone2",
                  "man_teacher_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFC‍\uD83C\uDFEB",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_teacher_tone3", "man_teacher_medium_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFD‍\uD83C\uDFEB",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_teacher_tone4",
                  "man_teacher_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFE‍\uD83C\uDFEB",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_teacher_tone5", "man_teacher_dark_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFF‍\uD83C\uDFEB",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["factory_worker"],
            surrogates: "\uD83E\uDDD1‍\uD83C\uDFED",
            unicodeVersion: 12.1,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "factory_worker_tone1",
                  "factory_worker_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFB‍\uD83C\uDFED",
                unicodeVersion: 12.1,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "factory_worker_tone2",
                  "factory_worker_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFC‍\uD83C\uDFED",
                unicodeVersion: 12.1,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "factory_worker_tone3",
                  "factory_worker_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFD‍\uD83C\uDFED",
                unicodeVersion: 12.1,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "factory_worker_tone4",
                  "factory_worker_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFE‍\uD83C\uDFED",
                unicodeVersion: 12.1,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "factory_worker_tone5",
                  "factory_worker_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFF‍\uD83C\uDFED",
                unicodeVersion: 12.1,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_factory_worker"],
            surrogates: "\uD83D\uDC69‍\uD83C\uDFED",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_factory_worker_tone1",
                  "woman_factory_worker_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFB‍\uD83C\uDFED",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_factory_worker_tone2",
                  "woman_factory_worker_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFC‍\uD83C\uDFED",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_factory_worker_tone3",
                  "woman_factory_worker_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFD‍\uD83C\uDFED",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_factory_worker_tone4",
                  "woman_factory_worker_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFE‍\uD83C\uDFED",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_factory_worker_tone5",
                  "woman_factory_worker_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFF‍\uD83C\uDFED",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_factory_worker"],
            surrogates: "\uD83D\uDC68‍\uD83C\uDFED",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "man_factory_worker_tone1",
                  "man_factory_worker_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFB‍\uD83C\uDFED",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_factory_worker_tone2",
                  "man_factory_worker_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFC‍\uD83C\uDFED",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_factory_worker_tone3",
                  "man_factory_worker_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFD‍\uD83C\uDFED",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_factory_worker_tone4",
                  "man_factory_worker_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFE‍\uD83C\uDFED",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_factory_worker_tone5",
                  "man_factory_worker_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFF‍\uD83C\uDFED",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["technologist"],
            surrogates: "\uD83E\uDDD1‍\uD83D\uDCBB",
            unicodeVersion: 12.1,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["technologist_tone1", "technologist_light_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFB‍\uD83D\uDCBB",
                unicodeVersion: 12.1,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "technologist_tone2",
                  "technologist_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFC‍\uD83D\uDCBB",
                unicodeVersion: 12.1,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["technologist_tone3", "technologist_medium_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFD‍\uD83D\uDCBB",
                unicodeVersion: 12.1,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "technologist_tone4",
                  "technologist_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFE‍\uD83D\uDCBB",
                unicodeVersion: 12.1,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["technologist_tone5", "technologist_dark_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFF‍\uD83D\uDCBB",
                unicodeVersion: 12.1,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_technologist"],
            surrogates: "\uD83D\uDC69‍\uD83D\uDCBB",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_technologist_tone1",
                  "woman_technologist_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFB‍\uD83D\uDCBB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_technologist_tone2",
                  "woman_technologist_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFC‍\uD83D\uDCBB",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_technologist_tone3",
                  "woman_technologist_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFD‍\uD83D\uDCBB",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_technologist_tone4",
                  "woman_technologist_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFE‍\uD83D\uDCBB",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_technologist_tone5",
                  "woman_technologist_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFF‍\uD83D\uDCBB",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_technologist"],
            surrogates: "\uD83D\uDC68‍\uD83D\uDCBB",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "man_technologist_tone1",
                  "man_technologist_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFB‍\uD83D\uDCBB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_technologist_tone2",
                  "man_technologist_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFC‍\uD83D\uDCBB",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_technologist_tone3",
                  "man_technologist_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFD‍\uD83D\uDCBB",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_technologist_tone4",
                  "man_technologist_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFE‍\uD83D\uDCBB",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_technologist_tone5",
                  "man_technologist_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFF‍\uD83D\uDCBB",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["office_worker"],
            surrogates: "\uD83E\uDDD1‍\uD83D\uDCBC",
            unicodeVersion: 12.1,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["office_worker_tone1", "office_worker_light_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFB‍\uD83D\uDCBC",
                unicodeVersion: 12.1,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "office_worker_tone2",
                  "office_worker_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFC‍\uD83D\uDCBC",
                unicodeVersion: 12.1,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "office_worker_tone3",
                  "office_worker_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFD‍\uD83D\uDCBC",
                unicodeVersion: 12.1,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "office_worker_tone4",
                  "office_worker_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFE‍\uD83D\uDCBC",
                unicodeVersion: 12.1,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["office_worker_tone5", "office_worker_dark_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFF‍\uD83D\uDCBC",
                unicodeVersion: 12.1,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_office_worker"],
            surrogates: "\uD83D\uDC69‍\uD83D\uDCBC",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_office_worker_tone1",
                  "woman_office_worker_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFB‍\uD83D\uDCBC",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_office_worker_tone2",
                  "woman_office_worker_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFC‍\uD83D\uDCBC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_office_worker_tone3",
                  "woman_office_worker_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFD‍\uD83D\uDCBC",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_office_worker_tone4",
                  "woman_office_worker_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFE‍\uD83D\uDCBC",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_office_worker_tone5",
                  "woman_office_worker_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFF‍\uD83D\uDCBC",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_office_worker"],
            surrogates: "\uD83D\uDC68‍\uD83D\uDCBC",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "man_office_worker_tone1",
                  "man_office_worker_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFB‍\uD83D\uDCBC",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_office_worker_tone2",
                  "man_office_worker_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFC‍\uD83D\uDCBC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_office_worker_tone3",
                  "man_office_worker_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFD‍\uD83D\uDCBC",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_office_worker_tone4",
                  "man_office_worker_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFE‍\uD83D\uDCBC",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_office_worker_tone5",
                  "man_office_worker_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFF‍\uD83D\uDCBC",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["mechanic"],
            surrogates: "\uD83E\uDDD1‍\uD83D\uDD27",
            unicodeVersion: 12.1,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["mechanic_tone1", "mechanic_light_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFB‍\uD83D\uDD27",
                unicodeVersion: 12.1,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["mechanic_tone2", "mechanic_medium_light_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFC‍\uD83D\uDD27",
                unicodeVersion: 12.1,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["mechanic_tone3", "mechanic_medium_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFD‍\uD83D\uDD27",
                unicodeVersion: 12.1,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["mechanic_tone4", "mechanic_medium_dark_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFE‍\uD83D\uDD27",
                unicodeVersion: 12.1,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["mechanic_tone5", "mechanic_dark_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFF‍\uD83D\uDD27",
                unicodeVersion: 12.1,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_mechanic"],
            surrogates: "\uD83D\uDC69‍\uD83D\uDD27",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_mechanic_tone1",
                  "woman_mechanic_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFB‍\uD83D\uDD27",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_mechanic_tone2",
                  "woman_mechanic_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFC‍\uD83D\uDD27",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_mechanic_tone3",
                  "woman_mechanic_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFD‍\uD83D\uDD27",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_mechanic_tone4",
                  "woman_mechanic_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFE‍\uD83D\uDD27",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_mechanic_tone5",
                  "woman_mechanic_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFF‍\uD83D\uDD27",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_mechanic"],
            surrogates: "\uD83D\uDC68‍\uD83D\uDD27",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["man_mechanic_tone1", "man_mechanic_light_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFB‍\uD83D\uDD27",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_mechanic_tone2",
                  "man_mechanic_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFC‍\uD83D\uDD27",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_mechanic_tone3", "man_mechanic_medium_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFD‍\uD83D\uDD27",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_mechanic_tone4",
                  "man_mechanic_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFE‍\uD83D\uDD27",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_mechanic_tone5", "man_mechanic_dark_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFF‍\uD83D\uDD27",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["scientist"],
            surrogates: "\uD83E\uDDD1‍\uD83D\uDD2C",
            unicodeVersion: 12.1,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["scientist_tone1", "scientist_light_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFB‍\uD83D\uDD2C",
                unicodeVersion: 12.1,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["scientist_tone2", "scientist_medium_light_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFC‍\uD83D\uDD2C",
                unicodeVersion: 12.1,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["scientist_tone3", "scientist_medium_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFD‍\uD83D\uDD2C",
                unicodeVersion: 12.1,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["scientist_tone4", "scientist_medium_dark_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFE‍\uD83D\uDD2C",
                unicodeVersion: 12.1,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["scientist_tone5", "scientist_dark_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFF‍\uD83D\uDD2C",
                unicodeVersion: 12.1,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_scientist"],
            surrogates: "\uD83D\uDC69‍\uD83D\uDD2C",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_scientist_tone1",
                  "woman_scientist_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFB‍\uD83D\uDD2C",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_scientist_tone2",
                  "woman_scientist_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFC‍\uD83D\uDD2C",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_scientist_tone3",
                  "woman_scientist_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFD‍\uD83D\uDD2C",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_scientist_tone4",
                  "woman_scientist_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFE‍\uD83D\uDD2C",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_scientist_tone5",
                  "woman_scientist_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFF‍\uD83D\uDD2C",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_scientist"],
            surrogates: "\uD83D\uDC68‍\uD83D\uDD2C",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["man_scientist_tone1", "man_scientist_light_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFB‍\uD83D\uDD2C",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_scientist_tone2",
                  "man_scientist_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFC‍\uD83D\uDD2C",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_scientist_tone3",
                  "man_scientist_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFD‍\uD83D\uDD2C",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_scientist_tone4",
                  "man_scientist_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFE‍\uD83D\uDD2C",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_scientist_tone5", "man_scientist_dark_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFF‍\uD83D\uDD2C",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["artist"],
            surrogates: "\uD83E\uDDD1‍\uD83C\uDFA8",
            unicodeVersion: 12.1,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["artist_tone1", "artist_light_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFB‍\uD83C\uDFA8",
                unicodeVersion: 12.1,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["artist_tone2", "artist_medium_light_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFC‍\uD83C\uDFA8",
                unicodeVersion: 12.1,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["artist_tone3", "artist_medium_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFD‍\uD83C\uDFA8",
                unicodeVersion: 12.1,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["artist_tone4", "artist_medium_dark_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFE‍\uD83C\uDFA8",
                unicodeVersion: 12.1,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["artist_tone5", "artist_dark_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFF‍\uD83C\uDFA8",
                unicodeVersion: 12.1,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_artist"],
            surrogates: "\uD83D\uDC69‍\uD83C\uDFA8",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["woman_artist_tone1", "woman_artist_light_skin_tone"],
                surrogates: "\uD83D\uDC69\uD83C\uDFFB‍\uD83C\uDFA8",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_artist_tone2",
                  "woman_artist_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFC‍\uD83C\uDFA8",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_artist_tone3", "woman_artist_medium_skin_tone"],
                surrogates: "\uD83D\uDC69\uD83C\uDFFD‍\uD83C\uDFA8",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_artist_tone4",
                  "woman_artist_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFE‍\uD83C\uDFA8",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_artist_tone5", "woman_artist_dark_skin_tone"],
                surrogates: "\uD83D\uDC69\uD83C\uDFFF‍\uD83C\uDFA8",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_artist"],
            surrogates: "\uD83D\uDC68‍\uD83C\uDFA8",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["man_artist_tone1", "man_artist_light_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFB‍\uD83C\uDFA8",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_artist_tone2",
                  "man_artist_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFC‍\uD83C\uDFA8",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_artist_tone3", "man_artist_medium_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFD‍\uD83C\uDFA8",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_artist_tone4", "man_artist_medium_dark_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFE‍\uD83C\uDFA8",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_artist_tone5", "man_artist_dark_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFF‍\uD83C\uDFA8",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["firefighter"],
            surrogates: "\uD83E\uDDD1‍\uD83D\uDE92",
            unicodeVersion: 12.1,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["firefighter_tone1", "firefighter_light_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFB‍\uD83D\uDE92",
                unicodeVersion: 12.1,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "firefighter_tone2",
                  "firefighter_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFC‍\uD83D\uDE92",
                unicodeVersion: 12.1,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["firefighter_tone3", "firefighter_medium_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFD‍\uD83D\uDE92",
                unicodeVersion: 12.1,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "firefighter_tone4",
                  "firefighter_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFE‍\uD83D\uDE92",
                unicodeVersion: 12.1,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["firefighter_tone5", "firefighter_dark_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFF‍\uD83D\uDE92",
                unicodeVersion: 12.1,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_firefighter"],
            surrogates: "\uD83D\uDC69‍\uD83D\uDE92",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_firefighter_tone1",
                  "woman_firefighter_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFB‍\uD83D\uDE92",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_firefighter_tone2",
                  "woman_firefighter_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFC‍\uD83D\uDE92",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_firefighter_tone3",
                  "woman_firefighter_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFD‍\uD83D\uDE92",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_firefighter_tone4",
                  "woman_firefighter_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFE‍\uD83D\uDE92",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_firefighter_tone5",
                  "woman_firefighter_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFF‍\uD83D\uDE92",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_firefighter"],
            surrogates: "\uD83D\uDC68‍\uD83D\uDE92",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "man_firefighter_tone1",
                  "man_firefighter_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFB‍\uD83D\uDE92",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_firefighter_tone2",
                  "man_firefighter_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFC‍\uD83D\uDE92",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_firefighter_tone3",
                  "man_firefighter_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFD‍\uD83D\uDE92",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_firefighter_tone4",
                  "man_firefighter_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFE‍\uD83D\uDE92",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_firefighter_tone5",
                  "man_firefighter_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFF‍\uD83D\uDE92",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["pilot"],
            surrogates: "\uD83E\uDDD1‍✈️",
            unicodeVersion: 12.1,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["pilot_tone1", "pilot_light_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFB‍✈️",
                unicodeVersion: 12.1,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["pilot_tone2", "pilot_medium_light_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFC‍✈️",
                unicodeVersion: 12.1,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["pilot_tone3", "pilot_medium_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFD‍✈️",
                unicodeVersion: 12.1,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["pilot_tone4", "pilot_medium_dark_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFE‍✈️",
                unicodeVersion: 12.1,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["pilot_tone5", "pilot_dark_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFF‍✈️",
                unicodeVersion: 12.1,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_pilot"],
            surrogates: "\uD83D\uDC69‍✈️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["woman_pilot_tone1", "woman_pilot_light_skin_tone"],
                surrogates: "\uD83D\uDC69\uD83C\uDFFB‍✈️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_pilot_tone2",
                  "woman_pilot_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFC‍✈️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_pilot_tone3", "woman_pilot_medium_skin_tone"],
                surrogates: "\uD83D\uDC69\uD83C\uDFFD‍✈️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_pilot_tone4",
                  "woman_pilot_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFE‍✈️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_pilot_tone5", "woman_pilot_dark_skin_tone"],
                surrogates: "\uD83D\uDC69\uD83C\uDFFF‍✈️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_pilot"],
            surrogates: "\uD83D\uDC68‍✈️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["man_pilot_tone1", "man_pilot_light_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFB‍✈️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_pilot_tone2", "man_pilot_medium_light_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFC‍✈️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_pilot_tone3", "man_pilot_medium_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFD‍✈️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_pilot_tone4", "man_pilot_medium_dark_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFE‍✈️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_pilot_tone5", "man_pilot_dark_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFF‍✈️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["astronaut"],
            surrogates: "\uD83E\uDDD1‍\uD83D\uDE80",
            unicodeVersion: 12.1,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["astronaut_tone1", "astronaut_light_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFB‍\uD83D\uDE80",
                unicodeVersion: 12.1,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["astronaut_tone2", "astronaut_medium_light_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFC‍\uD83D\uDE80",
                unicodeVersion: 12.1,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["astronaut_tone3", "astronaut_medium_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFD‍\uD83D\uDE80",
                unicodeVersion: 12.1,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["astronaut_tone4", "astronaut_medium_dark_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFE‍\uD83D\uDE80",
                unicodeVersion: 12.1,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["astronaut_tone5", "astronaut_dark_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFF‍\uD83D\uDE80",
                unicodeVersion: 12.1,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_astronaut"],
            surrogates: "\uD83D\uDC69‍\uD83D\uDE80",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_astronaut_tone1",
                  "woman_astronaut_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFB‍\uD83D\uDE80",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_astronaut_tone2",
                  "woman_astronaut_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFC‍\uD83D\uDE80",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_astronaut_tone3",
                  "woman_astronaut_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFD‍\uD83D\uDE80",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_astronaut_tone4",
                  "woman_astronaut_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFE‍\uD83D\uDE80",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_astronaut_tone5",
                  "woman_astronaut_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFF‍\uD83D\uDE80",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_astronaut"],
            surrogates: "\uD83D\uDC68‍\uD83D\uDE80",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["man_astronaut_tone1", "man_astronaut_light_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFB‍\uD83D\uDE80",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_astronaut_tone2",
                  "man_astronaut_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFC‍\uD83D\uDE80",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_astronaut_tone3",
                  "man_astronaut_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFD‍\uD83D\uDE80",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_astronaut_tone4",
                  "man_astronaut_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFE‍\uD83D\uDE80",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_astronaut_tone5", "man_astronaut_dark_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFF‍\uD83D\uDE80",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["judge"],
            surrogates: "\uD83E\uDDD1‍⚖️",
            unicodeVersion: 12.1,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["judge_tone1", "judge_light_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFB‍⚖️",
                unicodeVersion: 12.1,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["judge_tone2", "judge_medium_light_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFC‍⚖️",
                unicodeVersion: 12.1,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["judge_tone3", "judge_medium_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFD‍⚖️",
                unicodeVersion: 12.1,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["judge_tone4", "judge_medium_dark_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFE‍⚖️",
                unicodeVersion: 12.1,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["judge_tone5", "judge_dark_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFF‍⚖️",
                unicodeVersion: 12.1,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_judge"],
            surrogates: "\uD83D\uDC69‍⚖️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["woman_judge_tone1", "woman_judge_light_skin_tone"],
                surrogates: "\uD83D\uDC69\uD83C\uDFFB‍⚖️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_judge_tone2",
                  "woman_judge_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFC‍⚖️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_judge_tone3", "woman_judge_medium_skin_tone"],
                surrogates: "\uD83D\uDC69\uD83C\uDFFD‍⚖️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_judge_tone4",
                  "woman_judge_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFE‍⚖️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_judge_tone5", "woman_judge_dark_skin_tone"],
                surrogates: "\uD83D\uDC69\uD83C\uDFFF‍⚖️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_judge"],
            surrogates: "\uD83D\uDC68‍⚖️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["man_judge_tone1", "man_judge_light_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFB‍⚖️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_judge_tone2", "man_judge_medium_light_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFC‍⚖️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_judge_tone3", "man_judge_medium_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFD‍⚖️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_judge_tone4", "man_judge_medium_dark_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFE‍⚖️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_judge_tone5", "man_judge_dark_skin_tone"],
                surrogates: "\uD83D\uDC68\uD83C\uDFFF‍⚖️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["person_with_veil"],
            surrogates: "\uD83D\uDC70",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["person_with_veil_tone1"],
                surrogates: "\uD83D\uDC70\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_with_veil_tone2"],
                surrogates: "\uD83D\uDC70\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_with_veil_tone3"],
                surrogates: "\uD83D\uDC70\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_with_veil_tone4"],
                surrogates: "\uD83D\uDC70\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_with_veil_tone5"],
                surrogates: "\uD83D\uDC70\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_with_veil", "bride_with_veil"],
            surrogates: "\uD83D\uDC70‍♀️",
            unicodeVersion: 13,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_with_veil_tone1",
                  "woman_with_veil_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC70\uD83C\uDFFB‍♀️",
                unicodeVersion: 13,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_with_veil_tone2",
                  "woman_with_veil_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC70\uD83C\uDFFC‍♀️",
                unicodeVersion: 13,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_with_veil_tone3",
                  "woman_with_veil_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC70\uD83C\uDFFD‍♀️",
                unicodeVersion: 13,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_with_veil_tone4",
                  "woman_with_veil_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC70\uD83C\uDFFE‍♀️",
                unicodeVersion: 13,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_with_veil_tone5",
                  "woman_with_veil_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC70\uD83C\uDFFF‍♀️",
                unicodeVersion: 13,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_with_veil"],
            surrogates: "\uD83D\uDC70‍♂️",
            unicodeVersion: 13,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["man_with_veil_tone1", "man_with_veil_light_skin_tone"],
                surrogates: "\uD83D\uDC70\uD83C\uDFFB‍♂️",
                unicodeVersion: 13,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_with_veil_tone2",
                  "man_with_veil_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC70\uD83C\uDFFC‍♂️",
                unicodeVersion: 13,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_with_veil_tone3",
                  "man_with_veil_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC70\uD83C\uDFFD‍♂️",
                unicodeVersion: 13,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_with_veil_tone4",
                  "man_with_veil_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC70\uD83C\uDFFE‍♂️",
                unicodeVersion: 13,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_with_veil_tone5", "man_with_veil_dark_skin_tone"],
                surrogates: "\uD83D\uDC70\uD83C\uDFFF‍♂️",
                unicodeVersion: 13,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["person_in_tuxedo"],
            surrogates: "\uD83E\uDD35",
            unicodeVersion: 9,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["person_in_tuxedo_tone1", "tuxedo_tone1"],
                surrogates: "\uD83E\uDD35\uD83C\uDFFB",
                unicodeVersion: 9,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_in_tuxedo_tone2", "tuxedo_tone2"],
                surrogates: "\uD83E\uDD35\uD83C\uDFFC",
                unicodeVersion: 9,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_in_tuxedo_tone3", "tuxedo_tone3"],
                surrogates: "\uD83E\uDD35\uD83C\uDFFD",
                unicodeVersion: 9,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_in_tuxedo_tone4", "tuxedo_tone4"],
                surrogates: "\uD83E\uDD35\uD83C\uDFFE",
                unicodeVersion: 9,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_in_tuxedo_tone5", "tuxedo_tone5"],
                surrogates: "\uD83E\uDD35\uD83C\uDFFF",
                unicodeVersion: 9,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_in_tuxedo"],
            surrogates: "\uD83E\uDD35‍♀️",
            unicodeVersion: 13,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_in_tuxedo_tone1",
                  "woman_in_tuxedo_light_skin_tone",
                ],
                surrogates: "\uD83E\uDD35\uD83C\uDFFB‍♀️",
                unicodeVersion: 13,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_in_tuxedo_tone2",
                  "woman_in_tuxedo_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDD35\uD83C\uDFFC‍♀️",
                unicodeVersion: 13,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_in_tuxedo_tone3",
                  "woman_in_tuxedo_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDD35\uD83C\uDFFD‍♀️",
                unicodeVersion: 13,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_in_tuxedo_tone4",
                  "woman_in_tuxedo_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDD35\uD83C\uDFFE‍♀️",
                unicodeVersion: 13,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_in_tuxedo_tone5",
                  "woman_in_tuxedo_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDD35\uD83C\uDFFF‍♀️",
                unicodeVersion: 13,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_in_tuxedo"],
            surrogates: "\uD83E\uDD35‍♂️",
            unicodeVersion: 13,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["man_in_tuxedo_tone1", "man_in_tuxedo_light_skin_tone"],
                surrogates: "\uD83E\uDD35\uD83C\uDFFB‍♂️",
                unicodeVersion: 13,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_in_tuxedo_tone2",
                  "man_in_tuxedo_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDD35\uD83C\uDFFC‍♂️",
                unicodeVersion: 13,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_in_tuxedo_tone3",
                  "man_in_tuxedo_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDD35\uD83C\uDFFD‍♂️",
                unicodeVersion: 13,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_in_tuxedo_tone4",
                  "man_in_tuxedo_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDD35\uD83C\uDFFE‍♂️",
                unicodeVersion: 13,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_in_tuxedo_tone5", "man_in_tuxedo_dark_skin_tone"],
                surrogates: "\uD83E\uDD35\uD83C\uDFFF‍♂️",
                unicodeVersion: 13,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["person_with_crown"],
            surrogates: "\uD83E\uDEC5",
            unicodeVersion: 14,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "person_with_crown_tone1",
                  "person_with_crown_light_skin_tone",
                ],
                surrogates: "\uD83E\uDEC5\uD83C\uDFFB",
                unicodeVersion: 14,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_with_crown_tone2",
                  "person_with_crown_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDEC5\uD83C\uDFFC",
                unicodeVersion: 14,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_with_crown_tone3",
                  "person_with_crown_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDEC5\uD83C\uDFFD",
                unicodeVersion: 14,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_with_crown_tone4",
                  "person_with_crown_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDEC5\uD83C\uDFFE",
                unicodeVersion: 14,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_with_crown_tone5",
                  "person_with_crown_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDEC5\uD83C\uDFFF",
                unicodeVersion: 14,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["princess"],
            surrogates: "\uD83D\uDC78",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["princess_tone1"],
                surrogates: "\uD83D\uDC78\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["princess_tone2"],
                surrogates: "\uD83D\uDC78\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["princess_tone3"],
                surrogates: "\uD83D\uDC78\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["princess_tone4"],
                surrogates: "\uD83D\uDC78\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["princess_tone5"],
                surrogates: "\uD83D\uDC78\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["prince"],
            surrogates: "\uD83E\uDD34",
            unicodeVersion: 9,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["prince_tone1"],
                surrogates: "\uD83E\uDD34\uD83C\uDFFB",
                unicodeVersion: 9,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["prince_tone2"],
                surrogates: "\uD83E\uDD34\uD83C\uDFFC",
                unicodeVersion: 9,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["prince_tone3"],
                surrogates: "\uD83E\uDD34\uD83C\uDFFD",
                unicodeVersion: 9,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["prince_tone4"],
                surrogates: "\uD83E\uDD34\uD83C\uDFFE",
                unicodeVersion: 9,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["prince_tone5"],
                surrogates: "\uD83E\uDD34\uD83C\uDFFF",
                unicodeVersion: 9,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["superhero"],
            surrogates: "\uD83E\uDDB8",
            unicodeVersion: 11,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["superhero_tone1", "superhero_light_skin_tone"],
                surrogates: "\uD83E\uDDB8\uD83C\uDFFB",
                unicodeVersion: 11,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["superhero_tone2", "superhero_medium_light_skin_tone"],
                surrogates: "\uD83E\uDDB8\uD83C\uDFFC",
                unicodeVersion: 11,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["superhero_tone3", "superhero_medium_skin_tone"],
                surrogates: "\uD83E\uDDB8\uD83C\uDFFD",
                unicodeVersion: 11,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["superhero_tone4", "superhero_medium_dark_skin_tone"],
                surrogates: "\uD83E\uDDB8\uD83C\uDFFE",
                unicodeVersion: 11,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["superhero_tone5", "superhero_dark_skin_tone"],
                surrogates: "\uD83E\uDDB8\uD83C\uDFFF",
                unicodeVersion: 11,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_superhero"],
            surrogates: "\uD83E\uDDB8‍♀️",
            unicodeVersion: 11,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_superhero_tone1",
                  "woman_superhero_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDB8\uD83C\uDFFB‍♀️",
                unicodeVersion: 11,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_superhero_tone2",
                  "woman_superhero_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDB8\uD83C\uDFFC‍♀️",
                unicodeVersion: 11,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_superhero_tone3",
                  "woman_superhero_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDDB8\uD83C\uDFFD‍♀️",
                unicodeVersion: 11,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_superhero_tone4",
                  "woman_superhero_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDB8\uD83C\uDFFE‍♀️",
                unicodeVersion: 11,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_superhero_tone5",
                  "woman_superhero_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDB8\uD83C\uDFFF‍♀️",
                unicodeVersion: 11,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_superhero"],
            surrogates: "\uD83E\uDDB8‍♂️",
            unicodeVersion: 11,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["man_superhero_tone1", "man_superhero_light_skin_tone"],
                surrogates: "\uD83E\uDDB8\uD83C\uDFFB‍♂️",
                unicodeVersion: 11,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_superhero_tone2",
                  "man_superhero_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDB8\uD83C\uDFFC‍♂️",
                unicodeVersion: 11,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_superhero_tone3",
                  "man_superhero_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDDB8\uD83C\uDFFD‍♂️",
                unicodeVersion: 11,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_superhero_tone4",
                  "man_superhero_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDB8\uD83C\uDFFE‍♂️",
                unicodeVersion: 11,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_superhero_tone5", "man_superhero_dark_skin_tone"],
                surrogates: "\uD83E\uDDB8\uD83C\uDFFF‍♂️",
                unicodeVersion: 11,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["supervillain"],
            surrogates: "\uD83E\uDDB9",
            unicodeVersion: 11,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["supervillain_tone1", "supervillain_light_skin_tone"],
                surrogates: "\uD83E\uDDB9\uD83C\uDFFB",
                unicodeVersion: 11,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "supervillain_tone2",
                  "supervillain_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDB9\uD83C\uDFFC",
                unicodeVersion: 11,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["supervillain_tone3", "supervillain_medium_skin_tone"],
                surrogates: "\uD83E\uDDB9\uD83C\uDFFD",
                unicodeVersion: 11,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "supervillain_tone4",
                  "supervillain_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDB9\uD83C\uDFFE",
                unicodeVersion: 11,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["supervillain_tone5", "supervillain_dark_skin_tone"],
                surrogates: "\uD83E\uDDB9\uD83C\uDFFF",
                unicodeVersion: 11,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_supervillain"],
            surrogates: "\uD83E\uDDB9‍♀️",
            unicodeVersion: 11,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_supervillain_tone1",
                  "woman_supervillain_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDB9\uD83C\uDFFB‍♀️",
                unicodeVersion: 11,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_supervillain_tone2",
                  "woman_supervillain_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDB9\uD83C\uDFFC‍♀️",
                unicodeVersion: 11,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_supervillain_tone3",
                  "woman_supervillain_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDDB9\uD83C\uDFFD‍♀️",
                unicodeVersion: 11,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_supervillain_tone4",
                  "woman_supervillain_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDB9\uD83C\uDFFE‍♀️",
                unicodeVersion: 11,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_supervillain_tone5",
                  "woman_supervillain_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDB9\uD83C\uDFFF‍♀️",
                unicodeVersion: 11,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_supervillain"],
            surrogates: "\uD83E\uDDB9‍♂️",
            unicodeVersion: 11,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "man_supervillain_tone1",
                  "man_supervillain_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDB9\uD83C\uDFFB‍♂️",
                unicodeVersion: 11,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_supervillain_tone2",
                  "man_supervillain_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDB9\uD83C\uDFFC‍♂️",
                unicodeVersion: 11,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_supervillain_tone3",
                  "man_supervillain_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDDB9\uD83C\uDFFD‍♂️",
                unicodeVersion: 11,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_supervillain_tone4",
                  "man_supervillain_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDB9\uD83C\uDFFE‍♂️",
                unicodeVersion: 11,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_supervillain_tone5",
                  "man_supervillain_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDB9\uD83C\uDFFF‍♂️",
                unicodeVersion: 11,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["ninja"],
            surrogates: "\uD83E\uDD77",
            unicodeVersion: 13,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["ninja_tone1", "ninja_light_skin_tone"],
                surrogates: "\uD83E\uDD77\uD83C\uDFFB",
                unicodeVersion: 13,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["ninja_tone2", "ninja_medium_light_skin_tone"],
                surrogates: "\uD83E\uDD77\uD83C\uDFFC",
                unicodeVersion: 13,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["ninja_tone3", "ninja_medium_skin_tone"],
                surrogates: "\uD83E\uDD77\uD83C\uDFFD",
                unicodeVersion: 13,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["ninja_tone4", "ninja_medium_dark_skin_tone"],
                surrogates: "\uD83E\uDD77\uD83C\uDFFE",
                unicodeVersion: 13,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["ninja_tone5", "ninja_dark_skin_tone"],
                surrogates: "\uD83E\uDD77\uD83C\uDFFF",
                unicodeVersion: 13,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["mx_claus"],
            surrogates: "\uD83E\uDDD1‍\uD83C\uDF84",
            unicodeVersion: 13,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["mx_claus_tone1", "mx_claus_light_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFB‍\uD83C\uDF84",
                unicodeVersion: 13,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["mx_claus_tone2", "mx_claus_medium_light_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFC‍\uD83C\uDF84",
                unicodeVersion: 13,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["mx_claus_tone3", "mx_claus_medium_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFD‍\uD83C\uDF84",
                unicodeVersion: 13,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["mx_claus_tone4", "mx_claus_medium_dark_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFE‍\uD83C\uDF84",
                unicodeVersion: 13,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["mx_claus_tone5", "mx_claus_dark_skin_tone"],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFF‍\uD83C\uDF84",
                unicodeVersion: 13,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["mrs_claus", "mother_christmas"],
            surrogates: "\uD83E\uDD36",
            unicodeVersion: 9,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["mrs_claus_tone1", "mother_christmas_tone1"],
                surrogates: "\uD83E\uDD36\uD83C\uDFFB",
                unicodeVersion: 9,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["mrs_claus_tone2", "mother_christmas_tone2"],
                surrogates: "\uD83E\uDD36\uD83C\uDFFC",
                unicodeVersion: 9,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["mrs_claus_tone3", "mother_christmas_tone3"],
                surrogates: "\uD83E\uDD36\uD83C\uDFFD",
                unicodeVersion: 9,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["mrs_claus_tone4", "mother_christmas_tone4"],
                surrogates: "\uD83E\uDD36\uD83C\uDFFE",
                unicodeVersion: 9,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["mrs_claus_tone5", "mother_christmas_tone5"],
                surrogates: "\uD83E\uDD36\uD83C\uDFFF",
                unicodeVersion: 9,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["santa", "santa_claus"],
            surrogates: "\uD83C\uDF85",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["santa_tone1"],
                surrogates: "\uD83C\uDF85\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["santa_tone2"],
                surrogates: "\uD83C\uDF85\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["santa_tone3"],
                surrogates: "\uD83C\uDF85\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["santa_tone4"],
                surrogates: "\uD83C\uDF85\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["santa_tone5"],
                surrogates: "\uD83C\uDF85\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["mage"],
            surrogates: "\uD83E\uDDD9",
            unicodeVersion: 10,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["mage_tone1", "mage_light_skin_tone"],
                surrogates: "\uD83E\uDDD9\uD83C\uDFFB",
                unicodeVersion: 10,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["mage_tone2", "mage_medium_light_skin_tone"],
                surrogates: "\uD83E\uDDD9\uD83C\uDFFC",
                unicodeVersion: 10,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["mage_tone3", "mage_medium_skin_tone"],
                surrogates: "\uD83E\uDDD9\uD83C\uDFFD",
                unicodeVersion: 10,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["mage_tone4", "mage_medium_dark_skin_tone"],
                surrogates: "\uD83E\uDDD9\uD83C\uDFFE",
                unicodeVersion: 10,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["mage_tone5", "mage_dark_skin_tone"],
                surrogates: "\uD83E\uDDD9\uD83C\uDFFF",
                unicodeVersion: 10,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_mage"],
            surrogates: "\uD83E\uDDD9‍♀️",
            unicodeVersion: 10,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["woman_mage_tone1", "woman_mage_light_skin_tone"],
                surrogates: "\uD83E\uDDD9\uD83C\uDFFB‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_mage_tone2",
                  "woman_mage_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDD9\uD83C\uDFFC‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_mage_tone3", "woman_mage_medium_skin_tone"],
                surrogates: "\uD83E\uDDD9\uD83C\uDFFD‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_mage_tone4", "woman_mage_medium_dark_skin_tone"],
                surrogates: "\uD83E\uDDD9\uD83C\uDFFE‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_mage_tone5", "woman_mage_dark_skin_tone"],
                surrogates: "\uD83E\uDDD9\uD83C\uDFFF‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_mage"],
            surrogates: "\uD83E\uDDD9‍♂️",
            unicodeVersion: 10,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["man_mage_tone1", "man_mage_light_skin_tone"],
                surrogates: "\uD83E\uDDD9\uD83C\uDFFB‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_mage_tone2", "man_mage_medium_light_skin_tone"],
                surrogates: "\uD83E\uDDD9\uD83C\uDFFC‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_mage_tone3", "man_mage_medium_skin_tone"],
                surrogates: "\uD83E\uDDD9\uD83C\uDFFD‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_mage_tone4", "man_mage_medium_dark_skin_tone"],
                surrogates: "\uD83E\uDDD9\uD83C\uDFFE‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_mage_tone5", "man_mage_dark_skin_tone"],
                surrogates: "\uD83E\uDDD9\uD83C\uDFFF‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["elf"],
            surrogates: "\uD83E\uDDDD",
            unicodeVersion: 10,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["elf_tone1", "elf_light_skin_tone"],
                surrogates: "\uD83E\uDDDD\uD83C\uDFFB",
                unicodeVersion: 10,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["elf_tone2", "elf_medium_light_skin_tone"],
                surrogates: "\uD83E\uDDDD\uD83C\uDFFC",
                unicodeVersion: 10,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["elf_tone3", "elf_medium_skin_tone"],
                surrogates: "\uD83E\uDDDD\uD83C\uDFFD",
                unicodeVersion: 10,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["elf_tone4", "elf_medium_dark_skin_tone"],
                surrogates: "\uD83E\uDDDD\uD83C\uDFFE",
                unicodeVersion: 10,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["elf_tone5", "elf_dark_skin_tone"],
                surrogates: "\uD83E\uDDDD\uD83C\uDFFF",
                unicodeVersion: 10,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_elf"],
            surrogates: "\uD83E\uDDDD‍♀️",
            unicodeVersion: 10,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["woman_elf_tone1", "woman_elf_light_skin_tone"],
                surrogates: "\uD83E\uDDDD\uD83C\uDFFB‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_elf_tone2", "woman_elf_medium_light_skin_tone"],
                surrogates: "\uD83E\uDDDD\uD83C\uDFFC‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_elf_tone3", "woman_elf_medium_skin_tone"],
                surrogates: "\uD83E\uDDDD\uD83C\uDFFD‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_elf_tone4", "woman_elf_medium_dark_skin_tone"],
                surrogates: "\uD83E\uDDDD\uD83C\uDFFE‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_elf_tone5", "woman_elf_dark_skin_tone"],
                surrogates: "\uD83E\uDDDD\uD83C\uDFFF‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_elf"],
            surrogates: "\uD83E\uDDDD‍♂️",
            unicodeVersion: 10,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["man_elf_tone1", "man_elf_light_skin_tone"],
                surrogates: "\uD83E\uDDDD\uD83C\uDFFB‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_elf_tone2", "man_elf_medium_light_skin_tone"],
                surrogates: "\uD83E\uDDDD\uD83C\uDFFC‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_elf_tone3", "man_elf_medium_skin_tone"],
                surrogates: "\uD83E\uDDDD\uD83C\uDFFD‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_elf_tone4", "man_elf_medium_dark_skin_tone"],
                surrogates: "\uD83E\uDDDD\uD83C\uDFFE‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_elf_tone5", "man_elf_dark_skin_tone"],
                surrogates: "\uD83E\uDDDD\uD83C\uDFFF‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          { names: ["troll"], surrogates: "\uD83E\uDDCC", unicodeVersion: 14 },
          {
            names: ["vampire"],
            surrogates: "\uD83E\uDDDB",
            unicodeVersion: 10,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["vampire_tone1", "vampire_light_skin_tone"],
                surrogates: "\uD83E\uDDDB\uD83C\uDFFB",
                unicodeVersion: 10,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["vampire_tone2", "vampire_medium_light_skin_tone"],
                surrogates: "\uD83E\uDDDB\uD83C\uDFFC",
                unicodeVersion: 10,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["vampire_tone3", "vampire_medium_skin_tone"],
                surrogates: "\uD83E\uDDDB\uD83C\uDFFD",
                unicodeVersion: 10,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["vampire_tone4", "vampire_medium_dark_skin_tone"],
                surrogates: "\uD83E\uDDDB\uD83C\uDFFE",
                unicodeVersion: 10,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["vampire_tone5", "vampire_dark_skin_tone"],
                surrogates: "\uD83E\uDDDB\uD83C\uDFFF",
                unicodeVersion: 10,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_vampire"],
            surrogates: "\uD83E\uDDDB‍♀️",
            unicodeVersion: 10,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["woman_vampire_tone1", "woman_vampire_light_skin_tone"],
                surrogates: "\uD83E\uDDDB\uD83C\uDFFB‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_vampire_tone2",
                  "woman_vampire_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDDB\uD83C\uDFFC‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_vampire_tone3",
                  "woman_vampire_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDDDB\uD83C\uDFFD‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_vampire_tone4",
                  "woman_vampire_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDDB\uD83C\uDFFE‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_vampire_tone5", "woman_vampire_dark_skin_tone"],
                surrogates: "\uD83E\uDDDB\uD83C\uDFFF‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_vampire"],
            surrogates: "\uD83E\uDDDB‍♂️",
            unicodeVersion: 10,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["man_vampire_tone1", "man_vampire_light_skin_tone"],
                surrogates: "\uD83E\uDDDB\uD83C\uDFFB‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_vampire_tone2",
                  "man_vampire_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDDB\uD83C\uDFFC‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_vampire_tone3", "man_vampire_medium_skin_tone"],
                surrogates: "\uD83E\uDDDB\uD83C\uDFFD‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_vampire_tone4",
                  "man_vampire_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDDB\uD83C\uDFFE‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_vampire_tone5", "man_vampire_dark_skin_tone"],
                surrogates: "\uD83E\uDDDB\uD83C\uDFFF‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          { names: ["zombie"], surrogates: "\uD83E\uDDDF", unicodeVersion: 10 },
          {
            names: ["woman_zombie"],
            surrogates: "\uD83E\uDDDF‍♀️",
            unicodeVersion: 10,
          },
          {
            names: ["man_zombie"],
            surrogates: "\uD83E\uDDDF‍♂️",
            unicodeVersion: 10,
          },
          { names: ["genie"], surrogates: "\uD83E\uDDDE", unicodeVersion: 10 },
          {
            names: ["woman_genie"],
            surrogates: "\uD83E\uDDDE‍♀️",
            unicodeVersion: 10,
          },
          {
            names: ["man_genie"],
            surrogates: "\uD83E\uDDDE‍♂️",
            unicodeVersion: 10,
          },
          {
            names: ["merperson"],
            surrogates: "\uD83E\uDDDC",
            unicodeVersion: 10,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["merperson_tone1", "merperson_light_skin_tone"],
                surrogates: "\uD83E\uDDDC\uD83C\uDFFB",
                unicodeVersion: 10,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["merperson_tone2", "merperson_medium_light_skin_tone"],
                surrogates: "\uD83E\uDDDC\uD83C\uDFFC",
                unicodeVersion: 10,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["merperson_tone3", "merperson_medium_skin_tone"],
                surrogates: "\uD83E\uDDDC\uD83C\uDFFD",
                unicodeVersion: 10,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["merperson_tone4", "merperson_medium_dark_skin_tone"],
                surrogates: "\uD83E\uDDDC\uD83C\uDFFE",
                unicodeVersion: 10,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["merperson_tone5", "merperson_dark_skin_tone"],
                surrogates: "\uD83E\uDDDC\uD83C\uDFFF",
                unicodeVersion: 10,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["mermaid"],
            surrogates: "\uD83E\uDDDC‍♀️",
            unicodeVersion: 10,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["mermaid_tone1", "mermaid_light_skin_tone"],
                surrogates: "\uD83E\uDDDC\uD83C\uDFFB‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["mermaid_tone2", "mermaid_medium_light_skin_tone"],
                surrogates: "\uD83E\uDDDC\uD83C\uDFFC‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["mermaid_tone3", "mermaid_medium_skin_tone"],
                surrogates: "\uD83E\uDDDC\uD83C\uDFFD‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["mermaid_tone4", "mermaid_medium_dark_skin_tone"],
                surrogates: "\uD83E\uDDDC\uD83C\uDFFE‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["mermaid_tone5", "mermaid_dark_skin_tone"],
                surrogates: "\uD83E\uDDDC\uD83C\uDFFF‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["merman"],
            surrogates: "\uD83E\uDDDC‍♂️",
            unicodeVersion: 10,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["merman_tone1", "merman_light_skin_tone"],
                surrogates: "\uD83E\uDDDC\uD83C\uDFFB‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["merman_tone2", "merman_medium_light_skin_tone"],
                surrogates: "\uD83E\uDDDC\uD83C\uDFFC‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["merman_tone3", "merman_medium_skin_tone"],
                surrogates: "\uD83E\uDDDC\uD83C\uDFFD‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["merman_tone4", "merman_medium_dark_skin_tone"],
                surrogates: "\uD83E\uDDDC\uD83C\uDFFE‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["merman_tone5", "merman_dark_skin_tone"],
                surrogates: "\uD83E\uDDDC\uD83C\uDFFF‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["fairy"],
            surrogates: "\uD83E\uDDDA",
            unicodeVersion: 10,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["fairy_tone1", "fairy_light_skin_tone"],
                surrogates: "\uD83E\uDDDA\uD83C\uDFFB",
                unicodeVersion: 10,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["fairy_tone2", "fairy_medium_light_skin_tone"],
                surrogates: "\uD83E\uDDDA\uD83C\uDFFC",
                unicodeVersion: 10,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["fairy_tone3", "fairy_medium_skin_tone"],
                surrogates: "\uD83E\uDDDA\uD83C\uDFFD",
                unicodeVersion: 10,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["fairy_tone4", "fairy_medium_dark_skin_tone"],
                surrogates: "\uD83E\uDDDA\uD83C\uDFFE",
                unicodeVersion: 10,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["fairy_tone5", "fairy_dark_skin_tone"],
                surrogates: "\uD83E\uDDDA\uD83C\uDFFF",
                unicodeVersion: 10,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_fairy"],
            surrogates: "\uD83E\uDDDA‍♀️",
            unicodeVersion: 10,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["woman_fairy_tone1", "woman_fairy_light_skin_tone"],
                surrogates: "\uD83E\uDDDA\uD83C\uDFFB‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_fairy_tone2",
                  "woman_fairy_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDDA\uD83C\uDFFC‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_fairy_tone3", "woman_fairy_medium_skin_tone"],
                surrogates: "\uD83E\uDDDA\uD83C\uDFFD‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_fairy_tone4",
                  "woman_fairy_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDDA\uD83C\uDFFE‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_fairy_tone5", "woman_fairy_dark_skin_tone"],
                surrogates: "\uD83E\uDDDA\uD83C\uDFFF‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_fairy"],
            surrogates: "\uD83E\uDDDA‍♂️",
            unicodeVersion: 10,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["man_fairy_tone1", "man_fairy_light_skin_tone"],
                surrogates: "\uD83E\uDDDA\uD83C\uDFFB‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_fairy_tone2", "man_fairy_medium_light_skin_tone"],
                surrogates: "\uD83E\uDDDA\uD83C\uDFFC‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_fairy_tone3", "man_fairy_medium_skin_tone"],
                surrogates: "\uD83E\uDDDA\uD83C\uDFFD‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_fairy_tone4", "man_fairy_medium_dark_skin_tone"],
                surrogates: "\uD83E\uDDDA\uD83C\uDFFE‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_fairy_tone5", "man_fairy_dark_skin_tone"],
                surrogates: "\uD83E\uDDDA\uD83C\uDFFF‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["angel", "baby_angel"],
            surrogates: "\uD83D\uDC7C",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["angel_tone1"],
                surrogates: "\uD83D\uDC7C\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["angel_tone2"],
                surrogates: "\uD83D\uDC7C\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["angel_tone3"],
                surrogates: "\uD83D\uDC7C\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["angel_tone4"],
                surrogates: "\uD83D\uDC7C\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["angel_tone5"],
                surrogates: "\uD83D\uDC7C\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["pregnant_person"],
            surrogates: "\uD83E\uDEC4",
            unicodeVersion: 14,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "pregnant_person_tone1",
                  "pregnant_person_light_skin_tone",
                ],
                surrogates: "\uD83E\uDEC4\uD83C\uDFFB",
                unicodeVersion: 14,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "pregnant_person_tone2",
                  "pregnant_person_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDEC4\uD83C\uDFFC",
                unicodeVersion: 14,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "pregnant_person_tone3",
                  "pregnant_person_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDEC4\uD83C\uDFFD",
                unicodeVersion: 14,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "pregnant_person_tone4",
                  "pregnant_person_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDEC4\uD83C\uDFFE",
                unicodeVersion: 14,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "pregnant_person_tone5",
                  "pregnant_person_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDEC4\uD83C\uDFFF",
                unicodeVersion: 14,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["pregnant_woman", "expecting_woman"],
            surrogates: "\uD83E\uDD30",
            unicodeVersion: 9,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["pregnant_woman_tone1", "expecting_woman_tone1"],
                surrogates: "\uD83E\uDD30\uD83C\uDFFB",
                unicodeVersion: 9,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["pregnant_woman_tone2", "expecting_woman_tone2"],
                surrogates: "\uD83E\uDD30\uD83C\uDFFC",
                unicodeVersion: 9,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["pregnant_woman_tone3", "expecting_woman_tone3"],
                surrogates: "\uD83E\uDD30\uD83C\uDFFD",
                unicodeVersion: 9,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["pregnant_woman_tone4", "expecting_woman_tone4"],
                surrogates: "\uD83E\uDD30\uD83C\uDFFE",
                unicodeVersion: 9,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["pregnant_woman_tone5", "expecting_woman_tone5"],
                surrogates: "\uD83E\uDD30\uD83C\uDFFF",
                unicodeVersion: 9,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["pregnant_man"],
            surrogates: "\uD83E\uDEC3",
            unicodeVersion: 14,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["pregnant_man_tone1", "pregnant_man_light_skin_tone"],
                surrogates: "\uD83E\uDEC3\uD83C\uDFFB",
                unicodeVersion: 14,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "pregnant_man_tone2",
                  "pregnant_man_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDEC3\uD83C\uDFFC",
                unicodeVersion: 14,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["pregnant_man_tone3", "pregnant_man_medium_skin_tone"],
                surrogates: "\uD83E\uDEC3\uD83C\uDFFD",
                unicodeVersion: 14,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "pregnant_man_tone4",
                  "pregnant_man_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDEC3\uD83C\uDFFE",
                unicodeVersion: 14,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["pregnant_man_tone5", "pregnant_man_dark_skin_tone"],
                surrogates: "\uD83E\uDEC3\uD83C\uDFFF",
                unicodeVersion: 14,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["breast_feeding"],
            surrogates: "\uD83E\uDD31",
            unicodeVersion: 10,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "breast_feeding_tone1",
                  "breast_feeding_light_skin_tone",
                ],
                surrogates: "\uD83E\uDD31\uD83C\uDFFB",
                unicodeVersion: 10,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "breast_feeding_tone2",
                  "breast_feeding_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDD31\uD83C\uDFFC",
                unicodeVersion: 10,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "breast_feeding_tone3",
                  "breast_feeding_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDD31\uD83C\uDFFD",
                unicodeVersion: 10,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "breast_feeding_tone4",
                  "breast_feeding_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDD31\uD83C\uDFFE",
                unicodeVersion: 10,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "breast_feeding_tone5",
                  "breast_feeding_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDD31\uD83C\uDFFF",
                unicodeVersion: 10,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["person_feeding_baby"],
            surrogates: "\uD83E\uDDD1‍\uD83C\uDF7C",
            unicodeVersion: 13,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "person_feeding_baby_tone1",
                  "person_feeding_baby_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFB‍\uD83C\uDF7C",
                unicodeVersion: 13,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_feeding_baby_tone2",
                  "person_feeding_baby_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFC‍\uD83C\uDF7C",
                unicodeVersion: 13,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_feeding_baby_tone3",
                  "person_feeding_baby_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFD‍\uD83C\uDF7C",
                unicodeVersion: 13,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_feeding_baby_tone4",
                  "person_feeding_baby_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFE‍\uD83C\uDF7C",
                unicodeVersion: 13,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_feeding_baby_tone5",
                  "person_feeding_baby_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFF‍\uD83C\uDF7C",
                unicodeVersion: 13,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_feeding_baby"],
            surrogates: "\uD83D\uDC69‍\uD83C\uDF7C",
            unicodeVersion: 13,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_feeding_baby_tone1",
                  "woman_feeding_baby_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFB‍\uD83C\uDF7C",
                unicodeVersion: 13,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_feeding_baby_tone2",
                  "woman_feeding_baby_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFC‍\uD83C\uDF7C",
                unicodeVersion: 13,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_feeding_baby_tone3",
                  "woman_feeding_baby_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFD‍\uD83C\uDF7C",
                unicodeVersion: 13,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_feeding_baby_tone4",
                  "woman_feeding_baby_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFE‍\uD83C\uDF7C",
                unicodeVersion: 13,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_feeding_baby_tone5",
                  "woman_feeding_baby_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFF‍\uD83C\uDF7C",
                unicodeVersion: 13,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_feeding_baby"],
            surrogates: "\uD83D\uDC68‍\uD83C\uDF7C",
            unicodeVersion: 13,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "man_feeding_baby_tone1",
                  "man_feeding_baby_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFB‍\uD83C\uDF7C",
                unicodeVersion: 13,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_feeding_baby_tone2",
                  "man_feeding_baby_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFC‍\uD83C\uDF7C",
                unicodeVersion: 13,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_feeding_baby_tone3",
                  "man_feeding_baby_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFD‍\uD83C\uDF7C",
                unicodeVersion: 13,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_feeding_baby_tone4",
                  "man_feeding_baby_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFE‍\uD83C\uDF7C",
                unicodeVersion: 13,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_feeding_baby_tone5",
                  "man_feeding_baby_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFF‍\uD83C\uDF7C",
                unicodeVersion: 13,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["person_bowing", "bow"],
            surrogates: "\uD83D\uDE47",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["person_bowing_tone1", "bow_tone1"],
                surrogates: "\uD83D\uDE47\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_bowing_tone2", "bow_tone2"],
                surrogates: "\uD83D\uDE47\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_bowing_tone3", "bow_tone3"],
                surrogates: "\uD83D\uDE47\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_bowing_tone4", "bow_tone4"],
                surrogates: "\uD83D\uDE47\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_bowing_tone5", "bow_tone5"],
                surrogates: "\uD83D\uDE47\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_bowing"],
            surrogates: "\uD83D\uDE47‍♀️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["woman_bowing_tone1", "woman_bowing_light_skin_tone"],
                surrogates: "\uD83D\uDE47\uD83C\uDFFB‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_bowing_tone2",
                  "woman_bowing_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDE47\uD83C\uDFFC‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_bowing_tone3", "woman_bowing_medium_skin_tone"],
                surrogates: "\uD83D\uDE47\uD83C\uDFFD‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_bowing_tone4",
                  "woman_bowing_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDE47\uD83C\uDFFE‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_bowing_tone5", "woman_bowing_dark_skin_tone"],
                surrogates: "\uD83D\uDE47\uD83C\uDFFF‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_bowing"],
            surrogates: "\uD83D\uDE47‍♂️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["man_bowing_tone1", "man_bowing_light_skin_tone"],
                surrogates: "\uD83D\uDE47\uD83C\uDFFB‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_bowing_tone2",
                  "man_bowing_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDE47\uD83C\uDFFC‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_bowing_tone3", "man_bowing_medium_skin_tone"],
                surrogates: "\uD83D\uDE47\uD83C\uDFFD‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_bowing_tone4", "man_bowing_medium_dark_skin_tone"],
                surrogates: "\uD83D\uDE47\uD83C\uDFFE‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_bowing_tone5", "man_bowing_dark_skin_tone"],
                surrogates: "\uD83D\uDE47\uD83C\uDFFF‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["person_tipping_hand", "information_desk_person"],
            surrogates: "\uD83D\uDC81",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "person_tipping_hand_tone1",
                  "information_desk_person_tone1",
                ],
                surrogates: "\uD83D\uDC81\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_tipping_hand_tone2",
                  "information_desk_person_tone2",
                ],
                surrogates: "\uD83D\uDC81\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_tipping_hand_tone3",
                  "information_desk_person_tone3",
                ],
                surrogates: "\uD83D\uDC81\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_tipping_hand_tone4",
                  "information_desk_person_tone4",
                ],
                surrogates: "\uD83D\uDC81\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_tipping_hand_tone5",
                  "information_desk_person_tone5",
                ],
                surrogates: "\uD83D\uDC81\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_tipping_hand"],
            surrogates: "\uD83D\uDC81‍♀️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_tipping_hand_tone1",
                  "woman_tipping_hand_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC81\uD83C\uDFFB‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_tipping_hand_tone2",
                  "woman_tipping_hand_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC81\uD83C\uDFFC‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_tipping_hand_tone3",
                  "woman_tipping_hand_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC81\uD83C\uDFFD‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_tipping_hand_tone4",
                  "woman_tipping_hand_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC81\uD83C\uDFFE‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_tipping_hand_tone5",
                  "woman_tipping_hand_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC81\uD83C\uDFFF‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_tipping_hand"],
            surrogates: "\uD83D\uDC81‍♂️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "man_tipping_hand_tone1",
                  "man_tipping_hand_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC81\uD83C\uDFFB‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_tipping_hand_tone2",
                  "man_tipping_hand_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC81\uD83C\uDFFC‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_tipping_hand_tone3",
                  "man_tipping_hand_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC81\uD83C\uDFFD‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_tipping_hand_tone4",
                  "man_tipping_hand_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC81\uD83C\uDFFE‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_tipping_hand_tone5",
                  "man_tipping_hand_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC81\uD83C\uDFFF‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["person_gesturing_no", "no_good"],
            surrogates: "\uD83D\uDE45",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["person_gesturing_no_tone1", "no_good_tone1"],
                surrogates: "\uD83D\uDE45\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_gesturing_no_tone2", "no_good_tone2"],
                surrogates: "\uD83D\uDE45\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_gesturing_no_tone3", "no_good_tone3"],
                surrogates: "\uD83D\uDE45\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_gesturing_no_tone4", "no_good_tone4"],
                surrogates: "\uD83D\uDE45\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_gesturing_no_tone5", "no_good_tone5"],
                surrogates: "\uD83D\uDE45\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_gesturing_no"],
            surrogates: "\uD83D\uDE45‍♀️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_gesturing_no_tone1",
                  "woman_gesturing_no_light_skin_tone",
                ],
                surrogates: "\uD83D\uDE45\uD83C\uDFFB‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_gesturing_no_tone2",
                  "woman_gesturing_no_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDE45\uD83C\uDFFC‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_gesturing_no_tone3",
                  "woman_gesturing_no_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDE45\uD83C\uDFFD‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_gesturing_no_tone4",
                  "woman_gesturing_no_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDE45\uD83C\uDFFE‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_gesturing_no_tone5",
                  "woman_gesturing_no_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDE45\uD83C\uDFFF‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_gesturing_no"],
            surrogates: "\uD83D\uDE45‍♂️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "man_gesturing_no_tone1",
                  "man_gesturing_no_light_skin_tone",
                ],
                surrogates: "\uD83D\uDE45\uD83C\uDFFB‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_gesturing_no_tone2",
                  "man_gesturing_no_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDE45\uD83C\uDFFC‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_gesturing_no_tone3",
                  "man_gesturing_no_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDE45\uD83C\uDFFD‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_gesturing_no_tone4",
                  "man_gesturing_no_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDE45\uD83C\uDFFE‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_gesturing_no_tone5",
                  "man_gesturing_no_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDE45\uD83C\uDFFF‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["person_gesturing_ok"],
            surrogates: "\uD83D\uDE46",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["person_gesturing_ok_tone1"],
                surrogates: "\uD83D\uDE46\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_gesturing_ok_tone2"],
                surrogates: "\uD83D\uDE46\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_gesturing_ok_tone3"],
                surrogates: "\uD83D\uDE46\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_gesturing_ok_tone4"],
                surrogates: "\uD83D\uDE46\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_gesturing_ok_tone5"],
                surrogates: "\uD83D\uDE46\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_gesturing_ok"],
            surrogates: "\uD83D\uDE46‍♀️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_gesturing_ok_tone1",
                  "woman_gesturing_ok_light_skin_tone",
                ],
                surrogates: "\uD83D\uDE46\uD83C\uDFFB‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_gesturing_ok_tone2",
                  "woman_gesturing_ok_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDE46\uD83C\uDFFC‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_gesturing_ok_tone3",
                  "woman_gesturing_ok_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDE46\uD83C\uDFFD‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_gesturing_ok_tone4",
                  "woman_gesturing_ok_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDE46\uD83C\uDFFE‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_gesturing_ok_tone5",
                  "woman_gesturing_ok_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDE46\uD83C\uDFFF‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_gesturing_ok"],
            surrogates: "\uD83D\uDE46‍♂️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "man_gesturing_ok_tone1",
                  "man_gesturing_ok_light_skin_tone",
                ],
                surrogates: "\uD83D\uDE46\uD83C\uDFFB‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_gesturing_ok_tone2",
                  "man_gesturing_ok_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDE46\uD83C\uDFFC‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_gesturing_ok_tone3",
                  "man_gesturing_ok_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDE46\uD83C\uDFFD‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_gesturing_ok_tone4",
                  "man_gesturing_ok_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDE46\uD83C\uDFFE‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_gesturing_ok_tone5",
                  "man_gesturing_ok_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDE46\uD83C\uDFFF‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["person_raising_hand", "raising_hand"],
            surrogates: "\uD83D\uDE4B",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["person_raising_hand_tone1", "raising_hand_tone1"],
                surrogates: "\uD83D\uDE4B\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_raising_hand_tone2", "raising_hand_tone2"],
                surrogates: "\uD83D\uDE4B\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_raising_hand_tone3", "raising_hand_tone3"],
                surrogates: "\uD83D\uDE4B\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_raising_hand_tone4", "raising_hand_tone4"],
                surrogates: "\uD83D\uDE4B\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_raising_hand_tone5", "raising_hand_tone5"],
                surrogates: "\uD83D\uDE4B\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_raising_hand"],
            surrogates: "\uD83D\uDE4B‍♀️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_raising_hand_tone1",
                  "woman_raising_hand_light_skin_tone",
                ],
                surrogates: "\uD83D\uDE4B\uD83C\uDFFB‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_raising_hand_tone2",
                  "woman_raising_hand_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDE4B\uD83C\uDFFC‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_raising_hand_tone3",
                  "woman_raising_hand_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDE4B\uD83C\uDFFD‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_raising_hand_tone4",
                  "woman_raising_hand_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDE4B\uD83C\uDFFE‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_raising_hand_tone5",
                  "woman_raising_hand_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDE4B\uD83C\uDFFF‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_raising_hand"],
            surrogates: "\uD83D\uDE4B‍♂️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "man_raising_hand_tone1",
                  "man_raising_hand_light_skin_tone",
                ],
                surrogates: "\uD83D\uDE4B\uD83C\uDFFB‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_raising_hand_tone2",
                  "man_raising_hand_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDE4B\uD83C\uDFFC‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_raising_hand_tone3",
                  "man_raising_hand_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDE4B\uD83C\uDFFD‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_raising_hand_tone4",
                  "man_raising_hand_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDE4B\uD83C\uDFFE‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_raising_hand_tone5",
                  "man_raising_hand_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDE4B\uD83C\uDFFF‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["deaf_person"],
            surrogates: "\uD83E\uDDCF",
            unicodeVersion: 12,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["deaf_person_tone1", "deaf_person_light_skin_tone"],
                surrogates: "\uD83E\uDDCF\uD83C\uDFFB",
                unicodeVersion: 12,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "deaf_person_tone2",
                  "deaf_person_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDCF\uD83C\uDFFC",
                unicodeVersion: 12,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["deaf_person_tone3", "deaf_person_medium_skin_tone"],
                surrogates: "\uD83E\uDDCF\uD83C\uDFFD",
                unicodeVersion: 12,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "deaf_person_tone4",
                  "deaf_person_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDCF\uD83C\uDFFE",
                unicodeVersion: 12,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["deaf_person_tone5", "deaf_person_dark_skin_tone"],
                surrogates: "\uD83E\uDDCF\uD83C\uDFFF",
                unicodeVersion: 12,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["deaf_woman"],
            surrogates: "\uD83E\uDDCF‍♀️",
            unicodeVersion: 12,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["deaf_woman_tone1", "deaf_woman_light_skin_tone"],
                surrogates: "\uD83E\uDDCF\uD83C\uDFFB‍♀️",
                unicodeVersion: 12,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "deaf_woman_tone2",
                  "deaf_woman_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDCF\uD83C\uDFFC‍♀️",
                unicodeVersion: 12,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["deaf_woman_tone3", "deaf_woman_medium_skin_tone"],
                surrogates: "\uD83E\uDDCF\uD83C\uDFFD‍♀️",
                unicodeVersion: 12,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["deaf_woman_tone4", "deaf_woman_medium_dark_skin_tone"],
                surrogates: "\uD83E\uDDCF\uD83C\uDFFE‍♀️",
                unicodeVersion: 12,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["deaf_woman_tone5", "deaf_woman_dark_skin_tone"],
                surrogates: "\uD83E\uDDCF\uD83C\uDFFF‍♀️",
                unicodeVersion: 12,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["deaf_man"],
            surrogates: "\uD83E\uDDCF‍♂️",
            unicodeVersion: 12,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["deaf_man_tone1", "deaf_man_light_skin_tone"],
                surrogates: "\uD83E\uDDCF\uD83C\uDFFB‍♂️",
                unicodeVersion: 12,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["deaf_man_tone2", "deaf_man_medium_light_skin_tone"],
                surrogates: "\uD83E\uDDCF\uD83C\uDFFC‍♂️",
                unicodeVersion: 12,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["deaf_man_tone3", "deaf_man_medium_skin_tone"],
                surrogates: "\uD83E\uDDCF\uD83C\uDFFD‍♂️",
                unicodeVersion: 12,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["deaf_man_tone4", "deaf_man_medium_dark_skin_tone"],
                surrogates: "\uD83E\uDDCF\uD83C\uDFFE‍♂️",
                unicodeVersion: 12,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["deaf_man_tone5", "deaf_man_dark_skin_tone"],
                surrogates: "\uD83E\uDDCF\uD83C\uDFFF‍♂️",
                unicodeVersion: 12,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["person_facepalming", "face_palm", "facepalm"],
            surrogates: "\uD83E\uDD26",
            unicodeVersion: 9,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "person_facepalming_tone1",
                  "face_palm_tone1",
                  "facepalm_tone1",
                ],
                surrogates: "\uD83E\uDD26\uD83C\uDFFB",
                unicodeVersion: 9,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_facepalming_tone2",
                  "face_palm_tone2",
                  "facepalm_tone2",
                ],
                surrogates: "\uD83E\uDD26\uD83C\uDFFC",
                unicodeVersion: 9,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_facepalming_tone3",
                  "face_palm_tone3",
                  "facepalm_tone3",
                ],
                surrogates: "\uD83E\uDD26\uD83C\uDFFD",
                unicodeVersion: 9,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_facepalming_tone4",
                  "face_palm_tone4",
                  "facepalm_tone4",
                ],
                surrogates: "\uD83E\uDD26\uD83C\uDFFE",
                unicodeVersion: 9,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_facepalming_tone5",
                  "face_palm_tone5",
                  "facepalm_tone5",
                ],
                surrogates: "\uD83E\uDD26\uD83C\uDFFF",
                unicodeVersion: 9,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_facepalming"],
            surrogates: "\uD83E\uDD26‍♀️",
            unicodeVersion: 9,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_facepalming_tone1",
                  "woman_facepalming_light_skin_tone",
                ],
                surrogates: "\uD83E\uDD26\uD83C\uDFFB‍♀️",
                unicodeVersion: 9,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_facepalming_tone2",
                  "woman_facepalming_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDD26\uD83C\uDFFC‍♀️",
                unicodeVersion: 9,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_facepalming_tone3",
                  "woman_facepalming_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDD26\uD83C\uDFFD‍♀️",
                unicodeVersion: 9,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_facepalming_tone4",
                  "woman_facepalming_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDD26\uD83C\uDFFE‍♀️",
                unicodeVersion: 9,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_facepalming_tone5",
                  "woman_facepalming_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDD26\uD83C\uDFFF‍♀️",
                unicodeVersion: 9,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_facepalming"],
            surrogates: "\uD83E\uDD26‍♂️",
            unicodeVersion: 9,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "man_facepalming_tone1",
                  "man_facepalming_light_skin_tone",
                ],
                surrogates: "\uD83E\uDD26\uD83C\uDFFB‍♂️",
                unicodeVersion: 9,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_facepalming_tone2",
                  "man_facepalming_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDD26\uD83C\uDFFC‍♂️",
                unicodeVersion: 9,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_facepalming_tone3",
                  "man_facepalming_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDD26\uD83C\uDFFD‍♂️",
                unicodeVersion: 9,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_facepalming_tone4",
                  "man_facepalming_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDD26\uD83C\uDFFE‍♂️",
                unicodeVersion: 9,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_facepalming_tone5",
                  "man_facepalming_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDD26\uD83C\uDFFF‍♂️",
                unicodeVersion: 9,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["person_shrugging", "shrug"],
            surrogates: "\uD83E\uDD37",
            unicodeVersion: 9,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["person_shrugging_tone1", "shrug_tone1"],
                surrogates: "\uD83E\uDD37\uD83C\uDFFB",
                unicodeVersion: 9,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_shrugging_tone2", "shrug_tone2"],
                surrogates: "\uD83E\uDD37\uD83C\uDFFC",
                unicodeVersion: 9,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_shrugging_tone3", "shrug_tone3"],
                surrogates: "\uD83E\uDD37\uD83C\uDFFD",
                unicodeVersion: 9,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_shrugging_tone4", "shrug_tone4"],
                surrogates: "\uD83E\uDD37\uD83C\uDFFE",
                unicodeVersion: 9,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_shrugging_tone5", "shrug_tone5"],
                surrogates: "\uD83E\uDD37\uD83C\uDFFF",
                unicodeVersion: 9,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_shrugging"],
            surrogates: "\uD83E\uDD37‍♀️",
            unicodeVersion: 9,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_shrugging_tone1",
                  "woman_shrugging_light_skin_tone",
                ],
                surrogates: "\uD83E\uDD37\uD83C\uDFFB‍♀️",
                unicodeVersion: 9,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_shrugging_tone2",
                  "woman_shrugging_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDD37\uD83C\uDFFC‍♀️",
                unicodeVersion: 9,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_shrugging_tone3",
                  "woman_shrugging_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDD37\uD83C\uDFFD‍♀️",
                unicodeVersion: 9,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_shrugging_tone4",
                  "woman_shrugging_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDD37\uD83C\uDFFE‍♀️",
                unicodeVersion: 9,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_shrugging_tone5",
                  "woman_shrugging_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDD37\uD83C\uDFFF‍♀️",
                unicodeVersion: 9,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_shrugging"],
            surrogates: "\uD83E\uDD37‍♂️",
            unicodeVersion: 9,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["man_shrugging_tone1", "man_shrugging_light_skin_tone"],
                surrogates: "\uD83E\uDD37\uD83C\uDFFB‍♂️",
                unicodeVersion: 9,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_shrugging_tone2",
                  "man_shrugging_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDD37\uD83C\uDFFC‍♂️",
                unicodeVersion: 9,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_shrugging_tone3",
                  "man_shrugging_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDD37\uD83C\uDFFD‍♂️",
                unicodeVersion: 9,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_shrugging_tone4",
                  "man_shrugging_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDD37\uD83C\uDFFE‍♂️",
                unicodeVersion: 9,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_shrugging_tone5", "man_shrugging_dark_skin_tone"],
                surrogates: "\uD83E\uDD37\uD83C\uDFFF‍♂️",
                unicodeVersion: 9,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["person_pouting", "person_with_pouting_face"],
            surrogates: "\uD83D\uDE4E",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "person_pouting_tone1",
                  "person_with_pouting_face_tone1",
                ],
                surrogates: "\uD83D\uDE4E\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_pouting_tone2",
                  "person_with_pouting_face_tone2",
                ],
                surrogates: "\uD83D\uDE4E\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_pouting_tone3",
                  "person_with_pouting_face_tone3",
                ],
                surrogates: "\uD83D\uDE4E\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_pouting_tone4",
                  "person_with_pouting_face_tone4",
                ],
                surrogates: "\uD83D\uDE4E\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_pouting_tone5",
                  "person_with_pouting_face_tone5",
                ],
                surrogates: "\uD83D\uDE4E\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_pouting"],
            surrogates: "\uD83D\uDE4E‍♀️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["woman_pouting_tone1", "woman_pouting_light_skin_tone"],
                surrogates: "\uD83D\uDE4E\uD83C\uDFFB‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_pouting_tone2",
                  "woman_pouting_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDE4E\uD83C\uDFFC‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_pouting_tone3",
                  "woman_pouting_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDE4E\uD83C\uDFFD‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_pouting_tone4",
                  "woman_pouting_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDE4E\uD83C\uDFFE‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_pouting_tone5", "woman_pouting_dark_skin_tone"],
                surrogates: "\uD83D\uDE4E\uD83C\uDFFF‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_pouting"],
            surrogates: "\uD83D\uDE4E‍♂️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["man_pouting_tone1", "man_pouting_light_skin_tone"],
                surrogates: "\uD83D\uDE4E\uD83C\uDFFB‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_pouting_tone2",
                  "man_pouting_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDE4E\uD83C\uDFFC‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_pouting_tone3", "man_pouting_medium_skin_tone"],
                surrogates: "\uD83D\uDE4E\uD83C\uDFFD‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_pouting_tone4",
                  "man_pouting_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDE4E\uD83C\uDFFE‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_pouting_tone5", "man_pouting_dark_skin_tone"],
                surrogates: "\uD83D\uDE4E\uD83C\uDFFF‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["person_frowning"],
            surrogates: "\uD83D\uDE4D",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["person_frowning_tone1"],
                surrogates: "\uD83D\uDE4D\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_frowning_tone2"],
                surrogates: "\uD83D\uDE4D\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_frowning_tone3"],
                surrogates: "\uD83D\uDE4D\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_frowning_tone4"],
                surrogates: "\uD83D\uDE4D\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_frowning_tone5"],
                surrogates: "\uD83D\uDE4D\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_frowning"],
            surrogates: "\uD83D\uDE4D‍♀️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_frowning_tone1",
                  "woman_frowning_light_skin_tone",
                ],
                surrogates: "\uD83D\uDE4D\uD83C\uDFFB‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_frowning_tone2",
                  "woman_frowning_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDE4D\uD83C\uDFFC‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_frowning_tone3",
                  "woman_frowning_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDE4D\uD83C\uDFFD‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_frowning_tone4",
                  "woman_frowning_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDE4D\uD83C\uDFFE‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_frowning_tone5",
                  "woman_frowning_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDE4D\uD83C\uDFFF‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_frowning"],
            surrogates: "\uD83D\uDE4D‍♂️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["man_frowning_tone1", "man_frowning_light_skin_tone"],
                surrogates: "\uD83D\uDE4D\uD83C\uDFFB‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_frowning_tone2",
                  "man_frowning_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDE4D\uD83C\uDFFC‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_frowning_tone3", "man_frowning_medium_skin_tone"],
                surrogates: "\uD83D\uDE4D\uD83C\uDFFD‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_frowning_tone4",
                  "man_frowning_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDE4D\uD83C\uDFFE‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_frowning_tone5", "man_frowning_dark_skin_tone"],
                surrogates: "\uD83D\uDE4D\uD83C\uDFFF‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["person_getting_haircut", "haircut"],
            surrogates: "\uD83D\uDC87",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["person_getting_haircut_tone1", "haircut_tone1"],
                surrogates: "\uD83D\uDC87\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_getting_haircut_tone2", "haircut_tone2"],
                surrogates: "\uD83D\uDC87\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_getting_haircut_tone3", "haircut_tone3"],
                surrogates: "\uD83D\uDC87\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_getting_haircut_tone4", "haircut_tone4"],
                surrogates: "\uD83D\uDC87\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_getting_haircut_tone5", "haircut_tone5"],
                surrogates: "\uD83D\uDC87\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_getting_haircut"],
            surrogates: "\uD83D\uDC87‍♀️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_getting_haircut_tone1",
                  "woman_getting_haircut_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC87\uD83C\uDFFB‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_getting_haircut_tone2",
                  "woman_getting_haircut_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC87\uD83C\uDFFC‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_getting_haircut_tone3",
                  "woman_getting_haircut_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC87\uD83C\uDFFD‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_getting_haircut_tone4",
                  "woman_getting_haircut_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC87\uD83C\uDFFE‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_getting_haircut_tone5",
                  "woman_getting_haircut_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC87\uD83C\uDFFF‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_getting_haircut"],
            surrogates: "\uD83D\uDC87‍♂️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "man_getting_haircut_tone1",
                  "man_getting_haircut_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC87\uD83C\uDFFB‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_getting_haircut_tone2",
                  "man_getting_haircut_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC87\uD83C\uDFFC‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_getting_haircut_tone3",
                  "man_getting_haircut_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC87\uD83C\uDFFD‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_getting_haircut_tone4",
                  "man_getting_haircut_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC87\uD83C\uDFFE‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_getting_haircut_tone5",
                  "man_getting_haircut_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC87\uD83C\uDFFF‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["person_getting_massage", "massage"],
            surrogates: "\uD83D\uDC86",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["person_getting_massage_tone1", "massage_tone1"],
                surrogates: "\uD83D\uDC86\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_getting_massage_tone2", "massage_tone2"],
                surrogates: "\uD83D\uDC86\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_getting_massage_tone3", "massage_tone3"],
                surrogates: "\uD83D\uDC86\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_getting_massage_tone4", "massage_tone4"],
                surrogates: "\uD83D\uDC86\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_getting_massage_tone5", "massage_tone5"],
                surrogates: "\uD83D\uDC86\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_getting_face_massage"],
            surrogates: "\uD83D\uDC86‍♀️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_getting_face_massage_tone1",
                  "woman_getting_face_massage_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC86\uD83C\uDFFB‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_getting_face_massage_tone2",
                  "woman_getting_face_massage_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC86\uD83C\uDFFC‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_getting_face_massage_tone3",
                  "woman_getting_face_massage_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC86\uD83C\uDFFD‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_getting_face_massage_tone4",
                  "woman_getting_face_massage_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC86\uD83C\uDFFE‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_getting_face_massage_tone5",
                  "woman_getting_face_massage_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC86\uD83C\uDFFF‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_getting_face_massage"],
            surrogates: "\uD83D\uDC86‍♂️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "man_getting_face_massage_tone1",
                  "man_getting_face_massage_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC86\uD83C\uDFFB‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_getting_face_massage_tone2",
                  "man_getting_face_massage_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC86\uD83C\uDFFC‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_getting_face_massage_tone3",
                  "man_getting_face_massage_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC86\uD83C\uDFFD‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_getting_face_massage_tone4",
                  "man_getting_face_massage_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC86\uD83C\uDFFE‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_getting_face_massage_tone5",
                  "man_getting_face_massage_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC86\uD83C\uDFFF‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["person_in_steamy_room"],
            surrogates: "\uD83E\uDDD6",
            unicodeVersion: 10,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "person_in_steamy_room_tone1",
                  "person_in_steamy_room_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDD6\uD83C\uDFFB",
                unicodeVersion: 10,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_in_steamy_room_tone2",
                  "person_in_steamy_room_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDD6\uD83C\uDFFC",
                unicodeVersion: 10,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_in_steamy_room_tone3",
                  "person_in_steamy_room_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDDD6\uD83C\uDFFD",
                unicodeVersion: 10,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_in_steamy_room_tone4",
                  "person_in_steamy_room_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDD6\uD83C\uDFFE",
                unicodeVersion: 10,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_in_steamy_room_tone5",
                  "person_in_steamy_room_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDD6\uD83C\uDFFF",
                unicodeVersion: 10,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_in_steamy_room"],
            surrogates: "\uD83E\uDDD6‍♀️",
            unicodeVersion: 10,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_in_steamy_room_tone1",
                  "woman_in_steamy_room_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDD6\uD83C\uDFFB‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_in_steamy_room_tone2",
                  "woman_in_steamy_room_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDD6\uD83C\uDFFC‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_in_steamy_room_tone3",
                  "woman_in_steamy_room_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDDD6\uD83C\uDFFD‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_in_steamy_room_tone4",
                  "woman_in_steamy_room_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDD6\uD83C\uDFFE‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_in_steamy_room_tone5",
                  "woman_in_steamy_room_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDD6\uD83C\uDFFF‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_in_steamy_room"],
            surrogates: "\uD83E\uDDD6‍♂️",
            unicodeVersion: 10,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "man_in_steamy_room_tone1",
                  "man_in_steamy_room_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDD6\uD83C\uDFFB‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_in_steamy_room_tone2",
                  "man_in_steamy_room_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDD6\uD83C\uDFFC‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_in_steamy_room_tone3",
                  "man_in_steamy_room_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDDD6\uD83C\uDFFD‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_in_steamy_room_tone4",
                  "man_in_steamy_room_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDD6\uD83C\uDFFE‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_in_steamy_room_tone5",
                  "man_in_steamy_room_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDD6\uD83C\uDFFF‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["nail_care", "nail_polish"],
            surrogates: "\uD83D\uDC85",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["nail_care_tone1"],
                surrogates: "\uD83D\uDC85\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["nail_care_tone2"],
                surrogates: "\uD83D\uDC85\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["nail_care_tone3"],
                surrogates: "\uD83D\uDC85\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["nail_care_tone4"],
                surrogates: "\uD83D\uDC85\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["nail_care_tone5"],
                surrogates: "\uD83D\uDC85\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["selfie"],
            surrogates: "\uD83E\uDD33",
            unicodeVersion: 9,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["selfie_tone1"],
                surrogates: "\uD83E\uDD33\uD83C\uDFFB",
                unicodeVersion: 9,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["selfie_tone2"],
                surrogates: "\uD83E\uDD33\uD83C\uDFFC",
                unicodeVersion: 9,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["selfie_tone3"],
                surrogates: "\uD83E\uDD33\uD83C\uDFFD",
                unicodeVersion: 9,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["selfie_tone4"],
                surrogates: "\uD83E\uDD33\uD83C\uDFFE",
                unicodeVersion: 9,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["selfie_tone5"],
                surrogates: "\uD83E\uDD33\uD83C\uDFFF",
                unicodeVersion: 9,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["dancer", "woman_dancing"],
            surrogates: "\uD83D\uDC83",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["dancer_tone1"],
                surrogates: "\uD83D\uDC83\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["dancer_tone2"],
                surrogates: "\uD83D\uDC83\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["dancer_tone3"],
                surrogates: "\uD83D\uDC83\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["dancer_tone4"],
                surrogates: "\uD83D\uDC83\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["dancer_tone5"],
                surrogates: "\uD83D\uDC83\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_dancing", "male_dancer"],
            surrogates: "\uD83D\uDD7A",
            unicodeVersion: 9,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["man_dancing_tone1", "male_dancer_tone1"],
                surrogates: "\uD83D\uDD7A\uD83C\uDFFB",
                unicodeVersion: 9,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_dancing_tone2", "male_dancer_tone2"],
                surrogates: "\uD83D\uDD7A\uD83C\uDFFC",
                unicodeVersion: 9,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_dancing_tone3", "male_dancer_tone3"],
                surrogates: "\uD83D\uDD7A\uD83C\uDFFD",
                unicodeVersion: 9,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_dancing_tone5", "male_dancer_tone5"],
                surrogates: "\uD83D\uDD7A\uD83C\uDFFF",
                unicodeVersion: 9,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_dancing_tone4", "male_dancer_tone4"],
                surrogates: "\uD83D\uDD7A\uD83C\uDFFE",
                unicodeVersion: 9,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["people_with_bunny_ears_partying", "dancers"],
            surrogates: "\uD83D\uDC6F",
            unicodeVersion: 6,
          },
          {
            names: ["women_with_bunny_ears_partying"],
            surrogates: "\uD83D\uDC6F‍♀️",
            unicodeVersion: 6,
          },
          {
            names: ["men_with_bunny_ears_partying"],
            surrogates: "\uD83D\uDC6F‍♂️",
            unicodeVersion: 6,
          },
          {
            names: ["levitate", "man_in_business_suit_levitating"],
            surrogates: "\uD83D\uDD74️",
            unicodeVersion: 7,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "levitate_tone1",
                  "man_in_business_suit_levitating_tone1",
                  "man_in_business_suit_levitating_light_skin_tone",
                ],
                surrogates: "\uD83D\uDD74\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "levitate_tone2",
                  "man_in_business_suit_levitating_tone2",
                  "man_in_business_suit_levitating_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDD74\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "levitate_tone3",
                  "man_in_business_suit_levitating_tone3",
                  "man_in_business_suit_levitating_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDD74\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "levitate_tone4",
                  "man_in_business_suit_levitating_tone4",
                  "man_in_business_suit_levitating_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDD74\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "levitate_tone5",
                  "man_in_business_suit_levitating_tone5",
                  "man_in_business_suit_levitating_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDD74\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["person_in_manual_wheelchair"],
            surrogates: "\uD83E\uDDD1‍\uD83E\uDDBD",
            unicodeVersion: 12.1,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "person_in_manual_wheelchair_tone1",
                  "person_in_manual_wheelchair_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFB‍\uD83E\uDDBD",
                unicodeVersion: 12.1,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_in_manual_wheelchair_tone2",
                  "person_in_manual_wheelchair_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFC‍\uD83E\uDDBD",
                unicodeVersion: 12.1,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_in_manual_wheelchair_tone3",
                  "person_in_manual_wheelchair_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFD‍\uD83E\uDDBD",
                unicodeVersion: 12.1,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_in_manual_wheelchair_tone4",
                  "person_in_manual_wheelchair_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFE‍\uD83E\uDDBD",
                unicodeVersion: 12.1,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_in_manual_wheelchair_tone5",
                  "person_in_manual_wheelchair_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFF‍\uD83E\uDDBD",
                unicodeVersion: 12.1,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_in_manual_wheelchair"],
            surrogates: "\uD83D\uDC69‍\uD83E\uDDBD",
            unicodeVersion: 12,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_in_manual_wheelchair_tone1",
                  "woman_in_manual_wheelchair_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFB‍\uD83E\uDDBD",
                unicodeVersion: 12,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_in_manual_wheelchair_tone2",
                  "woman_in_manual_wheelchair_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFC‍\uD83E\uDDBD",
                unicodeVersion: 12,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_in_manual_wheelchair_tone3",
                  "woman_in_manual_wheelchair_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFD‍\uD83E\uDDBD",
                unicodeVersion: 12,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_in_manual_wheelchair_tone4",
                  "woman_in_manual_wheelchair_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFE‍\uD83E\uDDBD",
                unicodeVersion: 12,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_in_manual_wheelchair_tone5",
                  "woman_in_manual_wheelchair_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFF‍\uD83E\uDDBD",
                unicodeVersion: 12,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_in_manual_wheelchair"],
            surrogates: "\uD83D\uDC68‍\uD83E\uDDBD",
            unicodeVersion: 12,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "man_in_manual_wheelchair_tone1",
                  "man_in_manual_wheelchair_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFB‍\uD83E\uDDBD",
                unicodeVersion: 12,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_in_manual_wheelchair_tone2",
                  "man_in_manual_wheelchair_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFC‍\uD83E\uDDBD",
                unicodeVersion: 12,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_in_manual_wheelchair_tone3",
                  "man_in_manual_wheelchair_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFD‍\uD83E\uDDBD",
                unicodeVersion: 12,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_in_manual_wheelchair_tone4",
                  "man_in_manual_wheelchair_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFE‍\uD83E\uDDBD",
                unicodeVersion: 12,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_in_manual_wheelchair_tone5",
                  "man_in_manual_wheelchair_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFF‍\uD83E\uDDBD",
                unicodeVersion: 12,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["person_in_motorized_wheelchair"],
            surrogates: "\uD83E\uDDD1‍\uD83E\uDDBC",
            unicodeVersion: 12.1,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "person_in_motorized_wheelchair_tone1",
                  "person_in_motorized_wheelchair_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFB‍\uD83E\uDDBC",
                unicodeVersion: 12.1,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_in_motorized_wheelchair_tone2",
                  "person_in_motorized_wheelchair_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFC‍\uD83E\uDDBC",
                unicodeVersion: 12.1,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_in_motorized_wheelchair_tone3",
                  "person_in_motorized_wheelchair_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFD‍\uD83E\uDDBC",
                unicodeVersion: 12.1,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_in_motorized_wheelchair_tone4",
                  "person_in_motorized_wheelchair_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFE‍\uD83E\uDDBC",
                unicodeVersion: 12.1,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_in_motorized_wheelchair_tone5",
                  "person_in_motorized_wheelchair_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFF‍\uD83E\uDDBC",
                unicodeVersion: 12.1,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_in_motorized_wheelchair"],
            surrogates: "\uD83D\uDC69‍\uD83E\uDDBC",
            unicodeVersion: 12,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_in_motorized_wheelchair_tone1",
                  "woman_in_motorized_wheelchair_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFB‍\uD83E\uDDBC",
                unicodeVersion: 12,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_in_motorized_wheelchair_tone2",
                  "woman_in_motorized_wheelchair_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFC‍\uD83E\uDDBC",
                unicodeVersion: 12,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_in_motorized_wheelchair_tone3",
                  "woman_in_motorized_wheelchair_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFD‍\uD83E\uDDBC",
                unicodeVersion: 12,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_in_motorized_wheelchair_tone4",
                  "woman_in_motorized_wheelchair_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFE‍\uD83E\uDDBC",
                unicodeVersion: 12,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_in_motorized_wheelchair_tone5",
                  "woman_in_motorized_wheelchair_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFF‍\uD83E\uDDBC",
                unicodeVersion: 12,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_in_motorized_wheelchair"],
            surrogates: "\uD83D\uDC68‍\uD83E\uDDBC",
            unicodeVersion: 12,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "man_in_motorized_wheelchair_tone1",
                  "man_in_motorized_wheelchair_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFB‍\uD83E\uDDBC",
                unicodeVersion: 12,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_in_motorized_wheelchair_tone2",
                  "man_in_motorized_wheelchair_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFC‍\uD83E\uDDBC",
                unicodeVersion: 12,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_in_motorized_wheelchair_tone3",
                  "man_in_motorized_wheelchair_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFD‍\uD83E\uDDBC",
                unicodeVersion: 12,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_in_motorized_wheelchair_tone4",
                  "man_in_motorized_wheelchair_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFE‍\uD83E\uDDBC",
                unicodeVersion: 12,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_in_motorized_wheelchair_tone5",
                  "man_in_motorized_wheelchair_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFF‍\uD83E\uDDBC",
                unicodeVersion: 12,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["person_walking", "walking"],
            surrogates: "\uD83D\uDEB6",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["person_walking_tone1", "walking_tone1"],
                surrogates: "\uD83D\uDEB6\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_walking_tone2", "walking_tone2"],
                surrogates: "\uD83D\uDEB6\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_walking_tone3", "walking_tone3"],
                surrogates: "\uD83D\uDEB6\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_walking_tone4", "walking_tone4"],
                surrogates: "\uD83D\uDEB6\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_walking_tone5", "walking_tone5"],
                surrogates: "\uD83D\uDEB6\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_walking"],
            surrogates: "\uD83D\uDEB6‍♀️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["woman_walking_tone1", "woman_walking_light_skin_tone"],
                surrogates: "\uD83D\uDEB6\uD83C\uDFFB‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_walking_tone2",
                  "woman_walking_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDEB6\uD83C\uDFFC‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_walking_tone3",
                  "woman_walking_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDEB6\uD83C\uDFFD‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_walking_tone4",
                  "woman_walking_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDEB6\uD83C\uDFFE‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_walking_tone5", "woman_walking_dark_skin_tone"],
                surrogates: "\uD83D\uDEB6\uD83C\uDFFF‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_walking"],
            surrogates: "\uD83D\uDEB6‍♂️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["man_walking_tone1", "man_walking_light_skin_tone"],
                surrogates: "\uD83D\uDEB6\uD83C\uDFFB‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_walking_tone2",
                  "man_walking_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDEB6\uD83C\uDFFC‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_walking_tone3", "man_walking_medium_skin_tone"],
                surrogates: "\uD83D\uDEB6\uD83C\uDFFD‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_walking_tone4",
                  "man_walking_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDEB6\uD83C\uDFFE‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_walking_tone5", "man_walking_dark_skin_tone"],
                surrogates: "\uD83D\uDEB6\uD83C\uDFFF‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["person_with_probing_cane"],
            surrogates: "\uD83E\uDDD1‍\uD83E\uDDAF",
            unicodeVersion: 12.1,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "person_with_probing_cane_tone1",
                  "person_with_probing_cane_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFB‍\uD83E\uDDAF",
                unicodeVersion: 12.1,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_with_probing_cane_tone2",
                  "person_with_probing_cane_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFC‍\uD83E\uDDAF",
                unicodeVersion: 12.1,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_with_probing_cane_tone3",
                  "person_with_probing_cane_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFD‍\uD83E\uDDAF",
                unicodeVersion: 12.1,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_with_probing_cane_tone4",
                  "person_with_probing_cane_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFE‍\uD83E\uDDAF",
                unicodeVersion: 12.1,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_with_probing_cane_tone5",
                  "person_with_probing_cane_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDD1\uD83C\uDFFF‍\uD83E\uDDAF",
                unicodeVersion: 12.1,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_with_probing_cane"],
            surrogates: "\uD83D\uDC69‍\uD83E\uDDAF",
            unicodeVersion: 12,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_with_probing_cane_tone1",
                  "woman_with_probing_cane_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFB‍\uD83E\uDDAF",
                unicodeVersion: 12,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_with_probing_cane_tone2",
                  "woman_with_probing_cane_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFC‍\uD83E\uDDAF",
                unicodeVersion: 12,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_with_probing_cane_tone3",
                  "woman_with_probing_cane_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFD‍\uD83E\uDDAF",
                unicodeVersion: 12,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_with_probing_cane_tone4",
                  "woman_with_probing_cane_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFE‍\uD83E\uDDAF",
                unicodeVersion: 12,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_with_probing_cane_tone5",
                  "woman_with_probing_cane_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC69\uD83C\uDFFF‍\uD83E\uDDAF",
                unicodeVersion: 12,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_with_probing_cane"],
            surrogates: "\uD83D\uDC68‍\uD83E\uDDAF",
            unicodeVersion: 12,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "man_with_probing_cane_tone1",
                  "man_with_probing_cane_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFB‍\uD83E\uDDAF",
                unicodeVersion: 12,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_with_probing_cane_tone2",
                  "man_with_probing_cane_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFC‍\uD83E\uDDAF",
                unicodeVersion: 12,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_with_probing_cane_tone3",
                  "man_with_probing_cane_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFD‍\uD83E\uDDAF",
                unicodeVersion: 12,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_with_probing_cane_tone4",
                  "man_with_probing_cane_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFE‍\uD83E\uDDAF",
                unicodeVersion: 12,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_with_probing_cane_tone5",
                  "man_with_probing_cane_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC68\uD83C\uDFFF‍\uD83E\uDDAF",
                unicodeVersion: 12,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["person_kneeling"],
            surrogates: "\uD83E\uDDCE",
            unicodeVersion: 12,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "person_kneeling_tone1",
                  "person_kneeling_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDCE\uD83C\uDFFB",
                unicodeVersion: 12,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_kneeling_tone2",
                  "person_kneeling_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDCE\uD83C\uDFFC",
                unicodeVersion: 12,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_kneeling_tone3",
                  "person_kneeling_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDDCE\uD83C\uDFFD",
                unicodeVersion: 12,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_kneeling_tone4",
                  "person_kneeling_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDCE\uD83C\uDFFE",
                unicodeVersion: 12,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_kneeling_tone5",
                  "person_kneeling_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDCE\uD83C\uDFFF",
                unicodeVersion: 12,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_kneeling"],
            surrogates: "\uD83E\uDDCE‍♀️",
            unicodeVersion: 12,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_kneeling_tone1",
                  "woman_kneeling_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDCE\uD83C\uDFFB‍♀️",
                unicodeVersion: 12,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_kneeling_tone2",
                  "woman_kneeling_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDCE\uD83C\uDFFC‍♀️",
                unicodeVersion: 12,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_kneeling_tone3",
                  "woman_kneeling_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDDCE\uD83C\uDFFD‍♀️",
                unicodeVersion: 12,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_kneeling_tone4",
                  "woman_kneeling_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDCE\uD83C\uDFFE‍♀️",
                unicodeVersion: 12,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_kneeling_tone5",
                  "woman_kneeling_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDCE\uD83C\uDFFF‍♀️",
                unicodeVersion: 12,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_kneeling"],
            surrogates: "\uD83E\uDDCE‍♂️",
            unicodeVersion: 12,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["man_kneeling_tone1", "man_kneeling_light_skin_tone"],
                surrogates: "\uD83E\uDDCE\uD83C\uDFFB‍♂️",
                unicodeVersion: 12,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_kneeling_tone2",
                  "man_kneeling_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDCE\uD83C\uDFFC‍♂️",
                unicodeVersion: 12,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_kneeling_tone3", "man_kneeling_medium_skin_tone"],
                surrogates: "\uD83E\uDDCE\uD83C\uDFFD‍♂️",
                unicodeVersion: 12,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_kneeling_tone4",
                  "man_kneeling_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDCE\uD83C\uDFFE‍♂️",
                unicodeVersion: 12,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_kneeling_tone5", "man_kneeling_dark_skin_tone"],
                surrogates: "\uD83E\uDDCE\uD83C\uDFFF‍♂️",
                unicodeVersion: 12,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["person_running", "runner"],
            surrogates: "\uD83C\uDFC3",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["person_running_tone1", "runner_tone1"],
                surrogates: "\uD83C\uDFC3\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_running_tone2", "runner_tone2"],
                surrogates: "\uD83C\uDFC3\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_running_tone3", "runner_tone3"],
                surrogates: "\uD83C\uDFC3\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_running_tone4", "runner_tone4"],
                surrogates: "\uD83C\uDFC3\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_running_tone5", "runner_tone5"],
                surrogates: "\uD83C\uDFC3\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_running"],
            surrogates: "\uD83C\uDFC3‍♀️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["woman_running_tone1", "woman_running_light_skin_tone"],
                surrogates: "\uD83C\uDFC3\uD83C\uDFFB‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_running_tone2",
                  "woman_running_medium_light_skin_tone",
                ],
                surrogates: "\uD83C\uDFC3\uD83C\uDFFC‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_running_tone3",
                  "woman_running_medium_skin_tone",
                ],
                surrogates: "\uD83C\uDFC3\uD83C\uDFFD‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_running_tone4",
                  "woman_running_medium_dark_skin_tone",
                ],
                surrogates: "\uD83C\uDFC3\uD83C\uDFFE‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_running_tone5", "woman_running_dark_skin_tone"],
                surrogates: "\uD83C\uDFC3\uD83C\uDFFF‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_running"],
            surrogates: "\uD83C\uDFC3‍♂️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["man_running_tone1", "man_running_light_skin_tone"],
                surrogates: "\uD83C\uDFC3\uD83C\uDFFB‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_running_tone2",
                  "man_running_medium_light_skin_tone",
                ],
                surrogates: "\uD83C\uDFC3\uD83C\uDFFC‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_running_tone3", "man_running_medium_skin_tone"],
                surrogates: "\uD83C\uDFC3\uD83C\uDFFD‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_running_tone4",
                  "man_running_medium_dark_skin_tone",
                ],
                surrogates: "\uD83C\uDFC3\uD83C\uDFFE‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_running_tone5", "man_running_dark_skin_tone"],
                surrogates: "\uD83C\uDFC3\uD83C\uDFFF‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["person_standing"],
            surrogates: "\uD83E\uDDCD",
            unicodeVersion: 12,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "person_standing_tone1",
                  "person_standing_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDCD\uD83C\uDFFB",
                unicodeVersion: 12,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_standing_tone2",
                  "person_standing_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDCD\uD83C\uDFFC",
                unicodeVersion: 12,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_standing_tone3",
                  "person_standing_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDDCD\uD83C\uDFFD",
                unicodeVersion: 12,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_standing_tone4",
                  "person_standing_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDCD\uD83C\uDFFE",
                unicodeVersion: 12,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_standing_tone5",
                  "person_standing_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDCD\uD83C\uDFFF",
                unicodeVersion: 12,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_standing"],
            surrogates: "\uD83E\uDDCD‍♀️",
            unicodeVersion: 12,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_standing_tone1",
                  "woman_standing_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDCD\uD83C\uDFFB‍♀️",
                unicodeVersion: 12,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_standing_tone2",
                  "woman_standing_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDCD\uD83C\uDFFC‍♀️",
                unicodeVersion: 12,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_standing_tone3",
                  "woman_standing_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDDCD\uD83C\uDFFD‍♀️",
                unicodeVersion: 12,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_standing_tone4",
                  "woman_standing_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDCD\uD83C\uDFFE‍♀️",
                unicodeVersion: 12,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_standing_tone5",
                  "woman_standing_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDCD\uD83C\uDFFF‍♀️",
                unicodeVersion: 12,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_standing"],
            surrogates: "\uD83E\uDDCD‍♂️",
            unicodeVersion: 12,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["man_standing_tone1", "man_standing_light_skin_tone"],
                surrogates: "\uD83E\uDDCD\uD83C\uDFFB‍♂️",
                unicodeVersion: 12,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_standing_tone2",
                  "man_standing_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDCD\uD83C\uDFFC‍♂️",
                unicodeVersion: 12,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_standing_tone3", "man_standing_medium_skin_tone"],
                surrogates: "\uD83E\uDDCD\uD83C\uDFFD‍♂️",
                unicodeVersion: 12,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_standing_tone4",
                  "man_standing_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDCD\uD83C\uDFFE‍♂️",
                unicodeVersion: 12,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_standing_tone5", "man_standing_dark_skin_tone"],
                surrogates: "\uD83E\uDDCD\uD83C\uDFFF‍♂️",
                unicodeVersion: 12,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["people_holding_hands"],
            surrogates: "\uD83E\uDDD1‍\uD83E\uDD1D‍\uD83E\uDDD1",
            unicodeVersion: 12,
            diversityChildren: [
              {
                names: [
                  "people_holding_hands_tone1",
                  "people_holding_hands_light_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFB‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFB",
                unicodeVersion: 12,
                diversity: ["1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "people_holding_hands_tone1_tone2",
                  "people_holding_hands_light_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFB‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFC",
                unicodeVersion: 12.1,
                diversity: ["1f3fb", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "people_holding_hands_tone1_tone3",
                  "people_holding_hands_light_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFB‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFD",
                unicodeVersion: 12.1,
                diversity: ["1f3fb", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "people_holding_hands_tone1_tone4",
                  "people_holding_hands_light_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFB‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFE",
                unicodeVersion: 12.1,
                diversity: ["1f3fb", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "people_holding_hands_tone1_tone5",
                  "people_holding_hands_light_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFB‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFF",
                unicodeVersion: 12.1,
                diversity: ["1f3fb", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "people_holding_hands_tone2_tone1",
                  "people_holding_hands_medium_light_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFC‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFB",
                unicodeVersion: 12,
                diversity: ["1f3fc", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "people_holding_hands_tone2",
                  "people_holding_hands_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFC‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFC",
                unicodeVersion: 12,
                diversity: ["1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "people_holding_hands_tone2_tone3",
                  "people_holding_hands_medium_light_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFC‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFD",
                unicodeVersion: 12.1,
                diversity: ["1f3fc", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "people_holding_hands_tone2_tone4",
                  "people_holding_hands_medium_light_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFC‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFE",
                unicodeVersion: 12.1,
                diversity: ["1f3fc", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "people_holding_hands_tone2_tone5",
                  "people_holding_hands_medium_light_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFC‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFF",
                unicodeVersion: 12.1,
                diversity: ["1f3fc", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "people_holding_hands_tone3_tone1",
                  "people_holding_hands_medium_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFD‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFB",
                unicodeVersion: 12,
                diversity: ["1f3fd", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "people_holding_hands_tone3_tone2",
                  "people_holding_hands_medium_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFD‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFC",
                unicodeVersion: 12,
                diversity: ["1f3fd", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "people_holding_hands_tone3",
                  "people_holding_hands_medium_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFD‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFD",
                unicodeVersion: 12,
                diversity: ["1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "people_holding_hands_tone3_tone4",
                  "people_holding_hands_medium_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFD‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFE",
                unicodeVersion: 12.1,
                diversity: ["1f3fd", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "people_holding_hands_tone3_tone5",
                  "people_holding_hands_medium_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFD‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFF",
                unicodeVersion: 12.1,
                diversity: ["1f3fd", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "people_holding_hands_tone4_tone1",
                  "people_holding_hands_medium_dark_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFE‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFB",
                unicodeVersion: 12,
                diversity: ["1f3fe", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "people_holding_hands_tone4_tone2",
                  "people_holding_hands_medium_dark_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFE‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFC",
                unicodeVersion: 12,
                diversity: ["1f3fe", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "people_holding_hands_tone4_tone3",
                  "people_holding_hands_medium_dark_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFE‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFD",
                unicodeVersion: 12,
                diversity: ["1f3fe", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "people_holding_hands_tone4",
                  "people_holding_hands_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFE‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFE",
                unicodeVersion: 12,
                diversity: ["1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "people_holding_hands_tone4_tone5",
                  "people_holding_hands_medium_dark_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFE‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFF",
                unicodeVersion: 12.1,
                diversity: ["1f3fe", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "people_holding_hands_tone5_tone1",
                  "people_holding_hands_dark_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFF‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFB",
                unicodeVersion: 12,
                diversity: ["1f3ff", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "people_holding_hands_tone5_tone2",
                  "people_holding_hands_dark_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFF‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFC",
                unicodeVersion: 12,
                diversity: ["1f3ff", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "people_holding_hands_tone5_tone3",
                  "people_holding_hands_dark_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFF‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFD",
                unicodeVersion: 12,
                diversity: ["1f3ff", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "people_holding_hands_tone5_tone4",
                  "people_holding_hands_dark_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFF‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFE",
                unicodeVersion: 12,
                diversity: ["1f3ff", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "people_holding_hands_tone5",
                  "people_holding_hands_dark_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFF‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFF",
                unicodeVersion: 12,
                diversity: ["1f3ff"],
                hasMultiDiversityParent: !0,
              },
            ],
            hasMultiDiversity: !0,
          },
          {
            names: ["couple"],
            surrogates: "\uD83D\uDC6B",
            unicodeVersion: 6,
            diversityChildren: [
              {
                names: [
                  "woman_and_man_holding_hands_tone1",
                  "woman_and_man_holding_hands_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC6B\uD83C\uDFFB",
                unicodeVersion: 12,
                diversity: ["1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "woman_and_man_holding_hands_tone1_tone2",
                  "woman_and_man_holding_hands_light_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFB‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFC",
                unicodeVersion: 12,
                diversity: ["1f3fb", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "woman_and_man_holding_hands_tone1_tone3",
                  "woman_and_man_holding_hands_light_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFB‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFD",
                unicodeVersion: 12,
                diversity: ["1f3fb", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "woman_and_man_holding_hands_tone1_tone4",
                  "woman_and_man_holding_hands_light_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFB‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFE",
                unicodeVersion: 12,
                diversity: ["1f3fb", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "woman_and_man_holding_hands_tone1_tone5",
                  "woman_and_man_holding_hands_light_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFB‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFF",
                unicodeVersion: 12,
                diversity: ["1f3fb", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "woman_and_man_holding_hands_tone2_tone1",
                  "woman_and_man_holding_hands_medium_light_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFC‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFB",
                unicodeVersion: 12,
                diversity: ["1f3fc", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "woman_and_man_holding_hands_tone2",
                  "woman_and_man_holding_hands_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC6B\uD83C\uDFFC",
                unicodeVersion: 12,
                diversity: ["1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "woman_and_man_holding_hands_tone2_tone3",
                  "woman_and_man_holding_hands_medium_light_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFC‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFD",
                unicodeVersion: 12,
                diversity: ["1f3fc", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "woman_and_man_holding_hands_tone2_tone4",
                  "woman_and_man_holding_hands_medium_light_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFC‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFE",
                unicodeVersion: 12,
                diversity: ["1f3fc", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "woman_and_man_holding_hands_tone2_tone5",
                  "woman_and_man_holding_hands_medium_light_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFC‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFF",
                unicodeVersion: 12,
                diversity: ["1f3fc", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "woman_and_man_holding_hands_tone3_tone1",
                  "woman_and_man_holding_hands_medium_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFD‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFB",
                unicodeVersion: 12,
                diversity: ["1f3fd", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "woman_and_man_holding_hands_tone3_tone2",
                  "woman_and_man_holding_hands_medium_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFD‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFC",
                unicodeVersion: 12,
                diversity: ["1f3fd", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "woman_and_man_holding_hands_tone3",
                  "woman_and_man_holding_hands_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC6B\uD83C\uDFFD",
                unicodeVersion: 12,
                diversity: ["1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "woman_and_man_holding_hands_tone3_tone4",
                  "woman_and_man_holding_hands_medium_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFD‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFE",
                unicodeVersion: 12,
                diversity: ["1f3fd", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "woman_and_man_holding_hands_tone3_tone5",
                  "woman_and_man_holding_hands_medium_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFD‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFF",
                unicodeVersion: 12,
                diversity: ["1f3fd", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "woman_and_man_holding_hands_tone4_tone1",
                  "woman_and_man_holding_hands_medium_dark_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFE‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFB",
                unicodeVersion: 12,
                diversity: ["1f3fe", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "woman_and_man_holding_hands_tone4_tone2",
                  "woman_and_man_holding_hands_medium_dark_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFE‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFC",
                unicodeVersion: 12,
                diversity: ["1f3fe", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "woman_and_man_holding_hands_tone4_tone3",
                  "woman_and_man_holding_hands_medium_dark_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFE‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFD",
                unicodeVersion: 12,
                diversity: ["1f3fe", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "woman_and_man_holding_hands_tone4",
                  "woman_and_man_holding_hands_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC6B\uD83C\uDFFE",
                unicodeVersion: 12,
                diversity: ["1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "woman_and_man_holding_hands_tone4_tone5",
                  "woman_and_man_holding_hands_medium_dark_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFE‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFF",
                unicodeVersion: 12,
                diversity: ["1f3fe", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "woman_and_man_holding_hands_tone5_tone1",
                  "woman_and_man_holding_hands_dark_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFF‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFB",
                unicodeVersion: 12,
                diversity: ["1f3ff", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "woman_and_man_holding_hands_tone5_tone2",
                  "woman_and_man_holding_hands_dark_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFF‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFC",
                unicodeVersion: 12,
                diversity: ["1f3ff", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "woman_and_man_holding_hands_tone5_tone3",
                  "woman_and_man_holding_hands_dark_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFF‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFD",
                unicodeVersion: 12,
                diversity: ["1f3ff", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "woman_and_man_holding_hands_tone5_tone4",
                  "woman_and_man_holding_hands_dark_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFF‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFE",
                unicodeVersion: 12,
                diversity: ["1f3ff", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "woman_and_man_holding_hands_tone5",
                  "woman_and_man_holding_hands_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC6B\uD83C\uDFFF",
                unicodeVersion: 12,
                diversity: ["1f3ff"],
                hasMultiDiversityParent: !0,
              },
            ],
            hasMultiDiversity: !0,
          },
          {
            names: ["two_women_holding_hands"],
            surrogates: "\uD83D\uDC6D",
            unicodeVersion: 6,
            diversityChildren: [
              {
                names: [
                  "women_holding_hands_tone1",
                  "women_holding_hands_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC6D\uD83C\uDFFB",
                unicodeVersion: 12,
                diversity: ["1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "women_holding_hands_tone1_tone2",
                  "women_holding_hands_light_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFB‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFC",
                unicodeVersion: 12.1,
                diversity: ["1f3fb", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "women_holding_hands_tone1_tone3",
                  "women_holding_hands_light_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFB‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFD",
                unicodeVersion: 12.1,
                diversity: ["1f3fb", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "women_holding_hands_tone1_tone4",
                  "women_holding_hands_light_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFB‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFE",
                unicodeVersion: 12.1,
                diversity: ["1f3fb", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "women_holding_hands_tone1_tone5",
                  "women_holding_hands_light_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFB‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFF",
                unicodeVersion: 12.1,
                diversity: ["1f3fb", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "women_holding_hands_tone2_tone1",
                  "women_holding_hands_medium_light_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFC‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFB",
                unicodeVersion: 12,
                diversity: ["1f3fc", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "women_holding_hands_tone2",
                  "women_holding_hands_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC6D\uD83C\uDFFC",
                unicodeVersion: 12,
                diversity: ["1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "women_holding_hands_tone2_tone3",
                  "women_holding_hands_medium_light_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFC‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFD",
                unicodeVersion: 12.1,
                diversity: ["1f3fc", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "women_holding_hands_tone2_tone4",
                  "women_holding_hands_medium_light_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFC‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFE",
                unicodeVersion: 12.1,
                diversity: ["1f3fc", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "women_holding_hands_tone2_tone5",
                  "women_holding_hands_medium_light_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFC‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFF",
                unicodeVersion: 12.1,
                diversity: ["1f3fc", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "women_holding_hands_tone3_tone1",
                  "women_holding_hands_medium_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFD‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFB",
                unicodeVersion: 12,
                diversity: ["1f3fd", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "women_holding_hands_tone3_tone2",
                  "women_holding_hands_medium_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFD‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFC",
                unicodeVersion: 12,
                diversity: ["1f3fd", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "women_holding_hands_tone3",
                  "women_holding_hands_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC6D\uD83C\uDFFD",
                unicodeVersion: 12,
                diversity: ["1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "women_holding_hands_tone3_tone4",
                  "women_holding_hands_medium_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFD‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFE",
                unicodeVersion: 12.1,
                diversity: ["1f3fd", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "women_holding_hands_tone3_tone5",
                  "women_holding_hands_medium_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFD‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFF",
                unicodeVersion: 12.1,
                diversity: ["1f3fd", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "women_holding_hands_tone4_tone1",
                  "women_holding_hands_medium_dark_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFE‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFB",
                unicodeVersion: 12,
                diversity: ["1f3fe", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "women_holding_hands_tone4_tone2",
                  "women_holding_hands_medium_dark_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFE‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFC",
                unicodeVersion: 12,
                diversity: ["1f3fe", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "women_holding_hands_tone4_tone3",
                  "women_holding_hands_medium_dark_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFE‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFD",
                unicodeVersion: 12,
                diversity: ["1f3fe", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "women_holding_hands_tone4",
                  "women_holding_hands_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC6D\uD83C\uDFFE",
                unicodeVersion: 12,
                diversity: ["1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "women_holding_hands_tone4_tone5",
                  "women_holding_hands_medium_dark_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFE‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFF",
                unicodeVersion: 12.1,
                diversity: ["1f3fe", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "women_holding_hands_tone5_tone1",
                  "women_holding_hands_dark_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFF‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFB",
                unicodeVersion: 12,
                diversity: ["1f3ff", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "women_holding_hands_tone5_tone2",
                  "women_holding_hands_dark_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFF‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFC",
                unicodeVersion: 12,
                diversity: ["1f3ff", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "women_holding_hands_tone5_tone3",
                  "women_holding_hands_dark_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFF‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFD",
                unicodeVersion: 12,
                diversity: ["1f3ff", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "women_holding_hands_tone5_tone4",
                  "women_holding_hands_dark_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFF‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFE",
                unicodeVersion: 12,
                diversity: ["1f3ff", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "women_holding_hands_tone5",
                  "women_holding_hands_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC6D\uD83C\uDFFF",
                unicodeVersion: 12,
                diversity: ["1f3ff"],
                hasMultiDiversityParent: !0,
              },
            ],
            hasMultiDiversity: !0,
          },
          {
            names: ["two_men_holding_hands"],
            surrogates: "\uD83D\uDC6C",
            unicodeVersion: 6,
            diversityChildren: [
              {
                names: [
                  "men_holding_hands_tone1",
                  "men_holding_hands_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC6C\uD83C\uDFFB",
                unicodeVersion: 12,
                diversity: ["1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "men_holding_hands_tone1_tone2",
                  "men_holding_hands_light_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFB‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFC",
                unicodeVersion: 12.1,
                diversity: ["1f3fb", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "men_holding_hands_tone1_tone3",
                  "men_holding_hands_light_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFB‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFD",
                unicodeVersion: 12.1,
                diversity: ["1f3fb", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "men_holding_hands_tone1_tone4",
                  "men_holding_hands_light_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFB‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFE",
                unicodeVersion: 12.1,
                diversity: ["1f3fb", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "men_holding_hands_tone1_tone5",
                  "men_holding_hands_light_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFB‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFF",
                unicodeVersion: 12.1,
                diversity: ["1f3fb", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "men_holding_hands_tone2_tone1",
                  "men_holding_hands_medium_light_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFC‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFB",
                unicodeVersion: 12,
                diversity: ["1f3fc", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "men_holding_hands_tone2",
                  "men_holding_hands_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC6C\uD83C\uDFFC",
                unicodeVersion: 12,
                diversity: ["1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "men_holding_hands_tone2_tone3",
                  "men_holding_hands_medium_light_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFC‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFD",
                unicodeVersion: 12.1,
                diversity: ["1f3fc", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "men_holding_hands_tone2_tone4",
                  "men_holding_hands_medium_light_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFC‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFE",
                unicodeVersion: 12.1,
                diversity: ["1f3fc", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "men_holding_hands_tone2_tone5",
                  "men_holding_hands_medium_light_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFC‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFF",
                unicodeVersion: 12.1,
                diversity: ["1f3fc", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "men_holding_hands_tone3_tone1",
                  "men_holding_hands_medium_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFD‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFB",
                unicodeVersion: 12,
                diversity: ["1f3fd", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "men_holding_hands_tone3_tone2",
                  "men_holding_hands_medium_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFD‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFC",
                unicodeVersion: 12,
                diversity: ["1f3fd", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "men_holding_hands_tone3",
                  "men_holding_hands_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC6C\uD83C\uDFFD",
                unicodeVersion: 12,
                diversity: ["1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "men_holding_hands_tone3_tone4",
                  "men_holding_hands_medium_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFD‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFE",
                unicodeVersion: 12.1,
                diversity: ["1f3fd", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "men_holding_hands_tone3_tone5",
                  "men_holding_hands_medium_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFD‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFF",
                unicodeVersion: 12.1,
                diversity: ["1f3fd", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "men_holding_hands_tone4_tone1",
                  "men_holding_hands_medium_dark_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFE‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFB",
                unicodeVersion: 12,
                diversity: ["1f3fe", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "men_holding_hands_tone4_tone2",
                  "men_holding_hands_medium_dark_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFE‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFC",
                unicodeVersion: 12,
                diversity: ["1f3fe", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "men_holding_hands_tone4_tone3",
                  "men_holding_hands_medium_dark_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFE‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFD",
                unicodeVersion: 12,
                diversity: ["1f3fe", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "men_holding_hands_tone4",
                  "men_holding_hands_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC6C\uD83C\uDFFE",
                unicodeVersion: 12,
                diversity: ["1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "men_holding_hands_tone4_tone5",
                  "men_holding_hands_medium_dark_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFE‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFF",
                unicodeVersion: 12.1,
                diversity: ["1f3fe", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "men_holding_hands_tone5_tone1",
                  "men_holding_hands_dark_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFF‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFB",
                unicodeVersion: 12,
                diversity: ["1f3ff", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "men_holding_hands_tone5_tone2",
                  "men_holding_hands_dark_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFF‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFC",
                unicodeVersion: 12,
                diversity: ["1f3ff", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "men_holding_hands_tone5_tone3",
                  "men_holding_hands_dark_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFF‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFD",
                unicodeVersion: 12,
                diversity: ["1f3ff", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "men_holding_hands_tone5_tone4",
                  "men_holding_hands_dark_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFF‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFE",
                unicodeVersion: 12,
                diversity: ["1f3ff", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "men_holding_hands_tone5",
                  "men_holding_hands_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC6C\uD83C\uDFFF",
                unicodeVersion: 12,
                diversity: ["1f3ff"],
                hasMultiDiversityParent: !0,
              },
            ],
            hasMultiDiversity: !0,
          },
          {
            names: ["couple_with_heart"],
            surrogates: "\uD83D\uDC91",
            unicodeVersion: 6,
            diversityChildren: [
              {
                names: [
                  "couple_with_heart_tone1",
                  "couple_with_heart_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC91\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_person_person_tone1_tone2",
                  "couple_with_heart_person_person_light_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFB‍❤️‍\uD83E\uDDD1\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3fb", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_person_person_tone1_tone3",
                  "couple_with_heart_person_person_light_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFB‍❤️‍\uD83E\uDDD1\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3fb", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_person_person_tone1_tone4",
                  "couple_with_heart_person_person_light_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFB‍❤️‍\uD83E\uDDD1\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3fb", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_person_person_tone1_tone5",
                  "couple_with_heart_person_person_light_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFB‍❤️‍\uD83E\uDDD1\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3fb", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_person_person_tone2_tone1",
                  "couple_with_heart_person_person_medium_light_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFC‍❤️‍\uD83E\uDDD1\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3fc", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_tone2",
                  "couple_with_heart_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDC91\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_person_person_tone2_tone3",
                  "couple_with_heart_person_person_medium_light_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFC‍❤️‍\uD83E\uDDD1\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3fc", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_person_person_tone2_tone4",
                  "couple_with_heart_person_person_medium_light_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFC‍❤️‍\uD83E\uDDD1\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3fc", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_person_person_tone2_tone5",
                  "couple_with_heart_person_person_medium_light_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFC‍❤️‍\uD83E\uDDD1\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3fc", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_person_person_tone3_tone1",
                  "couple_with_heart_person_person_medium_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFD‍❤️‍\uD83E\uDDD1\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3fd", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_person_person_tone3_tone2",
                  "couple_with_heart_person_person_medium_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFD‍❤️‍\uD83E\uDDD1\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3fd", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_tone3",
                  "couple_with_heart_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDC91\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_person_person_tone3_tone4",
                  "couple_with_heart_person_person_medium_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFD‍❤️‍\uD83E\uDDD1\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3fd", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_person_person_tone3_tone5",
                  "couple_with_heart_person_person_medium_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFD‍❤️‍\uD83E\uDDD1\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3fd", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_person_person_tone4_tone1",
                  "couple_with_heart_person_person_medium_dark_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFE‍❤️‍\uD83E\uDDD1\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3fe", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_person_person_tone4_tone2",
                  "couple_with_heart_person_person_medium_dark_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFE‍❤️‍\uD83E\uDDD1\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3fe", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_person_person_tone4_tone3",
                  "couple_with_heart_person_person_medium_dark_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFE‍❤️‍\uD83E\uDDD1\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3fe", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_tone4",
                  "couple_with_heart_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC91\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_person_person_tone4_tone5",
                  "couple_with_heart_person_person_medium_dark_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFE‍❤️‍\uD83E\uDDD1\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3fe", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_person_person_tone5_tone1",
                  "couple_with_heart_person_person_dark_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFF‍❤️‍\uD83E\uDDD1\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3ff", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_person_person_tone5_tone2",
                  "couple_with_heart_person_person_dark_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFF‍❤️‍\uD83E\uDDD1\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3ff", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_person_person_tone5_tone3",
                  "couple_with_heart_person_person_dark_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFF‍❤️‍\uD83E\uDDD1\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3ff", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_person_person_tone5_tone4",
                  "couple_with_heart_person_person_dark_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFF‍❤️‍\uD83E\uDDD1\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3ff", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_tone5",
                  "couple_with_heart_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDC91\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3ff"],
                hasMultiDiversityParent: !0,
              },
            ],
            hasMultiDiversity: !0,
          },
          {
            names: ["couple_with_heart_woman_man"],
            surrogates: "\uD83D\uDC69‍❤️‍\uD83D\uDC68",
            unicodeVersion: 6,
            diversityChildren: [
              {
                names: [
                  "couple_with_heart_woman_man_tone1",
                  "couple_with_heart_woman_man_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC68\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_man_tone1_tone2",
                  "couple_with_heart_woman_man_light_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC68\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3fb", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_man_tone1_tone3",
                  "couple_with_heart_woman_man_light_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC68\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3fb", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_man_tone1_tone4",
                  "couple_with_heart_woman_man_light_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC68\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3fb", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_man_tone1_tone5",
                  "couple_with_heart_woman_man_light_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC68\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3fb", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_man_tone2_tone1",
                  "couple_with_heart_woman_man_medium_light_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC68\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3fc", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_man_tone2",
                  "couple_with_heart_woman_man_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC68\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_man_tone2_tone3",
                  "couple_with_heart_woman_man_medium_light_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC68\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3fc", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_man_tone2_tone4",
                  "couple_with_heart_woman_man_medium_light_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC68\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3fc", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_man_tone2_tone5",
                  "couple_with_heart_woman_man_medium_light_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC68\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3fc", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_man_tone3_tone1",
                  "couple_with_heart_woman_man_medium_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC68\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3fd", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_man_tone3_tone2",
                  "couple_with_heart_woman_man_medium_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC68\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3fd", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_man_tone3",
                  "couple_with_heart_woman_man_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC68\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_man_tone3_tone4",
                  "couple_with_heart_woman_man_medium_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC68\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3fd", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_man_tone3_tone5",
                  "couple_with_heart_woman_man_medium_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC68\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3fd", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_man_tone4_tone1",
                  "couple_with_heart_woman_man_medium_dark_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC68\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3fe", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_man_tone4_tone2",
                  "couple_with_heart_woman_man_medium_dark_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC68\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3fe", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_man_tone4_tone3",
                  "couple_with_heart_woman_man_medium_dark_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC68\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3fe", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_man_tone4",
                  "couple_with_heart_woman_man_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC68\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_man_tone4_tone5",
                  "couple_with_heart_woman_man_medium_dark_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC68\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3fe", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_man_tone5_tone1",
                  "couple_with_heart_woman_man_dark_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC68\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3ff", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_man_tone5_tone2",
                  "couple_with_heart_woman_man_dark_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC68\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3ff", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_man_tone5_tone3",
                  "couple_with_heart_woman_man_dark_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC68\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3ff", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_man_tone5_tone4",
                  "couple_with_heart_woman_man_dark_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC68\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3ff", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_man_tone5",
                  "couple_with_heart_woman_man_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC68\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3ff"],
                hasMultiDiversityParent: !0,
              },
            ],
            hasMultiDiversity: !0,
          },
          {
            names: ["couple_ww", "couple_with_heart_ww"],
            surrogates: "\uD83D\uDC69‍❤️‍\uD83D\uDC69",
            unicodeVersion: 6,
            diversityChildren: [
              {
                names: [
                  "couple_with_heart_woman_woman_tone1",
                  "couple_with_heart_woman_woman_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC69\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_woman_tone1_tone2",
                  "couple_with_heart_woman_woman_light_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC69\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3fb", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_woman_tone1_tone3",
                  "couple_with_heart_woman_woman_light_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC69\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3fb", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_woman_tone1_tone4",
                  "couple_with_heart_woman_woman_light_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC69\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3fb", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_woman_tone1_tone5",
                  "couple_with_heart_woman_woman_light_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC69\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3fb", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_woman_tone2_tone1",
                  "couple_with_heart_woman_woman_medium_light_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC69\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3fc", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_woman_tone2",
                  "couple_with_heart_woman_woman_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC69\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_woman_tone2_tone3",
                  "couple_with_heart_woman_woman_medium_light_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC69\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3fc", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_woman_tone2_tone4",
                  "couple_with_heart_woman_woman_medium_light_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC69\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3fc", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_woman_tone2_tone5",
                  "couple_with_heart_woman_woman_medium_light_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC69\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3fc", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_woman_tone3_tone1",
                  "couple_with_heart_woman_woman_medium_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC69\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3fd", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_woman_tone3_tone2",
                  "couple_with_heart_woman_woman_medium_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC69\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3fd", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_woman_tone3",
                  "couple_with_heart_woman_woman_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC69\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_woman_tone3_tone4",
                  "couple_with_heart_woman_woman_medium_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC69\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3fd", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_woman_tone3_tone5",
                  "couple_with_heart_woman_woman_medium_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC69\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3fd", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_woman_tone4_tone1",
                  "couple_with_heart_woman_woman_medium_dark_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC69\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3fe", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_woman_tone4_tone2",
                  "couple_with_heart_woman_woman_medium_dark_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC69\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3fe", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_woman_tone4_tone3",
                  "couple_with_heart_woman_woman_medium_dark_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC69\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3fe", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_woman_tone4",
                  "couple_with_heart_woman_woman_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC69\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_woman_tone4_tone5",
                  "couple_with_heart_woman_woman_medium_dark_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC69\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3fe", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_woman_tone5_tone1",
                  "couple_with_heart_woman_woman_dark_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC69\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3ff", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_woman_tone5_tone2",
                  "couple_with_heart_woman_woman_dark_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC69\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3ff", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_woman_tone5_tone3",
                  "couple_with_heart_woman_woman_dark_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC69\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3ff", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_woman_tone5_tone4",
                  "couple_with_heart_woman_woman_dark_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC69\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3ff", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_woman_woman_tone5",
                  "couple_with_heart_woman_woman_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC69\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3ff"],
                hasMultiDiversityParent: !0,
              },
            ],
            hasMultiDiversity: !0,
          },
          {
            names: ["couple_mm", "couple_with_heart_mm"],
            surrogates: "\uD83D\uDC68‍❤️‍\uD83D\uDC68",
            unicodeVersion: 6,
            diversityChildren: [
              {
                names: [
                  "couple_with_heart_man_man_tone1",
                  "couple_with_heart_man_man_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFB‍❤️‍\uD83D\uDC68\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_man_man_tone1_tone2",
                  "couple_with_heart_man_man_light_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFB‍❤️‍\uD83D\uDC68\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3fb", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_man_man_tone1_tone3",
                  "couple_with_heart_man_man_light_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFB‍❤️‍\uD83D\uDC68\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3fb", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_man_man_tone1_tone4",
                  "couple_with_heart_man_man_light_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFB‍❤️‍\uD83D\uDC68\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3fb", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_man_man_tone1_tone5",
                  "couple_with_heart_man_man_light_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFB‍❤️‍\uD83D\uDC68\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3fb", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_man_man_tone2_tone1",
                  "couple_with_heart_man_man_medium_light_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFC‍❤️‍\uD83D\uDC68\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3fc", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_man_man_tone2",
                  "couple_with_heart_man_man_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFC‍❤️‍\uD83D\uDC68\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_man_man_tone2_tone3",
                  "couple_with_heart_man_man_medium_light_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFC‍❤️‍\uD83D\uDC68\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3fc", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_man_man_tone2_tone4",
                  "couple_with_heart_man_man_medium_light_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFC‍❤️‍\uD83D\uDC68\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3fc", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_man_man_tone2_tone5",
                  "couple_with_heart_man_man_medium_light_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFC‍❤️‍\uD83D\uDC68\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3fc", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_man_man_tone3_tone1",
                  "couple_with_heart_man_man_medium_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFD‍❤️‍\uD83D\uDC68\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3fd", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_man_man_tone3_tone2",
                  "couple_with_heart_man_man_medium_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFD‍❤️‍\uD83D\uDC68\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3fd", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_man_man_tone3",
                  "couple_with_heart_man_man_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFD‍❤️‍\uD83D\uDC68\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_man_man_tone3_tone4",
                  "couple_with_heart_man_man_medium_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFD‍❤️‍\uD83D\uDC68\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3fd", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_man_man_tone3_tone5",
                  "couple_with_heart_man_man_medium_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFD‍❤️‍\uD83D\uDC68\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3fd", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_man_man_tone4_tone1",
                  "couple_with_heart_man_man_medium_dark_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFE‍❤️‍\uD83D\uDC68\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3fe", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_man_man_tone4_tone2",
                  "couple_with_heart_man_man_medium_dark_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFE‍❤️‍\uD83D\uDC68\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3fe", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_man_man_tone4_tone3",
                  "couple_with_heart_man_man_medium_dark_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFE‍❤️‍\uD83D\uDC68\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3fe", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_man_man_tone4",
                  "couple_with_heart_man_man_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFE‍❤️‍\uD83D\uDC68\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_man_man_tone4_tone5",
                  "couple_with_heart_man_man_medium_dark_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFE‍❤️‍\uD83D\uDC68\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3fe", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_man_man_tone5_tone1",
                  "couple_with_heart_man_man_dark_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFF‍❤️‍\uD83D\uDC68\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3ff", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_man_man_tone5_tone2",
                  "couple_with_heart_man_man_dark_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFF‍❤️‍\uD83D\uDC68\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3ff", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_man_man_tone5_tone3",
                  "couple_with_heart_man_man_dark_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFF‍❤️‍\uD83D\uDC68\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3ff", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_man_man_tone5_tone4",
                  "couple_with_heart_man_man_dark_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFF‍❤️‍\uD83D\uDC68\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3ff", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "couple_with_heart_man_man_tone5",
                  "couple_with_heart_man_man_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFF‍❤️‍\uD83D\uDC68\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3ff"],
                hasMultiDiversityParent: !0,
              },
            ],
            hasMultiDiversity: !0,
          },
          {
            names: ["couplekiss"],
            surrogates: "\uD83D\uDC8F",
            unicodeVersion: 6,
            diversityChildren: [
              {
                names: ["kiss_tone1", "kiss_light_skin_tone"],
                surrogates: "\uD83D\uDC8F\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_person_person_tone1_tone2",
                  "kiss_person_person_light_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFB‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3fb", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_person_person_tone1_tone3",
                  "kiss_person_person_light_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFB‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3fb", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_person_person_tone1_tone4",
                  "kiss_person_person_light_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFB‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3fb", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_person_person_tone1_tone5",
                  "kiss_person_person_light_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFB‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3fb", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_person_person_tone2_tone1",
                  "kiss_person_person_medium_light_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFC‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3fc", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: ["kiss_tone2", "kiss_medium_light_skin_tone"],
                surrogates: "\uD83D\uDC8F\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_person_person_tone2_tone3",
                  "kiss_person_person_medium_light_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFC‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3fc", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_person_person_tone2_tone4",
                  "kiss_person_person_medium_light_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFC‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3fc", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_person_person_tone2_tone5",
                  "kiss_person_person_medium_light_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFC‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3fc", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_person_person_tone3_tone1",
                  "kiss_person_person_medium_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFD‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3fd", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_person_person_tone3_tone2",
                  "kiss_person_person_medium_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFD‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3fd", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: ["kiss_tone3", "kiss_medium_skin_tone"],
                surrogates: "\uD83D\uDC8F\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_person_person_tone3_tone4",
                  "kiss_person_person_medium_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFD‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3fd", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_person_person_tone3_tone5",
                  "kiss_person_person_medium_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFD‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3fd", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_person_person_tone4_tone1",
                  "kiss_person_person_medium_dark_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFE‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3fe", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_person_person_tone4_tone2",
                  "kiss_person_person_medium_dark_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFE‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3fe", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_person_person_tone4_tone3",
                  "kiss_person_person_medium_dark_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFE‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3fe", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: ["kiss_tone4", "kiss_medium_dark_skin_tone"],
                surrogates: "\uD83D\uDC8F\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_person_person_tone4_tone5",
                  "kiss_person_person_medium_dark_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFE‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3fe", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_person_person_tone5_tone1",
                  "kiss_person_person_dark_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFF‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3ff", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_person_person_tone5_tone2",
                  "kiss_person_person_dark_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFF‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3ff", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_person_person_tone5_tone3",
                  "kiss_person_person_dark_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFF‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3ff", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_person_person_tone5_tone4",
                  "kiss_person_person_dark_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83E\uDDD1\uD83C\uDFFF‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3ff", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: ["kiss_tone5", "kiss_dark_skin_tone"],
                surrogates: "\uD83D\uDC8F\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3ff"],
                hasMultiDiversityParent: !0,
              },
            ],
            hasMultiDiversity: !0,
          },
          {
            names: ["kiss_woman_man"],
            surrogates: "\uD83D\uDC69‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68",
            unicodeVersion: 6,
            diversityChildren: [
              {
                names: [
                  "kiss_woman_man_tone1",
                  "kiss_woman_man_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_man_tone1_tone2",
                  "kiss_woman_man_light_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3fb", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_man_tone1_tone3",
                  "kiss_woman_man_light_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3fb", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_man_tone1_tone4",
                  "kiss_woman_man_light_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3fb", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_man_tone1_tone5",
                  "kiss_woman_man_light_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3fb", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_man_tone2_tone1",
                  "kiss_woman_man_medium_light_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3fc", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_man_tone2",
                  "kiss_woman_man_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_man_tone2_tone3",
                  "kiss_woman_man_medium_light_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3fc", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_man_tone2_tone4",
                  "kiss_woman_man_medium_light_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3fc", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_man_tone2_tone5",
                  "kiss_woman_man_medium_light_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3fc", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_man_tone3_tone1",
                  "kiss_woman_man_medium_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3fd", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_man_tone3_tone2",
                  "kiss_woman_man_medium_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3fd", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_man_tone3",
                  "kiss_woman_man_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_man_tone3_tone4",
                  "kiss_woman_man_medium_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3fd", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_man_tone3_tone5",
                  "kiss_woman_man_medium_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3fd", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_man_tone4_tone1",
                  "kiss_woman_man_medium_dark_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3fe", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_man_tone4_tone2",
                  "kiss_woman_man_medium_dark_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3fe", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_man_tone4_tone3",
                  "kiss_woman_man_medium_dark_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3fe", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_man_tone4",
                  "kiss_woman_man_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_man_tone4_tone5",
                  "kiss_woman_man_medium_dark_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3fe", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_man_tone5_tone1",
                  "kiss_woman_man_dark_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3ff", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_man_tone5_tone2",
                  "kiss_woman_man_dark_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3ff", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_man_tone5_tone3",
                  "kiss_woman_man_dark_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3ff", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_man_tone5_tone4",
                  "kiss_woman_man_dark_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3ff", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_man_tone5",
                  "kiss_woman_man_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3ff"],
                hasMultiDiversityParent: !0,
              },
            ],
            hasMultiDiversity: !0,
          },
          {
            names: ["kiss_ww", "couplekiss_ww"],
            surrogates: "\uD83D\uDC69‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69",
            unicodeVersion: 6,
            diversityChildren: [
              {
                names: [
                  "kiss_woman_woman_tone1",
                  "kiss_woman_woman_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_woman_tone1_tone2",
                  "kiss_woman_woman_light_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3fb", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_woman_tone1_tone3",
                  "kiss_woman_woman_light_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3fb", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_woman_tone1_tone4",
                  "kiss_woman_woman_light_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3fb", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_woman_tone1_tone5",
                  "kiss_woman_woman_light_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3fb", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_woman_tone2_tone1",
                  "kiss_woman_woman_medium_light_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3fc", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_woman_tone2",
                  "kiss_woman_woman_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_woman_tone2_tone3",
                  "kiss_woman_woman_medium_light_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3fc", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_woman_tone2_tone4",
                  "kiss_woman_woman_medium_light_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3fc", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_woman_tone2_tone5",
                  "kiss_woman_woman_medium_light_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3fc", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_woman_tone3_tone1",
                  "kiss_woman_woman_medium_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3fd", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_woman_tone3_tone2",
                  "kiss_woman_woman_medium_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3fd", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_woman_tone3",
                  "kiss_woman_woman_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_woman_tone3_tone4",
                  "kiss_woman_woman_medium_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3fd", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_woman_tone3_tone5",
                  "kiss_woman_woman_medium_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3fd", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_woman_tone4_tone1",
                  "kiss_woman_woman_medium_dark_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3fe", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_woman_tone4_tone2",
                  "kiss_woman_woman_medium_dark_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3fe", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_woman_tone4_tone3",
                  "kiss_woman_woman_medium_dark_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3fe", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_woman_tone4",
                  "kiss_woman_woman_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_woman_tone4_tone5",
                  "kiss_woman_woman_medium_dark_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3fe", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_woman_tone5_tone1",
                  "kiss_woman_woman_dark_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3ff", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_woman_tone5_tone2",
                  "kiss_woman_woman_dark_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3ff", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_woman_tone5_tone3",
                  "kiss_woman_woman_dark_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3ff", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_woman_tone5_tone4",
                  "kiss_woman_woman_dark_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3ff", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_woman_woman_tone5",
                  "kiss_woman_woman_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3ff"],
                hasMultiDiversityParent: !0,
              },
            ],
            hasMultiDiversity: !0,
          },
          {
            names: ["kiss_mm", "couplekiss_mm", "kiss_man_man"],
            surrogates: "\uD83D\uDC68‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68",
            unicodeVersion: 6,
            diversityChildren: [
              {
                names: ["kiss_man_man_tone1", "kiss_man_man_light_skin_tone"],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFB‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_man_man_tone1_tone2",
                  "kiss_man_man_light_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFB‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3fb", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_man_man_tone1_tone3",
                  "kiss_man_man_light_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFB‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3fb", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_man_man_tone1_tone4",
                  "kiss_man_man_light_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFB‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3fb", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_man_man_tone1_tone5",
                  "kiss_man_man_light_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFB‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3fb", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_man_man_tone2_tone1",
                  "kiss_man_man_medium_light_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFC‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3fc", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_man_man_tone2",
                  "kiss_man_man_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFC‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_man_man_tone2_tone3",
                  "kiss_man_man_medium_light_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFC‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3fc", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_man_man_tone2_tone4",
                  "kiss_man_man_medium_light_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFC‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3fc", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_man_man_tone2_tone5",
                  "kiss_man_man_medium_light_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFC‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3fc", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_man_man_tone3_tone1",
                  "kiss_man_man_medium_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFD‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3fd", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_man_man_tone3_tone2",
                  "kiss_man_man_medium_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFD‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3fd", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: ["kiss_man_man_tone3", "kiss_man_man_medium_skin_tone"],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFD‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_man_man_tone3_tone4",
                  "kiss_man_man_medium_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFD‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3fd", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_man_man_tone3_tone5",
                  "kiss_man_man_medium_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFD‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3fd", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_man_man_tone4_tone1",
                  "kiss_man_man_medium_dark_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFE‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3fe", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_man_man_tone4_tone2",
                  "kiss_man_man_medium_dark_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFE‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3fe", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_man_man_tone4_tone3",
                  "kiss_man_man_medium_dark_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFE‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3fe", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_man_man_tone4",
                  "kiss_man_man_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFE‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_man_man_tone4_tone5",
                  "kiss_man_man_medium_dark_skin_tone_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFE‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3fe", "1f3ff"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_man_man_tone5_tone1",
                  "kiss_man_man_dark_skin_tone_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFF‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFB",
                unicodeVersion: 13.1,
                diversity: ["1f3ff", "1f3fb"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_man_man_tone5_tone2",
                  "kiss_man_man_dark_skin_tone_medium_light_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFF‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFC",
                unicodeVersion: 13.1,
                diversity: ["1f3ff", "1f3fc"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_man_man_tone5_tone3",
                  "kiss_man_man_dark_skin_tone_medium_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFF‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFD",
                unicodeVersion: 13.1,
                diversity: ["1f3ff", "1f3fd"],
                hasMultiDiversityParent: !0,
              },
              {
                names: [
                  "kiss_man_man_tone5_tone4",
                  "kiss_man_man_dark_skin_tone_medium_dark_skin_tone",
                ],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFF‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFE",
                unicodeVersion: 13.1,
                diversity: ["1f3ff", "1f3fe"],
                hasMultiDiversityParent: !0,
              },
              {
                names: ["kiss_man_man_tone5", "kiss_man_man_dark_skin_tone"],
                surrogates:
                  "\uD83D\uDC68\uD83C\uDFFF‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFF",
                unicodeVersion: 13.1,
                diversity: ["1f3ff"],
                hasMultiDiversityParent: !0,
              },
            ],
            hasMultiDiversity: !0,
          },
          { names: ["family"], surrogates: "\uD83D\uDC6A", unicodeVersion: 6 },
          {
            names: ["family_man_woman_boy"],
            surrogates: "\uD83D\uDC68‍\uD83D\uDC69‍\uD83D\uDC66",
            unicodeVersion: 6,
          },
          {
            names: ["family_mwg"],
            surrogates: "\uD83D\uDC68‍\uD83D\uDC69‍\uD83D\uDC67",
            unicodeVersion: 6,
          },
          {
            names: ["family_mwgb"],
            surrogates: "\uD83D\uDC68‍\uD83D\uDC69‍\uD83D\uDC67‍\uD83D\uDC66",
            unicodeVersion: 6,
          },
          {
            names: ["family_mwbb"],
            surrogates: "\uD83D\uDC68‍\uD83D\uDC69‍\uD83D\uDC66‍\uD83D\uDC66",
            unicodeVersion: 6,
          },
          {
            names: ["family_mwgg"],
            surrogates: "\uD83D\uDC68‍\uD83D\uDC69‍\uD83D\uDC67‍\uD83D\uDC67",
            unicodeVersion: 6,
          },
          {
            names: ["family_wwb"],
            surrogates: "\uD83D\uDC69‍\uD83D\uDC69‍\uD83D\uDC66",
            unicodeVersion: 6,
          },
          {
            names: ["family_wwg"],
            surrogates: "\uD83D\uDC69‍\uD83D\uDC69‍\uD83D\uDC67",
            unicodeVersion: 6,
          },
          {
            names: ["family_wwgb"],
            surrogates: "\uD83D\uDC69‍\uD83D\uDC69‍\uD83D\uDC67‍\uD83D\uDC66",
            unicodeVersion: 6,
          },
          {
            names: ["family_wwbb"],
            surrogates: "\uD83D\uDC69‍\uD83D\uDC69‍\uD83D\uDC66‍\uD83D\uDC66",
            unicodeVersion: 6,
          },
          {
            names: ["family_wwgg"],
            surrogates: "\uD83D\uDC69‍\uD83D\uDC69‍\uD83D\uDC67‍\uD83D\uDC67",
            unicodeVersion: 6,
          },
          {
            names: ["family_mmb"],
            surrogates: "\uD83D\uDC68‍\uD83D\uDC68‍\uD83D\uDC66",
            unicodeVersion: 6,
          },
          {
            names: ["family_mmg"],
            surrogates: "\uD83D\uDC68‍\uD83D\uDC68‍\uD83D\uDC67",
            unicodeVersion: 6,
          },
          {
            names: ["family_mmgb"],
            surrogates: "\uD83D\uDC68‍\uD83D\uDC68‍\uD83D\uDC67‍\uD83D\uDC66",
            unicodeVersion: 6,
          },
          {
            names: ["family_mmbb"],
            surrogates: "\uD83D\uDC68‍\uD83D\uDC68‍\uD83D\uDC66‍\uD83D\uDC66",
            unicodeVersion: 6,
          },
          {
            names: ["family_mmgg"],
            surrogates: "\uD83D\uDC68‍\uD83D\uDC68‍\uD83D\uDC67‍\uD83D\uDC67",
            unicodeVersion: 6,
          },
          {
            names: ["family_woman_boy"],
            surrogates: "\uD83D\uDC69‍\uD83D\uDC66",
            unicodeVersion: 6,
          },
          {
            names: ["family_woman_girl"],
            surrogates: "\uD83D\uDC69‍\uD83D\uDC67",
            unicodeVersion: 6,
          },
          {
            names: ["family_woman_girl_boy"],
            surrogates: "\uD83D\uDC69‍\uD83D\uDC67‍\uD83D\uDC66",
            unicodeVersion: 6,
          },
          {
            names: ["family_woman_boy_boy"],
            surrogates: "\uD83D\uDC69‍\uD83D\uDC66‍\uD83D\uDC66",
            unicodeVersion: 6,
          },
          {
            names: ["family_woman_girl_girl"],
            surrogates: "\uD83D\uDC69‍\uD83D\uDC67‍\uD83D\uDC67",
            unicodeVersion: 6,
          },
          {
            names: ["family_man_boy"],
            surrogates: "\uD83D\uDC68‍\uD83D\uDC66",
            unicodeVersion: 6,
          },
          {
            names: ["family_man_girl"],
            surrogates: "\uD83D\uDC68‍\uD83D\uDC67",
            unicodeVersion: 6,
          },
          {
            names: ["family_man_girl_boy"],
            surrogates: "\uD83D\uDC68‍\uD83D\uDC67‍\uD83D\uDC66",
            unicodeVersion: 6,
          },
          {
            names: ["family_man_boy_boy"],
            surrogates: "\uD83D\uDC68‍\uD83D\uDC66‍\uD83D\uDC66",
            unicodeVersion: 6,
          },
          {
            names: ["family_man_girl_girl"],
            surrogates: "\uD83D\uDC68‍\uD83D\uDC67‍\uD83D\uDC67",
            unicodeVersion: 6,
          },
          { names: ["knot"], surrogates: "\uD83E\uDEA2", unicodeVersion: 13 },
          { names: ["yarn"], surrogates: "\uD83E\uDDF6", unicodeVersion: 11 },
          { names: ["thread"], surrogates: "\uD83E\uDDF5", unicodeVersion: 11 },
          {
            names: ["sewing_needle"],
            surrogates: "\uD83E\uDEA1",
            unicodeVersion: 13,
          },
          { names: ["coat"], surrogates: "\uD83E\uDDE5", unicodeVersion: 10 },
          {
            names: ["lab_coat"],
            surrogates: "\uD83E\uDD7C",
            unicodeVersion: 11,
          },
          {
            names: ["safety_vest"],
            surrogates: "\uD83E\uDDBA",
            unicodeVersion: 12,
          },
          {
            names: ["womans_clothes"],
            surrogates: "\uD83D\uDC5A",
            unicodeVersion: 6,
          },
          {
            names: ["shirt", "t_shirt"],
            surrogates: "\uD83D\uDC55",
            unicodeVersion: 6,
          },
          { names: ["jeans"], surrogates: "\uD83D\uDC56", unicodeVersion: 6 },
          { names: ["briefs"], surrogates: "\uD83E\uDE72", unicodeVersion: 12 },
          { names: ["shorts"], surrogates: "\uD83E\uDE73", unicodeVersion: 12 },
          { names: ["necktie"], surrogates: "\uD83D\uDC54", unicodeVersion: 6 },
          { names: ["dress"], surrogates: "\uD83D\uDC57", unicodeVersion: 6 },
          { names: ["bikini"], surrogates: "\uD83D\uDC59", unicodeVersion: 6 },
          {
            names: ["one_piece_swimsuit"],
            surrogates: "\uD83E\uDE71",
            unicodeVersion: 12,
          },
          { names: ["kimono"], surrogates: "\uD83D\uDC58", unicodeVersion: 6 },
          { names: ["sari"], surrogates: "\uD83E\uDD7B", unicodeVersion: 12 },
          {
            names: ["thong_sandal"],
            surrogates: "\uD83E\uDE74",
            unicodeVersion: 13,
          },
          {
            names: ["womans_flat_shoe", "flat_shoe"],
            surrogates: "\uD83E\uDD7F",
            unicodeVersion: 11,
          },
          {
            names: ["high_heel"],
            surrogates: "\uD83D\uDC60",
            unicodeVersion: 6,
          },
          {
            names: ["sandal", "womans_sandal"],
            surrogates: "\uD83D\uDC61",
            unicodeVersion: 6,
          },
          {
            names: ["boot", "womans_boot"],
            surrogates: "\uD83D\uDC62",
            unicodeVersion: 6,
          },
          {
            names: ["mans_shoe"],
            surrogates: "\uD83D\uDC5E",
            unicodeVersion: 6,
          },
          {
            names: ["athletic_shoe", "running_shoe"],
            surrogates: "\uD83D\uDC5F",
            unicodeVersion: 6,
          },
          {
            names: ["hiking_boot"],
            surrogates: "\uD83E\uDD7E",
            unicodeVersion: 11,
          },
          { names: ["socks"], surrogates: "\uD83E\uDDE6", unicodeVersion: 10 },
          { names: ["gloves"], surrogates: "\uD83E\uDDE4", unicodeVersion: 10 },
          { names: ["scarf"], surrogates: "\uD83E\uDDE3", unicodeVersion: 10 },
          {
            names: ["tophat", "top_hat"],
            surrogates: "\uD83C\uDFA9",
            unicodeVersion: 6,
          },
          {
            names: ["billed_cap"],
            surrogates: "\uD83E\uDDE2",
            unicodeVersion: 10,
          },
          {
            names: ["womans_hat"],
            surrogates: "\uD83D\uDC52",
            unicodeVersion: 6,
          },
          {
            names: ["mortar_board"],
            surrogates: "\uD83C\uDF93",
            unicodeVersion: 6,
          },
          {
            names: ["helmet_with_cross", "helmet_with_white_cross"],
            surrogates: "⛑️",
            unicodeVersion: 5.2,
          },
          {
            names: ["military_helmet"],
            surrogates: "\uD83E\uDE96",
            unicodeVersion: 13,
          },
          { names: ["crown"], surrogates: "\uD83D\uDC51", unicodeVersion: 6 },
          { names: ["ring"], surrogates: "\uD83D\uDC8D", unicodeVersion: 6 },
          {
            names: ["pouch", "clutch_bag"],
            surrogates: "\uD83D\uDC5D",
            unicodeVersion: 6,
          },
          { names: ["purse"], surrogates: "\uD83D\uDC5B", unicodeVersion: 6 },
          { names: ["handbag"], surrogates: "\uD83D\uDC5C", unicodeVersion: 6 },
          {
            names: ["briefcase"],
            surrogates: "\uD83D\uDCBC",
            unicodeVersion: 6,
          },
          {
            names: ["school_satchel", "backpack"],
            surrogates: "\uD83C\uDF92",
            unicodeVersion: 6,
          },
          {
            names: ["luggage"],
            surrogates: "\uD83E\uDDF3",
            unicodeVersion: 11,
          },
          {
            names: ["eyeglasses", "glasses"],
            surrogates: "\uD83D\uDC53",
            unicodeVersion: 6,
          },
          {
            names: ["dark_sunglasses"],
            surrogates: "\uD83D\uDD76️",
            unicodeVersion: 7,
          },
          {
            names: ["goggles"],
            surrogates: "\uD83E\uDD7D",
            unicodeVersion: 11,
          },
          {
            names: ["closed_umbrella"],
            surrogates: "\uD83C\uDF02",
            unicodeVersion: 6,
          },
        ],
        nature: [
          {
            names: ["dog", "dog_face"],
            surrogates: "\uD83D\uDC36",
            unicodeVersion: 6,
          },
          {
            names: ["cat", "cat_face"],
            surrogates: "\uD83D\uDC31",
            unicodeVersion: 6,
          },
          {
            names: ["mouse", "mouse_face"],
            surrogates: "\uD83D\uDC2D",
            unicodeVersion: 6,
          },
          { names: ["hamster"], surrogates: "\uD83D\uDC39", unicodeVersion: 6 },
          {
            names: ["rabbit", "rabbit_face"],
            surrogates: "\uD83D\uDC30",
            unicodeVersion: 6,
          },
          {
            names: ["fox", "fox_face"],
            surrogates: "\uD83E\uDD8A",
            unicodeVersion: 9,
          },
          { names: ["bear"], surrogates: "\uD83D\uDC3B", unicodeVersion: 6 },
          {
            names: ["panda_face", "panda"],
            surrogates: "\uD83D\uDC3C",
            unicodeVersion: 6,
          },
          {
            names: ["polar_bear"],
            surrogates: "\uD83D\uDC3B‍❄️",
            unicodeVersion: 13,
          },
          { names: ["koala"], surrogates: "\uD83D\uDC28", unicodeVersion: 6 },
          {
            names: ["tiger", "tiger_face"],
            surrogates: "\uD83D\uDC2F",
            unicodeVersion: 6,
          },
          {
            names: ["lion_face", "lion"],
            surrogates: "\uD83E\uDD81",
            unicodeVersion: 8,
          },
          {
            names: ["cow", "cow_face"],
            surrogates: "\uD83D\uDC2E",
            unicodeVersion: 6,
          },
          {
            names: ["pig", "pig_face"],
            surrogates: "\uD83D\uDC37",
            unicodeVersion: 6,
          },
          {
            names: ["pig_nose"],
            surrogates: "\uD83D\uDC3D",
            unicodeVersion: 6,
          },
          { names: ["frog"], surrogates: "\uD83D\uDC38", unicodeVersion: 6 },
          {
            names: ["monkey_face"],
            surrogates: "\uD83D\uDC35",
            unicodeVersion: 6,
          },
          {
            names: ["see_no_evil"],
            surrogates: "\uD83D\uDE48",
            unicodeVersion: 6,
          },
          {
            names: ["hear_no_evil"],
            surrogates: "\uD83D\uDE49",
            unicodeVersion: 6,
          },
          {
            names: ["speak_no_evil"],
            surrogates: "\uD83D\uDE4A",
            unicodeVersion: 6,
          },
          { names: ["monkey"], surrogates: "\uD83D\uDC12", unicodeVersion: 6 },
          { names: ["chicken"], surrogates: "\uD83D\uDC14", unicodeVersion: 6 },
          { names: ["penguin"], surrogates: "\uD83D\uDC27", unicodeVersion: 6 },
          { names: ["bird"], surrogates: "\uD83D\uDC26", unicodeVersion: 6 },
          {
            names: ["baby_chick"],
            surrogates: "\uD83D\uDC24",
            unicodeVersion: 6,
          },
          {
            names: ["hatching_chick"],
            surrogates: "\uD83D\uDC23",
            unicodeVersion: 6,
          },
          {
            names: ["hatched_chick"],
            surrogates: "\uD83D\uDC25",
            unicodeVersion: 6,
          },
          { names: ["goose"], surrogates: "\uD83E\uDEBF", unicodeVersion: 15 },
          { names: ["duck"], surrogates: "\uD83E\uDD86", unicodeVersion: 9 },
          {
            names: ["black_bird"],
            surrogates: "\uD83D\uDC26‍⬛",
            unicodeVersion: 15,
          },
          { names: ["eagle"], surrogates: "\uD83E\uDD85", unicodeVersion: 9 },
          { names: ["owl"], surrogates: "\uD83E\uDD89", unicodeVersion: 9 },
          { names: ["bat"], surrogates: "\uD83E\uDD87", unicodeVersion: 9 },
          { names: ["wolf"], surrogates: "\uD83D\uDC3A", unicodeVersion: 6 },
          { names: ["boar"], surrogates: "\uD83D\uDC17", unicodeVersion: 6 },
          {
            names: ["horse", "horse_face"],
            surrogates: "\uD83D\uDC34",
            unicodeVersion: 6,
          },
          {
            names: ["unicorn", "unicorn_face"],
            surrogates: "\uD83E\uDD84",
            unicodeVersion: 8,
          },
          { names: ["moose"], surrogates: "\uD83E\uDECE", unicodeVersion: 15 },
          {
            names: ["bee", "honeybee"],
            surrogates: "\uD83D\uDC1D",
            unicodeVersion: 6,
          },
          { names: ["worm"], surrogates: "\uD83E\uDEB1", unicodeVersion: 13 },
          { names: ["bug"], surrogates: "\uD83D\uDC1B", unicodeVersion: 6 },
          {
            names: ["butterfly"],
            surrogates: "\uD83E\uDD8B",
            unicodeVersion: 9,
          },
          { names: ["snail"], surrogates: "\uD83D\uDC0C", unicodeVersion: 6 },
          {
            names: ["lady_beetle"],
            surrogates: "\uD83D\uDC1E",
            unicodeVersion: 6,
          },
          { names: ["ant"], surrogates: "\uD83D\uDC1C", unicodeVersion: 6 },
          { names: ["fly"], surrogates: "\uD83E\uDEB0", unicodeVersion: 13 },
          { names: ["beetle"], surrogates: "\uD83E\uDEB2", unicodeVersion: 13 },
          {
            names: ["cockroach"],
            surrogates: "\uD83E\uDEB3",
            unicodeVersion: 13,
          },
          {
            names: ["mosquito"],
            surrogates: "\uD83E\uDD9F",
            unicodeVersion: 11,
          },
          {
            names: ["cricket"],
            surrogates: "\uD83E\uDD97",
            unicodeVersion: 10,
          },
          { names: ["spider"], surrogates: "\uD83D\uDD77️", unicodeVersion: 7 },
          {
            names: ["spider_web"],
            surrogates: "\uD83D\uDD78️",
            unicodeVersion: 7,
          },
          {
            names: ["scorpion"],
            surrogates: "\uD83E\uDD82",
            unicodeVersion: 8,
          },
          { names: ["turtle"], surrogates: "\uD83D\uDC22", unicodeVersion: 6 },
          { names: ["snake"], surrogates: "\uD83D\uDC0D", unicodeVersion: 6 },
          { names: ["lizard"], surrogates: "\uD83E\uDD8E", unicodeVersion: 9 },
          { names: ["t_rex"], surrogates: "\uD83E\uDD96", unicodeVersion: 10 },
          {
            names: ["sauropod"],
            surrogates: "\uD83E\uDD95",
            unicodeVersion: 10,
          },
          { names: ["octopus"], surrogates: "\uD83D\uDC19", unicodeVersion: 6 },
          { names: ["squid"], surrogates: "\uD83E\uDD91", unicodeVersion: 9 },
          {
            names: ["jellyfish"],
            surrogates: "\uD83E\uDEBC",
            unicodeVersion: 15,
          },
          { names: ["shrimp"], surrogates: "\uD83E\uDD90", unicodeVersion: 9 },
          {
            names: ["lobster"],
            surrogates: "\uD83E\uDD9E",
            unicodeVersion: 11,
          },
          { names: ["crab"], surrogates: "\uD83E\uDD80", unicodeVersion: 8 },
          {
            names: ["blowfish"],
            surrogates: "\uD83D\uDC21",
            unicodeVersion: 6,
          },
          {
            names: ["tropical_fish"],
            surrogates: "\uD83D\uDC20",
            unicodeVersion: 6,
          },
          { names: ["fish"], surrogates: "\uD83D\uDC1F", unicodeVersion: 6 },
          { names: ["dolphin"], surrogates: "\uD83D\uDC2C", unicodeVersion: 6 },
          { names: ["whale"], surrogates: "\uD83D\uDC33", unicodeVersion: 6 },
          { names: ["whale2"], surrogates: "\uD83D\uDC0B", unicodeVersion: 6 },
          { names: ["shark"], surrogates: "\uD83E\uDD88", unicodeVersion: 9 },
          { names: ["seal"], surrogates: "\uD83E\uDDAD", unicodeVersion: 13 },
          {
            names: ["crocodile"],
            surrogates: "\uD83D\uDC0A",
            unicodeVersion: 6,
          },
          { names: ["tiger2"], surrogates: "\uD83D\uDC05", unicodeVersion: 6 },
          { names: ["leopard"], surrogates: "\uD83D\uDC06", unicodeVersion: 6 },
          { names: ["zebra"], surrogates: "\uD83E\uDD93", unicodeVersion: 10 },
          { names: ["gorilla"], surrogates: "\uD83E\uDD8D", unicodeVersion: 9 },
          {
            names: ["orangutan"],
            surrogates: "\uD83E\uDDA7",
            unicodeVersion: 12,
          },
          {
            names: ["mammoth"],
            surrogates: "\uD83E\uDDA3",
            unicodeVersion: 13,
          },
          {
            names: ["elephant"],
            surrogates: "\uD83D\uDC18",
            unicodeVersion: 6,
          },
          {
            names: ["hippopotamus"],
            surrogates: "\uD83E\uDD9B",
            unicodeVersion: 11,
          },
          {
            names: ["rhino", "rhinoceros"],
            surrogates: "\uD83E\uDD8F",
            unicodeVersion: 9,
          },
          {
            names: ["dromedary_camel"],
            surrogates: "\uD83D\uDC2A",
            unicodeVersion: 6,
          },
          { names: ["camel"], surrogates: "\uD83D\uDC2B", unicodeVersion: 6 },
          {
            names: ["giraffe"],
            surrogates: "\uD83E\uDD92",
            unicodeVersion: 10,
          },
          {
            names: ["kangaroo"],
            surrogates: "\uD83E\uDD98",
            unicodeVersion: 11,
          },
          { names: ["bison"], surrogates: "\uD83E\uDDAC", unicodeVersion: 13 },
          {
            names: ["water_buffalo"],
            surrogates: "\uD83D\uDC03",
            unicodeVersion: 6,
          },
          { names: ["ox"], surrogates: "\uD83D\uDC02", unicodeVersion: 6 },
          { names: ["cow2"], surrogates: "\uD83D\uDC04", unicodeVersion: 6 },
          { names: ["donkey"], surrogates: "\uD83E\uDECF", unicodeVersion: 15 },
          {
            names: ["racehorse"],
            surrogates: "\uD83D\uDC0E",
            unicodeVersion: 6,
          },
          { names: ["pig2"], surrogates: "\uD83D\uDC16", unicodeVersion: 6 },
          { names: ["ram"], surrogates: "\uD83D\uDC0F", unicodeVersion: 6 },
          {
            names: ["sheep", "ewe"],
            surrogates: "\uD83D\uDC11",
            unicodeVersion: 6,
          },
          { names: ["llama"], surrogates: "\uD83E\uDD99", unicodeVersion: 11 },
          { names: ["goat"], surrogates: "\uD83D\uDC10", unicodeVersion: 6 },
          { names: ["deer"], surrogates: "\uD83E\uDD8C", unicodeVersion: 9 },
          { names: ["dog2"], surrogates: "\uD83D\uDC15", unicodeVersion: 6 },
          { names: ["poodle"], surrogates: "\uD83D\uDC29", unicodeVersion: 6 },
          {
            names: ["guide_dog"],
            surrogates: "\uD83E\uDDAE",
            unicodeVersion: 12,
          },
          {
            names: ["service_dog"],
            surrogates: "\uD83D\uDC15‍\uD83E\uDDBA",
            unicodeVersion: 12,
          },
          { names: ["cat2"], surrogates: "\uD83D\uDC08", unicodeVersion: 6 },
          {
            names: ["black_cat"],
            surrogates: "\uD83D\uDC08‍⬛",
            unicodeVersion: 13,
          },
          {
            names: ["feather"],
            surrogates: "\uD83E\uDEB6",
            unicodeVersion: 13,
          },
          { names: ["wing"], surrogates: "\uD83E\uDEBD", unicodeVersion: 15 },
          { names: ["rooster"], surrogates: "\uD83D\uDC13", unicodeVersion: 6 },
          { names: ["turkey"], surrogates: "\uD83E\uDD83", unicodeVersion: 8 },
          { names: ["dodo"], surrogates: "\uD83E\uDDA4", unicodeVersion: 13 },
          {
            names: ["peacock"],
            surrogates: "\uD83E\uDD9A",
            unicodeVersion: 11,
          },
          { names: ["parrot"], surrogates: "\uD83E\uDD9C", unicodeVersion: 11 },
          { names: ["swan"], surrogates: "\uD83E\uDDA2", unicodeVersion: 11 },
          {
            names: ["flamingo"],
            surrogates: "\uD83E\uDDA9",
            unicodeVersion: 12,
          },
          {
            names: ["dove", "dove_of_peace"],
            surrogates: "\uD83D\uDD4A️",
            unicodeVersion: 7,
          },
          { names: ["rabbit2"], surrogates: "\uD83D\uDC07", unicodeVersion: 6 },
          {
            names: ["raccoon"],
            surrogates: "\uD83E\uDD9D",
            unicodeVersion: 11,
          },
          { names: ["skunk"], surrogates: "\uD83E\uDDA8", unicodeVersion: 12 },
          { names: ["badger"], surrogates: "\uD83E\uDDA1", unicodeVersion: 11 },
          { names: ["beaver"], surrogates: "\uD83E\uDDAB", unicodeVersion: 13 },
          { names: ["otter"], surrogates: "\uD83E\uDDA6", unicodeVersion: 12 },
          { names: ["sloth"], surrogates: "\uD83E\uDDA5", unicodeVersion: 12 },
          { names: ["mouse2"], surrogates: "\uD83D\uDC01", unicodeVersion: 6 },
          { names: ["rat"], surrogates: "\uD83D\uDC00", unicodeVersion: 6 },
          {
            names: ["chipmunk"],
            surrogates: "\uD83D\uDC3F️",
            unicodeVersion: 7,
          },
          {
            names: ["hedgehog"],
            surrogates: "\uD83E\uDD94",
            unicodeVersion: 10,
          },
          {
            names: ["feet", "paw_prints"],
            surrogates: "\uD83D\uDC3E",
            unicodeVersion: 6,
          },
          { names: ["dragon"], surrogates: "\uD83D\uDC09", unicodeVersion: 6 },
          {
            names: ["dragon_face"],
            surrogates: "\uD83D\uDC32",
            unicodeVersion: 6,
          },
          { names: ["cactus"], surrogates: "\uD83C\uDF35", unicodeVersion: 6 },
          {
            names: ["christmas_tree"],
            surrogates: "\uD83C\uDF84",
            unicodeVersion: 6,
          },
          {
            names: ["evergreen_tree"],
            surrogates: "\uD83C\uDF32",
            unicodeVersion: 6,
          },
          {
            names: ["deciduous_tree"],
            surrogates: "\uD83C\uDF33",
            unicodeVersion: 6,
          },
          {
            names: ["palm_tree"],
            surrogates: "\uD83C\uDF34",
            unicodeVersion: 6,
          },
          { names: ["wood"], surrogates: "\uD83E\uDEB5", unicodeVersion: 13 },
          {
            names: ["seedling"],
            surrogates: "\uD83C\uDF31",
            unicodeVersion: 6,
          },
          { names: ["herb"], surrogates: "\uD83C\uDF3F", unicodeVersion: 6 },
          { names: ["shamrock"], surrogates: "☘️", unicodeVersion: 4.1 },
          {
            names: ["four_leaf_clover"],
            surrogates: "\uD83C\uDF40",
            unicodeVersion: 6,
          },
          { names: ["bamboo"], surrogates: "\uD83C\uDF8D", unicodeVersion: 6 },
          {
            names: ["potted_plant"],
            surrogates: "\uD83E\uDEB4",
            unicodeVersion: 13,
          },
          {
            names: ["tanabata_tree"],
            surrogates: "\uD83C\uDF8B",
            unicodeVersion: 6,
          },
          { names: ["leaves"], surrogates: "\uD83C\uDF43", unicodeVersion: 6 },
          {
            names: ["fallen_leaf"],
            surrogates: "\uD83C\uDF42",
            unicodeVersion: 6,
          },
          {
            names: ["maple_leaf"],
            surrogates: "\uD83C\uDF41",
            unicodeVersion: 6,
          },
          {
            names: ["nest_with_eggs"],
            surrogates: "\uD83E\uDEBA",
            unicodeVersion: 14,
          },
          {
            names: ["empty_nest"],
            surrogates: "\uD83E\uDEB9",
            unicodeVersion: 14,
          },
          {
            names: ["mushroom"],
            surrogates: "\uD83C\uDF44",
            unicodeVersion: 6,
          },
          {
            names: ["shell", "spiral_shell"],
            surrogates: "\uD83D\uDC1A",
            unicodeVersion: 6,
          },
          { names: ["coral"], surrogates: "\uD83E\uDEB8", unicodeVersion: 14 },
          { names: ["rock"], surrogates: "\uD83E\uDEA8", unicodeVersion: 13 },
          {
            names: ["ear_of_rice", "sheaf_of_rice"],
            surrogates: "\uD83C\uDF3E",
            unicodeVersion: 6,
          },
          { names: ["bouquet"], surrogates: "\uD83D\uDC90", unicodeVersion: 6 },
          { names: ["tulip"], surrogates: "\uD83C\uDF37", unicodeVersion: 6 },
          { names: ["rose"], surrogates: "\uD83C\uDF39", unicodeVersion: 6 },
          {
            names: ["wilted_rose", "wilted_flower"],
            surrogates: "\uD83E\uDD40",
            unicodeVersion: 9,
          },
          {
            names: ["hyacinth"],
            surrogates: "\uD83E\uDEBB",
            unicodeVersion: 15,
          },
          { names: ["lotus"], surrogates: "\uD83E\uDEB7", unicodeVersion: 14 },
          {
            names: ["hibiscus"],
            surrogates: "\uD83C\uDF3A",
            unicodeVersion: 6,
          },
          {
            names: ["cherry_blossom"],
            surrogates: "\uD83C\uDF38",
            unicodeVersion: 6,
          },
          { names: ["blossom"], surrogates: "\uD83C\uDF3C", unicodeVersion: 6 },
          {
            names: ["sunflower"],
            surrogates: "\uD83C\uDF3B",
            unicodeVersion: 6,
          },
          {
            names: ["sun_with_face"],
            surrogates: "\uD83C\uDF1E",
            unicodeVersion: 6,
          },
          {
            names: ["full_moon_with_face"],
            surrogates: "\uD83C\uDF1D",
            unicodeVersion: 6,
          },
          {
            names: ["first_quarter_moon_with_face"],
            surrogates: "\uD83C\uDF1B",
            unicodeVersion: 6,
          },
          {
            names: ["last_quarter_moon_with_face"],
            surrogates: "\uD83C\uDF1C",
            unicodeVersion: 6,
          },
          {
            names: ["new_moon_with_face", "new_moon_face"],
            surrogates: "\uD83C\uDF1A",
            unicodeVersion: 6,
          },
          {
            names: ["full_moon"],
            surrogates: "\uD83C\uDF15",
            unicodeVersion: 6,
          },
          {
            names: ["waning_gibbous_moon"],
            surrogates: "\uD83C\uDF16",
            unicodeVersion: 6,
          },
          {
            names: ["last_quarter_moon"],
            surrogates: "\uD83C\uDF17",
            unicodeVersion: 6,
          },
          {
            names: ["waning_crescent_moon"],
            surrogates: "\uD83C\uDF18",
            unicodeVersion: 6,
          },
          {
            names: ["new_moon"],
            surrogates: "\uD83C\uDF11",
            unicodeVersion: 6,
          },
          {
            names: ["waxing_crescent_moon"],
            surrogates: "\uD83C\uDF12",
            unicodeVersion: 6,
          },
          {
            names: ["first_quarter_moon"],
            surrogates: "\uD83C\uDF13",
            unicodeVersion: 6,
          },
          {
            names: ["waxing_gibbous_moon"],
            surrogates: "\uD83C\uDF14",
            unicodeVersion: 6,
          },
          {
            names: ["crescent_moon"],
            surrogates: "\uD83C\uDF19",
            unicodeVersion: 6,
          },
          {
            names: ["earth_americas"],
            surrogates: "\uD83C\uDF0E",
            unicodeVersion: 6,
          },
          {
            names: ["earth_africa"],
            surrogates: "\uD83C\uDF0D",
            unicodeVersion: 6,
          },
          {
            names: ["earth_asia"],
            surrogates: "\uD83C\uDF0F",
            unicodeVersion: 6,
          },
          {
            names: ["ringed_planet"],
            surrogates: "\uD83E\uDE90",
            unicodeVersion: 12,
          },
          { names: ["dizzy"], surrogates: "\uD83D\uDCAB", unicodeVersion: 6 },
          { names: ["star"], surrogates: "⭐", unicodeVersion: 5.1 },
          {
            names: ["star2", "glowing_star"],
            surrogates: "\uD83C\uDF1F",
            unicodeVersion: 6,
          },
          { names: ["sparkles"], surrogates: "✨", unicodeVersion: 6 },
          {
            names: ["zap", "high_voltage"],
            surrogates: "⚡",
            unicodeVersion: 4,
          },
          { names: ["comet"], surrogates: "☄️", unicodeVersion: 1.1 },
          {
            names: ["boom", "collision"],
            surrogates: "\uD83D\uDCA5",
            unicodeVersion: 6,
          },
          {
            names: ["fire", "flame"],
            surrogates: "\uD83D\uDD25",
            unicodeVersion: 6,
          },
          {
            names: ["cloud_tornado", "cloud_with_tornado", "tornado"],
            surrogates: "\uD83C\uDF2A️",
            unicodeVersion: 7,
          },
          { names: ["rainbow"], surrogates: "\uD83C\uDF08", unicodeVersion: 6 },
          { names: ["sunny", "sun"], surrogates: "☀️", unicodeVersion: 1.1 },
          {
            names: ["white_sun_small_cloud", "white_sun_with_small_cloud"],
            surrogates: "\uD83C\uDF24️",
            unicodeVersion: 7,
          },
          { names: ["partly_sunny"], surrogates: "⛅", unicodeVersion: 5.2 },
          {
            names: ["white_sun_cloud", "white_sun_behind_cloud"],
            surrogates: "\uD83C\uDF25️",
            unicodeVersion: 7,
          },
          { names: ["cloud"], surrogates: "☁️", unicodeVersion: 1.1 },
          {
            names: ["white_sun_rain_cloud", "white_sun_behind_cloud_with_rain"],
            surrogates: "\uD83C\uDF26️",
            unicodeVersion: 7,
          },
          {
            names: ["cloud_rain", "cloud_with_rain"],
            surrogates: "\uD83C\uDF27️",
            unicodeVersion: 7,
          },
          {
            names: ["thunder_cloud_rain", "thunder_cloud_and_rain"],
            surrogates: "⛈️",
            unicodeVersion: 5.2,
          },
          {
            names: ["cloud_lightning", "cloud_with_lightning"],
            surrogates: "\uD83C\uDF29️",
            unicodeVersion: 7,
          },
          {
            names: ["cloud_snow", "cloud_with_snow"],
            surrogates: "\uD83C\uDF28️",
            unicodeVersion: 7,
          },
          { names: ["snowflake"], surrogates: "❄️", unicodeVersion: 1.1 },
          { names: ["snowman2"], surrogates: "☃️", unicodeVersion: 1.1 },
          { names: ["snowman"], surrogates: "⛄", unicodeVersion: 5.2 },
          {
            names: ["wind_blowing_face", "wind_face"],
            surrogates: "\uD83C\uDF2C️",
            unicodeVersion: 7,
          },
          {
            names: ["dash", "dashing_away"],
            surrogates: "\uD83D\uDCA8",
            unicodeVersion: 6,
          },
          { names: ["droplet"], surrogates: "\uD83D\uDCA7", unicodeVersion: 6 },
          {
            names: ["sweat_drops"],
            surrogates: "\uD83D\uDCA6",
            unicodeVersion: 6,
          },
          {
            names: ["bubbles"],
            surrogates: "\uD83E\uDEE7",
            unicodeVersion: 14,
          },
          { names: ["umbrella"], surrogates: "☔", unicodeVersion: 4 },
          { names: ["umbrella2"], surrogates: "☂️", unicodeVersion: 1.1 },
          {
            names: ["ocean", "water_wave"],
            surrogates: "\uD83C\uDF0A",
            unicodeVersion: 6,
          },
          { names: ["fog"], surrogates: "\uD83C\uDF2B️", unicodeVersion: 7 },
        ],
        food: [
          {
            names: ["green_apple"],
            surrogates: "\uD83C\uDF4F",
            unicodeVersion: 6,
          },
          {
            names: ["apple", "red_apple"],
            surrogates: "\uD83C\uDF4E",
            unicodeVersion: 6,
          },
          { names: ["pear"], surrogates: "\uD83C\uDF50", unicodeVersion: 6 },
          {
            names: ["tangerine"],
            surrogates: "\uD83C\uDF4A",
            unicodeVersion: 6,
          },
          { names: ["lemon"], surrogates: "\uD83C\uDF4B", unicodeVersion: 6 },
          { names: ["banana"], surrogates: "\uD83C\uDF4C", unicodeVersion: 6 },
          {
            names: ["watermelon"],
            surrogates: "\uD83C\uDF49",
            unicodeVersion: 6,
          },
          { names: ["grapes"], surrogates: "\uD83C\uDF47", unicodeVersion: 6 },
          {
            names: ["strawberry"],
            surrogates: "\uD83C\uDF53",
            unicodeVersion: 6,
          },
          {
            names: ["blueberries"],
            surrogates: "\uD83E\uDED0",
            unicodeVersion: 13,
          },
          { names: ["melon"], surrogates: "\uD83C\uDF48", unicodeVersion: 6 },
          {
            names: ["cherries"],
            surrogates: "\uD83C\uDF52",
            unicodeVersion: 6,
          },
          { names: ["peach"], surrogates: "\uD83C\uDF51", unicodeVersion: 6 },
          { names: ["mango"], surrogates: "\uD83E\uDD6D", unicodeVersion: 11 },
          {
            names: ["pineapple"],
            surrogates: "\uD83C\uDF4D",
            unicodeVersion: 6,
          },
          {
            names: ["coconut"],
            surrogates: "\uD83E\uDD65",
            unicodeVersion: 10,
          },
          {
            names: ["kiwi", "kiwifruit", "kiwi_fruit"],
            surrogates: "\uD83E\uDD5D",
            unicodeVersion: 9,
          },
          { names: ["tomato"], surrogates: "\uD83C\uDF45", unicodeVersion: 6 },
          {
            names: ["eggplant"],
            surrogates: "\uD83C\uDF46",
            unicodeVersion: 6,
          },
          { names: ["avocado"], surrogates: "\uD83E\uDD51", unicodeVersion: 9 },
          {
            names: ["pea_pod"],
            surrogates: "\uD83E\uDEDB",
            unicodeVersion: 15,
          },
          {
            names: ["broccoli"],
            surrogates: "\uD83E\uDD66",
            unicodeVersion: 10,
          },
          {
            names: ["leafy_green"],
            surrogates: "\uD83E\uDD6C",
            unicodeVersion: 11,
          },
          {
            names: ["cucumber"],
            surrogates: "\uD83E\uDD52",
            unicodeVersion: 9,
          },
          {
            names: ["hot_pepper"],
            surrogates: "\uD83C\uDF36️",
            unicodeVersion: 7,
          },
          {
            names: ["bell_pepper"],
            surrogates: "\uD83E\uDED1",
            unicodeVersion: 13,
          },
          {
            names: ["corn", "ear_of_corn"],
            surrogates: "\uD83C\uDF3D",
            unicodeVersion: 6,
          },
          { names: ["carrot"], surrogates: "\uD83E\uDD55", unicodeVersion: 9 },
          { names: ["olive"], surrogates: "\uD83E\uDED2", unicodeVersion: 13 },
          { names: ["garlic"], surrogates: "\uD83E\uDDC4", unicodeVersion: 12 },
          { names: ["onion"], surrogates: "\uD83E\uDDC5", unicodeVersion: 12 },
          { names: ["potato"], surrogates: "\uD83E\uDD54", unicodeVersion: 9 },
          {
            names: ["sweet_potato"],
            surrogates: "\uD83C\uDF60",
            unicodeVersion: 6,
          },
          {
            names: ["ginger_root"],
            surrogates: "\uD83E\uDEDA",
            unicodeVersion: 15,
          },
          {
            names: ["croissant"],
            surrogates: "\uD83E\uDD50",
            unicodeVersion: 9,
          },
          { names: ["bagel"], surrogates: "\uD83E\uDD6F", unicodeVersion: 11 },
          { names: ["bread"], surrogates: "\uD83C\uDF5E", unicodeVersion: 6 },
          {
            names: ["french_bread", "baguette_bread"],
            surrogates: "\uD83E\uDD56",
            unicodeVersion: 9,
          },
          {
            names: ["pretzel"],
            surrogates: "\uD83E\uDD68",
            unicodeVersion: 10,
          },
          {
            names: ["cheese", "cheese_wedge"],
            surrogates: "\uD83E\uDDC0",
            unicodeVersion: 8,
          },
          { names: ["egg"], surrogates: "\uD83E\uDD5A", unicodeVersion: 9 },
          { names: ["cooking"], surrogates: "\uD83C\uDF73", unicodeVersion: 6 },
          { names: ["butter"], surrogates: "\uD83E\uDDC8", unicodeVersion: 12 },
          {
            names: ["pancakes"],
            surrogates: "\uD83E\uDD5E",
            unicodeVersion: 9,
          },
          { names: ["waffle"], surrogates: "\uD83E\uDDC7", unicodeVersion: 12 },
          { names: ["bacon"], surrogates: "\uD83E\uDD53", unicodeVersion: 9 },
          {
            names: ["cut_of_meat"],
            surrogates: "\uD83E\uDD69",
            unicodeVersion: 10,
          },
          {
            names: ["poultry_leg"],
            surrogates: "\uD83C\uDF57",
            unicodeVersion: 6,
          },
          {
            names: ["meat_on_bone"],
            surrogates: "\uD83C\uDF56",
            unicodeVersion: 6,
          },
          { names: ["bone"], surrogates: "\uD83E\uDDB4", unicodeVersion: 11 },
          {
            names: ["hotdog", "hot_dog"],
            surrogates: "\uD83C\uDF2D",
            unicodeVersion: 8,
          },
          {
            names: ["hamburger"],
            surrogates: "\uD83C\uDF54",
            unicodeVersion: 6,
          },
          {
            names: ["fries", "french_fries"],
            surrogates: "\uD83C\uDF5F",
            unicodeVersion: 6,
          },
          { names: ["pizza"], surrogates: "\uD83C\uDF55", unicodeVersion: 6 },
          {
            names: ["flatbread"],
            surrogates: "\uD83E\uDED3",
            unicodeVersion: 13,
          },
          {
            names: ["sandwich"],
            surrogates: "\uD83E\uDD6A",
            unicodeVersion: 10,
          },
          {
            names: ["stuffed_flatbread", "stuffed_pita"],
            surrogates: "\uD83E\uDD59",
            unicodeVersion: 9,
          },
          {
            names: ["falafel"],
            surrogates: "\uD83E\uDDC6",
            unicodeVersion: 12,
          },
          { names: ["taco"], surrogates: "\uD83C\uDF2E", unicodeVersion: 8 },
          { names: ["burrito"], surrogates: "\uD83C\uDF2F", unicodeVersion: 8 },
          { names: ["tamale"], surrogates: "\uD83E\uDED4", unicodeVersion: 13 },
          {
            names: ["salad", "green_salad"],
            surrogates: "\uD83E\uDD57",
            unicodeVersion: 9,
          },
          {
            names: ["shallow_pan_of_food", "paella"],
            surrogates: "\uD83E\uDD58",
            unicodeVersion: 9,
          },
          { names: ["fondue"], surrogates: "\uD83E\uDED5", unicodeVersion: 13 },
          {
            names: ["canned_food"],
            surrogates: "\uD83E\uDD6B",
            unicodeVersion: 10,
          },
          { names: ["jar"], surrogates: "\uD83E\uDED9", unicodeVersion: 14 },
          {
            names: ["spaghetti"],
            surrogates: "\uD83C\uDF5D",
            unicodeVersion: 6,
          },
          {
            names: ["ramen", "steaming_bowl"],
            surrogates: "\uD83C\uDF5C",
            unicodeVersion: 6,
          },
          {
            names: ["stew", "pot_of_food"],
            surrogates: "\uD83C\uDF72",
            unicodeVersion: 6,
          },
          {
            names: ["curry", "curry_rice"],
            surrogates: "\uD83C\uDF5B",
            unicodeVersion: 6,
          },
          { names: ["sushi"], surrogates: "\uD83C\uDF63", unicodeVersion: 6 },
          {
            names: ["bento", "bento_box"],
            surrogates: "\uD83C\uDF71",
            unicodeVersion: 6,
          },
          {
            names: ["dumpling"],
            surrogates: "\uD83E\uDD5F",
            unicodeVersion: 10,
          },
          { names: ["oyster"], surrogates: "\uD83E\uDDAA", unicodeVersion: 12 },
          {
            names: ["fried_shrimp"],
            surrogates: "\uD83C\uDF64",
            unicodeVersion: 6,
          },
          {
            names: ["rice_ball"],
            surrogates: "\uD83C\uDF59",
            unicodeVersion: 6,
          },
          {
            names: ["rice", "cooked_rice"],
            surrogates: "\uD83C\uDF5A",
            unicodeVersion: 6,
          },
          {
            names: ["rice_cracker"],
            surrogates: "\uD83C\uDF58",
            unicodeVersion: 6,
          },
          {
            names: ["fish_cake"],
            surrogates: "\uD83C\uDF65",
            unicodeVersion: 6,
          },
          {
            names: ["fortune_cookie"],
            surrogates: "\uD83E\uDD60",
            unicodeVersion: 10,
          },
          {
            names: ["moon_cake"],
            surrogates: "\uD83E\uDD6E",
            unicodeVersion: 11,
          },
          { names: ["oden"], surrogates: "\uD83C\uDF62", unicodeVersion: 6 },
          { names: ["dango"], surrogates: "\uD83C\uDF61", unicodeVersion: 6 },
          {
            names: ["shaved_ice"],
            surrogates: "\uD83C\uDF67",
            unicodeVersion: 6,
          },
          {
            names: ["ice_cream"],
            surrogates: "\uD83C\uDF68",
            unicodeVersion: 6,
          },
          {
            names: ["icecream"],
            surrogates: "\uD83C\uDF66",
            unicodeVersion: 6,
          },
          { names: ["pie"], surrogates: "\uD83E\uDD67", unicodeVersion: 10 },
          {
            names: ["cupcake"],
            surrogates: "\uD83E\uDDC1",
            unicodeVersion: 11,
          },
          {
            names: ["cake", "shortcake"],
            surrogates: "\uD83C\uDF70",
            unicodeVersion: 6,
          },
          {
            names: ["birthday", "birthday_cake"],
            surrogates: "\uD83C\uDF82",
            unicodeVersion: 6,
          },
          {
            names: ["custard", "pudding", "flan"],
            surrogates: "\uD83C\uDF6E",
            unicodeVersion: 6,
          },
          {
            names: ["lollipop"],
            surrogates: "\uD83C\uDF6D",
            unicodeVersion: 6,
          },
          { names: ["candy"], surrogates: "\uD83C\uDF6C", unicodeVersion: 6 },
          {
            names: ["chocolate_bar"],
            surrogates: "\uD83C\uDF6B",
            unicodeVersion: 6,
          },
          { names: ["popcorn"], surrogates: "\uD83C\uDF7F", unicodeVersion: 8 },
          {
            names: ["doughnut"],
            surrogates: "\uD83C\uDF69",
            unicodeVersion: 6,
          },
          { names: ["cookie"], surrogates: "\uD83C\uDF6A", unicodeVersion: 6 },
          {
            names: ["chestnut"],
            surrogates: "\uD83C\uDF30",
            unicodeVersion: 6,
          },
          {
            names: ["peanuts", "shelled_peanut"],
            surrogates: "\uD83E\uDD5C",
            unicodeVersion: 9,
          },
          { names: ["beans"], surrogates: "\uD83E\uDED8", unicodeVersion: 14 },
          {
            names: ["honey_pot"],
            surrogates: "\uD83C\uDF6F",
            unicodeVersion: 6,
          },
          {
            names: ["milk", "glass_of_milk"],
            surrogates: "\uD83E\uDD5B",
            unicodeVersion: 9,
          },
          {
            names: ["pouring_liquid"],
            surrogates: "\uD83E\uDED7",
            unicodeVersion: 14,
          },
          {
            names: ["baby_bottle"],
            surrogates: "\uD83C\uDF7C",
            unicodeVersion: 6,
          },
          { names: ["teapot"], surrogates: "\uD83E\uDED6", unicodeVersion: 13 },
          {
            names: ["coffee", "hot_beverage"],
            surrogates: "☕",
            unicodeVersion: 4,
          },
          { names: ["tea"], surrogates: "\uD83C\uDF75", unicodeVersion: 6 },
          { names: ["mate"], surrogates: "\uD83E\uDDC9", unicodeVersion: 12 },
          {
            names: ["beverage_box"],
            surrogates: "\uD83E\uDDC3",
            unicodeVersion: 12,
          },
          {
            names: ["cup_with_straw"],
            surrogates: "\uD83E\uDD64",
            unicodeVersion: 10,
          },
          {
            names: ["bubble_tea"],
            surrogates: "\uD83E\uDDCB",
            unicodeVersion: 13,
          },
          { names: ["sake"], surrogates: "\uD83C\uDF76", unicodeVersion: 6 },
          {
            names: ["beer", "beer_mug"],
            surrogates: "\uD83C\uDF7A",
            unicodeVersion: 6,
          },
          { names: ["beers"], surrogates: "\uD83C\uDF7B", unicodeVersion: 6 },
          {
            names: ["champagne_glass", "clinking_glass"],
            surrogates: "\uD83E\uDD42",
            unicodeVersion: 9,
          },
          {
            names: ["wine_glass"],
            surrogates: "\uD83C\uDF77",
            unicodeVersion: 6,
          },
          {
            names: ["tumbler_glass", "whisky"],
            surrogates: "\uD83E\uDD43",
            unicodeVersion: 9,
          },
          {
            names: ["cocktail"],
            surrogates: "\uD83C\uDF78",
            unicodeVersion: 6,
          },
          {
            names: ["tropical_drink"],
            surrogates: "\uD83C\uDF79",
            unicodeVersion: 6,
          },
          {
            names: ["champagne", "bottle_with_popping_cork"],
            surrogates: "\uD83C\uDF7E",
            unicodeVersion: 8,
          },
          {
            names: ["ice_cube"],
            surrogates: "\uD83E\uDDCA",
            unicodeVersion: 12,
          },
          { names: ["spoon"], surrogates: "\uD83E\uDD44", unicodeVersion: 9 },
          {
            names: ["fork_and_knife"],
            surrogates: "\uD83C\uDF74",
            unicodeVersion: 6,
          },
          {
            names: ["fork_knife_plate", "fork_and_knife_with_plate"],
            surrogates: "\uD83C\uDF7D️",
            unicodeVersion: 7,
          },
          {
            names: ["bowl_with_spoon"],
            surrogates: "\uD83E\uDD63",
            unicodeVersion: 10,
          },
          {
            names: ["takeout_box"],
            surrogates: "\uD83E\uDD61",
            unicodeVersion: 10,
          },
          {
            names: ["chopsticks"],
            surrogates: "\uD83E\uDD62",
            unicodeVersion: 10,
          },
          { names: ["salt"], surrogates: "\uD83E\uDDC2", unicodeVersion: 11 },
        ],
        activity: [
          {
            names: ["soccer", "soccer_ball"],
            surrogates: "⚽",
            unicodeVersion: 5.2,
          },
          {
            names: ["basketball"],
            surrogates: "\uD83C\uDFC0",
            unicodeVersion: 6,
          },
          {
            names: ["football"],
            surrogates: "\uD83C\uDFC8",
            unicodeVersion: 6,
          },
          { names: ["baseball"], surrogates: "⚾", unicodeVersion: 5.2 },
          {
            names: ["softball"],
            surrogates: "\uD83E\uDD4E",
            unicodeVersion: 11,
          },
          { names: ["tennis"], surrogates: "\uD83C\uDFBE", unicodeVersion: 6 },
          {
            names: ["volleyball"],
            surrogates: "\uD83C\uDFD0",
            unicodeVersion: 8,
          },
          {
            names: ["rugby_football"],
            surrogates: "\uD83C\uDFC9",
            unicodeVersion: 6,
          },
          {
            names: ["flying_disc"],
            surrogates: "\uD83E\uDD4F",
            unicodeVersion: 11,
          },
          { names: ["8ball"], surrogates: "\uD83C\uDFB1", unicodeVersion: 6 },
          { names: ["yo_yo"], surrogates: "\uD83E\uDE80", unicodeVersion: 12 },
          {
            names: ["ping_pong", "table_tennis"],
            surrogates: "\uD83C\uDFD3",
            unicodeVersion: 8,
          },
          {
            names: ["badminton"],
            surrogates: "\uD83C\uDFF8",
            unicodeVersion: 8,
          },
          {
            names: ["hockey", "ice_hockey"],
            surrogates: "\uD83C\uDFD2",
            unicodeVersion: 8,
          },
          {
            names: ["field_hockey"],
            surrogates: "\uD83C\uDFD1",
            unicodeVersion: 8,
          },
          {
            names: ["lacrosse"],
            surrogates: "\uD83E\uDD4D",
            unicodeVersion: 11,
          },
          {
            names: ["cricket_game", "cricket_bat_ball"],
            surrogates: "\uD83C\uDFCF",
            unicodeVersion: 8,
          },
          {
            names: ["boomerang"],
            surrogates: "\uD83E\uDE83",
            unicodeVersion: 13,
          },
          {
            names: ["goal", "goal_net"],
            surrogates: "\uD83E\uDD45",
            unicodeVersion: 9,
          },
          {
            names: ["golf", "flag_in_hole"],
            surrogates: "⛳",
            unicodeVersion: 5.2,
          },
          { names: ["kite"], surrogates: "\uD83E\uDE81", unicodeVersion: 12 },
          {
            names: ["playground_slide"],
            surrogates: "\uD83D\uDEDD",
            unicodeVersion: 14,
          },
          {
            names: ["bow_and_arrow", "archery"],
            surrogates: "\uD83C\uDFF9",
            unicodeVersion: 8,
          },
          {
            names: ["fishing_pole_and_fish", "fishing_pole"],
            surrogates: "\uD83C\uDFA3",
            unicodeVersion: 6,
          },
          {
            names: ["diving_mask"],
            surrogates: "\uD83E\uDD3F",
            unicodeVersion: 12,
          },
          {
            names: ["boxing_glove", "boxing_gloves"],
            surrogates: "\uD83E\uDD4A",
            unicodeVersion: 9,
          },
          {
            names: ["martial_arts_uniform", "karate_uniform"],
            surrogates: "\uD83E\uDD4B",
            unicodeVersion: 9,
          },
          {
            names: ["running_shirt_with_sash", "running_shirt"],
            surrogates: "\uD83C\uDFBD",
            unicodeVersion: 6,
          },
          {
            names: ["skateboard"],
            surrogates: "\uD83D\uDEF9",
            unicodeVersion: 11,
          },
          {
            names: ["roller_skate"],
            surrogates: "\uD83D\uDEFC",
            unicodeVersion: 13,
          },
          { names: ["sled"], surrogates: "\uD83D\uDEF7", unicodeVersion: 10 },
          { names: ["ice_skate"], surrogates: "⛸️", unicodeVersion: 5.2 },
          {
            names: ["curling_stone"],
            surrogates: "\uD83E\uDD4C",
            unicodeVersion: 10,
          },
          {
            names: ["ski", "skis"],
            surrogates: "\uD83C\uDFBF",
            unicodeVersion: 6,
          },
          { names: ["skier"], surrogates: "⛷️", unicodeVersion: 5.2 },
          {
            names: ["snowboarder"],
            surrogates: "\uD83C\uDFC2",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["snowboarder_tone1", "snowboarder_light_skin_tone"],
                surrogates: "\uD83C\uDFC2\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "snowboarder_tone2",
                  "snowboarder_medium_light_skin_tone",
                ],
                surrogates: "\uD83C\uDFC2\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["snowboarder_tone3", "snowboarder_medium_skin_tone"],
                surrogates: "\uD83C\uDFC2\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "snowboarder_tone4",
                  "snowboarder_medium_dark_skin_tone",
                ],
                surrogates: "\uD83C\uDFC2\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["snowboarder_tone5", "snowboarder_dark_skin_tone"],
                surrogates: "\uD83C\uDFC2\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["parachute"],
            surrogates: "\uD83E\uDE82",
            unicodeVersion: 12,
          },
          {
            names: ["person_lifting_weights", "lifter", "weight_lifter"],
            surrogates: "\uD83C\uDFCB️",
            unicodeVersion: 7,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "person_lifting_weights_tone1",
                  "lifter_tone1",
                  "weight_lifter_tone1",
                ],
                surrogates: "\uD83C\uDFCB\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_lifting_weights_tone2",
                  "lifter_tone2",
                  "weight_lifter_tone2",
                ],
                surrogates: "\uD83C\uDFCB\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_lifting_weights_tone3",
                  "lifter_tone3",
                  "weight_lifter_tone3",
                ],
                surrogates: "\uD83C\uDFCB\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_lifting_weights_tone4",
                  "lifter_tone4",
                  "weight_lifter_tone4",
                ],
                surrogates: "\uD83C\uDFCB\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_lifting_weights_tone5",
                  "lifter_tone5",
                  "weight_lifter_tone5",
                ],
                surrogates: "\uD83C\uDFCB\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_lifting_weights"],
            surrogates: "\uD83C\uDFCB️‍♀️",
            unicodeVersion: 7,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_lifting_weights_tone1",
                  "woman_lifting_weights_light_skin_tone",
                ],
                surrogates: "\uD83C\uDFCB\uD83C\uDFFB‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_lifting_weights_tone2",
                  "woman_lifting_weights_medium_light_skin_tone",
                ],
                surrogates: "\uD83C\uDFCB\uD83C\uDFFC‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_lifting_weights_tone3",
                  "woman_lifting_weights_medium_skin_tone",
                ],
                surrogates: "\uD83C\uDFCB\uD83C\uDFFD‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_lifting_weights_tone4",
                  "woman_lifting_weights_medium_dark_skin_tone",
                ],
                surrogates: "\uD83C\uDFCB\uD83C\uDFFE‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_lifting_weights_tone5",
                  "woman_lifting_weights_dark_skin_tone",
                ],
                surrogates: "\uD83C\uDFCB\uD83C\uDFFF‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_lifting_weights"],
            surrogates: "\uD83C\uDFCB️‍♂️",
            unicodeVersion: 7,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "man_lifting_weights_tone1",
                  "man_lifting_weights_light_skin_tone",
                ],
                surrogates: "\uD83C\uDFCB\uD83C\uDFFB‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_lifting_weights_tone2",
                  "man_lifting_weights_medium_light_skin_tone",
                ],
                surrogates: "\uD83C\uDFCB\uD83C\uDFFC‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_lifting_weights_tone3",
                  "man_lifting_weights_medium_skin_tone",
                ],
                surrogates: "\uD83C\uDFCB\uD83C\uDFFD‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_lifting_weights_tone4",
                  "man_lifting_weights_medium_dark_skin_tone",
                ],
                surrogates: "\uD83C\uDFCB\uD83C\uDFFE‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_lifting_weights_tone5",
                  "man_lifting_weights_dark_skin_tone",
                ],
                surrogates: "\uD83C\uDFCB\uD83C\uDFFF‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["people_wrestling", "wrestlers", "wrestling"],
            surrogates: "\uD83E\uDD3C",
            unicodeVersion: 9,
          },
          {
            names: ["women_wrestling"],
            surrogates: "\uD83E\uDD3C‍♀️",
            unicodeVersion: 9,
          },
          {
            names: ["men_wrestling"],
            surrogates: "\uD83E\uDD3C‍♂️",
            unicodeVersion: 9,
          },
          {
            names: ["person_doing_cartwheel", "cartwheel"],
            surrogates: "\uD83E\uDD38",
            unicodeVersion: 9,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["person_doing_cartwheel_tone1", "cartwheel_tone1"],
                surrogates: "\uD83E\uDD38\uD83C\uDFFB",
                unicodeVersion: 9,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_doing_cartwheel_tone2", "cartwheel_tone2"],
                surrogates: "\uD83E\uDD38\uD83C\uDFFC",
                unicodeVersion: 9,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_doing_cartwheel_tone3", "cartwheel_tone3"],
                surrogates: "\uD83E\uDD38\uD83C\uDFFD",
                unicodeVersion: 9,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_doing_cartwheel_tone4", "cartwheel_tone4"],
                surrogates: "\uD83E\uDD38\uD83C\uDFFE",
                unicodeVersion: 9,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_doing_cartwheel_tone5", "cartwheel_tone5"],
                surrogates: "\uD83E\uDD38\uD83C\uDFFF",
                unicodeVersion: 9,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_cartwheeling"],
            surrogates: "\uD83E\uDD38‍♀️",
            unicodeVersion: 9,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_cartwheeling_tone1",
                  "woman_cartwheeling_light_skin_tone",
                ],
                surrogates: "\uD83E\uDD38\uD83C\uDFFB‍♀️",
                unicodeVersion: 9,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_cartwheeling_tone2",
                  "woman_cartwheeling_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDD38\uD83C\uDFFC‍♀️",
                unicodeVersion: 9,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_cartwheeling_tone3",
                  "woman_cartwheeling_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDD38\uD83C\uDFFD‍♀️",
                unicodeVersion: 9,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_cartwheeling_tone4",
                  "woman_cartwheeling_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDD38\uD83C\uDFFE‍♀️",
                unicodeVersion: 9,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_cartwheeling_tone5",
                  "woman_cartwheeling_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDD38\uD83C\uDFFF‍♀️",
                unicodeVersion: 9,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_cartwheeling"],
            surrogates: "\uD83E\uDD38‍♂️",
            unicodeVersion: 9,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "man_cartwheeling_tone1",
                  "man_cartwheeling_light_skin_tone",
                ],
                surrogates: "\uD83E\uDD38\uD83C\uDFFB‍♂️",
                unicodeVersion: 9,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_cartwheeling_tone2",
                  "man_cartwheeling_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDD38\uD83C\uDFFC‍♂️",
                unicodeVersion: 9,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_cartwheeling_tone3",
                  "man_cartwheeling_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDD38\uD83C\uDFFD‍♂️",
                unicodeVersion: 9,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_cartwheeling_tone4",
                  "man_cartwheeling_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDD38\uD83C\uDFFE‍♂️",
                unicodeVersion: 9,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_cartwheeling_tone5",
                  "man_cartwheeling_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDD38\uD83C\uDFFF‍♂️",
                unicodeVersion: 9,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: [
              "person_bouncing_ball",
              "basketball_player",
              "person_with_ball",
            ],
            surrogates: "⛹️",
            unicodeVersion: 5.2,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "person_bouncing_ball_tone1",
                  "basketball_player_tone1",
                  "person_with_ball_tone1",
                ],
                surrogates: "⛹\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_bouncing_ball_tone2",
                  "basketball_player_tone2",
                  "person_with_ball_tone2",
                ],
                surrogates: "⛹\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_bouncing_ball_tone3",
                  "basketball_player_tone3",
                  "person_with_ball_tone3",
                ],
                surrogates: "⛹\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_bouncing_ball_tone4",
                  "basketball_player_tone4",
                  "person_with_ball_tone4",
                ],
                surrogates: "⛹\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_bouncing_ball_tone5",
                  "basketball_player_tone5",
                  "person_with_ball_tone5",
                ],
                surrogates: "⛹\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_bouncing_ball"],
            surrogates: "⛹️‍♀️",
            unicodeVersion: 5.2,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_bouncing_ball_tone1",
                  "woman_bouncing_ball_light_skin_tone",
                ],
                surrogates: "⛹\uD83C\uDFFB‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_bouncing_ball_tone2",
                  "woman_bouncing_ball_medium_light_skin_tone",
                ],
                surrogates: "⛹\uD83C\uDFFC‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_bouncing_ball_tone3",
                  "woman_bouncing_ball_medium_skin_tone",
                ],
                surrogates: "⛹\uD83C\uDFFD‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_bouncing_ball_tone4",
                  "woman_bouncing_ball_medium_dark_skin_tone",
                ],
                surrogates: "⛹\uD83C\uDFFE‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_bouncing_ball_tone5",
                  "woman_bouncing_ball_dark_skin_tone",
                ],
                surrogates: "⛹\uD83C\uDFFF‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_bouncing_ball"],
            surrogates: "⛹️‍♂️",
            unicodeVersion: 5.2,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "man_bouncing_ball_tone1",
                  "man_bouncing_ball_light_skin_tone",
                ],
                surrogates: "⛹\uD83C\uDFFB‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_bouncing_ball_tone2",
                  "man_bouncing_ball_medium_light_skin_tone",
                ],
                surrogates: "⛹\uD83C\uDFFC‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_bouncing_ball_tone3",
                  "man_bouncing_ball_medium_skin_tone",
                ],
                surrogates: "⛹\uD83C\uDFFD‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_bouncing_ball_tone4",
                  "man_bouncing_ball_medium_dark_skin_tone",
                ],
                surrogates: "⛹\uD83C\uDFFE‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_bouncing_ball_tone5",
                  "man_bouncing_ball_dark_skin_tone",
                ],
                surrogates: "⛹\uD83C\uDFFF‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["person_fencing", "fencer", "fencing"],
            surrogates: "\uD83E\uDD3A",
            unicodeVersion: 9,
          },
          {
            names: ["person_playing_handball", "handball"],
            surrogates: "\uD83E\uDD3E",
            unicodeVersion: 9,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["person_playing_handball_tone1", "handball_tone1"],
                surrogates: "\uD83E\uDD3E\uD83C\uDFFB",
                unicodeVersion: 9,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_playing_handball_tone2", "handball_tone2"],
                surrogates: "\uD83E\uDD3E\uD83C\uDFFC",
                unicodeVersion: 9,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_playing_handball_tone3", "handball_tone3"],
                surrogates: "\uD83E\uDD3E\uD83C\uDFFD",
                unicodeVersion: 9,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_playing_handball_tone4", "handball_tone4"],
                surrogates: "\uD83E\uDD3E\uD83C\uDFFE",
                unicodeVersion: 9,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_playing_handball_tone5", "handball_tone5"],
                surrogates: "\uD83E\uDD3E\uD83C\uDFFF",
                unicodeVersion: 9,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_playing_handball"],
            surrogates: "\uD83E\uDD3E‍♀️",
            unicodeVersion: 9,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_playing_handball_tone1",
                  "woman_playing_handball_light_skin_tone",
                ],
                surrogates: "\uD83E\uDD3E\uD83C\uDFFB‍♀️",
                unicodeVersion: 9,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_playing_handball_tone2",
                  "woman_playing_handball_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDD3E\uD83C\uDFFC‍♀️",
                unicodeVersion: 9,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_playing_handball_tone3",
                  "woman_playing_handball_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDD3E\uD83C\uDFFD‍♀️",
                unicodeVersion: 9,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_playing_handball_tone4",
                  "woman_playing_handball_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDD3E\uD83C\uDFFE‍♀️",
                unicodeVersion: 9,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_playing_handball_tone5",
                  "woman_playing_handball_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDD3E\uD83C\uDFFF‍♀️",
                unicodeVersion: 9,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_playing_handball"],
            surrogates: "\uD83E\uDD3E‍♂️",
            unicodeVersion: 9,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "man_playing_handball_tone1",
                  "man_playing_handball_light_skin_tone",
                ],
                surrogates: "\uD83E\uDD3E\uD83C\uDFFB‍♂️",
                unicodeVersion: 9,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_playing_handball_tone2",
                  "man_playing_handball_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDD3E\uD83C\uDFFC‍♂️",
                unicodeVersion: 9,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_playing_handball_tone3",
                  "man_playing_handball_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDD3E\uD83C\uDFFD‍♂️",
                unicodeVersion: 9,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_playing_handball_tone4",
                  "man_playing_handball_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDD3E\uD83C\uDFFE‍♂️",
                unicodeVersion: 9,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_playing_handball_tone5",
                  "man_playing_handball_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDD3E\uD83C\uDFFF‍♂️",
                unicodeVersion: 9,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["person_golfing", "golfer"],
            surrogates: "\uD83C\uDFCC️",
            unicodeVersion: 7,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "person_golfing_tone1",
                  "person_golfing_light_skin_tone",
                ],
                surrogates: "\uD83C\uDFCC\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_golfing_tone2",
                  "person_golfing_medium_light_skin_tone",
                ],
                surrogates: "\uD83C\uDFCC\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_golfing_tone3",
                  "person_golfing_medium_skin_tone",
                ],
                surrogates: "\uD83C\uDFCC\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_golfing_tone4",
                  "person_golfing_medium_dark_skin_tone",
                ],
                surrogates: "\uD83C\uDFCC\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_golfing_tone5",
                  "person_golfing_dark_skin_tone",
                ],
                surrogates: "\uD83C\uDFCC\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_golfing"],
            surrogates: "\uD83C\uDFCC️‍♀️",
            unicodeVersion: 7,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["woman_golfing_tone1", "woman_golfing_light_skin_tone"],
                surrogates: "\uD83C\uDFCC\uD83C\uDFFB‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_golfing_tone2",
                  "woman_golfing_medium_light_skin_tone",
                ],
                surrogates: "\uD83C\uDFCC\uD83C\uDFFC‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_golfing_tone3",
                  "woman_golfing_medium_skin_tone",
                ],
                surrogates: "\uD83C\uDFCC\uD83C\uDFFD‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_golfing_tone4",
                  "woman_golfing_medium_dark_skin_tone",
                ],
                surrogates: "\uD83C\uDFCC\uD83C\uDFFE‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_golfing_tone5", "woman_golfing_dark_skin_tone"],
                surrogates: "\uD83C\uDFCC\uD83C\uDFFF‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_golfing"],
            surrogates: "\uD83C\uDFCC️‍♂️",
            unicodeVersion: 7,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["man_golfing_tone1", "man_golfing_light_skin_tone"],
                surrogates: "\uD83C\uDFCC\uD83C\uDFFB‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_golfing_tone2",
                  "man_golfing_medium_light_skin_tone",
                ],
                surrogates: "\uD83C\uDFCC\uD83C\uDFFC‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_golfing_tone3", "man_golfing_medium_skin_tone"],
                surrogates: "\uD83C\uDFCC\uD83C\uDFFD‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_golfing_tone4",
                  "man_golfing_medium_dark_skin_tone",
                ],
                surrogates: "\uD83C\uDFCC\uD83C\uDFFE‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_golfing_tone5", "man_golfing_dark_skin_tone"],
                surrogates: "\uD83C\uDFCC\uD83C\uDFFF‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["horse_racing"],
            surrogates: "\uD83C\uDFC7",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["horse_racing_tone1"],
                surrogates: "\uD83C\uDFC7\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["horse_racing_tone2"],
                surrogates: "\uD83C\uDFC7\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["horse_racing_tone3"],
                surrogates: "\uD83C\uDFC7\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["horse_racing_tone4"],
                surrogates: "\uD83C\uDFC7\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["horse_racing_tone5"],
                surrogates: "\uD83C\uDFC7\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["person_in_lotus_position"],
            surrogates: "\uD83E\uDDD8",
            unicodeVersion: 10,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "person_in_lotus_position_tone1",
                  "person_in_lotus_position_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDD8\uD83C\uDFFB",
                unicodeVersion: 10,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_in_lotus_position_tone2",
                  "person_in_lotus_position_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDD8\uD83C\uDFFC",
                unicodeVersion: 10,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_in_lotus_position_tone3",
                  "person_in_lotus_position_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDDD8\uD83C\uDFFD",
                unicodeVersion: 10,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_in_lotus_position_tone4",
                  "person_in_lotus_position_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDD8\uD83C\uDFFE",
                unicodeVersion: 10,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_in_lotus_position_tone5",
                  "person_in_lotus_position_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDD8\uD83C\uDFFF",
                unicodeVersion: 10,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_in_lotus_position"],
            surrogates: "\uD83E\uDDD8‍♀️",
            unicodeVersion: 10,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_in_lotus_position_tone1",
                  "woman_in_lotus_position_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDD8\uD83C\uDFFB‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_in_lotus_position_tone2",
                  "woman_in_lotus_position_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDD8\uD83C\uDFFC‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_in_lotus_position_tone3",
                  "woman_in_lotus_position_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDDD8\uD83C\uDFFD‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_in_lotus_position_tone4",
                  "woman_in_lotus_position_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDD8\uD83C\uDFFE‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_in_lotus_position_tone5",
                  "woman_in_lotus_position_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDD8\uD83C\uDFFF‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_in_lotus_position"],
            surrogates: "\uD83E\uDDD8‍♂️",
            unicodeVersion: 10,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "man_in_lotus_position_tone1",
                  "man_in_lotus_position_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDD8\uD83C\uDFFB‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_in_lotus_position_tone2",
                  "man_in_lotus_position_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDD8\uD83C\uDFFC‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_in_lotus_position_tone3",
                  "man_in_lotus_position_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDDD8\uD83C\uDFFD‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_in_lotus_position_tone4",
                  "man_in_lotus_position_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDD8\uD83C\uDFFE‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_in_lotus_position_tone5",
                  "man_in_lotus_position_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDD8\uD83C\uDFFF‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["person_surfing", "surfer"],
            surrogates: "\uD83C\uDFC4",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["person_surfing_tone1", "surfer_tone1"],
                surrogates: "\uD83C\uDFC4\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_surfing_tone2", "surfer_tone2"],
                surrogates: "\uD83C\uDFC4\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_surfing_tone3", "surfer_tone3"],
                surrogates: "\uD83C\uDFC4\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_surfing_tone4", "surfer_tone4"],
                surrogates: "\uD83C\uDFC4\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_surfing_tone5", "surfer_tone5"],
                surrogates: "\uD83C\uDFC4\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_surfing"],
            surrogates: "\uD83C\uDFC4‍♀️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["woman_surfing_tone1", "woman_surfing_light_skin_tone"],
                surrogates: "\uD83C\uDFC4\uD83C\uDFFB‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_surfing_tone2",
                  "woman_surfing_medium_light_skin_tone",
                ],
                surrogates: "\uD83C\uDFC4\uD83C\uDFFC‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_surfing_tone3",
                  "woman_surfing_medium_skin_tone",
                ],
                surrogates: "\uD83C\uDFC4\uD83C\uDFFD‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_surfing_tone4",
                  "woman_surfing_medium_dark_skin_tone",
                ],
                surrogates: "\uD83C\uDFC4\uD83C\uDFFE‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_surfing_tone5", "woman_surfing_dark_skin_tone"],
                surrogates: "\uD83C\uDFC4\uD83C\uDFFF‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_surfing"],
            surrogates: "\uD83C\uDFC4‍♂️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["man_surfing_tone1", "man_surfing_light_skin_tone"],
                surrogates: "\uD83C\uDFC4\uD83C\uDFFB‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_surfing_tone2",
                  "man_surfing_medium_light_skin_tone",
                ],
                surrogates: "\uD83C\uDFC4\uD83C\uDFFC‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_surfing_tone3", "man_surfing_medium_skin_tone"],
                surrogates: "\uD83C\uDFC4\uD83C\uDFFD‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_surfing_tone4",
                  "man_surfing_medium_dark_skin_tone",
                ],
                surrogates: "\uD83C\uDFC4\uD83C\uDFFE‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_surfing_tone5", "man_surfing_dark_skin_tone"],
                surrogates: "\uD83C\uDFC4\uD83C\uDFFF‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["person_swimming", "swimmer"],
            surrogates: "\uD83C\uDFCA",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["person_swimming_tone1", "swimmer_tone1"],
                surrogates: "\uD83C\uDFCA\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_swimming_tone2", "swimmer_tone2"],
                surrogates: "\uD83C\uDFCA\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_swimming_tone3", "swimmer_tone3"],
                surrogates: "\uD83C\uDFCA\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_swimming_tone4", "swimmer_tone4"],
                surrogates: "\uD83C\uDFCA\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_swimming_tone5", "swimmer_tone5"],
                surrogates: "\uD83C\uDFCA\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_swimming"],
            surrogates: "\uD83C\uDFCA‍♀️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_swimming_tone1",
                  "woman_swimming_light_skin_tone",
                ],
                surrogates: "\uD83C\uDFCA\uD83C\uDFFB‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_swimming_tone2",
                  "woman_swimming_medium_light_skin_tone",
                ],
                surrogates: "\uD83C\uDFCA\uD83C\uDFFC‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_swimming_tone3",
                  "woman_swimming_medium_skin_tone",
                ],
                surrogates: "\uD83C\uDFCA\uD83C\uDFFD‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_swimming_tone4",
                  "woman_swimming_medium_dark_skin_tone",
                ],
                surrogates: "\uD83C\uDFCA\uD83C\uDFFE‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_swimming_tone5",
                  "woman_swimming_dark_skin_tone",
                ],
                surrogates: "\uD83C\uDFCA\uD83C\uDFFF‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_swimming"],
            surrogates: "\uD83C\uDFCA‍♂️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["man_swimming_tone1", "man_swimming_light_skin_tone"],
                surrogates: "\uD83C\uDFCA\uD83C\uDFFB‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_swimming_tone2",
                  "man_swimming_medium_light_skin_tone",
                ],
                surrogates: "\uD83C\uDFCA\uD83C\uDFFC‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_swimming_tone3", "man_swimming_medium_skin_tone"],
                surrogates: "\uD83C\uDFCA\uD83C\uDFFD‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_swimming_tone4",
                  "man_swimming_medium_dark_skin_tone",
                ],
                surrogates: "\uD83C\uDFCA\uD83C\uDFFE‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_swimming_tone5", "man_swimming_dark_skin_tone"],
                surrogates: "\uD83C\uDFCA\uD83C\uDFFF‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["person_playing_water_polo", "water_polo"],
            surrogates: "\uD83E\uDD3D",
            unicodeVersion: 9,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["person_playing_water_polo_tone1", "water_polo_tone1"],
                surrogates: "\uD83E\uDD3D\uD83C\uDFFB",
                unicodeVersion: 9,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_playing_water_polo_tone2", "water_polo_tone2"],
                surrogates: "\uD83E\uDD3D\uD83C\uDFFC",
                unicodeVersion: 9,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_playing_water_polo_tone3", "water_polo_tone3"],
                surrogates: "\uD83E\uDD3D\uD83C\uDFFD",
                unicodeVersion: 9,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_playing_water_polo_tone4", "water_polo_tone4"],
                surrogates: "\uD83E\uDD3D\uD83C\uDFFE",
                unicodeVersion: 9,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_playing_water_polo_tone5", "water_polo_tone5"],
                surrogates: "\uD83E\uDD3D\uD83C\uDFFF",
                unicodeVersion: 9,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_playing_water_polo"],
            surrogates: "\uD83E\uDD3D‍♀️",
            unicodeVersion: 9,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_playing_water_polo_tone1",
                  "woman_playing_water_polo_light_skin_tone",
                ],
                surrogates: "\uD83E\uDD3D\uD83C\uDFFB‍♀️",
                unicodeVersion: 9,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_playing_water_polo_tone2",
                  "woman_playing_water_polo_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDD3D\uD83C\uDFFC‍♀️",
                unicodeVersion: 9,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_playing_water_polo_tone3",
                  "woman_playing_water_polo_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDD3D\uD83C\uDFFD‍♀️",
                unicodeVersion: 9,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_playing_water_polo_tone4",
                  "woman_playing_water_polo_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDD3D\uD83C\uDFFE‍♀️",
                unicodeVersion: 9,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_playing_water_polo_tone5",
                  "woman_playing_water_polo_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDD3D\uD83C\uDFFF‍♀️",
                unicodeVersion: 9,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_playing_water_polo"],
            surrogates: "\uD83E\uDD3D‍♂️",
            unicodeVersion: 9,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "man_playing_water_polo_tone1",
                  "man_playing_water_polo_light_skin_tone",
                ],
                surrogates: "\uD83E\uDD3D\uD83C\uDFFB‍♂️",
                unicodeVersion: 9,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_playing_water_polo_tone2",
                  "man_playing_water_polo_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDD3D\uD83C\uDFFC‍♂️",
                unicodeVersion: 9,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_playing_water_polo_tone3",
                  "man_playing_water_polo_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDD3D\uD83C\uDFFD‍♂️",
                unicodeVersion: 9,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_playing_water_polo_tone4",
                  "man_playing_water_polo_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDD3D\uD83C\uDFFE‍♂️",
                unicodeVersion: 9,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_playing_water_polo_tone5",
                  "man_playing_water_polo_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDD3D\uD83C\uDFFF‍♂️",
                unicodeVersion: 9,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["person_rowing_boat", "rowboat"],
            surrogates: "\uD83D\uDEA3",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["person_rowing_boat_tone1", "rowboat_tone1"],
                surrogates: "\uD83D\uDEA3\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_rowing_boat_tone2", "rowboat_tone2"],
                surrogates: "\uD83D\uDEA3\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_rowing_boat_tone3", "rowboat_tone3"],
                surrogates: "\uD83D\uDEA3\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_rowing_boat_tone4", "rowboat_tone4"],
                surrogates: "\uD83D\uDEA3\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_rowing_boat_tone5", "rowboat_tone5"],
                surrogates: "\uD83D\uDEA3\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_rowing_boat"],
            surrogates: "\uD83D\uDEA3‍♀️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_rowing_boat_tone1",
                  "woman_rowing_boat_light_skin_tone",
                ],
                surrogates: "\uD83D\uDEA3\uD83C\uDFFB‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_rowing_boat_tone2",
                  "woman_rowing_boat_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDEA3\uD83C\uDFFC‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_rowing_boat_tone3",
                  "woman_rowing_boat_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDEA3\uD83C\uDFFD‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_rowing_boat_tone4",
                  "woman_rowing_boat_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDEA3\uD83C\uDFFE‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_rowing_boat_tone5",
                  "woman_rowing_boat_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDEA3\uD83C\uDFFF‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_rowing_boat"],
            surrogates: "\uD83D\uDEA3‍♂️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "man_rowing_boat_tone1",
                  "man_rowing_boat_light_skin_tone",
                ],
                surrogates: "\uD83D\uDEA3\uD83C\uDFFB‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_rowing_boat_tone2",
                  "man_rowing_boat_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDEA3\uD83C\uDFFC‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_rowing_boat_tone3",
                  "man_rowing_boat_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDEA3\uD83C\uDFFD‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_rowing_boat_tone4",
                  "man_rowing_boat_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDEA3\uD83C\uDFFE‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_rowing_boat_tone5",
                  "man_rowing_boat_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDEA3\uD83C\uDFFF‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["person_climbing"],
            surrogates: "\uD83E\uDDD7",
            unicodeVersion: 10,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "person_climbing_tone1",
                  "person_climbing_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDD7\uD83C\uDFFB",
                unicodeVersion: 10,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_climbing_tone2",
                  "person_climbing_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDD7\uD83C\uDFFC",
                unicodeVersion: 10,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_climbing_tone3",
                  "person_climbing_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDDD7\uD83C\uDFFD",
                unicodeVersion: 10,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_climbing_tone4",
                  "person_climbing_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDD7\uD83C\uDFFE",
                unicodeVersion: 10,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_climbing_tone5",
                  "person_climbing_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDD7\uD83C\uDFFF",
                unicodeVersion: 10,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_climbing"],
            surrogates: "\uD83E\uDDD7‍♀️",
            unicodeVersion: 10,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_climbing_tone1",
                  "woman_climbing_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDD7\uD83C\uDFFB‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_climbing_tone2",
                  "woman_climbing_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDD7\uD83C\uDFFC‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_climbing_tone3",
                  "woman_climbing_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDDD7\uD83C\uDFFD‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_climbing_tone4",
                  "woman_climbing_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDD7\uD83C\uDFFE‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_climbing_tone5",
                  "woman_climbing_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDD7\uD83C\uDFFF‍♀️",
                unicodeVersion: 10,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_climbing"],
            surrogates: "\uD83E\uDDD7‍♂️",
            unicodeVersion: 10,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["man_climbing_tone1", "man_climbing_light_skin_tone"],
                surrogates: "\uD83E\uDDD7\uD83C\uDFFB‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_climbing_tone2",
                  "man_climbing_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDDD7\uD83C\uDFFC‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_climbing_tone3", "man_climbing_medium_skin_tone"],
                surrogates: "\uD83E\uDDD7\uD83C\uDFFD‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_climbing_tone4",
                  "man_climbing_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDDD7\uD83C\uDFFE‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_climbing_tone5", "man_climbing_dark_skin_tone"],
                surrogates: "\uD83E\uDDD7\uD83C\uDFFF‍♂️",
                unicodeVersion: 10,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["person_mountain_biking", "mountain_bicyclist"],
            surrogates: "\uD83D\uDEB5",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "person_mountain_biking_tone1",
                  "mountain_bicyclist_tone1",
                ],
                surrogates: "\uD83D\uDEB5\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_mountain_biking_tone2",
                  "mountain_bicyclist_tone2",
                ],
                surrogates: "\uD83D\uDEB5\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_mountain_biking_tone3",
                  "mountain_bicyclist_tone3",
                ],
                surrogates: "\uD83D\uDEB5\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_mountain_biking_tone4",
                  "mountain_bicyclist_tone4",
                ],
                surrogates: "\uD83D\uDEB5\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_mountain_biking_tone5",
                  "mountain_bicyclist_tone5",
                ],
                surrogates: "\uD83D\uDEB5\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_mountain_biking"],
            surrogates: "\uD83D\uDEB5‍♀️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_mountain_biking_tone1",
                  "woman_mountain_biking_light_skin_tone",
                ],
                surrogates: "\uD83D\uDEB5\uD83C\uDFFB‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_mountain_biking_tone2",
                  "woman_mountain_biking_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDEB5\uD83C\uDFFC‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_mountain_biking_tone3",
                  "woman_mountain_biking_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDEB5\uD83C\uDFFD‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_mountain_biking_tone4",
                  "woman_mountain_biking_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDEB5\uD83C\uDFFE‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_mountain_biking_tone5",
                  "woman_mountain_biking_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDEB5\uD83C\uDFFF‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_mountain_biking"],
            surrogates: "\uD83D\uDEB5‍♂️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "man_mountain_biking_tone1",
                  "man_mountain_biking_light_skin_tone",
                ],
                surrogates: "\uD83D\uDEB5\uD83C\uDFFB‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_mountain_biking_tone2",
                  "man_mountain_biking_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDEB5\uD83C\uDFFC‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_mountain_biking_tone3",
                  "man_mountain_biking_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDEB5\uD83C\uDFFD‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_mountain_biking_tone4",
                  "man_mountain_biking_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDEB5\uD83C\uDFFE‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_mountain_biking_tone5",
                  "man_mountain_biking_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDEB5\uD83C\uDFFF‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["person_biking", "bicyclist"],
            surrogates: "\uD83D\uDEB4",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["person_biking_tone1", "bicyclist_tone1"],
                surrogates: "\uD83D\uDEB4\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_biking_tone2", "bicyclist_tone2"],
                surrogates: "\uD83D\uDEB4\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_biking_tone3", "bicyclist_tone3"],
                surrogates: "\uD83D\uDEB4\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_biking_tone4", "bicyclist_tone4"],
                surrogates: "\uD83D\uDEB4\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_biking_tone5", "bicyclist_tone5"],
                surrogates: "\uD83D\uDEB4\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_biking"],
            surrogates: "\uD83D\uDEB4‍♀️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["woman_biking_tone1", "woman_biking_light_skin_tone"],
                surrogates: "\uD83D\uDEB4\uD83C\uDFFB‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_biking_tone2",
                  "woman_biking_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDEB4\uD83C\uDFFC‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_biking_tone3", "woman_biking_medium_skin_tone"],
                surrogates: "\uD83D\uDEB4\uD83C\uDFFD‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_biking_tone4",
                  "woman_biking_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDEB4\uD83C\uDFFE‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["woman_biking_tone5", "woman_biking_dark_skin_tone"],
                surrogates: "\uD83D\uDEB4\uD83C\uDFFF‍♀️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_biking"],
            surrogates: "\uD83D\uDEB4‍♂️",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["man_biking_tone1", "man_biking_light_skin_tone"],
                surrogates: "\uD83D\uDEB4\uD83C\uDFFB‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_biking_tone2",
                  "man_biking_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDEB4\uD83C\uDFFC‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_biking_tone3", "man_biking_medium_skin_tone"],
                surrogates: "\uD83D\uDEB4\uD83C\uDFFD‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_biking_tone4", "man_biking_medium_dark_skin_tone"],
                surrogates: "\uD83D\uDEB4\uD83C\uDFFE‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_biking_tone5", "man_biking_dark_skin_tone"],
                surrogates: "\uD83D\uDEB4\uD83C\uDFFF‍♂️",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          { names: ["trophy"], surrogates: "\uD83C\uDFC6", unicodeVersion: 6 },
          {
            names: ["first_place", "first_place_medal"],
            surrogates: "\uD83E\uDD47",
            unicodeVersion: 9,
          },
          {
            names: ["second_place", "second_place_medal"],
            surrogates: "\uD83E\uDD48",
            unicodeVersion: 9,
          },
          {
            names: ["third_place", "third_place_medal"],
            surrogates: "\uD83E\uDD49",
            unicodeVersion: 9,
          },
          {
            names: ["medal", "sports_medal"],
            surrogates: "\uD83C\uDFC5",
            unicodeVersion: 7,
          },
          {
            names: ["military_medal"],
            surrogates: "\uD83C\uDF96️",
            unicodeVersion: 7,
          },
          {
            names: ["rosette"],
            surrogates: "\uD83C\uDFF5️",
            unicodeVersion: 7,
          },
          {
            names: ["reminder_ribbon"],
            surrogates: "\uD83C\uDF97️",
            unicodeVersion: 7,
          },
          { names: ["ticket"], surrogates: "\uD83C\uDFAB", unicodeVersion: 6 },
          {
            names: ["tickets", "admission_tickets"],
            surrogates: "\uD83C\uDF9F️",
            unicodeVersion: 7,
          },
          {
            names: ["circus_tent"],
            surrogates: "\uD83C\uDFAA",
            unicodeVersion: 6,
          },
          {
            names: ["person_juggling", "juggling", "juggler"],
            surrogates: "\uD83E\uDD39",
            unicodeVersion: 9,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "person_juggling_tone1",
                  "juggling_tone1",
                  "juggler_tone1",
                ],
                surrogates: "\uD83E\uDD39\uD83C\uDFFB",
                unicodeVersion: 9,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_juggling_tone2",
                  "juggling_tone2",
                  "juggler_tone2",
                ],
                surrogates: "\uD83E\uDD39\uD83C\uDFFC",
                unicodeVersion: 9,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_juggling_tone3",
                  "juggling_tone3",
                  "juggler_tone3",
                ],
                surrogates: "\uD83E\uDD39\uD83C\uDFFD",
                unicodeVersion: 9,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_juggling_tone4",
                  "juggling_tone4",
                  "juggler_tone4",
                ],
                surrogates: "\uD83E\uDD39\uD83C\uDFFE",
                unicodeVersion: 9,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_juggling_tone5",
                  "juggling_tone5",
                  "juggler_tone5",
                ],
                surrogates: "\uD83E\uDD39\uD83C\uDFFF",
                unicodeVersion: 9,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["woman_juggling"],
            surrogates: "\uD83E\uDD39‍♀️",
            unicodeVersion: 9,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: [
                  "woman_juggling_tone1",
                  "woman_juggling_light_skin_tone",
                ],
                surrogates: "\uD83E\uDD39\uD83C\uDFFB‍♀️",
                unicodeVersion: 9,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_juggling_tone2",
                  "woman_juggling_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDD39\uD83C\uDFFC‍♀️",
                unicodeVersion: 9,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_juggling_tone3",
                  "woman_juggling_medium_skin_tone",
                ],
                surrogates: "\uD83E\uDD39\uD83C\uDFFD‍♀️",
                unicodeVersion: 9,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_juggling_tone4",
                  "woman_juggling_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDD39\uD83C\uDFFE‍♀️",
                unicodeVersion: 9,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "woman_juggling_tone5",
                  "woman_juggling_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDD39\uD83C\uDFFF‍♀️",
                unicodeVersion: 9,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["man_juggling"],
            surrogates: "\uD83E\uDD39‍♂️",
            unicodeVersion: 9,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["man_juggling_tone1", "man_juggling_light_skin_tone"],
                surrogates: "\uD83E\uDD39\uD83C\uDFFB‍♂️",
                unicodeVersion: 9,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_juggling_tone2",
                  "man_juggling_medium_light_skin_tone",
                ],
                surrogates: "\uD83E\uDD39\uD83C\uDFFC‍♂️",
                unicodeVersion: 9,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_juggling_tone3", "man_juggling_medium_skin_tone"],
                surrogates: "\uD83E\uDD39\uD83C\uDFFD‍♂️",
                unicodeVersion: 9,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "man_juggling_tone4",
                  "man_juggling_medium_dark_skin_tone",
                ],
                surrogates: "\uD83E\uDD39\uD83C\uDFFE‍♂️",
                unicodeVersion: 9,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["man_juggling_tone5", "man_juggling_dark_skin_tone"],
                surrogates: "\uD83E\uDD39\uD83C\uDFFF‍♂️",
                unicodeVersion: 9,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["performing_arts"],
            surrogates: "\uD83C\uDFAD",
            unicodeVersion: 6,
          },
          {
            names: ["ballet_shoes"],
            surrogates: "\uD83E\uDE70",
            unicodeVersion: 12,
          },
          { names: ["art"], surrogates: "\uD83C\uDFA8", unicodeVersion: 6 },
          {
            names: ["clapper", "clapper_board"],
            surrogates: "\uD83C\uDFAC",
            unicodeVersion: 6,
          },
          {
            names: ["microphone"],
            surrogates: "\uD83C\uDFA4",
            unicodeVersion: 6,
          },
          {
            names: ["headphones", "headphone"],
            surrogates: "\uD83C\uDFA7",
            unicodeVersion: 6,
          },
          {
            names: ["musical_score"],
            surrogates: "\uD83C\uDFBC",
            unicodeVersion: 6,
          },
          {
            names: ["musical_keyboard"],
            surrogates: "\uD83C\uDFB9",
            unicodeVersion: 6,
          },
          {
            names: ["maracas"],
            surrogates: "\uD83E\uDE87",
            unicodeVersion: 15,
          },
          {
            names: ["drum", "drum_with_drumsticks"],
            surrogates: "\uD83E\uDD41",
            unicodeVersion: 9,
          },
          {
            names: ["long_drum"],
            surrogates: "\uD83E\uDE98",
            unicodeVersion: 13,
          },
          {
            names: ["saxophone"],
            surrogates: "\uD83C\uDFB7",
            unicodeVersion: 6,
          },
          { names: ["trumpet"], surrogates: "\uD83C\uDFBA", unicodeVersion: 6 },
          {
            names: ["accordion"],
            surrogates: "\uD83E\uDE97",
            unicodeVersion: 13,
          },
          { names: ["guitar"], surrogates: "\uD83C\uDFB8", unicodeVersion: 6 },
          { names: ["banjo"], surrogates: "\uD83E\uDE95", unicodeVersion: 12 },
          { names: ["violin"], surrogates: "\uD83C\uDFBB", unicodeVersion: 6 },
          { names: ["flute"], surrogates: "\uD83E\uDE88", unicodeVersion: 15 },
          {
            names: ["game_die"],
            surrogates: "\uD83C\uDFB2",
            unicodeVersion: 6,
          },
          { names: ["chess_pawn"], surrogates: "♟️", unicodeVersion: 1.1 },
          {
            names: ["dart", "direct_hit"],
            surrogates: "\uD83C\uDFAF",
            unicodeVersion: 6,
          },
          { names: ["bowling"], surrogates: "\uD83C\uDFB3", unicodeVersion: 6 },
          {
            names: ["video_game"],
            surrogates: "\uD83C\uDFAE",
            unicodeVersion: 6,
          },
          {
            names: ["slot_machine"],
            surrogates: "\uD83C\uDFB0",
            unicodeVersion: 6,
          },
          {
            names: ["jigsaw", "puzzle_piece"],
            surrogates: "\uD83E\uDDE9",
            unicodeVersion: 11,
          },
        ],
        travel: [
          {
            names: ["red_car", "automobile"],
            surrogates: "\uD83D\uDE97",
            unicodeVersion: 6,
          },
          { names: ["taxi"], surrogates: "\uD83D\uDE95", unicodeVersion: 6 },
          {
            names: ["blue_car"],
            surrogates: "\uD83D\uDE99",
            unicodeVersion: 6,
          },
          {
            names: ["pickup_truck"],
            surrogates: "\uD83D\uDEFB",
            unicodeVersion: 13,
          },
          { names: ["minibus"], surrogates: "\uD83D\uDE90", unicodeVersion: 6 },
          { names: ["bus"], surrogates: "\uD83D\uDE8C", unicodeVersion: 6 },
          {
            names: ["trolleybus"],
            surrogates: "\uD83D\uDE8E",
            unicodeVersion: 6,
          },
          {
            names: ["race_car", "racing_car"],
            surrogates: "\uD83C\uDFCE️",
            unicodeVersion: 7,
          },
          {
            names: ["police_car"],
            surrogates: "\uD83D\uDE93",
            unicodeVersion: 6,
          },
          {
            names: ["ambulance"],
            surrogates: "\uD83D\uDE91",
            unicodeVersion: 6,
          },
          {
            names: ["fire_engine"],
            surrogates: "\uD83D\uDE92",
            unicodeVersion: 6,
          },
          { names: ["truck"], surrogates: "\uD83D\uDE9A", unicodeVersion: 6 },
          {
            names: ["articulated_lorry"],
            surrogates: "\uD83D\uDE9B",
            unicodeVersion: 6,
          },
          { names: ["tractor"], surrogates: "\uD83D\uDE9C", unicodeVersion: 6 },
          {
            names: ["probing_cane"],
            surrogates: "\uD83E\uDDAF",
            unicodeVersion: 12,
          },
          {
            names: ["manual_wheelchair"],
            surrogates: "\uD83E\uDDBD",
            unicodeVersion: 12,
          },
          {
            names: ["motorized_wheelchair"],
            surrogates: "\uD83E\uDDBC",
            unicodeVersion: 12,
          },
          { names: ["crutch"], surrogates: "\uD83E\uDE7C", unicodeVersion: 14 },
          {
            names: ["scooter", "kick_scooter"],
            surrogates: "\uD83D\uDEF4",
            unicodeVersion: 9,
          },
          {
            names: ["bike", "bicycle"],
            surrogates: "\uD83D\uDEB2",
            unicodeVersion: 6,
          },
          {
            names: ["motor_scooter", "motorbike"],
            surrogates: "\uD83D\uDEF5",
            unicodeVersion: 9,
          },
          {
            names: ["motorcycle", "racing_motorcycle"],
            surrogates: "\uD83C\uDFCD️",
            unicodeVersion: 7,
          },
          {
            names: ["auto_rickshaw"],
            surrogates: "\uD83D\uDEFA",
            unicodeVersion: 12,
          },
          { names: ["wheel"], surrogates: "\uD83D\uDEDE", unicodeVersion: 14 },
          {
            names: ["rotating_light"],
            surrogates: "\uD83D\uDEA8",
            unicodeVersion: 6,
          },
          {
            names: ["oncoming_police_car"],
            surrogates: "\uD83D\uDE94",
            unicodeVersion: 6,
          },
          {
            names: ["oncoming_bus"],
            surrogates: "\uD83D\uDE8D",
            unicodeVersion: 6,
          },
          {
            names: ["oncoming_automobile"],
            surrogates: "\uD83D\uDE98",
            unicodeVersion: 6,
          },
          {
            names: ["oncoming_taxi"],
            surrogates: "\uD83D\uDE96",
            unicodeVersion: 6,
          },
          {
            names: ["aerial_tramway"],
            surrogates: "\uD83D\uDEA1",
            unicodeVersion: 6,
          },
          {
            names: ["mountain_cableway"],
            surrogates: "\uD83D\uDEA0",
            unicodeVersion: 6,
          },
          {
            names: ["suspension_railway"],
            surrogates: "\uD83D\uDE9F",
            unicodeVersion: 6,
          },
          {
            names: ["railway_car"],
            surrogates: "\uD83D\uDE83",
            unicodeVersion: 6,
          },
          {
            names: ["train", "tram_car"],
            surrogates: "\uD83D\uDE8B",
            unicodeVersion: 6,
          },
          {
            names: ["mountain_railway"],
            surrogates: "\uD83D\uDE9E",
            unicodeVersion: 6,
          },
          {
            names: ["monorail"],
            surrogates: "\uD83D\uDE9D",
            unicodeVersion: 6,
          },
          {
            names: ["bullettrain_side"],
            surrogates: "\uD83D\uDE84",
            unicodeVersion: 6,
          },
          {
            names: ["bullettrain_front", "bullet_train"],
            surrogates: "\uD83D\uDE85",
            unicodeVersion: 6,
          },
          {
            names: ["light_rail"],
            surrogates: "\uD83D\uDE88",
            unicodeVersion: 6,
          },
          {
            names: ["steam_locomotive", "locomotive"],
            surrogates: "\uD83D\uDE82",
            unicodeVersion: 6,
          },
          { names: ["train2"], surrogates: "\uD83D\uDE86", unicodeVersion: 6 },
          { names: ["metro"], surrogates: "\uD83D\uDE87", unicodeVersion: 6 },
          { names: ["tram"], surrogates: "\uD83D\uDE8A", unicodeVersion: 6 },
          { names: ["station"], surrogates: "\uD83D\uDE89", unicodeVersion: 6 },
          { names: ["airplane"], surrogates: "✈️", unicodeVersion: 1.1 },
          {
            names: ["airplane_departure"],
            surrogates: "\uD83D\uDEEB",
            unicodeVersion: 7,
          },
          {
            names: ["airplane_arriving"],
            surrogates: "\uD83D\uDEEC",
            unicodeVersion: 7,
          },
          {
            names: ["airplane_small", "small_airplane"],
            surrogates: "\uD83D\uDEE9️",
            unicodeVersion: 7,
          },
          { names: ["seat"], surrogates: "\uD83D\uDCBA", unicodeVersion: 6 },
          {
            names: ["satellite_orbital"],
            surrogates: "\uD83D\uDEF0️",
            unicodeVersion: 7,
          },
          { names: ["rocket"], surrogates: "\uD83D\uDE80", unicodeVersion: 6 },
          {
            names: ["flying_saucer"],
            surrogates: "\uD83D\uDEF8",
            unicodeVersion: 10,
          },
          {
            names: ["helicopter"],
            surrogates: "\uD83D\uDE81",
            unicodeVersion: 6,
          },
          {
            names: ["canoe", "kayak"],
            surrogates: "\uD83D\uDEF6",
            unicodeVersion: 9,
          },
          { names: ["sailboat"], surrogates: "⛵", unicodeVersion: 5.2 },
          {
            names: ["speedboat"],
            surrogates: "\uD83D\uDEA4",
            unicodeVersion: 6,
          },
          {
            names: ["motorboat", "motor_boat"],
            surrogates: "\uD83D\uDEE5️",
            unicodeVersion: 7,
          },
          {
            names: ["cruise_ship", "passenger_ship"],
            surrogates: "\uD83D\uDEF3️",
            unicodeVersion: 7,
          },
          { names: ["ferry"], surrogates: "⛴️", unicodeVersion: 5.2 },
          { names: ["ship"], surrogates: "\uD83D\uDEA2", unicodeVersion: 6 },
          {
            names: ["ring_buoy"],
            surrogates: "\uD83D\uDEDF",
            unicodeVersion: 14,
          },
          { names: ["anchor"], surrogates: "⚓", unicodeVersion: 4.1 },
          { names: ["hook"], surrogates: "\uD83E\uDE9D", unicodeVersion: 13 },
          {
            names: ["fuelpump", "fuel_pump"],
            surrogates: "⛽",
            unicodeVersion: 5.2,
          },
          {
            names: ["construction"],
            surrogates: "\uD83D\uDEA7",
            unicodeVersion: 6,
          },
          {
            names: ["vertical_traffic_light"],
            surrogates: "\uD83D\uDEA6",
            unicodeVersion: 6,
          },
          {
            names: ["traffic_light"],
            surrogates: "\uD83D\uDEA5",
            unicodeVersion: 6,
          },
          {
            names: ["busstop", "bus_stop"],
            surrogates: "\uD83D\uDE8F",
            unicodeVersion: 6,
          },
          {
            names: ["map", "world_map"],
            surrogates: "\uD83D\uDDFA️",
            unicodeVersion: 7,
          },
          {
            names: ["moyai", "moai"],
            surrogates: "\uD83D\uDDFF",
            unicodeVersion: 6,
          },
          {
            names: ["statue_of_liberty"],
            surrogates: "\uD83D\uDDFD",
            unicodeVersion: 6,
          },
          {
            names: ["tokyo_tower"],
            surrogates: "\uD83D\uDDFC",
            unicodeVersion: 6,
          },
          {
            names: ["european_castle", "castle"],
            surrogates: "\uD83C\uDFF0",
            unicodeVersion: 6,
          },
          {
            names: ["japanese_castle"],
            surrogates: "\uD83C\uDFEF",
            unicodeVersion: 6,
          },
          {
            names: ["stadium"],
            surrogates: "\uD83C\uDFDF️",
            unicodeVersion: 7,
          },
          {
            names: ["ferris_wheel"],
            surrogates: "\uD83C\uDFA1",
            unicodeVersion: 6,
          },
          {
            names: ["roller_coaster"],
            surrogates: "\uD83C\uDFA2",
            unicodeVersion: 6,
          },
          {
            names: ["carousel_horse"],
            surrogates: "\uD83C\uDFA0",
            unicodeVersion: 6,
          },
          { names: ["fountain"], surrogates: "⛲", unicodeVersion: 5.2 },
          {
            names: ["beach_umbrella", "umbrella_on_ground"],
            surrogates: "⛱️",
            unicodeVersion: 5.2,
          },
          {
            names: ["beach", "beach_with_umbrella"],
            surrogates: "\uD83C\uDFD6️",
            unicodeVersion: 7,
          },
          {
            names: ["island", "desert_island"],
            surrogates: "\uD83C\uDFDD️",
            unicodeVersion: 7,
          },
          { names: ["desert"], surrogates: "\uD83C\uDFDC️", unicodeVersion: 7 },
          { names: ["volcano"], surrogates: "\uD83C\uDF0B", unicodeVersion: 6 },
          { names: ["mountain"], surrogates: "⛰️", unicodeVersion: 5.2 },
          {
            names: ["mountain_snow", "snow_capped_mountain"],
            surrogates: "\uD83C\uDFD4️",
            unicodeVersion: 7,
          },
          {
            names: ["mount_fuji"],
            surrogates: "\uD83D\uDDFB",
            unicodeVersion: 6,
          },
          {
            names: ["camping"],
            surrogates: "\uD83C\uDFD5️",
            unicodeVersion: 7,
          },
          { names: ["tent"], surrogates: "⛺", unicodeVersion: 5.2 },
          { names: ["house"], surrogates: "\uD83C\uDFE0", unicodeVersion: 6 },
          {
            names: ["house_with_garden"],
            surrogates: "\uD83C\uDFE1",
            unicodeVersion: 6,
          },
          {
            names: ["homes", "house_buildings", "houses"],
            surrogates: "\uD83C\uDFD8️",
            unicodeVersion: 7,
          },
          {
            names: ["house_abandoned", "derelict_house_building"],
            surrogates: "\uD83C\uDFDA️",
            unicodeVersion: 7,
          },
          { names: ["hut"], surrogates: "\uD83D\uDED6", unicodeVersion: 13 },
          {
            names: ["construction_site", "building_construction"],
            surrogates: "\uD83C\uDFD7️",
            unicodeVersion: 7,
          },
          { names: ["factory"], surrogates: "\uD83C\uDFED", unicodeVersion: 6 },
          { names: ["office"], surrogates: "\uD83C\uDFE2", unicodeVersion: 6 },
          {
            names: ["department_store"],
            surrogates: "\uD83C\uDFEC",
            unicodeVersion: 6,
          },
          {
            names: ["post_office"],
            surrogates: "\uD83C\uDFE3",
            unicodeVersion: 6,
          },
          {
            names: ["european_post_office"],
            surrogates: "\uD83C\uDFE4",
            unicodeVersion: 6,
          },
          {
            names: ["hospital"],
            surrogates: "\uD83C\uDFE5",
            unicodeVersion: 6,
          },
          { names: ["bank"], surrogates: "\uD83C\uDFE6", unicodeVersion: 6 },
          { names: ["hotel"], surrogates: "\uD83C\uDFE8", unicodeVersion: 6 },
          {
            names: ["convenience_store"],
            surrogates: "\uD83C\uDFEA",
            unicodeVersion: 6,
          },
          { names: ["school"], surrogates: "\uD83C\uDFEB", unicodeVersion: 6 },
          {
            names: ["love_hotel"],
            surrogates: "\uD83C\uDFE9",
            unicodeVersion: 6,
          },
          { names: ["wedding"], surrogates: "\uD83D\uDC92", unicodeVersion: 6 },
          {
            names: ["classical_building"],
            surrogates: "\uD83C\uDFDB️",
            unicodeVersion: 7,
          },
          { names: ["church"], surrogates: "⛪", unicodeVersion: 5.2 },
          { names: ["mosque"], surrogates: "\uD83D\uDD4C", unicodeVersion: 8 },
          {
            names: ["synagogue"],
            surrogates: "\uD83D\uDD4D",
            unicodeVersion: 8,
          },
          {
            names: ["hindu_temple"],
            surrogates: "\uD83D\uDED5",
            unicodeVersion: 12,
          },
          { names: ["kaaba"], surrogates: "\uD83D\uDD4B", unicodeVersion: 8 },
          { names: ["shinto_shrine"], surrogates: "⛩️", unicodeVersion: 5.2 },
          {
            names: ["railway_track", "railroad_track"],
            surrogates: "\uD83D\uDEE4️",
            unicodeVersion: 7,
          },
          {
            names: ["motorway"],
            surrogates: "\uD83D\uDEE3️",
            unicodeVersion: 7,
          },
          {
            names: ["japan", "map_of_japan"],
            surrogates: "\uD83D\uDDFE",
            unicodeVersion: 6,
          },
          {
            names: ["rice_scene"],
            surrogates: "\uD83C\uDF91",
            unicodeVersion: 6,
          },
          {
            names: ["park", "national_park"],
            surrogates: "\uD83C\uDFDE️",
            unicodeVersion: 7,
          },
          { names: ["sunrise"], surrogates: "\uD83C\uDF05", unicodeVersion: 6 },
          {
            names: ["sunrise_over_mountains"],
            surrogates: "\uD83C\uDF04",
            unicodeVersion: 6,
          },
          {
            names: ["stars", "shooting_star"],
            surrogates: "\uD83C\uDF20",
            unicodeVersion: 6,
          },
          {
            names: ["sparkler"],
            surrogates: "\uD83C\uDF87",
            unicodeVersion: 6,
          },
          {
            names: ["fireworks"],
            surrogates: "\uD83C\uDF86",
            unicodeVersion: 6,
          },
          {
            names: ["city_sunset", "city_sunrise", "sunset"],
            surrogates: "\uD83C\uDF07",
            unicodeVersion: 6,
          },
          {
            names: ["city_dusk"],
            surrogates: "\uD83C\uDF06",
            unicodeVersion: 6,
          },
          {
            names: ["cityscape"],
            surrogates: "\uD83C\uDFD9️",
            unicodeVersion: 7,
          },
          {
            names: ["night_with_stars"],
            surrogates: "\uD83C\uDF03",
            unicodeVersion: 6,
          },
          {
            names: ["milky_way"],
            surrogates: "\uD83C\uDF0C",
            unicodeVersion: 6,
          },
          {
            names: ["bridge_at_night"],
            surrogates: "\uD83C\uDF09",
            unicodeVersion: 6,
          },
          { names: ["foggy"], surrogates: "\uD83C\uDF01", unicodeVersion: 6 },
        ],
        objects: [
          { names: ["watch"], surrogates: "⌚", unicodeVersion: 1.1 },
          {
            names: ["mobile_phone", "iphone"],
            surrogates: "\uD83D\uDCF1",
            unicodeVersion: 6,
          },
          { names: ["calling"], surrogates: "\uD83D\uDCF2", unicodeVersion: 6 },
          {
            names: ["computer"],
            surrogates: "\uD83D\uDCBB",
            unicodeVersion: 6,
          },
          { names: ["keyboard"], surrogates: "⌨️", unicodeVersion: 1.1 },
          {
            names: ["desktop", "desktop_computer"],
            surrogates: "\uD83D\uDDA5️",
            unicodeVersion: 7,
          },
          {
            names: ["printer"],
            surrogates: "\uD83D\uDDA8️",
            unicodeVersion: 7,
          },
          {
            names: ["mouse_three_button", "three_button_mouse"],
            surrogates: "\uD83D\uDDB1️",
            unicodeVersion: 7,
          },
          {
            names: ["trackball"],
            surrogates: "\uD83D\uDDB2️",
            unicodeVersion: 7,
          },
          {
            names: ["joystick"],
            surrogates: "\uD83D\uDD79️",
            unicodeVersion: 7,
          },
          {
            names: ["compression", "clamp"],
            surrogates: "\uD83D\uDDDC️",
            unicodeVersion: 7,
          },
          {
            names: ["minidisc", "computer_disk"],
            surrogates: "\uD83D\uDCBD",
            unicodeVersion: 6,
          },
          {
            names: ["floppy_disk"],
            surrogates: "\uD83D\uDCBE",
            unicodeVersion: 6,
          },
          {
            names: ["cd", "optical_disk"],
            surrogates: "\uD83D\uDCBF",
            unicodeVersion: 6,
          },
          { names: ["dvd"], surrogates: "\uD83D\uDCC0", unicodeVersion: 6 },
          {
            names: ["vhs", "videocassette"],
            surrogates: "\uD83D\uDCFC",
            unicodeVersion: 6,
          },
          { names: ["camera"], surrogates: "\uD83D\uDCF7", unicodeVersion: 6 },
          {
            names: ["camera_with_flash"],
            surrogates: "\uD83D\uDCF8",
            unicodeVersion: 7,
          },
          {
            names: ["video_camera"],
            surrogates: "\uD83D\uDCF9",
            unicodeVersion: 6,
          },
          {
            names: ["movie_camera"],
            surrogates: "\uD83C\uDFA5",
            unicodeVersion: 6,
          },
          {
            names: ["projector", "film_projector"],
            surrogates: "\uD83D\uDCFD️",
            unicodeVersion: 7,
          },
          {
            names: ["film_frames"],
            surrogates: "\uD83C\uDF9E️",
            unicodeVersion: 7,
          },
          {
            names: ["telephone_receiver"],
            surrogates: "\uD83D\uDCDE",
            unicodeVersion: 6,
          },
          { names: ["telephone"], surrogates: "☎️", unicodeVersion: 1.1 },
          { names: ["pager"], surrogates: "\uD83D\uDCDF", unicodeVersion: 6 },
          {
            names: ["fax", "fax_machine"],
            surrogates: "\uD83D\uDCE0",
            unicodeVersion: 6,
          },
          {
            names: ["tv", "television"],
            surrogates: "\uD83D\uDCFA",
            unicodeVersion: 6,
          },
          { names: ["radio"], surrogates: "\uD83D\uDCFB", unicodeVersion: 6 },
          {
            names: ["microphone2", "studio_microphone"],
            surrogates: "\uD83C\uDF99️",
            unicodeVersion: 7,
          },
          {
            names: ["level_slider"],
            surrogates: "\uD83C\uDF9A️",
            unicodeVersion: 7,
          },
          {
            names: ["control_knobs"],
            surrogates: "\uD83C\uDF9B️",
            unicodeVersion: 7,
          },
          {
            names: ["compass"],
            surrogates: "\uD83E\uDDED",
            unicodeVersion: 11,
          },
          { names: ["stopwatch"], surrogates: "⏱️", unicodeVersion: 6 },
          {
            names: ["timer", "timer_clock"],
            surrogates: "⏲️",
            unicodeVersion: 6,
          },
          { names: ["alarm_clock"], surrogates: "⏰", unicodeVersion: 6 },
          {
            names: ["clock", "mantlepiece_clock"],
            surrogates: "\uD83D\uDD70️",
            unicodeVersion: 7,
          },
          { names: ["hourglass"], surrogates: "⌛", unicodeVersion: 1.1 },
          {
            names: ["hourglass_flowing_sand"],
            surrogates: "⏳",
            unicodeVersion: 6,
          },
          {
            names: ["satellite"],
            surrogates: "\uD83D\uDCE1",
            unicodeVersion: 6,
          },
          { names: ["battery"], surrogates: "\uD83D\uDD0B", unicodeVersion: 6 },
          {
            names: ["low_battery"],
            surrogates: "\uD83E\uDEAB",
            unicodeVersion: 14,
          },
          {
            names: ["electric_plug"],
            surrogates: "\uD83D\uDD0C",
            unicodeVersion: 6,
          },
          {
            names: ["bulb", "light_bulb"],
            surrogates: "\uD83D\uDCA1",
            unicodeVersion: 6,
          },
          {
            names: ["flashlight"],
            surrogates: "\uD83D\uDD26",
            unicodeVersion: 6,
          },
          { names: ["candle"], surrogates: "\uD83D\uDD6F️", unicodeVersion: 7 },
          {
            names: ["diya_lamp"],
            surrogates: "\uD83E\uDE94",
            unicodeVersion: 12,
          },
          {
            names: ["fire_extinguisher"],
            surrogates: "\uD83E\uDDEF",
            unicodeVersion: 11,
          },
          {
            names: ["oil", "oil_drum"],
            surrogates: "\uD83D\uDEE2️",
            unicodeVersion: 7,
          },
          {
            names: ["money_with_wings"],
            surrogates: "\uD83D\uDCB8",
            unicodeVersion: 6,
          },
          { names: ["dollar"], surrogates: "\uD83D\uDCB5", unicodeVersion: 6 },
          {
            names: ["yen", "yen_banknote"],
            surrogates: "\uD83D\uDCB4",
            unicodeVersion: 6,
          },
          {
            names: ["euro", "euro_banknote"],
            surrogates: "\uD83D\uDCB6",
            unicodeVersion: 6,
          },
          { names: ["pound"], surrogates: "\uD83D\uDCB7", unicodeVersion: 6 },
          { names: ["coin"], surrogates: "\uD83E\uDE99", unicodeVersion: 13 },
          {
            names: ["moneybag", "money_bag"],
            surrogates: "\uD83D\uDCB0",
            unicodeVersion: 6,
          },
          {
            names: ["credit_card"],
            surrogates: "\uD83D\uDCB3",
            unicodeVersion: 6,
          },
          {
            names: ["identification_card"],
            surrogates: "\uD83E\uDEAA",
            unicodeVersion: 14,
          },
          {
            names: ["gem", "gem_stone"],
            surrogates: "\uD83D\uDC8E",
            unicodeVersion: 6,
          },
          {
            names: ["scales", "balance_scale"],
            surrogates: "⚖️",
            unicodeVersion: 4.1,
          },
          { names: ["ladder"], surrogates: "\uD83E\uDE9C", unicodeVersion: 13 },
          {
            names: ["toolbox"],
            surrogates: "\uD83E\uDDF0",
            unicodeVersion: 11,
          },
          {
            names: ["screwdriver"],
            surrogates: "\uD83E\uDE9B",
            unicodeVersion: 13,
          },
          { names: ["wrench"], surrogates: "\uD83D\uDD27", unicodeVersion: 6 },
          { names: ["hammer"], surrogates: "\uD83D\uDD28", unicodeVersion: 6 },
          {
            names: ["hammer_pick", "hammer_and_pick"],
            surrogates: "⚒️",
            unicodeVersion: 4.1,
          },
          {
            names: ["tools", "hammer_and_wrench"],
            surrogates: "\uD83D\uDEE0️",
            unicodeVersion: 7,
          },
          { names: ["pick"], surrogates: "⛏️", unicodeVersion: 5.2 },
          {
            names: ["carpentry_saw"],
            surrogates: "\uD83E\uDE9A",
            unicodeVersion: 13,
          },
          {
            names: ["nut_and_bolt"],
            surrogates: "\uD83D\uDD29",
            unicodeVersion: 6,
          },
          { names: ["gear"], surrogates: "⚙️", unicodeVersion: 4.1 },
          {
            names: ["mouse_trap"],
            surrogates: "\uD83E\uDEA4",
            unicodeVersion: 13,
          },
          {
            names: ["bricks", "brick"],
            surrogates: "\uD83E\uDDF1",
            unicodeVersion: 11,
          },
          { names: ["chains"], surrogates: "⛓️", unicodeVersion: 5.2 },
          { names: ["magnet"], surrogates: "\uD83E\uDDF2", unicodeVersion: 11 },
          {
            names: ["gun", "pistol"],
            surrogates: "\uD83D\uDD2B",
            unicodeVersion: 6,
          },
          { names: ["bomb"], surrogates: "\uD83D\uDCA3", unicodeVersion: 6 },
          {
            names: ["firecracker"],
            surrogates: "\uD83E\uDDE8",
            unicodeVersion: 11,
          },
          { names: ["axe"], surrogates: "\uD83E\uDE93", unicodeVersion: 12 },
          {
            names: ["knife", "kitchen_knife"],
            surrogates: "\uD83D\uDD2A",
            unicodeVersion: 6,
          },
          {
            names: ["dagger", "dagger_knife"],
            surrogates: "\uD83D\uDDE1️",
            unicodeVersion: 7,
          },
          { names: ["crossed_swords"], surrogates: "⚔️", unicodeVersion: 4.1 },
          { names: ["shield"], surrogates: "\uD83D\uDEE1️", unicodeVersion: 7 },
          {
            names: ["smoking", "cigarette"],
            surrogates: "\uD83D\uDEAC",
            unicodeVersion: 6,
          },
          { names: ["coffin"], surrogates: "⚰️", unicodeVersion: 4.1 },
          {
            names: ["headstone"],
            surrogates: "\uD83E\uDEA6",
            unicodeVersion: 13,
          },
          {
            names: ["urn", "funeral_urn"],
            surrogates: "⚱️",
            unicodeVersion: 4.1,
          },
          { names: ["amphora"], surrogates: "\uD83C\uDFFA", unicodeVersion: 8 },
          {
            names: ["crystal_ball"],
            surrogates: "\uD83D\uDD2E",
            unicodeVersion: 6,
          },
          {
            names: ["prayer_beads"],
            surrogates: "\uD83D\uDCFF",
            unicodeVersion: 8,
          },
          {
            names: ["nazar_amulet"],
            surrogates: "\uD83E\uDDFF",
            unicodeVersion: 11,
          },
          { names: ["hamsa"], surrogates: "\uD83E\uDEAC", unicodeVersion: 14 },
          {
            names: ["barber", "barber_pole"],
            surrogates: "\uD83D\uDC88",
            unicodeVersion: 6,
          },
          { names: ["alembic"], surrogates: "⚗️", unicodeVersion: 4.1 },
          {
            names: ["telescope"],
            surrogates: "\uD83D\uDD2D",
            unicodeVersion: 6,
          },
          {
            names: ["microscope"],
            surrogates: "\uD83D\uDD2C",
            unicodeVersion: 6,
          },
          { names: ["hole"], surrogates: "\uD83D\uDD73️", unicodeVersion: 7 },
          { names: ["x_ray"], surrogates: "\uD83E\uDE7B", unicodeVersion: 14 },
          {
            names: ["adhesive_bandage"],
            surrogates: "\uD83E\uDE79",
            unicodeVersion: 12,
          },
          {
            names: ["stethoscope"],
            surrogates: "\uD83E\uDE7A",
            unicodeVersion: 12,
          },
          { names: ["pill"], surrogates: "\uD83D\uDC8A", unicodeVersion: 6 },
          { names: ["syringe"], surrogates: "\uD83D\uDC89", unicodeVersion: 6 },
          {
            names: ["drop_of_blood"],
            surrogates: "\uD83E\uDE78",
            unicodeVersion: 12,
          },
          { names: ["dna"], surrogates: "\uD83E\uDDEC", unicodeVersion: 11 },
          {
            names: ["microbe"],
            surrogates: "\uD83E\uDDA0",
            unicodeVersion: 11,
          },
          {
            names: ["petri_dish"],
            surrogates: "\uD83E\uDDEB",
            unicodeVersion: 11,
          },
          {
            names: ["test_tube"],
            surrogates: "\uD83E\uDDEA",
            unicodeVersion: 11,
          },
          {
            names: ["thermometer"],
            surrogates: "\uD83C\uDF21️",
            unicodeVersion: 7,
          },
          { names: ["broom"], surrogates: "\uD83E\uDDF9", unicodeVersion: 11 },
          {
            names: ["plunger"],
            surrogates: "\uD83E\uDEA0",
            unicodeVersion: 13,
          },
          { names: ["basket"], surrogates: "\uD83E\uDDFA", unicodeVersion: 11 },
          {
            names: ["roll_of_paper"],
            surrogates: "\uD83E\uDDFB",
            unicodeVersion: 11,
          },
          { names: ["toilet"], surrogates: "\uD83D\uDEBD", unicodeVersion: 6 },
          {
            names: ["potable_water"],
            surrogates: "\uD83D\uDEB0",
            unicodeVersion: 6,
          },
          { names: ["shower"], surrogates: "\uD83D\uDEBF", unicodeVersion: 6 },
          { names: ["bathtub"], surrogates: "\uD83D\uDEC1", unicodeVersion: 6 },
          {
            names: ["bath"],
            surrogates: "\uD83D\uDEC0",
            unicodeVersion: 6,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["bath_tone1"],
                surrogates: "\uD83D\uDEC0\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: ["bath_tone2"],
                surrogates: "\uD83D\uDEC0\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: ["bath_tone3"],
                surrogates: "\uD83D\uDEC0\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: ["bath_tone4"],
                surrogates: "\uD83D\uDEC0\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["bath_tone5"],
                surrogates: "\uD83D\uDEC0\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          { names: ["soap"], surrogates: "\uD83E\uDDFC", unicodeVersion: 11 },
          {
            names: ["toothbrush"],
            surrogates: "\uD83E\uDEA5",
            unicodeVersion: 13,
          },
          { names: ["razor"], surrogates: "\uD83E\uDE92", unicodeVersion: 12 },
          {
            names: ["hair_pick"],
            surrogates: "\uD83E\uDEAE",
            unicodeVersion: 15,
          },
          { names: ["sponge"], surrogates: "\uD83E\uDDFD", unicodeVersion: 11 },
          { names: ["bucket"], surrogates: "\uD83E\uDEA3", unicodeVersion: 13 },
          {
            names: ["squeeze_bottle", "lotion_bottle"],
            surrogates: "\uD83E\uDDF4",
            unicodeVersion: 11,
          },
          {
            names: ["bellhop", "bellhop_bell"],
            surrogates: "\uD83D\uDECE️",
            unicodeVersion: 7,
          },
          { names: ["key"], surrogates: "\uD83D\uDD11", unicodeVersion: 6 },
          {
            names: ["key2", "old_key"],
            surrogates: "\uD83D\uDDDD️",
            unicodeVersion: 7,
          },
          { names: ["door"], surrogates: "\uD83D\uDEAA", unicodeVersion: 6 },
          { names: ["chair"], surrogates: "\uD83E\uDE91", unicodeVersion: 12 },
          {
            names: ["couch", "couch_and_lamp"],
            surrogates: "\uD83D\uDECB️",
            unicodeVersion: 7,
          },
          { names: ["bed"], surrogates: "\uD83D\uDECF️", unicodeVersion: 7 },
          {
            names: ["sleeping_accommodation", "person_in_bed"],
            surrogates: "\uD83D\uDECC",
            unicodeVersion: 7,
            hasDiversity: !0,
            diversityChildren: [
              {
                names: ["person_in_bed_tone1", "person_in_bed_light_skin_tone"],
                surrogates: "\uD83D\uDECC\uD83C\uDFFB",
                unicodeVersion: 8,
                diversity: ["1f3fb"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_in_bed_tone2",
                  "person_in_bed_medium_light_skin_tone",
                ],
                surrogates: "\uD83D\uDECC\uD83C\uDFFC",
                unicodeVersion: 8,
                diversity: ["1f3fc"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_in_bed_tone3",
                  "person_in_bed_medium_skin_tone",
                ],
                surrogates: "\uD83D\uDECC\uD83C\uDFFD",
                unicodeVersion: 8,
                diversity: ["1f3fd"],
                hasDiversityParent: !0,
              },
              {
                names: [
                  "person_in_bed_tone4",
                  "person_in_bed_medium_dark_skin_tone",
                ],
                surrogates: "\uD83D\uDECC\uD83C\uDFFE",
                unicodeVersion: 8,
                diversity: ["1f3fe"],
                hasDiversityParent: !0,
              },
              {
                names: ["person_in_bed_tone5", "person_in_bed_dark_skin_tone"],
                surrogates: "\uD83D\uDECC\uD83C\uDFFF",
                unicodeVersion: 8,
                diversity: ["1f3ff"],
                hasDiversityParent: !0,
              },
            ],
          },
          {
            names: ["teddy_bear"],
            surrogates: "\uD83E\uDDF8",
            unicodeVersion: 11,
          },
          {
            names: ["nesting_dolls"],
            surrogates: "\uD83E\uDE86",
            unicodeVersion: 13,
          },
          {
            names: ["frame_photo", "frame_with_picture"],
            surrogates: "\uD83D\uDDBC️",
            unicodeVersion: 7,
          },
          { names: ["mirror"], surrogates: "\uD83E\uDE9E", unicodeVersion: 13 },
          { names: ["window"], surrogates: "\uD83E\uDE9F", unicodeVersion: 13 },
          {
            names: ["shopping_bags"],
            surrogates: "\uD83D\uDECD️",
            unicodeVersion: 7,
          },
          {
            names: ["shopping_cart", "shopping_trolley"],
            surrogates: "\uD83D\uDED2",
            unicodeVersion: 9,
          },
          {
            names: ["gift", "wrapped_gift"],
            surrogates: "\uD83C\uDF81",
            unicodeVersion: 6,
          },
          { names: ["balloon"], surrogates: "\uD83C\uDF88", unicodeVersion: 6 },
          {
            names: ["flags", "carp_streamer"],
            surrogates: "\uD83C\uDF8F",
            unicodeVersion: 6,
          },
          { names: ["ribbon"], surrogates: "\uD83C\uDF80", unicodeVersion: 6 },
          {
            names: ["magic_wand"],
            surrogates: "\uD83E\uDE84",
            unicodeVersion: 13,
          },
          {
            names: ["pi\xf1ata"],
            surrogates: "\uD83E\uDE85",
            unicodeVersion: 13,
          },
          {
            names: ["confetti_ball"],
            surrogates: "\uD83C\uDF8A",
            unicodeVersion: 6,
          },
          {
            names: ["tada", "party_popper"],
            surrogates: "\uD83C\uDF89",
            unicodeVersion: 6,
          },
          { names: ["dolls"], surrogates: "\uD83C\uDF8E", unicodeVersion: 6 },
          {
            names: ["folding_hand_fan"],
            surrogates: "\uD83E\uDEAD",
            unicodeVersion: 15,
          },
          {
            names: ["izakaya_lantern"],
            surrogates: "\uD83C\uDFEE",
            unicodeVersion: 6,
          },
          {
            names: ["wind_chime"],
            surrogates: "\uD83C\uDF90",
            unicodeVersion: 6,
          },
          {
            names: ["mirror_ball"],
            surrogates: "\uD83E\uDEA9",
            unicodeVersion: 14,
          },
          {
            names: ["red_envelope"],
            surrogates: "\uD83E\uDDE7",
            unicodeVersion: 11,
          },
          { names: ["envelope"], surrogates: "✉️", unicodeVersion: 1.1 },
          {
            names: ["envelope_with_arrow"],
            surrogates: "\uD83D\uDCE9",
            unicodeVersion: 6,
          },
          {
            names: ["incoming_envelope"],
            surrogates: "\uD83D\uDCE8",
            unicodeVersion: 6,
          },
          {
            names: ["e_mail", "email"],
            surrogates: "\uD83D\uDCE7",
            unicodeVersion: 6,
          },
          {
            names: ["love_letter"],
            surrogates: "\uD83D\uDC8C",
            unicodeVersion: 6,
          },
          {
            names: ["inbox_tray"],
            surrogates: "\uD83D\uDCE5",
            unicodeVersion: 6,
          },
          {
            names: ["outbox_tray"],
            surrogates: "\uD83D\uDCE4",
            unicodeVersion: 6,
          },
          { names: ["package"], surrogates: "\uD83D\uDCE6", unicodeVersion: 6 },
          { names: ["label"], surrogates: "\uD83C\uDFF7️", unicodeVersion: 7 },
          {
            names: ["placard"],
            surrogates: "\uD83E\uDEA7",
            unicodeVersion: 13,
          },
          {
            names: ["mailbox_closed"],
            surrogates: "\uD83D\uDCEA",
            unicodeVersion: 6,
          },
          { names: ["mailbox"], surrogates: "\uD83D\uDCEB", unicodeVersion: 6 },
          {
            names: ["mailbox_with_mail"],
            surrogates: "\uD83D\uDCEC",
            unicodeVersion: 6,
          },
          {
            names: ["mailbox_with_no_mail"],
            surrogates: "\uD83D\uDCED",
            unicodeVersion: 6,
          },
          { names: ["postbox"], surrogates: "\uD83D\uDCEE", unicodeVersion: 6 },
          {
            names: ["postal_horn"],
            surrogates: "\uD83D\uDCEF",
            unicodeVersion: 6,
          },
          { names: ["scroll"], surrogates: "\uD83D\uDCDC", unicodeVersion: 6 },
          {
            names: ["page_with_curl"],
            surrogates: "\uD83D\uDCC3",
            unicodeVersion: 6,
          },
          {
            names: ["page_facing_up"],
            surrogates: "\uD83D\uDCC4",
            unicodeVersion: 6,
          },
          {
            names: ["bookmark_tabs"],
            surrogates: "\uD83D\uDCD1",
            unicodeVersion: 6,
          },
          {
            names: ["receipt"],
            surrogates: "\uD83E\uDDFE",
            unicodeVersion: 11,
          },
          {
            names: ["bar_chart"],
            surrogates: "\uD83D\uDCCA",
            unicodeVersion: 6,
          },
          {
            names: ["chart_with_upwards_trend"],
            surrogates: "\uD83D\uDCC8",
            unicodeVersion: 6,
          },
          {
            names: ["chart_with_downwards_trend"],
            surrogates: "\uD83D\uDCC9",
            unicodeVersion: 6,
          },
          {
            names: ["notepad_spiral", "spiral_note_pad"],
            surrogates: "\uD83D\uDDD2️",
            unicodeVersion: 7,
          },
          {
            names: ["calendar_spiral", "spiral_calendar_pad"],
            surrogates: "\uD83D\uDDD3️",
            unicodeVersion: 7,
          },
          {
            names: ["calendar"],
            surrogates: "\uD83D\uDCC6",
            unicodeVersion: 6,
          },
          { names: ["date"], surrogates: "\uD83D\uDCC5", unicodeVersion: 6 },
          {
            names: ["wastebasket"],
            surrogates: "\uD83D\uDDD1️",
            unicodeVersion: 7,
          },
          {
            names: ["card_index"],
            surrogates: "\uD83D\uDCC7",
            unicodeVersion: 6,
          },
          {
            names: ["card_box", "card_file_box"],
            surrogates: "\uD83D\uDDC3️",
            unicodeVersion: 7,
          },
          {
            names: ["ballot_box", "ballot_box_with_ballot"],
            surrogates: "\uD83D\uDDF3️",
            unicodeVersion: 7,
          },
          {
            names: ["file_cabinet"],
            surrogates: "\uD83D\uDDC4️",
            unicodeVersion: 7,
          },
          {
            names: ["clipboard"],
            surrogates: "\uD83D\uDCCB",
            unicodeVersion: 6,
          },
          {
            names: ["file_folder"],
            surrogates: "\uD83D\uDCC1",
            unicodeVersion: 6,
          },
          {
            names: ["open_file_folder"],
            surrogates: "\uD83D\uDCC2",
            unicodeVersion: 6,
          },
          {
            names: ["dividers", "card_index_dividers"],
            surrogates: "\uD83D\uDDC2️",
            unicodeVersion: 7,
          },
          {
            names: ["newspaper2", "rolled_up_newspaper"],
            surrogates: "\uD83D\uDDDE️",
            unicodeVersion: 7,
          },
          {
            names: ["newspaper"],
            surrogates: "\uD83D\uDCF0",
            unicodeVersion: 6,
          },
          {
            names: ["notebook"],
            surrogates: "\uD83D\uDCD3",
            unicodeVersion: 6,
          },
          {
            names: ["notebook_with_decorative_cover"],
            surrogates: "\uD83D\uDCD4",
            unicodeVersion: 6,
          },
          { names: ["ledger"], surrogates: "\uD83D\uDCD2", unicodeVersion: 6 },
          {
            names: ["closed_book"],
            surrogates: "\uD83D\uDCD5",
            unicodeVersion: 6,
          },
          {
            names: ["green_book"],
            surrogates: "\uD83D\uDCD7",
            unicodeVersion: 6,
          },
          {
            names: ["blue_book"],
            surrogates: "\uD83D\uDCD8",
            unicodeVersion: 6,
          },
          {
            names: ["orange_book"],
            surrogates: "\uD83D\uDCD9",
            unicodeVersion: 6,
          },
          { names: ["books"], surrogates: "\uD83D\uDCDA", unicodeVersion: 6 },
          {
            names: ["book", "open_book"],
            surrogates: "\uD83D\uDCD6",
            unicodeVersion: 6,
          },
          {
            names: ["bookmark"],
            surrogates: "\uD83D\uDD16",
            unicodeVersion: 6,
          },
          {
            names: ["safety_pin"],
            surrogates: "\uD83E\uDDF7",
            unicodeVersion: 11,
          },
          { names: ["link"], surrogates: "\uD83D\uDD17", unicodeVersion: 6 },
          {
            names: ["paperclip"],
            surrogates: "\uD83D\uDCCE",
            unicodeVersion: 6,
          },
          {
            names: ["paperclips", "linked_paperclips"],
            surrogates: "\uD83D\uDD87️",
            unicodeVersion: 7,
          },
          {
            names: ["triangular_ruler"],
            surrogates: "\uD83D\uDCD0",
            unicodeVersion: 6,
          },
          {
            names: ["straight_ruler"],
            surrogates: "\uD83D\uDCCF",
            unicodeVersion: 6,
          },
          { names: ["abacus"], surrogates: "\uD83E\uDDEE", unicodeVersion: 11 },
          { names: ["pushpin"], surrogates: "\uD83D\uDCCC", unicodeVersion: 6 },
          {
            names: ["round_pushpin"],
            surrogates: "\uD83D\uDCCD",
            unicodeVersion: 6,
          },
          { names: ["scissors"], surrogates: "✂️", unicodeVersion: 1.1 },
          {
            names: ["pen_ballpoint", "lower_left_ballpoint_pen", "pen"],
            surrogates: "\uD83D\uDD8A️",
            unicodeVersion: 7,
          },
          {
            names: ["pen_fountain", "lower_left_fountain_pen", "fountain_pen"],
            surrogates: "\uD83D\uDD8B️",
            unicodeVersion: 7,
          },
          { names: ["black_nib"], surrogates: "✒️", unicodeVersion: 1.1 },
          {
            names: ["paintbrush", "lower_left_paintbrush"],
            surrogates: "\uD83D\uDD8C️",
            unicodeVersion: 7,
          },
          {
            names: ["crayon", "lower_left_crayon"],
            surrogates: "\uD83D\uDD8D️",
            unicodeVersion: 7,
          },
          {
            names: ["pencil", "memo"],
            surrogates: "\uD83D\uDCDD",
            unicodeVersion: 6,
          },
          { names: ["pencil2"], surrogates: "✏️", unicodeVersion: 1.1 },
          { names: ["mag"], surrogates: "\uD83D\uDD0D", unicodeVersion: 6 },
          {
            names: ["mag_right"],
            surrogates: "\uD83D\uDD0E",
            unicodeVersion: 6,
          },
          {
            names: ["lock_with_ink_pen"],
            surrogates: "\uD83D\uDD0F",
            unicodeVersion: 6,
          },
          {
            names: ["closed_lock_with_key"],
            surrogates: "\uD83D\uDD10",
            unicodeVersion: 6,
          },
          {
            names: ["lock", "locked"],
            surrogates: "\uD83D\uDD12",
            unicodeVersion: 6,
          },
          {
            names: ["unlock", "unlocked"],
            surrogates: "\uD83D\uDD13",
            unicodeVersion: 6,
          },
        ],
        symbols: [
          {
            names: ["pink_heart"],
            surrogates: "\uD83E\uDE77",
            unicodeVersion: 15,
          },
          {
            names: ["heart", "red_heart"],
            surrogates: "❤️",
            unicodeVersion: 1.1,
          },
          {
            names: ["orange_heart"],
            surrogates: "\uD83E\uDDE1",
            unicodeVersion: 10,
          },
          {
            names: ["yellow_heart"],
            surrogates: "\uD83D\uDC9B",
            unicodeVersion: 6,
          },
          {
            names: ["green_heart"],
            surrogates: "\uD83D\uDC9A",
            unicodeVersion: 6,
          },
          {
            names: ["light_blue_heart"],
            surrogates: "\uD83E\uDE75",
            unicodeVersion: 15,
          },
          {
            names: ["blue_heart"],
            surrogates: "\uD83D\uDC99",
            unicodeVersion: 6,
          },
          {
            names: ["purple_heart"],
            surrogates: "\uD83D\uDC9C",
            unicodeVersion: 6,
          },
          {
            names: ["black_heart"],
            surrogates: "\uD83D\uDDA4",
            unicodeVersion: 9,
          },
          {
            names: ["grey_heart"],
            surrogates: "\uD83E\uDE76",
            unicodeVersion: 15,
          },
          {
            names: ["white_heart"],
            surrogates: "\uD83E\uDD0D",
            unicodeVersion: 12,
          },
          {
            names: ["brown_heart"],
            surrogates: "\uD83E\uDD0E",
            unicodeVersion: 12,
          },
          {
            names: ["broken_heart"],
            surrogates: "\uD83D\uDC94",
            unicodeVersion: 6,
          },
          {
            names: [
              "heart_exclamation",
              "heavy_heart_exclamation_mark_ornament",
            ],
            surrogates: "❣️",
            unicodeVersion: 1.1,
          },
          {
            names: ["two_hearts"],
            surrogates: "\uD83D\uDC95",
            unicodeVersion: 6,
          },
          {
            names: ["revolving_hearts"],
            surrogates: "\uD83D\uDC9E",
            unicodeVersion: 6,
          },
          {
            names: ["heartbeat", "beating_heart"],
            surrogates: "\uD83D\uDC93",
            unicodeVersion: 6,
          },
          {
            names: ["heartpulse", "growing_heart"],
            surrogates: "\uD83D\uDC97",
            unicodeVersion: 6,
          },
          {
            names: ["sparkling_heart"],
            surrogates: "\uD83D\uDC96",
            unicodeVersion: 6,
          },
          { names: ["cupid"], surrogates: "\uD83D\uDC98", unicodeVersion: 6 },
          {
            names: ["gift_heart"],
            surrogates: "\uD83D\uDC9D",
            unicodeVersion: 6,
          },
          {
            names: ["mending_heart"],
            surrogates: "❤️‍\uD83E\uDE79",
            unicodeVersion: 13.1,
          },
          {
            names: ["heart_on_fire"],
            surrogates: "❤️‍\uD83D\uDD25",
            unicodeVersion: 13.1,
          },
          {
            names: ["heart_decoration"],
            surrogates: "\uD83D\uDC9F",
            unicodeVersion: 6,
          },
          {
            names: ["peace", "peace_symbol"],
            surrogates: "☮️",
            unicodeVersion: 1.1,
          },
          {
            names: ["cross", "latin_cross"],
            surrogates: "✝️",
            unicodeVersion: 1.1,
          },
          {
            names: ["star_and_crescent"],
            surrogates: "☪️",
            unicodeVersion: 1.1,
          },
          {
            names: ["om_symbol"],
            surrogates: "\uD83D\uDD49️",
            unicodeVersion: 7,
          },
          { names: ["wheel_of_dharma"], surrogates: "☸️", unicodeVersion: 1.1 },
          { names: ["khanda"], surrogates: "\uD83E\uDEAF", unicodeVersion: 15 },
          { names: ["star_of_david"], surrogates: "✡️", unicodeVersion: 1.1 },
          {
            names: ["six_pointed_star"],
            surrogates: "\uD83D\uDD2F",
            unicodeVersion: 6,
          },
          { names: ["menorah"], surrogates: "\uD83D\uDD4E", unicodeVersion: 8 },
          { names: ["yin_yang"], surrogates: "☯️", unicodeVersion: 1.1 },
          { names: ["orthodox_cross"], surrogates: "☦️", unicodeVersion: 1.1 },
          {
            names: ["place_of_worship", "worship_symbol"],
            surrogates: "\uD83D\uDED0",
            unicodeVersion: 8,
          },
          { names: ["ophiuchus"], surrogates: "⛎", unicodeVersion: 6 },
          { names: ["aries"], surrogates: "♈", unicodeVersion: 1.1 },
          { names: ["taurus"], surrogates: "♉", unicodeVersion: 1.1 },
          { names: ["gemini"], surrogates: "♊", unicodeVersion: 1.1 },
          { names: ["cancer"], surrogates: "♋", unicodeVersion: 1.1 },
          { names: ["leo"], surrogates: "♌", unicodeVersion: 1.1 },
          { names: ["virgo"], surrogates: "♍", unicodeVersion: 1.1 },
          { names: ["libra"], surrogates: "♎", unicodeVersion: 1.1 },
          {
            names: ["scorpius", "scorpio"],
            surrogates: "♏",
            unicodeVersion: 1.1,
          },
          { names: ["sagittarius"], surrogates: "♐", unicodeVersion: 1.1 },
          { names: ["capricorn"], surrogates: "♑", unicodeVersion: 1.1 },
          { names: ["aquarius"], surrogates: "♒", unicodeVersion: 1.1 },
          { names: ["pisces"], surrogates: "♓", unicodeVersion: 1.1 },
          { names: ["id"], surrogates: "\uD83C\uDD94", unicodeVersion: 6 },
          {
            names: ["atom", "atom_symbol"],
            surrogates: "⚛️",
            unicodeVersion: 4.1,
          },
          { names: ["accept"], surrogates: "\uD83C\uDE51", unicodeVersion: 6 },
          {
            names: ["radioactive", "radioactive_sign"],
            surrogates: "☢️",
            unicodeVersion: 1.1,
          },
          {
            names: ["biohazard", "biohazard_sign"],
            surrogates: "☣️",
            unicodeVersion: 1.1,
          },
          {
            names: ["mobile_phone_off"],
            surrogates: "\uD83D\uDCF4",
            unicodeVersion: 6,
          },
          {
            names: ["vibration_mode"],
            surrogates: "\uD83D\uDCF3",
            unicodeVersion: 6,
          },
          { names: ["u6709"], surrogates: "\uD83C\uDE36", unicodeVersion: 6 },
          { names: ["u7121"], surrogates: "\uD83C\uDE1A", unicodeVersion: 5.2 },
          { names: ["u7533"], surrogates: "\uD83C\uDE38", unicodeVersion: 6 },
          { names: ["u55b6"], surrogates: "\uD83C\uDE3A", unicodeVersion: 6 },
          { names: ["u6708"], surrogates: "\uD83C\uDE37️", unicodeVersion: 6 },
          {
            names: ["eight_pointed_black_star"],
            surrogates: "✴️",
            unicodeVersion: 1.1,
          },
          { names: ["vs"], surrogates: "\uD83C\uDD9A", unicodeVersion: 6 },
          {
            names: ["white_flower"],
            surrogates: "\uD83D\uDCAE",
            unicodeVersion: 6,
          },
          {
            names: ["ideograph_advantage"],
            surrogates: "\uD83C\uDE50",
            unicodeVersion: 6,
          },
          { names: ["secret"], surrogates: "㊙️", unicodeVersion: 1.1 },
          { names: ["congratulations"], surrogates: "㊗️", unicodeVersion: 1.1 },
          { names: ["u5408"], surrogates: "\uD83C\uDE34", unicodeVersion: 6 },
          { names: ["u6e80"], surrogates: "\uD83C\uDE35", unicodeVersion: 6 },
          { names: ["u5272"], surrogates: "\uD83C\uDE39", unicodeVersion: 6 },
          { names: ["u7981"], surrogates: "\uD83C\uDE32", unicodeVersion: 6 },
          { names: ["a"], surrogates: "\uD83C\uDD70️", unicodeVersion: 6 },
          { names: ["b"], surrogates: "\uD83C\uDD71️", unicodeVersion: 6 },
          { names: ["ab"], surrogates: "\uD83C\uDD8E", unicodeVersion: 6 },
          { names: ["cl"], surrogates: "\uD83C\uDD91", unicodeVersion: 6 },
          { names: ["o2"], surrogates: "\uD83C\uDD7E️", unicodeVersion: 6 },
          { names: ["sos"], surrogates: "\uD83C\uDD98", unicodeVersion: 6 },
          { names: ["x", "cross_mark"], surrogates: "❌", unicodeVersion: 6 },
          { names: ["o"], surrogates: "⭕", unicodeVersion: 5.2 },
          {
            names: ["octagonal_sign", "stop_sign"],
            surrogates: "\uD83D\uDED1",
            unicodeVersion: 9,
          },
          { names: ["no_entry"], surrogates: "⛔", unicodeVersion: 5.2 },
          {
            names: ["name_badge"],
            surrogates: "\uD83D\uDCDB",
            unicodeVersion: 6,
          },
          {
            names: ["no_entry_sign", "prohibited"],
            surrogates: "\uD83D\uDEAB",
            unicodeVersion: 6,
          },
          { names: ["100"], surrogates: "\uD83D\uDCAF", unicodeVersion: 6 },
          { names: ["anger"], surrogates: "\uD83D\uDCA2", unicodeVersion: 6 },
          {
            names: ["hotsprings", "hot_springs"],
            surrogates: "♨️",
            unicodeVersion: 1.1,
          },
          {
            names: ["no_pedestrians"],
            surrogates: "\uD83D\uDEB7",
            unicodeVersion: 6,
          },
          {
            names: ["do_not_litter", "no_littering"],
            surrogates: "\uD83D\uDEAF",
            unicodeVersion: 6,
          },
          {
            names: ["no_bicycles"],
            surrogates: "\uD83D\uDEB3",
            unicodeVersion: 6,
          },
          {
            names: ["non_potable_water"],
            surrogates: "\uD83D\uDEB1",
            unicodeVersion: 6,
          },
          {
            names: ["underage"],
            surrogates: "\uD83D\uDD1E",
            unicodeVersion: 6,
          },
          {
            names: ["no_mobile_phones"],
            surrogates: "\uD83D\uDCF5",
            unicodeVersion: 6,
          },
          {
            names: ["no_smoking"],
            surrogates: "\uD83D\uDEAD",
            unicodeVersion: 6,
          },
          { names: ["exclamation"], surrogates: "❗", unicodeVersion: 5.2 },
          { names: ["grey_exclamation"], surrogates: "❕", unicodeVersion: 6 },
          {
            names: ["question", "question_mark"],
            surrogates: "❓",
            unicodeVersion: 6,
          },
          { names: ["grey_question"], surrogates: "❔", unicodeVersion: 6 },
          { names: ["bangbang"], surrogates: "‼️", unicodeVersion: 1.1 },
          { names: ["interrobang"], surrogates: "⁉️", unicodeVersion: 3 },
          {
            names: ["low_brightness"],
            surrogates: "\uD83D\uDD05",
            unicodeVersion: 6,
          },
          {
            names: ["high_brightness"],
            surrogates: "\uD83D\uDD06",
            unicodeVersion: 6,
          },
          {
            names: ["part_alternation_mark"],
            surrogates: "〽️",
            unicodeVersion: 3.2,
          },
          { names: ["warning"], surrogates: "⚠️", unicodeVersion: 4 },
          {
            names: ["children_crossing"],
            surrogates: "\uD83D\uDEB8",
            unicodeVersion: 6,
          },
          { names: ["trident"], surrogates: "\uD83D\uDD31", unicodeVersion: 6 },
          { names: ["fleur_de_lis"], surrogates: "⚜️", unicodeVersion: 4.1 },
          {
            names: ["beginner"],
            surrogates: "\uD83D\uDD30",
            unicodeVersion: 6,
          },
          { names: ["recycle"], surrogates: "♻️", unicodeVersion: 3.2 },
          { names: ["white_check_mark"], surrogates: "✅", unicodeVersion: 6 },
          { names: ["u6307"], surrogates: "\uD83C\uDE2F", unicodeVersion: 5.2 },
          { names: ["chart"], surrogates: "\uD83D\uDCB9", unicodeVersion: 6 },
          { names: ["sparkle"], surrogates: "❇️", unicodeVersion: 1.1 },
          {
            names: ["eight_spoked_asterisk"],
            surrogates: "✳️",
            unicodeVersion: 1.1,
          },
          {
            names: ["negative_squared_cross_mark"],
            surrogates: "❎",
            unicodeVersion: 6,
          },
          {
            names: ["globe_with_meridians"],
            surrogates: "\uD83C\uDF10",
            unicodeVersion: 6,
          },
          {
            names: ["diamond_shape_with_a_dot_inside"],
            surrogates: "\uD83D\uDCA0",
            unicodeVersion: 6,
          },
          { names: ["m", "circled_m"], surrogates: "Ⓜ️", unicodeVersion: 1.1 },
          { names: ["cyclone"], surrogates: "\uD83C\uDF00", unicodeVersion: 6 },
          { names: ["zzz"], surrogates: "\uD83D\uDCA4", unicodeVersion: 6 },
          { names: ["atm"], surrogates: "\uD83C\uDFE7", unicodeVersion: 6 },
          {
            names: ["wc", "water_closet"],
            surrogates: "\uD83D\uDEBE",
            unicodeVersion: 6,
          },
          { names: ["wheelchair"], surrogates: "♿", unicodeVersion: 4.1 },
          {
            names: ["parking"],
            surrogates: "\uD83C\uDD7F️",
            unicodeVersion: 5.2,
          },
          {
            names: ["elevator"],
            surrogates: "\uD83D\uDED7",
            unicodeVersion: 13,
          },
          { names: ["u7a7a"], surrogates: "\uD83C\uDE33", unicodeVersion: 6 },
          { names: ["sa"], surrogates: "\uD83C\uDE02️", unicodeVersion: 6 },
          {
            names: ["passport_control"],
            surrogates: "\uD83D\uDEC2",
            unicodeVersion: 6,
          },
          { names: ["customs"], surrogates: "\uD83D\uDEC3", unicodeVersion: 6 },
          {
            names: ["baggage_claim"],
            surrogates: "\uD83D\uDEC4",
            unicodeVersion: 6,
          },
          {
            names: ["left_luggage"],
            surrogates: "\uD83D\uDEC5",
            unicodeVersion: 6,
          },
          {
            names: ["wireless"],
            surrogates: "\uD83D\uDEDC",
            unicodeVersion: 15,
          },
          {
            names: ["mens", "mens_room"],
            surrogates: "\uD83D\uDEB9",
            unicodeVersion: 6,
          },
          {
            names: ["womens", "womens_room"],
            surrogates: "\uD83D\uDEBA",
            unicodeVersion: 6,
          },
          {
            names: ["baby_symbol"],
            surrogates: "\uD83D\uDEBC",
            unicodeVersion: 6,
          },
          {
            names: ["restroom"],
            surrogates: "\uD83D\uDEBB",
            unicodeVersion: 6,
          },
          {
            names: ["put_litter_in_its_place"],
            surrogates: "\uD83D\uDEAE",
            unicodeVersion: 6,
          },
          { names: ["cinema"], surrogates: "\uD83C\uDFA6", unicodeVersion: 6 },
          {
            names: ["signal_strength", "antenna_bars"],
            surrogates: "\uD83D\uDCF6",
            unicodeVersion: 6,
          },
          { names: ["koko"], surrogates: "\uD83C\uDE01", unicodeVersion: 6 },
          {
            names: ["symbols", "input_symbols"],
            surrogates: "\uD83D\uDD23",
            unicodeVersion: 6,
          },
          {
            names: ["information_source", "information"],
            surrogates: "ℹ️",
            unicodeVersion: 3,
          },
          { names: ["abc"], surrogates: "\uD83D\uDD24", unicodeVersion: 6 },
          { names: ["abcd"], surrogates: "\uD83D\uDD21", unicodeVersion: 6 },
          {
            names: ["capital_abcd"],
            surrogates: "\uD83D\uDD20",
            unicodeVersion: 6,
          },
          { names: ["ng"], surrogates: "\uD83C\uDD96", unicodeVersion: 6 },
          { names: ["ok"], surrogates: "\uD83C\uDD97", unicodeVersion: 6 },
          { names: ["up"], surrogates: "\uD83C\uDD99", unicodeVersion: 6 },
          { names: ["cool"], surrogates: "\uD83C\uDD92", unicodeVersion: 6 },
          { names: ["new"], surrogates: "\uD83C\uDD95", unicodeVersion: 6 },
          { names: ["free"], surrogates: "\uD83C\uDD93", unicodeVersion: 6 },
          { names: ["zero"], surrogates: "0️⃣", unicodeVersion: 3 },
          { names: ["one"], surrogates: "1️⃣", unicodeVersion: 3 },
          { names: ["two"], surrogates: "2️⃣", unicodeVersion: 3 },
          { names: ["three"], surrogates: "3️⃣", unicodeVersion: 3 },
          { names: ["four"], surrogates: "4️⃣", unicodeVersion: 3 },
          { names: ["five"], surrogates: "5️⃣", unicodeVersion: 3 },
          { names: ["six"], surrogates: "6️⃣", unicodeVersion: 3 },
          { names: ["seven"], surrogates: "7️⃣", unicodeVersion: 3 },
          { names: ["eight"], surrogates: "8️⃣", unicodeVersion: 3 },
          { names: ["nine"], surrogates: "9️⃣", unicodeVersion: 3 },
          {
            names: ["keycap_ten"],
            surrogates: "\uD83D\uDD1F",
            unicodeVersion: 6,
          },
          {
            names: ["1234", "input_numbers"],
            surrogates: "\uD83D\uDD22",
            unicodeVersion: 6,
          },
          { names: ["hash"], surrogates: "#️⃣", unicodeVersion: 3 },
          {
            names: ["asterisk", "keycap_asterisk"],
            surrogates: "*️⃣",
            unicodeVersion: 3,
          },
          {
            names: ["eject", "eject_symbol"],
            surrogates: "⏏️",
            unicodeVersion: 4,
          },
          { names: ["arrow_forward"], surrogates: "▶️", unicodeVersion: 1.1 },
          {
            names: ["pause_button", "double_vertical_bar"],
            surrogates: "⏸️",
            unicodeVersion: 7,
          },
          { names: ["play_pause"], surrogates: "⏯️", unicodeVersion: 6 },
          { names: ["stop_button"], surrogates: "⏹️", unicodeVersion: 7 },
          { names: ["record_button"], surrogates: "⏺️", unicodeVersion: 7 },
          {
            names: ["track_next", "next_track"],
            surrogates: "⏭️",
            unicodeVersion: 6,
          },
          {
            names: ["track_previous", "previous_track"],
            surrogates: "⏮️",
            unicodeVersion: 6,
          },
          { names: ["fast_forward"], surrogates: "⏩", unicodeVersion: 6 },
          { names: ["rewind"], surrogates: "⏪", unicodeVersion: 6 },
          { names: ["arrow_double_up"], surrogates: "⏫", unicodeVersion: 6 },
          { names: ["arrow_double_down"], surrogates: "⏬", unicodeVersion: 6 },
          { names: ["arrow_backward"], surrogates: "◀️", unicodeVersion: 1.1 },
          {
            names: ["arrow_up_small"],
            surrogates: "\uD83D\uDD3C",
            unicodeVersion: 6,
          },
          {
            names: ["arrow_down_small"],
            surrogates: "\uD83D\uDD3D",
            unicodeVersion: 6,
          },
          {
            names: ["arrow_right", "right_arrow"],
            surrogates: "➡️",
            unicodeVersion: 1.1,
          },
          {
            names: ["arrow_left", "left_arrow"],
            surrogates: "⬅️",
            unicodeVersion: 4,
          },
          {
            names: ["arrow_up", "up_arrow"],
            surrogates: "⬆️",
            unicodeVersion: 4,
          },
          {
            names: ["arrow_down", "down_arrow"],
            surrogates: "⬇️",
            unicodeVersion: 4,
          },
          {
            names: ["arrow_upper_right"],
            surrogates: "↗️",
            unicodeVersion: 1.1,
          },
          {
            names: ["arrow_lower_right"],
            surrogates: "↘️",
            unicodeVersion: 1.1,
          },
          {
            names: ["arrow_lower_left"],
            surrogates: "↙️",
            unicodeVersion: 1.1,
          },
          {
            names: ["arrow_upper_left", "up_left_arrow"],
            surrogates: "↖️",
            unicodeVersion: 1.1,
          },
          {
            names: ["arrow_up_down", "up_down_arrow"],
            surrogates: "↕️",
            unicodeVersion: 1.1,
          },
          {
            names: ["left_right_arrow"],
            surrogates: "↔️",
            unicodeVersion: 1.1,
          },
          {
            names: ["arrow_right_hook"],
            surrogates: "↪️",
            unicodeVersion: 1.1,
          },
          {
            names: ["leftwards_arrow_with_hook"],
            surrogates: "↩️",
            unicodeVersion: 1.1,
          },
          {
            names: ["arrow_heading_up"],
            surrogates: "⤴️",
            unicodeVersion: 3.2,
          },
          {
            names: ["arrow_heading_down"],
            surrogates: "⤵️",
            unicodeVersion: 3.2,
          },
          {
            names: ["twisted_rightwards_arrows"],
            surrogates: "\uD83D\uDD00",
            unicodeVersion: 6,
          },
          { names: ["repeat"], surrogates: "\uD83D\uDD01", unicodeVersion: 6 },
          {
            names: ["repeat_one"],
            surrogates: "\uD83D\uDD02",
            unicodeVersion: 6,
          },
          {
            names: ["arrows_counterclockwise"],
            surrogates: "\uD83D\uDD04",
            unicodeVersion: 6,
          },
          {
            names: ["arrows_clockwise"],
            surrogates: "\uD83D\uDD03",
            unicodeVersion: 6,
          },
          {
            names: ["musical_note"],
            surrogates: "\uD83C\uDFB5",
            unicodeVersion: 6,
          },
          {
            names: ["notes", "musical_notes"],
            surrogates: "\uD83C\uDFB6",
            unicodeVersion: 6,
          },
          { names: ["heavy_plus_sign"], surrogates: "➕", unicodeVersion: 6 },
          { names: ["heavy_minus_sign"], surrogates: "➖", unicodeVersion: 6 },
          {
            names: ["heavy_division_sign"],
            surrogates: "➗",
            unicodeVersion: 6,
          },
          {
            names: ["heavy_multiplication_x"],
            surrogates: "✖️",
            unicodeVersion: 1.1,
          },
          {
            names: ["heavy_equals_sign"],
            surrogates: "\uD83D\uDFF0",
            unicodeVersion: 14,
          },
          { names: ["infinity"], surrogates: "♾️", unicodeVersion: 11 },
          {
            names: ["heavy_dollar_sign"],
            surrogates: "\uD83D\uDCB2",
            unicodeVersion: 6,
          },
          {
            names: ["currency_exchange"],
            surrogates: "\uD83D\uDCB1",
            unicodeVersion: 6,
          },
          {
            names: ["tm", "trade_mark"],
            surrogates: "™️",
            unicodeVersion: 1.1,
          },
          { names: ["copyright"], surrogates: "\xa9️", unicodeVersion: 1.1 },
          { names: ["registered"], surrogates: "\xae️", unicodeVersion: 1.1 },
          { names: ["wavy_dash"], surrogates: "〰️", unicodeVersion: 1.1 },
          { names: ["curly_loop"], surrogates: "➰", unicodeVersion: 6 },
          { names: ["loop"], surrogates: "➿", unicodeVersion: 6 },
          {
            names: ["end", "end_arrow"],
            surrogates: "\uD83D\uDD1A",
            unicodeVersion: 6,
          },
          {
            names: ["back", "back_arrow"],
            surrogates: "\uD83D\uDD19",
            unicodeVersion: 6,
          },
          {
            names: ["on", "on_arrow"],
            surrogates: "\uD83D\uDD1B",
            unicodeVersion: 6,
          },
          {
            names: ["top", "top_arrow"],
            surrogates: "\uD83D\uDD1D",
            unicodeVersion: 6,
          },
          {
            names: ["soon", "soon_arrow"],
            surrogates: "\uD83D\uDD1C",
            unicodeVersion: 6,
          },
          {
            names: ["heavy_check_mark", "check_mark"],
            surrogates: "✔️",
            unicodeVersion: 1.1,
          },
          {
            names: ["ballot_box_with_check"],
            surrogates: "☑️",
            unicodeVersion: 1.1,
          },
          {
            names: ["radio_button"],
            surrogates: "\uD83D\uDD18",
            unicodeVersion: 6,
          },
          { names: ["white_circle"], surrogates: "⚪", unicodeVersion: 4.1 },
          { names: ["black_circle"], surrogates: "⚫", unicodeVersion: 4.1 },
          {
            names: ["red_circle"],
            surrogates: "\uD83D\uDD34",
            unicodeVersion: 6,
          },
          {
            names: ["blue_circle"],
            surrogates: "\uD83D\uDD35",
            unicodeVersion: 6,
          },
          {
            names: ["brown_circle"],
            surrogates: "\uD83D\uDFE4",
            unicodeVersion: 12,
          },
          {
            names: ["purple_circle"],
            surrogates: "\uD83D\uDFE3",
            unicodeVersion: 12,
          },
          {
            names: ["green_circle"],
            surrogates: "\uD83D\uDFE2",
            unicodeVersion: 12,
          },
          {
            names: ["yellow_circle"],
            surrogates: "\uD83D\uDFE1",
            unicodeVersion: 12,
          },
          {
            names: ["orange_circle"],
            surrogates: "\uD83D\uDFE0",
            unicodeVersion: 12,
          },
          {
            names: ["small_red_triangle"],
            surrogates: "\uD83D\uDD3A",
            unicodeVersion: 6,
          },
          {
            names: ["small_red_triangle_down"],
            surrogates: "\uD83D\uDD3B",
            unicodeVersion: 6,
          },
          {
            names: ["small_orange_diamond"],
            surrogates: "\uD83D\uDD38",
            unicodeVersion: 6,
          },
          {
            names: ["small_blue_diamond"],
            surrogates: "\uD83D\uDD39",
            unicodeVersion: 6,
          },
          {
            names: ["large_orange_diamond"],
            surrogates: "\uD83D\uDD36",
            unicodeVersion: 6,
          },
          {
            names: ["large_blue_diamond"],
            surrogates: "\uD83D\uDD37",
            unicodeVersion: 6,
          },
          {
            names: ["white_square_button"],
            surrogates: "\uD83D\uDD33",
            unicodeVersion: 6,
          },
          {
            names: ["black_square_button"],
            surrogates: "\uD83D\uDD32",
            unicodeVersion: 6,
          },
          {
            names: ["black_small_square"],
            surrogates: "▪️",
            unicodeVersion: 1.1,
          },
          {
            names: ["white_small_square"],
            surrogates: "▫️",
            unicodeVersion: 1.1,
          },
          {
            names: ["black_medium_small_square"],
            surrogates: "◾",
            unicodeVersion: 3.2,
          },
          {
            names: ["white_medium_small_square"],
            surrogates: "◽",
            unicodeVersion: 3.2,
          },
          {
            names: ["black_medium_square"],
            surrogates: "◼️",
            unicodeVersion: 3.2,
          },
          {
            names: ["white_medium_square"],
            surrogates: "◻️",
            unicodeVersion: 3.2,
          },
          {
            names: ["black_large_square"],
            surrogates: "⬛",
            unicodeVersion: 5.1,
          },
          {
            names: ["white_large_square"],
            surrogates: "⬜",
            unicodeVersion: 5.1,
          },
          {
            names: ["orange_square"],
            surrogates: "\uD83D\uDFE7",
            unicodeVersion: 12,
          },
          {
            names: ["blue_square"],
            surrogates: "\uD83D\uDFE6",
            unicodeVersion: 12,
          },
          {
            names: ["red_square"],
            surrogates: "\uD83D\uDFE5",
            unicodeVersion: 12,
          },
          {
            names: ["brown_square"],
            surrogates: "\uD83D\uDFEB",
            unicodeVersion: 12,
          },
          {
            names: ["purple_square"],
            surrogates: "\uD83D\uDFEA",
            unicodeVersion: 12,
          },
          {
            names: ["green_square"],
            surrogates: "\uD83D\uDFE9",
            unicodeVersion: 12,
          },
          {
            names: ["yellow_square"],
            surrogates: "\uD83D\uDFE8",
            unicodeVersion: 12,
          },
          { names: ["speaker"], surrogates: "\uD83D\uDD08", unicodeVersion: 6 },
          {
            names: ["mute", "muted_speaker"],
            surrogates: "\uD83D\uDD07",
            unicodeVersion: 6,
          },
          { names: ["sound"], surrogates: "\uD83D\uDD09", unicodeVersion: 6 },
          {
            names: ["loud_sound"],
            surrogates: "\uD83D\uDD0A",
            unicodeVersion: 6,
          },
          { names: ["bell"], surrogates: "\uD83D\uDD14", unicodeVersion: 6 },
          { names: ["no_bell"], surrogates: "\uD83D\uDD15", unicodeVersion: 6 },
          {
            names: ["mega", "megaphone"],
            surrogates: "\uD83D\uDCE3",
            unicodeVersion: 6,
          },
          {
            names: ["loudspeaker"],
            surrogates: "\uD83D\uDCE2",
            unicodeVersion: 6,
          },
          {
            names: ["speech_left", "left_speech_bubble"],
            surrogates: "\uD83D\uDDE8️",
            unicodeVersion: 7,
          },
          {
            names: ["eye_in_speech_bubble"],
            surrogates: "\uD83D\uDC41‍\uD83D\uDDE8",
            unicodeVersion: 7,
          },
          {
            names: ["speech_balloon"],
            surrogates: "\uD83D\uDCAC",
            unicodeVersion: 6,
          },
          {
            names: ["thought_balloon"],
            surrogates: "\uD83D\uDCAD",
            unicodeVersion: 6,
          },
          {
            names: ["anger_right", "right_anger_bubble"],
            surrogates: "\uD83D\uDDEF️",
            unicodeVersion: 7,
          },
          {
            names: ["spades", "spade_suit"],
            surrogates: "♠️",
            unicodeVersion: 1.1,
          },
          {
            names: ["clubs", "club_suit"],
            surrogates: "♣️",
            unicodeVersion: 1.1,
          },
          {
            names: ["hearts", "heart_suit"],
            surrogates: "♥️",
            unicodeVersion: 1.1,
          },
          {
            names: ["diamonds", "diamond_suit"],
            surrogates: "♦️",
            unicodeVersion: 1.1,
          },
          {
            names: ["black_joker", "joker"],
            surrogates: "\uD83C\uDCCF",
            unicodeVersion: 6,
          },
          {
            names: ["flower_playing_cards"],
            surrogates: "\uD83C\uDFB4",
            unicodeVersion: 6,
          },
          {
            names: ["mahjong"],
            surrogates: "\uD83C\uDC04",
            unicodeVersion: 5.1,
          },
          {
            names: ["clock1", "one_oclock"],
            surrogates: "\uD83D\uDD50",
            unicodeVersion: 6,
          },
          {
            names: ["clock2", "two_oclock"],
            surrogates: "\uD83D\uDD51",
            unicodeVersion: 6,
          },
          {
            names: ["clock3", "three_oclock"],
            surrogates: "\uD83D\uDD52",
            unicodeVersion: 6,
          },
          {
            names: ["clock4", "four_oclock"],
            surrogates: "\uD83D\uDD53",
            unicodeVersion: 6,
          },
          {
            names: ["clock5", "five_oclock"],
            surrogates: "\uD83D\uDD54",
            unicodeVersion: 6,
          },
          {
            names: ["clock6", "six_oclock"],
            surrogates: "\uD83D\uDD55",
            unicodeVersion: 6,
          },
          {
            names: ["clock7", "seven_oclock"],
            surrogates: "\uD83D\uDD56",
            unicodeVersion: 6,
          },
          {
            names: ["clock8", "eight_oclock"],
            surrogates: "\uD83D\uDD57",
            unicodeVersion: 6,
          },
          {
            names: ["clock9", "nine_oclock"],
            surrogates: "\uD83D\uDD58",
            unicodeVersion: 6,
          },
          {
            names: ["clock10", "ten_oclock"],
            surrogates: "\uD83D\uDD59",
            unicodeVersion: 6,
          },
          {
            names: ["clock11", "eleven_oclock"],
            surrogates: "\uD83D\uDD5A",
            unicodeVersion: 6,
          },
          {
            names: ["clock12", "twelve_oclock"],
            surrogates: "\uD83D\uDD5B",
            unicodeVersion: 6,
          },
          {
            names: ["clock130", "one_thirty"],
            surrogates: "\uD83D\uDD5C",
            unicodeVersion: 6,
          },
          {
            names: ["clock230", "two_thirty"],
            surrogates: "\uD83D\uDD5D",
            unicodeVersion: 6,
          },
          {
            names: ["clock330", "three_thirty"],
            surrogates: "\uD83D\uDD5E",
            unicodeVersion: 6,
          },
          {
            names: ["clock430", "four_thirty"],
            surrogates: "\uD83D\uDD5F",
            unicodeVersion: 6,
          },
          {
            names: ["clock530", "five_thirty"],
            surrogates: "\uD83D\uDD60",
            unicodeVersion: 6,
          },
          {
            names: ["clock630", "six_thirty"],
            surrogates: "\uD83D\uDD61",
            unicodeVersion: 6,
          },
          {
            names: ["clock730", "seven_thirty"],
            surrogates: "\uD83D\uDD62",
            unicodeVersion: 6,
          },
          {
            names: ["clock830", "eight_thirty"],
            surrogates: "\uD83D\uDD63",
            unicodeVersion: 6,
          },
          {
            names: ["clock930", "nine_thirty"],
            surrogates: "\uD83D\uDD64",
            unicodeVersion: 6,
          },
          {
            names: ["clock1030", "ten_thirty"],
            surrogates: "\uD83D\uDD65",
            unicodeVersion: 6,
          },
          {
            names: ["clock1130", "eleven_thirty"],
            surrogates: "\uD83D\uDD66",
            unicodeVersion: 6,
          },
          {
            names: ["clock1230", "twelve_thirty"],
            surrogates: "\uD83D\uDD67",
            unicodeVersion: 6,
          },
          { names: ["female_sign"], surrogates: "♀️", unicodeVersion: 1.1 },
          { names: ["male_sign"], surrogates: "♂️", unicodeVersion: 1.1 },
          {
            names: ["transgender_symbol"],
            surrogates: "⚧",
            unicodeVersion: 13,
          },
          { names: ["medical_symbol"], surrogates: "⚕️", unicodeVersion: 4.1 },
          {
            names: ["regional_indicator_z"],
            surrogates: "\uD83C\uDDFF",
            unicodeVersion: 6,
          },
          {
            names: ["regional_indicator_y"],
            surrogates: "\uD83C\uDDFE",
            unicodeVersion: 6,
          },
          {
            names: ["regional_indicator_x"],
            surrogates: "\uD83C\uDDFD",
            unicodeVersion: 6,
          },
          {
            names: ["regional_indicator_w"],
            surrogates: "\uD83C\uDDFC",
            unicodeVersion: 6,
          },
          {
            names: ["regional_indicator_v"],
            surrogates: "\uD83C\uDDFB",
            unicodeVersion: 6,
          },
          {
            names: ["regional_indicator_u"],
            surrogates: "\uD83C\uDDFA",
            unicodeVersion: 6,
          },
          {
            names: ["regional_indicator_t"],
            surrogates: "\uD83C\uDDF9",
            unicodeVersion: 6,
          },
          {
            names: ["regional_indicator_s"],
            surrogates: "\uD83C\uDDF8",
            unicodeVersion: 6,
          },
          {
            names: ["regional_indicator_r"],
            surrogates: "\uD83C\uDDF7",
            unicodeVersion: 6,
          },
          {
            names: ["regional_indicator_q"],
            surrogates: "\uD83C\uDDF6",
            unicodeVersion: 6,
          },
          {
            names: ["regional_indicator_p"],
            surrogates: "\uD83C\uDDF5",
            unicodeVersion: 6,
          },
          {
            names: ["regional_indicator_o"],
            surrogates: "\uD83C\uDDF4",
            unicodeVersion: 6,
          },
          {
            names: ["regional_indicator_n"],
            surrogates: "\uD83C\uDDF3",
            unicodeVersion: 6,
          },
          {
            names: ["regional_indicator_m"],
            surrogates: "\uD83C\uDDF2",
            unicodeVersion: 6,
          },
          {
            names: ["regional_indicator_l"],
            surrogates: "\uD83C\uDDF1",
            unicodeVersion: 6,
          },
          {
            names: ["regional_indicator_k"],
            surrogates: "\uD83C\uDDF0",
            unicodeVersion: 6,
          },
          {
            names: ["regional_indicator_j"],
            surrogates: "\uD83C\uDDEF",
            unicodeVersion: 6,
          },
          {
            names: ["regional_indicator_i"],
            surrogates: "\uD83C\uDDEE",
            unicodeVersion: 6,
          },
          {
            names: ["regional_indicator_h"],
            surrogates: "\uD83C\uDDED",
            unicodeVersion: 6,
          },
          {
            names: ["regional_indicator_g"],
            surrogates: "\uD83C\uDDEC",
            unicodeVersion: 6,
          },
          {
            names: ["regional_indicator_f"],
            surrogates: "\uD83C\uDDEB",
            unicodeVersion: 6,
          },
          {
            names: ["regional_indicator_e"],
            surrogates: "\uD83C\uDDEA",
            unicodeVersion: 6,
          },
          {
            names: ["regional_indicator_d"],
            surrogates: "\uD83C\uDDE9",
            unicodeVersion: 6,
          },
          {
            names: ["regional_indicator_c"],
            surrogates: "\uD83C\uDDE8",
            unicodeVersion: 6,
          },
          {
            names: ["regional_indicator_b"],
            surrogates: "\uD83C\uDDE7",
            unicodeVersion: 6,
          },
          {
            names: ["regional_indicator_a"],
            surrogates: "\uD83C\uDDE6",
            unicodeVersion: 6,
          },
        ],
        flags: [
          {
            names: ["flag_white"],
            surrogates: "\uD83C\uDFF3️",
            unicodeVersion: 7,
          },
          {
            names: ["flag_black"],
            surrogates: "\uD83C\uDFF4",
            unicodeVersion: 7,
          },
          {
            names: ["pirate_flag"],
            surrogates: "\uD83C\uDFF4‍☠️",
            unicodeVersion: 11,
          },
          {
            names: ["checkered_flag"],
            surrogates: "\uD83C\uDFC1",
            unicodeVersion: 6,
          },
          {
            names: ["triangular_flag_on_post"],
            surrogates: "\uD83D\uDEA9",
            unicodeVersion: 6,
          },
          {
            names: ["rainbow_flag", "gay_pride_flag"],
            surrogates: "\uD83C\uDFF3️‍\uD83C\uDF08",
            unicodeVersion: 7,
          },
          {
            names: ["transgender_flag"],
            surrogates: "\uD83C\uDFF3️‍⚧️",
            unicodeVersion: 13,
          },
          {
            names: ["united_nations"],
            surrogates: "\uD83C\uDDFA\uD83C\uDDF3",
            unicodeVersion: 6,
          },
          {
            names: ["flag_af"],
            surrogates: "\uD83C\uDDE6\uD83C\uDDEB",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ax"],
            surrogates: "\uD83C\uDDE6\uD83C\uDDFD",
            unicodeVersion: 6,
          },
          {
            names: ["flag_al"],
            surrogates: "\uD83C\uDDE6\uD83C\uDDF1",
            unicodeVersion: 6,
          },
          {
            names: ["flag_dz"],
            surrogates: "\uD83C\uDDE9\uD83C\uDDFF",
            unicodeVersion: 6,
          },
          {
            names: ["flag_as"],
            surrogates: "\uD83C\uDDE6\uD83C\uDDF8",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ad"],
            surrogates: "\uD83C\uDDE6\uD83C\uDDE9",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ao"],
            surrogates: "\uD83C\uDDE6\uD83C\uDDF4",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ai"],
            surrogates: "\uD83C\uDDE6\uD83C\uDDEE",
            unicodeVersion: 6,
          },
          {
            names: ["flag_aq"],
            surrogates: "\uD83C\uDDE6\uD83C\uDDF6",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ag"],
            surrogates: "\uD83C\uDDE6\uD83C\uDDEC",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ar"],
            surrogates: "\uD83C\uDDE6\uD83C\uDDF7",
            unicodeVersion: 6,
          },
          {
            names: ["flag_am"],
            surrogates: "\uD83C\uDDE6\uD83C\uDDF2",
            unicodeVersion: 6,
          },
          {
            names: ["flag_aw"],
            surrogates: "\uD83C\uDDE6\uD83C\uDDFC",
            unicodeVersion: 6,
          },
          {
            names: ["flag_au"],
            surrogates: "\uD83C\uDDE6\uD83C\uDDFA",
            unicodeVersion: 6,
          },
          {
            names: ["flag_at"],
            surrogates: "\uD83C\uDDE6\uD83C\uDDF9",
            unicodeVersion: 6,
          },
          {
            names: ["flag_az"],
            surrogates: "\uD83C\uDDE6\uD83C\uDDFF",
            unicodeVersion: 6,
          },
          {
            names: ["flag_bs"],
            surrogates: "\uD83C\uDDE7\uD83C\uDDF8",
            unicodeVersion: 6,
          },
          {
            names: ["flag_bh"],
            surrogates: "\uD83C\uDDE7\uD83C\uDDED",
            unicodeVersion: 6,
          },
          {
            names: ["flag_bd"],
            surrogates: "\uD83C\uDDE7\uD83C\uDDE9",
            unicodeVersion: 6,
          },
          {
            names: ["flag_bb"],
            surrogates: "\uD83C\uDDE7\uD83C\uDDE7",
            unicodeVersion: 6,
          },
          {
            names: ["flag_by"],
            surrogates: "\uD83C\uDDE7\uD83C\uDDFE",
            unicodeVersion: 6,
          },
          {
            names: ["flag_be"],
            surrogates: "\uD83C\uDDE7\uD83C\uDDEA",
            unicodeVersion: 6,
          },
          {
            names: ["flag_bz"],
            surrogates: "\uD83C\uDDE7\uD83C\uDDFF",
            unicodeVersion: 6,
          },
          {
            names: ["flag_bj"],
            surrogates: "\uD83C\uDDE7\uD83C\uDDEF",
            unicodeVersion: 6,
          },
          {
            names: ["flag_bm"],
            surrogates: "\uD83C\uDDE7\uD83C\uDDF2",
            unicodeVersion: 6,
          },
          {
            names: ["flag_bt"],
            surrogates: "\uD83C\uDDE7\uD83C\uDDF9",
            unicodeVersion: 6,
          },
          {
            names: ["flag_bo"],
            surrogates: "\uD83C\uDDE7\uD83C\uDDF4",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ba"],
            surrogates: "\uD83C\uDDE7\uD83C\uDDE6",
            unicodeVersion: 6,
          },
          {
            names: ["flag_bw"],
            surrogates: "\uD83C\uDDE7\uD83C\uDDFC",
            unicodeVersion: 6,
          },
          {
            names: ["flag_br"],
            surrogates: "\uD83C\uDDE7\uD83C\uDDF7",
            unicodeVersion: 6,
          },
          {
            names: ["flag_io"],
            surrogates: "\uD83C\uDDEE\uD83C\uDDF4",
            unicodeVersion: 6,
          },
          {
            names: ["flag_vg"],
            surrogates: "\uD83C\uDDFB\uD83C\uDDEC",
            unicodeVersion: 6,
          },
          {
            names: ["flag_bn"],
            surrogates: "\uD83C\uDDE7\uD83C\uDDF3",
            unicodeVersion: 6,
          },
          {
            names: ["flag_bg"],
            surrogates: "\uD83C\uDDE7\uD83C\uDDEC",
            unicodeVersion: 6,
          },
          {
            names: ["flag_bf"],
            surrogates: "\uD83C\uDDE7\uD83C\uDDEB",
            unicodeVersion: 6,
          },
          {
            names: ["flag_bi"],
            surrogates: "\uD83C\uDDE7\uD83C\uDDEE",
            unicodeVersion: 6,
          },
          {
            names: ["flag_kh"],
            surrogates: "\uD83C\uDDF0\uD83C\uDDED",
            unicodeVersion: 6,
          },
          {
            names: ["flag_cm"],
            surrogates: "\uD83C\uDDE8\uD83C\uDDF2",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ca"],
            surrogates: "\uD83C\uDDE8\uD83C\uDDE6",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ic"],
            surrogates: "\uD83C\uDDEE\uD83C\uDDE8",
            unicodeVersion: 6,
          },
          {
            names: ["flag_cv"],
            surrogates: "\uD83C\uDDE8\uD83C\uDDFB",
            unicodeVersion: 6,
          },
          {
            names: ["flag_bq"],
            surrogates: "\uD83C\uDDE7\uD83C\uDDF6",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ky"],
            surrogates: "\uD83C\uDDF0\uD83C\uDDFE",
            unicodeVersion: 6,
          },
          {
            names: ["flag_cf"],
            surrogates: "\uD83C\uDDE8\uD83C\uDDEB",
            unicodeVersion: 6,
          },
          {
            names: ["flag_td"],
            surrogates: "\uD83C\uDDF9\uD83C\uDDE9",
            unicodeVersion: 6,
          },
          {
            names: ["flag_cl"],
            surrogates: "\uD83C\uDDE8\uD83C\uDDF1",
            unicodeVersion: 6,
          },
          {
            names: ["flag_cn"],
            surrogates: "\uD83C\uDDE8\uD83C\uDDF3",
            unicodeVersion: 6,
          },
          {
            names: ["flag_cx"],
            surrogates: "\uD83C\uDDE8\uD83C\uDDFD",
            unicodeVersion: 6,
          },
          {
            names: ["flag_cc"],
            surrogates: "\uD83C\uDDE8\uD83C\uDDE8",
            unicodeVersion: 6,
          },
          {
            names: ["flag_co"],
            surrogates: "\uD83C\uDDE8\uD83C\uDDF4",
            unicodeVersion: 6,
          },
          {
            names: ["flag_km"],
            surrogates: "\uD83C\uDDF0\uD83C\uDDF2",
            unicodeVersion: 6,
          },
          {
            names: ["flag_cg"],
            surrogates: "\uD83C\uDDE8\uD83C\uDDEC",
            unicodeVersion: 6,
          },
          {
            names: ["flag_cd"],
            surrogates: "\uD83C\uDDE8\uD83C\uDDE9",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ck"],
            surrogates: "\uD83C\uDDE8\uD83C\uDDF0",
            unicodeVersion: 6,
          },
          {
            names: ["flag_cr"],
            surrogates: "\uD83C\uDDE8\uD83C\uDDF7",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ci"],
            surrogates: "\uD83C\uDDE8\uD83C\uDDEE",
            unicodeVersion: 6,
          },
          {
            names: ["flag_hr"],
            surrogates: "\uD83C\uDDED\uD83C\uDDF7",
            unicodeVersion: 6,
          },
          {
            names: ["flag_cu"],
            surrogates: "\uD83C\uDDE8\uD83C\uDDFA",
            unicodeVersion: 6,
          },
          {
            names: ["flag_cw"],
            surrogates: "\uD83C\uDDE8\uD83C\uDDFC",
            unicodeVersion: 6,
          },
          {
            names: ["flag_cy"],
            surrogates: "\uD83C\uDDE8\uD83C\uDDFE",
            unicodeVersion: 6,
          },
          {
            names: ["flag_cz"],
            surrogates: "\uD83C\uDDE8\uD83C\uDDFF",
            unicodeVersion: 6,
          },
          {
            names: ["flag_dk"],
            surrogates: "\uD83C\uDDE9\uD83C\uDDF0",
            unicodeVersion: 6,
          },
          {
            names: ["flag_dj"],
            surrogates: "\uD83C\uDDE9\uD83C\uDDEF",
            unicodeVersion: 6,
          },
          {
            names: ["flag_dm"],
            surrogates: "\uD83C\uDDE9\uD83C\uDDF2",
            unicodeVersion: 6,
          },
          {
            names: ["flag_do"],
            surrogates: "\uD83C\uDDE9\uD83C\uDDF4",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ec"],
            surrogates: "\uD83C\uDDEA\uD83C\uDDE8",
            unicodeVersion: 6,
          },
          {
            names: ["flag_eg"],
            surrogates: "\uD83C\uDDEA\uD83C\uDDEC",
            unicodeVersion: 6,
          },
          {
            names: ["flag_sv"],
            surrogates: "\uD83C\uDDF8\uD83C\uDDFB",
            unicodeVersion: 6,
          },
          {
            names: ["flag_gq"],
            surrogates: "\uD83C\uDDEC\uD83C\uDDF6",
            unicodeVersion: 6,
          },
          {
            names: ["flag_er"],
            surrogates: "\uD83C\uDDEA\uD83C\uDDF7",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ee"],
            surrogates: "\uD83C\uDDEA\uD83C\uDDEA",
            unicodeVersion: 6,
          },
          {
            names: ["flag_et"],
            surrogates: "\uD83C\uDDEA\uD83C\uDDF9",
            unicodeVersion: 6,
          },
          {
            names: ["flag_eu"],
            surrogates: "\uD83C\uDDEA\uD83C\uDDFA",
            unicodeVersion: 6,
          },
          {
            names: ["flag_fk"],
            surrogates: "\uD83C\uDDEB\uD83C\uDDF0",
            unicodeVersion: 6,
          },
          {
            names: ["flag_fo"],
            surrogates: "\uD83C\uDDEB\uD83C\uDDF4",
            unicodeVersion: 6,
          },
          {
            names: ["flag_fj"],
            surrogates: "\uD83C\uDDEB\uD83C\uDDEF",
            unicodeVersion: 6,
          },
          {
            names: ["flag_fi"],
            surrogates: "\uD83C\uDDEB\uD83C\uDDEE",
            unicodeVersion: 6,
          },
          {
            names: ["flag_fr"],
            surrogates: "\uD83C\uDDEB\uD83C\uDDF7",
            unicodeVersion: 6,
          },
          {
            names: ["flag_gf"],
            surrogates: "\uD83C\uDDEC\uD83C\uDDEB",
            unicodeVersion: 6,
          },
          {
            names: ["flag_pf"],
            surrogates: "\uD83C\uDDF5\uD83C\uDDEB",
            unicodeVersion: 6,
          },
          {
            names: ["flag_tf"],
            surrogates: "\uD83C\uDDF9\uD83C\uDDEB",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ga"],
            surrogates: "\uD83C\uDDEC\uD83C\uDDE6",
            unicodeVersion: 6,
          },
          {
            names: ["flag_gm"],
            surrogates: "\uD83C\uDDEC\uD83C\uDDF2",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ge"],
            surrogates: "\uD83C\uDDEC\uD83C\uDDEA",
            unicodeVersion: 6,
          },
          {
            names: ["flag_de"],
            surrogates: "\uD83C\uDDE9\uD83C\uDDEA",
            unicodeVersion: 6,
          },
          {
            names: ["flag_gh"],
            surrogates: "\uD83C\uDDEC\uD83C\uDDED",
            unicodeVersion: 6,
          },
          {
            names: ["flag_gi"],
            surrogates: "\uD83C\uDDEC\uD83C\uDDEE",
            unicodeVersion: 6,
          },
          {
            names: ["flag_gr"],
            surrogates: "\uD83C\uDDEC\uD83C\uDDF7",
            unicodeVersion: 6,
          },
          {
            names: ["flag_gl"],
            surrogates: "\uD83C\uDDEC\uD83C\uDDF1",
            unicodeVersion: 6,
          },
          {
            names: ["flag_gd"],
            surrogates: "\uD83C\uDDEC\uD83C\uDDE9",
            unicodeVersion: 6,
          },
          {
            names: ["flag_gp"],
            surrogates: "\uD83C\uDDEC\uD83C\uDDF5",
            unicodeVersion: 6,
          },
          {
            names: ["flag_gu"],
            surrogates: "\uD83C\uDDEC\uD83C\uDDFA",
            unicodeVersion: 6,
          },
          {
            names: ["flag_gt"],
            surrogates: "\uD83C\uDDEC\uD83C\uDDF9",
            unicodeVersion: 6,
          },
          {
            names: ["flag_gg"],
            surrogates: "\uD83C\uDDEC\uD83C\uDDEC",
            unicodeVersion: 6,
          },
          {
            names: ["flag_gn"],
            surrogates: "\uD83C\uDDEC\uD83C\uDDF3",
            unicodeVersion: 6,
          },
          {
            names: ["flag_gw"],
            surrogates: "\uD83C\uDDEC\uD83C\uDDFC",
            unicodeVersion: 6,
          },
          {
            names: ["flag_gy"],
            surrogates: "\uD83C\uDDEC\uD83C\uDDFE",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ht"],
            surrogates: "\uD83C\uDDED\uD83C\uDDF9",
            unicodeVersion: 6,
          },
          {
            names: ["flag_hn"],
            surrogates: "\uD83C\uDDED\uD83C\uDDF3",
            unicodeVersion: 6,
          },
          {
            names: ["flag_hk"],
            surrogates: "\uD83C\uDDED\uD83C\uDDF0",
            unicodeVersion: 6,
          },
          {
            names: ["flag_hu"],
            surrogates: "\uD83C\uDDED\uD83C\uDDFA",
            unicodeVersion: 6,
          },
          {
            names: ["flag_is"],
            surrogates: "\uD83C\uDDEE\uD83C\uDDF8",
            unicodeVersion: 6,
          },
          {
            names: ["flag_in"],
            surrogates: "\uD83C\uDDEE\uD83C\uDDF3",
            unicodeVersion: 6,
          },
          {
            names: ["flag_id"],
            surrogates: "\uD83C\uDDEE\uD83C\uDDE9",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ir"],
            surrogates: "\uD83C\uDDEE\uD83C\uDDF7",
            unicodeVersion: 6,
          },
          {
            names: ["flag_iq"],
            surrogates: "\uD83C\uDDEE\uD83C\uDDF6",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ie"],
            surrogates: "\uD83C\uDDEE\uD83C\uDDEA",
            unicodeVersion: 6,
          },
          {
            names: ["flag_im"],
            surrogates: "\uD83C\uDDEE\uD83C\uDDF2",
            unicodeVersion: 6,
          },
          {
            names: ["flag_il"],
            surrogates: "\uD83C\uDDEE\uD83C\uDDF1",
            unicodeVersion: 6,
          },
          {
            names: ["flag_it"],
            surrogates: "\uD83C\uDDEE\uD83C\uDDF9",
            unicodeVersion: 6,
          },
          {
            names: ["flag_jm"],
            surrogates: "\uD83C\uDDEF\uD83C\uDDF2",
            unicodeVersion: 6,
          },
          {
            names: ["flag_jp"],
            surrogates: "\uD83C\uDDEF\uD83C\uDDF5",
            unicodeVersion: 6,
          },
          {
            names: ["crossed_flags"],
            surrogates: "\uD83C\uDF8C",
            unicodeVersion: 6,
          },
          {
            names: ["flag_je"],
            surrogates: "\uD83C\uDDEF\uD83C\uDDEA",
            unicodeVersion: 6,
          },
          {
            names: ["flag_jo"],
            surrogates: "\uD83C\uDDEF\uD83C\uDDF4",
            unicodeVersion: 6,
          },
          {
            names: ["flag_kz"],
            surrogates: "\uD83C\uDDF0\uD83C\uDDFF",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ke"],
            surrogates: "\uD83C\uDDF0\uD83C\uDDEA",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ki"],
            surrogates: "\uD83C\uDDF0\uD83C\uDDEE",
            unicodeVersion: 6,
          },
          {
            names: ["flag_xk"],
            surrogates: "\uD83C\uDDFD\uD83C\uDDF0",
            unicodeVersion: 6,
          },
          {
            names: ["flag_kw"],
            surrogates: "\uD83C\uDDF0\uD83C\uDDFC",
            unicodeVersion: 6,
          },
          {
            names: ["flag_kg"],
            surrogates: "\uD83C\uDDF0\uD83C\uDDEC",
            unicodeVersion: 6,
          },
          {
            names: ["flag_la"],
            surrogates: "\uD83C\uDDF1\uD83C\uDDE6",
            unicodeVersion: 6,
          },
          {
            names: ["flag_lv"],
            surrogates: "\uD83C\uDDF1\uD83C\uDDFB",
            unicodeVersion: 6,
          },
          {
            names: ["flag_lb"],
            surrogates: "\uD83C\uDDF1\uD83C\uDDE7",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ls"],
            surrogates: "\uD83C\uDDF1\uD83C\uDDF8",
            unicodeVersion: 6,
          },
          {
            names: ["flag_lr"],
            surrogates: "\uD83C\uDDF1\uD83C\uDDF7",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ly"],
            surrogates: "\uD83C\uDDF1\uD83C\uDDFE",
            unicodeVersion: 6,
          },
          {
            names: ["flag_li"],
            surrogates: "\uD83C\uDDF1\uD83C\uDDEE",
            unicodeVersion: 6,
          },
          {
            names: ["flag_lt"],
            surrogates: "\uD83C\uDDF1\uD83C\uDDF9",
            unicodeVersion: 6,
          },
          {
            names: ["flag_lu"],
            surrogates: "\uD83C\uDDF1\uD83C\uDDFA",
            unicodeVersion: 6,
          },
          {
            names: ["flag_mo"],
            surrogates: "\uD83C\uDDF2\uD83C\uDDF4",
            unicodeVersion: 6,
          },
          {
            names: ["flag_mk"],
            surrogates: "\uD83C\uDDF2\uD83C\uDDF0",
            unicodeVersion: 6,
          },
          {
            names: ["flag_mg"],
            surrogates: "\uD83C\uDDF2\uD83C\uDDEC",
            unicodeVersion: 6,
          },
          {
            names: ["flag_mw"],
            surrogates: "\uD83C\uDDF2\uD83C\uDDFC",
            unicodeVersion: 6,
          },
          {
            names: ["flag_my"],
            surrogates: "\uD83C\uDDF2\uD83C\uDDFE",
            unicodeVersion: 6,
          },
          {
            names: ["flag_mv"],
            surrogates: "\uD83C\uDDF2\uD83C\uDDFB",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ml"],
            surrogates: "\uD83C\uDDF2\uD83C\uDDF1",
            unicodeVersion: 6,
          },
          {
            names: ["flag_mt"],
            surrogates: "\uD83C\uDDF2\uD83C\uDDF9",
            unicodeVersion: 6,
          },
          {
            names: ["flag_mh"],
            surrogates: "\uD83C\uDDF2\uD83C\uDDED",
            unicodeVersion: 6,
          },
          {
            names: ["flag_mq"],
            surrogates: "\uD83C\uDDF2\uD83C\uDDF6",
            unicodeVersion: 6,
          },
          {
            names: ["flag_mr"],
            surrogates: "\uD83C\uDDF2\uD83C\uDDF7",
            unicodeVersion: 6,
          },
          {
            names: ["flag_mu"],
            surrogates: "\uD83C\uDDF2\uD83C\uDDFA",
            unicodeVersion: 6,
          },
          {
            names: ["flag_yt"],
            surrogates: "\uD83C\uDDFE\uD83C\uDDF9",
            unicodeVersion: 6,
          },
          {
            names: ["flag_mx"],
            surrogates: "\uD83C\uDDF2\uD83C\uDDFD",
            unicodeVersion: 6,
          },
          {
            names: ["flag_fm"],
            surrogates: "\uD83C\uDDEB\uD83C\uDDF2",
            unicodeVersion: 6,
          },
          {
            names: ["flag_md"],
            surrogates: "\uD83C\uDDF2\uD83C\uDDE9",
            unicodeVersion: 6,
          },
          {
            names: ["flag_mc"],
            surrogates: "\uD83C\uDDF2\uD83C\uDDE8",
            unicodeVersion: 6,
          },
          {
            names: ["flag_mn"],
            surrogates: "\uD83C\uDDF2\uD83C\uDDF3",
            unicodeVersion: 6,
          },
          {
            names: ["flag_me"],
            surrogates: "\uD83C\uDDF2\uD83C\uDDEA",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ms"],
            surrogates: "\uD83C\uDDF2\uD83C\uDDF8",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ma"],
            surrogates: "\uD83C\uDDF2\uD83C\uDDE6",
            unicodeVersion: 6,
          },
          {
            names: ["flag_mz"],
            surrogates: "\uD83C\uDDF2\uD83C\uDDFF",
            unicodeVersion: 6,
          },
          {
            names: ["flag_mm"],
            surrogates: "\uD83C\uDDF2\uD83C\uDDF2",
            unicodeVersion: 6,
          },
          {
            names: ["flag_na"],
            surrogates: "\uD83C\uDDF3\uD83C\uDDE6",
            unicodeVersion: 6,
          },
          {
            names: ["flag_nr"],
            surrogates: "\uD83C\uDDF3\uD83C\uDDF7",
            unicodeVersion: 6,
          },
          {
            names: ["flag_np"],
            surrogates: "\uD83C\uDDF3\uD83C\uDDF5",
            unicodeVersion: 6,
          },
          {
            names: ["flag_nl"],
            surrogates: "\uD83C\uDDF3\uD83C\uDDF1",
            unicodeVersion: 6,
          },
          {
            names: ["flag_nc"],
            surrogates: "\uD83C\uDDF3\uD83C\uDDE8",
            unicodeVersion: 6,
          },
          {
            names: ["flag_nz"],
            surrogates: "\uD83C\uDDF3\uD83C\uDDFF",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ni"],
            surrogates: "\uD83C\uDDF3\uD83C\uDDEE",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ne"],
            surrogates: "\uD83C\uDDF3\uD83C\uDDEA",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ng"],
            surrogates: "\uD83C\uDDF3\uD83C\uDDEC",
            unicodeVersion: 6,
          },
          {
            names: ["flag_nu"],
            surrogates: "\uD83C\uDDF3\uD83C\uDDFA",
            unicodeVersion: 6,
          },
          {
            names: ["flag_nf"],
            surrogates: "\uD83C\uDDF3\uD83C\uDDEB",
            unicodeVersion: 6,
          },
          {
            names: ["flag_kp"],
            surrogates: "\uD83C\uDDF0\uD83C\uDDF5",
            unicodeVersion: 6,
          },
          {
            names: ["flag_mp"],
            surrogates: "\uD83C\uDDF2\uD83C\uDDF5",
            unicodeVersion: 6,
          },
          {
            names: ["flag_no"],
            surrogates: "\uD83C\uDDF3\uD83C\uDDF4",
            unicodeVersion: 6,
          },
          {
            names: ["flag_om"],
            surrogates: "\uD83C\uDDF4\uD83C\uDDF2",
            unicodeVersion: 6,
          },
          {
            names: ["flag_pk"],
            surrogates: "\uD83C\uDDF5\uD83C\uDDF0",
            unicodeVersion: 6,
          },
          {
            names: ["flag_pw"],
            surrogates: "\uD83C\uDDF5\uD83C\uDDFC",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ps"],
            surrogates: "\uD83C\uDDF5\uD83C\uDDF8",
            unicodeVersion: 6,
          },
          {
            names: ["flag_pa"],
            surrogates: "\uD83C\uDDF5\uD83C\uDDE6",
            unicodeVersion: 6,
          },
          {
            names: ["flag_pg"],
            surrogates: "\uD83C\uDDF5\uD83C\uDDEC",
            unicodeVersion: 6,
          },
          {
            names: ["flag_py"],
            surrogates: "\uD83C\uDDF5\uD83C\uDDFE",
            unicodeVersion: 6,
          },
          {
            names: ["flag_pe"],
            surrogates: "\uD83C\uDDF5\uD83C\uDDEA",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ph"],
            surrogates: "\uD83C\uDDF5\uD83C\uDDED",
            unicodeVersion: 6,
          },
          {
            names: ["flag_pn"],
            surrogates: "\uD83C\uDDF5\uD83C\uDDF3",
            unicodeVersion: 6,
          },
          {
            names: ["flag_pl"],
            surrogates: "\uD83C\uDDF5\uD83C\uDDF1",
            unicodeVersion: 6,
          },
          {
            names: ["flag_pt"],
            surrogates: "\uD83C\uDDF5\uD83C\uDDF9",
            unicodeVersion: 6,
          },
          {
            names: ["flag_pr"],
            surrogates: "\uD83C\uDDF5\uD83C\uDDF7",
            unicodeVersion: 6,
          },
          {
            names: ["flag_qa"],
            surrogates: "\uD83C\uDDF6\uD83C\uDDE6",
            unicodeVersion: 6,
          },
          {
            names: ["flag_re"],
            surrogates: "\uD83C\uDDF7\uD83C\uDDEA",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ro"],
            surrogates: "\uD83C\uDDF7\uD83C\uDDF4",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ru"],
            surrogates: "\uD83C\uDDF7\uD83C\uDDFA",
            unicodeVersion: 6,
          },
          {
            names: ["flag_rw"],
            surrogates: "\uD83C\uDDF7\uD83C\uDDFC",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ws"],
            surrogates: "\uD83C\uDDFC\uD83C\uDDF8",
            unicodeVersion: 6,
          },
          {
            names: ["flag_sm"],
            surrogates: "\uD83C\uDDF8\uD83C\uDDF2",
            unicodeVersion: 6,
          },
          {
            names: ["flag_st"],
            surrogates: "\uD83C\uDDF8\uD83C\uDDF9",
            unicodeVersion: 6,
          },
          {
            names: ["flag_sa"],
            surrogates: "\uD83C\uDDF8\uD83C\uDDE6",
            unicodeVersion: 6,
          },
          {
            names: ["flag_sn"],
            surrogates: "\uD83C\uDDF8\uD83C\uDDF3",
            unicodeVersion: 6,
          },
          {
            names: ["flag_rs"],
            surrogates: "\uD83C\uDDF7\uD83C\uDDF8",
            unicodeVersion: 6,
          },
          {
            names: ["flag_sc"],
            surrogates: "\uD83C\uDDF8\uD83C\uDDE8",
            unicodeVersion: 6,
          },
          {
            names: ["flag_sl"],
            surrogates: "\uD83C\uDDF8\uD83C\uDDF1",
            unicodeVersion: 6,
          },
          {
            names: ["flag_sg"],
            surrogates: "\uD83C\uDDF8\uD83C\uDDEC",
            unicodeVersion: 6,
          },
          {
            names: ["flag_sx"],
            surrogates: "\uD83C\uDDF8\uD83C\uDDFD",
            unicodeVersion: 6,
          },
          {
            names: ["flag_sk"],
            surrogates: "\uD83C\uDDF8\uD83C\uDDF0",
            unicodeVersion: 6,
          },
          {
            names: ["flag_si"],
            surrogates: "\uD83C\uDDF8\uD83C\uDDEE",
            unicodeVersion: 6,
          },
          {
            names: ["flag_gs"],
            surrogates: "\uD83C\uDDEC\uD83C\uDDF8",
            unicodeVersion: 6,
          },
          {
            names: ["flag_sb"],
            surrogates: "\uD83C\uDDF8\uD83C\uDDE7",
            unicodeVersion: 6,
          },
          {
            names: ["flag_so"],
            surrogates: "\uD83C\uDDF8\uD83C\uDDF4",
            unicodeVersion: 6,
          },
          {
            names: ["flag_za"],
            surrogates: "\uD83C\uDDFF\uD83C\uDDE6",
            unicodeVersion: 6,
          },
          {
            names: ["flag_kr"],
            surrogates: "\uD83C\uDDF0\uD83C\uDDF7",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ss"],
            surrogates: "\uD83C\uDDF8\uD83C\uDDF8",
            unicodeVersion: 6,
          },
          {
            names: ["flag_es"],
            surrogates: "\uD83C\uDDEA\uD83C\uDDF8",
            unicodeVersion: 6,
          },
          {
            names: ["flag_lk"],
            surrogates: "\uD83C\uDDF1\uD83C\uDDF0",
            unicodeVersion: 6,
          },
          {
            names: ["flag_bl"],
            surrogates: "\uD83C\uDDE7\uD83C\uDDF1",
            unicodeVersion: 6,
          },
          {
            names: ["flag_sh"],
            surrogates: "\uD83C\uDDF8\uD83C\uDDED",
            unicodeVersion: 6,
          },
          {
            names: ["flag_kn"],
            surrogates: "\uD83C\uDDF0\uD83C\uDDF3",
            unicodeVersion: 6,
          },
          {
            names: ["flag_lc"],
            surrogates: "\uD83C\uDDF1\uD83C\uDDE8",
            unicodeVersion: 6,
          },
          {
            names: ["flag_pm"],
            surrogates: "\uD83C\uDDF5\uD83C\uDDF2",
            unicodeVersion: 6,
          },
          {
            names: ["flag_vc"],
            surrogates: "\uD83C\uDDFB\uD83C\uDDE8",
            unicodeVersion: 6,
          },
          {
            names: ["flag_sd"],
            surrogates: "\uD83C\uDDF8\uD83C\uDDE9",
            unicodeVersion: 6,
          },
          {
            names: ["flag_sr"],
            surrogates: "\uD83C\uDDF8\uD83C\uDDF7",
            unicodeVersion: 6,
          },
          {
            names: ["flag_sz"],
            surrogates: "\uD83C\uDDF8\uD83C\uDDFF",
            unicodeVersion: 6,
          },
          {
            names: ["flag_se"],
            surrogates: "\uD83C\uDDF8\uD83C\uDDEA",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ch"],
            surrogates: "\uD83C\uDDE8\uD83C\uDDED",
            unicodeVersion: 6,
          },
          {
            names: ["flag_sy"],
            surrogates: "\uD83C\uDDF8\uD83C\uDDFE",
            unicodeVersion: 6,
          },
          {
            names: ["flag_tw"],
            surrogates: "\uD83C\uDDF9\uD83C\uDDFC",
            unicodeVersion: 6,
          },
          {
            names: ["flag_tj"],
            surrogates: "\uD83C\uDDF9\uD83C\uDDEF",
            unicodeVersion: 6,
          },
          {
            names: ["flag_tz"],
            surrogates: "\uD83C\uDDF9\uD83C\uDDFF",
            unicodeVersion: 6,
          },
          {
            names: ["flag_th"],
            surrogates: "\uD83C\uDDF9\uD83C\uDDED",
            unicodeVersion: 6,
          },
          {
            names: ["flag_tl"],
            surrogates: "\uD83C\uDDF9\uD83C\uDDF1",
            unicodeVersion: 6,
          },
          {
            names: ["flag_tg"],
            surrogates: "\uD83C\uDDF9\uD83C\uDDEC",
            unicodeVersion: 6,
          },
          {
            names: ["flag_tk"],
            surrogates: "\uD83C\uDDF9\uD83C\uDDF0",
            unicodeVersion: 6,
          },
          {
            names: ["flag_to"],
            surrogates: "\uD83C\uDDF9\uD83C\uDDF4",
            unicodeVersion: 6,
          },
          {
            names: ["flag_tt"],
            surrogates: "\uD83C\uDDF9\uD83C\uDDF9",
            unicodeVersion: 6,
          },
          {
            names: ["flag_tn"],
            surrogates: "\uD83C\uDDF9\uD83C\uDDF3",
            unicodeVersion: 6,
          },
          {
            names: ["flag_tr"],
            surrogates: "\uD83C\uDDF9\uD83C\uDDF7",
            unicodeVersion: 6,
          },
          {
            names: ["flag_tm"],
            surrogates: "\uD83C\uDDF9\uD83C\uDDF2",
            unicodeVersion: 6,
          },
          {
            names: ["flag_tc"],
            surrogates: "\uD83C\uDDF9\uD83C\uDDE8",
            unicodeVersion: 6,
          },
          {
            names: ["flag_vi"],
            surrogates: "\uD83C\uDDFB\uD83C\uDDEE",
            unicodeVersion: 6,
          },
          {
            names: ["flag_tv"],
            surrogates: "\uD83C\uDDF9\uD83C\uDDFB",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ug"],
            surrogates: "\uD83C\uDDFA\uD83C\uDDEC",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ua"],
            surrogates: "\uD83C\uDDFA\uD83C\uDDE6",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ae"],
            surrogates: "\uD83C\uDDE6\uD83C\uDDEA",
            unicodeVersion: 6,
          },
          {
            names: ["flag_gb"],
            surrogates: "\uD83C\uDDEC\uD83C\uDDE7",
            unicodeVersion: 6,
          },
          {
            names: ["england"],
            surrogates:
              "\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67\uDB40\uDC7F",
            unicodeVersion: 7,
          },
          {
            names: ["scotland"],
            surrogates:
              "\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74\uDB40\uDC7F",
            unicodeVersion: 7,
          },
          {
            names: ["wales"],
            surrogates:
              "\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73\uDB40\uDC7F",
            unicodeVersion: 7,
          },
          {
            names: ["flag_us"],
            surrogates: "\uD83C\uDDFA\uD83C\uDDF8",
            unicodeVersion: 6,
          },
          {
            names: ["flag_uy"],
            surrogates: "\uD83C\uDDFA\uD83C\uDDFE",
            unicodeVersion: 6,
          },
          {
            names: ["flag_uz"],
            surrogates: "\uD83C\uDDFA\uD83C\uDDFF",
            unicodeVersion: 6,
          },
          {
            names: ["flag_vu"],
            surrogates: "\uD83C\uDDFB\uD83C\uDDFA",
            unicodeVersion: 6,
          },
          {
            names: ["flag_va"],
            surrogates: "\uD83C\uDDFB\uD83C\uDDE6",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ve"],
            surrogates: "\uD83C\uDDFB\uD83C\uDDEA",
            unicodeVersion: 6,
          },
          {
            names: ["flag_vn"],
            surrogates: "\uD83C\uDDFB\uD83C\uDDF3",
            unicodeVersion: 6,
          },
          {
            names: ["flag_wf"],
            surrogates: "\uD83C\uDDFC\uD83C\uDDEB",
            unicodeVersion: 6,
          },
          {
            names: ["flag_eh"],
            surrogates: "\uD83C\uDDEA\uD83C\uDDED",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ye"],
            surrogates: "\uD83C\uDDFE\uD83C\uDDEA",
            unicodeVersion: 6,
          },
          {
            names: ["flag_zm"],
            surrogates: "\uD83C\uDDFF\uD83C\uDDF2",
            unicodeVersion: 6,
          },
          {
            names: ["flag_zw"],
            surrogates: "\uD83C\uDDFF\uD83C\uDDFC",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ac"],
            surrogates: "\uD83C\uDDE6\uD83C\uDDE8",
            unicodeVersion: 6,
          },
          {
            names: ["flag_bv"],
            surrogates: "\uD83C\uDDE7\uD83C\uDDFB",
            unicodeVersion: 6,
          },
          {
            names: ["flag_cp"],
            surrogates: "\uD83C\uDDE8\uD83C\uDDF5",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ea"],
            surrogates: "\uD83C\uDDEA\uD83C\uDDE6",
            unicodeVersion: 6,
          },
          {
            names: ["flag_dg"],
            surrogates: "\uD83C\uDDE9\uD83C\uDDEC",
            unicodeVersion: 6,
          },
          {
            names: ["flag_hm"],
            surrogates: "\uD83C\uDDED\uD83C\uDDF2",
            unicodeVersion: 6,
          },
          {
            names: ["flag_mf"],
            surrogates: "\uD83C\uDDF2\uD83C\uDDEB",
            unicodeVersion: 6,
          },
          {
            names: ["flag_sj"],
            surrogates: "\uD83C\uDDF8\uD83C\uDDEF",
            unicodeVersion: 6,
          },
          {
            names: ["flag_ta"],
            surrogates: "\uD83C\uDDF9\uD83C\uDDE6",
            unicodeVersion: 6,
          },
          {
            names: ["flag_um"],
            surrogates: "\uD83C\uDDFA\uD83C\uDDF2",
            unicodeVersion: 6,
          },
        ],
      };
    },
    555919: function (e, t, n) {
      "use strict";
      e.exports = [
        "7z",
        "ade",
        "adp",
        "arj",
        "apk",
        "application",
        "appx",
        "appxbundle",
        "asx",
        "bas",
        "bat",
        "cab",
        "cer",
        "chm",
        "cmd",
        "cnt",
        "cpl",
        "crt",
        "csh",
        "deb",
        "der",
        "diagcab",
        "dll",
        "dmg",
        "docm",
        "dotm",
        "ex",
        "ex_",
        "exe",
        "fxp",
        "gadget",
        "grp",
        "gz",
        "hlp",
        "hpj",
        "hta",
        "htc",
        "inf",
        "ins",
        "ipa",
        "iso",
        "isp",
        "its",
        "jar",
        "jnlp",
        "jse",
        "ksh",
        "lib",
        "lnk",
        "mad",
        "maf",
        "mag",
        "mam",
        "maq",
        "mar",
        "mas",
        "mat",
        "mau",
        "mav",
        "maw",
        "mcf",
        "mda",
        "mdb",
        "mde",
        "mdt",
        "mdw",
        "mdz",
        "msc",
        "msh",
        "msh1",
        "msh1xml",
        "msh2",
        "msh2xml",
        "mshxml",
        "msi",
        "msix",
        "msixbundle",
        "msp",
        "mst",
        "msu",
        "nsh",
        "ops",
        "osd",
        "pcd",
        "pif",
        "pkg",
        "pl",
        "plg",
        "potm",
        "ppam",
        "ppsm",
        "pptm",
        "prf",
        "prg",
        "printerexport",
        "ps1",
        "ps1xml",
        "ps2",
        "ps2xml",
        "psc1",
        "psc2",
        "psd1",
        "psdm1",
        "pst",
        "py",
        "pyc",
        "pyo",
        "pyw",
        "pyz",
        "pyzw",
        "rar",
        "reg",
        "rpm",
        "scf",
        "scr",
        "sct",
        "shb",
        "shs",
        "sldm",
        "sys",
        "theme",
        "tmp",
        "url",
        "vb",
        "vbe",
        "vbp",
        "vbs",
        "vhd",
        "vhdx",
        "vsmacros",
        "vsw",
        "vxd",
        "webpnp",
        "ws",
        "wsc",
        "wsf",
        "wsh",
        "xbap",
        "xlam",
        "xll",
        "xlsm",
        "xltm",
        "xnk",
        "z",
        "zip",
      ];
    },
    561288: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return g;
          },
        });
      var s = n("872717"),
        i = n("913144"),
        r = n("950104"),
        a = n("27618"),
        o = n("697218"),
        d = n("599110"),
        u = n("404118"),
        l = n("736964"),
        f = n("987317"),
        _ = n("49111"),
        c = n("782340"),
        g = {
          call(e, t, n, i, r) {
            let g = n => {
              f.default.selectVoiceChannel(e, t),
                n && this.ring(e),
                null == r || r(e);
            };
            if (null != i) {
              let t = a.default.isBlocked(i);
              if (t) return;
              let r = o.default.getUser(i);
              s.default
                .get({ url: _.Endpoints.CALL(e), oldFormErrors: !0 })
                .then(
                  e => {
                    g(n && e.body.ringable);
                  },
                  () => {
                    d.default.track(_.AnalyticEvents.OPEN_POPOUT, {
                      type: "Not Friend",
                      source: "Call",
                    }),
                      u.default.show({
                        title: c.default.Messages.START_CALL,
                        body: c.default.Messages.CALL_INVITE_NOT_FRIENDS.format(
                          { username: null != r ? r.username : "" }
                        ),
                        confirmText: c.default.Messages.ADD_FRIEND_BUTTON,
                        cancelText: c.default.Messages.OKAY,
                        onConfirm() {
                          l.default.addRelationship({
                            userId: i,
                            context: { location: "Call" },
                          });
                        },
                      });
                  }
                );
            } else g(n);
          },
          ring(e, t) {
            let n = r.default.getCall(e);
            if (
              null != n &&
              null != n.messageId &&
              !r.default.isCallUnavailable(e)
            ) {
              s.default.post({
                url: _.Endpoints.CALL_RING(e),
                body: { recipients: t },
                oldFormErrors: !0,
              });
              return;
            }
            i.default.dispatch({
              type: "CALL_ENQUEUE_RING",
              channelId: e,
              recipients: t,
            });
          },
          stopRinging: (e, t) =>
            s.default.post({
              url: _.Endpoints.CALL_STOP_RINGING(e),
              body: { recipients: t },
              oldFormErrors: !0,
            }),
        };
    },
    450911: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
        }),
        n("222007");
      var s = n("872717"),
        i = n("819855"),
        r = n("913144"),
        a = n("81732"),
        o = n("21121"),
        d = n("258158"),
        u = n("393414"),
        l = n("233069"),
        f = n("42203"),
        _ = n("271560"),
        c = n("561288"),
        g = n("987317"),
        m = n("49111"),
        h = n("333188"),
        v = n("782340"),
        E = {
          async openPrivateChannel(e) {
            let t =
                arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
              n =
                arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
              i = arguments.length > 3 ? arguments[3] : void 0,
              r = arguments.length > 4 ? arguments[4] : void 0,
              a = this._getRecipients(e),
              o = e => {
                t &&
                  c.default.call(
                    e.id,
                    n,
                    !0,
                    e.isDM() ? e.getRecipientId() : null
                  );
              };
            if (1 === a.length) {
              let [e] = a,
                t = this._openCachedDMChannel(e, r);
              if (null != t) return o(t), Promise.resolve(t.id);
            }
            try {
              let e = await s.default.post({
                url: m.Endpoints.USER_CHANNELS,
                body: { recipients: a },
                context: { location: i },
                oldFormErrors: !0,
              });
              null == r || r();
              let t = this._openPrivateChannel(e.body);
              return o(t), e.body.id;
            } catch (e) {
              var u;
              throw (
                ((null == e
                  ? void 0
                  : null === (u = e.body) || void 0 === u
                    ? void 0
                    : u.code) === m.AbortCodes.QUARANTINED && (0, d.default)(),
                e)
              );
            }
          },
          async createBroadcastPrivateChannel() {
            try {
              let e = await s.default.post({
                  url: m.Endpoints.BROADCAST_PRIVATE_CHANNEL,
                }),
                t = (0, l.createChannelRecordFromServer)(e.body);
              return c.default.call(t.id, !1, !1, null), e.body.id;
            } catch (t) {
              var e;
              throw (
                ((null == t
                  ? void 0
                  : null === (e = t.body) || void 0 === e
                    ? void 0
                    : e.code) === m.AbortCodes.QUARANTINED && (0, d.default)(),
                t)
              );
            }
          },
          _openCachedDMChannel(e, t) {
            let n = f.default.getDMFromUserId(e),
              s = null != n ? f.default.getChannel(n) : null;
            return null != s
              ? (null == t || t(),
                null != (0, o.getRootNavigationRefIfInExperiment)()
                  ? (0, u.transitionTo)(m.Routes.CHANNEL(m.ME, s.id), {
                      navigationReplace: !0,
                    })
                  : g.default.selectPrivateChannel(s.id),
                s)
              : null;
          },
          async ensurePrivateChannel(e) {
            let t = this._getRecipients(e),
              n = await s.default.post({
                url: m.Endpoints.USER_CHANNELS,
                body: { recipients: t },
                oldFormErrors: !0,
              }),
              i = (0, l.createChannelRecordFromServer)(n.body);
            return (
              r.default.dispatch({ type: "CHANNEL_CREATE", channel: i }), i.id
            );
          },
          async getOrEnsurePrivateChannel(e) {
            let t = f.default.getDMFromUserId(e);
            return null != t ? t : await this.ensurePrivateChannel(e);
          },
          async getDMChannel(e) {
            let t = await s.default.get(m.Endpoints.DM_CHANNEL(e)),
              n = (0, l.createChannelRecordFromServer)(t.body);
            return (
              r.default.dispatch({ type: "CHANNEL_CREATE", channel: n }), n.id
            );
          },
          _getRecipients: e => (null != e ? (Array.isArray(e) ? e : [e]) : []),
          _openPrivateChannel(e) {
            let t = (0, l.createChannelRecordFromServer)(e);
            return (
              r.default.dispatch({ type: "CHANNEL_CREATE", channel: t }),
              null != (0, o.getRootNavigationRefIfInExperiment)()
                ? (0, u.transitionTo)(m.Routes.CHANNEL(m.ME, t.id), {
                    navigationReplace: !0,
                  })
                : g.default.selectPrivateChannel(t.id),
              t
            );
          },
          closePrivateChannel(e) {
            let t =
                arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
              n =
                arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
            return (
              r.default.dispatch({
                type: "CHANNEL_DELETE",
                channel: { id: e, guild_id: void 0, parent_id: void 0 },
                silent: n,
              }),
              t && !__OVERLAY__ && (0, u.transitionTo)(m.Routes.FRIENDS),
              s.default
                .delete({
                  url: m.Endpoints.CHANNEL(e),
                  query: { silent: n },
                  oldFormErrors: !0,
                })
                .then(() => {
                  i.AccessibilityAnnouncer.announce(
                    v.default.Messages.A11Y_ANNOUNCEMENT_DM_CLOSED
                  );
                })
                .catch(() => {
                  i.AccessibilityAnnouncer.announce(
                    v.default.Messages.A11Y_ANNOUNCEMENT_DM_CLOSED_FAILED
                  );
                })
            );
          },
          updatePermissionOverwrite: (e, t) =>
            s.default.put({
              url: m.Endpoints.CHANNEL_PERMISSIONS_OVERWRITE(e, t.id),
              body: t,
              oldFormErrors: !0,
            }),
          clearPermissionOverwrite: (e, t) =>
            s.default.delete({
              url: m.Endpoints.CHANNEL_PERMISSIONS_OVERWRITE(e, t),
              oldFormErrors: !0,
            }),
          addRecipient(e, t, n, r) {
            return s.default
              .put({
                url: m.Endpoints.CHANNEL_RECIPIENT(e, t),
                context: { location: n },
                oldFormErrors: !0,
              })
              .then(t =>
                (i.AccessibilityAnnouncer.announce(
                  v.default.Messages.A11Y_ANNOUNCEMENT_USER_ADDED_TO_GROUP_DM
                ),
                null == r || r(),
                201 === t.status)
                  ? this._openPrivateChannel(t.body).id
                  : e
              )
              .catch(
                () => (
                  i.AccessibilityAnnouncer.announce(
                    v.default.Messages
                      .A11Y_ANNOUNCEMENT_USER_ADDED_TO_GROUP_DM_FAILED
                  ),
                  e
                )
              );
          },
          addRecipients(e, t, n, s) {
            return this.addRecipient(e, t[0], n, s).then(e =>
              Promise.all(t.slice(1).map(t => this.addRecipient(e, t, n))).then(
                () => e
              )
            );
          },
          removeRecipient: (e, t) =>
            s.default.delete({
              url: m.Endpoints.CHANNEL_RECIPIENT(e, t),
              oldFormErrors: !0,
            }),
          setDMOwner: (e, t) =>
            s.default.patch({
              url: m.Endpoints.CHANNEL(e),
              body: { owner: t },
              oldFormErrors: !0,
            }),
          async setName(e, t) {
            let n = f.default.getChannel(e),
              i = await s.default.patch({
                url: m.Endpoints.CHANNEL(e),
                body: { name: t },
                oldFormErrors: !0,
              }),
              r = null == n ? void 0 : n.getGuildId();
            return (
              null != r &&
                !(null == n ? void 0 : n.isThread()) &&
                a.default.checkGuildTemplateDirty(r),
              i
            );
          },
          setIcon(e, t) {
            let n = f.default.getChannel(e);
            s.default
              .patch({
                url: m.Endpoints.CHANNEL(e),
                body: { icon: t },
                oldFormErrors: !0,
              })
              .then(() => {
                let e = null == n ? void 0 : n.getGuildId();
                null != e &&
                  !(null == n ? void 0 : n.isThread()) &&
                  a.default.checkGuildTemplateDirty(e);
              });
          },
          setVoiceBackgroundDisplay(e, t) {
            let n;
            return (
              (n =
                t.type === h.VoiceCallBackgroundTypes.EMPTY
                  ? t
                  : { type: t.type, resource_id: t.resourceId }),
              s.default.patch({
                url: m.Endpoints.CHANNEL(e),
                body: { voice_background_display: n },
                oldFormErrors: !0,
              })
            );
          },
          convertToGuild: e =>
            s.default.post({
              url: m.Endpoints.CHANNEL_CONVERT(e),
              oldFormErrors: !0,
            }),
          preload(e, t) {
            r.default.dispatch({
              type: "CHANNEL_PRELOAD",
              guildId: e === m.ME ? null : e,
              channelId: t,
              context: m.CURRENT_APP_CONTEXT,
            });
          },
          fetchChannelStoreListing(e, t) {
            let n =
              null != t
                ? m.Endpoints.CHANNEL_STORE_LISTING_SKU(e, t)
                : m.Endpoints.CHANNEL_STORE_LISTING(e);
            return (0, _.httpGetWithCountryCodeQuery)(n).then(t => {
              r.default.dispatch({
                type: "STORE_LISTING_FETCH_SUCCESS",
                channelId: e,
                storeListing: t.body,
              });
            });
          },
          async createTextChannel(e, t, n, i) {
            let r = {
              type: m.ChannelTypes.GUILD_TEXT,
              name: t,
              permission_overwrites: [],
            };
            null != n && (r.parent_id = n), null != i && (r.topic = i);
            let o = await s.default.post({
              url: m.Endpoints.GUILD_CHANNELS(e),
              body: r,
              oldFormErrors: !0,
            });
            return a.default.checkGuildTemplateDirty(e), o;
          },
        };
    },
    255397: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var s = n("913144"),
        i = n("716241"),
        r = n("599110"),
        a = n("659500"),
        o = n("49111"),
        d = {
          rebuildRTCActiveChannels() {
            s.default.dispatch({ type: "CHANNEL_RTC_ACTIVE_CHANNELS" });
          },
          selectParticipant(e, t) {
            s.default.dispatch({
              type: "CHANNEL_RTC_SELECT_PARTICIPANT",
              channelId: e,
              id: t,
            });
          },
          updateLayout(e, t) {
            let n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : o.AppContext.APP;
            r.default.track(o.AnalyticEvents.VIDEO_LAYOUT_TOGGLED, {
              video_layout: t,
              ...(0, i.collectVoiceAnalyticsMetadata)(e),
            }),
              s.default.dispatch({
                type: "CHANNEL_RTC_UPDATE_LAYOUT",
                channelId: e,
                layout: t,
                appContext: n,
              });
          },
          toggleParticipants(e, t) {
            s.default.dispatch({
              type: "CHANNEL_RTC_UPDATE_PARTICIPANTS_OPEN",
              channelId: e,
              participantsOpen: t,
            });
          },
          toggleVoiceParticipantsHidden(e, t) {
            s.default.dispatch({
              type: "CHANNEL_RTC_UPDATE_VOICE_PARTICIPANTS_HIDDEN",
              channelId: e,
              voiceParticipantsHidden: t,
            });
          },
          updateStageStreamSize(e, t) {
            s.default.dispatch({
              type: "CHANNEL_RTC_UPDATE_STAGE_STREAM_SIZE",
              channelId: e,
              large: t,
            });
          },
          updateStageVideoLimitBoostUpsellDismissed(e, t) {
            s.default.dispatch({
              type: "CHANNEL_RTC_UPDATE_STAGE_VIDEO_LIMIT_BOOST_UPSELL_DISMISSED",
              channelId: e,
              dismissed: t,
            });
          },
          updateChatOpen(e, t) {
            s.default.dispatch({
              type: "CHANNEL_RTC_UPDATE_CHAT_OPEN",
              channelId: e,
              chatOpen: t,
            }),
              t
                ? setTimeout(() => {
                    a.ComponentDispatch.dispatch(
                      o.ComponentActions.FOCUS_CHANNEL_TEXT_AREA,
                      { channelId: e }
                    );
                  }, 0)
                : a.ComponentDispatch.dispatch(
                    o.ComponentActions.FOCUS_CHAT_BUTTON
                  );
          },
        };
    },
    619340: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return g;
          },
        });
      var s = n("759843"),
        i = n("382825"),
        r = n("872717"),
        a = n("913144"),
        o = n("535013"),
        d = n("605250"),
        u = n("599110"),
        l = n("840707"),
        f = n("49111");
      let _ = new d.default("ConnectedAccounts");
      function c(e, t) {
        let n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
        return r.default.post({
          url: f.Endpoints.CONNECTIONS_CALLBACK(e),
          body: {
            ...t,
            insecure: n,
            friend_sync: f.FRIEND_SYNC_PLATFORM_TYPES.has(e),
          },
          oldFormErrors: !0,
        });
      }
      var g = {
        fetch: () =>
          r.default
            .get({ url: f.Endpoints.CONNECTIONS, oldFormErrors: !0 })
            .then(
              e =>
                a.default.dispatch({
                  type: "USER_CONNECTIONS_UPDATE",
                  local: !0,
                  accounts: e.body,
                }),
              () =>
                a.default.dispatch({
                  type: "USER_CONNECTIONS_UPDATE",
                  local: !0,
                  accounts: [],
                })
            ),
        authorize(e) {
          let t,
            {
              location: n,
              twoWayLinkType: s,
              userCode: a,
            } = arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : {};
          return (
            u.default.track(f.AnalyticEvents.CONNECTED_ACCOUNT_INITIATED, {
              platform_type: e,
              location: n,
            }),
            (t =
              s === i.TwoWayLinkType.DEVICE_CODE && null != a
                ? f.Endpoints.CONNECTIONS_AUTHORIZE_LINK_DEVICE(e, a)
                : null != s
                  ? f.Endpoints.CONNECTIONS_AUTHORIZE_LINK(e, s)
                  : f.Endpoints.CONNECTIONS_AUTHORIZE(e)),
            r.default.get({ url: t, oldFormErrors: !0 })
          );
        },
        callback: c,
        connect(e, t, n, i, r) {
          var a;
          return l.default.put({
            url: f.Endpoints.CONNECTION(e, t),
            body: {
              name: n,
              friend_sync:
                null !== (a = null == r ? void 0 : r.friend_sync) &&
                void 0 !== a
                  ? a
                  : f.FRIEND_SYNC_PLATFORM_TYPES.has(e),
            },
            context: { location: i },
            oldFormErrors: !0,
            trackedActionData: {
              event: s.NetworkActionNames.USER_CONNECTIONS_UPDATE,
              properties: {
                name: n,
                friend_sync: f.FRIEND_SYNC_PLATFORM_TYPES.has(e),
              },
            },
          });
        },
        disconnect: (e, t) =>
          r.default.delete({
            url: f.Endpoints.CONNECTION(e, t),
            oldFormErrors: !0,
          }),
        refresh: (e, t) =>
          r.default.post({
            url: f.Endpoints.CONNECTION_REFRESH(e, t),
            oldFormErrors: !0,
          }),
        submitPinCode: (e, t) =>
          r.default
            .get({
              url: f.Endpoints.CONNECTIONS_CALLBACK_CONTINUATION(t, e),
              oldFormErrors: !0,
            })
            .then(e => {
              let { body: n } = e;
              return (
                u.default.track(f.AnalyticEvents.ACCOUNT_LINK_STEP, {
                  previous_step: "PIN code entry",
                  current_step: "PIN success",
                  session_id: n.state,
                  platform_type: t,
                }),
                c(t, { ...n, from_continuation: !0 }, !0)
              );
            }),
        setVisibility(e, t, n) {
          return this.update(e, t, { visibility: 1 === n });
        },
        setMetadataVisibility(e, t, n) {
          return this.update(e, t, { metadata_visibility: 1 === n });
        },
        setFriendSync(e, t, n) {
          return this.update(e, t, { friend_sync: n });
        },
        setShowActivity(e, t, n) {
          return this.update(e, t, { show_activity: n });
        },
        update: (e, t, n) =>
          l.default.patch({
            url: f.Endpoints.CONNECTION(e, t),
            body: n,
            oldFormErrors: !0,
            trackedActionData: {
              event: s.NetworkActionNames.USER_CONNECTIONS_UPDATE,
              properties: { ...n },
            },
          }),
        joinServer(e, t) {
          a.default.dispatch({
            type: "USER_CONNECTIONS_INTEGRATION_JOINING",
            integrationId: e,
            joining: !0,
          }),
            r.default.post(
              { url: f.Endpoints.INTEGRATION_JOIN(e), oldFormErrors: !0 },
              n => {
                a.default.dispatch({
                  type: "USER_CONNECTIONS_INTEGRATION_JOINING",
                  integrationId: e,
                  joining: !1,
                }),
                  !n.ok &&
                    (a.default.dispatch({
                      type: "USER_CONNECTIONS_INTEGRATION_JOINING_ERROR",
                      integrationId: e,
                      error: n.hasErr ? void 0 : n.body.message,
                    }),
                    null == t || t());
              }
            );
        },
        async refreshAccessToken(e, t) {
          try {
            let {
              body: { access_token: n },
            } = await r.default.get({
              url: f.Endpoints.CONNECTION_ACCESS_TOKEN(e, t),
              oldFormErrors: !0,
            });
            return (
              a.default.dispatch({
                type: "USER_CONNECTION_UPDATE",
                platformType: e,
                id: t,
                accessToken: n,
              }),
              n
            );
          } catch (n) {
            throw (
              (n.body.code === f.AbortCodes.CONNECTION_REVOKED &&
                a.default.dispatch({
                  type: "USER_CONNECTION_UPDATE",
                  platformType: e,
                  id: t,
                  revoked: !0,
                }),
              n)
            );
          }
        },
        linkDispatchAuthCallback: (e, t) =>
          r.default.post({
            url: f.Endpoints.CONNECTIONS_LINK_DISPATCH_AUTH_CALLBACK(e),
            body: { ...t },
            oldFormErrors: !0,
          }),
        async completeTwoWayLink(e, t, n, s, i) {
          if (null == t) {
            _.error("Two-way link: missing authorize location");
            return;
          }
          let {
            code: r,
            error: a,
            errorDescription: d,
          } = (0, o.getCallbackParamsFromURL)(t);
          if (null != a) {
            _.error("Two-way link: missing authorize code", {
              error: a,
              errorDescription: d,
            });
            return;
          }
          return await c(e, {
            code: n,
            state: s,
            two_way_link_code: r,
            token_redirect_uri: i,
          });
        },
      };
    },
    970728: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          transitionToGuildFromEventInvite: function () {
            return en;
          },
          default: function () {
            return es;
          },
        }),
        n("70102");
      var s = n("597755"),
        i = n.n(s),
        r = n("759843"),
        a = n("742270"),
        o = n("815157"),
        d = n("391679"),
        u = n("872717"),
        l = n("913144"),
        f = n("599417"),
        _ = n("333805"),
        c = n("427953"),
        g = n("644223"),
        m = n("523086"),
        h = n("263901"),
        v = n("677315"),
        E = n("233322"),
        p = n("157186"),
        y = n("290886"),
        T = n("374021"),
        C = n("398604"),
        S = n("704341"),
        I = n("9294"),
        A = n("487946"),
        D = n("258158"),
        N = n("877275"),
        O = n("393414"),
        P = n("716214"),
        b = n("233069"),
        V = n("271938"),
        R = n("42203"),
        k = n("923959"),
        M = n("26989"),
        w = n("305961"),
        L = n("88093"),
        U = n("330154"),
        G = n("957255"),
        F = n("697218"),
        H = n("599110"),
        B = n("718517"),
        x = n("840707"),
        Y = n("65300"),
        j = n("851387"),
        K = n("990766"),
        W = n("49111"),
        z = n("724210"),
        q = n("706530"),
        X = n("91366"),
        Q = n("837979");
      let Z = "invite",
        J = null;
      function $(e) {
        var t, n, s;
        let i = {};
        switch (e.target_type) {
          case X.InviteTargetTypes.STREAM:
            (i.targetType = e.target_type),
              (i.targetUserId =
                null === (n = e.target_user) || void 0 === n ? void 0 : n.id);
            break;
          case X.InviteTargetTypes.EMBEDDED_APPLICATION:
            (i.targetType = e.target_type),
              (i.targetApplicationId =
                null === (s = e.target_application) || void 0 === s
                  ? void 0
                  : s.id);
            break;
          case X.InviteTargetTypes.ROLE_SUBSCRIPTIONS_PURCHASE:
            i.targetType = e.target_type;
        }
        let r =
            null !=
            w.default.getGuild(
              null === (t = e.guild) || void 0 === t ? void 0 : t.id
            ),
          a = !r || e.new_member;
        return (
          a &&
            null != e.channel &&
            (0, b.isGuildTextChannelType)(e.channel.type) &&
            (i.welcomeModalChannelId = e.channel.id),
          null != e.guild_scheduled_event &&
            (i.guildScheduledEvent = e.guild_scheduled_event),
          i
        );
      }
      function ee(e) {
        let {
            guildId: t,
            channel: s,
            options: i,
            analyticsLocations: r = [],
          } = e,
          { type: a } = s,
          o = (function (e, t, n) {
            var s, i;
            if (
              (null == n ? void 0 : n.targetType) ===
              X.InviteTargetTypes.ROLE_SUBSCRIPTIONS_PURCHASE
            )
              return z.StaticChannelRoute.ROLE_SUBSCRIPTIONS;
            if (
              (null == n ? void 0 : n.targetType) == null &&
              !b.GUILD_VOCAL_CHANNEL_TYPES.has(t.type) &&
              ((0, v.canSeeGuildHome)(e) || (0, y.canSeeOnboardingHome)(e))
            )
              return z.StaticChannelRoute.GUILD_HOME;
            let r = R.default.getChannel(t.id);
            return G.default.can(W.Permissions.VIEW_CHANNEL, r)
              ? t.id
              : null !==
                    (i =
                      null ===
                        (s = k.default.getDefaultChannel(
                          e,
                          !0,
                          W.Permissions.CREATE_INSTANT_INVITE
                        )) || void 0 === s
                        ? void 0
                        : s.id) && void 0 !== i
                ? i
                : t.id;
          })(t, s, i),
          {
            targetUserId: d,
            targetType: u,
            targetApplicationId: l,
          } = null != i ? i : {},
          f = a === W.ChannelTypes.GUILD_STAGE_VOICE,
          _ = W.Routes.CHANNEL(t, o);
        b.GUILD_VOCAL_CHANNEL_TYPES.has(a)
          ? (0, h.addPostConnectionCallback)(() => {
              n.el("987317")
                .then(n.bind(n, "987317"))
                .then(e => {
                  let { default: n } = e,
                    a = () => {
                      if (f) {
                        (0, P.connectAndOpen)(
                          s instanceof b.ChannelRecordBase
                            ? s
                            : (0, b.createChannelRecord)(s)
                        ),
                          (0, O.transitionTo)(_);
                        return;
                      }
                      n.selectVoiceChannel(o),
                        u === X.InviteTargetTypes.STREAM &&
                          null != d &&
                          K.watchStreamAndTransitionToStream({
                            streamType: q.StreamTypes.GUILD,
                            ownerId: d,
                            guildId: t,
                            channelId: o,
                          }),
                        u === X.InviteTargetTypes.EMBEDDED_APPLICATION &&
                          null != l &&
                          ((0, O.transitionTo)(
                            W.Routes.CHANNEL(null != t ? t : W.ME, o)
                          ),
                          (0, g.default)(
                            o,
                            l,
                            r,
                            null == i ? void 0 : i.intent
                          ));
                    };
                  (0, p.shouldShowMembershipVerificationGate)(t, [
                    w.default,
                    L.default,
                    F.default,
                    M.default,
                  ])
                    ? (0, E.openMemberVerificationModal)(t, a)
                    : a();
                });
            })
          : (0, c.isActivityInTextSupportedForChannelType)(a) &&
            u === X.InviteTargetTypes.EMBEDDED_APPLICATION &&
            null != l &&
            ((0, O.transitionTo)(W.Routes.CHANNEL(null != t ? t : W.ME, o)),
            (0, g.default)(o, l, r, null == i ? void 0 : i.intent)),
          (function (e, t) {
            let { type: n } = e,
              {
                transitionTo: s,
                welcomeModalChannelId: i,
                guildScheduledEvent: r,
              } = null != t ? t : {},
              a = n === W.ChannelTypes.GUILD_STAGE_VOICE,
              o = { navigationReplace: !0 };
            return (
              null != i && (o.welcomeModalChannelId = i),
              a && (o.state = Q.STAGE_INVITE_STATE_KEY),
              null != r && (o.guildScheduledEventId = r.id),
              e =>
                null != s
                  ? s(e, o, N.default.INVITE_ACCEPT)
                  : (0, O.transitionTo)(e, o, N.default.INVITE_ACCEPT)
            );
          })(
            s,
            i
          )(_);
      }
      let et = function (e, t) {
          let n =
            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [];
          R.default.addConditionalChangeListener(() => {
            var s;
            let i = R.default.getChannel(e),
              r = F.default.getCurrentUser();
            return (
              null == i ||
              null == r ||
              ((!i.nsfw || !!r.nsfwAllowed) &&
                ((null == t ? void 0 : t.guildScheduledEvent) != null
                  ? (!(function (e) {
                      let { guildScheduledEvent: t, welcomeModalChannelId: n } =
                        e;
                      null != t &&
                        (0, h.addPostConnectionCallback)(() => {
                          let e = { guildScheduledEventId: t.id };
                          null != n && (e.welcomeModalChannelId = n),
                            (0, T.transitionToEventDetailsFromInvite)(t, e);
                        });
                    })(t),
                    !1)
                  : (ee({
                      guildId:
                        null !== (s = i.getGuildId()) && void 0 !== s
                          ? s
                          : W.ME,
                      channel: i,
                      options: t,
                      analyticsLocations: n,
                    }),
                    !1)))
            );
          });
        },
        en = async e => {
          let { guild_id: t, channel_id: n } = e;
          (0, C.isGuildScheduledEventActive)(e) && null != n
            ? et(n)
            : await j.default.transitionToGuildSync(t);
        };
      var es = {
        resolveInvite: function e(t, n, s) {
          return l.default.isDispatching()
            ? Promise.resolve().then(() => e(t, n, s))
            : (l.default.dispatch({ type: "INVITE_RESOLVE", code: t }),
              (0, A.default)(t, n, s).then(e => {
                let { invite: t, code: n, banned: s } = e;
                return (
                  null != t
                    ? l.default.dispatch({
                        type: "INVITE_RESOLVE_SUCCESS",
                        invite: t,
                        code: n,
                      })
                    : l.default.dispatch({
                        type: "INVITE_RESOLVE_FAILURE",
                        code: n,
                        banned: s,
                      }),
                  { invite: t, code: n }
                );
              }));
        },
        getInviteContext: (e, t) => ({
          location: e,
          location_guild_id: null != t.guild ? t.guild.id : void 0,
          location_channel_id: null != t.channel ? t.channel.id : void 0,
          location_channel_type: null != t.channel ? t.channel.type : void 0,
        }),
        async createInvite(e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : {},
            n = arguments.length > 2 ? arguments[2] : void 0;
          try {
            let { body: s } = await u.default.post({
              url: W.Endpoints.INSTANT_INVITES(e),
              body: t,
              context: { location: n },
            });
            return (
              l.default.dispatch({
                type: "INSTANT_INVITE_CREATE_SUCCESS",
                channelId: e,
                invite: s,
              }),
              s
            );
          } catch (t) {
            throw (
              (l.default.dispatch({
                type: "INSTANT_INVITE_CREATE_FAILURE",
                channelId: e,
              }),
              new f.default(t))
            );
          }
        },
        async mobileCreateInvite(e, t) {
          let n = U.default.getInvite(e.id);
          if (null != n && !n.isExpired()) return n.code;
          let s = { max_age: B.default.Seconds.DAY },
            i = await this.createInvite(e.id, s, t).catch(() =>
              l.default.dispatch({
                type: "NATIVE_APP_INSTANT_INVITE_GDM_SHARE_FAILED",
              })
            );
          return null == i ? void 0 : i.code;
        },
        async getAllFriendInvites(e) {
          await new Promise(e => l.default.wait(() => e(null)));
          let t = U.default.getFriendInvitesFetching();
          if (t)
            return null != J
              ? J.then(e => e.body)
              : Promise.reject(Error("Invalid friend invite fetch request"));
          (J = u.default.get({
            url: W.Endpoints.FRIEND_INVITES,
            context: { location: e },
          })),
            l.default.dispatch({
              type: "FRIEND_INVITES_FETCH_REQUEST",
              requestedAt: new Date(),
            });
          let { body: n } = await J;
          return (
            (J = null),
            l.default.dispatch({
              type: "FRIEND_INVITES_FETCH_RESPONSE",
              receivedAt: new Date(),
              invites: n,
            }),
            n
          );
        },
        createFriendInvite: (e, t) => (
          l.default.dispatch({ type: "FRIEND_INVITE_CREATE_REQUEST" }),
          u.default
            .post({
              url: W.Endpoints.FRIEND_INVITES,
              body: null != e ? e : {},
              context: { location: t },
            })
            .then(
              e => {
                let { body: t } = e;
                return (
                  l.default.dispatch({
                    type: "FRIEND_INVITE_CREATE_SUCCESS",
                    invite: t,
                  }),
                  t
                );
              },
              e => {
                throw (
                  (l.default.dispatch({
                    type: "FRIEND_INVITE_CREATE_FAILURE",
                    error: e,
                  }),
                  e)
                );
              }
            )
        ),
        revokeFriendInvites: () => (
          l.default.dispatch({ type: "FRIEND_INVITE_REVOKE_REQUEST" }),
          u.default
            .delete({ url: W.Endpoints.FRIEND_INVITES, context: { location } })
            .then(e => {
              let { body: t } = e;
              l.default.dispatch({
                type: "FRIEND_INVITE_REVOKE_SUCCESS",
                invites: t,
              });
            })
        ),
        revokeFriendInvite: e =>
          u.default.delete({ url: W.Endpoints.INVITE(e) }),
        clearInviteFromStore(e) {
          l.default.dispatch({ type: "INSTANT_INVITE_CLEAR", channelId: e });
        },
        revokeInvite(e) {
          let { code: t, channel: n } = e;
          return x.default
            .delete({
              url: W.Endpoints.INVITE(t),
              oldFormErrors: !0,
              trackedActionData: {
                event: r.NetworkActionNames.INVITE_REVOKE,
                properties: {
                  uses: e.uses,
                  max_uses: e.maxUses,
                  max_age: e.maxAge,
                  invite_type: e.type,
                },
              },
            })
            .then(() => {
              l.default.dispatch({
                type: "INSTANT_INVITE_REVOKE_SUCCESS",
                code: t,
                channelId: n.id,
              });
            });
        },
        acceptInvite(e) {
          var t, s, i;
          let { inviteKey: r, context: a, callback: o, skipOnboarding: d } = e,
            f = (0, I.parseExtraDataFromInviteKey)(r),
            c = f.baseCode,
            g = V.default.getSessionId();
          let m =
              ((s = a),
              (i = f),
              {
                ...s,
                invite_guild_scheduled_event_id: i.guildScheduledEventId,
              }),
            h = F.default.getCurrentUser();
          return null !==
            (t = null == h ? void 0 : h.hasFlag(W.UserFlags.QUARANTINED)) &&
            void 0 !== t &&
            t
            ? ((0, D.default)(), new Promise((e, t) => t(Error())))
            : (l.default.dispatch({ type: "INVITE_ACCEPT", code: c }),
              u.default
                .post({
                  url: W.Endpoints.INVITE(c),
                  context: m,
                  oldFormErrors: !0,
                  body: { session_id: g },
                })
                .then(
                  async e => {
                    var t, s;
                    l.default.dispatch({
                      type: "INVITE_ACCEPT_SUCCESS",
                      invite: e.body,
                      code: c,
                    });
                    let i = C.default.getGuildScheduledEvent(
                        f.guildScheduledEventId
                      ),
                      r = { ...e.body, guild_scheduled_event: i },
                      a =
                        null !== (s = null == r ? void 0 : r.guild_id) &&
                        void 0 !== s
                          ? s
                          : null == r
                            ? void 0
                            : null === (t = r.guild) || void 0 === t
                              ? void 0
                              : t.id;
                    if (!d && null != a && r.new_member) {
                      let { default: e } = await n
                        .el("937692")
                        .then(n.bind(n, "937692"));
                      await e({ guildId: a });
                    }
                    return null == o || o(r), e.body;
                  },
                  e => {
                    var t, n;
                    throw (
                      (l.default.dispatch({
                        type: "INVITE_ACCEPT_FAILURE",
                        code: c,
                        error: {
                          message:
                            null === (t = e.body) || void 0 === t
                              ? void 0
                              : t.message,
                          code:
                            null === (n = e.body) || void 0 === n
                              ? void 0
                              : n.code,
                        },
                      }),
                      new _.default(e))
                    );
                  }
                ));
        },
        acceptInviteAndTransitionToInviteChannel(e) {
          let {
            inviteKey: t,
            context: n,
            analyticsLocations: s,
            callback: i,
            skipOnboarding: r,
          } = e;
          return this.acceptInvite({
            inviteKey: t,
            context: n,
            skipOnboarding: r,
            callback: e => {
              if (null != e.channel) {
                let t = $(e);
                et(e.channel.id, t, null != s ? s : []);
              }
              null != i && i(e);
            },
          });
        },
        transitionToInvite(e, t) {
          var n, s, i;
          let { channel: r, guild: a } = e;
          if (
            null != a &&
            (null === (n = a.features) || void 0 === n
              ? void 0
              : n.includes(W.GuildFeatures.HUB))
          ) {
            S.default.onOpenHubInvite(e);
            return;
          }
          if (
            null != a &&
            (null === (s = a.features) || void 0 === s
              ? void 0
              : s.includes(W.GuildFeatures.COMMUNITY)) &&
            (null === (i = a.features) || void 0 === i
              ? void 0
              : i.includes(W.GuildFeatures.MEMBER_VERIFICATION_GATE_ENABLED)) &&
            !a.features.includes(W.GuildFeatures.PREVIEW_ENABLED)
          ) {
            (0, O.transitionTo)(
              W.Routes.GUILD_MEMBER_VERIFICATION(a.id, e.code)
            );
            return;
          }
          if (null == r) return;
          let o = $(e);
          null != t && (o.transitionTo = t);
          let d = null != a ? a.id : W.ME;
          ee({ guildId: d, channel: r, options: o });
        },
        transitionToInviteSync(e, t, n) {
          if (null != e.channel) {
            let s = $(e);
            this.transitionToInviteChannelSync(e.channel.id, {
              ...s,
              intent: n,
              transitionTo: t,
            });
          }
        },
        openNativeAppModal(e) {
          m.default.openNativeAppModal(e, W.RPCCommands.INVITE_BROWSER);
        },
        openApp(e, t, n, s, r) {
          var u, f;
          let _;
          let c = null != e ? (0, I.parseExtraDataFromInviteKey)(e) : null,
            g = null == c ? void 0 : c.baseCode;
          if (
            (l.default.dispatch({ type: "INVITE_APP_OPENING", code: e }),
            null != i.ua && i.ua.toLowerCase().indexOf("googlebot") > -1)
          ) {
            l.default.dispatch({ type: "INVITE_APP_NOT_OPENED", code: e });
            return;
          }
          if (
            (null === (u = i.os) || void 0 === u ? void 0 : u.family) ===
              "Android" ||
            (null === (f = i.os) || void 0 === f ? void 0 : f.family) === "iOS"
          ) {
            let e =
                null != g
                  ? (0, a.getInviteDynamicLinkTemplate)(g)
                  : (0, a.getDefaultDynamicLinkTemplate)(),
              t = (0, o.generateAttemptId)();
            (_ = (0, o.default)(e, {
              utmSource: 2 === r ? "friend_invite" : Z,
              fingerprint: n,
              username: s,
              attemptId: t,
              event: null == c ? void 0 : c.guildScheduledEventId,
              iosFallbackLink:
                "https://discord.com/api/download/mobile?invite_code=".concat(
                  g
                ),
            })),
              H.default.track(W.AnalyticEvents.DEEP_LINK_CLICKED, {
                fingerprint: (0, d.maybeExtractId)(n),
                attempt_id: t,
                source: Z,
                invite_code: g,
              });
          } else
            "#" === (_ = null != t ? W.Routes.INVITE_PROXY(t) : "")[0] &&
              (_ = _.slice(1)),
              (_ = "discord://".concat(_));
          Y.default.launch(_, t => {
            l.default.dispatch(
              t
                ? { type: "INVITE_APP_OPENED", code: e }
                : { type: "INVITE_APP_NOT_OPENED", code: e }
            );
          });
        },
        transitionToInviteChannelSync: et,
      };
    },
    54239: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          pushLayer: function () {
            return i;
          },
          popLayer: function () {
            return r;
          },
          popAllLayers: function () {
            return a;
          },
        });
      var s = n("913144");
      function i(e) {
        s.default.dispatch({ type: "LAYER_PUSH", component: e });
      }
      function r() {
        s.default.dispatch({ type: "LAYER_POP" });
      }
      function a() {
        s.default.dispatch({ type: "LAYER_POP_ALL" });
      }
    },
    145292: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          trustDomain: function () {
            return i;
          },
          trustProtocol: function () {
            return r;
          },
        });
      var s = n("913144");
      function i(e) {
        s.default.dispatch({ type: "MASKED_LINK_ADD_TRUSTED_DOMAIN", url: e });
      }
      function r(e) {
        s.default.dispatch({
          type: "MASKED_LINK_ADD_TRUSTED_PROTOCOL",
          url: e,
        });
      }
    },
    736964: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return C;
          },
        }),
        n("222007");
      var s,
        i,
        r = n("872717"),
        a = n("819855"),
        o = n("913144"),
        d = n("774146"),
        u = n("132774"),
        l = n("258158"),
        f = n("823348"),
        _ = n("697218"),
        c = n("284609"),
        g = n("158998"),
        m = n("404118"),
        h = n("272030"),
        v = n("49111"),
        E = n("782340");
      function p(e) {
        (0, h.closeContextMenu)(), m.default.show(e);
      }
      function y(e, t, n) {
        let { status: s, body: i } = e,
          r = i && i.code;
        switch (s) {
          case 429:
            0 === t &&
              p({
                title: E.default.Messages.FRIEND_REQUEST_RATE_LIMITED_HEADER,
                body: E.default.Messages.FRIEND_REQUEST_RATE_LIMITED_BODY,
                confirmText:
                  E.default.Messages.FRIEND_REQUEST_RATE_LIMITED_BUTTON,
              });
            break;
          case 403:
            if (r === v.AbortCodes.EMAIL_VERIFICATION_REQUIRED) {
              p({
                title:
                  E.default.Messages
                    .FRIEND_REQUEST_REQUIRES_EMAIL_VALIDATION_HEADER,
                body: E.default.Messages
                  .FRIEND_REQUEST_REQUIRES_EMAIL_VALIDATION_BODY,
                confirmText:
                  E.default.Messages
                    .FRIEND_REQUEST_REQUIRES_EMAIL_VALIDATION_BUTTON,
                onConfirm: () => {
                  d.openClaimAccountModal();
                },
              });
              break;
            }
          default:
            if (r === v.AbortCodes.USER_QUARANTINED)
              (0, h.closeContextMenu)(), (0, l.default)();
            else if ((0, f.isLimitedAccessErrorCode)(s, r)) break;
            else if (0 === t) {
              let e =
                null != n
                  ? (0, c.humanizeAbortCode)(r || 0, n)
                  : E.default.Messages.POMELO_ADD_FRIEND_ERROR;
              p({
                title: E.default.Messages.FRIEND_REQUEST_FAILED_HEADER,
                body: e,
                confirmText: E.default.Messages.OKAY,
              });
            }
        }
        throw e;
      }
      ((i = s || (s = {}))[(i.SHOW_ALWAYS = 0)] = "SHOW_ALWAYS"),
        (i[(i.SHOW_ONLY_IF_ACTION_NEEDED = 1)] = "SHOW_ONLY_IF_ACTION_NEEDED");
      let T = {
        sendRequest(e) {
          let {
              discordTag: t,
              context: n,
              captchaPayload: s,
              errorUxConfig: i = 0,
            } = e,
            [a, o] = t.split("#");
          return r.default
            .post({
              url: v.Endpoints.USER_RELATIONSHIPS(),
              body: { username: a, discriminator: parseInt(o), ...s },
              context: n,
              oldFormErrors: !0,
            })
            .catch(e => {
              y(e, i, t);
            });
        },
        addRelationship(e, t) {
          let {
              userId: n,
              context: s,
              type: i,
              friendToken: a,
              fromFriendSuggestion: o,
              captchaPayload: d,
            } = e,
            u =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : 0,
            l = _.default.getUser(n);
          return r.default
            .put({
              url: v.Endpoints.USER_RELATIONSHIP(n),
              body: {
                type: i,
                friend_token: a,
                from_friend_suggestion: o,
                ...d,
              },
              context: s,
              oldFormErrors: !0,
            })
            .then(() => {
              null == t || t();
            })
            .catch(e => {
              y(e, u, g.default.getUserTag(l));
            });
        },
        acceptFriendRequest: e =>
          T.addRelationship(e, function () {
            a.AccessibilityAnnouncer.announce(
              E.default.Messages.A11Y_ANNOUNCEMENT_FRIEND_ACCEPT_REQUEST
            );
          }),
        cancelFriendRequest: (e, t) =>
          T.removeRelationship(e, t, function () {
            a.AccessibilityAnnouncer.announce(
              E.default.Messages.A11Y_ANNOUNCEMENT_FRIEND_CANCEL_REQUEST
            );
          }),
        removeFriend(e, t) {
          T.removeRelationship(e, t, function () {
            a.AccessibilityAnnouncer.announce(
              E.default.Messages.A11Y_ANNOUNCEMENT_FRIEND_REMOVED
            );
          });
        },
        unblockUser(e, t) {
          T.removeRelationship(e, t, function () {
            a.AccessibilityAnnouncer.announce(
              E.default.Messages.A11Y_ANNOUNCEMENT_USER_UNBLOCKED
            );
          });
        },
        removeRelationship: (e, t, n) =>
          r.default
            .delete({
              url: v.Endpoints.USER_RELATIONSHIP(e),
              context: t,
              oldFormErrors: !0,
            })
            .then(() => {
              null == n || n();
            })
            .catch(() => {
              a.AccessibilityAnnouncer.announce(
                E.default.Messages.A11Y_ANNOUNCEMENT_GENERIC_FAIL
              );
            }),
        updateRelationship: (e, t) =>
          r.default.patch({
            url: v.Endpoints.USER_RELATIONSHIP(e),
            body: { nickname: t },
          }),
        fetchRelationships() {
          r.default
            .get({ url: v.Endpoints.USER_RELATIONSHIPS(), oldFormErrors: !0 })
            .then(
              e =>
                o.default.dispatch({
                  type: "LOAD_RELATIONSHIPS_SUCCESS",
                  relationships: e.body,
                }),
              () => o.default.dispatch({ type: "LOAD_RELATIONSHIPS_FAILURE" })
            );
        },
        confirmClearPendingRelationships(e) {
          (0, u.default)(e);
        },
        clearPendingRelationships: () =>
          r.default
            .delete({
              url: v.Endpoints.USER_RELATIONSHIPS(),
              query: {
                relationship_type: v.RelationshipTypes.PENDING_INCOMING,
              },
            })
            .then(() => {
              o.default.dispatch({
                type: "RELATIONSHIP_PENDING_INCOMING_REMOVED",
              });
            })
            .catch(() => {
              a.AccessibilityAnnouncer.announce(
                E.default.Messages.A11Y_ANNOUNCEMENT_GENERIC_FAIL
              );
            }),
      };
      var C = T;
    },
    987317: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
        });
      var s = n("913144"),
        i = n("700507"),
        r = n("76393");
      n("924492");
      var a = n("383294"),
        o = n("393414"),
        d = n("742171"),
        u = n("42203"),
        l = n("247013"),
        f = n("42887"),
        _ = n("18494"),
        c = n("162771"),
        g = n("697218"),
        m = n("404008"),
        h = n("450481"),
        v = n("49111"),
        E = {
          selectChannel(e) {
            let {
              guildId: t,
              channelId: n,
              messageId: i,
              jumpType: r,
              preserveDrawerState: a,
              source: o,
            } = e;
            s.default.dispatch({
              type: "CHANNEL_SELECT",
              guildId: t === v.ME ? null : t,
              channelId: n,
              messageId: i,
              jumpType: r,
              preserveDrawerState: a,
              source: o,
            });
          },
          selectPrivateChannel(e) {
            (0, o.transitionTo)(v.Routes.CHANNEL(v.ME, e));
          },
          selectVoiceChannel(e) {
            var t;
            let n =
                arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
              s =
                arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
              i = u.default.getChannel(e),
              r = null == i ? void 0 : i.getGuildId();
            if (
              (null == i ? void 0 : i.isGuildVocal()) &&
              (null == i ? void 0 : i.isNSFW()) &&
              (!(null === (t = g.default.getCurrentUser()) || void 0 === t
                ? void 0
                : t.nsfwAllowed) ||
                !l.default.didAgree(r))
            ) {
              (0, o.transitionTo)(v.Routes.CHANNEL(r, e));
              return;
            }
            f.default.isSupported() &&
              (null != e && f.default.getMediaEngine().interact(),
              (0, h.selectVoiceChannelAdditional)(e, r, n, s));
          },
          disconnect() {
            let e = r.default.getRemoteSessionId();
            if (
              (null != e && i.remoteDisconnect(e), (0, d.isOldVoiceUIEnabled)())
            ) {
              let e = u.default.getChannel(_.default.getChannelId()),
                t =
                  _.default.getChannelId() === _.default.getVoiceChannelId() &&
                  (null == e ? void 0 : e.isThread()) === !0;
              if (
                (this.selectVoiceChannel(null),
                a.close(v.PopoutWindowKeys.CHANNEL_CALL_POPOUT),
                t)
              ) {
                let e = c.default.getGuildId();
                null != e &&
                  (0, o.transitionTo)(
                    (0, m.previousTextChannelRouteForGuild)(e)
                  );
              }
            } else this.selectVoiceChannel(null);
          },
        };
    },
    450481: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          selectVoiceChannelAdditional: function () {
            return h;
          },
        });
      var s = n("551042"),
        i = n("913144"),
        r = n("157186"),
        a = n("619395"),
        o = n("819450"),
        d = n("439141"),
        u = n("172538"),
        l = n("42203"),
        f = n("305961"),
        _ = n("88093"),
        c = n("18494"),
        g = n("800762"),
        m = n("404008");
      let h = function (e, t) {
        let h = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
          v = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],
          E = l.default.getChannel(e),
          p =
            g.default.getCurrentClientVoiceChannelId(null != t ? t : null) ===
            e,
          y = null != E ? _.default.getCheck(E.guild_id) : null,
          T = null != t && (0, r.shouldShowMembershipVerificationGate)(t);
        if (!T) {
          if (null == y || y.canChat || (0, a.canLurkerListen)(E)) {
            if (null != E && !p) {
              let e = (0, m.isChannelFull)(E, g.default, f.default);
              if (e && E.isGuildStageVoice() && (0, o.getStageHasMedia)(E.id)) {
                (0, s.openModalLazy)(async () => {
                  let { default: e } = await n
                    .el("374278")
                    .then(n.bind(n, "374278"));
                  return t => e({ channel: E, ...t });
                });
                return;
              }
              if (e) {
                (0, s.openModalLazy)(async () => {
                  let { default: e } = await n
                    .el("242144")
                    .then(n.bind(n, "242144"));
                  return t => e(t);
                });
                return;
              }
            }
            h && (0, d.applyInitialVideoBackgroundOption)(),
              (0, u.default)(
                function () {
                  i.default.dispatch({
                    type: "VOICE_CHANNEL_SELECT",
                    guildId: t,
                    channelId: e,
                    currentVoiceChannelId: c.default.getVoiceChannelId(),
                    video: h,
                    stream: v,
                  });
                },
                e,
                v,
                h
              );
          }
        }
      };
    },
    990766: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          startStream: function () {
            return O;
          },
          setStreamPaused: function () {
            return P;
          },
          watchStream: function () {
            return V;
          },
          toggleSelfStreamHidden: function () {
            return R;
          },
          watchStreamAndTransitionToStream: function () {
            return k;
          },
          stopStream: function () {
            return M;
          },
          closeStream: function () {
            return w;
          },
          fetchStreamPreview: function () {
            return L;
          },
          notifyStreamStart: function () {
            return U;
          },
          updateStreamSettings: function () {
            return G;
          },
          changeStreamRegion: function () {
            return F;
          },
          stopOwnStream: function () {
            return H;
          },
          createBroadcastChannelOrStartStream: function () {
            return B;
          },
          joinPrivateChannelAndWatchStream: function () {
            return x;
          },
        });
      var s = n("627445"),
        i = n.n(s),
        r = n("759843"),
        a = n("872717"),
        o = n("913144"),
        d = n("76393"),
        u = n("374014"),
        l = n("709463"),
        f = n("870346"),
        _ = n("373469"),
        c = n("271938"),
        g = n("42203"),
        m = n("305961"),
        h = n("18494"),
        v = n("800762"),
        E = n("404008"),
        p = n("718517"),
        y = n("12307"),
        T = n("840707"),
        C = n("561288"),
        S = n("450911"),
        I = n("255397"),
        A = n("987317"),
        D = n("49111"),
        N = n("706530");
      function O(e, t, n) {
        o.default.dispatch({
          type: "STREAM_START",
          streamType: null != e ? N.StreamTypes.GUILD : N.StreamTypes.CALL,
          guildId: e,
          channelId: t,
          appContext: __OVERLAY__ ? D.AppContext.OVERLAY : D.AppContext.APP,
          ...n,
        });
      }
      function P(e, t) {
        let n = (0, u.encodeStreamKey)(e);
        o.default.dispatch({
          type: "STREAM_SET_PAUSED",
          streamKey: n,
          paused: t,
        });
      }
      function b(e, t) {
        let n = g.default.getChannel(t);
        i(null != n, "Cannot join a null voice channel");
        let s = v.default.isInChannel(t);
        return !s && (0, E.isChannelFull)(n, v.default, m.default);
      }
      function V(e, t) {
        let n = null != d.default.getRemoteSessionId();
        if (n) return;
        let { guildId: s, channelId: i } = e;
        if (null != s && b(s, i)) return;
        let r = (0, u.encodeStreamKey)(e),
          a =
            (null == t ? void 0 : t.forceMultiple) ||
            _.default.getAllActiveStreamsForChannel(i).filter(e => {
              let { ownerId: t } = e;
              return t !== c.default.getId();
            }).length >= 2;
        o.default.dispatch({
          type: "STREAM_WATCH",
          streamKey: r,
          allowMultiple: a,
        }),
          !a &&
            (null == t || !t.noFocus) &&
            I.default.selectParticipant(e.channelId, r);
      }
      function R(e, t) {
        o.default.dispatch({
          type: "STREAM_UPDATE_SELF_HIDDEN",
          channelId: e,
          selfStreamHidden: t,
        });
      }
      function k(e, t) {
        let { guildId: n, channelId: s } = e;
        if (null != n && b(n, s)) return;
        V(e, t);
        let i = f.default.getWindowOpen(D.PopoutWindowKeys.CHANNEL_CALL_POPOUT),
          r = h.default.getVoiceChannelId();
        (!i || r !== s) && (0, l.default)(e);
      }
      function M(e) {
        let t =
          !(arguments.length > 1) || void 0 === arguments[1] || arguments[1];
        w(e, t),
          o.default.dispatch({
            type: "STREAM_STOP",
            streamKey: e,
            appContext: __OVERLAY__ ? D.AppContext.OVERLAY : D.AppContext.APP,
          });
      }
      function w(e) {
        let t =
          !(arguments.length > 1) || void 0 === arguments[1] || arguments[1];
        o.default.dispatch({
          type: "STREAM_CLOSE",
          streamKey: e,
          canShowFeedback: t,
        });
      }
      async function L(e, t, n) {
        let s = (0, u.encodeStreamKey)({
          streamType: null != e ? N.StreamTypes.GUILD : N.StreamTypes.CALL,
          guildId: e,
          channelId: t,
          ownerId: n,
        });
        o.default.dispatch({
          type: "STREAM_PREVIEW_FETCH_START",
          streamKey: s,
        });
        try {
          let e = await a.default.get({
            url: D.Endpoints.STREAM_PREVIEW(s),
            query: { version: Date.now() },
            oldFormErrors: !0,
          });
          o.default.dispatch({
            type: "STREAM_PREVIEW_FETCH_SUCCESS",
            streamKey: s,
            previewURL: e.body.url,
          });
        } catch (t) {
          let e;
          429 === t.status &&
            (e = t.body.retry_after * p.default.Millis.SECOND),
            o.default.dispatch({
              type: "STREAM_PREVIEW_FETCH_FAIL",
              streamKey: s,
              retryAfter: e,
            });
        }
      }
      async function U(e) {
        try {
          await T.default.post({
            url: D.Endpoints.STREAM_NOTIFY(e),
            oldFormErrors: !0,
            trackedActionData: { event: r.NetworkActionNames.STREAM_NOTIFY },
          });
        } catch (e) {}
      }
      function G(e) {
        (0, y.trackStreamSettingsUpdate)(e.preset, e.resolution, e.frameRate),
          o.default.dispatch({ type: "STREAM_UPDATE_SETTINGS", ...e });
      }
      function F(e, t) {
        a.default.patch({
          url: D.Endpoints.STREAM(e),
          body: { region: t },
          oldFormErrors: !0,
        });
      }
      function H() {
        let e =
            !(arguments.length > 0) || void 0 === arguments[0] || arguments[0],
          t = _.default.getCurrentUserActiveStream();
        null != t && M((0, u.encodeStreamKey)(t), e);
      }
      function B(e) {
        let { channelId: t, pid: n, sourceId: s, sourceName: i } = e;
        (null != n || null != s || null != i) &&
          (o.default.dispatch({
            type: "START_BROADCAST_STREAM",
            options: { pid: n, sourceId: s, sourceName: i },
          }),
          null == t
            ? S.default.createBroadcastPrivateChannel()
            : O(null, t, { pid: n, sourceId: s, sourceName: i }));
      }
      function x(e, t) {
        let n = c.default.getId(),
          s = (0, u.decodeStreamKey)(t),
          i = h.default.getVoiceChannelId();
        null != i && i !== e && A.default.disconnect(),
          S.default.addRecipient(e, n, void 0, () => {
            C.default.call(e, !1, !1, null, () => {
              k(s);
            });
          });
      }
    },
    327037: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          fetchCurrentUser: function () {
            return g;
          },
          acceptAgreements: function () {
            return m;
          },
          setFlag: function () {
            return h;
          },
          getUser: function () {
            return v;
          },
          fetchProfile: function () {
            return E;
          },
          fetchMutualFriends: function () {
            return p;
          },
        }),
        n("702976");
      var s = n("627445"),
        i = n.n(s),
        r = n("33112"),
        a = n("811022"),
        o = n("872717"),
        d = n("913144"),
        u = n("766274"),
        l = n("697218"),
        f = n("840707"),
        _ = n("49111");
      let c = new a.default("UserProfileModalActionCreators");
      function g() {
        let e =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
          { withAnalyticsToken: t = !1 } = e;
        return o.default
          .get({
            url: _.Endpoints.ME,
            query: { with_analytics_token: t },
            oldFormErrors: !0,
          })
          .then(
            e => (
              d.default.dispatch({
                type: "CURRENT_USER_UPDATE",
                user: e.body,
                analyticsToken: t ? e.body.analytics_token : void 0,
              }),
              new u.default(e.body)
            )
          );
      }
      function m() {
        let e =
            !(arguments.length > 0) || void 0 === arguments[0] || arguments[0],
          t =
            !(arguments.length > 1) || void 0 === arguments[1] || arguments[1];
        return f.default
          .patch({
            url: _.Endpoints.USER_AGREEMENTS,
            trackedActionData: {
              event: r.NetworkActionNames.USER_ACCEPT_AGREEMENTS,
            },
            body: { terms: e, privacy: t },
            oldFormErrors: !0,
          })
          .then(
            () => !0,
            () => !1
          );
      }
      function h(e, t) {
        let n = l.default.getCurrentUser();
        i(null != n, "setFlag: user cannot be undefined");
        let s = t ? n.flags | e : n.flags & ~e;
        return o.default.patch({
          url: _.Endpoints.ME,
          oldFormErrors: !0,
          body: { flags: s },
        });
      }
      function v(e) {
        let t = l.default.getUser(e);
        return null != t
          ? Promise.resolve(t)
          : o.default
              .get({ url: _.Endpoints.USER(e), oldFormErrors: !0 })
              .then(
                t => (
                  d.default.dispatch({ type: "USER_UPDATE", user: t.body }),
                  l.default.getUser(e)
                )
              );
      }
      async function E(e) {
        let {
            friendToken: t,
            withMutualGuilds: n,
            withMutualFriendsCount: s,
            guildId: i,
            connectionsRoleId: r,
          } = arguments.length > 1 && void 0 !== arguments[1]
            ? arguments[1]
            : {},
          a = arguments.length > 2 ? arguments[2] : void 0;
        d.default.dispatch({ type: "USER_PROFILE_FETCH_START", userId: e });
        try {
          let u = await o.default.get({
            url: _.Endpoints.USER_PROFILE(e),
            query: {
              friend_token: t,
              with_mutual_guilds: n,
              with_mutual_friends_count: s,
              guild_id: i,
              connections_role_id: r,
            },
            oldFormErrors: !0,
          });
          return (
            null == a || a(u.body, i),
            d.default.dispatch({ type: "USER_UPDATE", user: u.body.user }),
            d.default.dispatch({
              type: "USER_PROFILE_FETCH_SUCCESS",
              ...u.body,
            }),
            null != i &&
              null != u.body.guild_member &&
              d.default.dispatch({
                type: "GUILD_MEMBER_PROFILE_UPDATE",
                guildId: i,
                guildMember: u.body.guild_member,
              }),
            u.body
          );
        } catch (t) {
          throw (
            (null != t &&
              (null == t ? void 0 : t.body) != null &&
              c.warn(
                "fetchProfile error: "
                  .concat(t.body.code, " - ")
                  .concat(t.body.message)
              ),
            d.default.dispatch({
              type: "USER_PROFILE_FETCH_FAILURE",
              userId: e,
            }),
            t)
          );
        }
      }
      async function p(e) {
        d.default.dispatch({ type: "MUTUAL_FRIENDS_FETCH_START", userId: e });
        try {
          let t = await o.default.get({
            url: _.Endpoints.USER_RELATIONSHIPS(e),
            oldFormErrors: !0,
          });
          d.default.dispatch({
            type: "MUTUAL_FRIENDS_FETCH_SUCCESS",
            userId: e,
            mutualFriends: t.body,
          });
        } catch (t) {
          throw (
            ((null == t ? void 0 : t.body) != null &&
              c.warn(
                "fetchMutualFriends error: "
                  .concat(t.body.code, " - ")
                  .concat(t.body.message)
              ),
            d.default.dispatch({
              type: "MUTUAL_FRIENDS_FETCH_FAILURE",
              userId: e,
            }),
            t)
          );
        }
      }
    },
    79112: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return g;
          },
        });
      var s = n("872717"),
        i = n("95410"),
        r = n("913144"),
        a = n("211895"),
        o = n("26092"),
        d = n("599110"),
        u = n("315102"),
        l = n("730622"),
        f = n("49111"),
        _ = n("191349"),
        c = n("782340"),
        g = {
          open() {
            let e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : null,
              t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : null,
              n =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : { openWithoutBackstack: !1 };
            (0, a.default)(e, t, n);
          },
          init: function (e) {
            let t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : null,
              n = arguments.length > 2 ? arguments[2] : void 0;
            r.default.dispatch({
              type: "USER_SETTINGS_MODAL_INIT",
              section: e,
              subsection: t,
              ...n,
            });
          },
          close() {
            let e = o.default.onClose;
            r.default.dispatch({ type: "USER_SETTINGS_MODAL_CLOSE" }),
              null != e && e();
          },
          setSection(e) {
            let t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : null,
              n =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : {};
            r.default.dispatch({
              type: "USER_SETTINGS_MODAL_SET_SECTION",
              section: e,
              subsection: t,
              ...n,
            });
          },
          clearSubsection(e) {
            r.default.dispatch({
              type: "USER_SETTINGS_MODAL_CLEAR_SUBSECTION",
              forSection: e,
            });
          },
          clearScrollPosition(e) {
            r.default.dispatch({
              type: "USER_SETTINGS_MODAL_CLEAR_SCROLL_POSITION",
              forSection: e,
            });
          },
          updateAccount(e) {
            r.default.dispatch({
              type: "USER_SETTINGS_MODAL_UPDATE_ACCOUNT",
              settings: e,
            });
          },
          submitComplete() {
            r.default.dispatch({ type: "USER_SETTINGS_MODAL_SUBMIT_COMPLETE" });
          },
          reset() {
            r.default.dispatch({ type: "USER_SETTINGS_MODAL_RESET" });
          },
          saveAccountChanges(e, t) {
            r.default.dispatch({ type: "USER_SETTINGS_MODAL_SUBMIT" });
            let {
                username: n,
                email: a,
                emailToken: o,
                password: g,
                avatar: m,
                newPassword: h,
                discriminator: v,
              } = e,
              { close: E } = t;
            return (0, l.default)(
              e => {
                let t = {
                    username: n,
                    email: a,
                    email_token: o,
                    password: g,
                    avatar: m,
                    new_password: h,
                    ...e,
                    discriminator: null != v && "" !== v ? v : void 0,
                  },
                  r = i.default.get(f.DEVICE_TOKEN),
                  d = (0, _.getDevicePushProvider)();
                null != d &&
                  null != r &&
                  ((t.push_provider = d), (t.push_token = r));
                let u = i.default.get(f.DEVICE_VOIP_TOKEN);
                return (
                  null != _.DEVICE_PUSH_VOIP_PROVIDER &&
                    null != u &&
                    ((t.push_voip_provider = _.DEVICE_PUSH_VOIP_PROVIDER),
                    (t.push_voip_token = u)),
                  s.default.patch({
                    url: f.Endpoints.ME,
                    oldFormErrors: !0,
                    body: t,
                  })
                );
              },
              {
                checkEnabled: !1,
                modalProps: { title: c.default.Messages.TWO_FA_CHANGE_ACCOUNT },
                hooks: {
                  onEarlyClose: () =>
                    r.default.dispatch({
                      type: "USER_SETTINGS_MODAL_SUBMIT_FAILURE",
                      errors: {},
                    }),
                },
              }
            ).then(
              e => {
                let t = e.body,
                  n = t.token;
                return (
                  d.default.track(f.AnalyticEvents.USER_AVATAR_UPDATED, {
                    animated: (0, u.isAnimatedIconHash)(t.avatar),
                  }),
                  delete t.token,
                  r.default.dispatch({
                    type: "UPDATE_TOKEN",
                    token: n,
                    userId: t.id,
                  }),
                  r.default.dispatch({ type: "CURRENT_USER_UPDATE", user: t }),
                  null != h &&
                    r.default.dispatch({
                      type: "USER_PASSWORD_UPDATE",
                      user: t,
                      newPassword: h,
                    }),
                  null != g &&
                    null != h &&
                    r.default.dispatch({
                      type: "PASSWORD_UPDATED",
                      userId: t.id,
                    }),
                  E ? this.close() : this.submitComplete(),
                  e
                );
              },
              e => (
                r.default.dispatch({
                  type: "USER_SETTINGS_MODAL_SUBMIT_FAILURE",
                  errors: e.body,
                }),
                e
              )
            );
          },
        };
    },
    741148: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          focus: function () {
            return o;
          },
          hidden: function () {
            return d;
          },
          resized: function () {
            return l;
          },
          fullscreenChange: function () {
            return f;
          },
          visibilityChange: function () {
            return _;
          },
          init: function () {
            return c;
          },
          unload: function () {
            return g;
          },
        });
      var s = n("917351"),
        i = n("913144"),
        r = n("563680"),
        a = n("816454");
      function o(e, t) {
        i.default.dispatch({
          type: "WINDOW_FOCUS",
          windowId: (0, a.getWindowId)(e),
          focused: t,
        });
      }
      function d(e) {
        i.default.dispatch({
          type: "WINDOW_HIDDEN",
          windowId: (0, a.getWindowId)(e),
        });
      }
      let u = (0, s.memoize)(e =>
        (0, s.debounce)((t, n) => {
          i.default.dispatch({
            type: "WINDOW_RESIZED",
            windowId: e,
            width: t,
            height: n,
          });
        }, 100)
      );
      function l(e) {
        let t = (0, a.getWindowId)(e),
          n = u(t);
        n(e.innerWidth, e.innerHeight);
      }
      function f(e) {
        let t = (0, a.getWindowId)(e);
        i.default.dispatch({
          type: "WINDOW_FULLSCREEN_CHANGE",
          windowId: t,
          isElementFullscreen: (0, r.isFullScreen)(null, e.document),
        });
      }
      function _(e) {
        let t = (0, a.getWindowId)(e);
        i.default.dispatch({
          type: "WINDOW_VISIBILITY_CHANGE",
          windowId: t,
          visible: "visible" === e.document.visibilityState,
        });
      }
      function c(e) {
        let t = (0, a.getWindowId)(e),
          n = e.document;
        i.default.dispatch({
          type: "WINDOW_INIT",
          windowId: t,
          isElementFullscreen: (0, r.isFullScreen)(null, n),
          focused: n.hasFocus(),
          width: e.innerWidth,
          height: e.innerHeight,
          visible: "visible" === n.visibilityState,
        });
      }
      function g(e) {
        i.default.dispatch({
          type: "WINDOW_UNLOAD",
          windowId: (0, a.getWindowId)(e),
        });
      }
    },
    920636: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        }),
        n("222007");
      var s = n("37983"),
        i = n("884691"),
        r = n("414456"),
        a = n.n(r),
        o = n("77078"),
        d = n("782340"),
        u = n("347129");
      class l extends i.PureComponent {
        render() {
          var e;
          let {
              title: t,
              actionText: n,
              children: r,
              error: l,
              isLoading: f,
              maxLength: _,
              transitionState: c,
              helpMessage: g,
              retryPrompt: m,
              retrySuccessMessage: h,
            } = this.props,
            { code: v, errorMessage: E, retrySuccess: p } = this.state,
            y =
              i.Children.count(r) > 0
                ? (0, s.jsx)(o.Card, {
                    type: o.Card.Types.WARNING,
                    className: u.card,
                    children: (0, s.jsx)(o.Text, {
                      variant: "text-md/normal",
                      children: r,
                    }),
                  })
                : null,
            T =
              null != m
                ? (0, s.jsxs)(o.Text, {
                    className: a(u.submitText, u.spacing),
                    variant: "text-sm/normal",
                    children: [
                      (0, s.jsx)("br", {}),
                      (0, s.jsx)(o.Clickable, {
                        className: a(u.spacing, u.link),
                        onClick: this.handleRetry,
                        children: (0, s.jsx)(o.Anchor, { children: m }),
                      }),
                    ],
                  })
                : null,
            C = p
              ? (0, s.jsx)(o.Card, {
                  type: o.Card.Types.SUCCESS,
                  className: u.card,
                  children: (0, s.jsx)(o.Text, {
                    variant: "text-md/normal",
                    children: h,
                  }),
                })
              : null;
          return (0, s.jsx)(o.ModalRoot, {
            transitionState: c,
            children: (0, s.jsxs)("form", {
              onSubmit: this.handleSubmit,
              children: [
                (0, s.jsx)(o.ModalHeader, {
                  separator: !1,
                  children: (0, s.jsx)(o.Heading, {
                    variant: "heading-lg/semibold",
                    children: t,
                  }),
                }),
                (0, s.jsxs)(o.ModalContent, {
                  children: [
                    null != g
                      ? (0, s.jsx)(o.Text, {
                          color: "text-normal",
                          variant: "text-md/normal",
                          className: u.spacing,
                          children: g,
                        })
                      : null,
                    y,
                    C,
                    (0, s.jsxs)(o.FormItem, {
                      title: this.getLabelText(),
                      className: u.spacing,
                      children: [
                        (0, s.jsx)(o.TextInput, {
                          inputRef: this.setRef,
                          onChange: this.handleCodeChange,
                          placeholder:
                            null !== (e = this.getPlaceholder()) && void 0 !== e
                              ? e
                              : void 0,
                          maxLength: null != _ ? _ : 10,
                          value: v,
                          autoComplete: "one-time-code",
                          autoFocus: !0,
                        }),
                        this.errorPresent()
                          ? (0, s.jsx)(o.Text, {
                              color: "text-danger",
                              variant: "text-xs/normal",
                              className: u.error,
                              children: null != l ? l : E,
                            })
                          : null,
                        T,
                      ],
                    }),
                  ],
                }),
                (0, s.jsxs)(o.ModalFooter, {
                  children: [
                    (0, s.jsx)(o.Button, {
                      type: "submit",
                      disabled: f || 0 === v.length,
                      children: null != n ? n : d.default.Messages.CONFIRM,
                    }),
                    (0, s.jsx)(o.Button, {
                      onClick: this.handleCancel,
                      disabled: f,
                      look: o.Button.Looks.LINK,
                      color: o.Button.Colors.PRIMARY,
                      children: d.default.Messages.CANCEL,
                    }),
                  ],
                }),
              ],
            }),
          });
        }
        constructor(...e) {
          super(...e),
            (this.state = { code: "", errorMessage: "", retrySuccess: !1 }),
            (this.setRef = e => {
              this._input = e;
            }),
            (this.getLabelText = () => {
              var e;
              return null !== (e = this.props.label) && void 0 !== e
                ? e
                : this.props.disallowBackupCodes
                  ? d.default.Messages.TWO_FA_ENTER_TOKEN_NO_BACKUP_LABEL
                  : d.default.Messages.TWO_FA_ENTER_TOKEN_LABEL;
            }),
            (this.getSupportedCodeTypes = () =>
              this.props.disallowBackupCodes
                ? d.default.Messages.TWO_FA_AUTH_CODE_NO_BACKUP
                : d.default.Messages.TWO_FA_AUTH_CODE),
            (this.getPlaceholder = () => {
              var e;
              return this.props.forceNoPlaceholder
                ? null
                : null !== (e = this.props.placeholder) && void 0 !== e
                  ? e
                  : this.getSupportedCodeTypes();
            }),
            (this.errorPresent = () =>
              (null != this.props.error && "" !== this.props.error) ||
              (null != this.state.errorMessage &&
                "" !== this.state.errorMessage)),
            (this.handleRetry = () => {
              let { onRetry: e } = this.props;
              null == e || e().then(() => this.setState({ retrySuccess: !0 }));
            }),
            (this.handleSubmit = e => {
              e.preventDefault();
              let { handleSubmit: t, onError: n } = this.props;
              t(this.state.code).catch(e => {
                null != e.body &&
                  (null == n || n(e.body),
                  e.body.message &&
                    this.setState({ errorMessage: e.body.message }));
              });
            }),
            (this.handleCancel = () => {
              let { onClose: e, handleEarlyClose: t } = this.props;
              e(), null == t || t();
            }),
            (this.handleCodeChange = e => {
              this.setState({ code: e });
            });
        }
      }
      l.defaultProps = {
        btnClass: "",
        isLoading: !1,
        disallowBackupCodes: !1,
        error: null,
        forceNoPlaceholder: !1,
      };
      var f = l;
    },
    503420: function (e, t, n) {
      "use strict";
      n.r(t);
      var s = n("435703");
      n.es(s, t);
    },
    527073: function (e, t, n) {
      "use strict";
      n.r(t);
      var s = n("879619");
      n.es(s, t);
    },
    521590: function (e, t, n) {
      "use strict";
      n.r(t);
      var s = n("768961");
      n.es(s, t);
    },
    434657: function (e, t, n) {
      "use strict";
      n.r(t);
      var s = n("122508");
      n.es(s, t);
    },
    173010: function (e, t, n) {
      "use strict";
      n.r(t);
      var s = n("372286");
      n.es(s, t);
    },
    877585: function (e, t, n) {
      "use strict";
      n.r(t);
      var s = n("797405");
      n.es(s, t);
    },
    389806: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("862205");
      let i = (0, s.createExperiment)({
        kind: "user",
        id: "2023-03_store_latest_message_data",
        label: "Store latest message data",
        defaultConfig: { enabled: !1 },
        treatments: [
          {
            id: 1,
            label: "Use latest data from api/gateway",
            config: { enabled: !0 },
          },
        ],
      });
      var r = i;
    },
    899633: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
          getIsSpeaking: function () {
            return l;
          },
        });
      var s = n("446674"),
        i = n("235004"),
        r = n("18494"),
        a = n("280168"),
        o = n("800762");
      function d(e, t, n) {
        return e || t || n;
      }
      function u(e) {
        var t, n, d;
        let {
            userId: u,
            checkSoundSharing: l = !1,
            checkSoundboardSounds: f = !0,
            checkIsMuted: _ = !1,
            context: c,
          } = e,
          g = (0, s.useStateFromStores)([o.default, r.default], () => {
            let e = r.default.getVoiceChannelId();
            return null != e ? o.default.getVoiceStateForChannel(e, u) : null;
          }),
          m =
            _ &&
            ((null == g ? void 0 : g.mute) ||
              (null == g ? void 0 : g.selfMute)),
          h = (0, s.useStateFromStores)(
            [a.default],
            () => a.default.isSpeaking(u, c) && !m
          ),
          v = (0, s.useStateFromStores)(
            [a.default],
            () => a.default.isSoundSharing(u) && l
          ),
          E = (0, s.useStateFromStores)(
            [i.default],
            () => i.default.isUserPlayingSounds(u) && f
          );
        return (t = h), (n = E), (d = v), t || n || d;
      }
      function l(e) {
        var t, n, s;
        let {
            userId: d,
            checkSoundSharing: u = !1,
            checkSoundboardSounds: l = !0,
            checkIsMuted: f = !1,
            context: _,
          } = e,
          c = r.default.getVoiceChannelId(),
          g = null != c ? o.default.getVoiceStateForChannel(c, d) : null,
          m =
            f &&
            ((null == g ? void 0 : g.mute) ||
              (null == g ? void 0 : g.selfMute)),
          h = a.default.isSpeaking(d, _) && !m,
          v = a.default.isSoundSharing(d) && u,
          E = i.default.isUserPlayingSounds(d) && l;
        return (t = h), (n = E), (s = v), t || n || s;
      }
    },
    763898: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var s = n("884691");
      function i() {
        let e = s.useRef(null);
        return (
          null === e.current && (e.current = new AbortController()),
          s.useEffect(
            () => () => {
              var t;
              null === (t = e.current) || void 0 === t || t.abort();
            },
            []
          ),
          e.current.signal
        );
      }
    },
    408062: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return v;
          },
        }),
        n("222007"),
        n("808653"),
        n("700225"),
        n("424973"),
        n("843762"),
        n("781738");
      var s = n("917351"),
        i = n.n(s),
        r = n("389806"),
        a = n("115718"),
        o = n("280468"),
        d = n("605250"),
        u = n("692038"),
        l = n("299039"),
        f = n("35013"),
        _ = n("49111");
      let c = new d.default("ChannelMessages");
      function g(e, t) {
        let n = e.get(t.id);
        return null == n ||
          (function (e, t) {
            var n, s;
            let i = null != e.editedTimestamp ? +e.editedTimestamp.toDate() : 0,
              r =
                null != t.edited_timestamp ? +new Date(t.edited_timestamp) : 0;
            return (
              !!(r > i) ||
              !!(
                e.embeds.length <
                (null !==
                  (s =
                    null === (n = t.embeds) || void 0 === n
                      ? void 0
                      : n.length) && void 0 !== s
                  ? s
                  : 0)
              ) ||
              e.content !== t.content
            );
          })(n, t) ||
          e.cached
          ? (0, u.createMessageRecord)(t)
          : n;
      }
      class m {
        clone() {
          let e = new m(this._isCacheBefore);
          return (
            (e._map = { ...this._map }),
            (e._messages = [...this._messages]),
            (e._wasAtEdge = this._wasAtEdge),
            e
          );
        }
        get wasAtEdge() {
          return this._wasAtEdge;
        }
        set wasAtEdge(e) {
          this._wasAtEdge = e;
        }
        get length() {
          return this._messages.length;
        }
        clear() {
          (this._map = {}), (this._messages = []), (this._wasAtEdge = !1);
        }
        remove(e) {
          (this._messages = i.filter(this._messages, t => {
            let { id: n } = t;
            return n !== e;
          })),
            delete this._map[e];
        }
        removeMany(e) {
          i.each(e, e => {
            delete this._map[e];
          }),
            (this._messages = this._messages.filter(
              t => -1 === e.indexOf(t.id)
            ));
        }
        replace(e, t) {
          let n = this._map[e];
          null != n &&
            (delete this._map[e],
            (this._map[t.id] = t),
            (this._messages[this._messages.indexOf(n)] = t));
        }
        update(e, t) {
          let n = this._map[e];
          if (null == n) return;
          let s = t(n);
          (this._map[n.id] = s),
            (this._messages[this._messages.indexOf(n)] = s);
        }
        has(e) {
          return null != this._map[e];
        }
        get(e) {
          return this._map[e];
        }
        forEach(e, t) {
          this._messages.forEach(e, t);
        }
        cache(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
          0 === this.length && (this._wasAtEdge = t);
          let n = this._messages.length + e.length;
          if (n > _.MAX_MESSAGE_CACHE_SIZE) {
            if (((this._wasAtEdge = !1), e.length > _.MAX_MESSAGE_CACHE_SIZE)) {
              this._isCacheBefore
                ? (this._messages = e.slice(
                    e.length - _.MAX_MESSAGE_CACHE_SIZE
                  ))
                : (this._messages = e.slice(0, _.MAX_MESSAGE_CACHE_SIZE)),
                (this._map = {}),
                this._messages.forEach(e => (this._map[e.id] = e));
              return;
            }
            let t = _.MAX_MESSAGE_CACHE_SIZE - e.length;
            this._isCacheBefore
              ? (this._messages = this._messages.slice(
                  Math.max(this._messages.length - t, 0)
                ))
              : (this._messages = this._messages.slice(0, t));
          }
          (this._messages = this._isCacheBefore
            ? [...this._messages, ...e]
            : [...e, ...this._messages]),
            (this._map = {}),
            this._messages.forEach(e => (this._map[e.id] = e));
        }
        extractAll() {
          let e = this._messages;
          return (this._messages = []), (this._map = {}), e;
        }
        extract(e) {
          let t;
          if (this._isCacheBefore) {
            let n = Math.max(this.length - e, 0),
              s = this.length;
            (t = this._messages.slice(n, s)), this._messages.splice(n);
          } else {
            let n = Math.min(e, this.length);
            (t = this._messages.slice(0, n)), this._messages.splice(0, e);
          }
          return t.forEach(e => delete this._map[e.id]), t;
        }
        constructor(e) {
          (this._messages = []),
            (this._map = {}),
            (this._wasAtEdge = !1),
            (this._isCacheBefore = e);
        }
      }
      class h {
        static forEach(e) {
          i.forEach(h._channelMessages, e);
        }
        static get(e) {
          return h._channelMessages[e];
        }
        static hasPresent(e) {
          let t = h.get(e);
          return null != t && t.hasPresent();
        }
        static getOrCreate(e) {
          let t = h._channelMessages[e];
          return null == t && ((t = new h(e)), (h._channelMessages[e] = t)), t;
        }
        static clear(e) {
          delete h._channelMessages[e];
        }
        static clearCache(e) {
          let t = h._channelMessages[e];
          null != t && (t._before.clear(), t._after.clear(), this.commit(t));
        }
        static commit(e) {
          h._channelMessages[e.channelId] = e;
        }
        mutate(e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
            n = new h(this.channelId);
          return (
            (n._array = t ? [...this._array] : this._array),
            (n._map = t ? { ...this._map } : this._map),
            (n._after = t ? this._after.clone() : this._after),
            (n._before = t ? this._before.clone() : this._before),
            e instanceof Function
              ? ((n.ready = this.ready),
                (n.jumpType = this.jumpType),
                (n.jumpTargetId = this.jumpTargetId),
                (n.jumpTargetOffset = this.jumpTargetOffset),
                (n.jumpSequenceId = this.jumpSequenceId),
                (n.jumped = this.jumped),
                (n.jumpedToPresent = this.jumpedToPresent),
                (n.jumpFlash = this.jumpFlash),
                (n.jumpReturnTargetId = this.jumpReturnTargetId),
                (n.focusTargetId = this.focusTargetId),
                (n.hasMoreBefore = this.hasMoreBefore),
                (n.hasMoreAfter = this.hasMoreAfter),
                (n.loadingMore = this.loadingMore),
                (n.revealedMessageId = this.revealedMessageId),
                (n.cached = this.cached),
                (n.hasFetched = this.hasFetched),
                (n.error = this.error),
                e(n))
              : "object" == typeof e &&
                ((n.ready = void 0 !== e.ready ? !0 === e.ready : this.ready),
                (n.jumpType =
                  void 0 !== e.jumpType ? e.jumpType : this.jumpType),
                (n.jumpTargetId =
                  void 0 !== e.jumpTargetId
                    ? e.jumpTargetId
                    : this.jumpTargetId),
                (n.jumpTargetOffset =
                  void 0 !== e.jumpTargetOffset
                    ? e.jumpTargetOffset
                    : this.jumpTargetOffset),
                (n.jumpSequenceId =
                  void 0 !== e.jumpSequenceId
                    ? e.jumpSequenceId
                    : this.jumpSequenceId),
                (n.jumped =
                  void 0 !== e.jumped ? !0 === e.jumped : this.jumped),
                (n.jumpedToPresent =
                  void 0 !== e.jumpedToPresent
                    ? !0 === e.jumpedToPresent
                    : this.jumpedToPresent),
                (n.jumpFlash =
                  void 0 !== e.jumpFlash ? !0 === e.jumpFlash : this.jumpFlash),
                (n.jumpReturnTargetId =
                  void 0 !== e.jumpReturnTargetId
                    ? e.jumpReturnTargetId
                    : this.jumpReturnTargetId),
                (n.focusTargetId =
                  void 0 !== e.focusTargetId
                    ? e.focusTargetId
                    : this.focusTargetId),
                (n.hasMoreBefore =
                  void 0 !== e.hasMoreBefore
                    ? !0 === e.hasMoreBefore
                    : this.hasMoreBefore),
                (n.hasMoreAfter =
                  void 0 !== e.hasMoreAfter
                    ? !0 === e.hasMoreAfter
                    : this.hasMoreAfter),
                (n.loadingMore =
                  void 0 !== e.loadingMore ? e.loadingMore : this.loadingMore),
                (n.revealedMessageId =
                  void 0 !== e.revealedMessageId
                    ? e.revealedMessageId
                    : this.revealedMessageId),
                (n.cached = void 0 !== e.cached ? e.cached : this.cached),
                (n.hasFetched =
                  void 0 !== e.hasFetched ? e.hasFetched : this.hasFetched),
                (n.error = void 0 !== e.error ? e.error : this.error)),
            n
          );
        }
        get length() {
          return this._array.length;
        }
        toArray() {
          return [...this._array];
        }
        forEach(e, t) {
          let n =
            arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
          if (n) {
            let n = this._array;
            for (
              let s = n.length - 1;
              s >= 0 && !1 !== e.call(t, n[s], s);
              s--
            );
          } else this._array.forEach(e, t);
        }
        reduce(e, t) {
          return this._array.reduce(e, t);
        }
        some(e, t) {
          return this._array.some(e, t);
        }
        filter(e, t) {
          return this._array.filter(e, t);
        }
        forAll(e, t) {
          this._before.forEach(e, t),
            this._array.forEach(e, t),
            this._after.forEach(e, t);
        }
        findOldest(e) {
          var t, n;
          return null !==
            (n =
              null !== (t = i.find(this._before._messages, e)) && void 0 !== t
                ? t
                : i.find(this._array, e)) && void 0 !== n
            ? n
            : i.find(this._after._messages, e);
        }
        findNewest(e) {
          var t, n;
          return null !==
            (n =
              null !== (t = i.findLast(this._after._messages, e)) &&
              void 0 !== t
                ? t
                : i.findLast(this._array, e)) && void 0 !== n
            ? n
            : i.findLast(this._before._messages, e);
        }
        map(e, t) {
          return this._array.map(e, t);
        }
        first() {
          return this._array[0];
        }
        last() {
          return this._array[this._array.length - 1];
        }
        get(e) {
          var t;
          let n =
              arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
            s = this._map[e];
          return null == s && n
            ? null !== (t = this._before.get(e)) && void 0 !== t
              ? t
              : this._after.get(e)
            : s;
        }
        getByIndex(e) {
          return this._array[e];
        }
        getAfter(e) {
          let t = this.get(e);
          if (null == t) return null;
          let n = this._array.indexOf(t);
          return -1 === n || n === this.length - 1 ? null : this._array[n + 1];
        }
        getManyAfter(e, t, n) {
          let s = this.get(e);
          if (null == s) return null;
          let i = this._array.indexOf(s);
          if (-1 === i) return null;
          let r = [];
          for (
            let e = i + 1;
            e < this.length && (-1 === t || r.length < t);
            e++
          )
            (null == n || n(this._array[e])) && r.push(this._array[e]);
          return r;
        }
        getManyBefore(e, t, n) {
          let s = this.get(e);
          if (null == s) return null;
          let i = this._array.indexOf(s);
          if (-1 === i) return null;
          let r = [];
          for (let e = i - 1; e >= 0 && (-1 === t || r.length < t); e--)
            (null == n || n(this._array[e])) && r.unshift(this._array[e]);
          return r;
        }
        has(e) {
          let t =
            !(arguments.length > 1) || void 0 === arguments[1] || arguments[1];
          return (
            null != this._map[e] ||
            (t && (this._before.has(e) || this._after.has(e)))
          );
        }
        indexOf(e) {
          let t = -1;
          return this._array.find((n, s) => n.id === e && ((t = s), !0)), t;
        }
        hasPresent() {
          return (
            (this._after.length > 0 && this._after.wasAtEdge) ||
            !this.hasMoreAfter
          );
        }
        hasBeforeCached(e) {
          if (this.length > 0 && this._before.length > 0) {
            let t = this.first();
            return null != t && t.id === e;
          }
          return !1;
        }
        hasAfterCached(e) {
          if (this.length > 0 && this._after.length > 0) {
            let t = this.last();
            return null != t && t.id === e;
          }
          return !1;
        }
        update(e, t) {
          let n = this._map[e];
          if (null == n)
            return this._before.has(e)
              ? this.mutate(n => n._before.update(e, t), !0)
              : this._after.has(e)
                ? this.mutate(n => n._after.update(e, t), !0)
                : this;
          let s = t(n);
          return this.mutate(e => {
            (e._map[n.id] = s), (e._array[e._array.indexOf(n)] = s);
          }, !0);
        }
        replace(e, t) {
          let n = this._map[e];
          if (null == n)
            return this._before.has(e)
              ? this.mutate(n => n._before.replace(e, t), !0)
              : this._after.has(e)
                ? this.mutate(n => n._after.replace(e, t), !0)
                : this;
          return this.mutate(s => {
            delete s._map[e],
              (s._map[t.id] = t),
              (s._array[s._array.indexOf(n)] = t);
          }, !0);
        }
        remove(e) {
          return this.mutate(t => {
            delete t._map[e],
              (t._array = t._array.filter(t => t.id !== e)),
              t._before.remove(e),
              t._after.remove(e);
          }, !0);
        }
        removeMany(e) {
          return e.some(e => this.has(e))
            ? this.mutate(t => {
                i.each(e, e => {
                  delete t._map[e];
                }),
                  (t._array = t._array.filter(t => -1 === e.indexOf(t.id))),
                  t._before.removeMany(e),
                  t._after.removeMany(e);
              }, !0)
            : this;
        }
        merge(e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
            n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
          return this.mutate(s => {
            s._merge(e, t, n);
          }, !0);
        }
        _merge(e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
            n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
          if (
            ((e = e.filter(e => {
              let t = this._map[e.id];
              return (
                (this._map[e.id] = e),
                null == t || ((this._array[this._array.indexOf(t)] = e), !1)
              );
            })),
            n)
          ) {
            let e = t ? this._before : this._after;
            e.clear();
          }
          this._array = t ? [...e, ...this._array] : [...this._array, ...e];
        }
        mergeDelta() {
          let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : [],
            t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : [],
            n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : [];
          return this.mutate(s => {
            s._before.clear(), s._after.clear();
            let i = new Set(n);
            e.forEach(e => i.add(e.id)),
              t.forEach(e => i.add(e.id)),
              (s._array = s._array
                .filter(e => !i.has(e.id))
                .concat(
                  e.map(e => (0, u.createMessageRecord)(e)),
                  t.map(e => (0, u.createMessageRecord)(e))
                )
                .sort((e, t) => l.default.compare(e.id, t.id)));
          });
        }
        _clearMessages() {
          (this._array = []), (this._map = {});
        }
        reset(e) {
          return this.mutate(t => {
            (t._array = e),
              (t._map = {}),
              e.forEach(e => (t._map[e.id] = e)),
              t._before.clear(),
              t._after.clear();
          });
        }
        truncateTop(e) {
          let t =
              !(arguments.length > 1) ||
              void 0 === arguments[1] ||
              arguments[1],
            n = this._array.length - e;
          return n <= 0
            ? this
            : this.mutate(e => {
                for (let t = 0; t < n; t++) delete e._map[e._array[t].id];
                e._before.cache(e._array.slice(0, n), !e.hasMoreBefore),
                  (e._array = e._array.slice(n)),
                  (e.hasMoreBefore = !0);
              }, t);
        }
        truncateBottom(e) {
          let t =
            !(arguments.length > 1) || void 0 === arguments[1] || arguments[1];
          return this._array.length <= e
            ? this
            : this.mutate(t => {
                for (let n = e; n < this._array.length; n++)
                  delete t._map[t._array[n].id];
                t._after.cache(
                  t._array.slice(e, this._array.length),
                  !t.hasMoreAfter
                ),
                  (t._array = t._array.slice(0, e)),
                  (t.hasMoreAfter = !0);
              }, t);
        }
        jumpToPresent(e) {
          return this.mutate(t => {
            let n = t._after.extractAll();
            t.hasMoreAfter = !1;
            let s = Math.max(n.length - e, 0),
              i = n.slice(s);
            n.splice(s),
              t._before.cache(t._array),
              t._before.cache(n),
              t._clearMessages(),
              t._merge(i),
              (t.hasMoreBefore = t._before.length > 0),
              (t.jumped = !0),
              (t.jumpTargetId = null),
              (t.jumpTargetOffset = 0),
              (t.jumpedToPresent = !0),
              (t.jumpFlash = !1),
              (t.jumpReturnTargetId = null),
              (t.jumpSequenceId = t.jumpSequenceId + 1),
              (t.ready = !0),
              (t.loadingMore = !1);
          }, !0);
        }
        jumpToMessage(e) {
          let t =
              !(arguments.length > 1) ||
              void 0 === arguments[1] ||
              arguments[1],
            n = arguments.length > 2 ? arguments[2] : void 0,
            s = arguments.length > 3 ? arguments[3] : void 0,
            i = arguments.length > 4 ? arguments[4] : void 0;
          return this.mutate(r => {
            (r.jumped = !0),
              (r.jumpedToPresent = !1),
              (r.jumpType = null != i ? i : a.JumpTypes.ANIMATED),
              (r.jumpTargetId = e),
              (r.jumpTargetOffset = null != e && null != n ? n : 0),
              (r.jumpSequenceId = r.jumpSequenceId + 1),
              (r.jumpFlash = t),
              (r.jumpReturnTargetId = s),
              (r.ready = !0),
              (r.loadingMore = !1);
          }, !1);
        }
        focusOnMessage(e) {
          return this.mutate(t => {
            (t.focusTargetId = e), (t.ready = !0), (t.loadingMore = !1);
          }, !1);
        }
        loadFromCache(e, t) {
          return this.mutate(n => {
            let s = e ? n._before : n._after;
            n._merge(s.extract(t), e);
            let i = s.length > 0 || !s.wasAtEdge;
            e ? (n.hasMoreBefore = i) : (n.hasMoreAfter = i),
              (n.ready = !0),
              (n.loadingMore = !1);
          }, !0);
        }
        truncate(e, t) {
          return this.length <= _.MAX_LOADED_MESSAGES
            ? this
            : e
              ? this.truncateBottom(_.TRUNCATED_MESSAGE_VIEW_SIZE)
              : t
                ? this.truncateTop(_.TRUNCATED_MESSAGE_VIEW_SIZE)
                : this;
        }
        receiveMessage(e) {
          var t, n;
          let s =
              !(arguments.length > 1) ||
              void 0 === arguments[1] ||
              arguments[1],
            i = null == e.nonce ? null : this.get(e.nonce, !0);
          if (
            null != i &&
            ((null === (t = e.author) || void 0 === t ? void 0 : t.id) ===
              (null === (n = i.author) || void 0 === n ? void 0 : n.id) ||
              (null != e.interaction &&
                e.interaction.user.id === i.author.id)) &&
            null != e.nonce &&
            i.id === e.nonce
          ) {
            let t = (0, u.createMessageRecord)(e);
            return (
              null != i.interactionData &&
                (t.interactionData = i.interactionData),
              this.replace(e.nonce, t)
            );
          }
          if (this.hasMoreAfter)
            this._after.wasAtEdge && (this._after.wasAtEdge = !1);
          else {
            let t = r.default.getCurrentConfig(
                { location: "2ecb25_1" },
                { autoTrackExposure: !1 }
              ).enabled
                ? (0, u.createMessageRecord)(e)
                : g(this, e),
              n = this.merge([t]);
            return s
              ? n.truncateTop(_.TRUNCATED_MESSAGE_VIEW_SIZE, !1)
              : this.length > _.MAX_LOADED_MESSAGES
                ? n.truncateBottom(_.TRUNCATED_MESSAGE_VIEW_SIZE, !1)
                : n;
          }
          return this;
        }
        receivePushNotification(e) {
          let t = null == e.nonce ? null : this.get(e.nonce, !0);
          return null != t
            ? this
            : this.mutate({ ready: !0, cached: !0 }).merge([g(this, e)]);
        }
        loadStart(e) {
          var t, n, s, i;
          return this.mutate({
            loadingMore: !0,
            jumped: null != e,
            jumpedToPresent:
              null !== (t = null == e ? void 0 : e.present) &&
              void 0 !== t &&
              t,
            jumpTargetId:
              null !== (n = null == e ? void 0 : e.messageId) && void 0 !== n
                ? n
                : null,
            jumpTargetOffset:
              null !== (s = null == e ? void 0 : e.offset) && void 0 !== s
                ? s
                : 0,
            jumpReturnTargetId:
              null !== (i = null == e ? void 0 : e.returnMessageId) &&
              void 0 !== i
                ? i
                : null,
            ready: null == e && this.ready,
          });
        }
        loadComplete(e) {
          var t, n, s, o, d, l, f, m, h, v, E;
          let p = [...e.newMessages],
            y = null !== (t = e.isBefore) && void 0 !== t && t,
            T = null !== (n = e.isAfter) && void 0 !== n && n,
            C = null !== (s = e.jump) && void 0 !== s ? s : null,
            S = null !== (o = e.hasMoreBefore) && void 0 !== o && o,
            I = null !== (d = e.hasMoreAfter) && void 0 !== d && d,
            A = null !== (l = e.cached) && void 0 !== l && l,
            D = i(p)
              .reverse()
              .map(
                r.default.getCurrentConfig(
                  { location: "2ecb25_2" },
                  { autoTrackExposure: !1 }
                ).enabled
                  ? e => (0, u.createMessageRecord)(e)
                  : e => g(this, e)
              )
              .value(),
            N = null;
          if ((y || T) && null == C && this.ready) N = this.merge(D, y, !0);
          else {
            let e = this._array.filter(
              e => e.state === _.MessageStates.SENDING
            );
            (N = this.reset(D)),
              !(e.length > 0) ||
              y ||
              T ||
              (null == C ? void 0 : C.messageId) != null ||
              (null == C ? void 0 : C.offset) != null
                ? c.info(
                    "loadComplete: resetting state for channelId="
                      .concat(this.channelId, ", sending.length=")
                      .concat(e.length)
                  )
                : (c.info(
                    "loadComplete: merging with SENDING messages for channelId=".concat(
                      this.channelId
                    )
                  ),
                  (N = N.merge(e)));
          }
          return (N = N.mutate({
            ready: !0,
            loadingMore: !1,
            jumpType:
              null !== (f = null == C ? void 0 : C.jumpType) && void 0 !== f
                ? f
                : a.JumpTypes.ANIMATED,
            jumpFlash:
              null !== (m = null == C ? void 0 : C.flash) && void 0 !== m && m,
            jumped: null != C,
            jumpedToPresent:
              null !== (h = null == C ? void 0 : C.present) &&
              void 0 !== h &&
              h,
            jumpTargetId:
              null !== (v = null == C ? void 0 : C.messageId) && void 0 !== v
                ? v
                : null,
            jumpTargetOffset:
              null != C && null != C.messageId && null != C.offset
                ? C.offset
                : 0,
            jumpSequenceId: null != C ? N.jumpSequenceId + 1 : N.jumpSequenceId,
            jumpReturnTargetId:
              null !== (E = null == C ? void 0 : C.returnMessageId) &&
              void 0 !== E
                ? E
                : null,
            hasMoreBefore: null == C && T ? N.hasMoreBefore : S,
            hasMoreAfter: null == C && y ? N.hasMoreAfter : I,
            cached: A,
            hasFetched: e.hasFetched,
            error: !1,
          }));
        }
        addCachedMessages(e, t) {
          (0, o.requireSortedDescending)(e);
          let n = e.map(e => g(this, e)).reverse();
          return (
            this._array
              .filter(e => !n.some(t => t.id === e.id))
              .forEach(e =>
                f.insert(n, e, (e, t) => l.default.compare(e.id, t.id))
              ),
            this.reset(n).mutate({ ready: !0, cached: t, error: !1 })
          );
        }
        constructor(e) {
          (this._array = []),
            (this._map = {}),
            (this.channelId = e),
            (this.ready = !1),
            (this.jumpTargetId = null),
            (this.jumpTargetOffset = 0),
            (this.jumpSequenceId = 1),
            (this.jumped = !1),
            (this.jumpedToPresent = !1),
            (this.jumpType = a.JumpTypes.ANIMATED),
            (this.jumpFlash = !0),
            (this.jumpReturnTargetId = null),
            (this.hasMoreBefore = !0),
            (this.hasMoreAfter = !1),
            (this.loadingMore = !1),
            (this.revealedMessageId = null),
            this._clearMessages(),
            (this._before = new m(!0)),
            (this._after = new m(!1)),
            (this.cached = !1),
            (this.hasFetched = !1),
            (this.error = !1);
        }
      }
      h._channelMessages = {};
      var v = h;
    },
    80507: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        }),
        n("424973"),
        n("222007");
      var s = n("917351"),
        i = n.n(s),
        r = n("866227"),
        a = n.n(r),
        o = class e {
          overwriteHistory(e, t) {
            (this.usageHistory = i.mapValues(null != e ? e : {}, e => ({
              ...e,
              frecency: -1,
            }))),
              null == t ||
                t.forEach(e => {
                  let { key: t, timestamp: n } = e;
                  return this.track(t, n);
                }),
              this.markDirty();
          }
          markDirty() {
            this.dirty = !0;
          }
          isDirty() {
            return this.dirty;
          }
          track(e, t) {
            if (null == e) return;
            let n = Object.prototype.hasOwnProperty.call(this.usageHistory, e)
              ? this.usageHistory[e]
              : void 0;
            if (null == n)
              n = {
                totalUses: 1,
                recentUses: [null != t ? t : Date.now()],
                frecency: -1,
                score: 0,
              };
            else
              for (
                n.frecency = -1,
                  n.totalUses += 1,
                  null == t
                    ? n.recentUses.push(Date.now())
                    : (n.recentUses.push(t), n.recentUses.sort());
                n.recentUses.length > this.maxSamples;

              )
                n.recentUses.shift();
            (this.usageHistory[e] = n), this.markDirty();
          }
          getEntry(e) {
            if (null == e) return null;
            this.dirty && this.compute();
            let t = Object.prototype.hasOwnProperty.call(this.usageHistory, e)
              ? this.usageHistory[e]
              : void 0;
            return t;
          }
          getScore(e) {
            let t = this.getEntry(e);
            return null != t ? t.score : null;
          }
          getFrecency(e) {
            let t = this.getEntry(e);
            return null != t ? t.frecency : null;
          }
          compute() {
            let e = a();
            i.forEach(this.usageHistory, (t, n) => {
              let { totalUses: s, recentUses: r, frecency: o } = t;
              if (-1 !== o) return;
              let d = this.computeBonus(n) / 100;
              (t.score = 0),
                i.forEach(r, (n, s) => {
                  if (s >= this.maxSamples) return !1;
                  let i = this.computeWeight(e.diff(a(n), "days"));
                  t.score += d * i;
                }),
                t.score > 0
                  ? (t.recentUses.length > 0 &&
                      (t.frecency = Math.ceil(s * (t.score / r.length))),
                    (this.usageHistory[n] = t))
                  : delete this.usageHistory[n];
            }),
              (this.frequently = i(this.usageHistory)
                .map((e, t) => {
                  let n = this.lookupKey(t);
                  return null == n ? null : [n, e.frecency];
                })
                .filter(e => null !== e)
                .sortBy(e => {
                  let [t, n] = e;
                  return -n;
                })
                .map(e => {
                  let [t] = e;
                  return t;
                })
                .take(this.numFrequentlyItems)
                .value()),
              (this.dirty = !1),
              this.afterCompute(this.usageHistory, this._frequently);
          }
          get frequently() {
            return this.dirty && this.compute(), this._frequently;
          }
          set frequently(e) {
            this._frequently = e;
          }
          constructor({
            computeBonus: e,
            computeWeight: t,
            lookupKey: n,
            afterCompute: s,
            numFrequentlyItems: i = 32,
            maxSamples: r = 10,
          }) {
            (this.computeBonus = e),
              (this.computeWeight = t),
              (this.afterCompute = s),
              (this.lookupKey = n),
              (this.usageHistory = {}),
              (this.frequently = []),
              (this.maxSamples = r),
              (this.numFrequentlyItems = i),
              (this.dirty = !1);
          }
        };
    },
    979911: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          MessageDataType: function () {
            return i;
          },
          isMessageDataEdit: function () {
            return D;
          },
          getFailedMessageId: function () {
            return N;
          },
          default: function () {
            return b;
          },
        }),
        n("222007");
      var s,
        i,
        r,
        a,
        o = n("627445"),
        d = n.n(o),
        u = n("981980"),
        l = n("872717"),
        f = n("798609"),
        _ = n("716241"),
        c = n("605250"),
        g = n("676574"),
        m = n("618421"),
        h = n("271938"),
        v = n("985365"),
        E = n("718517"),
        p = n("254490"),
        y = n("231987"),
        T = n("980134"),
        C = n("282928"),
        S = n("49111");
      let I = null;
      __OVERLAY__ && (I = n("901165").default),
        ((r = s || (s = {})).OVERLAY_UNLOCKED = "overlay_unlocked"),
        (r.OVERLAY_UNLOCKED_PINNED = "overlay_unlocked_pinned"),
        (r.OVERLAY_LOCKED_ACTIVATED = "overlay_locked_activated"),
        ((a = i || (i = {}))[(a.SEND = 0)] = "SEND"),
        (a[(a.EDIT = 1)] = "EDIT"),
        (a[(a.COMMAND = 2)] = "COMMAND");
      let A = e => 0 === e.type,
        D = e => 1 === e.type,
        N = e =>
          A(e)
            ? e.message.nonce
            : D(e)
              ? e.message.messageId
              : e.message.data.id,
        O = [1 * E.default.Millis.SECOND, 5 * E.default.Millis.MINUTE];
      class P extends y.default {
        isFull() {
          return this.queue.length >= this.maxSize;
        }
        drain(e, t) {
          switch (
            (this.logger.log("Draining Message Queue with: ", e.type), e.type)
          ) {
            case 0:
              this.handleSend(e.message, t);
              break;
            case 1:
              this.handleEdit(e.message, t);
              break;
            case 2:
              this.handleCommand(e.message, t);
          }
        }
        cancelRequest(e) {
          var t;
          null === (t = this.requests.get(e)) || void 0 === t || t.abort(),
            this.requests.delete(e),
            this.cancelQueueMetricTimers(e);
        }
        startQueueMetricTimers(e) {
          let t = O.map(e =>
            setTimeout(() => {
              (0, _.trackWithMetadata)(S.AnalyticEvents.SEND_MESSAGE_QUEUED, {
                queued_duration_ms: e,
              });
            }, e)
          );
          this.analyticsTimeouts.set(e, t);
        }
        cancelQueueMetricTimers(e) {
          var t;
          null === (t = this.analyticsTimeouts.get(e)) ||
            void 0 === t ||
            t.forEach(clearTimeout),
            this.analyticsTimeouts.delete(e);
        }
        createResponseHandler(e, t) {
          return n => {
            if (
              (null != e &&
                (this.requests.delete(e), this.cancelQueueMetricTimers(e)),
              n.hasErr)
            )
              return t(null, n);
            null != n.body &&
            (n.body.code === S.AbortCodes.SLOWMODE_RATE_LIMITED ||
              n.body.code === S.AbortCodes.CHANNEL_FOLLOWING_EDIT_RATE_LIMITED)
              ? t(null, n)
              : 429 === n.status
                ? t({
                    retryAfter: n.body.retry_after * E.default.Millis.SECOND,
                  })
                : t(null, n);
          };
        }
        handleSend(e, t) {
          let n;
          let { channelId: s, file: i, filename: r, ...a } = e,
            o = (0, m.getSignalStrength)(),
            d = {
              mobile_network_type: v.default.getType(),
              ...a,
              ...(null != o && { signal_strength: o }),
            };
          if (g.default.get("send_fail_100")) {
            this.logger.log(
              "Skipping message sened because send_fail_100 is enabled"
            ),
              t(null, {
                ok: !1,
                hasErr: !1,
                status: 500,
                headers: {},
                body: "{}",
                text: "Simulated failure",
              });
            return;
          }
          null != I &&
            (I.isInstanceUILocked()
              ? (n = { location: "overlay_locked_activated" })
              : !I.isInstanceUILocked() &&
                (n = I.isPinned(S.OverlayWidgets.TEXT)
                  ? { location: "overlay_unlocked_pinned" }
                  : { location: "overlay_unlocked" }));
          let f = this.createResponseHandler(e.nonce, t),
            _ = new AbortController();
          if (
            (this.startQueueMetricTimers(e.nonce),
            null != i && null != r && "" !== r)
          )
            l.default.post(
              {
                url: S.Endpoints.MESSAGES(s),
                fields: Object.entries(d).map(e => {
                  let [t, n] = e;
                  return { name: t, value: n };
                }),
                attachments: [{ name: "file", file: i, filename: r }],
                context: n,
                oldFormErrors: !0,
                signal: _.signal,
                onRequestCreated: () => {
                  null != e.nonce && this.requests.set(e.nonce, _);
                },
              },
              f
            );
          else {
            let t = {
              timeout: 60 * E.default.Millis.SECOND,
              retries: 3,
              backoff: new u.default(),
            };
            l.default.post(
              {
                url: S.Endpoints.MESSAGES(s),
                body: d,
                context: n,
                oldFormErrors: !0,
                ...t,
                signal: _.signal,
                onRequestCreated: () => {
                  null != e.nonce && this.requests.set(e.nonce, _);
                },
              },
              f
            );
          }
        }
        handleEdit(e, t) {
          let { channelId: n, messageId: s, ...i } = e,
            r = new AbortController();
          l.default.patch(
            {
              url: S.Endpoints.MESSAGE(n, s),
              body: i,
              retries: 1,
              oldFormErrors: !0,
              signal: r.signal,
              onRequestCreated: () => {
                this.requests.set(s, r);
              },
            },
            this.createResponseHandler(s, t)
          );
        }
        handleCommand(e, t) {
          let n,
            {
              applicationId: s,
              guildId: i,
              channelId: r,
              data: a,
              nonce: o,
              attachments: u,
              maxSizeCallback: _,
              analytics_location: c,
            } = e,
            g = {
              type: f.InteractionTypes.APPLICATION_COMMAND,
              application_id: s,
              guild_id: i,
              channel_id: r,
              session_id: h.default.getSessionId(),
              data: a,
              nonce: o,
              analytics_location: c,
            };
          if (null != u) {
            (g.data.attachments = []), (n = []);
            g.data.attachments = u.map(
              (e, t) => (
                d(
                  e.status === C.CloudUploadStatus.COMPLETED,
                  "Uploads must be staged before trying to send a message"
                ),
                (0, T.getAttachmentPayload)(e, t)
              )
            );
          }
          let m = new AbortController();
          l.default.post(
            {
              url: S.Endpoints.INTERACTIONS,
              fields: [{ name: "payload_json", value: JSON.stringify(g) }],
              attachments: n,
              signal: m.signal,
              onRequestCreated: e => {
                this.requests.set(o, m),
                  e.on("progress", e => {
                    let { total: t } = e,
                      n = (0, p.maxFileSize)(i);
                    null != t &&
                      t > n &&
                      (this.cancelRequest(o), null == _ || _(n));
                  });
              },
            },
            this.createResponseHandler(o, t)
          );
        }
        constructor(e = 5) {
          super(new c.default("MessageQueue")),
            (this.maxSize = e),
            (this.requests = new Map()),
            (this.analyticsTimeouts = new Map());
        }
      }
      var b = new P();
    },
    390933: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        }),
        n("70102");
      var s,
        i = n("522632"),
        r = n("872717"),
        a = n("605250"),
        o = n("718517"),
        d = n("49111");
      class u {
        async fetch(e, t, n) {
          if (!this.isCanceled)
            try {
              let i = await this.makeRequest();
              if (null == i || this.isCanceled) return;
              if (200 === i.status) e(i);
              else if (202 === i.status) {
                var s;
                if (
                  ((this.query.attempts =
                    (null !== (s = this.query.attempts) && void 0 !== s
                      ? s
                      : 0) + 1),
                  this.query.attempts > 5)
                )
                  return;
                let r = i.body.retry_after * o.default.Millis.SECOND;
                (this.retryDelay = isNaN(r) || 0 === r ? 5e3 : r),
                  this.retryLater(e, t, n),
                  t(i);
              }
            } catch (e) {
              new (0, a.default)("SearchFetcher").error(e), n(e);
            }
        }
        cancel() {
          (this.isCanceled = !0),
            null != this.indexingPollId && clearTimeout(this.indexingPollId);
        }
        retryLater(e, t, n) {
          null != this.indexingPollId && clearTimeout(this.indexingPollId),
            (this.indexingPollId = setTimeout(
              this.fetch.bind(this, e, t, n),
              this.retryDelay
            ));
        }
        constructor(e, t, n) {
          (this.isCanceled = !1),
            (this.searchId = e),
            (this.searchType = t),
            (this.query = n);
        }
      }
      s = class extends u {
        getEndpoint() {
          switch (this.searchType) {
            case d.SearchTypes.DMS:
              return d.Endpoints.SEARCH_DMS;
            case d.SearchTypes.FAVORITES:
              return d.Endpoints.SEARCH_FAVORITES;
            case d.SearchTypes.GUILD:
              if (null == this.searchId || "" === this.searchId) return;
              return d.Endpoints.SEARCH_GUILD(this.searchId);
            case d.SearchTypes.CHANNEL:
              if (null == this.searchId || "" === this.searchId) return;
              return d.Endpoints.SEARCH_CHANNEL(this.searchId);
            default:
              throw Error(
                "[SearchFetcher] Unhandled search type: ".concat(
                  this.searchType
                )
              );
          }
        }
        makeRequest() {
          let e = this.getEndpoint();
          return null == e
            ? null
            : r.default.get({
                url: e,
                query: i.stringify(this.query),
                oldFormErrors: !0,
              });
        }
      };
    },
    201876: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        }),
        n("222007");
      var s,
        i = n("714617"),
        r = n.n(i);
      s = class {
        shouldCommit() {
          return !0;
        }
        setState(e) {
          this.state = { ...this.state, ...e };
        }
        getState() {
          return this.state;
        }
        reset() {
          (this.dirty = !1), (this.state = this.getInitialState());
        }
        update() {
          let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
            n = this.getNextState({ ...this.state, ...e });
          if (t) this.dirty = !r(n, this.getInitialState());
          else
            for (let e of Object.keys(n))
              this.dirty = this.dirty || !r(this.state[e], n[e]);
          return (
            (this.state = n),
            !!(this.dirty && this.shouldCommit()) &&
              ((this.dirty = !1), this.didCommit(this.state), !0)
          );
        }
        forceUpdate() {
          (this.dirty = !1), this.didCommit(this.state);
        }
        constructor() {
          (this.dirty = !1), (this.state = this.getInitialState());
        }
      };
    },
    572544: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return b;
          },
        }),
        n("222007");
      var s = n("746379"),
        i = n.n(s),
        r = n("394846"),
        a = n("913144"),
        o = n("970728"),
        d = n("79112"),
        u = n("389153"),
        l = n("412707"),
        f = n("139514"),
        _ = n("312016"),
        c = n("374021"),
        g = n("398604"),
        m = n("468560"),
        h = n("361572"),
        v = n("537325"),
        E = n("835174"),
        p = n("566271"),
        y = n("337543"),
        T = n("18494"),
        C = n("162771"),
        S = n("677099"),
        I = n("599110"),
        A = n("253981");
      n("545158");
      var D = n("49111");
      async function N(e, t) {
        await a.default.dispatch({
          type: "INVITE_MODAL_OPEN",
          invite: e,
          code: t,
          context: D.AppContext.APP,
        });
      }
      async function O(e) {
        var t;
        let n = y.default.getInvite(e.code);
        if (null == n) {
          let { invite: t } = await o.default.resolveInvite(
            e.code,
            "Markdown Link"
          );
          n = t;
        }
        if (null == n) return;
        if (
          n.state === D.InviteStates.EXPIRED ||
          n.state === D.InviteStates.BANNED ||
          n.state === D.InviteStates.ERROR
        ) {
          await N(n, e.code);
          return;
        }
        let s = S.default.getFlattenedGuildIds(),
          i =
            null == n
              ? void 0
              : null === (t = n.guild) || void 0 === t
                ? void 0
                : t.id,
          r = null != i && s.includes(i);
        r ? o.default.transitionToInviteSync(n) : await N(n, e.code);
      }
      let P = { skipExtensionCheck: void 0, analyticsLocations: [] };
      function b(e) {
        let t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : P,
          s = (0, _.findCodedLink)(e),
          { skipExtensionCheck: a } = t;
        if (
          null != s &&
          (s.type === f.CodedLinkType.INVITE ||
            s.type === f.CodedLinkType.EMBEDDED_ACTIVITY_INVITE)
        )
          return e => (null == e || e.preventDefault(), O(s), !0);
        if (null != s && s.type === f.CodedLinkType.APP_DIRECTORY_PROFILE)
          return e => {
            var t;
            null == e || e.preventDefault();
            let { code: i } = s,
              a =
                null !== (t = C.default.getGuildId()) && void 0 !== t
                  ? t
                  : void 0;
            return (
              I.default.track(
                D.AnalyticEvents.APP_DIRECTORY_PROFILE_EMBED_URL_CLICKED,
                {
                  application_id: i,
                  device_platform: r.isMobile ? "mobile_web" : "desktop_web",
                  guild_id: a,
                  channel_id: T.default.getChannelId(),
                }
              ),
              n
                .el("646186")
                .then(n.bind(n, "646186"))
                .then(e => {
                  let { goToAppDirectory: t } = e,
                    { ApplicationDirectoryViews: s } = n("412707");
                  t({
                    view: s.APPLICATION,
                    applicationId: i,
                    guildId: a,
                    entrypoint: {
                      name: l.ApplicationDirectoryEntrypointNames
                        .APPLICATION_DIRECTORY_URL,
                    },
                  });
                }),
              !0
            );
          };
        if (null != s && s.type === f.CodedLinkType.GUILD_PRODUCT)
          return e => {
            null == e || e.preventDefault();
            let [t, i] = s.code.split("-");
            return (
              n
                .el("573777")
                .then(n.bind(n, "573777"))
                .then(e => {
                  let { openGuildProductLink: n } = e;
                  n(t, i);
                }),
              !0
            );
          };
        let { path: o, hostname: y = "", host: S, query: N } = i.parse(e),
          b =
            A.default.isDiscordHostname(y) ||
            A.default.isDiscordLocalhost(S, y);
        if (
          b &&
          (null == o ? void 0 : o.startsWith("/application-directory"))
        ) {
          let [, , e, t] = o.split("/"),
            s = null != e && (0, u.isSnowflake)(e) ? e : void 0;
          return i => {
            var a;
            null == i || i.preventDefault();
            let { ApplicationDirectoryProfileSections: o } = n("750947"),
              { ApplicationDirectoryViews: d } = n("412707"),
              u =
                null !== (a = C.default.getGuildId()) && void 0 !== a
                  ? a
                  : void 0,
              f = d.HOME;
            return (
              "search" === e && (f = d.SEARCH),
              null != s &&
                ((f = d.APPLICATION),
                I.default.track(
                  D.AnalyticEvents.APP_DIRECTORY_PROFILE_EMBED_URL_CLICKED,
                  {
                    application_id: s,
                    device_platform: r.isMobile ? "mobile_web" : "desktop_web",
                    guild_id: u,
                    channel_id: T.default.getChannelId(),
                  }
                )),
              n
                .el("646186")
                .then(n.bind(n, "646186"))
                .then(e => {
                  let { goToAppDirectory: n } = e;
                  n({
                    view: f,
                    applicationId: s,
                    guildId: u,
                    applicationSection: (0, m.default)(o, t),
                    entrypoint: {
                      name: l.ApplicationDirectoryEntrypointNames
                        .APPLICATION_DIRECTORY_URL,
                    },
                  });
                }),
              !0
            );
          };
        }
        if (null != o && b && A.default.isAppRoute(o)) {
          let e = null != N ? { search: N } : null;
          return t => (
            null == t || t.preventDefault(), (0, v.default)(o, e), !0
          );
        }
        if (null != o && b) {
          let {
              getOAuth2AuthorizeProps: t,
              openOAuth2ModalWithCreateGuildModal: s,
            } = n("33942"),
            i = t(e);
          if (null != i)
            return e => (null == e || e.preventDefault(), s(i), !0);
        }
        let V = (0, h.tryParseEventDetailsPath)(o);
        if (null != o && b && null != V)
          return e => {
            null == e || e.preventDefault();
            let t = C.default.getGuildId();
            null != V.guildId &&
              "" !== V.guildId &&
              V.guildId !== t &&
              (0, v.default)(D.Routes.CHANNEL(V.guildId));
            let n = g.default.getGuildScheduledEvent(V.guildEventId);
            return (
              null != n && (0, c.openGuildEventDetails)({ eventId: n.id }), !0
            );
          };
        if (b && (null == o ? void 0 : o.startsWith("/settings/"))) {
          let { default: e } = n("777523"),
            t = e(o);
          if (null != t)
            return e => (
              null == e || e.preventDefault(),
              d.default.open(t.section, t.subsection, {
                openWithoutBackstack: !1,
                impressionSource: t.source,
              }),
              !0
            );
        }
        if (!a && null != (0, p.isSuspiciousDownload)(e))
          return t => (null == t || t.preventDefault(), E.default.show(e), !0);
      }
    },
    661736: function (e, t, n) {
      "use strict";
      function s(e, t, n) {
        let s;
        let i = [],
          r = function () {
            for (var a = arguments.length, o = Array(a), d = 0; d < a; d++)
              o[d] = arguments[d];
            let u = Date.now();
            for (
              null != s && (clearTimeout(s), (s = null));
              i.length > 0 && i[0] <= u;

            )
              i.shift();
            i.length < e
              ? (i.push(u + t), n(...o))
              : (s = setTimeout(() => r(...o), i[0] - u));
          };
        return r;
      }
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        }),
        n("424973"),
        n("222007");
    },
    282928: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          CloudUploadStatus: function () {
            return s;
          },
          CloudUpload: function () {
            return T;
          },
        }),
        n("222007"),
        n("70102");
      var s,
        i,
        r = n("917351"),
        a = n.n(r),
        o = n("981980"),
        d = n("872717"),
        u = n("605250"),
        l = n("676574"),
        f = n("668273"),
        _ = n("994440"),
        c = n("718517"),
        g = n("286235"),
        m = n("980134"),
        h = n("966724"),
        v = n("142852"),
        E = n("49111");
      let p = new u.default("CloudUpload.tsx"),
        y = n("123010").default;
      ((i = s || (s = {})).NOT_STARTED = "NOT_STARTED"),
        (i.STARTED = "STARTED"),
        (i.UPLOADING = "UPLOADING"),
        (i.ERROR = "ERROR"),
        (i.COMPLETED = "COMPLETED"),
        (i.CANCELED = "CANCELED");
      class T extends h.default {
        static fromJson(e) {
          let {
              item: t,
              channelId: n,
              showLargeMessageDialog: s,
              reactNativeFileIndex: i,
            } = e,
            r = new T(t, n, s, i);
          return (
            "COMPLETED" !== r.status && (r.status = "NOT_STARTED"),
            Object.entries(e).forEach(e => {
              let [t, n] = e;
              !t.startsWith("_") && (r[t] = n);
            }),
            r
          );
        }
        retryOpts() {
          return this.item.platform === h.UploadPlatform.REACT_NATIVE
            ? {
                timeout: 1 * c.default.Millis.HOUR,
                backoff: new o.default(
                  0.5 * c.default.Millis.SECOND,
                  30 * c.default.Millis.MINUTE
                ),
                retries: 12,
              }
            : {
                timeout: 1 * c.default.Millis.HOUR,
                retries: 12,
                backoff: new o.default(),
              };
        }
        async uploadFileToCloudAsChunks(e) {
          if (null == this.responseUrl || "" === this.responseUrl)
            throw Error("_uploadFileToCloudAsChunks - responseUrl is not set");
          let {
              contentType: t,
              fileSize: n,
              bufferedFileData: s,
            } = await this.prepareChunkUploadItem(),
            i = Math.ceil(n / e);
          for (let r = 0; r < i; r++) {
            p.info(
              "Uploading chunk "
                .concat(r + 1, " of ")
                .concat(i, " for file id ")
                .concat(this.id)
            );
            let a = r * e,
              o = Math.min(a + e, n),
              d = await this.getChunk(a, o, s);
            try {
              await this.uploadChunk({
                chunk: d,
                start: a,
                end: o,
                totalSize: n,
                sessionUrl: this.responseUrl,
                contentType: t,
              });
            } catch (e) {
              throw (
                (p.error(
                  "Error uploading chunk "
                    .concat(r + 1, " for file id ")
                    .concat(this.id, ": ")
                    .concat(e)
                ),
                e)
              );
            }
          }
          p.log("Upload complete for file id ".concat(this.id));
        }
        async prepareChunkUploadItem() {
          let e, t, n;
          if (this.item.platform === h.UploadPlatform.REACT_NATIVE) {
            let s = this.item;
            if (
              ((e =
                null != s.mimeType && "" !== s.mimeType
                  ? s.mimeType
                  : "application/octet-stream"),
              null == s.size || 0 === s.size || isNaN(s.size))
            )
              try {
                t = await (0, m.getFileContentLength)(s.uri);
              } catch (e) {
                p.warn(
                  "Failed to peek content length for file id "
                    .concat(this.id, ", reading whole file instead: ")
                    .concat(e)
                ),
                  (t = (n = await (0, m.getFileData)(s.uri)).size);
              }
            else t = s.size;
          } else (e = "application/octet-stream"), (t = this.item.file.size);
          return { contentType: e, fileSize: t, bufferedFileData: n };
        }
        async getChunk(e, t, n) {
          return this.item.platform !== h.UploadPlatform.REACT_NATIVE
            ? this.item.file.slice(e, t)
            : null != n
              ? n.slice(e, t)
              : await (0, m.getFileChunk)(this.item.uri, e, t);
        }
        async uploadChunk(e) {
          let t = {
            "Content-Type": e.contentType,
            "Content-Range": "bytes "
              .concat(e.start, "-")
              .concat(e.end - 1, "/")
              .concat(e.totalSize),
          };
          for (let n = 1; n <= 3; n++) {
            p.log(
              "Attempt "
                .concat(n, " for file id ")
                .concat(this.id, " : Uploading chunk ")
                .concat(e.start, "-")
                .concat(e.end - 1, " of ")
                .concat(e.totalSize, " bytes")
            );
            let s = a.throttle(t => {
              let n = e.start + t.loaded;
              this.emit("progress", n, e.totalSize, n - this.loaded),
                (this.loaded = n);
            }, 50);
            try {
              let n = await d.default.put({
                url: e.sessionUrl,
                body: e.chunk,
                headers: t,
                signal: this._abortController.signal,
                onRequestProgress: s,
                ...this.retryOpts(),
              });
              if (n.ok) return;
            } catch (t) {
              if (!this.RESUME_INCOMPLETE_CODES.includes(t.status)) throw t;
              if (this.isUnsuccessfulChunkUpload(t, e.end - 1)) {
                p.error(
                  "Incomplete chunk upload for file id "
                    .concat(this.id, ": ")
                    .concat(t.status)
                );
                continue;
              }
              return;
            }
          }
          throw Error("Failed to upload chunk");
        }
        isUnsuccessfulChunkUpload(e, t) {
          if (null == e.headers.range || "" === e.headers.range) return !0;
          let n = e.headers.range.match(/bytes=(\d+)-(\d+)/);
          return null !== n && parseInt(n[2], 10) !== t;
        }
        uploadFileToCloud() {
          let e, t;
          if (null == this.responseUrl)
            throw Error("_uploadFileToCloud - responseUrl is not set");
          p.log("Uploading ".concat(this.id)),
            this.item.platform === h.UploadPlatform.REACT_NATIVE
              ? (t =
                  null !=
                    (e = {
                      type: this.item.mimeType,
                      uri: this.item.uri,
                      name: this.item.filename,
                    }).type && "application/json" !== e.type
                    ? e.type
                    : "application/octet-stream")
              : ((e = this.item.file), (t = "application/octet-stream"));
          let n = a.throttle(e => {
              this.emit("progress", e.loaded, e.total, e.loaded - this.loaded),
                (this.loaded = e.loaded);
            }, 50),
            s = { "Content-Type": t };
          return d.default.put({
            url: this.responseUrl,
            body: e,
            headers: s,
            signal: this._abortController.signal,
            onRequestProgress: n,
            ...this.retryOpts(),
          });
        }
        async getSize() {
          var e;
          return null !== (e = this.currentSize) && void 0 !== e ? e : 0;
        }
        async upload() {
          var e, t, n;
          if ("COMPLETED" === this.status) return;
          if ((this.setStatus("STARTED"), "CANCELED" === this.status)) {
            this.handleComplete(this.id);
            return;
          }
          let s = await y.getUploadPayload(this),
            i = (0, v.getUploadTarget)(this.item.target);
          if (
            null == s.filename ||
            "" === s.filename ||
            0 === this.currentSize
          ) {
            p.error(
              "File does not have a filename or size is 0.",
              JSON.stringify(s)
            ),
              this.handleError(E.AbortCodes.INVALID_FILE_ASSET);
            return;
          }
          if (
            (null !== (e = this.currentSize) && void 0 !== e ? e : 0) >
            i.getMaxFileSize(this.channelId)
          ) {
            this.handleError(E.AbortCodes.ENTITY_TOO_LARGE);
            return;
          }
          if (l.default.get("upload_fail_50") && 0.5 > Math.random()) {
            setTimeout(() => {
              this.handleError(500);
            }, 1e3);
            return;
          }
          try {
            p.log("Requesting upload url for ".concat(this.id));
            let e = await d.default.post({
              url: i.getCreateAttachmentURL(this.channelId),
              body: { files: [s] },
              ...this.retryOpts(),
            });
            this.setResponseUrl(e.body.attachments[0].upload_url),
              this.setUploadedFilename(e.body.attachments[0].upload_filename);
          } catch (s) {
            let e =
              null !==
                (n =
                  null == s
                    ? void 0
                    : null === (t = s.body) || void 0 === t
                      ? void 0
                      : t.code) && void 0 !== n
                ? n
                : s.status;
            e !== E.AbortCodes.ENTITY_TOO_LARGE &&
              (p.error(
                "Requesting upload url failed with code "
                  .concat(null != e ? e : JSON.stringify(s.body), " for ")
                  .concat(this.id)
              ),
              g.default.captureException(s)),
              this.handleError(e);
            return;
          }
          try {
            let e;
            let t = f.default.getCurrentConfig(
              { location: "CloudUpload" },
              { autoTrackExposure: !0 }
            );
            (e =
              t.enabled && t.chunkSize > 0
                ? await this.uploadFileToCloudAsChunks(t.chunkSize)
                : await this.uploadFileToCloud()),
              this.handleComplete(e);
          } catch (e) {
            "CANCELED" === this.status
              ? this.handleComplete(e)
              : (p.info(
                  "Error: status ".concat(e.status, " for ").concat(this.id)
                ),
                this.handleError(e));
          }
        }
        async reactNativeCompressAndExtractData() {
          var e, t;
          if (
            !(0, v.getUploadTarget)(this.item.target)
              .shouldReactNativeCompressUploads
          ) {
            p.log(
              "reactNativeCompressAndExtractData() disabled by upload target"
            );
            return;
          }
          if (!0 === this.reactNativeFilePrepped) {
            p.log(
              "reactNativeCompressAndExtractData() file already prepped - ".concat(
                this.id
              )
            );
            return;
          }
          p.log("Starting compression/conversion for ".concat(this.id));
          let n = await (0, _.getAttachmentFile)(
            this,
            null !== (e = this.reactNativeFileIndex) && void 0 !== e ? e : 0
          );
          if (null == n || null == n.file) return;
          let s = n.uri,
            i = n.file.name,
            r = n.file.type;
          if (((this.filename = i), null == i || null == s || null == r))
            throw (
              (p.error(
                "Insufficient file data: "
                  .concat({ filename: i, uri: s, mimeType: r }, " for ")
                  .concat(this.id)
              ),
              Error(
                "Insufficient file data: ".concat({
                  filename: i,
                  uri: s,
                  mimeType: r,
                })
              ))
            );
          let a =
            null !== (t = n.fileSize) && void 0 !== t
              ? t
              : (await (0, m.getFileData)(s)).size;
          if (
            ((this.postCompressionSize = a), (this.currentSize = a), null == a)
          )
            throw (
              (p.error("Size missing from file data for ".concat(this.id)),
              Error("Size missing from file data"))
            );
          p.log(
            "Completed compression and conversion. Output size="
              .concat(a, " bytes; filename=")
              .concat(i, " for ")
              .concat(this.id)
          );
          (this.item = { ...this.item, uri: s, filename: i, mimeType: r }),
            (this.reactNativeFilePrepped = !0);
        }
        handleError(e) {
          this.setStatus("ERROR"), (this.error = e);
          try {
            this.emit("error", e);
          } catch {}
          this.removeAllListeners();
        }
        handleComplete(e) {
          this.setStatus("COMPLETED"),
            p.log("Upload complete for ".concat(this.id)),
            this.emit("complete", e),
            this.removeAllListeners();
        }
        cancel() {
          p.log("Cancelled called for ".concat(this.id)),
            this._abortController.abort(),
            "COMPLETED" === this.status && this.delete(),
            this.setStatus("CANCELED"),
            this.emit("complete"),
            this.removeAllListeners();
        }
        resetState() {
          return (
            (this.status = "NOT_STARTED"),
            (this.uploadedFilename = void 0),
            (this.responseUrl = void 0),
            (this.error = void 0),
            (this._abortController = new AbortController()),
            super.resetState()
          );
        }
        async delete() {
          if (null == this.uploadedFilename) return;
          let e = (0, v.getUploadTarget)(this.item.target).getDeleteUploadURL(
            this.uploadedFilename
          );
          try {
            await d.default.delete(e);
          } catch {}
        }
        setResponseUrl(e) {
          this.responseUrl = e;
        }
        setStatus(e) {
          this.status = e;
        }
        setFilename(e) {
          this.filename = e;
        }
        setUploadedFilename(e) {
          this.uploadedFilename = e;
        }
        constructor(e, t, n, s) {
          var i, r, a, o;
          super(e, n),
            (this.RESUME_INCOMPLETE_CODES = [308]),
            (this.status = "NOT_STARTED"),
            (this.loaded = 0),
            (this.reactNativeFilePrepped = !1),
            (this._aborted = !1),
            (this.channelId = t),
            (this.preCompressionSize =
              null !==
                (a = null === (i = e.file) || void 0 === i ? void 0 : i.size) &&
              void 0 !== a
                ? a
                : 0),
            (this.currentSize =
              null !==
                (o = null === (r = e.file) || void 0 === r ? void 0 : r.size) &&
              void 0 !== o
                ? o
                : 0),
            (this.reactNativeFileIndex = s),
            (this._abortController = new AbortController());
        }
      }
    },
    966724: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          UploadPlatform: function () {
            return r;
          },
          default: function () {
            return o;
          },
        });
      var s,
        i,
        r,
        a,
        o,
        d = n("44170"),
        u = n("917351"),
        l = n.n(u),
        f = n("748820"),
        _ = n("254490"),
        c = n("980134");
      ((s = r || (r = {}))[(s.REACT_NATIVE = 0)] = "REACT_NATIVE"),
        (s[(s.WEB = 1)] = "WEB"),
        ((i = a || (a = {}))[(i.FILE_ATTACHMENT = 0)] = "FILE_ATTACHMENT"),
        (i[(i.IMAGE_PICKER = 1)] = "IMAGE_PICKER"),
        (o = class extends d.EventEmitter {
          cancel() {}
          resetState() {
            return this;
          }
          constructor(e, t) {
            var n, s;
            if ((super(), (this.item = e), 0 === e.platform)) {
              this.id = null !== (n = e.id) && void 0 !== n ? n : e.uri;
              let t = (0, c.getFile)({
                uri: e.uri,
                overrideFilename: e.filename,
                overrideType: e.mimeType,
              });
              (this.filename = t.filename),
                (this.isImage = t.isImage),
                (this.isVideo = t.isVideo),
                (this.mimeType = t.type),
                (this.origin = e.origin),
                (this.durationSecs = e.durationSecs),
                (this.waveform = e.waveform),
                (this.isRemix = e.isRemix);
            } else
              (this.id =
                null !== (s = e.id) && void 0 !== s ? s : l.uniqueId("upload")),
                (this.classification = _.classifyFile(e.file)),
                (this.isImage = "image" === this.classification),
                (this.isVideo = "video" === this.classification),
                (this.filename = e.file.name),
                (this.mimeType = e.file.type);
            (this.isThumbnail = e.isThumbnail),
              (this.clip = e.clip),
              (this.uniqueId = (0, f.v4)()),
              (this.showLargeMessageDialog = t),
              (this.spoiler = !1),
              (this.description = null);
          }
        });
    },
    142852: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          UploadTargets: function () {
            return i;
          },
          getUploadTarget: function () {
            return f;
          },
        });
      var s,
        i,
        r = n("572679"),
        a = n("42203"),
        o = n("254490"),
        d = n("980134"),
        u = n("49111");
      class l {
        getCreateAttachmentURL(e) {
          return u.Endpoints.MESSAGE_CREATE_ATTACHMENT_UPLOAD(e);
        }
        getDeleteUploadURL(e) {
          return u.Endpoints.MESSAGE_DELETE_UPLOAD(e);
        }
        getMaxFileSize(e) {
          let t = a.default.getBasicChannel(e);
          return o.maxFileSize(null == t ? void 0 : t.guild_id);
        }
        getMaxAttachmentsCount() {
          return u.MAX_UPLOAD_COUNT;
        }
        getMaxTotalAttachmentSize() {
          return d.MAX_TOTAL_ATTACHMENT_SIZE;
        }
        get shouldReactNativeCompressUploads() {
          return !0;
        }
      }
      function f(e) {
        if (1 === e) return new r.default();
        return new l();
      }
      ((s = i || (i = {}))[(s.MESSAGE_ATTACHMENT = 0)] = "MESSAGE_ATTACHMENT"),
        (s[(s.GUILD_PRODUCT_ATTACHMENT = 1)] = "GUILD_PRODUCT_ATTACHMENT");
    },
    402752: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          doesImageMatchUpload: function () {
            return i;
          },
          calculateProgress: function () {
            return r;
          },
        });
      var s = n("966724");
      function i(e, t) {
        if (t.id === e.uri || (null != t.id && t.id === e.id)) return !0;
        if (t.item.platform === s.UploadPlatform.REACT_NATIVE) {
          let { item: s } = t,
            { filename: i } = e;
          if (s.originalUri === e.uri) return !0;
          if (null != i) {
            var n;
            if (
              null === (n = s.originalUri) || void 0 === n
                ? void 0
                : n.includes(i)
            )
              return !0;
          }
        }
        return !1;
      }
      function r(e, t) {
        return 0 === t ? 0 : Math.min(Math.floor((e / t) * 100), 100);
      }
    },
    123010: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getUploadPayload: function () {
            return d;
          },
          default: function () {
            return u;
          },
        });
      var s = n("627445"),
        i = n.n(s),
        r = n("917351"),
        a = n.n(r),
        o = n("66175");
      function d(e) {
        var t, n;
        let s = e.item.file;
        return (
          i(null != s, "file data must not be empty"),
          {
            filename: s.name,
            file_size: s.size,
            id: a.uniqueId(),
            is_clip: null != e.clip,
            title: null === (t = e.clip) || void 0 === t ? void 0 : t.name,
            application_id:
              null === (n = e.clip) || void 0 === n ? void 0 : n.applicationId,
            clip_created_at:
              null != e.clip ? (0, o.getClipCreatedAt)(e.clip.id) : void 0,
            clip_participant_ids:
              null != e.clip
                ? (0, o.getClipParticipantIds)(e.clip.users)
                : void 0,
          }
        );
      }
      var u = { getUploadPayload: d };
    },
    427953: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          isActivityInTextSupportedForChannelType: function () {
            return u;
          },
          isActivitiesInTextEnabled: function () {
            return f;
          },
          useIsActivitiesInTextEnabled: function () {
            return _;
          },
          useActivitiesInTextButtonVisibility: function () {
            return c;
          },
        });
      var s = n("298386"),
        i = n("446674"),
        r = n("862205"),
        a = n("42203");
      let o = (0, r.createExperiment)({
          kind: "user",
          id: "2023-08_activities_in_text",
          label: "Activities in Text User",
          defaultConfig: { enabled: !1 },
          treatments: [
            {
              id: 1,
              label: "enable Activities in text channels",
              config: {
                enabled: !0,
                showInOmniButtonMenu: !0,
                showChatInputButton: !1,
              },
            },
            {
              id: 3,
              label:
                "enable Activities in text with the rocket button in chat input",
              config: {
                enabled: !0,
                showInOmniButtonMenu: !1,
                showChatInputButton: !0,
              },
            },
          ],
        }),
        d = (0, r.createExperiment)({
          kind: "guild",
          id: "2023-11_activities_in_text_guild",
          label: "Activities in Text Guild",
          defaultConfig: { enabled: !1 },
          treatments: [
            {
              id: 1,
              label: "enable Activities in text channels",
              config: {
                enabled: !0,
                showInOmniButtonMenu: !0,
                showChatInputButton: !1,
              },
            },
            {
              id: 3,
              label:
                "enable Activities in text with the rocket button in chat input",
              config: {
                enabled: !0,
                showInOmniButtonMenu: !1,
                showChatInputButton: !0,
              },
            },
          ],
        });
      function u(e) {
        return [
          s.ChannelTypes.GUILD_TEXT,
          s.ChannelTypes.GROUP_DM,
          s.ChannelTypes.DM,
        ].includes(e);
      }
      function l(e) {
        return null != e && u(e.type);
      }
      function f(e, t) {
        if (null == e) return !1;
        let n = u(e.type);
        return (null == e ? void 0 : e.guild_id) != null
          ? d.getCurrentConfig(
              { guildId: e.guild_id, location: t },
              { autoTrackExposure: !1 }
            ).enabled && n
          : o.getCurrentConfig({ location: t }, { autoTrackExposure: !1 })
              .enabled && n;
      }
      function _(e, t) {
        let n = (0, i.useStateFromStores)([a.default], () =>
            a.default.getChannel(e)
          ),
          s = l(n),
          r = (null == n ? void 0 : n.guild_id) != null ? d : o,
          u = r.useExperiment(
            { guildId: null == n ? void 0 : n.guild_id, location: t },
            { autoTrackExposure: !1 }
          );
        return u.enabled && s;
      }
      function c(e, t) {
        let n = (0, i.useStateFromStores)([a.default], () =>
            a.default.getChannel(e)
          ),
          s = l(n),
          r = o.useExperiment({ location: t }, { autoTrackExposure: !1 });
        return r.enabled && s
          ? {
              showInOmniButtonMenu: r.showInOmniButtonMenu,
              showChatInputButton: r.showChatInputButton,
            }
          : null;
      }
    },
    84460: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        }),
        n("702976");
      var s = n("446674"),
        i = n("913144"),
        r = n("845579"),
        a = n("568734"),
        o = n("49111");
      function d() {
        return {
          lastUsedObject: {},
          useActivityUrlOverride: !1,
          activityUrlOverride: null,
          filter: "",
        };
      }
      let u = d(),
        l = null,
        f = [];
      class _ extends s.default.PersistedStore {
        initialize(e) {
          u = { ...d(), ...(null != e ? e : {}) };
        }
        getState() {
          return u;
        }
        getIsEnabled() {
          return r.DeveloperMode.getSetting() && f.length > 0;
        }
        getLastUsedObject() {
          return u.lastUsedObject;
        }
        getUseActivityUrlOverride() {
          return this.getIsEnabled() && u.useActivityUrlOverride;
        }
        getActivityUrlOverride() {
          return this.getIsEnabled() ? u.activityUrlOverride : null;
        }
        getFetchState() {
          return l;
        }
        getFilter() {
          return this.getIsEnabled() ? u.filter : "";
        }
        getDeveloperShelfItems() {
          return this.getIsEnabled() ? f : [];
        }
        inDevModeForApplication(e) {
          return this.getIsEnabled() && null != f.find(t => t.id === e);
        }
      }
      (_.displayName = "DeveloperActivityShelfStore"),
        (_.persistKey = "DeveloperActivityShelfStore"),
        (_.migrations = [e => (delete e.isEnabled, { ...e })]);
      var c = new _(i.default, {
        LOGOUT: function () {
          (u = d()), (l = null), (f = []);
        },
        DEVELOPER_ACTIVITY_SHELF_TOGGLE_USE_ACTIVITY_URL_OVERRIDE: function () {
          u.useActivityUrlOverride = !u.useActivityUrlOverride;
        },
        DEVELOPER_ACTIVITY_SHELF_SET_ACTIVITY_URL_OVERRIDE: function (e) {
          let { activityUrlOverride: t } = e;
          u.activityUrlOverride = t;
        },
        DEVELOPER_ACTIVITY_SHELF_MARK_ACTIVITY_USED: function (e) {
          let { applicationId: t, timestamp: n } = e;
          if (null == f.find(e => e.id === t)) return !1;
          u.lastUsedObject[t] = n;
        },
        DEVELOPER_ACTIVITY_SHELF_FETCH_START() {
          l = "loading";
        },
        DEVELOPER_ACTIVITY_SHELF_FETCH_SUCCESS: function (e) {
          let { items: t } = e;
          (l = "loaded"),
            (f = t.filter(
              e =>
                null != e.flags &&
                (0, a.hasFlag)(e.flags, o.ApplicationFlags.EMBEDDED)
            ));
        },
        DEVELOPER_ACTIVITY_SHELF_FETCH_FAIL: function (e) {
          let { type: t } = e;
          l = "errored";
        },
        DEVELOPER_ACTIVITY_SHELF_UPDATE_FILTER: function (e) {
          let { filter: t } = e;
          u.filter = t;
        },
        USER_SETTINGS_PROTO_UPDATE() {},
      });
    },
    191225: function (e, t, n) {
      "use strict";
      let s;
      n.r(t),
        n.d(t, {
          NO_ACTIVITIES: function () {
            return p;
          },
          default: function () {
            return H;
          },
        }),
        n("222007"),
        n("424973"),
        n("581081");
      var i = n("446674"),
        r = n("913144"),
        a = n("798609"),
        o = n("271938"),
        d = n("42203"),
        u = n("957255"),
        l = n("18494"),
        f = n("697218"),
        _ = n("773336"),
        c = n("711562"),
        g = n("334368"),
        m = n("420444"),
        h = n("272505"),
        v = n("49111");
      let E = {
          seenActivities: new Set(),
          seenNewActivities: {},
          seenUpdatedActivities: {},
          shouldShowNewActivityIndicator: !1,
          usersHavePlayedByApp: new Map(),
        },
        p = [],
        y = new Map(),
        T = new Map(),
        C = new Map(),
        S = !1,
        I = new Map(),
        A = new Map(),
        D = new Map(),
        N = new Map(),
        O = new Map(),
        P = new Map(),
        b = new Map();
      let V = h.ActivityPanelModes.DISCONNECTED,
        R = h.FocusedActivityLayouts.RESIZABLE;
      function k(e) {
        return null != e ? e : "0";
      }
      function M(e) {
        var t, n;
        let {
            guildId: s,
            channelId: i,
            applicationId: a,
            instanceId: l,
            userIds: f,
            activitySessionId: _,
          } = e,
          g = (0, c.default)(a);
        if (null == g) return;
        let m = d.default.getBasicChannel(i),
          h =
            (null != m &&
              u.default.canBasicChannel(v.BasicPermissions.CONNECT, m)) ||
            (null == m ? void 0 : m.type) === v.ChannelTypes.DM ||
            (null == m ? void 0 : m.type) === v.ChannelTypes.GROUP_DM;
        if (
          ((function (e, t) {
            var n;
            E.usersHavePlayedByApp.set(
              e,
              new Set([
                ...(null !== (n = E.usersHavePlayedByApp.get(e)) && void 0 !== n
                  ? n
                  : []),
                ...t,
              ])
            );
          })(a, f),
          !h)
        )
          return;
        let p = {
            activitySessionId: null != _ ? _ : l,
            applicationId: a,
            channelId: i,
            guildId: s,
            instanceId: l,
            url: g,
            userIds: new Set(f),
          },
          S = o.default.getId(),
          I = y.get(p.applicationId);
        f.some(e => e === S) &&
          null != I &&
          (y.set(I.applicationId, { ...I, ...p }),
          r.default.dispatch({
            type: "EMBEDDED_ACTIVITY_INSTANCE_CHANGE",
            channelId: i,
            instanceId: l,
          }));
        let A = null !== (t = C.get(i)) && void 0 !== t ? t : [],
          D = A.filter(e => e.applicationId !== a),
          N = k(s),
          O = null !== (n = T.get(N)) && void 0 !== n ? n : [],
          P = O.filter(e => !(e.applicationId === a && e.channelId === i));
        0 !== f.length && (D.push(p), P.push(p)), C.set(i, D), T.set(N, P);
      }
      function w(e) {
        let t = e.embedded_activities;
        t.forEach(t => {
          let { channel_id: n, embedded_activity: s, connections: i } = t;
          M({
            guildId: e.id,
            channelId: n,
            applicationId: s.application_id,
            instanceId: s.activity_id,
            userIds: i.map(e => e.user_id),
          });
        });
      }
      function L() {
        S = !1;
      }
      function U(e, t) {
        return "".concat(e, ":").concat(t);
      }
      class G extends i.default.PersistedStore {
        initialize(e) {
          var t;
          let n = new Map();
          Array.isArray(null == e ? void 0 : e.usersHavePlayedByApp) &&
            (null == e ||
              e.usersHavePlayedByApp.forEach(e => {
                if (Array.isArray(e)) {
                  let [t, s] = e;
                  "string" == typeof t &&
                    Array.isArray(s) &&
                    n.set(t, new Set(s));
                }
              }));
          let s = new Set(
            null !== (t = null == e ? void 0 : e.seenActivities) && void 0 !== t
              ? t
              : []
          );
          null != e &&
            (E = { ...e, seenActivities: s, usersHavePlayedByApp: n });
        }
        getState() {
          return E;
        }
        getSelfEmbeddedActivityForChannel(e) {
          var t;
          return null !==
            (t = Array.from(y.values()).find(t => {
              let { channelId: n } = t;
              return e === n;
            })) && void 0 !== t
            ? t
            : null;
        }
        getSelfEmbeddedActivities() {
          return y;
        }
        getEmbeddedActivitiesForGuild(e) {
          var t;
          return null !== (t = T.get(e)) && void 0 !== t ? t : p;
        }
        getEmbeddedActivitiesForChannel(e) {
          var t;
          return null !== (t = C.get(e)) && void 0 !== t ? t : p;
        }
        getEmbeddedActivitiesByChannel() {
          return C;
        }
        getEmbeddedActivityDurationMs(e, t) {
          let n = b.get(U(e, t));
          return null == n ? null : Date.now() - n;
        }
        isLaunchingActivity() {
          return S;
        }
        getShelfActivities(e) {
          var t;
          let n = k(e);
          return null !== (t = I.get(n)) && void 0 !== t ? t : [];
        }
        getShelfFetchStatus(e) {
          let t = k(e);
          return A.get(t);
        }
        shouldFetchShelf(e) {
          var t, n;
          let s = k(e),
            i =
              null !== (t = A.get(s)) && void 0 !== t ? t : { isFetching: !1 },
            r = Date.now(),
            a =
              r -
                (null !== (n = null == i ? void 0 : i.lastFetchTimestampMs) &&
                void 0 !== n
                  ? n
                  : 0) >
              216e5;
          return !(null == i ? void 0 : i.isFetching) && a;
        }
        getOrientationLockStateForApp(e) {
          var t;
          return null !== (t = D.get(e)) && void 0 !== t ? t : null;
        }
        getPipOrientationLockStateForApp(e) {
          var t;
          return null !== (t = N.get(e)) && void 0 !== t
            ? t
            : this.getOrientationLockStateForApp(e);
        }
        getGridOrientationLockStateForApp(e) {
          var t, n;
          return null !==
            (n = null !== (t = O.get(e)) && void 0 !== t ? t : N.get(e)) &&
            void 0 !== n
            ? n
            : this.getOrientationLockStateForApp(e);
        }
        getLayoutModeForApp(e) {
          return P.get(e);
        }
        getUsersHavePlayedByApp(e) {
          var t;
          return [
            ...(null !== (t = E.usersHavePlayedByApp.get(e)) && void 0 !== t
              ? t
              : []),
          ];
        }
        getConnectedActivityChannelId() {
          return s;
        }
        getActivityPanelMode() {
          return V;
        }
        getFocusedLayout() {
          return R;
        }
        getCurrentEmbeddedActivity() {
          var e;
          let t = this.getConnectedActivityChannelId();
          if (null != t)
            return null !== (e = this.getSelfEmbeddedActivityForChannel(t)) &&
              void 0 !== e
              ? e
              : void 0;
        }
      }
      (G.displayName = "EmbeddedActivitiesStore"),
        (G.persistKey = "EmbeddedActivities"),
        (G.migrations = [
          e => ({
            ...e,
            seenFeaturedActivities: [],
            shouldShowNewActivityIndicator: !1,
          }),
          e => (delete e.seenFeaturedActivities, { ...e, seenActivities: [] }),
          e => ({ ...e }),
          e => (
            delete e.currentFreeActivity,
            delete e.lastFreeActivityRotationTimestampMs,
            delete e.freePeriodActivities,
            delete e.shouldShowFreeActivityIndicator,
            { ...e }
          ),
          e => {
            var t;
            let n = new Set(
              null !== (t = e.seenActivities) && void 0 !== t ? t : []
            );
            return {
              ...e,
              seenActivities: n,
              seenNewActivities: {},
              seenUpdatedActivities: {},
            };
          },
        ]);
      let F = new G(r.default, {
        ACTIVITY_LAYOUT_MODE_UPDATE: function (e) {
          let { applicationId: t, layoutMode: n } = e;
          P.set(t, n);
        },
        CONNECTION_OPEN_SUPPLEMENTAL: function (e) {
          let { guilds: t } = e;
          C.clear(), T.clear(), t.forEach(e => w(e));
        },
        GUILD_CREATE: function (e) {
          let { guild: t } = e;
          w(t);
        },
        CALL_CREATE: function (e) {
          let { channelId: t, embeddedActivities: n } = e;
          !(function (e, t) {
            t.forEach(e => {
              let { channel_id: t, embedded_activity: n, connections: s } = e;
              M({
                guildId: null,
                channelId: t,
                applicationId: n.application_id,
                instanceId: n.activity_id,
                userIds: s.map(e => e.user_id),
              });
            });
          })(0, n);
        },
        CHANNEL_DELETE: function (e) {
          let { channel: t } = e;
          C.set(t.id, []);
          let n = t.guild_id;
          if (null != n) {
            var s;
            let e = k(n),
              i = null !== (s = T.get(e)) && void 0 !== s ? s : [],
              r = i.filter(e => e.channelId !== t.id);
            T.set(e, r);
          }
        },
        EMBEDDED_ACTIVITY_LAUNCH_START: function () {
          S = !0;
        },
        EMBEDDED_ACTIVITY_LAUNCH_SUCCESS: L,
        EMBEDDED_ACTIVITY_LAUNCH_FAIL: L,
        EMBEDDED_ACTIVITY_OPEN: function (e) {
          var t, n;
          let { channelId: i, applicationId: r } = e,
            a = (0, c.default)(r),
            u = o.default.getSessionId();
          if (
            null == a ||
            null == u ||
            (null === (t = y.get(r)) || void 0 === t ? void 0 : t.channelId) ===
              i
          )
            return !1;
          let _ = d.default.getChannel(i),
            g = null == _ ? void 0 : _.getGuildId(),
            v = f.default.getCurrentUser();
          if (
            (null == g &&
              !(
                null !== (n = null == _ ? void 0 : _.isPrivate()) &&
                void 0 !== n &&
                n
              )) ||
            null == v
          )
            return !1;
          (s = i),
            y.set(r, {
              guildId: g,
              channelId: i,
              applicationId: r,
              url: a,
              userIds: new Set([v.id]),
              connectedSince: Date.now(),
            }),
            (V =
              s !== l.default.getChannelId() || (0, m.default)(i)
                ? h.ActivityPanelModes.PIP
                : h.ActivityPanelModes.PANEL),
            b.set(U(i, r), Date.now());
        },
        EMBEDDED_ACTIVITY_CLOSE: function (e) {
          let { applicationId: t } = e,
            n = y.get(t);
          y.delete(t), (null == n ? void 0 : n.channelId) === s && (s = void 0);
        },
        EMBEDDED_ACTIVITY_INBOUND_UPDATE: function (e) {
          let {
            guildId: t,
            channelId: n,
            embeddedActivity: s,
            connections: i,
          } = e;
          M({
            guildId: t,
            channelId: n,
            applicationId: s.application_id,
            instanceId: s.activity_id,
            userIds: i.map(e => e.user_id),
          });
        },
        EMBEDDED_ACTIVITY_INBOUND_UPDATE_V2: function (e) {
          let {
            activitySessionId: t,
            applicationId: n,
            channelId: s,
            guildId: i,
            instanceId: r,
            userIds: a,
          } = e;
          M({
            guildId: i,
            channelId: s,
            applicationId: n,
            instanceId: r,
            userIds: a,
            activitySessionId: t,
          });
        },
        LOCAL_ACTIVITY_UPDATE: function (e) {
          var t;
          let { activity: n } = e;
          if (null == n) return !1;
          let s = y.get(
            null !== (t = n.application_id) && void 0 !== t ? t : ""
          );
          if (null == s) return !1;
          y.set(s.applicationId, { ...s });
        },
        EMBEDDED_ACTIVITY_SET_CONFIG: function (e) {
          let { applicationId: t, config: n } = e,
            s = y.get(t);
          null != s && y.set(s.applicationId, { ...s, config: n });
        },
        EMBEDDED_ACTIVITY_FETCH_SHELF: function (e) {
          let { guildId: t } = e,
            n = k(t),
            s = A.get(n);
          A.set(n, {
            isFetching: !0,
            lastFetchTimestampMs: null == s ? void 0 : s.lastFetchTimestampMs,
          });
        },
        EMBEDDED_ACTIVITY_FETCH_SHELF_SUCCESS: function (e) {
          let { guildId: t, activities: n } = e,
            s = k(t);
          I.set(s, n);
          let i = Date.now();
          !(function (e) {
            let { activities: t, now: n } = e;
            t.forEach(e => {
              let t = e.application_id,
                s = e.client_platform_config[(0, g.default)((0, _.getOS)())];
              if (
                (!E.seenActivities.has(t) &&
                  ((E.shouldShowNewActivityIndicator = !0),
                  E.seenActivities.add(t)),
                null == s.label_until)
              )
                return;
              let i = new Date(s.label_until).getTime();
              if (i < n) return;
              let r = E.seenNewActivities[t],
                o = Object.hasOwn(E.seenNewActivities, t),
                d = new Date(r).getTime() < i;
              s.label_type === a.EmbeddedActivityLabelTypes.NEW &&
                (!o || d) &&
                ((E.shouldShowNewActivityIndicator = !0),
                (E.seenNewActivities[t] = s.label_until));
              let u = E.seenUpdatedActivities[t],
                l = Object.hasOwn(E.seenUpdatedActivities, t),
                f = new Date(u).getTime() < i;
              s.label_type === a.EmbeddedActivityLabelTypes.UPDATED &&
                (!l || f) &&
                ((E.shouldShowNewActivityIndicator = !0),
                (E.seenUpdatedActivities[t] = s.label_until));
            });
          })({ activities: n, now: i }),
            A.set(s, { isFetching: !1, lastFetchTimestampMs: i });
        },
        EMBEDDED_ACTIVITY_FETCH_SHELF_FAIL: function (e) {
          let { guildId: t } = e,
            n = k(t),
            s = A.get(n);
          A.set(n, {
            isFetching: !1,
            lastFetchTimestampMs: null == s ? void 0 : s.lastFetchTimestampMs,
          });
        },
        EMBEDDED_ACTIVITY_DISMISS_NEW_INDICATOR: () => {
          E.shouldShowNewActivityIndicator = !1;
        },
        EMBEDDED_ACTIVITY_SET_ORIENTATION_LOCK_STATE: function (e) {
          let {
            applicationId: t,
            lockState: n,
            pictureInPictureLockState: s,
            gridLockState: i,
          } = e;
          null == n ? D.delete(t) : D.set(t, n),
            null === s ? N.delete(t) : void 0 !== s && N.set(t, s),
            null === i ? O.delete(t) : void 0 !== i && O.set(t, i);
        },
        EMBEDDED_ACTIVITY_SET_PANEL_MODE: function (e) {
          let { activityPanelMode: t } = e;
          V = t;
        },
        EMBEDDED_ACTIVITY_SET_FOCUSED_LAYOUT: function (e) {
          let { focusedActivityLayout: t } = e;
          R = t;
        },
        CHANNEL_SELECT: function (e) {
          let { channelId: t } = e;
          s !== t &&
            V === h.ActivityPanelModes.PANEL &&
            (V = h.ActivityPanelModes.PIP);
        },
      });
      var H = F;
    },
    711562: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("167726"),
        i = n("84460");
      function r(e) {
        let t = i.default.getState();
        return t.useActivityUrlOverride &&
          null != t.activityUrlOverride &&
          "" !== t.activityUrlOverride
          ? t.activityUrlOverride
          : s.default.inTestModeForEmbeddedApplication(e)
            ? s.default.testModeOriginURL
            : (function (e) {
                let t = window.GLOBAL_ENV.ACTIVITY_APPLICATION_HOST;
                return null == t ? null : "https://".concat(e, ".").concat(t);
              })(e);
      }
    },
    272505: function (e, t, n) {
      "use strict";
      var s, i, r, a;
      n.r(t),
        n.d(t, {
          ActivityPanelModes: function () {
            return s;
          },
          FocusedActivityLayouts: function () {
            return i;
          },
          LANDSCAPE_ACTIVITY_ASPECT_RATIO: function () {
            return o;
          },
        }),
        ((r = s || (s = {})).DISCONNECTED = "disconnected"),
        (r.LAUNCHING_WITH_ORIENTATION_CHANGE =
          "launching_with_orientation_change"),
        (r.PANEL = "panel"),
        (r.PIP = "pip"),
        ((a = i || (i = {}))[(a.NO_CHAT = 0)] = "NO_CHAT"),
        (a[(a.RESIZABLE = 1)] = "RESIZABLE");
      let o = 16 / 9;
    },
    644223: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var s = n("913144");
      function i(e, t, n, i) {
        s.default.dispatch({
          type: "EMBEDDED_ACTIVITY_DEFERRED_OPEN",
          channelId: e,
          applicationId: t,
          intent: i,
          analyticsLocations: n,
        });
      }
    },
    334368: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var s = n("798609");
      function i(e) {
        switch (e) {
          case "android":
            return s.EmbeddedActivitySupportedPlatforms.ANDROID;
          case "ios":
            return s.EmbeddedActivitySupportedPlatforms.IOS;
          default:
            return s.EmbeddedActivitySupportedPlatforms.WEB;
        }
      }
    },
    309570: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var s = n("49111");
      function i(e) {
        return (
          null != e &&
          e.type !== s.ActivityTypes.CUSTOM_STATUS &&
          (null != e.details ||
            (null != e.assets &&
              (null != e.assets.large_image || null != e.assets.small_text)) ||
            null != e.party ||
            null != e.secrets ||
            null != e.state)
        );
      }
    },
    429928: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
      var s = n("376556"),
        i = n("49111"),
        r = n("450484");
      function a(e) {
        return (
          null != e &&
          e.type === i.ActivityTypes.LISTENING &&
          e.name === s.default.get(i.PlatformTypes.SPOTIFY).name &&
          null != e.party &&
          null != e.party.id &&
          (0, r.isSpotifyParty)(e.party.id)
        );
      }
    },
    420444: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
      var s = n("298386"),
        i = n("42203"),
        r = n("427953");
      function a(e) {
        let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : i.default,
          n = t.getChannel(e),
          a = (0, r.isActivitiesInTextEnabled)(n, "isVoiceActivityChannel");
        return (
          null != n &&
          (n.type === s.ChannelTypes.GUILD_VOICE || (n.isPrivate() && !a))
        );
      }
    },
    823704: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var s = n("913144");
      function i() {
        s.default.dispatch({ type: "ACTIVITY_SYNC_STOP" });
      }
    },
    716241: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          collectGuildAnalyticsMetadata: function () {
            return b;
          },
          collectChannelAnalyticsMetadataFromId: function () {
            return V;
          },
          collectChannelAnalyticsMetadata: function () {
            return R;
          },
          collectVoiceAnalyticsMetadata: function () {
            return k;
          },
          trackWithMetadata: function () {
            return M;
          },
          getChannelOpenedMetadata: function () {
            return w;
          },
          getVoiceStateMetadata: function () {
            return L;
          },
          getCustomStatusMetadata: function () {
            return U;
          },
          default: function () {
            return G;
          },
        });
      var s = n("917351"),
        i = n.n(s),
        r = n("316693"),
        a = n("507313"),
        o = n("233069"),
        d = n("271938"),
        u = n("42203"),
        l = n("923959"),
        f = n("525065"),
        _ = n("26989"),
        c = n("305961"),
        g = n("42887"),
        m = n("957255"),
        h = n("824563"),
        v = n("945956"),
        E = n("660478"),
        p = n("18494"),
        y = n("162771"),
        T = n("282109"),
        C = n("800762"),
        S = n("599110"),
        I = n("718517"),
        A = n("991170"),
        D = n("761932"),
        N = n("49111"),
        O = n("724210");
      function P(e) {
        let t = 0;
        for (let n in e) t += 1;
        return t;
      }
      function b(e) {
        var t;
        if (null == e) return null;
        let n = c.default.getGuild(e);
        if (null == n) return null;
        let s = d.default.getId(),
          i = _.default.getMember(e, s),
          r = l.default.getChannels(e),
          a = r[l.GUILD_SELECTABLE_CHANNELS_KEY].length,
          o = r[l.GUILD_VOCAL_CHANNELS_KEY].length,
          u = C.default.getVoiceStates(e);
        return {
          guild_id: n.id,
          guild_size_total: f.default.getMemberCount(e),
          guild_num_channels: a + o,
          guild_num_text_channels: a,
          guild_num_voice_channels: o,
          guild_num_roles: P(n.roles),
          guild_member_num_roles: null != i ? i.roles.length : 0,
          guild_member_perms: String(
            null !== (t = m.default.getGuildPermissions(n)) && void 0 !== t
              ? t
              : A.default.NONE
          ),
          guild_is_vip: n.hasFeature(N.GuildFeatures.VIP_REGIONS),
          is_member: null != i,
          num_voice_channels_active: P(u),
        };
      }
      function V(e) {
        if (null == e) return null;
        let t = u.default.getChannel(e);
        return null == t ? null : R(t);
      }
      function R(e) {
        var t;
        if (null == e) return null;
        let n = !1,
          s = e.getGuildId();
        if (null != s) {
          let t = e => {
            if (null == e) return !1;
            let t = e.permissionOverwrites[s];
            return (
              null != t && r.default.has(t.deny, N.Permissions.VIEW_CHANNEL)
            );
          };
          n =
            o.THREAD_CHANNEL_TYPES.has(e.type) && null != e.parent_id
              ? t(u.default.getChannel(e.parent_id))
              : t(e);
        }
        return {
          channel_id: e.id,
          channel_type: e.type,
          channel_size_total: e.isPrivate() ? e.recipients.length : 0,
          channel_member_perms: String(
            null != s &&
              null !== (t = m.default.getChannelPermissions(e)) &&
              void 0 !== t
              ? t
              : A.default.NONE
          ),
          channel_hidden: n,
        };
      }
      function k(e) {
        if (null == e) return null;
        let t = u.default.getChannel(e);
        if (null == t) return null;
        let n = g.default.isVideoEnabled(),
          s = v.default.getMediaSessionId();
        return {
          channel_id: t.id,
          channel_type: t.type,
          guild_id: t.getGuildId(),
          media_session_id: s,
          ...L(t.getGuildId(), t.id, n),
          ...(0, D.getVoiceAnalyticsMetadataAdditional)(),
        };
      }
      function M(e) {
        var t, n, s, i, r;
        let a =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
          o = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
        if (S.default.isThrottled(e)) return;
        let d =
            !("location" in a) ||
            a.location !== N.AnalyticsLocations.GUILD_CREATE_INVITE_SUGGESTION,
          l = "guild_id" in a ? a.guild_id : d ? y.default.getGuildId() : null,
          f =
            "channel_id" in a
              ? a.channel_id
              : d
                ? p.default.getChannelId(l)
                : null,
          _ = u.default.getChannel(f);
        let c =
          ((t = _),
          (n = l),
          null == t
            ? null != n
              ? n
              : null
            : t.isPrivate()
              ? null
              : null !==
                    (i =
                      null !== (s = t.getGuildId()) && void 0 !== s ? s : n) &&
                  void 0 !== i
                ? i
                : null);
        let g = {
          ...a,
          ...b(c),
          ...(null != l && null != f && (0, O.isStaticChannelRoute)(f)
            ? ((r = 0), { channel_static_route: f, channel_hidden: !1 })
            : R(_)),
        };
        S.default.track(e, g, { flush: o });
      }
      function w(e) {
        let t = u.default.getChannel(e);
        if (null == t || null == t.guild_id) return {};
        let n = c.default.getGuild(t.guild_id);
        if (null == n) return {};
        let s = E.default.getSnapshot(e, 10 * I.default.Millis.SECOND);
        return {
          channel_was_unread: s.unread,
          channel_mention_count: s.mentionCount,
          channel_is_muted: T.default.isChannelMuted(t.guild_id, t.id),
          channel_resolved_unread_setting: T.default.resolveUnreadSetting(t),
          channel_preset: (0, a.presetFromSettings)(
            T.default.resolveUnreadSetting(t),
            T.default.resolvedMessageNotifications(t)
          ),
          guild_was_unread: s.guildUnread,
          guild_mention_count: s.guildMentionCount,
          guild_is_muted: T.default.isMuted(t.guild_id),
          guild_resolved_unread_setting: T.default.resolveGuildUnreadSetting(n),
          guild_preset: (0, a.presetFromSettings)(
            T.default.resolveGuildUnreadSetting(n),
            T.default.getMessageNotifications(t.guild_id)
          ),
        };
      }
      function L(e, t, n) {
        let s = {
          voice_state_count: 0,
          video_stream_count: 0,
          video_enabled: n,
        };
        return (
          i(C.default.getVoiceStates(e))
            .filter(e => e.channelId === t)
            .filter(e => e.userId !== d.default.getId())
            .forEach(e => {
              s.voice_state_count++,
                (e.selfVideo || e.selfStream) && s.video_stream_count++;
            }),
          s
        );
      }
      function U(e, t) {
        let n = { custom_status_count: 0 };
        return (
          i(C.default.getVoiceStates(e)).forEach(e => {
            e.channelId === t &&
              null !=
                h.default.findActivity(
                  e.userId,
                  e => e.type === N.ActivityTypes.CUSTOM_STATUS
                ) &&
              n.custom_status_count++;
          }),
          n
        );
      }
      var G = { trackWithMetadata: M, getVoiceStateMetadata: L };
    },
    761932: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getVoiceAnalyticsMetadataAdditional: function () {
            return i;
          },
        });
      var s = n("568307");
      function i() {
        let e = s.default.getCurrentGameForAnalytics();
        return {
          game_name: null != e ? e.name : null,
          game_id: null != e ? e.id : null,
        };
      }
    },
    148217: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        }),
        n("222007");
      var s = n("884691"),
        i = n("446674"),
        r = n("327037"),
        a = n("84339"),
        o = n("271938");
      function d() {
        let [e, t] = (0, i.useStateFromStoresArray)([o.default], () => [
            o.default.isAuthenticated(),
            null != o.default.getAnalyticsToken(),
          ]),
          n = (0, a.default)(e);
        s.useEffect(() => {
          !n && e && !t && r.fetchCurrentUser({ withAnalyticsToken: !0 });
        }, [n, e, t]);
      }
    },
    939398: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getDesktopSourceMetadata: function () {
            return u;
          },
          trackWithOverlayMetadata: function () {
            return l;
          },
        });
      var s = n("42887"),
        i = n("568307"),
        r = n("703370"),
        a = n("599110"),
        o = n("716241"),
        d = n("49111");
      function u() {
        let e, t, n, r, a;
        let o = s.default.getGoLiveSource();
        if (
          null != o &&
          ((e = o.quality.resolution),
          (t = o.quality.frameRate),
          null != o.desktopSource)
        ) {
          var d, u;
          n = o.desktopSource.soundshareSession;
          let e =
            null != o.desktopSource.sourcePid
              ? i.default.getGameForPID(o.desktopSource.sourcePid)
              : null;
          (r =
            null !== (d = null == e ? void 0 : e.name) && void 0 !== d
              ? d
              : null),
            (a =
              null !== (u = null == e ? void 0 : e.id) && void 0 !== u
                ? u
                : null);
        }
        return {
          video_input_resolution: e,
          video_input_frame_rate: t,
          soundshare_session: n,
          share_game_name: r,
          share_game_id: a,
        };
      }
      function l(e, t) {
        let n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
          s = r.default.getGame();
        switch (
          ((t = {
            ...t,
            overlay_game_name: null != s ? s.name : "Unknown Game",
            overlay_app_id: null != s ? s.id : null,
          }),
          e)
        ) {
          case d.AnalyticEvents.VOICE_CHANNEL_SELECTED:
          case d.AnalyticEvents.SETTINGS_PANE_VIEWED:
          case d.AnalyticEvents.GUILD_VIEWED:
          case d.AnalyticEvents.CHANNEL_OPENED:
            return (0, o.trackWithMetadata)(e, t, n);
          default:
            return a.default.track(e, t, { flush: n });
        }
      }
    },
    629538: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        }),
        n("222007"),
        n("781738"),
        n("424973"),
        n("686130");
      var s = n("605250"),
        i = n("802493");
      let r = new s.default("GuildEmojis");
      var a = new (class e {
        async getAsync(e) {
          let t = performance.now(),
            n = await i.default.emojis(e).getMapEntries(),
            s = performance.now();
          return (
            r.log(
              "asynchronously loaded in "
                .concat(s - t, "ms (guilds: ")
                .concat(n.length, ")")
            ),
            n
          );
        }
        handleConnectionOpen(e, t) {
          for (let n of e.guilds) this.handleOneGuildCreate(n, t);
        }
        handleGuildCreate(e, t) {
          this.handleOneGuildCreate(e.guild, t);
        }
        handleGuildUpdate(e, t) {
          this.replace(e.guild.id, e.guild.emojis, t);
        }
        handleGuildDelete(e, t) {
          this.delete(e.guild.id, t);
        }
        handleGuildEmojisUpdate(e, t) {
          this.replace(e.guildId, e.emojis, t);
        }
        handleBackgroundSync(e, t) {
          e.promisesForBackgroundSyncToWaitOn.push(
            Promise.all(
              e.emojis.map(e => {
                if ("unavailable" === e.dataMode) return Promise.resolve();
                "full" === e.dataMode
                  ? (r.verbose(
                      "Replacing "
                        .concat(e.entities.length, " emojis for ")
                        .concat(e.guildId)
                    ),
                    this.replace(e.guildId, e.entities, t))
                  : (e.updatedEntities.length > 0 ||
                      e.deletedEntityIds.length > 0) &&
                    (r.verbose(
                      "Updating "
                        .concat(e.updatedEntities.length, " and deleting ")
                        .concat(e.deletedEntityIds.length, " emojis for ")
                        .concat(e.guildId)
                    ),
                    this.update(
                      e.guildId,
                      e.updatedEntities,
                      e.deletedEntityIds,
                      t
                    ));
              })
            )
          );
        }
        handleOneGuildCreate(e, t) {
          null != e.emojiUpdates
            ? this.update(
                e.id,
                e.emojiUpdates.writes,
                e.emojiUpdates.deletes,
                t
              )
            : null != e.emojis && this.replace(e.id, e.emojis, t);
        }
        handleClearGuildCache(e) {
          this.clear(e);
        }
        handleReset() {}
        replace(e, t, n) {
          i.default.emojisTransaction(n).replaceAll(e, t);
        }
        delete(e, t) {
          i.default.emojisTransaction(t).delete(e);
        }
        clear(e) {
          i.default.emojisTransaction(e).delete();
        }
        update(e, t, n, s) {
          let r = i.default.emojisTransaction(s);
          for (let s of (r.putAll(e, t), n)) r.delete(e, s);
        }
        constructor() {
          this.actions = {
            BACKGROUND_SYNC: (e, t) => this.handleBackgroundSync(e, t),
            CLEAR_GUILD_CACHE: (e, t) => this.handleClearGuildCache(t),
            CONNECTION_OPEN: (e, t) => this.handleConnectionOpen(e, t),
            GUILD_CREATE: (e, t) => this.handleGuildCreate(e, t),
            GUILD_DELETE: (e, t) => this.handleGuildDelete(e, t),
            GUILD_EMOJIS_UPDATE: (e, t) => this.handleGuildEmojisUpdate(e, t),
            GUILD_UPDATE: (e, t) => this.handleGuildUpdate(e, t),
          };
        }
      })();
    },
    212084: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        }),
        n("222007"),
        n("781738"),
        n("424973"),
        n("686130");
      var s = n("605250"),
        i = n("802493");
      let r = new s.default("GuildStickers");
      var a = new (class e {
        async getAsync(e) {
          let t = performance.now(),
            n = await i.default.stickers(e).getMapEntries(),
            s = performance.now();
          return (
            r.log(
              "asynchronously loaded in "
                .concat(s - t, "ms (guilds: ")
                .concat(n.length, ")")
            ),
            n
          );
        }
        handleConnectionOpen(e, t) {
          for (let n of e.guilds) this.handleOneGuildCreate(n, t);
        }
        handleGuildCreate(e, t) {
          this.handleOneGuildCreate(e.guild, t);
        }
        handleGuildUpdate(e, t) {
          this.replace(e.guild.id, e.guild.stickers, t);
        }
        handleGuildDelete(e, t) {
          this.delete(e.guild.id, t);
        }
        handleGuildStickersUpdate(e, t) {
          this.replace(e.guildId, e.stickers, t);
        }
        handleBackgroundSync(e, t) {
          e.promisesForBackgroundSyncToWaitOn.push(
            Promise.all(
              e.stickers.map(e => {
                if ("unavailable" === e.dataMode) return Promise.resolve();
                "full" === e.dataMode
                  ? (r.verbose(
                      "Replacing "
                        .concat(e.entities.length, " stickers for ")
                        .concat(e.guildId)
                    ),
                    this.replace(e.guildId, e.entities, t))
                  : (e.updatedEntities.length > 0 ||
                      e.deletedEntityIds.length > 0) &&
                    (r.verbose(
                      "Updating "
                        .concat(e.updatedEntities.length, " and deleting ")
                        .concat(e.deletedEntityIds.length, " stickers for ")
                        .concat(e.guildId)
                    ),
                    this.update(
                      e.guildId,
                      e.updatedEntities,
                      e.deletedEntityIds,
                      t
                    ));
              })
            )
          );
        }
        handleOneGuildCreate(e, t) {
          null != e.stickers && this.replace(e.id, e.stickers, t),
            null != e.stickerUpdates &&
              this.update(
                e.id,
                e.stickerUpdates.writes,
                e.stickerUpdates.deletes,
                t
              );
        }
        handleClearGuildCache(e) {
          this.clear(e);
        }
        handleReset() {}
        replace(e, t, n) {
          i.default.stickersTransaction(n).replaceAll(e, t);
        }
        delete(e, t) {
          i.default.stickersTransaction(t).delete(e);
        }
        clear(e) {
          i.default.stickersTransaction(e).delete();
        }
        update(e, t, n, s) {
          let r = i.default.stickersTransaction(s);
          for (let s of (r.putAll(e, t), n)) r.delete(e, s);
        }
        constructor() {
          this.actions = {
            BACKGROUND_SYNC: (e, t) => this.handleBackgroundSync(e, t),
            CLEAR_GUILD_CACHE: (e, t) => this.handleClearGuildCache(t),
            CONNECTION_OPEN: (e, t) => this.handleConnectionOpen(e, t),
            GUILD_CREATE: (e, t) => this.handleGuildCreate(e, t),
            GUILD_DELETE: (e, t) => this.handleGuildDelete(e, t),
            GUILD_STICKERS_UPDATE: (e, t) =>
              this.handleGuildStickersUpdate(e, t),
            GUILD_UPDATE: (e, t) => this.handleGuildUpdate(e, t),
          };
        }
      })();
    },
    105059: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        }),
        n("222007");
      var s = n("605250"),
        i = n("305961"),
        r = n("802493");
      let a = new s.default("GuildVersions");
      var o = new (class e {
        async getCommittedVersions() {
          try {
            let e = r.default.guildVersions();
            if (null == e) return {};
            let t = (await e.getMany()).map(e => [e.id, e.version]);
            return Object.fromEntries(null != t ? t : []);
          } catch (e) {
            return a.warn("couldn't load guild versions", e), {};
          }
        }
        remove(e, t) {
          this.deleteWith(e), this.commit(t);
        }
        handleBackgroundSync(e, t) {
          for (let n of e.guilds)
            "unavailable" !== n.data_mode && this.updateWith(n.id, [n]),
              null == i.default.getGuild(n.id) && this.remove(n.id, t);
          this.commit(t);
        }
        handleConnectionOpen(e, t) {
          for (let t of (this.reset(), e.guilds)) this.updateWith(t.id, [t]);
          this.commit(t);
        }
        handleGuildCreate(e, t) {
          var n;
          let s = e.guild,
            i = e.guild.id;
          this.updateWith(i, [s]),
            this.updateWith(i, s.emojis),
            this.updateWith(i, s.stickers),
            this.updateWith(i, s.channels),
            this.updateWith(
              i,
              null === (n = s.channelUpdates) || void 0 === n
                ? void 0
                : n.writes
            ),
            this.updateWith(
              i,
              Array.isArray(s.roles) ? s.roles : Object.values(s.roles)
            ),
            this.commit(t);
        }
        handleGuildUpdate(e, t) {
          let n = e.guild,
            s = e.guild.id;
          this.updateWith(s, [n]),
            this.updateWith(s, n.emojis),
            this.updateWith(s, n.stickers),
            this.updateWith(
              s,
              Array.isArray(n.roles) ? n.roles : Object.values(n.roles)
            ),
            this.commit(t);
        }
        handleGuildDelete(e, t) {
          this.deleteWith(e.guild.id), this.commit(t);
        }
        handleGuildRoleChange(e, t) {
          this.updateWith(e.guildId, [e.role]), this.commit(t);
        }
        handleGuildRoleDelete(e, t) {
          this.updateWith(e.guildId, [{ version: e.version }]), this.commit(t);
        }
        handleGuildEmojisUpdate(e, t) {
          this.updateWith(e.guildId, e.emojis), this.commit(t);
        }
        handleGuildStickersUpdate(e, t) {
          this.updateWith(e.guildId, e.stickers), this.commit(t);
        }
        handleChannelCreate(e, t) {
          null != e.channel.guild_id &&
            this.updateWith(e.channel.guild_id, [e.channel]),
            this.commit(t);
        }
        handleChannelUpdates(e, t) {
          for (let t of e.channels)
            null != t.guild_id && this.updateWith(t.guild_id, [t]);
          this.commit(t);
        }
        handleChannelDelete(e, t) {
          null != e.channel.guild_id &&
            this.updateWith(e.channel.guild_id, [e.channel]),
            this.commit(t);
        }
        handleClearGuildCache(e) {
          this.reset(), r.default.guildVersionsTransaction(e).delete();
        }
        handleReset() {
          this.reset();
        }
        reset() {
          (this.committed = new Map()), (this.pending = new Map());
        }
        deleteWith(e) {
          this.pending.set(e, null);
        }
        updateWith(e, t) {
          if (null != t) {
            var n, s;
            let i = Math.max(
                null !== (n = this.committed.get(e)) && void 0 !== n ? n : 0,
                null !== (s = this.pending.get(e)) && void 0 !== s ? s : 0
              ),
              r = this.computeLatestVersion(i, t);
            r > i && this.pending.set(e, r);
          }
        }
        computeLatestVersion(e, t) {
          let n = e;
          for (let e of t) {
            var s;
            n = Math.max(n, null !== (s = e.version) && void 0 !== s ? s : 0);
          }
          return n;
        }
        commit(e) {
          if (this.pending.size > 0) {
            let t = r.default.guildVersionsTransaction(e);
            for (let [e, n] of this.pending)
              null != n
                ? (t.put({ id: e, version: n }), this.committed.set(e, n))
                : (t.delete(e), this.committed.delete(e));
            this.pending.clear();
          }
        }
        constructor() {
          (this.pending = new Map()),
            (this.committed = new Map()),
            (this.actions = {
              BACKGROUND_SYNC: (e, t) => this.handleBackgroundSync(e, t),
              CHANNEL_CREATE: (e, t) => this.handleChannelCreate(e, t),
              CHANNEL_DELETE: (e, t) => this.handleChannelDelete(e, t),
              CHANNEL_UPDATES: (e, t) => this.handleChannelUpdates(e, t),
              CLEAR_GUILD_CACHE: (e, t) => this.handleClearGuildCache(t),
              CONNECTION_OPEN: (e, t) => this.handleConnectionOpen(e, t),
              GUILD_CREATE: (e, t) => this.handleGuildCreate(e, t),
              GUILD_DELETE: (e, t) => this.handleGuildDelete(e, t),
              GUILD_EMOJIS_UPDATE: (e, t) => this.handleGuildEmojisUpdate(e, t),
              GUILD_ROLE_CREATE: (e, t) => this.handleGuildRoleChange(e, t),
              GUILD_ROLE_DELETE: (e, t) => this.handleGuildRoleDelete(e, t),
              GUILD_ROLE_UPDATE: (e, t) => this.handleGuildRoleChange(e, t),
              GUILD_STICKERS_UPDATE: (e, t) =>
                this.handleGuildStickersUpdate(e, t),
              GUILD_UPDATE: (e, t) => this.handleGuildUpdate(e, t),
            });
        }
      })();
    },
    849365: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var s = n("605250"),
        i = n("802493"),
        r = n("723939");
      let a = "version";
      new s.default("KvCacheVersion");
      var o = new (class e {
        async okAsync(e) {
          let t = await i.default.cache(e).get(a);
          return null == t ? null : 3 === t;
        }
        handleClearGuildCache(e) {
          i.default.cacheTransaction(e).delete(a),
            i.default.cacheTransaction(e).delete("CacheStore.Nonce"),
            r.default.replaceDisableAllDatabases(
              "CLEAR_GUILD_CACHE (via KvCacheVersion)"
            );
        }
        handleWrite(e) {
          i.default.cacheTransaction(e).put("hello", "\uD83D\uDC4B"),
            i.default.cacheTransaction(e).put(a, 3);
        }
        handleReset() {}
        constructor() {
          this.actions = {
            CLEAR_GUILD_CACHE: (e, t) => this.handleClearGuildCache(t),
            CONNECTION_OPEN: (e, t) => this.handleWrite(t),
            WRITE_CACHES: (e, t) => this.handleWrite(t),
          };
        }
      })();
    },
    11275: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
      var s = n("605250"),
        i = n("802493");
      let r = new s.default("NonGuildVersions");
      var a = new (class e {
        async getCommittedVersions() {
          try {
            let e = i.default.nonGuildVersions();
            if (null == e) return {};
            let t = (await e.getMany()).map(e => [
              e.id,
              "version" in e ? e.version : e.versionString,
            ]);
            return Object.fromEntries(null != t ? t : []);
          } catch (e) {
            return r.warn("couldn't load guild versions", e), {};
          }
        }
        handleClear(e) {
          i.default.nonGuildVersionsTransaction(e).delete();
        }
        handleReset() {}
        constructor() {
          this.actions = {
            CLEAR_CACHES: (e, t) => this.handleClear(t),
            CLEAR_GUILD_CACHE: (e, t) => this.handleClear(t),
          };
        }
      })();
    },
    280468: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          requireSortedDescending: function () {
            return a;
          },
        });
      var s = n("627445"),
        i = n.n(s),
        r = n("249654");
      function a(e) {
        i(
          e.length <= 2 || r.default.compare(e[0].id, e[e.length - 1].id) >= 0,
          "messages must be sorted in descending order."
        );
      }
    },
    996554: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          AppLauncherDesktopExperiment: function () {
            return i;
          },
          AppLauncherOnboardingExperiment: function () {
            return r;
          },
        });
      var s = n("862205");
      (0, s.createExperiment)({
        kind: "user",
        id: "2023-06_app_launcher_mobile",
        label: "App Launcher - Mobile",
        defaultConfig: {
          entrypointEnabled: !1,
          appLauncherEnabled: !1,
          entrypointToSlashUIEnabled: !1,
        },
        treatments: [
          {
            id: 1,
            label: "Enable the app launcher feature on mobile",
            config: {
              entrypointEnabled: !0,
              appLauncherEnabled: !0,
              entrypointToSlashUIEnabled: !1,
            },
          },
          {
            id: 2,
            label: 'Enable "Apps" button opening existing slash command UI',
            config: {
              entrypointEnabled: !0,
              appLauncherEnabled: !1,
              entrypointToSlashUIEnabled: !0,
            },
          },
        ],
      });
      let i = (0, s.createExperiment)({
          kind: "user",
          id: "2023-11_app_launcher_desktop",
          label: "App Launcher - Desktop",
          defaultConfig: { enabled: !1 },
          treatments: [
            {
              id: 1,
              label: "Enable the app launcher feature on desktop",
              config: { enabled: !0 },
            },
          ],
        }),
        r = (0, s.createExperiment)({
          kind: "user",
          id: "2024-01_app_launcher_onboarding",
          label: "App Launcher - Onboarding",
          defaultConfig: { enabled: !1 },
          treatments: [
            {
              id: 1,
              label: "Enable onboarding within App Launcher",
              config: { enabled: !0 },
            },
          ],
        });
    },
    926274: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          size: function () {
            return i;
          },
        }),
        n("222007");
      let s = new Set();
      function i() {
        return s.size;
      }
    },
    317041: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          TRUE_OPTION_NAME: function () {
            return o;
          },
          FALSE_OPTION_NAME: function () {
            return d;
          },
          BOOLEAN_CHOICES: function () {
            return u;
          },
          BuiltInSectionId: function () {
            return i;
          },
          DISCOVERY_COMMANDS_QUERY_LIMIT: function () {
            return l;
          },
          DISCOVERY_COMMANDS_FRECENCY_LIMIT: function () {
            return f;
          },
          DISCOVERY_COMMAND_FRECENCY_GATEWAY_LIMIT: function () {
            return _;
          },
          SUB_COMMAND_KEY_SEPARATOR: function () {
            return c;
          },
          APPLICATION_COMMAND_PERMISSIONS_LIMIT: function () {
            return g;
          },
          MAX_SUBCOMMAND_LEVEL: function () {
            return m;
          },
          CONTEXT_MENU_COMMANDS_QUERY_LIMIT: function () {
            return h;
          },
          AUTOCOMPLETE_OPTION_DEBOUNCE_TIME: function () {
            return v;
          },
          getValidationErrorText: function () {
            return E;
          },
        });
      var s,
        i,
        r = n("798609"),
        a = n("782340");
      let o = "True",
        d = "False",
        u = [
          { name: o, displayName: o, value: "true" },
          { name: d, displayName: d, value: "false" },
        ];
      ((s = i || (i = {})).BUILT_IN = "-1"), (s.FRECENCY = "-2");
      let l = 10,
        f = 5,
        _ = 25,
        c = "\x00",
        g = 100,
        m = 3,
        h = 10,
        v = 500;
      function E(e) {
        if (null != e.choices)
          return a.default.Messages.COMMAND_VALIDATION_CHOICE_ERROR;
        switch (e.type) {
          case r.ApplicationCommandOptionType.BOOLEAN:
            return a.default.Messages.COMMAND_VALIDATION_BOOLEAN_ERROR;
          case r.ApplicationCommandOptionType.CHANNEL:
            return a.default.Messages.COMMAND_VALIDATION_CHANNEL_ERROR;
          case r.ApplicationCommandOptionType.INTEGER:
            return a.default.Messages.COMMAND_VALIDATION_INTEGER_ERROR;
          case r.ApplicationCommandOptionType.NUMBER:
            return a.default.Messages.COMMAND_VALIDATION_NUMBER_ERROR;
          case r.ApplicationCommandOptionType.ROLE:
            return a.default.Messages.COMMAND_VALIDATION_ROLE_ERROR;
          case r.ApplicationCommandOptionType.USER:
            return a.default.Messages.COMMAND_VALIDATION_USER_ERROR;
          case r.ApplicationCommandOptionType.MENTIONABLE:
            return a.default.Messages.COMMAND_VALIDATION_MENTIONABLE_ERROR;
          default:
            return a.default.Messages.COMMAND_VALIDATION_GENERAL_ERROR;
        }
      }
      Object.freeze([]), Object.freeze([]);
    },
    14090: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          UserAppsTreatment: function () {
            return i;
          },
          default: function () {
            return a;
          },
        });
      var s,
        i,
        r = n("862205");
      ((s = i || (i = {})).ALLOWED = "allowed"), (s.DEFAULT = "default");
      var a = (0, r.createExperiment)({
        kind: "user",
        id: "2023-08_new_app_command_serving",
        label: "New Application Command Serving",
        defaultConfig: { enabled: !1, newScoreLogic: !1 },
        treatments: [
          {
            id: 1,
            label: "Enabled",
            config: { enabled: !0, newScoreLogic: !1 },
          },
          {
            id: 2,
            label: "Enabled + New Logic",
            config: { enabled: !0, newScoreLogic: !0 },
          },
        ],
      });
    },
    524768: function (e, t, n) {
      "use strict";
      var s, i, r, a, o, d, u, l, f, _, c, g;
      n.r(t),
        n.d(t, {
          ApplicationCommandSectionType: function () {
            return s;
          },
          ApplicationCommandInputType: function () {
            return i;
          },
          ApplicationCommandPermissionType: function () {
            return r;
          },
          ApplicationCommandTriggerLocations: function () {
            return a;
          },
          ApplicationCommandTriggerSections: function () {
            return o;
          },
          CommandOrigin: function () {
            return d;
          },
        }),
        ((u = s || (s = {}))[(u.BUILT_IN = 0)] = "BUILT_IN"),
        (u[(u.APPLICATION = 1)] = "APPLICATION"),
        ((l = i || (i = {}))[(l.BUILT_IN = 0)] = "BUILT_IN"),
        (l[(l.BUILT_IN_TEXT = 1)] = "BUILT_IN_TEXT"),
        (l[(l.BUILT_IN_INTEGRATION = 2)] = "BUILT_IN_INTEGRATION"),
        (l[(l.BOT = 3)] = "BOT"),
        (l[(l.PLACEHOLDER = 4)] = "PLACEHOLDER"),
        ((f = r || (r = {}))[(f.ROLE = 1)] = "ROLE"),
        (f[(f.USER = 2)] = "USER"),
        (f[(f.CHANNEL = 3)] = "CHANNEL"),
        ((_ = a || (a = {})).DISCOVERY = "discovery"),
        (_.SUGGESTION = "suggestion"),
        (_.MENTION = "mention"),
        (_.PASTE = "paste"),
        (_.RECALL = "recall"),
        (_.POPULAR_COMMANDS = "popular_commands"),
        (_.MJ_CHAT_BAR = "mj_chat_bar"),
        (_.QUERY = "query"),
        (_.SLASH_UI = "slash_ui"),
        (_.APP_LAUNCHER = "app_launcher"),
        (_.APP_LAUNCHER_HOME = "app_launcher_home"),
        (_.APP_LAUNCHER_HOME_SEARCH = "app_launcher_home_search"),
        (_.APP_LAUNCHER_APPLICATION_VIEW = "app_launcher_application_view"),
        (_.APP_LAUNCHER_APPLICATION_VIEW_FRECENCT =
          "app_launcher_application_view_frecent"),
        (_.APP_LAUNCHER_SLASH_SEARCH = "app_launcher_slash_search"),
        ((c = o || (o = {}))[(c.BUILT_IN = 1)] = "BUILT_IN"),
        (c[(c.FRECENCY = 2)] = "FRECENCY"),
        (c[(c.APP = 3)] = "APP"),
        ((g = d || (d = {}))[(g.CHAT = 0)] = "CHAT"),
        (g[(g.APPLICATION_LAUNCHER = 1)] = "APPLICATION_LAUNCHER");
    },
    970254: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          UserAppsTreatment: function () {
            return i;
          },
          default: function () {
            return a;
          },
        });
      var s,
        i,
        r = n("862205");
      ((s = i || (i = {})).ALLOWED = "allowed"), (s.DEFAULT = "default");
      var a = (0, r.createExperiment)({
        kind: "user",
        id: "2023-08_user_apps",
        label: "Allow user app commands",
        defaultConfig: { userAppsTreatment: "default" },
        treatments: [
          {
            id: 1,
            label: "Allow user app commands",
            config: { userAppsTreatment: "allowed" },
          },
        ],
      });
    },
    696415: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("862205"),
        i = n("970254"),
        r = (0, s.createExperiment)({
          kind: "guild",
          id: "2023-09_user_apps_guild",
          label: "Allow user app commands",
          defaultConfig: { userAppsTreatment: i.UserAppsTreatment.DEFAULT },
          treatments: [
            {
              id: 1,
              label: "Allow user app commands",
              config: { userAppsTreatment: i.UserAppsTreatment.ALLOWED },
            },
          ],
        });
    },
    389153: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          buildCommand: function () {
            return C;
          },
          buildApplicationCommands: function () {
            return S;
          },
          isSnowflake: function () {
            return I;
          },
          getMatchingGroupCommands: function () {
            return A;
          },
          getApplicationCommandOptionQueryOptions: function () {
            return D;
          },
          allChannelsSentinel: function () {
            return N;
          },
          canUseApplicationCommands: function () {
            return O;
          },
          DISABLED_BY_DEFAULT_PERMISSION_FLAG: function () {
            return P;
          },
          hasAccess: function () {
            return b;
          },
          getCommandAttachmentDraftType: function () {
            return R;
          },
          getCommandTriggerSection: function () {
            return k;
          },
          getApplicationCommandSection: function () {
            return M;
          },
          extractInteractionDataProps: function () {
            return w;
          },
          useIsInUserAppExperiment: function () {
            return L;
          },
          isInUserAppExperiment: function () {
            return U;
          },
          trackCommandSelected: function () {
            return G;
          },
        }),
        n("222007"),
        n("424973"),
        n("881410"),
        n("808653");
      var s = n("552442"),
        i = n.n(s),
        r = n("627445"),
        a = n.n(r),
        o = n("917351"),
        d = n.n(o),
        u = n("316693"),
        l = n("798609"),
        f = n("716241"),
        _ = n("892692"),
        c = n("233069"),
        g = n("474643"),
        m = n("14090"),
        h = n("524768"),
        v = n("970254"),
        E = n("696415"),
        p = n("317041"),
        y = n("49111"),
        T = n("843455");
      function C(e) {
        var t, n, s;
        let i,
          {
            rootCommand: r,
            command: a,
            applicationId: o,
            subCommandPath: d,
            useKeyedPermissions: f,
          } = e;
        null != r.permissions &&
          r.permissions.length > 0 &&
          (f
            ? (i = (0, _.keyPermissions)(r.permissions))
            : ((i = {}),
              r.permissions.forEach(e => {
                i[e.id] = e;
              })));
        let c = (null != d ? d : []).map(e => e.name),
          g = (null != d ? d : []).map(e => e.displayName);
        return {
          version: r.version,
          guildId: r.guild_id,
          id: [r.id, ...c].join(p.SUB_COMMAND_KEY_SEPARATOR),
          name: [r.name, ...c].join(" "),
          serverLocalizedName: a.name_localized,
          applicationId: o,
          type:
            null !== (t = r.type) && void 0 !== t
              ? t
              : l.ApplicationCommandType.CHAT,
          inputType: h.ApplicationCommandInputType.BOT,
          description: a.description,
          options: (function e(t) {
            return null == t
              ? void 0
              : t.map(t => {
                  var n, s;
                  let i = {
                    ...t,
                    choices: (function (e) {
                      return null == e
                        ? void 0
                        : e.map(e => {
                            var t;
                            return {
                              ...e,
                              displayName:
                                null !== (t = e.name_localized) && void 0 !== t
                                  ? t
                                  : e.name,
                            };
                          });
                    })(t.choices),
                    options: e(t.options),
                    serverLocalizedName: t.name_localized,
                    displayName:
                      null !== (n = t.name_localized) && void 0 !== n
                        ? n
                        : t.name,
                    displayDescription:
                      null !== (s = t.description_localized) && void 0 !== s
                        ? s
                        : t.description,
                  };
                  if (
                    t.type === l.ApplicationCommandOptionType.CHANNEL &&
                    "channel_types" in t
                  )
                    return { ...i, channelTypes: t.channel_types };
                  if (
                    (t.type === l.ApplicationCommandOptionType.NUMBER ||
                      t.type === l.ApplicationCommandOptionType.INTEGER) &&
                    ("min_value" in t || "max_value" in t)
                  )
                    return {
                      ...i,
                      minValue: t.min_value,
                      maxValue: t.max_value,
                    };
                  if (
                    t.type === l.ApplicationCommandOptionType.STRING &&
                    ("min_length" in t || "max_length" in t)
                  )
                    return {
                      ...i,
                      minLength: t.min_length,
                      maxLength: t.max_length,
                    };
                  return i;
                });
          })(a.options),
          rootCommand: r,
          subCommandPath: d,
          defaultMemberPermissions:
            null == r.default_member_permissions
              ? void 0
              : u.default.deserialize(r.default_member_permissions),
          dmPermission: r.dm_permission,
          permissions: i,
          displayName: [
            null !== (n = r.name_localized) && void 0 !== n ? n : r.name,
            ...g,
          ].join(" "),
          displayDescription:
            null !== (s = a.description_localized) && void 0 !== s
              ? s
              : a.description,
          nsfw: r.nsfw,
          contexts: r.contexts,
          integration_types: r.integration_types,
          global_popularity_rank: r.global_popularity_rank,
        };
      }
      function S(e, t) {
        return d.flatMap(
          e,
          e => (
            a(null != e.id, "Missing command id"),
            (function e(t) {
              var n, s;
              let {
                rootCommand: i,
                command: r,
                applicationId: a,
                subCommandPath: o,
                useKeyedPermissions: d,
              } = t;
              if (r.hasOwnProperty("id")) {
                if (null == r.options || 0 === r.options.length)
                  return [
                    C({
                      rootCommand: i,
                      command: r,
                      applicationId: a,
                      subCommandPath: o,
                      useKeyedPermissions: d,
                    }),
                  ];
              } else if (
                r.type !== l.ApplicationCommandOptionType.SUB_COMMAND &&
                r.type !== l.ApplicationCommandOptionType.SUB_COMMAND_GROUP &&
                (null == r.options || 0 === r.options.length)
              )
                return [
                  C({
                    rootCommand: i,
                    command: r,
                    applicationId: a,
                    subCommandPath: o,
                    useKeyedPermissions: d,
                  }),
                ];
              let u = [];
              if (null == r.options) return u;
              let f = r.options.filter(
                e => e.type === l.ApplicationCommandOptionType.SUB_COMMAND_GROUP
              );
              for (let t = 0; t < f.length; t++)
                u.push(
                  ...e({
                    rootCommand: i,
                    command: f[t],
                    applicationId: a,
                    subCommandPath: (null != o ? o : []).concat([
                      {
                        name: f[t].name,
                        type: l.ApplicationCommandOptionType.SUB_COMMAND_GROUP,
                        displayName:
                          null !== (n = f[t].name_localized) && void 0 !== n
                            ? n
                            : f[t].name,
                      },
                    ]),
                    useKeyedPermissions: d,
                  })
                );
              let _ = r.options.filter(
                e => e.type === l.ApplicationCommandOptionType.SUB_COMMAND
              );
              for (let e = 0; e < _.length; e++)
                u.push(
                  C({
                    rootCommand: i,
                    command: _[e],
                    applicationId: a,
                    subCommandPath: (null != o ? o : []).concat([
                      {
                        name: _[e].name,
                        type: l.ApplicationCommandOptionType.SUB_COMMAND,
                        displayName:
                          null !== (s = _[e].name_localized) && void 0 !== s
                            ? s
                            : _[e].name,
                      },
                    ]),
                    useKeyedPermissions: d,
                  })
                );
              return (
                0 === f.length &&
                  0 === _.length &&
                  u.push(
                    C({
                      rootCommand: i,
                      command: r,
                      applicationId: a,
                      subCommandPath: o,
                      useKeyedPermissions: d,
                    })
                  ),
                u
              );
            })({
              rootCommand: e,
              command: e,
              applicationId: e.application_id,
              subCommandPath: void 0,
              useKeyedPermissions: t,
            })
          )
        );
      }
      function I(e) {
        return y.ID_REGEX.test(e.trim());
      }
      function A(e, t, n, s) {
        let i = [];
        return (
          d(e).forEach(e => {
            t.test(e.displayName) &&
              (null == e.predicate || e.predicate(n)) &&
              i.push(e);
          }),
          i.slice(0, s)
        );
      }
      function D(e) {
        let t = e.type === l.ApplicationCommandOptionType.STRING,
          n = e.type === l.ApplicationCommandOptionType.CHANNEL,
          s =
            e.type === l.ApplicationCommandOptionType.USER ||
            e.type === l.ApplicationCommandOptionType.MENTIONABLE,
          i =
            e.type === l.ApplicationCommandOptionType.ROLE ||
            e.type === l.ApplicationCommandOptionType.MENTIONABLE;
        return {
          canMentionEveryone: t || i,
          canMentionHere: t,
          canMentionChannels: t || n,
          canMentionUsers: t || s,
          canMentionRoles: t || i,
          canMentionAnyGuildUser: s,
          canMentionNonMentionableRoles: i,
        };
      }
      function N(e) {
        return i(e).subtract(1).toString();
      }
      function O(e, t, n, s) {
        if (n) return !1;
        if (s.isMultiUserDM())
          return (
            U(
              s.guild_id,
              { location: "canUseApplicationCommands" },
              { autoTrackExposure: !1 }
            ) || t.getIntegrations(s.id).length > 0
          );
        if (s.isDM())
          return (
            !s.isSystemDM() &&
            (null != s.rawRecipients.find(e => e.bot) ||
              U(
                s.guild_id,
                { location: "canUseApplicationCommands" },
                { autoTrackExposure: !1 }
              ) ||
              t.getIntegrations(s.id).length > 0)
          );
        return s.isArchivedLockedThread()
          ? e.can(
              u.default.combine(
                T.Permissions.USE_APPLICATION_COMMANDS,
                T.Permissions.MANAGE_THREADS
              ),
              s
            )
          : !!(0, c.isReadableType)(s.type) &&
              e.can(
                u.default.combine(
                  T.Permissions.USE_APPLICATION_COMMANDS,
                  T.Permissions.SEND_MESSAGES
                ),
                s
              );
      }
      let P = u.default.deserialize(0);
      function b(e) {
        let {
          PermissionStore: t,
          guild: n,
          selfMember: s,
          applicationLevelPermissions: i,
          commandLevelPermissions: r,
          defaultMemberPermissions: a,
        } = e;
        if (n.ownerId === s.userId || t.can(T.Permissions.ADMINISTRATOR, n))
          return !0;
        let o = n.id;
        if (null != r) {
          let e = V(s, o, r);
          if ("boolean" == typeof e) return e;
        }
        let d = V(s, o, i);
        return (
          ("boolean" != typeof d || !!d) &&
          (null == a || (!u.default.equals(a, P) && t.can(a, n)))
        );
      }
      function V(e, t, n) {
        let s =
          n[
            (0, _.toPermissionKey)(
              e.userId,
              h.ApplicationCommandPermissionType.USER
            )
          ];
        if (null != s) return s.permission;
        let i = !1;
        for (let t of e.roles) {
          let e =
            n[
              (0, _.toPermissionKey)(t, h.ApplicationCommandPermissionType.ROLE)
            ];
          if (null != e && ((i = !0), e.permission)) return !0;
        }
        if (i) return !1;
        let r =
          n[(0, _.toPermissionKey)(t, h.ApplicationCommandPermissionType.ROLE)];
        return null != r ? r.permission : null;
      }
      function R(e) {
        switch (e) {
          case h.CommandOrigin.CHAT:
            return g.DraftType.SlashCommand;
          case h.CommandOrigin.APPLICATION_LAUNCHER:
            return g.DraftType.ApplicationLauncherCommand;
        }
      }
      function k(e) {
        if (null != e) {
          if (e.id === p.BuiltInSectionId.BUILT_IN)
            return h.ApplicationCommandTriggerSections.BUILT_IN;
          else if (e.id === p.BuiltInSectionId.FRECENCY)
            return h.ApplicationCommandTriggerSections.FRECENCY;
          else return h.ApplicationCommandTriggerSections.APP;
        }
      }
      function M(e) {
        var t, n;
        return {
          type: h.ApplicationCommandSectionType.APPLICATION,
          id: e.id,
          name:
            null !==
              (n =
                null == e
                  ? void 0
                  : null === (t = e.bot) || void 0 === t
                    ? void 0
                    : t.username) && void 0 !== n
              ? n
              : e.name,
          icon: e.icon,
          application: e,
        };
      }
      function w(e) {
        let t = e.id,
          n = e.options,
          s =
            null == n
              ? void 0
              : n.find(
                  e =>
                    e.type === l.ApplicationCommandOptionType.SUB_COMMAND_GROUP
                );
        null != s &&
          ((t += "".concat(p.SUB_COMMAND_KEY_SEPARATOR).concat(s.name)),
          (n = s.options));
        let i =
          null == n
            ? void 0
            : n.find(
                e => e.type === l.ApplicationCommandOptionType.SUB_COMMAND
              );
        return (
          null != i &&
            ((t += "".concat(p.SUB_COMMAND_KEY_SEPARATOR).concat(i.name)),
            (n = i.options)),
          { commandKey: t, interactionOptions: n }
        );
      }
      function L(e, t, n) {
        let s =
            v.default.useExperiment(t, n).userAppsTreatment ===
            m.UserAppsTreatment.ALLOWED,
          i =
            E.default.useExperiment({ guildId: null != e ? e : "", ...t }, n)
              .userAppsTreatment === m.UserAppsTreatment.ALLOWED;
        return s && (null == e || i);
      }
      function U(e, t, n) {
        let s =
            v.default.getCurrentConfig(t, n).userAppsTreatment ===
            m.UserAppsTreatment.ALLOWED,
          i =
            E.default.getCurrentConfig({ guildId: null != e ? e : "", ...t }, n)
              .userAppsTreatment === m.UserAppsTreatment.ALLOWED;
        return s && (i || null == e);
      }
      function G(e) {
        var t, n;
        let { command: s, location: i, triggerSection: r, queryLength: a } = e;
        (0, f.trackWithMetadata)(
          y.AnalyticEvents.APPLICATION_COMMAND_SELECTED,
          {
            command_id:
              null !==
                (n =
                  null === (t = s.rootCommand) || void 0 === t
                    ? void 0
                    : t.id) && void 0 !== n
                ? n
                : s.id,
            application_id: s.applicationId,
            location: i,
            section: r,
            query_length: a,
            command_text_length: s.displayName.length,
          }
        );
      }
    },
    349503: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          FetchState: function () {
            return s;
          },
          default: function () {
            return _;
          },
        }),
        n("222007");
      var s,
        i,
        r = n("446674"),
        a = n("913144");
      ((i = s || (s = {}))[(i.FETCHING = 0)] = "FETCHING"),
        (i[(i.FETCHED = 1)] = "FETCHED"),
        (i[(i.ERROR = 2)] = "ERROR");
      let o = {},
        d = {},
        u = new Set(),
        l = {};
      class f extends r.default.Store {
        getApplication(e) {
          if (null != e) return o[e];
        }
        getApplications() {
          return o;
        }
        getApplicationFetchState(e) {
          if (null != e) return d[e];
        }
        getApplicationFetchStates() {
          return d;
        }
        isInvalidApplication(e) {
          return null != e && u.has(e);
        }
        getInvalidApplicationIds() {
          return u;
        }
        isFetching(e) {
          return 0 === this.getApplicationFetchState(e);
        }
        getApplicationLastFetchTime(e) {
          if (null != e) return l[e];
        }
      }
      f.displayName = "ApplicationDirectoryApplicationsStore";
      var _ = new f(a.default, {
        APPLICATION_DIRECTORY_FETCH_APPLICATION: function (e) {
          let { applicationId: t } = e;
          d = { ...d, [t]: 0 };
        },
        APPLICATION_DIRECTORY_FETCH_APPLICATION_SUCCESS: function (e) {
          let { application: t } = e;
          (o = { ...o, [t.id]: t }), (d = { ...d, [t.id]: 1 });
          let n = Date.now();
          (l = { ...l, [t.id]: n }),
            u.has(t.id) && (u.delete(t.id), (u = new Set(u)));
        },
        APPLICATION_DIRECTORY_FETCH_APPLICATION_FAILURE: function (e) {
          let { applicationId: t, isInvalidApplication: n } = e;
          (d = { ...d, [t]: 2 }), n && (u.add(t), (u = new Set(u)));
        },
      });
    },
    412707: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ApplicationDirectoryViews: function () {
            return r;
          },
          ApplicationDirectoryEntrypointNames: function () {
            return a;
          },
          useApplicationDirectoryHistory: function () {
            return c;
          },
          getPreviousView: function () {
            return g;
          },
          getCurrentView: function () {
            return m;
          },
          setEntrypoint: function () {
            return h;
          },
          setGuildId: function () {
            return v;
          },
          resetApplicationDirectoryHistory: function () {
            return E;
          },
          setTrackedOpenedFromExternalEntrypoint: function () {
            return p;
          },
        });
      var s,
        i,
        r,
        a,
        o = n("803182"),
        d = n("308503"),
        u = n("393414"),
        l = n("349503"),
        f = n("49111");
      ((s = r || (r = {})).HOME = "home"),
        (s.SEARCH = "search"),
        (s.APPLICATION = "application"),
        ((i = a || (a = {})).EXTERNAL = "External"),
        (i.KEYBOARD_SHORTCUT = "Keyboard Shortcut"),
        (i.APPLICATION_DIRECTORY_URL = "Application Directory URL"),
        (i.APPLICATION_DIRECTORY_PROFILE_EMBED =
          "Application Directory Profile Embed"),
        (i.APPLICATION_DIRECTORY_UPSELL_MODAL =
          "Application Directory Upsell Modal"),
        (i.GUILD_HEADER_POPOUT = "Guild Header Popout"),
        (i.GUILD_SETTINGS = "Guild Settings"),
        (i.GUILD_INTEGRATION_SETTINGS = "Guild Integration Settings"),
        (i.GUILD_CONTEXT_MENU = "Guild Context Menu");
      let _ = (0, d.default)(() => ({
          guildId: null,
          entrypoint: null,
          trackedOpenedFromExternalEntrypoint: !1,
        })),
        c = _;
      function g() {
        let {
          location: { state: e },
        } = (0, u.getHistory)();
        return null == e ? void 0 : e.previousView;
      }
      function m() {
        var e, t;
        let {
            location: { pathname: n },
          } = (0, u.getHistory)(),
          s = (0, o.matchPath)(n, {
            path: f.Routes.APPLICATION_DIRECTORY,
            exact: !0,
          }),
          i = (0, o.matchPath)(n, {
            path: f.Routes.APPLICATION_DIRECTORY_SEARCH,
            exact: !0,
          }),
          r = (0, o.matchPath)(n, {
            path: [
              f.Routes.APPLICATION_DIRECTORY_PROFILE(":applicationId"),
              f.Routes.APPLICATION_DIRECTORY_PROFILE(
                ":applicationId",
                ":section"
              ),
            ],
            exact: !0,
          }),
          { applicationId: a, section: d } =
            null !== (e = null == r ? void 0 : r.params) && void 0 !== e
              ? e
              : {};
        if (null != s) return { type: "home" };
        if (null != i) return { type: "search" };
        if (null != r && null != a) {
          let e =
            null === (t = l.default.getApplication(a)) || void 0 === t
              ? void 0
              : t.name;
          return {
            type: "application",
            applicationId: a,
            applicationName: e,
            section: d,
          };
        }
      }
      function h(e) {
        _.setState({ entrypoint: e });
      }
      function v(e) {
        _.setState({ guildId: e });
      }
      function E() {
        _.setState({ entrypoint: null, guildId: null });
      }
      function p(e) {
        _.setState({ trackedOpenedFromExternalEntrypoint: e });
      }
    },
    750947: function (e, t, n) {
      "use strict";
      var s, i;
      n.r(t),
        n.d(t, {
          ApplicationDirectoryProfileSections: function () {
            return s;
          },
        }),
        ((i = s || (s = {})).GENERAL = "GENERAL"),
        (i.IMAGES = "IMAGES"),
        (i.PREMIUM = "PREMIUM"),
        (i.PRIVACY = "PRIVACY");
    },
    988268: function (e, t, n) {
      "use strict";
      var s, i, r, a;
      n.r(t),
        n.d(t, {
          ApplicationTypes: function () {
            return s;
          },
          BotTagTypes: function () {
            return i;
          },
        }),
        ((r = s || (s = {}))[(r.GAME = 1)] = "GAME"),
        (r[(r.TICKETED_EVENTS = 3)] = "TICKETED_EVENTS"),
        (r[(r.GUILD_ROLE_SUBSCRIPTIONS = 4)] = "GUILD_ROLE_SUBSCRIPTIONS"),
        ((a = i || (i = {}))[(a.BOT = 0)] = "BOT"),
        (a[(a.SERVER = 1)] = "SERVER"),
        (a[(a.SYSTEM_DM = 2)] = "SYSTEM_DM"),
        (a[(a.OFFICIAL = 3)] = "OFFICIAL"),
        (a[(a.STAFF_ONLY_DM = 4)] = "STAFF_ONLY_DM"),
        (a[(a.ORIGINAL_POSTER = 5)] = "ORIGINAL_POSTER"),
        (a[(a.AI = 6)] = "AI"),
        (a[(a.REMIX = 7)] = "REMIX");
    },
    195052: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var s = n("37983");
      n("884691");
      var i = n("95410"),
        r = n("77078"),
        a = n("773336"),
        o = {
          show(e) {
            (0, r.openModalLazy)(async () => {
              let { default: t } = await n
                .el("745705")
                .then(n.bind(n, "745705"));
              return n => (0, s.jsx)(t, { ...n, url: e });
            });
          },
          getBlockedDomains() {
            if ((0, a.isDesktop)()) {
              let e = i.default.get("BlockedDomainsV2");
              return Promise.resolve(null == e ? [] : e.split("\n"));
            }
            return Promise.resolve([]);
          },
          saveBlockedDomains(e) {
            (0, a.isDesktop)() &&
              i.default.set("BlockedDomainsV2", e.join("\n"));
          },
        };
    },
    352266: function (e, t, n) {
      "use strict";
      let s;
      n.r(t),
        n.d(t, {
          default: function () {
            return m;
          },
        }),
        n("222007");
      var i = n("446674"),
        r = n("95410"),
        a = n("913144"),
        o = n("48703"),
        d = n("599110"),
        u = n("195052"),
        l = n("49111");
      let f = "BlockedDomainStore",
        _ = "BlockedDomainRevision",
        c = null;
      class g extends i.default.Store {
        initialize() {
          (s = null),
            r.default.get(f) && (r.default.remove(_), r.default.remove(f));
        }
        getCurrentRevision() {
          if (null == s) {
            var e;
            s = null !== (e = r.default.get(_)) && void 0 !== e ? e : null;
          }
          return s;
        }
        async getBlockedDomainList() {
          return (
            null == c && (c = new Set(await u.default.getBlockedDomains())), c
          );
        }
        isBlockedDomain(e) {
          let t = n("874749");
          if (null == c) return this.getBlockedDomainList(), null;
          let s = (0, o.getHostname)(e),
            i = new t.hash.sha256(),
            r = t.codec.hex.fromBits(i.update(s).finalize()),
            a = "";
          c.has(r) && (a = s);
          let u = s.indexOf(".");
          for (; -1 !== u && "" === a; )
            (s = s.substring(u + 1)),
              i.reset(),
              (r = t.codec.hex.fromBits(i.update(s).finalize())),
              c.has(r) && (a = s),
              (u = s.indexOf("."));
          return "" !== a
            ? (d.default.track(l.AnalyticEvents.LINK_SECURITY_CHECK_BLOCKED, {
                blocked_domain: a,
              }),
              a)
            : null;
        }
      }
      g.displayName = "BlockedDomainStore";
      var m = new g(a.default, {
        BLOCKED_DOMAIN_LIST_FETCHED: function (e) {
          let { list: t, revision: n } = e;
          (c = null),
            (s = null),
            u.default.saveBlockedDomains(t),
            r.default.set("BlockedDomainRevision", n);
        },
      });
    },
    837374: function (e, t, n) {
      "use strict";
      var s, i;
      function r(e) {
        let {
          sessionId: t,
          userId: n,
          applicationId: s,
          channelId: i,
          streamKey: r,
        } = e;
        return {
          session_id: t,
          user_id: n,
          application_id: s,
          channel_id: i,
          stream_key: r,
        };
      }
      function a(e, t, n) {
        let {
          session_id: s,
          application_id: i,
          channel_id: r,
          stream_key: a,
        } = e;
        return {
          sessionId: s,
          userId: t,
          applicationId: i,
          channelId: r,
          streamKey: a,
          source: n,
        };
      }
      n.r(t),
        n.d(t, {
          BroadcastSourceType: function () {
            return s;
          },
          broadcastToServer: function () {
            return r;
          },
          broadcastFromServer: function () {
            return a;
          },
        }),
        ((i = s || (s = {}))[(i.GLOBAL = 0)] = "GLOBAL"),
        (i[(i.GUILD = 1)] = "GUILD");
    },
    548578: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          MAX_CACHE_AGE_MS: function () {
            return i;
          },
          CACHE_VERSION: function () {
            return r;
          },
          getDefaultState: function () {
            return a;
          },
        });
      var s = n("718517");
      let i = 30 * s.default.Millis.DAY,
        r = "stable-51";
      function a() {
        return {
          nonce: "",
          useGuildVersions: !1,
          userGuildSettingsVersion: -1,
          version: r,
          cacheCreationDate: null,
          apiCodeVersion: 0,
          guildIdsRequiringDeletedIdsSync: [],
          lastSelectedGuildId: null,
        };
      }
    },
    288206: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return A;
          },
        }),
        n("222007");
      var s,
        i = n("446674"),
        r = n("913144"),
        a = n("105059"),
        o = n("11275"),
        d = n("605250"),
        u = n("271938"),
        l = n("162771"),
        f = n("91131"),
        _ = n("70754"),
        c = n("548578");
      let g = new d.default("ClientStateStore"),
        m = f.initialState.nonce,
        h = f.initialState.useGuildVersions,
        v = f.initialState.userGuildSettingsVersion,
        E = f.initialState.cacheCreationDate,
        p = f.initialState.apiCodeVersion,
        y = new Set(
          null !== (s = f.initialState.guildIdsRequiringDeletedIdsSync) &&
          void 0 !== s
            ? s
            : []
        ),
        T = f.initialState.lastSelectedGuildId,
        C = !1;
      function S() {
        (v = -1), f.clear(), (p = 0), y.clear();
      }
      class I extends i.default.Store {
        initialize() {
          this.waitFor(u.default),
            this.syncWith([l.default], () => {
              if (!C) return !1;
              T = l.default.getGuildId();
            });
        }
        persist(e) {
          g.verbose("writing ClientStateStore (nonce: ".concat(e, ")")),
            null == E && (E = Date.now()),
            (m = e),
            f.persist(u.default.getId(), {
              nonce: e,
              version: c.CACHE_VERSION,
              useGuildVersions: h,
              userGuildSettingsVersion: v,
              cacheCreationDate: E,
              apiCodeVersion: p,
              guildIdsRequiringDeletedIdsSync: Array.from(y),
              lastSelectedGuildId: T,
            });
        }
        clear() {
          S();
        }
        async getClientState() {
          let [e, t] = await Promise.all([
            h && (0, _.isCacheEnabled)()
              ? a.default.getCommittedVersions()
              : Promise.resolve({}),
            h && (0, _.isCacheEnabled)()
              ? o.default.getCommittedVersions()
              : Promise.resolve({}),
          ]);
          return {
            knownGuildVersions: e,
            highestLastMessageId: t.highest_last_message_id,
            readStateVersion: t.read_state_version,
            userGuildSettingsVersion: v,
            privateChannelsVersion: t.private_channels_version,
            apiCodeVersion: p,
            lastSelectedGuildId: T,
            userSettingsVersion: t.user_settings_version,
          };
        }
        getGuildIdsRequiringDeletedIdsSync() {
          return y;
        }
        getSavedNonce() {
          return m;
        }
      }
      I.displayName = "ClientStateStore";
      var A = new I(r.default, {
        BACKGROUND_SYNC: function (e) {
          for (let t of e.guilds)
            "partial" === t.data_mode && t.unableToSyncDeletes && y.add(t.id);
          null != e.apiCodeVersion && (p = e.apiCodeVersion);
        },
        CONNECTION_OPEN: function (e) {
          let { guilds: t, userGuildSettings: n, apiCodeVersion: s } = e;
          for (let e of ((v = n.version), (p = s), (C = !0), (h = !0), t))
            e.unableToSyncDeletes && y.add(e.id),
              e.unableToSyncDeletes && y.add(e.id);
        },
        DELETED_ENTITY_IDS: function (e) {
          y.delete(e.guild_id);
        },
        GUILD_CREATE: function (e) {
          let { guild: t } = e;
          !t.unavailable &&
            (t.unableToSyncDeletes && y.add(t.id),
            t.unableToSyncDeletes && y.add(t.id));
        },
        CLEAR_GUILD_CACHE: S,
        CLEAR_CACHES: S,
        LOGOUT: S,
        LOGIN: S,
        USER_GUILD_SETTINGS_FULL_UPDATE: function (e) {
          let { userGuildSettings: t } = e;
          for (let e of t)
            null != e.version && e.version > v && (v = e.version);
        },
      });
    },
    91131: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          initialState: function () {
            return o;
          },
          persist: function () {
            return d;
          },
          clear: function () {
            return u;
          },
        });
      var s = n("95410"),
        i = n("548578");
      let r = "ClientStateStore",
        a = (0, i.getDefaultState)();
      (a.version === i.CACHE_VERSION &&
        null != a.cacheCreationDate &&
        a.cacheCreationDate + i.MAX_CACHE_AGE_MS > Date.now()) ||
        (a = (0, i.getDefaultState)());
      let o = a;
      function d(e, t) {
        s.default.set(r, t);
      }
      function u() {
        s.default.remove(r);
      }
    },
    70754: function (e, t, n) {
      "use strict";
      function s() {
        return !1;
      }
      n.r(t),
        n.d(t, {
          isCacheEnabled: function () {
            return s;
          },
        });
    },
    949719: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ChannelRTCParticipantsIndexes: function () {
            return s;
          },
          default: function () {
            return i;
          },
        }),
        n("222007"),
        n("808653"),
        n("424973");
      var s,
        i,
        r,
        a = n("917351"),
        o = n("407846"),
        d = n("899633"),
        u = n("191225"),
        l = n("374014"),
        f = n("373469"),
        _ = n("271938"),
        c = n("950104"),
        g = n("42203"),
        m = n("42887"),
        h = n("280168"),
        v = n("697218"),
        E = n("555035"),
        p = n("800762"),
        y = n("387111"),
        T = n("246846"),
        C = n("99795"),
        S = n("49111"),
        I = n("353927");
      let A = "__EMBEDDED_ACTIVITIES__";
      function D(e) {
        switch (e.type) {
          case C.ParticipantTypes.ACTIVITY:
            return "\x00".concat(e.sortKey);
          case C.ParticipantTypes.HIDDEN_STREAM:
          case C.ParticipantTypes.STREAM:
            return ""
              .concat(e.userVideo ? "\x01" : "\x02")
              .concat((0, T.default)(e.userNick, e.user), "\x02");
          case C.ParticipantTypes.USER:
            var t, n;
            let s = "\x04";
            return (
              (
                null === (t = e.voiceState) || void 0 === t
                  ? void 0
                  : t.selfVideo
              )
                ? (s = "\x02")
                : (null === (n = e.voiceState) || void 0 === n
                    ? void 0
                    : n.selfStream) && (s = "\x03"),
              "".concat(s).concat((0, T.default)(e.userNick, e.user))
            );
        }
      }
      ((r = s || (s = {})).VIDEO = "VIDEO"),
        (r.STREAM = "STREAM"),
        (r.FILTERED = "FILTERED"),
        (r.SPEAKING = "SPEAKING"),
        (r.ACTIVITY = "ACTIVITY"),
        (i = class {
          get version() {
            return this.participantByIndex.version;
          }
          size(e) {
            return this.participantByIndex.size(e);
          }
          toArray(e) {
            return this.participantByIndex.values(e, !0);
          }
          rebuild() {
            let e = g.default.getChannel(this.channelId);
            if (null == e || e.type === S.ChannelTypes.GUILD_TEXT) return !1;
            if (
              ((this.call = c.default.getCall(this.channelId)),
              e.isPrivate() && (null == this.call || this.call.unavailable))
            )
              return !1;
            let t = new Set(
              e.isGuildVocalOrThread()
                ? Object.keys(p.default.getVoiceStatesForChannel(e.id))
                : e.recipients
            );
            return (
              t.add(_.default.getId()),
              f.default
                .getAllActiveStreamsForChannel(this.channelId)
                .forEach(e => {
                  let { ownerId: n } = e;
                  return t.add(n);
                }),
              this.participantByIndex.clear(),
              (this.participants = {}),
              t.forEach(e => this.updateParticipant(e)),
              this.updateEmbeddedActivities(),
              !0
            );
          }
          getParticipant(e) {
            var t;
            return null !== (t = this.participantByIndex.get(e)) && void 0 !== t
              ? t
              : null;
          }
          updateEmbeddedActivities() {
            return this.updateParticipant(A);
          }
          hasEmbeddedActivity() {
            let e = this.participants[A];
            return null != e && e.length > 0;
          }
          updateParticipant(e) {
            let t = this.participants[e],
              n =
                e === A
                  ? this._getParticipantsForEmbeddedActivities()
                  : this._getParticipantsForUser(e);
            return (
              (null != t || 0 !== n.length) &&
              (null == t ||
                t.forEach(e => {
                  this.participantByIndex.delete(e.id);
                }),
              n.forEach(e => {
                this.participantByIndex.set(e.id, e);
              }),
              (this.participants[e] = n),
              !0)
            );
          }
          updateParticipantSpeaking(e) {
            var t, n;
            return (
              null !==
                (n =
                  null === (t = this.participants[e]) || void 0 === t
                    ? void 0
                    : t.reduce((t, n) => {
                        if (n.type === C.ParticipantTypes.USER) {
                          let t = (0, d.getIsSpeaking)({
                            userId: e,
                            checkIsMuted: !0,
                          });
                          return (
                            t && (this.lastSpoke[e] = Date.now()),
                            this.participantByIndex.set(n.id, {
                              ...n,
                              speaking: t,
                              lastSpoke: this.lastSpoke[e],
                              soundsharing: h.default.isSoundSharing(e),
                            }),
                            !0
                          );
                        }
                        return t;
                      }, !1)) &&
              void 0 !== n &&
              n
            );
          }
          updateParticipantQuality(e, t, n) {
            var s, i;
            return (
              null !==
                (i =
                  null === (s = this.participants[e]) || void 0 === s
                    ? void 0
                    : s.reduce(
                        (e, s) =>
                          s.type === C.ParticipantTypes.STREAM
                            ? (this.participantByIndex.set(s.id, {
                                ...s,
                                maxResolution: t,
                                maxFrameRate: n,
                              }),
                              !0)
                            : e,
                        !1
                      )) &&
              void 0 !== i &&
              i
            );
          }
          _getEmbeddedActivities() {
            let e = u.default.getEmbeddedActivitiesForChannel(this.channelId),
              t = u.default.getSelfEmbeddedActivityForChannel(this.channelId);
            return null == t
              ? e
              : (0, a.uniqBy)([...e, t], e => e.applicationId);
          }
          _getParticipantsForEmbeddedActivities() {
            return this._getEmbeddedActivities().map((e, t) => {
              var n, s;
              return {
                type: C.ParticipantTypes.ACTIVITY,
                id: e.applicationId,
                activityType: S.ActivityTypes.PLAYING,
                activityUrl: e.url,
                participants: new Set(e.userIds),
                guildId:
                  null !==
                    (s =
                      null === (n = g.default.getChannel(this.channelId)) ||
                      void 0 === n
                        ? void 0
                        : n.getGuildId()) && void 0 !== s
                    ? s
                    : null,
                sortKey: t.toString(),
              };
            });
          }
          _getParticipantsForUser(e) {
            var t, n, s, i, r, a;
            let o, u;
            let c = [],
              T = v.default.getUser(e);
            if (null == T) return c;
            let S = p.default.getVoiceStateForChannel(this.channelId, e),
              A = p.default.getVoicePlatformForChannel(this.channelId, e),
              D = g.default.getChannel(this.channelId),
              N =
                null !==
                  (s =
                    null === (n = this.call) || void 0 === n
                      ? void 0
                      : null === (t = n.ringing) || void 0 === t
                        ? void 0
                        : t.includes(e)) &&
                void 0 !== s &&
                s;
            (null != S || N) &&
              ((o = {
                type: C.ParticipantTypes.USER,
                ...E.default.getUserStreamData(
                  e,
                  null == D ? void 0 : D.getGuildId()
                ),
                user: T,
                id: T.id,
                voiceState: S,
                voicePlatform: A,
                speaking: (0, d.getIsSpeaking)({ userId: e, checkIsMuted: !0 }),
                lastSpoke:
                  null !== (i = this.lastSpoke[e]) && void 0 !== i ? i : 0,
                soundsharing: h.default.isSoundSharing(e),
                ringing: N,
                userNick: y.default.getName(
                  null == D ? void 0 : D.getGuildId(),
                  this.channelId,
                  T
                ),
                localVideoDisabled: m.default.isLocalVideoDisabled(T.id),
              }),
              c.push(o));
            let O =
              null !==
                (r = f.default.getStreamForUser(
                  e,
                  null == D ? void 0 : D.getGuildId()
                )) && void 0 !== r
                ? r
                : f.default.getActiveStreamForUser(
                    e,
                    null == D ? void 0 : D.getGuildId()
                  );
            if (null != O && O.channelId === this.channelId) {
              let t = (0, l.encodeStreamKey)(O),
                n = this.getParticipant(t),
                s =
                  O.ownerId === _.default.getId() &&
                  f.default.isSelfStreamHidden(this.channelId),
                i =
                  (null == n ? void 0 : n.type) === C.ParticipantTypes.STREAM
                    ? {
                        maxResolution:
                          null != n.maxResolution
                            ? { ...n.maxResolution }
                            : void 0,
                        maxFrameRate: n.maxFrameRate,
                      }
                    : null;
              (u = {
                ...E.default.getUserStreamData(
                  e,
                  null == D ? void 0 : D.getGuildId(),
                  I.MediaEngineContextTypes.STREAM
                ),
                ...i,
                type: s
                  ? C.ParticipantTypes.HIDDEN_STREAM
                  : C.ParticipantTypes.STREAM,
                id: t,
                userVideo:
                  null !== (a = null == S ? void 0 : S.selfVideo) &&
                  void 0 !== a &&
                  a,
                user: T,
                userNick: y.default.getName(
                  null == D ? void 0 : D.getGuildId(),
                  this.channelId,
                  T
                ),
                stream: O,
              }),
                c.push(u);
            }
            return c;
          }
          constructor(e) {
            (this.participants = {}),
              (this.lastSpoke = {}),
              (this.participantByIndex = new o.default(e => {
                var t;
                let n = [];
                return (
                  e.type === C.ParticipantTypes.USER &&
                    e.speaking &&
                    n.push("SPEAKING"),
                  e.type === C.ParticipantTypes.USER &&
                  (null === (t = e.voiceState) || void 0 === t
                    ? void 0
                    : t.selfVideo)
                    ? (n.push("VIDEO"),
                      !e.localVideoDisabled && n.push("FILTERED"))
                    : (0, C.isStreamParticipant)(e) &&
                      (n.push("STREAM"),
                      e.type !== C.ParticipantTypes.HIDDEN_STREAM &&
                        null != e.streamId &&
                        n.push("FILTERED")),
                  e.type === C.ParticipantTypes.ACTIVITY && n.push("ACTIVITY"),
                  n
                );
              }, D)),
              (this.channelId = e);
          }
        });
    },
    191145: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return en;
          },
        }),
        n("424973"),
        n("808653"),
        n("222007");
      var s = n("627445"),
        i = n.n(s),
        r = n("917351"),
        a = n.n(r),
        o = n("446674"),
        d = n("913144"),
        u = n("191225"),
        l = n("605250"),
        f = n("76393"),
        _ = n("374014"),
        c = n("373469"),
        g = n("271938"),
        m = n("950104"),
        h = n("42203"),
        v = n("18494"),
        E = n("280168"),
        p = n("697218"),
        y = n("555035"),
        T = n("800762"),
        C = n("949719"),
        S = n("99795"),
        I = n("49111");
      let A = new l.default("ChannelRTCStore"),
        D = Object.freeze([]),
        N = [],
        O = {},
        P = {},
        b = {},
        V = {},
        R = {},
        k = {},
        M = {},
        w = {},
        L = {},
        U = {};
      function G(e) {
        let t = O[e];
        return null == t && ((t = new C.default(e)), (O[e] = t)), t;
      }
      function F(e) {
        let t =
          arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : N;
        return t.reduce((t, n) => {
          let s = G(n);
          return e(s)
            ? ((function (e) {
                let t = G(e);
                if (0 === t.size()) return;
                let n =
                  ee(e) || K(t) ? I.ChannelModes.VIDEO : I.ChannelModes.VOICE;
                n === I.ChannelModes.VOICE
                  ? (delete V[e], delete R[e])
                  : (V[e] = n);
              })(n),
              (function (e) {
                let t = g.default.getId(),
                  n = G(e);
                if (0 === n.size() || v.default.getVoiceChannelId() !== e) {
                  j(e, null);
                  return;
                }
                let s = S.ParticipantSelectionTypes.NONE,
                  r = n
                    .toArray(C.ChannelRTCParticipantsIndexes.STREAM)
                    .find(
                      e =>
                        e.type === S.ParticipantTypes.STREAM &&
                        c.default.getActiveStreamForStreamKey(e.id)
                    );
                if (null != r)
                  i(
                    r.type === S.ParticipantTypes.STREAM,
                    "Impossible condition"
                  ),
                    (s = r.id);
                else if (1 === n.size()) s = t;
                else if (1 === n.size(C.ChannelRTCParticipantsIndexes.VIDEO)) {
                  let [e] = n.toArray(C.ChannelRTCParticipantsIndexes.VIDEO);
                  s = e.id;
                } else {
                  var a;
                  let e = n
                    .toArray()
                    .find(
                      e =>
                        e.type === S.ParticipantTypes.USER &&
                        e.id !== t &&
                        !e.ringing
                    );
                  s =
                    null !== (a = null == e ? void 0 : e.id) && void 0 !== a
                      ? a
                      : t;
                }
                let [o] = B(e);
                if (
                  o !== S.ParticipantSelectionTypes.AUTO &&
                  o !== S.ParticipantSelectionTypes.NONE
                ) {
                  let e = n.getParticipant(o);
                  (null == e ||
                    (e.type === S.ParticipantTypes.STREAM &&
                      null == c.default.getActiveStreamForStreamKey(e.id))) &&
                    (o = S.ParticipantSelectionTypes.NONE);
                }
                j(e, [o, s]);
              })(n),
              !0)
            : t;
        }, !1);
      }
      function H(e) {
        let t =
          arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : N;
        return F(t => t.updateParticipant(e), t);
      }
      function B(e) {
        var t;
        let n = h.default.getChannel(e),
          s = (null == n ? void 0 : n.isDM())
            ? S.ParticipantSelectionTypes.AUTO
            : S.ParticipantSelectionTypes.NONE;
        return null !== (t = P[e]) && void 0 !== t
          ? t
          : [s, S.ParticipantSelectionTypes.NONE];
      }
      function x(e) {
        let t = P[e];
        if (null == t) return !1;
        let [n] = P[e];
        return n !== S.ParticipantSelectionTypes.NONE;
      }
      function Y(e) {
        null == b[e] &&
          (b[e] = {
            gridDurationMs: 0,
            focusDurationMs: 0,
            toggleCount: 0,
            lastUpdate: 0,
          });
        let t = b[e],
          n = performance.now(),
          s = x(e);
        if (t.lastUpdate > 0) {
          let e = n - t.lastUpdate;
          t[s ? "focusDurationMs" : "gridDurationMs"] += e;
        }
        t.lastUpdate = n;
      }
      function j(e, t) {
        Y(e);
        let n = x(e);
        null == t ? delete P[e] : (P[e] = t);
        let s = x(e);
        n !== s && b[e].toggleCount++;
      }
      function K(e) {
        return (
          e.size(C.ChannelRTCParticipantsIndexes.STREAM) > 0 ||
          e.size(C.ChannelRTCParticipantsIndexes.VIDEO) > 0 ||
          e.hasEmbeddedActivity()
        );
      }
      function W(e) {
        delete O[e], delete P[e], delete V[e], delete R[e];
      }
      function z() {
        return F(
          e => e.rebuild(),
          (function () {
            let e = [],
              t = v.default.getChannelId();
            null != t && e.push(t);
            let n = v.default.getVoiceChannelId();
            null != n && !e.includes(n) && e.push(n);
            let s = f.default.getRemoteSessionId(),
              i = T.default.getVoiceStateForSession(g.default.getId(), s);
            (null == i ? void 0 : i.channelId) != null &&
              e.push(null == i ? void 0 : i.channelId),
              a.difference(N, e).forEach(W);
            let r = a.difference(e, N);
            return (N = e), r;
          })()
        );
      }
      function q() {
        return F(e => e.updateEmbeddedActivities());
      }
      function X(e) {
        let { userId: t } = e;
        return F(e => e.updateParticipantSpeaking(t));
      }
      function Q(e) {
        let { user: t } = e;
        return H(t.id);
      }
      function Z(e) {
        let { channelId: t } = e;
        return F(e => e.rebuild(), [t]);
      }
      function J(e) {
        let {
          channel: { id: t },
        } = e;
        return delete w[t], delete L[t], W(t);
      }
      function $(e) {
        let { streamKey: t } = e,
          { channelId: n, ownerId: s } = (0, _.decodeStreamKey)(t);
        return H(s, [n]);
      }
      function ee(e) {
        var t;
        return !!(null === (t = h.default.getChannel(e)) || void 0 === t
          ? void 0
          : t.isGuildVocal());
      }
      class et extends o.default.Store {
        initialize() {
          this.waitFor(
            c.default,
            g.default,
            m.default,
            h.default,
            u.default,
            v.default,
            E.default,
            p.default,
            y.default,
            T.default
          ),
            this.syncWith([u.default], q),
            this.syncWith([f.default], z);
        }
        getParticipantsVersion(e) {
          return G(e).version;
        }
        getParticipants(e) {
          var t;
          return null !== (t = G(e).toArray()) && void 0 !== t ? t : D;
        }
        getSpeakingParticipants(e) {
          var t;
          return null !==
            (t = G(e).toArray(C.ChannelRTCParticipantsIndexes.SPEAKING)) &&
            void 0 !== t
            ? t
            : D;
        }
        getFilteredParticipants(e) {
          return M[e]
            ? G(e).toArray(C.ChannelRTCParticipantsIndexes.FILTERED)
            : G(e).toArray();
        }
        getVideoParticipants(e) {
          var t;
          return null !==
            (t = G(e).toArray(C.ChannelRTCParticipantsIndexes.VIDEO)) &&
            void 0 !== t
            ? t
            : D;
        }
        getStreamParticipants(e) {
          var t;
          return null !==
            (t = G(e).toArray(C.ChannelRTCParticipantsIndexes.STREAM)) &&
            void 0 !== t
            ? t
            : D;
        }
        getActivityParticipants(e) {
          var t;
          return null !==
            (t = G(e).toArray(C.ChannelRTCParticipantsIndexes.ACTIVITY)) &&
            void 0 !== t
            ? t
            : D;
        }
        getParticipant(e, t) {
          return G(e).getParticipant(t);
        }
        getUserParticipantCount(e) {
          let t = G(e);
          return (
            t.size() -
            t.size(C.ChannelRTCParticipantsIndexes.STREAM) -
            t.size(C.ChannelRTCParticipantsIndexes.ACTIVITY)
          );
        }
        getParticipantsOpen(e) {
          var t;
          return null === (t = k[e]) || void 0 === t || t;
        }
        getVoiceParticipantsHidden(e) {
          var t;
          return null !== (t = M[e]) && void 0 !== t && t;
        }
        getSelectedParticipantId(e) {
          let [t, n] = B(e);
          return t === S.ParticipantSelectionTypes.NONE
            ? null
            : t !== S.ParticipantSelectionTypes.AUTO
              ? t
              : n === S.ParticipantSelectionTypes.NONE ||
                  n === S.ParticipantSelectionTypes.AUTO
                ? null
                : n;
        }
        getSelectedParticipant(e) {
          let t = this.getSelectedParticipantId(e);
          return null == t ? null : G(e).getParticipant(t);
        }
        getSelectedParticipantStats(e) {
          let t = b[e];
          return null == t
            ? {}
            : {
                view_mode_grid_duration_ms: Math.floor(t.gridDurationMs),
                view_mode_focus_duration_ms: Math.floor(t.focusDurationMs),
                view_mode_toggle_count: t.toggleCount,
              };
        }
        getMode(e) {
          var t;
          return null !== (t = V[e]) && void 0 !== t
            ? t
            : ee(e)
              ? I.ChannelModes.VIDEO
              : I.ChannelModes.VOICE;
        }
        getLayout(e) {
          var t, n;
          let s =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : I.AppContext.APP;
          if (__OVERLAY__) return I.ChannelLayouts.NORMAL;
          let i = h.default.getChannel(e),
            r = ee(e) || (null == i ? void 0 : i.isBroadcastChannel());
          return null !==
            (n = null === (t = R[e]) || void 0 === t ? void 0 : t[s]) &&
            void 0 !== n
            ? n
            : r
              ? I.ChannelLayouts.NO_CHAT
              : I.ChannelLayouts.NORMAL;
        }
        getChatOpen(e) {
          var t;
          return null !== (t = w[e]) && void 0 !== t && t;
        }
        isFullscreenInContext() {
          let e =
            arguments.length > 0 && void 0 !== arguments[0]
              ? arguments[0]
              : I.AppContext.APP;
          return Object.values(R).some(
            t => t[e] === I.ChannelLayouts.FULL_SCREEN
          );
        }
        getStageStreamSize(e) {
          return L[e];
        }
        getStageVideoLimitBoostUpsellDismissed(e) {
          return U[e];
        }
      }
      et.displayName = "ChannelRTCStore";
      var en = new et(d.default, {
        CONNECTION_OPEN: z,
        CONNECTION_OPEN_SUPPLEMENTAL: z,
        THREAD_LIST_SYNC: z,
        OVERLAY_INITIALIZE: z,
        VOICE_CHANNEL_SELECT: function (e) {
          let { channelId: t, currentVoiceChannelId: n } = e;
          return (
            null != t
              ? delete b[t]
              : null != n && (delete w[n], delete L[n], Y(n)),
            z()
          );
        },
        CHANNEL_SELECT: function (e) {
          let { channelId: t, messageId: n } = e,
            s = z(),
            i = h.default.getChannel(t);
          return null == t ||
            null == n ||
            ((null == i ? void 0 : i.type) !== I.ChannelTypes.GUILD_VOICE &&
              (null == i ? void 0 : i.type) !==
                I.ChannelTypes.GUILD_STAGE_VOICE) ||
            w[t]
            ? s
            : ((w[t] = !0), !0);
        },
        CHANNEL_RTC_ACTIVE_CHANNELS: z,
        VOICE_STATE_UPDATES: function (e) {
          let { voiceStates: t, initial: n } = e;
          return t.reduce((e, t) => {
            let { userId: s, channelId: i } = t;
            return n && null != i && !N.includes(i) ? e : H(s) || e;
          }, !1);
        },
        CHANNEL_CREATE: function (e) {
          let { channel: t } = e;
          if (t.type === I.ChannelTypes.GROUP_DM) {
            let e = t.originChannelId;
            if (null != e) {
              var n, s;
              return (
                (R[t.id] = {
                  [I.AppContext.APP]:
                    null !==
                      (s =
                        null === (n = R[e]) || void 0 === n
                          ? void 0
                          : n[I.AppContext.APP]) && void 0 !== s
                      ? s
                      : I.ChannelLayouts.NORMAL,
                }),
                !0
              );
            }
            t.isBroadcastChannel() &&
              (R[t.id] = { [I.AppContext.APP]: I.ChannelLayouts.NO_CHAT });
          }
          return !1;
        },
        CHANNEL_DELETE: J,
        THREAD_DELETE: J,
        CALL_CREATE: Z,
        CALL_UPDATE: Z,
        CALL_DELETE: function (e) {
          let { channelId: t } = e;
          return W(t);
        },
        CHANNEL_RTC_SELECT_PARTICIPANT: function (e) {
          let { channelId: t, id: n } = e,
            s = G(t),
            i = null == n;
          i &&
            s.toArray(C.ChannelRTCParticipantsIndexes.STREAM).forEach(e => {
              (0, S.isStreamParticipant)(e) && s.updateParticipant(e.user.id);
            });
          let [, r] = B(t);
          if (
            (j(t, [null != n ? n : S.ParticipantSelectionTypes.NONE, r]),
            (0, _.isStreamKey)(n))
          ) {
            try {
              let { ownerId: e } = (0, _.decodeStreamKey)(n);
              e === g.default.getId() && H(e, [t]);
            } catch (e) {
              A.warn("INVALID STREAM KEY FORMAT ".concat(n), e);
            }
            !K(s) && (k[t] = !1);
          }
        },
        CHANNEL_RTC_UPDATE_LAYOUT: function (e) {
          let { channelId: t, layout: n, appContext: s } = e;
          R[t] = { ...R[t], [s]: n };
        },
        CHANNEL_RTC_UPDATE_PARTICIPANTS_OPEN: function (e) {
          let { channelId: t, participantsOpen: n } = e;
          k[t] = n;
        },
        CHANNEL_RTC_UPDATE_VOICE_PARTICIPANTS_HIDDEN: function (e) {
          let { channelId: t, voiceParticipantsHidden: n } = e;
          M[t] = n;
        },
        CHANNEL_RTC_UPDATE_STAGE_STREAM_SIZE: function (e) {
          let { channelId: t, large: n } = e;
          L[t] = n;
        },
        CHANNEL_RTC_UPDATE_STAGE_VIDEO_LIMIT_BOOST_UPSELL_DISMISSED: function (
          e
        ) {
          let { channelId: t, dismissed: n } = e;
          U[t] = n;
        },
        STREAM_UPDATE_SELF_HIDDEN: function (e) {
          let { channelId: t, selfStreamHidden: n } = e,
            s = g.default.getId();
          if (n) {
            let [e] = B(t),
              n = (0, _.isStreamKey)(e);
            n && e.includes(s) && j(t, null);
          }
          H(s, [t]);
        },
        CHANNEL_RTC_UPDATE_CHAT_OPEN: function (e) {
          let { channelId: t, chatOpen: n } = e;
          w[t] = n;
        },
        RTC_CONNECTION_VIDEO: function (e) {
          let { channelId: t, userId: n } = e;
          return H(n, [t]);
        },
        RTC_CONNECTION_PLATFORM: function (e) {
          let { channelId: t, userId: n } = e;
          return H(n, [t]);
        },
        AUDIO_SET_LOCAL_VIDEO_DISABLED: function (e) {
          let { userId: t } = e;
          return H(t);
        },
        MEDIA_ENGINE_VIDEO_SOURCE_QUALITY_CHANGED: function (e) {
          let {
            channelId: t,
            senderUserId: n,
            maxResolution: s,
            maxFrameRate: i,
          } = e;
          return F(e => e.updateParticipantQuality(n, s, i), [t]);
        },
        STREAM_CLOSE: $,
        STREAM_DELETE: $,
        STREAM_WATCH: function (e) {
          let { streamKey: t } = e,
            { channelId: n, ownerId: s } = (0, _.decodeStreamKey)(t);
          return H(s, [n]);
        },
        SPEAKING: X,
        GUILD_SOUNDBOARD_SOUND_PLAY_START: X,
        GUILD_SOUNDBOARD_SOUND_PLAY_END: X,
        USER_UPDATE: Q,
        GUILD_MEMBER_UPDATE: Q,
        GUILD_DELETE: function (e) {
          let { guild: t } = e,
            n = [];
          if (
            (a.forEach(N, e => {
              let s = h.default.getChannel(e);
              (null == s || s.getGuildId() === t.id) && n.push(e);
            }),
            0 === n.length)
          )
            return !1;
          a.forEach(n, e => W(e));
        },
      });
    },
    98309: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var s = n("316693"),
        i = n("305961"),
        r = n("49111");
      let a = [
          r.ChannelTypes.GUILD_TEXT,
          r.ChannelTypes.GUILD_VOICE,
          r.ChannelTypes.GUILD_ANNOUNCEMENT,
          r.ChannelTypes.GUILD_FORUM,
          r.ChannelTypes.PUBLIC_THREAD,
          r.ChannelTypes.PRIVATE_THREAD,
        ],
        o = s.default.combine(
          r.Permissions.VIEW_CHANNEL,
          r.Permissions.SEND_MESSAGES
        );
      function d(e) {
        if (null == e || !a.includes(e.type)) return [];
        let t = i.default.getGuild(e.guild_id);
        return null == t
          ? []
          : Object.values(e.permissionOverwrites)
              .filter(e => {
                var n, i;
                return (
                  0 === e.type &&
                  (null === (i = t.roles[e.id]) || void 0 === i
                    ? void 0
                    : null === (n = i.tags) || void 0 === n
                      ? void 0
                      : n.guild_connections) === null &&
                  !s.default.hasAny(e.deny, o)
                );
              })
              .map(e => t.roles[e.id])
              .filter(e => null != e);
      }
    },
    792367: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          shouldShowVoiceChannelChangeConfirmation: function () {
            return d;
          },
        });
      var s = n("76393"),
        i = n("168973"),
        r = n("271938"),
        a = n("305961"),
        o = n("800762");
      function d(e) {
        let t = i.default.disableVoiceChannelChangeAlert;
        if (t) return !1;
        let n = s.default.getRemoteSessionId(),
          d = o.default.getVoiceStateForSession(r.default.getId(), n);
        if (
          null != d ||
          !o.default.isCurrentClientInVoiceChannel() ||
          o.default.isInChannel(e.id)
        )
          return !1;
        let u = a.default.getGuild(e.getGuildId());
        return (
          !(
            (null == u ? void 0 : u.afkChannelId) != null &&
            o.default.isInChannel(u.afkChannelId)
          ) && !0
        );
      }
    },
    774146: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          openNewUserAgeGateModal: function () {
            return o;
          },
          openClaimAccountModal: function () {
            return d;
          },
        });
      var s = n("37983");
      n("884691");
      var i = n("551042"),
        r = n("586391"),
        a = n("843455");
      function o(e) {
        (0, i.openModalLazy)(
          async () => {
            let { default: e } = await n.el("377531").then(n.bind(n, "377531"));
            return t => (0, s.jsx)(e, { ...t });
          },
          {
            modalKey: r.NEW_USER_AGE_GATE_MODAL_KEY,
            onCloseRequest: a.NOOP,
            onCloseCallback: e,
          }
        );
      }
      function d() {
        let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
          t = arguments.length > 1 ? arguments[1] : void 0;
        (0, i.openModalLazy)(
          async () => {
            let { default: t } = await n.el("633156").then(n.bind(n, "633156"));
            return n => (0, s.jsx)(t, { claimRequired: e, ...n });
          },
          { onCloseRequest: e ? a.NOOP : null, onCloseCallback: t }
        );
      }
    },
    523086: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("913144"),
        i = n("492397"),
        r = {
          openNativeAppModal(e, t) {
            !i.CONFERENCE_MODE_ENABLED &&
              (s.default.dispatch({
                type: "NATIVE_APP_MODAL_OPENING",
                code: e,
              }),
              n
                .el("43982")
                .then(n.bind(n, "43982"))
                .then(n => {
                  let { default: s } = n;
                  s.request(t, { code: e })
                    .then(e => {
                      let { code: t } = e;
                      return this.nativeModalOpened(t);
                    })
                    .catch(() => this.nativeModalOpenFailed(e))
                    .then(() => s.disconnect());
                }));
          },
          nativeModalOpened(e) {
            s.default.dispatch({ type: "NATIVE_APP_MODAL_OPENED", code: e });
          },
          nativeModalOpenFailed(e) {
            s.default.dispatch({
              type: "NATIVE_APP_MODAL_OPEN_FAILED",
              code: e,
            });
          },
        };
    },
    535013: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          officialApplicationIds: function () {
            return v;
          },
          ConnectionConfigurationRuleOperator: function () {
            return i;
          },
          getCallbackParamsFromURL: function () {
            return E;
          },
          getConnectionsCheckText: function () {
            return p;
          },
          isVerifiedRolesChannelVisible: function () {
            return y;
          },
          getVisibleConnectionsRole: function () {
            return T;
          },
          getCreatedAtDate: function () {
            return C;
          },
        });
      var s,
        i,
        r = n("627445"),
        a = n.n(r),
        o = n("917351"),
        d = n.n(o),
        u = n("746379"),
        l = n.n(u),
        f = n("429030");
      n("151426");
      var _ = n("98309");
      n("10641");
      var c = n("305961");
      n("957255");
      var g = n("214509"),
        m = n("49111"),
        h = n("782340");
      let v = [
        "426537812993638400",
        "1042836142560645130",
        "296023718839451649",
        "979802510766268446",
        "1031611223235637258",
        "512333785338216465",
      ];
      function E(e) {
        let { query: t } = l.parse(e, !0),
          { code: n, state: s, error: i, error_description: r } = t;
        return (
          a(!Array.isArray(n), "Received multiple query param values for code"),
          a(
            !Array.isArray(s),
            "Received multiple query param values for state"
          ),
          a(
            !Array.isArray(i),
            "Received multiple query param values for error"
          ),
          a(
            !Array.isArray(r),
            "Received multiple query param values for error_description"
          ),
          { code: n, state: s, error: i, errorDescription: r }
        );
      }
      function p(e) {
        let {
            connectionType: t,
            connectionMetadataField: n,
            operator: s,
            operatorText: i,
            value: r,
          } = e,
          a = null,
          o = Math.round(Number(r));
        switch (s) {
          case g.OperatorTypes.EQUAL:
            (a = h.default.Messages.CONNECTIONS_ROLE_POPOUT_MUST_BE),
              t === m.PlatformTypes.PAYPAL &&
                n === g.MetadataFields.PAYPAL_VERIFIED &&
                (a = h.default.Messages.CONNECTIONS_ROLE_POPOUT_MUST_HAVE_A);
            break;
          case g.OperatorTypes.NOT_EQUAL:
            a = h.default.Messages.CONNECTIONS_ROLE_POPOUT_MUST_NOT_BE;
            break;
          case g.OperatorTypes.LESS_THAN:
            (a = h.default.Messages.CONNECTIONS_ROLE_POPOUT_MUST_HAVE_AT_MOST),
              (o = Math.max(0, o - 1));
            break;
          case g.OperatorTypes.GREATER_THAN:
            (a = h.default.Messages.CONNECTIONS_ROLE_POPOUT_MUST_HAVE_AT_LEAST),
              (o = Math.max(0, o + 1));
            break;
          case void 0:
          case null:
            return null;
        }
        if (
          (null != i && (a = i), a instanceof f.FormattedMessage && null != s)
        )
          switch (t) {
            case m.PlatformTypes.REDDIT:
              switch (n) {
                case g.MetadataFields.CREATED_AT:
                  a = a.format({
                    platformQuantityHook: () =>
                      h.default.Messages.CONNECTIONS_ROLE_RULE_ACCOUNT_AGE.format(
                        { days: o }
                      ),
                  });
                  break;
                case g.MetadataFields.REDDIT_TOTAL_KARMA:
                  a = a.format({
                    platformQuantityHook: () =>
                      h.default.Messages.CONNECTIONS_ROLE_RULE_REDDIT_KARMA.format(
                        { karma: o }
                      ),
                  });
                  break;
                case g.MetadataFields.REDDIT_GOLD:
                  a = a.format({
                    platformQuantityHook: () =>
                      h.default.Messages.CONNECTIONS_ROLE_RULE_REDDIT_GOLD,
                  });
                  break;
                case g.MetadataFields.REDDIT_MOD:
                  a = a.format({
                    platformQuantityHook: () =>
                      h.default.Messages.CONNECTIONS_ROLE_RULE_REDDIT_MODERATOR,
                  });
                  break;
                default:
                  return null;
              }
              break;
            case m.PlatformTypes.STEAM:
              switch (n) {
                case g.MetadataFields.CREATED_AT:
                  a = a.format({
                    platformQuantityHook: () =>
                      h.default.Messages.CONNECTIONS_ROLE_RULE_ACCOUNT_AGE.format(
                        { days: o }
                      ),
                  });
                  break;
                case g.MetadataFields.STEAM_GAME_COUNT:
                  a = a.format({
                    platformQuantityHook: () =>
                      h.default.Messages.CONNECTIONS_ROLE_RULE_STEAM_GAMES.format(
                        { count: o }
                      ),
                  });
                  break;
                case g.MetadataFields.STEAM_ITEM_COUNT_TF2:
                  a = a.format({
                    platformQuantityHook: () =>
                      h.default.Messages.CONNECTIONS_ROLE_RULE_STEAM_TF2_ITEMS.format(
                        { count: o }
                      ),
                  });
                  break;
                case g.MetadataFields.STEAM_ITEM_COUNT_DOTA2:
                  a = a.format({
                    platformQuantityHook: () =>
                      h.default.Messages.CONNECTIONS_ROLE_RULE_STEAM_DOTA2_ITEMS.format(
                        { count: o }
                      ),
                  });
                  break;
                default:
                  return null;
              }
              break;
            case m.PlatformTypes.TWITTER:
              switch (n) {
                case g.MetadataFields.CREATED_AT:
                  a = a.format({
                    platformQuantityHook: () =>
                      h.default.Messages.CONNECTIONS_ROLE_RULE_ACCOUNT_AGE.format(
                        { days: o }
                      ),
                  });
                  break;
                case g.MetadataFields.TWITTER_VERIFIED:
                  a = a.format({
                    platformQuantityHook: () =>
                      h.default.Messages.CONNECTIONS_ROLE_RULE_TWITTER_VERIFIED,
                  });
                  break;
                case g.MetadataFields.TWITTER_FOLLOWERS_COUNT:
                  a = a.format({
                    platformQuantityHook: () =>
                      h.default.Messages.CONNECTIONS_ROLE_RULE_TWITTER_FOLLOWERS.format(
                        { count: o }
                      ),
                  });
                  break;
                case g.MetadataFields.TWITTER_STATUSES_COUNT:
                  a = a.format({
                    platformQuantityHook: () =>
                      h.default.Messages.CONNECTIONS_ROLE_RULE_TWITTER_STATUSES.format(
                        { count: o }
                      ),
                  });
                  break;
                default:
                  return null;
              }
              break;
            case m.PlatformTypes.PAYPAL:
              switch (n) {
                case g.MetadataFields.CREATED_AT:
                  a = a.format({
                    platformQuantityHook: () =>
                      h.default.Messages.CONNECTIONS_ROLE_RULE_ACCOUNT_AGE.format(
                        { days: o }
                      ),
                  });
                  break;
                case g.MetadataFields.PAYPAL_VERIFIED:
                  a = a.format({
                    platformQuantityHook: () =>
                      h.default.Messages.CONNECTIONS_ROLE_RULE_PAYPAL_VERIFIED,
                  });
                  break;
                default:
                  return null;
              }
              break;
            case m.PlatformTypes.EBAY:
              switch (n) {
                case g.MetadataFields.CREATED_AT:
                  a = a.format({
                    platformQuantityHook: () =>
                      h.default.Messages.CONNECTIONS_ROLE_RULE_ACCOUNT_AGE.format(
                        { days: o }
                      ),
                  });
                  break;
                case g.MetadataFields.EBAY_TOP_RATED_SELLER:
                  a = a.format({
                    platformQuantityHook: () =>
                      h.default.Messages.CONNECTIONS_EBAY_TOP_RATED_SELLER,
                  });
                  break;
                case g.MetadataFields.EBAY_POSITIVE_FEEDBACK_PERCENTAGE:
                  a = a.format({
                    platformQuantityHook: () =>
                      h.default.Messages.CONNECTIONS_ROLE_RULE_EBAY_POSITIVE_FEEDBACK_PERCENTAGE.format(
                        { value: o }
                      ),
                  });
                  break;
                case g.MetadataFields.EBAY_UNIQUE_POSITIVE_FEEDBACK_COUNT:
                  a = a.format({
                    platformQuantityHook: () =>
                      h.default.Messages.CONNECTIONS_ROLE_RULE_EBAY_UNIQUE_POSITIVE_FEEDBACK_COUNT.format(
                        { count: o }
                      ),
                  });
                  break;
                case g.MetadataFields.EBAY_UNIQUE_NEGATIVE_FEEDBACK_COUNT:
                  a = a.format({
                    platformQuantityHook: () =>
                      h.default.Messages.CONNECTIONS_ROLE_RULE_EBAY_UNIQUE_NEGATIVE_FEEDBACK_COUNT.format(
                        { count: o }
                      ),
                  });
                  break;
                default:
                  return null;
              }
              break;
            case m.PlatformTypes.TIKTOK:
              switch (n) {
                case g.MetadataFields.TIKTOK_VERIFIED:
                  a = a.format({
                    platformQuantityHook: () =>
                      h.default.Messages.CONNECTIONS_ROLE_RULE_TIKTOK_VERIFIED,
                  });
                  break;
                case g.MetadataFields.TIKTOK_FOLLOWER_COUNT:
                  a = a.format({
                    platformQuantityHook: () =>
                      h.default.Messages.CONNECTIONS_ROLE_RULE_TIKTOK_FOLLOWER_COUNT.format(
                        { count: o }
                      ),
                  });
                  break;
                case g.MetadataFields.TIKTOK_FOLLOWING_COUNT:
                  a = a.format({
                    platformQuantityHook: () =>
                      h.default.Messages.CONNECTIONS_ROLE_RULE_TIKTOK_FOLLOWING_COUNT.format(
                        { count: o }
                      ),
                  });
                  break;
                case g.MetadataFields.TIKTOK_LIKES_COUNT:
                  a = a.format({
                    platformQuantityHook: () =>
                      h.default.Messages.CONNECTIONS_ROLE_RULE_TIKTOK_LIKES_COUNT.format(
                        { count: o }
                      ),
                  });
                  break;
                default:
                  return null;
              }
              break;
            default:
              return null;
          }
        return a;
      }
      function y(e) {
        return Object.values(e.roles).some(e => {
          var t;
          return (
            (null === (t = e.tags) || void 0 === t
              ? void 0
              : t.guild_connections) === null
          );
        });
      }
      function T(e) {
        var t, n;
        let {
          guildMember: s,
          guild: i,
          channel: r,
          onlyChannelConnectionRoles: o = !1,
        } = e;
        if (null == s) return null;
        if (
          (null == i && null != r && (i = c.default.getGuild(r.getGuildId())),
          null == i)
        )
          return null;
        let u = s.roles
            .map(e => {
              var t;
              return null == i
                ? void 0
                : null === (t = i.roles) || void 0 === t
                  ? void 0
                  : t[e];
            })
            .filter(e => {
              var t;
              return (
                (null == e
                  ? void 0
                  : null === (t = e.tags) || void 0 === t
                    ? void 0
                    : t.guild_connections) === null
              );
            })
            .sort(
              (e, t) => (
                a(null != e && null != t, "roleA or roleB is null"),
                t.position - e.position
              )
            ),
          l = d.intersection(u, (0, _.default)(r));
        return l.length > 0
          ? null !== (t = l[0]) && void 0 !== t
            ? t
            : null
          : o
            ? null
            : null !== (n = u[0]) && void 0 !== n
              ? n
              : null;
      }
      function C(e, t) {
        if (null == e || "" === e) return null;
        let n = new Date(e);
        return !(n instanceof Date) || isNaN(n.getTime())
          ? null
          : n.toLocaleDateString(t, {
              month: "short",
              day: "numeric",
              year: "numeric",
            });
      }
      ((s = i || (i = {}))[(s.AND = 0)] = "AND"), (s[(s.OR = 1)] = "OR");
    },
    214509: function (e, t, n) {
      "use strict";
      var s, i, r, a, o, d;
      n.r(t),
        n.d(t, {
          OperatorTypes: function () {
            return s;
          },
          MetadataFields: function () {
            return i;
          },
          GUILD_ROLE_CONNECTION_APPLICATION_CONNECTION_TYPE: function () {
            return u;
          },
          MetadataItemTypes: function () {
            return r;
          },
        }),
        ((a = s || (s = {}))[(a.EQUAL = 1)] = "EQUAL"),
        (a[(a.NOT_EQUAL = 2)] = "NOT_EQUAL"),
        (a[(a.LESS_THAN = 3)] = "LESS_THAN"),
        (a[(a.GREATER_THAN = 4)] = "GREATER_THAN"),
        ((o = i || (i = {})).CREATED_AT = "created_at"),
        (o.REDDIT_TOTAL_KARMA = "total_karma"),
        (o.REDDIT_GOLD = "gold"),
        (o.REDDIT_MOD = "mod"),
        (o.STEAM_GAME_COUNT = "game_count"),
        (o.STEAM_ITEM_COUNT_TF2 = "item_count_tf2"),
        (o.STEAM_ITEM_COUNT_DOTA2 = "item_count_dota2"),
        (o.TWITTER_VERIFIED = "verified"),
        (o.TWITTER_FOLLOWERS_COUNT = "followers_count"),
        (o.TWITTER_STATUSES_COUNT = "statuses_count"),
        (o.PAYPAL_VERIFIED = "verified"),
        (o.EBAY_POSITIVE_FEEDBACK_PERCENTAGE = "positive_feedback_percentage"),
        (o.EBAY_TOP_RATED_SELLER = "top_rated_seller"),
        (o.EBAY_UNIQUE_NEGATIVE_FEEDBACK_COUNT =
          "unique_negative_feedback_count"),
        (o.EBAY_UNIQUE_POSITIVE_FEEDBACK_COUNT =
          "unique_positive_feedback_count"),
        (o.TIKTOK_VERIFIED = "verified"),
        (o.TIKTOK_FOLLOWER_COUNT = "follower_count"),
        (o.TIKTOK_FOLLOWING_COUNT = "following_count"),
        (o.TIKTOK_LIKES_COUNT = "likes_count");
      let u = "application";
      ((d = r || (r = {}))[(d.INTEGER_LESS_THAN_EQUAL = 1)] =
        "INTEGER_LESS_THAN_EQUAL"),
        (d[(d.INTEGER_GREATER_THAN_EQUAL = 2)] = "INTEGER_GREATER_THAN_EQUAL"),
        (d[(d.INTEGER_EQUAL = 3)] = "INTEGER_EQUAL"),
        (d[(d.INTEGER_NOT_EQUAL = 4)] = "INTEGER_NOT_EQUAL"),
        (d[(d.DATETIME_LESS_THAN_EQUAL = 5)] = "DATETIME_LESS_THAN_EQUAL"),
        (d[(d.DATETIME_GREATER_THAN_EQUAL = 6)] =
          "DATETIME_GREATER_THAN_EQUAL"),
        (d[(d.BOOLEAN_EQUAL = 7)] = "BOOLEAN_EQUAL"),
        (d[(d.BOOLEAN_NOT_EQUAL = 8)] = "BOOLEAN_NOT_EQUAL");
    },
    926994: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          openProviderAuthorize: function () {
            return c;
          },
          default: function () {
            return g;
          },
        });
      var s = n("37983");
      n("884691");
      var i = n("77078"),
        r = n("619340"),
        a = n("455711"),
        o = n("938157"),
        d = n("448819"),
        u = n("128259"),
        l = n("773336"),
        f = n("214509"),
        _ = n("49111");
      async function c(e) {
        let { location: t, twoWayLinkType: n } =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
          s = arguments.length > 2 ? arguments[2] : void 0,
          i = Math.round(screen.width / 2 - 350),
          a = screen.height > 640 ? Math.round(screen.height / 2 - 320) : 0,
          o = null;
        !(0, l.isDesktop)() &&
          (o = window.open(
            ""
              .concat(window.location.protocol, "//")
              .concat(window.location.host)
              .concat(_.Routes.CONNECTIONS(e), "?loading=true"),
            "authorize",
            "scrollbars=yes,resizable=yes,toolbar=no,location=yes,top="
              .concat(a, ",left=")
              .concat(i, ",width=")
              .concat(700, ",height=")
              .concat(640)
          ));
        let d = s;
        if (
          null == d &&
          e !== f.GUILD_ROLE_CONNECTION_APPLICATION_CONNECTION_TYPE
        ) {
          let { body: s } = await r.default.authorize(e, {
            location: t,
            twoWayLinkType: n,
          });
          d = s.url;
        }
        if (null != d)
          return null != o ? (o.location.href = d) : window.open(d), d;
      }
      function g(e, t, r) {
        if (
          (e === _.PlatformTypes.LEAGUE_OF_LEGENDS &&
            (e = _.PlatformTypes.RIOT_GAMES),
          e === _.PlatformTypes.CRUNCHYROLL)
        ) {
          a.showModal([null != t ? t : "unknown"]);
          return;
        }
        if (e === _.PlatformTypes.XBOX) {
          d.showModal([null != t ? t : "unknown"]);
          return;
        }
        if (
          e === _.PlatformTypes.PLAYSTATION ||
          e === _.PlatformTypes.PLAYSTATION_STAGING
        ) {
          o.showModal([null != t ? t : "unknown"], e);
          return;
        }
        if (e === _.PlatformTypes.DOMAIN) {
          (0, i.openModalLazy)(async () => {
            let { default: e } = await n.el("359113").then(n.bind(n, "359113"));
            return n =>
              (0, s.jsx)(e, {
                analyticsLocation: [null != t ? t : "unknown"],
                ...n,
              });
          });
          return;
        }
        if (null != r) {
          (0, u.handleClick)({
            shouldConfirm: !0,
            href: r,
            onConfirm: () => {
              c(e, { location: t }, r);
            },
          });
          return;
        }
        c(e, { location: t });
      }
    },
    69927: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          setPageTitleNotificationCount: function () {
            return l;
          },
          flashPageTitle: function () {
            return f;
          },
          usePageTitle: function () {
            return c;
          },
          AppPageTitle: function () {
            return g;
          },
          usePageTitleManager: function () {
            return m;
          },
        }),
        n("222007");
      var s = n("884691"),
        i = n("308503"),
        r = n("773336");
      let a = { base: r.isPlatformEmbedded ? void 0 : "Discord" },
        o = 0,
        d = { count: 3, onlyWhenBlurred: !1, interval: 1e3 },
        u = (0, i.default)(() => ({
          titles: [a],
          notificationCount: void 0,
          flashQueue: [],
        }));
      function l(e) {
        u.setState({ notificationCount: e });
      }
      function f(e) {
        let t = { ...d, ...e, id: o++ };
        return (
          (t.count = Math.max(t.count, t.messages.length)),
          u.setState(e => ({ flashQueue: [...e.flashQueue, t] })),
          () => _(t.id)
        );
      }
      function _(e) {
        u.setState(t => ({ flashQueue: t.flashQueue.filter(t => t.id !== e) }));
      }
      function c(e) {
        s.useEffect(() => {
          var t;
          return (
            (t = e),
            u.setState(e => ({ titles: [t, ...e.titles] })),
            () => {
              u.setState(e => ({ titles: e.titles.filter(e => e !== t) }));
            }
          );
        }, [...Object.values(e)]);
      }
      function g(e) {
        return c(e), null;
      }
      function m() {
        let { skipsSettingDefaultPageTitle: e } =
          arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
        s.useEffect(() => {
          function e() {
            u.setState({ flashQueue: [] });
          }
          return (
            document.addEventListener("focusin", e, { capture: !0 }),
            () => document.removeEventListener("focusin", e, { capture: !0 })
          );
        }, []);
        let t = (function () {
          let [e, t] = u(e => {
              let { flashQueue: t } = e,
                n = (function (e) {
                  let t, n, s;
                  for (let i of e.titles) {
                    if (null != t && null != n) break;
                    (t = null != t ? t : i.base),
                      (n = null != n ? n : i.location),
                      (s = null != s ? s : i.subsection);
                  }
                  return [t, s, n];
                })(e)
                  .filter(e => null != e)
                  .join(" | "),
                s = (function (e) {
                  let { notificationCount: t } = e;
                  return null == t || 0 === t
                    ? ""
                    : t < 0
                      ? "• "
                      : "(".concat(t, ") ");
                })(e);
              return ["".concat(s).concat(n), t[0]];
            }),
            [n, i] = s.useState(!1),
            r = s.useRef(0),
            a = null == t ? void 0 : t.messages[r.current % t.messages.length];
          return (
            s.useEffect(() => {
              if (null == t) {
                (r.current = 0), i(!1);
                return;
              }
              if (document.hasFocus() && t.onlyWhenBlurred) {
                _(t.id), i(!1);
                return;
              }
              let e = setInterval(() => {
                if (r.current >= t.count) {
                  _(t.id), i(!1);
                  return;
                }
                i(e => !e || ((r.current += 1), !1));
              }, t.interval);
              return () => clearInterval(e);
            }, [t]),
            n ? a : e
          );
        })();
        s.useEffect(() => {
          let n = t === a.base;
          (!e || !n) && (document.title = t);
        }, [e, t]);
      }
    },
    599445: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          GuildShopStorefrontExperiment: function () {
            return i;
          },
          ShowGuildRoleSubInGuildShopExperiment: function () {
            return r;
          },
          GuildShopPreviewExperiment: function () {
            return a;
          },
        });
      var s = n("862205");
      let i = (0, s.createExperiment)({
          kind: "user",
          id: "2023-08_server_shop_storefront",
          label: "Server Shop Storefront",
          defaultConfig: { enabled: !1 },
          treatments: [
            {
              id: 1,
              label: "Enables Server shop storefront",
              config: { enabled: !0 },
            },
          ],
        }),
        r = (0, s.createExperiment)({
          kind: "user",
          id: "2023-09_show_server_sub_in_server_shop",
          label: "Show server sub in server shop",
          defaultConfig: { enabled: !1 },
          treatments: [
            {
              id: 1,
              label: "Enables showing server sub in server shop",
              config: { enabled: !0 },
            },
          ],
        }),
        a = (0, s.createExperiment)({
          kind: "user",
          id: "2023-09_server_shop_phantom_preview",
          label: "Server Shop Phantom Preview",
          defaultConfig: { enabled: !1 },
          treatments: [
            {
              id: 1,
              label: "Enables Server shop phantom preview",
              config: { enabled: !0 },
            },
          ],
        });
    },
    551254: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useIsEligibleForGuildShopStorefront: function () {
            return r;
          },
          isEligibleForGuildShopStorefront: function () {
            return a;
          },
          useIsEligibleForSubscriptionsInGuildShop: function () {
            return o;
          },
          isEligibleForSubscriptionsInGuildShop: function () {
            return d;
          },
          useIsEligibleForGuildShopPreview: function () {
            return u;
          },
        });
      var s = n("287883"),
        i = n("599445");
      function r() {
        let { enabled: e } = i.GuildShopStorefrontExperiment.useExperiment({
          location: "adf3ea_1",
        });
        return e;
      }
      function a() {
        let { enabled: e } = i.GuildShopStorefrontExperiment.getCurrentConfig({
          location: "adf3ea_2",
        });
        return e;
      }
      function o(e, t) {
        let { enabled: n } =
            i.ShowGuildRoleSubInGuildShopExperiment.useExperiment({
              location: t,
            }),
          r = (0, s.useGuildEligibleForGuildProducts)(e, t);
        return n && r;
      }
      function d(e, t) {
        let { enabled: n } =
            i.ShowGuildRoleSubInGuildShopExperiment.getCurrentConfig({
              location: t,
            }),
          r = (0, s.isGuildEligibleForGuildProducts)(e, t);
        return n && r;
      }
      function u(e) {
        let { enabled: t } = i.GuildShopPreviewExperiment.useExperiment({
          location: e,
        });
        return t;
      }
    },
    991148: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useGuildShopPreviewVisible: function () {
            return l;
          },
        });
      var s = n("65597"),
        i = n("151426"),
        r = n("10641"),
        a = n("287883"),
        o = n("957255"),
        d = n("551254"),
        u = n("49111");
      function l(e, t) {
        var n;
        let l = (0, d.useIsEligibleForGuildShopPreview)(t),
          f = (0, r.useIsDismissibleContentDismissed)(
            i.DismissibleContent.SERVER_SHOP_PHANTOM_PREVIEW
          ),
          _ = (0, s.default)(
            [o.default],
            () => null != e && o.default.can(u.Permissions.ADMINISTRATOR, e)
          ),
          c =
            null !==
              (n =
                null == e
                  ? void 0
                  : e.hasFeature(
                      u.GuildFeatures.PRODUCTS_AVAILABLE_FOR_PURCHASE
                    )) &&
            void 0 !== n &&
            n,
          g = (0, a.useGuildEligibleForGuildProducts)(
            null == e ? void 0 : e.id,
            "useGuildShopPreviewVisible"
          ),
          m = [
            u.GuildFeatures.CREATOR_MONETIZABLE,
            u.GuildFeatures.CREATOR_MONETIZABLE_PROVISIONAL,
            u.GuildFeatures.ROLE_SUBSCRIPTIONS_ENABLED,
          ].some(t => (null == e ? void 0 : e.hasFeature(t)) === !0);
        return null != e && _ && !c && m && l && g && !f;
      }
    },
    590260: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useGuildShopVisibleInGuild: function () {
            return d;
          },
          isGuildShopVisibleInGuild: function () {
            return u;
          },
        });
      var s = n("465869"),
        i = n("903724"),
        r = n("551254"),
        a = n("991148"),
        o = n("49111");
      function d(e) {
        let t = (0, r.useIsEligibleForGuildShopStorefront)(),
          n = (0, r.useIsEligibleForSubscriptionsInGuildShop)(
            null == e ? void 0 : e.id,
            "channel_list"
          ),
          d = (0, i.useRoleSubscriptionsVisibleInGuild)(
            null == e ? void 0 : e.id
          ),
          u = (0, a.useGuildShopPreviewVisible)(e, "channel_list"),
          { shouldHideGuildPurchaseEntryPoints: l } = (0,
          s.useShouldHideGuildPurchaseEntryPoints)(null == e ? void 0 : e.id);
        return (
          !!t &&
          null != e &&
          !l &&
          (e.hasFeature(o.GuildFeatures.PRODUCTS_AVAILABLE_FOR_PURCHASE) ||
            (n && d) ||
            u)
        );
      }
      function u(e) {
        let t = (0, r.isEligibleForGuildShopStorefront)(),
          n = (0, r.isEligibleForSubscriptionsInGuildShop)(
            null == e ? void 0 : e.id,
            "channel_list"
          ),
          s = (0, i.areRoleSubscriptionsVisibleInGuild)(
            null == e ? void 0 : e.id
          );
        return (
          !!t &&
          null != e &&
          (e.hasFeature(o.GuildFeatures.PRODUCTS_AVAILABLE_FOR_PURCHASE) ||
            (n && s))
        );
      }
    },
    250666: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          isCreatorMonetizationEnabledGuild: function () {
            return a;
          },
          default: function () {
            return o;
          },
        });
      var s = n("446674"),
        i = n("305961"),
        r = n("49111");
      function a(e) {
        return (
          !e.hasFeature(r.GuildFeatures.CREATOR_MONETIZABLE_DISABLED) &&
          (e.hasFeature(r.GuildFeatures.CREATOR_MONETIZABLE) ||
            e.hasFeature(r.GuildFeatures.CREATOR_MONETIZABLE_PROVISIONAL))
        );
      }
      function o(e) {
        return (0, s.useStateFromStores)([i.default], () => {
          let t = i.default.getGuild(e);
          return null != t && a(t);
        });
      }
    },
    465869: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useShouldHideGuildPurchaseEntryPoints: function () {
            return _;
          },
          useShouldRestrictUpdatingCreatorMonetizationSettings: function () {
            return c;
          },
          useIsMonetizationReapplicationDisabled: function () {
            return g;
          },
        });
      var s = n("884691"),
        i = n("446674"),
        r = n("763898"),
        a = n("371358"),
        o = n("648825"),
        d = n("305961"),
        u = n("736271"),
        l = n("49111");
      let f = e => {
          let t = (0, r.default)();
          s.useEffect(() => {
            if (
              null != e &&
              !!e.hasFeature(l.GuildFeatures.CREATOR_MONETIZABLE_RESTRICTED)
            )
              o.default.getMonetizationRestrictionsFetchState(e.id) ===
                o.FetchState.NOT_FETCHED &&
                a.fetchMonetizationRestrictions(e.id, { signal: t });
          }, [e, t]);
          let n = null == e ? void 0 : e.id,
            d = (0, i.useStateFromStoresArray)([o.default], () => {
              var e;
              return null !==
                (e = o.default.getMonetizationRestrictions(
                  null != n ? n : ""
                )) && void 0 !== e
                ? e
                : [];
            }),
            u = (0, i.useStateFromStores)(
              [o.default],
              () =>
                o.default.getMonetizationRestrictionsFetchState(
                  null != n ? n : ""
                ) === o.FetchState.FETCHING
            );
          return { restrictions: d, restrictionsLoading: u };
        },
        _ = e => {
          var t;
          let n = (0, i.useStateFromStores)(
              [d.default],
              () => d.default.getGuild(e),
              [e]
            ),
            { restrictions: s, restrictionsLoading: r } = f(n),
            a =
              (null == n
                ? void 0
                : n.hasFeature(l.GuildFeatures.CREATOR_MONETIZABLE)) ||
              (null == n
                ? void 0
                : n.hasFeature(
                    l.GuildFeatures.CREATOR_MONETIZABLE_PROVISIONAL
                  )),
            o =
              !a ||
              (r
                ? null ===
                    (t =
                      null == n
                        ? void 0
                        : n.hasFeature(
                            l.GuildFeatures.CREATOR_MONETIZABLE_RESTRICTED
                          )) ||
                  void 0 === t ||
                  t
                : (0, u.isRestrictedFromShowingGuildPurchaseEntryPoints)(s));
          return {
            shouldHideGuildPurchaseEntryPoints: o,
            restrictionsLoading: r,
          };
        },
        c = e => {
          var t;
          let n = (0, i.useStateFromStores)(
              [d.default],
              () => d.default.getGuild(e),
              [e]
            ),
            { restrictions: s, restrictionsLoading: r } = f(n),
            a = r
              ? null ===
                  (t =
                    null == n
                      ? void 0
                      : n.hasFeature(
                          l.GuildFeatures.CREATOR_MONETIZABLE_RESTRICTED
                        )) ||
                void 0 === t ||
                t
              : (0, u.isRestrictedFromUpdatingCreatorMonetizationSettings)(s),
            o = !!(null == n
              ? void 0
              : n.hasFeature(
                  l.GuildFeatures
                    .CREATOR_MONETIZABLE_PENDING_NEW_OWNER_ONBOARDING
                ));
          return {
            shouldRestrictUpdatingCreatorMonetizationSettings: a || o,
            allowSelfRemoveMonetization: !a,
            restrictionsLoading: r,
          };
        },
        g = e => {
          let t = (0, i.useStateFromStores)(
              [d.default],
              () => d.default.getGuild(e),
              [e]
            ),
            { restrictions: n, restrictionsLoading: s } = f(t),
            r = (0, u.isRestrictedFromMonetizationReapplication)(n);
          return {
            isMonetizationReapplicationDisabled: r,
            restrictionsLoading: s,
          };
        };
    },
    225772: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
      var s = n("385976"),
        i = n("867805"),
        r = n("49111");
      function a(e) {
        let t = null;
        if (null != e.emojiId && "0" !== e.emojiId) {
          let n = s.default.getUsableCustomEmojiById(e.emojiId);
          t =
            null != n ? { id: n.id, name: n.name, animated: n.animated } : null;
        } else if (null != e.emojiName && "" !== e.emojiName) {
          let n = i.default.getByName(
            i.default.convertSurrogateToName(e.emojiName, !1)
          );
          t = null != n ? { id: null, name: n.surrogates, animated: !1 } : null;
        }
        let n = Number(e.expiresAtMs);
        return {
          name: "Custom Status",
          type: r.ActivityTypes.CUSTOM_STATUS,
          state: e.text.length > 0 ? e.text : void 0,
          timestamps: n > 0 ? { end: n } : void 0,
          emoji: t,
        };
      }
    },
    676574: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          DevSettingsCategory: function () {
            return s;
          },
          default: function () {
            return l;
          },
        }),
        n("222007");
      var s,
        i,
        r = n("446674"),
        a = n("913144");
      ((i = s || (s = {}))[(i.MESSAGING = 0)] = "MESSAGING"),
        (i[(i.OVERLAYS = 1)] = "OVERLAYS");
      let o = {
          visual_effect_view_overrides: {
            label: "Blur view overrides for designers to test with",
            category: 1,
          },
          obscure_blur_effect_enabled: {
            label: "Force obscure blur effect on for message media and embeds",
            category: 1,
          },
          explicit_media_redaction_ignore_pending_scan: {
            label: "Ignore pending scan on explicit media",
            category: 1,
          },
          upload_fail_50: {
            label:
              "Uploads: Fail 50% of uploads with 500 status after a 1 second delay",
            category: 0,
          },
          send_fail_100: { label: "Send: Fail with 500 status", category: 0 },
        },
        d = {};
      class u extends r.default.DeviceSettingsStore {
        getUserAgnosticState() {
          return { toggleStates: d };
        }
        initialize(e) {
          for (var t in o) {
            var n, s;
            let i =
              null !==
                (s =
                  null == e
                    ? void 0
                    : null === (n = e.toggleStates) || void 0 === n
                      ? void 0
                      : n[t]) &&
              void 0 !== s &&
              s;
            d[t] = i;
          }
        }
        get(e) {
          var t;
          return null !== (t = d[e]) && void 0 !== t && t;
        }
        set(e, t) {
          return (d[e] = t), t;
        }
        all() {
          return d;
        }
        allByCategory(e) {
          return Object.entries(o)
            .filter(t => {
              let [n, s] = t;
              return s.category === e;
            })
            .map(e => {
              let [t, n] = e;
              return [t, d[t], n];
            });
        }
      }
      (u.displayName = "DevToolsDevSettingsStore"),
        (u.persistKey = "DevToolsDevSettingsStore");
      var l = new u(a.default, {
        DEV_TOOLS_DEV_SETTING_SET: function (e) {
          d[e.toggle] = e.value;
        },
      });
    },
    115279: function (e, t, n) {
      "use strict";
      var s, i, r, a, o, d, u, l, f, _;
      n.r(t),
        n.d(t, {
          EmojiCategoryTypes: function () {
            return s;
          },
          GRID_NAVIGATOR_ID: function () {
            return c;
          },
          EmojiCategories: function () {
            return i;
          },
          EmojiSubCategory: function () {
            return r;
          },
          INACTIVE_CATEGORY_INDEX: function () {
            return g;
          },
          EmojiSize: function () {
            return o;
          },
          EMOJI_PICKER_TAB_PANEL_ID: function () {
            return m;
          },
          EMOJI_PICKER_TAB_ID: function () {
            return h;
          },
          SOUNDBOARD_PICKER_TAB_PANEL_ID: function () {
            return v;
          },
          SOUNDBOARD_PICKER_TAB_ID: function () {
            return E;
          },
          GIF_PICKER_TAB_PANEL_ID: function () {
            return p;
          },
          GIF_PICKER_TAB_ID: function () {
            return y;
          },
          CUSTOM_UPLOAD_PICKER_TAB_PANEL_ID: function () {
            return T;
          },
          CUSTOM_UPLOAD_PICKER_TAB_ID: function () {
            return C;
          },
          EMOJI_SIZE_MAP: function () {
            return S;
          },
          EMOJI_ROW_SIZE: function () {
            return I;
          },
        }),
        ((d = s || (s = {})).GUILD = "GUILD"),
        (d.UNICODE = "UNICODE"),
        (d.RECENT = "RECENT"),
        (d.CUSTOM = "CUSTOM"),
        (d.SEARCH_RESULTS = "SEARCH_RESULTS"),
        (d.FAVORITES = "FAVORITES"),
        (d.TOP_GUILD_EMOJI = "TOP_GUILD_EMOJI"),
        (d.PREMIUM_UPSELL = "PREMIUM_UPSELL");
      let c = "emoji-picker-grid";
      ((u = i || (i = {})).RECENT = "recent"),
        (u.FAVORITES = "favorites"),
        (u.TOP_GUILD_EMOJI = "top guild emoji"),
        (u.CUSTOM = "custom"),
        (u.PEOPLE = "people"),
        (u.NATURE = "nature"),
        (u.FOOD = "food"),
        (u.ACTIVITY = "activity"),
        (u.TRAVEL = "travel"),
        (u.OBJECTS = "objects"),
        (u.SYMBOLS = "symbols"),
        (u.FLAGS = "flags"),
        (u.PREMIUM_UPSELL = "premium emoji"),
        ((l = r || (r = {})).NONE = ""),
        (l.TOP_GUILD_EMOJI = "top_server"),
        (l.NEWLY_ADDED_EMOJI = "newly_added"),
        ((f = a || (a = {}))[(f.EMOJI = 0)] = "EMOJI"),
        (f[(f.NSFW = 1)] = "NSFW");
      let g = -1;
      ((_ = o || (o = {}))[(_.MEDIUM = 40)] = "MEDIUM"),
        (_[(_.LARGE = 48)] = "LARGE");
      let m = "emoji-picker-tab-panel",
        h = "emoji-picker-tab",
        v = "soundboard-picker-tab-panel",
        E = "soundboard-picker-tab",
        p = "gif-picker-tab-panel",
        y = "gif-picker-tab",
        T = "custom-upload-picker-tab-panel",
        C = "custom-upload-picker-tab",
        S = { reaction: 32, default: 44, jumbo: 96 },
        I = 9;
    },
    39616: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("484026");
      let i = new s.default(function (e) {
        {
          let t = n("952110").emojiTermsImporter[e];
          return void 0 !== t ? t().then(e => e.default) : Promise.resolve({});
        }
      });
      var r = {
        setEmojiLocale: function (e) {
          i.setParams(e);
        },
        getTermsForEmoji: function (e) {
          let t = i.get();
          return void 0 !== t ? t[e] : [];
        },
      };
    },
    484026: function (e, t, n) {
      "use strict";
      var s;
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        }),
        (s = class {
          setParams(e) {
            this.param !== e &&
              ((this.param = e), (this.loading = !1), (this.loaded = !1));
          }
          get() {
            return this.ensureLoaded(), this.val;
          }
          ensureLoaded() {
            if (this.loaded || this.loading || void 0 === this.param) return;
            let e = this.param;
            (this.loading = !0),
              this.loader(e).then(t => {
                e === this.param &&
                  ((this.val = t), (this.loading = !1), (this.loaded = !0));
              });
          }
          constructor(e) {
            (this.loading = !1), (this.loaded = !1), (this.loader = e);
          }
        });
    },
    385976: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return eu;
          },
        }),
        n("222007"),
        n("581081"),
        n("424973"),
        n("686130"),
        n("781738"),
        n("808653");
      var s = n("917351"),
        i = n.n(s),
        r = n("866227"),
        a = n.n(r),
        o = n("102053"),
        d = n("446674"),
        u = n("913144"),
        l = n("80507"),
        f = n("802493"),
        _ = n("595525"),
        c = n("629538"),
        g = n("39616"),
        m = n("828674"),
        h = n("153043"),
        v = n("256941"),
        E = n("505985"),
        p = n("915639"),
        y = n("374363"),
        T = n("26989"),
        C = n("778689"),
        S = n("305961"),
        I = n("677099"),
        A = n("697218"),
        D = n("315102"),
        N = n("718517"),
        O = n("402671"),
        P = n("449008"),
        b = n("655518"),
        V = n("299039"),
        R = n("858619"),
        k = n("867805"),
        M = n("802461"),
        w = n("26430"),
        L = n("958706"),
        U = n("115279"),
        G = n("397336");
      let F = [
          U.EmojiCategories.TOP_GUILD_EMOJI.toString(),
          U.EmojiCategories.FAVORITES.toString(),
          U.EmojiCategories.RECENT.toString(),
          U.EmojiCategories.CUSTOM.toString(),
        ].concat(k.default.getCategories()),
        H = { pendingUsages: [] };
      class B {
        getEmoji(e) {
          return this.build(), this._emojiMap[e];
        }
        getUsableEmoji(e) {
          let t = this.getEmoji(e);
          return null != t && this.isUsable(t) ? t : null;
        }
        isUsable(e) {
          if (0 === e.roles.length) return !0;
          let t = T.default.getMember(this.id, this._userId);
          if (null == t) return !1;
          let n = t.roles.some(t => e.roles.includes(t));
          return !!(n || (0, h.isPurchasableRoleSubscriptionEmoji)(e)) || !1;
        }
        get rawEmojis() {
          return this._emojis;
        }
        get emojis() {
          return this.build(), this._emojis;
        }
        get emoticons() {
          return this.build(), this._emoticons;
        }
        get usableEmojis() {
          return this.build(), this._usableEmojis;
        }
        build() {
          this._dirty &&
            ((this._dirty = !1),
            this._emojis.forEach(e => {
              (e.url = D.default.getEmojiURL({
                id: e.id,
                animated: e.animated,
                size: 48,
              })),
                (e.allNamesString = ":".concat(e.name, ":")),
                (e.guildId = this.id),
                (e.type = R.EmojiTypes.GUILD),
                (this._emojiMap[e.id] = e);
            }),
            (this._usableEmojis = i.sortBy(
              this._emojis.filter(e => this.isUsable(e)),
              e => e.name
            )),
            (this._emoticons = this._usableEmojis.filter(
              e => !e.require_colons
            )));
        }
        constructor(e, t, n, s = !1) {
          (this._dirty = !0),
            (this._emojiMap = {}),
            (this._emoticons = []),
            (this._usableEmojis = []),
            (this._canSeeServerSubIAP = !1),
            (this._totalUsable = 0),
            (this.id = e),
            (this._userId = t),
            (this._emojis = n),
            (this._canSeeServerSubIAP = s);
        }
      }
      let x = V.default.fromTimestamp(Date.now() - 60 * N.default.Millis.DAY),
        Y = [],
        j = 2,
        K = F.slice(0),
        W = {},
        z = {},
        q = null,
        X = new Map();
      function Q(e) {
        var t;
        let n = Z()[e];
        return null != n
          ? null === (t = W[n]) || void 0 === t
            ? void 0
            : t.getUsableEmoji(e)
          : null;
      }
      function Z() {
        if ((J(), null == z))
          for (let e in ((z = {}), W)) {
            let t = W[e];
            for (let n of t.rawEmojis) z[n.id] = e;
          }
        return z;
      }
      async function J() {
        if (0 !== j) return;
        let e = f.default.database();
        if (null == e) return;
        j = 2;
        let t = await (0, _.tryLoadOrResetCacheGatewayAsync)(
          "EmojiStore.loadSavedEmojis",
          () =>
            o.default.timeAsync("\uD83D\uDCBE", "loadSavedEmojis", () =>
              c.default.getAsync(e)
            )
        );
        null != t &&
          u.default.dispatch({ type: "CACHED_EMOJIS_LOADED", emojis: t });
      }
      class $ {
        static get(e) {
          return (
            void 0 === e && (e = null),
            (null == $._lastInstance || $._lastInstance.guildId !== e) &&
              ($._lastInstance = new $(e)),
            $._lastInstance
          );
        }
        static reset() {
          $._lastInstance = null;
        }
        static resetFrequentlyUsed() {
          null != $._lastInstance && ($._lastInstance.frequentlyUsed = null);
        }
        static resetFavorites() {
          null != $._lastInstance &&
            (($._lastInstance.favorites = null),
            ($._lastInstance.favoriteNamesAndIds = null));
        }
        static clear(e) {
          null != $._lastInstance &&
            $._lastInstance.guildId === e &&
            ($._lastInstance = null);
        }
        ensureDisambiguated() {
          null == this.disambiguatedEmoji &&
            this._buildDisambiguatedCustomEmoji();
        }
        getDisambiguatedEmoji() {
          return (
            null == this.disambiguatedEmoji &&
              this._buildDisambiguatedCustomEmoji(),
            this.disambiguatedEmoji
          );
        }
        getCustomEmoji() {
          return (
            null == this.customEmojis && this._buildDisambiguatedCustomEmoji(),
            this.customEmojis
          );
        }
        getGroupedCustomEmoji() {
          return (
            null == this.groupedCustomEmojis &&
              this._buildDisambiguatedCustomEmoji(),
            this.groupedCustomEmojis
          );
        }
        getByName(e) {
          if (
            ((null == this.emojisByName || null == this.unicodeAliases) &&
              this._buildDisambiguatedCustomEmoji(),
            Object.prototype.hasOwnProperty.call(this.emojisByName, e))
          )
            return this.emojisByName[e];
          if (Object.prototype.hasOwnProperty.call(this.unicodeAliases, e)) {
            let t = this.unicodeAliases[e];
            if (Object.prototype.hasOwnProperty.call(this.emojisByName, t))
              return this.emojisByName[t];
          }
        }
        getEmoticonByName(e) {
          if (
            (null == this.emoticonsByName &&
              this._buildDisambiguatedCustomEmoji(),
            Object.prototype.hasOwnProperty.call(this.emoticonsByName, e))
          )
            return this.emoticonsByName[e];
        }
        getById(e) {
          if (
            (null == this.emojisById && this._buildDisambiguatedCustomEmoji(),
            Object.prototype.hasOwnProperty.call(this.emojisById, e))
          )
            return this.emojisById[e];
        }
        getCustomEmoticonRegex() {
          return (
            null == this.escapedEmoticonNames &&
              this._buildDisambiguatedCustomEmoji(),
            null == this.emoticonRegex &&
              null != this.escapedEmoticonNames &&
              "" !== this.escapedEmoticonNames &&
              (this.emoticonRegex = new RegExp(
                "^\\b(".concat(this.escapedEmoticonNames, ")\\b")
              )),
            this.emoticonRegex
          );
        }
        getFrequentlyUsedEmojisWithoutFetchingLatest() {
          return (
            this.ensureDisambiguated(),
            null == this.frequentlyUsed &&
              (this.frequentlyUsed = ee.frequently
                .map(e =>
                  null != e.id
                    ? this.getById(e.id)
                    : null != e.name
                      ? k.default.getByName(e.name)
                      : void 0
                )
                .filter(P.isNotNullish)),
            this.frequentlyUsed
          );
        }
        rebuildFavoriteEmojisWithoutFetchingLatest() {
          if (
            (this.ensureDisambiguated(),
            null == this.favorites || null == this.favoriteNamesAndIds)
          ) {
            var e, t;
            (this.favoriteNamesAndIds = new Set()),
              (this.favorites = (
                null !==
                  (t =
                    null ===
                      (e =
                        y.default.frecencyWithoutFetchingLatest
                          .favoriteEmojis) || void 0 === e
                      ? void 0
                      : e.emojis) && void 0 !== t
                  ? t
                  : []
              )
                .map(e => {
                  var t;
                  null === (t = this.favoriteNamesAndIds) ||
                    void 0 === t ||
                    t.add(e);
                  let n = this.getById(e);
                  return null == n && (n = k.default.getByName(e)), n;
                })
                .filter(P.isNotNullish));
          }
          return [this.favorites, this.favoriteNamesAndIds];
        }
        get favoriteEmojisWithoutFetchingLatest() {
          return this.rebuildFavoriteEmojisWithoutFetchingLatest()[0];
        }
        getEmojiInPriorityOrderWithoutFetchingLatest() {
          let e = new Set();
          return this.favoriteEmojisWithoutFetchingLatest
            .concat(this.getFrequentlyUsedEmojisWithoutFetchingLatest())
            .filter(t => !e.has(t) && (e.add(t), !0));
        }
        getTopEmojiWithoutFetchingLatest(e) {
          if ((this.ensureDisambiguated(), null == this.topEmojis)) {
            var t;
            let n = X.get(e),
              s = w.default.getTopEmojiIdsByGuildId(e);
            if (null == n && null == s) return Y;
            let i =
                null !== (t = null == n ? void 0 : n.emojiIds) && void 0 !== t
                  ? t
                  : s,
              r = i.map(e => {
                var t;
                return null !== (t = this.getById(e)) && void 0 !== t
                  ? t
                  : k.default.getByName(
                      k.default.convertSurrogateToName(e, !1)
                    );
              }),
              a = [];
            r.forEach(e => {
              null != e && a.push(e);
            });
            let o = this.getNewlyAddedEmojiForGuild(e).map(e => e.id);
            this.topEmojis = a.filter(e => !o.includes(e.id));
          }
          return this.topEmojis;
        }
        getNewlyAddedEmojiForGuild(e) {
          if ((this.ensureDisambiguated(), null == this.newlyAddedEmoji))
            return Y;
          let t = this.newlyAddedEmoji[e];
          return null == t ? Y : t;
        }
        getEscapedCustomEmoticonNames() {
          return (
            null == this.escapedEmoticonNames &&
              this._buildDisambiguatedCustomEmoji(),
            this.escapedEmoticonNames
          );
        }
        nameMatchesChain(e) {
          return i(this.getDisambiguatedEmoji()).filter(t => {
            let { id: n, names: s, name: r } = t,
              a = null != s && i.some(s, e),
              o = null != r && e(r),
              d = null != r && i.some(g.default.getTermsForEmoji(r), e),
              u =
                null != n &&
                i.some(M.default.getCaptionsForEmojiById({ emojiId: n }), e);
            return a || o || d || u;
          });
        }
        _buildDisambiguatedCustomEmoji() {
          let e = {},
            t = [];
          (this.emoticonRegex = null),
            (this.frequentlyUsed = null),
            (this.disambiguatedEmoji = []),
            (this.unicodeAliases = Object.create(null)),
            (this.customEmojis = Object.create(null)),
            (this.groupedCustomEmojis = Object.create(null)),
            (this.emoticonsByName = Object.create(null)),
            (this.emojisByName = Object.create(null)),
            (this.emojisById = Object.create(null)),
            (this.newlyAddedEmoji = Object.create(null));
          let n = t => {
              var n, s;
              let i = t.name,
                r = null !== (n = e[i]) && void 0 !== n ? n : 0;
              if (((e[i] = r + 1), r > 0)) {
                let e = "".concat(i, "~").concat(r);
                t = {
                  ...t,
                  name: e,
                  originalName: i,
                  allNamesString: ":".concat(e, ":"),
                };
              }
              if (
                ((this.emojisByName[t.name] = t),
                "names" in t &&
                  (null === (s = t.names) ||
                    void 0 === s ||
                    s.slice(1).forEach(e => (this.unicodeAliases[e] = t.name))),
                null != t.id)
              ) {
                let e, n;
                if (
                  ((this.emojisById[t.id] = t),
                  (this.customEmojis[t.name] = t),
                  t.type === R.EmojiTypes.GUILD)
                )
                  (e = t.guildId), (n = !0);
                null != e &&
                  (null != this.groupedCustomEmojis[e]
                    ? this.groupedCustomEmojis[e].push(t)
                    : (this.groupedCustomEmojis[e] = [t]),
                  n &&
                    V.default.compare(t.id, x) >= 0 &&
                    (null != this.newlyAddedEmoji[e]
                      ? this.newlyAddedEmoji[e].push(t)
                      : (this.newlyAddedEmoji[e] = [t])));
              }
              null == this.disambiguatedEmoji && (this.disambiguatedEmoji = []),
                this.disambiguatedEmoji.push(t);
            },
            s = e => {
              !Object.prototype.hasOwnProperty.call(
                this.emoticonsByName,
                e.name
              ) &&
                (t.push(b.default.escape(e.name)),
                (this.emoticonsByName[e.name] = e));
            };
          k.default.forEach(n);
          let r = e => {
            let t = W[null == e ? "null" : e];
            null != t && (i.each(t.usableEmojis, n), i.each(t.emoticons, s));
          };
          for (let e in (r(this.guildId), this.newlyAddedEmoji))
            null != this.newlyAddedEmoji[e]
              ? (this.newlyAddedEmoji[e] = this.newlyAddedEmoji[e]
                  .sort((e, t) => V.default.compare(t.id, e.id))
                  .slice(0, 3))
              : (this.newlyAddedEmoji[e] = []);
          I.default.getFlattenedGuildIds().forEach(e => {
            e !== this.guildId && r(e);
          }),
            (this.escapedEmoticonNames = t.join("|"));
        }
        constructor(e) {
          (this.emoticonRegex = null),
            (this.frequentlyUsed = null),
            (this.favorites = null),
            (this.favoriteNamesAndIds = null),
            (this.topEmojis = null),
            (this.escapedEmoticonNames = null),
            (this.disambiguatedEmoji = null),
            (this.newlyAddedEmoji = null),
            (this.isFavoriteEmojiWithoutFetchingLatest = e => {
              var t;
              if (null == e) return !1;
              let n = this.rebuildFavoriteEmojisWithoutFetchingLatest()[1];
              return null != e.id
                ? n.has(e.id)
                : n.has(null !== (t = e.name) && void 0 !== t ? t : "");
            }),
            (this.guildId = e);
        }
      }
      $._lastInstance = null;
      let ee = new l.default({
        computeBonus: () => 100,
        computeWeight: e => {
          let t = 0;
          return (
            e <= 3
              ? (t = 100)
              : e <= 15
                ? (t = 70)
                : e <= 30
                  ? (t = 50)
                  : e <= 45
                    ? (t = 30)
                    : e <= 80 && (t = 10),
            t
          );
        },
        lookupKey: e => {
          var t;
          return null !== (t = k.default.getByName(e)) && void 0 !== t
            ? t
            : Q(e);
        },
        afterCompute: () => {
          $.resetFrequentlyUsed(),
            (K = F.slice(0)),
            !i.some(W, e => e.usableEmojis.length > 0) &&
              K.splice(F.indexOf(U.EmojiCategories.CUSTOM), 1);
        },
        numFrequentlyItems: 42,
      });
      function et() {
        (W = {}), (z = {}), $.reset(), X.clear(), (j = 2);
      }
      function en(e) {
        let t = W[e];
        null != t && delete W[e];
      }
      function es() {
        (z = null), $.reset(), 0 !== j && ee.compute();
      }
      function ei(e, t) {
        if ((en(e), $.clear(e), null == t)) return;
        let n = A.default.getCurrentUser();
        if (null == n) return;
        let s = (0, E.canUseRoleSubscriptionIAP)(e);
        W[e] = new B(e, n.id, t, s);
      }
      function er() {
        var e, t, n, s;
        let r = y.default.settings,
          a =
            null === (t = r.textAndImages) || void 0 === t
              ? void 0
              : null === (e = t.diversitySurrogate) || void 0 === e
                ? void 0
                : e.value;
        null != a && k.default.setDefaultDiversitySurrogate(a), $.reset();
        let o = y.default.frecencyWithoutFetchingLatest,
          d =
            null !==
              (s =
                null === (n = o.emojiFrecency) || void 0 === n
                  ? void 0
                  : n.emojis) && void 0 !== s
              ? s
              : {};
        ee.overwriteHistory(
          i.mapValues(d, e => ({
            ...e,
            recentUses: e.recentUses.map(Number).filter(e => e > 0),
          })),
          H.pendingUsages
        ),
          i.isEmpty(d) &&
            i.isEmpty(H.pendingUsages) &&
            y.default.hasLoaded(
              G.UserSettingsTypes.FRECENCY_AND_FAVORITES_SETTINGS
            ) &&
            (ee.track("thumbsup"),
            ee.track("thumbsup"),
            ee.track("eyes"),
            ee.track("eyes"),
            ee.track("laughing"),
            ee.track("laughing"),
            ee.track("watermelon"),
            ee.track("fork_and_knife"),
            ee.track("yum"),
            ee.track("weary"),
            ee.track("tired_face"),
            ee.track("poop"),
            ee.track("100"));
      }
      function ea(e) {
        for (let s of e) {
          var t, n;
          let e =
            null !==
              (n = null !== (t = s.id) && void 0 !== t ? t : s.uniqueName) &&
            void 0 !== n
              ? n
              : s.name;
          null != e &&
            (ee.track(e),
            H.pendingUsages.push({ key: e, timestamp: Date.now() }));
        }
        let s = e.length > 0;
        return s && 0 !== j && ee.compute(), s;
      }
      function eo(e) {
        let { guildId: t, role: n } = e;
        if (!(0, m.isSubscriptionRole)(n)) return !1;
        {
          let e = W[t];
          ei(t, null == e ? void 0 : e.emojis), es();
        }
      }
      class ed extends d.default.PersistedStore {
        initialize(e) {
          this.waitFor(
            f.default,
            C.default,
            T.default,
            S.default,
            p.default,
            v.default,
            w.default,
            A.default
          ),
            null != e && (H = e),
            this.syncWith([y.default], er);
        }
        getState() {
          return H;
        }
        get loadState() {
          return j;
        }
        hasPendingUsage() {
          return H.pendingUsages.length > 0;
        }
        get categories() {
          return K;
        }
        get diversitySurrogate() {
          var e;
          return null !== (e = k.default.getDefaultDiversitySurrogate()) &&
            void 0 !== e
            ? e
            : "";
        }
        get emojiFrecencyWithoutFetchingLatest() {
          return ee;
        }
        getGuildEmoji(e) {
          var t;
          J();
          let n = W[e];
          return null !== (t = null == n ? void 0 : n.emojis) && void 0 !== t
            ? t
            : [];
        }
        getUsableGuildEmoji(e) {
          var t;
          J();
          let n = W[e];
          return null !== (t = null == n ? void 0 : n.usableEmojis) &&
            void 0 !== t
            ? t
            : [];
        }
        getGuilds() {
          return W;
        }
        getDisambiguatedEmojiContext(e) {
          return J(), $.get(e);
        }
        getSearchResultsOrder(e, t, n) {
          let s = t.toLowerCase(),
            r = b.default.escape(s);
          if (e.length > 0) {
            let t = RegExp("^".concat(r), "i"),
              n = new RegExp("(^|_|[A-Z])".concat(r, "s?([A-Z]|_|$)")),
              a = n.test.bind(n),
              o = t.test.bind(t),
              d = function (e) {
                let t =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : e;
                if (null == e || null == t) return 0;
                let n = e.toLowerCase(),
                  i =
                    1 +
                    (n === s ? 4 : 0) +
                    (a(n) || a(e) ? 2 : 0) +
                    (o(e) ? 1 : 0),
                  r = ee.getScore(t);
                return null != r && (i *= r / 100), i;
              };
            e = i.orderBy(
              e,
              [
                e => (null != e.names ? d(e.names[0]) : d(e.name, e.id)),
                e => (null != e.names ? e.names[0] : e.name),
              ],
              ["desc", "asc"]
            );
          }
          return n > 0 && (e = e.slice(0, n)), e;
        }
        searchWithoutFetchingLatest(e) {
          let t,
            {
              channel: n,
              query: s,
              count: i = 0,
              intention: r,
              includeExternalGuilds: a = !0,
              matchComparator: o,
            } = e;
          J();
          let d = s.toLowerCase().replaceAll(/[ _]/g, ""),
            u = b.default.escape(d);
          if (null == o) {
            let e = RegExp("".concat(u), "i");
            t = t => e.test(t.replaceAll("_", ""));
          } else t = o;
          let l = null != n ? n.getGuildId() : null,
            f = $.get(l)
              .nameMatchesChain(t)
              .reduce(
                (e, t) => {
                  let s = O.default.getEmojiUnavailableReason({
                    emoji: t,
                    channel: n,
                    intention: r,
                    forceIncludeExternalGuilds: a,
                  });
                  return (
                    s === L.EmojiDisabledReasons.PREMIUM_LOCKED
                      ? e.locked.push(t)
                      : null == s && e.unlocked.push(t),
                    e
                  );
                },
                { unlocked: [], locked: [] }
              );
          return {
            unlocked: this.getSearchResultsOrder(f.unlocked, s, i),
            locked: this.getSearchResultsOrder(f.locked, s, 0),
          };
        }
        getUsableCustomEmojiById(e) {
          return J(), Q(e);
        }
        getCustomEmojiById(e) {
          return (
            J(),
            (function (e) {
              var t;
              let n = Z()[e];
              return null != n
                ? null === (t = W[n]) || void 0 === t
                  ? void 0
                  : t.getEmoji(e)
                : null;
            })(e)
          );
        }
        getTopEmoji(e) {
          return null == e
            ? Y
            : (J(), $.get(e).getTopEmojiWithoutFetchingLatest(e));
        }
        getNewlyAddedEmoji(e) {
          return null == e ? Y : (J(), $.get(e).getNewlyAddedEmojiForGuild(e));
        }
        getTopEmojisMetadata(e) {
          return X.get(e);
        }
        getEmojiAutosuggestion(e) {
          if (null != q && q.length > 0) {
            let { locked: t, unlocked: n } = this.searchWithoutFetchingLatest({
              channel: e,
              count: 10,
              query: q,
              intention: L.EmojiIntention.CHAT,
            });
            return [...n.slice(0, 5), ...t.slice(0, 5)].slice(0, 5);
          }
          return [];
        }
        hasUsableEmojiInAnyGuild() {
          J();
          let e = Object.keys(W);
          return e.some(e => W[e].usableEmojis.length > 0);
        }
        hasFavoriteEmojis(e) {
          let t = $.get(e);
          return null != t && t.favoriteEmojisWithoutFetchingLatest.length > 0;
        }
      }
      (ed.displayName = "EmojiStore"), (ed.persistKey = "EmojiStoreV2");
      var eu = new ed(u.default, {
        BACKGROUND_SYNC: function () {
          et();
        },
        CONNECTION_OPEN: function (e) {
          for (let t of (et(), e.guilds)) ei(t.id, t.emojis);
          (j = e.guilds.every(e => null != e.emojis) ? 1 : 0), es();
        },
        CACHED_EMOJIS_LOADED: function (e) {
          let { emojis: t } = e;
          for (let [e, n] of t)
            !Object.hasOwn(W, e) && C.default.isMember(e) && ei(e, n);
          es();
        },
        GUILD_MEMBER_UPDATE: function (e) {
          var t;
          let { guildId: n, user: s } = e;
          if (
            s.id !==
            (null === (t = A.default.getCurrentUser()) || void 0 === t
              ? void 0
              : t.id)
          )
            return;
          let i = W[n];
          ei(n, null == i ? void 0 : i.usableEmojis), es();
        },
        GUILD_CREATE: function (e) {
          0 !== j &&
            null == e.guild.emojis &&
            null != e.guild.emojiUpdates &&
            (j = 0),
            ei(e.guild.id, e.guild.emojis),
            es();
        },
        GUILD_UPDATE: function (e) {
          ei(e.guild.id, e.guild.emojis), es();
        },
        GUILD_EMOJIS_UPDATE: function (e) {
          let { guildId: t, emojis: n } = e;
          ei(t, n), es();
        },
        GUILD_DELETE: function (e) {
          let { guild: t } = e;
          en(t.id), X.delete(t.id), es();
        },
        MESSAGE_REACTION_ADD: function (e) {
          if (!e.optimistic) return !1;
          let t =
            null != e.emoji.id && "0" !== e.emoji.id
              ? e.emoji
              : k.default.getByName(
                  k.default.convertSurrogateToName(e.emoji.name, !1)
                );
          if (null == t) return !1;
          ea([t]);
        },
        EMOJI_TRACK_USAGE: function (e) {
          let { emojiUsed: t } = e;
          ea(t);
        },
        USER_SETTINGS_PROTO_UPDATE: function (e) {
          let {
            settings: { type: t },
            wasSaved: n,
          } = e;
          if (
            (g.default.setEmojiLocale(p.default.locale),
            t !== G.UserSettingsTypes.FRECENCY_AND_FAVORITES_SETTINGS || !n)
          )
            return !1;
          H.pendingUsages = [];
        },
        GUILD_ROLE_CREATE: eo,
        GUILD_ROLE_UPDATE: eo,
        TOP_EMOJIS_FETCH_SUCCESS: function (e) {
          let { guildId: t, topEmojisMetadata: n } = e;
          X.set(t, {
            emojiIds: n.map(e => e.emojiId),
            topEmojisTTL: a(a()).add(1, "days").valueOf(),
          });
        },
        EMOJI_AUTOSUGGESTION_UPDATE: function (e) {
          let { text: t } = e;
          q = t;
        },
      });
    },
    858619: function (e, t, n) {
      "use strict";
      var s, i;
      n.r(t),
        n.d(t, {
          EmojiTypes: function () {
            return s;
          },
        }),
        ((i = s || (s = {})).UNICODE = "UNICODE"),
        (i.GUILD = "GUILD_EMOJI");
    },
    867805: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          DIVERSITY_SURROGATES: function () {
            return v;
          },
          default: function () {
            return b;
          },
        }),
        n("70102"),
        n("222007"),
        n("781738"),
        n("424973");
      var s = n("917351"),
        i = n.n(s),
        r = n("895547"),
        a = n("402671"),
        o = n("858619");
      let d = null,
        u = {},
        l = {},
        f = {},
        _ = {},
        c = [],
        g = 0,
        m = 0,
        h = { "1f3fb": 0, "1f3fc": 1, "1f3fd": 2, "1f3fe": 3, "1f3ff": 4 },
        v = [
          "\uD83C\uDFFB",
          "\uD83C\uDFFC",
          "\uD83C\uDFFD",
          "\uD83C\uDFFE",
          "\uD83C\uDFFF",
        ],
        E = /^:([^\s:]+?(?:::skin-tone-\d)?):/,
        p = n("620501"),
        y =
          /[\u200d\ud800-\udfff\u0300-\u036f\ufe20-\ufe2f\u20d0-\u20ff\ufe0e\ufe0f\u270b\u2b50\u2728\u26a1\u26c5\u26c4\u2614\u2615\u26bd\u26be\u26f3\u26f5\u2693\u26fd\u26f2\u26fa\u26ea\u231a\u23f0\u231b\u23f3\u26ce\u2648\u2649\u264a\u264b\u264c\u264d\u264e\u264f\u2650\u2651\u2652\u2653\u270a\u274c\u2b55\u26d4\u2757\u2755\u2753\u2754\u2705\u274e\u267f\u23e9\u23ea\u23eb\u23ec\u2795\u2796\u2797\u27b0\u27bf\u26aa\u26ab\u25fe\u25fd\u2b1b\u2b1c\u26a7]/,
        T =
          /\ud83c[\udffb-\udfff](?=\ud83c[\udffb-\udfff])|(?:[^\ud800-\udfff][\u0300-\u036f\ufe20-\ufe2f\u20d0-\u20ff]?|[\u0300-\u036f\ufe20-\ufe2f\u20d0-\u20ff]|(?:\ud83c[\udde6-\uddff]){2}|[\ud800-\udbff][\udc00-\udfff]|[\ud800-\udfff])[\ufe0e\ufe0f]?(?:[\u0300-\u036f\ufe20-\ufe2f\u20d0-\u20ff]|\ud83c[\udffb-\udfff])?(?:\u200d(?:[^\ud800-\udfff]|(?:\ud83c[\udde6-\uddff]){2}|[\ud800-\udbff][\udc00-\udfff])[\ufe0e\ufe0f]?(?:[\u0300-\u036f\ufe20-\ufe2f\u20d0-\u20ff]|\ud83c[\udffb-\udfff])?)*/g;
      for (let e = 0; e < v.length; e++) {
        let t = v[e];
        (f["skin-tone-".concat(e + 1)] = t),
          (_[t] = "skin-tone-".concat(e + 1));
      }
      class C {
        get names() {
          return this.emojiObject.names;
        }
        get allNamesString() {
          return this.names.length > 1
            ? ":".concat(this.names.join(": :"), ":")
            : ":".concat(this.uniqueName, ":");
        }
        get unicodeVersion() {
          var e;
          return null !== (e = this.emojiObject.unicodeVersion) && void 0 !== e
            ? e
            : 0;
        }
        get hasDiversity() {
          return this.emojiObject.hasDiversity;
        }
        get hasMultiDiversity() {
          return this.emojiObject.hasMultiDiversity;
        }
        get hasDiversityParent() {
          return this.emojiObject.hasDiversityParent;
        }
        get hasMultiDiversityParent() {
          return this.emojiObject.hasMultiDiversityParent;
        }
        get managed() {
          return !0;
        }
        get animated() {
          return !1;
        }
        get defaultDiversityChild() {
          if (this.hasDiversity && null != d) {
            let e = (function (e) {
              let t = r.default.convert.toCodePoint(e);
              return null != t ? t : "";
            })(d);
            return this.diversityChildren[e];
          }
          return null;
        }
        get url() {
          let e = this.defaultDiversityChild;
          return null != e
            ? a.default.getURL(e.surrogates)
            : a.default.getURL(this.surrogates);
        }
        get name() {
          return this.hasDiversity && null != d
            ? "".concat(this.uniqueName, "::").concat(_[d])
            : this.uniqueName;
        }
        get optionallyDiverseSequence() {
          let e = this.defaultDiversityChild;
          return null != e ? e.surrogates : this.surrogates;
        }
        forEachDiversity(e) {
          null != this.diversityChildren && i.each(this.diversityChildren, e);
        }
        forEachName(e) {
          i.each(this.names, e);
        }
        setSpriteSheetIndex(e) {
          (this.index = e), (this.useSpriteSheet = !0);
        }
        constructor(e) {
          if (
            ((this.emojiObject = e),
            (this.type = o.EmojiTypes.UNICODE),
            (this.uniqueName = e.names[0]),
            (this.surrogates = e.surrogates),
            (this.diversityChildren = {}),
            null != e.diversityChildren)
          ) {
            for (let t of e.diversityChildren)
              if (null != t.diversity) {
                let e = t.diversity.join("-");
                this.diversityChildren[e] = new C(t);
              }
          }
        }
      }
      let S = n("838426");
      for (let e in S) {
        let t = S[e],
          n = t.map(e => {
            let t = new C(e),
              n = t.surrogates,
              s = t.uniqueName;
            if (
              (t.setSpriteSheetIndex(t.hasDiversity ? g++ : m++),
              (_[n] = s),
              0 > n.indexOf("‍"))
            ) {
              let e = n.replace("️", "");
              e !== n && (_[e] = s);
            }
            for (let e of t.names) (l[e] = t), (f[e] = n);
            let i = t.diversityChildren;
            for (let t in i) {
              let n = i[t],
                s = n.surrogates;
              for (let e of n.names) (l[e] = n), (f[e] = s);
              if (!e.hasMultiDiversity) {
                let t = n.emojiObject.diversity[0],
                  i = h[t];
                for (let t of e.names) {
                  let e = "".concat(t, "::skin-tone-").concat(i + 1);
                  (f[e] = s), (l[e] = n);
                }
              }
              _[s] = n.uniqueName;
            }
            return c.push(t), t;
          });
        u[e] = a.default.filterUnsupportedEmojis(n);
      }
      function I(e) {
        let t = _[e];
        return null != t
          ? { type: "emoji", surrogate: e, emojiName: ":".concat(t, ":") }
          : { type: "text", text: e };
      }
      let A = String.fromCodePoint(917631),
        D = String.fromCodePoint(127988),
        N = /^[\u{E0061}-\u{E007A}]$/u;
      function O(e, t) {
        var n;
        if (!0 !== t && !y.test(e)) return [{ type: "text", text: e }];
        let s = "",
          i = [],
          r = null !== (n = e.match(T)) && void 0 !== n ? n : [];
        for (let e = 0; e < r.length; e++) {
          let t = r[e];
          if (null != s && "" !== s) {
            if (t === A) (t = s + t), (s = "");
            else if (N.test(t)) {
              s += t;
              continue;
            } else i.push(I(s)), (s = "");
          } else if (t === D) {
            s = t;
            continue;
          }
          let n = I(t);
          if (i.length > 0) {
            let e = i[i.length - 1];
            if ("text" === n.type && "text" === e.type) {
              e.text += n.text;
              continue;
            }
          }
          i.push(n);
        }
        return null != s && "" !== s && i.push(I(s)), i;
      }
      function P(e) {
        let t =
          arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "";
        return Object.prototype.hasOwnProperty.call(f, e) ? f[e] : t;
      }
      var b = {
        getDefaultDiversitySurrogate: function () {
          return d;
        },
        setDefaultDiversitySurrogate: function (e) {
          d = null != e && "" !== e ? e : null;
        },
        getCategories: function () {
          return Object.keys(u);
        },
        getByName: function (e) {
          return Object.prototype.hasOwnProperty.call(l, e) ? l[e] : null;
        },
        getByCategory: function (e) {
          return u[e];
        },
        translateInlineEmojiToSurrogates: function (e) {
          return e.replace(E, (e, t) => P(t, e));
        },
        maybeTranslateSurrogatesToInlineEmoji: function (e) {
          if (!y.test(e)) return null;
          let t = O(e, !0)
            .map(e => ("text" === e.type ? e.text : e.emojiName))
            .join("");
          return t === e ? null : t;
        },
        findInlineEmojisFromSurrogates: O,
        translateSurrogatesToInlineEmoji: function (e) {
          return O(e)
            .map(e => ("text" === e.type ? e.text : e.emojiName))
            .join("");
        },
        convertNameToSurrogate: P,
        convertSurrogateToName: function (e) {
          let t =
              !(arguments.length > 1) ||
              void 0 === arguments[1] ||
              arguments[1],
            n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : "",
            s = n;
          return (
            Object.prototype.hasOwnProperty.call(_, e) && (s = _[e]),
            t ? ":".concat(s, ":") : s
          );
        },
        convertShortcutToName: function (e) {
          let t =
              !(arguments.length > 1) ||
              void 0 === arguments[1] ||
              arguments[1],
            n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : "",
            s = n;
          return (
            Object.prototype.hasOwnProperty.call(p, e) && (s = p[e]),
            t ? ":".concat(s, ":") : s
          );
        },
        forEach: e => i.each(c, e),
        all: () => c,
        numDiversitySprites: g,
        numNonDiversitySprites: m,
        EMOJI_NAME_RE: /^:([^\s:]+?(?:::skin-tone-\d)?):/,
        EMOJI_NAME_AND_DIVERSITY_RE: E,
        EMOJI_SHORTCUT_RE:
          /^(>:\(|>:\-\(|>=\(|>=\-\(|:"\)|:\-"\)|="\)|=\-"\)|<\/3|<\\3|:\-\\|:\-\/|=\-\\|=\-\/|:'\(|:'\-\(|:,\(|:,\-\(|='\(|='\-\(|=,\(|=,\-\(|:\(|:\-\(|=\(|=\-\(|<3|♡|\]:\(|\]:\-\(|\]=\(|\]=\-\(|o:\)|O:\)|o:\-\)|O:\-\)|0:\)|0:\-\)|o=\)|O=\)|o=\-\)|O=\-\)|0=\)|0=\-\)|:'D|:'\-D|:,D|:,\-D|='D|='\-D|=,D|=,\-D|:\*|:\-\*|=\*|=\-\*|x\-\)|X\-\)|:\||:\-\||=\||=\-\||:o|:\-o|:O|:\-O|=o|=\-o|=O|=\-O|:@|:\-@|=@|=\-@|:D|:\-D|=D|=\-D|:'\)|:'\-\)|:,\)|:,\-\)|='\)|='\-\)|=,\)|=,\-\)|:\)|:\-\)|=\)|=\-\)|\]:\)|\]:\-\)|\]=\)|\]=\-\)|:,'\(|:,'\-\(|;\(|;\-\(|=,'\(|=,'\-\(|:P|:\-P|=P|=\-P|8\-\)|B\-\)|,:\(|,:\-\(|,=\(|,=\-\(|,:\)|,:\-\)|,=\)|,=\-\)|:s|:\-S|:z|:\-Z|:\$|:\-\$|=s|=\-S|=z|=\-Z|=\$|=\-\$|;\)|;\-\))/,
        hasSurrogates: function (e) {
          return i.toArray(e).some(e => null != _[e]);
        },
      };
    },
    802461: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        }),
        n("222007");
      var s = n("446674"),
        i = n("913144"),
        r = n("718517");
      let a = { captionsById: new Map() },
        o = a,
        d = !1,
        u = null;
      class l extends s.default.PersistedStore {
        initialize(e) {
          o = null != e ? { captionsById: new Map(e.captionsById) } : a;
        }
        getState() {
          return o;
        }
        getCaptionsForEmojiById(e) {
          var t;
          let { emojiId: n } = e;
          return null !== (t = o.captionsById.get(n)) && void 0 !== t ? t : [];
        }
        getIsFetching() {
          return d;
        }
        getEmojiCaptionsTTL() {
          return u;
        }
        hasPersistedState() {
          return o.captionsById.size > 0;
        }
        clear() {
          (o = a), (d = !1), (u = null);
        }
      }
      (l.displayName = "EmojiCaptionsStore"),
        (l.persistKey = "EmojiCaptionsStore");
      var f = new l(i.default, {
        LOGOUT: function () {
          (o = a), (d = !1), (u = null);
        },
        EMOJI_CAPTIONS_FETCH: function (e) {
          let {} = e;
          !d && (d = !0);
        },
        EMOJI_CAPTIONS_FETCH_SUCCESS: function (e) {
          let { emojiCaptions: t } = e;
          (o.captionsById = new Map(Object.entries(t))),
            (d = !1),
            (u = Date.now() + 360 * r.default.Millis.MINUTE);
        },
        EMOJI_CAPTIONS_FETCH_ERROR: function (e) {
          let { is4XXError: t } = e;
          d = !1;
          u = Date.now() + (t ? 10 : 1) * r.default.Millis.MINUTE;
        },
        POST_CONNECTION_OPEN: function (e) {
          let {} = e;
          d = !1;
        },
      });
    },
    26430: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var s = n("446674"),
        i = n("913144");
      let r = { topEmojisByGuildId: {} },
        a = r,
        o = {};
      class d extends s.default.PersistedStore {
        initialize(e) {
          a = null != e ? e : r;
        }
        getState() {
          return a;
        }
        getTopEmojiIdsByGuildId(e) {
          return a.topEmojisByGuildId[e];
        }
        getIsFetching(e) {
          return o[e];
        }
      }
      (d.displayName = "TopEmojiStore"), (d.persistKey = "TopEmojiStore");
      var u = new d(i.default, {
        LOGOUT: function () {
          (a = r), (o = {});
        },
        TOP_EMOJIS_FETCH: function (e) {
          let { guildId: t } = e;
          o[t] = !0;
        },
        TOP_EMOJIS_FETCH_SUCCESS: function (e) {
          let { guildId: t, topEmojisMetadata: n } = e;
          (a.topEmojisByGuildId[t] = n.map(e => e.emojiId)), (o[t] = !1);
        },
      });
    },
    584375: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          buildPlatformedThemedEmojiColorPalette: function () {
            return o;
          },
          buildEmojiColorPalette: function () {
            return d;
          },
        });
      var s = n("172182"),
        i = n("284679"),
        r = n("61069");
      let a = e => {
          var t, n;
          let { colors: r, saturationFactor: a = 1 } = e;
          if (null == r || r.length < 1) return null;
          let o = (0, i.findColorByHsv)(r),
            d = s.default.parseString("#ffffff");
          if (null == d) return null;
          let u = s.default.parseString("#36393e");
          if (null == u) return null;
          let l = s.default.parseString(o);
          if (null == l) return null;
          let f = (0, i.rawRgbToHsl)(l.red, l.blue, l.green),
            _ =
              null !==
                (t = (0, i.getAccessibleColor)({
                  colors: [(0, i.getColorLightnessAdjusted)(l, 0.6, !0), d],
                  ratio: 3,
                  saturationFactor: a,
                })) && void 0 !== t
                ? t
                : l,
            c =
              null !==
                (n = (0, i.getAccessibleColor)({
                  colors: [(0, i.getColorLightnessAdjusted)(l, 0.6, !1), u],
                  ratio: 5,
                  saturationFactor: a,
                })) && void 0 !== n
                ? n
                : l,
            g = (0, i.getAccessibleColor)({
              colors: [l, d],
              ratio: 7,
              saturationFactor: a,
            }),
            m = (0, i.getAccessibleColor)({
              colors: [l, u],
              ratio: 7,
              saturationFactor: a,
            });
          return {
            LIGHT: {
              accentColor: null == g ? void 0 : g.toHexString(),
              backgroundColor: (0, i.getSaturatedColorHex)({
                colorRGB: _,
                saturationFactor: a,
              }),
              highlightColor: null == l ? void 0 : l.toHexString(),
              opacity: (null == f ? void 0 : f.saturation) < 0.1 ? 0.35 : 0.1,
            },
            DARK: {
              accentColor: null == m ? void 0 : m.toHexString(),
              backgroundColor: (0, i.getSaturatedColorHex)({
                colorRGB: c,
                saturationFactor: a,
              }),
              highlightColor: null == l ? void 0 : l.toHexString(),
              opacity: (null == f ? void 0 : f.saturation) < 0.1 ? 0.5 : 0.2,
            },
          };
        },
        o = e => {
          let {
              colors: t,
              saturationFactor: n = 1,
              shouldProcessMobileColors: s = !1,
            } = e,
            i = a({ colors: t, saturationFactor: n });
          return r.default.applyPlatformToThemedEmojiColorPalette({
            palette: i,
            shouldProcessMobileColors: s,
          });
        },
        d = (e, t, n) => {
          var s;
          if (null == e || e.length < 1) return null;
          let i = o({ colors: e, saturationFactor: t }),
            r = n
              ? null == i
                ? void 0
                : i.DARK
              : null == i
                ? void 0
                : i.LIGHT;
          return {
            backgroundColor: null == r ? void 0 : r.backgroundColor,
            accentColor: null == r ? void 0 : r.accentColor,
            highlightColor: null == r ? void 0 : r.highlightColor,
            opacity:
              null !== (s = null == r ? void 0 : r.opacity) && void 0 !== s
                ? s
                : 0.15,
          };
        };
    },
    983850: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          MESSAGE_SCAN_TIMEOUT: function () {
            return S;
          },
          MAX_TIMEOUT_FOR_JITTER: function () {
            return I;
          },
          default: function () {
            return X;
          },
        }),
        n("222007"),
        n("808653");
      var s = n("345570"),
        i = n.n(s),
        r = n("452016"),
        a = n.n(r),
        o = n("913144"),
        d = n("689988"),
        u = n("692038"),
        l = n("256572"),
        f = n("271938"),
        _ = n("982108"),
        c = n("42203"),
        g = n("377253"),
        m = n("18494"),
        h = n("162771"),
        v = n("695681"),
        E = n("457971"),
        p = n("447435"),
        y = n("574933"),
        T = n("49111"),
        C = n("397336");
      let S = 3e3,
        I = 800,
        A = {};
      function D(e) {
        return "".concat(e.channel_id, ":").concat(e.id);
      }
      function N() {
        Object.values(A).forEach(e => {
          let { timeout: t } = e;
          clearTimeout(t);
        }),
          (A = {});
      }
      function O(e, t) {
        if (null == e.id || null == e.channel_id) return;
        let n = D(e);
        if (null != A[n]) {
          let { timeout: s } = A[n];
          return (
            (function (e, t) {
              let n = D(e),
                { setAt: s } = A[n];
              if (t === p.TimeoutCancelSource.UPDATE) {
                var i, r;
                let t = null !== (i = e.attachments) && void 0 !== i ? i : [],
                  n = null !== (r = e.embeds) && void 0 !== r ? r : [],
                  s = t.filter(e =>
                    (0, p.isMediaObscured)(
                      { type: p.ObscuredMediaTypes.Attachment, media: e },
                      !0
                    )
                  ),
                  a = n.filter(e =>
                    (0, p.isMediaObscured)(
                      { type: p.ObscuredMediaTypes.Embed, media: e },
                      !0
                    )
                  );
                (0, p.trackExplicitMediaScanComplete)({
                  messageId: e.id,
                  channelId: e.channel_id,
                  numOfAttachments: t.length,
                  numOfEmbeds: n.length,
                  numOfExplicitAttachments: s.length,
                  numOfExplicitEmbeds: a.length,
                });
              }
              (0, p.trackScanTiming)(s, t);
            })(e, t),
            clearTimeout(s),
            delete A[n],
            !0
          );
        }
        return !1;
      }
      let P = (e, t) => {
        if (0 !== e.length) {
          if (t) {
            (0, v.sendMultiChannelMessagesForScanning)(e);
            return;
          }
          (0, v.sendMessagesForScanning)(
            e[0].channel_id,
            e.map(e => e.id)
          );
        }
      };
      function b(e, t) {
        let { forceBatchScan: n = !1, jitter: s = !1 } = null != t ? t : {};
        e.forEach(e => {
          let t = D(e);
          null == A[t] &&
            (A[t] = {
              setAt: Date.now(),
              timeout: setTimeout(() => {
                !(function (e) {
                  if (O(e, p.TimeoutCancelSource.TIMEOUT)) {
                    let t = g.default.getMessage(e.channel_id, e.id),
                      { attachmentIds: n, embedIds: s } = L(t);
                    (0, p.trackScanningTimedOut)({
                      channelId: e.channel_id,
                      messageId: e.id,
                      attachmentIds: n,
                      embedIds: s,
                    }),
                      o.default.dispatch({
                        type: "MESSAGE_EXPLICIT_CONTENT_SCAN_TIMEOUT",
                        messageId: e.id,
                        channelId: e.channel_id,
                      });
                  }
                })(e);
              }, S),
            });
        });
        let i = n || new Set(e.map(e => e.channel_id)).size > 1;
        s
          ? setTimeout(() => {
              let t = e.filter(e => null != A[D(e)]);
              P(t, i);
            }, Math.random() * I)
          : P(e, i);
      }
      let V = e => null == e.content_scan_version || e.content_scan_version < 1,
        R = e => {
          var t, n, s, i, r, a, o, d;
          let u =
            null != (d = e).content_scan_version
              ? d.content_scan_version
              : null != d.contentScanVersion
                ? d.contentScanVersion
                : null;
          return (
            !(
              ((null === (t = e.video) || void 0 === t ? void 0 : t.width) ===
                0 &&
                (null === (n = e.video) || void 0 === n ? void 0 : n.height) ===
                  0) ||
              ((null === (s = e.thumbnail) || void 0 === s
                ? void 0
                : s.width) === 0 &&
                (null === (i = e.thumbnail) || void 0 === i
                  ? void 0
                  : i.height) === 0) ||
              ((null === (r = e.image) || void 0 === r ? void 0 : r.width) ===
                0 &&
                (null === (a = e.image) || void 0 === a ? void 0 : a.height) ===
                  0) ||
              ("images" in e &&
                (null === (o = e.images) || void 0 === o
                  ? void 0
                  : o.some(e => 0 === e.width && 0 === e.height)))
            ) &&
            (null == u || u < 1)
          );
        };
      function k(e) {
        let { attachmentIds: t, embedIds: n } = L(e);
        return t.length > 0 || n.length > 0;
      }
      function M(e) {
        let t = e.reduce((e, t) => {
          var n, s, i, r, a, o, d, u;
          null == e[t.channel_id] &&
            (e[t.channel_id] = {
              numOfAttachments: 0,
              numOfAttachmentsPendingScan: 0,
              numOfEmbeds: 0,
              numOfEmbedsPendingScan: 0,
            });
          let l = e[t.channel_id];
          return (
            (l.numOfAttachments +=
              null !==
                (a =
                  null === (n = t.attachments) || void 0 === n
                    ? void 0
                    : n.length) && void 0 !== a
                ? a
                : 0),
            (l.numOfEmbeds +=
              null !==
                (o =
                  null === (s = t.embeds) || void 0 === s
                    ? void 0
                    : s.length) && void 0 !== o
                ? o
                : 0),
            (l.numOfAttachmentsPendingScan +=
              null !==
                (d =
                  null === (i = t.attachments) || void 0 === i
                    ? void 0
                    : i.filter(V).length) && void 0 !== d
                ? d
                : 0),
            (l.numOfEmbedsPendingScan +=
              null !==
                (u =
                  null == t
                    ? void 0
                    : null === (r = t.embeds) || void 0 === r
                      ? void 0
                      : r.filter(R).length) && void 0 !== u
                ? u
                : 0),
            { ...e, [t.channel_id]: l }
          );
        }, {});
        return t;
      }
      function w(e) {
        return (
          null != e &&
          ((null != e.attachments && e.attachments.length > 0) ||
            (null != e.embeds && e.embeds.length > 0))
        );
      }
      function L(e) {
        var t, n, s, i, r, a, o, d;
        let u =
            null !==
              (r =
                null == e
                  ? void 0
                  : null === (t = e.attachments) || void 0 === t
                    ? void 0
                    : t.length) && void 0 !== r
              ? r
              : 0,
          l =
            null !==
              (a =
                null == e
                  ? void 0
                  : null === (n = e.embeds) || void 0 === n
                    ? void 0
                    : n.length) && void 0 !== a
              ? a
              : 0;
        if (0 === u && 0 === l) return { attachmentIds: [], embedIds: [] };
        let f =
            null !==
              (o =
                null == e
                  ? void 0
                  : null === (s = e.attachments) || void 0 === s
                    ? void 0
                    : s.filter(V)) && void 0 !== o
              ? o
              : [],
          _ =
            null !==
              (d =
                null == e
                  ? void 0
                  : null === (i = e.embeds) || void 0 === i
                    ? void 0
                    : i.filter(R)) && void 0 !== d
              ? d
              : [];
        return {
          attachmentIds: f.map(e => e.id).filter(Boolean),
          embedIds: _.map((e, t) => "embed_".concat(t)).filter(Boolean),
        };
      }
      function U(e, t) {
        let { messagesPendingScan: n, attributesByChannelId: s } = (function (
          e
        ) {
          let t = e.filter(e => w(e) && (0, p.shouldRedactExplicitContent)(e)),
            n = e
              .map(e => {
                if (
                  null != e &&
                  "referenced_message" in e &&
                  null != e.referenced_message &&
                  w(e.referenced_message) &&
                  (0, p.shouldRedactExplicitContent)(e.referenced_message)
                )
                  return e.referenced_message;
              })
              .filter(function (e) {
                return null != e;
              });
          n.length > 0 && (t = [...t, ...n]);
          let s = a(
              t,
              (e, t) => e.id === t.id && e.channel_id === t.channel_id
            ),
            i = s.filter(e => k(e));
          return { messagesPendingScan: i, attributesByChannelId: M(s) };
        })(e);
        return (
          Object.entries(s).forEach(e => {
            let [t, n] = e;
            (0, p.trackExplicitMediaRedactableMessagedLoaded)({
              channelId: t,
              numOfAttachments: n.numOfAttachments,
              numOfAttachmentsPendingScan: n.numOfAttachmentsPendingScan,
              numOfEmbeds: n.numOfEmbeds,
              numOfEmbedsPendingScan: n.numOfEmbedsPendingScan,
            });
          }),
          !!(n.length > 0) && (b(n, t), !0)
        );
      }
      function G(e) {
        var t, n, s, i;
        let { message: r } = e;
        if (
          !(0, E.isEligibleForExplicitMediaRedaction)() ||
          null == r.channel_id ||
          null == r.id ||
          (null === (t = r.author) || void 0 === t ? void 0 : t.id) ===
            f.default.getId() ||
          (null == r.embeds && null == r.attachments)
        )
          return !1;
        if (!k(r)) {
          let e =
            null !==
              (i =
                null !== (s = g.default.getMessage(r.channel_id, r.id)) &&
                void 0 !== s
                  ? s
                  : y.default.getMessage(r.id, r.channel_id)) && void 0 !== i
              ? i
              : null === (n = l.default.getMessage(r.channel_id, r.id)) ||
                  void 0 === n
                ? void 0
                : n.message;
          null != e &&
            !k((0, u.updateMessageRecord)(e, r)) &&
            O(e, p.TimeoutCancelSource.UPDATE);
        }
        let a = m.default.getChannelId(),
          o = _.default.getCurrentSidebarChannelId(a),
          d = r.channel_id === a || r.channel_id === o;
        if (!d) return !1;
        let c = g.default.getMessage(r.channel_id, r.id);
        return null != c && U([c]);
      }
      function F(e) {
        var t, n;
        let {
          channelId: s,
          message: i,
          optimistic: r,
          isPushNotification: a,
        } = e;
        if (
          !(0, E.isEligibleForExplicitMediaRedaction)() ||
          r ||
          a ||
          null == s ||
          (null === (t = i.author) || void 0 === t ? void 0 : t.id) ===
            f.default.getId()
        )
          return !1;
        let o = m.default.getChannelId(),
          d = _.default.getCurrentSidebarChannelId(o),
          u = s === o || s === d,
          l = c.default.getChannel(s);
        if (!u) return !1;
        let g =
            null === (n = null == l ? void 0 : l.isPrivate()) ||
            void 0 === n ||
            n,
          h =
            (null == l ? void 0 : l.memberCount) == null ||
            (null == l ? void 0 : l.memberCount) > 100;
        return U([i], { jitter: g && h });
      }
      function H(e) {
        let { channelId: t, messages: n } = e;
        if (
          !(0, E.isEligibleForExplicitMediaRedaction)() ||
          null == t ||
          null == n
        )
          return !1;
        let s = m.default.getChannelId(),
          i = _.default.getCurrentSidebarChannelId(s),
          r = t === s || t === i;
        return !!r && U(n);
      }
      function B(e) {
        let { messages: t } = e;
        if (!(0, E.isEligibleForExplicitMediaRedaction)() || null == t)
          return !1;
        let n = i(t),
          s = a(n, (e, t) => e.id === t.id && e.channel_id === t.channel_id);
        return U(s);
      }
      function x(e) {
        let { guildId: t, threads: n } = e;
        if (null == n || !(0, E.isEligibleForExplicitMediaRedaction)())
          return !1;
        let s = h.default.getGuildId() === t;
        if (!s) return !1;
        let i = Object.keys(n).map(e => n[e].first_message);
        return U(i);
      }
      function Y(e) {
        let { guildId: t, firstMessages: n } = e;
        if (null == n || !(0, E.isEligibleForExplicitMediaRedaction)())
          return !1;
        let s = h.default.getGuildId() === t;
        return !!s && U(n, { forceBatchScan: !0 });
      }
      function j(e) {
        let { channelId: t } = e;
        if (null == t || !(0, E.isEligibleForExplicitMediaRedaction)())
          return !1;
        let n = t === m.default.getChannelId();
        return !!n && z(t);
      }
      function K(e) {
        let { settings: t, local: n } = e;
        if (
          !(0, E.isEligibleForExplicitMediaRedaction)() ||
          !n ||
          t.type !== C.UserSettingsTypes.PRELOADED_USER_SETTINGS
        )
          return !1;
        let s = m.default.getChannelId();
        return null != s && z(s);
      }
      function W(e) {
        let { channelId: t, chatOpen: n } = e;
        return !!(0, E.isEligibleForExplicitMediaRedaction)() && !!n && z(t);
      }
      function z(e) {
        let t = g.default.getMessages(e);
        return (
          0 !== t.length &&
          (function (e) {
            let { messagesPendingScan: t, attributesByChannelId: n } =
              (function (e) {
                let t = e.filter(
                    e => w(e) && (0, p.shouldRedactExplicitContent)(e)
                  ),
                  n = e
                    .map(e => {
                      if (
                        T.MessageTypesWithLazyLoadedReferences.has(e.type) &&
                        null != e.messageReference
                      ) {
                        let t = l.default.getMessageByReference(
                          e.messageReference
                        );
                        if (
                          t.state === l.ReferencedMessageState.LOADED &&
                          null != t.message &&
                          w(t.message) &&
                          (0, p.shouldRedactExplicitContent)(t.message)
                        )
                          return t.message;
                      }
                    })
                    .filter(function (e) {
                      return null != e;
                    });
                n.length > 0 && (t = [...t, ...n]);
                let s = a(
                    t,
                    (e, t) => e.id === t.id && e.channel_id === t.channel_id
                  ),
                  i = s.filter(e => k(e));
                return { messagesPendingScan: i, attributesByChannelId: M(s) };
              })(e);
            return (
              Object.entries(n).forEach(e => {
                let [t, n] = e;
                (0, p.trackExplicitMediaRedactableMessagedLoaded)({
                  channelId: t,
                  numOfAttachments: n.numOfAttachments,
                  numOfAttachmentsPendingScan: n.numOfAttachmentsPendingScan,
                  numOfEmbeds: n.numOfEmbeds,
                  numOfEmbedsPendingScan: n.numOfEmbedsPendingScan,
                });
              }),
              !!(t.length > 0) && (b(t), !0)
            );
          })(t)
        );
      }
      class q extends d.default {
        constructor(...e) {
          super(...e),
            (this.actions = {
              LOAD_MESSAGES_SUCCESS: H,
              LOAD_FORUM_POSTS: x,
              LOAD_THREADS_SUCCESS: Y,
              LOAD_ARCHIVED_THREADS_SUCCESS: Y,
              MESSAGE_CREATE: F,
              MESSAGE_UPDATE: G,
              LOGOUT: N,
              SEARCH_FINISH: B,
              CHANNEL_SELECT: j,
              LOAD_PINNED_MESSAGES_SUCCESS: B,
              USER_SETTINGS_PROTO_UPDATE: K,
              CHANNEL_RTC_UPDATE_CHAT_OPEN: W,
            });
        }
      }
      var X = new q();
    },
    695681: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          reportFalsePositive: function () {
            return r;
          },
          reportFailedSendFalsePositive: function () {
            return a;
          },
          sendMessagesForScanning: function () {
            return o;
          },
          sendMultiChannelMessagesForScanning: function () {
            return d;
          },
        });
      var s = n("872717"),
        i = n("49111");
      function r(e, t, n, r) {
        return s.default.post({
          url: i.Endpoints.EXPLICIT_MEDIA_REPORT_FALSE_POSITIVE,
          body: {
            channel_id: e,
            message_id: t,
            attachment_ids: n,
            embed_ids: r,
          },
        });
      }
      function a(e, t, n, r) {
        return s.default.post({
          url: i.Endpoints.EXPLICIT_MEDIA_SENDER_REPORT_FALSE_POSITIVE,
          body: {
            channel_id: e,
            message_id: t,
            attachment_ids: n,
            filenames: r,
          },
        });
      }
      function o(e, t) {
        return s.default.patch({
          url: i.Endpoints.EXPLICIT_MEDIA_SCAN_MESSAGES(e),
          body: { message_ids: t },
        });
      }
      function d(e) {
        let t = e.map(e => ({ channel_id: e.channel_id, message_id: e.id }));
        return s.default.patch({
          url: i.Endpoints.EXPLICIT_MEDIA_SCAN_MULTI_CHANNEL_MESSAGES,
          body: { messages: t },
        });
      }
    },
    612920: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          SUPPORTED_EMBED_TYPES: function () {
            return i;
          },
          EXPLICIT_MEDIA_MIN_WIDTH: function () {
            return r;
          },
          EXPLICIT_MEDIA_MIN_HEIGHT: function () {
            return a;
          },
        }),
        n("222007");
      var s = n("246111");
      let i = new Set([
          s.MessageEmbedTypes.IMAGE,
          s.MessageEmbedTypes.VIDEO,
          s.MessageEmbedTypes.GIFV,
        ]),
        r = 146,
        a = 212;
    },
    457971: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          isEligibleForExplicitMediaRedaction: function () {
            return a;
          },
          useIsEligibleForExplicitMediaRedaction: function () {
            return o;
          },
        });
      var s = n("862205");
      let i = (0, s.createExperiment)({
          kind: "user",
          id: "2023-08_explicit_media_redaction",
          label: "Explicit Media Redaction",
          defaultConfig: { enabled: !1 },
          treatments: [
            {
              id: 1,
              label: "Enable explicit media redaction",
              config: { enabled: !0 },
            },
          ],
        }),
        r = (0, s.createExperiment)({
          kind: "user",
          id: "2023-08_explicit_media_redaction_teen",
          label: "Explicit Media Redaction for Teens",
          defaultConfig: { enabled: !1 },
          treatments: [
            {
              id: 1,
              label: "Enable explicit media redaction for teens",
              config: { enabled: !0 },
            },
          ],
        });
      function a() {
        let { enabled: e } = i.getCurrentConfig(
            { location: "686da2_1" },
            { autoTrackExposure: !0 }
          ),
          { enabled: t } = r.getCurrentConfig(
            { location: "686da2_1" },
            { autoTrackExposure: !0 }
          );
        return e || t;
      }
      function o() {
        let { enabled: e } = i.useExperiment(
            { location: "686da2_2" },
            { autoTrackExposure: !0 }
          ),
          { enabled: t } = r.useExperiment(
            { location: "686da2_2" },
            { autoTrackExposure: !0 }
          );
        return e || t;
      }
    },
    447435: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          resolveDefaultSetting: function () {
            return O;
          },
          getExplicitContentSettingOrDefault: function () {
            return P;
          },
          getShouldObscureForSetting: function () {
            return b;
          },
          shouldRedactExplicitContent: function () {
            return V;
          },
          updateExplicitContentSetting: function () {
            return R;
          },
          ObscuredMediaTypes: function () {
            return s;
          },
          isMediaObscured: function () {
            return k;
          },
          getObscuredMediaForMessage: function () {
            return M;
          },
          isPendingScan: function () {
            return w;
          },
          TrackMediaRedactionActionType: function () {
            return i;
          },
          TrackMediaRedactionContext: function () {
            return r;
          },
          trackMediaRedactionAction: function () {
            return L;
          },
          TimeoutCancelSource: function () {
            return a;
          },
          trackScanTiming: function () {
            return U;
          },
          trackScanningTimedOut: function () {
            return G;
          },
          trackExplicitMediaRedactableMessagedLoaded: function () {
            return F;
          },
          trackExplicitMediaScanComplete: function () {
            return H;
          },
          handleExplicitMediaScanTimeoutForMessage: function () {
            return B;
          },
          isExplicitMediaBelowConstraints: function () {
            return x;
          },
        }),
        n("702976");
      var s,
        i,
        r,
        a,
        o,
        d,
        u,
        l,
        f = n("432710"),
        _ = n("151426"),
        c = n("676574"),
        g = n("155084"),
        m = n("684337"),
        h = n("845579"),
        v = n("42203"),
        E = n("27618"),
        p = n("697218"),
        y = n("599110"),
        T = n("568734"),
        C = n("983850"),
        S = n("457971"),
        I = n("612920"),
        A = n("49111"),
        D = n("568456");
      n("782340");
      let N = () => {
          let e = p.default.getCurrentUser();
          return (null == e ? void 0 : e.nsfwAllowed) === !1
            ? _.ExplicitContentRedaction.BLUR
            : _.ExplicitContentRedaction.SHOW;
        },
        O = function () {
          let e =
              arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
          if (!e) return N();
          let n = h.ExplicitContentFilter.getSetting();
          return t
            ? n === D.ExplicitContentFilterTypes.FRIENDS_AND_NON_FRIENDS
              ? _.ExplicitContentRedaction.BLOCK
              : N()
            : n === D.ExplicitContentFilterTypes.NON_FRIENDS ||
                n === D.ExplicitContentFilterTypes.FRIENDS_AND_NON_FRIENDS
              ? _.ExplicitContentRedaction.BLOCK
              : N();
        },
        P = () => {
          let e = h.ExplicitContentSettings.getSetting();
          return {
            explicitContentGuilds:
              e.explicitContentGuilds ===
              _.ExplicitContentRedaction.UNSET_EXPLICIT_CONTENT_REDACTION
                ? O()
                : e.explicitContentGuilds,
            explicitContentNonFriendDm:
              e.explicitContentNonFriendDm ===
              _.ExplicitContentRedaction.UNSET_EXPLICIT_CONTENT_REDACTION
                ? O(!0)
                : e.explicitContentNonFriendDm,
            explicitContentFriendDm:
              e.explicitContentFriendDm ===
              _.ExplicitContentRedaction.UNSET_EXPLICIT_CONTENT_REDACTION
                ? O(!0, !0)
                : e.explicitContentFriendDm,
          };
        };
      function b(e) {
        return (
          e === _.ExplicitContentRedaction.BLUR ||
          e === _.ExplicitContentRedaction.BLOCK
        );
      }
      function V(e) {
        var t;
        if (!(0, S.isEligibleForExplicitMediaRedaction)()) return !1;
        let n = p.default.getCurrentUser();
        if (
          null == n ||
          (null === (t = e.author) || void 0 === t ? void 0 : t.id) === n.id
        )
          return !1;
        let {
            explicitContentGuilds: s,
            explicitContentFriendDm: i,
            explicitContentNonFriendDm: r,
          } = P(),
          a = v.default.getChannel(e.channel_id);
        if (null == a) return !1;
        if (a.isDM() || a.isGroupDM())
          return null != e.author &&
            E.default.getFriendIDs().includes(e.author.id)
            ? b(i)
            : b(r);
        return b(s);
      }
      let R = e => {
        let t = P();
        h.ExplicitContentSettings.updateSetting({ ...t, ...e });
      };
      function k(e, t) {
        var n, s;
        if (!t) return !1;
        if (c.default.get("obscure_blur_effect_enabled")) return !0;
        switch (e.type) {
          case 1:
            return (0, T.hasFlag)(
              null !== (n = e.media.flags) && void 0 !== n ? n : 0,
              A.MessageEmbedFlags.CONTAINS_EXPLICIT_MEDIA
            );
          case 0:
            return (0, T.hasFlag)(
              null !== (s = e.media.flags) && void 0 !== s ? s : 0,
              A.MessageAttachmentFlags.CONTAINS_EXPLICIT_MEDIA
            );
          default:
            return !1;
        }
      }
      function M(e) {
        let t = V(e);
        return t
          ? {
              obscuredAttachments: e.attachments.filter(e =>
                k({ type: 0, media: e }, !0)
              ),
              obscuredEmbeds: e.embeds.filter(e =>
                k({ type: 1, media: e }, !0)
              ),
            }
          : { obscuredAttachments: [], obscuredEmbeds: [] };
      }
      function w(e) {
        return (
          !c.default.get("explicit_media_redaction_ignore_pending_scan") &&
          null == e
        );
      }
      function L(e) {
        let { action: t, channelId: n, messageId: s, context: i } = e;
        if (null == n || null == s) return;
        let r = v.default.getChannel(n);
        y.default.track(A.AnalyticEvents.EXPLICIT_MEDIA_ACTION, {
          action: t,
          guild_id: null == r ? void 0 : r.guild_id,
          channel_id: n,
          message_id: s,
          user_is_underage: (0, m.isCurrentUserTeen)(),
          context: i,
        });
      }
      function U(e, t) {
        let n = Date.now() - e;
        g.default.increment({
          name: f.MetricEvents.EXPLICIT_MEDIA_SCAN_CLIENT_TIMING,
          tags: [
            "timingBucket:".concat(Math.min(Math.floor(n / 1e3), 3)),
            "source:".concat(t),
          ],
        });
      }
      function G(e) {
        let { channelId: t, messageId: n, attachmentIds: s, embedIds: i } = e;
        if (null == t || null == n) return;
        let r = v.default.getChannel(t);
        y.default.track(A.AnalyticEvents.EXPLICIT_MEDIA_SCAN_CLIENT_TIMED_OUT, {
          channel_id: t,
          guild_id: null == r ? void 0 : r.guild_id,
          message_id: n,
          embed_ids: i,
          user_is_underage: (0, m.isCurrentUserTeen)(),
          scan_timeout_duration: C.MESSAGE_SCAN_TIMEOUT,
          attachment_ids_v2: s,
        }),
          g.default.increment({
            name: f.MetricEvents.EXPLICIT_MEDIA_SCAN_CLIENT_TIMED_OUT,
          });
      }
      function F(e) {
        let {
          channelId: t,
          numOfAttachments: n,
          numOfAttachmentsPendingScan: s,
          numOfEmbeds: i,
          numOfEmbedsPendingScan: r,
        } = e;
        if (null == t) return;
        let a = v.default.getChannel(t);
        y.default.track(
          A.AnalyticEvents.EXPLICIT_MEDIA_REDACTABLE_MESSAGES_LOADED,
          {
            channel_id: t,
            guild_id: null == a ? void 0 : a.guild_id,
            num_of_attachments: n,
            num_of_attachments_pending_scan: s,
            num_of_embeds: i,
            num_of_embeds_pending_scan: r,
          }
        );
      }
      function H(e) {
        let {
          messageId: t,
          channelId: n,
          numOfAttachments: s,
          numOfExplicitAttachments: i,
          numOfEmbeds: r,
          numOfExplicitEmbeds: a,
        } = e;
        if (null == n) return;
        let o = v.default.getChannel(n);
        y.default.track(
          A.AnalyticEvents.EXPLICIT_MEDIA_RETROACTIVE_SCAN_COMPLETE,
          {
            message_id: t,
            channel_id: n,
            channel_type: null == o ? void 0 : o.type,
            guild_id: null == o ? void 0 : o.guild_id,
            num_of_attachments: s,
            num_of_explicit_attachments: i,
            num_of_embeds: r,
            num_of_explicit_embeds: a,
          }
        );
      }
      function B(e) {
        let t = e.attachments.map(
          e => (
            null == e.content_scan_version && (e.content_scan_version = -1), e
          )
        );
        e = e.set("attachments", t);
        let n = e.embeds.map(
          e => (null == e.contentScanVersion && (e.contentScanVersion = -1), e)
        );
        return (e = e.set("embeds", n));
      }
      ((o = s || (s = {}))[(o.Attachment = 0)] = "Attachment"),
        (o[(o.Embed = 1)] = "Embed"),
        ((d = i || (i = {})).EXPLICIT_MEDIA_LEARN_MORE_VIEWED =
          "explicit_media_learn_more_viewed"),
        (d.EXPLICIT_MEDIA_LEARN_MORE_CLICK_SETTINGS =
          "explicit_media_learn_more_click_settings"),
        (d.EXPLICIT_MEDIA_LEARN_MORE_CLICK_LEARN_MORE =
          "explicit_media_learn_more_click_learn_more"),
        (d.EXPLICIT_MEDIA_LEARN_MORE_CLICK_DISMISS =
          "explicit_media_learn_more_click_dismiss"),
        (d.EXPLICIT_MEDIA_LEARN_MORE_CLICK_FALSE_POSITIVE =
          "explicit_media_learn_more_click_false_positive"),
        (d.EXPLICIT_MEDIA_FALSE_POSITIVE_VIEWED =
          "explicit_media_false_positive_viewed"),
        (d.EXPLICIT_MEDIA_FALSE_POSITIVE_CLICK_CONFIRM =
          "explicit_media_false_positive_click_confirm"),
        (d.EXPLICIT_MEDIA_FALSE_POSITIVE_CLICK_CANCEL =
          "explicit_media_false_positive_click_cancel"),
        (d.EXPLICIT_MEDIA_SENDER_FALSE_POSITIVE_BUTTON_VIEWED =
          "explicit_media_sender_false_positive_button_viewed"),
        (d.EXPLICIT_MEDIA_SENDER_FALSE_POSITIVE_BUTTON_CLICKED =
          "explicit_media_sender_false_positive_button_clicked"),
        (d.EXPLICIT_MEDIA_FALSE_POSITIVE_CLYDE_MESSAGE_SENT =
          "explicit_media_false_positive_clyde_message_sent"),
        ((u = r || (r = {})).EXPLICIT_MEDIA_OBSCURED_FALSE_POSITIVE_FLOW =
          "explicit_media_obscured_false_positive_flow"),
        (u.EXPLICIT_MEDIA_SENDER_FALSE_POSITIVE_FLOW =
          "explicit_media_sender_false_positive_flow"),
        (u.EXPLICIT_MEDIA_MESSAGE_SEND_BLOCKED =
          "explicit_media_message_send_blocked"),
        (u.EXPLICIT_MEDIA_ADD_MEDIA_TO_FORUM_POST_BLOCKED =
          "explicit_media_add_media_to_forum_post_blocked"),
        ((l = a || (a = {})).UPDATE = "update"),
        (l.TIMEOUT = "timeout");
      let x = (e, t) =>
        null != e &&
        null != t &&
        (e <= I.EXPLICIT_MEDIA_MIN_WIDTH || t <= I.EXPLICIT_MEDIA_MIN_HEIGHT);
    },
    574933: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        }),
        n("808653");
      var s = n("446674"),
        i = n("913144"),
        r = n("692038"),
        a = n("457971"),
        o = n("447435");
      let d = {};
      function u(e) {
        return "".concat(e.channel_id, ":").concat(e.id);
      }
      function l() {
        d = {};
      }
      class f extends s.default.Store {
        getMessage(e, t) {
          return d[u({ id: e, channel_id: t })];
        }
      }
      f.displayName = "SearchMessageStore";
      var _ = new f(i.default, {
        SEARCH_FINISH: function (e) {
          return (
            !!(0, a.isEligibleForExplicitMediaRedaction)() &&
            null != e.messages &&
            ((d = e.messages.reduce(
              (e, t) => (
                t.forEach(t => {
                  e[u(t)] = (0, r.createMessageRecord)(t);
                }),
                e
              ),
              {}
            )),
            !0)
          );
        },
        MESSAGE_UPDATE: function (e) {
          let { message: t } = e;
          if (
            !(0, a.isEligibleForExplicitMediaRedaction)() ||
            null == t.id ||
            null == t.channel_id
          )
            return !1;
          let n = u(t),
            s = d[n];
          return (
            null != s &&
            ((d[n] = (0, r.updateMessageRecord)(s, {
              attachments: t.attachments,
              embeds: t.embeds,
            })),
            !0)
          );
        },
        LOGOUT: function () {
          (function () {
            d = {};
          })();
        },
        CONNECTION_OPEN: function () {
          (function () {
            d = {};
          })();
        },
        MESSAGE_EXPLICIT_CONTENT_SCAN_TIMEOUT: function (e) {
          let { messageId: t, channelId: n } = e,
            s = u({ id: t, channel_id: n }),
            i = d[s];
          null != i &&
            (d[s] = (0, o.handleExplicitMediaScanTimeoutForMessage)(i));
        },
      });
    },
    721423: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          MAX_NUM_SUGGESTED_STICKERS: function () {
            return a;
          },
          MAX_NUM_USER_INPUT_WORDS: function () {
            return o;
          },
          DELAY_BEFORE_SUGGESTIONS_MS: function () {
            return d;
          },
          SUGGESTIONS_SHOWED_INSTRUMENTATION_RATE_LIMIT_MS: function () {
            return u;
          },
          REQUEST_THROTTLE_DURATION_MS: function () {
            return l;
          },
        });
      var s,
        i,
        r = n("718517");
      let a = 4,
        o = 5,
        d = 350,
        u = r.default.Millis.MINUTE,
        l = 2 * r.default.Millis.MINUTE;
      (s = i || (i = {}))[(s.STICKER = 0)] = "STICKER";
    },
    171209: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          removePunctuation: function () {
            return l;
          },
          getQueriesFromUserInput: function () {
            return f;
          },
          throttledTrackExpressionSuggestionDisplayed: function () {
            return _;
          },
        }),
        n("781738");
      var s = n("369470"),
        i = n.n(s),
        r = n("599110"),
        a = n("721423"),
        o = n("49111");
      let d = /(!|\.|;|,|-|—|–|\?|"|')/g,
        u = /(\n|\t|\s)/g,
        l = e => e.replace(d, "").replace(u, " "),
        f = e => (null == e ? [] : l(e).trim().split(" ")),
        _ = i(
          e => {
            r.default.track(o.AnalyticEvents.AUTO_SUGGEST_DISPLAYED, {
              suggestion_trigger: e,
            });
          },
          a.SUGGESTIONS_SHOWED_INSTRUMENTATION_RATE_LIMIT_MS,
          { leading: !0, trailing: !1 }
        );
    },
    565298: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
          getGuildIdForGenericRedirect: function () {
            return d;
          },
        });
      var s = n("446674"),
        i = n("162771"),
        r = n("379881"),
        a = n("49111");
      function o(e) {
        let t = (0, s.useStateFromStores)([i.default], () =>
          i.default.getGuildId()
        );
        return null != t ? t : e.getGuildId();
      }
      function d(e) {
        return i.default.getGuildId() !== a.FAVORITES
          ? e.getGuildId()
          : r.default.isFavorite(e.id) ||
              (e.isThread() && r.default.isFavorite(e.parent_id))
            ? a.FAVORITES
            : e.getGuildId();
      }
    },
    700507: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          disconnectRemote: function () {
            return p;
          },
          connectToRemote: function () {
            return y;
          },
          remoteVoiceStateUpdate: function () {
            return T;
          },
          remoteDisconnect: function () {
            return C;
          },
          remoteAudioSettingsUpdate: function () {
            return S;
          },
          fetchDevices: function () {
            return A;
          },
          persistSelectedDeviceId: function () {
            return D;
          },
          transferToPlayStation: function () {
            return P;
          },
        }),
        n("424973"),
        n("222007");
      var s = n("30945"),
        i = n("363747"),
        r = n("872717"),
        a = n("913144"),
        o = n("404118"),
        d = n("504385"),
        u = n("945956"),
        l = n("235660"),
        f = n("599110"),
        _ = n("286235"),
        c = n("893243"),
        g = n("76393"),
        m = n("780338"),
        h = n("49111"),
        v = n("782340");
      function E(e, t) {
        var n, s;
        f.default.track(h.AnalyticEvents.REMOTE_COMMAND_SENT, {
          command_type: e,
          remote_platform:
            null === (s = l.default.getSessionById(t)) || void 0 === s
              ? void 0
              : null === (n = s.clientInfo) || void 0 === n
                ? void 0
                : n.os,
        });
      }
      async function p() {
        let e = g.default.getAwaitingRemoteSessionInfo(),
          t = null == e ? void 0 : e.nonce;
        a.default.dispatch({ type: "REMOTE_SESSION_DISCONNECT" });
        let n = [];
        ((null == e ? void 0 : e.type) === h.PlatformTypes.PLAYSTATION ||
          (null == e ? void 0 : e.type) ===
            h.PlatformTypes.PLAYSTATION_STAGING) &&
          (null == e ? void 0 : e.commandId) != null &&
          (null == e ? void 0 : e.deviceId) != null &&
          n.push(O(e.type, e.deviceId, e.commandId)),
          null != t &&
            n.push(
              (function (e) {
                return r.default.delete({
                  url: h.Endpoints.CONNECT_REQUEST(e),
                });
              })(t)
            );
        try {
          await Promise.all(n);
        } catch (e) {
          o.default.show({
            title: v.default.Messages.CANCEL_TRANSFER_VOICE_FAILED_TITLE,
            body: v.default.Messages.CANCEL_TRANSFER_VOICE_FAILED_BODY,
          });
        }
      }
      function y(e) {
        a.default.dispatch({ type: "REMOTE_SESSION_CONNECT", sessionId: e });
      }
      function T(e, t) {
        let { selfMute: n, selfDeaf: s } = t;
        a.default.dispatch({
          type: "REMOTE_COMMAND",
          sessionId: e,
          payload: { type: "VOICE_STATE_UPDATE", self_mute: n, self_deaf: s },
        }),
          E("VOICE_STATE_UPDATE", e);
      }
      function C(e) {
        a.default.dispatch({
          type: "REMOTE_COMMAND",
          sessionId: e,
          payload: { type: "DISCONNECT" },
        }),
          E("DISCONNECT", e),
          p();
      }
      function S(e, t, n, s) {
        let i = (0, d.coerceAudioContextForProto)(n);
        null != i &&
          (a.default.dispatch({
            type: "REMOTE_COMMAND",
            sessionId: e,
            payload: { type: "AUDIO_SETTINGS_UPDATE", context: i, id: t, ...s },
          }),
          E("AUDIO_SETTINGS_UPDATE", e));
      }
      async function I() {
        let e;
        try {
          let t =
              null != u.default.getRTCConnectionId()
                ? i.ConsoleHandoffType.TRANSFER_EXISTING_CALL
                : i.ConsoleHandoffType.CREATE_NEW_CALL,
            n = await r.default.post({
              url: h.Endpoints.CONNECT_REQUEST_CREATE,
              body: { analytics_properties: { handoff_type: t } },
            });
          e = n.body.nonce;
        } catch (e) {
          _.default.captureException(e);
        }
        return e;
      }
      async function A(e) {
        let t;
        a.default.dispatch({
          type: "GAME_CONSOLE_FETCH_DEVICES_START",
          platform: e,
        });
        try {
          t = await r.default.get({ url: h.Endpoints.CONSOLES_DEVICES(e) });
        } catch (t) {
          throw (
            (a.default.dispatch({
              type: "GAME_CONSOLE_FETCH_DEVICES_FAIL",
              platform: e,
              error: t,
            }),
            t)
          );
        }
        let n = t.body.devices;
        return (
          a.default.dispatch({
            type: "GAME_CONSOLE_FETCH_DEVICES_SUCCESS",
            platform: e,
            devices: n,
          }),
          n
        );
      }
      function D(e, t) {
        a.default.dispatch({
          type: "GAME_CONSOLE_SELECT_DEVICE",
          platform: e,
          deviceId: t,
        });
      }
      async function N(e, t, n, i) {
        let o;
        a.default.dispatch({
          type: "GAME_CONSOLE_DEVICE_SEND_COMMAND_START",
          platform: e,
        });
        try {
          o = await r.default.post({
            url: h.Endpoints.CONSOLES_DEVICES_COMMANDS(e, t),
            body: {
              command: s.ConsoleCommands.CONNECT_VOICE,
              channel_id: n.id,
              guild_id: n.guild_id,
              nonce: i,
            },
          });
        } catch (t) {
          throw (
            (a.default.dispatch({
              type: "GAME_CONSOLE_DEVICE_SEND_COMMAND_FAIL",
              platform: e,
              error: t,
            }),
            t)
          );
        }
        let d = o.body.id;
        return (
          a.default.dispatch({
            type: "WAIT_FOR_REMOTE_SESSION",
            sessionType: e,
            nonce: i,
            channelId: n.id,
            deviceId: t,
            commandId: d,
          }),
          d
        );
      }
      async function O(e, t, n) {
        a.default.dispatch({
          type: "GAME_CONSOLE_DEVICE_CANCEL_COMMAND_START",
          platform: e,
          deviceId: t,
          commandId: n,
        });
        try {
          await r.default.delete({
            url: h.Endpoints.CONSOLES_DEVICES_COMMAND(e, t, n),
          });
        } catch (s) {
          throw (
            (a.default.dispatch({
              type: "GAME_CONSOLE_DEVICE_CANCEL_COMMAND_FAIL",
              platform: e,
              deviceId: t,
              commandId: n,
              error: s,
            }),
            s)
          );
        }
        a.default.dispatch({
          type: "GAME_CONSOLE_DEVICE_CANCEL_COMMAND_SUCCESS",
          platform: e,
          deviceId: t,
          commandId: n,
        });
      }
      async function P(e, t, n) {
        await c.default.maybeShowPTTAlert(e), await p();
        let s = await I();
        await N(e, t, n, s), (0, m.default)(n.id, e);
      }
    },
    893243: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
      var s = n("855164").default;
    },
    171644: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          XBOX_URL_BASE: function () {
            return d;
          },
          XBOX_APP_WEB_LINK: function () {
            return u;
          },
          XBOX_LINK_DEST_ORIGIN: function () {
            return l;
          },
          XBOX_CLIENT_SCOPES: function () {
            return f;
          },
          PLAYSTATION_LINK_DEST_ORIGIN: function () {
            return _;
          },
          PLAYSTATION_CLIENT_SCOPES: function () {
            return c;
          },
          XBOX_HANDOFF_SEARCH_PARAMS: function () {
            return g;
          },
          GameConsoleTypes: function () {
            return s;
          },
          GAME_CONSOLE_SESSIONS: function () {
            return m;
          },
          GameConsoleCommandResultErrorCodes: function () {
            return i;
          },
          USER_ACTION_REQUIRED_ERROR_CODES: function () {
            return h;
          },
          GAME_CONSOLE_ALERT_MODAL_LOCATION: function () {
            return v;
          },
        }),
        n("313619"),
        n("654714"),
        n("287168"),
        n("956660"),
        n("222007");
      var s,
        i,
        r,
        a,
        o = n("49111");
      let d = "xbox://communitylinking/donut/audio",
        u = "https://www.xbox.com/en-US/apps/xbox-app-for-mobile",
        l = "https://login.live.com",
        f = [
          o.OAuth2Scopes.VOICE,
          o.OAuth2Scopes.DM_CHANNELS_READ,
          o.OAuth2Scopes.GUILDS,
          o.OAuth2Scopes.GUILDS_MEMBERS_READ,
          o.OAuth2Scopes.IDENTIFY,
          o.OAuth2Scopes.CONNECTIONS,
        ],
        _ = "https://my.account.sony.com",
        c = f,
        g = e => {
          let {
              guildId: t,
              channelName: n,
              guildName: s,
              channelId: i,
              muted: r,
              deafened: a,
              nonce: o,
            } = e,
            d = {
              channelid: i,
              guildid: t,
              channelname: n,
              guildname: s,
              muted: String(r),
              deafened: String(a),
            };
          return null != o && (d.nonce = o), new URLSearchParams(d);
        };
      ((r = s || (s = {})).PLAYSTATION = "playstation"), (r.XBOX = "xbox");
      let m = new Set(["xbox", "playstation"]);
      o.ActivityGamePlatforms.XBOX,
        o.ActivityGamePlatforms.PS5,
        ((a = i || (i = {}))[
          (a.CONSOLE_DEVICE_PASSCODE_UNLOCK_REQUIRED = 27e4)
        ] = "CONSOLE_DEVICE_PASSCODE_UNLOCK_REQUIRED"),
        (a[(a.CONSOLE_DEVICE_UNAVAILABLE = 270001)] =
          "CONSOLE_DEVICE_UNAVAILABLE"),
        (a[(a.CONSOLE_DEVICE_UNVAILABLE_FROM_OTHER_USERS = 270002)] =
          "CONSOLE_DEVICE_UNVAILABLE_FROM_OTHER_USERS"),
        (a[(a.CONSOLE_DEVICE_COMMUNICATION_RESTRICTED = 270003)] =
          "CONSOLE_DEVICE_COMMUNICATION_RESTRICTED"),
        (a[(a.CONSOLE_DEVICE_INVALID_POWER_MODE = 270004)] =
          "CONSOLE_DEVICE_INVALID_POWER_MODE"),
        (a[(a.CONSOLE_DEVICE_ACCOUNT_LINK_ERROR = 270005)] =
          "CONSOLE_DEVICE_ACCOUNT_LINK_ERROR"),
        (a[(a.CONSOLE_DEVICE_MAX_MEMBERS_REACHED = 270006)] =
          "CONSOLE_DEVICE_MAX_MEMBERS_REACHED"),
        (a[(a.CONSOLE_DEVICE_BAD_COMMAND = 270007)] =
          "CONSOLE_DEVICE_BAD_COMMAND");
      let h = new Set([27e4]),
        v = "console error alert";
    },
    780338: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var s = n("42203"),
        i = n("945956"),
        r = n("235660"),
        a = n("599110"),
        o = n("49111");
      function d(e, t, n) {
        var d, u;
        a.default.track(o.AnalyticEvents.VOICE_CALL_TRANSFER, {
          source_platform:
            null != n
              ? null === (d = r.default.getSessionById(n)) || void 0 === d
                ? void 0
                : d.clientInfo.os
              : "discord_client",
          guild_id:
            null === (u = s.default.getChannel(e)) || void 0 === u
              ? void 0
              : u.guild_id,
          channel_id: e,
          rtc_connection_id: i.default.getRTCConnectionId(),
          target_platform: t,
        });
      }
    },
    129978: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          SelfDismissibleAlertBody: function () {
            return d;
          },
        });
      var s = n("37983"),
        i = n("884691"),
        r = n("446674"),
        a = n("76393"),
        o = n("347279");
      function d(e) {
        let { body: t, dismissCallback: n, errorCodeMessage: d } = e,
          u = (0, r.useStateFromStores)([a.default], () =>
            a.default.getRemoteSessionId()
          );
        return (i.useEffect(() => {
          null != u && n();
        }, [u, n]),
        null == d)
          ? (0, s.jsx)(s.Fragment, { children: t })
          : (0, s.jsxs)(s.Fragment, {
              children: [
                t,
                (0, s.jsx)("div", {
                  className: o.errorCodeMessage,
                  children: d,
                }),
              ],
            });
      }
    },
    855164: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
        });
      var s = n("37983");
      n("884691");
      var i = n("151426"),
        r = n("551042"),
        a = n("135230"),
        o = n("926994"),
        d = n("10641"),
        u = n("42887"),
        l = n("599110"),
        f = n("129978"),
        _ = n("171644"),
        c = n("49111"),
        g = n("782340"),
        m = n("274520");
      let h = "game_console_alert_modal",
        v = "game_console_ptt_alert_modal";
      var E = {
        maybeShowPTTAlert(e) {
          if (
            u.default.getMode() !== c.InputModes.PUSH_TO_TALK ||
            (0, d.isDismissibleContentDismissed)(
              i.DismissibleContent.CONSOLE_PTT_DISABLE_ALERT
            )
          )
            return Promise.resolve();
          let t = {
              [c.PlatformTypes.XBOX]: g.default.Messages.PTT_NOT_SUPPORTED_XBOX,
              [c.PlatformTypes.PLAYSTATION]:
                g.default.Messages.PTT_NOT_SUPPORTED_PLAYSTATION,
              [c.PlatformTypes.PLAYSTATION_STAGING]:
                g.default.Messages.PTT_NOT_SUPPORTED_PLAYSTATION,
            },
            n = t[e];
          return null == n
            ? Promise.resolve()
            : new Promise(e => {
                let t = () => {
                    (0, d.markDismissibleContentAsDismissed)(
                      i.DismissibleContent.CONSOLE_PTT_DISABLE_ALERT
                    ),
                      e();
                  },
                  o = e =>
                    (0, s.jsx)(a.default, {
                      ...e,
                      title: n,
                      body: g.default.Messages.PTT_NOT_SUPPORTED_ALERT_BODY,
                      onConfirm: t,
                      titleClassName: m.title,
                    });
                (0, r.hasModalOpen)(v)
                  ? (0, r.updateModal)(v, o)
                  : (0, r.openModal)(o, { modalKey: v });
              });
        },
        showSelfDismissableAlert(e) {
          let {
              title: t,
              body: n,
              errorCodeMessage: i,
              reconnectPlatformType: d,
            } = e,
            u = (0, s.jsx)(f.SelfDismissibleAlertBody, {
              body: n,
              errorCodeMessage: i,
              dismissCallback: () => (0, r.closeModal)(h),
            });
          function g() {
            null != d &&
              ((0, o.default)(d),
              l.default.track(c.AnalyticEvents.ACCOUNT_LINK_STEP, {
                previous_step: _.GAME_CONSOLE_ALERT_MODAL_LOCATION,
                current_step: "desktop oauth",
                platform_type: d,
              }));
          }
          let m = e =>
            (0, s.jsx)(a.default, { ...e, title: t, body: u, onConfirm: g });
          (0, r.hasModalOpen)(h)
            ? (0, r.updateModal)(h, m)
            : (0, r.openModal)(m, { modalKey: h });
        },
      };
    },
    791160: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("299285"),
        i = n("49111");
      function r(e) {
        let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
          n =
            !(arguments.length > 2) || void 0 === arguments[2] || arguments[2],
          r = s.default.getApplication(e.applicationId),
          a = e.getPrice(),
          o = e.getPrice(null, !1),
          d = {
            sku_id: e.id,
            sku_type: e.type,
            application_id: e.applicationId,
            application_name: null != r ? r.name : null,
            store_title: e.name,
            distribution_type: e.premium ? "premium" : "distribution",
          },
          u = null;
        n &&
          (u = {
            price: null != a ? a.amount : null,
            regular_price: null != o ? o.amount : null,
            currency: null != a ? a.currency : null,
          });
        let l = null;
        return (
          t &&
            (l = {
              has_single_player: e.hasFeature(i.SKUFeatureTypes.SINGLE_PLAYER),
              has_online_multiplayer: e.hasFeature(
                i.SKUFeatureTypes.ONLINE_MULTIPLAYER
              ),
              has_local_multiplayer: e.hasFeature(
                i.SKUFeatureTypes.LOCAL_MULTIPLAYER
              ),
              has_pvp_features: e.hasFeature(i.SKUFeatureTypes.PVP),
              has_local_coop: e.hasFeature(i.SKUFeatureTypes.LOCAL_COOP),
              has_online_coop: e.hasFeature(i.SKUFeatureTypes.ONLINE_COOP),
              has_cross_platform: e.hasFeature(
                i.SKUFeatureTypes.CROSS_PLATFORM
              ),
              has_rich_presence: e.hasFeature(i.SKUFeatureTypes.RICH_PRESENCE),
              has_game_invites: e.hasFeature(
                i.SKUFeatureTypes.DISCORD_GAME_INVITES
              ),
              has_spectator_mode: e.hasFeature(
                i.SKUFeatureTypes.SPECTATOR_MODE
              ),
              has_controller_support: e.hasFeature(
                i.SKUFeatureTypes.CONTROLLER_SUPPORT
              ),
              has_cloud_saves: e.hasFeature(i.SKUFeatureTypes.CLOUD_SAVES),
              has_secure_networking: e.hasFeature(
                i.SKUFeatureTypes.SECURE_NETWORKING
              ),
            }),
          { ...d, ...u, ...l }
        );
      }
    },
    509065: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        }),
        n("222007"),
        n("424973");
      var s,
        i,
        r = n("913144");
      ((s = class e {
        static flush(t, n) {
          for (let s of e.batchers)
            null != s.action && (null == t || s.shouldFlush(t, n)) && s.flush();
        }
        flush() {
          let { action: e } = this;
          (this.action = null),
            null != e &&
              r.default
                .dispatch(e)
                .catch(t => this.socket.resetSocketOnError(t, e.type));
        }
        constructor(t, n, s) {
          (this.socket = t),
            (this.action = null),
            (this.shouldFlush = s),
            (this.add = e => {
              this.action = n(this.action, e);
            }),
            e.batchers.push(this);
        }
      }).batchers = []),
        (i = s);
    },
    41642: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        }),
        ((s = i || (i = {})).CLOSED = "CLOSED"),
        (s.WILL_RECONNECT = "WILL_RECONNECT"),
        (s.CONNECTING = "CONNECTING"),
        (s.IDENTIFYING = "IDENTIFYING"),
        (s.RESUMING = "RESUMING"),
        (s.SESSION_ESTABLISHED = "SESSION_ESTABLISHED");
      var s,
        i,
        r = i;
    },
    265912: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
      var s = 16381;
    },
    799600: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        }),
        n("424973"),
        n("311790"),
        n("477657"),
        n("811875"),
        n("90301"),
        n("652153"),
        n("28797"),
        n("817884"),
        n("597349"),
        n("667536"),
        n("690341"),
        n("70102"),
        n("222007");
      var s = n("917351"),
        i = n.n(s),
        r = n("605250"),
        a = n("197881");
      let { NativeModules: o } = {},
        d = [];
      class u {
        static canUse() {
          return !1;
        }
        bindWebSocket(e) {}
        feed(e) {}
        dataReady(e) {
          this._onDataReady = e;
        }
        constructor(e) {
          (this._onDataReady = null), (this._gatewayEncoding = e);
        }
      }
      d.push(
        class extends u {
          static canUse() {
            return void 0 !== window.Uint8Array;
          }
          getAlgorithm() {
            return "zlib-stream";
          }
          usesLegacyCompression() {
            return !1;
          }
          feed(e) {
            let t = this._pako,
              n = this._inflate;
            if (null == n)
              throw Error("Trying to feed to closed compression adapter");
            let s = this._onDataReady;
            if (null === s)
              throw Error(
                "Cannot feed unless a data ready callback is registered."
              );
            if (e instanceof ArrayBuffer) {
              let s = new DataView(e),
                i =
                  s.byteLength >= 4 &&
                  65535 === s.getUint32(s.byteLength - 4, !1);
              n.push(e, !!i && t.Z_SYNC_FLUSH);
            } else throw Error("Expected array buffer, but got " + typeof e);
          }
          close() {
            null != this._inflate &&
              ((this._inflate.onEnd = null), (this._inflate.chunks = [])),
              (this._inflate = null);
          }
          handleFlushEnd(e) {
            let t;
            let n = this._pako,
              s = this._inflate;
            if (null == s) {
              new (0, r.default)("GatewayCompressionHandler").error(
                "flush end happened on closed compression adapter"
              );
              return;
            }
            if (e !== n.Z_OK)
              throw Error("zlib error, ".concat(e, ", ").concat(s.strm.msg));
            let { chunks: i } = s,
              a = i.length;
            if (this._gatewayEncoding.wantsString())
              t = a > 1 ? i.join("") : i[0];
            else if (a > 1) {
              let e = 0;
              for (let t = 0; t < a; t++) e += i[t].length;
              let n = new Uint8Array(e),
                s = 0;
              for (let e = 0; e < a; e++) {
                let t = i[e];
                n.set(t, s), (s += t.length);
              }
              t = n;
            } else t = i[0];
            (i.length = 0), null != this._onDataReady && this._onDataReady(t);
          }
          constructor(e) {
            super(e), (this._pako = n("181905"));
            let t = this._pako,
              s = (this._inflate = new t.Inflate({
                chunkSize: 65536,
                to: this._gatewayEncoding.wantsString() ? "string" : "",
              }));
            s.onEnd = this.handleFlushEnd.bind(this);
          }
        }
      ),
        d.push(
          class extends u {
            static canUse() {
              return !0;
            }
            getAlgorithm() {
              return null;
            }
            usesLegacyCompression() {
              return !0;
            }
            feed(e) {
              let t = this._pako;
              if (
                (e instanceof ArrayBuffer &&
                  this._gatewayEncoding.wantsString() &&
                  (e = t.inflate(e, { to: "string" })),
                null == this._onDataReady)
              )
                throw Error(
                  "Cannot feed unless a data ready callback is registered."
                );
              this._onDataReady(e);
            }
            close() {}
            constructor(...e) {
              super(...e), (this._pako = n("181905"));
            }
          }
        ),
        d.push(
          class extends u {
            static canUse() {
              return !1;
            }
            bindWebSocket(e) {
              this.close(),
                (this._socketId = e._socketId),
                o.DCDCompressionManager.enableZlibStreamSupport(this._socketId);
            }
            getAlgorithm() {
              return "zlib-stream";
            }
            usesLegacyCompression() {
              return !1;
            }
            feed(e) {
              if (null == this._onDataReady)
                throw Error(
                  "Cannot feed unless a data ready callback is registered."
                );
              null !== e && this._onDataReady(e);
            }
            close() {
              let e = this._socketId;
              (this._socketId = null),
                null !== e &&
                  o.DCDCompressionManager.disableZlibStreamSupport(e);
            }
            constructor(e) {
              super(e), (this._socketId = null);
            }
          }
        );
      class l extends u {
        static canUse() {
          return !0;
        }
        getAlgorithm() {
          return null;
        }
        usesLegacyCompression() {
          return !1;
        }
        feed(e) {
          if (null == this._onDataReady)
            throw Error(
              "Cannot feed unless a data ready callback is registered."
            );
          this._onDataReady(e);
        }
        close() {}
      }
      d.push(l);
      let f = i.find(d, e => e.canUse());
      a.ProcessArgs.isDiscordGatewayPlaintextSet() && (f = l);
      var _ = f;
    },
    619443: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return H;
          },
        }),
        n("808653"),
        n("70102");
      var s = n("917351"),
        i = n.n(s),
        r = n("446674"),
        a = n("913144"),
        o = n("987317"),
        d = n("723939"),
        u = n("605250"),
        l = n("374014"),
        f = n("374363"),
        _ = n("271938"),
        c = n("950104"),
        g = n("42203"),
        m = n("260320"),
        h = n("42887"),
        v = n("945956"),
        E = n("590401"),
        p = n("18494"),
        y = n("101125"),
        T = n("205817"),
        C = n("41642"),
        S = n("518916"),
        I = n("571420"),
        A = n("399010"),
        D = n("49111"),
        N = n("397336");
      let O = window.DiscordNative;
      S.socket.dispatcher.getDispatchHandler = A.default;
      let P = new u.default("ConnectionStore"),
        b = 0,
        V = null,
        R = !0;
      async function k(e) {
        (b = Date.now()),
          (V = e.sessionId),
          S.localPresenceState.handleConnectionOpen();
        let t = {},
          n = p.default.getVoiceChannelId();
        if (null != n) {
          var s, i, r, a, d, u, l, f;
          let e =
            (null === (d = window) || void 0 === d
              ? void 0
              : null === (a = d.performance) || void 0 === a
                ? void 0
                : null === (r = a.getEntriesByType) || void 0 === r
                  ? void 0
                  : null === (i = r.call(a, "navigation")) || void 0 === i
                    ? void 0
                    : null === (s = i[0]) || void 0 === s
                      ? void 0
                      : s.type) === "reload" ||
            (null ===
              (u = await (null == O
                ? void 0
                : null === (f = O.processUtils) || void 0 === f
                  ? void 0
                  : null === (l = f.getLastCrash) || void 0 === l
                    ? void 0
                    : l.call(f))) || void 0 === u
              ? void 0
              : u.rendererCrashReason) != null;
          if (e || !R) {
            let e = g.default.getChannel(n);
            null != e && (t = { guildId: e.getGuildId(), channelId: n });
          } else
            v.default.setLastSessionVoiceChannelId(null != n ? n : null),
              o.default.selectVoiceChannel(null);
        }
        S.localVoiceState.update(t, !0),
          S.localLobbyVoiceStates.update({}, !0),
          (R = !1);
      }
      function M() {
        S.localVoiceState.update();
      }
      function w() {
        return S.localVoiceState.update(), S.localLobbyVoiceStates.update(), !1;
      }
      function L() {
        return S.localPresenceState.update(), !1;
      }
      function U() {
        return S.localLobbyVoiceStates.update(), !1;
      }
      function G(e) {
        S.socket.isSessionEstablished() && S.socket.streamDelete(e);
      }
      class F extends r.default.Store {
        initialize() {
          this.waitFor(
            _.default,
            p.default,
            g.default,
            c.default,
            m.default,
            f.default
          ),
            this.syncWith([h.default], w),
            this.syncWith([y.default], L);
        }
        getSocket() {
          return S.socket;
        }
        isTryingToConnect() {
          return !S.socket.isClosed();
        }
        isConnected() {
          return S.socket.isSessionEstablished();
        }
        isConnectedOrOverlay() {
          return S.socket.isSessionEstablished() || __OVERLAY__;
        }
        lastTimeConnectedChanged() {
          return b;
        }
      }
      F.displayName = "GatewayConnectionStore";
      var H = new F(a.default, {
        START_SESSION: function () {
          return S.socket.isClosed()
            ? (P.verbose(
                "Socket is reconnecting because of starting new session"
              ),
              S.socket.connect())
            : (P.verbose(
                "Socket is not reconnecting during a new session because it is not closed"
              ),
              !1);
        },
        LOGIN_SUCCESS: function () {
          return (
            P.verbose("session refresh dispatched", {
              isEstablished: S.socket.isSessionEstablished(),
            }),
            !!S.socket.isSessionEstablished() &&
              (S.socket.close(), S.socket.connect())
          );
        },
        LOGOUT: function (e) {
          e.isSwitchingAccount && S.localPresenceState.handleAccountSwitch(),
            P.verbose("Closing socket because of logout"),
            S.socket.close();
        },
        CLEAR_CACHES: function (e) {
          return (
            S.socket.close(),
            S.socket.dispatcher.clear(),
            S.socket.connect(),
            !1
          );
        },
        CONNECTION_OPEN: e => {
          k(e);
        },
        CONNECTION_CLOSED: function () {
          P.verbose("connection closed dispatched"), (b = Date.now());
        },
        RTC_CONNECTION_STATE: function (e) {
          if (e.state !== D.RTCConnectionStates.DISCONNECTED) return !1;
          e.willReconnect &&
            (null != e.streamKey
              ? S.socket.streamPing(e.streamKey)
              : S.socket.voiceServerPing());
        },
        VOICE_CHANNEL_SELECT: function (e) {
          return (
            S.localVoiceState.update({
              guildId: e.guildId,
              channelId: e.channelId,
            }),
            !1
          );
        },
        VOICE_STATE_UPDATES: function (e) {
          let { voiceStates: t } = e;
          return t.reduce((e, t) => {
            if (_.default.getId() !== t.userId) return e;
            if (t.sessionId === V)
              S.localVoiceState.setState({
                guildId: t.guildId,
                channelId: t.channelId,
              });
            else {
              if (t.guildId !== S.localVoiceState.guildId) return e;
              S.localVoiceState.setState({ guildId: null, channelId: null });
            }
            return !0;
          }, !1);
        },
        GUILD_DELETE: function (e) {
          e.guild.id === S.localVoiceState.guildId &&
            S.localVoiceState.setState({ guildId: null, channelId: null });
        },
        CHANNEL_DELETE: function (e) {
          let { channel: t } = e;
          t.id === S.localVoiceState.channelId &&
            S.localVoiceState.setState({ guildId: null, channelId: null });
        },
        CALL_DELETE: function (e) {
          let { channelId: t } = e;
          t === S.localVoiceState.channelId &&
            S.localVoiceState.setState({ guildId: null, channelId: null });
        },
        APP_STATE_UPDATE: function (e) {
          return (
            e.state === D.AppStates.ACTIVE &&
              (I.setIsPaused(!1),
              _.default.isAuthenticated() &&
                S.socket.resetBackoff("App state is active")),
            !1
          );
        },
        GUILD_MEMBERS_REQUEST: function (e) {
          return (
            S.socket.isSessionEstablished() &&
              ("userIds" in e
                ? i(e.userIds)
                    .chunk(100)
                    .forEach(t => {
                      S.socket.requestGuildMembers(e.guildIds, {
                        userIds: t,
                        presences: !!e.presences,
                      });
                    })
                : S.socket.requestGuildMembers(e.guildIds, {
                    query: e.query,
                    limit: e.limit,
                    presences: !!e.presences,
                  })),
            !1
          );
        },
        GUILD_SEARCH_RECENT_MEMBERS: function (e) {
          let { guildId: t, query: n, continuationToken: s } = e;
          S.socket.isSessionEstablished() &&
            S.socket.searchRecentMembers(t, { query: n, continuationToken: s });
        },
        GUILD_SUBSCRIPTIONS_FLUSH: function (e) {
          let { subscriptions: t } = e;
          return (
            S.socket.isSessionEstablished() &&
              S.socket.updateGuildSubscriptions(t),
            !1
          );
        },
        CALL_CONNECT: function (e) {
          let { channelId: t } = e;
          return S.socket.isSessionEstablished() && S.socket.callConnect(t), !1;
        },
        CALL_CONNECT_MULTIPLE: function (e) {
          let { channelIds: t } = e;
          return (
            S.socket.isSessionEstablished() &&
              t.forEach(e => {
                S.socket.callConnect(e);
              }),
            !1
          );
        },
        LOBBY_CONNECT: function (e) {
          let { lobbyId: t, lobbySecret: n } = e;
          return (
            S.socket.isSessionEstablished() && S.socket.lobbyConnect(t, n), !1
          );
        },
        LOBBY_DISCONNECT: function (e) {
          let { lobbyId: t } = e;
          return (
            S.socket.isSessionEstablished() && S.socket.lobbyDisconnect(t),
            S.localLobbyVoiceStates.update(),
            !1
          );
        },
        LOBBY_VOICE_CONNECT: U,
        LOBBY_VOICE_DISCONNECT: U,
        RPC_APP_DISCONNECTED: U,
        STREAM_CREATE: M,
        STREAM_START: function (e) {
          let { streamType: t, guildId: n, channelId: s } = e;
          if (S.socket.isSessionEstablished()) {
            var i, r;
            let e =
              null != n
                ? null === (i = g.default.getChannel(s)) || void 0 === i
                  ? void 0
                  : i.rtcRegion
                : null === (r = c.default.getCall(s)) || void 0 === r
                  ? void 0
                  : r.region;
            S.socket.streamCreate(
              t,
              n,
              s,
              null != e ? e : E.default.getPreferredRegion()
            );
          }
          return !1;
        },
        STREAM_WATCH: function (e) {
          let { streamKey: t, allowMultiple: n } = e;
          return (
            S.socket.isSessionEstablished() &&
              (n ||
                !(function () {
                  let e = (function () {
                    return T.default
                      .getAllActiveStreamKeys()
                      .find(
                        e =>
                          (0, l.decodeStreamKey)(e).ownerId ===
                          _.default.getId()
                      );
                  })();
                  T.default
                    .getAllActiveStreamKeys()
                    .filter(t => t !== e)
                    .forEach(e => G(e));
                })(),
              S.socket.streamWatch(t)),
            !1
          );
        },
        STREAM_STOP: function (e) {
          let { streamKey: t } = e;
          return G(t), M(), !1;
        },
        STREAM_SET_PAUSED: function (e) {
          let { streamKey: t, paused: n } = e;
          S.socket.isSessionEstablished() && S.socket.streamSetPaused(t, n);
        },
        PUSH_NOTIFICATION_CLICK: function () {
          return (
            S.socket.expeditedHeartbeat(
              5e3,
              "user clicked on notification",
              !0
            ),
            !1
          );
        },
        EMBEDDED_ACTIVITY_DISCONNECT: function (e) {
          var t, n;
          let { channelId: s, applicationId: i } = e,
            r =
              null !==
                (n =
                  null === (t = g.default.getChannel(s)) || void 0 === t
                    ? void 0
                    : t.getGuildId()) && void 0 !== n
                ? n
                : null;
          S.socket.embeddedActivityClose(r, s, i);
        },
        REQUEST_FORUM_UNREADS: function (e) {
          let { guildId: t, channelId: n, threads: s } = e;
          S.socket.requestForumUnreads(t, n, s);
        },
        REQUEST_SOUNDBOARD_SOUNDS: function (e) {
          let { guildIds: t } = e;
          S.socket.requestSoundboardSounds(t);
        },
        REMOTE_COMMAND: function (e) {
          let { sessionId: t, payload: n } = e;
          return (
            S.socket.isSessionEstablished() && S.socket.remoteCommand(t, n), !1
          );
        },
        RESET_CONNECTION: function (e) {
          S.socket.connectionState !== C.default.WILL_RECONNECT &&
            (e.badCache
              ? (d.default.replaceDisableAllDatabases("RESET_CONNECTION"),
                S.socket.resetSocketOnError(
                  Error(
                    "Guild data was missing from store (via RESET_CONNECTION)"
                  ),
                  "RESET_CONNECTION_DATA_MISSING"
                ))
              : S.socket.resetSocketOnError(
                  Error("Connection reset requested (via RESET_CONNECTION)"),
                  "RESET_CONNECTION"
                ));
        },
        RTC_SPEED_TEST_START_TEST: function () {
          return (
            S.socket.isSessionEstablished() &&
              S.socket.speedTestCreate(E.default.getPreferredRegion()),
            !1
          );
        },
        RTC_SPEED_TEST_STOP_TEST: function () {
          return (
            S.socket.isSessionEstablished() && S.socket.speedTestDelete(), !1
          );
        },
        CLIPS_SETTINGS_UPDATE: M,
        RUNNING_GAMES_CHANGE: M,
        USER_SETTINGS_PROTO_UPDATE: function (e) {
          var t;
          e.settings.type === N.UserSettingsTypes.PRELOADED_USER_SETTINGS &&
            (null === (t = e.settings.proto.clips) || void 0 === t
              ? void 0
              : t.allowVoiceRecording) != null &&
            M();
        },
      });
    },
    705215: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        }),
        n("70102");
      var s = n("197881"),
        i = n("338580");
      let r = (0, i.getErlpackEncoding)();
      class a {
        pack(e) {
          return JSON.stringify(e);
        }
        unpack(e) {
          if ("string" != typeof e)
            throw Error(
              "Expected a string to be passed to JSONEncoding.unpack, got ".concat(
                null == e ? null : typeof e
              )
            );
          return JSON.parse(e);
        }
        getName() {
          return "json";
        }
        wantsString() {
          return !0;
        }
      }
      let o = void 0 !== r ? r : a;
      s.ProcessArgs.isDiscordGatewayPlaintextSet() && (o = a);
      var d = o;
    },
    338580: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getErlpackEncoding: function () {
            return a;
          },
        }),
        n("311790"),
        n("477657"),
        n("811875"),
        n("90301"),
        n("652153"),
        n("28797"),
        n("817884"),
        n("597349"),
        n("667536"),
        n("690341");
      var s = n("605250"),
        i = n("773336"),
        r = n("50885");
      function a() {
        if (i.isPlatformEmbedded) {
          let e;
          try {
            e = r.default.requireModule("discord_erlpack");
          } catch (t) {
            try {
              e = r.default.requireModule("erlpack");
            } catch (e) {}
          }
          if (null != e)
            return class {
              static canUse() {
                return null != e;
              }
              pack(t) {
                return e.pack(t).buffer;
              }
              unpack(t) {
                t instanceof ArrayBuffer && (t = new Uint8Array(t));
                try {
                  return e.unpack(t);
                } catch (e) {
                  throw (
                    (new (0, s.default)("GatewayEncodingErlpackEncoding").error(
                      "Error unpacking",
                      {
                        erlpackUnpackError: e,
                        erlpackDataPreview:
                          null != t ? Array.from(t.slice(0, 32)) : null,
                        erlpackDataLength: null != t ? t.length : null,
                      }
                    ),
                    e)
                  );
                }
              }
              getName() {
                return "etf";
              }
              wantsString() {
                return !1;
              }
            };
        }
      }
    },
    447214: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        }),
        n("511434"),
        n("313619"),
        n("654714"),
        n("287168"),
        n("956660"),
        n("222007"),
        n("860677");
      var s,
        i = n("627445"),
        r = n.n(i),
        a = n("181905"),
        o = n("981980"),
        d = n("102053"),
        u = n("432710"),
        l = n("446674"),
        f = n("872717"),
        _ = n("913144"),
        c = n("288206"),
        g = n("605250"),
        m = n("155084"),
        h = n("410912"),
        v = n("313915"),
        E = n("599110"),
        p = n("922932"),
        y = n("718517"),
        T = n("773336"),
        C = n("286235"),
        S = n("41642"),
        I = n("265912"),
        A = n("799600"),
        D = n("705215"),
        N = n("342797"),
        O = n("123265"),
        P = n("340115"),
        b = n("289362"),
        V = n("571420"),
        R = n("797785"),
        k = n("49111");
      let M = new g.default("GatewaySocket"),
        w = new D.default();
      function L() {}
      let U = 30 * y.default.Millis.SECOND,
        G = 3 * y.default.Millis.MINUTE,
        F = 1 * y.default.Millis.MINUTE;
      function H(e) {
        return null == e ? 0 : "string" == typeof e ? e.length : e.byteLength;
      }
      let B = window.GLOBAL_ENV.GATEWAY_ENDPOINT;
      s = class extends P.default {
        get connectionState() {
          return this.connectionState_;
        }
        set connectionState(e) {
          M.verbose("Setting connection state to ".concat(e)),
            (this.connectionState_ = e);
        }
        addAnalytics(e) {
          this.analytics = { ...this.analytics, ...e };
        }
        setResumeUrl(e) {
          null != e && e.endsWith("/") && (e = e.substring(0, e.length - 1)),
            null !== e && M.verbose("Updating resume url to ".concat(e)),
            (this.resumeUrl = e);
        }
        _connect() {
          var e, t;
          let n;
          if (!this.willReconnect()) {
            M.verbose("Skipping _connect because willReconnect is false");
            return;
          }
          if (V.getIsPaused()) {
            M.info("Skipping _connect because socket is paused");
            return;
          }
          (this.connectionState = S.default.CONNECTING),
            (this.nextReconnectIsImmediate = !1);
          let s = this.compressionHandler.getAlgorithm(),
            i = w.getName(),
            r = this._getGatewayUrl(),
            a = window.GLOBAL_ENV.API_VERSION;
          d.default.mark("\uD83C\uDF10", "Socket._connect"),
            M.info(
              "[CONNECT] ".concat(r, ", ") +
                "encoding: ".concat(i, ", ") +
                "version: ".concat(a, ", ") +
                "compression: ".concat(null != s ? s : "none")
            ),
            null !== this.webSocket &&
              (M.error("_connect called with already existing websocket"),
              this._cleanup(e => e.close(4e3))),
            (this.connectionStartTime = Date.now()),
            (this.helloTimeout = setTimeout(() => {
              let e = Date.now() - this.connectionStartTime;
              this._handleClose(
                !1,
                0,
                "The connection timed out after ".concat(
                  e,
                  " ms - did not receive OP_HELLO in time."
                )
              ),
                this.setResumeUrl(null);
            }, U));
          let o = new URL(r);
          o.searchParams.append("encoding", i),
            o.searchParams.append("v", a.toString()),
            null != s && o.searchParams.append("compress", s);
          !(function (e) {
            let t,
              {
                gatewayURL: n,
                newCallback: s,
                onOpen: i,
                onMessage: r,
                onError: a,
                onClose: o,
              } = e,
              d = window._ws,
              u = !1,
              l = !1,
              f = null,
              _ = null;
            if (((window._ws = null), null != d)) {
              if (((t = d.ws), d.state.gateway !== n))
                M.verbose(
                  "[FAST CONNECT] gatewayURL mismatch: "
                    .concat(d.state.gateway, " !== ")
                    .concat(n)
                ),
                  t.close(1e3),
                  (t = null);
              else {
                var c;
                let e = { ...d.state };
                null != e.messages &&
                  (e.messages = e.messages.map(e =>
                    null != e.data && "string" == typeof e.data
                      ? { ...e, data: e.data.substring(0, 100) }
                      : e
                  )),
                  M.log(
                    "[FAST CONNECT] successfully took over websocket, state:",
                    {
                      ...e,
                      messages:
                        null === (c = e.messages) || void 0 === c
                          ? void 0
                          : c.length,
                    }
                  ),
                  (u = d.state.open),
                  (l = d.state.identify),
                  (f = d.state.messages),
                  (_ = d.state.clientState);
              }
            }
            null == t && ((t = (0, R.default)(n)).binaryType = "arraybuffer"),
              s(t),
              u && i(l, _),
              null != f && f.forEach(r),
              (t.onopen = () => i(l, _)),
              (t.onmessage = r),
              (t.onclose = o),
              (t.onerror = a);
          })({
            gatewayURL: o.toString(),
            newCallback: e => {
              (this.webSocket = e), this.compressionHandler.bindWebSocket(e);
            },
            onOpen: (e, t) => {
              d.default.mark("\uD83C\uDF10", "GatewaySocket.onOpen ".concat(e));
              let n = Date.now() - this.connectionStartTime;
              M.info(
                "[CONNECTED] ".concat(o.toString(), " in ").concat(n, " ms")
              ),
                (this.isFastConnect = e),
                (this.lastIdentifyClientState = t),
                e ? this._doFastConnectIdentify() : this._doResumeOrIdentify();
            },
            onMessage:
              ((e = this.compressionHandler),
              (t = (e, t) => {
                let n = Date.now(),
                  { op: s, s: i, t: r, d: a } = w.unpack(e);
                s !== P.Opcode.DISPATCH &&
                  d.default.mark(
                    "\uD83C\uDF10",
                    "GatewaySocket.onMessage "
                      .concat(s, " ")
                      .concat(P.Opcode[s])
                  );
                let o = Date.now() - n;
                switch (
                  ("READY" === r
                    ? h.default.parseReady.set(n, o)
                    : "READY_SUPPLEMENTAL" === r
                      ? h.default.parseReadySupplemental.set(n, o)
                      : o > 10 &&
                        d.default.mark("\uD83C\uDF10", "Parse " + r, o),
                  null != i && (this.seq = i),
                  s)
                ) {
                  case P.Opcode.HELLO:
                    this._clearHelloTimeout(), this._handleHello(a);
                    break;
                  case P.Opcode.RECONNECT:
                    this._handleReconnect();
                    break;
                  case P.Opcode.INVALID_SESSION:
                    this._handleInvalidSession(a);
                    break;
                  case P.Opcode.HEARTBEAT:
                    this._sendHeartbeat();
                    break;
                  case P.Opcode.HEARTBEAT_ACK:
                    this._handleHeartbeatAck(a);
                    break;
                  case P.Opcode.DISPATCH:
                    this._handleDispatch(
                      a,
                      r,
                      "READY" === r
                        ? {
                            compressed_byte_size: t,
                            uncompressed_byte_size: H(e),
                            compression_algorithm:
                              this.compressionHandler.getAlgorithm(),
                            packing_algorithm: w.getName(),
                            unpack_duration_ms: o,
                          }
                        : null
                    );
                    break;
                  default:
                    M.info("Unhandled op ".concat(s));
                }
              }),
              (n = 0),
              e.dataReady(e => {
                try {
                  return t(e, n);
                } finally {
                  n = 0;
                }
              }),
              t => {
                let s = t.data;
                null != t.raw_length ? (n += t.raw_length) : (n += H(s)),
                  e.feed(s);
              }),
            onError: () => {
              this.setResumeUrl(null),
                p.default.flushDNSCache(),
                this._handleClose(
                  !1,
                  0,
                  "An error with the websocket occurred"
                );
            },
            onClose: e => {
              let { wasClean: t, code: n, reason: s } = e;
              return this._handleClose(t, n, s);
            },
          });
        }
        _handleHello(e) {
          let t = (this.heartbeatInterval = e.heartbeat_interval),
            n = Date.now() - this.connectionStartTime;
          M.verbose(
            "[HELLO] via ".concat((0, N.getConnectionPath)(e), ", ") +
              "heartbeat interval: ".concat(t, ", ") +
              "took ".concat(n, " ms")
          ),
            this._startHeartbeater();
        }
        _handleReconnect() {
          M.verbose("[RECONNECT] gateway requested I reconnect."),
            this._cleanup(e => e.close(4e3)),
            (this.connectionState = S.default.WILL_RECONNECT),
            this._connect();
        }
        _handleInvalidSession(e) {
          M.info("[INVALID_SESSION]".concat(e ? " can resume)" : "")),
            e ? this._doResumeOrIdentify() : this._doIdentify();
        }
        _handleDispatch(e, t, n) {
          let s = Date.now() - this.connectionStartTime;
          if ("READY" === t) {
            let t = e.session_id;
            this.sessionId = t;
            let n = (0, N.getConnectionPath)(e);
            d.default.setServerTrace(n),
              M.info("[READY] took ".concat(s, "ms, as ").concat(t)),
              M.verbose("".concat(n)),
              (this.connectionState = S.default.SESSION_ESTABLISHED),
              this.gatewayBackoff.succeed(),
              (this.iosGoingAwayEventCount = 0),
              this.setResumeUrl(e.resume_gateway_url);
          } else
            "READY_SUPPLEMENTAL" === t
              ? (M.info("[READY_SUPPLEMENTAL] took ".concat(s, "ms")),
                (this.connectionState = S.default.SESSION_ESTABLISHED),
                this.gatewayBackoff.succeed(),
                (this.iosGoingAwayEventCount = 0))
              : "RESUMED" === t &&
                (M.verbose((0, N.getConnectionPath)(e)),
                (this.connectionState = S.default.SESSION_ESTABLISHED),
                this.gatewayBackoff.succeed(),
                (this.iosGoingAwayEventCount = 0));
          this.dispatcher.receiveDispatch(e, t, n);
        }
        handleResumeDispatched() {
          let e = Date.now() - this.connectionStartTime;
          M.info(
            "[RESUMED] took "
              .concat(e, "ms, replayed ")
              .concat(
                this.dispatcher.resumeAnalytics.numEvents,
                " events, new seq: "
              )
              .concat(this.seq)
          );
        }
        handleReadyDispatched() {
          (this.didForceClearGuildHashes = !1), (this.hasConnectedOnce = !0);
        }
        _getGatewayUrl() {
          return null != this.resumeUrl ? this.resumeUrl : B;
        }
        _handleHeartbeatAck(e) {
          (this.lastHeartbeatAckTime = Date.now()),
            (this.heartbeatAck = !0),
            null !== this.expeditedHeartbeatTimeout &&
              (clearTimeout(this.expeditedHeartbeatTimeout),
              (this.expeditedHeartbeatTimeout = null),
              M.verbose("Expedited heartbeat succeeded"));
        }
        _handleHeartbeatTimeout() {
          this._cleanup(e => e.close(4e3)),
            (this.connectionState = S.default.WILL_RECONNECT);
          let e = this.gatewayBackoff.fail(() => this._connect());
          M.warn(
            "[ACK TIMEOUT] reconnecting in ".concat(
              (e / 1e3).toFixed(2),
              " seconds."
            )
          );
        }
        _handleClose(e, t, n) {
          if (
            ((e = e || !1),
            this._cleanup(),
            this.emit("close", { code: t, reason: n }),
            4004 === t)
          )
            return (
              (this.connectionState = S.default.CLOSED),
              M.warn(
                "[WS CLOSED] because of authentication failure, marking as closed."
              ),
              this._reset(e, t, n)
            );
          if (
            (this._tryDetectInvalidIOSToken(t, n, e),
            (this.connectionState = S.default.WILL_RECONNECT),
            this.nextReconnectIsImmediate)
          )
            M.info(
              "[WS CLOSED] ("
                .concat(e.toString(), ", ")
                .concat(t, ", ")
                .concat(n, ") retrying immediately.")
            ),
              this._connect();
          else {
            let s = this.gatewayBackoff.fail(() => this._connect());
            M.info(
              "[WS CLOSED] ("
                .concat(e.toString(), ", ")
                .concat(t, ", ")
                .concat(n, ") retrying in ")
                .concat((s / 1e3).toFixed(2), " seconds.")
            ),
              this.gatewayBackoff.fails > 4 && this._reset(e, t, n);
          }
        }
        _tryDetectInvalidIOSToken(e, t, n) {
          (0, T.isIOS)() &&
            null != this.token &&
            1001 === e &&
            "Stream end encountered" === t &&
            ((this.iosGoingAwayEventCount += 1),
            3 === this.iosGoingAwayEventCount &&
              f.default
                .get({
                  url: k.Endpoints.ME,
                  headers: { authorization: this.token },
                })
                .then(
                  e => {
                    let { status: t } = e;
                    E.default.track(
                      k.AnalyticEvents.IOS_INVALID_TOKEN_WORKAROUND_TRIGGERED,
                      { api_status_code: t }
                    );
                  },
                  e => {
                    let { status: t } = e;
                    401 === t &&
                      ((this.connectionState = S.default.CLOSED),
                      M.warn(
                        "[WS CLOSED] because of manual authentication failure, marking as closed."
                      ),
                      this._reset(n, 4004, "invalid token manually detected")),
                      E.default.track(
                        k.AnalyticEvents.IOS_INVALID_TOKEN_WORKAROUND_TRIGGERED,
                        { api_status_code: t }
                      );
                  }
                ));
        }
        _reset(e, t, n) {
          (this.sessionId = null),
            (this.seq = 0),
            M.warn(
              "[RESET] ("
                .concat(e.toString(), ", ")
                .concat(t, ", ")
                .concat(n, ")")
            ),
            this.emit("disconnect", { wasClean: e, code: t, reason: n });
        }
        _startHeartbeater() {
          let { heartbeatInterval: e } = this;
          r(
            null != e,
            "GatewaySocket: Heartbeat interval should never null here."
          ),
            null !== this.initialHeartbeatTimeout &&
              clearTimeout(this.initialHeartbeatTimeout),
            null !== this.heartbeater &&
              (clearInterval(this.heartbeater), (this.heartbeater = null));
          let t = () => {
            this.heartbeatAck
              ? ((this.heartbeatAck = !1), this._sendHeartbeat())
              : null === this.expeditedHeartbeatTimeout &&
                this._handleHeartbeatTimeout();
          };
          this.initialHeartbeatTimeout = setTimeout(
            () => {
              (this.initialHeartbeatTimeout = null),
                (this.heartbeatAck = !0),
                (this.heartbeater = setInterval(t, e)),
                t();
            },
            Math.floor(Math.random() * e)
          );
        }
        _stopHeartbeater() {
          null !== this.heartbeater &&
            (clearInterval(this.heartbeater), (this.heartbeater = null)),
            null !== this.initialHeartbeatTimeout &&
              (clearTimeout(this.initialHeartbeatTimeout),
              (this.initialHeartbeatTimeout = null)),
            null !== this.expeditedHeartbeatTimeout &&
              (clearTimeout(this.expeditedHeartbeatTimeout),
              (this.expeditedHeartbeatTimeout = null));
        }
        _clearHelloTimeout() {
          null != this.helloTimeout &&
            (clearTimeout(this.helloTimeout), (this.helloTimeout = null));
        }
        _cleanup(e) {
          l.default.Emitter.resume(),
            this._stopHeartbeater(),
            this._clearHelloTimeout();
          let t = this.webSocket;
          (this.webSocket = null),
            null != t &&
              ((t.onopen = L),
              (t.onmessage = L),
              (t.onerror = L),
              (t.onclose = L),
              null == e || e(t)),
            this.gatewayBackoff.cancel(),
            this.compressionHandler.close(),
            (this.compressionHandler = new A.default(w));
        }
        _doResume() {
          var e;
          (this.connectionState = S.default.RESUMING),
            (this.dispatcher.resumeAnalytics = (0, N.createResumeAnalytics)(
              Date.now() - this.connectionStartTime
            )),
            M.info(
              "[RESUME] resuming session "
                .concat(
                  null !== (e = this.sessionId) && void 0 !== e ? e : "",
                  ", seq: "
                )
                .concat(this.seq)
            ),
            this.send(
              P.Opcode.RESUME,
              { token: this.token, session_id: this.sessionId, seq: this.seq },
              !1
            );
        }
        async _doIdentify() {
          (this.seq = 0), (this.sessionId = null);
          let e = this.handleIdentify();
          if (null === e) {
            this._handleClose(!0, 4004, "No connection info provided");
            return;
          }
          this.connectionState = S.default.IDENTIFYING;
          let t = Date.now();
          this.identifyStartTime = t;
          let n = await c.default.getClientState();
          if (
            this.connectionState !== S.default.IDENTIFYING ||
            this.identifyStartTime !== t
          ) {
            M.warn(
              "Skipping identify because connectionState or identifyStartTime has changed"
            );
            return;
          }
          let { token: s, properties: i = {}, presence: r } = e;
          (this.token = s), M.verbose("[IDENTIFY]");
          let o = {
              token: s,
              capabilities: I.default,
              properties: i,
              presence: r,
              compress: this.compressionHandler.usesLegacyCompression(),
              client_state: (0, b.toGatewayClientState)(n),
            },
            d = JSON.stringify(o);
          (this.identifyUncompressedByteSize = d.length),
            (this.identifyCompressedByteSize = a.deflate(d).length),
            (this.lastIdentifyClientState = o.client_state),
            (this.identifyCount += 1),
            this.send(P.Opcode.IDENTIFY, o, !1);
        }
        _doFastConnectIdentify() {
          (this.seq = 0), (this.sessionId = null);
          let e = this.handleIdentify();
          if (null === e) {
            this._handleClose(!0, 4004, "No connection info provided");
            return;
          }
          let { token: t } = e;
          (this.token = t),
            (this.connectionState = S.default.IDENTIFYING),
            (this.identifyStartTime = Date.now()),
            (this.identifyCount += 1),
            M.verbose("[IDENTIFY, fast-connect]"),
            this._updateLastHeartbeatAckTime();
        }
        _doResumeOrIdentify() {
          let e = Date.now(),
            t =
              null !== this.sessionId &&
              (null == this.lastHeartbeatAckTime ||
                e - this.lastHeartbeatAckTime <= G);
          t ? this._doResume() : this._doIdentify(),
            this._updateLastHeartbeatAckTime();
        }
        _updateLastHeartbeatAckTime() {
          this.lastHeartbeatAckTime = Date.now();
        }
        _sendHeartbeat() {
          this.send(P.Opcode.HEARTBEAT, this.seq, !1);
        }
        getLogger() {
          return M;
        }
        willReconnect() {
          return this.connectionState === S.default.WILL_RECONNECT;
        }
        isClosed() {
          return this.connectionState === S.default.CLOSED;
        }
        isSessionEstablished() {
          return (
            this.connectionState === S.default.SESSION_ESTABLISHED ||
            this.connectionState === S.default.RESUMING
          );
        }
        isConnected() {
          return (
            this.connectionState === S.default.IDENTIFYING ||
            this.connectionState === S.default.RESUMING ||
            this.connectionState === S.default.SESSION_ESTABLISHED
          );
        }
        connect() {
          return this.isClosed()
            ? (M.verbose(".connect() called, new state is WILL_RECONNECT"),
              (this.connectionState = S.default.WILL_RECONNECT),
              this._connect(),
              !0)
            : (M.error(
                "Cannot start a new connection, connection state is not closed"
              ),
              !1);
        }
        getIdentifyInitialGuildId() {
          var e;
          return null === (e = this.lastIdentifyClientState) || void 0 === e
            ? void 0
            : e.initial_guild_id;
        }
        resetSocketOnError(e, t) {
          let n =
            arguments.length > 2 && void 0 !== arguments[2]
              ? arguments[2]
              : { sentry: !0, immediate: !1 };
          M.error(
            "resetSocketOnError during ".concat(t, ": ").concat(e.message),
            e.stack
          );
          let s =
            null != e.message &&
            e.message.indexOf("Guild data was missing from store") >= 0;
          m.default.increment(
            {
              name: u.MetricEvents.SOCKET_CRASHED,
              tags: ["action:".concat(t)],
            },
            !0
          ),
            (n.sentry = n.sentry && !s),
            (n.immediate = n.immediate || s),
            n.sentry &&
              C.default.captureException(e, {
                tags: { socketCrashedAction: t },
              }),
            E.default.track(k.AnalyticEvents.GATEWAY_SOCKET_RESET, {
              error_message: e.message,
              error_stack: e.stack,
              action: t,
            }),
            this._cleanup(e => e.close()),
            this._reset(!0, 1e3, "Resetting socket due to error."),
            this.dispatcher.clear(),
            (this.connectionState = S.default.WILL_RECONNECT),
            this.dispatchExceptionBackoff.cancel(),
            0 === this.dispatchExceptionBackoff._fails && n.immediate
              ? (M.verbose("Triggering fast reconnect"),
                this.dispatchExceptionBackoff.fail(() => {}),
                setTimeout(() => this._connect(), 0))
              : this.dispatchExceptionBackoff.fail(() => this._connect()),
            (this.didForceClearGuildHashes = !0),
            _.default.dispatch({ type: "CLEAR_GUILD_CACHE" }),
            clearTimeout(this.dispatchSuccessTimer),
            (this.dispatchSuccessTimer = setTimeout(
              () => this.dispatchExceptionBackoff.succeed(),
              2 * F
            ));
        }
        close() {
          if (this.isClosed()) {
            M.verbose("close() called, but socket is already closed.");
            return;
          }
          M.info(
            "Closing connection, current state is ".concat(this.connectionState)
          ),
            this._cleanup(e => e.close()),
            (this.connectionState = S.default.CLOSED),
            setImmediate(() => {
              this._reset(!0, 1e3, "Disconnect requested by user");
            });
        }
        networkStateChange(e, t) {
          let n =
            !(arguments.length > 2) || void 0 === arguments[2] || arguments[2];
          this.expeditedHeartbeat(e, t, n, !1);
        }
        expeditedHeartbeat(e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : "",
            n =
              !(arguments.length > 2) ||
              void 0 === arguments[2] ||
              arguments[2],
            s =
              !(arguments.length > 3) ||
              void 0 === arguments[3] ||
              arguments[3];
          if (!this.isClosed()) {
            if (this.isConnected()) {
              M.verbose(
                "Performing an expedited heartbeat ".concat(
                  null != t && "" !== t ? "reason: " + t : ""
                )
              ),
                (this.heartbeatAck = !1),
                this._sendHeartbeat(),
                null !== this.expeditedHeartbeatTimeout &&
                  clearTimeout(this.expeditedHeartbeatTimeout),
                (this.expeditedHeartbeatTimeout = setTimeout(() => {
                  (this.expeditedHeartbeatTimeout = null),
                    !1 === this.heartbeatAck && this._handleHeartbeatTimeout();
                }, e));
              return;
            }
            n
              ? this.resetBackoff(t, s)
              : M.verbose(
                  "Expedited heartbeat requested, but, connection state is "
                    .concat(
                      this.connectionState,
                      " and reconnectImmediately was not requested "
                    )
                    .concat(null != t && "" !== t ? "reason: " + t : "")
                );
          }
        }
        resetBackoff() {
          let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : "",
            t =
              !(arguments.length > 1) ||
              void 0 === arguments[1] ||
              arguments[1];
          M.verbose(
            "Connection has reset backoff".concat(
              null != e && "" !== e ? " for reason: " + e : ""
            )
          ),
            this.gatewayBackoff.succeed(),
            (this.iosGoingAwayEventCount = 0),
            (this.nextReconnectIsImmediate = !0),
            this.willReconnect()
              ? this._connect()
              : t &&
                this.connectionState !== S.default.SESSION_ESTABLISHED &&
                this._handleClose(!0, 0, e);
        }
        constructor() {
          super(),
            (this.dispatchExceptionBackoff = new o.default(1e3, F)),
            (this.dispatchSuccessTimer = 0),
            (this.didForceClearGuildHashes = !1),
            (this.identifyUncompressedByteSize = 0),
            (this.identifyCompressedByteSize = 0),
            (this.analytics = {}),
            (this.identifyCount = 0),
            (this.resumeUrl = null),
            (this.lastIdentifyClientState = null),
            (this.iosGoingAwayEventCount = 0),
            (this.send = (e, t, n) => {
              v.default.isLoggingGatewayEvents &&
                M.verboseDangerously("~>", e, t);
              let s = w.pack({ op: e, d: t });
              if (!n || this.isSessionEstablished())
                try {
                  null != this.webSocket
                    ? this.webSocket.send(s)
                    : M.warn(
                        "Attempted to send without a websocket that exists. Opcode: ".concat(
                          e
                        )
                      );
                } catch (e) {}
              else
                M.warn(
                  "Attempted to send while not being in a connected state opcode: ".concat(
                    e
                  )
                );
            }),
            (this.dispatcher = new O.default(this)),
            (this.gatewayBackoff = new o.default(1e3, 6e4)),
            (this.connectionState_ = S.default.CLOSED),
            (this.webSocket = null),
            (this.seq = 0),
            (this.sessionId = null),
            (this.token = null),
            (this.initialHeartbeatTimeout = null),
            (this.expeditedHeartbeatTimeout = null),
            (this.lastHeartbeatAckTime = null),
            (this.helloTimeout = null),
            (this.heartbeatInterval = null),
            (this.heartbeater = null),
            (this.heartbeatAck = !0),
            (this.connectionStartTime = 0),
            (this.identifyStartTime = 0),
            (this.nextReconnectIsImmediate = !1),
            (this.compressionHandler = new A.default(w)),
            (this.hasConnectedOnce = !1),
            (this.isFastConnect = !1),
            (this.identifyCount = 0),
            (this.iosGoingAwayEventCount = 0);
        }
      };
    },
    342797: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          logReadyPayloadReceived: function () {
            return d;
          },
          getConnectionPath: function () {
            return u;
          },
          getReadyPayloadByteSizeAnalytics: function () {
            return l;
          },
          createResumeAnalytics: function () {
            return f;
          },
          logResumeAnalytics: function () {
            return _;
          },
        }),
        n("424973");
      var s = n("102053");
      n("704744");
      var i = n("410912"),
        r = n("697218"),
        a = n("599110"),
        o = n("49111");
      function d(e, t, n, r, d) {
        var u, l, f;
        let _ = (function (e) {
          let { _trace: t } = e,
            n = {};
          try {
            let e = JSON.parse(t);
            null != e[0] &&
              "" !== e[0] &&
              e[0].startsWith("gateway-") &&
              (n.identify_total_server_duration_ms = Math.floor(
                e[1].micros / 1e3
              )),
              (function e(t, n) {
                if (null != t && t.length > 0)
                  for (let s = 0; s < t.length; s += 2) {
                    let i = t[s],
                      r = t[s + 1];
                    n(i, r.micros), e(r.calls, n);
                  }
              })(e, (e, t) => {
                "start_session" === e
                  ? (n.identify_api_duration_ms = Math.floor(t / 1e3))
                  : "guilds_connect" === e &&
                    (n.identify_guilds_duration_ms = Math.floor(t / 1e3));
              });
          } catch (e) {}
          return n;
        })(t);
        null != r &&
          s.default.addDetail(
            "payload_size(kb)",
            Math.round(r.uncompressed_byte_size / 1024)
          ),
          s.default.addDetail(
            "server_time(ms)",
            null !== (u = _.identify_total_server_duration_ms) && void 0 !== u
              ? u
              : 0
          );
        let c = {
          ...r,
          ..._,
          ...(function (e) {
            let { guilds: t } = e,
              n = 0,
              s = 0;
            return (
              t.forEach(e => {
                if (e.unavailable) return;
                let t =
                  "partial" === e.data_mode
                    ? e.partial_updates.channels
                    : e.channels;
                null != t &&
                  null != t.forEach &&
                  t.forEach(e => {
                    s++, e.type === o.ChannelTypes.GUILD_CATEGORY && n++;
                  });
              }),
              {
                num_guilds: t.length,
                num_guild_channels: s,
                num_guild_category_channels: n,
              }
            );
          })(t),
          ...d,
          duration_ms_since_identify_start: n - e.identifyStartTime,
          duration_ms_since_connection_start: n - e.connectionStartTime,
          duration_ms_since_emit_start: Date.now() - n,
          is_reconnect: e.hasConnectedOnce,
          is_fast_connect: e.isFastConnect,
          did_force_clear_guild_hashes: e.didForceClearGuildHashes,
          identify_uncompressed_byte_size: e.identifyUncompressedByteSize,
          identify_compressed_byte_size: e.identifyCompressedByteSize,
          had_cache_at_startup:
            null !== (l = e.analytics.hadCacheAtStartup) && void 0 !== l && l,
          used_cache_at_startup:
            null !== (f = e.analytics.usedCacheAtStartup) && void 0 !== f && f,
        };
        i.default.attachReadyPayloadProperties(c),
          a.default.track(o.AnalyticEvents.READY_PAYLOAD_RECEIVED, c, {
            logEventProperties: !0,
          });
      }
      function u(e) {
        try {
          var t;
          let n = (function (e) {
            if (null == e) return null;
            let t = JSON.parse(e);
            return (function e(t, n) {
              if (null == t) return "";
              let s = "";
              for (let i = 0; i < t.length; i += 2)
                s +=
                  "\n"
                    .concat(n)
                    .concat(t[i], ": ")
                    .concat(t[i + 1].micros / 1e3) +
                  e(t[i + 1].calls, n + "|  ");
              return s;
            })(t, "");
          })(null === (t = e._trace) || void 0 === t ? void 0 : t[0]);
          if (null != n) return n;
        } catch (e) {}
        return null != e._trace ? e._trace.join(" -> ") : "???";
      }
      function l(e) {
        var t, n;
        let s = Date.now(),
          {
            guilds: i,
            merged_presences: r,
            merged_members: a,
            read_state: o,
            private_channels: d,
            user_guild_settings: u,
            user_settings: l,
            user_settings_proto: f,
            experiments: _,
            guild_experiments: c,
            relationships: g,
            users: m,
            ...h
          } = e,
          v = [],
          E = [],
          p = [],
          y = [],
          T = [],
          C = [],
          S = [],
          I = [];
        return (
          i.forEach(e => {
            var t;
            if (e.unavailable) return;
            let { features: n, ...s } =
                null !== (t = e.properties) && void 0 !== t ? t : {},
              { threads: i, guild_scheduled_events: r, ...a } = e;
            v.push(
              "partial" === e.data_mode
                ? e.partial_updates.channels
                : e.channels
            ),
              E.push(
                "partial" === e.data_mode ? e.partial_updates.roles : e.roles
              ),
              p.push(
                "partial" === e.data_mode ? e.partial_updates.emojis : e.emojis
              ),
              y.push(i),
              T.push(
                "partial" === e.data_mode
                  ? e.partial_updates.stickers
                  : e.stickers
              ),
              C.push(n),
              S.push(r),
              I.push(a, s);
          }),
          {
            presences_size: JSON.stringify(
              null !== (t = null == r ? void 0 : r.friends) && void 0 !== t
                ? t
                : []
            ).length,
            users_size: JSON.stringify(m).length,
            read_states_size: JSON.stringify(o).length,
            private_channels_size: JSON.stringify(d).length,
            user_settings_size:
              JSON.stringify(null != l ? l : "").length +
              (null != f ? f : "").length,
            experiments_size:
              JSON.stringify(null != _ ? _ : []).length +
              JSON.stringify(null != c ? c : []).length,
            user_guild_settings_size: JSON.stringify(u).length,
            relationships_size: JSON.stringify(g).length,
            remaining_data_size: JSON.stringify(null != h ? h : {}).length,
            guild_channels_size: JSON.stringify(v).length,
            guild_members_size: JSON.stringify(null != a ? a : []).length,
            guild_presences_size: JSON.stringify(
              null !== (n = null == r ? void 0 : r.guilds) && void 0 !== n
                ? n
                : []
            ).length,
            guild_roles_size: JSON.stringify(E).length,
            guild_emojis_size: JSON.stringify(p).length,
            guild_threads_size: JSON.stringify(y).length,
            guild_stickers_size: JSON.stringify(T).length,
            guild_events_size: JSON.stringify(S).length,
            guild_features_size: JSON.stringify(C).length,
            guild_remaining_data_size: JSON.stringify(I).length,
            size_metrics_duration_ms: Date.now() - s,
          }
        );
      }
      function f(e) {
        return {
          connectTime: null != e ? e : 0,
          numEvents: 0,
          largestWaitTime: 0,
          dispatchTime: 0,
          totalWaitTime: 0,
          initialWaitTime: 0,
          startTime: performance.now(),
          lastUpdateTime: performance.now(),
        };
      }
      function _(e) {
        var t;
        !(
          !(null === (t = r.default.getCurrentUser()) || void 0 === t
            ? void 0
            : t.isStaff()) && 0.5 > Math.random()
        ) &&
          a.default.track(
            o.AnalyticEvents.CONNECTION_RESUMED,
            {
              connect_time_ms: e.connectTime,
              resume_time_ms: Math.floor(performance.now() - e.startTime),
              num_events: e.numEvents,
              largest_wait_time_ms: Math.floor(e.largestWaitTime),
              initial_wait_time_ms: Math.floor(e.initialWaitTime),
              total_wait_time_ms: Math.floor(e.totalWaitTime),
              total_dispatch_time_ms: Math.floor(e.dispatchTime),
            },
            { logEventProperties: !0 }
          );
      }
    },
    123265: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        }),
        n("222007"),
        n("424973"),
        n("70102");
      var s,
        i,
        r,
        a = n("446674"),
        o = n("605250"),
        d = n("313915"),
        u = n("509065"),
        l = n("41642"),
        f = n("342797");
      let _ = new o.default("GatewaySocket"),
        c = new Set(["READY", "INITIAL_GUILD"]),
        g = new Set(["READY", "READY_SUPPLEMENTAL", "RESUMED"]);
      ((r = s || (s = {}))[(r.Loading = 0)] = "Loading"),
        (r[(r.Loaded = 1)] = "Loaded"),
        (i = class {
          hasStuffToDispatchNow() {
            return this.queue.length > 0 && 1 === this.queue[0].status;
          }
          processFirstQueuedDispatch(e) {
            let t = [];
            for (
              ;
              this.queue.length > 0 &&
              e.has(this.queue[0].type) &&
              1 === this.queue[0].status;

            )
              t.push(this.queue.shift());
            this.dispatchMultiple(t);
          }
          unpauseDispatchQueue() {
            (this.paused = !1), this.flush();
          }
          receiveDispatch(e, t, n) {
            var s;
            if (null == this.getDispatchHandler)
              throw Error("getDispatchHandler needs to be passed in first!");
            let i =
                null === (s = this.getDispatchHandler(t)) || void 0 === s
                  ? void 0
                  : s.preload(e),
              r = {
                data: e,
                type: t,
                compressionAnalytics: n,
                status: null == i ? 1 : 0,
                preloadPromise: i,
                preloadedData: null,
              };
            this.queue.push(r),
              null != i
                ? i
                    .then(e => {
                      (r.preloadedData = e),
                        (r.status = 1),
                        this.scheduleFlush(t);
                    })
                    .catch(e => this.socket.resetSocketOnError(e, t))
                : this.scheduleFlush(t);
          }
          scheduleFlush(e) {
            !this.paused &&
              (c.has(e)
                ? (null != this.dispatchTimeout &&
                    clearTimeout(this.dispatchTimeout),
                  this.flush())
                : null == this.dispatchTimeout &&
                  (this.dispatchTimeout = setTimeout(
                    this.flush,
                    this.nextDispatchTimeout
                  )));
          }
          dispatchMultiple(e) {
            let t = "none",
              n = !1;
            try {
              this.socket.connectionState === l.default.RESUMING &&
                a.default.Emitter.pause(150),
                a.default.Emitter.batched(() => {
                  e.forEach(e => {
                    (t = e.type), (n = n || g.has(e.type)), this.dispatchOne(e);
                  }),
                    u.default.flush();
                }),
                n && a.default.Emitter.resume();
            } catch (e) {
              this.socket.resetSocketOnError(e, t);
            }
          }
          dispatchOne(e) {
            var t, n, s;
            let {
                data: i,
                type: r,
                compressionAnalytics: a,
                preloadedData: o,
              } = e,
              c = performance.now();
            if (this.socket.connectionState === l.default.RESUMING) {
              let e = c - this.resumeAnalytics.lastUpdateTime;
              0 === this.resumeAnalytics.numEvents
                ? (this.resumeAnalytics.initialWaitTime = e)
                : e > this.resumeAnalytics.largestWaitTime &&
                  (this.resumeAnalytics.largestWaitTime = e),
                (this.resumeAnalytics.totalWaitTime += e),
                (this.resumeAnalytics.lastUpdateTime = c),
                (this.resumeAnalytics.numEvents += 1);
            }
            if (
              (d.default.isLoggingGatewayEvents &&
                _.verboseDangerously("<~", r, i),
              u.default.flush(r, i),
              "READY" === r)
            ) {
              let e = (0, f.getReadyPayloadByteSizeAnalytics)(i);
              null === (t = this.getDispatchHandler(r)) ||
                void 0 === t ||
                t.dispatch(i, r, o),
                (0, f.logReadyPayloadReceived)(this.socket, i, c, a, e);
            } else
              "RESUMED" === r
                ? (null === (n = this.getDispatchHandler(r)) ||
                    void 0 === n ||
                    n.dispatch(i, r, o),
                  (0, f.logResumeAnalytics)(this.resumeAnalytics),
                  (this.resumeAnalytics = (0, f.createResumeAnalytics)()),
                  this.socket.handleResumeDispatched())
                : null === (s = this.getDispatchHandler(r)) ||
                  void 0 === s ||
                  s.dispatch(i, r, o);
            this.socket.connectionState === l.default.RESUMING &&
              (this.resumeAnalytics.dispatchTime += performance.now() - c);
          }
          clear() {
            (this.paused = !1), (this.queue.length = 0);
          }
          constructor(e) {
            (this.socket = e),
              (this.queue = []),
              (this.dispatchTimeout = null),
              (this.nextDispatchTimeout = 33),
              (this.paused = !0),
              (this.resumeAnalytics = (0, f.createResumeAnalytics)()),
              (this.getDispatchHandler = null),
              (this.flush = () => {
                if (this.paused) return;
                clearTimeout(this.dispatchTimeout),
                  (this.dispatchTimeout = null);
                let e = Date.now(),
                  t = 0;
                for (
                  ;
                  t < this.queue.length && 1 === this.queue[t].status;
                  t++
                );
                if (0 === t) return;
                let n = this.queue.splice(0, t);
                this.dispatchMultiple(n);
                let s = Date.now() - e;
                s > 100
                  ? (_.log(
                      "Dispatched "
                        .concat(n.length, " messages in ")
                        .concat(s, "ms")
                    ),
                    (this.nextDispatchTimeout = 250))
                  : (this.nextDispatchTimeout = 33);
              });
          }
        });
    },
    340115: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          Opcode: function () {
            return s;
          },
          default: function () {
            return i;
          },
        }),
        n("702976");
      var s,
        i,
        r,
        a = n("44170"),
        o = n("590401");
      ((r = s || (s = {}))[(r.DISPATCH = 0)] = "DISPATCH"),
        (r[(r.HEARTBEAT = 1)] = "HEARTBEAT"),
        (r[(r.IDENTIFY = 2)] = "IDENTIFY"),
        (r[(r.PRESENCE_UPDATE = 3)] = "PRESENCE_UPDATE"),
        (r[(r.VOICE_STATE_UPDATE = 4)] = "VOICE_STATE_UPDATE"),
        (r[(r.VOICE_SERVER_PING = 5)] = "VOICE_SERVER_PING"),
        (r[(r.RESUME = 6)] = "RESUME"),
        (r[(r.RECONNECT = 7)] = "RECONNECT"),
        (r[(r.REQUEST_GUILD_MEMBERS = 8)] = "REQUEST_GUILD_MEMBERS"),
        (r[(r.INVALID_SESSION = 9)] = "INVALID_SESSION"),
        (r[(r.HELLO = 10)] = "HELLO"),
        (r[(r.HEARTBEAT_ACK = 11)] = "HEARTBEAT_ACK"),
        (r[(r.CALL_CONNECT = 13)] = "CALL_CONNECT"),
        (r[(r.GUILD_SUBSCRIPTIONS = 14)] = "GUILD_SUBSCRIPTIONS"),
        (r[(r.LOBBY_CONNECT = 15)] = "LOBBY_CONNECT"),
        (r[(r.LOBBY_DISCONNECT = 16)] = "LOBBY_DISCONNECT"),
        (r[(r.LOBBY_VOICE_STATES_UPDATE = 17)] = "LOBBY_VOICE_STATES_UPDATE"),
        (r[(r.STREAM_CREATE = 18)] = "STREAM_CREATE"),
        (r[(r.STREAM_DELETE = 19)] = "STREAM_DELETE"),
        (r[(r.STREAM_WATCH = 20)] = "STREAM_WATCH"),
        (r[(r.STREAM_PING = 21)] = "STREAM_PING"),
        (r[(r.STREAM_SET_PAUSED = 22)] = "STREAM_SET_PAUSED"),
        (r[(r.REQUEST_GUILD_APPLICATION_COMMANDS = 24)] =
          "REQUEST_GUILD_APPLICATION_COMMANDS"),
        (r[(r.EMBEDDED_ACTIVITY_LAUNCH = 25)] = "EMBEDDED_ACTIVITY_LAUNCH"),
        (r[(r.EMBEDDED_ACTIVITY_CLOSE = 26)] = "EMBEDDED_ACTIVITY_CLOSE"),
        (r[(r.EMBEDDED_ACTIVITY_UPDATE = 27)] = "EMBEDDED_ACTIVITY_UPDATE"),
        (r[(r.REQUEST_FORUM_UNREADS = 28)] = "REQUEST_FORUM_UNREADS"),
        (r[(r.REMOTE_COMMAND = 29)] = "REMOTE_COMMAND"),
        (r[(r.GET_DELETED_ENTITY_IDS_NOT_MATCHING_HASH = 30)] =
          "GET_DELETED_ENTITY_IDS_NOT_MATCHING_HASH"),
        (r[(r.REQUEST_SOUNDBOARD_SOUNDS = 31)] = "REQUEST_SOUNDBOARD_SOUNDS"),
        (r[(r.SPEED_TEST_CREATE = 32)] = "SPEED_TEST_CREATE"),
        (r[(r.SPEED_TEST_DELETE = 33)] = "SPEED_TEST_DELETE"),
        (r[(r.REQUEST_LAST_MESSAGES = 34)] = "REQUEST_LAST_MESSAGES"),
        (r[(r.SEARCH_RECENT_MEMBERS = 35)] = "SEARCH_RECENT_MEMBERS"),
        (r[(r.REQUEST_CHANNEL_STATUSES = 36)] = "REQUEST_CHANNEL_STATUSES"),
        (r[(r.GUILD_SUBSCRIPTIONS_BULK = 37)] = "GUILD_SUBSCRIPTIONS_BULK"),
        (i = class extends a.EventEmitter {
          presenceUpdate(e, t, n, s, i) {
            this.send(3, {
              status: e,
              since: t,
              activities: n,
              afk: s,
              broadcast: i,
            });
          }
          voiceStateUpdate(e) {
            let {
                guildId: t = null,
                channelId: n = null,
                selfMute: s = !1,
                selfDeaf: i = !1,
                selfVideo: r = !1,
                preferredRegion: a = null,
                videoStreamParameters: d = null,
                flags: u = 0,
              } = e,
              l = {
                guild_id: t,
                channel_id: n,
                self_mute: s,
                self_deaf: i,
                self_video: r,
                flags: u,
              };
            null != n &&
              o.default.shouldIncludePreferredRegion() &&
              (l.preferred_region = a),
              null != d &&
                (l.tracks =
                  null == d
                    ? void 0
                    : d.map(e => ({
                        type: e.type,
                        rid: e.rid,
                        quality: e.quality,
                      }))),
              this.send(4, l);
          }
          voiceServerPing() {
            this.send(5, null);
          }
          embeddedActivityClose(e, t, n) {
            this.send(26, {
              guild_id: null != e ? e : "0",
              channel_id: t,
              application_id: n,
            });
          }
          requestGuildMembers(e, t) {
            let { query: n, limit: s, userIds: i, presences: r } = t;
            this.send(8, {
              guild_id: e,
              query: n,
              limit: s,
              user_ids: i,
              presences: r,
            });
          }
          searchRecentMembers(e, t) {
            let { query: n, continuationToken: s } = t;
            this.send(35, {
              guild_id: e,
              query: null != n ? n : "",
              continuation_token: null != s ? s : null,
            });
          }
          updateGuildSubscriptions(e) {
            let t = {},
              n = 0;
            for (let s in e) {
              let i = e[s],
                r = JSON.stringify([s, i]).length;
              n + r > 15360 &&
                (this.send(37, { subscriptions: t }), (t = {}), (n = 0)),
                (t[s] = i),
                (n += r);
            }
            n > 0 && this.send(37, { subscriptions: t });
          }
          callConnect(e) {
            this.send(13, { channel_id: e });
          }
          lobbyConnect(e, t) {
            this.send(15, { lobby_id: e, lobby_secret: t });
          }
          lobbyDisconnect(e) {
            this.send(16, { lobby_id: e });
          }
          lobbyVoiceStatesUpdate(e) {
            this.send(
              17,
              e.map(e => ({
                lobby_id: e.lobbyId,
                self_mute: e.selfMute,
                self_deaf: e.selfDeaf,
              }))
            );
          }
          streamCreate(e, t, n) {
            let s =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : null;
            this.send(18, {
              type: e,
              guild_id: t,
              channel_id: n,
              preferred_region: s,
            });
          }
          streamWatch(e) {
            this.send(20, { stream_key: e });
          }
          streamPing(e) {
            this.send(21, { stream_key: e });
          }
          streamDelete(e) {
            this.send(19, { stream_key: e });
          }
          streamSetPaused(e, t) {
            this.send(22, { stream_key: e, paused: t });
          }
          speedTestCreate() {
            let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : null;
            this.send(32, { preferred_region: e });
          }
          speedTestDelete() {
            this.send(33, null);
          }
          requestForumUnreads(e, t, n) {
            this.send(28, {
              guild_id: e,
              channel_id: t,
              threads: n.map(e => ({
                thread_id: e.threadId,
                ack_message_id: e.ackMessageId,
              })),
            });
          }
          requestSoundboardSounds(e) {
            this.send(31, { guild_ids: e });
          }
          requestLastMessages(e, t) {
            this.send(34, { guild_id: e, channel_ids: t });
          }
          getDeletedEntityIdsNotMatchingHash(e, t, n, s, i) {
            this.send(30, {
              guild_id: e,
              channel_ids_hash: t,
              role_ids_hash: n,
              emoji_ids_hash: s,
              sticker_ids_hash: i,
            });
          }
          requestChannelStatuses(e) {
            this.send(36, { guild_id: e });
          }
          remoteCommand(e, t) {
            this.send(29, { target_session_id: e, payload: t });
          }
        });
    },
    518916: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          socket: function () {
            return m;
          },
          localPresenceState: function () {
            return h;
          },
          localVoiceState: function () {
            return v;
          },
          localLobbyVoiceStates: function () {
            return E;
          },
        });
      var s = n("913144"),
        i = n("49671"),
        r = n("605250"),
        a = n("271938"),
        o = n("599110"),
        d = n("35468"),
        u = n("773336"),
        l = n("447214"),
        f = n("413196"),
        _ = n("764867"),
        c = n("292892");
      let g = new r.default("ConnectionStore"),
        m = new l.default(),
        h = new _.default(m),
        v = new c.default(m),
        E = new f.default(m);
      (m.handleIdentify = () => {
        let e = a.default.getToken();
        return (g.verbose("handleIdentify called", { hasToken: null != e }),
        null == e)
          ? null
          : {
              token: e,
              properties: o.default.getSuperProperties(),
              presence: h.getState(),
            };
      }),
        (0, u.isDesktop)() &&
          i.default.remotePowerMonitor.on("resume", () => {
            m.expeditedHeartbeat(5e3, "power monitor resumed");
          }),
        d.default.addOfflineCallback(() => {
          m.networkStateChange(15e3, "network detected offline.", !1);
        }),
        d.default.addOnlineCallback(() => {
          m.networkStateChange(5e3, "network detected online.");
        }),
        m.on("disconnect", e => {
          let { code: t, reason: n } = e;
          s.default.dispatch({ type: "CONNECTION_CLOSED", code: t, reason: n });
        }),
        m.on("close", e => {
          let { code: t, reason: n } = e;
          s.default.dispatch({
            type: "CONNECTION_INTERRUPTED",
            code: t,
            reason: n,
          });
        });
    },
    289362: function (e, t, n) {
      "use strict";
      function s(e) {
        let {
            knownGuildVersions: t,
            highestLastMessageId: n,
            readStateVersion: s,
            userGuildSettingsVersion: i,
            userSettingsVersion: r,
            privateChannelsVersion: a,
            apiCodeVersion: o,
            lastSelectedGuildId: d,
          } = e,
          u = null == d || isNaN(Number(d)) ? void 0 : d;
        return {
          guild_versions: t,
          highest_last_message_id: n,
          read_state_version: s,
          user_guild_settings_version: i,
          user_settings_version: r,
          private_channels_version: a,
          api_code_version: o,
          initial_guild_id: u,
        };
      }
      n.r(t),
        n.d(t, {
          toGatewayClientState: function () {
            return s;
          },
        });
    },
    413196: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
      var s,
        i = n("201876"),
        r = n("260320"),
        a = n("42887");
      s = class extends i.default {
        getInitialState() {
          return this.getNextState();
        }
        getNextState() {
          let e = r.default.getLobbiesWithVoice();
          return (
            e.length > 0 && (this._hadLobbyVoiceStates = !0),
            {
              lobbies: e.map(e => ({
                lobbyId: e.id,
                selfMute: a.default.isSelfMute(e.application_id),
                selfDeaf: a.default.isSelfDeaf(e.application_id),
              })),
            }
          );
        }
        shouldCommit() {
          return (
            this._hadLobbyVoiceStates && this.socket.isSessionEstablished()
          );
        }
        didCommit(e) {
          let { lobbies: t } = e;
          this.socket.lobbyVoiceStatesUpdate(t);
        }
        forceUpdate() {
          this._hadLobbyVoiceStates && super.forceUpdate();
        }
        constructor(e) {
          super(), (this.socket = e), (this._hadLobbyVoiceStates = !1);
        }
      };
    },
    764867: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
      var s,
        i = n("201876"),
        r = n("661736"),
        a = n("101125");
      s = class extends i.default {
        getInitialState() {
          return a.default.getLocalPresence();
        }
        getNextState() {
          return a.default.getLocalPresence();
        }
        shouldCommit() {
          return this.socket.isSessionEstablished();
        }
        emitPresenceUpdate(e) {
          let { status: t, since: n, activities: s, afk: i, broadcast: r } = e;
          this.socket.presenceUpdate(t, n, s, i, r);
        }
        handleConnectionOpen() {
          let e = !this.switchingAccounts;
          this.update({}, e), (this.switchingAccounts = !1);
        }
        handleAccountSwitch() {
          (this.switchingAccounts = !0),
            this.reset(),
            this.emitPresenceUpdate(this.getState());
        }
        constructor(e) {
          super(),
            (this.socket = e),
            (this.switchingAccounts = !1),
            (this.didCommit = (0, r.default)(
              5,
              2e4,
              this.emitPresenceUpdate.bind(this)
            ));
        }
      };
    },
    292892: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        }),
        n("702976");
      var s,
        i = n("201876"),
        r = n("56947"),
        a = n("386045"),
        o = n("584687"),
        d = n("103979"),
        u = n("845579"),
        l = n("373469"),
        f = n("42203"),
        _ = n("42887"),
        c = n("590401"),
        g = n("568307"),
        m = n("568734"),
        h = n("49111");
      s = class extends i.default {
        get guildId() {
          return this.getState().guildId;
        }
        get channelId() {
          return this.getState().channelId;
        }
        computeVoiceFlags() {
          var e, t, n;
          let s = 0,
            i = u.ClipsAllowVoiceRecording.getSetting();
          s = (0, m.setFlag)(s, h.VoiceFlags.ALLOW_VOICE_RECORDING, i);
          let f =
              a.default.getSettings().clipsEnabled &&
              (0, r.areClipsEnabled)() &&
              ((null === (e = l.default.getCurrentUserActiveStream()) ||
              void 0 === e
                ? void 0
                : e.state) === h.ApplicationStreamStates.ACTIVE ||
                (null === (t = l.default.getCurrentUserActiveStream()) ||
                void 0 === t
                  ? void 0
                  : t.state) === h.ApplicationStreamStates.PAUSED),
            { enableDecoupledGameClipping: _ } = o.default.getCurrentConfig({
              location: "computeVoiceFlags",
            }),
            { enableViewerClipping: c } = d.default.getCurrentConfig(
              { location: "computeVoiceFlags" },
              { autoTrackExposure: !1 }
            );
          c &&
            (s = (0, m.setFlag)(
              s,
              h.VoiceFlags.ALLOW_ANY_VIEWER_CLIPS,
              a.default.getSettings().viewerClipsEnabled
            ));
          let v =
            a.default.getSettings().decoupledClipsEnabled &&
            (null === (n = g.default.getVisibleGame()) || void 0 === n
              ? void 0
              : n.windowHandle) != null &&
            _;
          return (s = (0, m.setFlag)(s, h.VoiceFlags.CLIPS_ENABLED, f || v));
        }
        getInitialState() {
          return {
            guildId: null,
            channelId: null,
            selfMute: _.default.isSelfMute(),
            selfDeaf: _.default.isSelfDeaf(),
            selfVideo: _.default.isVideoEnabled(),
            preferredRegion: null,
            videoStreamParameters: null,
            flags: 0,
          };
        }
        getNextState(e) {
          let { guildId: t, channelId: n } = e;
          return {
            guildId: t,
            channelId: n,
            selfMute: _.default.isSelfMute(),
            selfDeaf: _.default.isSelfDeaf(),
            selfVideo: _.default.isVideoEnabled(),
            preferredRegion: c.default.getPreferredRegion(),
            videoStreamParameters: _.default.getVideoStreamParameters(),
            flags: this.computeVoiceFlags(),
          };
        }
        shouldCommit() {
          return this.socket.isSessionEstablished();
        }
        didCommit(e) {
          var t;
          let {
            guildId: n,
            channelId: s,
            selfMute: i,
            selfDeaf: r,
            selfVideo: a,
            preferredRegion: o,
            videoStreamParameters: d,
            flags: u = 0,
          } = e;
          a &&
          (null === (t = f.default.getChannel(s)) || void 0 === t
            ? void 0
            : t.type) === h.ChannelTypes.GUILD_STAGE_VOICE
            ? this.socket.voiceStateUpdate({
                guildId: n,
                channelId: s,
                selfMute: i,
                selfDeaf: r,
                selfVideo: a,
                preferredRegion: o,
                videoStreamParameters: d,
                flags: u,
              })
            : this.socket.voiceStateUpdate({
                guildId: n,
                channelId: s,
                selfMute: i,
                selfDeaf: r,
                selfVideo: a,
                preferredRegion: o,
                flags: u,
              });
        }
        constructor(e) {
          super(), (this.socket = e);
        }
      };
    },
    571420: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getIsPaused: function () {
            return i;
          },
          setIsPaused: function () {
            return r;
          },
        });
      let s = !1;
      function i() {
        return s;
      }
      function r(e) {
        s = e;
      }
    },
    263901: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          addPostConnectionCallback: function () {
            return o;
          },
        }),
        n("860677"),
        n("424973");
      var s = n("913144"),
        i = n("619443");
      let r = [];
      function a(e) {
        setImmediate(() => e());
      }
      function o(e) {
        i.default.isConnectedOrOverlay() ? a(e) : r.push(e);
      }
      s.default.subscribe("CONNECTION_OPEN", () => {
        r.forEach(e => a(e)), (r = []);
      });
    },
    797785: function (e, t, n) {
      "use strict";
      function s(e, t) {
        return new WebSocket(e, t);
      }
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
    },
    399010: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return L;
          },
        }),
        n("424973"),
        n("222007"),
        n("702976"),
        n("70102");
      var s = n("917351"),
        i = n.n(s);
      n("576863");
      var r = n("446674"),
        a = n("913144"),
        o = n("851387"),
        d = n("775433"),
        u = n("327037"),
        l = n("605250"),
        f = n("875978"),
        _ = n("25932"),
        c = n("410912"),
        g = n("116949"),
        m = n("233069"),
        h = n("522308"),
        v = n("766274"),
        E = n("42203"),
        p = n("26989"),
        y = n("778588"),
        T = n("260320"),
        C = n("697218"),
        S = n("800762"),
        I = n("10514"),
        A = n("521012"),
        D = n("224400"),
        N = n("390946"),
        O = n("509065"),
        P = n("518916");
      let b = new l.default("ConnectionStore"),
        V = new O.default(
          P.socket,
          (e, t) => {
            var n;
            e = null != e ? e : { type: "CHANNEL_UPDATES", channels: [] };
            let s = (0, m.createChannelRecordFromServer)(t),
              i = E.default.getChannel(t.id),
              r =
                null == i
                  ? void 0
                  : i.merge({
                      ...s,
                      recipients: i.recipients,
                      bitrate:
                        null !== (n = s.bitrate) && void 0 !== n
                          ? n
                          : i.bitrate,
                    });
            return e.channels.push(null != r ? r : s), e;
          },
          e => "CHANNEL_UPDATE" !== e
        ),
        R = new O.default(
          P.socket,
          (e, t) => (
            (e =
              null == e
                ? { type: "SOUNDBOARD_SOUNDS_RECEIVED", updates: [] }
                : e).updates.push({
              guildId: t.guild_id,
              sounds: t.soundboard_sounds.map(e => ({
                name: e.name,
                soundId: e.sound_id,
                emojiName: e.emoji_name,
                emojiId: e.emoji_id,
                userId: e.user_id,
                volume: e.volume,
                available: e.available,
                guildId: t.guild_id,
              })),
            }),
            e
          ),
          e => "SOUNDBOARD_SOUNDS" !== e
        ),
        k = new O.default(
          P.socket,
          (e, t) => (
            (e =
              null == e
                ? { type: "PRESENCE_UPDATES", updates: [] }
                : e).updates.push(t),
            e
          ),
          e => "PRESENCE_UPDATE" !== e
        ),
        M = {};
      function w(e, t) {
        for (let n of e) M[n] = { preload: () => null, dispatch: t };
      }
      function L(e) {
        return M[e];
      }
      function U(e) {
        a.default
          .dispatch(e)
          .catch(t => P.socket.resetSocketOnError(t, e.type));
      }
      function G(e, t, n) {
        let {
            roles: s,
            nick: r,
            avatar: a,
            flags: o,
            premium_since: d,
            pending: u,
            joined_at: l,
            communication_disabled_until: f,
            unusual_dm_activity_until: _,
          } = n,
          c = p.default.getMember(e, t.id);
        (!(
          null != c &&
          c.nick === r &&
          c.avatar === a &&
          i.isEqual(c.roles, s)
        ) ||
          c.premiumSince !== d ||
          c.isPending !== u ||
          c.joinedAt !== l ||
          c.communicationDisabledUntil !== f ||
          c.flags !== o ||
          c.unusualDMActivityUntil !== _) &&
          U({
            type: "GUILD_MEMBER_ADD",
            guildId: e,
            user: t,
            roles: s,
            nick: r,
            avatar: a,
            premiumSince: d,
            isPending: u,
            joinedAt: l,
            communicationDisabledUntil: f,
            unusualDMActivityUntil: _,
            flags: o,
          });
      }
      function F(e) {
        let { member: t, mentions: n, author: s, guild_id: i } = e;
        null != t && G(i, s, t),
          null != n &&
            n.forEach(e => {
              if (null != e.member) {
                let { member: t } = e;
                delete e.member, G(i, e, t);
              }
            });
      }
      function H(e) {
        return e.map(e => ({
          sessionId: e.session_id,
          lastModified: e.last_modified,
          status: e.status,
          activities: e.activities,
          active: !!e.active,
          clientInfo: e.client_info,
          broadcast: e.broadcast,
        }));
      }
      function B() {
        P.socket.isSessionEstablished() &&
          T.default.getPendingLobbies().forEach(e => {
            P.socket.lobbyConnect(e.id, e.secret);
          });
      }
      function x(e) {
        let {
          guildId: t,
          user: n,
          status: s,
          activities: i,
          clientStatus: r,
          broadcast: a,
        } = e;
        k.add({
          guildId: t,
          user: n,
          status: s,
          clientStatus: r,
          activities: i,
          broadcast: a,
        });
      }
      w(["INITIAL_GUILD"], e => {
        c.default.initialGuild.measure(() => {
          r.default.Emitter.batched(() => {
            let t = N.hydrateInitialGuild(e, P.socket.identifyStartTime);
            null != C.default.getCurrentUser() &&
              (U({ type: "GUILD_CREATE", guild: t }),
              U({
                type: "VOICE_STATE_UPDATES",
                voiceStates: t.voice_states.map(e => {
                  var n;
                  return {
                    userId: e.user_id,
                    guildId: t.id,
                    sessionId: e.session_id,
                    channelId: e.channel_id,
                    mute: e.mute,
                    deaf: e.deaf,
                    selfMute: e.self_mute,
                    selfDeaf: e.self_deaf,
                    selfVideo: e.self_video || !1,
                    suppress: e.suppress,
                    selfStream: e.self_stream || !1,
                    requestToSpeakTimestamp:
                      null !== (n = e.request_to_speak_timestamp) &&
                      void 0 !== n
                        ? n
                        : null,
                  };
                }),
              }),
              b.log("Dispatched INITIAL_GUILD ".concat(e.id)));
          });
        });
      }),
        w(["READY_SUPPLEMENTAL"], e => {
          c.default.readySupplemental.measure(() => {
            r.default.Emitter.batched(() => {
              var t, n;
              e = c.default.hydrateReadySupplemental.measure(() =>
                N.hydrateReadySupplementalPayload(e, P.socket.identifyStartTime)
              );
              let s = e =>
                  e.map(e => ({
                    user: e.user,
                    status: e.status,
                    clientStatus: e.client_status,
                    activities: e.activities,
                    broadcast: e.broadcast,
                  })),
                i = e.guilds.filter(e => !0 !== e.unavailable);
              i.forEach(e => {
                e.presences = s(e.presences || []);
              });
              let r = e.presences ? s(e.presences) : [],
                a = (
                  null !== (t = e.lazy_private_channels) && void 0 !== t
                    ? t
                    : []
                ).map(e => (0, m.createChannelRecordFromServer)(e)),
                o = null !== (n = e.game_invites) && void 0 !== n ? n : [];
              c.default.dispatchReadySupplemental.measure(() => {
                U({
                  type: "CONNECTION_OPEN_SUPPLEMENTAL",
                  guilds: i,
                  presences: r,
                  lazyPrivateChannels: a,
                  gameInvites: o,
                });
              });
              let d = [];
              i.forEach(e => {
                e.voice_states.forEach(t => {
                  var n;
                  d.push({
                    userId: t.user_id,
                    guildId: e.id,
                    sessionId: t.session_id,
                    channelId: t.channel_id,
                    mute: t.mute,
                    deaf: t.deaf,
                    selfMute: t.self_mute,
                    selfDeaf: t.self_deaf,
                    selfVideo: t.self_video || !1,
                    suppress: t.suppress,
                    selfStream: t.self_stream || !1,
                    requestToSpeakTimestamp:
                      null !== (n = t.request_to_speak_timestamp) &&
                      void 0 !== n
                        ? n
                        : null,
                  });
                });
              }),
                U({ type: "VOICE_STATE_UPDATES", voiceStates: d, initial: !0 }),
                P.localVoiceState.update(),
                P.localLobbyVoiceStates.update({}, !0);
            });
          }),
            setTimeout(() => U({ type: "POST_CONNECTION_OPEN" }), 2e3);
        }),
        !(function (e, t, n) {
          for (let s of e) M[s] = { preload: t, dispatch: n };
        })(
          ["READY"],
          () => N.preloadReadyPayloadData(),
          (e, t, n) => {
            if (e.user.bot) {
              U({ type: "LOGOUT" });
              return;
            }
            c.default.ready.measure(() => {
              r.default.Emitter.batched(() => {
                e = c.default.hydrateReady.measure(() =>
                  N.hydrateReadyPayloadPrioritized(
                    e,
                    P.socket.identifyStartTime,
                    n
                  )
                );
                let t = e.private_channels.map(e =>
                    (0, m.createChannelRecordFromServer)(e)
                  ),
                  s = e.guilds
                    .filter(
                      e => !0 === e.unavailable && !0 !== e.geo_restricted
                    )
                    .map(e => e.id),
                  i = e.guilds.filter(e => !0 !== e.unavailable),
                  r = e.guilds.filter(e => !0 === e.geo_restricted);
                i.forEach(e => {
                  e.presences = [];
                });
                let a =
                  null == e.user_settings_proto
                    ? void 0
                    : (0, g.b64ToPreloadedUserSettingsProto)(
                        e.user_settings_proto
                      );
                c.default.dispatchReady.measure(() => {
                  var n;
                  U({
                    type: "CONNECTION_OPEN",
                    sessionId: e.session_id,
                    authSessionIdHash: e.auth_session_id_hash,
                    user: e.user,
                    users: e.users,
                    guilds: i,
                    initialPrivateChannels: t,
                    unavailableGuilds: s,
                    readState: e.read_state,
                    userGuildSettings: e.user_guild_settings,
                    tutorial: e.tutorial,
                    relationships: e.relationships,
                    friendSuggestionCount: e.friend_suggestion_count,
                    presences: e.presences,
                    analyticsToken: e.analytics_token,
                    experiments: e.experiments,
                    connectedAccounts: e.connected_accounts,
                    guildExperiments: e.guild_experiments,
                    requiredAction: e.required_action,
                    consents: e.consents,
                    sessions: H(e.sessions || []),
                    pendingPayments: e.pending_payments,
                    countryCode:
                      null !== (n = e.country_code) && void 0 !== n
                        ? n
                        : void 0,
                    guildJoinRequests: e.guild_join_requests || [],
                    userSettingsProto: a,
                    apiCodeVersion: e.api_code_version,
                    auth: e.auth,
                    notificationSettings: {
                      flags: e.notification_settings.flags,
                    },
                    geoRestrictedGuilds: r,
                  });
                }),
                  null != e.auth_token &&
                    U({
                      type: "UPDATE_TOKEN",
                      token: e.auth_token,
                      userId: e.user.id,
                    }),
                  P.localPresenceState.update(),
                  P.localVoiceState.update(),
                  P.localLobbyVoiceStates.update(),
                  B();
              });
            });
          }
        ),
        w(["RESUMED"], () => {
          P.localPresenceState.forceUpdate(),
            P.localVoiceState.forceUpdate(),
            P.localLobbyVoiceStates.forceUpdate(),
            B(),
            U({ type: "CONNECTION_RESUMED" });
        }),
        w(["TYPING_START"], e => {
          null != e.member && G(e.guild_id, e.member.user, e.member),
            U({
              type: "TYPING_START",
              channelId: e.channel_id,
              userId: e.user_id,
            });
        }),
        w(["ACTIVITY_START"], e => {
          U({
            type: "ACTIVITY_START",
            userId: e.user_id,
            activity: e.activity,
          });
        }),
        w(["ACTIVITY_USER_ACTION"], e => {
          U({
            type: "ACTIVITY_USER_ACTION",
            actionType: e.action_type,
            user: e.user,
            applicationId: e.application_id,
            channelId: e.channel_id,
            messageId: e.message_id,
          });
        }),
        w(["MESSAGE_CREATE"], e => {
          F(e),
            null != e.author &&
              U({
                type: "MESSAGE_CREATE",
                guildId: e.guild_id,
                channelId: e.channel_id,
                message: e,
                optimistic: !1,
                isPushNotification: !1,
              });
        }),
        w(["MESSAGE_UPDATE"], e => {
          F(e), U({ type: "MESSAGE_UPDATE", guildId: e.guild_id, message: e });
        }),
        w(["MESSAGE_DELETE"], e => {
          U({
            type: "MESSAGE_DELETE",
            guildId: e.guild_id,
            id: e.id,
            channelId: e.channel_id,
          });
        }),
        w(["MESSAGE_DELETE_BULK"], e => {
          U({
            type: "MESSAGE_DELETE_BULK",
            guildId: e.guild_id,
            ids: e.ids,
            channelId: e.channel_id,
          });
        }),
        w(["MESSAGE_ACK"], e => {
          U({
            type: "MESSAGE_ACK",
            channelId: e.channel_id,
            messageId: e.message_id,
            manual: e.manual,
            newMentionCount: e.mention_count,
            version: e.version,
          });
        }),
        w(["GUILD_FEATURE_ACK"], e => {
          U({
            type: "GUILD_FEATURE_ACK",
            id: e.resource_id,
            ackType: e.ack_type,
            ackedId: e.entity_id,
          });
        }),
        w(["USER_NON_CHANNEL_ACK"], e => {
          U({
            type: "USER_NON_CHANNEL_ACK",
            ackType: e.ack_type,
            ackedId: e.entity_id,
          });
        }),
        w(["CHANNEL_PINS_ACK"], e => {
          U({
            type: "CHANNEL_PINS_ACK",
            channelId: e.channel_id,
            timestamp: e.timestamp,
            version: e.version,
          });
        }),
        w(["CHANNEL_PINS_UPDATE"], e => {
          U({
            type: "CHANNEL_PINS_UPDATE",
            channelId: e.channel_id,
            lastPinTimestamp: e.last_pin_timestamp,
          });
        }),
        w(["CHANNEL_CREATE", "CHANNEL_DELETE"], (e, t) => {
          U({ type: t, channel: (0, m.createChannelRecordFromServer)(e) });
        }),
        w(["VOICE_CHANNEL_STATUS_UPDATE"], (e, t) => {
          U({ type: t, id: e.id, guildId: e.guild_id, status: e.status });
        }),
        w(["CHANNEL_STATUSES"], (e, t) => {
          U({ type: t, guildId: e.guild_id, channels: e.channels });
        }),
        w(["CHANNEL_UPDATE"], e => {
          V.add(e);
        }),
        w(["THREAD_CREATE", "THREAD_UPDATE", "THREAD_DELETE"], (e, t) => {
          let { newly_created: n, ...s } = e;
          U({
            type: t,
            isNewlyCreated: n,
            channel: (0, m.createChannelRecordFromServer)(s),
          });
        }),
        w(["THREAD_LIST_SYNC"], e => {
          U({
            type: "THREAD_LIST_SYNC",
            guildId: e.guild_id,
            threads: e.threads.map(e => {
              let t = E.default.getChannel(e.parent_id);
              return (
                null != t &&
                  ((e.nsfw = t.nsfw), (e.parentChannelThreadType = t.type)),
                (0, m.createChannelRecordFromServer)(e)
              );
            }),
            mostRecentMessages: e.most_recent_messages,
            members: e.members ? i.map(e.members, _.default) : void 0,
            channelIds: e.channel_ids,
          });
        }),
        w(["THREAD_MEMBER_UPDATE"], e => {
          U({
            type: "THREAD_MEMBER_UPDATE",
            id: e.id,
            guildId: e.guild_id,
            userId: e.user_id,
            flags: e.flags,
            muted: e.muted,
            muteConfig: e.mute_config,
            joinTimestamp: e.join_timestamp,
          });
        }),
        w(["THREAD_MEMBERS_UPDATE"], e => {
          var t;
          U({
            type: "THREAD_MEMBERS_UPDATE",
            id: e.id,
            guildId: e.guild_id,
            memberCount: e.member_count,
            addedMembers:
              null === (t = e.added_members) || void 0 === t
                ? void 0
                : t.map(t => ({
                    id: t.id,
                    guildId: e.guild_id,
                    userId: t.user_id,
                    flags: t.flags,
                    joinTimestamp: t.join_timestamp,
                  })),
            removedMemberIds: e.removed_member_ids,
            memberIdsPreview: e.member_ids_preview,
          });
        }),
        w(["FORUM_UNREADS"], e => {
          !e.permission_denied &&
            U({
              type: "FORUM_UNREADS",
              channelId: e.channel_id,
              threads: e.threads.map(e => ({
                threadId: e.thread_id,
                missing: e.missing,
                count: e.count,
              })),
            });
        }),
        w(["SOUNDBOARD_SOUNDS"], e => {
          R.add(e);
        }),
        w(["CHANNEL_RECIPIENT_ADD", "CHANNEL_RECIPIENT_REMOVE"], (e, t) => {
          let n = E.default.getBasicChannel(e.channel_id);
          U({
            type: t,
            channelId: e.channel_id,
            user: e.user,
            nick: e.nick,
            isMember: null != n,
          });
        }),
        w(["GUILD_CREATE"], e => {
          if (e.unavailable) U({ type: "GUILD_UNAVAILABLE", guildId: e.id });
          else {
            let t = N.hydratePreviouslyUnavailableGuild(e);
            o.default.createGuild(t),
              U({
                type: "VOICE_STATE_UPDATES",
                voiceStates: t.voice_states.map(e => {
                  var n;
                  return {
                    userId: e.user_id,
                    guildId: t.id,
                    sessionId: e.session_id,
                    channelId: e.channel_id,
                    mute: e.mute,
                    deaf: e.deaf,
                    selfMute: e.self_mute,
                    selfDeaf: e.self_deaf,
                    selfVideo: e.self_video || !1,
                    suppress: e.suppress,
                    selfStream: e.self_stream || !1,
                    requestToSpeakTimestamp:
                      null !== (n = e.request_to_speak_timestamp) &&
                      void 0 !== n
                        ? n
                        : null,
                  };
                }),
              });
          }
        }),
        w(["GUILD_UPDATE"], e => {
          U({ type: "GUILD_UPDATE", guild: e }),
            e.unavailable && U({ type: "GUILD_UNAVAILABLE", guildId: e.id });
        }),
        w(["GUILD_DELETE"], e => {
          U({ type: "GUILD_DELETE", guild: e }),
            e.geo_restricted
              ? U({
                  type: "GUILD_GEO_RESTRICTED",
                  guildId: e.id,
                  icon: e.icon,
                  name: e.name,
                })
              : e.unavailable &&
                U({ type: "GUILD_UNAVAILABLE", guildId: e.id });
        }),
        w(["GUILD_MEMBERS_CHUNK"], e => {
          r.default.Emitter.batched(() => {
            U({
              type: "GUILD_MEMBERS_CHUNK",
              guildId: e.guild_id,
              members: e.members,
              notFound: e.not_found,
            }),
              null != e.presences &&
                e.presences.forEach(t => {
                  let {
                    user: n,
                    status: s,
                    client_status: i,
                    activities: r,
                    broadcast: a,
                  } = t;
                  return x({
                    guildId: e.guild_id,
                    user: n,
                    status: s,
                    activities: r,
                    clientStatus: i,
                    broadcast: a,
                  });
                }),
              O.default.flush();
          });
        }),
        w(["THREAD_MEMBER_LIST_UPDATE"], e => {
          r.default.Emitter.batched(() => {
            U({
              type: "THREAD_MEMBER_LIST_UPDATE",
              guildId: e.guild_id,
              threadId: e.thread_id,
              members: e.members,
            }),
              null != e.presences &&
                e.presences.forEach(t => {
                  let {
                    user: n,
                    status: s,
                    client_status: i,
                    activities: r,
                    broadcast: a,
                  } = t;
                  return x({
                    guildId: e.guild_id,
                    user: n,
                    status: s,
                    activities: r,
                    clientStatus: i,
                    broadcast: a,
                  });
                }),
              O.default.flush();
          });
        }),
        w(
          [
            "GUILD_BAN_ADD",
            "GUILD_BAN_REMOVE",
            "GUILD_MEMBER_ADD",
            "GUILD_MEMBER_UPDATE",
            "GUILD_MEMBER_REMOVE",
          ],
          (e, t) => {
            U({
              type: t,
              guildId: e.guild_id,
              user: e.user,
              avatar: e.avatar,
              roles: e.roles,
              nick: e.nick,
              premiumSince: e.premium_since,
              isPending: e.pending,
              joinedAt: e.joined_at,
              communicationDisabledUntil: e.communication_disabled_until,
              unusualDMActivityUntil: e.unusual_dm_activity_until,
              flags: e.flags,
            });
          }
        ),
        w(["GUILD_ROLE_CREATE", "GUILD_ROLE_UPDATE"], (e, t) => {
          U({ type: t, guildId: e.guild_id, role: e.role });
        }),
        w(["GUILD_ROLE_DELETE"], e => {
          U({
            type: "GUILD_ROLE_DELETE",
            guildId: e.guild_id,
            roleId: e.role_id,
            version: e.version,
          });
        }),
        w(["GUILD_EMOJIS_UPDATE"], e => {
          U({
            type: "GUILD_EMOJIS_UPDATE",
            guildId: e.guild_id,
            emojis: e.emojis,
          });
        }),
        w(["GUILD_STICKERS_UPDATE"], e => {
          U({
            type: "GUILD_STICKERS_UPDATE",
            guildId: e.guild_id,
            stickers: e.stickers,
          });
        }),
        w(["GUILD_INTEGRATIONS_UPDATE"], e => {
          U({ type: "GUILD_INTEGRATIONS_UPDATE", guildId: e.guild_id });
        }),
        w(["INTEGRATION_CREATE"], e => {
          U({
            type: "INTEGRATION_CREATE",
            application: e.application,
            guildId: e.guild_id,
          });
        }),
        w(["INTEGRATION_DELETE"], e => {
          U({
            type: "INTEGRATION_DELETE",
            applicationId: e.application_id,
            guildId: e.guild_id,
          });
        }),
        w(["USER_UPDATE"], e => {
          U({ type: "CURRENT_USER_UPDATE", user: e });
        }),
        w(["USER_SETTINGS_PROTO_UPDATE"], e => {
          let t = (0, g.b64ToProtoWithType)(e.settings.type, e.settings.proto);
          if (null != t) {
            if ("string" == typeof t)
              throw (
                (console.error(
                  "Invalid proto: |"
                    .concat(t, "| |")
                    .concat(e.settings.proto, "|")
                ),
                console.error({
                  parsed: t,
                  wire: e.settings.proto,
                  type: e.settings.type,
                }),
                Error("UserSettingsProto must not be a string"))
              );
            U({
              type: "USER_SETTINGS_PROTO_UPDATE",
              settings: { proto: t, type: e.settings.type },
              partial: e.partial,
            });
          }
        }),
        w(["USER_GUILD_SETTINGS_UPDATE"], e => {
          U({
            type: "USER_GUILD_SETTINGS_FULL_UPDATE",
            userGuildSettings: [e],
          });
        }),
        w(["USER_CONNECTIONS_UPDATE"], () => {
          U({ type: "USER_CONNECTIONS_UPDATE" });
        }),
        w(["USER_REQUIRED_ACTION_UPDATE"], e => {
          U({
            type: "USER_REQUIRED_ACTION_UPDATE",
            requiredAction: e.required_action,
          });
        }),
        w(["USER_NOTE_UPDATE"], e => {
          U({ type: "USER_NOTE_UPDATE", ...e });
        }),
        w(["RELATIONSHIP_ADD"], e => {
          U({
            type: "RELATIONSHIP_ADD",
            relationship: {
              id: e.id,
              type: e.type,
              user: e.user,
              since: e.since,
              nickname: e.nickname,
            },
            shouldNotify: !0 === e.should_notify,
          });
        }),
        w(["RELATIONSHIP_REMOVE"], e => {
          U({ type: "RELATIONSHIP_REMOVE", relationship: e });
        }),
        w(["RELATIONSHIP_UPDATE"], e => {
          U({ type: "RELATIONSHIP_UPDATE", relationship: e });
        }),
        w(["PRESENCE_UPDATE"], e => {
          x({
            guildId: e.guild_id,
            user: e.user,
            status: e.status,
            activities: e.activities,
            clientStatus: e.client_status,
            broadcast: e.broadcast,
          });
        }),
        w(["PRESENCES_REPLACE"], e => {
          U({ type: "PRESENCES_REPLACE", presences: e });
        }),
        w(["SESSIONS_REPLACE"], e => {
          U({ type: "SESSIONS_REPLACE", sessions: H(e) });
        }),
        w(["VOICE_STATE_UPDATE"], e => {
          var t;
          null != e.member && G(e.guild_id, e.member.user, e.member),
            U({
              type: "VOICE_STATE_UPDATES",
              voiceStates: [
                {
                  userId: e.user_id,
                  guildId: e.guild_id,
                  sessionId: e.session_id,
                  channelId: e.channel_id,
                  mute: e.mute,
                  deaf: e.deaf,
                  selfMute: e.self_mute,
                  selfDeaf: e.self_deaf,
                  selfVideo: e.self_video || !1,
                  suppress: e.suppress,
                  selfStream: e.self_stream || !1,
                  requestToSpeakTimestamp:
                    null !== (t = e.request_to_speak_timestamp) && void 0 !== t
                      ? t
                      : null,
                  oldChannelId: S.default.getUserVoiceChannelId(
                    e.guild_id,
                    e.user_id
                  ),
                },
              ],
            });
        }),
        w(["LOBBY_VOICE_STATE_UPDATE"], e => {
          U({
            type: "LOBBY_VOICE_STATE_UPDATE",
            userId: e.user_id,
            lobbyId: e.lobby_id,
            sessionId: e.session_id,
            channelId: e.channel_id,
            mute: e.mute,
            deaf: e.deaf,
            selfMute: e.self_mute,
            selfDeaf: e.self_deaf,
          });
        }),
        w(["VOICE_SERVER_UPDATE"], e => {
          U({
            type: "VOICE_SERVER_UPDATE",
            guildId: e.guild_id,
            channelId: e.channel_id,
            endpoint: e.endpoint,
            token: e.token,
          });
        }),
        w(["LOBBY_VOICE_SERVER_UPDATE"], e => {
          U({
            type: "LOBBY_VOICE_SERVER_UPDATE",
            lobbyId: e.lobby_id,
            endpoint: e.endpoint,
            token: e.token,
          });
        }),
        w(["CALL_CREATE"], e => {
          U({
            type: "CALL_CREATE",
            channelId: e.channel_id,
            messageId: e.message_id,
            embeddedActivities: e.embedded_activities,
            region: e.region,
            ringing: e.ringing,
          });
          let t = e.voice_states;
          null != t &&
            U({
              type: "VOICE_STATE_UPDATES",
              voiceStates: t.map(e => {
                var t;
                return {
                  userId: e.user_id,
                  guildId: null,
                  sessionId: e.session_id,
                  channelId: e.channel_id,
                  mute: e.mute,
                  deaf: e.deaf,
                  selfMute: e.self_mute,
                  selfDeaf: e.self_deaf,
                  selfVideo: e.self_video || !1,
                  suppress: e.suppress,
                  selfStream: e.self_stream || !1,
                  requestToSpeakTimestamp:
                    null !== (t = e.request_to_speak_timestamp) && void 0 !== t
                      ? t
                      : null,
                };
              }),
            });
        }),
        w(["CALL_UPDATE"], e => {
          U({
            type: "CALL_UPDATE",
            channelId: e.channel_id,
            messageId: e.message_id,
            region: e.region,
            ringing: e.ringing,
          });
        }),
        w(["CALL_DELETE"], e => {
          U({
            type: "CALL_DELETE",
            channelId: e.channel_id,
            unavailable: e.unavailable,
          });
        }),
        w(["OAUTH2_TOKEN_REVOKE"], e => {
          U({ type: "OAUTH2_TOKEN_REVOKE", accessToken: e.access_token });
        }),
        w(["RECENT_MENTION_DELETE"], e => {
          U({ type: "RECENT_MENTION_DELETE", id: e.message_id });
        }),
        w(["FRIEND_SUGGESTION_CREATE"], e => {
          U({ type: "FRIEND_SUGGESTION_CREATE", suggestion: e });
        }),
        w(["FRIEND_SUGGESTION_DELETE"], e => {
          U({
            type: "FRIEND_SUGGESTION_DELETE",
            suggestedUserId: e.suggested_user_id,
          });
        }),
        w(["WEBHOOKS_UPDATE"], e => {
          U({
            type: "WEBHOOKS_UPDATE",
            guildId: e.guild_id,
            channelId: e.channel_id,
          });
        }),
        w(["MESSAGE_REACTION_ADD", "MESSAGE_REACTION_REMOVE"], (e, t) => {
          U({
            type: t,
            channelId: e.channel_id,
            messageId: e.message_id,
            userId: e.user_id,
            emoji: e.emoji,
            colors: e.burst_colors,
            reactionType: e.type,
          });
        }),
        w(["MESSAGE_POLL_VOTE_ADD", "MESSAGE_POLL_VOTE_REMOVE"], (e, t) => {
          U({
            type:
              "MESSAGE_POLL_VOTE_ADD" === t
                ? "MESSAGE_REACTION_ADD"
                : "MESSAGE_REACTION_REMOVE",
            channelId: e.channel_id,
            messageId: e.message_id,
            userId: e.user_id,
            emoji: { id: e.answer_id, name: "" },
            reactionType: f.ReactionTypes.VOTE,
          });
        }),
        w(["MESSAGE_REACTION_REMOVE_ALL"], e => {
          U({
            type: "MESSAGE_REACTION_REMOVE_ALL",
            channelId: e.channel_id,
            messageId: e.message_id,
          });
        }),
        w(["MESSAGE_REACTION_REMOVE_EMOJI"], e => {
          U({
            type: "MESSAGE_REACTION_REMOVE_EMOJI",
            channelId: e.channel_id,
            messageId: e.message_id,
            emoji: e.emoji,
          });
        }),
        w(["MESSAGE_REACTION_ADD_MANY"], e => {
          U({
            type: "MESSAGE_REACTION_ADD_MANY",
            channelId: e.channel_id,
            messageId: e.message_id,
            reactions: e.reactions,
          });
        }),
        w(["PAYMENT_UPDATE"], e => {
          U({ type: "PAYMENT_UPDATE", payment: e });
        }),
        w(
          ["ENTITLEMENT_CREATE", "ENTITLEMENT_UPDATE", "ENTITLEMENT_DELETE"],
          (e, t) => {
            U({ type: t, entitlement: e });
          }
        ),
        w(["USER_PAYMENT_SOURCES_UPDATE"], () => {
          y.default.hasLayers() &&
            (n("850068").fetchPaymentSources(),
            d.fetchSubscriptionPlansBySKUs(I.default.getFetchedSKUIDs()));
        }),
        w(["USER_SUBSCRIPTIONS_UPDATE"], () => {
          u.fetchCurrentUser(),
            y.default.hasLayers() && n("850068").fetchSubscriptions();
        }),
        w(["USER_PREMIUM_GUILD_SUBSCRIPTION_SLOT_CREATE"], e => {
          U({
            type: "GUILD_BOOST_SLOT_CREATE",
            guildBoostSlot: h.default.createFromServer(
              e,
              A.default.getSubscriptionById(e.subscription_id)
            ),
          });
        }),
        w(["USER_PREMIUM_GUILD_SUBSCRIPTION_SLOT_UPDATE"], e => {
          U({
            type: "GUILD_BOOST_SLOT_UPDATE",
            guildBoostSlot: h.default.createFromServer(
              e,
              A.default.getSubscriptionById(e.subscription_id)
            ),
          });
        }),
        w(["BILLING_POPUP_BRIDGE_CALLBACK"], e => {
          U({
            type: "BILLING_POPUP_BRIDGE_CALLBACK",
            paymentSourceType: e.payment_source_type,
            state: e.state,
            path: e.path,
            query: e.query,
          });
        }),
        w(["USER_PAYMENT_BROWSER_CHECKOUT_DONE"], e => {
          U({ type: "USER_PAYMENT_BROWSER_CHECKOUT_DONE", loadId: e.load_id });
        }),
        w(["USER_PAYMENT_CLIENT_ADD"], e => {
          (0, D.getPurchaseTokenHash)().then(t => {
            let n = e.purchase_token_hash;
            n === t &&
              U({
                type: "USER_PAYMENT_CLIENT_ADD",
                purchaseTokenHash: n,
                expiresAt: e.expires_at,
              });
          });
        }),
        w(["GUILD_MEMBER_LIST_UPDATE"], e => {
          r.default.Emitter.batched(() => {
            let t = t => {
              if (null == t.member) return;
              let { member: n } = t;
              if ((G(e.guild_id, n.user, n), null == n.presence)) return;
              let { presence: s } = n;
              x({
                guildId: e.guild_id,
                user: s.user,
                status: s.status,
                activities: s.activities,
                clientStatus: s.client_status,
                broadcast: s.broadcast,
              });
            };
            e.ops.forEach(e => {
              let { op: n, items: s, item: i } = e;
              switch (n) {
                case "SYNC":
                  s.forEach(t);
                  break;
                case "UPDATE":
                case "INSERT":
                  t(i);
              }
            }),
              O.default.flush(),
              U({
                type: "GUILD_MEMBER_LIST_UPDATE",
                guildId: e.guild_id,
                id: e.id,
                ops: e.ops,
                groups: e.groups,
                memberCount: e.member_count,
                onlineCount: e.online_count,
              });
          });
        }),
        w(["LOBBY_CREATE"], e => {
          U({ type: "LOBBY_CREATE", lobby: e }),
            e.voice_states.forEach(t => {
              U({
                type: "LOBBY_VOICE_STATE_UPDATE",
                lobbyId: e.id,
                userId: t.user_id,
                sessionId: t.session_id,
                channelId: t.channel_id,
                mute: t.mute,
                deaf: t.deaf,
                selfMute: t.self_mute,
                selfDeaf: t.self_deaf,
              });
            });
        }),
        w(["LOBBY_UPDATE"], e => {
          U({ type: "LOBBY_UPDATE", lobby: e });
        }),
        w(["LOBBY_DELETE"], e => {
          U({ type: "LOBBY_DELETE", lobbyId: e.id, reason: e.reason });
        }),
        w(
          [
            "LOBBY_MEMBER_CONNECT",
            "LOBBY_MEMBER_UPDATE",
            "LOBBY_MEMBER_DISCONNECT",
          ],
          (e, t) => {
            U({ type: t, lobbyId: e.lobby_id, member: e.member });
          }
        ),
        w(["LOBBY_MESSAGE"], e => {
          U({
            type: "LOBBY_MESSAGE",
            lobbyId: e.lobby_id,
            senderId: e.sender_id,
            data: e.data,
          });
        }),
        w(["GIFT_CODE_UPDATE"], e => {
          U({ type: "GIFT_CODE_UPDATE", uses: e.uses, code: e.code });
        }),
        w(["GIFT_CODE_CREATE"], e => {
          U({ type: "GIFT_CODE_CREATE", giftCode: e });
        }),
        w(["USER_ACHIEVEMENT_UPDATE"], e => {
          U({ type: "USER_ACHIEVEMENT_UPDATE", userAchievement: e });
        }),
        w(["LIBRARY_APPLICATION_UPDATE"], e => {
          U({ type: "LIBRARY_APPLICATION_UPDATE", libraryApplication: e });
        }),
        w(["STREAM_CREATE"], e => {
          U({
            type: "STREAM_CREATE",
            streamKey: e.stream_key,
            region: e.region,
            viewerIds: e.viewer_ids,
            rtcServerId: e.rtc_server_id,
            paused: e.paused,
          });
        }),
        w(["STREAM_SERVER_UPDATE"], e => {
          U({
            type: "STREAM_SERVER_UPDATE",
            streamKey: e.stream_key,
            endpoint: e.endpoint,
            token: e.token,
          });
        }),
        w(["STREAM_UPDATE"], e => {
          U({
            type: "STREAM_UPDATE",
            streamKey: e.stream_key,
            region: e.region,
            viewerIds: e.viewer_ids,
            paused: e.paused,
          });
        }),
        w(["STREAM_DELETE"], e => {
          U({
            type: "STREAM_DELETE",
            streamKey: e.stream_key,
            unavailable: e.unavailable,
            reason: e.reason,
          });
        }),
        w(["GENERIC_PUSH_NOTIFICATION_SENT"], e => {
          U({
            type: "GENERIC_PUSH_NOTIFICATION_SENT",
            title: e.title,
            body: e.body,
            trackingType: e.tracking_type,
            icon: e.icon,
            route: e.route,
            tag: e.tag,
          });
        }),
        w(["NOTIFICATION_CENTER_ITEM_CREATE"], e => {
          U({ type: "NOTIFICATION_CENTER_ITEM_CREATE", item: e });
        }),
        w(["NOTIFICATION_CENTER_ITEM_DELETE"], e => {
          U({ type: "NOTIFICATION_CENTER_ITEM_DELETE", id: e.id });
        }),
        w(["NOTIFICATION_CENTER_ITEMS_ACK"], e => {
          U({
            type: "NOTIFICATION_CENTER_ITEMS_ACK",
            ids: [e.id],
            optimistic: !1,
          });
        }),
        w(["NOTIFICATION_CENTER_ITEM_COMPLETED"], e => {
          U({
            type: "NOTIFICATION_CENTER_ITEM_COMPLETED",
            item_enum: e.item_enum,
          });
        }),
        w(["APPLICATION_COMMAND_PERMISSIONS_UPDATE"], (e, t) => {
          U({ type: t, guildId: e.guild_id });
        }),
        w(["GUILD_APPLICATION_COMMAND_INDEX_UPDATE"], e => {
          U({
            type: "GUILD_APPLICATION_COMMAND_INDEX_UPDATE",
            guildId: e.guild_id,
            version: e.version,
          });
        }),
        w(["GUILD_JOIN_REQUEST_CREATE"], e => {
          U({
            type: "GUILD_JOIN_REQUEST_CREATE",
            request: e.request,
            status: e.status,
            guildId: e.guild_id,
          });
        }),
        w(["GUILD_JOIN_REQUEST_UPDATE"], e => {
          U({
            type: "GUILD_JOIN_REQUEST_UPDATE",
            request: e.request,
            status: e.status,
            guildId: e.guild_id,
          });
        }),
        w(["GUILD_JOIN_REQUEST_DELETE"], e => {
          U({
            type: "GUILD_JOIN_REQUEST_DELETE",
            id: e.id,
            userId: e.user_id,
            guildId: e.guild_id,
          });
        }),
        w(["INTERACTION_CREATE"], e => {
          U({
            type: "INTERACTION_CREATE",
            interactionId: e.id,
            nonce: e.nonce,
          });
        }),
        w(["INTERACTION_SUCCESS"], e => {
          U({
            type: "INTERACTION_SUCCESS",
            interactionId: e.id,
            nonce: e.nonce,
          });
        }),
        w(["INTERACTION_FAILURE"], e => {
          U({ type: "INTERACTION_FAILURE", nonce: e.nonce });
        }),
        w(["APPLICATION_COMMAND_AUTOCOMPLETE_RESPONSE"], e => {
          U({
            type: "APPLICATION_COMMAND_AUTOCOMPLETE_RESPONSE",
            choices: e.choices,
            nonce: e.nonce,
          });
        }),
        w(["INTERACTION_MODAL_CREATE"], e => {
          U({
            type: "INTERACTION_MODAL_CREATE",
            id: e.id,
            channelId: e.channel_id,
            customId: e.custom_id,
            application: e.application,
            title: e.title,
            components: e.components,
            nonce: e.nonce,
          });
        }),
        w(["INTERACTION_IFRAME_MODAL_CREATE"], e => {
          U({
            type: "INTERACTION_IFRAME_MODAL_CREATE",
            id: e.id,
            channelId: e.channel_id,
            customId: e.custom_id,
            application: e.application,
            title: e.title,
            iframePath: e.iframe_path,
            modalSize: e.modal_size,
            nonce: e.nonce,
          });
        }),
        w(["STAGE_INSTANCE_CREATE"], e => {
          U({ type: "STAGE_INSTANCE_CREATE", instance: e });
        }),
        w(["STAGE_INSTANCE_UPDATE"], e => {
          U({ type: "STAGE_INSTANCE_UPDATE", instance: e });
        }),
        w(["STAGE_INSTANCE_DELETE"], e => {
          U({ type: "STAGE_INSTANCE_DELETE", instance: e });
        }),
        w(["GUILD_SCHEDULED_EVENT_CREATE"], e => {
          U({ type: "GUILD_SCHEDULED_EVENT_CREATE", guildScheduledEvent: e });
        }),
        w(["GUILD_SCHEDULED_EVENT_UPDATE"], e => {
          U({ type: "GUILD_SCHEDULED_EVENT_UPDATE", guildScheduledEvent: e });
        }),
        w(["GUILD_SCHEDULED_EVENT_DELETE"], e => {
          U({ type: "GUILD_SCHEDULED_EVENT_DELETE", guildScheduledEvent: e });
        }),
        w(["GUILD_SCHEDULED_EVENT_EXCEPTION_CREATE"], e => {
          U({
            type: "GUILD_SCHEDULED_EVENT_EXCEPTION_CREATE",
            eventException: e,
          });
        }),
        w(["GUILD_SCHEDULED_EVENT_EXCEPTION_UPDATE"], e => {
          U({
            type: "GUILD_SCHEDULED_EVENT_EXCEPTION_UPDATE",
            eventException: e,
          });
        }),
        w(["GUILD_SCHEDULED_EVENT_EXCEPTION_DELETE"], e => {
          U({
            type: "GUILD_SCHEDULED_EVENT_EXCEPTION_DELETE",
            eventException: e,
          });
        }),
        w(["GUILD_SCHEDULED_EVENT_EXCEPTIONS_DELETE"], e => {
          U({
            type: "GUILD_SCHEDULED_EVENT_EXCEPTIONS_DELETE",
            eventId: e.event_id,
          });
        }),
        w(["GUILD_SCHEDULED_EVENT_USER_ADD"], e => {
          U({
            type: "GUILD_SCHEDULED_EVENT_USER_ADD",
            userId: e.user_id,
            guildId: e.guild_id,
            guildEventId: e.guild_scheduled_event_id,
            guildEventExceptionId: e.guild_scheduled_event_exception_id,
            response: e.response,
          });
        }),
        w(["GUILD_SCHEDULED_EVENT_USER_REMOVE"], e => {
          U({
            type: "GUILD_SCHEDULED_EVENT_USER_REMOVE",
            userId: e.user_id,
            guildId: e.guild_id,
            guildEventId: e.guild_scheduled_event_id,
            guildEventExceptionId: e.guild_scheduled_event_exception_id,
            response: e.response,
          });
        }),
        w(["GUILD_DIRECTORY_ENTRY_CREATE"], e => {
          U({
            type: "GUILD_DIRECTORY_ENTRY_CREATE",
            channelId: e.directory_channel_id,
            entry: e,
          });
        }),
        w(["GUILD_DIRECTORY_ENTRY_UPDATE"], e => {
          U({
            type: "GUILD_DIRECTORY_ENTRY_UPDATE",
            channelId: e.directory_channel_id,
            entry: e,
          });
        }),
        w(["GUILD_DIRECTORY_ENTRY_DELETE"], e => {
          U({
            type: "GUILD_DIRECTORY_ENTRY_DELETE",
            channelId: e.directory_channel_id,
            guildId: e.entity_id,
          });
        }),
        w(["AUTO_MODERATION_MENTION_RAID_DETECTION"], e => {
          U({
            type: "AUTO_MODERATION_MENTION_RAID_DETECTION",
            guildId: e.guild_id,
            decisionId: e.decision_id,
            suspiciousMentionActivityUntil: e.suspicious_mention_activity_until,
          });
        }),
        w(["VOICE_CHANNEL_EFFECT_SEND"], e => {
          U({
            type: "VOICE_CHANNEL_EFFECT_SEND",
            emoji: e.emoji,
            channelId: e.channel_id,
            userId: e.user_id,
            animationType: e.animation_type,
            animationId: e.animation_id,
            soundId: e.sound_id,
            soundVolume: e.sound_volume,
            points: e.points,
            streamerId: e.streamer_id,
            lineId: e.line_id,
            emojiHose: e.emoji_hose,
          });
        }),
        w(["GUILD_SOUNDBOARD_SOUND_CREATE"], e => {
          U({
            type: "GUILD_SOUNDBOARD_SOUND_CREATE",
            sound: {
              guildId: e.guild_id,
              name: e.name,
              soundId: e.sound_id,
              user: new v.default(e.user),
              userId: e.user_id,
              volume: e.volume,
              emojiId: e.emoji_id,
              emojiName: e.emoji_name,
              available: e.available,
            },
          });
        }),
        w(["GUILD_SOUNDBOARD_SOUND_UPDATE"], e => {
          U({
            type: "GUILD_SOUNDBOARD_SOUND_UPDATE",
            sound: {
              guildId: e.guild_id,
              name: e.name,
              soundId: e.sound_id,
              user: new v.default(e.user),
              userId: e.user_id,
              volume: e.volume,
              emojiId: e.emoji_id,
              emojiName: e.emoji_name,
              available: e.available,
            },
          });
        }),
        w(["GUILD_SOUNDBOARD_SOUND_DELETE"], e => {
          U({
            type: "GUILD_SOUNDBOARD_SOUND_DELETE",
            guildId: e.guild_id,
            soundId: e.sound_id,
          });
        }),
        w(["GUILD_SOUNDBOARD_SOUNDS_UPDATE"], e => {
          U({
            type: "GUILD_SOUNDBOARD_SOUNDS_UPDATE",
            guildId: e.guild_id,
            soundboardSounds: e.soundboard_sounds.map(t => ({
              name: t.name,
              soundId: t.sound_id,
              emojiName: t.emoji_name,
              emojiId: t.emoji_id,
              userId: t.user_id,
              volume: t.volume,
              available: t.available,
              guildId: e.guild_id,
            })),
          });
        }),
        w(["EMBEDDED_ACTIVITY_UPDATE"], e => {
          U({
            type: "EMBEDDED_ACTIVITY_INBOUND_UPDATE",
            guildId: e.guild_id,
            channelId: e.channel_id,
            embeddedActivity: e.embedded_activity,
            connections: e.connections,
            updateCode: e.update_code,
          });
        }),
        w(["EMBEDDED_ACTIVITY_UPDATE_V2"], e => {
          U({
            type: "EMBEDDED_ACTIVITY_INBOUND_UPDATE_V2",
            activitySessionId: e.activity_session_id,
            applicationId: e.application_id,
            channelId: e.channel_id,
            guildId: e.guild_id,
            instanceId: e.instance_id,
            userIds: e.user_ids,
          });
        }),
        w(["AUTH_SESSION_CHANGE"], e => {
          U({
            type: "AUTH_SESSION_CHANGE",
            authSessionIdHash: e.auth_session_id_hash,
          });
        }),
        w(["USER_CONNECTIONS_LINK_CALLBACK"], e => {
          U({
            type: "USER_CONNECTIONS_LINK_CALLBACK",
            provider: e.provider,
            callbackCode: e.callback_code,
            callbackState: e.callback_state,
          });
        }),
        w(["DELETED_ENTITY_IDS"], e => {
          U({ type: "DELETED_ENTITY_IDS", ...e });
        }),
        w(["CONSOLE_COMMAND_UPDATE"], e => {
          U({
            type: "CONSOLE_COMMAND_UPDATE",
            id: e.id,
            result: e.result,
            error: e.error,
          });
        }),
        w(["PASSIVE_UPDATE_V1"], e => {
          var t, n;
          U({
            type: "PASSIVE_UPDATE_V1",
            guildId: e.guild_id,
            members: e.members,
            channels:
              null === (t = e.channels) || void 0 === t
                ? void 0
                : t.map(e => ({
                    id: e.id,
                    lastMessageId: e.last_message_id,
                    lastPinTimestamp: e.last_pin_timestamp,
                  })),
            voiceStates:
              null === (n = e.voice_states) || void 0 === n
                ? void 0
                : n.map(e => {
                    var t;
                    return {
                      channelId: e.channel_id,
                      deaf: e.deaf || !1,
                      mute: e.mute || !1,
                      requestToSpeakTimestamp:
                        null !== (t = e.request_to_speak_timestamp) &&
                        void 0 !== t
                          ? t
                          : null,
                      selfDeaf: e.self_deaf || !1,
                      selfMute: e.self_mute || !1,
                      selfStream: e.self_stream || !1,
                      selfVideo: e.self_video || !1,
                      sessionId: e.session_id,
                      suppress: e.suppress,
                      userId: e.user_id,
                    };
                  }),
          });
        }),
        w(["PRIVATE_CHANNEL_INTEGRATION_CREATE"], e => {
          U({ type: "PRIVATE_CHANNEL_INTEGRATION_CREATE", integration: e });
        }),
        w(["PRIVATE_CHANNEL_INTEGRATION_UPDATE"], e => {
          U({ type: "PRIVATE_CHANNEL_INTEGRATION_UPDATE", integration: e });
        }),
        w(["PRIVATE_CHANNEL_INTEGRATION_DELETE"], e => {
          U({
            type: "PRIVATE_CHANNEL_INTEGRATION_DELETE",
            channelId: e.channel_id,
            applicationId: e.application_id,
          });
        }),
        w(["CREATOR_MONETIZATION_RESTRICTIONS_UPDATE"], e => {
          U({
            type: "GUILD_ROLE_SUBSCRIPTIONS_FETCH_RESTRICTIONS_SUCCESS",
            guildId: e.guild_id,
            restrictions: e.restrictions,
          });
        }),
        w(["BILLING_REFERRAL_TRIAL_OFFER_UPDATE"], e => {
          U({
            type: "BILLING_REFERRAL_TRIAL_OFFER_UPDATE",
            userTrialOfferId: e.user_trial_offer_id,
            recipientId: e.recipient_id,
          });
        }),
        w(["SPEED_TEST_CREATE"], e => {
          U({
            type: "SPEED_TEST_CREATE",
            streamKey: e.stream_key,
            region: e.region,
            viewerIds: e.viewer_ids,
            rtcServerId: e.rtc_server_id,
            paused: e.paused,
          });
        }),
        w(["SPEED_TEST_SERVER_UPDATE"], e => {
          U({
            type: "SPEED_TEST_SERVER_UPDATE",
            streamKey: e.stream_key,
            endpoint: e.endpoint,
            token: e.token,
          });
        }),
        w(["SPEED_TEST_UPDATE"], e => {
          U({
            type: "SPEED_TEST_UPDATE",
            streamKey: e.stream_key,
            region: e.region,
            viewerIds: e.viewer_ids,
            paused: e.paused,
          });
        }),
        w(["SPEED_TEST_DELETE"], e => {
          U({
            type: "SPEED_TEST_DELETE",
            streamKey: e.stream_key,
            unavailable: e.unavailable,
            reason: e.reason,
          });
        }),
        w(["LAST_MESSAGES"], e => {
          U({
            type: "MESSAGE_PREVIEWS_LOADED",
            guildId: e.guild_id,
            messages: e.messages,
          });
        }),
        w(["AUTHENTICATOR_UPDATE"], e => {
          U({ type: "AUTHENTICATOR_UPDATE", credential: e });
        }),
        w(["AUTHENTICATOR_CREATE"], e => {
          U({ type: "AUTHENTICATOR_CREATE", credential: e });
        }),
        w(["AUTHENTICATOR_DELETE"], e => {
          U({ type: "AUTHENTICATOR_DELETE", credential: e });
        }),
        w(["NOTIFICATION_SETTINGS_UPDATE"], e => {
          U({
            type: "NOTIFICATION_SETTINGS_UPDATE",
            settings: { flags: e.flags },
          });
        }),
        w(["GAME_INVITE_CREATE"], e => {
          U({ type: "GAME_INVITE_CREATE", gameInvite: e });
        }),
        w(["GAME_INVITE_DELETE"], e => {
          U({ type: "GAME_INVITE_DELETE", inviteId: e.invite_id });
        }),
        w(["GAME_INVITE_DELETE_MANY"], e => {
          U({ type: "GAME_INVITE_DELETE_MANY", inviteIds: e.invite_ids });
        }),
        w(["PREMIUM_MARKETING_PREVIEW"], e => {
          U({ type: "PREMIUM_MARKETING_PREVIEW", properties: e.properties });
        }),
        w(["USER_APPLICATION_UPDATE"], e => {
          U({
            type: "USER_APPLICATION_UPDATE",
            applicationId: e.application_id,
          });
        }),
        w(["USER_APPLICATION_REMOVE"], e => {
          U({
            type: "USER_APPLICATION_REMOVE",
            applicationId: e.application_id,
          });
        });
    },
    583702: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          StreamRTCAnalyticsContext: function () {
            return N;
          },
          default: function () {
            return s;
          },
        });
      var s,
        i = n("917351"),
        r = n.n(i),
        a = n("773364"),
        o = n("913144"),
        d = n("997722"),
        u = n("422791"),
        l = n("56947"),
        f = n("386045"),
        _ = n("808122"),
        c = n("845579"),
        g = n("271938"),
        m = n("42203"),
        h = n("985365"),
        v = n("945956"),
        E = n("590401"),
        p = n("278163"),
        y = n("599110"),
        T = n("104478"),
        C = n("374014"),
        S = n("933034"),
        I = n("196383"),
        A = n("49111"),
        D = n("353927");
      class N {
        setActionContext(e) {
          this.actionContext = e;
        }
        trackViewerCount(e) {
          this.maxViewers = Math.max(e, this.maxViewers);
        }
        constructor({
          streamRegion: e,
          streamApplication: t,
          streamSourceType: n,
          actionContext: s,
          numViewers: i,
          isBroadcast: r = !1,
        }) {
          (this.streamRegion = e),
            (this.streamApplication = t),
            (this.streamSourceType = n),
            (this.actionContext = s),
            (this.maxViewers = i),
            (this.isBroadcast = r);
        }
      }
      s = class extends d.default {
        get isOwner() {
          let { ownerId: e } = this._streamContext;
          return g.default.getId() === e;
        }
        destroy(e) {
          this._videoStreamStats.stop(),
            this._trackVideoEndStats(e),
            this._updateVideoStreamId.cancel(),
            this._updateVideoStreamId(null, null),
            this._updateVideoStreamId.flush(),
            super.destroy();
        }
        streamUpdate(e) {
          let t = this._videoQuality;
          null != t && (e ? t.pause() : t.resume());
        }
        layoutChange(e) {
          this._videoStreamStats.layoutChange(e);
        }
        getVideoStats() {
          let { ownerId: e } = this._streamContext,
            t = this._videoQuality;
          if (null != t) {
            var n;
            let {
              duration: s,
              avg_bitrate: i,
              avg_fps: r,
              avg_resolution: a,
            } = this.isOwner
              ? t.getOutboundStats()[0]
              : null !== (n = t.getInboundStats(e)) && void 0 !== n
                ? n
                : {};
            return {
              duration: s,
              avg_bitrate: i,
              avg_fps: r,
              avg_resolution: a,
            };
          }
          return null;
        }
        getRegion() {
          return this.analyticsContext.streamRegion;
        }
        getMaxViewers() {
          return this.analyticsContext.maxViewers;
        }
        _initializeEvents() {
          let e = !1;
          this.on(u.RTCConnectionEvent.State, (e, t, n) => {
            if (
              (o.default.wait(() =>
                o.default.dispatch({
                  type: "RTC_CONNECTION_STATE",
                  state: e,
                  ...t,
                  ...n,
                  streamKey: this._streamKey,
                })
              ),
              e === A.RTCConnectionStates.RTC_CONNECTED)
            ) {
              var s;
              null === (s = this._connection) ||
                void 0 === s ||
                s.on(
                  a.BaseConnectionEvent.ScreenshareFinish,
                  (e, t, n, s, i, r, a, o, d, u, l, f, _, c) => {
                    let g = this.getMediaSessionId(),
                      m = this.getRTCConnectionId(),
                      h = this.getGoLiveSource();
                    (0, p.getSystemAnalyticsInfo)().then(v => {
                      let E = null;
                      if (null != v) {
                        let {
                          cpu_brand: e,
                          cpu_vendor: t,
                          cpu_memory: n,
                          gpu_brand: s,
                          gpu_memory: i,
                        } = v;
                        E = {
                          cpu_brand: e,
                          cpu_vendor: t,
                          cpu_memory: n,
                          gpu_brand: s,
                          gpu_memory: i,
                        };
                      }
                      let p =
                        (null != e ? e : 0) +
                        (null != t ? t : 0) +
                        (null != n ? n : 0) +
                        (null != s ? s : 0) +
                        (null != i ? i : 0) +
                        (null != r ? r : 0) +
                        (null != o ? o : 0) +
                        (null != c ? c : 0) +
                        (null != _ ? _ : 0);
                      y.default.track(A.AnalyticEvents.SCREENSHARE_FINISHED, {
                        screenshare_frames: e,
                        videohook_frames: t,
                        hybrid_dxgi_frames: n,
                        hybrid_gdi_frames: s,
                        hybrid_videohook_frames: i,
                        hybrid_graphics_capture_frames: r,
                        hybrid_capture_method_switches: a,
                        quartz_frames: o,
                        screencapturekit_frames: c,
                        go_live_camera_frames: _,
                        total_frames: p,
                        desktop_capturer_type: d,
                        media_session_id: g,
                        rtc_connection_id: m,
                        context: D.MediaEngineContextTypes.STREAM,
                        screens: u,
                        windows: l,
                        activity: f,
                        ...E,
                        ...(0, S.default)(null == h ? void 0 : h.desktopSource),
                      });
                    });
                  }
                );
            }
          }),
            this.on(u.RTCConnectionEvent.Video, (t, n, s, i, r) => {
              let a = (0, C.decodeStreamKey)(this._streamKey);
              a.guildId === t &&
                a.channelId === n &&
                a.ownerId === s &&
                (null != this.getMediaSessionId() &&
                  !e &&
                  (this._trackVideoStartStats(), (e = !0)),
                this._updateVideoStreamId(i, r));
            }),
            this.on(
              u.RTCConnectionEvent.VideoSourceQualityChanged,
              (e, t, n, s, i, r) => {
                o.default.wait(() =>
                  o.default.dispatch({
                    type: "MEDIA_ENGINE_VIDEO_SOURCE_QUALITY_CHANGED",
                    guildId: e,
                    channelId: t,
                    senderUserId: n,
                    maxResolution: s,
                    maxFrameRate: i,
                    context: r,
                  })
                );
              }
            );
        }
        _getStreamAnalyticsProperties() {
          let {
              streamRegion: e,
              streamApplication: t,
              streamSourceType: n,
              actionContext: s,
              isBroadcast: i,
            } = this.analyticsContext,
            { ownerId: r, guildId: a } = this._streamContext,
            o = E.default.getRegion(v.default.getHostname()),
            d = c.BroadcastAutoBroadcast.getSetting();
          return {
            channel_id: this.channelId,
            rtc_connection_id: this.getRTCConnectionId(),
            media_session_id: this.getMediaSessionId(),
            parent_media_session_id: this.parentMediaSessionId,
            sender_user_id: r,
            context: D.MediaEngineContextTypes.STREAM,
            guild_id: a,
            stream_region: e,
            stream_source_type: n,
            guild_region: o,
            participant_type: this.isOwner ? "streamer" : "receiver",
            share_application_name: null != t ? t.name : null,
            share_application_id: null != t ? t.id : null,
            share_application_executable: null != t ? t.exe : null,
            video_layout: this._videoStreamStats.getLayout(),
            client_event_source: s,
            is_broadcast: i,
            auto_broadcast_enabled: this.isOwner ? d : null,
          };
        }
        _trackVideoStartStats() {
          let e = this.isOwner ? (0, I.default)() : null;
          y.default.track(A.AnalyticEvents.VIDEO_STREAM_STARTED, {
            ...this._getStreamAnalyticsProperties(),
            ...e,
            connection_type: h.default.getType(),
            effective_connection_speed: h.default.getEffectiveConnectionSpeed(),
            service_provider: h.default.getServiceProvider(),
          });
        }
        _trackVideoEndStats(e) {
          let t = m.default.getChannel(this.channelId),
            n = null != t ? t.type : null,
            { ownerId: s } = this._streamContext,
            i = null,
            r = null,
            a = null,
            o = this._videoQuality;
          null != o &&
            ((i = this.isOwner
              ? o.getOutboundStats()[0]
              : o.getInboundStats(s)),
            (r = o.getNetworkStats()),
            (a = this.isOwner
              ? o.getCodecUsageStats("streamer", this.userId)
              : o.getCodecUsageStats("receiver", s)));
          let d = (0, l.areClipsEnabled)(),
            u = f.default.getSettings(),
            c = this.isOwner
              ? {
                  clips_enabled: u.clipsEnabled && d,
                  clips_buffer_length: u.clipsLength,
                }
              : {},
            g = this.isOwner
              ? {
                  bandwidth_estimation_experiment:
                    this.getBandwidthEstimationExperiment(),
                }
              : {};
          y.default.track(A.AnalyticEvents.VIDEO_STREAM_ENDED, {
            ...i,
            ...a,
            ...r,
            ...this._videoStreamStats.getStats(),
            ...this._soundshareStats.getStats(),
            ...this._getStreamAnalyticsProperties(),
            ...c,
            ...g,
            channel_type: n,
            reason: e,
            max_viewers: this.analyticsContext.maxViewers,
            hostname: this.hostname,
            device_performance_class: this.isOwner
              ? (0, _.getMediaPerformanceClass)()
              : null,
          });
        }
        _getExtraConnectionOptions() {
          return {
            streamUserId: (0, C.decodeStreamKey)(this._streamKey).ownerId,
          };
        }
        constructor({
          sessionId: e,
          streamKey: t,
          serverId: n,
          initialLayout: s,
          analyticsContext: i,
          isStreamer: a,
          parentMediaSessionId: d,
        }) {
          let u = (0, C.decodeStreamKey)(t),
            { guildId: l, channelId: f } = u;
          super({
            userId: g.default.getId(),
            sessionId: e,
            guildId: l,
            channelId: f,
            context: D.MediaEngineContextTypes.STREAM,
            rtcServerId: n,
            parentMediaSessionId: d,
          }),
            (this._streamContext = u),
            (this._streamKey = t),
            (this._isStreamer = a),
            (this._videoStreamStats = new T.default(s, this.isOwner)),
            (this.analyticsContext = i),
            (this._updateVideoStreamId = r.debounce((e, t) => {
              let {
                guildId: n,
                channelId: s,
                ownerId: i,
              } = (0, C.decodeStreamKey)(this._streamKey);
              o.default.wait(() =>
                o.default.dispatch({
                  type: "RTC_CONNECTION_VIDEO",
                  guildId: n,
                  channelId: s,
                  userId: i,
                  streamId: e,
                  rtcServerId: t,
                  context: D.MediaEngineContextTypes.STREAM,
                })
              );
            }, 200)),
            this._videoStreamStats.start(),
            this._initializeEvents();
        }
      };
    },
    104478: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
      var s,
        i = n("398183"),
        r = n("862337"),
        a = n("268491"),
        o = n("49111");
      function d(e) {
        let t =
          arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
        return null != e ? Math.round(e) : t;
      }
      s = class {
        start() {
          let { resolution: e, fps: t } = a.default.getState();
          (this._targetResolution = e),
            (this._targetFPS = t),
            this._statInterval.start(1e3, this._sampleStats),
            (this._lastLayoutChanged = (0, i.now)());
        }
        stop() {
          this._statInterval.stop(),
            (this._streamEnd = (0, i.now)()),
            this._incrementLayout(
              this._lastLayout,
              (this._streamEnd - this._lastLayoutChanged) / 1e3
            );
        }
        layoutChange(e) {
          if (e === this._lastLayout || null != this._streamEnd) return;
          let t = (0, i.now)();
          this._incrementLayout(
            this._lastLayout,
            (t - this._lastLayoutChanged) / 1e3
          ),
            this._layoutChanges++,
            (this._lastLayout = e),
            (this._lastLayoutChanged = t);
        }
        getLayout() {
          return this._lastLayout;
        }
        getStats() {
          let e = {
            num_layout_changes: this._layoutChanges,
            duration_layout_fullscreen: d(
              this._layoutBuckets[o.StreamLayouts.FULL_SCREEN]
            ),
            duration_layout_theatre: d(
              this._layoutBuckets[o.StreamLayouts.THEATRE]
            ),
            duration_layout_pip: d(this._layoutBuckets[o.StreamLayouts.PIP]),
            duration_layout_popout: d(
              this._layoutBuckets[o.StreamLayouts.POPOUT]
            ),
            duration_layout_portrait: d(
              this._layoutBuckets[o.StreamLayouts.PORTRAIT]
            ),
            duration_layout_landscape: d(
              this._layoutBuckets[o.StreamLayouts.LANDSCAPE]
            ),
            duration_layout_minimized: d(
              this._layoutBuckets[o.StreamLayouts.MINIMIZED]
            ),
          };
          return this._isSender
            ? {
                ...e,
                target_fps: this._targetFPS,
                target_resolution_height: this._targetResolution,
                stream_settings_changed: this._streamSettingsChanged,
              }
            : e;
        }
        constructor(e, t) {
          (this._targetResolution = 0),
            (this._targetFPS = 0),
            (this._streamSettingsChanged = !1),
            (this._lastLayoutChanged = 0),
            (this._layoutChanges = 0),
            (this._incrementLayout = (e, t) => {
              null == this._layoutBuckets[e] && (this._layoutBuckets[e] = 0),
                (this._layoutBuckets[e] += t);
            }),
            (this._sampleStats = () => {
              let { resolution: e, fps: t } = a.default.getState();
              this._streamSettingsChanged =
                e !== this._targetResolution || t !== this._targetFPS;
            }),
            (this._isSender = t),
            (this._statInterval = new r.Interval()),
            (this._lastLayout = e),
            (this._layoutBuckets = {});
        }
      };
    },
    582415: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getStreamerActivity: function () {
            return r;
          },
          getStreamerApplication: function () {
            return a;
          },
        });
      var s = n("49111");
      function i(e) {
        return e.type === s.ActivityTypes.PLAYING;
      }
      function r(e, t) {
        var n;
        return null != e ? ((n = e.ownerId), t.findActivity(n, i)) : null;
      }
      function a(e, t) {
        if (null == e) return null;
        let n = r(e, t);
        return null == n ? null : { id: n.application_id, name: n.name };
      }
    },
    196383: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
      var s = n("939398").getDesktopSourceMetadata;
    },
    709463: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var s = n("144491");
      function i(e) {
        (0, s.transitionToChannel)(e.channelId);
      }
    },
    10853: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          isNotAutomodEmbed: function () {
            return i;
          },
        });
      var s = n("246111");
      let i = e => {
        let { type: t } = e;
        return (
          t !== s.MessageEmbedTypes.AUTO_MODERATION_MESSAGE &&
          t !== s.MessageEmbedTypes.AUTO_MODERATION_NOTIFICATION
        );
      };
    },
    677315: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useGuildHomeExperiment: function () {
            return _;
          },
          canSeeGuildHome: function () {
            return c;
          },
          GuildFeedRenderSelectorExperiment: function () {
            return g;
          },
          GuildFeedRefreshButtonExperiment: function () {
            return m;
          },
          GuildHomeBadgeExperiment: function () {
            return h;
          },
          GuildHomeFeedbackExperiment: function () {
            return v;
          },
          GuildHomeDeprecationExperiment: function () {
            return E;
          },
        });
      var s = n("446674"),
        i = n("203288"),
        r = n("862205"),
        a = n("21121"),
        o = n("934306"),
        d = n("923959"),
        u = n("305961"),
        l = n("49111");
      function f(e, t, n) {
        let s = t.getChannels(e)[d.GUILD_SELECTABLE_CHANNELS_KEY].filter(t => {
          let { channel: s } = t;
          return !n.isChannelGated(e, s.id);
        });
        return s.length > 5;
      }
      function _(e) {
        arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
        let t = (0, s.useStateFromStores)(
          [d.default, i.default],
          () => null != e && f(e.id, d.default, i.default)
        );
        return (
          !__OVERLAY__ &&
          !!t &&
          null != e &&
          e.hasFeature(l.GuildFeatures.GUILD_HOME_DEPRECATION_OVERRIDE)
        );
      }
      function c(e) {
        if (
          __OVERLAY__ ||
          e === l.ME ||
          e === l.FAVORITES ||
          ((0, a.isInMainTabsExperiment)() && !(0, o.isOnNewPanels)())
        )
          return !1;
        let t = u.default.getGuild(e);
        return (
          !!(null != t && f(e, d.default, i.default)) &&
          t.hasFeature(l.GuildFeatures.GUILD_HOME_DEPRECATION_OVERRIDE)
        );
      }
      let g = (0, r.createExperiment)({
          kind: "user",
          id: "2022-01_home_feed_toggle",
          label: "Show Guild Feed Sorting Selector",
          defaultConfig: { showSelector: !1 },
          treatments: [
            { id: 1, label: "Yes Selector", config: { showSelector: !0 } },
          ],
        }),
        m = (0, r.createExperiment)({
          kind: "user",
          id: "2022-06_home_refresh_button",
          label: "Show refresh button",
          defaultConfig: { showRefreshButton: !1 },
          treatments: [
            { id: 1, label: "Yes button", config: { showRefreshButton: !0 } },
          ],
        }),
        h = (0, r.createExperiment)({
          kind: "user",
          id: "2022-08_home_badge",
          label: "Show badge on home channel",
          defaultConfig: { showBadge: !1 },
          treatments: [
            { id: 1, label: "show badge", config: { showBadge: !0 } },
          ],
        });
      (0, r.createExperiment)({
        kind: "user",
        id: "2022-08_home_drawer_autoclose",
        label: "Auto close home drawer",
        defaultConfig: { autoCloseDrawer: !1, animation: !1, delay: null },
        treatments: [
          {
            id: 1,
            label: "normal animation",
            config: { autoCloseDrawer: !0, animation: !0, delay: null },
          },
          {
            id: 2,
            label: "no animate",
            config: { autoCloseDrawer: !0, animation: !1, delay: null },
          },
          {
            id: 3,
            label: "150 delayed animation",
            config: { autoCloseDrawer: !0, animation: !0, delay: 150 },
          },
          {
            id: 4,
            label: "250 delayed animation",
            config: { autoCloseDrawer: !0, animation: !0, delay: 250 },
          },
          {
            id: 5,
            label: "500 delayed animation",
            config: { autoCloseDrawer: !0, animation: !0, delay: 500 },
          },
        ],
      }),
        (0, r.createExperiment)({
          kind: "user",
          id: "2022-09_welcome_header",
          label: "Show welcome header for home",
          defaultConfig: { showWelcomeHeader: !1 },
          treatments: [
            {
              id: 1,
              label: "show welcome header",
              config: { showWelcomeHeader: !0 },
            },
          ],
        });
      let v = (0, r.createExperiment)({
          kind: "user",
          id: "2022-12_home_feedback_ux",
          label: "Show post feedback for home",
          defaultConfig: { showFeedback: !1 },
          treatments: [
            { id: 100, label: "show feedback", config: { showFeedback: !0 } },
          ],
        }),
        E = (0, r.createExperiment)({
          kind: "guild",
          id: "2023-03_home_deprecation",
          label: "Home Deprecation",
          defaultConfig: { showDeprecationNotice: !1 },
          treatments: [
            {
              id: 1,
              label: "Show notice",
              config: { showDeprecationNotice: !0 },
            },
          ],
        });
    },
    50926: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return v;
          },
        });
      var s = n("872717"),
        i = n("913144"),
        r = n("479756"),
        a = n("38654"),
        o = n("9294"),
        d = n("26989"),
        u = n("337543"),
        l = n("697218"),
        f = n("49111");
      let _ = async (e, t) => {
          let n = null != t ? t : u.default.getInviteKeyForGuildId(e),
            r = l.default.getCurrentUser(),
            a = !d.default.isMember(e, null == r ? void 0 : r.id);
          try {
            let t = await s.default.get({
              url: f.Endpoints.GUILD_MEMBER_VERIFICATION(e),
              query: {
                with_guild: a,
                invite_code:
                  null != n ? (0, o.parseInviteCodeFromInviteKey)(n) : void 0,
              },
              oldFormErrors: !0,
            });
            if (null == t.body) throw t;
            let { body: r } = t;
            return (
              i.default.dispatch({
                type: "MEMBER_VERIFICATION_FORM_UPDATE",
                guildId: e,
                form: {
                  version: r.version,
                  description: r.description,
                  formFields: r.form_fields,
                  guild: r.guild,
                },
              }),
              r
            );
          } catch (t) {
            i.default.dispatch({
              type: "MEMBER_VERIFICATION_FORM_FETCH_FAIL",
              guildId: e,
            });
          }
        },
        c = async (e, t) => {
          let n = await s.default.patch({
              url: f.Endpoints.GUILD_MEMBER_VERIFICATION(e),
              body: { form_fields: t },
              oldFormErrors: !0,
            }),
            { body: r } = n;
          i.default.dispatch({
            type: "MEMBER_VERIFICATION_FORM_UPDATE",
            guildId: e,
            form: {
              version: r.version,
              description: r.description,
              formFields: r.form_fields,
            },
          });
        },
        g = async (e, t) => {
          let n = await s.default.patch({
              url: f.Endpoints.GUILD_MEMBER_VERIFICATION(e),
              body: { description: t },
              oldFormErrors: !0,
            }),
            { body: r } = n;
          i.default.dispatch({
            type: "MEMBER_VERIFICATION_FORM_UPDATE",
            guildId: e,
            form: {
              version: r.version,
              description: r.description,
              formFields: r.form_fields,
            },
          });
        },
        m = async (e, t) => {
          await s.default.patch({
            url: f.Endpoints.GUILD_MEMBER_VERIFICATION(e),
            body: { enabled: t },
            oldFormErrors: !0,
          });
        },
        h = async (e, t) => {
          if (a.default.isFullServerPreview(e)) {
            (0, r.updateImpersonatedData)(e, {
              memberOptions: { isPending: !1 },
            });
            return;
          }
          try {
            let n = await s.default.put({
                url: f.Endpoints.GUILD_MEMBER_REQUEST_TO_JOIN(e),
                body: { version: t.version, form_fields: t.formFields },
              }),
              { body: r } = n;
            return (
              i.default.dispatch({
                type: "USER_GUILD_JOIN_REQUEST_UPDATE",
                guildId: e,
                request: r,
              }),
              r
            );
          } catch (e) {
            throw e;
          }
        };
      var v = {
        fetchVerificationForm: _,
        updateVerificationForm: c,
        updateVerificationFormDescription: g,
        enableVerificationForm: m,
        submitVerificationForm: h,
      };
    },
    394294: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          AUTOMATIC_APPROVAL_FORM_FIELDS: function () {
            return r;
          },
          MANUAL_APPROVAL_FORM_FIELDS: function () {
            return a;
          },
          MAX_FORM_ELEMENTS: function () {
            return o;
          },
          MAX_NUM_RULES: function () {
            return d;
          },
          MAX_RULE_LENGTH: function () {
            return u;
          },
          MAX_QUESTION_LENGTH: function () {
            return l;
          },
          MAX_NUM_CHOICES: function () {
            return f;
          },
          MAX_CHOICE_LENGTH: function () {
            return _;
          },
          MAX_TEXT_RESPONSE_LENGTH: function () {
            return c;
          },
          MAX_PARAGRAPH_RESPONSE_LENGTH: function () {
            return g;
          },
          MAX_DESCRIPTION_LENGTH: function () {
            return m;
          },
          MEMBER_VERIFICATION_TYPE: function () {
            return h;
          },
          IN_APP_MEMBER_VERIFICATION_MODAL_KEY: function () {
            return v;
          },
        }),
        n("222007");
      var s,
        i = n("567054");
      i.VerificationFormFieldTypes.VERIFICATION;
      let r = new Set([i.VerificationFormFieldTypes.TERMS]),
        a = new Set([
          i.VerificationFormFieldTypes.MULTIPLE_CHOICE,
          i.VerificationFormFieldTypes.TEXT_INPUT,
          i.VerificationFormFieldTypes.PARAGRAPH,
        ]),
        o = 5,
        d = 16,
        u = 300,
        l = 300,
        f = 8,
        _ = 150,
        c = 150,
        g = 1e3,
        m = 300,
        h = "Membership Gating",
        v = "in-app-member-verification";
      (s || (s = {})).VERIFICATION_INFO = "VERIFICATION_INFO";
    },
    526253: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          NO_MEMBER_VERIFICATION_FORM: function () {
            return d;
          },
          default: function () {
            return f;
          },
        });
      var s = n("917351"),
        i = n.n(s),
        r = n("446674"),
        a = n("913144"),
        o = n("567054");
      let d = { version: "", description: "", formFields: [] },
        u = {};
      class l extends r.default.Store {
        get(e) {
          if (null != e) return u[e];
        }
        getRulesPrompt(e) {
          var t;
          return i.find(
            null === (t = u[e]) || void 0 === t ? void 0 : t.formFields,
            o.isTermsFormField
          );
        }
      }
      l.displayName = "MemberVerificationFormStore";
      var f = new l(a.default, {
        INVITE_ACCEPT_SUCCESS: function (e) {
          let { invite: t } = e,
            { member_verification_form: n } = t,
            { guild: s } = t;
          if (null != s && null != n) {
            var i;
            return (
              (u[s.id] = {
                version: n.version,
                description:
                  null !== (i = n.description) && void 0 !== i ? i : "",
                formFields: n.form_fields,
                guild: s,
              }),
              !0
            );
          }
          return !1;
        },
        MEMBER_VERIFICATION_FORM_UPDATE: function (e) {
          let { form: t, guildId: n } = e;
          u[n] = null != t ? t : d;
        },
        MEMBER_VERIFICATION_FORM_FETCH_FAIL: function (e) {
          var t;
          let { guildId: n } = e;
          u[n] = null !== (t = u[n]) && void 0 !== t ? t : d;
        },
        GUILD_DELETE: function (e) {
          let { guild: t } = e;
          delete u[null == t ? void 0 : t.id];
        },
      });
    },
    520141: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useIsMemberVerificationManualApproval: function () {
            return r;
          },
          isMemberVerificationManualApproval: function () {
            return a;
          },
        });
      var s = n("862205");
      let i = (0, s.createExperiment)({
        kind: "guild",
        id: "2021-11_member_verification_manual_approval",
        label: "Member Verification Manual Approval",
        defaultConfig: { manualApprovalEnabled: !1 },
        treatments: [
          {
            id: 1,
            label: "Enable manual approval for membership verification",
            config: { manualApprovalEnabled: !0 },
          },
        ],
      });
      function r(e) {
        i.trackExposure({ guildId: e, location: "bda51f_1" });
        let t = i.useExperiment(
          { guildId: e, location: "bda51f_2" },
          { autoTrackExposure: !1 }
        );
        return t.manualApprovalEnabled;
      }
      function a(e) {
        let t = i.getCurrentConfig(
          { guildId: e, location: "bda51f_3" },
          { autoTrackExposure: !1 }
        );
        return t.manualApprovalEnabled;
      }
    },
    233322: function (e, t, n) {
      "use strict";
      let s;
      n.r(t),
        n.d(t, {
          openMemberVerificationModal: function () {
            return i;
          },
        }),
        (s = n("453265").default);
      let i = s.openMemberVerificationModal;
      s.closeMemberVerificationModal;
    },
    875229: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          canReviewGuildMemberApplications: function () {
            return _;
          },
          useCanReviewGuildMemberApplications: function () {
            return c;
          },
        });
      var s = n("884691"),
        i = n("446674"),
        r = n("305961"),
        a = n("957255"),
        o = n("50926"),
        d = n("526253"),
        u = n("520141"),
        l = n("567054"),
        f = n("49111");
      function _(e) {
        let t = r.default.getGuild(e);
        return (
          null != t &&
          (0, u.isMemberVerificationManualApproval)(e) &&
          a.default.can(f.Permissions.KICK_MEMBERS, t)
        );
      }
      function c(e) {
        let t = (0, u.useIsMemberVerificationManualApproval)(e),
          n = (0, i.useStateFromStores)([r.default], () =>
            r.default.getGuild(e)
          ),
          _ =
            null != n &&
            t &&
            a.default.can(f.Permissions.KICK_MEMBERS, n) &&
            n.hasVerificationGate(),
          c = (0, i.useStateFromStores)([d.default], () => d.default.get(e), [
            e,
          ]);
        s.useEffect(() => {
          _ && o.default.fetchVerificationForm(e);
        }, [_, e]);
        let g = s.useMemo(() => {
          var e;
          return (
            null !== (e = null == c ? void 0 : c.formFields) && void 0 !== e
              ? e
              : []
          ).some(e => !(0, l.isTermsFormField)(e));
        }, [null == c ? void 0 : c.formFields]);
        return _ && g;
      }
    },
    157186: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          shouldShowMembershipVerificationGate: function () {
            return d;
          },
          useShowMemberVerificationGate: function () {
            return u;
          },
        }),
        n("222007");
      var s = n("446674"),
        i = n("26989"),
        r = n("305961"),
        a = n("88093"),
        o = n("697218");
      function d(e) {
        let [t, n, s, d] =
          arguments.length > 1 && void 0 !== arguments[1]
            ? arguments[1]
            : [r.default, a.default, o.default, i.default];
        if (null == e) return !1;
        let u = t.getGuild(e),
          { notClaimed: l } = n.getCheck(e),
          f = s.getCurrentUser(),
          _ = !1;
        if (null != f) {
          var c, g;
          _ =
            null !==
              (g =
                null === (c = d.getMember(e, f.id)) || void 0 === c
                  ? void 0
                  : c.isPending) &&
            void 0 !== g &&
            g;
        }
        let m = _ || l;
        return m && !!(null == u ? void 0 : u.hasVerificationGate());
      }
      function u(e) {
        return (0, s.useStateFromStores)(
          [r.default, a.default, o.default, i.default],
          () => null != e && d(e, [r.default, a.default, o.default, i.default]),
          [e]
        );
      }
    },
    347977: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useMemberVerificationFormNoticeStore: function () {
            return o;
          },
          setHasUnsubmittedChanges: function () {
            return d;
          },
          setShowWarning: function () {
            return u;
          },
        });
      var s = n("308503"),
        i = n("659500"),
        r = n("49111");
      let a = Object.freeze({
          hasUnsubmittedChanges: !1,
          shouldShowWarning: !1,
        }),
        o = (0, s.default)(e => a),
        d = e => {
          o.setState({ hasUnsubmittedChanges: e });
        },
        u = e => {
          o.setState({ shouldShowWarning: e }),
            e &&
              i.ComponentDispatch.dispatch(r.ComponentActions.EMPHASIZE_NOTICE);
        };
    },
    453265: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        });
      var s = n("37983");
      n("884691");
      var i = n("551042"),
        r = n("599110"),
        a = n("50926"),
        o = n("347977"),
        d = n("394294"),
        u = n("49111");
      let l = () => {
          r.default.track(u.AnalyticEvents.MODAL_DISMISSED, {
            type: d.MEMBER_VERIFICATION_TYPE,
          });
        },
        f = e => {
          r.default.track(u.AnalyticEvents.OPEN_MODAL, {
            type: d.MEMBER_VERIFICATION_TYPE,
            guild_id: e,
          });
        };
      var _ = {
        openMemberVerificationModal(e, t) {
          f(e);
          let r = async t => {
            await a.default.submitVerificationForm(e, t);
          };
          (0, i.openModalLazy)(
            async () => {
              let { default: t } = await n.el("93184").then(n.bind(n, "93184"));
              return n =>
                (0, s.jsx)(t, {
                  ...n,
                  guildId: e,
                  onComplete: r,
                  onClose: function () {
                    let e =
                      arguments.length > 0 &&
                      void 0 !== arguments[0] &&
                      arguments[0];
                    if (!e) {
                      if (
                        o.useMemberVerificationFormNoticeStore.getState()
                          .hasUnsubmittedChanges
                      ) {
                        (0, o.setShowWarning)(!0);
                        return;
                      }
                      l();
                    }
                    n.onClose();
                  },
                });
            },
            {
              modalKey: d.IN_APP_MEMBER_VERIFICATION_MODAL_KEY,
              onCloseRequest: () => {
                l(),
                  o.useMemberVerificationFormNoticeStore.getState()
                    .hasUnsubmittedChanges
                    ? (0, o.setShowWarning)(!0)
                    : (0, i.closeModal)(d.IN_APP_MEMBER_VERIFICATION_MODAL_KEY);
              },
              onCloseCallback: t,
            }
          );
        },
        closeMemberVerificationModal() {
          let e =
            arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
          !e && l(), (0, i.closeModal)(d.IN_APP_MEMBER_VERIFICATION_MODAL_KEY);
        },
      };
    },
    466818: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          canAccessMemberSafetyPage: function () {
            return _;
          },
          useCanAccessMemberSafetyPage: function () {
            return g;
          },
          useCanAccessBulkBanningFeature: function () {
            return m;
          },
          useCanAccessInviteCodeFeature: function () {
            return h;
          },
          useCanBulkBanUser: function () {
            return v;
          },
          canBulkBanUser: function () {
            return E;
          },
        }),
        n("222007");
      var s = n("316693"),
        i = n("446674"),
        r = n("305961"),
        a = n("957255"),
        o = n("697218"),
        d = n("991170"),
        u = n("562980"),
        l = n("49111");
      let f = function (e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : [r.default, o.default],
            [n, s] = t,
            i = n.getGuild(e),
            a = s.getCurrentUser();
          return { user: a, guild: i };
        },
        _ = function (e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : [r.default, o.default],
            n = f(e, t);
          if (null == n) return !1;
          let i = s.default.hasAny(
            d.default.computePermissions({
              user: n.user,
              context: n.guild,
              checkElevated: !1,
            }),
            u.MemberSafetyPagePermissions
          );
          return i;
        },
        c = function (e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : [r.default, o.default],
            n = f(e, t);
          return (
            null != n &&
            a.default.can(l.Permissions.MANAGE_GUILD, n.guild) &&
            a.default.can(l.Permissions.BAN_MEMBERS, n.guild)
          );
        };
      function g(e) {
        let t = (0, i.useStateFromStores)(
          [r.default, o.default],
          () => _(e, [r.default, o.default]),
          [e]
        );
        return t;
      }
      function m(e) {
        let t = g(e),
          n = (0, i.useStateFromStores)(
            [r.default, o.default],
            () => c(e, [r.default, o.default]),
            [e]
          );
        return t && n;
      }
      function h(e) {
        return (0, i.useStateFromStores)(
          [r.default, a.default],
          () => {
            let t = r.default.getGuild(e);
            return null != t && a.default.can(l.Permissions.MANAGE_GUILD, t);
          },
          [e]
        );
      }
      function v(e, t, n) {
        return (0, i.useStateFromStores)(
          [a.default, r.default],
          () => {
            let s = r.default.getGuild(e);
            return (
              null != s &&
              t &&
              a.default.canManageUser(l.Permissions.BAN_MEMBERS, n, s)
            );
          },
          [t, e, n]
        );
      }
      function E(e, t, n) {
        let s = r.default.getGuild(e);
        return (
          null != s &&
          t &&
          a.default.canManageUser(l.Permissions.BAN_MEMBERS, n, s)
        );
      }
    },
    572679: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
      var s,
        i = n("307785"),
        r = n("49111");
      s = class {
        getCreateAttachmentURL(e) {
          return r.Endpoints.GUILD_PRODUCT_CREATE_ATTACHMENT_UPLOAD(e);
        }
        getDeleteUploadURL(e) {
          return r.Endpoints.MESSAGE_DELETE_UPLOAD(e);
        }
        getMaxFileSize(e) {
          return i.MAX_ATTACHMENT_UPLOAD_FILESIZE_BYTES;
        }
        getMaxAttachmentsCount() {
          return i.MAX_ATTACHMENT_UPLOAD_COUNT;
        }
        getMaxTotalAttachmentSize() {
          return i.MAX_ATTACHMENT_UPLOAD_TOTAL_FILESIZE_BYTES;
        }
        get shouldReactNativeCompressUploads() {
          return !1;
        }
      };
    },
    307785: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          GUILD_PRODUCT_EDIT_MODAL_KEY: function () {
            return s;
          },
          MAX_ATTACHMENT_UPLOAD_FILESIZE_BYTES: function () {
            return i;
          },
          MAX_ATTACHMENT_UPLOAD_TOTAL_FILESIZE_BYTES: function () {
            return r;
          },
          MAX_ATTACHMENT_UPLOAD_COUNT: function () {
            return a;
          },
          MAX_PUBLISHED_GUILD_PRODUCT_LISTINGS: function () {
            return o;
          },
        });
      let s = "guild-product-edit-modal",
        i = 1073741824,
        r = 1073741824,
        a = 10,
        o = 30;
    },
    287883: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useGuildEligibleForGuildProducts: function () {
            return i;
          },
          isGuildEligibleForGuildProducts: function () {
            return r;
          },
        });
      var s = n("60705");
      function i(e, t) {
        let { enabled: n } = s.GuildProductsExperiment.useExperiment({
          guildId: null != e ? e : "",
          location: t,
        });
        return n;
      }
      function r(e, t) {
        let { enabled: n } = s.GuildProductsExperiment.getCurrentConfig({
          guildId: null != e ? e : "",
          location: t,
        });
        return n;
      }
    },
    60705: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          GuildProductsExperiment: function () {
            return i;
          },
        });
      var s = n("862205");
      let i = (0, s.createExperiment)({
        kind: "guild",
        id: "2023-04_server_products",
        label: "Server Products",
        defaultConfig: { enabled: !1 },
        treatments: [
          {
            id: 1,
            label:
              "Enables Server Products (AKA one time purchases for creator guilds)",
            config: { enabled: !0 },
          },
        ],
      });
    },
    371358: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          fetchSubscriptionsSettings: function () {
            return _;
          },
          updateSubscriptionsSettings: function () {
            return c;
          },
          fetchAllSubscriptionListingsDataForGuild: function () {
            return g;
          },
          createSubscriptionGroupListing: function () {
            return m;
          },
          fetchSubscriptionListingForPlan: function () {
            return h;
          },
          deleteSubscriptionListing: function () {
            return v;
          },
          archiveSubscriptionListing: function () {
            return E;
          },
          updateSubscriptionTrial: function () {
            return p;
          },
          createSubscriptionListing: function () {
            return T;
          },
          updateSubscriptionListing: function () {
            return C;
          },
          fetchMonetizationRestrictions: function () {
            return S;
          },
        }),
        n("222007");
      var s = n("398183"),
        i = n("913144"),
        r = n("850068"),
        a = n("775433"),
        o = n("716241"),
        d = n("599110"),
        u = n("718517"),
        l = n("719726"),
        f = n("49111");
      async function _(e) {
        let t = await l.getGuildRoleSubscriptionsSettings(e);
        i.default.dispatch({
          type: "GUILD_ROLE_SUBSCRIPTIONS_UPDATE_SUBSCRIPTIONS_SETTINGS",
          settings: t,
        });
      }
      async function c(e, t) {
        let n = await l.updateGuildRoleSubscriptionsSettings(e, t);
        i.default.dispatch({
          type: "GUILD_ROLE_SUBSCRIPTIONS_UPDATE_SUBSCRIPTIONS_SETTINGS",
          settings: n,
        });
      }
      async function g(e) {
        let { includeSoftDeleted: t = !0, countryCode: n } =
          arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
        i.default.dispatch({
          type: "GUILD_ROLE_SUBSCRIPTIONS_FETCH_LISTINGS",
          guildId: e,
        });
        try {
          let [s, a, o] = await Promise.all([
            l.getGuildRoleSubscriptionGroupListingsForGuild(e, {
              includeSoftDeleted: t,
              countryCode: n,
            }),
            l.getGuildRoleSubscriptionsSettings(e),
            l.getGuildRoleSubscriptionTrials(e),
            (0, r.fetchSubscriptions)(),
          ]);
          i.default.dispatch({
            type: "GUILD_ROLE_SUBSCRIPTIONS_FETCH_LISTINGS_SUCCESS",
            guildId: e,
            groupListings: s,
            settings: a,
            subscriptionTrials: o,
          });
        } catch (t) {
          i.default.dispatch({
            type: "GUILD_ROLE_SUBSCRIPTIONS_FETCH_LISTINGS_FAILURE",
            guildId: e,
          });
        }
      }
      async function m(e, t) {
        let n = await l.createGuildRoleSubscriptionGroupListing(e, t);
        return (
          i.default.dispatch({
            type: "GUILD_ROLE_SUBSCRIPTIONS_UPDATE_GROUP_LISTING",
            listing: n,
          }),
          n
        );
      }
      async function h(e) {
        var t;
        i.default.dispatch({
          type: "GUILD_ROLE_SUBSCRIPTIONS_FETCH_LISTING_FOR_PLAN",
          planId: e,
        });
        let n = await l.getGuildRoleSubscriptionGroupForSubscriptionPlan(e);
        i.default.dispatch({
          type: "GUILD_ROLE_SUBSCRIPTIONS_FETCH_LISTING_FOR_PLAN_SUCCESS",
          groupListing: n,
        });
        let s = null !== (t = n.subscription_listings) && void 0 !== t ? t : [];
        for (let t of s)
          t.subscription_plans[0].id === e &&
            (await a.fetchSubscriptionPlansForSKU(t.id, void 0, void 0, !0));
      }
      async function v(e, t, n) {
        await l.deleteGuildRoleSubscriptionListing(e, t, n),
          i.default.dispatch({
            type: "GUILD_ROLE_SUBSCRIPTIONS_DELETE_LISTING",
            listingId: n,
          });
      }
      async function E(e, t, n) {
        let s = await l.archiveGuildRoleSubscriptionListing(e, t, n);
        i.default.dispatch({
          type: "GUILD_ROLE_SUBSCRIPTIONS_UPDATE_LISTING",
          listing: s,
        });
      }
      async function p(e, t, n) {
        let s = await l.updateGuildRoleSubscriptionsTrial(e, t, n);
        i.default.dispatch({
          type: "GUILD_ROLE_SUBSCRIPTIONS_UPDATE_SUBSCRIPTION_TRIAL",
          subscriptionTrial: s,
        });
      }
      async function y(e, t) {
        let n =
            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
          s = await l.getGuildRoleSubscriptionGroupListing(e, t, n);
        return (
          i.default.dispatch({
            type: "GUILD_ROLE_SUBSCRIPTIONS_UPDATE_GROUP_LISTING",
            listing: s,
          }),
          s
        );
      }
      async function T(e) {
        let {
            guildId: t,
            groupListingId: n,
            data: s,
            analyticsContext: r,
            onBeforeDispatchNewListing: a,
          } = e,
          u = await l.createGuildRoleSubscriptionListing(t, n, s);
        return (
          d.default.track(f.AnalyticEvents.ROLE_SUBSCRIPTION_LISTING_CREATED, {
            role_subscription_listing_id: u.id,
            role_subscription_group_listing_id: n,
            template_name: r.templateCategory,
            has_change_from_template: r.hasChangeFromTemplate,
            ...(0, o.collectGuildAnalyticsMetadata)(t),
          }),
          await y(t, n, { includeArchivedListings: !0 }),
          null == a || a(u),
          i.default.dispatch({
            type: "GUILD_ROLE_SUBSCRIPTIONS_UPDATE_LISTING",
            listing: u,
          }),
          u
        );
      }
      async function C(e) {
        let { guildId: t, listingId: n, groupListingId: s, data: r } = e,
          a = await l.updateGuildRoleSubscriptionListing(t, s, n, r);
        return (
          i.default.dispatch({
            type: "GUILD_ROLE_SUBSCRIPTIONS_UPDATE_LISTING",
            listing: a,
          }),
          await y(t, s, { includeArchivedListings: !0 }),
          a
        );
      }
      async function S(e) {
        let { signal: t } =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
          n = !1;
        for (let r = 0; r < 3; r++)
          try {
            if (null == t ? void 0 : t.aborted) {
              i.default.dispatch({
                type: "GUILD_ROLE_SUBSCRIPTIONS_FETCH_RESTRICTIONS_ABORTED",
                guildId: e,
              });
              return;
            }
            i.default.dispatch({
              type: "GUILD_ROLE_SUBSCRIPTIONS_FETCH_RESTRICTIONS",
              guildId: e,
            });
            let { restrictions: s } = await l.getGuildMonetizationRestrictions(
              e,
              { signal: t }
            );
            i.default.dispatch({
              type: "GUILD_ROLE_SUBSCRIPTIONS_FETCH_RESTRICTIONS_SUCCESS",
              guildId: e,
              restrictions: null != s ? s : [],
            }),
              (n = !0);
            break;
          } catch (e) {
            await (0, s.sleep)((r + 1) * u.default.Millis.SECOND);
          }
        !n &&
          i.default.dispatch({
            type: "GUILD_ROLE_SUBSCRIPTIONS_FETCH_RESTRICTIONS_FAILURE",
            guildId: e,
          });
      }
    },
    719726: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          createGuildRoleSubscriptionGroupListing: function () {
            return o;
          },
          createGuildRoleSubscriptionListing: function () {
            return d;
          },
          updateGuildRoleSubscriptionListing: function () {
            return u;
          },
          getGuildRoleSubscriptionGroupListingsForGuild: function () {
            return l;
          },
          getGuildRoleSubscriptionsSettings: function () {
            return f;
          },
          updateGuildRoleSubscriptionsSettings: function () {
            return _;
          },
          getPriceTiers: function () {
            return c;
          },
          getGuildRoleSubscriptionGroupListing: function () {
            return g;
          },
          getGuildRoleSubscriptionGroupForSubscriptionPlan: function () {
            return m;
          },
          deleteGuildRoleSubscriptionListing: function () {
            return h;
          },
          archiveGuildRoleSubscriptionListing: function () {
            return v;
          },
          getGuildRoleSubscriptionTrials: function () {
            return E;
          },
          updateGuildRoleSubscriptionsTrial: function () {
            return p;
          },
          getGuildRoleSubscriptionTrialEligibility: function () {
            return y;
          },
          getGuildMonetizationRestrictions: function () {
            return T;
          },
          fetchHighlightedCreatorGuildDetails: function () {
            return C;
          },
        });
      var s = n("872717"),
        i = n("448993"),
        r = n("49111"),
        a = n("843455");
      let o = async (e, t) => {
          try {
            let n = await s.default.post({
              url: r.Endpoints.GUILD_ROLE_SUBSCRIPTION_GROUP_LISTINGS(e),
              body: t,
            });
            return n.body;
          } catch (e) {
            throw new i.APIError(e);
          }
        },
        d = async (e, t, n) => {
          let { priceTier: a, ...o } = n;
          try {
            let n = await s.default.post({
              url: r.Endpoints.GUILD_ROLE_SUBSCRIPTION_LISTINGS(e, t),
              body: { ...o, price_tier: a },
            });
            return n.body;
          } catch (e) {
            throw new i.APIError(e);
          }
        },
        u = async (e, t, n, a) => {
          let { priceTier: o, ...d } = a;
          try {
            let i = await s.default.patch({
              url: r.Endpoints.GUILD_ROLE_SUBSCRIPTION_LISTINGS(e, t, n),
              body: { ...d, price_tier: o },
            });
            return i.body;
          } catch (e) {
            throw new i.APIError(e);
          }
        },
        l = async function (e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : { includeSoftDeleted: !1 },
            n = {
              include_soft_deleted: t.includeSoftDeleted,
              country_code: t.countryCode,
            };
          try {
            let t = await s.default.get({
              url: r.Endpoints.GUILD_ROLE_SUBSCRIPTION_GROUP_LISTINGS(e),
              query: n,
            });
            return t.body;
          } catch (e) {
            throw new i.APIError(e);
          }
        },
        f = async e => {
          let t = await s.default.get({
            url: r.Endpoints.GUILD_ROLE_SUBSCRIPTIONS_SETTINGS(e),
          });
          return t.body;
        },
        _ = async (e, t) => {
          try {
            let n = await s.default.patch({
              url: r.Endpoints.GUILD_ROLE_SUBSCRIPTIONS_SETTINGS(e),
              body: t,
            });
            return n.body;
          } catch (e) {
            throw new i.APIError(e);
          }
        },
        c = async e => {
          try {
            let t = await s.default.get({
              url: r.Endpoints.PRICE_TIERS,
              query: {
                price_tier_type: a.PriceTierTypes.GUILD_ROLE_SUBSCRIPTIONS,
                guild_id: e,
              },
            });
            return t.body;
          } catch (e) {
            throw new i.APIError(e);
          }
        },
        g = async function (e, t) {
          let n =
            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
          try {
            let i = await s.default.get({
              url: r.Endpoints.GUILD_ROLE_SUBSCRIPTION_GROUP_LISTINGS(e, t),
              query: {
                include_draft_listings: n.includeDraftListings,
                include_archived_listings: n.includeArchivedListings,
              },
            });
            return i.body;
          } catch (e) {
            throw new i.APIError(e);
          }
        },
        m = async e => {
          try {
            let t = await s.default.get({
              url: r.Endpoints.SUBSCRIPTION_PLAN_GUILD_ROLE_GROUP_LISTING(e),
            });
            return t.body;
          } catch (e) {
            throw new i.APIError(e);
          }
        },
        h = async (e, t, n) => {
          try {
            await s.default.delete({
              url: r.Endpoints.GUILD_ROLE_SUBSCRIPTION_LISTINGS(e, t, n),
            });
          } catch (e) {
            throw new i.APIError(e);
          }
        },
        v = async (e, t, n) => {
          try {
            let i = await s.default.post({
              url: r.Endpoints.GUILD_ROLE_SUBSCRIPTION_GROUP_LISTING_ARCHIVE(
                e,
                t,
                n
              ),
            });
            return i.body;
          } catch (e) {
            throw new i.APIError(e);
          }
        },
        E = async e => {
          try {
            let t = await s.default.get({
              url: r.Endpoints.GUILD_ROLE_SUBSCRIPTION_TRIALS(e),
            });
            return t.body;
          } catch (e) {
            throw new i.APIError(e);
          }
        },
        p = async (e, t, n) => {
          try {
            let i = await s.default.patch({
              url: r.Endpoints.GUILD_ROLE_SUBSCRIPTION_LISTING_TRIAL(e, t),
              body: n,
            });
            return i.body;
          } catch (e) {
            throw new i.APIError(e);
          }
        },
        y = async (e, t, n) => {
          try {
            let i = await s.default.get({
              url: r.Endpoints.GUILD_ROLE_SUBSCRIPTION_TRIAL_ELIGIBILITY(
                e,
                t,
                n
              ),
            });
            return i.body;
          } catch (e) {
            throw new i.APIError(e);
          }
        },
        T = async function (e) {
          let { signal: t } =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          try {
            let n = await s.default.get({
              url: r.Endpoints.CREATOR_MONETIZATION_RESTRICTIONS(e),
              signal: t,
            });
            return n.body;
          } catch (e) {
            throw new i.APIError(e);
          }
        },
        C = async e => {
          try {
            var t;
            let n = await s.default.get({
              url: r.Endpoints.GUILD_DISCOVERY_SLUG(e),
            });
            return null !== (t = n.body) && void 0 !== t
              ? t
              : JSON.parse(n.text);
          } catch (e) {
            throw new i.APIError(e);
          }
        };
    },
    153043: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          isRoleSubscriptionEmoji: function () {
            return i;
          },
          isPurchasableRoleSubscriptionEmoji: function () {
            return r;
          },
          isUnusableRoleSubscriptionEmoji: function () {
            return a;
          },
        });
      var s = n("256941");
      function i(e, t) {
        if (
          (null == e ? void 0 : e.roles) == null ||
          0 === e.roles.length ||
          null == t
        )
          return !1;
        let n = s.default.getSubscriptionRoles(t);
        return e.roles.some(e => n.has(e));
      }
      function r(e) {
        if (
          (null == e ? void 0 : e.roles) == null ||
          0 === e.roles.length ||
          null == e.guildId
        )
          return !1;
        let t = s.default.getPurchasableSubscriptionRoles(e.guildId);
        return e.roles.some(e => t.has(e));
      }
      function a(e, t) {
        if (
          (null == e ? void 0 : e.roles) == null ||
          0 === e.roles.length ||
          null == e.guildId
        )
          return !1;
        if (r(e)) {
          let n = s.default.getUserSubscriptionRoles(e.guildId),
            i = e.roles.some(e => n.has(e)),
            r = t === e.guildId,
            a = r && s.default.getUserIsAdmin(e.guildId);
          if (!(i || a)) return !0;
        }
        return !1;
      }
    },
    256941: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return C;
          },
        }),
        n("222007");
      var s = n("316693"),
        i = n("446674"),
        r = n("913144"),
        a = n("26989"),
        o = n("305961"),
        d = n("697218"),
        u = n("828674"),
        l = n("49111");
      let f = new Set(),
        _ = new Map(),
        c = new Map(),
        g = new Map(),
        m = new Map(),
        h = null;
      function v(e) {
        let t = d.default.getCurrentUser(),
          n = o.default.getGuild(e);
        if (null == n || null == t) return !1;
        let i = new Set(),
          r = new Set(),
          f = new Set();
        if (
          (m.set(e, n.isOwner(t)),
          n.hasFeature(l.GuildFeatures.ROLE_SUBSCRIPTIONS_ENABLED))
        ) {
          var h, v;
          let o = a.default.getMember(e, t.id),
            d = new Set(
              null !== (h = null == o ? void 0 : o.roles) && void 0 !== h
                ? h
                : []
            );
          for (let t in n.roles) {
            let a = n.roles[t];
            if (
              ((0, u.isSubscriptionRole)(a) &&
                (i.add(t),
                (0, u.isSubscriptionRoleAvailableForPurchase)(a) &&
                  (r.add(t), d.has(t) && f.add(t))),
              d.has(t) &&
                ((v = a),
                s.default.has(v.permissions, l.Permissions.ADMINISTRATOR)))
            )
              m.set(e, !0);
          }
        }
        return _.set(e, i), g.set(e, f), c.set(e, r), !0;
      }
      function E() {
        _.clear(), g.clear(), c.clear(), m.clear(), (h = null);
      }
      function p(e) {
        let {
          guild: { id: t },
        } = e;
        if (null == h) return !1;
        let n = o.default.getGuild(t);
        if (null == n) return !1;
        let s = n.hasFeature(
          l.GuildFeatures.ROLE_SUBSCRIPTIONS_AVAILABLE_FOR_PURCHASE
        );
        if (s && !h.has(t)) {
          let e = new Set(h);
          return e.add(t), (h = e), !0;
        }
        if (!s && h.has(t)) {
          let e = new Set(h);
          return e.delete(t), (h = e), !0;
        }
        return !1;
      }
      function y(e) {
        let { guildId: t } = e;
        return !!_.has(t) && v(t);
      }
      class T extends i.default.Store {
        initialize() {
          this.waitFor(o.default);
        }
        getGuildIdsWithPurchasableRoles() {
          return null == h
            ? (function () {
                let e = o.default.getGuilds(),
                  t = new Set();
                for (let n in e)
                  e[n].hasFeature(
                    l.GuildFeatures.ROLE_SUBSCRIPTIONS_AVAILABLE_FOR_PURCHASE
                  ) && t.add(n);
                return (h = t), t;
              })()
            : h;
        }
        buildRoles(e) {
          !_.has(e) && v(e);
        }
        getSubscriptionRoles(e) {
          var t;
          return (
            this.buildRoles(e), null !== (t = _.get(e)) && void 0 !== t ? t : f
          );
        }
        getPurchasableSubscriptionRoles(e) {
          var t;
          return (
            this.buildRoles(e), null !== (t = c.get(e)) && void 0 !== t ? t : f
          );
        }
        getUserSubscriptionRoles(e) {
          var t;
          return (
            this.buildRoles(e), null !== (t = g.get(e)) && void 0 !== t ? t : f
          );
        }
        getUserIsAdmin(e) {
          var t;
          return (
            this.buildRoles(e), null !== (t = m.get(e)) && void 0 !== t && t
          );
        }
      }
      T.displayName = "SubscriptionRoleStore";
      var C = new T(r.default, {
        CONNECTION_OPEN: E,
        LOGOUT: E,
        GUILD_CREATE: p,
        GUILD_DELETE: function (e) {
          let {
            guild: { id: t },
          } = e;
          if ((null == h ? void 0 : h.has(t)) !== !0) return !1;
          let n = new Set(h);
          n.delete(t), (h = n);
        },
        GUILD_UPDATE: p,
        GUILD_ROLE_CREATE: y,
        GUILD_ROLE_UPDATE: y,
        GUILD_ROLE_DELETE: y,
        GUILD_MEMBER_UPDATE: function (e) {
          let { guildId: t, user: n } = e,
            s = d.default.getCurrentUser();
          return !!(n.id === (null == s ? void 0 : s.id) && _.has(t)) && v(t);
        },
      });
    },
    505985: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          canUseRoleSubscriptionIAP: function () {
            return d;
          },
        }),
        n("884691"),
        n("65597");
      var s = n("305961"),
        i = n("773336"),
        r = n("954224"),
        a = n("49111");
      let o = [a.GuildFeatures.ROLE_SUBSCRIPTIONS_AVAILABLE_FOR_PURCHASE];
      function d(e) {
        if (!(0, i.isIOS)()) return !1;
        let t = (0, r.getSystemVersion)();
        if (
          null == t ||
          -1 ===
            (function (e, t) {
              let n = e.split(".").map(Number),
                s = t.split(".").map(Number),
                i = Math.max(n.length, s.length);
              for (let e = 0; e < i; e++) {
                var r, a;
                let t = null !== (r = n[e]) && void 0 !== r ? r : 0,
                  i = null !== (a = s[e]) && void 0 !== a ? a : 0;
                if (t < i) return -1;
                if (t > i) return 1;
              }
              return 0;
            })(t, "13.2")
        )
          return !1;
        let n = s.default.getGuild(e);
        if (null == n) return !1;
        let a = o.every(e => n.hasFeature(e));
        return !!a || !1;
      }
    },
    954224: function (e, t, n) {
      "use strict";
      function s() {
        return null;
      }
      n.r(t),
        n.d(t, {
          getSystemVersion: function () {
            return s;
          },
        });
    },
    638779: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          computeHasRoleSubscriptionsInGuild: function () {
            return d;
          },
          default: function () {
            return u;
          },
        }),
        n("222007");
      var s = n("446674"),
        i = n("271938"),
        r = n("26989"),
        a = n("305961"),
        o = n("49111");
      function d(e) {
        let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : null == e
                ? null
                : r.default.getMember(e, i.default.getId()),
          [n] =
            arguments.length > 2 && void 0 !== arguments[2]
              ? arguments[2]
              : [a.default],
          s = n.getGuild(e);
        if (
          null == s ||
          null == t ||
          !s.hasFeature(o.GuildFeatures.ROLE_SUBSCRIPTIONS_ENABLED)
        )
          return !1;
        for (let e of t.roles) {
          var d;
          let t = s.getRole(e);
          if (
            (null == t
              ? void 0
              : null === (d = t.tags) || void 0 === d
                ? void 0
                : d.subscription_listing_id) != null
          )
            return !0;
        }
        return !1;
      }
      function u(e) {
        let t = (0, s.useStateFromStores)([i.default, r.default], () =>
          null == e ? null : r.default.getMember(e, i.default.getId())
        );
        return (0, s.useStateFromStores)(
          [a.default],
          () => d(e, t, [a.default]),
          [e, t]
        );
      }
    },
    903724: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          areRoleSubscriptionsVisibleInGuild: function () {
            return _;
          },
          useRoleSubscriptionsVisibleInGuild: function () {
            return c;
          },
          useShowRoleSubscriptionsInChannelList: function () {
            return g;
          },
        }),
        n("222007");
      var s = n("446674"),
        i = n("551254"),
        r = n("250666"),
        a = n("465869"),
        o = n("38654"),
        d = n("305961"),
        u = n("638779"),
        l = n("49111");
      function f(e) {
        let [t, n] =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : [d.default, o.default],
          s = t.getGuild(e);
        if (null == s) return !1;
        let i = (0, r.isCreatorMonetizationEnabledGuild)(s),
          a = s.hasFeature(
            l.GuildFeatures.ROLE_SUBSCRIPTIONS_AVAILABLE_FOR_PURCHASE
          );
        if (i && a) return !0;
        let u = n.isViewingServerShop(e);
        return !!u || !1;
      }
      function _(e) {
        return !!f(e) || (0, u.computeHasRoleSubscriptionsInGuild)(e);
      }
      function c(e) {
        let t = (0, u.default)(e),
          n = (0, s.useStateFromStores)(
            [d.default, o.default],
            () => f(e, [d.default, o.default]),
            [e]
          ),
          { shouldHideGuildPurchaseEntryPoints: i } = (0,
          a.useShouldHideGuildPurchaseEntryPoints)(e);
        return !i && (n || t);
      }
      function g(e) {
        let t = c(e),
          n = (0, i.useIsEligibleForSubscriptionsInGuildShop)(
            e,
            "useShowRoleSubscriptionsInChannelList"
          );
        return t && !n;
      }
    },
    374021: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          openGuildEventDetails: function () {
            return d;
          },
          transitionToEventDetailsFromInvite: function () {
            return u;
          },
          openEndEventModal: function () {
            return l;
          },
        });
      var s = n("37983");
      n("884691");
      var i = n("551042"),
        r = n("851387"),
        a = n("49111"),
        o = n("625611");
      function d(e) {
        let { eventId: t, parentGuildId: r, recurrenceId: a } = e;
        (0, i.openModalLazy)(async () => {
          let { default: e } = await n.el("833843").then(n.bind(n, "833843"));
          return n =>
            (0, s.jsx)(e, {
              guildScheduledEventId: t,
              parentGuildId: r,
              initialRecurrenceId: a,
              ...n,
            });
        });
      }
      async function u(e, t) {
        let { guild_id: n } = e;
        await r.default.transitionToGuildSync(n, t),
          d({ eventId: e.id, event: e });
      }
      function l(e, t) {
        (0, i.openModalLazy)(
          async () => {
            let { default: t } = await n.el("203811").then(n.bind(n, "203811"));
            return n => (0, s.jsx)(t, { ...n, channel: e });
          },
          {
            contextKey:
              t === a.AppContext.POPOUT
                ? o.POPOUT_MODAL_CONTEXT
                : o.DEFAULT_MODAL_CONTEXT,
          }
        );
      }
    },
    892692: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          commandName: function () {
            return i;
          },
          toPermissionKey: function () {
            return r;
          },
          keyPermissions: function () {
            return a;
          },
        }),
        n("222007");
      var s = n("798609");
      function i(e, t) {
        return e === s.ApplicationCommandType.CHAT ? "/" + t : t;
      }
      function r(e, t) {
        return "".concat(e, ":").concat(t);
      }
      function a(e) {
        return Object.fromEntries(e.map(e => [r(e.id, e.type), e]));
      }
      n("524768");
    },
    468560: function (e, t, n) {
      "use strict";
      function s(e, t) {
        var n;
        let s =
          null == t
            ? void 0
            : null === (n = t.replace(/-/g, "_")) || void 0 === n
              ? void 0
              : n.toUpperCase();
        if (null != s && s in e) return e[s];
      }
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        }),
        n("781738");
    },
    32346: function (e, t, n) {
      "use strict";
      let s, i;
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        }),
        n("222007");
      var r = n("917351"),
        a = n.n(r),
        o = n("446674"),
        d = n("913144"),
        u = n("49111");
      let l = f();
      function f() {
        return { recentCustomStatuses: [], currentDefaultStatus: null };
      }
      class _ extends o.default.PersistedStore {
        initialize(e) {
          l = { ...f(), ...(null != e ? e : {}) };
        }
        getState() {
          return l;
        }
        getCurrentHangStatus() {
          return s;
        }
        getCustomHangStatus() {
          return i;
        }
        getRecentCustomStatuses() {
          return l.recentCustomStatuses;
        }
        getCurrentDefaultStatus() {
          return l.currentDefaultStatus;
        }
        getHangStatusActivity() {
          return null == s
            ? null
            : {
                type: u.ActivityTypes.HANG_STATUS,
                name: "Hang Status",
                state: s,
                details: null == i ? void 0 : i.status,
                emoji: null == i ? void 0 : i.emoji,
              };
        }
      }
      (_.displayName = "HangStatusStore"), (_.persistKey = "HangStatusStore");
      var c = new _(d.default, {
        LOGOUT: function () {
          l = f();
        },
        UPDATE_HANG_STATUS: function (e) {
          let { status: t, saveAsDefault: n } = e;
          (s = t),
            (i = null),
            n &&
              (l.currentDefaultStatus = {
                status: t,
                customHangStatus: i,
                expiresAt: Date.now() + 288e5,
              });
        },
        UPDATE_HANG_STATUS_CUSTOM: function (e) {
          let { status: t, emoji: n, saveAsDefault: r } = e;
          (s = u.HangStatusTypes.CUSTOM), (i = { status: t, emoji: n });
          let o = [...l.recentCustomStatuses],
            d = o.findIndex(e => e.status === t && a.isEqual(e.emoji, n));
          -1 !== d ? o.splice(d, 1) : 7 === o.length && o.splice(6, 1),
            (l.recentCustomStatuses = [i, ...o]),
            r &&
              (l.currentDefaultStatus = {
                status: s,
                customHangStatus: i,
                expiresAt: Date.now() + 288e5,
              });
        },
        CLEAR_HANG_STATUS: function (e) {
          let { saveAsDefault: t } = e;
          (s = null),
            (i = null),
            t &&
              (l.currentDefaultStatus = {
                status: null,
                customHangStatus: null,
                expiresAt: Date.now() + 288e5,
              });
        },
      });
    },
    924492: function (e, t, n) {
      "use strict";
      n.r(t), n("913144");
    },
    533613: function (e, t, n) {
      "use strict";
      var s, i;
      n.r(t),
        n.d(t, {
          HotspotLocations: function () {
            return s;
          },
        }),
        ((i = s || (s = {})).REPORT_PROBLEM_POST_STREAM =
          "REPORT_PROBLEM_POST_STREAM"),
        (i.VIDEO_BACKGROUND_FEEDBACK = "VIDEO_BACKGROUND_FEEDBACK"),
        (i.VOICE_CALL_FEEDBACK = "VOICE_CALL_FEEDBACK"),
        (i.GUILD_ANALYTICS_GUILD_SETTINGS_MENU =
          "GUILD_ANALYTICS_GUILD_SETTINGS_MENU"),
        (i.NOW_PLAYING_CONSENT_CARD = "NOW_PLAYING_CONSENT_CARD"),
        (i.IOS_GUILD_NAV_EDUCATION = "IOS_GUILD_NAV_EDUCATION"),
        (i.VOICE_PANEL_INTRODUCTION = "VOICE_PANEL_INTRODUCTION"),
        (i.GUILD_SETTINGS_COMMUNITY_GUILD_UPSELL =
          "GUILD_SETTINGS_COMMUNITY_GUILD_UPSELL"),
        (i.FAVORITE_EMOJI_TOOLTIP = "FAVORITE_EMOJI_TOOLTIP"),
        (i.POST_ACTIVITY_FEEDBACK = "POST_ACTIVITY_FEEDBACK"),
        (i.GUILD_DELETE_FEEDBACK = "GUILD_DELETE_FEEDBACK"),
        (i.GUILD_LEAVE_FEEDBACK = "GUILD_LEAVE_FEEDBACK"),
        (i.APPLICATION_COMMAND_TOOLTIP = "APPLICATION_COMMAND_TOOLTIP"),
        (i.GUILD_CAP_INLINE_UPSELL = "GUILD_CAP_INLINE_UPSELL"),
        (i.STAGE_CHANNEL_UPSELL = "STAGE_CHANNEL_UPSELL"),
        (i.HUB_WAITLIST_UPSELL = "HUB_WAITLIST_UPSELL"),
        (i.HUB_NEW = "HUB_NEW"),
        (i.HUB_SECOND_EMAIL_CONNECTION_UPSELL =
          "HUB_SECOND_EMAIL_CONNECTION_UPSELL"),
        (i.LIVE_STAGE_NOTIFICATION_BADGE = "LIVE_STAGE_NOTIFICATION_BADGE"),
        (i.GUILD_EVENT_UPSELL = "GUILD_EVENT_UPSELL"),
        (i.HUB_LINK_CHANNEL_NOTICE = "HUB_LINK_CHANNEL_NOTICE"),
        (i.PREMIUM_PROGRESS_BAR_GUILD_HEADER_TOOLTIP =
          "PREMIUM_PROGRESS_BAR_GUILD_HEADER_TOOLTIP"),
        (i.ANIMATED_GUILD_BANNER_GUILD_HEADER_TOOLTIP =
          "ANIMATED_GUILD_BANNER_GUILD_HEADER_TOOLTIP"),
        (i.ANIMATED_GUILD_BANNER_SETTINGS_NEW_PILL =
          "ANIMATED_GUILD_BANNER_SETTINGS_NEW_PILL"),
        (i.MULTI_ACCOUNT_TOOLTIP = "MULTI_ACCOUNT_TOOLTIP"),
        (i.HUB_STUDY_ROOM_NOTICE = "HUB_STUDY_ROOM_NOTICE"),
        (i.CHANNEL_BANNER_MEMBER_LIST_NOTICE =
          "CHANNEL_BANNER_MEMBER_LIST_NOTICE"),
        (i.CHANGE_LANGUAGE_MODAL = "CHANGE_LANGUAGE_MODAL"),
        (i.ACTIVITY_BEB_TUTORIAL = "ACTIVITY_BEB_TUTORIAL"),
        (i.APP_DIRECTORY_SETTINGS_NEW_PILL = "APP_DIRECTORY_SETTINGS_NEW_PILL"),
        (i.INVITE_SPLASH_GUILD_HEADER_TOOLTIP =
          "INVITE_SPLASH_GUILD_HEADER_TOOLTIP"),
        (i.ANIMATED_VIDEO_BG_CAPERNITE_DAY_NEW =
          "ANIMATED_VIDEO_BG_CAPERNITE_DAY_NEW"),
        (i.ANIMATED_VIDEO_BG_CAPERNITE_NIGHT_NEW =
          "ANIMATED_VIDEO_BG_CAPERNITE_NIGHT_NEW"),
        (i.ANIMATED_VIDEO_BG_HACKER_DEN_NEW =
          "ANIMATED_VIDEO_BG_HACKER_DEN_NEW"),
        (i.ANIMATED_VIDEO_BG_WUMPICE_NEW = "ANIMATED_VIDEO_BG_WUMPICE_NEW"),
        (i.ANIMATED_VIDEO_BG_CUSTOM_TOOLTIP_NEW =
          "ANIMATED_VIDEO_BG_CUSTOM_TOOLTIP_NEW"),
        (i.ANIMATED_VIDEO_BG_BIRTHDAY_1_NEW =
          "ANIMATED_VIDEO_BG_BIRTHDAY_1_NEW"),
        (i.SOUNDBOARD_WHEEL_EDUCATION_MODAL =
          "SOUNDBOARD_WHEEL_EDUCATION_MODAL"),
        (i.IN_APP_REPORTS_FEEDBACK = "IN_APP_REPORTS_FEEDBACK"),
        (i.CLIPS_CHANNEL_ATTACH_REMINDER = "CLIPS_CHANNEL_ATTACH_REMINDER");
    },
    704341: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("393414"),
        i = n("49111"),
        r = {
          onOpenHubInvite(e) {
            let { guild: t } = e;
            null != t &&
              (0, s.transitionTo)(
                i.Routes.GUILD_MEMBER_VERIFICATION_FOR_HUB(t.id, e.code)
              );
          },
        };
    },
    988415: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getCountryCodeByAlpha2: function () {
            return o;
          },
          getDefaultCountryCode: function () {
            return d;
          },
          getI18NCountryName: function () {
            return l;
          },
        });
      var s = n("627445"),
        i = n.n(s),
        r = n("592861"),
        a = n("782340");
      function o(e) {
        let t = r.default.find(t => t.alpha2 === e);
        if (null != t)
          return { name: t.name, code: t.phoneCountryCode, alpha2: t.alpha2 };
      }
      function d() {
        let e = (function (e) {
          let t = r.default.find(t => t.name === e);
          if (null != t)
            return { name: t.name, code: t.phoneCountryCode, alpha2: t.alpha2 };
        })("United States");
        return i(e, "Default country code cannot be missing."), e;
      }
      let u = {
        AF: () => a.default.Messages.COUNTRY_NAME_AF,
        AX: () => a.default.Messages.COUNTRY_NAME_AX,
        AL: () => a.default.Messages.COUNTRY_NAME_AL,
        DZ: () => a.default.Messages.COUNTRY_NAME_DZ,
        AS: () => a.default.Messages.COUNTRY_NAME_AS,
        AD: () => a.default.Messages.COUNTRY_NAME_AD,
        AO: () => a.default.Messages.COUNTRY_NAME_AO,
        AI: () => a.default.Messages.COUNTRY_NAME_AI,
        AQ: () => a.default.Messages.COUNTRY_NAME_AQ,
        AG: () => a.default.Messages.COUNTRY_NAME_AG,
        AR: () => a.default.Messages.COUNTRY_NAME_AR,
        AM: () => a.default.Messages.COUNTRY_NAME_AM,
        AW: () => a.default.Messages.COUNTRY_NAME_AW,
        AC: () => a.default.Messages.COUNTRY_NAME_AC,
        AU: () => a.default.Messages.COUNTRY_NAME_AU,
        AT: () => a.default.Messages.COUNTRY_NAME_AT,
        AZ: () => a.default.Messages.COUNTRY_NAME_AZ,
        BS: () => a.default.Messages.COUNTRY_NAME_BS,
        BH: () => a.default.Messages.COUNTRY_NAME_BH,
        BD: () => a.default.Messages.COUNTRY_NAME_BD,
        BB: () => a.default.Messages.COUNTRY_NAME_BB,
        BY: () => a.default.Messages.COUNTRY_NAME_BY,
        BE: () => a.default.Messages.COUNTRY_NAME_BE,
        BZ: () => a.default.Messages.COUNTRY_NAME_BZ,
        BJ: () => a.default.Messages.COUNTRY_NAME_BJ,
        BM: () => a.default.Messages.COUNTRY_NAME_BM,
        BT: () => a.default.Messages.COUNTRY_NAME_BT,
        BO: () => a.default.Messages.COUNTRY_NAME_BO,
        BQ: () => a.default.Messages.COUNTRY_NAME_BQ,
        BA: () => a.default.Messages.COUNTRY_NAME_BA,
        BW: () => a.default.Messages.COUNTRY_NAME_BW,
        BV: () => a.default.Messages.COUNTRY_NAME_BV,
        BR: () => a.default.Messages.COUNTRY_NAME_BR,
        IO: () => a.default.Messages.COUNTRY_NAME_IO,
        BN: () => a.default.Messages.COUNTRY_NAME_BN,
        BG: () => a.default.Messages.COUNTRY_NAME_BG,
        BF: () => a.default.Messages.COUNTRY_NAME_BF,
        BI: () => a.default.Messages.COUNTRY_NAME_BI,
        KH: () => a.default.Messages.COUNTRY_NAME_KH,
        CM: () => a.default.Messages.COUNTRY_NAME_CM,
        CA: () => a.default.Messages.COUNTRY_NAME_CA,
        CV: () => a.default.Messages.COUNTRY_NAME_CV,
        KY: () => a.default.Messages.COUNTRY_NAME_KY,
        CF: () => a.default.Messages.COUNTRY_NAME_CF,
        TD: () => a.default.Messages.COUNTRY_NAME_TD,
        CL: () => a.default.Messages.COUNTRY_NAME_CL,
        CN: () => a.default.Messages.COUNTRY_NAME_CN,
        CX: () => a.default.Messages.COUNTRY_NAME_CX,
        CC: () => a.default.Messages.COUNTRY_NAME_CC,
        CO: () => a.default.Messages.COUNTRY_NAME_CO,
        KM: () => a.default.Messages.COUNTRY_NAME_KM,
        CG: () => a.default.Messages.COUNTRY_NAME_CG,
        CD: () => a.default.Messages.COUNTRY_NAME_CD,
        CK: () => a.default.Messages.COUNTRY_NAME_CK,
        CR: () => a.default.Messages.COUNTRY_NAME_CR,
        CI: () => a.default.Messages.COUNTRY_NAME_CI,
        HR: () => a.default.Messages.COUNTRY_NAME_HR,
        CU: () => a.default.Messages.COUNTRY_NAME_CU,
        CW: () => a.default.Messages.COUNTRY_NAME_CW,
        CY: () => a.default.Messages.COUNTRY_NAME_CY,
        CZ: () => a.default.Messages.COUNTRY_NAME_CZ,
        DK: () => a.default.Messages.COUNTRY_NAME_DK,
        DG: () => a.default.Messages.COUNTRY_NAME_DG,
        DJ: () => a.default.Messages.COUNTRY_NAME_DJ,
        DM: () => a.default.Messages.COUNTRY_NAME_DM,
        DO: () => a.default.Messages.COUNTRY_NAME_DO,
        TP: () => a.default.Messages.COUNTRY_NAME_TP,
        EC: () => a.default.Messages.COUNTRY_NAME_EC,
        EG: () => a.default.Messages.COUNTRY_NAME_EG,
        SV: () => a.default.Messages.COUNTRY_NAME_SV,
        GQ: () => a.default.Messages.COUNTRY_NAME_GQ,
        ER: () => a.default.Messages.COUNTRY_NAME_ER,
        EE: () => a.default.Messages.COUNTRY_NAME_EE,
        ET: () => a.default.Messages.COUNTRY_NAME_ET,
        FK: () => a.default.Messages.COUNTRY_NAME_FK,
        FO: () => a.default.Messages.COUNTRY_NAME_FO,
        FJ: () => a.default.Messages.COUNTRY_NAME_FJ,
        FI: () => a.default.Messages.COUNTRY_NAME_FI,
        FR: () => a.default.Messages.COUNTRY_NAME_FR,
        GF: () => a.default.Messages.COUNTRY_NAME_GF,
        PF: () => a.default.Messages.COUNTRY_NAME_PF,
        TF: () => a.default.Messages.COUNTRY_NAME_TF,
        GA: () => a.default.Messages.COUNTRY_NAME_GA,
        GM: () => a.default.Messages.COUNTRY_NAME_GM,
        GE: () => a.default.Messages.COUNTRY_NAME_GE,
        DE: () => a.default.Messages.COUNTRY_NAME_DE,
        GH: () => a.default.Messages.COUNTRY_NAME_GH,
        GI: () => a.default.Messages.COUNTRY_NAME_GI,
        GR: () => a.default.Messages.COUNTRY_NAME_GR,
        GL: () => a.default.Messages.COUNTRY_NAME_GL,
        GD: () => a.default.Messages.COUNTRY_NAME_GD,
        GP: () => a.default.Messages.COUNTRY_NAME_GP,
        GU: () => a.default.Messages.COUNTRY_NAME_GU,
        GT: () => a.default.Messages.COUNTRY_NAME_GT,
        GG: () => a.default.Messages.COUNTRY_NAME_GG,
        GN: () => a.default.Messages.COUNTRY_NAME_GN,
        GW: () => a.default.Messages.COUNTRY_NAME_GW,
        GY: () => a.default.Messages.COUNTRY_NAME_GY,
        HT: () => a.default.Messages.COUNTRY_NAME_HT,
        HM: () => a.default.Messages.COUNTRY_NAME_HM,
        VA: () => a.default.Messages.COUNTRY_NAME_VA,
        HN: () => a.default.Messages.COUNTRY_NAME_HN,
        HK: () => a.default.Messages.COUNTRY_NAME_HK,
        HU: () => a.default.Messages.COUNTRY_NAME_HU,
        IS: () => a.default.Messages.COUNTRY_NAME_IS,
        IN: () => a.default.Messages.COUNTRY_NAME_IN,
        ID: () => a.default.Messages.COUNTRY_NAME_ID,
        IR: () => a.default.Messages.COUNTRY_NAME_IR,
        IQ: () => a.default.Messages.COUNTRY_NAME_IQ,
        IE: () => a.default.Messages.COUNTRY_NAME_IE,
        IM: () => a.default.Messages.COUNTRY_NAME_IM,
        IL: () => a.default.Messages.COUNTRY_NAME_IL,
        IT: () => a.default.Messages.COUNTRY_NAME_IT,
        JM: () => a.default.Messages.COUNTRY_NAME_JM,
        JP: () => a.default.Messages.COUNTRY_NAME_JP,
        JE: () => a.default.Messages.COUNTRY_NAME_JE,
        JO: () => a.default.Messages.COUNTRY_NAME_JO,
        KZ: () => a.default.Messages.COUNTRY_NAME_KZ,
        KE: () => a.default.Messages.COUNTRY_NAME_KE,
        KI: () => a.default.Messages.COUNTRY_NAME_KI,
        XK: () => a.default.Messages.COUNTRY_NAME_XK,
        KP: () => a.default.Messages.COUNTRY_NAME_KP,
        KR: () => a.default.Messages.COUNTRY_NAME_KR,
        KW: () => a.default.Messages.COUNTRY_NAME_KW,
        KG: () => a.default.Messages.COUNTRY_NAME_KG,
        LA: () => a.default.Messages.COUNTRY_NAME_LA,
        LV: () => a.default.Messages.COUNTRY_NAME_LV,
        LB: () => a.default.Messages.COUNTRY_NAME_LB,
        LS: () => a.default.Messages.COUNTRY_NAME_LS,
        LR: () => a.default.Messages.COUNTRY_NAME_LR,
        LY: () => a.default.Messages.COUNTRY_NAME_LY,
        LI: () => a.default.Messages.COUNTRY_NAME_LI,
        LT: () => a.default.Messages.COUNTRY_NAME_LT,
        LU: () => a.default.Messages.COUNTRY_NAME_LU,
        MO: () => a.default.Messages.COUNTRY_NAME_MO,
        MK: () => a.default.Messages.COUNTRY_NAME_MK,
        MG: () => a.default.Messages.COUNTRY_NAME_MG,
        MW: () => a.default.Messages.COUNTRY_NAME_MW,
        MY: () => a.default.Messages.COUNTRY_NAME_MY,
        MV: () => a.default.Messages.COUNTRY_NAME_MV,
        ML: () => a.default.Messages.COUNTRY_NAME_ML,
        MT: () => a.default.Messages.COUNTRY_NAME_MT,
        MH: () => a.default.Messages.COUNTRY_NAME_MH,
        MQ: () => a.default.Messages.COUNTRY_NAME_MQ,
        MR: () => a.default.Messages.COUNTRY_NAME_MR,
        MU: () => a.default.Messages.COUNTRY_NAME_MU,
        YT: () => a.default.Messages.COUNTRY_NAME_YT,
        MX: () => a.default.Messages.COUNTRY_NAME_MX,
        FM: () => a.default.Messages.COUNTRY_NAME_FM,
        MI: () => a.default.Messages.COUNTRY_NAME_MI,
        MD: () => a.default.Messages.COUNTRY_NAME_MD,
        MC: () => a.default.Messages.COUNTRY_NAME_MC,
        MN: () => a.default.Messages.COUNTRY_NAME_MN,
        ME: () => a.default.Messages.COUNTRY_NAME_ME,
        MS: () => a.default.Messages.COUNTRY_NAME_MS,
        MA: () => a.default.Messages.COUNTRY_NAME_MA,
        MZ: () => a.default.Messages.COUNTRY_NAME_MZ,
        MM: () => a.default.Messages.COUNTRY_NAME_MM,
        NA: () => a.default.Messages.COUNTRY_NAME_NA,
        NR: () => a.default.Messages.COUNTRY_NAME_NR,
        NP: () => a.default.Messages.COUNTRY_NAME_NP,
        NL: () => a.default.Messages.COUNTRY_NAME_NL,
        AN: () => a.default.Messages.COUNTRY_NAME_AN,
        NC: () => a.default.Messages.COUNTRY_NAME_NC,
        NZ: () => a.default.Messages.COUNTRY_NAME_NZ,
        NI: () => a.default.Messages.COUNTRY_NAME_NI,
        NE: () => a.default.Messages.COUNTRY_NAME_NE,
        NG: () => a.default.Messages.COUNTRY_NAME_NG,
        NU: () => a.default.Messages.COUNTRY_NAME_NU,
        NF: () => a.default.Messages.COUNTRY_NAME_NF,
        MP: () => a.default.Messages.COUNTRY_NAME_MP,
        NO: () => a.default.Messages.COUNTRY_NAME_NO,
        OM: () => a.default.Messages.COUNTRY_NAME_OM,
        PK: () => a.default.Messages.COUNTRY_NAME_PK,
        PW: () => a.default.Messages.COUNTRY_NAME_PW,
        PS: () => a.default.Messages.COUNTRY_NAME_PS,
        PA: () => a.default.Messages.COUNTRY_NAME_PA,
        PG: () => a.default.Messages.COUNTRY_NAME_PG,
        PY: () => a.default.Messages.COUNTRY_NAME_PY,
        PE: () => a.default.Messages.COUNTRY_NAME_PE,
        PH: () => a.default.Messages.COUNTRY_NAME_PH,
        PN: () => a.default.Messages.COUNTRY_NAME_PN,
        PL: () => a.default.Messages.COUNTRY_NAME_PL,
        PT: () => a.default.Messages.COUNTRY_NAME_PT,
        PR: () => a.default.Messages.COUNTRY_NAME_PR,
        QA: () => a.default.Messages.COUNTRY_NAME_QA,
        RE: () => a.default.Messages.COUNTRY_NAME_RE,
        RO: () => a.default.Messages.COUNTRY_NAME_RO,
        RU: () => a.default.Messages.COUNTRY_NAME_RU,
        RW: () => a.default.Messages.COUNTRY_NAME_RW,
        BL: () => a.default.Messages.COUNTRY_NAME_BL,
        SH: () => a.default.Messages.COUNTRY_NAME_SH,
        KN: () => a.default.Messages.COUNTRY_NAME_KN,
        LC: () => a.default.Messages.COUNTRY_NAME_LC,
        MF: () => a.default.Messages.COUNTRY_NAME_MF,
        PM: () => a.default.Messages.COUNTRY_NAME_PM,
        VC: () => a.default.Messages.COUNTRY_NAME_VC,
        WS: () => a.default.Messages.COUNTRY_NAME_WS,
        SM: () => a.default.Messages.COUNTRY_NAME_SM,
        ST: () => a.default.Messages.COUNTRY_NAME_ST,
        SA: () => a.default.Messages.COUNTRY_NAME_SA,
        SN: () => a.default.Messages.COUNTRY_NAME_SN,
        RS: () => a.default.Messages.COUNTRY_NAME_RS,
        SC: () => a.default.Messages.COUNTRY_NAME_SC,
        SL: () => a.default.Messages.COUNTRY_NAME_SL,
        SG: () => a.default.Messages.COUNTRY_NAME_SG,
        SX: () => a.default.Messages.COUNTRY_NAME_SX,
        SK: () => a.default.Messages.COUNTRY_NAME_SK,
        SI: () => a.default.Messages.COUNTRY_NAME_SI,
        SB: () => a.default.Messages.COUNTRY_NAME_SB,
        SO: () => a.default.Messages.COUNTRY_NAME_SO,
        ZA: () => a.default.Messages.COUNTRY_NAME_ZA,
        GS: () => a.default.Messages.COUNTRY_NAME_GS,
        SS: () => a.default.Messages.COUNTRY_NAME_SS,
        ES: () => a.default.Messages.COUNTRY_NAME_ES,
        LK: () => a.default.Messages.COUNTRY_NAME_LK,
        SD: () => a.default.Messages.COUNTRY_NAME_SD,
        SR: () => a.default.Messages.COUNTRY_NAME_SR,
        SJ: () => a.default.Messages.COUNTRY_NAME_SJ,
        SZ: () => a.default.Messages.COUNTRY_NAME_SZ,
        SE: () => a.default.Messages.COUNTRY_NAME_SE,
        CH: () => a.default.Messages.COUNTRY_NAME_CH,
        SY: () => a.default.Messages.COUNTRY_NAME_SY,
        TW: () => a.default.Messages.COUNTRY_NAME_TW,
        TJ: () => a.default.Messages.COUNTRY_NAME_TJ,
        TZ: () => a.default.Messages.COUNTRY_NAME_TZ,
        TH: () => a.default.Messages.COUNTRY_NAME_TH,
        TL: () => a.default.Messages.COUNTRY_NAME_TL,
        TG: () => a.default.Messages.COUNTRY_NAME_TG,
        TK: () => a.default.Messages.COUNTRY_NAME_TK,
        TO: () => a.default.Messages.COUNTRY_NAME_TO,
        TT: () => a.default.Messages.COUNTRY_NAME_TT,
        TN: () => a.default.Messages.COUNTRY_NAME_TN,
        TR: () => a.default.Messages.COUNTRY_NAME_TR,
        TM: () => a.default.Messages.COUNTRY_NAME_TM,
        TC: () => a.default.Messages.COUNTRY_NAME_TC,
        TV: () => a.default.Messages.COUNTRY_NAME_TV,
        UG: () => a.default.Messages.COUNTRY_NAME_UG,
        UA: () => a.default.Messages.COUNTRY_NAME_UA,
        AE: () => a.default.Messages.COUNTRY_NAME_AE,
        GB: () => a.default.Messages.COUNTRY_NAME_GB,
        US: () => a.default.Messages.COUNTRY_NAME_US,
        UM: () => a.default.Messages.COUNTRY_NAME_UM,
        UY: () => a.default.Messages.COUNTRY_NAME_UY,
        UZ: () => a.default.Messages.COUNTRY_NAME_UZ,
        VU: () => a.default.Messages.COUNTRY_NAME_VU,
        VE: () => a.default.Messages.COUNTRY_NAME_VE,
        VN: () => a.default.Messages.COUNTRY_NAME_VN,
        VG: () => a.default.Messages.COUNTRY_NAME_VG,
        VI: () => a.default.Messages.COUNTRY_NAME_VI,
        WF: () => a.default.Messages.COUNTRY_NAME_WF,
        EH: () => a.default.Messages.COUNTRY_NAME_EH,
        YE: () => a.default.Messages.COUNTRY_NAME_YE,
        ZM: () => a.default.Messages.COUNTRY_NAME_ZM,
        ZW: () => a.default.Messages.COUNTRY_NAME_ZW,
      };
      function l(e) {
        return u[e]();
      }
    },
    479756: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          startImpersonating: function () {
            return E;
          },
          updateImpersonating: function () {
            return p;
          },
          stopImpersonating: function () {
            return y;
          },
          updateImpersonatedChannels: function () {
            return C;
          },
          updateImpersonatedRoles: function () {
            return S;
          },
          updateImpersonatedData: function () {
            return I;
          },
        }),
        n("222007");
      var s = n("913144"),
        i = n("716241"),
        r = n("393414"),
        a = n("42203"),
        o = n("923959"),
        d = n("26989"),
        u = n("305961"),
        l = n("957255"),
        f = n("18494"),
        _ = n("282109"),
        c = n("599110"),
        g = n("38654"),
        m = n("507950"),
        h = n("49111"),
        v = n("724210");
      function E(e, t) {
        c.default.track(h.AnalyticEvents.VIEW_AS_ROLES_SELECTED, {
          num_roles: Object.keys(t.roles).length,
          ...(0, i.collectGuildAnalyticsMetadata)(e),
          is_viewing_as_member: t.type === m.ImpersonateType.NEW_MEMBER,
        }),
          s.default.dispatch({
            type: "IMPERSONATE_UPDATE",
            guildId: e,
            data: t,
          }),
          T(e);
      }
      function p(e, t) {
        let n = g.default.getData(e);
        null != n &&
          n.type === t.type &&
          (c.default.track(h.AnalyticEvents.VIEW_AS_ROLES_SELECTED, {
            num_roles: Object.keys(n.roles).length,
            ...(0, i.collectGuildAnalyticsMetadata)(e),
            is_viewing_as_member: n.type === m.ImpersonateType.NEW_MEMBER,
          }),
          s.default.dispatch({
            type: "IMPERSONATE_UPDATE",
            guildId: e,
            data: { ...n, ...t },
          }),
          T(e));
      }
      function y(e) {
        s.default.dispatch({ type: "IMPERSONATE_STOP", guildId: e });
      }
      function T(e) {
        let t = f.default.getChannelId(e),
          n = a.default.getChannel(t),
          s = null != t && (0, v.isStaticChannelRoute)(t);
        if (!s && !l.default.can(h.Permissions.VIEW_CHANNEL, n)) {
          let t = o.default.getDefaultChannel(e);
          null != t && (0, r.transitionTo)(h.Routes.CHANNEL(e, t.id));
        }
      }
      function C(e, t, n) {
        let s = new Set(_.default.getOptedInChannels(e));
        t.forEach(e => s.add(e)),
          n.forEach(e => s.delete(e)),
          p(e, { type: m.ImpersonateType.NEW_MEMBER, optInChannels: s });
      }
      function S(e, t) {
        let n = u.default.getGuild(e);
        if (null == n) return;
        !(function (e, t) {
          let n = [
              ...o.default.getSelectableChannelIds(e),
              ...o.default.getVocalChannelIds(e),
            ],
            s = Array.from(t);
          o.default.addConditionalChangeListener(() => {
            let t = d.default.getSelfMember(e);
            if (null == t) return !1;
            if (s.some(e => !t.roles.includes(e))) return !0;
            let i = [
                ...o.default.getSelectableChannelIds(e),
                ...o.default.getVocalChannelIds(e),
              ],
              r = i.filter(e => !n.includes(e));
            return r.length > 0 && C(e, r, []), !1;
          });
        })(e, t);
        let s = {};
        t.forEach(e => (s[e] = n.roles[e])),
          p(e, { type: m.ImpersonateType.NEW_MEMBER, roles: s });
      }
      function I(e, t) {
        p(e, { type: m.ImpersonateType.NEW_MEMBER, ...t });
      }
    },
    487946: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var s = n("759843"),
        i = n("627929"),
        r = n("233069"),
        a = n("271938"),
        o = n("599110"),
        d = n("840707"),
        u = n("9294"),
        l = n("91366"),
        f = n("49111");
      function _(e) {
        let t = null;
        if (null != e && null != e.channel) {
          let n = e.channel;
          t =
            e.target_type === l.InviteTargetTypes.STREAM
              ? f.LoggingInviteTypes.STREAM
              : e.target_type === l.InviteTargetTypes.EMBEDDED_APPLICATION
                ? f.LoggingInviteTypes.APPLICATION
                : (0, r.isMultiUserDM)(n.type)
                  ? f.LoggingInviteTypes.GDM_INVITE
                  : null == n || (0, r.isPrivate)(n.type)
                    ? f.LoggingInviteTypes.FRIEND_INVITE
                    : f.LoggingInviteTypes.SERVER_INVITE;
        }
        return t;
      }
      function c(e, t, n) {
        o.default.track(f.AnalyticEvents.INVITE_OPENED, { invite_code: e });
        let r = (0, u.parseExtraDataFromInviteKey)(e),
          l = {
            ...n,
            with_counts: !0,
            with_expiration: !0,
            guild_scheduled_event_id: r.guildScheduledEventId,
          };
        return d.default
          .get({
            url: f.Endpoints.INVITE(r.baseCode),
            query: l,
            oldFormErrors: !0,
            trackedActionData: {
              event: s.NetworkActionNames.INVITE_RESOLVE,
              properties: e => {
                var s, o, d, u, l, c;
                let g = e.body,
                  m =
                    (null === (s = e.body) || void 0 === s
                      ? void 0
                      : s.code) === f.AbortCodes.USER_BANNED;
                return (0, i.exact)({
                  resolved: e.ok,
                  guild_id:
                    null == g
                      ? void 0
                      : null === (o = g.guild) || void 0 === o
                        ? void 0
                        : o.id,
                  channel_id:
                    null == g
                      ? void 0
                      : null === (d = g.channel) || void 0 === d
                        ? void 0
                        : d.id,
                  channel_type:
                    null == g
                      ? void 0
                      : null === (u = g.channel) || void 0 === u
                        ? void 0
                        : u.type,
                  inviter_id:
                    null == g
                      ? void 0
                      : null === (l = g.inviter) || void 0 === l
                        ? void 0
                        : l.id,
                  code: r.baseCode,
                  input_value: null == n ? void 0 : n.inputValue,
                  location: t,
                  authenticated: a.default.isAuthenticated(),
                  size_total: null == g ? void 0 : g.approximate_member_count,
                  size_online:
                    null == g ? void 0 : g.approximate_presence_count,
                  destination_user_id:
                    null == g
                      ? void 0
                      : null === (c = g.target_user) || void 0 === c
                        ? void 0
                        : c.id,
                  invite_type: _(g),
                  user_banned: m,
                });
              },
            },
          })
          .then(
            s => {
              let i = s.body;
              return (
                null != t &&
                  o.default.track(
                    f.AnalyticEvents.INVITE_RESOLVED,
                    {
                      resolved: !0,
                      guild_id: null != i.guild ? i.guild.id : null,
                      channel_id: null != i.channel ? i.channel.id : null,
                      channel_type: null != i.channel ? i.channel.type : null,
                      inviter_id: i.inviter ? i.inviter.id : null,
                      code: r.baseCode,
                      input_value: null == n ? void 0 : n.inputValue,
                      location: t,
                      authenticated: a.default.isAuthenticated(),
                      size_total: i.approximate_member_count,
                      size_online: i.approximate_presence_count,
                      destination_user_id:
                        null != i.target_user ? i.target_user.id : null,
                      invite_type: _(i),
                    },
                    { flush: !0 }
                  ),
                { invite: i, code: e }
              );
            },
            s => {
              let i =
                null != s.body && s.body.code === f.AbortCodes.USER_BANNED;
              if (null != t) {
                var d, u;
                o.default.track(
                  f.AnalyticEvents.INVITE_RESOLVED,
                  {
                    resolved: !1,
                    code: r.baseCode,
                    input_value: null == n ? void 0 : n.inputValue,
                    location: t,
                    authenticated: a.default.isAuthenticated(),
                    user_banned: i,
                    error_code:
                      null === (d = s.body) || void 0 === d ? void 0 : d.code,
                    error_message:
                      null === (u = s.body) || void 0 === u
                        ? void 0
                        : u.message,
                  },
                  { flush: !0 }
                );
              }
              return { invite: null, code: e, banned: i };
            }
          );
      }
    },
    630869: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("37983");
      n("884691");
      var i = n("77078"),
        r = {
          show(e) {
            (0, i.openModalLazy)(async () => {
              let { default: t } = await n
                .el("851172")
                .then(n.bind(n, "851172"));
              return n => (0, s.jsx)(t, { ...n, url: e });
            });
          },
        };
    },
    537025: function (e, t, n) {
      "use strict";
      function s(e) {
        return !1;
      }
      n.r(t),
        n.d(t, {
          shouldShowLinkNotDiscordWarning: function () {
            return s;
          },
        });
    },
    765089: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        }),
        n("222007");
      var s,
        i,
        r = n("599110"),
        a = n("253981"),
        o = n("340454"),
        d = n("361572"),
        u = n("49111");
      ((i = s || (s = {})).MESSAGE = "Discord Message Link"),
        (i.CHANNEL = "Discord Channel Link"),
        (i.SERVER_INVITE = "Discord Server Invite"),
        (i.GIFT = "Discord Gift Link"),
        (i.UNKNOWN = "Unknown");
      let l = [
        e => (o.default.isInvite(e) ? "Discord Server Invite" : null),
        e => {
          let t = a.default.safeParseWithQuery(e);
          if (null == t) return null;
          let n = (0, d.tryParseChannelPath)(t.path);
          return null == n
            ? null
            : f({
                guildId: n.guildId,
                channelId: n.channelId,
                messageId: n.messageId,
              });
        },
      ];
      function f(e) {
        return null != e.guildId && null != e.channelId && null != e.messageId
          ? "Discord Message Link"
          : null != e.guildId && null != e.channelId
            ? "Discord Channel Link"
            : "Unknown";
      }
      var _ = {
        trackDiscordLinkClicked: function (e) {
          r.default.track(u.AnalyticEvents.LINK_CLICKED, {
            is_discord_link: !0,
            discord_link_type: f(e),
          });
        },
        trackLinkClicked: function (e, t) {
          var n, s;
          if (null == e && null == t) return;
          let i = a.default.isDiscordUrl(e, !0) || null != t;
          r.default.track(u.AnalyticEvents.LINK_CLICKED, {
            is_discord_link: i,
            discord_link_type: i
              ? ((n = e),
                null == (s = t) && null == n
                  ? "Unknown"
                  : null == s
                    ? (function (e) {
                        for (let t of l) {
                          let n = t(e);
                          if (null != n) return n;
                        }
                        return "Unknown";
                      })(n)
                    : f(s))
              : null,
          });
        },
        trackAnnouncementMessageLinkClicked: function (e) {
          let {
            messageId: t,
            channelId: n,
            guildId: s,
            sourceChannelId: i,
            sourceGuildId: a,
          } = e;
          r.default.track(u.AnalyticEvents.ANNOUNCEMENT_MESSAGE_LINK_CLICKED, {
            message_id: t,
            channel_id: n,
            guild_id: s,
            source_channel_id: i,
            source_guild_id: a,
          });
        },
      };
    },
    232054: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
        });
      var s = n("203288"),
        i = n("590260"),
        r = n("677315"),
        a = n("875229"),
        o = n("466818"),
        d = n("471706"),
        u = n("290886"),
        l = n("903724"),
        f = n("120252"),
        _ = n("42203"),
        c = n("305961"),
        g = n("449008"),
        m = n("361572"),
        h = n("49111"),
        v = n("724210");
      async function E(e) {
        let { guildId: t, channelId: n } = e,
          E = c.default.getGuild(t);
        if (null == E && t !== h.ME) return !1;
        if (null == n) return !0;
        if ((0, v.isStaticChannelRoute)(n))
          switch (n) {
            case v.StaticChannelRoute.ROLE_SUBSCRIPTIONS:
              return (0, l.areRoleSubscriptionsVisibleInGuild)(t);
            case v.StaticChannelRoute.GUILD_SHOP:
              return (0, i.isGuildShopVisibleInGuild)(E);
            case v.StaticChannelRoute.MEMBER_APPLICATIONS:
              return (0, a.canReviewGuildMemberApplications)(t);
            case v.StaticChannelRoute.GUILD_HOME:
              return (
                (0, r.canSeeGuildHome)(t) || (0, u.canSeeOnboardingHome)(t)
              );
            case v.StaticChannelRoute.CHANNEL_BROWSER:
              return null != E && E.hasFeature(h.GuildFeatures.COMMUNITY);
            case v.StaticChannelRoute.GUILD_ONBOARDING:
              return d.default.shouldShowOnboarding(t);
            case v.StaticChannelRoute.CUSTOMIZE_COMMUNITY:
              return null != E && E.hasFeature(h.GuildFeatures.COMMUNITY);
            case v.StaticChannelRoute.MEMBER_SAFETY:
              return (0, o.canAccessMemberSafetyPage)(t);
            default:
              (0, g.assertNever)(n);
          }
        let p = _.default.getChannel(n);
        return (
          (null != p ||
            (await f.default.loadThread(n),
            null != (p = _.default.getChannel(n)))) &&
          ((0, m.canViewChannel)(p) || s.default.isChannelGatedAndVisible(t, n))
        );
      }
    },
    537325: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        });
      var s = n("37983");
      n("884691");
      var i = n("551042"),
        r = n("565298"),
        a = n("393414"),
        o = n("239380"),
        d = n("42203"),
        u = n("361572"),
        l = n("232054"),
        f = n("49111");
      async function _(e, t, _) {
        let c = (0, u.tryParseChannelPath)(e);
        if (null != c && !(await (0, l.default)(c))) {
          (0, i.openModalLazy)(async () => {
            let { default: e } = await n.el("657233").then(n.bind(n, "657233"));
            return t => (0, s.jsx)(e, { ...t });
          });
          return;
        }
        if (null == c) {
          (0, a.transitionTo)(e);
          return;
        }
        let g = (function (e) {
          if (null == e.channelId) return e;
          let t = d.default.getChannel(e.channelId);
          if (null == t) return e;
          let n = (0, r.getGuildIdForGenericRedirect)(t);
          return { ...e, guildId: null != n ? n : f.ME };
        })(c);
        if (null == g.channelId) {
          (0, o.transitionToGuild)(g.guildId);
          return;
        }
        null != g.threadId
          ? (0, a.transitionTo)(
              f.Routes.CHANNEL_THREAD_VIEW(
                g.guildId,
                g.channelId,
                g.threadId,
                g.messageId
              ),
              t,
              _
            )
          : (0, a.transitionTo)(
              f.Routes.CHANNEL(g.guildId, g.channelId, g.messageId),
              t,
              _
            );
      }
    },
    647374: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          punycodeLink: function () {
            return C;
          },
          default: function () {
            return S;
          },
        }),
        n("222007"),
        n("511434"),
        n("313619"),
        n("654714"),
        n("287168"),
        n("956660"),
        n("70102");
      var s = n("917351"),
        i = n.n(s),
        r = n("693566"),
        a = n.n(r);
      n("125601");
      var o = n("404828"),
        d = n.n(o),
        u = n("312016"),
        l = n("449008"),
        f = n("891137"),
        _ = n("76216");
      let c = new a({ max: 50 });
      function g(e) {
        let t = c.get(e);
        if (null != t) return t;
        let n = (0, _.sanitizeWhitespace)(e),
          s = (0, _.sanitizeUnicodeConfusables)(n),
          i = { whitespaceSanitized: n, fullySanitized: s };
        return c.set(e, i), i;
      }
      let m = ["http:", "https:", "discord:"],
        h = [
          f.AST_KEY.TEXT,
          f.AST_KEY.UNDERLINE,
          f.AST_KEY.STRONG,
          f.AST_KEY.ITALICS,
          f.AST_KEY.STRIKETHROUGH,
          f.AST_KEY.INLINE_CODE,
          f.AST_KEY.SPOILER,
          f.AST_KEY.LINE_BREAK,
          f.AST_KEY.TIMESTAMP,
        ],
        v = [...h, f.AST_KEY.EMOJI, f.AST_KEY.CUSTOM_EMOJI],
        E = [f.AST_KEY.LIST, f.AST_KEY.HEADING, f.AST_KEY.BLOCK_QUOTE],
        p = [f.AST_KEY.TEXT],
        y = [
          f.AST_KEY.UNDERLINE,
          f.AST_KEY.STRONG,
          f.AST_KEY.ITALICS,
          f.AST_KEY.STRIKETHROUGH,
          f.AST_KEY.INLINE_CODE,
          f.AST_KEY.SPOILER,
          f.AST_KEY.LINE_BREAK,
          f.AST_KEY.TIMESTAMP,
          f.AST_KEY.EMOJI,
          f.AST_KEY.CUSTOM_EMOJI,
          f.AST_KEY.LIST,
          f.AST_KEY.HEADING,
          f.AST_KEY.BLOCK_QUOTE,
        ];
      function T(e, t) {
        let n =
          arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [];
        for (let s of (!Array.isArray(e) && (e = [e]), e)) {
          if (!t.includes(s.type)) return null;
          if (s.type === f.AST_KEY.INLINE_CODE) {
            let e = [...t, ...n];
            if (null == T(s.validationChildContent, e)) return null;
          }
          if (Array.isArray(s.content) && null == T(s.content, t)) return null;
        }
        return e;
      }
      function C(e) {
        try {
          var t;
          let n = new URL(e),
            s = null !== (t = n.protocol) && void 0 !== t ? t : "";
          if (!m.includes(s.toLowerCase()))
            throw Error("Provided protocol is not allowed: " + s);
          if (
            ("http:" === s || "https:" === s) &&
            (null == n.hostname || 0 === n.hostname.length)
          )
            throw Error("no hostname");
          let i = (0, _.safelyMakeUrlHumanReadable)(n);
          (n.username = ""), (n.password = "");
          let r = (0, _.safelyMakeUrlHumanReadable)(n);
          return { target: i, displayTarget: r };
        } catch (e) {
          return null;
        }
      }
      var S = {
        ...d.defaultRules.link,
        match: (e, t, n) =>
          t.allowLinks ? d.defaultRules.link.match(e, t, n) : null,
        parse(e, t, n) {
          let [s, r, a, o] = e,
            _ = () => ({ type: f.AST_KEY.TEXT, content: s }),
            c = g(a),
            m = g(r),
            S = g(null != o ? o : ""),
            I = c.whitespaceSanitized,
            A = m.fullySanitized,
            D = S.fullySanitized,
            N = A.trim(),
            O = I.trim();
          if (0 === O.length || 0 === N.length) return _();
          let P = d.unescapeUrl(a),
            b = C(P),
            V = (0, u.default)(r).length > 0 || (0, u.default)(o).length > 0;
          if (null == b || V) return _();
          let R = { ...n, allowEscape: !1, parseInlineCodeChildContent: !0 },
            k = n.allowEmojiLinks ? v : h,
            M = [...k, ...E],
            w = [...p, ...y],
            L = t(A, R),
            U = T(L, M, [f.AST_KEY.EMOJI]),
            G = t(D, R),
            F = T(G, w);
          if (null == U || null == F) return _();
          let H = (function e(t) {
              let n = "";
              for (let s of t)
                switch (s.type) {
                  case f.AST_KEY.TEXT:
                  case f.AST_KEY.INLINE_CODE:
                    n += s.content;
                    break;
                  case f.AST_KEY.CUSTOM_EMOJI:
                    n += s.name;
                    break;
                  case f.AST_KEY.EMOJI:
                    n += s.surrogate;
                    break;
                  case f.AST_KEY.LINE_BREAK:
                    n += "\n";
                    break;
                  case f.AST_KEY.STRONG:
                  case f.AST_KEY.ITALICS:
                  case f.AST_KEY.UNDERLINE:
                  case f.AST_KEY.STRIKETHROUGH:
                  case f.AST_KEY.SPOILER:
                    n += e(s.content);
                    break;
                  case f.AST_KEY.TIMESTAMP:
                    n += "<timestamp>";
                    break;
                  case f.AST_KEY.BLOCK_QUOTE:
                  case f.AST_KEY.LIST:
                  case f.AST_KEY.HEADING:
                    n += "<".concat(s.type, "Content>");
                    break;
                  default:
                    (0, l.assertNever)(s.type);
                }
              return n;
            })(U),
            B = 0 === H.trim().length;
          if (B) return _();
          let x = i.pick(t.rules, k),
            Y = d.parserFor(x),
            j = Y(m.whitespaceSanitized, R),
            K = S.whitespaceSanitized,
            { target: W } = b;
          return { content: j, target: W, title: K };
        },
      };
    },
    891137: function (e, t, n) {
      "use strict";
      var s, i;
      n.r(t),
        n.d(t, {
          AST_KEY: function () {
            return s;
          },
        }),
        ((i = s || (s = {})).TEXT = "text"),
        (i.STRIKETHROUGH = "s"),
        (i.UNDERLINE = "u"),
        (i.STRONG = "strong"),
        (i.ITALICS = "em"),
        (i.IMAGE = "image"),
        (i.EMOJI = "emoji"),
        (i.CUSTOM_EMOJI = "customEmoji"),
        (i.LINK = "link"),
        (i.URL = "url"),
        (i.AUTOLINK = "autolink"),
        (i.HIGHLIGHT = "highlight"),
        (i.PARAGRAPH = "paragraph"),
        (i.LINE_BREAK = "br"),
        (i.NEWLINE = "newline"),
        (i.ESCAPE = "escape"),
        (i.SPOILER = "spoiler"),
        (i.BLOCK_QUOTE = "blockQuote"),
        (i.INLINE_CODE = "inlineCode"),
        (i.CODE_BLOCK = "codeBlock"),
        (i.MENTION = "mention"),
        (i.CHANNEL_MENTION = "channelMention"),
        (i.CHANNEL = "channel"),
        (i.GUILD = "guild"),
        (i.ATTACHMENT_LINK = "attachmentLink"),
        (i.SOUNDBOARD = "soundboard"),
        (i.STATIC_ROUTE_LINK = "staticRouteLink"),
        (i.ROLE_MENTION = "roleMention"),
        (i.COMMAND_MENTION = "commandMention"),
        (i.TIMESTAMP = "timestamp"),
        (i.LIST = "list"),
        (i.HEADING = "heading");
    },
    76216: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          sanitizeWhitespace: function () {
            return i;
          },
          sanitizeUnicodeConfusables: function () {
            return o;
          },
          safelyMakeUrlHumanReadable: function () {
            return u;
          },
        }),
        n("781738");
      let s = RegExp(
        ""
          .concat(/\p{Cf}|\p{Zl}|\p{Zp}|[^\P{Cc}\n]|[^\P{Zs} ]/gu.source, "|")
          .concat("͏|឴|឵|ᅠ|ㅤ|ﾠ"),
        "gu"
      );
      function i(e) {
        return e.replace(s, "");
      }
      let r = [
        {
          character: "h",
          matcher: a([
            "H",
            "һ",
            "հ",
            "Ꮒ",
            "ℎ",
            "\uD835\uDC21",
            "\uD835\uDC89",
            "\uD835\uDCBD",
            "\uD835\uDCF1",
            "\uD835\uDD25",
            "\uD835\uDD59",
            "\uD835\uDD8D",
            "\uD835\uDDC1",
            "\uD835\uDDF5",
            "\uD835\uDE29",
            "\uD835\uDE5D",
            "\uD835\uDE91",
            "ｈ",
          ]),
        },
        {
          character: "t",
          matcher: a([
            "T",
            "\uD835\uDC2D",
            "\uD835\uDC61",
            "\uD835\uDC95",
            "\uD835\uDCC9",
            "\uD835\uDCFD",
            "\uD835\uDD31",
            "\uD835\uDD65",
            "\uD835\uDD99",
            "\uD835\uDDCD",
            "\uD835\uDE01",
            "\uD835\uDE35",
            "\uD835\uDE69",
            "\uD835\uDE9D",
          ]),
        },
        {
          character: "p",
          matcher: a([
            "P",
            "ρ",
            "ϱ",
            "р",
            "⍴",
            "ⲣ",
            "\uD835\uDC29",
            "\uD835\uDC5D",
            "\uD835\uDC91",
            "\uD835\uDCC5",
            "\uD835\uDCF9",
            "\uD835\uDD2D",
            "\uD835\uDD61",
            "\uD835\uDD95",
            "\uD835\uDDC9",
            "\uD835\uDDFD",
            "\uD835\uDE31",
            "\uD835\uDE65",
            "\uD835\uDE99",
            "\uD835\uDED2",
            "\uD835\uDEE0",
            "\uD835\uDF0C",
            "\uD835\uDF1A",
            "\uD835\uDF46",
            "\uD835\uDF54",
            "\uD835\uDF80",
            "\uD835\uDF8E",
            "\uD835\uDFBA",
            "\uD835\uDFC8",
            "ｐ",
            "ҏ",
          ]),
        },
        {
          character: "s",
          matcher: a([
            "S",
            "ƽ",
            "ѕ",
            "ꜱ",
            "ꮪ",
            "\uD801\uDC48",
            "\uD806\uDCC1",
            "\uD835\uDC2C",
            "\uD835\uDC60",
            "\uD835\uDC94",
            "\uD835\uDCC8",
            "\uD835\uDCFC",
            "\uD835\uDD30",
            "\uD835\uDD64",
            "\uD835\uDD98",
            "\uD835\uDDCC",
            "\uD835\uDE00",
            "\uD835\uDE34",
            "\uD835\uDE68",
            "\uD835\uDE9C",
            "ｓ",
          ]),
        },
        {
          character: ":",
          matcher: a([
            "ː",
            "˸",
            "։",
            "׃",
            "܃",
            "܄",
            "ः",
            "ઃ",
            "᛬",
            "᠃",
            "᠉",
            "⁚",
            "∶",
            "ꓽ",
            "꞉",
            "︰",
            "：",
            ";",
            ";",
          ]),
        },
        {
          character: "/",
          matcher: a([
            "᜵",
            "⁁",
            "⁄",
            "∕",
            "╱",
            "⟋",
            "⧸",
            "Ⳇ",
            "⼃",
            "〳",
            "ノ",
            "㇓",
            "丿",
            "\uD834\uDE3A",
          ]),
        },
      ];
      function a(e) {
        return RegExp(e.join("|"), "gu");
      }
      function o(e) {
        let t = e;
        return (
          r.forEach(e => {
            t = t.replace(e.matcher, e.character);
          }),
          t
        );
      }
      let d = [
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1,
        0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 0, 0, 0, 1, 0,
      ];
      function u(e) {
        let t = (function (e) {
          let t = "null" === e.origin,
            n = t && e.pathname.startsWith("//");
          if (n) return e.protocol;
          let s = "";
          return (
            "" !== e.username && (s += e.username),
            "" !== e.password && (s += ":" + e.password),
            "" !== s && (s += "@"),
            "".concat(e.protocol, "//").concat(s).concat(e.host)
          );
        })(e);
        return (t += l(e.pathname) + l(e.search) + l(e.hash));
      }
      function l(e) {
        let t;
        try {
          t = decodeURIComponent(e);
        } catch {
          return e;
        }
        let n = "",
          s = e,
          i = t;
        for (; s.length > 0; ) {
          var r;
          let e = s.codePointAt(0),
            t = i.codePointAt(0);
          if (e === t) {
            let t = String.fromCodePoint(e);
            (n += t), (s = s.substring(t.length)), (i = i.substring(t.length));
            continue;
          }
          let a = String.fromCodePoint(t),
            o = encodeURIComponent(a),
            u = o === a ? 3 : o.length;
          (n += (
            (r = t) >= 0 && r < 128
              ? 1 !== d[r]
              : 8206 === r ||
                8207 === r ||
                8234 === r ||
                8235 === r ||
                8236 === r ||
                8237 === r ||
                8238 === r ||
                1564 === r ||
                8294 === r ||
                8295 === r ||
                8296 === r ||
                8297 === r ||
                128271 === r ||
                128272 === r ||
                128274 === r ||
                128275 === r ||
                133 === r ||
                160 === r ||
                5760 === r ||
                8192 === r ||
                8193 === r ||
                8194 === r ||
                8195 === r ||
                8196 === r ||
                8197 === r ||
                8198 === r ||
                8199 === r ||
                8200 === r ||
                8201 === r ||
                8202 === r ||
                8232 === r ||
                8233 === r ||
                8239 === r ||
                8287 === r ||
                12288 === r ||
                10240 === r ||
                173 === r ||
                847 === r ||
                (r >= 1536 && r <= 1541) ||
                1757 === r ||
                1807 === r ||
                2274 === r ||
                4447 === r ||
                4448 === r ||
                6068 === r ||
                6069 === r ||
                6155 === r ||
                6156 === r ||
                6157 === r ||
                6158 === r ||
                8203 === r ||
                8204 === r ||
                8205 === r ||
                8288 === r ||
                8289 === r ||
                8290 === r ||
                8291 === r ||
                8292 === r ||
                8293 === r ||
                (r >= 8298 && r <= 8303) ||
                12644 === r ||
                (r >= 65520 && r <= 65528) ||
                (r >= 65024 && r <= 65039) ||
                65279 === r ||
                65440 === r ||
                65529 === r ||
                65530 === r ||
                65531 === r ||
                69821 === r ||
                69837 === r ||
                (r >= 78896 && r <= 78904) ||
                (r >= 113824 && r <= 113827) ||
                (r >= 119155 && r <= 119162) ||
                (r >= 917504 && r <= 921599)
          )
            ? o
            : a),
            (s = s.substring(u)),
            (i = i.substring(a.length));
        }
        return n;
      }
    },
    91984: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("37983");
      n("884691");
      var i = n("77078"),
        r = {
          show(e) {
            let { url: t, trustUrl: r, onConfirm: a, isProtocol: o } = e;
            (0, i.openModalLazy)(async () => {
              let { default: e } = await n
                .el("153128")
                .then(n.bind(n, "153128"));
              return n =>
                (0, s.jsx)(e, {
                  ...n,
                  url: t,
                  isProtocol: o,
                  trustUrl: r,
                  onConfirm: a,
                });
            });
          },
        };
    },
    288518: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return T;
          },
        }),
        n("222007");
      var s = n("988415"),
        i = n("42203"),
        r = n("455079");
      let a = new Set(),
        o = new Set(),
        d = !1,
        u = null;
      function l(e) {
        return e.isMessageRequest && !e.isSpam;
      }
      function f(e) {
        let t = !1;
        return (
          l(e) && !a.has(e.id) && (a.add(e.id), (t = !0)),
          !l(e) && a.has(e.id) && (a.delete(e.id), (t = !0)),
          !l(e) && o.has(e.id) && (o.delete(e.id), (t = !0)),
          t
        );
      }
      function _(e) {
        var t;
        null != e &&
          (u =
            null !== (t = (0, s.getCountryCodeByAlpha2)(e)) && void 0 !== t
              ? t
              : (0, s.getDefaultCountryCode)());
      }
      function c(e) {
        "CONNECTION_OPEN" === e.type && _(e.countryCode),
          a.clear(),
          o.clear(),
          Object.values(i.default.getMutablePrivateChannels()).forEach(e => {
            f(e);
          }),
          (d = !0);
      }
      function g(e) {
        let { channelId: t } = e;
        o.add(t);
      }
      function m(e) {
        let { channel: t } = e;
        return f(t);
      }
      function h(e) {
        let { channels: t } = e;
        for (let e of t) f(e);
      }
      function v(e) {
        let { channel: t } = e;
        return !!a.has(t.id) && (a.delete(t.id), !0);
      }
      function E(e) {
        let { messageRequestChannelIds: t } = e;
        t.forEach(e => a.add(e));
      }
      function p(e) {
        let { countryCode: t } = e;
        _(t);
      }
      class y extends r.default {
        takeSnapshot() {
          return { version: y.LATEST_SNAPSHOT_VERSION, data: Array.from(a) };
        }
        getMessageRequestChannelIds() {
          return a;
        }
        getMessageRequestsCount() {
          return a.size;
        }
        isMessageRequest(e) {
          return a.has(e);
        }
        isAcceptedOptimistic(e) {
          return o.has(e);
        }
        getUserCountryCode() {
          return u;
        }
        isReady() {
          return d;
        }
        constructor() {
          super(),
            (this.loadCache = () => {
              let e = this.readSnapshot(y.LATEST_SNAPSHOT_VERSION);
              null != e && (a = new Set(e));
            }),
            this.registerActionHandlers({
              CONNECTION_OPEN: c,
              CONNECTION_OPEN_SUPPLEMENTAL: c,
              CACHE_LOADED_LAZY: this.loadCache,
              OVERLAY_INITIALIZE: E,
              CHANNEL_CREATE: m,
              CHANNEL_UPDATES: h,
              CHANNEL_DELETE: v,
              SET_LOCATION_METADATA: p,
              MESSAGE_REQUEST_ACCEPT_OPTIMISTIC: g,
            }),
            this.waitFor(i.default);
        }
      }
      (y.displayName = "MessageRequestStore"), (y.LATEST_SNAPSHOT_VERSION = 1);
      var T = new y();
    },
    415435: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          filterOutMessageRequestsAndSpam: function () {
            return r;
          },
          filterOutMessageRequestsAndSpamById: function () {
            return a;
          },
          isMessageRequestOrSpamRequest: function () {
            return o;
          },
          shouldShowMessageRequests: function () {
            return d;
          },
        }),
        n("222007"),
        n("808653");
      var s = n("288518"),
        i = n("486503");
      function r(e) {
        let [t, n] =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : [s.default, i.default],
          r = (function (e) {
            return Object.keys(e).map(t => [t, e[t]]);
          })(e),
          a = r.filter(e => {
            let [, s] = e;
            return !t.isMessageRequest(s.id) && !n.isSpam(s.id);
          });
        return (function (e) {
          return Array.from(e).reduce((e, t) => {
            let [n, s] = t;
            return Object.assign(e, { [n]: s });
          }, {});
        })(a);
      }
      function a(e) {
        let [t, n] =
          arguments.length > 1 && void 0 !== arguments[1]
            ? arguments[1]
            : [s.default, i.default];
        return e.filter(e => !t.isMessageRequest(e) && !n.isSpam(e));
      }
      function o(e) {
        let [t, n] =
          arguments.length > 1 && void 0 !== arguments[1]
            ? arguments[1]
            : [s.default, i.default];
        return t.isMessageRequest(e) || n.isSpam(e);
      }
      function d() {
        let [e, t] =
            arguments.length > 0 && void 0 !== arguments[0]
              ? arguments[0]
              : [s.default, i.default],
          n = t.getSpamChannelsCount(),
          r = e.getMessageRequestsCount();
        return r > 0 || n > 0;
      }
    },
    486503: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        }),
        n("222007");
      var s = n("42203"),
        i = n("455079");
      let r = new Set(),
        a = new Set(),
        o = !1;
      function d(e) {
        return e.isSpam;
      }
      function u(e) {
        let t = !1;
        if (e.isSpam && !r.has(e.id)) r.add(e.id), (t = !0);
        if (!e.isSpam && r.has(e.id)) r.delete(e.id), (t = !0);
        if (!e.isSpam && a.has(e.id)) a.delete(e.id), (t = !0);
        return t;
      }
      function l() {
        r.clear(),
          a.clear(),
          Object.values(s.default.getMutablePrivateChannels()).forEach(e => {
            u(e);
          }),
          (o = !0);
      }
      function f(e) {
        let { channelId: t } = e;
        a.add(t);
      }
      function _(e) {
        let { channel: t } = e;
        return u(t);
      }
      function c(e) {
        let { channels: t } = e;
        for (let e of t) u(e);
      }
      function g(e) {
        let { channel: t } = e,
          n = !1;
        return r.has(t.id) && (r.delete(t.id), (n = !0)), n;
      }
      class m extends i.default {
        takeSnapshot() {
          return { version: m.LATEST_SNAPSHOT_VERSION, data: Array.from(r) };
        }
        getSpamChannelIds() {
          return r;
        }
        getSpamChannelsCount() {
          return r.size;
        }
        isSpam(e) {
          return r.has(e);
        }
        isAcceptedOptimistic(e) {
          return a.has(e);
        }
        isReady() {
          return o;
        }
        constructor() {
          super(),
            (this.loadCache = () => {
              let e = this.readSnapshot(m.LATEST_SNAPSHOT_VERSION);
              null != e && (r = new Set(e));
            }),
            this.registerActionHandlers({
              CONNECTION_OPEN: l,
              CONNECTION_OPEN_SUPPLEMENTAL: l,
              CACHE_LOADED_LAZY: this.loadCache,
              CHANNEL_CREATE: _,
              CHANNEL_UPDATES: c,
              CHANNEL_DELETE: g,
              MESSAGE_REQUEST_ACCEPT_OPTIMISTIC: f,
            }),
            this.waitFor(s.default);
        }
      }
      (m.displayName = "SpamMessageRequestStore"),
        (m.LATEST_SNAPSHOT_VERSION = 1);
      var h = new m();
    },
    668273: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("862205");
      let i = (0, s.createExperiment)({
        kind: "user",
        id: "2024-01_chunked_message_attachment_uploads",
        label: "Use chunked uploads for message attachments",
        defaultConfig: { enabled: !1, chunkSize: 0 },
        treatments: [
          {
            id: 1,
            label: "Chunked message attachment uploads",
            config: { enabled: !0, chunkSize: 8388608 },
          },
        ],
      });
      var r = i;
    },
    875978: function (e, t, n) {
      "use strict";
      var s, i;
      n.r(t),
        n.d(t, {
          ReactionTypes: function () {
            return s;
          },
        }),
        ((i = s || (s = {}))[(i.NORMAL = 0)] = "NORMAL"),
        (i[(i.BURST = 1)] = "BURST"),
        (i[(i.VOTE = 2)] = "VOTE");
    },
    692038: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          createMessageRecord: function () {
            return y;
          },
          updateServerMessage: function () {
            return T;
          },
          updateMessageRecord: function () {
            return C;
          },
          canEditMessageWithStickers: function () {
            return N;
          },
        }),
        n("702976");
      var s = n("866227"),
        i = n.n(s),
        r = n("312016");
      n("584375");
      var a = n("552310"),
        o = n("24373"),
        d = n("459018"),
        u = n("719926"),
        l = n("766274"),
        f = n("271938"),
        _ = n("27618"),
        c = n("697218"),
        g = n("240873"),
        m = n("659632");
      n("773336"), n("158998");
      var h = n("406297");
      n("574073");
      var v = n("894488"),
        E = n("49111");
      n("782340");
      let p = new l.default({ id: "???", username: "???" });
      function y(e) {
        var t, n, s, o, g, v, y, T, C;
        let { reactions: N, interactionData: O } =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
          P =
            null !==
              (o =
                null === (t = e.mentions) || void 0 === t
                  ? void 0
                  : t.map(e => e.id)) && void 0 !== o
              ? o
              : [],
          b = null !== (g = e.mention_roles) && void 0 !== g ? g : [],
          V = null !== (v = e.mention_channels) && void 0 !== v ? v : [],
          R = e.message_reference,
          k = i(new Date(e.timestamp)),
          M =
            e.type === E.MessageTypes.THREAD_CREATED
              ? []
              : (0, r.default)(e.content);
        let w =
            null == (T = e).author
              ? p
              : null != T.webhook_id
                ? new l.default(T.author)
                : null !== (C = c.default.getUser(T.author.id)) && void 0 !== C
                  ? C
                  : new l.default(T.author),
          L = null == e ? void 0 : e.gift_info,
          U =
            null != e.interaction
              ? d.default.createFromServer(e.interaction)
              : null,
          G =
            e.type === E.MessageTypes.THREAD_STARTER_MESSAGE
              ? null === (s = e.referenced_message) || void 0 === s
                ? void 0
                : null === (n = s.author) || void 0 === n
                  ? void 0
                  : n.id
              : void 0,
          F = e.type === E.MessageTypes.PREMIUM_REFERRAL ? e.content : void 0,
          H = e.content;
        return (
          e.type === E.MessageTypes.PREMIUM_REFERRAL && (H = ""),
          new u.default({
            ...e,
            author: w,
            webhookId: e.webhook_id,
            blocked:
              _.default.isBlocked(w.id) ||
              (null != G && _.default.isBlocked(G)),
            timestamp: k,
            editedTimestamp:
              null != e.edited_timestamp
                ? i(new Date(e.edited_timestamp))
                : null,
            mentionEveryone: e.mention_everyone,
            mentions: P,
            mentionRoles: b,
            mentionChannels: V,
            messageReference: R,
            mentioned: (0, h.isMentioned)({
              userId: f.default.getId(),
              channelId: e.channel_id,
              mentionEveryone:
                null !== (y = e.mention_everyone) && void 0 !== y && y,
              mentionUsers: P,
              mentionRoles: b,
            }),
            attachments: S(e),
            embeds: A(e),
            codedLinks: M,
            giftCodes: (0, m.isGiftCodeEmbed)(e)
              ? (0, m.findGiftCodes)((null == e ? void 0 : e.embeds[0]).url)
              : (0, m.findGiftCodes)(e.content),
            content: H,
            referralTrialOfferId: F,
            call: I(e.call, k),
            reactions: D(null != N ? N : e.reactions),
            interaction: U,
            interactionData: null != O ? O : e.interaction_data,
            roleSubscriptionData: e.role_subscription_data,
            purchaseNotification: e.purchase_notification,
            poll: null == e.poll ? void 0 : (0, a.default)(e.poll),
            giftInfo: null == L ? void 0 : L,
          })
        );
      }
      function T(e, t) {
        return null != t.edited_timestamp
          ? {
              ...t,
              reactions: e.reactions,
              interaction_data: e.interaction_data,
            }
          : { ...e, ...t };
      }
      function C(e, t) {
        if (null != t.edited_timestamp)
          return y(t, {
            reactions: e.reactions,
            interactionData: e.interactionData,
          });
        let n = e;
        if (
          (null != t.call && (n = n.set("call", I(t.call, e.timestamp))),
          null != t.attachments && (n = n.set("attachments", S(t))),
          null != t.content &&
            "" !== t.content &&
            (n = n.set("content", t.content)),
          null != t.embeds && (n = n.set("embeds", A(t))),
          t.pinned !== n.pinned && (n = n.set("pinned", t.pinned)),
          null != n.webhookId &&
            null != t.author &&
            (n = n.set("author", new l.default(t.author))),
          null != t.flags &&
            t.flags !== n.flags &&
            (n = n.set("flags", t.flags)),
          null != t.components && (n = n.set("components", t.components)),
          null != t.role_subscription_data &&
            (n = n.set("roleSubscriptionData", t.role_subscription_data)),
          null != t.reactions)
        ) {
          var s;
          n = n.set(
            "reactions",
            D(null !== (s = e.reactions) && void 0 !== s ? s : t.reactions)
          );
        }
        return null != t.poll && (n = n.set("poll", (0, a.default)(t.poll))), n;
      }
      function S(e) {
        return null == e.attachments
          ? []
          : e.attachments.map(e => ({
              ...e,
              spoiler: e.filename.startsWith(v.SPOILER_ATTACHMENT_PREFIX),
            }));
      }
      function I(e, t) {
        if (null != e) {
          let n =
              null != e.ended_timestamp ? i(new Date(e.ended_timestamp)) : null,
            s = null != n ? i.duration(n.diff(t)) : null;
          return {
            participants: e.participants,
            endedTimestamp: n,
            duration: s,
          };
        }
        return null;
      }
      function A(e) {
        if (null == e.embeds) return [];
        let t = e.embeds.map(t => (0, g.sanitizeEmbed)(e.channel_id, e.id, t));
        return (0, g.mergeEmbedsOnURL)(t);
      }
      function D(e) {
        return null == e
          ? []
          : e.map(e => {
              let t = { ...e };
              if ((null == t ? void 0 : t.count_details) != null) {
                var n, s;
                (t.burst_count =
                  null !== (n = t.count_details.burst) && void 0 !== n ? n : 0),
                  (t.count =
                    null !== (s = t.count_details.normal) && void 0 !== s
                      ? s
                      : 0);
              }
              return (
                t.count < 0 && (t.count = 0),
                t.burst_count < 0 && (t.burst_count = 0),
                t
              );
            });
      }
      let N = e => {
        let t = (0, o.getMessageStickers)(e);
        return 0 === t.length || "" !== e.content;
      };
    },
    61400: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
      var s = n("692038"),
        i = n("913491"),
        r = n("49111");
      function a(e, t) {
        return (
          !(
            null == t ||
            e.author.id !== t ||
            e.state !== r.MessageStates.SENT ||
            (0, i.default)(e) ||
            !(0, s.canEditMessageWithStickers)(e) ||
            e.hasFlag(r.MessageFlags.IS_VOICE_MESSAGE) ||
            null != e.referralTrialOfferId ||
            e.isPoll()
          ) && !0
        );
      }
    },
    406297: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
          isRawMessageMentioned: function () {
            return o;
          },
          isMentioned: function () {
            return d;
          },
        });
      var s = n("42203"),
        i = n("26989"),
        r = n("305961");
      function a(e) {
        let {
          message: t,
          userId: n,
          suppressEveryone: s = !1,
          suppressRoles: i = !1,
        } = e;
        return d({
          userId: n,
          channelId: t.channel_id,
          mentionEveryone: t.mentionEveryone,
          mentionUsers: t.mentions,
          mentionRoles: t.mentionRoles,
          suppressEveryone: s,
          suppressRoles: i,
        });
      }
      function o(e) {
        var t, n, s, i;
        let {
          rawMessage: r,
          userId: a,
          suppressEveryone: o = !1,
          suppressRoles: u = !1,
        } = e;
        return d({
          userId: a,
          channelId: r.channel_id,
          mentionEveryone:
            null !== (n = r.mention_everyone) && void 0 !== n && n,
          mentionUsers:
            null !==
              (s =
                null === (t = r.mentions) || void 0 === t
                  ? void 0
                  : t.map(e => e.id)) && void 0 !== s
              ? s
              : [],
          mentionRoles: null !== (i = r.mention_roles) && void 0 !== i ? i : [],
          suppressEveryone: o,
          suppressRoles: u,
        });
      }
      function d(e) {
        let {
          userId: t,
          channelId: n,
          mentionEveryone: a,
          mentionUsers: o,
          mentionRoles: d,
          suppressEveryone: u = !1,
          suppressRoles: l = !1,
        } = e;
        if ((a && !u) || o.includes(t)) return !0;
        if (l || null == d || 0 === d.length) return !1;
        let f = s.default.getChannel(n);
        if (null == f) return !1;
        let _ = f.getGuildId();
        if (null == _) return !1;
        let c = r.default.getGuild(_);
        if (null == c) return !1;
        let g = i.default.getMember(_, t);
        return null != g && d.some(e => g.roles.includes(e));
      }
    },
    913491: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var s = n("637612");
      function i(e) {
        return !s.MessageTypesSets.USER_MESSAGE.has(e.type);
      }
    },
    574073: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
          useNullableMessageAuthor: function () {
            return c;
          },
          getMessageAuthor: function () {
            return g;
          },
          useNullableUserAuthor: function () {
            return m;
          },
          getUserAuthor: function () {
            return h;
          },
        });
      var s = n("627445"),
        i = n.n(s),
        r = n("446674"),
        a = n("42203"),
        o = n("26989"),
        d = n("305961"),
        u = n("27618"),
        l = n("697218"),
        f = n("158998");
      function _(e) {
        let t = c(e);
        return (
          i(null != t, "Result cannot be null because the message is not null"),
          t
        );
      }
      function c(e) {
        var t;
        let n = (0, r.useStateFromStores)([a.default], () =>
            null == e ? null : a.default.getChannel(e.channel_id)
          ),
          s =
            null == e
              ? void 0
              : null === (t = e.author) || void 0 === t
                ? void 0
                : t.id,
          i = null == n ? void 0 : n.guild_id,
          _ = (0, r.useStateFromStores)([o.default], () =>
            null == i || null == s ? null : o.default.getMember(i, s)
          ),
          c = (0, r.useStateFromStores)(
            [l.default],
            () => l.default.getUser(s),
            [s]
          ),
          g = f.default.useName(
            (null == e ? void 0 : e.author.bot)
              ? null == e
                ? void 0
                : e.author
              : c
          ),
          m = (0, r.useStateFromStores)([d.default], () =>
            d.default.getGuild(i)
          ),
          h = (0, r.useStateFromStores)([u.default], () =>
            null != s && (null == n ? void 0 : n.isPrivate())
              ? u.default.getNickname(s)
              : null
          );
        return null == e
          ? null
          : v({
              user: e.author,
              channel: n,
              guild: m,
              userName: g,
              member: _,
              friendNickname: h,
            });
      }
      function g(e) {
        let t = a.default.getChannel(e.channel_id);
        return h(e.author, t);
      }
      function m(e, t) {
        let n = null == e ? void 0 : e.id,
          s = null == t ? void 0 : t.guild_id,
          i = (0, r.useStateFromStores)([o.default], () =>
            null == s || null == n ? null : o.default.getMember(s, n)
          ),
          a = (0, r.useStateFromStores)([d.default], () =>
            d.default.getGuild(s)
          ),
          l = (0, r.useStateFromStores)([u.default], () =>
            null != n && (null == t ? void 0 : t.isPrivate())
              ? u.default.getNickname(n)
              : null
          ),
          _ = f.default.useName(e);
        return v({
          user: e,
          channel: t,
          guild: a,
          member: i,
          userName: _,
          friendNickname: l,
        });
      }
      function h(e, t) {
        let n = null == e ? void 0 : e.id,
          s = null == t ? void 0 : t.guild_id,
          i = d.default.getGuild(s),
          r = null == s || null == n ? null : o.default.getMember(s, n),
          a =
            null != n && null != t && t.isPrivate()
              ? u.default.getNickname(n)
              : null;
        return v({
          user: e,
          channel: t,
          guild: i,
          member: r,
          friendNickname: a,
        });
      }
      function v(e) {
        var t, n, s;
        let {
            user: i,
            channel: r,
            guild: a,
            member: o,
            userName: d,
            friendNickname: u,
          } = e,
          l = null == i ? "???" : null != d ? d : f.default.getName(i);
        return (null == i ? void 0 : i.id) == null || null == r
          ? { nick: l, colorString: void 0 }
          : (null == a ? void 0 : a.id) == null
            ? { nick: null != u ? u : l, colorString: void 0 }
            : null == o
              ? { nick: l, colorString: void 0 }
              : {
                  nick: null !== (n = o.nick) && void 0 !== n ? n : l,
                  colorString:
                    null !== (s = o.colorString) && void 0 !== s ? s : void 0,
                  colorRoleName:
                    null != o.colorRoleId
                      ? null == a
                        ? void 0
                        : null === (t = a.roles[o.colorRoleId]) || void 0 === t
                          ? void 0
                          : t.name
                      : void 0,
                  iconRoleId: o.iconRoleId,
                  guildMemberAvatar: o.avatar,
                };
      }
    },
    760797: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          MIDJOURNEY_GUILD_ID: function () {
            return s;
          },
          MIDJOURNEY_BOT_ID: function () {
            return i;
          },
        });
      let s = "662267976984297473",
        i = "936929561302675456";
    },
    256896: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          isEligibleForMidjourneyOnboarding: function () {
            return i;
          },
        });
      var s = n("924593");
      function i(e) {
        let { enabled: t } = s.MidjourneyOnboardingExperiment.getCurrentConfig({
          location: e,
        });
        return t;
      }
    },
    924593: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          MidjourneyOnboardingExperiment: function () {
            return i;
          },
        });
      var s = n("862205");
      let i = (0, s.createExperiment)({
        kind: "user",
        id: "2023-11_midjourney_onboarding",
        label: "Midjourney Onboarding",
        defaultConfig: { enabled: !1 },
        treatments: [
          {
            id: 1,
            label:
              "Enables the accelerated Midjourney Onboarding & Discord experience for the user.",
            config: { enabled: !0 },
          },
        ],
      });
    },
    894887: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          isMidjourneyOnboardingFlow: function () {
            return o;
          },
          isEligibleForMidjourneyRedirect: function () {
            return d;
          },
          hasRedirectedToGuild: function () {
            return u;
          },
        }),
        n("446674");
      var s = n("305961"),
        i = n("162771"),
        r = n("256896"),
        a = n("760797");
      function o(e) {
        let { guildStore: t } =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
          n = null != t ? t : s.default,
          i = n.getGuild(a.MIDJOURNEY_GUILD_ID),
          o =
            (null == i ? void 0 : i.joinedAt) instanceof Date &&
            Date.now() - i.joinedAt.getTime() <= 36e5;
        return (
          1 === n.getGuildCount() &&
          o &&
          (0, r.isEligibleForMidjourneyOnboarding)(e)
        );
      }
      function d(e) {
        return (
          e.isDM() &&
          1 === e.rawRecipients.length &&
          e.rawRecipients[0].id === a.MIDJOURNEY_BOT_ID &&
          o("app")
        );
      }
      function u(e) {
        return new Promise((t, n) => {
          if (i.default.getGuildId() === e) {
            t();
            return;
          }
          let s = setTimeout(() => {
              a(), n();
            }, 3e3),
            r = () => {
              i.default.getGuildId() === e && (a(), t());
            },
            a = () => {
              i.default.removeChangeListener(r), clearTimeout(s);
            };
          i.default.addChangeListener(r);
        });
      }
    },
    618421: function (e, t, n) {
      "use strict";
      function s() {
        return !1;
      }
      function i() {
        return null;
      }
      n.r(t),
        n.d(t, {
          isSlowNetwork: function () {
            return s;
          },
          getSignalStrength: function () {
            return i;
          },
        });
    },
    913796: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useInDesktopNotificationCenterExperiment: function () {
            return a;
          },
          inDesktopNotificationCenterExperiment: function () {
            return o;
          },
        });
      var s = n("884691"),
        i = n("862205");
      let r = (0, i.createExperiment)({
          kind: "user",
          id: "2022-11_desktop_notification_center",
          label: "Desktop notification center",
          defaultConfig: { enabled: !1 },
          treatments: [
            {
              id: 1,
              label: "Notification center desktop enabled",
              config: { enabled: !0 },
            },
          ],
        }),
        a = () => {
          let { enabled: e } = r.useExperiment(
            { location: "b8976e_1" },
            { autoTrackExposure: !1 }
          );
          return (
            s.useEffect(() => {
              r.trackExposure({ location: "b8976e_2" });
            }, []),
            e
          );
        },
        o = () => {
          let { enabled: e } = r.getCurrentConfig(
            { location: "b8976e_3" },
            { autoTrackExposure: !1 }
          );
          return e;
        };
    },
    136511: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return A;
          },
        }),
        n("222007"),
        n("424973");
      var s = n("446674"),
        i = n("913144"),
        r = n("398604");
      n("21121");
      var a = n("692038"),
        o = n("719926"),
        d = n("305961");
      n("27618");
      var u = n("697218"),
        l = n("299039"),
        f = n("159885");
      n("158998");
      var _ = n("360191"),
        c = n("342176"),
        g = n("49111"),
        m = n("782340");
      let h = {
        loading: !1,
        initialized: !1,
        errored: !1,
        isDataStale: !1,
        notifCenterItems: [],
        staleNotifCenterItems: [],
        notifCenterIds: new Set(),
        notifCenterLocalItems: [],
        paginationHasMore: !0,
        paginationCursor: void 0,
        notifCenterActive: !1,
        notifCenterTabFocused: !1,
      };
      function v(e) {
        return null != e.id && null != e.body && null != e.type;
      }
      function E() {
        h = {
          loading: !1,
          initialized: !1,
          errored: !1,
          isDataStale: !1,
          notifCenterItems: [],
          staleNotifCenterItems: [],
          notifCenterIds: new Set(),
          notifCenterLocalItems: [],
          paginationHasMore: !0,
          paginationCursor: void 0,
          notifCenterActive: !1,
          notifCenterTabFocused: !1,
        };
      }
      function p(e) {
        return {
          ...e,
          kind: "notification-center-item",
          message:
            null != e.message ? (0, a.createMessageRecord)(e.message) : void 0,
        };
      }
      function y(e) {
        let t =
          "NOTIFICATION_CENTER_ITEM_CREATE" === e.type ? p(e.item) : e.item;
        if (!h.initialized || !v(t) || h.notifCenterIds.has(t.id)) return !1;
        h.notifCenterIds.add(t.id),
          (h.notifCenterItems = [t, ...h.notifCenterItems]),
          h.notifCenterItems.sort((e, t) => l.default.compare(t.id, e.id));
      }
      function T(e, t) {
        h.notifCenterItems = h.notifCenterItems
          .map(n => (e.includes(n.id) ? { ...n, acked: t } : n))
          .filter(v);
      }
      function C(e, t, n) {
        var s;
        return (
          e.type === t &&
          (null === (s = e.other_user) || void 0 === s ? void 0 : s.id) === n
        );
      }
      function S(e) {
        var t;
        if (!(0, r.isGuildEventEnded)(e)) return;
        let n = t =>
            t.type ===
              _.NotificationCenterItems.GUILD_SCHEDULED_EVENT_STARTED &&
            t.guild_scheduled_event_id === e.id,
          s = e.name,
          i =
            null === (t = d.default.getGuild(e.guild_id)) || void 0 === t
              ? void 0
              : t.name;
        h.notifCenterItems = h.notifCenterItems.map(e =>
          n(e)
            ? {
                ...e,
                disable_action: !0,
                body:
                  (0, f.isNullOrEmpty)(i) || (0, f.isNullOrEmpty)(s)
                    ? e.body
                    : m.default.Messages.NOTIFICATION_CENTER_GUILD_SCHEDULED_EVENT_ENDED.format(
                        { event_name: s, guild_name: i }
                      ),
              }
            : e
        );
      }
      class I extends s.default.PersistedStore {
        initialize(e) {
          if ((this.waitFor(u.default), null != e)) {
            let t = e.notifCenterItems.map(e => ({
              ...e,
              message: null != e.message ? new o.default(e.message) : void 0,
            }));
            t.length > 0 &&
              (h = {
                ...h,
                initialized: !0,
                isDataStale: !0,
                notifCenterItems: [],
                staleNotifCenterItems: t,
              });
          }
        }
        getState() {
          let e = e => ({
            ...e,
            message: null != e.message ? e.message.toJS() : void 0,
          });
          return {
            ...h,
            notifCenterItems: h.notifCenterItems.map(e),
            staleNotifCenterItems: h.staleNotifCenterItems.map(e),
          };
        }
        get loading() {
          return h.loading;
        }
        get initialized() {
          return h.initialized;
        }
        get items() {
          return h.isDataStale ? h.staleNotifCenterItems : h.notifCenterItems;
        }
        get hasMore() {
          return h.paginationHasMore;
        }
        get cursor() {
          return h.paginationCursor;
        }
        get errored() {
          return h.errored;
        }
        get active() {
          return h.notifCenterActive;
        }
        get localItems() {
          return h.notifCenterLocalItems;
        }
        get tabFocused() {
          return h.notifCenterTabFocused;
        }
      }
      (I.displayName = "NotificationCenterItemsStore"),
        (I.persistKey = "NotificationCenterItemsStore_v2");
      var A = new I(i.default, {
        CONNECTION_OPEN: function (e) {
          E(),
            m.default.initialLanguageLoad.then(() => {
              let t = [];
              e.relationships.forEach(e => {
                let { type: n, user: s, since: i } = e;
                if (
                  n !== g.RelationshipTypes.PENDING_INCOMING ||
                  null == s ||
                  null == i
                )
                  return null;
                let r = u.default.getUser(s.id);
                if (null == r) return null;
                let a = (0, c.incomingFriendRequestLocalItem)(r, i);
                t.push(a);
              }),
                e.guilds.forEach(e => {
                  e.guild_scheduled_events.forEach(e => {
                    S(e);
                  });
                }),
                (h.notifCenterLocalItems = t);
            });
        },
        LOGOUT: E,
        NOTIFICATION_CENTER_ITEMS_ACK: function (e) {
          let { ids: t } = e;
          T(t, !0);
        },
        NOTIFICATION_CENTER_ITEMS_ACK_FAILURE: function (e) {
          let { ids: t } = e;
          T(t, !1);
        },
        GUILD_SCHEDULED_EVENT_UPDATE: function (e) {
          let { guildScheduledEvent: t } = e;
          S(t);
        },
        NOTIFICATION_CENTER_ITEM_CREATE: y,
        NOTIFICATION_CENTER_ITEM_DELETE: function (e) {
          let { id: t } = e;
          if (!h.notifCenterIds.has(t)) return !1;
          h.notifCenterIds.delete(t),
            (h.notifCenterItems = h.notifCenterItems.filter(e => e.id !== t));
        },
        NOTIFICATION_CENTER_ITEM_DELETE_FAILURE: y,
        LOAD_NOTIFICATION_CENTER_ITEMS: function () {
          h.loading = !0;
        },
        LOAD_NOTIFICATION_CENTER_ITEMS_FAILURE: function () {
          (h.loading = !1), (h.initialized = !0), (h.errored = !0);
        },
        LOAD_NOTIFICATION_CENTER_ITEMS_SUCCESS: function (e) {
          let { items: t, hasMore: n, cursor: s } = e;
          h.loading &&
            ((h.loading = !1),
            (h.initialized = !0),
            (h.errored = !1),
            (h.isDataStale = !1),
            (null == s || !h.notifCenterIds.has(s)) &&
              ((h.paginationHasMore = t.length > 0 && n),
              (h.paginationCursor = t.length > 0 ? s : void 0)),
            (h.notifCenterItems = [
              ...h.notifCenterItems,
              ...t.map(p).filter(e => !h.notifCenterIds.has(e.id)),
            ]),
            h.notifCenterItems.sort((e, t) => l.default.compare(t.id, e.id)),
            t.forEach(e => h.notifCenterIds.add(e.id)));
        },
        RESET_NOTIFICATION_CENTER: E,
        NOTIFICATION_CENTER_SET_ACTIVE: function (e) {
          let { active: t } = e;
          h.notifCenterActive = t;
        },
        NOTIFICATION_CENTER_TAB_FOCUSED: function (e) {
          let { focused: t } = e;
          h.notifCenterTabFocused = t;
        },
        RELATIONSHIP_ADD: function (e) {
          if (e.relationship.type === g.RelationshipTypes.PENDING_INCOMING) {
            let { user: t, since: n } = e.relationship;
            if (null == n) return null;
            let s = u.default.getUser(t.id);
            if (null == s) return null;
            h.notifCenterLocalItems = [
              ...h.notifCenterLocalItems,
              (0, c.incomingFriendRequestLocalItem)(s, n),
            ];
          }
          e.relationship.type === g.RelationshipTypes.FRIEND &&
            (h.notifCenterLocalItems = h.notifCenterLocalItems.map(t => {
              if (
                C(
                  t,
                  _.NotificationCenterLocalItems.INCOMING_FRIEND_REQUESTS,
                  e.relationship.user.id
                )
              ) {
                var n;
                let s = u.default.getUser(e.relationship.user.id);
                return {
                  ...t,
                  acked: !0,
                  forceUnacked: !1,
                  local_id: "incoming_friend_requests_accepted_"
                    .concat(e.relationship.user.id, "_")
                    .concat(t.id),
                  type: _.NotificationCenterLocalItems
                    .INCOMING_FRIEND_REQUESTS_ACCEPTED,
                  body: m.default.Messages.NOTIFICATION_CENTER_INCOMING_FRIEND_REQUEST_ACCEPTED.format(
                    {
                      username: "**".concat(
                        null !== (n = null == s ? void 0 : s.globalName) &&
                          void 0 !== n
                          ? n
                          : e.relationship.user.username,
                        "**"
                      ),
                    }
                  ),
                };
              }
              return t;
            }));
        },
        RELATIONSHIP_REMOVE: function (e) {
          h.notifCenterLocalItems = h.notifCenterLocalItems.filter(
            t =>
              !(
                C(
                  t,
                  _.NotificationCenterLocalItems.INCOMING_FRIEND_REQUESTS,
                  e.relationship.id
                ) ||
                C(
                  t,
                  _.NotificationCenterLocalItems
                    .INCOMING_FRIEND_REQUESTS_ACCEPTED,
                  e.relationship.id
                )
              ) && !0
          );
        },
        NOTIFICATION_CENTER_ITEM_COMPLETED: function (e) {
          let { item_enum: t } = e;
          h.notifCenterItems = h.notifCenterItems
            .map(e =>
              e.item_enum === t ? { ...e, completed: !0, acked: !0 } : e
            )
            .filter(v);
        },
        NOTIFICATION_CENTER_ITEM_UPDATE: function (e) {
          let { item: t } = e;
          h.notifCenterItems = h.notifCenterItems
            .map(e => (e.id === t.id ? t : e))
            .filter(v);
        },
        SET_RECENT_MENTIONS_FILTER: E,
        MOBILE_NATIVE_UPDATE_CHECK_FINISHED: function (e) {
          let { newBuild: t } = e;
          if (null !== t) {
            let e = (0, c.mobileNativeUpdateAvailableLocalItem)(t);
            void 0 ===
              h.notifCenterLocalItems.find(t => t.local_id === e.local_id) &&
              (h.notifCenterLocalItems = [
                ...h.notifCenterLocalItems.filter(t => t.kind !== e.kind),
                e,
              ]);
          }
        },
      });
    },
    360191: function (e, t, n) {
      "use strict";
      var s, i, r, a, o, d, u, l, f, _, c;
      n.r(t),
        n.d(t, {
          ItemEnum: function () {
            return i;
          },
          NotificationCenterActionTypes: function () {
            return r;
          },
          NotificationCenterTabs: function () {
            return a;
          },
          NotificationCenterItems: function () {
            return o;
          },
          NotificationCenterLocalItems: function () {
            return d;
          },
        }),
        ((s || (s = {})).LANDING = "notification_center_landing"),
        ((u = i || (i = {}))[(u.UPDATE_PROFILE = 0)] = "UPDATE_PROFILE"),
        (u[(u.FIND_FRIENDS = 1)] = "FIND_FRIENDS"),
        (u[(u.ADD_FRIEND = 2)] = "ADD_FRIEND"),
        (u[(u.FIRST_MESSAGE = 3)] = "FIRST_MESSAGE"),
        ((l = r || (r = {})).MARK_ALL_READ = "mark_all_read"),
        (l.CLICKED = "clicked"),
        (l.FRIEND_REQUESTS_BUTTON_CLICK = "friend_requests_button_click"),
        (l.ACTION_BUTTON = "action_button"),
        ((f = a || (a = {})).ForYou = "ForYou"),
        (f.Mentions = "Mentions"),
        (f.MessageReminders = "MessageReminders"),
        ((_ = o || (o = {})).GO_LIVE_PUSH = "go_live_push"),
        (_.FRIEND_REQUEST_ACCEPTED = "friend_request_accepted"),
        (_.FRIEND_REQUEST_PENDING = "friend_request_pending"),
        (_.FRIEND_SUGGESTION_CREATED = "friend_suggestion_created"),
        (_.FRIEND_REQUEST_REMINDER = "friend_request_reminder"),
        (_.DM_FRIEND_NUDGE = "dm_friend_nudge"),
        (_.RECENT_MENTION = "recent_mention"),
        (_.REPLY_MENTION = "reply_mention"),
        (_.GUILD_SCHEDULED_EVENT_STARTED = "scheduled_guild_event_started"),
        (_.SYSTEM_DEMO = "system_demo"),
        (_.MISSED_MESSAGES = "missed_messages"),
        (_.TOP_MESSAGES = "top_messages"),
        (_.LIFECYCLE_ITEM = "lifecycle_item"),
        (_.TRENDING_CONTENT = "trending_content"),
        ((c = d || (d = {})).INCOMING_FRIEND_REQUESTS =
          "INCOMING_FRIEND_REQUESTS"),
        (c.INCOMING_FRIEND_REQUESTS_ACCEPTED =
          "INCOMING_FRIEND_REQUESTS_ACCEPTED"),
        (c.FRIEND_REQUESTS_GROUPED = "FRIEND_REQUESTS_GROUPED"),
        (c.MOBILE_NATIVE_UPDATE_AVAILABLE = "MOBILE_NATIVE_UPDATE_AVAILABLE");
    },
    342176: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getRelativeTimestamp: function () {
            return u;
          },
          isRemoteAcked: function () {
            return l;
          },
          incomingFriendRequestLocalItem: function () {
            return f;
          },
          mobileNativeUpdateAvailableLocalItem: function () {
            return _;
          },
          isMentionItem: function () {
            return c;
          },
          inNotificationCenterEnabled: function () {
            return g;
          },
        });
      var s = n("249654"),
        i = n("845579"),
        r = n("913796"),
        a = n("360191"),
        o = n("581091"),
        d = n("782340");
      let u = function (e) {
          let t =
            !(arguments.length > 1) || void 0 === arguments[1] || arguments[1];
          return (0, o.default)({
            since: e,
            getFormatter: t ? o.getAbbreviatedFormatter : o.getFullFormatter,
          });
        },
        l = (e, t) =>
          e.acked ||
          (t !== i.NOTIFICATION_CENTER_ACKED_BEFORE_ID_UNSET &&
            s.default.compare(t, e.id) >= 0);
      function f(e, t) {
        var n;
        let i = s.default.fromTimestamp(new Date(t).getTime());
        return {
          acked: !1,
          forceUnacked: !0,
          other_user: e,
          kind: "notification-center-item",
          local_id: "incoming_friend_requests_".concat(e.id, "_").concat(i),
          deeplink: "https://discord.com/users/".concat(e.id),
          type: a.NotificationCenterLocalItems.INCOMING_FRIEND_REQUESTS,
          id: i,
          body: d.default.Messages.NOTIFICATION_CENTER_INCOMING_FRIEND_REQUEST.format(
            {
              username: "**".concat(
                null !== (n = e.globalName) && void 0 !== n ? n : e.username,
                "**"
              ),
            }
          ),
        };
      }
      function _(e) {
        let t = s.default.fromTimestamp(new Date().getTime());
        return {
          acked: !1,
          enableBadge: !0,
          body: "Update to build ".concat(e.build, " available!"),
          id: t,
          kind: "notification-center-item",
          local_id: "mobile_update_available_".concat(e.build),
          type: a.NotificationCenterLocalItems.MOBILE_NATIVE_UPDATE_AVAILABLE,
          deeplink: e.urls.install.toString(),
        };
      }
      let c = e =>
        e.type === a.NotificationCenterItems.RECENT_MENTION ||
        e.type === a.NotificationCenterItems.REPLY_MENTION;
      function g() {
        return (0, r.inDesktopNotificationCenterExperiment)();
      }
    },
    581091: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getAbbreviatedFormatter: function () {
            return l;
          },
          getFullFormatter: function () {
            return f;
          },
          default: function () {
            return _;
          },
        });
      var s = n("866227"),
        i = n.n(s),
        r = n("782340");
      let a = 3600,
        o = 24 * a,
        d = 30 * o,
        u = 12 * d,
        l = () => ({
          minutes: r.default.Messages.DURATION_MINUTES_SHORT,
          hours: r.default.Messages.DURATION_HOURS_SHORT,
          days: r.default.Messages.DURATION_DAYS_SHORT,
          months: r.default.Messages.DURATION_MONTHS_SHORT,
          years: r.default.Messages.DURATION_YEARS_SHORT,
        }),
        f = () => ({
          minutes: r.default.Messages.DURATION_MINUTES_AGO,
          hours: r.default.Messages.DURATION_HOURS_AGO,
          days: r.default.Messages.DURATION_DAYS_AGO,
          months: r.default.Messages.DURATION_MONTHS_AGO,
          years: r.default.Messages.DURATION_YEARS_AGO,
        });
      function _(e) {
        let { since: t, getFormatter: n } = e,
          s = i().diff(i(t), "s"),
          r = n(),
          l = i(t).format("LL");
        return (l =
          s < 60
            ? r.minutes.format({ minutes: 1 })
            : s < a
              ? r.minutes.format({ minutes: Math.floor(s / 60) })
              : s < o
                ? r.hours.format({ hours: Math.floor(s / a) })
                : s < d
                  ? r.days.format({ days: Math.floor(s / o) })
                  : s < u
                    ? r.months.format({ months: Math.floor(s / d) })
                    : r.years.format({ years: Math.floor(s / u) }));
      }
    },
    507313: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          Presets: function () {
            return s;
          },
          presetFromSettings: function () {
            return u;
          },
          presetName: function () {
            return l;
          },
        }),
        n("794252");
      var s,
        i,
        r = n("506838"),
        a = n("49111"),
        o = n("133335"),
        d = n("782340");
      function u(e, t) {
        return (0, r.match)([t, e])
          .with(
            [
              a.UserNotificationSettings.ALL_MESSAGES,
              o.UnreadSetting.ALL_MESSAGES,
            ],
            () => "all_messages"
          )
          .with(
            [a.UserNotificationSettings.ONLY_MENTIONS, o.UnreadSetting.UNSET],
            () => "mentions"
          )
          .with(
            [
              a.UserNotificationSettings.ONLY_MENTIONS,
              o.UnreadSetting.ONLY_MENTIONS,
            ],
            () => "mentions"
          )
          .with(
            [a.UserNotificationSettings.NO_MESSAGES, o.UnreadSetting.UNSET],
            () => "nothing"
          )
          .with(
            [
              a.UserNotificationSettings.NO_MESSAGES,
              o.UnreadSetting.ONLY_MENTIONS,
            ],
            () => "nothing"
          )
          .otherwise(() => "custom");
      }
      function l(e) {
        return (0, r.match)(e)
          .with("all_messages", () => d.default.Messages.NOTIFICATION_PRESET_1)
          .with("mentions", () => d.default.Messages.NOTIFICATION_PRESET_2)
          .with("nothing", () => d.default.Messages.NOTIFICATION_PRESET_3)
          .with("custom", () => d.default.Messages.NOTIFICATION_PRESET_CUSTOM)
          .exhaustive();
      }
      ((i = s || (s = {})).ALL_MESSAGES = "all_messages"),
        (i.MENTIONS = "mentions"),
        (i.NOTHING = "nothing"),
        (i.CUSTOM = "custom");
    },
    872825: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          filterScopes: function () {
            return f;
          },
          parseOAuth2AuthorizeProps: function () {
            return _;
          },
        }),
        n("424973");
      var s = n("730290"),
        i = n("891189"),
        r = n("316693"),
        a = n("42203"),
        o = n("162771"),
        d = n("991170"),
        u = n("29479"),
        l = n("843455");
      function f(e) {
        let t = e.filter(e => !u.RemovedScopes.includes(e));
        return (
          t.includes(l.OAuth2Scopes.BOT) &&
            !t.includes(l.OAuth2Scopes.APPLICATIONS_COMMANDS) &&
            t.push(l.OAuth2Scopes.APPLICATIONS_COMMANDS),
          t
        );
      }
      function _(e) {
        var t, n, u, l, f, _;
        let c = (0, s.parse)(e, { arrayFormat: "bracket" }),
          g = d.default.NONE;
        try {
          g = r.default.deserialize(
            null != c.permissions && "" !== c.permissions ? c.permissions : "0"
          );
        } catch (e) {}
        let m = c.channel_id,
          h =
            null !==
              (l =
                null !==
                  (u =
                    null !== (n = c.guild_id) && void 0 !== n
                      ? n
                      : null === (t = a.default.getChannel(m)) || void 0 === t
                        ? void 0
                        : t.guild_id) && void 0 !== u
                  ? u
                  : o.default.getGuildId()) && void 0 !== l
              ? l
              : void 0;
        return {
          clientId: null !== (f = c.client_id) && void 0 !== f ? f : "",
          scopes: (null !== (_ = c.scope) && void 0 !== _ ? _ : "")
            .split(" ")
            .filter(e => e.length > 0),
          responseType: c.response_type,
          redirectUri: c.redirect_uri,
          codeChallenge: c.code_challenge,
          codeChallengeMethod: c.code_challenge_method,
          state: c.state,
          permissions: g,
          channelId: m,
          guildId: h,
          prompt: c.prompt,
          disableGuildSelect: "true" === c.disable_guild_select,
          userInstall:
            c.integration_type ===
            i.ApplicationIntegrationType.USER_INSTALL.toString(),
        };
      }
    },
    955145: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getApplicationDetailsText: function () {
            return i;
          },
        });
      var s = n("782340");
      function i(e) {
        if (null != e.privacy_policy_url && null != e.terms_of_service_url)
          return s.default.Messages.OAUTH2_DETAILS_PRIVACY_POLICY_WITH_LINKS.format(
            {
              application: e.name,
              privacyPolicyURL: e.privacy_policy_url,
              termsOfServiceURL: e.terms_of_service_url,
            }
          );
        if (null != e.privacy_policy_url)
          return s.default.Messages.OAUTH2_DETAILS_PRIVACY_POLICY_WITH_PRIVACY_POLICY_LINK.format(
            { application: e.name, privacyPolicyURL: e.privacy_policy_url }
          );
        if (null != e.terms_of_service_url)
          return s.default.Messages.OAUTH2_DETAILS_PRIVACY_POLICY_WITH_TERMS_OF_SERVICE_LINK.format(
            { application: e.name, termsOfServiceURL: e.terms_of_service_url }
          );
        return s.default.Messages.OAUTH2_DETAILS_PRIVACY_POLICY.format({
          application: e.name,
        });
      }
    },
    8222: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          acceptWhitelist: function () {
            return d;
          },
          authorize: function () {
            return u;
          },
          fetchAuthorization: function () {
            return l;
          },
          fetchChannels: function () {
            return f;
          },
          logoutWithRedirect: function () {
            return _;
          },
          verifyUserCode: function () {
            return c;
          },
          finishUserCode: function () {
            return g;
          },
          finishUserCodeTwoWayLinkError: function () {
            return m;
          },
        });
      var s = n("891189"),
        i = n("447669"),
        r = n("872717"),
        a = n("437822"),
        o = n("49111");
      function d(e) {
        return r.default.post({
          url: o.Endpoints.OAUTH2_WHITELIST_ACCEPT,
          query: { token: e },
          oldFormErrors: !0,
        });
      }
      async function u(e) {
        let {
            authorize: t,
            clientId: n,
            scopes: i,
            responseType: a,
            redirectUri: d,
            codeChallenge: u,
            codeChallengeMethod: l,
            state: f,
            permissions: _,
            guildId: c,
            channelId: g,
            userInstall: m,
          } = e,
          h = await r.default.post({
            url: o.Endpoints.OAUTH2_AUTHORIZE,
            query: {
              client_id: n,
              response_type: a,
              redirect_uri: d,
              code_challenge: u,
              code_challenge_method: l,
              scope: i.join(" "),
              state: f,
            },
            body: {
              guild_id: c,
              webhook_channel_id: null != c && null != g ? g : void 0,
              channel_id: null == c && null != g ? g : void 0,
              permissions: _,
              authorize: t,
              integration_type: m
                ? s.ApplicationIntegrationType.USER_INSTALL
                : s.ApplicationIntegrationType.GUILD_INSTALL,
            },
            oldFormErrors: !0,
          });
        return h.body;
      }
      async function l(e) {
        let {
            clientId: t,
            scopes: n,
            responseType: i,
            redirectUri: a,
            codeChallenge: d,
            codeChallengeMethod: u,
            state: l,
            userInstall: f,
          } = e,
          _ = await r.default.get({
            url: o.Endpoints.OAUTH2_AUTHORIZE,
            query: {
              client_id: t,
              response_type: i,
              redirect_uri: a,
              code_challenge: d,
              code_challenge_method: u,
              scope: n.join(" "),
              state: l,
              integration_type: f
                ? s.ApplicationIntegrationType.USER_INSTALL
                : s.ApplicationIntegrationType.GUILD_INSTALL,
            },
            retries: 3,
            oldFormErrors: !0,
          });
        return _.body;
      }
      async function f(e) {
        let { body: t } = await r.default.get({
          url: o.Endpoints.OAUTH2_AUTHORIZE_WEBHOOK_CHANNELS,
          query: { guild_id: e },
          oldFormErrors: !0,
        });
        return t;
      }
      function _(e) {
        a.default.logout((0, i.getLoginPath)(e.pathname + e.search, !1));
      }
      async function c(e) {
        return await r.default.post({
          url: o.Endpoints.OAUTH2_DEVICE_VERIFY,
          body: { user_code: e },
        });
      }
      async function g(e, t) {
        return await r.default.post({
          url: o.Endpoints.OAUTH2_DEVICE_FINISH,
          body: { user_code: e, result: t },
        });
      }
      async function m(e, t, n) {
        return await r.default.post({
          url: o.Endpoints.OAUTH2_DEVICE_FINISH,
          body: {
            user_code: e,
            result: "two_way_link_error",
            error_code: t,
            error_source: n,
          },
        });
      }
    },
    164386: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          convertOAuth2Authorization: function () {
            return i;
          },
        });
      var s = n("316693");
      function i(e) {
        if (null == e.guilds) return e;
        return {
          ...e,
          guilds: e.guilds.map(e => ({
            ...e,
            permissions: s.default.deserialize(e.permissions),
          })),
        };
      }
    },
    978970: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          OrderedPermissions: function () {
            return a;
          },
          containsDisallowedPermission: function () {
            return o;
          },
          getPermissionName: function () {
            return u;
          },
        }),
        n("70102");
      var s = n("316693"),
        i = n("49111"),
        r = n("782340");
      let a = [
        i.Permissions.ADMINISTRATOR,
        i.Permissions.MANAGE_GUILD,
        i.Permissions.MANAGE_ROLES,
        i.Permissions.MANAGE_CHANNELS,
        i.Permissions.KICK_MEMBERS,
        i.Permissions.BAN_MEMBERS,
        i.Permissions.CREATE_INSTANT_INVITE,
        i.Permissions.MANAGE_NICKNAMES,
        i.Permissions.CHANGE_NICKNAME,
        i.Permissions.MANAGE_GUILD_EXPRESSIONS,
        i.Permissions.CREATE_GUILD_EXPRESSIONS,
        i.Permissions.MANAGE_WEBHOOKS,
        i.Permissions.VIEW_AUDIT_LOG,
        i.Permissions.VIEW_CHANNEL,
        i.Permissions.MANAGE_EVENTS,
        i.Permissions.CREATE_EVENTS,
        i.Permissions.MODERATE_MEMBERS,
        i.Permissions.VIEW_GUILD_ANALYTICS,
        i.Permissions.VIEW_CREATOR_MONETIZATION_ANALYTICS,
        i.Permissions.SEND_MESSAGES,
        i.Permissions.SEND_MESSAGES_IN_THREADS,
        i.Permissions.CREATE_PUBLIC_THREADS,
        i.Permissions.CREATE_PRIVATE_THREADS,
        i.Permissions.SEND_TTS_MESSAGES,
        i.Permissions.MANAGE_MESSAGES,
        i.Permissions.MANAGE_THREADS,
        i.Permissions.EMBED_LINKS,
        i.Permissions.ATTACH_FILES,
        i.Permissions.READ_MESSAGE_HISTORY,
        i.Permissions.MENTION_EVERYONE,
        i.Permissions.ADD_REACTIONS,
        i.Permissions.USE_EXTERNAL_EMOJIS,
        i.Permissions.USE_EXTERNAL_STICKERS,
        i.Permissions.USE_APPLICATION_COMMANDS,
        i.Permissions.SEND_VOICE_MESSAGES,
        i.Permissions.USE_CLYDE_AI,
        i.Permissions.CONNECT,
        i.Permissions.SPEAK,
        i.Permissions.MUTE_MEMBERS,
        i.Permissions.DEAFEN_MEMBERS,
        i.Permissions.MOVE_MEMBERS,
        i.Permissions.USE_VAD,
        i.Permissions.PRIORITY_SPEAKER,
        i.Permissions.REQUEST_TO_SPEAK,
        i.Permissions.STREAM,
        i.Permissions.USE_EMBEDDED_ACTIVITIES,
        i.Permissions.USE_SOUNDBOARD,
        i.Permissions.USE_EXTERNAL_SOUNDS,
        i.Permissions.SET_VOICE_CHANNEL_STATUS,
      ];
      function o(e) {
        return Object.values(i.Permissions).some(
          t => s.default.has(e, t) && !a.includes(t)
        );
      }
      let d = {
        [i.Permissions.ADMINISTRATOR.toString()]: () =>
          r.default.Messages.ADMINISTRATOR,
        [i.Permissions.MANAGE_GUILD.toString()]: () =>
          r.default.Messages.MANAGE_SERVER,
        [i.Permissions.MANAGE_ROLES.toString()]: () =>
          r.default.Messages.MANAGE_ROLES,
        [i.Permissions.MANAGE_CHANNELS.toString()]: () =>
          r.default.Messages.MANAGE_CHANNELS,
        [i.Permissions.KICK_MEMBERS.toString()]: () =>
          r.default.Messages.KICK_MEMBERS,
        [i.Permissions.BAN_MEMBERS.toString()]: () =>
          r.default.Messages.BAN_MEMBERS,
        [i.Permissions.CREATE_INSTANT_INVITE.toString()]: () =>
          r.default.Messages.CREATE_INSTANT_INVITE,
        [i.Permissions.MANAGE_NICKNAMES.toString()]: () =>
          r.default.Messages.MANAGE_NICKNAMES,
        [i.Permissions.CHANGE_NICKNAME.toString()]: () =>
          r.default.Messages.CHANGE_NICKNAME,
        [i.Permissions.MANAGE_GUILD_EXPRESSIONS.toString()]: () =>
          r.default.Messages.MANAGE_EXPRESSIONS,
        [i.Permissions.CREATE_GUILD_EXPRESSIONS.toString()]: () =>
          r.default.Messages.CREATE_EXPRESSIONS,
        [i.Permissions.MANAGE_WEBHOOKS.toString()]: () =>
          r.default.Messages.MANAGE_WEBHOOKS,
        [i.Permissions.VIEW_AUDIT_LOG.toString()]: () =>
          r.default.Messages.VIEW_AUDIT_LOG,
        [i.Permissions.VIEW_CHANNEL.toString()]: () =>
          r.default.Messages.READ_MESSAGES,
        [i.Permissions.SEND_MESSAGES.toString()]: () =>
          r.default.Messages.SEND_MESSAGES,
        [i.Permissions.SEND_TTS_MESSAGES.toString()]: () =>
          r.default.Messages.SEND_TTS_MESSAGES,
        [i.Permissions.MANAGE_MESSAGES.toString()]: () =>
          r.default.Messages.MANAGE_MESSAGES,
        [i.Permissions.EMBED_LINKS.toString()]: () =>
          r.default.Messages.EMBED_LINKS,
        [i.Permissions.ATTACH_FILES.toString()]: () =>
          r.default.Messages.ATTACH_FILES,
        [i.Permissions.READ_MESSAGE_HISTORY.toString()]: () =>
          r.default.Messages.READ_MESSAGE_HISTORY,
        [i.Permissions.MENTION_EVERYONE.toString()]: () =>
          r.default.Messages.MENTION_EVERYONE,
        [i.Permissions.ADD_REACTIONS.toString()]: () =>
          r.default.Messages.ADD_REACTIONS,
        [i.Permissions.USE_EXTERNAL_EMOJIS.toString()]: () =>
          r.default.Messages.USE_EXTERNAL_EMOJIS,
        [i.Permissions.USE_EXTERNAL_STICKERS.toString()]: () =>
          r.default.Messages.USE_EXTERNAL_STICKERS,
        [i.Permissions.USE_APPLICATION_COMMANDS.toString()]: () =>
          r.default.Messages.USE_APPLICATION_COMMANDS,
        [i.Permissions.SEND_VOICE_MESSAGES.toString()]: () =>
          r.default.Messages.SEND_VOICE_MESSAGE,
        [i.Permissions.CONNECT.toString()]: () => r.default.Messages.CONNECT,
        [i.Permissions.SPEAK.toString()]: () => r.default.Messages.SPEAK,
        [i.Permissions.MUTE_MEMBERS.toString()]: () =>
          r.default.Messages.MUTE_MEMBERS,
        [i.Permissions.DEAFEN_MEMBERS.toString()]: () =>
          r.default.Messages.DEAFEN_MEMBERS,
        [i.Permissions.MOVE_MEMBERS.toString()]: () =>
          r.default.Messages.MOVE_MEMBERS,
        [i.Permissions.USE_VAD.toString()]: () => r.default.Messages.USE_VAD,
        [i.Permissions.PRIORITY_SPEAKER.toString()]: () =>
          r.default.Messages.PRIORITY_SPEAKER,
        [i.Permissions.CREATE_PUBLIC_THREADS.toString()]: () =>
          r.default.Messages.CREATE_PUBLIC_THREADS,
        [i.Permissions.CREATE_PRIVATE_THREADS.toString()]: () =>
          r.default.Messages.CREATE_PRIVATE_THREADS,
        [i.Permissions.SEND_MESSAGES_IN_THREADS.toString()]: () =>
          r.default.Messages.SEND_MESSAGES_IN_THREADS,
        [i.Permissions.MANAGE_THREADS.toString()]: () =>
          r.default.Messages.MANAGE_THREADS,
        [i.Permissions.MANAGE_EVENTS.toString()]: () =>
          r.default.Messages.MANAGE_EVENTS,
        [i.Permissions.CREATE_EVENTS.toString()]: () =>
          r.default.Messages.CREATE_EVENTS,
        [i.Permissions.MODERATE_MEMBERS.toString()]: () =>
          r.default.Messages.MODERATE_MEMBERS_PERMISSION_INTERNAL,
        [i.Permissions.REQUEST_TO_SPEAK.toString()]: () =>
          r.default.Messages.REQUEST_TO_SPEAK,
        [i.Permissions.VIEW_GUILD_ANALYTICS.toString()]: () =>
          r.default.Messages.VIEW_GUILD_ANALYTICS,
        [i.Permissions.VIEW_CREATOR_MONETIZATION_ANALYTICS.toString()]: () =>
          r.default.Messages.VIEW_CREATOR_MONETIZATION_ANALYTICS,
        [i.Permissions.STREAM.toString()]: () => r.default.Messages.VIDEO,
        [i.Permissions.USE_EMBEDDED_ACTIVITIES.toString()]: () =>
          r.default.Messages.USE_EMBEDDED_ACTIVITIES,
        [i.Permissions.USE_SOUNDBOARD.toString()]: () =>
          r.default.Messages.USE_SOUNDBOARD,
        [i.Permissions.USE_EXTERNAL_SOUNDS.toString()]: () =>
          r.default.Messages.USE_EXTERNAL_SOUNDS,
        [i.Permissions.USE_CLYDE_AI.toString()]: () =>
          r.default.Messages.ROLE_PERMISSIONS_USE_CLYDE_AI,
        [i.Permissions.SET_VOICE_CHANNEL_STATUS.toString()]: () =>
          r.default.Messages.VOICE_CHANNEL_STATUS_PERMISSION_TITLE,
      };
      function u(e) {
        let t = e.toString(),
          n = d[t];
        if (null == n)
          throw Error(
            "Unknown permission. Did you provide a _single_ bit flag? Perm: ".concat(
              e
            )
          );
        return n();
      }
    },
    29479: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          FAKE_SCOPES: function () {
            return r;
          },
          OrderedAccountScopes: function () {
            return a;
          },
          ValidScopes: function () {
            return o;
          },
          RemovedScopes: function () {
            return d;
          },
          getScopeName: function () {
            return u;
          },
          getSecurityMessage: function () {
            return l;
          },
        });
      var s = n("49111"),
        i = n("782340");
      let r = [
          () => i.default.Messages.OAUTH2_FAKE_SCOPE_1,
          () => i.default.Messages.OAUTH2_FAKE_SCOPE_2,
          () => i.default.Messages.OAUTH2_FAKE_SCOPE_3,
          () => i.default.Messages.OAUTH2_FAKE_SCOPE_4,
          () => i.default.Messages.OAUTH2_FAKE_SCOPE_5,
          () => i.default.Messages.OAUTH2_FAKE_SCOPE_6,
          () => i.default.Messages.OAUTH2_FAKE_SCOPE_7,
          () => i.default.Messages.OAUTH2_FAKE_SCOPE_8,
        ],
        a = [
          s.OAuth2Scopes.BOT,
          s.OAuth2Scopes.IDENTIFY,
          s.OAuth2Scopes.EMAIL,
          s.OAuth2Scopes.CONNECTIONS,
          s.OAuth2Scopes.MESSAGES_READ,
          s.OAuth2Scopes.GUILDS,
          s.OAuth2Scopes.GUILDS_JOIN,
          s.OAuth2Scopes.GUILDS_MEMBERS_READ,
          s.OAuth2Scopes.GDM_JOIN,
          s.OAuth2Scopes.RPC,
          s.OAuth2Scopes.RPC_NOTIFICATIONS_READ,
          s.OAuth2Scopes.RPC_VOICE_READ,
          s.OAuth2Scopes.RPC_VOICE_WRITE,
          s.OAuth2Scopes.RPC_VIDEO_READ,
          s.OAuth2Scopes.RPC_VIDEO_WRITE,
          s.OAuth2Scopes.RPC_SCREENSHARE_READ,
          s.OAuth2Scopes.RPC_SCREENSHARE_WRITE,
          s.OAuth2Scopes.RPC_ACTIVITIES_WRITE,
          s.OAuth2Scopes.APPLICATIONS_BUILDS_UPLOAD,
          s.OAuth2Scopes.APPLICATIONS_BUILDS_READ,
          s.OAuth2Scopes.APPLICATIONS_COMMANDS,
          s.OAuth2Scopes.APPLICATIONS_COMMANDS_UPDATE,
          s.OAuth2Scopes.APPLICATIONS_COMMANDS_PERMISSIONS_UPDATE,
          s.OAuth2Scopes.APPLICATIONS_STORE_UPDATE,
          s.OAuth2Scopes.APPLICATIONS_ENTITLEMENTS,
          s.OAuth2Scopes.ACTIVITIES_READ,
          s.OAuth2Scopes.ACTIVITIES_WRITE,
          s.OAuth2Scopes.RELATIONSHIPS_READ,
          s.OAuth2Scopes.VOICE,
          s.OAuth2Scopes.DM_CHANNELS_READ,
          s.OAuth2Scopes.ROLE_CONNECTIONS_WRITE,
        ],
        o = a.concat([s.OAuth2Scopes.WEBHOOK_INCOMING, s.OAuth2Scopes.BOT]),
        d = ["rpc.api"];
      function u(e, t) {
        switch (e) {
          case s.OAuth2Scopes.IDENTIFY:
            return i.default.Messages.SCOPE_IDENTIFY;
          case s.OAuth2Scopes.EMAIL:
            return i.default.Messages.SCOPE_EMAIL;
          case s.OAuth2Scopes.BOT:
            return i.default.Messages.SCOPE_BOT;
          case s.OAuth2Scopes.CONNECTIONS:
            return i.default.Messages.SCOPE_CONNECTIONS;
          case s.OAuth2Scopes.MESSAGES_READ:
            return i.default.Messages.SCOPE_MESSAGES_READ;
          case s.OAuth2Scopes.GUILDS:
            return i.default.Messages.SCOPE_GUILDS;
          case s.OAuth2Scopes.GUILDS_JOIN:
            return i.default.Messages.SCOPE_GUILDS_JOIN;
          case s.OAuth2Scopes.GUILDS_MEMBERS_READ:
            if (t.includes(s.OAuth2Scopes.VOICE))
              return i.default.Messages.SCOPE_GUILDS_MEMBERS_READ_VOICE;
            return i.default.Messages.SCOPE_GUILDS_MEMBERS_READ;
          case s.OAuth2Scopes.GDM_JOIN:
            return i.default.Messages.SCOPE_GDM_JOIN;
          case s.OAuth2Scopes.RPC:
            return i.default.Messages.SCOPE_RPC;
          case s.OAuth2Scopes.RPC_NOTIFICATIONS_READ:
            return i.default.Messages.SCOPE_RPC_NOTIFICATIONS_READ;
          case s.OAuth2Scopes.RPC_VOICE_WRITE:
            return i.default.Messages.SCOPE_RPC_VOICE_WRITE;
          case s.OAuth2Scopes.RPC_VIDEO_READ:
            return i.default.Messages.SCOPE_RPC_VIDEO_READ;
          case s.OAuth2Scopes.RPC_VIDEO_WRITE:
            return i.default.Messages.SCOPE_RPC_VIDEO_WRITE;
          case s.OAuth2Scopes.RPC_SCREENSHARE_READ:
            return i.default.Messages.SCOPE_RPC_SCREENSHARE_READ;
          case s.OAuth2Scopes.RPC_SCREENSHARE_WRITE:
            return i.default.Messages.SCOPE_RPC_SCREENSHARE_WRITE;
          case s.OAuth2Scopes.RPC_VOICE_READ:
            return i.default.Messages.SCOPE_RPC_VOICE_READ;
          case s.OAuth2Scopes.RPC_ACTIVITIES_WRITE:
            return i.default.Messages.SCOPE_RPC_ACTIVITIES_WRITE;
          case s.OAuth2Scopes.APPLICATIONS_BUILDS_UPLOAD:
            return i.default.Messages.SCOPE_APPLICATIONS_BUILDS_UPLOAD;
          case s.OAuth2Scopes.APPLICATIONS_BUILDS_READ:
            return i.default.Messages.SCOPE_APPLICATIONS_BUILDS_READ;
          case s.OAuth2Scopes.APPLICATIONS_COMMANDS:
            return i.default.Messages.SCOPE_APPLICATIONS_COMMANDS;
          case s.OAuth2Scopes.APPLICATIONS_COMMANDS_UPDATE:
            return i.default.Messages.SCOPE_APPLICATIONS_COMMANDS_UPDATE;
          case s.OAuth2Scopes.APPLICATIONS_COMMANDS_PERMISSIONS_UPDATE:
            return i.default.Messages
              .SCOPE_APPLICATIONS_COMMANDS_PERMISSIONS_UPDATE;
          case s.OAuth2Scopes.APPLICATIONS_STORE_UPDATE:
            return i.default.Messages.SCOPE_APPLICATIONS_STORE_UPDATE;
          case s.OAuth2Scopes.APPLICATIONS_ENTITLEMENTS:
            return i.default.Messages.SCOPE_APPLICATIONS_ENTITLEMENTS;
          case s.OAuth2Scopes.ACTIVITIES_READ:
            return i.default.Messages.SCOPE_ACTIVITIES_READ;
          case s.OAuth2Scopes.ACTIVITIES_WRITE:
            return i.default.Messages.SCOPE_ACTIVITIES_WRITE;
          case s.OAuth2Scopes.RELATIONSHIPS_READ:
            return i.default.Messages.SCOPE_RELATIONSHIPS_READ;
          case s.OAuth2Scopes.VOICE:
            return i.default.Messages.SCOPE_VOICE;
          case s.OAuth2Scopes.DM_CHANNELS_READ:
            return i.default.Messages.SCOPE_DM_CHANNELS_READ;
          case s.OAuth2Scopes.ROLE_CONNECTIONS_WRITE:
            return i.default.Messages.SCOPE_ROLE_CONNECTIONS_WRITE;
          default:
            return e;
        }
      }
      function l(e) {
        return e.includes(s.OAuth2Scopes.MESSAGES_READ)
          ? i.default.Messages.OAUTH2_CAN_READ_NOTICE.format()
          : i.default.Messages.OAUTH2_CANNOT_READ_SEND_NOTICE.format();
      }
    },
    357974: function (e, t, n) {
      "use strict";
      var s, i;
      n.r(t),
        n.d(t, {
          OAuth2Prompts: function () {
            return s;
          },
        }),
        ((i = s || (s = {})).NONE = "none"),
        (i.CONSENT = "consent");
    },
    580363: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return C;
          },
        }),
        n("702976"),
        n("511434"),
        n("313619"),
        n("654714"),
        n("287168"),
        n("956660"),
        n("222007");
      var s = n("37983");
      n("884691");
      var i = n("414456"),
        r = n.n(i),
        a = n("527073"),
        o = n("577776"),
        d = n("841811"),
        u = n("338835"),
        l = n("83900"),
        f = n("45029"),
        _ = n("71216"),
        c = n("148337"),
        g = n("568734"),
        m = n("299039"),
        h = n("955145"),
        v = n("29479"),
        E = n("49111"),
        p = n("843455"),
        y = n("782340"),
        T = n("413973");
      function C(e) {
        var t;
        let n,
          {
            application: i,
            scopes: r,
            redirectUri: o,
            approximateGuildCount: C,
            isEmbeddedFlow: I,
            embeddedActivityConfig: A,
          } = e,
          D = new Date(m.default.extractTimestamp(i.id)),
          N = (0, v.getSecurityMessage)(r),
          O = (0, g.hasFlag)(
            null !== (t = i.flags) && void 0 !== t ? t : 0,
            E.ApplicationFlags.EMBEDDED
          );
        if (null != o && !O && !I) {
          let e = new URL(o);
          n = null != e.host && e.host.length > 0 ? e.origin : e.href;
        }
        return (0, s.jsxs)("div", {
          className: T.applicationDetails,
          children: [
            null != n
              ? (0, s.jsx)(S, {
                  className: T.redirectWarning,
                  icon: l.default,
                  text: y.default.Messages.OAUTH2_DETAILS_REDIRECT.format({
                    origin: n,
                  }),
                })
              : null,
            (0, s.jsx)(S, {
              icon: f.default,
              text: (0, h.getApplicationDetailsText)(i),
            }),
            (0, s.jsx)(S, {
              icon: d.default,
              text: y.default.Messages.OAUTH2_DETAILS_CREATION_DATE.format({
                date: D,
              }),
            }),
            r.includes(p.OAuth2Scopes.BOT) && null != C
              ? (0, s.jsx)(S, {
                  icon: _.default,
                  text: y.default.Messages.OAUTH2_DETAILS_GUILDS.format({
                    guildCount: C,
                  }),
                })
              : null,
            (0, s.jsx)(S, { icon: c.default, text: N }),
            (null == A ? void 0 : A.has_csp_exception)
              ? (0, s.jsx)(S, {
                  icon: u.default,
                  text: y.default.Messages.OAUTH2_IP_LOCATION_DISCLOSURE,
                })
              : null,
            (null == A ? void 0 : A.displays_advertisements)
              ? (0, s.jsx)(S, {
                  icon: a.EmbedIcon,
                  text: y.default.Messages.OAUTH2_ADVERTISEMENTS_DISCLOSURE,
                })
              : null,
          ],
        });
      }
      function S(e) {
        let { icon: t, text: n, className: i } = e;
        return (0, s.jsxs)("div", {
          className: r(T.entry, i),
          children: [
            (0, s.jsx)(t, { className: T.entryIcon }),
            (0, s.jsx)(o.Text, {
              variant: "text-xs/medium",
              color: "text-muted",
              className: T.entryInner,
              children: n,
            }),
          ],
        });
      }
    },
    33942: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          OAuth2AuthorizePage: function () {
            return X;
          },
          OAuth2AuthorizeModal: function () {
            return Q;
          },
          OAuth2Authorize: function () {
            return Z;
          },
          useOAuth2AuthorizeForm: function () {
            return J;
          },
          openOAuth2ModalWithCreateGuildModal: function () {
            return ee;
          },
          openOAuth2Modal: function () {
            return et;
          },
          getOAuth2AuthorizeProps: function () {
            return en;
          },
        }),
        n("222007"),
        n("70102");
      var s,
        i,
        r,
        a,
        o = n("37983"),
        d = n("884691"),
        u = n("90915"),
        l = n("746379"),
        f = n.n(l),
        _ = n("316693"),
        c = n("446674"),
        g = n("271841"),
        m = n("551042"),
        h = n("670914"),
        v = n("242670"),
        E = n("84460"),
        p = n("191225"),
        y = n("716241"),
        T = n("148217"),
        C = n("970254"),
        S = n("616265"),
        I = n("894887"),
        A = n("393414"),
        D = n("766274"),
        N = n("271938"),
        O = n("449008"),
        P = n("991170"),
        b = n("253981"),
        V = n("872825"),
        R = n("8222"),
        k = n("164386"),
        M = n("978970"),
        w = n("29479"),
        L = n("357974"),
        U = n("580363"),
        G = n("613070"),
        F = n("530487"),
        H = n("638992"),
        B = n("223934"),
        x = n("267570"),
        Y = n("941281"),
        j = n("49111"),
        K = n("954016"),
        W = n("782340"),
        z = n("392507");
      let q = "oauth2-authorize-header-id";
      function X() {
        let e = (0, u.useLocation)(),
          t = d.useMemo(
            () => (0, V.parseOAuth2AuthorizeProps)(e.search),
            [e.search]
          );
        return (
          (0, T.default)(),
          (0, o.jsx)(x.OAuth2Page, {
            children: (0, o.jsx)(Z, { ...t, showLogout: !0 }),
          })
        );
      }
      function Q(e) {
        let { transitionState: t, ...n } = e;
        return (0, o.jsx)(x.OAuth2Modal, {
          transitionState: t,
          "aria-labelledby": q,
          children: (0, o.jsx)(Z, { ...n, scrollable: !0 }),
        });
      }
      function Z(e) {
        let { scrollable: t, ...n } = e,
          { header: s, body: i, footer: r, nextStep: a, appDetails: d } = J(n),
          u = (0, o.jsxs)(o.Fragment, {
            children: [
              (0, o.jsxs)("div", {
                className: z.content,
                children: [s, i, null == a ? d : null],
              }),
              r,
            ],
          });
        return t
          ? (0, o.jsx)("div", {
              className: z.authorize,
              children: (0, o.jsx)(h.ScrollerThin, {
                orientation: "auto",
                children: u,
              }),
            })
          : (0, o.jsx)("div", {
              className: z.authorize,
              children: (0, o.jsx)("div", { children: u }),
            });
      }
      function J(e) {
        var t, n, s, i, r, a, l, m;
        let h,
          T,
          S,
          {
            clientId: I,
            scopes: x,
            responseType: X,
            redirectUri: Q,
            codeChallenge: Z,
            codeChallengeMethod: J,
            state: $,
            guildId: ee,
            channelId: et,
            permissions: en,
            prompt: es,
            disableGuildSelect: ei,
            showLogout: er = !1,
            authorization: ea,
            callback: eo,
            callbackWithoutPost: ed,
            onClose: eu,
            cancelCompletesFlow: el = !0,
            isTrustedName: ef = !1,
            isEmbeddedFlow: e_ = !1,
            userInstall: ec = !1,
          } = e,
          eg = d.useMemo(() => (0, V.filterScopes)(x), [x]),
          em = (0, u.useLocation)(),
          eh = C.default.useExperiment({ location: "auth web" }),
          ev = eh.userAppsTreatment === C.UserAppsTreatment.ALLOWED;
        !ev && (ec = !1);
        let [eE, ep] = d.useState(0),
          [ey, eT] = d.useState(null),
          [eC, eS] = d.useState(P.default.NONE),
          [eI, eA] = d.useState(1),
          [eD, eN] = d.useState(null),
          [eO] = d.useState(w.OrderedAccountScopes.filter(e => eg.includes(e))),
          [eP, eb] = d.useState(null != ee ? ee : null),
          [eV, eR] = d.useState(null != et ? et : null),
          [ek, eM] = d.useState(!1),
          ew = d.useMemo(() => {
            var e;
            return null == ey
              ? void 0
              : null === (e = ey.guilds) || void 0 === e
                ? void 0
                : e.find(e => e.id === eP);
          }, [null == ey ? void 0 : ey.guilds, eP]),
          eL = (0, c.useStateFromStoresObject)([E.default, p.default], () => {
            var e, t;
            let n;
            let s =
                null ===
                  (e = p.default.getSelfEmbeddedActivities().values().next()) ||
                void 0 === e
                  ? void 0
                  : e.value,
              i = E.default.getIsEnabled();
            return (0, O.isNotNullish)(s) &&
              ((n = p.default
                .getShelfActivities(s.guildId)
                .find(e => e.application_id === s.application_id)),
              i &&
                void 0 === n &&
                (n =
                  null ===
                    (t = E.default
                      .getDeveloperShelfItems()
                      .find(e => e.id === s.application_id)) || void 0 === t
                    ? void 0
                    : t.embeddedActivityConfig),
              (0, O.isNotNullish)(n))
              ? { ...K.DEFAULT_EMBEDDED_ACTIVITY_CONFIG, ...n }
              : {};
          }),
          eU = Object.keys(eL).length > 0 ? eL : null,
          eG = d.useCallback(
            async e => {
              if (null != ed) {
                ed(e);
                return;
              }
              if (!e && !el) {
                null != eo &&
                  (eo({
                    application: null == ey ? void 0 : ey.application,
                    guild: ew,
                  }),
                  null == eu || eu());
                return;
              }
              try {
                eM(!0);
                let t = await (0, R.authorize)({
                  authorize: e,
                  clientId: I,
                  scopes: eg,
                  responseType: X,
                  redirectUri: Q,
                  codeChallenge: Z,
                  codeChallengeMethod: J,
                  state: $,
                  permissions: _.default.remove(
                    null != en ? en : P.default.NONE,
                    eC
                  ),
                  guildId: null == eP || ec ? void 0 : eP,
                  channelId: null != eV ? eV : void 0,
                  userInstall: ec,
                });
                if (null != eo)
                  eo({
                    application: null == ey ? void 0 : ey.application,
                    location: t.location,
                    guild: ew,
                  }),
                    null == eu || eu();
                else if (null != t.location) {
                  let { host: e, path: n } = f.parse(t.location);
                  b.default.isDiscordHostname(e) &&
                  n === j.Routes.OAUTH2_AUTHORIZED
                    ? (0, A.transitionTo)(j.Routes.OAUTH2_AUTHORIZED, {
                        state: {
                          application: null == ey ? void 0 : ey.application,
                          guild: ew,
                        },
                      })
                    : (window.location = t.location);
                } else eM(!1);
              } catch (t) {
                let e = t.body;
                (null == e ? void 0 : e.message) != null && "" !== e.message
                  ? eN(Error(e.message))
                  : eN(e),
                  eA(1),
                  ep(2),
                  eM(!1);
              }
            },
            [
              eo,
              ed,
              I,
              Z,
              J,
              eC,
              eu,
              en,
              Q,
              X,
              eg,
              eP,
              eV,
              $,
              el,
              null == ey ? void 0 : ey.application,
              ew,
              ec,
            ]
          ),
          eF = d.useRef(!1),
          eH = d.useCallback(async () => {
            if (0 === eE) {
              if ((ep(1), !N.default.isAuthenticated())) {
                (0, R.logoutWithRedirect)(em);
                return;
              }
              if (!eF.current) {
                eF.current = !0;
                try {
                  let e =
                    null != ea
                      ? ea
                      : await (0, R.fetchAuthorization)({
                          clientId: I,
                          scopes: eg,
                          responseType: X,
                          redirectUri: Q,
                          codeChallenge: Z,
                          codeChallengeMethod: J,
                          state: $,
                          userInstall: ev && ec,
                        });
                  eT((0, k.convertOAuth2Authorization)(e)),
                    es === L.OAuth2Prompts.NONE && e.authorized
                      ? eG(!0)
                      : ep(2),
                    (0, y.trackWithMetadata)(
                      j.AnalyticEvents.OAUTH2_AUTHORIZE_VIEWED,
                      { application_id: e.application.id }
                    );
                } catch (n) {
                  let { status: e, body: t } = n;
                  if (401 === e) {
                    (0, R.logoutWithRedirect)(em);
                    return;
                  }
                  eN(
                    Error(
                      null != t.message
                        ? t.message
                        : ""
                            .concat(Object.keys(t)[0], ": ")
                            .concat(Object.values(t)[0])
                    )
                  ),
                    ep(2);
                } finally {
                  eF.current = !1;
                }
              }
            }
          }, [ea, I, Z, J, eE, em, es, Q, X, eg, eG, $, ec, ev]),
          eB = d.useCallback((e, t) => {
            eS(n => (e ? _.default.remove(n, t) : _.default.add(n, t)));
          }, []);
        d.useEffect(() => {
          let e = eg.filter(e => !w.ValidScopes.includes(e));
          0 === eg.length
            ? (eN(Error("No scopes were provided.")), ep(2))
            : e.length > 0
              ? (eN(Error("Invalid scope: ".concat(e[0]))), ep(2))
              : (0, M.containsDisallowedPermission)(
                    null != en ? en : P.default.NONE
                  )
                ? (eN(Error("Invalid permission(s) provided.")), ep(2))
                : eH();
        }, [eH, eg, en]);
        let ex =
            null != eV
              ? null == ey
                ? void 0
                : null === (t = ey.channels) || void 0 === t
                  ? void 0
                  : t.find(e => e.id === eV)
              : null,
          eY =
            null != eP
              ? null == ey
                ? void 0
                : null === (n = ey.guilds) || void 0 === n
                  ? void 0
                  : n.find(e => e.id === eP)
              : null;
        if (
          (d.useEffect(() => {
            null != ey &&
              (null != ex ? eb(null) : null == eY && (eb(null), eR(null)));
          }, [ey, eY, ex]),
          eD instanceof Error)
        )
          return { body: (0, o.jsx)(Y.OAuth2Error, { message: eD.message }) };
        if (2 !== eE || null == ey) return { body: (0, o.jsx)(v.Spinner, {}) };
        let ej = new D.default(ey.user),
          eK =
            null === (s = ey.bot) || void 0 === s
              ? void 0
              : s.approximate_guild_count,
          eW = !1;
        switch (eI) {
          case 1:
            let ez = null == eD || eD instanceof Error ? {} : eD,
              eq =
                null === (i = ey.guilds) || void 0 === i
                  ? void 0
                  : i.sort((e, t) =>
                      e.name.toLowerCase().localeCompare(t.name.toLowerCase())
                    ),
              eX =
                eg.includes(j.OAuth2Scopes.BOT) ||
                eg.includes(j.OAuth2Scopes.WEBHOOK_INCOMING) ||
                eg.includes(j.OAuth2Scopes.APPLICATIONS_COMMANDS);
            (h = (0, o.jsxs)(o.Fragment, {
              children: [
                (0, o.jsx)(G.default, {
                  application: ey.application,
                  accountScopes: eO,
                  errors: ez,
                  isTrustedName: ef,
                }),
                null == ex && eX && !ec
                  ? (0, o.jsx)(H.GuildSelector, {
                      error: (null !==
                        (a =
                          null !== (r = ez[j.OAuth2Scopes.BOT]) && void 0 !== r
                            ? r
                            : ez[j.OAuth2Scopes.APPLICATIONS_COMMANDS]) &&
                      void 0 !== a
                        ? a
                        : [])[0],
                      selectedGuildId: eP,
                      onGuildChange: e => {
                        eb(e);
                      },
                      guilds: null != eq ? eq : [],
                      disabled: "" !== eP && !0 === ei,
                    })
                  : null,
                eg.includes(j.OAuth2Scopes.WEBHOOK_INCOMING)
                  ? (0, o.jsx)(H.WebhookGuildChannelSelector, {
                      error: (null !==
                        (l = ez[j.OAuth2Scopes.WEBHOOK_INCOMING]) &&
                      void 0 !== l
                        ? l
                        : [])[0],
                      selectedChannelId: eV,
                      selectedGuildId: eP,
                      onChannelChange: e => eR(e),
                    })
                  : null,
              ],
            })),
              eg.includes(j.OAuth2Scopes.BOT) &&
                !_.default.equals(en, P.default.NONE) &&
                (S = 2);
            let eQ =
              null != eY &&
              eg.includes(j.OAuth2Scopes.WEBHOOK_INCOMING) &&
              null == eV;
            eW = !ec && ((eX && null == eY && null == ex) || eQ);
            break;
          case 2:
            (h = (0, o.jsx)(F.default, {
              application: ey.application,
              permissions: null != en ? en : P.default.NONE,
              deniedPermissions: eC,
              onPermissionsChange: eB,
              guild: eY,
            })),
              (T = 1);
        }
        let eZ = (0, o.jsx)(U.default, {
            embeddedActivityConfig: eU,
            application: ey.application,
            scopes: eg,
            redirectUri:
              null !== (m = ey.redirect_uri) && void 0 !== m ? m : null,
            approximateGuildCount: void 0 !== eK ? eK : null,
            isEmbeddedFlow: e_,
          }),
          eJ = (0, o.jsxs)("div", {
            className: z.footer,
            children: [
              null != T
                ? (0, o.jsx)(g.Button, {
                    look: g.Button.Looks.LINK,
                    color: g.Button.Colors.PRIMARY,
                    onClick: () => eA(T),
                    children: W.default.Messages.BACK,
                  })
                : (0, o.jsx)(g.Button, {
                    look: g.Button.Looks.LINK,
                    color: g.Button.Colors.PRIMARY,
                    onClick: () => eG(!1),
                    children: W.default.Messages.CANCEL,
                  }),
              null != S
                ? (0, o.jsx)(g.Button, {
                    onClick: () => eA(S),
                    disabled: eW,
                    children: W.default.Messages.CONTINUE,
                  })
                : (0, o.jsx)(g.Button, {
                    onClick: () => eG(!0),
                    disabled: eW,
                    submitting: ek,
                    children: W.default.Messages.AUTHORIZE,
                  }),
            ],
          }),
          e$ = (0, o.jsx)(B.default, {
            id: q,
            user: ej,
            application: ey.application,
            bot: ey.bot,
            accountScopes: eO,
            showLogout: er || !1,
            location: em,
            isTrustedName: ef,
          });
        return {
          header: e$,
          body: h,
          footer: eJ,
          nextStep: S,
          appDetails: eZ,
          sendAuthorize: eG,
        };
      }
      function $(e, t) {
        if (null == t.location || (null != e && e(t))) return;
        let { host: n, path: s, query: i } = f.parse(t.location, !0),
          r = b.default.isDiscordHostname(n) || window.location.host === n;
        if (r && s === j.Routes.OAUTH2_AUTHORIZED)
          (0, m.openModal)(e =>
            (0, o.jsx)(x.OAuth2Modal, {
              ...e,
              "aria-labelledby": q,
              children: (0, o.jsx)(Y.OAuth2AuthorizedSuccess, {
                guild: t.guild,
                application: t.application,
                onClose: e.onClose,
              }),
            })
          );
        else if (
          r &&
          (null == s ? void 0 : s.startsWith(j.Routes.OAUTH2_ERROR))
        )
          (0, m.openModal)(e => {
            let t =
              i.error_description ||
              i.error ||
              W.default.Messages.OAUTH2_UNKNOWN_ERROR;
            return (
              Array.isArray(t) && (t = t[0]),
              (0, o.jsxs)(x.OAuth2Modal, {
                ...e,
                "aria-labelledby": q,
                children: [
                  (0, o.jsx)(Y.OAuth2Error, { message: t, onClose: e.onClose }),
                  ";",
                ],
              })
            );
          });
        else {
          var a;
          null === (a = window.open(t.location, "_blank")) ||
            void 0 === a ||
            a.focus();
        }
      }
      function ee(e, t) {
        if (
          (0, I.isMidjourneyOnboardingFlow)("create-guild-and-oauth2-modal")
        ) {
          S.default.openCreateGuildModal({
            onSuccess: n => et({ ...e, guildId: n }, t),
          });
          return;
        }
        et(e, t);
      }
      function et(e, t) {
        (0, m.openModal)(
          t =>
            (0, o.jsx)(Q, {
              ...t,
              ...e,
              cancelCompletesFlow: !1,
              callback: $.bind(null, e.callback),
            }),
          { onCloseCallback: t }
        );
      }
      function en(e) {
        let { hostname: t = "", host: n, path: s, query: i } = f.parse(e);
        return null != s &&
          null != i &&
          (b.default.isDiscordHostname(t) || n === window.location.host) &&
          (s.startsWith("/api".concat(j.Endpoints.OAUTH2_AUTHORIZE)) ||
            s.startsWith(j.Routes.OAUTH2_AUTHORIZE))
          ? (0, V.parseOAuth2AuthorizeProps)(i)
          : null;
      }
      ((r = s || (s = {}))[(r.NOT_LOADED = 0)] = "NOT_LOADED"),
        (r[(r.LOADING = 1)] = "LOADING"),
        (r[(r.LOADED = 2)] = "LOADED"),
        ((a = i || (i = {}))[(a.INSTALL_TYPE = 0)] = "INSTALL_TYPE"),
        (a[(a.AUTHORIZE_SCOPES = 1)] = "AUTHORIZE_SCOPES"),
        (a[(a.AUTHORIZE_BOT_PERMISSIONS = 2)] = "AUTHORIZE_BOT_PERMISSIONS");
    },
    613070: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        }),
        n("222007");
      var s = n("37983");
      n("884691");
      var i = n("775560"),
        r = n("605451"),
        a = n("577776"),
        o = n("36694"),
        d = n("945330"),
        u = n("29479"),
        l = n("782340"),
        f = n("814288");
      function _(e) {
        var t;
        let {
            application: n,
            accountScopes: _,
            errors: c,
            isTrustedName: g = !1,
          } = e,
          m = (0, i.useLazyValue)(
            () =>
              u.FAKE_SCOPES[Math.floor(Math.random() * u.FAKE_SCOPES.length)]
          );
        if (0 === _.length) return null;
        let h = _.map(e => {
            var t;
            let n = (0, u.getScopeName)(e, _),
              [i] =
                null !== (t = null == c ? void 0 : c[e]) && void 0 !== t
                  ? t
                  : [];
            return (0, s.jsxs)(
              "div",
              {
                className: f.scope,
                children: [
                  (0, s.jsx)("div", {
                    className: f.scopeCheck,
                    children: (0, s.jsx)(o.default, { className: f.icon }),
                  }),
                  (0, s.jsxs)("div", {
                    className: f.scopeInner,
                    children: [
                      (0, s.jsx)(a.Text, {
                        variant: "text-md/medium",
                        children: n,
                      }),
                      null != i
                        ? (0, s.jsx)(a.Text, {
                            variant: "text-xs/normal",
                            color: "text-danger",
                            children: i,
                          })
                        : null,
                    ],
                  }),
                ],
              },
              e
            );
          }),
          v = (0, s.jsxs)("div", {
            className: f.scope,
            children: [
              (0, s.jsx)("div", {
                className: f.scopeTimes,
                children: (0, s.jsx)(d.default, { className: f.icon }),
              }),
              (0, s.jsx)("div", {
                className: f.scopeInner,
                children: (0, s.jsx)(a.Text, {
                  variant: "text-md/normal",
                  className: f.scopeName,
                  children: m(),
                }),
              }),
            ],
          }),
          E = g
            ? l.default.Messages.OAUTH2_SCOPES_LABEL_TRUSTED_NAME
            : l.default.Messages.OAUTH2_SCOPES_LABEL;
        return (0, s.jsxs)("div", {
          className: f.scopes,
          children: [
            (0, s.jsx)(r.Heading, {
              variant: "heading-deprecated-12/semibold",
              className: f.sectionLabel,
              children: E.format({
                application:
                  null !== (t = null == n ? void 0 : n.name) && void 0 !== t
                    ? t
                    : "",
              }),
            }),
            h,
            v,
          ],
        });
      }
    },
    530487: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        }),
        n("222007");
      var s = n("37983"),
        i = n("884691"),
        r = n("316693"),
        a = n("685698"),
        o = n("577776"),
        d = n("945330"),
        u = n("991170"),
        l = n("978970"),
        f = n("782340"),
        _ = n("190148");
      function c(e) {
        let {
            application: t,
            permissions: n,
            deniedPermissions: c,
            onPermissionsChange: g,
            guild: m,
          } = e,
          [h, v] = i.useState(u.default.NONE);
        i.useEffect(() => {
          g(!0, n),
            v(r.default.invert(m.permissions)),
            g(!1, r.default.invert(m.permissions));
        }, [m, g, n]);
        let E = l.OrderedPermissions.filter(e => r.default.has(n, e)),
          p = E.filter(e => !r.default.has(h, e)).map(e => {
            let t = (0, l.getPermissionName)(e),
              n = !r.default.has(c, e);
            return (0, s.jsx)(
              "li",
              {
                className: _.permission,
                children: (0, s.jsx)(a.Checkbox, {
                  value: n,
                  onChange: (t, n) => g(n, e),
                  type: a.Checkbox.Types.INVERTED,
                  children: (0, s.jsx)(o.Text, {
                    variant: "text-md/normal",
                    children: t,
                  }),
                }),
              },
              String(e)
            );
          }),
          y = E.filter(e => r.default.has(h, e)).map(e => {
            let t = (0, l.getPermissionName)(e);
            return (0, s.jsxs)(
              "li",
              {
                className: _.permission,
                children: [
                  (0, s.jsx)("div", {
                    className: _.disabledPermissionIcon,
                    children: (0, s.jsx)(d.default, { className: _.icon }),
                  }),
                  (0, s.jsx)(o.Text, {
                    variant: "text-md/normal",
                    children: t,
                  }),
                ],
              },
              String(e)
            );
          });
        return (0, s.jsxs)("div", {
          className: _.botPermissions,
          children: [
            (0, s.jsx)(o.Text, {
              variant: "text-sm/medium",
              color: "header-secondary",
              className: _.permissionsLabel,
              children:
                f.default.Messages.OAUTH2_CONFIRM_BOT_PERMISSIONS.format({
                  applicationName: t.name,
                  guildName: m.name,
                }),
            }),
            (0, s.jsx)("ul", { className: _.permissionsList, children: p }),
            y.length > 0
              ? (0, s.jsxs)(s.Fragment, {
                  children: [
                    (0, s.jsx)(o.Text, {
                      variant: "text-sm/medium",
                      color: "header-secondary",
                      className: _.disabledPermissionsLabel,
                      children:
                        f.default.Messages.OAUTH2_DISABLED_PERMISSIONS.format({
                          applicationName: t.name,
                        }),
                    }),
                    (0, s.jsx)("ul", {
                      className: _.permissionsList,
                      children: y,
                    }),
                  ],
                })
              : null,
          ],
        });
      }
    },
    638992: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          GuildSelector: function () {
            return c;
          },
          WebhookGuildChannelSelector: function () {
            return g;
          },
        }),
        n("222007");
      var s = n("37983"),
        i = n("884691"),
        r = n("316693"),
        a = n("605451"),
        o = n("774811"),
        d = n("577776"),
        u = n("8222"),
        l = n("49111"),
        f = n("782340"),
        _ = n("246097");
      function c(e) {
        let {
            error: t,
            selectedGuildId: n,
            onGuildChange: i,
            guilds: u,
            disabled: c = !1,
          } = e,
          g = u
            .filter(e =>
              r.default.has(e.permissions, l.Permissions.MANAGE_GUILD)
            )
            .map(e => ({ value: e.id, label: e.name }));
        return (0, s.jsxs)("div", {
          className: _.selectorGroup,
          children: [
            (0, s.jsx)(a.Heading, {
              variant: "heading-deprecated-12/semibold",
              className: _.sectionLabel,
              children: f.default.Messages.OAUTH2_ADD_TO_GUILD,
            }),
            null != t && "" !== t
              ? (0, s.jsx)(d.Text, {
                  variant: "text-xs/normal",
                  color: "text-danger",
                  children: t,
                })
              : null,
            (0, s.jsx)(o.SearchableSelect, {
              wrapperClassName: _.wrapper,
              className: _.select,
              maxVisibleItems: 5,
              value: n,
              placeholder: f.default.Messages.OAUTH2_ADD_TO_GUILD_PLACEHOLDER,
              options: g,
              onChange: e => {
                i(e);
              },
              isDisabled: c,
            }),
            (0, s.jsx)(d.Text, {
              variant: "text-xs/medium",
              color: "header-secondary",
              className: _.label,
              children:
                f.default.Messages.OAUTH2_ADD_TO_GUILD_DESCRIPTION.format(),
            }),
          ],
        });
      }
      function g(e) {
        let {
            selectedGuildId: t,
            selectedChannelId: n,
            onChannelChange: r,
            error: l,
          } = e,
          [c, g] = i.useState(null);
        i.useEffect(() => {
          (async function e() {
            if (null != t) {
              let e = await (0, u.fetchChannels)(t);
              g(e);
            }
          })();
        }, [t]),
          i.useEffect(() => {
            null != c &&
              null != n &&
              null == c.find(e => e.id === n) &&
              r(null);
          }, [c, r, n]);
        let m = (null != c ? c : []).map(e => ({ value: e.id, label: e.name }));
        return null == t
          ? null
          : (0, s.jsxs)("div", {
              className: _.selectorGroup,
              children: [
                (0, s.jsx)(a.Heading, {
                  variant: "heading-deprecated-12/semibold",
                  className: _.sectionLabel,
                  children: f.default.Messages.OAUTH2_ADD_WEBHOOK_INCOMING,
                }),
                null != l && "" !== l
                  ? (0, s.jsx)(d.Text, {
                      variant: "text-xs/normal",
                      color: "text-danger",
                      children: l,
                    })
                  : null,
                (0, s.jsx)(o.SearchableSelect, {
                  wrapperClassName: _.wrapper,
                  className: _.select,
                  maxVisibleItems: 5,
                  onChange: e => {
                    r(e);
                  },
                  placeholder:
                    f.default.Messages
                      .SCOPE_WEBHOOK_INCOMING_CHANNEL_PLACEHOLDER,
                  value: n,
                  options: m,
                }),
                (0, s.jsx)(d.Text, {
                  variant: "text-xs/normal",
                  color: "header-secondary",
                  className: _.label,
                  children:
                    f.default.Messages.SCOPE_WEBHOOK_INCOMING_DESCRIPTION,
                }),
              ],
            });
      }
    },
    223934: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return m;
          },
        });
      var s = n("37983");
      n("884691");
      var i = n("913365"),
        r = n("227645"),
        a = n("577776"),
        o = n("79798"),
        d = n("315102"),
        u = n("568734"),
        l = n("8222"),
        f = n("49111"),
        _ = n("52904"),
        c = n("782340"),
        g = n("347819");
      function m(e) {
        let {
            id: t,
            user: n,
            application: m,
            bot: h,
            accountScopes: v,
            showLogout: E,
            location: p,
            isTrustedName: y,
          } = e,
          T = d.default.getApplicationIconURL({ id: m.id, icon: m.icon }),
          C = d.default.getUserAvatarURL(n);
        return (0, s.jsxs)("header", {
          id: t,
          className: g.header,
          children: [
            (0, s.jsxs)("div", {
              className: g.headerIcons,
              children: [
                (0, s.jsx)(i.Avatar, {
                  src: T,
                  size: _.AvatarSizes.SIZE_80,
                  "aria-label": m.name,
                }),
                (0, s.jsxs)("div", {
                  className: g.ellipseGroup,
                  children: [
                    (0, s.jsx)("div", { className: g.ellipse }),
                    (0, s.jsx)("div", { className: g.ellipse }),
                    (0, s.jsx)("div", { className: g.ellipse }),
                  ],
                }),
                (0, s.jsx)(i.Avatar, {
                  src: C,
                  size: _.AvatarSizes.SIZE_80,
                  "aria-label": n.username,
                }),
              ],
            }),
            !y &&
              (0, s.jsx)(a.Text, {
                variant: "text-md/medium",
                color: "header-secondary",
                className: g.label,
                children: c.default.Messages.OAUTH2_THIRD_PARTY_APPLICATION,
              }),
            (0, s.jsxs)(a.Text, {
              variant: "text-lg/bold",
              color: "header-primary",
              children: [
                m.name,
                null != h
                  ? (0, s.jsx)(o.default, {
                      className: g.botTag,
                      verified:
                        null != h.public_flags &&
                        (0, u.hasFlag)(
                          h.public_flags,
                          f.UserFlags.VERIFIED_BOT
                        ),
                    })
                  : null,
              ],
            }),
            v.length > 0
              ? (0, s.jsx)(a.Text, {
                  variant: "text-md/normal",
                  color: "header-secondary",
                  className: g.label,
                  children: c.default.Messages.OAUTH2_REQUESTS_ACCOUNT_ACCESS,
                })
              : (0, s.jsx)(a.Text, {
                  variant: "text-md/normal",
                  color: "header-secondary",
                  className: g.label,
                  children: c.default.Messages.OAUTH2_CONNECT_TO_DISCORD,
                }),
            E
              ? (0, s.jsx)("div", {
                  className: g.currentUser,
                  children: (0, s.jsxs)(a.Text, {
                    variant: "text-sm/normal",
                    color: "text-muted",
                    children: [
                      c.default.Messages.OAUTH2_SIGNED_IN_AS.format({
                        userHook: () =>
                          (0, s.jsxs)(
                            a.Text,
                            {
                              className: g.currentUserTag,
                              variant: "text-sm/normal",
                              children: [
                                n.username,
                                !n.isPomelo() &&
                                  (0, s.jsx)(a.Text, {
                                    className: g.currentUserDiscriminator,
                                    variant: "text-sm/normal",
                                    children: "#".concat(n.discriminator),
                                  }),
                              ],
                            },
                            n.id
                          ),
                      }),
                      (0, s.jsx)(r.Clickable, {
                        tag: "a",
                        className: g.logoutLink,
                        onClick: () => (0, l.logoutWithRedirect)(p),
                        children: c.default.Messages.OAUTH2_LOGOUT,
                      }),
                    ],
                  }),
                })
              : null,
          ],
        });
      }
    },
    267570: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          OAuth2Page: function () {
            return v;
          },
          OAuth2Modal: function () {
            return E;
          },
        }),
        n("222007");
      var s = n("37983"),
        i = n("884691"),
        r = n("414456"),
        a = n.n(r),
        o = n("516256"),
        d = n("77078"),
        u = n("69927"),
        l = n("554054"),
        f = n("831588"),
        _ = n("439932"),
        c = n("49111"),
        g = n("289382"),
        m = n("782340"),
        h = n("316618");
      function v(e) {
        let { children: t, wrapperClassName: n, embedded: r } = e,
          [o, v] = i.useState(g.WaveStates.INITIAL),
          E = i.useCallback(e => {
            v(t => Math.max(t, e));
          }, []);
        return (
          (0, u.usePageTitle)({ location: m.default.Messages.OAUTH2_TITLE }),
          (0, s.jsx)(d.ThemeContextProvider, {
            theme: c.ThemeTypes.DARK,
            children: (0, s.jsx)(l.default, {
              embedded: r,
              className: a((0, _.getThemeClass)(c.ThemeTypes.DARK), h.wave),
              splash: (0, f.getArtForPath)(),
              waveState: o,
              showLogo: !0,
              updateWaveState: E,
              children: (0, s.jsx)("div", {
                className: a(h.oauth2Wrapper, n),
                children: t,
              }),
            }),
          })
        );
      }
      function E(e) {
        let { children: t, transitionState: n, ...i } = e;
        return (0, s.jsx)(o.ModalRoot, {
          size: o.ModalSize.DYNAMIC,
          transitionState: n,
          className: h.oauth2Wrapper,
          ...i,
          children: t,
        });
      }
    },
    941281: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return S;
          },
          OAuth2Success: function () {
            return I;
          },
          OAuth2AuthorizedSuccess: function () {
            return A;
          },
          OAuth2Error: function () {
            return D;
          },
          OAuth2AuthorizedPage: function () {
            return N;
          },
          OAuth2ErrorPage: function () {
            return O;
          },
        });
      var s = n("37983"),
        i = n("884691"),
        r = n("414456"),
        a = n.n(r),
        o = n("730290"),
        d = n("90915"),
        u = n("746379"),
        l = n.n(u),
        f = n("516256"),
        _ = n("242670"),
        c = n("577776"),
        g = n("77078"),
        m = n("69927"),
        h = n("393414"),
        v = n("239380"),
        E = n("599110"),
        p = n("267570"),
        y = n("49111"),
        T = n("782340"),
        C = n("223003");
      function S(e) {
        let {
          message: t,
          footer: n,
          headerClassName: i,
          showsCloseWindowText: r,
          spinner: o,
          onClose: d,
        } = e;
        return (
          (0, m.usePageTitle)({ location: T.default.Messages.OAUTH2_TITLE }),
          (0, s.jsxs)(s.Fragment, {
            children: [
              null != d
                ? (0, s.jsx)(f.ModalCloseButton, {
                    onClick: d,
                    className: C.closeButton,
                  })
                : null,
              (0, s.jsxs)("div", {
                className: C.wrapper,
                children: [
                  o ? (0, s.jsx)(_.Spinner, {}) : null,
                  (0, s.jsx)("div", { className: a(C.header, i) }),
                  (0, s.jsx)(c.Text, {
                    variant: "text-md/normal",
                    className: C.text,
                    children: t,
                  }),
                  null != n ? n : null,
                  r
                    ? (0, s.jsx)(c.Text, {
                        variant: "text-xs/normal",
                        color: "text-muted",
                        className: C.cta,
                        children: T.default.Messages.OAUTH2_MESSAGE_CTA,
                      })
                    : null,
                ],
              }),
            ],
          })
        );
      }
      function I(e) {
        return (0, s.jsx)(S, { ...e, headerClassName: C.headerSuccess });
      }
      function A(e) {
        let { guild: t, application: n, ...r } = e,
          { onClose: a } = r,
          o = T.default.Messages.AUTHORIZED_SUCCESS,
          d = i.useCallback(() => {
            (null == t ? void 0 : t.id) != null &&
              ((0, v.transitionToGuild)(null == t ? void 0 : t.id),
              null == a || a(),
              E.default.track(
                y.AnalyticEvents.OAUTH2_AUTHORIZE_SUCCESS_GO_TO_GUILD_CLICKED,
                {
                  application_id: null == n ? void 0 : n.id,
                  guild_id: null == t ? void 0 : t.id,
                }
              ));
          }, [a, null == n ? void 0 : n.id, null == t ? void 0 : t.id]),
          u = i.useCallback(() => {
            null == a || a(),
              E.default.track(
                y.AnalyticEvents.OAUTH2_AUTHORIZE_SUCCESS_CLOSE_CLICKED,
                { application_id: null == n ? void 0 : n.id }
              );
          }, [a, null == n ? void 0 : n.id]),
          l = i.useMemo(() => {
            if (null != n)
              return null != t
                ? T.default.Messages.AUTHORIZED_APP_TO_SERVER.format({
                    installedApplicationName: null == n ? void 0 : n.name,
                    guildName: null == t ? void 0 : t.name,
                  })
                : T.default.Messages.AUTHORIZED_APP.format({
                    installedApplicationName: null == n ? void 0 : n.name,
                  });
            return T.default.Messages.AUTHORIZED_GENERIC;
          }, [n, t]),
          f = (0, s.jsxs)(s.Fragment, {
            children: [
              (0, s.jsx)(c.Text, {
                variant: "text-sm/normal",
                className: C.authorizedSuccessSubtext,
                children: l,
              }),
              (null != t || null != a) &&
                (0, s.jsxs)("div", {
                  className: C.buttonsContainer,
                  children: [
                    null != t &&
                      (0, s.jsx)(g.Button, {
                        fullWidth: !0,
                        color: g.Button.Colors.BRAND,
                        onClick: d,
                        className: C.button,
                        children:
                          (null == t ? void 0 : t.name.length) > 30
                            ? T.default.Messages.OAUTH2_GO_TO_SERVER_DEFAULT_CTA
                            : T.default.Messages.OAUTH2_GO_TO_SERVER_NAME_CTA.format(
                                { guildName: null == t ? void 0 : t.name }
                              ),
                      }),
                    null != a &&
                      (0, s.jsx)(g.Button, {
                        fullWidth: !0,
                        color: g.Button.Colors.PRIMARY,
                        onClick: u,
                        className: C.button,
                        children: T.default.Messages.CLOSE,
                      }),
                  ],
                }),
            ],
          });
        return (
          i.useEffect(() => {
            E.default.track(y.AnalyticEvents.OAUTH2_AUTHORIZE_SUCCESS_VIEWED, {
              application_id: null == n ? void 0 : n.id,
            });
          }, [null == n ? void 0 : n.id]),
          (0, s.jsx)("div", {
            className: C.authorizedSuccessWrapper,
            children: (0, s.jsx)(I, { message: o, footer: f, ...r }),
          })
        );
      }
      function D(e) {
        return (0, s.jsx)(S, { ...e, headerClassName: C.headerFailure });
      }
      function N() {
        var e, t;
        let n = (0, d.useLocation)();
        return (0, s.jsx)(p.OAuth2Page, {
          children: (0, s.jsx)(A, {
            guild: null === (e = n.state) || void 0 === e ? void 0 : e.guild,
            application:
              null === (t = n.state) || void 0 === t ? void 0 : t.application,
            showsCloseWindowText: !0,
          }),
        });
      }
      function O(e) {
        var t, n;
        let { location: r } = e;
        i.useEffect(() => {
          if (null == r) return;
          let e =
            null != document.referrer && "" !== document.referrer
              ? l.parse(document.referrer)
              : null;
          (null == e ||
            e.host !== window.location.host ||
            e.pathname !== y.Routes.OAUTH2_AUTHORIZE) &&
            (0, h.transitionTo)(y.Routes.INDEX);
        }, [r]);
        let a = null != r ? (0, o.parse)(r.search) : {},
          d =
            null !==
              (n =
                null !== (t = a.error_description) && void 0 !== t
                  ? t
                  : a.error) && void 0 !== n
              ? n
              : T.default.Messages.OAUTH2_UNKNOWN_ERROR;
        return (0, s.jsx)(p.OAuth2Page, {
          children: (0, s.jsx)(D, { message: d, showsCloseWindowText: !0 }),
        });
      }
    },
    512395: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useOptInEnabledForGuild: function () {
            return u;
          },
          isOptInEnabledForGuild: function () {
            return l;
          },
          useShouldShowOnboardingAdminUpsellForGuild: function () {
            return f;
          },
        });
      var s = n("446674"),
        i = n("305961"),
        r = n("957255"),
        a = n("282109"),
        o = n("697218"),
        d = n("49111");
      function u(e) {
        let t = (0, s.useStateFromStores)([a.default], () =>
            a.default.isOptInEnabled(e)
          ),
          n = (0, s.useStateFromStores)([i.default], () =>
            i.default.getGuild(e)
          ),
          r = (0, s.useStateFromStores)([o.default], () =>
            o.default.getCurrentUser()
          );
        return (
          null != e &&
          null != n &&
          null != r &&
          (n.hasFeature(d.GuildFeatures.COMMUNITY) || r.isStaff()) &&
          t
        );
      }
      function l(e) {
        let t = i.default.getGuild(e),
          n = o.default.getCurrentUser();
        return (
          null != e &&
          null != t &&
          null != n &&
          (t.hasFeature(d.GuildFeatures.COMMUNITY) || n.isStaff()) &&
          a.default.isOptInEnabled(e)
        );
      }
      function f(e) {
        let t = (0, s.useStateFromStores)([i.default], () =>
            i.default.getGuild(e)
          ),
          { canManageGuild: n, canManageRoles: a } = (0,
          s.useStateFromStoresObject)([r.default], () => ({
            canManageGuild: r.default.can(d.Permissions.MANAGE_GUILD, t),
            canManageRoles: r.default.can(d.Permissions.MANAGE_ROLES, t),
          }));
        if (null == t) return !1;
        let o = t.hasFeature(d.GuildFeatures.GUILD_ONBOARDING_EVER_ENABLED);
        return n && a && !o;
      }
    },
    614305: function (e, t, n) {
      "use strict";
      function s() {
        return !1;
      }
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
    },
    132774: function (e, t, n) {
      "use strict";
      function s(e) {
        {
          let t = n("801373").default;
          t(e);
        }
      }
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
    },
    801373: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("37983");
      n("884691");
      var i = n("551042");
      function r(e) {
        (0, i.openModalLazy)(async () => {
          let { default: t } = await n.el("758881").then(n.bind(n, "758881"));
          return n => (0, s.jsx)(t, { ...n, incomingRequestCount: e });
        });
      }
    },
    552310: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("866227"),
        i = n.n(s);
      function r(e) {
        return { ...e, expiry: i(e.expiry) };
      }
    },
    870346: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return P;
          },
        }),
        n("222007"),
        n("70102");
      var s = n("627445"),
        i = n.n(s),
        r = n("917351"),
        a = n.n(r),
        o = n("288661"),
        d = n("446674"),
        u = n("913144"),
        l = n("605250"),
        f = n("773336"),
        _ = n("50885"),
        c = n("563680"),
        g = n("49111");
      let m = {},
        h = {},
        v = {},
        E = {},
        p = {},
        y = new Set(),
        T = () => O.emitChange(),
        C = a.debounce(T, 150);
      function S(e) {
        let t = v[e];
        null != t &&
          !t.closed &&
          (m[e] = {
            x: t.screenX,
            y: t.screenY,
            width: t.innerWidth,
            height: t.innerHeight,
            alwaysOnTop: !!f.isPlatformEmbedded && h[e],
          });
      }
      function I(e) {
        let t = v[e];
        null != t &&
          (!t.closed && S(e),
          t.close(),
          !(function (e) {
            let t = v[e];
            i(null != t, "Popout window was null during unmount"),
              t.removeEventListener("focus", T),
              t.removeEventListener("blur", T),
              t.removeEventListener("resize", C);
            let n = E[e];
            i(null != n, "Window root was null while unmounting"),
              n.unmount(),
              delete v[e],
              delete h[e],
              delete p[e],
              delete E[e];
          })(e),
          O.emitChange());
      }
      function A(e) {
        let { data: t } = e;
        if (!(t instanceof Object && t.discordPopoutEvent instanceof Object))
          return;
        let n = t.discordPopoutEvent;
        if (null != n.key)
          switch (n.type) {
            case g.PopoutEventTypes.LOADED:
              var s;
              return (
                (s = n.key),
                void (
                  y.has(s) &&
                  (!(function (e) {
                    let t = v[e],
                      n = p[e];
                    if (null == t) {
                      new (0, l.default)("PopoutWindowStore").warn(
                        "Failed to open window",
                        e
                      );
                      return;
                    }
                    let s = t.document;
                    (0, c.subscribeDocumentToFullScreenChange)(s, T),
                      t.addEventListener("focus", T),
                      t.addEventListener("blur", T),
                      t.addEventListener("resize", C),
                      !(function (e, t) {
                        let n = t.document,
                          s = document.querySelectorAll(
                            'link[rel="stylesheet"]'
                          ),
                          r = ""
                            .concat(window.location.protocol, "//")
                            .concat(window.location.host);
                        for (let e of s) {
                          if (!e.href.startsWith(r)) continue;
                          let t = n.createElement("link");
                          (t.href = e.href),
                            (t.rel = e.rel),
                            (t.integrity = e.integrity),
                            i(null != n.head, "Document head was null"),
                            n.head.appendChild(t);
                        }
                      })(0, t);
                    let r = (0, o.createRoot)(s.getElementById("app-mount"));
                    i(null != r, "No render target for popout!"),
                      (E[e] = r),
                      r.render(n(e));
                  })(s),
                  y.delete(s),
                  O.emitChange())
                )
              );
            case g.PopoutEventTypes.UNLOADED:
              return I(n.key);
          }
      }
      function D() {
        for (let e of Object.keys(v)) {
          let t = v[e];
          null != t && t.close();
        }
      }
      class N extends d.default.PersistedStore {
        initialize(e) {
          window.addEventListener("message", A),
            window.addEventListener("beforeunload", D),
            (m = null != e ? e : {});
        }
        getWindow(e) {
          return v[e];
        }
        getWindowState(e) {
          return m[e];
        }
        getWindowKeys() {
          return Object.keys(v);
        }
        getWindowOpen(e) {
          let t = v[e];
          return null != t && !t.closed;
        }
        getIsAlwaysOnTop(e) {
          return !!h[e];
        }
        getWindowFocused(e) {
          var t, n;
          let s = v[e];
          return (
            null !==
              (n =
                null == s
                  ? void 0
                  : null === (t = s.document) || void 0 === t
                    ? void 0
                    : t.hasFocus()) &&
            void 0 !== n &&
            n
          );
        }
        getWindowVisible(e) {
          var t;
          let n = v[e];
          return (
            (null == n
              ? void 0
              : null === (t = n.document) || void 0 === t
                ? void 0
                : t.visibilityState) === "visible"
          );
        }
        getState() {
          return m;
        }
        unmountWindow(e) {
          return I(e);
        }
      }
      (N.displayName = "PopoutWindowStore"),
        (N.persistKey = "PopoutWindowStore");
      let O = new N(u.default, {
        POPOUT_WINDOW_OPEN: function (e) {
          let { key: t, features: n, render: s } = e;
          if (
            f.isPlatformEmbedded &&
            !_.default.supportsFeature(g.NativeFeatures.POPOUT_WINDOWS)
          )
            throw Error(
              "Popout windows not supported on this native module version!"
            );
          let i = v[t];
          if (null != i && !i.closed)
            return f.isPlatformEmbedded ? _.default.focus(t) : i.focus(), !1;
          let {
              defaultWidth: r,
              defaultHeight: a,
              defaultAlwaysOnTop: o = !1,
              ...d
            } = n,
            u = d,
            l = o,
            c = m[t];
          if (null != c) {
            let { width: e, height: t, x: n, y: s, alwaysOnTop: i } = c;
            (l = null != i ? i : o),
              (u = {
                width: null != e && 0 !== e ? e : r,
                height: null != t && 0 !== t ? t : a,
                left: n,
                top: s,
                ...u,
              });
          }
          let E = window.open(
            g.Routes.POPOUT_WINDOW,
            t,
            (function (e) {
              let t = "";
              for (let n of Object.keys(e)) {
                let s = e[n];
                void 0 !== s &&
                  ("boolean" == typeof s && (s = s ? "yes" : "no"),
                  (t += "".concat(n, "=").concat(s, ",")));
              }
              return t;
            })(u)
          );
          (E.windowKey = t),
            null == E || E.focus(),
            (v[t] = E),
            (p[t] = s),
            f.isPlatformEmbedded &&
              (_.default.setAlwaysOnTop(t, l),
              (h[t] = l),
              _.default.isAlwaysOnTop(t).then(e => (h[t] = e))),
            y.add(t);
        },
        POPOUT_WINDOW_CLOSE: function (e) {
          let { key: t } = e,
            n = v[t];
          null != n && !n.closed && (S(t), n.close());
        },
        POPOUT_WINDOW_SET_ALWAYS_ON_TOP: function (e) {
          let { key: t, alwaysOnTop: n } = e;
          f.isPlatformEmbedded &&
            (_.default.setAlwaysOnTop(t, n),
            (h[t] = n),
            _.default.isAlwaysOnTop(t).then(e => (h[t] = e)));
        },
        LOGOUT: D,
      });
      var P = O;
    },
    383294: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          open: function () {
            return r;
          },
          openChannelCallPopout: function () {
            return a;
          },
          close: function () {
            return o;
          },
          setAlwaysOnTop: function () {
            return d;
          },
        });
      var s = n("913144");
      let i = { menubar: !1, toolbar: !1, location: !1, directories: !1 };
      function r(e, t, n) {
        return s.default.dispatch({
          type: "POPOUT_WINDOW_OPEN",
          key: e,
          features: { ...i, ...n },
          render: t,
        });
      }
      function a(e) {
        return s.default.dispatch({
          type: "CHANNEL_CALL_POPOUT_WINDOW_OPEN",
          channel: e,
        });
      }
      function o(e) {
        return s.default.dispatch({ type: "POPOUT_WINDOW_CLOSE", key: e });
      }
      function d(e, t) {
        return s.default.dispatch({
          type: "POPOUT_WINDOW_SET_ALWAYS_ON_TOP",
          alwaysOnTop: t,
          key: e,
        });
      }
    },
    977591: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ExpandedGiftingRevampExperiment: function () {
            return i;
          },
        });
      var s = n("862205");
      let i = (0, s.createExperiment)({
        kind: "user",
        id: "2023-11_expanded_gifting_revamp_experiment",
        label: "Expanded Gifting Revamp Experiment",
        defaultConfig: { enabled: !1 },
        treatments: [
          {
            id: 1,
            label: "Show expanded gifting revamp experience",
            config: { enabled: !0 },
          },
        ],
      });
    },
    432173: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getReactionEmojiName: function () {
            return o;
          },
          getAccessibleEmojiDisplayName: function () {
            return d;
          },
          toReactionEmoji: function () {
            return u;
          },
          emojiEquals: function () {
            return l;
          },
          getBurstAnalyticsSection: function () {
            return f;
          },
          shouldApplyReaction: function () {
            return _;
          },
        }),
        n("781738");
      var s = n("867805"),
        i = n("271938"),
        r = n("49111"),
        a = n("782340");
      function o(e) {
        return null == e.id
          ? s.default.convertSurrogateToName(e.name)
          : ":".concat(e.name, ":");
      }
      function d(e, t, n, s) {
        var i, r, d;
        let u;
        u = s
          ? e
            ? a.default.Messages.SUPER_REACT_REMOVE_WITH_COUNT_A11Y_LABEL
            : a.default.Messages.SUPER_REACT_WITH_COUNT_A11Y_LABEL
          : e
            ? a.default.Messages.REACT_REMOVE_WITH_COUNT_A11Y_LABEL
            : a.default.Messages.REACT_WITH_COUNT_A11Y_LABEL;
        let l = u.format({
          reactions: t,
          emojiName:
            null !==
              (d =
                null === (r = o(n)) || void 0 === r
                  ? void 0
                  : null === (i = r.replace(/[:_]/g, " ")) || void 0 === i
                    ? void 0
                    : i.trim()) && void 0 !== d
              ? d
              : "",
        });
        return l;
      }
      function u(e) {
        var t, n, s;
        return {
          id: null !== (t = e.id) && void 0 !== t ? t : null,
          name:
            null !==
              (s =
                null !==
                  (n = null != e.id ? e.name : e.optionallyDiverseSequence) &&
                void 0 !== n
                  ? n
                  : e.name) && void 0 !== s
              ? s
              : "",
          animated: !!e.animated,
        };
      }
      function l(e, t) {
        if (null != t.id) {
          let n = null != e.id ? "".concat(e.id) : e.id;
          return "".concat(t.id) === n;
        }
        return null == e.id && t.name === e.name;
      }
      function f(e) {
        if (e.isThread()) return r.AnalyticsSections.THREAD_TEXT_AREA;
        if (e.isForumPost()) return r.AnalyticsSections.FORUM_CHANNEL_TEXT_AREA;
        if (e.isGuildVocal()) return r.AnalyticsSections.TEXT_IN_VOICE;
        return r.AnalyticsSections.CHANNEL_TEXT_AREA;
      }
      function _(e) {
        let { userId: t, optimistic: n } = e,
          s = i.default.getId() === t;
        return (!n || !!s) && !0;
      }
    },
    256572: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ReferencedMessageState: function () {
            return s;
          },
          default: function () {
            return N;
          },
        }),
        n("222007"),
        n("424973");
      var s,
        i,
        r = n("693566"),
        a = n.n(r),
        o = n("446674"),
        d = n("913144"),
        u = n("447435"),
        l = n("560208"),
        f = n("692038"),
        _ = n("42203"),
        c = n("377253"),
        g = n("49111");
      ((i = s || (s = {}))[(i.LOADED = 0)] = "LOADED"),
        (i[(i.NOT_LOADED = 1)] = "NOT_LOADED"),
        (i[(i.DELETED = 2)] = "DELETED");
      let m = Object.freeze({ state: 1 }),
        h = new Set();
      class v {
        handleCacheDisposed(e, t) {
          this._cachedMessageIds.has(e) &&
            ((this._cachedMessageIds = new Set(this._cachedMessageIds)),
            this._cachedMessageIds.delete(e));
        }
        set(e, t) {
          this._cachedMessages.set(e, t),
            !this._cachedMessageIds.has(e) &&
              ((this._cachedMessageIds = new Set(this._cachedMessageIds)),
              this._cachedMessageIds.add(e));
        }
        has(e) {
          return this._cachedMessageIds.has(e);
        }
        get(e) {
          return this._cachedMessages.get(e);
        }
        getCachedMessageIds() {
          return this._cachedMessageIds;
        }
        constructor() {
          (this._cachedMessages = new a({
            max: 100,
            dispose: (e, t) => this.handleCacheDisposed(e, t),
          })),
            (this._cachedMessageIds = new Set());
        }
      }
      let E = new (class e {
        has(e, t) {
          var n, s;
          return (
            null !==
              (s =
                null === (n = this._channelCaches.get(e)) || void 0 === n
                  ? void 0
                  : n.has(t)) &&
            void 0 !== s &&
            s
          );
        }
        get(e, t) {
          var n;
          return null === (n = this._channelCaches.get(e)) || void 0 === n
            ? void 0
            : n.get(t);
        }
        set(e, t, n) {
          let s = this._channelCaches.get(e);
          null == s && ((s = new v()), this._channelCaches.set(e, s)),
            s.set(t, n);
        }
        updateExistingMessageIfCached(e) {
          let t = this._channelCaches.get(e.channel_id);
          return (
            !!(null != t && t.has(e.id)) &&
            (t.set(e.id, { state: 0, message: (0, f.createMessageRecord)(e) }),
            !0)
          );
        }
        deleteChannelCache(e) {
          return this._channelCaches.delete(e);
        }
        retainWhere(e) {
          let t = [];
          for (let [n] of this._channelCaches) !e(n) && t.push(n);
          for (let e of t) this.deleteChannelCache(e);
          return t.length;
        }
        getCachedMessageIdsForChannel(e) {
          let t = this._channelCaches.get(e);
          return null == t ? null : t.getCachedMessageIds();
        }
        clear() {
          this._channelCaches.clear();
        }
        constructor() {
          this._channelCaches = new Map();
        }
      })();
      function p(e) {
        let t = !1;
        if (
          (E.updateExistingMessageIfCached(e) && (t = !0),
          g.MessageTypesWithLazyLoadedReferences.has(e.type))
        ) {
          let n = e.message_reference;
          if (null == n) return t;
          let s = n.message_id;
          if (null == s) return t;
          if ("referenced_message" in e) {
            let t = e.referenced_message;
            null != t
              ? (E.set(t.channel_id, t.id, {
                  state: 0,
                  message: (0, f.createMessageRecord)(t),
                }),
                e.type === g.MessageTypes.THREAD_STARTER_MESSAGE && p(t))
              : E.set(e.channel_id, s, { state: 2 });
          } else {
            let e = c.default.getMessage(n.channel_id, s);
            null != e
              ? E.set(n.channel_id, s, { state: 0, message: e })
              : E.set(n.channel_id, s, m);
          }
          t = !0;
        }
        return t;
      }
      function y(e, t) {
        let n = !1;
        for (let s of e) n = !1 !== t(s) || n;
        return n;
      }
      function T(e) {
        let { messages: t } = e;
        return y(t, e => p(e));
      }
      function C(e) {
        return E.deleteChannelCache(e.channel.id);
      }
      function S(e, t) {
        if (!E.has(e, t)) return !1;
        E.set(e, t, { state: 2 });
      }
      function I() {
        E.clear();
      }
      function A(e) {
        let { firstMessages: t } = e;
        return null != t && y(t, e => p(e));
      }
      class D extends o.default.Store {
        initialize() {
          this.waitFor(c.default, _.default);
        }
        getMessageByReference(e) {
          let t;
          return (
            null != e && (t = E.get(e.channel_id, e.message_id)),
            null != t ? t : m
          );
        }
        getMessage(e, t) {
          var n;
          return null !== (n = E.get(e, t)) && void 0 !== n ? n : m;
        }
        getReplyIdsForChannel(e) {
          let t;
          return (
            null != e && (t = E.getCachedMessageIdsForChannel(e)),
            null != t ? t : h
          );
        }
      }
      D.displayName = "ReferencedMessageStore";
      var N = new D(d.default, {
        CACHE_LOADED: function (e) {
          let { messages: t } = e;
          return y(Object.values(t), e => y(Object.values(e), e => p(e)));
        },
        LOCAL_MESSAGES_LOADED: T,
        LOAD_MESSAGES_SUCCESS: T,
        LOAD_MESSAGES_AROUND_SUCCESS: T,
        SEARCH_FINISH: function (e) {
          let { messages: t } = e;
          return y(t, e => y(e, e => p(e)));
        },
        GUILD_FEED_FETCH_SUCCESS: function (e) {
          let { data: t } = e,
            n = (0, l.getMessagesFromGuildFeedFetch)(t);
          return y(n, e => p(e));
        },
        LOAD_THREADS_SUCCESS: A,
        LOAD_ARCHIVED_THREADS_SUCCESS: A,
        MESSAGE_EXPLICIT_CONTENT_SCAN_TIMEOUT: function (e) {
          let { messageId: t, channelId: n } = e;
          if (!E.has(n, t)) return !1;
          let s = E.get(n, t);
          if (null == s || 0 !== s.state) return !1;
          E.set(n, t, {
            state: 0,
            message: (0, u.handleExplicitMediaScanTimeoutForMessage)(s.message),
          });
        },
        LOAD_FORUM_POSTS: function (e) {
          let { threads: t } = e;
          return y(Object.values(t), e => {
            let { first_message: t } = e;
            return null != t && p(t);
          });
        },
        MESSAGE_CREATE: function (e) {
          let { message: t } = e;
          return !!c.default.getMessages(t.channel_id).ready && p(t);
        },
        MESSAGE_UPDATE: function (e) {
          let { message: t } = e,
            n = t.id,
            s = t.channel_id;
          if (!E.has(s, n)) return !1;
          let i = E.get(s, n);
          if (null == i || 0 !== i.state) return !1;
          E.set(s, n, {
            state: 0,
            message: (0, f.updateMessageRecord)(i.message, t),
          });
        },
        MESSAGE_DELETE: function (e) {
          let { id: t, channelId: n } = e;
          return S(n, t);
        },
        MESSAGE_DELETE_BULK: function (e) {
          let { ids: t, channelId: n } = e;
          return y(t, e => S(n, e));
        },
        CREATE_PENDING_REPLY: function (e) {
          let { message: t } = e;
          E.set(t.channel_id, t.id, { state: 0, message: t });
        },
        CHANNEL_DELETE: C,
        THREAD_DELETE: C,
        GUILD_DELETE: function () {
          let e = E.retainWhere(e => null != _.default.getChannel(e));
          if (0 === e) return !1;
        },
        CONNECTION_OPEN: I,
        LOGOUT: I,
      });
    },
    925880: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        }),
        n("424973"),
        n("222007");
      var s = n("714617"),
        i = n.n(s),
        r = n("446674"),
        a = n("913144"),
        o = n("77173");
      let d = [o.default],
        u = [];
      function l() {
        let e = [];
        for (let t of d) {
          let n = t.getActivity();
          null != n && e.push(n);
        }
        return !i(e, u) && ((u = e), !0);
      }
      class f extends r.default.Store {
        initialize() {
          this.syncWith(d, l);
        }
        getActivities() {
          return u;
        }
      }
      f.displayName = "FirstPartyRichPresenceStore";
      var _ = new f(a.default);
    },
    144491: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          transitionToChannel: function () {
            return l;
          },
          transitionToThread: function () {
            return f;
          },
          transitionToThreadMessage: function () {
            return _;
          },
          transitionToMessage: function () {
            return c;
          },
        });
      var s = n("627445"),
        i = n.n(s),
        r = n("450911"),
        a = n("565298"),
        o = n("42203"),
        d = n("393414"),
        u = n("49111");
      function l(e, t, n) {
        let s = o.default.getChannel(e);
        if (null == s) return;
        let i = (0, a.getGuildIdForGenericRedirect)(s);
        r.default.preload(s.guild_id, s.id),
          (0, d.transitionTo)(u.Routes.CHANNEL(i, s.id), t, n);
      }
      function f(e, t, n) {
        i(null != e.parent_id, "Thread must have a parent ID.");
        let s = (0, a.getGuildIdForGenericRedirect)(e);
        (0, d.transitionTo)(u.Routes.CHANNEL(s, e.id), n, t);
      }
      function _(e, t, n, s) {
        i(null != e.parent_id, "Thread must have a parent ID.");
        let r = (0, a.getGuildIdForGenericRedirect)(e);
        (0, d.transitionTo)(u.Routes.CHANNEL(r, e.id, t), s, n);
      }
      function c(e, t, n, s) {
        let i = o.default.getChannel(e);
        if (null == i) return;
        let r = (0, a.getGuildIdForGenericRedirect)(i);
        (0, d.transitionTo)(u.Routes.CHANNEL(r, i.id, t), n, s);
      }
    },
    684337: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          isCurrentUserTeen: function () {
            return i;
          },
        });
      var s = n("697218");
      let i = () => {
        var e;
        return (
          (null === (e = s.default.getCurrentUser()) || void 0 === e
            ? void 0
            : e.nsfwAllowed) === !1
        );
      };
    },
    582713: function (e, t, n) {
      "use strict";
      var s, i, r, a, o, d;
      n.r(t),
        n.d(t, {
          SidebarType: function () {
            return s;
          },
          GuildSidebarType: function () {
            return i;
          },
          SidebarOpenDetailsType: function () {
            return r;
          },
        }),
        ((a = s || (s = {}))[(a.CREATE_THREAD = 0)] = "CREATE_THREAD"),
        (a[(a.VIEW_THREAD = 1)] = "VIEW_THREAD"),
        (a[(a.VIEW_CHANNEL = 2)] = "VIEW_CHANNEL"),
        (a[(a.VIEW_MESSAGE_REQUEST = 3)] = "VIEW_MESSAGE_REQUEST"),
        ((o = i || (i = {}))[(o.GUILD_MEMBER_MOD_VIEW = 4)] =
          "GUILD_MEMBER_MOD_VIEW"),
        ((d = r || (r = {})).THREAD = "thread"),
        (d.MESSAGE_REQUEST = "message-request"),
        (d.HOME = "home"),
        (d.GUILD_MEMBER_MOD_VIEW = "guild-member-mod-view");
    },
    846325: function (e, t, n) {
      "use strict";
      var s, i;
      n.r(t),
        n.d(t, {
          MAX_LENGTH_SOUND_NAME: function () {
            return r;
          },
          MAX_SOUND_LENGTH_SECONDS: function () {
            return a;
          },
          DEFAULT_SOUND_GUILD_ID: function () {
            return o;
          },
          SoundboardWheelSize: function () {
            return d;
          },
          DEFAULT_KEYBIND: function () {
            return u;
          },
          EMPTY_SOUND_LIST: function () {
            return l;
          },
          CUSTOM_CALL_SOUND_GLOBAL_GUILD_ID: function () {
            return f;
          },
          NUM_RECENTLY_HEARD_SOUNDS: function () {
            return _;
          },
          NUM_FREQUENTLY_USED_SOUNDS: function () {
            return c;
          },
        }),
        n("222007");
      let r = 32,
        a = 5,
        o = "DEFAULT";
      ((i = s || (s = {}))[(i.SUCCESS = 0)] = "SUCCESS"),
        (i[(i.INTERRUPTED = 1)] = "INTERRUPTED");
      let d = { width: 424, height: 424, padding: 100 },
        u = "ctrl+`",
        l = [],
        f = "0",
        _ = 6,
        c = 6;
    },
    235004: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return P;
          },
        }),
        n("222007"),
        n("424973"),
        n("834022");
      var s,
        i,
        r = n("917351"),
        a = n.n(r),
        o = n("446674"),
        d = n("913144"),
        u = n("845579"),
        l = n("374363"),
        f = n("697218"),
        _ = n("599110"),
        c = n("829536"),
        g = n("846325"),
        m = n("49111"),
        h = n("397336");
      ((i = s || (s = {}))[(i.NOT_FETCHED = 0)] = "NOT_FETCHED"),
        (i[(i.FETCHING = 1)] = "FETCHING"),
        (i[(i.FETCHED = 2)] = "FETCHED");
      let v = new Map(),
        E = new Map(),
        p = new Set(),
        y = 0,
        T = 0,
        C = new Set(),
        S = new Map(),
        I = !1;
      function A(e) {
        let { sound: t } = e,
          n = v.get(t.guildId),
          s = null == n ? void 0 : n.findIndex(e => e.soundId === t.soundId);
        null != n && null != s && -1 !== s
          ? ((n[s] = t), v.set(t.guildId, [...n]))
          : null != n && (null == n || n.push(t), v.set(t.guildId, [...n]));
      }
      let D = a.debounce(e => {
        _.default.track(m.AnalyticEvents.UPDATE_SOUNDBOARD_SETTINGS, {
          volume: Math.round((0, c.amplitudeToPerceptual)(e)),
        }),
          u.SoundboardSettings.updateSetting({ volume: e });
      }, 1e3);
      function N(e) {
        var t, n;
        let s =
          null !==
            (n =
              null == e
                ? void 0
                : null === (t = e.audioContextSettings) || void 0 === t
                  ? void 0
                  : t.user) && void 0 !== n
            ? n
            : {};
        for (let [e, t] of Object.entries(s))
          t.soundboardMuted ? p.add(e) : p.delete(e);
        for (let e of p.keys()) null == s[e] && p.delete(e);
      }
      class O extends o.default.Store {
        initialize() {
          this.waitFor(l.default), N(l.default.settings);
        }
        getOverlaySerializedState() {
          return {
            soundboardSounds: Object.fromEntries(v),
            favoritedSoundIds: Array.from(C),
            localSoundboardMutes: Array.from(p),
          };
        }
        getSounds() {
          return v;
        }
        getSoundsForGuild(e) {
          return v.get(e);
        }
        getSound(e, t) {
          var n;
          let s = null !== (n = v.get(e)) && void 0 !== n ? n : [];
          return s.find(e => e.soundId === t);
        }
        getSoundById(e) {
          let t = Array.from(v.values()).flat();
          return t.find(t => t.soundId === e);
        }
        isFetchingSounds() {
          return 1 === T;
        }
        isFetchingDefaultSounds() {
          return 1 === y;
        }
        isFetching() {
          return this.isFetchingSounds() || this.isFetchingDefaultSounds();
        }
        shouldFetchDefaultSounds() {
          return 0 === y;
        }
        hasFetchedDefaultSounds() {
          return 2 === y;
        }
        isUserPlayingSounds(e) {
          let t = S.get(e);
          return null != t && t > 0;
        }
        isPlayingSound(e) {
          return null != E.get(e);
        }
        isFavoriteSound(e) {
          return C.has(e);
        }
        getFavorites() {
          return C;
        }
        isLocalSoundboardMuted(e) {
          return p.has(e);
        }
        hasHadOtherUserPlaySoundInSession() {
          return I;
        }
        hasFetchedAllSounds() {
          return 2 === T && 2 === y;
        }
      }
      O.displayName = "SoundboardStore";
      var P = new O(d.default, {
        LOGOUT: function () {
          v.clear(), E.clear(), S.clear(), (I = !1), (T = 0), (y = 0);
        },
        GUILD_SOUNDBOARD_FETCH: function () {
          T = 1;
        },
        GUILD_SOUNDBOARD_SOUND_CREATE: A,
        GUILD_SOUNDBOARD_SOUND_UPDATE: A,
        GUILD_SOUNDBOARD_SOUND_DELETE: function (e) {
          let { soundId: t, guildId: n } = e,
            s = v.get(n),
            i = null == s ? void 0 : s.findIndex(e => e.soundId === t);
          null != s &&
            null != i &&
            !(i < 0) &&
            (s.splice(i, 1), v.set(n, [...s]));
        },
        GUILD_SOUNDBOARD_SOUND_PLAY_START: function (e) {
          var t, n, s;
          let { soundId: i, userId: r } = e,
            a = (null !== (n = E.get(i)) && void 0 !== n ? n : 0) + 1,
            o = (null !== (s = S.get(r)) && void 0 !== s ? s : 0) + 1;
          E.set(i, a),
            S.set(r, o),
            r !==
              (null === (t = f.default.getCurrentUser()) || void 0 === t
                ? void 0
                : t.id) && (I = !0);
        },
        GUILD_SOUNDBOARD_SOUND_PLAY_END: function (e) {
          var t, n;
          let { soundId: s, userId: i } = e,
            r = (null !== (t = E.get(s)) && void 0 !== t ? t : 0) - 1,
            a = (null !== (n = S.get(i)) && void 0 !== n ? n : 0) - 1;
          r <= 0 ? E.delete(s) : E.set(s, r),
            a <= 0 ? S.delete(i) : S.set(i, a);
        },
        USER_SOUNDBOARD_SET_VOLUME: function (e) {
          let { volume: t } = e;
          D(t);
        },
        VOICE_CHANNEL_SELECT: function () {
          E.clear(), S.clear();
        },
        USER_SETTINGS_PROTO_UPDATE: function (e) {
          let { settings: t } = e,
            { type: n, proto: s } = t;
          if (n === h.UserSettingsTypes.FRECENCY_AND_FAVORITES_SETTINGS) {
            var i, r;
            C = new Set(
              null !==
                (r =
                  null == s
                    ? void 0
                    : null === (i = s.favoriteSoundboardSounds) || void 0 === i
                      ? void 0
                      : i.soundIds) && void 0 !== r
                ? r
                : []
            );
          } else n === h.UserSettingsTypes.PRELOADED_USER_SETTINGS && N(s);
        },
        SOUNDBOARD_FETCH_DEFAULT_SOUNDS: function () {
          y = 1;
        },
        SOUNDBOARD_FETCH_DEFAULT_SOUNDS_SUCCESS: function (e) {
          let { soundboardSounds: t } = e;
          v.set(g.DEFAULT_SOUND_GUILD_ID, t), (y = 2);
        },
        SOUNDBOARD_SOUNDS_RECEIVED: function (e) {
          let { updates: t } = e;
          t.forEach(e => {
            let { guildId: t, sounds: n } = e;
            v.set(t, n);
          }),
            (T = 2);
        },
        GUILD_DELETE: function (e) {
          let { guild: t } = e;
          v.delete(t.id);
        },
        AUDIO_TOGGLE_LOCAL_SOUNDBOARD_MUTE: function (e) {
          let { userId: t } = e;
          p.has(t) ? p.delete(t) : p.add(t);
        },
        OVERLAY_INITIALIZE: function (e) {
          let { soundboardStoreState: t } = e;
          (v = new Map(Object.entries(t.soundboardSounds))),
            (C = new Set(t.favoritedSoundIds)),
            (p = new Set(t.localSoundboardMutes));
        },
        GUILD_SOUNDBOARD_SOUNDS_UPDATE: function (e) {
          let { guildId: t, soundboardSounds: n } = e;
          v.set(t, n);
        },
      });
    },
    613691: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          SpotifyAPI: function () {
            return c;
          },
          getAccessToken: function () {
            return g;
          },
          subscribePlayerStateNotifications: function () {
            return function e(t, n, s) {
              let r =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 2;
              return c
                .put(t, n, {
                  url: l.SpotifyEndpoints.NOTIFICATIONS_PLAYER,
                  query: { connection_id: s },
                })
                .catch(a =>
                  r <= 0
                    ? Promise.reject(a)
                    : (0, i.timeoutPromise)(5e3).then(() => e(t, n, s, r - 1))
                );
            };
          },
          getProfile: function () {
            return m;
          },
          getDevices: function () {
            return h;
          },
          play: function () {
            return v;
          },
          pause: function () {
            return E;
          },
          fetchIsSpotifyProtocolRegistered: function () {
            return p;
          },
          setActiveDevice: function () {
            return y;
          },
        }),
        n("860677");
      var s = n("872717"),
        i = n("862337"),
        r = n("913144"),
        a = n("718517"),
        o = n("269180"),
        d = n("773336"),
        u = n("155815"),
        l = n("450484"),
        f = n("49111");
      function _(e, t, n, s) {
        let r =
          arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 1;
        return e(
          (s = { ...s, headers: { authorization: "Bearer ".concat(n) } })
        )
          .then(e => (202 === e.status ? Promise.reject(e) : e))
          .catch(n => {
            let a = !0 !== s.onlyRetryOnAuthorizationErrors && 202 === n.status;
            return (401 === n.status || a) && r > 0
              ? (202 === n.status
                  ? (0, i.timeoutPromise)(5e3)
                  : Promise.resolve()
                )
                  .then(() => g(t))
                  .then(n => {
                    let {
                      body: { access_token: i },
                    } = n;
                    return _(e, t, i, s, r - 1);
                  })
                  .then(e => new Promise(t => setImmediate(() => t(e))))
              : Promise.reject(n);
          });
      }
      let c = {
        get: _.bind(null, s.default.get),
        put: _.bind(null, s.default.put),
      };
      function g(e) {
        return s.default
          .get({
            url: f.Endpoints.CONNECTION_ACCESS_TOKEN(
              f.PlatformTypes.SPOTIFY,
              e
            ),
            oldFormErrors: !0,
          })
          .catch(t => {
            if (401 === t.status)
              r.default.dispatch({
                type: "SPOTIFY_ACCOUNT_ACCESS_TOKEN_REVOKE",
                accountId: e,
              });
            else if (429 === t.status) {
              let n = t.headers["retry-after"] * a.default.Millis.SECOND,
                s = isNaN(n) || 0 === n ? 5e3 : n;
              return (0, i.timeoutPromise)(s).then(() => g(e));
            }
            return Promise.reject(t);
          })
          .then(t => {
            let { access_token: n } = t.body;
            return (
              r.default.dispatch({
                type: "SPOTIFY_ACCOUNT_ACCESS_TOKEN",
                accountId: e,
                accessToken: n,
              }),
              t
            );
          });
      }
      function m(e, t) {
        return c
          .get(e, t, { url: l.SpotifyEndpoints.PROFILE })
          .then(
            t => (
              r.default.dispatch({
                type: "SPOTIFY_PROFILE_UPDATE",
                accountId: e,
                isPremium: "premium" === t.body.product,
              }),
              t
            )
          );
      }
      function h(e, t) {
        return c
          .get(e, t, { url: l.SpotifyEndpoints.PLAYER_DEVICES })
          .then(
            t => (
              t.body &&
                r.default.dispatch({
                  type: "SPOTIFY_SET_DEVICES",
                  accountId: e,
                  devices: t.body.devices,
                }),
              t
            )
          );
      }
      function v(e, t, n) {
        let s =
            arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {},
          i = l.SpotifyEndpoints.PLAYER_OPEN(
            l.SpotifyResourceTypes.TRACK,
            n,
            !1
          ),
          { deviceId: a, position: o, contextUri: d, repeat: u } = s;
        return c
          .put(e, t, {
            url: l.SpotifyEndpoints.PLAYER_PLAY,
            query: { device_id: a },
            body: {
              context_uri: null != d ? d : void 0,
              uris: null == d ? [i] : void 0,
              offset: null != d ? { uri: i } : void 0,
              position_ms: null != o ? o : 0,
            },
          })
          .then(n =>
            null == u
              ? n
              : c.put(e, t, {
                  url: l.SpotifyEndpoints.PLAYER_REPEAT,
                  query: { device_id: a, state: u ? "context" : "off" },
                })
          )
          .then(
            e => (
              r.default.dispatch({
                type: "SPOTIFY_PLAYER_PLAY",
                id: n,
                position: null != o ? o : 0,
              }),
              e
            )
          );
      }
      function E(e, t) {
        return c
          .put(e, t, { url: l.SpotifyEndpoints.PLAYER_PAUSE })
          .then(e => (r.default.dispatch({ type: "SPOTIFY_PLAYER_PAUSE" }), e));
      }
      function p() {
        !u.default.isProtocolRegistered() &&
          (0, d.isDesktop)() &&
          o.default.isProtocolRegistered(l.SPOTIFY_APP_PROTOCOL).then(e => {
            r.default.dispatch({
              type: "SPOTIFY_SET_PROTOCOL_REGISTERED",
              isRegistered: e,
            });
          });
      }
      function y(e, t) {
        r.default.dispatch({
          type: "SPOTIFY_SET_ACTIVE_DEVICE",
          accountId: e,
          deviceId: t,
        });
      }
    },
    450484: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          SPOTIFY_APP_PROTOCOL: function () {
            return l;
          },
          SPOTIFY_PARTY_PREFIX: function () {
            return f;
          },
          SPOTIFY_PLATFORM_NAME: function () {
            return _;
          },
          isSpotifyParty: function () {
            return c;
          },
          SpotifyResourceTypes: function () {
            return r;
          },
          SpotifyActionTypes: function () {
            return a;
          },
          SPOTIFY_HOSTNAMES: function () {
            return g;
          },
          SpotifyEndpoints: function () {
            return v;
          },
        });
      var s,
        i,
        r,
        a,
        o = n("376556"),
        d = n("773336"),
        u = n("49111");
      let l = "spotify",
        f = "spotify:",
        _ = o.default.get(u.PlatformTypes.SPOTIFY).name;
      function c(e) {
        return null != e && e.startsWith(f);
      }
      ((s = r || (r = {})).TRACK = "track"),
        (s.ARTIST = "artist"),
        (s.ALBUM = "album"),
        (s.PLAYLIST = "playlist"),
        ((i = a || (a = {})).USER_ACTIVITY_PLAY = "user_activity_play"),
        (i.USER_ACTIVITY_SYNC = "user_activity_sync"),
        (i.EMBED_SYNC = "embed_sync");
      let g = ["open.spotify.com", "www.spotify.com"],
        m = "https://api.spotify.com/v1",
        h = e => "?utm_source=discord&utm_medium=".concat(e),
        v = Object.freeze({
          PROFILE: "".concat(m, "/me"),
          NOTIFICATIONS_PLAYER: "".concat(m, "/me/notifications/player"),
          PLAYER: "".concat(m, "/me/player"),
          PLAYER_DEVICES: "".concat(m, "/me/player/devices"),
          PLAYER_PLAY: "".concat(m, "/me/player/play"),
          PLAYER_PAUSE: "".concat(m, "/me/player/pause"),
          PLAYER_REPEAT: "".concat(m, "/me/player/repeat"),
          WEB_OPEN: function (e, t) {
            let n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : "desktop";
            return "https://open.spotify.com/"
              .concat(encodeURIComponent(e), "/")
              .concat(encodeURIComponent(t))
              .concat(h(n));
          },
          EMBED: function (e) {
            let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : "desktop";
            return "https://open.spotify.com/embed".concat(e).concat(h(t));
          },
          PLAYER_OPEN: function (e, t) {
            let n =
                !(arguments.length > 2) ||
                void 0 === arguments[2] ||
                arguments[2],
              s =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : "desktop";
            return ""
              .concat(l, ":")
              .concat(encodeURIComponent(e), ":")
              .concat(encodeURIComponent(t))
              .concat(n ? h(s) : "");
          },
          PREMIUM_SITE: "https://www.spotify.com/premium/".concat(h("desktop")),
          INSTALL_ATTRIBUTION: e =>
            "https://app.adjust.com/bdyga9?campaign=".concat(e),
          APP_STORE: (0, d.isAndroid)()
            ? "https://play.google.com/store/apps/details?id=com.spotify.music&hl=en_US&gl=US"
            : "https://itunes.apple.com/us/app/spotify-music/id324684580?mt=8",
          IOS_APP_STORE:
            "https://itunes.apple.com/us/app/spotify-music/id324684580?mt=8",
        });
    },
    155815: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var s = n("446674"),
        i = n("913144");
      let r = !1;
      class a extends s.default.Store {
        isProtocolRegistered() {
          return r;
        }
      }
      a.displayName = "SpotifyProtocolStore";
      var o = new a(i.default, {
        SPOTIFY_SET_PROTOCOL_REGISTERED: function (e) {
          let { isRegistered: t } = e;
          r = t;
        },
      });
    },
    662285: function (e, t, n) {
      "use strict";
      let s, i, r;
      n.r(t),
        n.d(t, {
          default: function () {
            return ev;
          },
        }),
        n("222007"),
        n("424973"),
        n("808653"),
        n("781738"),
        n("702976");
      var a,
        o,
        d = n("917351"),
        u = n.n(d),
        l = n("981980"),
        f = n("446674"),
        _ = n("233736"),
        c = n("862337"),
        g = n("913144"),
        m = n("899633"),
        h = n("376556"),
        v = n("823704"),
        E = n("605250"),
        p = n("271938"),
        y = n("47319"),
        T = n("603699"),
        C = n("824563"),
        S = n("568307"),
        I = n("280168"),
        A = n("800762"),
        D = n("599110"),
        N = n("550368"),
        O = n("718517"),
        P = n("613691"),
        b = n("450484"),
        V = n("49111");
      let R = h.default.get(V.PlatformTypes.SPOTIFY),
        k = "hm://pusher/v1/connections/",
        M = 30 * O.default.Millis.SECOND,
        w = 30 * O.default.Millis.SECOND,
        L = 5 * O.default.Millis.MINUTE,
        U = 5 * O.default.Millis.SECOND,
        G = 1.5 * O.default.Millis.SECOND,
        F = 1 * O.default.Millis.MINUTE,
        H = 3 * O.default.Millis.SECOND;
      ((o = a || (a = {})).PLAYER_STATE_CHANGED = "PLAYER_STATE_CHANGED"),
        (o.DEVICE_STATE_CHANGED = "DEVICE_STATE_CHANGED");
      let B = { MESSAGE: "message", PING: "ping", PONG: "pong" },
        x = { SINGLE: "single" },
        Y = new E.default("Spotify"),
        j = new c.Timeout(),
        K = new c.Timeout(),
        W = new c.Timeout(),
        z = new c.Timeout(),
        q = new c.Timeout(),
        X = {},
        Q = {},
        Z = {},
        J = !1,
        $ = null;
      function ee() {
        for (let e in X) {
          let t = X[e];
          if (!t.connected || null == Q[e]) continue;
          let n = Q[e].find(e => e.is_active);
          if (null != n) return { socket: t, device: n };
        }
      }
      function et(e) {
        g.default.dispatch({
          type: "SPOTIFY_PLAYER_STATE",
          accountId: e,
          track: null,
          volumePercent: 0,
          isPlaying: !1,
          repeat: !1,
          position: 0,
          context: null,
        });
      }
      function en(e) {
        return C.default.findActivity(
          e,
          e =>
            null != e.party &&
            null != e.party.id &&
            (0, b.isSpotifyParty)(e.party.id)
        );
      }
      let es = new Set([WebSocket.CONNECTING, WebSocket.OPEN]);
      class ei {
        get connected() {
          return null != this.socket && es.has(this.socket.readyState);
        }
        connect() {
          !this.connected &&
            !this._requestedConnect &&
            (Y.info("WS Connecting"),
            (this._requestedDisconnect = !1),
            (this._requestedConnect = !0),
            eg(this.accountId, this.accessToken)
              .then(() => {
                (this._requestedConnect = !1),
                  (this.socket = new WebSocket(
                    ""
                      .concat("wss://dealer.spotify.com/?access_token=")
                      .concat(this.accessToken)
                  )),
                  (this.socket.onopen = this.handleOpen.bind(this)),
                  (this.socket.onmessage = this.handleMessage.bind(this)),
                  (this.socket.onclose = this.socket.onerror =
                    this.handleClose.bind(this));
              })
              .catch(e => {
                Y.error(e), (this._requestedConnect = !1), this.handleClose();
              }));
        }
        disconnect() {
          (this._requestedDisconnect = !0), this.backoff.cancel();
          try {
            var e;
            null === (e = this.socket) || void 0 === e || e.close();
          } catch (e) {}
        }
        ping() {
          var e;
          this.connected &&
            (null === (e = this.socket) ||
              void 0 === e ||
              e.send(JSON.stringify({ type: B.PING })));
        }
        handleOpen() {
          Y.info("WS Connected"),
            this.backoff.succeed(),
            this.pingInterval.start(M, () => this.ping()),
            (0, P.getProfile)(this.accountId, this.accessToken),
            (0, P.getDevices)(this.accountId, this.accessToken);
        }
        handleMessage(e) {
          let { data: t } = e;
          if ("string" != typeof t) return;
          let { type: n, uri: s, payloads: i } = JSON.parse(t);
          switch (n) {
            case B.MESSAGE:
              if ("string" == typeof s && s.startsWith(k))
                (this.connectionId = decodeURIComponent(s.split(k)[1])),
                  (0, P.subscribePlayerStateNotifications)(
                    this.accountId,
                    this.accessToken,
                    this.connectionId
                  );
              else if (Array.isArray(i)) {
                for (let { events: e } of i)
                  if (null != e) for (let t of e) this.handleEvent(t);
              }
            case B.PONG:
          }
        }
        handleClose() {
          if ((this.pingInterval.stop(), !this._requestedDisconnect))
            try {
              let e = this.backoff.fail(() => {
                !this._requestedDisconnect && this.connect();
              });
              Y.info(
                "WS Disconnected. Next retry in ".concat(Math.round(e), "ms")
              );
            } catch (e) {}
        }
        handleEvent(e) {
          let { type: t, event: n } = e;
          switch (t) {
            case "PLAYER_STATE_CHANGED":
              null != n &&
                null != n.state &&
                ec(this.accountId, this.accessToken, n.state);
              break;
            case "DEVICE_STATE_CHANGED":
              this.handleDeviceStateChange();
          }
        }
        constructor(e, t) {
          (this._requestedDisconnect = !1),
            (this._requestedConnect = !1),
            (this.handleDeviceStateChange = u.throttle(() => {
              (0, P.getDevices)(this.accountId, this.accessToken),
                eg(this.accountId, this.accessToken);
            }, H)),
            (this.accountId = e),
            (this.accessToken = t),
            (this.pingInterval = new c.Interval()),
            (this.backoff = new l.default(void 0, F)),
            this.connect();
        }
      }
      function er(e, t) {
        e in X
          ? ((X[e].accessToken = t),
            Y.info("Updated account access token: ".concat(e)))
          : ((X[e] = new ei(e, t)), Y.info("Added account: ".concat(e)));
      }
      function ea(e) {
        if (!(e in X)) return;
        X[e].disconnect(), delete X[e];
        let t = Z[e];
        null != t && null != s && t.track.id === s.track.id && (s = null),
          delete Z[e],
          Y.info("Removed account: ".concat(e));
      }
      function eo(e, t) {
        for (let n of Q[e]) n.is_active = n.id === t;
      }
      function ed(e, t, n) {
        let s = ee();
        if (null == s) return !1;
        let { socket: r, device: a } = s,
          { sync_id: o, party: d, timestamps: u } = t;
        if (
          null == o ||
          null == d ||
          null == d.id ||
          !(0, b.isSpotifyParty)(d.id)
        )
          return !1;
        let l = null != u && null != u.start ? u.start : Date.now(),
          f = Math.max(0, Date.now() - l),
          _ = !1,
          c = Z[r.accountId];
        null != c && !1 === c.repeat && (_ = null),
          (0, P.play)(r.accountId, r.accessToken, o, {
            position: +f,
            deviceId: a.id,
            repeat: _,
          }),
          (i = { userId: e, partyId: d.id, trackId: o, startTime: l });
        let g = "presence change";
        n &&
          ((g = "started"),
          D.default.track(V.AnalyticEvents.SPOTIFY_LISTEN_ALONG_STARTED, {
            party_id: d.id,
            other_user_id: e,
          })),
          Y.info(
            "Listen along "
              .concat(g, ": ")
              .concat(r.accountId, " to ")
              .concat(e, " playing ")
              .concat(o, " on ")
              .concat(a.name)
          );
      }
      function eu() {
        D.default.track(V.AnalyticEvents.SPOTIFY_LISTEN_ALONG_ENDED, {
          party_id: null != i ? i.partyId : null,
          other_user_id: null != i ? i.userId : null,
        });
        let e = null != i ? i.trackId : null;
        (i = null), Y.info("Listen along stopped");
        let t = ee();
        if (null == t) return;
        let { socket: n } = t,
          s = Z[n.accountId];
        null != s &&
          s.track.id === e &&
          (0, P.pause)(n.accountId, n.accessToken);
      }
      function el() {
        let e = Object.keys(X),
          t = y.default.getAccounts().filter(e => {
            let { type: t } = e;
            return t === V.PlatformTypes.SPOTIFY;
          });
        if (null == t) return !1;
        let n = t.map(e => {
          let { id: t } = e;
          return t;
        });
        for (let t of e) !n.includes(t) && ea(t);
        let i = !1;
        for (let n of t)
          if (
            (null != s && s.account.id === n.id && ((s.account = n), (i = !0)),
            !e.includes(n.id))
          ) {
            if (null != n.accessToken) {
              er(n.id, n.accessToken);
              continue;
            }
            (0, P.getAccessToken)(n.id);
          }
        return i;
      }
      function ef() {
        if (null == s) return;
        let e = ee();
        if (null == e) return;
        let { socket: t } = e;
        (J = !0),
          (0, P.pause)(t.accountId, t.accessToken),
          D.default.track(V.AnalyticEvents.SPOTIFY_AUTO_PAUSED),
          Y.info("Playback auto paused");
      }
      function e_(e) {
        if (e === p.default.getId()) {
          let t = A.default.isCurrentClientInVoiceChannel(),
            n = (0, m.getIsSpeaking)({
              userId: e,
              checkSoundSharing: !0,
              checkSoundboardSounds: !1,
            });
          t && n && null != s
            ? (j.start(w, ef, !1), K.stop())
            : K.start(100, () => j.stop(), !1);
        }
        return !1;
      }
      function ec(e, t, n) {
        let s,
          i,
          {
            device: r,
            progress_ms: a,
            is_playing: o,
            repeat_state: d,
            item: u,
            context: l,
          } = n;
        if (null != u && u.type === b.SpotifyResourceTypes.TRACK) {
          let e = u.id;
          null != u.linked_from &&
            null != u.linked_from.id &&
            (e = u.linked_from.id),
            (s = {
              id: e,
              name: u.name,
              duration: u.duration_ms,
              album: {
                id: u.album.id,
                name: u.album.name,
                image: u.album.images[0],
              },
              artists: u.artists,
              isLocal: u.is_local || !1,
            });
        }
        if (
          (null != r && !0 !== r.is_active && (r = { ...r, is_active: !0 }),
          null != l &&
            [
              b.SpotifyResourceTypes.PLAYLIST,
              b.SpotifyResourceTypes.ALBUM,
            ].includes(l.type))
        ) {
          let n = eh.getPlayerState(e);
          i =
            null != n && null != n.context && n.context.uri === l.uri
              ? Promise.resolve(n.context)
              : l.type === b.SpotifyResourceTypes.ALBUM
                ? Promise.resolve(l)
                : P.SpotifyAPI.get(e, t, { url: l.href })
                    .then(e => {
                      let { body: t } = e;
                      return t;
                    })
                    .catch(e => {
                      if (e && 404 === e.status) return null;
                      throw e;
                    });
        } else i = Promise.resolve(void 0);
        return i.then(t => {
          null != t &&
            t.type === b.SpotifyResourceTypes.PLAYLIST &&
            !t.public &&
            (t = null),
            g.default.dispatch({
              type: "SPOTIFY_PLAYER_STATE",
              accountId: e,
              track: s,
              volumePercent: null != r ? r.volume_percent : 0,
              isPlaying: o,
              repeat: "off" !== d,
              position: a,
              context: t,
              device: r,
            });
        });
      }
      function eg(e, t) {
        return P.SpotifyAPI.get(e, t, {
          url: b.SpotifyEndpoints.PLAYER,
          onlyRetryOnAuthorizationErrors: !0,
        })
          .then(n => {
            let s = n.body;
            null != s ? ec(e, t, s).then(() => n) : et(e);
          })
          .catch(() => et(e));
      }
      class em extends f.default.Store {
        initialize() {
          this.waitFor(y.default, I.default),
            this.syncWith([C.default], () =>
              (function () {
                if (null == i) return !1;
                let e = ee();
                if (null == e) return !1;
                let { userId: t } = i,
                  n = en(t);
                if (null == n)
                  return (
                    W.start(L, () => {
                      null != i && i.userId === t && (0, v.default)();
                    }),
                    !1
                  );
                W.stop();
                let { sync_id: s, timestamps: r, party: a } = n,
                  o = null != s && i.trackId !== s,
                  d = null != r && i.startTime !== r.start;
                return o || d
                  ? ed(t, n, !1)
                  : null != a && a.id !== i.partyId && ((i.partyId = a.id), !0);
              })()
            ),
            (0, P.fetchIsSpotifyProtocolRegistered)();
        }
        hasConnectedAccount() {
          return Object.keys(X).length > 0;
        }
        getActiveSocketAndDevice() {
          return ee();
        }
        getPlayableComputerDevices() {
          let e = [];
          for (let t in X) {
            let n = X[t];
            if (!n.connected || null == Q[t]) continue;
            let s = Q[t].find(e => !e.is_restricted && "Computer" === e.type);
            null != s && e.push({ socket: n, device: s });
          }
          return e;
        }
        canPlay(e) {
          let { sync_id: t, party: n } = e;
          return (
            null != ee() &&
            null != t &&
            null != n &&
            null != n.id &&
            (0, b.isSpotifyParty)(n.id)
          );
        }
        getSyncingWith() {
          return i;
        }
        wasAutoPaused() {
          return J;
        }
        getLastPlayedTrackId() {
          return r;
        }
        getTrack() {
          return null != s ? s.track : null;
        }
        getPlayerState(e) {
          return Z[e];
        }
        shouldShowActivity() {
          return null != s && s.account.showActivity && !T.default.isIdle();
        }
        getActivity() {
          let e, t, n;
          if (null == s) return null != i ? en(i.userId) : null;
          let {
              track: {
                artists: r,
                album: a,
                name: o,
                id: d,
                duration: u,
                isLocal: l,
              },
              startTime: f,
              context: _,
            } = s,
            c = r.slice(0, 5);
          r.length > 0 &&
            (e = c
              .map(e => {
                let { name: t } = e;
                return t.replace(/;/g, "");
              })
              .join("; "));
          let g = {},
            m =
              null != a.image
                ? (0, N.getAssetFromImageURL)(
                    V.PlatformTypes.SPOTIFY,
                    a.image.url
                  )
                : null;
          null != a.image && null != m && (g.large_image = m),
            "single" !== a.type && (g.large_text = a.name),
            null != _ && (t = _.uri),
            (n =
              null != i && null != i.partyId
                ? i.partyId
                : "".concat(b.SPOTIFY_PARTY_PREFIX).concat(p.default.getId()));
          let h = o.length > 128 ? o.substring(0, 125) + "..." : o,
            v = {
              name: R.name,
              assets: g,
              details: h,
              state: e,
              timestamps: { start: f, end: f + u },
              party: { id: n },
            };
          return (
            !l &&
              ((v.sync_id = d),
              (v.flags = V.ActivityFlags.PLAY | V.ActivityFlags.SYNC),
              (v.metadata = {
                context_uri: t,
                album_id: a.id,
                artist_ids: c.map(e => {
                  let { id: t } = e;
                  return t;
                }),
              })),
            v
          );
        }
      }
      em.displayName = "SpotifyStore";
      let eh = new em(g.default, {
        USER_CONNECTIONS_UPDATE: el,
        CONNECTION_OPEN: el,
        SPOTIFY_ACCOUNT_ACCESS_TOKEN: function (e) {
          let { accountId: t, accessToken: n } = e;
          return er(t, n), !1;
        },
        SPOTIFY_ACCOUNT_ACCESS_TOKEN_REVOKE: function (e) {
          let { accountId: t } = e;
          ea(t);
        },
        SPOTIFY_PROFILE_UPDATE: function (e) {
          let { accountId: t, isPremium: n } = e,
            s = X[t];
          if (null == s) return !1;
          (s.isPremium = n),
            Y.info(
              "Profile updated for ".concat(t, ": isPremium = ").concat(n)
            );
        },
        SPOTIFY_PLAYER_STATE: function (e) {
          let {
              accountId: t,
              isPlaying: n,
              repeat: r,
              track: a,
              position: o,
              device: d,
              context: l,
            } = e,
            f = !1;
          if (null != d) {
            if (null != Q[t]) {
              let e = Q[t].find(e => {
                let { id: t } = e;
                return t === d.id;
              });
              null == e
                ? (Q[t].push(d), (f = !0))
                : !(0, _.default)(e, d) && (Object.assign(e, d), (f = !0)),
                eo(t, d.id);
            } else (Q[t] = [d]), (f = !0);
          }
          n ? null == $ || $.start(w, ef) : ((a = null), null == $ || $.stop());
          let c = y.default.getAccount(t, V.PlatformTypes.SPOTIFY);
          if (null == c) return f;
          let g = Z[t],
            m =
              null != a
                ? {
                    account: c,
                    track: a,
                    startTime: (function (e, t) {
                      let n = Date.now(),
                        s = null != e ? e.startTime : 0,
                        i = n - t;
                      return Math.abs(i - s) > G ? i : s;
                    })(g, o),
                    context: l,
                    repeat: r,
                  }
                : null,
            h = null != d && null != i && 0 === o && !n;
          !h && (Z[t] = m);
          let E = s;
          if (
            ((s = u.values(Z).find(e => null != e)),
            e_(p.default.getId()),
            null == a || h
              ? z.stop()
              : z.start(a.duration - o + U, () => et(c.id)),
            null != i &&
            ((!n && o > 0) ||
              null == d ||
              (null != m && i.trackId !== m.track.id))
              ? (Y.info(
                  "Listen along active but playback stopped or track changed. Stopping listen along in ".concat(
                    U,
                    "ms"
                  )
                ),
                q.start(U, () => {
                  Y.info("Stopping listening along"),
                    (0, v.default)(),
                    et(c.id);
                }))
              : q.isStarted() &&
                (Y.info(
                  "Listen along stop cancelled as playback of track resumed"
                ),
                q.stop()),
            E === s ||
              (null == g && null == m) ||
              (null != g &&
                null != m &&
                g.track.id === m.track.id &&
                g.startTime === m.startTime))
          )
            return f;
          null != a &&
            D.default.track(V.AnalyticEvents.ACTIVITY_UPDATED, {
              party_platform: V.PlatformTypes.SPOTIFY,
              track_id: a.id,
              has_images: !0,
            });
        },
        SPOTIFY_PLAYER_PLAY: function (e) {
          let { id: t } = e;
          r = t;
        },
        ACTIVITY_PLAY: function (e) {
          let t,
            { activity: n, metadata: s } = e,
            r = ee();
          if (null == r) return !1;
          let { socket: a, device: o } = r,
            { sync_id: d, party: u } = n;
          if (
            null == d ||
            null == u ||
            null == u.id ||
            !(0, b.isSpotifyParty)(u.id)
          )
            return !1;
          null != s && (t = s.context_uri),
            null != i && eu(),
            (0, P.play)(a.accountId, a.accessToken, d, {
              contextUri: t,
              deviceId: o.id,
            }),
            Y.info(
              "Play started: "
                .concat(a.accountId, " playing ")
                .concat(d, " on ")
                .concat(o.name)
            );
        },
        ACTIVITY_SYNC: function (e) {
          let { activity: t, userId: n } = e;
          return ed(n, t, !0);
        },
        ACTIVITY_SYNC_STOP: eu,
        SPOTIFY_SET_DEVICES: function (e) {
          let { accountId: t, devices: n } = e;
          (Q[t] = n), Y.info("Devices updated for ".concat(t, ":"), n);
        },
        SPOTIFY_SET_ACTIVE_DEVICE: function (e) {
          let { accountId: t, deviceId: n } = e;
          eo(t, n);
        },
        SPEAKING: function (e) {
          let { userId: t } = e;
          return e_(t);
        },
        VOICE_STATE_UPDATES: function (e) {
          let { voiceStates: t } = e;
          return t.reduce((e, t) => {
            let { userId: n } = t;
            return e_(n) || e;
          }, !1);
        },
        MEDIA_ENGINE_SET_GO_LIVE_SOURCE: function (e) {
          let { settings: t } = e;
          if ((null == t ? void 0 : t.desktopSettings) != null) {
            null == $ || $.stop();
            let { sourceId: e, sound: n } =
                null == t ? void 0 : t.desktopSettings,
              s =
                null != e &&
                S.default.getObservedAppNameForWindow(e) === R.name;
            s && n ? ($ = new c.Interval()).start(w, ef) : ($ = null);
          }
        },
      });
      var ev = eh;
    },
    751661: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          openStageChannelSettings: function () {
            return c;
          },
          openEndGuildEventConfirmationModal: function () {
            return g;
          },
          openStageChannelAudienceNoticeModal: function () {
            return m;
          },
          openStageBlockedUsersSheet: function () {
            return h;
          },
          openEndStageModal: function () {
            return v;
          },
          shouldShowBlockedUsers: function () {
            return E;
          },
          navigateToStage: function () {
            return p;
          },
          showChannelChangeConfirmationAlert: function () {
            return y;
          },
        });
      var s = n("37983");
      n("884691");
      var i = n("551042"),
        r = n("144491"),
        a = n("271938"),
        o = n("325861"),
        d = n("834052"),
        u = n("534471"),
        l = n("151642"),
        f = n("49111"),
        _ = n("625611");
      function c(e, t) {
        (0, i.openModalLazy)(
          async () => {
            let { default: t } = await n.el("435768").then(n.bind(n, "435768"));
            return n => (0, s.jsx)(t, { ...n, channel: e });
          },
          {
            contextKey:
              t === f.AppContext.POPOUT
                ? _.POPOUT_MODAL_CONTEXT
                : _.DEFAULT_MODAL_CONTEXT,
          }
        );
      }
      function g(e, t) {
        (0, i.openModalLazy)(
          async () => {
            let { default: t } = await n.el("312953").then(n.bind(n, "312953"));
            return n => (0, s.jsx)(t, { ...n, channel: e });
          },
          {
            contextKey:
              t === f.AppContext.POPOUT
                ? _.POPOUT_MODAL_CONTEXT
                : _.DEFAULT_MODAL_CONTEXT,
          }
        );
      }
      function m(e) {}
      function h(e, t) {
        (0, i.openModalLazy)(async () => {
          let { default: i } = await n.el("203966").then(n.bind(n, "203966"));
          return n => (0, s.jsx)(i, { ...n, channel: e, onAccept: t });
        });
      }
      function v(e, t) {
        (0, i.openModalLazy)(
          async () => {
            let { default: t } = await n.el("281645").then(n.bind(n, "281645"));
            return n => (0, s.jsx)(t, { ...n, channel: e });
          },
          {
            contextKey:
              t === f.AppContext.POPOUT
                ? _.POPOUT_MODAL_CONTEXT
                : _.DEFAULT_MODAL_CONTEXT,
          }
        );
      }
      function E(e) {
        let t = a.default.getId(),
          n = (0, l.getStageBlockedUsersCount)(e),
          s = o.default.isModerator(t, e);
        return !s && n > 0;
      }
      function p(e, t) {
        var l;
        let f =
          !(arguments.length > 2) || void 0 === arguments[2] || arguments[2];
        t !== e.id && (0, u.setIsOnStartStageScreen)(!0),
          (l = e),
          (0, r.transitionToChannel)(l.id),
          t !== e.id &&
            f &&
            !(function (e) {
              let t = a.default.getId(),
                r = o.default.isModerator(t, e.id),
                u = d.default.isLive(e.id);
              r && !u
                ? c(e)
                : r &&
                  u &&
                  (function (e) {
                    (0, i.openModalLazy)(async () => {
                      let { default: t } = await n
                        .el("337649")
                        .then(n.bind(n, "337649"));
                      return n => (0, s.jsx)(t, { ...n, channel: e });
                    });
                  })(e);
            })(e);
      }
      function y(e, t) {
        return (
          (0, i.openModalLazy)(async () => {
            let { default: i } = await n.el("371895").then(n.bind(n, "371895"));
            return n => (0, s.jsx)(i, { channel: e, onConfirm: t, ...n });
          }),
          !0
        );
      }
    },
    569182: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          openStageChannelAudienceNoticeModal: function () {
            return i;
          },
        });
      var s = n("751661");
      function i(e) {
        s.openStageChannelAudienceNoticeModal(e);
      }
    },
    716214: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          connectOrLurkStage: function () {
            return v;
          },
          connectToStage: function () {
            return E;
          },
          connectAndOpen: function () {
            return p;
          },
          navigateToStage: function () {
            return y;
          },
        });
      var s = n("851387"),
        i = n("987317"),
        r = n("990766"),
        a = n("792367"),
        o = n("248967"),
        d = n("373469"),
        u = n("42203"),
        l = n("305961"),
        f = n("957255"),
        _ = n("18494"),
        c = n("751661"),
        g = n("27822"),
        m = n("923510"),
        h = n("30577");
      function v(e, t) {
        let n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
        return new Promise(async i => {
          let r = u.default.getChannel(t);
          if (null != r) return E(r, n), i(r);
          await (0, o.stopLurkingAll)([e]),
            await s.default.joinGuild(e, { lurker: !0 }),
            l.default.addConditionalChangeListener(() => {
              let e = u.default.getChannel(t);
              return null == e || (E(e), h.default.initialize(), i(e), !1);
            });
        });
      }
      function E(e) {
        let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
          n = _.default.getVoiceChannelId();
        if (
          !t &&
          !(function (e, t) {
            let n = f.default.can(m.JOIN_VOCAL_CHANNEL_PERMISSIONS, e);
            return (
              !!n &&
              (!c.shouldShowBlockedUsers(e.id) ||
                t === e.id ||
                (c.openStageBlockedUsersSheet(e, () => p(e, !0)), !1))
            );
          })(e, n)
        )
          return !1;
        if (
          (g.default.initialize(),
          i.default.selectVoiceChannel(e.id),
          (n = _.default.getVoiceChannelId()) !== e.id)
        )
          return !1;
        let s = d.default.getAllApplicationStreamsForChannel(e.id);
        return s.length > 0 && (0, r.watchStream)(s[0], { noFocus: !1 }), !0;
      }
      function p(e) {
        let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
          n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
          s = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],
          i = _.default.getVoiceChannelId();
        if (
          !s &&
          i !== e.id &&
          (0, a.shouldShowVoiceChannelChangeConfirmation)(e) &&
          c.showChannelChangeConfirmationAlert(e, () => p(e, t, n, !0))
        )
          return;
        let r = E(e, t);
        r && y(e, i, n);
      }
      function y(e, t) {
        let n =
          !(arguments.length > 2) || void 0 === arguments[2] || arguments[2];
        c.navigateToStage(e, t, n);
      }
    },
    27822: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        }),
        n("222007");
      var s = n("95410"),
        i = n("913144"),
        r = n("316272"),
        a = n("271938"),
        o = n("18494"),
        d = n("569182"),
        u = n("325861"),
        l = n("837979");
      class f extends r.default {
        _initialize() {
          i.default.subscribe(
            "VOICE_STATE_UPDATES",
            this.handleVoiceStateUpdates
          );
        }
        _terminate() {
          i.default.unsubscribe(
            "VOICE_STATE_UPDATES",
            this.handleVoiceStateUpdates
          );
        }
        constructor(...e) {
          super(...e),
            (this.handleVoiceStateUpdates = e => {
              let { voiceStates: t } = e;
              t.forEach(e => {
                if (null == e.channelId || e.userId !== a.default.getId())
                  return;
                if (
                  (this.terminate(),
                  s.default.get(l.STAGE_AUDIENCE_NOTICE_SHOWN_STORAGE_KEY, !1))
                )
                  return;
                let t = o.default.getVoiceChannelId();
                if (null != t)
                  e.channelId === t &&
                    u.default.isAudienceMember(e.userId, t) &&
                    (s.default.set(
                      l.STAGE_AUDIENCE_NOTICE_SHOWN_STORAGE_KEY,
                      !0
                    ),
                    d.openStageChannelAudienceNoticeModal(t));
              });
            });
        }
      }
      var _ = new f();
    },
    619395: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          removeModeratorOverwrite: function () {
            return c;
          },
          isEmptyOverwrite: function () {
            return g;
          },
          useCanUpdateStageChannelModerators: function () {
            return m;
          },
          useCanModerateRequestToSpeak: function () {
            return h;
          },
          canLurkerListen: function () {
            return v;
          },
        });
      var s = n("316693"),
        i = n("446674"),
        r = n("267567");
      n("271938");
      var a = n("42203"),
        o = n("305961"),
        d = n("957255"),
        u = n("991170"),
        l = n("923510"),
        f = n("834052"),
        _ = n("49111");
      function c(e, t, n) {
        var i, r;
        let a = null == n ? void 0 : n.permissionOverwrites[e];
        return {
          id: e,
          type: t,
          deny:
            null !== (i = null == a ? void 0 : a.deny) && void 0 !== i
              ? i
              : u.default.NONE,
          allow: s.default.remove(
            null !== (r = null == a ? void 0 : a.allow) && void 0 !== r
              ? r
              : u.default.NONE,
            l.MODERATE_STAGE_CHANNEL_PERMISSIONS
          ),
        };
      }
      function g(e) {
        let { allow: t, deny: n } = e;
        return (
          s.default.equals(t, u.default.NONE) &&
          s.default.equals(n, u.default.NONE)
        );
      }
      function m(e) {
        return (0, i.useStateFromStores)(
          [d.default, o.default, a.default],
          () => {
            let t = a.default.getChannel(e),
              n = o.default.getGuild(null == t ? void 0 : t.getGuildId());
            return (
              !!(
                d.default.can(_.Permissions.ADMINISTRATOR, n) ||
                d.default.can(
                  _.Permissions.MANAGE_ROLES,
                  t,
                  void 0,
                  void 0,
                  !0
                ) ||
                d.default.can(l.UPDATE_STAGE_CHANNEL_MODERATOR_PERMISSIONS, t)
              ) || !1
            );
          },
          [e]
        );
      }
      function h(e) {
        return (0, i.useStateFromStores)(
          [a.default, d.default],
          () =>
            null != e &&
            d.default.can(_.Permissions.MUTE_MEMBERS, a.default.getChannel(e)),
          [e]
        );
      }
      function v(e) {
        return (
          !!(
            null != e &&
            e.isGuildStageVoice() &&
            r.default.isLurking(e.guild_id) &&
            f.default.isPublic(e.id)
          ) && d.default.can(l.JOIN_VOCAL_CHANNEL_PERMISSIONS, e)
        );
      }
    },
    118033: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          packStageChannelPartyId: function () {
            return l;
          },
          unpackStageChannelParty: function () {
            return f;
          },
          isStageActivity: function () {
            return _;
          },
          shouldShowActivity: function () {
            return c;
          },
        }),
        n("222007");
      var s = n("271938"),
        i = n("42203"),
        r = n("305961"),
        a = n("325861"),
        o = n("837979"),
        d = n("49111");
      let u = "stage:";
      function l(e, t) {
        let n = 0,
          i = s.default.getId(),
          o = a.default.isSpeaker(i, e.id);
        o && (n |= 1);
        let l = r.default.getGuild(e.getGuildId());
        null != l &&
          (l.hasFeature(d.GuildFeatures.PARTNERED) && (n |= 2),
          l.hasFeature(d.GuildFeatures.VERIFIED) && (n |= 4));
        let f = n.toString(16);
        return ""
          .concat(u)
          .concat(e.guild_id, ":")
          .concat(e.id, ":")
          .concat(f, ":")
          .concat(t.id);
      }
      function f(e) {
        if (null == e || null == e.party) return;
        let { id: t, size: n } = e.party;
        try {
          if (null == t || !t.startsWith(u)) return;
          let [, e, s, i, r] = t.split(":"),
            a = parseInt(i, 16);
          return {
            guildId: e,
            channelId: s,
            size: n,
            userIsSpeaker: (1 & a) != 0,
            guildIsPartnered: (2 & a) != 0,
            guildIsVerified: (4 & a) != 0,
            stageInstanceId: r,
          };
        } catch (e) {
          return null;
        }
      }
      function _(e) {
        return (
          (null == e ? void 0 : e.application_id) === o.STAGE_APPLICATION_ID
        );
      }
      function c(e) {
        let t = f(e);
        if (null == t) return !1;
        let { channelId: n } = t,
          s = i.default.getChannel(n);
        return null != s;
      }
    },
    77173: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return C;
          },
        });
      var s = n("714617"),
        i = n.n(s),
        r = n("446674"),
        a = n("913144"),
        o = n("42203"),
        d = n("305961"),
        u = n("945956"),
        l = n("18494"),
        f = n("991170"),
        _ = n("488464"),
        c = n("998716"),
        g = n("118033"),
        m = n("834052"),
        h = n("819450"),
        v = n("837979"),
        E = n("49111");
      let p = null;
      function y() {
        let e = (function () {
          var e, t, n, s, i, r, a;
          let u = l.default.getVoiceChannelId();
          if (null == u) return null;
          let y = m.default.getStageInstanceByChannel(u);
          if (null == y) return null;
          let T = o.default.getChannel(u);
          if (
            null == T ||
            !f.default.canEveryone(E.Permissions.VIEW_CHANNEL, T)
          )
            return null;
          let C = d.default.getGuild(T.getGuildId());
          if (null == C || !C.hasFeature(E.GuildFeatures.DISCOVERABLE))
            return null;
          let S = (0, g.packStageChannelPartyId)(T, y),
            I =
              (null == p
                ? void 0
                : null === (e = p.party) || void 0 === e
                  ? void 0
                  : e.id) === S
                ? p
                : null,
            A = _.default.getMutableParticipants(
              T.id,
              c.StageChannelParticipantNamedIndex.SPEAKER
            ),
            D = A.filter(
              e => e.type === c.StageChannelParticipantTypes.STREAM
            ).length,
            N = A.length - D,
            O = _.default.getParticipantCount(u) - D,
            P =
              (null == I
                ? void 0
                : null === (t = I.party) || void 0 === t
                  ? void 0
                  : t.size) != null
                ? I.party.size[1]
                : 0;
          return {
            application_id: v.STAGE_APPLICATION_ID,
            name:
              null !==
                (i = null !== (s = y.topic) && void 0 !== s ? s : T.topic) &&
              void 0 !== i
                ? i
                : T.name,
            type: (0, h.getStageHasMedia)(T.id)
              ? E.ActivityTypes.WATCHING
              : E.ActivityTypes.LISTENING,
            timestamps: {
              start:
                null !==
                  (r =
                    null == I
                      ? void 0
                      : null === (n = I.timestamps) || void 0 === n
                        ? void 0
                        : n.start) && void 0 !== r
                  ? r
                  : new Date().getTime(),
            },
            assets: {
              small_image: null !== (a = C.icon) && void 0 !== a ? a : void 0,
              small_text: C.name,
            },
            party: { id: S, size: [N, Math.max(O, P)] },
          };
        })();
        return !i(e, p) && ((p = e), !0);
      }
      class T extends r.default.Store {
        initialize() {
          this.waitFor(o.default, l.default, m.default, u.default);
        }
        getActivity() {
          return p;
        }
      }
      T.displayName = "StageChannelSelfRichPresenceStore";
      var C = new T(a.default, {
        CONNECTION_OPEN: y,
        STAGE_INSTANCE_CREATE: y,
        STAGE_INSTANCE_UPDATE: y,
        STAGE_INSTANCE_DELETE: y,
        VOICE_CHANNEL_SELECT: y,
        RTC_CONNECTION_STATE: function (e) {
          var t, n, s;
          let { state: i } = e,
            r =
              null !==
                (s =
                  null == p
                    ? void 0
                    : null === (n = p.party) || void 0 === n
                      ? void 0
                      : null === (t = n.size) || void 0 === t
                        ? void 0
                        : t[1]) && void 0 !== s
                ? s
                : 0;
          return i === E.RTCConnectionStates.RTC_CONNECTED && !(r > 0) && y();
        },
        VOICE_STATE_UPDATES: function (e) {
          let { voiceStates: t } = e;
          if (null == p) return;
          let n = (0, g.unpackStageChannelParty)(p);
          null != n && null != t.find(e => e.channelId === n.channelId) && y();
        },
      });
    },
    837979: function (e, t, n) {
      "use strict";
      var s, i, r, a;
      n.r(t),
        n.d(t, {
          MAX_STAGE_TOPIC_LENGTH: function () {
            return o;
          },
          STAGE_APPLICATION_ID: function () {
            return d;
          },
          STAGE_INVITE_STATE_KEY: function () {
            return u;
          },
          STAGE_AUDIENCE_NOTICE_SHOWN_STORAGE_KEY: function () {
            return l;
          },
          RequestToSpeakPermissionStates: function () {
            return s;
          },
          StartStageSteps: function () {
            return i;
          },
        }),
        n("701909"),
        n("49111"),
        n("782340");
      let o = 240,
        d = "834488117758001152",
        u = "stage-invite",
        l = "stage-channel-audience-notice-shown";
      ((r = s || (s = {}))[(r.EVERYONE = 1)] = "EVERYONE"),
        (r[(r.NO_ONE = 2)] = "NO_ONE"),
        (r[(r.ROLES = 3)] = "ROLES"),
        ((a = i || (i = {}))[(a.GUILD_SELECTION = 0)] = "GUILD_SELECTION"),
        (a[(a.STAGE_CHANNEL_SETTINGS = 1)] = "STAGE_CHANNEL_SETTINGS"),
        (a[(a.PUBLIC_STAGE_PREVIEW = 2)] = "PUBLIC_STAGE_PREVIEW");
    },
    30577: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        }),
        n("222007");
      var s = n("913144"),
        i = n("316272"),
        r = n("248967"),
        a = n("42203"),
        o = n("162771"),
        d = n("449008");
      class u extends i.default {
        _initialize() {
          s.default.subscribe(
            "VOICE_CHANNEL_SELECT",
            this.handleVoiceChannelSelect
          ),
            s.default.subscribe("LOGOUT", this.handleLogout);
        }
        _terminate() {
          s.default.unsubscribe(
            "VOICE_CHANNEL_SELECT",
            this.handleVoiceChannelSelect
          ),
            s.default.unsubscribe("LOGOUT", this.handleLogout);
        }
        constructor(...e) {
          super(...e),
            (this.handleVoiceChannelSelect = e => {
              let { channelId: t, guildId: n } = e;
              if (null != t) {
                let e = a.default.getChannel(t),
                  n = null == e || e.isGuildStageVoice();
                if (n) return;
              }
              this.terminate();
              this.handleDisconnectFromStageChannel(
                null == t ? null : null != n ? n : null
              );
            }),
            (this.handleDisconnectFromStageChannel = e => {
              let t = o.default.getGuildId();
              (0, r.stopLurkingAll)([t, e].filter(d.isNotNullish));
            }),
            (this.handleLogout = () => {
              this.terminate(), this.handleDisconnectFromStageChannel(null);
            });
        }
      }
      var l = new u();
    },
    819450: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useStageHasMedia: function () {
            return d;
          },
          getStageHasMedia: function () {
            return u;
          },
          isStageVideoEnabled: function () {
            return l;
          },
        });
      var s = n("446674"),
        i = n("305961"),
        r = n("800762"),
        a = n("488464"),
        o = n("998716");
      function d(e) {
        let t = (function (e) {
            return (0, s.useStateFromStores)(
              [a.default],
              () => {
                let t = a.default.getMutableParticipants(
                  e,
                  o.StageChannelParticipantNamedIndex.SPEAKER
                );
                return (
                  null !=
                  t.find(e => e.type === o.StageChannelParticipantTypes.STREAM)
                );
              },
              [e]
            );
          })(e),
          n = (0, s.useStateFromStores)(
            [r.default],
            () => r.default.hasVideo(e),
            [e]
          );
        return n || t;
      }
      function u(e) {
        return (
          (function (e) {
            let t = a.default.getMutableParticipants(
              e,
              o.StageChannelParticipantNamedIndex.SPEAKER
            );
            return (
              null !=
              t.find(e => e.type === o.StageChannelParticipantTypes.STREAM)
            );
          })(e) || r.default.hasVideo(e)
        );
      }
      function l(e) {
        var t;
        let n = i.default.getGuild(e);
        return (
          null != n &&
          (null !== (t = null == n ? void 0 : n.maxStageVideoChannelUsers) &&
          void 0 !== t
            ? t
            : 0) > 0
        );
      }
    },
    534471: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
          setIsOnStartStageScreen: function () {
            return _;
          },
          useUpdateIsOnStartStageScreenEffect: function () {
            return c;
          },
        });
      var s = n("884691"),
        i = n("308503"),
        r = n("446674"),
        a = n("957255"),
        o = n("18494"),
        d = n("923510"),
        u = n("58763");
      let l = (0, i.default)(e => ({ isOnStartStageScreen: !0 }));
      var f = l;
      function _(e) {
        l.setState({ isOnStartStageScreen: e });
      }
      function c(e) {
        let t = (0, r.useStateFromStores)(
            [o.default],
            () => o.default.getVoiceChannelId() === e.id
          ),
          n = (0, r.useStateFromStores)(
            [a.default],
            () => a.default.can(d.MODERATE_STAGE_CHANNEL_PERMISSIONS, e),
            [e]
          ),
          i = (0, u.default)(e.id),
          l = n && !i;
        s.useEffect(() => {
          t ? !l && _(!1) : _(l);
        }, [t, l]);
      }
    },
    151642: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useStageBlockedUsersCount: function () {
            return a;
          },
          getStageBlockedUsersCount: function () {
            return o;
          },
          useStageBlockedUsers: function () {
            return d;
          },
        });
      var s = n("446674"),
        i = n("488464"),
        r = n("998716");
      function a(e) {
        return (0, s.useStateFromStores)(
          [i.default],
          () =>
            null != e
              ? i.default.getParticipantCount(
                  e,
                  r.StageChannelParticipantNamedIndex.BLOCKED
                )
              : 0,
          [e]
        );
      }
      function o(e) {
        var t;
        return null !==
          (t = i.default.getParticipantCount(
            e,
            r.StageChannelParticipantNamedIndex.BLOCKED
          )) && void 0 !== t
          ? t
          : 0;
      }
      function d(e) {
        return (0, s.useStateFromStores)(
          [i.default],
          () =>
            i.default.getMutableParticipants(
              e,
              r.StageChannelParticipantNamedIndex.BLOCKED
            ),
          [e]
        );
      }
    },
    58763: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("446674"),
        i = n("834052");
      function r(e) {
        return (0, s.useStateFromStores)(
          [i.default],
          () => i.default.isLive(e),
          [e]
        );
      }
    },
    328511: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var s = n("35092"),
        i = n("913144"),
        r = n("474643");
      let a = {},
        o = {};
      class d extends s.default.Store {
        getStickerPreview(e, t) {
          let n = t === r.DraftType.FirstThreadMessage ? o : a;
          return n[e];
        }
      }
      d.displayName = "StickerMessagePreviewStore";
      let u = new d(i.default, {
        ADD_STICKER_PREVIEW: function (e) {
          let { channelId: t, sticker: n, draftType: s } = e,
            i = s === r.DraftType.FirstThreadMessage ? o : a;
          i[t] = [n];
        },
        CLEAR_STICKER_PREVIEW: function (e) {
          let { channelId: t, draftType: n } = e,
            s = n === r.DraftType.FirstThreadMessage ? o : a;
          null != s[t] && delete s[t];
        },
        LOGOUT: function () {
          (a = {}), (o = {});
        },
      });
      var l = u;
    },
    364685: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return M;
          },
        }),
        n("222007"),
        n("424973");
      var s = n("102053"),
        i = n("446674"),
        r = n("913144"),
        a = n("802493"),
        o = n("595525"),
        d = n("212084"),
        u = n("867805"),
        l = n("267567"),
        f = n("813006"),
        _ = n("778689"),
        c = n("305961"),
        g = n("718517"),
        m = n("161585"),
        h = n("24373");
      let v = 2,
        E = new Map(),
        p = new Map(),
        y = null,
        T = [],
        C = null,
        S = !1,
        I = new Map(),
        A = (e, t) => {
          I = new Map(I.set(e, t));
        },
        D = g.default.Millis.HOUR,
        N = async () => {
          if (0 !== v) return;
          let e = a.default.database();
          if (null == e) return;
          v = 2;
          let t = await (0, o.tryLoadOrResetCacheGatewayAsync)(
            "StickerStore.loadSavedGuildStickers",
            () =>
              s.default.timeAsync(
                "\uD83D\uDCBE",
                "loadSavedGuildStickers",
                () => d.default.getAsync(e)
              )
          );
          null != t &&
            r.default.dispatch({ type: "CACHED_STICKERS_LOADED", stickers: t });
        },
        O = function (e) {
          let t =
              !(arguments.length > 1) ||
              void 0 === arguments[1] ||
              arguments[1],
            n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : null;
          p.set(e.id, e), t && P(e, n);
        },
        P = function (e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : null;
          if (null == y) return;
          let { tags: n } = e,
            s = {
              type: m.StickerMetadataTypes.STICKER_NAME,
              value: e.name.trim().toLocaleLowerCase(),
            };
          if ((0, h.isStandardSticker)(e)) {
            let t = T.find(t => t.id === e.pack_id),
              i = [
                s,
                ...(null != n ? n : "")
                  .split(",")
                  .map(e => ({
                    type: m.StickerMetadataTypes.TAG,
                    value: e.trim().toLocaleLowerCase(),
                  })),
              ];
            null != t &&
              i.push({ type: m.StickerMetadataTypes.PACK_NAME, value: t.name }),
              y.set(e.id, i);
          } else if ((0, h.isGuildSticker)(e) && null != n) {
            let i = u.default.getByName(n),
              r = {
                type: m.StickerMetadataTypes.TAG,
                value: n.trim().toLocaleLowerCase(),
              },
              a = [s, r];
            if (null != t) {
              let e = (t instanceof (0, f.default) ? t.name : t.properties.name)
                .trim()
                .toLocaleLowerCase();
              null != e &&
                "" !== e &&
                a.push({ type: m.StickerMetadataTypes.GUILD_NAME, value: e });
            }
            if (null == i) {
              y.set(e.id, a);
              return;
            }
            a.push({
              type: m.StickerMetadataTypes.CORRELATED_EMOJI,
              value: i.surrogates,
            }),
              i.forEachDiversity(e =>
                a.push({
                  type: m.StickerMetadataTypes.CORRELATED_EMOJI,
                  value: e.surrogates,
                })
              ),
              y.set(e.id, a);
          }
        },
        b = (e, t, n) => {
          E.set(e.id, e);
          let s = [...T];
          if (t) {
            let t = s.findIndex(t => t.id === e.id);
            -1 !== t ? (s[t] = e) : s.push(e), (T = s);
          }
          (t || n) && e.stickers.forEach(e => O(e));
        },
        V = () => {
          I.forEach((e, t) => {
            let n = c.default.getGuild(t);
            null != n && e.forEach(e => P(e, n));
          }),
            T.forEach(e => {
              e.stickers.forEach(e => P(e));
            });
        };
      function R(e) {
        null != e.stickers &&
          (e.stickers.forEach(t => O(t, !0, e)), A(e.id, e.stickers));
      }
      class k extends i.default.Store {
        initialize() {
          this.waitFor(a.default, _.default, c.default);
        }
        get isLoaded() {
          return 0 !== v;
        }
        get loadState() {
          return v;
        }
        get stickerMetadata() {
          return N(), null == y && ((y = new Map()), V()), y;
        }
        get hasLoadedStickerPacks() {
          return null != C && C + D > Date.now();
        }
        get isFetchingStickerPacks() {
          return S;
        }
        getStickerById(e) {
          return !p.has(e) && N(), p.get(e);
        }
        getStickerPack(e) {
          return E.get(e);
        }
        getPremiumPacks() {
          return T;
        }
        isPremiumPack(e) {
          return T.some(t => t.id === e);
        }
        getRawStickersByGuild() {
          return I;
        }
        getAllStickersIterator() {
          return N(), p.values();
        }
        getAllGuildStickers() {
          return N(), I;
        }
        getStickersByGuildId(e) {
          return N(), I.get(e);
        }
      }
      k.displayName = "StickersStore";
      var M = new k(r.default, {
        BACKGROUND_SYNC: () => {
          (y = null), (p = new Map()), (I = new Map()), (v = 0);
        },
        CONNECTION_OPEN: e => {
          let { guilds: t } = e;
          (y = null),
            (p = new Map()),
            (I = new Map()),
            t.forEach(R),
            (v = t.every(e => null != e.stickers) ? 1 : 0);
        },
        GUILD_CREATE: function (e) {
          let { guild: t } = e;
          !l.default.isLurking(t.id) &&
            (R(t),
            1 === v &&
              null == t.stickers &&
              null != t.stickerUpdates &&
              (v = 0));
        },
        GUILD_DELETE: function (e) {
          var t;
          let { guild: n } = e,
            s = null !== (t = I.get(n.id)) && void 0 !== t ? t : [];
          s.forEach(e => {
            null != y && y.delete(e.id), p.delete(e.id);
          }),
            I.delete(n.id),
            (I = new Map(I));
        },
        LOGOUT: () => {
          (v = 0),
            (T = []),
            p.clear(),
            E.clear(),
            (y = null),
            I.clear(),
            (I = new Map(I)),
            (S = !1),
            (C = null);
        },
        STICKER_PACKS_FETCH_START: () => {
          S = !0;
        },
        STICKER_PACKS_FETCH_SUCCESS: e => {
          let { packs: t } = e;
          t.forEach(e => b(e, !0)), (C = Date.now()), (S = !1);
        },
        STICKER_PACK_FETCH_SUCCESS: e => {
          let { pack: t, ingestStickers: n } = e;
          b(t, !1, n);
        },
        GUILD_STICKERS_FETCH_SUCCESS: e => {
          let { guildId: t, stickers: n } = e;
          n.forEach(e => O(e)), A(t, n);
        },
        GUILD_STICKERS_CREATE_SUCCESS: e => {
          var t, n;
          let { guildId: s, sticker: i } = e,
            r = null !== (t = I.get(s)) && void 0 !== t ? t : [];
          A(s, [
            ...(null !== (n = r.filter(e => e.id !== i.id)) && void 0 !== n
              ? n
              : []),
            i,
          ]),
            O(i);
        },
        STICKER_FETCH_SUCCESS: e => {
          let { sticker: t } = e;
          O(t, !1);
        },
        GUILD_STICKERS_UPDATE: e => {
          var t;
          let { guildId: n, stickers: s } = e,
            i = e => {
              let t;
              let n = p.get(e.id);
              return (
                null != n &&
                  (0, h.isGuildSticker)(n) &&
                  (t = null != n.user ? n.user : void 0),
                { ...e, user: t }
              );
            },
            r = null !== (t = I.get(n)) && void 0 !== t ? t : [],
            a = r.filter(e => null == s.find(t => t.id === e.id));
          a.forEach(e => {
            p.delete(e.id), null != y && y.delete(e.id);
          });
          let o = s.map(e => i(e));
          o.forEach(e => O(e)), A(n, o);
        },
        CACHED_STICKERS_LOADED: function (e) {
          let { stickers: t } = e;
          for (let [e, n] of t)
            if (_.default.isMember(e) && !I.has(e)) {
              let t = c.default.getGuild(e);
              for (let e of n) O(e, !0, t);
              A(e, n);
            }
        },
      });
    },
    161585: function (e, t, n) {
      "use strict";
      var s, i, r, a, o, d, u, l, f, _, c, g, m, h;
      n.r(t),
        n.d(t, {
          StickerFormat: function () {
            return s;
          },
          MetaStickerType: function () {
            return i;
          },
          StickerExtensions: function () {
            return r;
          },
          isAnimatedSticker: function () {
            return v;
          },
          isCustomSticker: function () {
            return E;
          },
          StickerGridItemTypes: function () {
            return a;
          },
          StickerCategoryTypes: function () {
            return o;
          },
          StickerMetadataTypes: function () {
            return d;
          },
          StickerSelectLocation: function () {
            return u;
          },
        }),
        ((l = s || (s = {}))[(l.PNG = 1)] = "PNG"),
        (l[(l.APNG = 2)] = "APNG"),
        (l[(l.LOTTIE = 3)] = "LOTTIE"),
        (l[(l.GIF = 4)] = "GIF"),
        ((f = i || (i = {}))[(f.STANDARD = 1)] = "STANDARD"),
        (f[(f.GUILD = 2)] = "GUILD"),
        ((_ = r || (r = {})).PNG = "png"),
        (_.APNG = "png"),
        (_.LOTTIE = "json"),
        (_.WEBP = "webp"),
        (_.GIF = "gif");
      let v = e => 1 !== e,
        E = e => 1 !== e;
      ((c = a || (a = {}))[(c.STICKER = 0)] = "STICKER"),
        (c[(c.CREATE_STICKER = 1)] = "CREATE_STICKER"),
        ((g = o || (o = {})).PACK = "PACK"),
        (g.FAVORITE = "FAVORITE"),
        (g.RECENT = "RECENT"),
        (g.SEARCH_RESULTS = "SEARCH_RESULTS"),
        (g.SEARCH_SUGGESTIONS = "SEARCH_SUGGESTIONS"),
        (g.GUILD = "GUILD"),
        (g.EMPTY_GUILD_UPSELL = "EMPTY_GUILD_UPSELL"),
        (g.CREATE_STICKER = "CREATE_STICKER"),
        ((m = d || (d = {}))[(m.STICKER_NAME = 0)] = "STICKER_NAME"),
        (m[(m.TAG = 1)] = "TAG"),
        (m[(m.CORRELATED_EMOJI = 2)] = "CORRELATED_EMOJI"),
        (m[(m.GUILD_NAME = 3)] = "GUILD_NAME"),
        (m[(m.PACK_NAME = 4)] = "PACK_NAME"),
        ((h = u || (u = {}))[(h.STICKER_PICKER = 0)] = "STICKER_PICKER"),
        (h[(h.EXPRESSION_SUGGESTIONS = 1)] = "EXPRESSION_SUGGESTIONS"),
        (h[(h.AUTOCOMPLETE = 2)] = "AUTOCOMPLETE");
    },
    24373: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getStickerPackPreviewSticker: function () {
            return C;
          },
          getStickerFormatTypeFromFileType: function () {
            return I;
          },
          getFilenameForSticker: function () {
            return A;
          },
          getStickerAssetUrl: function () {
            return D;
          },
          getStickerPackBannerAssetUrl: function () {
            return N;
          },
          isStickerAssetUrl: function () {
            return O;
          },
          isStickerPackAnimated: function () {
            return P;
          },
          createStickerPackCategory: function () {
            return b;
          },
          shouldAnimateSticker: function () {
            return V;
          },
          shouldAttachSticker: function () {
            return R;
          },
          isGuildSticker: function () {
            return k;
          },
          isStandardSticker: function () {
            return M;
          },
          getMessageStickers: function () {
            return w;
          },
          isAvailableGuildSticker: function () {
            return L;
          },
        }),
        n("70102");
      var s = n("171209"),
        i = n("407063"),
        r = n("305961"),
        a = n("585722"),
        o = n("315102"),
        d = n("773336"),
        u = n("328511"),
        l = n("161585"),
        f = n("560241"),
        _ = n("49111");
      let {
          API_ENDPOINT: c,
          MEDIA_PROXY_ENDPOINT: g,
          PROJECT_ENV: m,
          ASSET_ENDPOINT: h,
          CDN_HOST: v,
        } = window.GLOBAL_ENV,
        E = Object.values(l.StickerExtensions),
        p = decodeURIComponent(
          _.Endpoints.STICKER_ASSET("[\\d]+", "(".concat(E.join("|"), ")"))
        ),
        y = RegExp(
          "("
            .concat(location.protocol)
            .concat(h, "|")
            .concat(location.protocol)
            .concat(g, ")(")
            .concat(p, ")"),
          "ig"
        ),
        T = RegExp(
          "".concat(location.protocol).concat(c, "(").concat(p, ")"),
          "ig"
        ),
        C = e => {
          if (null != e.cover_sticker_id) {
            let t = e.stickers.find(t => t.id === e.cover_sticker_id);
            if (null != t) return t;
          }
          return e.stickers[0];
        },
        S = e => {
          switch (e) {
            case l.StickerFormat.PNG:
              return o.SUPPORTS_WEBP
                ? l.StickerExtensions.WEBP
                : l.StickerExtensions.PNG;
            case l.StickerFormat.APNG:
              return l.StickerExtensions.APNG;
            case l.StickerFormat.LOTTIE:
              return l.StickerExtensions.LOTTIE;
            case l.StickerFormat.GIF:
              return l.StickerExtensions.GIF;
            default:
              throw Error("Unexpected format type: ".concat(e));
          }
        },
        I = e => {
          switch (e) {
            case "application/json":
              return l.StickerFormat.LOTTIE;
            case "image/apng":
              return l.StickerFormat.APNG;
            case "image/png":
            case "image/webp":
              return l.StickerFormat.PNG;
            case "image/gif":
              return l.StickerFormat.GIF;
            default:
              throw Error("Unexpected file type: ".concat(e));
          }
        },
        A = e =>
          null == e ? null : "".concat(e.name, ".").concat(S(e.format_type)),
        D = function (e) {
          let { isPreview: t = !1, size: n = f.DEFAULT_STICKER_DIMENSIONS } =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          if (null == e.format_type) return null;
          let s = _.Endpoints.STICKER_ASSET(e.id, S(e.format_type));
          if ("development" !== m) {
            if (e.format_type === l.StickerFormat.LOTTIE)
              return "".concat(location.protocol).concat(h).concat(s);
            let r =
                e.format_type === l.StickerFormat.APNG &&
                t &&
                !(0, d.isAndroid)()
                  ? "&passthrough=false"
                  : "",
              a = Math.min(2, (0, i.getDevicePixelRatio)());
            return ""
              .concat(location.protocol)
              .concat(g)
              .concat(s, "?size=")
              .concat((0, i.getBestMediaProxySize)(n * a))
              .concat(r);
          }
          return "".concat(location.protocol).concat(c).concat(s);
        },
        N = (e, t) => {
          let n;
          let s = e.banner_asset_id;
          if (null == s) return null;
          let r = o.SUPPORTS_WEBP ? "webp" : "png";
          return (
            (n =
              null != v
                ? ""
                    .concat(location.protocol, "//")
                    .concat(v, "/app-assets/")
                    .concat(f.STICKER_APPLICATION_ID, "/store/")
                    .concat(s, ".")
                    .concat(r)
                : ""
                    .concat(location.protocol)
                    .concat(c)
                    .concat(
                      _.Endpoints.STORE_ASSET(f.STICKER_APPLICATION_ID, s, r)
                    )),
            null != t &&
              (n += "?size=".concat((0, i.getBestMediaProxySize)(t))),
            n
          );
        },
        O = e => e.match("development" !== m ? y : T),
        P = e =>
          e.stickers.some(e => {
            let { format_type: t } = e;
            return (
              t === l.StickerFormat.APNG ||
              t === l.StickerFormat.LOTTIE ||
              t === l.StickerFormat.GIF
            );
          }),
        b = e => ({
          type: l.StickerCategoryTypes.PACK,
          id: e.id,
          name: e.name,
          stickers: e.stickers,
          previewSticker: C(e),
        }),
        V = (e, t) =>
          e === f.StickerAnimationSettings.ANIMATE_ON_INTERACTION
            ? t
            : e !== f.StickerAnimationSettings.NEVER_ANIMATE,
        R = (e, t, n, i) => {
          let r = a.default.getUploadCount(n, i);
          if (r > 0) return !0;
          let o = u.default.getStickerPreview(n, i),
            d = null != o && o.length > 0;
          if (d) return !0;
          switch (e) {
            case l.StickerSelectLocation.STICKER_PICKER:
              return "" !== t.trim();
            case l.StickerSelectLocation.AUTOCOMPLETE:
            case l.StickerSelectLocation.EXPRESSION_SUGGESTIONS:
              return (0, s.getQueriesFromUserInput)(t).length > 1;
            default:
              return !1;
          }
        },
        k = e => e.type === l.MetaStickerType.GUILD,
        M = e => e.type === l.MetaStickerType.STANDARD,
        w = e =>
          e.stickerItems.length > 0
            ? e.stickerItems
            : e.stickers.length > 0
              ? e.stickers
              : [],
        L = e => {
          if (null === e) return !1;
          let t = e.guild_id;
          return void 0 !== r.default.getGuild(t);
        };
    },
    835174: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("37983");
      n("884691");
      var i = n("551042"),
        r = {
          show(e) {
            (0, i.openModalLazy)(async () => {
              let { default: t } = await n
                .el("536071")
                .then(n.bind(n, "536071"));
              return n => (0, s.jsx)(t, { ...n, href: e });
            });
          },
        };
    },
    566271: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          isSuspiciousDownload: function () {
            return d;
          },
        }),
        n("222007");
      var s = n("746379"),
        i = n.n(s),
        r = n("555919");
      let a = new Set(r),
        o = {
          "github.com": RegExp("\\/releases\\S*\\/download"),
          "bitbucket.org": RegExp("\\/downloads\\S*\\/[^\\/]*"),
          "gitlab.com": RegExp("\\/downloads\\S*\\/[^\\/]*"),
        };
      function d(e) {
        var t;
        let { pathname: n, hostname: s } = i.parse(e);
        if (null == s) return null;
        let r = o[s];
        if ((null != r && null != n && !r.test(n)) || null == n) return null;
        let d = n;
        try {
          d = decodeURIComponent(n);
        } catch (e) {}
        let u = d.split("/"),
          l = null,
          f = 0;
        for (let e = u.length - 1; e >= 0; e--) {
          let t = u[e];
          if ("" !== t && "." !== t) {
            if (".." === t) {
              f++;
              continue;
            }
            if (f > e) break;
            l = u[e - f];
            break;
          }
        }
        if (null == l) return null;
        let _ = l.split(".");
        if (_.length < 2) return null;
        let c =
          null === (t = _.pop()) || void 0 === t ? void 0 : t.toLowerCase();
        return null != c && a.has(c) ? c : null;
      }
    },
    401690: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return Q;
          },
        }),
        n("222007"),
        n("424973");
      var s = n("917351"),
        i = n.n(s),
        r = n("249654"),
        a = n("446674"),
        o = n("913144"),
        d = n("233069"),
        u = n("42203"),
        l = n("305961"),
        f = n("660478"),
        _ = n("18494"),
        c = n("689275"),
        g = n("755624"),
        m = n("984674"),
        h = n("724210");
      let v = {},
        E = {},
        p = {},
        y = {},
        T = {},
        C = {},
        S = null,
        I = {};
      function A() {
        for (let e in ((v = {}),
        (T = {}),
        (E = {}),
        (p = {}),
        (y = {}),
        (S = _.default.getChannelId()),
        I))
          clearTimeout(I[e]);
        (I = {}),
          c.default.forEachGuild(e => {
            N(e);
          }),
          O();
      }
      function D(e) {
        for (let t in (delete v[e],
        delete T[e],
        delete E[e],
        delete p[e],
        delete y[e],
        N(e),
        p[e]))
          b(e, t);
      }
      function N(e) {
        let t = c.default.getThreadsForGuild(e);
        for (let e in t)
          for (let n in t[e]) {
            F(n);
            let e = u.default.getChannel(n);
            if (null == e) continue;
            let t = g.default.joinTimestamp(n);
            if (null != t) {
              let n = { channel: e, joinTimestamp: t.getTime() },
                { isUnread: s, isRelevant: i, isTimedRelevant: r } = U(e);
              H(v, e, n, !1),
                H(T, e, i ? n : null, !1),
                H(E, e, s ? n : null, !1),
                r && G(e, !0);
            } else {
              H(p, e, e, !1);
              let t = f.default.isForumPostUnread(e.id);
              H(y, e, t ? e : null, !1);
            }
          }
      }
      function O() {
        for (let e in ((C = {}), p)) for (let t in p[e]) b(e, t);
      }
      function P(e) {
        let t = u.default.getBasicChannel(e);
        null != t &&
          d.THREADED_CHANNEL_TYPES.has(t.type) &&
          b(t.guild_id, t.id);
      }
      function b(e, t) {
        let n = u.default.getChannel(t);
        if (null == n || !n.isForumLikeChannel()) return;
        if (
          (null == C[e] && (C[e] = {}),
          (C[e][t] = 0),
          null == p[e] || null == p[e][t])
        )
          return;
        let s = l.default.getGuild(e);
        if (null == s) return;
        let i = f.default.getTrackedAckMessageId(t);
        if (null == i) {
          let e = Date.now();
          null != s.joinedAt &&
            (s.joinedAt instanceof Date
              ? (e = s.joinedAt.getTime())
              : "string" == typeof s.joinedAt &&
                (e = new Date(s.joinedAt).getTime())),
            (i = r.default.fromTimestamp(e));
        }
        for (let n in p[e][t])
          t === S
            ? f.default.isNewForumThread(n, t, s) && C[e][t]++
            : r.default.compare(n, i) > 0 &&
              !f.default.hasOpenedThread(n) &&
              C[e][t]++;
      }
      function V(e, t, n) {
        if (null == t) return !1;
        let s = u.default.getChannel(n),
          i = g.default.joinTimestamp(n);
        if (null != s && c.default.isActive(e, t, n)) {
          if (null != i) {
            let e = { channel: s, joinTimestamp: i.getTime() },
              { isUnread: t, isRelevant: n, isTimedRelevant: r } = U(s);
            H(v, s, e, !0),
              H(T, s, n ? e : null, !0),
              H(E, s, t ? e : null, !0),
              H(p, s, null, !0),
              H(y, s, null, !0),
              G(s, r);
          } else {
            let e = f.default.isForumPostUnread(s.id);
            H(v, s, null, !0),
              H(E, s, null, !0),
              H(T, s, null, !0),
              H(p, s, s, !0),
              H(y, s, e ? s : null, !0),
              F(s.id);
          }
          b(e, t);
        } else
          B(v, e, t, n),
            B(T, e, t, n),
            B(E, e, t, n),
            B(p, e, t, n),
            B(y, e, t, n),
            F(n),
            b(e, t);
      }
      function R(e) {
        return V(e.channel.guild_id, e.channel.parent_id, e.channel.id);
      }
      function k(e) {
        let t = u.default.getChannel(e.id);
        return (
          !!(null != t && c.default.isActive(e.guildId, t.parent_id, e.id)) &&
          V(t.guild_id, t.parent_id, t.id)
        );
      }
      function M(e) {
        let t = u.default.getChannel(e.channelId);
        if (null == t) w();
        else {
          let { guild_id: e, parent_id: s } = t;
          if (!d.THREAD_CHANNEL_TYPES.has(t.type)) {
            var n;
            return (
              !!(
                Number(null === (n = C[e]) || void 0 === n ? void 0 : n[t.id]) >
                0
              ) && (b(e, t.id), !0)
            );
          }
          if (null == s) return !1;
          if (x(v, t)) {
            let { isUnread: n, isRelevant: i, isTimedRelevant: r } = U(t);
            G(t, r);
            let a = x(E, t),
              o = x(T, t);
            if (n === a && i === o) return !1;
            let d = v[e][s][t.id],
              u = n ? d : null,
              l = i ? d : null;
            H(E, t, u, !0), H(T, t, l, !0), b(e, s);
          } else {
            let e = x(y, t),
              n = f.default.isForumPostUnread(t.id);
            if (n === e) return !1;
            H(y, t, n ? t : null, !0);
          }
        }
      }
      function w() {
        for (let e in ((E = {}), (T = {}), v))
          for (let t in v[e])
            for (let n in v[e][t]) {
              let s = v[e][t][n],
                {
                  isUnread: i,
                  isRelevant: r,
                  isTimedRelevant: a,
                } = U(s.channel);
              i && H(E, s.channel, s, !1),
                r && H(T, s.channel, s, !1),
                G(s.channel, a);
            }
        for (let e in ((y = {}), p))
          for (let t in p[e])
            for (let n in p[e][t]) {
              let s = p[e][t][n],
                i = f.default.isForumPostUnread(n);
              i && H(y, s, s, !1);
            }
        O();
      }
      function L() {
        let e = S;
        if ((S = _.default.getChannelId()) === e) return !1;
        P(e), P(S);
      }
      function U(e) {
        let t = f.default.getMentionCount(e.id) > 0,
          n = f.default.hasUnread(e.id) && (!g.default.isMuted(e.id) || t),
          s = e.hasFlag(h.ChannelFlags.PINNED),
          i = e.isActiveThread(),
          r = i && (0, m.default)(e) > Date.now();
        return {
          isUnread: (i || s) && n,
          isRelevant: r || s || n,
          isTimedRelevant: r,
        };
      }
      function G(e, t) {
        F(e.id),
          t &&
            (function (e) {
              I[e.id] = setTimeout(
                () => {
                  let t = u.default.getChannel(e.id);
                  null != t &&
                    o.default.dispatch({ type: "THREAD_UPDATE", channel: t });
                },
                (0, m.default)(e) - Date.now() + 1
              );
            })(e);
      }
      function F(e) {
        e in I && (clearTimeout(I[e]), delete I[e]);
      }
      function H(e, t, n, s) {
        let { guild_id: r, parent_id: a, id: o } = t;
        null != r &&
          null != a &&
          null != o &&
          (!(r in e) && (e[r] = {}),
          !(a in e[r]) && (e[r][a] = {}),
          s && (e[r] = { ...e[r], [a]: { ...e[r][a] } }),
          null === n
            ? (delete e[r][a][o], i.isEmpty(e[r][a]) && delete e[r][a])
            : (e[r][a][o] = n));
      }
      function B(e, t, n, s) {
        if (null != t && null != n && null != s)
          Y(e, t, n, s) &&
            ((e[t] = { ...e[t], [n]: { ...e[t][n] } }),
            delete e[t][n][s],
            i.isEmpty(e[t][n]) && delete e[t][n]);
      }
      function x(e, t) {
        return Y(e, t.guild_id, t.parent_id, t.id);
      }
      function Y(e, t, n, s) {
        return t in e && n in e[t] && s in e[t][n];
      }
      let j = {},
        K = {},
        W = {},
        z = {},
        q = {};
      class X extends a.default.Store {
        initialize() {
          this.waitFor(c.default, u.default, g.default, f.default),
            this.syncWith([_.default], L);
        }
        hasActiveJoinedUnreadThreads(e, t) {
          return e in E && t in E[e];
        }
        getActiveUnjoinedThreadsForParent(e, t) {
          var n;
          return e in p && null !== (n = p[e][t]) && void 0 !== n ? n : z;
        }
        getActiveJoinedThreadsForParent(e, t) {
          var n;
          return e in v && null !== (n = v[e][t]) && void 0 !== n ? n : W;
        }
        getActiveJoinedThreadsForGuild(e) {
          var t;
          return null !== (t = v[e]) && void 0 !== t ? t : j;
        }
        getActiveJoinedUnreadThreadsForGuild(e) {
          var t;
          return null !== (t = E[e]) && void 0 !== t ? t : j;
        }
        getActiveJoinedUnreadThreadsForParent(e, t) {
          var n;
          return null !==
            (n = this.getActiveJoinedUnreadThreadsForGuild(e)[t]) &&
            void 0 !== n
            ? n
            : W;
        }
        getActiveJoinedRelevantThreadsForGuild(e) {
          var t;
          return null !== (t = T[e]) && void 0 !== t ? t : j;
        }
        getActiveJoinedRelevantThreadsForParent(e, t) {
          var n;
          return null !==
            (n = this.getActiveJoinedRelevantThreadsForGuild(e)[t]) &&
            void 0 !== n
            ? n
            : W;
        }
        getActiveUnjoinedThreadsForGuild(e) {
          var t;
          return null !== (t = p[e]) && void 0 !== t ? t : K;
        }
        getActiveUnjoinedUnreadThreadsForGuild(e) {
          var t;
          return null !== (t = y[e]) && void 0 !== t ? t : j;
        }
        getActiveUnjoinedUnreadThreadsForParent(e, t) {
          var n;
          return null !==
            (n = this.getActiveUnjoinedUnreadThreadsForGuild(e)[t]) &&
            void 0 !== n
            ? n
            : W;
        }
        getNewThreadCountsForGuild(e) {
          var t;
          return null !== (t = C[e]) && void 0 !== t ? t : q;
        }
        computeAllActiveJoinedThreads(e) {
          let t = [];
          for (let n in v)
            if (n === e || null == e)
              for (let e in v[n])
                for (let s in v[n][e]) t.push(v[n][e][s].channel);
          return t;
        }
        getNewThreadCount(e, t) {
          var n, s;
          return null !==
            (s = null === (n = C[e]) || void 0 === n ? void 0 : n[t]) &&
            void 0 !== s
            ? s
            : 0;
        }
        getActiveThreadCount(e, t) {
          var n, s, r, a;
          let o = i.size(
              null !==
                (r = null === (n = v[e]) || void 0 === n ? void 0 : n[t]) &&
                void 0 !== r
                ? r
                : {}
            ),
            d = i.size(
              null !==
                (a = null === (s = p[e]) || void 0 === s ? void 0 : s[t]) &&
                void 0 !== a
                ? a
                : {}
            );
          return o + d;
        }
      }
      X.displayName = "ActiveJoinedThreadsStore";
      var Q = new X(o.default, {
        CONNECTION_OPEN: A,
        OVERLAY_INITIALIZE: A,
        THREAD_LIST_SYNC: function (e) {
          let { guildId: t } = e;
          return D(t);
        },
        LOAD_THREADS_SUCCESS: A,
        LOAD_ARCHIVED_THREADS_SUCCESS: A,
        SEARCH_FINISH: A,
        GUILD_CREATE: function (e) {
          let { guild: t } = e;
          return D(t.id);
        },
        GUILD_DELETE: A,
        CURRENT_USER_UPDATE: A,
        THREAD_CREATE: R,
        THREAD_UPDATE: R,
        THREAD_DELETE: R,
        CHANNEL_UPDATES: function (e) {
          let { channels: t } = e;
          for (let e of t)
            if (
              e.isNSFW() !==
              (function (e, t) {
                if (null == t) return !1;
                let n = v[e],
                  s = null == n ? null : n[t];
                if (null != s) {
                  for (let e in s) if (s[e].channel.isNSFW()) return !0;
                }
                let i = p[e],
                  r = null == i ? null : i[t];
                if (null != r) {
                  for (let e in r) if (r[e].isNSFW()) return !0;
                }
                return !1;
              })(e.guild_id, e.parent_id)
            ) {
              A();
              return;
            }
          return !1;
        },
        CHANNEL_DELETE: function (e) {
          let { channel: t } = e,
            n = !1;
          return (
            null != t.guild_id &&
              null != t.parent_id &&
              (t.guild_id in v &&
                t.parent_id in v[t.guild_id] &&
                (delete v[t.guild_id][t.parent_id], (n = !0)),
              t.guild_id in E &&
                t.parent_id in E[t.guild_id] &&
                (delete E[t.guild_id][t.parent_id], (n = !0)),
              t.guild_id in T &&
                t.parent_id in T[t.guild_id] &&
                (Object.keys(T[t.guild_id][t.parent_id]).forEach(F),
                delete T[t.guild_id][t.parent_id],
                (n = !0)),
              t.guild_id in p &&
                t.parent_id in p[t.guild_id] &&
                (delete p[t.guild_id][t.parent_id], (n = !0)),
              t.guild_id in y &&
                t.parent_id in y[t.guild_id] &&
                (delete y[t.guild_id][t.parent_id], (n = !0)),
              n && b(t.guild_id, t.parent_id)),
            n
          );
        },
        THREAD_MEMBER_UPDATE: k,
        THREAD_MEMBERS_UPDATE: k,
        LOAD_MESSAGES_SUCCESS: M,
        MESSAGE_CREATE: M,
        MESSAGE_DELETE: M,
        MESSAGE_DELETE_BULK: M,
        MESSAGE_ACK: M,
        CHANNEL_ACK: M,
        CHANNEL_LOCAL_ACK: M,
        CHANNEL_SELECT: function (e) {
          M(e), L();
        },
        PASSIVE_UPDATE_V1: function (e) {
          null != e.channels && w();
        },
        WINDOW_FOCUS: w,
        UPDATE_CHANNEL_DIMENSIONS: w,
        DRAWER_OPEN: w,
        DRAWER_CLOSE: w,
        BULK_ACK: w,
      });
    },
    689275: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return p;
          },
        }),
        n("222007");
      var s = n("917351"),
        i = n.n(s),
        r = n("446674"),
        a = n("913144"),
        o = n("233069"),
        d = n("42203");
      let u = {},
        l = new Set();
      function f(e) {
        return { id: e.id, parentId: e.parent_id };
      }
      function _(e) {
        e in u && delete u[e];
      }
      function c(e) {
        null != e.threads &&
          e.threads.length > 0 &&
          ((u[e.id] = {}),
          e.threads
            .filter(e => o.ALL_CHANNEL_TYPES.has(e.type))
            .forEach(t => g(e.id, t))),
          e.hasThreadsSubscription && l.add(e.id);
      }
      function g(e, t) {
        let n = u[e],
          s = t.parent_id;
        !(s in n) && (n[s] = {}), (u[e][s][t.id] = f(t));
      }
      function m(e) {
        var t, n;
        let { channel: s } = e;
        if (!o.ALL_CHANNEL_TYPES.has(s.type)) return !1;
        if (
          (null === (t = s.threadMetadata) || void 0 === t
            ? void 0
            : t.archived) === !0
        )
          return h(s);
        {
          let e = null !== (n = u[s.guild_id]) && void 0 !== n ? n : {};
          u[s.guild_id] = {
            ...e,
            [s.parent_id]: { ...e[s.parent_id], [s.id]: f(s) },
          };
        }
      }
      function h(e) {
        let { guild_id: t, parent_id: n, id: s } = e;
        if (
          null == t ||
          null == n ||
          !(t in u) ||
          !(n in u[t]) ||
          !(s in u[t][n])
        )
          return !1;
        (u[t] = { ...u[t], [n]: { ...u[t][n] } }),
          delete u[t][n][s],
          i.isEmpty(u[t][n]) && delete u[t][n];
      }
      let v = {};
      class E extends r.default.Store {
        initialize() {
          this.waitFor(d.default);
        }
        isActive(e, t, n) {
          return null != e && null != this.getThreadsForParent(e, t)[n];
        }
        getThreadsForGuild(e) {
          var t;
          return null !== (t = u[e]) && void 0 !== t ? t : v;
        }
        getThreadsForParent(e, t) {
          var n;
          return null !== (n = this.getThreadsForGuild(e)[t]) && void 0 !== n
            ? n
            : v;
        }
        hasThreadsForChannel(e, t) {
          return !i.isEmpty(this.getThreadsForParent(e, t));
        }
        forEachGuild(e) {
          for (let t in u) e(t, u[t]);
        }
        hasLoaded(e) {
          return l.has(e);
        }
      }
      E.displayName = "ActiveThreadsStore";
      var p = new E(a.default, {
        CONNECTION_OPEN: function (e) {
          (u = {}),
            l.clear(),
            e.guilds.forEach(e => {
              c(e);
            });
        },
        OVERLAY_INITIALIZE: function (e) {
          let { channels: t } = e;
          (u = {}),
            i(t)
              .filter(e => o.THREAD_CHANNEL_TYPES.has(e.type))
              .groupBy("guild_id")
              .forEach((e, t) => {
                (u[t] = {}), e.forEach(e => g(t, e));
              });
        },
        GUILD_CREATE: function (e) {
          let { guild: t } = e;
          _(t.id), c(t);
        },
        GUILD_DELETE: function (e) {
          let { guild: t } = e;
          _(t.id);
        },
        THREAD_CREATE: m,
        THREAD_UPDATE: m,
        THREAD_LIST_SYNC: function (e) {
          let { guildId: t, threads: n, channelIds: s } = e;
          for (let e in (null == s && l.add(t), (u[t] = { ...u[t] }), u[t]))
            u[t][e] = { ...u[t][e] };
          n.forEach(e => g(t, e));
        },
        THREAD_DELETE: function (e) {
          let { channel: t } = e;
          return h(t);
        },
        CHANNEL_DELETE: function (e) {
          let { channel: t } = e;
          if (null == t.guild_id || !(t.guild_id in u)) return !1;
          (u[t.guild_id] = { ...u[t.guild_id] }), delete u[t.guild_id][t.id];
        },
      });
    },
    120252: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return m;
          },
        });
      var s = n("803182"),
        i = n("872717"),
        r = n("913144"),
        a = n("619443"),
        o = n("233069"),
        d = n("42203"),
        u = n("18494"),
        l = n("49111"),
        f = n("724210");
      let _ = {},
        c = !1;
      function g(e) {
        if (
          null == e ||
          e === f.FAKE_PLACEHOLDER_PRIVATE_CHANNEL_ID ||
          (0, f.isStaticChannelRoute)(e) ||
          null != d.default.getChannel(e)
        )
          return Promise.resolve();
        if (
          (c ||
            ((c = !0),
            r.default.subscribe("CONNECTION_OPEN", () => {
              _ = {};
              let e = u.default.getChannelId(),
                t = d.default.getChannel(e);
              null != e && null == t && g(e);
            })),
          !a.default.isConnected())
        )
          return Promise.resolve();
        let t = _[e];
        if (null != t)
          return "LOADING" === t.type ? t.promise : Promise.resolve();
        let n = (0, s.matchPath)(location.pathname, {
            path: l.Routes.CHANNEL(":guildId", ":channelId", ":messageId"),
            exact: !0,
          }),
          m = i.default
            .get(l.Endpoints.CHANNEL(e))
            .then(t => {
              let { body: s } = t;
              if (
                ((_[e] = { type: "LOADED" }),
                o.THREAD_CHANNEL_TYPES.has(s.type))
              ) {
                var i;
                r.default.dispatch({
                  type: "THREAD_CREATE",
                  channel: (0, o.createChannelRecordFromServer)(s),
                  messageId:
                    null == n
                      ? void 0
                      : null === (i = n.params) || void 0 === i
                        ? void 0
                        : i.messageId,
                });
              }
            })
            .catch(() => {
              var t;
              (_[e] = { type: "NOT_FOUND" }),
                r.default.dispatch({
                  type: "CHANNEL_DELETE",
                  channel: {
                    id: e,
                    guild_id:
                      null == n
                        ? void 0
                        : null === (t = n.params) || void 0 === t
                          ? void 0
                          : t.guildId,
                    parent_id: void 0,
                  },
                });
            });
        return (_[e] = { type: "LOADING", promise: m }), m;
      }
      var m = { loadThread: g };
    },
    25932: function (e, t, n) {
      "use strict";
      function s(e) {
        return {
          id: e.id,
          userId: e.user_id,
          flags: e.flags,
          muted: e.muted,
          muteConfig: e.mute_config,
          joinTimestamp: e.join_timestamp,
        };
      }
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        }),
        n("702976");
    },
    984674: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
      var s = n("660478"),
        i = n("718517"),
        r = n("299039");
      function a(e) {
        if (null == e.threadMetadata) return 0;
        let t = e.threadMetadata.autoArchiveDuration * i.default.Millis.MINUTE;
        return (
          (function (e) {
            var t;
            if (null == e.threadMetadata) return 0;
            let n =
                null !== (t = s.default.lastMessageId(e.id)) && void 0 !== t
                  ? t
                  : e.id,
              i = r.default.extractTimestamp(n),
              a =
                null != e.threadMetadata.archiveTimestamp
                  ? new Date(e.threadMetadata.archiveTimestamp).getTime()
                  : 0;
            return Math.max(i, a);
          })(e) + t
        );
      }
    },
    410912: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        }),
        n("222007");
      var s = n("102053"),
        i = n("926274");
      let r = () => {};
      n.g.__timingFunction = () => performance.now();
      let a =
        null == n.g.__getTotalRequireTime
          ? () => 0
          : () => n.g.__getTotalRequireTime();
      function o(e, t) {
        if (0 === t || null == t) return null;
        let n = t - e;
        return n < 0 || n > 1e6 ? null : n;
      }
      class d {
        get start() {
          return this.start_;
        }
        get end() {
          return this.end_;
        }
        hasStart() {
          return this.start_ > 0;
        }
        hasData() {
          return this.end_ > 0;
        }
        recordStart() {
          0 === this.start_ && this.recordStart_(),
            s.default.mark(this.emoji, "Start ".concat(this.name)),
            r();
        }
        recordStart_() {
          (this.start_ = Date.now()),
            (this.startNumImports = i.size()),
            (this.startImportTime = a());
        }
        recordEnd() {
          0 === this.end_ && 0 !== this.start_
            ? (this.recordEnd_(),
              s.default.mark(
                this.emoji,
                "Finish ".concat(this.name),
                this.end_ - this.start_
              ))
            : s.default.mark(this.emoji, "Finish ".concat(this.name)),
            r();
        }
        recordEnd_() {
          (this.end_ = Date.now()),
            (this.endNumImports = i.size()),
            (this.endImportTime = a());
        }
        set(e, t) {
          0 === this.start_ &&
            ((this.start_ = e),
            (this.end_ = e + t),
            (this.endNumImports = i.size()),
            (this.endImportTime = a())),
            s.default.mark(this.emoji, this.name, t),
            r();
        }
        serializeStart(e) {
          return o(e, this.start_);
        }
        serializeEnd(e) {
          return o(e, this.end_);
        }
        measure(e) {
          if (this.start_ > 0) return s.default.time(this.emoji, this.name, e);
          this.recordStart_();
          let t = s.default.time(this.emoji, this.name, e);
          return this.recordEnd_(), r(), t;
        }
        async measureAsync(e) {
          if (this.start_ > 0)
            return s.default.timeAsync(this.emoji, this.name, e);
          this.recordStart_();
          let t = await s.default.timeAsync(this.emoji, this.name, e);
          return this.recordEnd_(), r(), t;
        }
        async measureAsyncWithoutNesting(e) {
          if (this.start_ > 0)
            return s.default.timeAsync(this.emoji, this.name, e);
          this.recordStart_();
          let t = Date.now();
          s.default.mark(this.emoji, "Start ".concat(this.name));
          let n = await e();
          return (
            s.default.mark(
              this.emoji,
              "Finish ".concat(this.name),
              Date.now() - t
            ),
            this.recordEnd_(),
            r(),
            n
          );
        }
        constructor(e, t) {
          (this.emoji = e),
            (this.name = t),
            (this.start_ = 0),
            (this.startNumImports = 0),
            (this.startImportTime = 0),
            (this.end_ = 0),
            (this.endNumImports = 0),
            (this.endImportTime = 0);
        }
      }
      class u {
        get time() {
          return this.time_;
        }
        record() {
          0 === this.time_
            ? ((this.time_ = Date.now()),
              (this.numImports = i.size()),
              (this.importTime = a()),
              s.default.mark(this.emoji, this.name))
            : !this.onlyOnce && s.default.mark(this.emoji, this.name),
            r();
        }
        hasData() {
          return this.time_ > 0;
        }
        serialize(e) {
          return o(e, this.time_);
        }
        constructor(e, t, n = !1) {
          (this.emoji = e),
            (this.name = t),
            (this.onlyOnce = n),
            (this.time_ = 0),
            (this.numImports = null),
            (this.importTime = 0);
        }
      }
      class l {
        get time() {
          return this.time_;
        }
        record() {
          0 === this.time_ && (this.time_ = a());
        }
        constructor() {
          this.time_ = 0;
        }
      }
      class f {
        constructor() {
          (this.loadIndex = new d("❗", "Load index.tsx")),
            (this.loadFastConnectNativeModule = new d(
              "\uD83D\uDCBE",
              "Load fast_connect native module"
            )),
            (this.beginFastConnect = new d(
              "\uD83C\uDF10",
              "Fast Connect IDENTIFY"
            )),
            (this.loadImports = new d("\uD83C\uDFC3", "Load Imports")),
            (this.init = new d("\uD83C\uDFC3", "Initial Initialization")),
            (this.loadStorage = new d("\uD83D\uDCBE", "Load Storage")),
            (this.parseStorage = new d("\uD83D\uDCBE", "Parse Storage")),
            (this.loadMiniCache = new d("\uD83D\uDCBE", "Load Mini Cache")),
            (this.fetchInitialGuildCache = new d(
              "\uD83D\uDCBE",
              "Fetch Initial Guild Cache"
            )),
            (this.loadCachedMessages = new d(
              "\uD83D\uDCBE",
              "Load Cached Messages"
            )),
            (this.renderApp = new u("\uD83C\uDFA8", "First React Render")),
            (this.renderAppEffect = new u(
              "\uD83C\uDFA8",
              "First React Render useEffect"
            )),
            (this.renderMessages = new u(
              "\uD83C\uDFA8",
              "React Render Messages",
              !0
            )),
            (this.renderMessagesWithCache = new u(
              "\uD83C\uDFA8",
              "React Render Cached Messages",
              !0
            )),
            (this.firstRowGenerator = new d(
              "\uD83C\uDFA8",
              "RowGenerator.generate()"
            )),
            (this.renderLatestMessages = new u(
              "\uD83C\uDFA8",
              "React Render Latest Messages"
            )),
            (this.initialGuild = new d("\uD83C\uDF10", "Initial Guild")),
            (this.loadLazyCache = new d("\uD83D\uDCBE", "Load Lazy Cache")),
            (this.fetchLazyCache = new d("\uD83D\uDCBE", "Fetch Lazy Cache")),
            (this.parseLazyCache = new d("\uD83D\uDCBE", "Parse Lazy Cache")),
            (this.fetchStaleChannels = new d(
              "\uD83D\uDCBE",
              "Fetch Stale Channels"
            )),
            (this.deserializeCache = new d(
              "\uD83D\uDCBE",
              "Deserialize Cache"
            )),
            (this.dispatchLazyCache = new d(
              "\uD83D\uDCBE",
              "Dispatch Lazy Cache"
            )),
            (this.parseReady = new d("\uD83C\uDF10", "Parse READY")),
            (this.ready = new d("\uD83C\uDF10", "READY")),
            (this.hydrateReady = new d("\uD83C\uDF10", "Hydrate READY")),
            (this.dispatchReady = new d("\uD83C\uDF10", "Dispatch READY")),
            (this.parseReadySupplemental = new d(
              "\uD83C\uDF10",
              "Parse READY Supplemental"
            )),
            (this.readySupplemental = new d(
              "\uD83C\uDF10",
              "READY Supplemental"
            )),
            (this.hydrateReadySupplemental = new d(
              "\uD83C\uDF10",
              "Hydrate READY Supplemental"
            )),
            (this.dispatchReadySupplemental = new d(
              "\uD83C\uDF10",
              "Dispatch READY Supplemental"
            )),
            (this.fetchMessages = new d("\uD83C\uDF10", "Fetch messages")),
            (this.dispatchMessages = new d(
              "\uD83C\uDF10",
              "Dispatch messages"
            )),
            (this.imports = {
              polyfillsEnd: new l(),
              sentryEnd: new l(),
              appStateChangeStart: new l(),
              appStateChangeEnd: new l(),
              loadMiniCacheStart: new l(),
              loadStorageStart: new l(),
              loadStorageEnd: new l(),
            });
        }
      }
      var _ = new (class e extends f {
        setTTICallback(e) {
          r = () => {
            !0 === e() && (r = () => !1);
          };
        }
        setCacheInfo(e) {
          this.cacheInfo = e;
        }
        setInterstitial(e) {
          (this.interstitial = e), r();
        }
        addLocalMessages(e, t) {
          for (
            this.cachedChannelCounts.set(e, t);
            this.cachedChannelCounts.size > 100;

          ) {
            let e = this.cachedChannelCounts.keys();
            this.cachedChannelCounts.delete(e.next().value);
          }
        }
        attachReadyPayloadProperties(e) {
          this.readyProperties = e;
        }
        appStateChanged(e) {
          "active" === e &&
            (null == this.firstAppActiveTime &&
              (this.firstAppActiveTime = Date.now()),
            (this.wasEverActive = !0)),
            null == this.readyProperties.num_guilds &&
              (this.didBackgroundApp = this.didBackgroundApp || "active" !== e);
        }
        recordRender(e, t) {
          this.renderMessages.record(),
            (t || e > 0) && this.renderMessagesWithCache.record(),
            t && this.renderLatestMessages.record();
        }
        recordMessageRender(e, t, s, i) {
          let { default: r } = n("249654");
          if (!this.renderLatestMessages.hasData()) {
            if (
              (this.renderMessages.record(),
              t.length > 0 && this.renderMessagesWithCache.record(),
              s)
            ) {
              if (
                (this.renderLatestMessages.record(),
                null == this.cachedChannelId)
              ) {
                this.messageCacheMissingReason = "no-cache";
                return;
              }
              if (this.cachedChannelId !== e) {
                this.messageCacheMissingReason = "channel-changed";
                return;
              }
              if (
                null == this.cachedMessageIds ||
                0 === this.cachedMessageIds.length
              ) {
                this.messageCacheMissingReason = "no-cache";
                return;
              }
              if (0 === t.length) {
                this.messageCacheMissingReason = "channel-empty";
                return;
              }
              if (e === this.cachedChannelId) {
                var a;
                let n = this.cachedMessageIds.sort(r.compare).reverse()[0],
                  s = t.sort(r.compare).reverse()[0];
                this.messageCacheAgeSeconds = Math.floor(
                  (r.extractTimestamp(s) - r.extractTimestamp(n)) / 1e3
                );
                let o = t.filter(e => {
                  var t;
                  return null === (t = this.cachedMessageIds) || void 0 === t
                    ? void 0
                    : t.includes(e);
                }).length;
                (this.messageCacheCount =
                  null !== (a = this.cachedChannelCounts.get(e)) && void 0 !== a
                    ? a
                    : null),
                  (this.messageCacheHavingCount = o),
                  (this.messageCacheMissingCount = t.length - o),
                  (this.messageRenderFullCount = t.length),
                  (this.messageRenderCachedCount =
                    this.cachedMessageIds.length),
                  (this.messageRenderHasMoreAfter = i);
              }
            } else
              (null == this.cachedChannelId || e === this.cachedChannelId) &&
                ((this.cachedChannelId = e),
                (this.cachedMessageIds = t),
                t.length > 0 && (this.messageCacheMissingReason = null));
          }
        }
        getStartTime(e) {
          return this.extraProperties.headless_task_ran &&
            null != this.firstAppActiveTime
            ? this.firstAppActiveTime
            : null == e || e <= 0
              ? this.loadIndex.start
              : e;
        }
        processNativeLogs(e, t) {
          let n = this.getStartTime(t);
          for (let t of e)
            switch (t.label) {
              case "Finish MainApplication.initialize()":
                this.extraProperties.time_main_application_initialize_end = o(
                  n,
                  t.timestamp
                );
                break;
              case "GET_REACT_INSTANCE_MANAGER_START":
                this.extraProperties.time_get_react_instance_manager_start = o(
                  n,
                  t.timestamp
                );
                break;
              case "GET_REACT_INSTANCE_MANAGER_END":
                this.extraProperties.time_get_react_instance_manager_end = o(
                  n,
                  t.timestamp
                );
                break;
              case "PROCESS_PACKAGES_START":
                this.extraProperties.time_process_packages_start = o(
                  n,
                  t.timestamp
                );
                break;
              case "PROCESS_PACKAGES_END":
                this.extraProperties.time_process_packages_end = o(
                  n,
                  t.timestamp
                );
                break;
              case "CREATE_CATALYST_INSTANCE_START":
                this.extraProperties.time_create_catalyst_instance_start = o(
                  n,
                  t.timestamp
                );
                break;
              case "CREATE_CATALYST_INSTANCE_END":
                this.extraProperties.time_create_catalyst_instance_end = o(
                  n,
                  t.timestamp
                );
                break;
              case "CREATE_UI_MANAGER_MODULE_START":
                this.extraProperties.time_create_ui_manager_module_start = o(
                  n,
                  t.timestamp
                );
                break;
              case "CREATE_UI_MANAGER_MODULE_END":
                this.extraProperties.time_create_ui_manager_module_end = o(
                  n,
                  t.timestamp
                );
                break;
              case "REACT_BRIDGE_LOADING_START":
                this.extraProperties.time_react_bridge_loading_start = o(
                  n,
                  t.timestamp
                );
                break;
              case "REACT_BRIDGE_LOADING_END":
                this.extraProperties.time_react_bridge_loading_end = o(
                  n,
                  t.timestamp
                );
                break;
              case "CacheStorage Init Start":
                this.extraProperties.time_init_native_storage_start = o(
                  n,
                  t.timestamp
                );
                break;
              case "CacheStorage Init End":
                this.extraProperties.time_init_native_storage_end = o(
                  n,
                  t.timestamp
                );
                break;
              case "ChatModule.updateRows() Start":
                if (
                  null !=
                  this.extraProperties.time_first_native_message_render_start
                )
                  continue;
                this.extraProperties.time_first_native_message_render_start = o(
                  n,
                  t.timestamp
                );
                break;
              case "ChatModule.updateRows() Finish":
                if (
                  null !=
                  this.extraProperties.time_first_native_message_render_end
                )
                  continue;
                this.extraProperties.time_first_native_message_render_end = o(
                  n,
                  t.timestamp
                );
            }
        }
        serializeTTITracker(e) {
          var t, i, r, a, o, d;
          let u = this.getStartTime(e),
            l = n("917351"),
            f = l(s.default.logGroups[0].logs)
              .filter(e => e.log.startsWith("Require "))
              .map(e => {
                var t;
                return null !== (t = e.delta) && void 0 !== t ? t : 0;
              })
              .sum();
          return {
            ...this.extraProperties,
            time_load_index_start: this.loadIndex.serializeStart(u),
            time_load_index_end: this.loadIndex.serializeEnd(u),
            time_begin_fast_connect_start:
              this.beginFastConnect.serializeStart(u),
            time_begin_fast_connect_end: this.beginFastConnect.serializeEnd(u),
            time_load_imports_start: this.loadImports.serializeStart(u),
            time_load_imports_end: this.loadImports.serializeEnd(u),
            time_init_start: this.init.serializeStart(u),
            time_init_end: this.init.serializeEnd(u),
            time_load_storage_start: this.loadStorage.serializeStart(u),
            time_load_storage_end: this.loadStorage.serializeEnd(u),
            time_parse_storage_start: this.parseStorage.serializeStart(u),
            time_parse_storage_end: this.parseStorage.serializeEnd(u),
            time_load_mini_cache_start: this.loadMiniCache.serializeStart(u),
            time_load_mini_cache_end: this.loadMiniCache.serializeEnd(u),
            time_fetch_initial_guild_start:
              this.fetchInitialGuildCache.serializeStart(u),
            time_fetch_initial_guild_end:
              this.fetchInitialGuildCache.serializeEnd(u),
            time_load_cached_messages_start:
              this.loadCachedMessages.serializeStart(u),
            time_load_cached_messages_end:
              this.loadCachedMessages.serializeEnd(u),
            time_render_app_start: this.renderApp.serialize(u),
            time_render_app_effect_start: this.renderAppEffect.serialize(u),
            time_render_messages_end: this.renderMessages.serialize(u),
            time_render_messages_with_cache_end:
              this.renderMessagesWithCache.serialize(u),
            time_render_latest_messages_end:
              this.renderLatestMessages.serialize(u),
            time_first_row_generator_start:
              this.firstRowGenerator.serializeStart(u),
            time_first_row_generator_end:
              this.firstRowGenerator.serializeEnd(u),
            time_initial_guild_start: this.initialGuild.serializeStart(u),
            time_initial_guild_end: this.initialGuild.serializeEnd(u),
            time_load_lazy_cache_start: this.loadLazyCache.serializeStart(u),
            time_load_lazy_cache_end: this.loadLazyCache.serializeEnd(u),
            time_fetch_lazy_cache_start: this.fetchLazyCache.serializeStart(u),
            time_fetch_lazy_cache_end: this.fetchLazyCache.serializeEnd(u),
            time_parse_lazy_cache_start: this.parseLazyCache.serializeStart(u),
            time_parse_lazy_cache_end: this.parseLazyCache.serializeEnd(u),
            time_fetch_stale_channels_start:
              this.fetchStaleChannels.serializeStart(u),
            time_fetch_stale_channels_end:
              this.fetchStaleChannels.serializeEnd(u),
            time_deserialize_cache_start:
              this.deserializeCache.serializeStart(u),
            time_deserialize_cache_end: this.deserializeCache.serializeEnd(u),
            time_dispatch_lazy_cache_start:
              this.dispatchLazyCache.serializeStart(u),
            time_dispatch_lazy_cache_end:
              this.dispatchLazyCache.serializeEnd(u),
            time_parse_ready_start: this.parseReady.serializeStart(u),
            time_parse_ready_end: this.parseReady.serializeEnd(u),
            time_ready_start: this.ready.serializeStart(u),
            time_ready_end: this.ready.serializeEnd(u),
            time_hydrate_ready_start: this.hydrateReady.serializeStart(u),
            time_hydrate_ready_end: this.hydrateReady.serializeEnd(u),
            time_dispatch_ready_start: this.dispatchReady.serializeStart(u),
            time_dispatch_ready_end: this.dispatchReady.serializeEnd(u),
            time_parse_ready_supplemental_start:
              this.parseReadySupplemental.serializeStart(u),
            time_parse_ready_supplemental_end:
              this.parseReadySupplemental.serializeEnd(u),
            time_ready_supplemental_start:
              this.readySupplemental.serializeStart(u),
            time_ready_supplemental_end: this.readySupplemental.serializeEnd(u),
            time_hydrate_ready_supplemental_start:
              this.hydrateReadySupplemental.serializeStart(u),
            time_hydrate_ready_supplemental_end:
              this.hydrateReadySupplemental.serializeEnd(u),
            time_dispatch_ready_supplemental_start:
              this.dispatchReadySupplemental.serializeStart(u),
            time_dispatch_ready_supplemental_end:
              this.dispatchReadySupplemental.serializeEnd(u),
            time_fetch_messages_start: this.fetchMessages.serializeStart(u),
            time_fetch_messages_end: this.fetchMessages.serializeEnd(u),
            time_dispatch_messages_start:
              this.dispatchMessages.serializeStart(u),
            time_dispatch_messages_end: this.dispatchMessages.serializeEnd(u),
            time_load_fast_connect_native_module_start:
              this.loadFastConnectNativeModule.serializeStart(u),
            time_load_fast_connect_native_module_end:
              this.loadFastConnectNativeModule.serializeEnd(u),
            identify_total_server_duration_ms:
              this.readyProperties.identify_total_server_duration_ms,
            identify_api_duration_ms:
              this.readyProperties.identify_api_duration_ms,
            identify_guilds_duration_ms:
              this.readyProperties.identify_guilds_duration_ms,
            ready_compressed_byte_size:
              this.readyProperties.compressed_byte_size,
            ready_uncompressed_byte_size:
              this.readyProperties.uncompressed_byte_size,
            identify_compressed_byte_size:
              this.readyProperties.identify_compressed_byte_size,
            identify_uncompressed_byte_size:
              this.readyProperties.identify_uncompressed_byte_size,
            ready_compression_algorithm:
              this.readyProperties.compression_algorithm,
            ready_packing_algorithm: this.readyProperties.packing_algorithm,
            ready_unpack_duration_ms: this.readyProperties.unpack_duration_ms,
            is_reconnect: this.readyProperties.is_reconnect,
            is_fast_connect: this.readyProperties.is_fast_connect,
            did_force_clear_guild_hashes:
              this.readyProperties.did_force_clear_guild_hashes,
            num_guilds: this.readyProperties.num_guilds,
            num_changed_guild_channels: this.readyProperties.num_guild_channels,
            ready_presences_size: this.readyProperties.presences_size,
            ready_users_size: this.readyProperties.users_size,
            ready_read_states_size: this.readyProperties.read_states_size,
            ready_private_channels_size:
              this.readyProperties.private_channels_size,
            ready_user_guild_settings_size:
              this.readyProperties.user_guild_settings_size,
            ready_relationships_size: this.readyProperties.relationships_size,
            ready_experiments_size: this.readyProperties.experiments_size,
            ready_user_settings_size: this.readyProperties.user_settings_size,
            ready_remaining_data_size: this.readyProperties.remaining_data_size,
            ready_guild_channels_size: this.readyProperties.guild_channels_size,
            ready_guild_members_size: this.readyProperties.guild_members_size,
            ready_guild_presences_size:
              this.readyProperties.guild_presences_size,
            ready_guild_roles_size: this.readyProperties.guild_roles_size,
            ready_guild_emojis_size: this.readyProperties.guild_emojis_size,
            ready_guild_remaining_data_size:
              this.readyProperties.guild_remaining_data_size,
            ready_guild_threads_size: this.readyProperties.guild_threads_size,
            ready_guild_stickers_size: this.readyProperties.guild_stickers_size,
            ready_guild_events_size: this.readyProperties.guild_events_size,
            ready_guild_features_size: this.readyProperties.guild_features_size,
            ready_size_metrics_duration_ms:
              this.readyProperties.size_metrics_duration_ms,
            had_cache_at_startup: this.readyProperties.had_cache_at_startup,
            used_cache_at_startup: this.readyProperties.used_cache_at_startup,
            was_authenticated: this.wasAuthenticated,
            did_background_app: this.didBackgroundApp,
            interstitial: this.interstitial,
            message_cache_missing_reason: this.messageCacheMissingReason,
            message_cache_age_seconds: this.messageCacheAgeSeconds,
            message_cache_count: this.messageCacheCount,
            message_cache_having_count: this.messageCacheHavingCount,
            message_cache_missing_count: this.messageCacheMissingCount,
            message_render_full_count: this.messageRenderFullCount,
            message_render_cached_count: this.messageRenderCachedCount,
            message_render_has_more_after: this.messageRenderHasMoreAfter,
            duration_major_js_imports:
              this.loadImports.end - this.loadIndex.start + f,
            cache_num_guilds:
              null === (t = this.cacheInfo) || void 0 === t ? void 0 : t.guilds,
            cache_num_private_channels:
              null === (i = this.cacheInfo) || void 0 === i
                ? void 0
                : i.privateChannels,
            cache_num_basic_channels:
              null === (r = this.cacheInfo) || void 0 === r
                ? void 0
                : r.basicChannels,
            cache_num_basic_channels_stale:
              null === (a = this.cacheInfo) || void 0 === a
                ? void 0
                : a.basicChannelsStale,
            cache_num_full_channels:
              null === (o = this.cacheInfo) || void 0 === o
                ? void 0
                : o.fullChannels,
            cache_num_full_channel_guilds:
              null === (d = this.cacheInfo) || void 0 === d
                ? void 0
                : d.fullChannelGuilds,
            num_imports_at_load_index_end: this.loadIndex.endNumImports,
            num_imports_at_init_end: this.init.endNumImports,
            num_imports_at_load_mini_cache_end:
              this.loadMiniCache.endNumImports,
            num_imports_at_render_app_start: this.renderApp.numImports,
            num_imports_at_render_app_effect_start:
              this.renderAppEffect.numImports,
            num_imports_at_render_messages_end: this.renderMessages.numImports,
            num_imports_at_render_messages_with_cache_end:
              this.renderMessagesWithCache.numImports,
            num_imports_at_render_latest_messages_end:
              this.renderLatestMessages.numImports,
            num_imports_at_load_lazy_cache_start:
              this.loadLazyCache.startNumImports,
            num_imports_at_load_lazy_cache_end:
              this.loadLazyCache.endNumImports,
            num_imports_at_ready_start: this.ready.startNumImports,
            num_imports_at_ready_end: this.ready.endNumImports,
            num_imports_at_ready_supplemental_start:
              this.readySupplemental.startNumImports,
            num_imports_at_ready_supplemental_end:
              this.readySupplemental.endNumImports,
            duration_imports_at_load_index_start: Math.ceil(
              this.loadIndex.startImportTime
            ),
            duration_imports_at_load_index_end: Math.ceil(
              this.loadIndex.endImportTime
            ),
            duration_imports_at_init_end: Math.ceil(this.init.endImportTime),
            duration_imports_at_load_mini_cache_end: Math.ceil(
              this.loadMiniCache.endImportTime
            ),
            duration_imports_at_render_app_start: Math.ceil(
              this.renderApp.importTime
            ),
            duration_imports_at_render_app_effect_start: Math.ceil(
              this.renderAppEffect.importTime
            ),
            duration_imports_at_render_messages_end: Math.ceil(
              this.renderMessages.importTime
            ),
            duration_imports_at_render_messages_with_cache_end: Math.ceil(
              this.renderMessagesWithCache.importTime
            ),
            duration_imports_at_render_latest_messages_end: Math.ceil(
              this.renderLatestMessages.importTime
            ),
            duration_imports_at_load_lazy_cache_start: Math.ceil(
              this.loadLazyCache.startImportTime
            ),
            duration_imports_at_load_lazy_cache_end: Math.ceil(
              this.loadLazyCache.endImportTime
            ),
            duration_imports_at_ready_start: Math.ceil(
              this.ready.startImportTime
            ),
            duration_imports_at_ready_end: Math.ceil(this.ready.endImportTime),
            duration_imports_at_ready_supplemental_start: Math.ceil(
              this.readySupplemental.startImportTime
            ),
            duration_imports_at_ready_supplemental_end: Math.ceil(
              this.readySupplemental.endImportTime
            ),
            duration_imports_at_polyfills_end: Math.ceil(
              this.imports.polyfillsEnd.time
            ),
            duration_imports_at_sentry_end: Math.ceil(
              this.imports.sentryEnd.time
            ),
            duration_imports_at_fast_connect_start: Math.ceil(
              this.beginFastConnect.startImportTime
            ),
            duration_imports_at_fast_connect_end: Math.ceil(
              this.beginFastConnect.endImportTime
            ),
            duration_imports_at_app_state_change_start: Math.ceil(
              this.imports.appStateChangeStart.time
            ),
            duration_imports_at_app_state_change_end: Math.ceil(
              this.imports.appStateChangeEnd.time
            ),
            duration_imports_at_load_mini_cache_start: Math.ceil(
              this.imports.loadMiniCacheStart.time
            ),
            duration_imports_at_load_storage_start: Math.ceil(
              this.imports.loadStorageStart.time
            ),
            duration_imports_at_load_storage_end: Math.ceil(
              this.imports.loadStorageEnd.time
            ),
          };
        }
        constructor(...e) {
          super(...e),
            (this.readyProperties = {}),
            (this.didBackgroundApp = !1),
            (this.wasEverActive = !1),
            (this.wasAuthenticated = !1),
            (this.interstitial = null),
            (this.cachedChannelCounts = new Map()),
            (this.cachedChannelId = null),
            (this.cachedMessageIds = null),
            (this.messageCacheMissingReason = "never-loaded"),
            (this.messageCacheAgeSeconds = null),
            (this.messageCacheCount = null),
            (this.messageCacheHavingCount = null),
            (this.messageCacheMissingCount = null),
            (this.messageRenderFullCount = null),
            (this.messageRenderCachedCount = null),
            (this.messageRenderHasMoreAfter = null),
            (this.firstAppActiveTime = null),
            (this.cacheInfo = null),
            (this.extraProperties = {});
        }
      })();
    },
    823348: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          isLimitedAccessErrorCode: function () {
            return i;
          },
        });
      var s = n("49111");
      function i(e, t) {
        return (
          e >= 400 &&
          e < 500 &&
          null != t &&
          t >= s.AbortCodes.USER_LIMITED_ACCESS_DEFAULT &&
          t <= s.AbortCodes.USER_LIMITED_ACCESS_MAX
        );
      }
    },
    504385: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          snapVolumeToDefault: function () {
            return o;
          },
          coerceAudioContextForProto: function () {
            return d;
          },
        });
      var s = n("938850"),
        i = n("773364"),
        r = n("829536"),
        a = n("397336");
      function o(e, t) {
        let n =
          t === i.MediaEngineContextTypes.STREAM
            ? s.AudioSettingsDefaultVolumes.STREAM
            : s.AudioSettingsDefaultVolumes.USER;
        return 1 >
          Math.abs(
            (0, r.amplitudeToPerceptual)(n) - (0, r.amplitudeToPerceptual)(e)
          )
          ? n
          : e;
      }
      function d(e) {
        switch (e) {
          case i.MediaEngineContextTypes.DEFAULT:
            return a.ProtoAudioSettingsContextTypes.USER;
          case i.MediaEngineContextTypes.STREAM:
            return a.ProtoAudioSettingsContextTypes.STREAM;
          default:
            return;
        }
      }
    },
    211895: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
      var s = n("913144"),
        i = n("54239"),
        r = n("49111");
      function a() {
        let e =
            arguments.length > 0 && void 0 !== arguments[0]
              ? arguments[0]
              : null,
          t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : null,
          n =
            arguments.length > 2 && void 0 !== arguments[2]
              ? arguments[2]
              : { openWithoutBackstack: !1 };
        s.default.dispatch({
          type: "USER_SETTINGS_MODAL_OPEN",
          section: e,
          subsection: t,
          ...n,
        }),
          (0, i.pushLayer)(r.Layers.USER_SETTINGS);
      }
    },
    777523: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        }),
        n("222007"),
        n("781738");
      var s = n("730290"),
        i = n("49111");
      let r = /-/g;
      function a(e) {
        let [, , t, n] = e.split("/"),
          a = null == t ? void 0 : t.toUpperCase().replace(r, "_"),
          o = null == n ? void 0 : n.toUpperCase().replace(r, "_");
        if (
          i.UserSettingsSections.hasOwnProperty(a) &&
          (null == o || "" === o || i.UserSettingsSections.hasOwnProperty(o))
        ) {
          let { source: e } = (0, s.parse)(location.search);
          return {
            source: e,
            section: i.UserSettingsSections[a],
            subsection: o,
          };
        }
        return null;
      }
    },
    455711: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          showModal: function () {
            return r;
          },
        });
      var s = n("37983");
      n("884691");
      var i = n("77078");
      function r(e) {
        (0, i.openModalLazy)(async () => {
          let { default: t } = await n.el("620595").then(n.bind(n, "620595"));
          return n => (0, s.jsx)(t, { analyticsLocation: e, ...n });
        });
      }
    },
    938157: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          showModal: function () {
            return r;
          },
        });
      var s = n("37983");
      n("884691");
      var i = n("77078");
      function r(e, t) {
        (0, i.openModalLazy)(async () => {
          let { default: i } = await n.el("59833").then(n.bind(n, "59833"));
          return n =>
            (0, s.jsx)(i, { analyticsLocation: e, platformType: t, ...n });
        });
      }
    },
    448819: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          showModal: function () {
            return r;
          },
        });
      var s = n("37983");
      n("884691");
      var i = n("77078");
      function r(e) {
        (0, i.openModalLazy)(async () => {
          let { default: t } = await n.el("194167").then(n.bind(n, "194167"));
          return n => (0, s.jsx)(t, { analyticsLocation: e, ...n });
        });
      }
    },
    659558: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getLastUsedVideoBackgroundOption: function () {
            return a;
          },
        }),
        n("884691"),
        n("446674");
      var s = n("374363");
      n("697218");
      var i = n("719923"),
        r = n("239448");
      function a(e) {
        var t;
        let n = s.default.settings;
        return (function (e, t) {
          let n = (0, r.getVideoBackgroundOptionFromProto)(e, t.id);
          return (0, r.isCustomBackgroundOption)(n) &&
            !i.default.canUseCustomBackgrounds(t)
            ? null
            : "number" != typeof n || (0, r.isDefaultBackgroundOption)(n)
              ? n
              : null;
        })(
          null === (t = n.voiceAndVideo) || void 0 === t
            ? void 0
            : t.videoBackgroundFilterDesktop,
          e
        );
      }
    },
    154867: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          fetchVideoFilterAssets: function () {
            return _;
          },
          uploadVideoFilterAsset: function () {
            return c;
          },
          deleteVideoFilterAsset: function () {
            return g;
          },
          saveLastUsedBackgroundOption: function () {
            return m;
          },
          applyMediaFilterSettings: function () {
            return h;
          },
          startApplyMediaFilterSettings: function () {
            return v;
          },
          errorApplyingMediaFilterSettings: function () {
            return E;
          },
        });
      var s = n("872717"),
        i = n("913144"),
        r = n("872173"),
        a = n("42887"),
        o = n("697218"),
        d = n("659558"),
        u = n("239448"),
        l = n("284231"),
        f = n("49111");
      async function _() {
        let e = await s.default.get(f.Endpoints.VIDEO_FILTER_ASSETS);
        return (
          i.default.dispatch({
            type: "VIDEO_FILTER_ASSETS_FETCH_SUCCESS",
            assets: e.body,
          }),
          e
        );
      }
      async function c(e, t, n) {
        try {
          let r = await s.default.post({
            url: f.Endpoints.VIDEO_FILTER_ASSETS,
            body: {
              type: t,
              asset: e,
              last_used: null == n ? void 0 : n.toISOString(),
            },
          });
          return (
            i.default.dispatch({
              type: "VIDEO_FILTER_ASSET_UPLOAD_SUCCESS",
              videoFilterAsset: r.body,
            }),
            r.body
          );
        } catch (e) {
          throw new l.default(e);
        }
      }
      async function g(e) {
        await s.default.delete(f.Endpoints.VIDEO_FILTER_ASSET(e.id));
        let t = (0, d.getLastUsedVideoBackgroundOption)(
          o.default.getCurrentUser()
        );
        (0, u.isCustomBackgroundOption)(t) && t.id === e.id && m(null),
          i.default.dispatch({
            type: "VIDEO_FILTER_ASSET_DELETE_SUCCESS",
            videoFilterAsset: e,
          });
      }
      async function m(e) {
        if (
          (await r.PreloadedUserSettingsActionCreators.updateAsync(
            "voiceAndVideo",
            t => {
              t.videoBackgroundFilterDesktop = (0,
              u.getVideoBackgroundProtoFromOption)(e);
            },
            r.UserSettingsDelay.FREQUENT_USER_ACTION
          ),
          (0, u.isCustomBackgroundOption)(e))
        ) {
          let t = await s.default.post(
            f.Endpoints.VIDEO_FILTER_ASSET_LAST_USED(e.id)
          );
          i.default.dispatch({
            type: "VIDEO_SAVE_LAST_USED_BACKGROUND_OPTION",
            backgroundOption: t.body,
          });
        } else
          i.default.dispatch({
            type: "VIDEO_SAVE_LAST_USED_BACKGROUND_OPTION",
            backgroundOption: e,
          });
      }
      function h(e) {
        a.default.isSupported() &&
          i.default.dispatch({
            type: "MEDIA_ENGINE_APPLY_MEDIA_FILTER_SETTINGS",
            settings: e,
          });
      }
      function v() {
        a.default.isSupported() &&
          i.default.dispatch({
            type: "MEDIA_ENGINE_APPLY_MEDIA_FILTER_SETTINGS_START",
          });
      }
      function E() {
        i.default.dispatch({
          type: "MEDIA_ENGINE_APPLY_MEDIA_FILTER_SETTINGS_ERROR",
        });
      }
    },
    917219: function (e, t, n) {
      "use strict";
      var s, i, r, a;
      n.r(t),
        n.d(t, {
          VideoFilterType: function () {
            return s;
          },
          DefaultVideoBackground: function () {
            return i;
          },
          ANIMATED_DEFAULT_VIDEO_BACKGROUNDS: function () {
            return o;
          },
          DEFAULT_VIDEO_BACKGROUND_SORT: function () {
            return d;
          },
          BLUR_BACKGROUND_OPTION: function () {
            return u;
          },
          BACKGROUND_REPLACEMENT_SIZE: function () {
            return l;
          },
          MAX_BACKGROUND_IMAGE_UPLOAD_FILESIZE_BYTES: function () {
            return f;
          },
        }),
        n("808653"),
        ((r = s || (s = {}))[(r.BACKGROUND = 0)] = "BACKGROUND"),
        ((a = i || (i = {}))[(a.OPTION_1 = 0)] = "OPTION_1"),
        (a[(a.OPTION_2 = 1)] = "OPTION_2"),
        (a[(a.OPTION_3 = 2)] = "OPTION_3"),
        (a[(a.OPTION_4 = 3)] = "OPTION_4"),
        (a[(a.OPTION_7 = 7)] = "OPTION_7"),
        (a[(a.OPTION_8 = 8)] = "OPTION_8"),
        (a[(a.OPTION_9 = 9)] = "OPTION_9"),
        (a[(a.OPTION_10 = 10)] = "OPTION_10");
      let o = [7, 8, 9, 10],
        d = [7, 8, 9, 10, 0, 1, 2, 3].reduce(
          (e, t, n) => ({ ...e, [t]: n }),
          {}
        ),
        u = "blur",
        l = { width: 1280, height: 720 },
        f = 10485760;
    },
    870879: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
        }),
        n("808653");
      var s = n("446674"),
        i = n("773364"),
        r = n("913144"),
        a = n("374363"),
        o = n("42887"),
        d = n("18494"),
        u = n("697218"),
        l = n("239448");
      let f = !1,
        _ = null,
        c = !1,
        g = {};
      function m(e) {
        var t;
        let n = u.default.getCurrentUser();
        if (null == n) return !1;
        let s =
          null != e
            ? e
            : (0, l.getVideoBackgroundOptionFromProto)(
                null === (t = a.default.settings.voiceAndVideo) || void 0 === t
                  ? void 0
                  : t.videoBackgroundFilterDesktop,
                n.id
              );
        return (
          null != d.default.getVoiceChannelId() &&
          o.default.isVideoEnabled() &&
          null != s
        );
      }
      function h() {
        _ !== d.default.getVoiceChannelId() && (c = !1),
          m() && (c = !0),
          (_ = d.default.getVoiceChannelId());
      }
      class v extends s.default.Store {
        initialize() {
          this.waitFor(a.default, d.default, o.default),
            this.syncWith([d.default, o.default], h);
        }
        get videoFilterAssets() {
          return g;
        }
        get hasBeenApplied() {
          return f;
        }
        get hasUsedBackgroundInCall() {
          return c;
        }
      }
      v.displayName = "VideoBackgroundStore";
      var E = new v(r.default, {
        VIDEO_FILTER_ASSETS_FETCH_SUCCESS: function (e) {
          let { assets: t } = e;
          g = t.reduce((e, t) => ({ ...e, [t.id]: t }), {});
        },
        VIDEO_FILTER_ASSET_UPLOAD_SUCCESS: function (e) {
          let { videoFilterAsset: t } = e;
          g = { ...g, [t.id]: t };
        },
        VIDEO_FILTER_ASSET_DELETE_SUCCESS: function (e) {
          let { videoFilterAsset: t } = e;
          (g = { ...g }), delete g[t.id];
        },
        VIDEO_SAVE_LAST_USED_BACKGROUND_OPTION: function (e) {
          let { backgroundOption: t } = e;
          m(t) && (c = !0);
        },
        MEDIA_ENGINE_APPLY_MEDIA_FILTER_SETTINGS: function (e) {
          let { settings: t } = e;
          i.FilterSettingsKey.CAMERA_BACKGROUND_LIVE in t && (f = !0);
        },
      });
    },
    239448: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          isCustomBackgroundOption: function () {
            return l;
          },
          isDefaultBackgroundOption: function () {
            return f;
          },
          getEffectAnalyticsType: function () {
            return c;
          },
          getEffectDetailAnalyticsName: function () {
            return g;
          },
          trackBackgroundOptionUpdated: function () {
            return m;
          },
          trackBackgroundOptionAdded: function () {
            return h;
          },
          trackBackgroundOptionDeleted: function () {
            return v;
          },
          getVideoBackgroundProtoFromOption: function () {
            return E;
          },
          getVideoBackgroundOptionFromProto: function () {
            return p;
          },
        });
      var s = n("716241"),
        i = n("42203"),
        r = n("945956"),
        a = n("599110"),
        o = n("315102"),
        d = n("917219"),
        u = n("49111");
      function l(e) {
        return (
          null != e &&
          "object" == typeof e &&
          "id" in e &&
          e.type === d.VideoFilterType.BACKGROUND
        );
      }
      function f(e) {
        return "number" == typeof e && e in d.DefaultVideoBackground;
      }
      function _(e) {
        return f(e)
          ? d.ANIMATED_DEFAULT_VIDEO_BACKGROUNDS.includes(e)
          : !!l(e) &&
              ((0, o.isAnimatedIconHash)(e.asset) ||
                (0, o.isVideoAssetHash)(e.asset));
      }
      function c(e) {
        return null != e ? "Video Background" : "None";
      }
      function g(e) {
        if (null == e) return "None";
        if (l(e)) return "Custom";
        if ("blur" === e) return "Blur";
        else
          return "Preset - ".concat(
            (function (e) {
              switch (e) {
                case d.DefaultVideoBackground.OPTION_1:
                  return "Cybercity";
                case d.DefaultVideoBackground.OPTION_2:
                  return "Discord the Movie";
                case d.DefaultVideoBackground.OPTION_3:
                  return "Wumpus Vacation";
                case d.DefaultVideoBackground.OPTION_4:
                  return "Vaporwave";
                case d.DefaultVideoBackground.OPTION_7:
                  return "Capernite Day";
                case d.DefaultVideoBackground.OPTION_8:
                  return "Capernite Night";
                case d.DefaultVideoBackground.OPTION_9:
                  return "Hacker Den";
                case d.DefaultVideoBackground.OPTION_10:
                  return "Wumpice";
              }
            })(e)
          );
      }
      function m(e, t, n) {
        let o = r.default.getGuildId(),
          d = r.default.getChannelId(),
          l = i.default.getChannel(d),
          f = (0, s.getVoiceStateMetadata)(o, d, !0);
        a.default.track(u.AnalyticEvents.VIDEO_EFFECT_UPDATED, {
          location: t,
          effect_type: c(e),
          effect_detail: g(e),
          effect_state: n,
          channel_id: d,
          channel_type: null == l ? void 0 : l.type,
          guild_id: o,
          voice_state_count: f.voice_state_count,
          video_stream_count: f.video_stream_count,
          media_session_id: r.default.getMediaSessionId(),
          rtc_connection_id: r.default.getRTCConnectionId(),
          is_animated: _(e),
        });
      }
      function h(e, t, n) {
        a.default.track(u.AnalyticEvents.VIDEO_BACKGROUND_ADDED, {
          is_animated: _(e),
          is_video: t,
          is_from_tenor: n,
        });
      }
      function v(e) {
        a.default.track(u.AnalyticEvents.VIDEO_BACKGROUND_DELETED, {
          is_animated: _(e),
        });
      }
      function E(e) {
        if (null == e) return { oneofKind: void 0 };
        if (l(e))
          return {
            oneofKind: "customAsset",
            customAsset: { id: e.id, assetHash: e.asset },
          };
        if ("blur" === e) return { oneofKind: "blur", blur: { useBlur: !0 } };
        else return { oneofKind: "presetOption", presetOption: e };
      }
      function p(e, t) {
        if (null == e || void 0 === e.oneofKind) return null;
        switch (e.oneofKind) {
          case "customAsset":
            return {
              type: d.VideoFilterType.BACKGROUND,
              id: e.customAsset.id,
              user_id: t,
              asset: e.customAsset.assetHash,
            };
          case "blur":
            return e.blur.useBlur ? "blur" : null;
          case "presetOption":
            return e.presetOption;
        }
      }
    },
    284231: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var s,
        i,
        r = n("872717"),
        a = n("782340");
      ((s || (s = {})).ASSET_SIZE = "BINARY_TYPE_MAX_SIZE"),
        ((i || (i = {})).ASSET = "asset");
      class o extends r.default.V8APIError {
        constructor(e, t) {
          var n;
          super(e, t, a.default.Messages.VIDEO_BACKGROUND_ERROR_UPLOAD);
          let s = this.getFieldErrors("asset");
          null != s &&
            (null === (n = s[0]) || void 0 === n ? void 0 : n.code) ===
              "BINARY_TYPE_MAX_SIZE" &&
            (this.message =
              a.default.Messages.VIDEO_BACKGROUND_ERROR_UPLOAD_FILE_SIZE);
        }
      }
      var d = o;
    },
    439141: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          applyBackgroundOptionLive: function () {
            return p;
          },
          applyBackgroundOptionPreview: function () {
            return y;
          },
          applyInitialVideoBackgroundOption: function () {
            return T;
          },
        }),
        n("332822"),
        n("477657"),
        n("811875"),
        n("90301"),
        n("652153"),
        n("28797"),
        n("817884"),
        n("597349"),
        n("667536"),
        n("690341");
      var s = n("627445"),
        i = n.n(s),
        r = n("773364"),
        a = n("697218"),
        o = n("315102"),
        d = n("659558"),
        u = n("154867"),
        l = n("870879"),
        f = n("239448"),
        _ = n("977801"),
        c = n("512244"),
        g = n("917219"),
        m = n("49111");
      async function h(e) {
        let t = await fetch(e),
          n = await t.blob();
        return new Uint8ClampedArray(await n.arrayBuffer());
      }
      function v(e, t, n, s, i) {
        (0, u.applyMediaFilterSettings)({
          [e]: { graph: n, target: t, image: s, blob: i },
        });
      }
      async function E(e, t, n) {
        var s, a;
        let d,
          l = !1;
        if (null == n) return v(e, t, r.FilterSettingsGraph.NONE);
        if (n === g.BLUR_BACKGROUND_OPTION)
          return v(e, t, r.FilterSettingsGraph.BACKGROUND_BLUR);
        if ("string" == typeof n || "number" == typeof n) {
          let e = (0, _.default)()[n];
          (l = null !== (s = e.isVideo) && void 0 !== s && s), (d = e.source);
        } else {
          let e = n.asset;
          (l = (0, o.isAnimatedIconHash)(e) || (0, o.isVideoAssetHash)(e)),
            (d = (0, o.getVideoFilterAssetURL)({
              userId: n.user_id,
              assetId: n.id,
              assetHash: e,
              size: g.BACKGROUND_REPLACEMENT_SIZE.width,
            }));
        }
        if (null != d)
          try {
            let n = l
                ? void 0
                : await ((a = d),
                  new Promise((e, t) => {
                    let n = new Image();
                    (n.crossOrigin = "anonymous"),
                      (n.onload = () => {
                        let t = document.createElement("canvas");
                        (t.width = g.BACKGROUND_REPLACEMENT_SIZE.width),
                          (t.height = g.BACKGROUND_REPLACEMENT_SIZE.height);
                        let s = t.getContext("2d");
                        i(null != s, "Canvas context is missing");
                        let r = n.height / n.width,
                          a = g.BACKGROUND_REPLACEMENT_SIZE.height,
                          o = g.BACKGROUND_REPLACEMENT_SIZE.height / r,
                          d = (t.width - o) / 2,
                          u = (t.height - a) / 2;
                        s.drawImage(n, d, u, o, a);
                        let l = s.getImageData(0, 0, t.width, t.height);
                        e({
                          data: l.data,
                          width: l.width,
                          height: l.height,
                          pixelFormat: "rgba",
                        });
                      }),
                      (n.onerror = e => t(e)),
                      (n.src = a);
                  })),
              s = l ? await h(d) : void 0;
            v(e, t, r.FilterSettingsGraph.BACKGROUND_REPLACEMENT, n, s);
          } catch (e) {
            (0, u.errorApplyingMediaFilterSettings)();
          }
      }
      async function p(e, t) {
        let { track: n = !0, location: s } = t;
        await E(
          r.FilterSettingsKey.CAMERA_BACKGROUND_LIVE,
          { type: r.FilterTargetType.INPUT_DEVICE },
          e
        ),
          n && (0, f.trackBackgroundOptionUpdated)(e, s, "Enabled");
      }
      async function y(e, t, n) {
        let { track: s = !0, location: i } = n;
        (0, u.startApplyMediaFilterSettings)(),
          await E(
            r.FilterSettingsKey.CAMERA_BACKGROUND_PREVIEW,
            { type: r.FilterTargetType.STREAM, streamId: t },
            e
          ),
          s && (0, f.trackBackgroundOptionUpdated)(e, i, "Preview");
      }
      function T() {
        let e = a.default.getCurrentUser();
        if (null == e) return;
        let t = (0, d.getLastUsedVideoBackgroundOption)(e);
        (0, c.default)() &&
          !l.default.hasBeenApplied &&
          null != t &&
          p(t, { track: !1 }).catch(m.NOOP);
      }
    },
    977801: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return g;
          },
        });
      var s = n("917219"),
        i = n("533613"),
        r = n("782340"),
        a = n("27562"),
        o = n("851703"),
        d = n("902577"),
        u = n("351288"),
        l = n("595726"),
        f = n("462641"),
        _ = n("95937"),
        c = n("929461"),
        g = () => ({
          [s.DefaultVideoBackground.OPTION_1]: {
            id: s.DefaultVideoBackground.OPTION_1,
            source: d,
            name: r.default.Messages.VIDEO_BACKGROUND_DEFAULT_BACKGROUND_NAME_1,
          },
          [s.DefaultVideoBackground.OPTION_2]: {
            id: s.DefaultVideoBackground.OPTION_2,
            source: l,
            name: r.default.Messages.VIDEO_BACKGROUND_DEFAULT_BACKGROUND_NAME_2,
          },
          [s.DefaultVideoBackground.OPTION_3]: {
            id: s.DefaultVideoBackground.OPTION_3,
            source: f,
            name: r.default.Messages.VIDEO_BACKGROUND_DEFAULT_BACKGROUND_NAME_3,
          },
          [s.DefaultVideoBackground.OPTION_4]: {
            id: s.DefaultVideoBackground.OPTION_4,
            source: _,
            name: r.default.Messages.VIDEO_BACKGROUND_DEFAULT_BACKGROUND_NAME_4,
          },
          [s.DefaultVideoBackground.OPTION_7]: {
            id: s.DefaultVideoBackground.OPTION_7,
            source: a,
            name: r.default.Messages.VIDEO_BACKGROUND_DEFAULT_BACKGROUND_NAME_7,
            isVideo: !0,
            hotspotLocation:
              i.HotspotLocations.ANIMATED_VIDEO_BG_CAPERNITE_DAY_NEW,
          },
          [s.DefaultVideoBackground.OPTION_8]: {
            id: s.DefaultVideoBackground.OPTION_8,
            source: o,
            name: r.default.Messages.VIDEO_BACKGROUND_DEFAULT_BACKGROUND_NAME_8,
            isVideo: !0,
            hotspotLocation:
              i.HotspotLocations.ANIMATED_VIDEO_BG_CAPERNITE_NIGHT_NEW,
          },
          [s.DefaultVideoBackground.OPTION_9]: {
            id: s.DefaultVideoBackground.OPTION_9,
            source: u,
            name: r.default.Messages.VIDEO_BACKGROUND_DEFAULT_BACKGROUND_NAME_9,
            isVideo: !0,
            hotspotLocation:
              i.HotspotLocations.ANIMATED_VIDEO_BG_HACKER_DEN_NEW,
          },
          [s.DefaultVideoBackground.OPTION_10]: {
            id: s.DefaultVideoBackground.OPTION_10,
            source: c,
            name: r.default.Messages
              .VIDEO_BACKGROUND_DEFAULT_BACKGROUND_NAME_10,
            isVideo: !0,
            hotspotLocation: i.HotspotLocations.ANIMATED_VIDEO_BG_WUMPICE_NEW,
          },
        });
    },
    512244: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("42887"),
        i = n("353927");
      function r() {
        var e;
        let t =
          arguments.length > 0 && void 0 !== arguments[0]
            ? arguments[0]
            : s.default;
        return (
          (e = t).supports(i.Features.MEDIAPIPE) &&
          Object.values(e.getVideoDevices()).length > 0
        );
      }
    },
    172538: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return m;
          },
        });
      var s = n("913144"),
        i = n("716241"),
        r = n("659558"),
        a = n("870879"),
        o = n("239448"),
        d = n("42203"),
        u = n("42887"),
        l = n("945956"),
        f = n("18494"),
        _ = n("697218");
      let c = (e, t) => ({
          channel_id: e.id,
          channel_type: e.type,
          guild_id: e.getGuildId(),
          rtc_connection_id: l.default.getRTCConnectionId(),
          duration: l.default.getDuration(),
          media_session_id: l.default.getMediaSessionId(),
          ...(0, i.getVoiceStateMetadata)(
            l.default.getGuildId(),
            l.default.getChannelId(),
            t
          ),
        }),
        g = () => {
          var e;
          let t = (0, r.getLastUsedVideoBackgroundOption)(
            _.default.getCurrentUser()
          );
          return {
            video_device_name:
              null ===
                (e =
                  u.default.getVideoDevices()[u.default.getVideoDeviceId()]) ||
              void 0 === e
                ? void 0
                : e.name,
            video_hardware_scaling_enabled: u.default.getHardwareH264(),
            video_effect_type: (0, o.getEffectAnalyticsType)(t),
            video_effect_detail: (0, o.getEffectDetailAnalyticsName)(t),
          };
        };
      function m(e, t, n, i) {
        let r = f.default.getVoiceChannelId(),
          o = d.default.getChannel(r);
        if (null == t && null != r && null != o) {
          let t = c(o, i);
          if ((e(), a.default.hasUsedBackgroundInCall)) {
            let e = { ...t, ...g() };
            s.default.dispatch({
              type: "VIDEO_BACKGROUND_SHOW_FEEDBACK",
              analyticsData: e,
            });
          } else
            s.default.dispatch({
              type: "VOICE_CHANNEL_SHOW_FEEDBACK",
              analyticsData: t,
            });
        } else e();
      }
    },
    742171: function (e, t, n) {
      "use strict";
      function s(e) {
        return !1;
      }
      n.r(t),
        n.d(t, {
          isOldVoiceUIEnabled: function () {
            return s;
          },
        });
    },
    450205: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
      var s,
        i = n("666038");
      s = class extends i.default {
        toString() {
          return this.name;
        }
        constructor(e) {
          super(),
            (this.id = e.id),
            (this.type = e.type),
            (this.name = e.name),
            (this.revoked = e.revoked || !1),
            (this.integrations = e.integrations || []),
            (this.visibility = e.visibility || 0),
            (this.friendSync = e.friend_sync || !1),
            (this.showActivity = e.show_activity || !1),
            (this.verified = e.verified || !1),
            (this.accessToken = e.access_token || null),
            (this.twoWayLink = e.two_way_link || !1),
            (this.metadata = e.metadata || null),
            (this.metadataVisibility = e.metadata_visibility || 0);
        }
      };
    },
    459018: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
      var s,
        i = n("666038"),
        r = n("766274");
      s = class e extends i.default {
        static createFromServer(t) {
          return new e({ ...t, user: new r.default(t.user) });
        }
        constructor(e) {
          var t;
          super(),
            (this.id = e.id),
            (this.name = e.name),
            (this.type = e.type),
            (this.user = e.user),
            (this.displayName =
              null !== (t = e.name_localized) && void 0 !== t ? t : e.name);
        }
      };
    },
    517763: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        }),
        n("702976");
      var s,
        i = n("866227"),
        r = n.n(i),
        a = n("666038");
      s = class e extends a.default {
        static createFromServer(t) {
          var n;
          return new e({
            ...t,
            maxUses: t.max_uses,
            maxAge: t.max_age,
            createdAt: r(
              null !== (n = t.created_at) && void 0 !== n ? n : void 0
            ),
            targetType: t.target_type,
            targetUser: t.target_user,
            targetApplication: t.target_application,
          });
        }
        isExpired() {
          let e = this.maxAge;
          if (e > 0) {
            let t = r(this.createdAt);
            if (t.add(e, "seconds").isBefore(Date.now())) return !0;
          }
          return !1;
        }
        getExpiresAt() {
          if (this.maxAge > 0) {
            let e = r(this.createdAt);
            return e.add(this.maxAge, "seconds").toDate();
          }
          return 1 / 0;
        }
        toString() {
          return this.code;
        }
        constructor(e) {
          super(),
            (this.code = e.code || ""),
            (this.temporary = e.temporary || !1),
            (this.revoked = e.revoked || !1),
            (this.uses = e.uses || 0),
            (this.maxUses = e.maxUses || 0),
            (this.maxAge = e.maxAge || 0),
            (this.createdAt = e.createdAt || new Date()),
            (this.channel = e.channel),
            (this.guild = e.guild),
            (this.inviter = e.inviter || null),
            (this.targetType = e.targetType || null),
            (this.targetUser = e.targetUser || null),
            (this.targetApplication = e.targetApplication || null),
            (this.type = e.type || null),
            (this.flags = e.flags || 0);
        }
      };
    },
    684849: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
      var s,
        i = n("666038");
      s = class extends i.default {
        constructor(e) {
          super(), (this.id = e.id || ""), (this.widgets = e.widgets || []);
        }
      };
    },
    719926: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        }),
        n("424973"),
        n("808653"),
        n("702976");
      var s = n("866227"),
        i = n.n(s),
        r = n("666038"),
        a = n("584375"),
        o = n("875978"),
        d = n("432173"),
        u = n("568734"),
        l = n("773336"),
        f = n("49111");
      class _ extends r.default {
        isEdited() {
          return null != this.editedTimestamp;
        }
        getChannelId() {
          return this.channel_id;
        }
        getReaction(e) {
          return this.reactions.find(t => (0, d.emojiEquals)(t.emoji, e));
        }
        userHasReactedWithEmoji(e, t) {
          return this.reactions.some(n => {
            if ((0, d.emojiEquals)(n.emoji, e))
              return (t && n.me) || (!t && n.me_burst);
          });
        }
        addReaction(e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
            n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : [],
            s =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : o.ReactionTypes.NORMAL,
            i = -1,
            r = this.reactions.map((r, u) => {
              if ((0, d.emojiEquals)(r.emoji, e)) {
                if (((i = u), s === o.ReactionTypes.BURST)) {
                  if (t && r.me) return r;
                  let e = t && r.me_burst ? r.burst_count : r.burst_count + 1,
                    s =
                      null != r.burst_colors && r.burst_colors.length > 0
                        ? r.burst_colors
                        : n;
                  r = {
                    ...r,
                    me_burst: !!t || r.me_burst,
                    burst_count: e,
                    count_details: { ...r.count_details, burst: e },
                    burst_colors: s,
                    themedBurstColors: (0,
                    a.buildPlatformedThemedEmojiColorPalette)({
                      colors: s,
                      shouldProcessMobileColors: (0, l.isIOS)(),
                    }),
                  };
                } else if (s === o.ReactionTypes.VOTE) {
                  var f, _;
                  let e =
                      null !==
                        (_ =
                          null === (f = r.count_details) || void 0 === f
                            ? void 0
                            : f.vote) && void 0 !== _
                        ? _
                        : 0,
                    n = t && r.me_vote ? e : e + 1;
                  r = {
                    ...r,
                    count_details: { ...r.count_details, vote: n },
                    me_vote: !!t || r.me_vote,
                  };
                } else {
                  if (t && r.me_burst) return r;
                  let e = t && r.me ? r.count : r.count + 1;
                  r = {
                    ...r,
                    count: e,
                    count_details: { ...r.count_details, normal: e },
                    me: !!t || r.me,
                  };
                }
              }
              return r;
            });
          return (
            -1 === i &&
              (s === o.ReactionTypes.BURST
                ? r.push({
                    emoji: e,
                    me: !1,
                    me_burst: t,
                    count: 0,
                    count_details: { burst: 1, normal: 0 },
                    burst_count: 1,
                    burst_colors: n,
                    themedBurstColors: (0,
                    a.buildPlatformedThemedEmojiColorPalette)({
                      colors: null != n ? n : [],
                      shouldProcessMobileColors: (0, l.isIOS)(),
                    }),
                  })
                : s === o.ReactionTypes.VOTE
                  ? r.push({
                      emoji: e,
                      me: !1,
                      me_burst: !1,
                      me_vote: t,
                      count: 0,
                      count_details: { burst: 0, normal: 0, vote: 1 },
                      burst_count: 0,
                      burst_colors: [],
                    })
                  : r.push({
                      emoji: e,
                      me: t,
                      me_burst: !1,
                      count: 1,
                      count_details: { burst: 0, normal: 1 },
                      burst_count: 0,
                      burst_colors: [],
                    })),
            this.set("reactions", r)
          );
        }
        addReactionBatch(e, t) {
          return e.reduce((e, n) => {
            let { users: s, emoji: i } = n;
            return s.reduce((e, n) => e.addReaction(i, n === t), e);
          }, this);
        }
        removeReaction(e) {
          var t, n, s, i;
          let r =
              arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
            a =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : o.ReactionTypes.NORMAL,
            u = -1,
            l = this.reactions.map((t, n) => {
              if ((0, d.emojiEquals)(t.emoji, e)) {
                if (a === o.ReactionTypes.BURST) {
                  let e = r && !t.me_burst ? t.burst_count : t.burst_count - 1;
                  t = {
                    ...t,
                    burst_count: e,
                    me_burst: !r && t.me_burst,
                    count_details: { ...t.count_details, burst: e },
                  };
                } else if (a === o.ReactionTypes.VOTE) {
                  var s, i;
                  let e =
                      null !==
                        (i =
                          null === (s = t.count_details) || void 0 === s
                            ? void 0
                            : s.vote) && void 0 !== i
                        ? i
                        : 0,
                    n = r && !t.me_vote ? e : e - 1;
                  t = {
                    ...t,
                    count_details: { ...t.count_details, vote: n },
                    me_vote: !r && t.me_vote,
                  };
                } else {
                  let e = r && !t.me ? t.count : t.count - 1;
                  t = {
                    ...t,
                    count: e,
                    me: !r && t.me,
                    count_details: { ...t.count_details, normal: e },
                  };
                }
                u = n;
              }
              return t;
            }),
            {
              count: f,
              burst_count: _,
              count_details: c,
            } = null !== (t = l[u]) && void 0 !== t ? t : {},
            g =
              null !== (n = null == c ? void 0 : c.normal) && void 0 !== n
                ? n
                : 0,
            m =
              null !== (s = null == c ? void 0 : c.burst) && void 0 !== s
                ? s
                : 0,
            h =
              null !== (i = null == c ? void 0 : c.vote) && void 0 !== i
                ? i
                : 0;
          return (
            -1 !== u &&
              f <= 0 &&
              _ <= 0 &&
              g <= 0 &&
              m <= 0 &&
              h <= 0 &&
              l.splice(u, 1),
            this.set("reactions", l)
          );
        }
        removeReactionsForEmoji(e) {
          return this.set(
            "reactions",
            this.reactions.filter(t => !(0, d.emojiEquals)(t.emoji, e))
          );
        }
        isSystemDM() {
          return this.author.isSystemUser();
        }
        hasFlag(e) {
          return (0, u.hasFlag)(this.flags, e);
        }
        isCommandType() {
          return (
            this.type === f.MessageTypes.CHAT_INPUT_COMMAND ||
            this.type === f.MessageTypes.CONTEXT_MENU_COMMAND
          );
        }
        isPoll() {
          return null != this.poll;
        }
        toJS() {
          return {
            ...this,
            webkhook_id: this.webhookId,
            edited_timestamp: this.editedTimestamp,
            mention_everyone: this.mentionEveryone,
          };
        }
        isFirstMessageInForumPost(e) {
          return this.id === this.channel_id && e.isForumPost();
        }
        constructor(e) {
          var t, n, s;
          super(),
            (this.id = e.id),
            (this.type = e.type || f.MessageTypes.DEFAULT),
            (this.channel_id = e.channel_id),
            (this.author = e.author),
            (this.content = e.content || ""),
            (this.customRenderedContent = e.customRenderedContent),
            (this.attachments = e.attachments || []),
            (this.embeds = e.embeds || []),
            (this.mentions = e.mentions || []),
            (this.mentionRoles = e.mentionRoles || []),
            (this.mentionChannels = e.mentionChannels || []),
            (this.mentioned = e.mentioned || !1),
            (this.pinned = e.pinned || !1),
            (this.mentionEveryone = e.mentionEveryone || !1),
            (this.tts = e.tts || !1),
            (this.codedLinks = e.codedLinks || []),
            (this.giftCodes = e.giftCodes || []),
            (this.timestamp = e.timestamp || i()),
            (this.editedTimestamp = e.editedTimestamp || null),
            (this.state = e.state || f.MessageStates.SENT),
            (this.nonce = e.nonce || null),
            (this.blocked = e.blocked || !1),
            (this.call = e.call || null),
            (this.bot = e.bot || !1),
            (this.webhookId = e.webhookId || null),
            (this.reactions = e.reactions || []),
            (this.applicationId = e.application_id || e.applicationId || null),
            (this.application = e.application || null),
            (this.activity = e.activity || null),
            (this.activityInstance =
              e.activity_instance || e.activityInstance || null),
            (this.messageReference = e.messageReference || null),
            (this.flags = e.flags || 0),
            (this.isSearchHit = e.hit || e.isSearchHit || !1),
            (this.stickers = e.stickers || []),
            (this.stickerItems =
              null !==
                (n =
                  null !== (t = e.sticker_items) && void 0 !== t
                    ? t
                    : e.stickerItems) && void 0 !== n
                ? n
                : []),
            (this.components = e.components),
            (this.loggingName = e.loggingName || null),
            (this.colorString = e.colorString),
            (this.nick = e.nick),
            (this.interaction = e.interaction || null),
            (this.interactionData = e.interactionData || null),
            (this.interactionError = e.interactionError || null),
            (this.roleSubscriptionData = e.roleSubscriptionData),
            (this.purchaseNotification = e.purchaseNotification),
            (this.poll = e.poll),
            (this.referralTrialOfferId = e.referralTrialOfferId || null),
            (this.giftInfo =
              null !== (s = e.gift_info) && void 0 !== s ? s : e.giftInfo);
        }
      }
      var c = _;
    },
    611310: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
      var s,
        i = n("666038");
      s = class extends i.default {
        constructor(e) {
          super(),
            (this.id = e.id || ""),
            (this.layoutId = e.layoutId || ""),
            (this.type = e.type),
            (this.anchor = { left: 0, top: 0, ...e.anchor }),
            (this.size = { width: 0, height: 0, ...e.size }),
            (this.pinned = !!e.pinned),
            (this.zIndex = e.zIndex || 0),
            (this.meta = { ...e.meta });
        }
      };
    },
    268491: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        });
      var s = n("446674"),
        i = n("913144"),
        r = n("686298"),
        a = n("353927");
      let o = r.ApplicationStreamPresets.PRESET_VIDEO,
        d = r.ApplicationStreamResolutions.RESOLUTION_720,
        u = r.ApplicationStreamFPS.FPS_30,
        l = !0;
      class f extends s.default.PersistedStore {
        initialize(e) {
          if (null != e) {
            var t;
            (o =
              null !== (t = e.preset) && void 0 !== t
                ? t
                : r.ApplicationStreamPresets.PRESET_VIDEO),
              (d = e.resolution),
              (u = e.fps),
              (l = e.soundshareEnabled);
          }
        }
        getState() {
          return { preset: o, resolution: d, fps: u, soundshareEnabled: l };
        }
      }
      (f.displayName = "ApplicationStreamingSettingsStore"),
        (f.persistKey = "ApplicationStreamingSettingStore");
      var _ = new f(i.default, {
        MEDIA_ENGINE_SET_GO_LIVE_SOURCE: function (e) {
          let { settings: t } = e;
          if (
            (null == t ? void 0 : t.context) ===
            a.MediaEngineContextTypes.STREAM
          ) {
            if (
              (null == t ? void 0 : t.qualityOptions) == null ||
              (null == t ? void 0 : t.qualityOptions.resolution) == null ||
              (null == t ? void 0 : t.qualityOptions.frameRate) == null
            )
              return !1;
            (d = t.qualityOptions.resolution), (u = t.qualityOptions.frameRate);
          }
        },
        STREAM_UPDATE_SETTINGS: function (e) {
          let {
              preset: t,
              resolution: n,
              frameRate: s,
              soundshareEnabled: i,
            } = e,
            r = !1;
          return (
            null != t && ((o = t), (r = !0)),
            null != n && ((d = n), (r = !0)),
            null != s && ((u = s), (r = !0)),
            null != i && ((l = i), (r = !0)),
            r
          );
        },
      });
    },
    950104: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        });
      var s = n("917351"),
        i = n.n(s),
        r = n("446674"),
        a = n("872717"),
        o = n("913144"),
        d = n("42203"),
        u = n("18494"),
        l = n("162771"),
        f = n("49111");
      let _ = {},
        c = {};
      function g() {
        let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
          t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : u.default.getChannelId(),
          n = d.default.getChannel(t);
        if (
          null != n &&
          null == n.getGuildId() &&
          null != t &&
          (null == _[t] || e)
        ) {
          var s;
          return (
            (_[t] =
              null !== (s = _[t]) && void 0 !== s
                ? s
                : { channelId: t, ringing: [] }),
            o.default.dispatch({ type: "CALL_CONNECT", channelId: t }),
            !0
          );
        }
        return !1;
      }
      class m extends r.default.Store {
        initialize() {
          this.waitFor(l.default, u.default);
        }
        getCall(e) {
          return _[e];
        }
        getCalls() {
          return Object.values(_);
        }
        getMessageId(e) {
          let t = this.getCall(e);
          return null != t ? t.messageId : null;
        }
        isCallActive(e, t) {
          let n = _[e];
          return (
            null != n &&
            !n.unavailable &&
            (null != t ? n.messageId === t : null != n.region)
          );
        }
        isCallUnavailable(e) {
          let t = _[e];
          return null != t && t.unavailable;
        }
        getInternalState() {
          return { calls: _, enqueuedRings: c };
        }
      }
      m.displayName = "CallStore";
      var h = new m(o.default, {
        CONNECTION_OPEN: function () {
          return g(!0);
        },
        CONNECTION_CLOSED: function () {
          (_ = {}), (c = {});
        },
        OVERLAY_INITIALIZE: function (e) {
          let { callStoreInternalState: t } = e;
          (_ = { ...t.calls }), (c = { ...t.enqueuedRings });
        },
        CONNECTION_RESUMED: function () {
          return g(!0);
        },
        CHANNEL_SELECT: function (e) {
          let { channelId: t } = e;
          return g(!1, t);
        },
        CHANNEL_DELETE: function (e) {
          let { channel: t } = e;
          if ((null != c[t.id] && delete c[t.id], null == _[t.id])) return !1;
          delete _[t.id];
        },
        CALL_CREATE: function (e) {
          let { channelId: t, messageId: n, region: s, ringing: i } = e;
          if (
            ((_[t] = {
              channelId: t,
              messageId: n,
              region: s,
              ringing: i,
              unavailable: !1,
              regionUpdated: !1,
            }),
            null != c[t])
          ) {
            let e = c[t];
            delete c[t],
              1 !== e.indexOf("all") && (e = null),
              a.default.post({
                url: f.Endpoints.CALL_RING(t),
                body: { recipients: e },
                oldFormErrors: !0,
              });
          }
        },
        CALL_UPDATE: function (e) {
          let { channelId: t, messageId: n, region: s, ringing: i } = e,
            r = _[t],
            a = null != r && (r.regionUpdated || r.region !== s);
          _[t] = {
            ..._[t],
            messageId: n,
            region: s,
            ringing: i,
            regionUpdated: a,
          };
        },
        CALL_DELETE: function (e) {
          let { channelId: t, unavailable: n } = e,
            s = _[t];
          !0 === n && null != s
            ? (_[t] = { ...s, unavailable: n })
            : (_[t] = {
                channelId: t,
                ringing: [],
                messageId: null,
                region: null,
                regionUpdated: !1,
                unavailable: n,
              }),
            null != c[t] && delete c[t];
        },
        CALL_ENQUEUE_RING: function (e) {
          var t;
          let { channelId: n, recipients: s } = e;
          c[n] = i.union(
            null !== (t = c[n]) && void 0 !== t ? t : [],
            null != s ? s : ["all"]
          );
        },
        VOICE_CHANNEL_SELECT: function (e) {
          let { channelId: t } = e;
          null == t && (c = {});
        },
      });
    },
    982108: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          MESSAGE_REQUESTS_BASE_CHANNEL_ID: function () {
            return v;
          },
          isViewChannelSidebar: function () {
            return A;
          },
          default: function () {
            return b;
          },
        });
      var s = n("394846"),
        i = n("446674"),
        r = n("913144"),
        a = n("582713"),
        o = n("659500"),
        d = n("42203"),
        u = n("957255"),
        l = n("744983"),
        f = n("18494"),
        _ = n("162771"),
        c = n("697218"),
        g = n("49111"),
        m = n("724210"),
        h = n("843455");
      let v = "message_requests",
        E = !1,
        p = !1,
        y = !0,
        T = !1,
        C = {},
        S = {};
      function I(e) {
        if (null == e) return null;
        if ((0, m.isStaticChannelRoute)(e)) {
          let t = _.default.getGuildId();
          if (null == t) return null;
          e = (0, m.buildGuildStaticChannelId)(e, t);
        }
        return e;
      }
      function A(e) {
        return [
          a.SidebarType.VIEW_CHANNEL,
          a.SidebarType.VIEW_THREAD,
          a.SidebarType.VIEW_MESSAGE_REQUEST,
        ].includes(e.type);
      }
      function D(e) {
        let t = !1;
        T && ((T = !1), (t = !0));
        let n = I(f.default.getChannelId());
        return null != n && n in C && (delete C[n], (t = !0)), t && e ? e : !e;
      }
      function N() {
        let e = !1;
        for (let t in C) {
          let n = C[t];
          if (
            n.type === a.SidebarType.VIEW_THREAD ||
            n.type === a.SidebarType.VIEW_CHANNEL
          ) {
            let s = d.default.getChannel(n.channelId);
            (null == s || !u.default.can(h.Permissions.VIEW_CHANNEL, s)) &&
              (delete C[t], (e = !0));
          }
        }
        return e;
      }
      function O() {
        if (T === l.default.isActive()) return !1;
        T = l.default.isActive();
      }
      class P extends i.default.PersistedStore {
        initialize(e) {
          if (null != e) {
            var t, n, s, i, r;
            (E = null !== (t = e.isMembersOpen) && void 0 !== t && t),
              (p = null !== (n = e.isSummariesOpen) && void 0 !== n && n),
              (y = null === (s = e.isProfileOpen) || void 0 === s || s),
              (C = null !== (i = e.sidebars) && void 0 !== i ? i : {}),
              (S = null !== (r = e.guildSidebars) && void 0 !== r ? r : {});
          }
          this.syncWith([l.default], O), this.syncWith([u.default], N);
        }
        getState() {
          return {
            isMembersOpen: E,
            isSummariesOpen: p,
            isProfileOpen: y,
            sidebars: C,
            guildSidebars: S,
          };
        }
        getSection(e, t) {
          return T
            ? g.ChannelSections.SEARCH
            : null != (e = I(e)) && null != C[e]
              ? g.ChannelSections.SIDEBAR_CHAT
              : t && y
                ? g.ChannelSections.PROFILE
                : p
                  ? g.ChannelSections.SUMMARIES
                  : E
                    ? g.ChannelSections.MEMBERS
                    : g.ChannelSections.NONE;
        }
        getSidebarState(e) {
          return null == (e = I(e)) ? void 0 : C[e];
        }
        getGuildSidebarState(e) {
          return null == e ? void 0 : S[e];
        }
        getCurrentSidebarChannelId(e) {
          if (null == (e = I(e)) || T) return null;
          let t = C[e];
          return null == t
            ? null
            : t.type === a.SidebarType.VIEW_THREAD ||
                t.type === a.SidebarType.VIEW_CHANNEL
              ? t.channelId
              : null;
        }
        getCurrentSidebarMessageId(e) {
          var t;
          if (null == (e = I(e)) || T) return null;
          let n = C[e];
          return null == n
            ? null
            : n.type === a.SidebarType.VIEW_THREAD ||
                n.type === a.SidebarType.VIEW_CHANNEL
              ? null === (t = n.details) || void 0 === t
                ? void 0
                : t.initialMessageId
              : null;
        }
      }
      (P.displayName = "ChannelSectionStore"),
        (P.persistKey = "ChannelSectionStore2");
      var b = new P(r.default, {
        CHANNEL_TOGGLE_MEMBERS_SECTION: function () {
          p && (p = D(p)), (E = D(E));
        },
        PROFILE_PANEL_TOGGLE_SECTION: function () {
          !y &&
            o.ComponentDispatch.dispatch(
              g.ComponentActions.SEARCH_RESULTS_CLOSE
            ),
            (y = D(y));
        },
        CHANNEL_TOGGLE_SUMMARIES_SECTION: function () {
          E && (E = D(E)), (p = D(p));
        },
        SIDEBAR_VIEW_CHANNEL: function (e) {
          let {
            sidebarType: t,
            baseChannelId: n,
            channelId: s,
            details: i,
          } = e;
          T = !1;
          let r = I(n);
          return (
            null != r && ((C[r] = { type: t, channelId: s, details: i }), !0)
          );
        },
        SIDEBAR_VIEW_GUILD: function (e) {
          let { sidebarType: t, guildId: n, baseChannelId: s, details: i } = e;
          T = !1;
          let r = I(s);
          return (
            null != r &&
            ((S[n] = { type: t, baseChannelId: r, guildId: n, details: i }), !0)
          );
        },
        SIDEBAR_CREATE_THREAD: function (e) {
          let { parentChannelId: t, parentMessageId: n, location: s } = e;
          T = !1;
          let i = I(t);
          null != i &&
            (C[i] = {
              type: a.SidebarType.CREATE_THREAD,
              parentChannelId: t,
              parentMessageId: n,
              location: s,
            });
        },
        SIDEBAR_CLOSE: function (e) {
          let { baseChannelId: t } = e,
            n = I(t);
          null != n && delete C[n];
        },
        SIDEBAR_CLOSE_GUILD: function (e) {
          let { guildId: t } = e;
          return null != S[t] && (delete S[t], !0);
        },
        CHANNEL_DELETE: function (e) {
          let { channel: t } = e;
          if (t.id in C) return delete C[t.id], !0;
          let n = !1;
          for (let e in C) {
            let s = C[e];
            null != s &&
              s.type === a.SidebarType.VIEW_CHANNEL &&
              s.channelId === t.id &&
              (delete C[e], (n = !0));
          }
          return n;
        },
        CHANNEL_SELECT: function () {
          s.isMobile && E && ((E = !1), (p = !1));
        },
        THREAD_CREATE: function (e) {
          var t;
          let { channel: n } = e;
          if (
            n.ownerId ===
            (null === (t = c.default.getCurrentUser()) || void 0 === t
              ? void 0
              : t.id)
          )
            return !1;
          let s = C[n.parent_id];
          null != s &&
            s.type === a.SidebarType.CREATE_THREAD &&
            s.parentMessageId === n.id &&
            (C[n.parent_id] = {
              type: a.SidebarType.VIEW_THREAD,
              channelId: n.id,
            });
        },
        THREAD_DELETE: function (e) {
          let { channel: t } = e,
            n = C[t.parent_id];
          if (
            null == n ||
            n.type !== a.SidebarType.VIEW_THREAD ||
            n.channelId !== t.id
          )
            return !1;
          delete C[t.parent_id];
        },
      });
    },
    47319: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return p;
          },
        }),
        n("222007");
      var s = n("446674"),
        i = n("913144"),
        r = n("619340"),
        a = n("376556"),
        o = n("450205"),
        d = n("813006"),
        u = n("49111");
      let l = new Set([u.PlatformTypes.CONTACTS]),
        f = !0,
        _ = [],
        c = [],
        g = {},
        m = {},
        h = {},
        v = e => {
          (_ = e.filter(e => !l.has(e.type) && a.default.isSupported(e.type))),
            (c = e.filter(e => l.has(e.type))),
            (f = !1);
        };
      class E extends s.default.Store {
        isJoining(e) {
          return g[e] || !1;
        }
        joinErrorMessage(e) {
          return h[e];
        }
        isFetching() {
          return f;
        }
        getAccounts() {
          return _;
        }
        getLocalAccounts() {
          return c;
        }
        getAccount(e, t) {
          return _.find(n => (null == e || n.id === e) && n.type === t);
        }
        getLocalAccount(e) {
          return c.find(t => t.type === e);
        }
        isSuggestedAccountType(e) {
          return m[e] || !1;
        }
      }
      E.displayName = "ConnectedAccountsStore";
      var p = new E(i.default, {
        CONNECTION_OPEN: function (e) {
          let t = e.connectedAccounts.map(e => new o.default(e));
          v(t);
        },
        USER_CONNECTIONS_UPDATE: function (e) {
          if (e.local && null != e.accounts) {
            let t = e.accounts.map(
              e =>
                new o.default({
                  ...e,
                  integrations: e.integrations.map(e => ({
                    ...e,
                    guild: new d.default(e.guild),
                  })),
                })
            );
            v(t);
          } else r.default.fetch();
        },
        USER_CONNECTIONS_INTEGRATION_JOINING: function (e) {
          g[e.integrationId] = e.joining;
        },
        USER_CONNECTION_UPDATE: function (e) {
          let { platformType: t, id: n, revoked: s, accessToken: i } = e,
            r = _.find(e => e.id === n && e.type === t);
          if (null == r) return !1;
          null != s && (r.revoked = s), null != i && (r.accessToken = i);
        },
        USER_CONNECTIONS_INTEGRATION_JOINING_ERROR: function (e) {
          h[e.integrationId] = void 0 !== e.error ? e.error : "";
        },
      });
    },
    162805: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        });
      var s = n("446674"),
        i = n("233736"),
        r = n("913144");
      let a = {},
        o = {},
        d = { scrollTop: 0 };
      function u(e) {
        return { guildId: e, scrollTop: null, scrollTo: null };
      }
      function l(e) {
        if (null != a[e]) {
          let { scrollTop: t, scrollHeight: n, offsetHeight: s } = a[e];
          return t === n - s;
        }
        return !0;
      }
      class f extends s.default.Store {
        percentageScrolled(e) {
          if (null != a[e]) {
            let { scrollTop: t, scrollHeight: n } = a[e];
            return t / n;
          }
          return 1;
        }
        getChannelDimensions(e) {
          return a[e];
        }
        getGuildDimensions(e) {
          var t;
          return null !== (t = o[e]) && void 0 !== t ? t : u(e);
        }
        getGuildListDimensions() {
          return d;
        }
        isAtBottom(e) {
          return l(e);
        }
      }
      f.displayName = "DimensionStore";
      var _ = new f(r.default, {
        UPDATE_CHANNEL_DIMENSIONS: function (e) {
          let {
              channelId: t,
              scrollTop: n,
              scrollHeight: s,
              offsetHeight: r,
            } = e,
            o = a[t];
          if (null == n || null == s || null == r) {
            if (null == o) return !1;
            delete a[t];
          } else {
            let e = {
              channelId: t,
              scrollTop: n,
              scrollHeight: s,
              offsetHeight: r,
            };
            if (null != o && (0, i.default)(o, e)) return !1;
            a[t] = e;
          }
        },
        UPDATE_CHANNEL_LIST_DIMENSIONS: function (e) {
          let { guildId: t, scrollTop: n, scrollTo: s } = e;
          null == o[t] && (o[t] = u(t)), void 0 !== n && (o[t].scrollTop = n);
          let i = !1;
          return (
            void 0 !== s && ((i = o[t].scrollTo !== s), (o[t].scrollTo = s)),
            null != s || i
          );
        },
        UPDATE_GUILD_LIST_DIMENSIONS: function (e) {
          let { scrollTop: t } = e;
          d.scrollTop = t;
        },
        CALL_CREATE: function (e) {
          let { channelId: t } = e;
          l(t) && delete a[t];
        },
      });
    },
    474643: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          DraftType: function () {
            return s;
          },
          default: function () {
            return C;
          },
        }),
        n("222007");
      var s,
        i,
        r = n("917351"),
        a = n.n(r),
        o = n("446674"),
        d = n("913144"),
        u = n("449008"),
        l = n("271938"),
        f = n("42203"),
        _ = n("341542"),
        c = n("49111");
      let g = c.MAX_MESSAGE_LENGTH_PREMIUM + 500;
      ((i = s || (s = {}))[(i.ChannelMessage = 0)] = "ChannelMessage"),
        (i[(i.ThreadSettings = 1)] = "ThreadSettings"),
        (i[(i.FirstThreadMessage = 2)] = "FirstThreadMessage"),
        (i[(i.ApplicationLauncherCommand = 3)] = "ApplicationLauncherCommand"),
        (i[(i.Poll = 4)] = "Poll"),
        (i[(i.SlashCommand = 5)] = "SlashCommand");
      let m = {};
      function h(e) {
        let t = m[e];
        return null == t && (t = m[e] = {}), t;
      }
      function v(e) {
        let { type: t, channelId: n, draft: s, draftType: i } = e,
          r = f.default.getChannel(n);
        s === (null == r ? void 0 : r.template) && (s = "");
        let a = l.default.getId();
        if (null != a && null != s && "" !== s) {
          var o, d;
          let e = h(a),
            t = e[n];
          if (
            (null == t && (t = e[n] = {}),
            (d = s).length > g && (d = d.substr(0, g)),
            (s = d) ===
              (null === (o = t[i]) || void 0 === o ? void 0 : o.draft))
          )
            return !1;
          t[i] = { timestamp: Date.now(), draft: s };
        } else E(n, i);
        return "DRAFT_SAVE" === t;
      }
      function E(e, t) {
        let n =
          arguments.length > 2 && void 0 !== arguments[2]
            ? arguments[2]
            : l.default.getId();
        if (null == n) return !1;
        let s = h(n),
          i = s[e];
        if (null == i) return !1;
        delete i[t], a.isEmpty(i) && delete s[e];
      }
      function p() {
        let e = l.default.getId();
        if (null == e || _.default.totalUnavailableGuilds > 0) return;
        let t = h(e);
        for (let e in t) null == f.default.getChannel(e) && delete t[e];
      }
      function y(e) {
        let {
            channel: { id: t },
          } = e,
          n = l.default.getId();
        if (null == n) return !1;
        let s = h(n);
        return delete s[t], !1;
      }
      class T extends o.default.PersistedStore {
        initialize(e) {
          (m = null != e ? e : {}),
            !(function () {
              for (let [e, t] of Object.entries(m))
                for (let [n, s] of Object.entries(t)) {
                  let t = s[0];
                  null != t &&
                    ("" === t.draft || "" === t.draft.trim()) &&
                    E(n, 0, e);
                }
            })(),
            this.waitFor(l.default, f.default, _.default);
        }
        getState() {
          return m;
        }
        getThreadDraftWithParentMessageId(e) {
          let t = l.default.getId();
          if (null == t) return;
          let n = h(t),
            s = Object.keys(n).find(t => {
              let n = this.getThreadSettings(t);
              return (null == n ? void 0 : n.parentMessageId) === e;
            });
          return null != s ? this.getThreadSettings(s) : void 0;
        }
        getRecentlyEditedDrafts(e) {
          let t = l.default.getId();
          if (null == t) return [];
          let n = h(t);
          return a(n)
            .mapValues(t => (null == t ? void 0 : t[e]))
            .pickBy(u.isNotNullish)
            .toPairs()
            .map(e => {
              let [t, { timestamp: n, draft: s }] = e;
              return { channelId: t, timestamp: n, draft: s };
            })
            .sortBy(e => {
              let { timestamp: t } = e;
              return -t;
            })
            .value();
        }
        getDraft(e, t) {
          let n = l.default.getId();
          if (null == n) return "";
          let s = h(n),
            i = s[e];
          if (null != i) {
            let e = i[t];
            if (null != e) return e.draft;
          }
          return "";
        }
        getThreadSettings(e) {
          let t = l.default.getId();
          if (null == t) return null;
          let n = h(t),
            s = n[e];
          return null == s ? null : s[1];
        }
      }
      (T.displayName = "DraftStore"),
        (T.persistKey = "DraftStore"),
        (T.migrations = [
          e => {
            if (null == e) return {};
            for (let t in e) "timestamp" in e[t] && (e[t] = { 0: e[t] });
            return e;
          },
          e => {
            let t = l.default.getId();
            if (null == e || null == t) return {};
            let n = {},
              s = (n[t] = {});
            for (let t in e) s[t] = e[t];
            return n;
          },
        ]);
      var C = new T(d.default, {
        CONNECTION_OPEN: function () {
          let e = l.default.getId();
          return !(e in m) && (m[e] = {}), p(), !1;
        },
        LOGOUT: function (e) {
          !e.isSwitchingAccount && (m = {});
        },
        MULTI_ACCOUNT_REMOVE_ACCOUNT: function (e) {
          e.userId in m && delete m[e.userId];
        },
        GUILD_DELETE: function () {
          return p(), !1;
        },
        CHANNEL_DELETE: y,
        THREAD_DELETE: y,
        THREAD_CREATE: function (e) {
          let { channel: t } = e,
            n = l.default.getId();
          if (null == n || t.ownerId === n) return !1;
          let s = h(n),
            i = s[t.parent_id];
          if (null == i) return !1;
          let r = i[1];
          if (null == r) return !1;
          if (r.parentMessageId !== t.id) return !1;
          {
            var a, o;
            let e = s[t.parent_id];
            if (null == e) return !1;
            let n =
              null !==
                (o = null === (a = e[2]) || void 0 === a ? void 0 : a.draft) &&
              void 0 !== o
                ? o
                : "";
            "" !== n && (s[t.id] = { 0: { timestamp: Date.now(), draft: n } }),
              E(t.parent_id, 1),
              E(t.parent_id, 2);
          }
        },
        DRAFT_SAVE: v,
        DRAFT_CHANGE: v,
        DRAFT_CLEAR: function (e) {
          let { channelId: t, draftType: n } = e;
          return E(t, n);
        },
        THREAD_SETTINGS_DRAFT_CHANGE: function (e) {
          let { channelId: t, draft: n } = e,
            s = l.default.getId();
          if (null == s) return;
          let i = h(s),
            r = i[t];
          null == r && (r = i[t] = {}),
            (r[1] = {
              timestamp: Date.now(),
              ...r[1],
              ...n,
              parentChannelId: t,
            });
        },
      });
    },
    848872: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return P;
          },
        }),
        n("222007"),
        n("70102"),
        n("424973"),
        n("462568");
      var s = n("714617"),
        i = n.n(s),
        r = n("446674"),
        a = n("872717"),
        o = n("913144"),
        d = n("619340"),
        u = n("376556"),
        l = n("550368"),
        f = n("718517"),
        _ = n("47319"),
        c = n("102985"),
        g = n("49111");
      let m = 1 * f.default.Millis.MINUTE,
        h = e => "https://youtube.com/watch?v=".concat(e),
        v = 5 * f.default.Millis.MINUTE,
        E = /live_user_(.*)-\{width\}/,
        p = null,
        y = 0,
        T = null,
        C = new Set(),
        S = {};
      function I(e, t, n) {
        return a.default.get({
          url: "".concat("https://api.twitch.tv/helix").concat(e),
          query: t,
          headers: {
            "Client-ID": "33kozedd0zs6fbauka98psnc7zwom2s",
            Authorization: "Bearer ".concat(n),
          },
        });
      }
      async function A(e, t) {
        let n = S[e];
        if (null != n) return n;
        let {
            body: { data: s },
          } = await I("/games", { id: e }, t),
          i = s[0].name;
        return (S[e] = i), i;
      }
      let D = new (class e {
        start() {
          !this._started &&
            ((this._started = !0),
            _.default.isFetching() ? d.default.fetch() : this._check());
        }
        stop() {
          (this._started = !1),
            (T = null),
            (y = 0),
            null != this._nextCheck && clearTimeout(this._nextCheck),
            o.default.dispatch({ type: "STREAMING_UPDATE", stream: null });
        }
        async _checkTwitch(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : null;
          if (e.revoked || null == (t = null != t ? t : e.accessToken))
            return null;
          try {
            var n, s, i, r, a;
            let {
                body: { data: o },
              } = await I("/streams", { user_id: e.id, first: 1 }, t),
              d = o[0];
            if (null == d || "live" !== d.type) throw Error("no stream");
            let { thumbnail_url: f, game_id: _, title: c } = d,
              m = {
                large_image:
                  null != f &&
                  null !==
                    (s = (0, l.getAssetFromImageURL)(
                      g.PlatformTypes.TWITCH,
                      f
                    )) &&
                  void 0 !== s
                    ? s
                    : void 0,
              },
              h = await A(_, t),
              v = u.default.get(g.PlatformTypes.TWITCH);
            let p =
              null !==
                ((r = f),
                (i =
                  null === (a = E.exec(r)) || void 0 === a ? void 0 : a[1])) &&
              void 0 !== i
                ? i
                : e.name;
            return {
              url:
                null === (n = v.getPlatformUserUrl) || void 0 === n
                  ? void 0
                  : n.call(v, { id: e.id, name: p }),
              name: v.name,
              assets: m,
              details: c,
              state: h,
            };
          } catch (n) {
            if (401 === n.status && null == t)
              return d.default
                .refreshAccessToken(e.type, e.id)
                .then(t => this._checkTwitch(e, t))
                .catch(() => null);
            return null;
          }
        }
        async _checkYouTube(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : null;
          if (((T = null), e.revoked || C.has(e.id))) return null;
          try {
            var n;
            let {
              body: { items: s },
            } = await a.default.get({
              url: "https://www.googleapis.com/youtube/v3/liveBroadcasts",
              query: {
                part: "id,snippet",
                broadcastStatus: "active",
                broadcastType: "all",
              },
              headers: {
                Authorization: "Bearer ".concat(null != t ? t : e.accessToken),
              },
              oldFormErrors: !0,
            });
            if (s.length < 1) throw Error("no stream");
            let {
                id: i,
                snippet: { title: r, thumbnails: o },
              } = s[0],
              d = {
                large_image:
                  null !==
                    (n = (0, l.getAssetFromImageURL)(
                      g.PlatformTypes.YOUTUBE,
                      o.high.url
                    )) && void 0 !== n
                    ? n
                    : void 0,
              };
            return (T = {
              url: h(i),
              name: u.default.get(g.PlatformTypes.YOUTUBE).name,
              details: r,
              assets: d,
            });
          } catch (n) {
            if (401 === n.status && null == t)
              return d.default
                .refreshAccessToken(e.type, e.id)
                .then(t => this._checkYouTube(e, t))
                .catch(() => null);
            return 403 === n.status && C.add(e.id), null;
          }
        }
        _check() {
          if (!this._started) return;
          let e = _.default.getAccounts();
          if (null == e) return;
          null != this._nextCheck && clearTimeout(this._nextCheck);
          let t = [g.PlatformTypes.TWITCH],
            n = Date.now();
          y <= n && (t.push(g.PlatformTypes.YOUTUBE), (y = n + v));
          let s = e
            .filter(e => t.includes(e.type))
            .map(e =>
              e.type === g.PlatformTypes.TWITCH
                ? this._checkTwitch(e)
                : this._checkYouTube(e)
            );
          Promise.allSettled(s).then(e => {
            if (this._started) {
              var t;
              let n =
                null ===
                  (t = e.find(
                    e => "fulfilled" === e.status && null != e.value
                  )) || void 0 === t
                  ? void 0
                  : t.value;
              null == n && null != T && (n = T),
                o.default.dispatch({ type: "STREAMING_UPDATE", stream: n });
            }
            this._scheduleCheck();
          });
        }
        _scheduleCheck() {
          this._started &&
            (this._nextCheck = setTimeout(() => this._check(), m));
        }
        constructor() {
          this._started = !1;
        }
      })();
      function N() {
        c.default.enabled ? D.start() : D.stop();
      }
      class O extends r.default.Store {
        initialize() {
          N(), this.waitFor(_.default), this.syncWith([c.default], N);
        }
        getStream() {
          return p;
        }
      }
      O.displayName = "ExternalStreamingStore";
      var P = new O(o.default, {
        STREAMING_UPDATE: function (e) {
          var t;
          if (i(e.stream, p)) return !1;
          p = null !== (t = e.stream) && void 0 !== t ? t : null;
        },
        USER_CONNECTIONS_UPDATE: () => D._check(),
      });
    },
    247013: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var s = n("446674"),
        i = n("95410"),
        r = n("913144");
      let a = "GuildNSFWAgreeStore",
        o = {};
      class d extends s.default.Store {
        initialize() {
          var e;
          o = null !== (e = i.default.get(a)) && void 0 !== e ? e : o;
        }
        didAgree(e) {
          return null != e && (o[e] || !1);
        }
      }
      d.displayName = "GuildNSFWAgreeStore";
      var u = new d(r.default, {
        GUILD_NSFW_AGREE: function (e) {
          let { guildId: t } = e;
          (o[t] = !0), i.default.set(a, o);
        },
      });
    },
    952451: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return eg;
          },
        }),
        n("222007"),
        n("702976"),
        n("808653");
      var s = n("917351"),
        i = n.n(s);
      n("249654"), n("21121"), n("136511");
      var r = n("512395"),
        a = n("401690"),
        o = n("755624"),
        d = n("526311"),
        u = n("233069"),
        l = n("271938"),
        f = n("42203"),
        _ = n("305961"),
        c = n("957255"),
        g = n("660478"),
        m = n("18494"),
        h = n("455079"),
        v = n("282109"),
        E = n("697218"),
        p = n("49111"),
        y = n("724210"),
        T = n("133335");
      let C = "null",
        S = {},
        I = new Set(),
        A = 0;
      function D(e) {
        var t;
        let n = S[null != e ? e : C];
        return {
          unread: !1,
          unreadByType: {},
          unreadChannelId: null,
          mentionCount: 0,
          mentionCounts: {},
          ncMentionCount: 0,
          sentinel:
            null !== (t = null == n ? void 0 : n.sentinel) && void 0 !== t
              ? t
              : 0,
        };
      }
      function N(e) {
        var t;
        return (S[null != e ? e : C] =
          null !== (t = S[null != e ? e : C]) && void 0 !== t ? t : D(e));
      }
      function O(e) {
        let t = N(e);
        t.sentinel++, A++;
      }
      function P(e, t, n) {
        let s = e.guild_id;
        return (
          null != s &&
          n &&
          !(
            (0, u.isThread)(e.type) ||
            v.default.isChannelRecordOrParentOptedIn(e)
          ) &&
          0 === t
        );
      }
      function b(e) {
        let t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
          n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
        if (
          null == e ||
          (e.isGuildVocal() && 0 === t) ||
          e.hasFlag(y.ChannelFlags.IS_GUILD_RESOURCE_CHANNEL)
        )
          return !1;
        if (0 === t || n) {
          let t = e.isThread()
            ? o.default.isMuted(e.id) ||
              v.default.isGuildOrCategoryOrChannelMuted(e.guild_id, e.parent_id)
            : v.default.isGuildOrCategoryOrChannelMuted(e.guild_id, e.id);
          if (t) return !1;
        }
        return (
          !(
            !e.isPrivate() &&
            (P(e, t, (0, r.isOptInEnabledForGuild)(e.guild_id)) ||
              !c.default.can(e.accessPermissions, e))
          ) &&
          (t > 0 ||
            v.default.resolveUnreadSetting(e) === T.UnreadSetting.ALL_MESSAGES)
        );
      }
      function V(e) {
        switch (e) {
          case C:
          case null:
          case void 0:
            return null;
          default:
            return e;
        }
      }
      function R(e, t) {
        let n = g.default.hasUnread(e, t);
        if (t === T.ReadStateTypes.GUILD_EVENT)
          return (
            !(
              v.default.isMuted(e) || v.default.isMuteScheduledEventsEnabled(e)
            ) && n
          );
        return n;
      }
      function k(e, t) {
        let n = D(e);
        return (
          (n.mentionCounts = { ...t.mentionCounts }),
          (n.unreadByType = { ...t.unreadByType }),
          n
        );
      }
      function M(e) {
        return (e.unread = Object.values(e.unreadByType).some(e => e)), e;
      }
      function w(e, t) {}
      function L(e, t, n) {
        if (
          (M(t),
          (t.mentionCount = i(t.mentionCounts).values().sum()),
          t.unread !== n.unread || t.mentionCount !== n.mentionCount)
        )
          return (
            (S[null != e ? e : C] = t),
            null != e && (t.unread ? I.add(e) : I.delete(e)),
            A++,
            O(null != e ? e : C),
            !0
          );
        return !1;
      }
      function U(e, t) {
        let n = V(e),
          s = N(n),
          i = k(n, s),
          r = !1;
        if (
          (t.forEach(e => {
            let t = f.default.getChannel(e);
            if (null == t) {
              delete i.mentionCounts[e];
              return;
            }
            if (t.getGuildId() !== n) return;
            let s = g.default.getMentionCount(e);
            null !== n &&
              !r &&
              g.default.hasUnread(t.id) &&
              b(t, s, !0) &&
              ((r = !0), (i.unreadChannelId = t.id)),
              s > 0 && b(t, s)
                ? (i.mentionCounts[t.id] = s)
                : delete i.mentionCounts[t.id];
          }),
          (i.unreadByType[T.ReadStateTypes.CHANNEL] = r),
          i.unreadByType[T.ReadStateTypes.CHANNEL] !==
            s.unreadByType[T.ReadStateTypes.CHANNEL] &&
            !i.unreadByType[T.ReadStateTypes.CHANNEL])
        ) {
          let e = f.default.getChannel(s.unreadChannelId);
          if (
            !(
              null != e &&
              !t.includes(e.id) &&
              g.default.hasUnread(e.id) &&
              b(e)
            )
          )
            return F(n);
          null != n && I.add(n),
            (i.unreadByType[T.ReadStateTypes.CHANNEL] = !0);
        }
        return L(n, i, s);
      }
      function G(e, t) {
        if (null == e) return;
        let n = N(e),
          s = k(e, n);
        return (
          (s.unreadByType[T.ReadStateTypes.GUILD_EVENT] = R(e, t)), L(e, s, n)
        );
      }
      function F(e, t) {
        let n = V(e),
          s = D(n);
        if (null == n) {
          let e = f.default.getMutablePrivateChannels();
          for (let t in e) {
            let n = e[t],
              i = g.default.getMentionCount(t);
            i > 0 &&
              b(n, i) &&
              ((s.mentionCount += i), (s.mentionCounts[n.id] = i));
          }
        } else {
          let e = v.default.isMuted(n);
          if (e && !1 === t) return !1;
          let i = v.default.getMutedChannels(n),
            d = v.default.getChannelOverrides(n),
            l = (0, r.isOptInEnabledForGuild)(n),
            _ = f.default.getMutableBasicGuildChannelsForGuild(n);
          for (let t in _) {
            let n = _[t],
              r = e || i.has(t) || (null != n.parent_id && i.has(n.parent_id)),
              a = s.unreadByType[T.ReadStateTypes.CHANNEL],
              { mentionCount: o, unread: f } =
                g.default.getGuildChannelUnreadState(n, l, d, r, a),
              m = o > 0;
            if (!m && r) continue;
            let h = !a && (!r || m) && f;
            if (h || m) {
              let e = (function (e, t, n) {
                if (
                  ((0, u.isGuildVocalChannelType)(e.type) && 0 === t) ||
                  !c.default.canBasicChannel(
                    (0, u.getBasicAccessPermissions)(e.type),
                    e
                  ) ||
                  P(e, t, n)
                )
                  return !1;
                return (
                  !(
                    "flags" in e &&
                    e.hasFlag(y.ChannelFlags.IS_GUILD_RESOURCE_CHANNEL)
                  ) &&
                  (t > 0 ||
                    v.default.resolveUnreadSetting(e) ===
                      T.UnreadSetting.ALL_MESSAGES)
                );
              })(n, o, l);
              e &&
                (h &&
                  ((s.unreadByType[T.ReadStateTypes.CHANNEL] = !0),
                  (s.unreadChannelId = t)),
                m && ((s.mentionCount += o), (s.mentionCounts[n.id] = o)));
            }
          }
          let m = a.default.getActiveJoinedThreadsForGuild(n);
          for (let t in m)
            for (let n in m[t]) {
              !s.unreadByType[T.ReadStateTypes.CHANNEL] &&
                g.default.hasUnread(n) &&
                !o.default.isMuted(n) &&
                !e &&
                ((s.unreadByType[T.ReadStateTypes.CHANNEL] = !0),
                (s.unreadChannelId = n));
              let t = g.default.getMentionCount(n);
              t > 0 && ((s.mentionCount += t), (s.mentionCounts[n] = t));
            }
          !s.unreadByType[T.ReadStateTypes.GUILD_EVENT] &&
            R(n, T.ReadStateTypes.GUILD_EVENT) &&
            (s.unreadByType[T.ReadStateTypes.GUILD_EVENT] = !0);
        }
        M(s);
        let i = N(n);
        if (s.unread !== i.unread || s.mentionCount !== i.mentionCount)
          return (
            (S[null != n ? n : C] = s),
            null != n && (s.unread ? I.add(n) : I.delete(n)),
            A++,
            O(null != n ? n : C),
            !0
          );
        return !1;
      }
      function H(e) {
        let { guilds: t } = e;
        (S = {}), (A = 0), (I = new Set()), F(null);
        let { length: n } = t;
        for (let e = 0; e < n; e++) {
          let n = t[e];
          null != n && F(n.id);
        }
      }
      function B(e) {
        let { guilds: t, readState: n } = e;
        (S = {}), (A = 0), (I = new Set());
        let s = n.entries.length < 500,
          i = new Set();
        for (let e of (s &&
          n.entries.forEach(e => {
            if (null != e.mention_count && e.mention_count > 0) {
              if (
                null == e.read_state_type ||
                e.read_state_type === T.ReadStateTypes.CHANNEL
              ) {
                var t;
                i.add(
                  null === (t = f.default.getChannel(e.id)) || void 0 === t
                    ? void 0
                    : t.guild_id
                );
              } else i.add(e.id);
            }
          }),
        F(null),
        t))
          F(e.id, s ? i.has(e.id) : void 0);
      }
      function x() {
        (S = {}), (I = new Set()), F(null);
        let e = Object.values(_.default.getGuildIds());
        for (let t of e) F(t);
      }
      function Y(e) {
        let { guild: t } = e;
        return F(t.id);
      }
      function j(e) {
        let { guild: t } = e;
        return null != S[t.id] && (delete S[t.id], I.delete(t.id), A++, !0);
      }
      function K(e) {
        let {
          channel: { id: t, guild_id: n },
        } = e;
        return U(n, [t]);
      }
      function W() {
        let e = f.default.getChannel(m.default.getChannelId());
        return null != e && U(e.getGuildId(), [e.id]);
      }
      function z(e) {
        let { user: t, guildId: n } = e;
        return t.id === l.default.getId() && F(n);
      }
      function q(e) {
        let { channelId: t } = e,
          n = f.default.getChannel(t);
        return null != n && U(n.getGuildId(), [n.id]);
      }
      function X(e) {
        let { channelId: t } = e,
          n = f.default.getChannel(t);
        if (null == n) return !1;
        if (null != n.guild_id) {
          let e = N(n.guild_id),
            s = n.isThread()
              ? !o.default.hasJoined(n.id) || o.default.isMuted(n.id)
              : v.default.isGuildOrCategoryOrChannelMuted(n.guild_id, n.id);
          if (
            (s || e.unreadByType[T.ReadStateTypes.CHANNEL]) &&
            0 === g.default.getMentionCount(t)
          )
            return !1;
        }
        return U(n.getGuildId(), [n.id]);
      }
      function Q(e) {
        let { channelId: t, guildId: n } = e;
        return n !== p.FAVORITES && null != t && U(n, [t]);
      }
      function Z(e) {
        let { channel: t } = e;
        return U(t.getGuildId(), [t.id]);
      }
      function J(e) {
        let { channels: t } = e;
        return i(t)
          .groupBy(e => e.getGuildId())
          .reduce(
            (e, t, n) =>
              U(
                n,
                t.map(e => e.id)
              ) || e,
            !1
          );
      }
      function $(e) {
        let { channels: t } = e;
        return i(t)
          .map(e => {
            let { channelId: t } = e;
            return t;
          })
          .filter(e => null != f.default.getChannel(e))
          .groupBy(e => {
            var t;
            return null === (t = f.default.getChannel(e)) || void 0 === t
              ? void 0
              : t.getGuildId();
          })
          .reduce((e, t, n) => U(n, t) || e, !1);
      }
      function ee(e) {
        let { channel: t } = e;
        return U(t.getGuildId(), [t.id, t.parent_id]);
      }
      function et(e) {
        let { guildScheduledEvent: t } = e;
        return G(t.guild_id, T.ReadStateTypes.GUILD_EVENT);
      }
      function en(e) {
        let { guildScheduledEvent: t } = e;
        return G(t.guild_id, T.ReadStateTypes.GUILD_EVENT);
      }
      function es(e) {
        let { id: t, ackType: n } = e;
        return G(t, n);
      }
      function ei(e) {
        let { id: t, guildId: n } = e;
        return U(n, [t]);
      }
      function er(e) {
        return (
          (0, d.doesThreadMembersActionAffectMe)(e) && U(e.guildId, [e.id])
        );
      }
      function ea(e) {
        let { threads: t, guildId: n } = e;
        return U(
          n,
          t.filter(e => o.default.hasJoined(e.id)).map(e => e.id)
        );
      }
      function eo(e) {
        return (
          null != e.channels &&
          U(
            e.guildId,
            e.channels.map(e => e.id)
          )
        );
      }
      function ed(e) {
        let { guildId: t } = e;
        return F(t);
      }
      function eu(e) {
        let { guildId: t } = e;
        return F(t);
      }
      function el(e) {
        let { userGuildSettings: t } = e,
          n = new Set(
            t.map(e => {
              var t;
              return null !== (t = e.guild_id) && void 0 !== t ? t : C;
            })
          );
        return Object.keys(S).reduce((e, t) => (n.has(t) && F(t)) || e, !1);
      }
      function ef() {
        for (let e in S) {
          let t = S[e];
          t.ncMentionCount = 0;
        }
      }
      function e_(e) {
        let { guildId: t } = e;
        return F(t);
      }
      class ec extends h.default {
        takeSnapshot() {
          return {
            version: ec.LATEST_SNAPSHOT_VERSION,
            data: { guilds: S, unreadGuilds: Array.from(I) },
          };
        }
        hasAnyUnread() {
          return I.size > 0;
        }
        getStoreChangeSentinel() {
          return A;
        }
        getMutableUnreadGuilds() {
          return I;
        }
        getMutableGuildStates() {
          return S;
        }
        hasUnread(e) {
          return I.has(e);
        }
        getMentionCount(e) {
          return N(e).mentionCount;
        }
        getMutableGuildReadState(e) {
          return N(e);
        }
        getGuildHasUnreadIgnoreMuted(e) {
          let t = f.default.getMutableGuildChannelsForGuild(e);
          for (let e in t) {
            let n = t[e];
            if (null != n) {
              if (
                (!n.isGuildVocal() || 0 !== g.default.getMentionCount(e)) &&
                c.default.can(n.accessPermissions, n) &&
                g.default.hasUnread(e)
              )
                return !0;
            }
          }
          let n = a.default.getActiveJoinedThreadsForGuild(e);
          for (let e in n) {
            let t = f.default.getChannel(e);
            if (null != t && b(t)) {
              for (let t in n[e]) if (g.default.hasUnread(t)) return !0;
            }
          }
          return !!g.default.hasUnread(e, T.ReadStateTypes.GUILD_EVENT) || !1;
        }
        getTotalMentionCount(e) {
          let t = 0;
          for (let n in S) {
            let s = S[n];
            (!0 !== e || n !== C) && (t += s.mentionCount);
          }
          return t;
        }
        getTotalNotificationsMentionCount(e) {
          let t = 0;
          for (let n in S) {
            let s = S[n];
            (!0 !== e || n !== C) && (t += s.ncMentionCount);
          }
          return t;
        }
        getPrivateChannelMentionCount() {
          var e;
          let t = S[C];
          return null !== (e = null == t ? void 0 : t.mentionCount) &&
            void 0 !== e
            ? e
            : 0;
        }
        getMentionCountForChannels(e, t) {
          let n = 0,
            s = S[e];
          return null == s
            ? 0
            : (t.forEach(e => {
                let t = s.mentionCounts[e];
                n += null != t ? t : 0;
              }),
              n);
        }
        getGuildChangeSentinel(e) {
          return N(e).sentinel;
        }
        constructor() {
          super(),
            (this.loadCache = () => {
              let e = this.readSnapshot(ec.LATEST_SNAPSHOT_VERSION);
              null != e && ((S = e.guilds), (I = new Set(e.unreadGuilds)));
            }),
            this.registerActionHandlers({
              CONNECTION_OPEN: B,
              OVERLAY_INITIALIZE: H,
              CACHE_LOADED_LAZY: this.loadCache,
              GUILD_CREATE: Y,
              GUILD_DELETE: j,
              MESSAGE_CREATE: X,
              MESSAGE_ACK: q,
              BULK_ACK: $,
              UPDATE_CHANNEL_DIMENSIONS: q,
              CHANNEL_SELECT: Q,
              CHANNEL_DELETE: K,
              WINDOW_FOCUS: W,
              GUILD_ACK: ed,
              GUILD_ROLE_CREATE: eu,
              GUILD_ROLE_DELETE: eu,
              GUILD_ROLE_UPDATE: eu,
              CHANNEL_CREATE: Z,
              CHANNEL_UPDATES: J,
              THREAD_CREATE: ee,
              THREAD_UPDATE: ee,
              THREAD_DELETE: ee,
              THREAD_LIST_SYNC: ea,
              THREAD_MEMBER_UPDATE: ei,
              THREAD_MEMBERS_UPDATE: er,
              PASSIVE_UPDATE_V1: eo,
              GUILD_MEMBER_UPDATE: z,
              USER_GUILD_SETTINGS_FULL_UPDATE: el,
              USER_GUILD_SETTINGS_CHANNEL_UPDATE: e_,
              USER_GUILD_SETTINGS_CHANNEL_UPDATE_BULK: e_,
              USER_GUILD_SETTINGS_GUILD_UPDATE: e_,
              USER_GUILD_SETTINGS_GUILD_AND_CHANNELS_UPDATE: e_,
              GUILD_FEATURE_ACK: es,
              GUILD_SCHEDULED_EVENT_CREATE: et,
              GUILD_SCHEDULED_EVENT_UPDATE: et,
              GUILD_SCHEDULED_EVENT_DELETE: en,
              CHANNEL_RTC_UPDATE_CHAT_OPEN: q,
              LOAD_MESSAGES_SUCCESS: q,
              CHANNEL_ACK: q,
              CHANNEL_LOCAL_ACK: q,
              NOTIFICATION_SETTINGS_UPDATE: x,
              RECOMPUTE_READ_STATES: x,
              VOICE_CHANNEL_SELECT: q,
              ENABLE_AUTOMATIC_ACK: q,
              RESORT_THREADS: q,
              NOTIFICATION_CENTER_CLEAR_GUILD_MENTIONS: ef,
              TRY_ACK: q,
            }),
            this.waitFor(
              f.default,
              m.default,
              g.default,
              c.default,
              l.default,
              E.default,
              v.default,
              a.default,
              o.default
            );
        }
      }
      (ec.displayName = "GuildReadStateStore"),
        (ec.LATEST_SNAPSHOT_VERSION = 1);
      var eg = new ec();
    },
    88093: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
        }),
        n("222007"),
        n("702976"),
        n("424973");
      var s = n("446674"),
        i = n("913144"),
        r = n("568734"),
        a = n("26989"),
        o = n("305961"),
        d = n("697218"),
        u = n("49111"),
        l = n("657944");
      let f = {
          notClaimed: !1,
          notEmailVerified: !1,
          notPhoneVerified: !1,
          newAccount: !1,
          newMember: !1,
          canChat: !0,
        },
        _ = new Set(),
        c = {};
      function g(e) {
        let t;
        m(e), _.add(e);
        let n = o.default.getGuild(e),
          s = d.default.getCurrentUser();
        if (
          null == n ||
          n.verificationLevel === u.VerificationLevels.NONE ||
          null == s ||
          n.isOwner(s) ||
          s.isPhoneVerified()
        )
          return;
        let f = a.default.getMember(n.id, s.id);
        if (null != f) {
          var g;
          if (
            (0, r.hasFlag)(
              null !== (g = f.flags) && void 0 !== g ? g : 0,
              l.GuildMemberFlags.BYPASSES_VERIFICATION
            )
          )
            return;
          let e = new Set();
          for (let t of f.roles) {
            let s = n.getRole(t);
            null != s && !s.managed && e.add(t);
          }
          let t = new Date("2022-12-02 00:00:00"),
            s = null == f.joinedAt || new Date(f.joinedAt) < t,
            i =
              n.hasFeature(u.GuildFeatures.GUILD_ONBOARDING_EVER_ENABLED) && !s;
          if (!i && e.size > 0) return;
        }
        let h =
            +s.createdAt +
            6e4 * u.VerificationCriteria.ACCOUNT_AGE -
            Date.now(),
          v =
            +n.joinedAt + 6e4 * u.VerificationCriteria.MEMBER_AGE - Date.now(),
          E = n.verificationLevel >= u.VerificationLevels.LOW && !s.isClaimed(),
          p = !1,
          y = !1,
          T = !1,
          C = !1;
        !s.isPhoneVerified() &&
          !s.isStaff() &&
          ((p = n.verificationLevel >= u.VerificationLevels.LOW && !s.verified),
          (y = n.verificationLevel >= u.VerificationLevels.VERY_HIGH),
          (T = n.verificationLevel >= u.VerificationLevels.MEDIUM && h > 0),
          (C = n.verificationLevel >= u.VerificationLevels.HIGH && v > 0));
        let S = [];
        C && S.push(v),
          T && S.push(h),
          S.length > 0 &&
            (t = setTimeout(
              () =>
                i.default.dispatch({
                  type: "GUILD_VERIFICATION_CHECK",
                  guildId: e,
                }),
              Math.max(...S)
            )),
          (c[e] = {
            notClaimed: E,
            notEmailVerified: p,
            notPhoneVerified: y,
            newAccount: T,
            newMember: C,
            canChat: !(E || p || y || T || C),
            accountDeadline: new Date(Date.now() + h),
            memberDeadline: new Date(Date.now() + v),
            timeoutRef: t,
          });
      }
      function m(e) {
        let t = c[e];
        null != t && clearTimeout(t.timeoutRef), delete c[e];
      }
      function h(e) {
        _.delete(e.guild.id), g(e.guild.id);
      }
      class v extends s.default.Store {
        initialize() {
          this.waitFor(o.default, d.default);
        }
        getCheck(e) {
          var t;
          return !_.has(e) && g(e), null !== (t = c[e]) && void 0 !== t ? t : f;
        }
        canChatInGuild(e) {
          return this.getCheck(e).canChat;
        }
      }
      v.displayName = "GuildVerificationStore";
      var E = new v(i.default, {
        CONNECTION_OPEN: function () {
          for (let e in (_.clear(), c)) m(e);
        },
        CONNECTION_CLOSED: function () {
          Object.keys(c).forEach(m);
        },
        CURRENT_USER_UPDATE: function () {
          _.clear();
        },
        GUILD_CREATE: h,
        GUILD_UPDATE: h,
        GUILD_DELETE: function (e) {
          let { guild: t } = e;
          m(t.id);
        },
        GUILD_MEMBER_UPDATE: function (e) {
          var t;
          let { guildId: n, user: s } = e;
          if (
            s.id !==
            (null === (t = d.default.getCurrentUser()) || void 0 === t
              ? void 0
              : t.id)
          )
            return !1;
          _.delete(n);
        },
        GUILD_VERIFICATION_CHECK: function (e) {
          let { guildId: t } = e;
          g(t);
        },
      });
    },
    603699: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return S;
          },
        });
      var s = n("446674"),
        i = n("913144"),
        r = n("987317"),
        a = n("49671"),
        o = n("845579"),
        d = n("718517"),
        u = n("773336"),
        l = n("271938"),
        f = n("49111"),
        _ = n("353927");
      let c = Date.now(),
        g = !1,
        m = !1,
        h = !1,
        v = !1,
        E = !1;
      function p() {
        return h || v || ((0, u.isAndroid)() && E);
      }
      function y() {
        Date.now() - c > f.IDLE_DURATION || p()
          ? g || i.default.dispatch({ type: "IDLE", idle: !0, idleSince: c })
          : g && i.default.dispatch({ type: "IDLE", idle: !1 }),
          Date.now() - c >
            Math.min(
              o.AfkTimeout.getSetting() * d.default.Millis.SECOND,
              f.IDLE_DURATION
            ) || p()
            ? m || i.default.dispatch({ type: "AFK", afk: !0 })
            : m && i.default.dispatch({ type: "AFK", afk: !1 });
      }
      !__OVERLAY__ &&
        (u.isPlatformEmbedded &&
        (null === a.default || void 0 === a.default
          ? void 0
          : a.default.remotePowerMonitor) != null
          ? (!(function e() {
              var t;
              let n = t => {
                (c = Math.max(Date.now() - t, c)),
                  y(),
                  setTimeout(e, 10 * d.default.Millis.SECOND);
              };
              if (
                (null === a.default || void 0 === a.default
                  ? void 0
                  : null === (t = a.default.remotePowerMonitor) || void 0 === t
                    ? void 0
                    : t.getSystemIdleTimeMs) != null
              ) {
                let e = a.default.remotePowerMonitor.getSystemIdleTimeMs();
                e instanceof Promise ? e.then(n) : n(e);
              }
            })(),
            a.default.remotePowerMonitor.on("resume", () => {
              (h = !1), T({});
            }),
            a.default.remotePowerMonitor.on("suspend", () => {
              (h = !0), T({}), r.default.disconnect();
            }),
            a.default.remotePowerMonitor.on("lock-screen", () => {
              (v = !0), T({});
            }),
            a.default.remotePowerMonitor.on("unlock-screen", () => {
              (v = !1), T({});
            }))
          : setInterval(y, 0.25 * f.IDLE_DURATION));
      function T(e) {
        let { timestamp: t, type: n } = e,
          s = "OVERLAY_SET_NOT_IDLE" === n && null != t;
        return (
          (!s || !(t <= c)) &&
          ((c = s ? t : Date.now()),
          __OVERLAY__
            ? i.default.dispatch({ type: "OVERLAY_SET_NOT_IDLE", timestamp: c })
            : y(),
          !1)
        );
      }
      class C extends s.default.Store {
        isIdle() {
          return g;
        }
        isAFK() {
          return m;
        }
        getIdleSince() {
          return g ? c : null;
        }
      }
      C.displayName = "IdleStore";
      var S = new C(i.default, {
        IDLE: function (e) {
          g = e.idle;
        },
        AFK: function (e) {
          m = e.afk;
        },
        SPEAKING: function (e) {
          let { userId: t, speakingFlags: n } = e;
          return (
            n !== _.SpeakingFlags.NONE && t === l.default.getId() && T({}), !1
          );
        },
        APP_STATE_UPDATE: function (e) {
          let { state: t } = e;
          return (E = t === f.AppStates.BACKGROUND), (c = Date.now()), y(), !1;
        },
        OVERLAY_SET_NOT_IDLE: T,
        CHANNEL_SELECT: T,
        VOICE_CHANNEL_SELECT: T,
        WINDOW_FOCUS: T,
        OVERLAY_INITIALIZE: T,
        OVERLAY_SET_INPUT_LOCKED: T,
        USER_SETTINGS_PROTO_UPDATE: T,
      });
    },
    330154: function (e, t, n) {
      "use strict";
      let s;
      n.r(t),
        n.d(t, {
          default: function () {
            return C;
          },
        });
      var i = n("671725"),
        r = n.n(i),
        a = n("533865"),
        o = n.n(a),
        d = n("953406"),
        u = n.n(d),
        l = n("446674"),
        f = n("913144"),
        _ = n("517763"),
        c = n("91366");
      let g = {},
        m = {},
        h = {},
        v = {},
        E = !1,
        p = !1,
        y = !1;
      class T extends l.default.Store {
        getInvite(e) {
          var t, n;
          let {
            targetType: s,
            targetUserId: i,
            targetApplicationId: r,
          } = arguments.length > 1 && void 0 !== arguments[1]
            ? arguments[1]
            : {};
          return s === c.InviteTargetTypes.STREAM && null != i
            ? null === (t = m[e]) || void 0 === t
              ? void 0
              : t[i]
            : s === c.InviteTargetTypes.EMBEDDED_APPLICATION && null != r
              ? null === (n = h[e]) || void 0 === n
                ? void 0
                : n[r]
              : g[e];
        }
        getFriendInvite() {
          return s;
        }
        getFriendInvitesFetching() {
          return E;
        }
        canRevokeFriendInvite() {
          return null != s && !p && !y;
        }
      }
      T.displayName = "InstantInviteStore";
      var C = new T(f.default, {
        CONNECTION_OPEN: function () {
          (g = {}),
            (m = {}),
            (h = {}),
            (v = {}),
            (s = null),
            (p = !1),
            (y = !1),
            (E = !1);
        },
        CHANNEL_DELETE: function (e) {
          let { channel: t } = e;
          delete g[t.id], delete m[t.id], delete h[t.id];
        },
        FRIEND_INVITE_CREATE_SUCCESS: function (e) {
          var t;
          (v[e.invite.code] = _.default.createFromServer(e.invite)),
            (s =
              null !== (t = r(o(u(Object.values(v), "createdAt")))) &&
              void 0 !== t
                ? t
                : null),
            (y = !1);
        },
        FRIEND_INVITE_CREATE_FAILURE: function () {
          y = !1;
        },
        FRIEND_INVITE_REVOKE_SUCCESS: function (e) {
          var t;
          null != e.invites &&
            e.invites.forEach(e => {
              null != v[e.code] && delete v[e.code];
            }),
            (s =
              null !== (t = r(o(u(Object.values(v), "createdAt")))) &&
              void 0 !== t
                ? t
                : null),
            (p = !1);
        },
        INSTANT_INVITE_CREATE_SUCCESS: function (e) {
          let { channelId: t, invite: n } = e,
            s = _.default.createFromServer(n);
          s.targetType === c.InviteTargetTypes.STREAM && null != s.targetUser
            ? (null == m[t] && (m[t] = {}), (m[t][String(s.targetUser.id)] = s))
            : s.targetType === c.InviteTargetTypes.EMBEDDED_APPLICATION &&
                null != s.targetApplication
              ? (null == h[t] && (h[t] = {}),
                (h[t][s.targetApplication.id] = s))
              : (g[t] = s);
        },
        INSTANT_INVITE_CREATE_FAILURE: function (e) {
          let { channelId: t } = e;
          g[t] = null;
        },
        INSTANT_INVITE_REVOKE_SUCCESS: function (e) {
          let { channelId: t } = e;
          g[t] = null;
        },
        FRIEND_INVITE_REVOKE_REQUEST: function () {
          p = !0;
        },
        FRIEND_INVITE_CREATE_REQUEST: function () {
          y = !0;
        },
        FRIEND_INVITES_FETCH_REQUEST: function () {
          E = !0;
        },
        FRIEND_INVITES_FETCH_RESPONSE: function (e) {
          var t;
          (v = {}),
            e.invites.forEach(e => {
              v[e.code] = _.default.createFromServer(e);
            }),
            (s =
              null !== (t = r(o(u(Object.values(v), "createdAt")))) &&
              void 0 !== t
                ? t
                : null),
            (E = !1);
        },
        INSTANT_INVITE_CLEAR: function (e) {
          delete g[e.channelId];
        },
      });
    },
    778588: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        }),
        n("222007");
      var s = n("446674"),
        i = n("913144");
      let r = [];
      function a() {
        r = [];
      }
      class o extends s.default.Store {
        hasLayers() {
          return r.length > 0;
        }
        getLayers() {
          return r;
        }
      }
      o.displayName = "LayerStore";
      var d = new o(i.default, {
        LAYER_PUSH: function (e) {
          let { component: t } = e;
          if (r.indexOf(t) >= 0) return !1;
          r = [...r, t];
        },
        LAYER_POP: function () {
          if (0 === r.length) return !1;
          r = r.slice(0, -1);
        },
        LAYER_POP_ALL: a,
        LOGOUT: a,
        NOTIFICATION_CLICK: a,
      });
    },
    505507: function (e, t, n) {
      "use strict";
      let s, i;
      n.r(t),
        n.d(t, {
          default: function () {
            return C;
          },
        }),
        n("424973"),
        n("222007"),
        n("70102"),
        n("808653");
      var r,
        a,
        o = n("917351"),
        d = n.n(o),
        u = n("748820"),
        l = n("446674"),
        f = n("95410"),
        _ = n("913144"),
        c = n("684849"),
        g = n("611310"),
        m = n("80687"),
        h = n("49111");
      ((a = r || (r = {})).REQUIRED = "REQUIRED"),
        (a.OPTIONAL = "OPTIONAL"),
        (a.OPTIONAL_DEFAULT = "OPTIONAL_DEFAULT");
      let v = "migrated",
        E = {
          [h.OverlayWidgets.GUILDS]: {
            minSize: { width: 312, height: 300 },
            resizeX: !1,
            resizeY: !0,
            dragAnywhere: !1,
            layoutPolicy: "OPTIONAL",
            defaultSettings: {
              anchor: { left: 0.175, top: 0.15, bottom: null, right: null },
              size: { width: "auto", height: 0.65 },
              pinned: !1,
            },
          },
          [h.OverlayWidgets.TEXT]: {
            minSize: { width: 430, height: 300 },
            resizeX: !0,
            resizeY: !0,
            dragAnywhere: !1,
            layoutPolicy: "OPTIONAL",
            defaultSettings: {
              anchor: { left: 0.26, top: 0.15, bottom: null, right: null },
              size: { width: 0.565, height: 0.65 },
              pinned: !0,
            },
          },
          [h.OverlayWidgets.VOICE]: {
            minSize: { width: 272, height: 100 },
            resizeX: !1,
            resizeY: !1,
            dragAnywhere: !0,
            layoutPolicy: "REQUIRED",
            defaultSettings: {
              anchor: { left: 0.011, top: 0.011, bottom: null, right: null },
              size: { width: "auto", height: "auto" },
              pinned: !0,
            },
          },
          [h.OverlayWidgets.GUILDS_TEXT]: {
            minSize: { height: 300, width: 610 },
            resizeX: !0,
            resizeY: !0,
            dragAnywhere: !1,
            layoutPolicy: "OPTIONAL_DEFAULT",
            defaultSettings: {
              anchor: { left: 0.15, top: 0.15, bottom: null, right: null },
              size: { width: 0.7, height: 0.65 },
              pinned: !1,
            },
          },
          [h.OverlayWidgets.LOBBY_VOICE]: {
            minSize: { width: 272, height: 100 },
            resizeX: !1,
            resizeY: !1,
            dragAnywhere: !0,
            layoutPolicy: "REQUIRED",
            defaultSettings: {
              anchor: { left: null, top: 0.011, bottom: null, right: 0.011 },
              size: { width: "auto", height: "auto" },
              pinned: !0,
            },
          },
        };
      function p(e, t) {
        let n = i[e];
        if (null == n) return !1;
        let r = s[n.layoutId];
        return null != r && t(n, r);
      }
      function y(e) {
        var t;
        return null === (t = E[e]) || void 0 === t ? void 0 : t.defaultSettings;
      }
      class T extends l.default.PersistedStore {
        initialize(e) {
          null != e && null != e.layouts && null != e.widgets
            ? ((s = (function (e) {
                let t = {};
                return (
                  d.forEach(e, (e, n) => {
                    t[n] = new c.default(e);
                  }),
                  t
                );
              })(e.layouts)),
              (i = (function (e) {
                let t = {};
                return (
                  d.forEach(e, (e, n) => {
                    t[n] = new g.default(e);
                  }),
                  t
                );
              })(e.widgets)))
            : ((s = {}), (i = {}));
          let t = !1,
            n = [];
          d.forEach(E, (e, t) => {
            "REQUIRED" === e.layoutPolicy && n.push(t);
          }),
            d.forEach(s, (e, r) => {
              let a = this.getWidgetsForLayout(r),
                o = !1;
              for (let e of n) {
                let n = a.find(t => t.type === e);
                if (null != n) continue;
                o = t = !0;
                let s = (0, u.v4)();
                (n = new g.default({
                  ...this.getWidgetDefaultSettings(e),
                  type: e,
                  id: s,
                  layoutId: r,
                  zIndex: a.length,
                })),
                  a.push(n),
                  (i = { ...i, [s]: n });
              }
              o &&
                ((e = e.set(
                  "widgets",
                  a.map(e => {
                    let { id: t } = e;
                    return t;
                  })
                )),
                (s = { ...s, [r]: e }));
            }),
            d.forEach(i, (e, n) => {
              let r = s[e.layoutId];
              (null == r || 0 > r.widgets.indexOf(n)) &&
                ((i = { ...i }), delete i[n], (t = !0));
            }),
            t && (this.persist(), this.emitChange());
        }
        getState() {
          return { layouts: s, widgets: i };
        }
        getLayouts() {
          return s;
        }
        getLayout(e) {
          return s[e];
        }
        getAllWidgets() {
          return i;
        }
        getWidget(e) {
          return i[e];
        }
        getWidgetsForLayout(e) {
          let t = this.getLayout(e);
          return null == t
            ? []
            : t.widgets.reduce((e, t) => {
                let n = this.getWidget(t);
                return null != n && e.push(n), e;
              }, []);
        }
        getWidgetConfig(e) {
          return E[e];
        }
        getWidgetDefaultSettings(e) {
          return y(e);
        }
        getWidgetType(e) {
          let t = i[e];
          return null != t ? t.type : "";
        }
        getRegisteredWidgets() {
          return E;
        }
        getDefaultLayout(e) {
          let t = [];
          return (
            d.forEach(this.getRegisteredWidgets(), (n, s) => {
              switch (n.layoutPolicy) {
                case "REQUIRED":
                case "OPTIONAL_DEFAULT":
                  t.push({
                    ...n.defaultSettings,
                    type: s,
                    id: (0, u.v4)(),
                    layoutId: e,
                  });
              }
            }),
            t
          );
        }
      }
      (T.displayName = "LayoutStore"),
        (T.persistKey = "LayoutStore"),
        (T.migrations = [
          () => {
            let e = { ...f.default.get("OverlayStore") },
              { pinnedWidgets: t, positions: n, sizes: s, v: i } = e;
            if (5 === i && t) {
              let e = [],
                i = t.map(t => {
                  let i = null != n ? n[t] : null,
                    r = null != s ? s[t] : null,
                    a = {
                      id: t,
                      layoutId: v,
                      type: t,
                      anchor: i || {
                        top: -1,
                        left: -1,
                        bottom: null,
                        right: null,
                      },
                      size: r || { width: -1, height: -1 },
                      pinned: !0,
                      zIndex: 0,
                    };
                  return e.push([a.id, a]), a.id;
                });
              return { layouts: [[v, { id: v, widgets: i }]], widgets: e };
            }
            return { layouts: [], widgets: [] };
          },
          e => {
            let { layouts: t, widgets: n } = e,
              s = new Set(Object.keys(h.OverlayWidgets)),
              i = Array.from(n).filter(e => {
                let [t] = e;
                return !s.has(t);
              }),
              r = Array.from(t).filter(e => {
                let [t] = e;
                return t !== v;
              });
            return (
              r.forEach(e => {
                let [t, n] = e,
                  s = null,
                  r = null;
                if (
                  (n.widgets.find(e => {
                    let n = i.find(n => {
                      let [s, i] = n;
                      return s === e && i.layoutId === t;
                    });
                    return (
                      null != n &&
                      (null == r &&
                        n[1].type === h.OverlayWidgets.VOICE &&
                        (r = n[0]),
                      null == s &&
                        n[1].type === h.OverlayWidgets.TEXT &&
                        (s = n[1].pinned),
                      (null != s && null != r) || void 0)
                    );
                  }),
                  s || null == r)
                )
                  return;
                let a = (0, u.v4)();
                (n.widgets = [r, a]),
                  i.push([
                    a,
                    {
                      ...y(h.OverlayWidgets.GUILDS_TEXT),
                      type: h.OverlayWidgets.GUILDS_TEXT,
                      id: a,
                      layoutId: t,
                      zIndex: 2,
                    },
                  ]);
              }),
              { widgets: i, layouts: r }
            );
          },
          e => {
            let { layouts: t, widgets: n } = e,
              s = t.reduce((e, t) => {
                let [n, s] = t;
                return (e[n] = s), e;
              }, {}),
              i = n.reduce((e, t) => {
                let [n, s] = t;
                return (e[n] = s), e;
              }, {});
            return { layouts: s, widgets: i };
          },
        ]);
      var C = new T(_.default, {
        LAYOUT_CREATE: function (e) {
          let { layoutId: t, widgets: n, defaultResolution: r } = e;
          if (null != s[t]) return !1;
          let a = [];
          n.forEach((e, t) => {
            let n = (function (e) {
                let t = s[v];
                if (null != t)
                  for (let n of t.widgets) {
                    let t = i[n];
                    if (null != t && t.type === e) return t;
                  }
                return null;
              })(e.type),
              o = { ...e, zIndex: t };
            "" === o.id && (o.id = (0, u.v4)()),
              null != n &&
                ((o.pinned = n.pinned),
                -1 !== n.anchor.left &&
                  (o.anchor = (0, m.getAnchorPercentageFromLayoutSize)(
                    n.anchor,
                    r
                  )),
                -1 !== n.size.width &&
                  (o.size = (0, m.getSizePercentageFromSize)(n.size, r))),
              (i = { ...i, [o.id]: new g.default(o) }),
              a.push(o.id);
          }),
            (s = { ...s, [t]: new c.default({ id: t, widgets: a }) });
        },
        LAYOUT_SET_PINNED: function (e) {
          let { widgetId: t } = e;
          return p(t, (e, t) => {
            (function (e) {
              i = { ...i, [e.id]: e.set("pinned", !e.pinned) };
            })(e);
          });
        },
        LAYOUT_UPDATE_WIDGET: function (e) {
          let { widgetId: t, anchor: n, size: s } = e;
          return p(t, (e, t) =>
            (function (e, t, n) {
              i = { ...i, [e.id]: e.merge({ anchor: t, size: n }) };
            })(e, n, s)
          );
        },
        LAYOUT_SET_TOP_WIDGET: function (e) {
          let { widgetId: t } = e;
          return p(t, (e, t) =>
            (function (e, t) {
              let n = (function (e) {
                let t = [];
                return (
                  e.widgets.forEach(e => {
                    let n = i[e];
                    null != n && t.push(n);
                  }),
                  t
                );
              })(e);
              n.sort((e, t) => e.zIndex - t.zIndex);
              let s = n.findIndex(e => e.id === t);
              if (s === n.length - 1) return !1;
              n.push(n.splice(s, 1)[0]);
              for (let e = 0; e < n.length; e++) {
                let t = n[e];
                (function (e, t) {
                  i = { ...i, [e.id]: e.set("zIndex", t) };
                })(t, e);
              }
              return !0;
            })(t, e.id)
          );
        },
        LAYOUT_DELETE_WIDGET: function (e) {
          let { widgetId: t } = e;
          (i = { ...i }),
            delete i[t],
            d.forEach(s, (e, n) => {
              if (n === v) return;
              let i = e.widgets.indexOf(t);
              if (i >= 0) {
                let t = [...e.widgets];
                t.splice(i, 1), (s = { ...s, [n]: e.set("widgets", t) });
              }
            });
        },
        LAYOUT_DELETE_ALL_WIDGETS: function (e) {
          let { layoutId: t } = e,
            n = s[t];
          if (null == n) return !1;
          n.widgets.forEach(e => {
            (i = { ...i }), delete i[e];
          }),
            (s = { ...s, [n.id]: n.set("widgets", []) });
        },
        LAYOUT_CREATE_WIDGETS: function (e) {
          let { widgetConfigs: t } = e;
          t.forEach(e => {
            let t = new g.default(e),
              n = s[t.layoutId];
            if (null == n)
              throw Error("LayoutStore - handleAddWidget: Invalid layoutId");
            (t = t.set("zIndex", n.widgets.length)), (i = { ...i, [t.id]: t });
            let r = [...n.widgets, t.id];
            s = { ...s, [n.id]: n.set("widgets", r) };
          });
        },
      });
    },
    260320: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          LobbyError: function () {
            return d;
          },
          default: function () {
            return g;
          },
        }),
        n("424973");
      var s = n("917351"),
        i = n.n(s),
        r = n("446674"),
        a = n("913144"),
        o = n("49111");
      class d {
        constructor(e) {
          this.code = e;
        }
      }
      let u = {},
        l = {};
      function f(e, t) {
        if (null == l[e]) return null;
        let { socketId: n, timeout: s, resolve: i, reject: r } = l[e];
        return (
          delete l[e],
          null != s && clearTimeout(s),
          null != i && null != r && t(i, r),
          n
        );
      }
      function _(e) {
        let {
            lobbyId: t,
            member: { user: n, metadata: s },
          } = e,
          i = u[t];
        if (null == i) return !1;
        let r = i.members.find(e => e.user.id === n.id);
        null != r
          ? ((r.user = n), (r.metadata = s))
          : i.members.push({ user: n, metadata: s });
      }
      class c extends r.default.Store {
        getLobbies() {
          return u;
        }
        getLobbiesWithVoice() {
          return i.filter(u, e => e.voice);
        }
        getLobby(e) {
          return u[e];
        }
        getPendingLobbies() {
          return i.map(l, (e, t) => {
            let { secret: n } = e;
            return { id: t, secret: n };
          });
        }
      }
      c.displayName = "LobbyStore";
      var g = new c(a.default, {
        CONNECTION_OPEN: function () {
          u = {};
        },
        OVERLAY_INITIALIZE: function (e) {
          u = e.lobbies;
        },
        LOBBY_CONNECT: function (e) {
          let {
            socketId: t,
            lobbyId: n,
            lobbySecret: s,
            resolve: i,
            reject: r,
          } = e;
          if (null != l[n] || null != u[n]) {
            null != r && r(new d(o.LobbyErrors.ALREADY_CONNECTING));
            return;
          }
          l[n] = {
            socketId: t,
            secret: s,
            resolve: i,
            reject: r,
            timeout: __OVERLAY__
              ? null
              : setTimeout(() => {
                  a.default.dispatch({
                    type: "LOBBY_DELETE",
                    lobbyId: n,
                    reason: o.LobbyErrors.SERVICE_UNAVAILABLE,
                  });
                }, 15e3),
          };
        },
        LOBBY_DISCONNECT: function (e) {
          let { lobbyId: t } = e;
          f(t, (e, t) => t(new d(o.LobbyErrors.NO_ERROR)));
        },
        LOBBY_CREATE: function (e) {
          let { lobby: t } = e,
            n = f(t.id, e => e(t));
          null != n && (u[t.id] = { socketId: n, voice: !1, ...u[t.id], ...t });
        },
        LOBBY_UPDATE: function (e) {
          let { lobby: t } = e,
            n = u[t.id];
          null != n && (u[t.id] = { ...n, ...t });
        },
        LOBBY_DELETE: function (e) {
          let { lobbyId: t, reason: n } = e;
          delete u[t], f(t, (e, t) => t(new d(n)));
        },
        LOBBY_MEMBER_CONNECT: _,
        LOBBY_MEMBER_UPDATE: _,
        LOBBY_MEMBER_DISCONNECT: function (e) {
          let {
              lobbyId: t,
              member: { user: n },
            } = e,
            s = u[t];
          if (null == s) return !1;
          s.members = s.members.filter(e => e.user.id !== n.id);
        },
        LOBBY_VOICE_CONNECT: function (e) {
          let { lobbyId: t } = e,
            n = u[t];
          if (null == n) return !1;
          n.voice = !0;
        },
        LOBBY_VOICE_DISCONNECT: function (e) {
          let { lobbyId: t } = e,
            n = u[t];
          if (null == n) return !1;
          n.voice = !1;
        },
        RPC_APP_DISCONNECTED: function (e) {
          let { socketId: t } = e;
          i.forEach(u, e => {
            e.socketId === t &&
              a.default.dispatch({ type: "LOBBY_DISCONNECT", lobbyId: e.id });
          });
        },
      });
    },
    52028: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return D;
          },
        }),
        n("424973"),
        n("222007");
      var s = n("714617"),
        i = n.n(s),
        r = n("917351"),
        a = n.n(r),
        o = n("446674"),
        d = n("913144"),
        u = n("191225"),
        l = n("299285"),
        f = n("225772"),
        _ = n("32346"),
        c = n("925880"),
        g = n("662285"),
        m = n("845579"),
        h = n("374363"),
        v = n("373469"),
        E = n("848872"),
        p = n("568307"),
        y = n("49111"),
        T = n("782340");
      let C = [],
        S = {};
      function I() {
        let e = [],
          t = m.CustomStatusSetting.getSetting();
        null != t &&
          ("0" === t.expiresAtMs ||
            new Date(Number(t.expiresAtMs)).getTime() - new Date().getTime() >
              0) &&
          e.push((0, f.default)(t));
        let n = c.default.getActivities();
        e.push(...n);
        let s = E.default.getStream();
        null != s && e.push({ type: y.ActivityTypes.STREAMING, ...s });
        let r = new Set(),
          o = new Set();
        a.forEach(S, t => {
          null != t.application_id &&
            (r.add(t.name), o.add(t.application_id), e.push(t));
        }),
          u.default.getSelfEmbeddedActivities().forEach(t => {
            var n;
            let { applicationId: s } = t;
            if (o.has(s)) return;
            let i =
              null === (n = l.default.getApplication(s)) || void 0 === n
                ? void 0
                : n.name;
            e.push({
              type: y.ActivityTypes.PLAYING,
              name:
                null != i
                  ? i
                  : T.default.Messages.EMBEDDED_ACTIVITIES_LAUNCHING_ACTIVITY,
              application_id: s,
              flags: y.ActivityFlags.EMBEDDED,
            });
          });
        let d = p.default.getVisibleGame(),
          h = null != d && null != d.name && r.has(d.name),
          I = null != d && d.isLauncher,
          A = v.default.getCurrentUserActiveStream();
        null != d &&
          null != d.name &&
          !(h || (I && !(null != A))) &&
          e.push({
            type: y.ActivityTypes.PLAYING,
            name: d.name,
            application_id: d.id,
            timestamps: { start: d.start },
          });
        let D = g.default.getActivity();
        null != D && e.push({ type: y.ActivityTypes.LISTENING, ...D });
        let N = _.default.getCurrentHangStatus();
        if (null != N) {
          let t = _.default.getCustomHangStatus();
          e.push({
            type: y.ActivityTypes.HANG_STATUS,
            name: "Hang Status",
            state: N,
            details: null == t ? void 0 : t.status,
            emoji: null == t ? void 0 : t.emoji,
          });
        }
        !i(C, e) && (C = e);
      }
      class A extends o.default.Store {
        initialize() {
          this.waitFor(
            p.default,
            u.default,
            E.default,
            v.default,
            g.default,
            h.default,
            _.default
          ),
            this.syncWith([c.default, _.default], () => I());
        }
        getActivities() {
          return C;
        }
        getPrimaryActivity() {
          return C[0];
        }
        getApplicationActivity(e) {
          return this.findActivity(t => t.application_id === e);
        }
        getCustomStatusActivity() {
          return this.findActivity(
            e => e.type === y.ActivityTypes.CUSTOM_STATUS
          );
        }
        findActivity(e) {
          return C.find(e);
        }
        getApplicationActivities() {
          return S;
        }
      }
      A.displayName = "LocalActivityStore";
      var D = new A(d.default, {
        OVERLAY_INITIALIZE: function (e) {
          let { localActivities: t } = e;
          (S = { ...t }), I();
        },
        START_SESSION: function () {
          (S = {}), I();
        },
        LOCAL_ACTIVITY_UPDATE: function (e) {
          let { socketId: t, activity: n } = e;
          if (i(S[t], n)) return !1;
          null != n ? (S[t] = n) : delete S[t], I();
        },
        RPC_APP_DISCONNECTED: function (e) {
          let { socketId: t } = e;
          delete S[t], I();
        },
        RUNNING_GAMES_CHANGE: I,
        LIBRARY_APPLICATION_FLAGS_UPDATE_SUCCESS: I,
        SPOTIFY_PLAYER_STATE: I,
        SPOTIFY_PLAYER_PLAY: I,
        STREAMING_UPDATE: I,
        USER_CONNECTIONS_UPDATE: I,
        STREAM_START: I,
        STREAM_STOP: I,
        USER_SETTINGS_PROTO_UPDATE: I,
        EMBEDDED_ACTIVITY_OPEN: I,
        EMBEDDED_ACTIVITY_CLOSE: I,
        UPDATE_HANG_STATUS: I,
      });
    },
    569983: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return v;
          },
        }),
        n("222007"),
        n("781738");
      var s,
        i = n("446674"),
        r = n("95410"),
        a = n("913144"),
        o = n("253981"),
        d = n("48703"),
        u = n("450484");
      let l = "MaskedLinkStore",
        f = new Set(),
        _ = new Set(),
        c =
          null === (s = window.GLOBAL_ENV.MEDIA_PROXY_ENDPOINT) || void 0 === s
            ? void 0
            : s.replace("//", "");
      function g(e) {
        let t = (0, d.getHostname)(e);
        switch (t) {
          case window.GLOBAL_ENV.CDN_HOST:
          case window.GLOBAL_ENV.INVITE_HOST:
          case window.GLOBAL_ENV.GIFT_CODE_HOST:
          case window.GLOBAL_ENV.GUILD_TEMPLATE_HOST:
          case c:
          case location.hostname:
            return !0;
          default:
            return (
              u.SPOTIFY_HOSTNAMES.includes(t) ||
              o.default.isDiscordHostname(t) ||
              f.has(t)
            );
        }
      }
      function m(e) {
        let t = (0, d.getProtocol)(e);
        return _.has(t);
      }
      class h extends i.default.Store {
        initialize() {
          var e;
          let t = null !== (e = r.default.get(l)) && void 0 !== e ? e : {};
          if (Array.isArray(t))
            (f = new Set(null != t ? Array.from(t) : null)), (_ = new Set());
          else {
            let { trustedDomains: e, trustedProtocols: n } = t;
            (f = new Set(null != e ? Array.from(e) : null)),
              (_ = new Set(null != n ? Array.from(n) : null));
          }
        }
        isTrustedDomain(e) {
          return g(e);
        }
        isTrustedProtocol(e) {
          return m(e);
        }
      }
      h.displayName = "MaskedLinkStore";
      var v = new h(a.default, {
        MASKED_LINK_ADD_TRUSTED_DOMAIN: function (e) {
          let { url: t } = e;
          if (g(t)) return !1;
          f.add((0, d.getHostname)(t)),
            r.default.set(l, { trustedDomains: f, trustedProtocols: _ });
        },
        MASKED_LINK_ADD_TRUSTED_PROTOCOL: function (e) {
          let { url: t } = e;
          if (m(t)) return !1;
          _.add((0, d.getProtocol)(t)),
            r.default.set(l, { trustedDomains: f, trustedProtocols: _ });
        },
      });
    },
    48703: function (e, t, n) {
      "use strict";
      function s(e) {
        let t = document.createElement("a");
        return (t.href = e), t.hostname;
      }
      function i(e) {
        let t = document.createElement("a");
        return (t.href = e), t.protocol;
      }
      n.r(t),
        n.d(t, {
          getHostname: function () {
            return s;
          },
          getProtocol: function () {
            return i;
          },
        });
    },
    377253: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return H;
          },
        }),
        n("222007"),
        n("702976"),
        n("424973"),
        n("860677");
      var s = n("917351"),
        i = n.n(s),
        r = n("446674"),
        a = n("913144"),
        o = n("408062"),
        d = n("979911"),
        u = n("605250"),
        l = n("447435"),
        f = n("10853"),
        _ = n("38654"),
        c = n("692038"),
        g = n("61400");
      n("574073");
      var m = n("432173"),
        h = n("915639"),
        v = n("568734"),
        E = n("271938"),
        p = n("42203"),
        y = n("162805"),
        T = n("923959"),
        C = n("26989"),
        S = n("305961"),
        I = n("957255"),
        A = n("27618"),
        D = n("18494"),
        N = n("162771"),
        O = n("697218"),
        P = n("49111");
      let b = new Set(),
        V = new u.default("MessageStore");
      function R() {
        o.default.forEach(e => {
          o.default.commit(e.mutate({ ready: !1, loadingMore: !1 }));
        }),
          b.clear();
      }
      function k() {
        o.default.forEach(e => {
          e.forAll(e => {
            e.timestamp.locale(h.default.locale);
          });
        });
      }
      function M() {
        o.default.forEach(e => {
          let { channelId: t } = e;
          null == p.default.getChannel(t) && o.default.clear(t);
        });
      }
      function w() {
        o.default.forEach(e => {
          o.default.commit(
            e.reset(
              e.map(e => e.set("blocked", A.default.isBlocked(e.author.id)))
            )
          );
        });
      }
      function L(e) {}
      function U(e) {
        let {
            type: t,
            channelId: n,
            messageId: s,
            userId: i,
            emoji: r,
            reactionType: a,
          } = e,
          d = o.default.get(n);
        if (null == d || !(0, m.shouldApplyReaction)(e)) return !1;
        let u = E.default.getId() === i;
        (d = d.update(s, n =>
          "MESSAGE_REACTION_ADD" === t
            ? n.addReaction(r, u, e.colors, a)
            : n.removeReaction(r, u, a)
        )),
          o.default.commit(d);
      }
      function G(e) {
        let { type: t, messageData: n } = e,
          { message: s } = n,
          i = (0, d.getFailedMessageId)(n),
          r = s.channelId,
          a = o.default.getOrCreate(r);
        if (!a.has(i)) return !1;
        (a = a.update(i, e => {
          var n;
          return (
            (null === (n = e.embeds) || void 0 === n
              ? void 0
              : n.filter(f.isNotAutomodEmbed).length) > 0 &&
              (e = e.set("embeds", [])),
            "MESSAGE_SEND_FAILED_AUTOMOD" === t &&
              (e = e.set(
                "flags",
                (0, v.addFlag)(e.flags, P.MessageFlags.EPHEMERAL)
              )),
            e
          );
        })),
          o.default.commit(a);
      }
      class F extends r.default.Store {
        initialize() {
          this.waitFor(
            O.default,
            p.default,
            y.default,
            C.default,
            h.default,
            D.default,
            N.default,
            S.default,
            A.default,
            T.default
          ),
            this.syncWith([_.default], () => {});
        }
        getMessages(e) {
          if (_.default.hasViewingRoles()) {
            let t = p.default.getChannel(e),
              n = null == t ? void 0 : t.getGuildId();
            if (
              _.default.isViewingRoles(n) &&
              !I.default.can(P.Permissions.VIEW_CHANNEL, t)
            )
              return new o.default(e);
          }
          return o.default.getOrCreate(e);
        }
        getMessage(e, t) {
          return o.default.getOrCreate(e).get(t);
        }
        getLastEditableMessage(e) {
          let t = O.default.getCurrentUser();
          return i(this.getMessages(e).toArray())
            .reverse()
            .find(e => (0, g.default)(e, null == t ? void 0 : t.id));
        }
        getLastCommandMessage(e) {
          let t = O.default.getCurrentUser();
          return this.getMessages(e)
            .toArray()
            .reverse()
            .find(
              e =>
                null != e.interaction &&
                e.interaction.user.id === (null == t ? void 0 : t.id)
            );
        }
        jumpedMessageId(e) {
          let t = o.default.get(e);
          return null == t ? void 0 : t.jumpTargetId;
        }
        focusedMessageId(e) {
          let t = o.default.get(e);
          return null == t ? void 0 : t.focusTargetId;
        }
        hasPresent(e) {
          let t = o.default.get(e);
          return null != t && t.ready && t.hasPresent();
        }
        isReady(e) {
          return o.default.getOrCreate(e).ready;
        }
        whenReady(e, t) {
          this.addConditionalChangeListener(() => {
            if (this.isReady(e)) return setImmediate(t), !1;
          });
        }
        isLoadingMessages(e) {
          let t = o.default.getOrCreate(e);
          return t.loadingMore;
        }
        hasCurrentUserSentMessage(e) {
          let t = O.default.getCurrentUser();
          return (
            null !=
            this.getMessages(e).findNewest(
              e => e.author.id === (null == t ? void 0 : t.id)
            )
          );
        }
      }
      F.displayName = "MessageStore";
      var H = new F(a.default, {
        BACKGROUND_SYNC_CHANNEL_MESSAGES: function (e) {
          let { changesByChannelId: t } = e;
          for (let e in t) {
            let n = o.default.get(e);
            if (null == n) continue;
            let s = n.cached || true;
            if (!s) {
              V.log(
                "Skipping background message sync for "
                  .concat(e, " cached:")
                  .concat(n.cached, " ") +
                  "ready:"
                    .concat(n.ready, " hasMoreAfter:")
                    .concat(n.hasMoreAfter, " ") +
                  "isConnected:".concat(!1)
              );
              continue;
            }
            n.mergeDelta(
              t[e].new_messages,
              t[e].modified_messages,
              t[e].deleted_message_ids
            );
          }
        },
        CONNECTION_OPEN: R,
        OVERLAY_INITIALIZE: R,
        CACHE_LOADED: function (e) {
          for (let [t, n] of Object.entries(e.messages)) {
            let e = o.default.getOrCreate(t).addCachedMessages(n, !0);
            o.default.commit(e);
          }
        },
        LOAD_MESSAGES: function () {
          return !0;
        },
        LOAD_MESSAGES_SUCCESS: function (e) {
          let {
              channelId: t,
              isBefore: n,
              isAfter: s,
              jump: i,
              hasMoreBefore: r,
              hasMoreAfter: a,
              messages: d,
              isStale: u,
              truncate: l,
            } = e,
            f = o.default.getOrCreate(t);
          (f = f.loadComplete({
            newMessages: d,
            isBefore: n,
            isAfter: s,
            jump: i,
            hasMoreBefore: r,
            hasMoreAfter: a,
            cached: u,
            hasFetched: !0,
          })),
            null != l && (n || s) && (!n || !s) && (f = f.truncate(n, s)),
            o.default.commit(f);
        },
        LOAD_MESSAGES_FAILURE: function (e) {
          let { channelId: t } = e,
            n = o.default.getOrCreate(t);
          o.default.commit(n.mutate({ loadingMore: !1, error: !0 }));
        },
        LOAD_MESSAGES_SUCCESS_CACHED: function (e) {
          let {
              channelId: t,
              jump: n,
              focus: s,
              before: i,
              after: r,
              limit: a,
              truncate: d,
            } = e,
            u = o.default.getOrCreate(t);
          (null == n ? void 0 : n.present)
            ? (u = u.jumpToPresent(a))
            : (null == s ? void 0 : s.messageId) != null
              ? (u = u.focusOnMessage(s.messageId))
              : (null == n ? void 0 : n.messageId) != null
                ? (u = u.jumpToMessage(
                    n.messageId,
                    n.flash,
                    n.offset,
                    n.returnMessageId,
                    n.jumpType
                  ))
                : (null != i || null != r) &&
                  (u = u.loadFromCache(null != i, a)),
            null != d &&
              (null != i || null != r) &&
              (null == i || null == r) &&
              (u = u.truncate(null != i, null != r)),
            o.default.commit(u);
        },
        LOCAL_MESSAGES_LOADED: function (e) {
          let t = o.default.getOrCreate(e.channelId);
          (t.cached || !t.ready) &&
            o.default.commit(t.addCachedMessages(e.messages, e.stale));
        },
        LOAD_MESSAGE_INTERACTION_DATA_SUCCESS: function (e) {
          let t = e.messageId,
            n = e.channelId,
            s = o.default.get(n);
          if (null == s || !s.has(t)) return !1;
          (s = s.update(t, t => t.set("interactionData", e.interactionData))),
            o.default.commit(s);
        },
        TRUNCATE_MESSAGES: function (e) {
          let { channelId: t, truncateBottom: n, truncateTop: s } = e;
          V.log(
            "Truncating messages for "
              .concat(t, " bottom:")
              .concat(n, " top:")
              .concat(s)
          );
          let i = o.default.getOrCreate(t);
          (i = i.truncate(n, s)), o.default.commit(i);
        },
        CLEAR_MESSAGES: function (e) {
          let { channelId: t } = e;
          V.log("Clearing messages for ".concat(t)),
            o.default.clear(t),
            b.clear();
        },
        MESSAGE_CREATE: function (e) {
          let { channelId: t, message: n, isPushNotification: s } = e,
            i = o.default.getOrCreate(t);
          if (s) {
            V.log(
              "Inserting message tapped on from a push notification",
              n.id,
              n.channel_id
            ),
              o.default.commit(i.receivePushNotification(n));
            return;
          }
          if (!i.ready) return !1;
          null != n.nonce &&
            n.state !== P.MessageStates.SENDING &&
            b.has(n.nonce) &&
            ((i = i.remove(n.nonce)), b.delete(n.nonce)),
            (i = i.receiveMessage(n, y.default.isAtBottom(t))),
            o.default.commit(i);
        },
        MESSAGE_SEND_FAILED: function (e) {
          let { channelId: t, messageId: n, reason: s } = e,
            i = o.default.getOrCreate(t);
          if (null == i || !i.has(n)) return !1;
          let r = i.get(n, !0);
          (i =
            (null == r ? void 0 : r.isPoll()) === !0
              ? i.remove(n)
              : i.update(
                  n,
                  e => (
                    (e = e.set(
                      "state",
                      P.MessageStates.SEND_FAILED
                    )).isCommandType() &&
                      (e = (e = e.set(
                        "interactionError",
                        null != s ? s : ""
                      )).set(
                        "flags",
                        (0, v.addFlag)(e.flags, P.MessageFlags.EPHEMERAL)
                      )),
                    e
                  )
                )),
            o.default.commit(i);
        },
        MESSAGE_SEND_FAILED_AUTOMOD: G,
        MESSAGE_EDIT_FAILED_AUTOMOD: G,
        MESSAGE_UPDATE: function (e) {
          let t = e.message.id,
            n = e.message.channel_id,
            s = o.default.getOrCreate(n);
          if (null == s || !s.has(t)) return !1;
          (s = s.update(t, t => (0, c.updateMessageRecord)(t, e.message))),
            o.default.commit(s);
        },
        MESSAGE_EXPLICIT_CONTENT_SCAN_TIMEOUT: function (e) {
          let { messageId: t, channelId: n } = e,
            s = o.default.get(n);
          if (null == s || !s.has(t)) return !1;
          (s = s.update(t, l.handleExplicitMediaScanTimeoutForMessage)),
            o.default.commit(s);
        },
        MESSAGE_DELETE: function (e) {
          let { id: t, channelId: n } = e,
            s = o.default.getOrCreate(n);
          if (null == s || !s.has(t)) return !1;
          if (s.revealedMessageId === t) {
            let e = s.getAfter(t);
            s =
              null != e && e.blocked
                ? s.mutate({ revealedMessageId: e.id })
                : s.mutate({ revealedMessageId: null });
          }
          (s = s.remove(t)), o.default.commit(s), b.delete(t);
        },
        MESSAGE_DELETE_BULK: function (e) {
          let { ids: t, channelId: n } = e,
            s = o.default.getOrCreate(n);
          if (null == s) return !1;
          let r = s.removeMany(t);
          if (s === r) return !1;
          if (
            null != r.revealedMessageId &&
            i.some(t, e => r.revealedMessageId === e)
          ) {
            let e = r.getAfter(r.revealedMessageId);
            r =
              null != e && e.blocked
                ? r.mutate({ revealedMessageId: e.id })
                : r.mutate({ revealedMessageId: null });
          }
          o.default.commit(r),
            t.forEach(e => {
              b.delete(e);
            });
        },
        MESSAGE_REVEAL: function (e) {
          let { channelId: t, messageId: n } = e,
            s = o.default.getOrCreate(t);
          o.default.commit(s.mutate({ revealedMessageId: n }));
        },
        USER_SETTINGS_PROTO_UPDATE: k,
        I18N_LOAD_SUCCESS: k,
        THREAD_CREATE_LOCAL: function (e) {
          let { channelId: t } = e,
            n = o.default.getOrCreate(t);
          (n = n.loadComplete({
            newMessages: [],
            hasMoreAfter: !1,
            hasMoreBefore: !1,
          })),
            o.default.commit(n);
        },
        CHANNEL_DELETE: M,
        THREAD_DELETE: M,
        GUILD_DELETE: M,
        RELATIONSHIP_ADD: w,
        RELATIONSHIP_REMOVE: w,
        GUILD_MEMBERS_CHUNK: L,
        THREAD_MEMBER_LIST_UPDATE: L,
        MESSAGE_REACTION_ADD: U,
        MESSAGE_REACTION_ADD_MANY: function (e) {
          let { channelId: t, messageId: n, reactions: s } = e,
            i = o.default.get(t);
          if (null == i) return !1;
          (i = i.update(n, e => {
            var t;
            return e.addReactionBatch(
              s,
              null === (t = O.default.getCurrentUser()) || void 0 === t
                ? void 0
                : t.id
            );
          })),
            o.default.commit(i);
        },
        MESSAGE_REACTION_REMOVE: U,
        MESSAGE_REACTION_REMOVE_ALL: function (e) {
          let { channelId: t, messageId: n } = e,
            s = o.default.get(t);
          if (null == s) return !1;
          (s = s.update(n, e => e.set("reactions", []))), o.default.commit(s);
        },
        MESSAGE_REACTION_REMOVE_EMOJI: function (e) {
          let { channelId: t, messageId: n, emoji: s } = e,
            i = o.default.get(t);
          if (null == i) return !1;
          (i = i.update(n, e => e.removeReactionsForEmoji(s))),
            o.default.commit(i);
        },
        LOGOUT: function () {
          o.default.forEach(e => {
            o.default.clear(e.channelId);
          }),
            b.clear();
        },
        UPLOAD_START: function (e) {
          let { message: t } = e;
          null != t.nonce && b.add(t.nonce);
        },
        UPLOAD_FAIL: function (e) {
          let { channelId: t, messageRecord: n } = e,
            s = null == n ? void 0 : n.nonce;
          if (null != s && b.has(s)) {
            let e = o.default.getOrCreate(t),
              n = e.get(s);
            if (null == n) return;
            (e = (e = e.remove(s)).merge([n])),
              b.delete(s),
              o.default.commit(e);
          }
        },
      });
    },
    353365: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        });
      var s = n("446674"),
        i = n("913144"),
        r = n("448993");
      let a = null,
        o = null,
        d = null;
      function u(e) {
        let { error: t } = e;
        a = t;
      }
      function l() {
        a = null;
      }
      class f extends s.default.Store {
        get paymentError() {
          return a;
        }
        getGiftCode(e) {
          return e === d ? o : null;
        }
      }
      f.displayName = "PremiumPaymentModalStore";
      var _ = new f(i.default, {
        PREMIUM_PAYMENT_SUBSCRIBE_FAIL: u,
        PREMIUM_PAYMENT_UPDATE_FAIL: u,
        PREMIUM_PAYMENT_SUBSCRIBE_SUCCESS: function () {
          l();
        },
        PREMIUM_PAYMENT_UPDATE_SUCCESS: l,
        PREMIUM_PAYMENT_ERROR_CLEAR: l,
        BRAINTREE_TOKENIZE_PAYPAL_FAIL: function (e) {
          let { message: t, code: n } = e;
          a = new r.BillingError(t, n);
        },
        BRAINTREE_TOKENIZE_VENMO_FAIL: function (e) {
          let { message: t, code: n } = e;
          a = new r.BillingError(t, n);
        },
        SKU_PURCHASE_SUCCESS: function (e) {
          (o = e.giftCode), (d = e.skuId);
        },
        SKU_PURCHASE_FAIL: function (e) {
          a = e.error;
        },
        SKU_PURCHASE_AWAIT_CONFIRMATION: function (e) {
          e.isGift && (d = e.skuId);
        },
        GIFT_CODE_CREATE: function (e) {
          let { giftCode: t } = e;
          if (0 !== t.uses || t.sku_id !== d) return !1;
          o = t.code;
        },
      });
    },
    824563: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return V;
          },
        }),
        n("222007"),
        n("424973");
      var s = n("714617"),
        i = n.n(s),
        r = n("917351"),
        a = n.n(r),
        o = n("446674"),
        d = n("913144"),
        u = n("309570"),
        l = n("32346"),
        f = n("271938"),
        _ = n("697218"),
        c = n("49111");
      let g = Object.freeze([]),
        m = {},
        h = {},
        v = {},
        E = {},
        p = {};
      function y(e, t) {
        let n = m[e];
        return null != n ? n[t] : null;
      }
      let T = e => {
          switch (e.type) {
            case c.ActivityTypes.CUSTOM_STATUS:
              return 4;
            case c.ActivityTypes.COMPETING:
              return 3;
            case c.ActivityTypes.STREAMING:
              return 2;
            case c.ActivityTypes.PLAYING:
              return 1;
            default:
              return 0;
          }
        },
        C = e => ((0, u.default)(e) ? 1 : 0);
      function S(e, t) {
        var n, s, i, r, a;
        return (
          (n = e),
          T(t) - T(n) ||
            ((s = e), C(t) - C(s)) ||
            ((i = e),
            (null !== (r = t.created_at) && void 0 !== r ? r : 0) -
              (null !== (a = i.created_at) && void 0 !== a ? a : 0))
        );
      }
      function I(e) {
        if ((delete h[e], delete v[e], delete E[e], null == m[e])) return;
        let [t] = a.sortBy(m[e], e => -e.timestamp);
        t.status !== c.StatusTypes.OFFLINE
          ? ((h[e] = t.status),
            (v[e] = t.activities),
            null != t.clientStatus && (E[e] = t.clientStatus))
          : a.every(m[e], e => e.status === c.StatusTypes.OFFLINE) &&
            delete m[e];
      }
      function A(e) {
        let t = m[e];
        if (null == t) return;
        let n = a.maxBy(Object.values(t), e => e.timestamp);
        n.status !== c.StatusTypes.OFFLINE &&
          ((h[e] = n.status),
          (v[e] = n.activities),
          null != n.clientStatus && (E[e] = n.clientStatus));
      }
      function D(e) {
        let {
          guildId: t,
          userId: n,
          status: s,
          clientStatus: r,
          activities: a,
        } = e;
        if (n === f.default.getId()) return !1;
        let o = m[n];
        if (null == o) {
          if (s === c.StatusTypes.OFFLINE) return !1;
          o = m[n] = {};
        }
        if (s === c.StatusTypes.OFFLINE)
          o[t] = {
            status: s,
            clientStatus: r,
            activities: g,
            timestamp: Date.now(),
          };
        else {
          let e = a.length > 1 ? [...a].sort(S) : a,
            n = o[t];
          (a = null != n && i(n.activities, e) ? n.activities : e),
            (o[t] = {
              status: s,
              clientStatus: r,
              activities: a,
              timestamp: Date.now(),
            });
        }
        return delete p[n], I(n), !0;
      }
      function N(e) {
        let {
          guildId: t,
          userId: n,
          status: s,
          clientStatus: i,
          activities: r,
          timestamp: a,
        } = e;
        if (n === f.default.getId()) return;
        let o = m[n];
        if (null == o) {
          if (s === c.StatusTypes.OFFLINE) return;
          o = m[n] = {};
        }
        if (s === c.StatusTypes.OFFLINE)
          o[t] = {
            status: s,
            clientStatus: i,
            activities: g,
            timestamp: Date.now(),
          };
        else {
          let e = r.length > 1 ? [...r].sort(S) : r;
          o[t] = { status: s, clientStatus: i, activities: e, timestamp: a };
        }
      }
      function O(e, t) {
        if (t === f.default.getId()) return !1;
        let n = m[t];
        if (null == n || null == n[e]) return !1;
        delete n[e], 0 === Object.keys(n).length && delete m[t], I(t);
      }
      function P(e) {
        for (let t of Object.keys(m)) O(e, t);
      }
      class b extends o.default.Store {
        initialize() {
          this.waitFor(f.default, l.default);
        }
        setCurrentUserOnConnectionOpen(e, t) {
          (h[f.default.getId()] = e), (v[f.default.getId()] = t);
        }
        getStatus(e) {
          var t, n;
          let s =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : null,
            i =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : c.StatusTypes.OFFLINE,
            r = _.default.getUser(e);
          if (
            (null != r &&
              r.hasFlag(c.UserFlags.BOT_HTTP_INTERACTIONS) &&
              (i = c.StatusTypes.UNKNOWN),
            null == r ? void 0 : r.isClyde())
          )
            return c.StatusTypes.ONLINE;
          if (null == s) return null !== (t = h[e]) && void 0 !== t ? t : i;
          let a = y(e, s);
          return null !== (n = null == a ? void 0 : a.status) && void 0 !== n
            ? n
            : i;
        }
        getActivities(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : null;
          if (null == t) {
            var n;
            return null !== (n = v[e]) && void 0 !== n ? n : g;
          }
          let s = y(e, t);
          return null == s || null == s.activities ? g : s.activities;
        }
        getPrimaryActivity(e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : null,
            n = this.getActivities(e, t).filter(
              e => e.type !== c.ActivityTypes.HANG_STATUS
            );
          return n[0];
        }
        getAllApplicationActivities(e) {
          let t = [];
          for (let n of Object.keys(v)) {
            let s = v[n];
            for (let i of s)
              i.application_id === e && t.push({ userId: n, activity: i });
          }
          return t;
        }
        getApplicationActivity(e, t) {
          let n =
            arguments.length > 2 && void 0 !== arguments[2]
              ? arguments[2]
              : null;
          return this.findActivity(e, e => e.application_id === t, n);
        }
        findActivity(e, t) {
          let n =
            arguments.length > 2 && void 0 !== arguments[2]
              ? arguments[2]
              : null;
          return this.getActivities(e, n).find(t);
        }
        getActivityMetadata(e) {
          return p[e];
        }
        getUserIds() {
          return Object.keys(v);
        }
        isMobileOnline(e) {
          let t = E[e];
          return (
            null != t &&
            t[c.ClientTypes.MOBILE] === c.StatusTypes.ONLINE &&
            t[c.ClientTypes.DESKTOP] !== c.StatusTypes.ONLINE
          );
        }
        getClientStatus(e) {
          return E[e];
        }
        getState() {
          return {
            presencesForGuilds: m,
            statuses: h,
            activities: v,
            activityMetadata: p,
            clientStatuses: E,
          };
        }
      }
      b.displayName = "PresenceStore";
      var V = new b(d.default, {
        CONNECTION_OPEN: function () {
          return !0;
        },
        CONNECTION_OPEN_SUPPLEMENTAL: function (e) {
          let { guilds: t, presences: n } = e,
            s = f.default.getId();
          (m = {}),
            (p = {}),
            (h = { [s]: h[s] }),
            (v = { [s]: v[s] }),
            (E = { [s]: {} });
          let i = new Set(),
            r = Date.now();
          t.forEach(e => {
            e.presences.forEach(t => {
              let { user: n, status: s, clientStatus: a, activities: o } = t;
              N({
                guildId: e.id,
                userId: n.id,
                status: s,
                clientStatus: a,
                activities: o,
                timestamp: r,
              }),
                i.add(n.id);
            });
          }),
            n.forEach(e => {
              let { user: t, status: n, clientStatus: s, activities: a } = e;
              null != t &&
                (N({
                  guildId: c.ME,
                  userId: t.id,
                  status: n,
                  clientStatus: s,
                  activities: a,
                  timestamp: r,
                }),
                i.add(t.id));
            }),
            i.delete(s),
            i.forEach(A);
        },
        OVERLAY_INITIALIZE: function (e) {
          let { presences: t } = e;
          (m = t.presencesForGuilds),
            (h = t.statuses),
            (v = t.activities),
            (p = t.activityMetadata);
        },
        GUILD_CREATE: function (e) {
          let { guild: t } = e;
          t.presences.forEach(e => {
            let { user: n, status: s, clientStatus: i, activities: r } = e;
            D({
              guildId: t.id,
              userId: n.id,
              status: s,
              clientStatus: i,
              activities: r,
            });
          });
        },
        GUILD_DELETE: function (e) {
          let { guild: t } = e;
          P(t.id);
        },
        GUILD_MEMBER_REMOVE: function (e) {
          let { guildId: t, user: n } = e;
          return O(t, n.id);
        },
        PRESENCE_UPDATES: function (e) {
          let { updates: t } = e;
          return t
            .map(e => {
              let {
                guildId: t,
                user: n,
                status: s,
                clientStatus: i,
                activities: r,
              } = e;
              return D({
                guildId: null != t ? t : c.ME,
                userId: n.id,
                status: s,
                clientStatus: i,
                activities: r,
              });
            })
            .some(e => e);
        },
        PRESENCES_REPLACE: function (e) {
          let { presences: t } = e;
          P(c.ME),
            t.forEach(e => {
              let { user: t, status: n, clientStatus: s, activities: i } = e;
              null != t &&
                D({
                  guildId: c.ME,
                  userId: t.id,
                  status: n,
                  clientStatus: s,
                  activities: i,
                });
            });
        },
        ACTIVITY_METADATA_UPDATE: function (e) {
          let { userId: t, metadata: n } = e;
          return (p[t] = n), !1;
        },
        THREAD_MEMBER_LIST_UPDATE: function (e) {
          let { guildId: t, members: n } = e;
          n.forEach(e => {
            null != e.presence &&
              D({
                guildId: t,
                userId: e.user_id,
                status: e.presence.status,
                clientStatus: e.presence.clientStatus,
                activities: e.presence.activities,
              });
          });
        },
        THREAD_MEMBERS_UPDATE: function (e) {
          let { guildId: t, addedMembers: n } = e;
          null == n ||
            n.forEach(e => {
              null != e.presence &&
                D({
                  guildId: t,
                  userId: e.userId,
                  status: e.presence.status,
                  clientStatus: e.presence.clientStatus,
                  activities: e.presence.activities,
                });
            });
        },
        SELF_PRESENCE_STORE_UPDATE: function (e) {
          let t = f.default.getId();
          if (h[t] === e.status && v[t] === e.activities) return !1;
          (h[t] = e.status), (v[t] = e.activities), delete p[t];
        },
      });
    },
    660478: function (e, t, n) {
      "use strict";
      let s;
      n.r(t),
        n.d(t, {
          shouldBadgeMessage: function () {
            return eS;
          },
          default: function () {
            return eQ;
          },
        }),
        n("222007"),
        n("70102"),
        n("424973"),
        n("702976");
      var i,
        r,
        a = n("627445"),
        o = n.n(a),
        d = n("866227"),
        u = n.n(d),
        l = n("446674"),
        f = n("872717"),
        _ = n("862337"),
        c = n("627929"),
        g = n("913144"),
        m = n("191225"),
        h = n("191145"),
        v = n("203288"),
        E = n("605250"),
        p = n("398604"),
        y = n("21121"),
        T = n("288518"),
        C = n("415435"),
        S = n("486503"),
        I = n("406297"),
        A = n("136511"),
        D = n("342176"),
        N = n("512395"),
        O = n("614305"),
        P = n("689275"),
        b = n("755624"),
        V = n("526311"),
        R = n("374363"),
        k = n("233069"),
        M = n("845078"),
        w = n("718517"),
        L = n("568734"),
        U = n("449008"),
        G = n("35468"),
        F = n("299039"),
        H = n("271938"),
        B = n("982108"),
        x = n("42203"),
        Y = n("162805"),
        j = n("760190"),
        K = n("341542"),
        W = n("305961"),
        z = n("603699"),
        q = n("377253"),
        X = n("957255"),
        Q = n("27618"),
        Z = n("18494"),
        J = n("282109"),
        $ = n("697218"),
        ee = n("471671"),
        et = n("49111"),
        en = n("272505"),
        es = n("724210"),
        ei = n("745049"),
        er = n("133335");
      let ea = new E.default("ReadStateStore");
      __OVERLAY__ && (s = n("901165").default);
      let eo =
          et.BasicPermissions.VIEW_CHANNEL |
          et.BasicPermissions.READ_MESSAGE_HISTORY,
        ed = null,
        eu = null,
        el = null,
        ef = !1,
        e_ = [],
        ec = !1,
        eg = null,
        em = {},
        eh = 30 * w.default.Millis.DAY;
      function ev() {
        return F.default.fromTimestamp(Date.now() - eh);
      }
      let eE = 0,
        ep = 0,
        ey = null;
      function eT() {
        (eE = Date.now() - 7 * w.default.Millis.DAY),
          (ep = Date.now() - 3 * w.default.Millis.DAY),
          clearTimeout(ey),
          (ey = setTimeout(() => {
            g.default.dispatch({ type: "DECAY_READ_STATES" });
          }, 1 * w.default.Millis.HOUR));
      }
      function eC(e) {
        if (null == e) return 0;
        let t = Date.parse(e);
        return isNaN(t) ? 0 : t;
      }
      function eS(e, t) {
        let n = x.default.getChannel(e.channel_id);
        return (
          !(null == n || Q.default.isBlocked(e.author.id)) &&
          (!!(
            (0, I.default)({
              message: e,
              userId: t.id,
              suppressEveryone: J.default.isSuppressEveryoneEnabled(n.guild_id),
              suppressRoles: J.default.isSuppressRolesEnabled(n.guild_id),
            }) || eI(n)
          ) ||
            !1)
        );
      }
      function eI(e) {
        return (
          null != e &&
          e.isPrivate() &&
          !J.default.isGuildOrCategoryOrChannelMuted(e.guild_id, e.id)
        );
      }
      async function eA(e) {
        if (0 === e_.length) {
          (ec = !1), null == e || e();
          return;
        }
        ec = !0;
        let t = e_.splice(0, 100);
        await eD(() =>
          f.default.post({
            url: et.Endpoints.BULK_ACK,
            body: { read_states: t },
            oldFormErrors: !0,
          })
        ),
          await (0, _.timeoutPromise)(1e3),
          eA(e);
      }
      async function eD(e) {
        let t = H.default.getId();
        for (let n = 0; n < 3; n++)
          try {
            return await e();
          } catch (e) {
            if (
              (ea.error("", e),
              n + 1 < 3 &&
                (await (0, _.timeoutPromise)((n + 1) * 2e3),
                await G.default.awaitOnline(),
                t !== H.default.getId()))
            )
              return Promise.reject(Error("User changed."));
          }
      }
      function eN(e) {
        if (e.type !== er.ReadStateTypes.CHANNEL) return !1;
        let t = x.default.getChannel(e.channelId),
          n = null != t && t.isForumPost();
        if (
          (null != m.default.getConnectedActivityChannelId() &&
            m.default.getActivityPanelMode() === en.ActivityPanelModes.PANEL &&
            m.default.getFocusedLayout() ===
              en.FocusedActivityLayouts.NO_CHAT) ||
          z.default.isIdle() ||
          !e.canTrackUnreads()
        )
          return !1;
        if ((null == t ? void 0 : t.isForumLikeChannel()) !== !0) {
          let t = em[e.channelId],
            n = null != t && ee.default.isFocused(t),
            i =
              null != s &&
              s.isInstanceFocused() &&
              s.isPinned(et.OverlayWidgets.TEXT);
          if (!n && !i) return !1;
        }
        if (n && !e._persisted) return !0;
        let i = e.hasUnreadOrMentions();
        if (!i || (null == t ? void 0 : t.isForumLikeChannel()) === !0)
          return !1;
        let r = n && !e._isJoinedThread;
        if (!r && !Y.default.isAtBottom(e.channelId)) return !1;
        let a = h.default.getLayout(e.channelId),
          o = h.default.getChatOpen(e.channelId);
        if (
          (!o &&
            (a === et.ChannelLayouts.NO_CHAT ||
              a === et.ChannelLayouts.FULL_SCREEN)) ||
          null == em[e.channelId]
        )
          return !1;
        let d = q.default.getMessages(e.channelId);
        return (
          !(
            null == d ||
            !d.ready ||
            d.loadingMore ||
            ((0, O.default)() && !o)
          ) && !0
        );
      }
      ((r = i || (i = {}))[(r.IS_GUILD_CHANNEL = 1)] = "IS_GUILD_CHANNEL"),
        (r[(r.IS_THREAD = 2)] = "IS_THREAD");
      class eO {
        static forEach(e) {
          for (let n of Object.keys(eO._readStates)) {
            var t;
            let s =
              null !== (t = eO._readStates[parseInt(n)]) && void 0 !== t
                ? t
                : {};
            for (let t of Object.keys(s)) if (!1 === e(s[t])) break;
          }
        }
        static get(e) {
          var t;
          let n =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : er.ReadStateTypes.CHANNEL,
            s =
              null === (t = eO._readStates[n]) || void 0 === t ? void 0 : t[e];
          return (
            null == s &&
              ((s = new eO(e, n)),
              null == eO._readStates[n] && (eO._readStates[n] = {}),
              (eO._readStates[n][e] = s)),
            s
          );
        }
        static getGuildSentinels(e) {
          return (
            null == this._guildReadStateSentinels[e] &&
              (this._guildReadStateSentinels[e] = { unreadsSentinel: 0 }),
            this._guildReadStateSentinels[e]
          );
        }
        static resetGuildSentinels() {
          this._guildReadStateSentinels = {};
        }
        static getIfExists(e) {
          var t;
          let n =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : er.ReadStateTypes.CHANNEL;
          return null === (t = eO._readStates[n]) || void 0 === t
            ? void 0
            : t[e];
        }
        static getMentionChannelIds() {
          let e = [];
          for (let t of eO._mentionChannels) {
            let n = eO.getIfExists(t);
            null != n && n.canHaveMentions()
              ? e.push(t)
              : eO._mentionChannels.delete(t);
          }
          return e;
        }
        static getValue(e) {
          var t;
          let n =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : er.ReadStateTypes.CHANNEL,
            s = arguments.length > 2 ? arguments[2] : void 0,
            i = arguments.length > 3 ? arguments[3] : void 0,
            r =
              null === (t = eO._readStates[n]) || void 0 === t ? void 0 : t[e];
          return null == r ? i : s(r);
        }
        static clear(e) {
          var t;
          let n =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : er.ReadStateTypes.CHANNEL;
          return (
            (null === (t = eO._readStates[n]) || void 0 === t
              ? void 0
              : t[e]) != null &&
            (delete eO._readStates[n][e], eO._mentionChannels.delete(e), !0)
          );
        }
        static clearAll() {
          (eO._readStates = {}), eO._mentionChannels.clear();
        }
        serialize(e) {
          let {
            channelId: t,
            type: n,
            _guildId: s,
            _isThread: i,
            _isActiveThread: r,
            _isJoinedThread: a,
            _persisted: o,
            loadedMessages: d,
            _lastMessageId: u,
            _lastMessageTimestamp: l,
            _ackMessageId: f,
            _ackMessageTimestamp: _,
            ackPinTimestamp: c,
            isManualAck: g,
            lastPinTimestamp: m,
            _oldestUnreadMessageId: h,
            oldestUnreadMessageIdStale: v,
            estimated: E,
            _mentionCount: p,
            flags: y,
            lastViewed: T,
          } = this;
          if (e)
            return {
              channelId: t,
              type: n,
              _guildId: s,
              _isThread: i,
              _isActiveThread: r,
              _isJoinedThread: a,
              _persisted: o,
              loadedMessages: d,
              _lastMessageId: u,
              _lastMessageTimestamp: l,
              _ackMessageId: f,
              _ackMessageTimestamp: _,
              ackPinTimestamp: c,
              isManualAck: g,
              lastPinTimestamp: m,
              _oldestUnreadMessageId: h,
              oldestUnreadMessageIdStale: v,
              estimated: E,
              _mentionCount: p,
              flags: y,
              lastViewed: T,
            };
          let C = {
            channelId: t,
            type: n,
            _guildId: s,
            _persisted: o,
            _lastMessageId: u,
            _lastMessageTimestamp: l,
            _ackMessageId: f,
            _ackMessageTimestamp: _,
            ackPinTimestamp: c,
            lastPinTimestamp: m,
            _mentionCount: p,
            flags: y,
          };
          return (
            null != T && T > 0 && (C.lastViewed = T),
            i &&
              ((C._isThread = i),
              (C._isActiveThread = r),
              (C._isJoinedThread = a)),
            C
          );
        }
        deserializeForOverlay(e) {
          let {
            channelId: t,
            type: n,
            _guildId: s,
            _isThread: i,
            _isActiveJoinedThread: r,
            _isActiveThread: a,
            _isJoinedThread: o,
            _persisted: d,
            loadedMessages: u,
            _lastMessageId: l,
            _lastMessageTimestamp: f,
            _ackMessageId: _,
            _ackMessageTimestamp: c,
            ackPinTimestamp: g,
            isManualAck: m,
            lastPinTimestamp: h,
            _oldestUnreadMessageId: v,
            oldestUnreadMessageIdStale: E,
            estimated: p,
            _unreadCount: y,
            _mentionCount: T,
            flags: C,
            lastViewed: S,
          } = e;
          (this.channelId = t),
            (this.type = null != n ? n : er.ReadStateTypes.CHANNEL),
            (this._guildId = s),
            (this._isThread = null != i && i),
            null != r
              ? ((this._isActiveThread = r), (this._isJoinedThread = r))
              : ((this._isActiveThread = null != a && a),
                (this._isJoinedThread = null != o && o)),
            (this._persisted = !1 !== d),
            (this.loadedMessages = null != u && u),
            (this._lastMessageId = l),
            (this._lastMessageTimestamp = f),
            (this._ackMessageId = _),
            (this._ackMessageTimestamp = c),
            (this.ackPinTimestamp = g),
            (this.isManualAck = null != m && m),
            (this.lastPinTimestamp = h),
            (this._oldestUnreadMessageId = v),
            (this.oldestUnreadMessageIdStale = null != E && E),
            (this.estimated = null != p && p),
            (this._unreadCount = null != y ? y : 0),
            (this._mentionCount = T),
            (this.flags = C),
            (this.lastViewed = S),
            eO._mentionChannels.delete(this.channelId),
            this._mentionCount > 0 &&
              this.canHaveMentions() &&
              eO._mentionChannels.add(this.channelId);
        }
        incrementGuildUnreadsSentinel() {
          null != this._guildId &&
            eO.getGuildSentinels(this._guildId).unreadsSentinel++;
        }
        get oldestUnreadMessageId() {
          return this._oldestUnreadMessageId;
        }
        set oldestUnreadMessageId(e) {
          (this._oldestUnreadMessageId = e),
            (this.oldestUnreadMessageIdStale = !1);
        }
        get lastMessageId() {
          return this._lastMessageId;
        }
        set lastMessageId(e) {
          (this._lastMessageId = e),
            (this._lastMessageTimestamp =
              null != e ? F.default.extractTimestamp(e) : 0);
        }
        get lastMessageTimestamp() {
          return this._lastMessageTimestamp;
        }
        get ackMessageId() {
          return this._ackMessageId;
        }
        set ackMessageId(e) {
          (this._ackMessageId = e),
            (this._ackMessageTimestamp =
              null != e ? F.default.extractTimestamp(e) : 0);
        }
        get unreadCount() {
          var e;
          return null !== (e = this._unreadCount) && void 0 !== e ? e : 0;
        }
        set unreadCount(e) {
          (void 0 === this._unreadCount ||
            0 === this._unreadCount ||
            0 === e) &&
            this.incrementGuildUnreadsSentinel(),
            (this._unreadCount = e);
        }
        get mentionCount() {
          return this._mentionCount;
        }
        set mentionCount(e) {
          (0 === this._mentionCount || 0 === e) &&
            this._mentionCount !== e &&
            this.incrementGuildUnreadsSentinel(),
            (this._mentionCount = e),
            eO._mentionChannels.delete(this.channelId),
            this._mentionCount > 0 &&
              this.canHaveMentions() &&
              eO._mentionChannels.add(this.channelId);
        }
        guessAckMessageId() {
          let e = q.default.getMessages(this.channelId);
          if (null != this.ackMessageId || !this.isPrivate() || e.hasMoreAfter)
            return this.ackMessageId;
          if (!this.hasMentions()) return this.lastMessageId;
          let t = null,
            n = this.mentionCount,
            s = $.default.getCurrentUser();
          return (
            e.forEach(
              e => {
                if (n > 0 && e.author.id !== (null == s ? void 0 : s.id)) --n;
                else if (0 === n) return (t = e.id), !1;
              },
              this,
              !0
            ),
            t
          );
        }
        get guildId() {
          if (null != this._guildId) return this._guildId;
          let e = x.default.getChannel(this.channelId);
          return (this._guildId = null != e ? e.getGuildId() : null);
        }
        isPrivate() {
          if (this.type !== er.ReadStateTypes.CHANNEL) return !1;
          let e = x.default.getChannel(this.channelId);
          return null != e && e.isPrivate();
        }
        rebuildChannelState(e) {
          var t, n;
          let s =
              arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
            i = arguments.length > 2 ? arguments[2] : void 0;
          if (
            ((this.ackMessageId =
              null !== (t = null != e ? e : this._ackMessageId) && void 0 !== t
                ? t
                : this.guessAckMessageId()),
            (this.isManualAck = null != e),
            (this.oldestUnreadMessageId = null),
            (this.estimated = !1),
            (this.unreadCount = 0),
            s && (this.mentionCount = 0),
            this.hasUnread())
          ) {
            let e = $.default.getCurrentUser(),
              t = this.getAckTimestamp(),
              i = !1,
              r = !1,
              a = null,
              o = q.default.getMessages(this.channelId);
            o.forAll(n => {
              if (i) {
                var o;
                this.oldestUnreadMessageId =
                  null !== (o = this._oldestUnreadMessageId) && void 0 !== o
                    ? o
                    : n.id;
              } else i = n.id === this._ackMessageId;
              F.default.extractTimestamp(n.id) > t
                ? (this.unreadCount++,
                  s && eS(n, e) && this.mentionCount++,
                  (a = null != a ? a : n.id))
                : (r = !0);
            }),
              (this.estimated =
                !o.hasPresent() ||
                (!(i || r) && o.length === this.unreadCount)),
              (this.oldestUnreadMessageId =
                null !== (n = this._oldestUnreadMessageId) && void 0 !== n
                  ? n
                  : a);
          }
          null != i && (this.mentionCount = i);
        }
        handleGuildEventRemoval(e, t) {
          var n;
          if (F.default.compare(this.ackMessageId, t) >= 0) return;
          let s = p.default.getGuildScheduledEventsForGuild(e),
            i = this.getAckTimestamp();
          if (isNaN(i)) return;
          let r =
              null !== (n = this._ackMessageId) && void 0 !== n
                ? n
                : F.default.fromTimestamp(i),
            a = null,
            o = 0;
          s.forEach(e => {
            (0, p.isEventUpcoming)(e) &&
              (F.default.compare(e.id, a) > 0 && (a = e.id),
              F.default.compare(e.id, r) > 0 && o++);
          }),
            (this.lastMessageId = a),
            (this.mentionCount = o);
        }
        canTrackUnreads() {
          if (this.type !== er.ReadStateTypes.CHANNEL) return !0;
          if (
            (this._isThread && !this._isActiveThread) ||
            this._isResourceChannel
          )
            return !1;
          let e = x.default.getBasicChannel(this.channelId);
          return (
            null != e &&
            ("basicPermissions" in e
              ? M.default.has(
                  e.basicPermissions,
                  et.BasicPermissions.VIEW_CHANNEL
                )
              : !v.default.isChannelGated(this.guildId, this.channelId) ||
                X.default.can(et.Permissions.VIEW_CHANNEL, e))
          );
        }
        canBeUnread() {
          return (
            !(
              (this._isThread && !this._isJoinedThread) ||
              (0, C.isMessageRequestOrSpamRequest)(this.channelId, [
                T.default,
                S.default,
              ]) ||
              (!this._isThread &&
                (0, N.isOptInEnabledForGuild)(this._guildId) &&
                (this._lastMessageTimestamp < eE ||
                  (!J.default.isChannelOrParentOptedIn(
                    this._guildId,
                    this.channelId
                  ) &&
                    !this.hasRecentlyVisitedAndRead() &&
                    !this.hasMentions())))
            ) && this.canTrackUnreads()
          );
        }
        canHaveMentions() {
          return (
            !(
              0 === this.mentionCount ||
              (this._isThread && !this._isJoinedThread) ||
              (0, C.isMessageRequestOrSpamRequest)(this.channelId, [
                T.default,
                S.default,
              ]) ||
              ((0, N.isOptInEnabledForGuild)(this._guildId) &&
                this._lastMessageTimestamp < eE)
            ) && this.canTrackUnreads()
          );
        }
        getGuildChannelUnreadState(e, t, n, s, i) {
          if (
            t &&
            (this._lastMessageTimestamp < eE ||
              (!J.default.isChannelRecordOrParentOptedIn(e) &&
                !this.hasRecentlyVisitedAndRead() &&
                this.mentionCount <= 0))
          )
            return { mentionCount: 0, unread: !1 };
          if ("basicPermissions" in e) {
            if (
              !M.default.has(
                e.basicPermissions,
                et.BasicPermissions.VIEW_CHANNEL
              )
            )
              return { mentionCount: 0, unread: !1 };
          } else if (
            v.default.isChannelGated(this.guildId, this.channelId) &&
            !X.default.can(et.Permissions.VIEW_CHANNEL, e)
          )
            return { mentionCount: 0, unread: !1 };
          return s || i
            ? { mentionCount: this.mentionCount, unread: !1 }
            : {
                mentionCount: this.mentionCount,
                unread: this.getAckTimestamp() < this._lastMessageTimestamp,
              };
        }
        hasUnread() {
          return this.getAckTimestamp() < this._lastMessageTimestamp;
        }
        hasRecentlyVisitedAndRead() {
          return (
            this._lastMessageTimestamp > 0 &&
            null != this._ackMessageId &&
            this.getAckTimestamp() > ep &&
            R.default.getGuildRecentsDismissedAt(this._guildId) <
              this.getAckTimestamp()
          );
        }
        isForumPostUnread() {
          return !!this._isActiveThread && this.hasUnread();
        }
        hasMentions() {
          return this.getMentionCount() > 0;
        }
        getMentionCount() {
          return this.mentionCount;
        }
        hasUnreadOrMentions() {
          return this.hasMentions() || this.hasUnread();
        }
        ackPins() {
          let e =
            arguments.length > 0 && void 0 !== arguments[0]
              ? arguments[0]
              : null;
          if (
            this.type !== er.ReadStateTypes.CHANNEL ||
            !this.canTrackUnreads()
          )
            return !1;
          if (null == e) {
            if (this.lastPinTimestamp === this.ackPinTimestamp) return !1;
            (this._persisted = !0),
              eD(() =>
                f.default.post({
                  url: et.Endpoints.PINS_ACK(this.channelId),
                  oldFormErrors: !0,
                })
              );
          }
          let t = eC(e);
          return (
            (this.ackPinTimestamp = 0 !== t ? t : this.lastPinTimestamp), !0
          );
        }
        ack(e) {
          let {
            messageId: t,
            local: n = !1,
            immediate: s = !1,
            force: i = !1,
            isExplicitUserAction: r = !1,
            location: a = { section: et.AnalyticsSections.CHANNEL },
            trackAnalytics: o = !0,
          } = e;
          if (!this._shouldAck(i, n, r) || (!i && !this.canTrackUnreads()))
            return !1;
          let d = this.hasMentions();
          return (
            (this.estimated = !1),
            (this.snapshot = this.takeSnapshot()),
            (this.unreadCount = 0),
            (this.mentionCount = 0),
            (null != t || null != (t = this.lastMessageId)) &&
              ((this.ackMessageId = t),
              (this.isManualAck = !1),
              (this._persisted = !0),
              ef && (this.ackedWhileCached = !0),
              (function (e) {
                if (null == e) return;
                let t = eO.get(e);
                if (t.type !== er.ReadStateTypes.CHANNEL) return;
                let n = x.default.getChannel(t.channelId);
                if (null == n || !n.isForumPost() || null == n.parent_id)
                  return;
                let s = n.parent_id,
                  i = eO.get(s);
                P.default.hasLoaded(n.guild_id) &&
                  Object.keys(
                    P.default.getThreadsForParent(n.guild_id, s)
                  ).every(
                    e =>
                      eX.hasOpenedThread(e) ||
                      0 > F.default.compare(e, i.ackMessageId)
                  ) &&
                  i.ack({});
              })(this.channelId),
              n
                ? (this.oldestUnreadMessageId = null)
                : (null == this.outgoingAck &&
                    (this.outgoingAckTimer = setTimeout(
                      () => {
                        this.type === er.ReadStateTypes.CHANNEL
                          ? this._ack(a, o)
                          : this._nonChannelAck(),
                          (this.outgoingAck = null),
                          (this.outgoingAckTimer = null);
                      },
                      d || s ? 0 : 3e3
                    )),
                  (this.outgoingAck = t)),
              !0)
          );
        }
        takeSnapshot() {
          let { default: e } = n("952451"),
            t = this.guildId;
          return {
            unread: this.hasUnread(),
            mentionCount: this.mentionCount,
            guildUnread: null == t ? null : e.hasUnread(t),
            guildMentionCount: null == t ? null : e.getMentionCount(t),
            takenAt: Date.now(),
          };
        }
        clearOutgoingAck() {
          (this.outgoingAck = null),
            null != this.outgoingAckTimer &&
              (clearTimeout(this.outgoingAckTimer),
              (this.outgoingAckTimer = null));
        }
        _shouldAck(e, t, n) {
          var s;
          return (
            !!e ||
            !!n ||
            !!t ||
            !!(
              !this.isManualAck &&
              (this.type !== er.ReadStateTypes.CHANNEL ||
                this.loadedMessages ||
                (null === (s = x.default.getChannel(this.channelId)) ||
                void 0 === s
                  ? void 0
                  : s.isForumLikeChannel()))
            ) ||
            !1
          );
        }
        _ack(e, t) {
          let { outgoingAck: s } = this;
          if (null == s) return;
          let i = H.default.getId(),
            r = el;
          this._persisted = !0;
          let a = this.recalculateFlags(),
            o = a === this.flags ? void 0 : a;
          eD(() =>
            f.default.post({
              url: et.Endpoints.MESSAGE_ACK(this.channelId, s),
              body: { token: el, last_viewed: this.lastViewed, flags: o },
              oldFormErrors: !0,
            })
          ).then(e => {
            null != e &&
              (el === r && i === H.default.getId() && (el = e.body.token),
              g.default.dispatch({ type: "MESSAGE_ACKED" }),
              t &&
                n
                  .el("199808")
                  .then(n.bind(n, "199808"))
                  .then(e => {
                    let { default: t } = e;
                    t(this.channelId);
                  }));
          });
        }
        recalculateFlags() {
          if (this.type !== er.ReadStateTypes.CHANNEL) return;
          let e = x.default.getChannel(this.channelId);
          if (null != e) return e.isThread() ? 2 : null != e.guild_id ? 1 : 0;
        }
        _nonChannelAck() {
          let e;
          let { outgoingAck: t, channelId: n, type: s } = this;
          if (null != t) {
            switch (s) {
              case er.ReadStateTypes.GUILD_HOME:
              case er.ReadStateTypes.GUILD_EVENT:
              case er.ReadStateTypes.GUILD_ONBOARDING_QUESTION:
                e = et.Endpoints.GUILD_FEATURE_ACK(n, t, s);
                break;
              case er.ReadStateTypes.NOTIFICATION_CENTER:
                e = et.Endpoints.USER_NON_CHANNEL_ACK(t, s);
                break;
              default:
                return;
            }
            (this._persisted = !0),
              eD(() => f.default.post({ url: e, body: {}, oldFormErrors: !0 }));
          }
        }
        delete() {
          var e;
          let t =
              !(arguments.length > 0) ||
              void 0 === arguments[0] ||
              arguments[0],
            n = x.default.getBasicChannel(this.channelId);
          ea.log("Deleting ReadState", this.channelId, this.type, {
            remote: t,
            persisted: this._persisted,
            channelMissing: null == n,
            isOld: eM(this, ev()),
            validType: null != n && k.ALL_CHANNEL_TYPES.has(n.type),
            readableType: null != n && (0, k.isReadableType)(n.type),
            oldThreadCutoff: ev(),
            mentionCount: this.mentionCount,
            channelId: this.channelId,
            ackMessageId: this._ackMessageId,
            lastMessageId: this._lastMessageId,
          }),
            t &&
              this._persisted &&
              f.default.delete({
                url: et.Endpoints.CHANNEL_ACK(this.channelId),
                body: { version: 2, read_state_type: this.type },
                oldFormErrors: !0,
              }),
            null === (e = eO._readStates[this.type]) ||
              void 0 === e ||
              delete e[this.channelId],
            eO._mentionChannels.delete(this.channelId);
        }
        shouldDeleteReadState(e) {
          if (0 !== K.default.totalUnavailableGuilds) return !1;
          if (null != this.type && this.type !== er.ReadStateTypes.CHANNEL)
            return !(function (e) {
              switch (e.type) {
                case er.ReadStateTypes.GUILD_HOME:
                case er.ReadStateTypes.GUILD_EVENT:
                case er.ReadStateTypes.GUILD_ONBOARDING_QUESTION:
                  return null != W.default.getGuild(e.channelId);
                case er.ReadStateTypes.NOTIFICATION_CENTER:
                  var t;
                  return (
                    (null === (t = $.default.getCurrentUser()) || void 0 === t
                      ? void 0
                      : t.id) === e.channelId
                  );
                default:
                  return !0;
              }
            })(this);
          let t = x.default.getBasicChannel(this.channelId);
          if (null == t) return !!eM(this, e) || !1;
          return (
            !!k.ALL_CHANNEL_TYPES.has(t.type) &&
            (!(0, k.isReadableType)(t.type) ||
              (!(0, k.isPrivate)(t.type) &&
                (!!(
                  k.THREAD_CHANNEL_TYPES.has(t.type) &&
                  (function (e, t, n) {
                    let s = e.guildId,
                      i =
                        null != s &&
                        P.default.isActive(s, t.parent_id, e.channelId);
                    return !i && eM(e, n);
                  })(this, t, e)
                ) ||
                  (!!(this.mentionCount > 0) &&
                    !X.default.canBasicChannel(eo, t)) ||
                  !1)))
          );
        }
        getAckTimestamp() {
          let e, t;
          if (0 !== this._ackMessageTimestamp) return this._ackMessageTimestamp;
          if (this._isThread)
            return (
              (this._ackMessageTimestamp = eR(this.guildId, this.channelId)),
              (this._ackMessageId = F.default.fromTimestamp(
                this._ackMessageTimestamp
              )),
              this._ackMessageTimestamp
            );
          if (
            this.type === er.ReadStateTypes.GUILD_EVENT ||
            this.type === er.ReadStateTypes.GUILD_ONBOARDING_QUESTION
          )
            e = W.default.getGuild(this.channelId);
          else if ((0, es.isStaticChannelRoute)(this.channelId))
            e = W.default.getGuild(this.guildId);
          else {
            let t = x.default.getChannel(this.channelId);
            if (null != t) {
              let n = t.getGuildId();
              e = W.default.getGuild(n);
            }
          }
          return (
            (t =
              null != e ? ek(e) : F.default.extractTimestamp(this.channelId)),
            (this._ackMessageTimestamp = t),
            t
          );
        }
        get oldestUnreadTimestamp() {
          return null != this.oldestUnreadMessageId
            ? F.default.extractTimestamp(this.oldestUnreadMessageId)
            : 0;
        }
        syncThreadSettings() {
          this._isThread = !0;
          let e = x.default.getChannel(this.channelId);
          if (null == e)
            return (
              ea.warn(
                "syncThreadSettings called with channel not in memory ".concat(
                  this.channelId
                )
              ),
              !1
            );
          let t = this.guildId,
            n = null != t && P.default.isActive(t, e.parent_id, this.channelId),
            s = b.default.hasJoined(this.channelId);
          return (
            (this._isActiveThread !== n || this._isJoinedThread !== s) &&
            ((this._isActiveThread = n), (this._isJoinedThread = s), !0)
          );
        }
        recordLastViewedTime() {
          let e = Math.ceil(
            (Date.now() - F.DISCORD_EPOCH) / w.default.Millis.DAY
          );
          e !== this.lastViewed &&
            ((this.lastViewed = e),
            this.canTrackUnreads() &&
              !this.hasUnread() &&
              this.ack({ force: !0, trackAnalytics: !1 }));
        }
        constructor(e, t = er.ReadStateTypes.CHANNEL) {
          (this.type = er.ReadStateTypes.CHANNEL),
            (this.outgoingAckTimer = null),
            (this.ackMessageIdAtChannelSelect = null),
            (this.ackedWhileCached = void 0),
            (this.channelId = e),
            (this.type = t),
            (this._guildId = null),
            (this._isThread = !1),
            (this._isActiveThread = !1),
            (this._isJoinedThread = !1),
            (this._isResourceChannel = !1),
            (this._persisted = !1),
            (this.loadedMessages = !1),
            (this._lastMessageId = null),
            (this._lastMessageTimestamp = 0),
            (this._ackMessageId = null),
            (this._ackMessageTimestamp = 0),
            (this.isManualAck = !1),
            (this.ackPinTimestamp = 0),
            (this.lastPinTimestamp = 0),
            (this._oldestUnreadMessageId = null),
            (this.oldestUnreadMessageIdStale = !1),
            (this.estimated = !1),
            (this._unreadCount = 0),
            (this._mentionCount = 0),
            (this.outgoingAck = null);
        }
      }
      function eP(e) {
        e.forEach(e => {
          if ((0, k.isReadableType)(e.type)) {
            let t = eO.get(e.id);
            (t._guildId = e.guild_id),
              (t.lastMessageId = e.lastMessageId),
              (t.lastPinTimestamp = eC(e.lastPinTimestamp)),
              (t._isResourceChannel = e.hasFlag(
                es.ChannelFlags.IS_GUILD_RESOURCE_CHANNEL
              )),
              k.THREAD_CHANNEL_TYPES.has(e.type) && t.syncThreadSettings();
          }
        });
      }
      function eb(e) {
        e.forEach(e => {
          if ((0, k.isReadableType)(e.type)) {
            var t;
            let n = eO.get(e.id);
            (n.lastMessageId = e.last_message_id),
              (n.lastPinTimestamp = eC(e.last_pin_timestamp)),
              (n._isResourceChannel = (0, L.hasFlag)(
                null !== (t = e.flags) && void 0 !== t ? t : 0,
                es.ChannelFlags.IS_GUILD_RESOURCE_CHANNEL
              )),
              k.THREAD_CHANNEL_TYPES.has(e.type) && n.syncThreadSettings();
          }
        });
      }
      function eV(e) {
        (function (e) {
          var t;
          null === (t = e.threads) ||
            void 0 === t ||
            t.forEach(t => {
              if (!k.ALL_CHANNEL_TYPES.has(t.type)) return;
              let n = eO.get(t.id);
              (n.lastMessageId = t.lastMessageId),
                (n.lastPinTimestamp = eC(t.lastPinTimestamp)),
                (n._isThread = !0),
                (n._isActiveThread = !0),
                (n._isJoinedThread = null != t.member),
                null == n.ackMessageId &&
                  (n.ackMessageId = F.default.fromTimestamp(eR(e.id, t.id))),
                null == n.ackPinTimestamp &&
                  (n.ackPinTimestamp = eR(e.id, t.id));
            });
        })(e),
          (function (e) {
            var t, n;
            if (
              (null === (t = e.guild_scheduled_events) || void 0 === t
                ? void 0
                : t.length) === 0 &&
              null == eO.getIfExists(e.id, er.ReadStateTypes.GUILD_EVENT)
            )
              return;
            let s = eO.get(e.id, er.ReadStateTypes.GUILD_EVENT);
            s._guildId = e.id;
            let i = 0,
              r = null,
              a =
                null !== (n = s._ackMessageId) && void 0 !== n
                  ? n
                  : F.default.fromTimestamp(s.getAckTimestamp());
            e.guild_scheduled_events.forEach(e => {
              F.default.compare(e.id, r) > 0 && (r = e.id),
                F.default.compare(e.id, a) > 0 && i++;
            }),
              (s.lastMessageId = r),
              (s.mentionCount = i);
          })(e),
          (function (e) {
            let t = eO.get(e.id, er.ReadStateTypes.GUILD_HOME);
            t.lastMessageId = F.default.fromTimestamp(
              u(Date.now()).subtract(24, "h").valueOf()
            );
          })(e),
          (function (e) {
            let t = e.properties.latest_onboarding_question_id;
            if (null == t) return;
            let n = eO.get(e.id, er.ReadStateTypes.GUILD_ONBOARDING_QUESTION);
            (n._guildId = e.id), (n.lastMessageId = t);
          })(e);
      }
      (eO._guildReadStateSentinels = {}),
        (eO._readStates = {}),
        (eO._mentionChannels = new Set());
      function eR(e, t) {
        var n, s, i;
        let r = x.default.getChannel(t),
          a = W.default.getGuild(
            null != e ? e : null == r ? void 0 : r.guild_id
          ),
          o = (null == r ? void 0 : r.isForumPost()) ? 0 : ek(a),
          d =
            (null !==
              (i =
                null === (n = b.default.joinTimestamp(t)) || void 0 === n
                  ? void 0
                  : n.getTime()) && void 0 !== i
              ? i
              : 0) - 5e3,
          u =
            null == r
              ? void 0
              : null === (s = r.threadMetadata) || void 0 === s
                ? void 0
                : s.archiveTimestamp,
          l = null != u ? new Date(u).getTime() - 1 : 0,
          f = Math.max(d, l);
        return (
          f <= 0 && (f = F.default.extractTimestamp(t) - 1),
          isNaN(o) ? f : Math.max(o, f)
        );
      }
      function ek(e) {
        if (null != e && null != e.joinedAt) {
          if (e.joinedAt instanceof Date) return e.joinedAt.getTime();
          if ("string" == typeof e.joinedAt)
            return new Date(e.joinedAt).getTime();
          else if ("number" == typeof e.joinedAt && !isNaN(e.joinedAt))
            return e.joinedAt;
        }
        return Date.now();
      }
      function eM(e, t) {
        return (
          !!(e.mentionCount > 0) ||
          (!(
            F.default.compare(e.channelId, t) > 0 ||
            (null != e._ackMessageId &&
              F.default.compare(e._ackMessageId, t) > 0) ||
            (null != e._lastMessageId &&
              F.default.compare(e._lastMessageId, t) > 0)
          ) &&
            !0)
        );
      }
      function ew(e) {
        if (null != e) {
          let t = eO.get(e);
          if (eN(t)) return t.ack({});
        }
        return !1;
      }
      function eL() {
        null != eg && clearTimeout(eg);
      }
      function eU(e) {
        if (null != e.channelUpdates) {
          var t;
          eP(
            null === (t = e.channelUpdates) || void 0 === t ? void 0 : t.writes
          );
        }
        if (null != e.channelTimestampUpdates)
          for (let t of e.channelTimestampUpdates) {
            let e = eO.get(t.id);
            null != t.last_message_id && (e.lastMessageId = t.last_message_id),
              null != t.last_pin_timestamp &&
                (e.lastPinTimestamp = eC(t.last_pin_timestamp));
          }
      }
      function eG(e) {
        let { channelId: t } = e,
          n = eO.get(t);
        n.rebuildChannelState();
      }
      function eF(e) {
        let { threads: t } = e;
        eb(t);
      }
      function eH(e) {
        let t = $.default.getCurrentUser();
        return null != e.creator_id && null != t && e.creator_id === t.id;
      }
      function eB(e) {
        let { channel: t } = e;
        return eO.clear(t.id);
      }
      function ex() {
        let e = B.default.getCurrentSidebarChannelId(ed),
          t = !1;
        return eu !== e ? ((t = ej(eu)), (eu = e)) : (t = ew(e) || t), t;
      }
      function eY(e) {
        if (null == e) return;
        let t = eO.get(e);
        t.isManualAck = !1;
      }
      function ej(e) {
        if (null == e) return !1;
        let t = eO.get(e);
        return !t.hasUnread() && ((t.oldestUnreadMessageId = null), !0);
      }
      function eK(e) {
        let { channelId: t, messageId: n, manual: s, newMentionCount: i } = e,
          r = eO.get(t);
        return s
          ? (r.rebuildChannelState(n, !0, i), !0)
          : n !== r._ackMessageId && r.ack({ messageId: n, local: !0 });
      }
      function eW(e) {
        let { id: t, ackType: n, ackedId: s, local: i } = e;
        return ez(t, n, s, i);
      }
      function ez(e, t, n, s) {
        var i;
        let r = eO.get(e, t);
        return (
          n !== r.ackMessageId &&
          r.lastMessageId !== r.ackMessageId &&
          (null != r.lastMessageId || 0 !== r.mentionCount) &&
          ((n =
            null !== (i = null != n ? n : r.lastMessageId) && void 0 !== i
              ? i
              : F.default.fromTimestamp(r.getAckTimestamp())),
          r.ack({ messageId: n, local: null == s || s }))
        );
      }
      class eq extends l.default.Store {
        initialize() {
          this.waitFor(
            Y.default,
            $.default,
            W.default,
            K.default,
            x.default,
            Z.default,
            q.default,
            X.default,
            h.default,
            P.default,
            b.default,
            B.default,
            p.default,
            j.default,
            v.default,
            J.default,
            ee.default,
            A.default,
            T.default,
            R.default,
            S.default
          ),
            this.syncWith([B.default], ex);
        }
        getReadStatesByChannel() {
          var e;
          return null !== (e = eO._readStates[er.ReadStateTypes.CHANNEL]) &&
            void 0 !== e
            ? e
            : {};
        }
        getForDebugging(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : er.ReadStateTypes.CHANNEL;
          return eO.getIfExists(e, t);
        }
        getNotifCenterReadState(e) {
          var t;
          return null ===
            (t = eO._readStates[er.ReadStateTypes.NOTIFICATION_CENTER]) ||
            void 0 === t
            ? void 0
            : t[e];
        }
        hasUnread(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : er.ReadStateTypes.CHANNEL;
          return eO.getValue(e, t, e => e.canBeUnread() && e.hasUnread(), !1);
        }
        hasTrackedUnread(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : er.ReadStateTypes.CHANNEL;
          return eO.getValue(
            e,
            t,
            e => e.canTrackUnreads() && e.hasUnread(),
            !1
          );
        }
        isForumPostUnread(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : er.ReadStateTypes.CHANNEL;
          return eO.getValue(e, t, e => e.isForumPostUnread(), !1);
        }
        getUnreadCount(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : er.ReadStateTypes.CHANNEL;
          return eO.getValue(
            e,
            t,
            e => (e.canBeUnread() ? e.unreadCount : 0),
            0
          );
        }
        getMentionCount(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : er.ReadStateTypes.CHANNEL;
          return eO.getValue(
            e,
            t,
            e => (e.canHaveMentions() ? e.getMentionCount() : 0),
            0
          );
        }
        getGuildChannelUnreadState(e, t, n, s, i) {
          return eO.getValue(
            e.id,
            er.ReadStateTypes.CHANNEL,
            r => r.getGuildChannelUnreadState(e, t, n, s, i),
            { mentionCount: 0, unread: !1 }
          );
        }
        hasRecentlyVisitedAndRead(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : er.ReadStateTypes.CHANNEL;
          return eO.getValue(e, t, e => e.hasRecentlyVisitedAndRead(), !1);
        }
        ackMessageId(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : er.ReadStateTypes.CHANNEL;
          return eO.getValue(
            e,
            t,
            e => (e.canBeUnread() ? e.ackMessageId : null),
            null
          );
        }
        getTrackedAckMessageId(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : er.ReadStateTypes.CHANNEL;
          return eO.getValue(
            e,
            t,
            e => (e.canTrackUnreads() ? e._ackMessageId : null),
            null
          );
        }
        lastMessageId(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : er.ReadStateTypes.CHANNEL;
          return eO.getValue(e, t, e => e.lastMessageId, null);
        }
        lastMessageTimestamp(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : er.ReadStateTypes.CHANNEL;
          return eO.getValue(e, t, e => e.lastMessageTimestamp, 0);
        }
        lastPinTimestamp(e) {
          return eO.getValue(
            e,
            er.ReadStateTypes.CHANNEL,
            e => e.lastPinTimestamp,
            null
          );
        }
        getOldestUnreadMessageId(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : er.ReadStateTypes.CHANNEL;
          return eO.getValue(
            e,
            t,
            e => (e.canTrackUnreads() ? e.oldestUnreadMessageId : null),
            null
          );
        }
        getOldestUnreadTimestamp(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : er.ReadStateTypes.CHANNEL;
          return eO.getValue(
            e,
            t,
            e => (e.canTrackUnreads() ? e.oldestUnreadTimestamp : 0),
            0
          );
        }
        isEstimated(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : er.ReadStateTypes.CHANNEL;
          return eO.getValue(e, t, e => e.estimated, !1);
        }
        hasOpenedThread(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : er.ReadStateTypes.CHANNEL;
          return eO.getValue(e, t, e => e._persisted, !1);
        }
        hasUnreadPins(e) {
          return eO.getValue(
            e,
            er.ReadStateTypes.CHANNEL,
            e => e.canBeUnread() && e.lastPinTimestamp > e.ackPinTimestamp,
            !1
          );
        }
        isNewForumThread(e, t, n) {
          let s = eO.get(t),
            i = eO.get(e);
          if (
            !0 === i._persisted ||
            null == s.ackMessageIdAtChannelSelect ||
            0 >= F.default.compare(e, s.ackMessageIdAtChannelSelect)
          )
            return !1;
          let r = ek(n),
            a = F.default.extractTimestamp(e);
          return a > r;
        }
        getAllReadStates(e) {
          let t = [];
          return (
            eO.forEach(n => {
              switch (n.type) {
                case er.ReadStateTypes.GUILD_HOME:
                case er.ReadStateTypes.GUILD_EVENT:
                case er.ReadStateTypes.GUILD_ONBOARDING_QUESTION:
                  let s = W.default.getGuild(n.channelId);
                  null != s && t.push(n.serialize(e));
                  break;
                case er.ReadStateTypes.NOTIFICATION_CENTER:
                  var i;
                  let r =
                    null === (i = $.default.getCurrentUser()) || void 0 === i
                      ? void 0
                      : i.id;
                  r === n.channelId && t.push(n.serialize(e));
                  break;
                default:
                  t.push(n.serialize(e));
              }
            }),
            t
          );
        }
        getGuildUnreadsSentinel(e) {
          return eO.getGuildSentinels(e).unreadsSentinel;
        }
        getMentionChannelIds() {
          return eO.getMentionChannelIds();
        }
        getSnapshot(e, t) {
          let n = eO.get(e);
          return null == n.snapshot || Date.now() - n.snapshot.takenAt > t
            ? n.takeSnapshot()
            : n.snapshot;
        }
      }
      eq.displayName = "ReadStateStore";
      let eX = new eq(g.default, {
        BACKGROUND_SYNC_CHANNEL_MESSAGES: function (e) {
          let { changesByChannelId: t } = e;
          for (let e in t) {
            var n, s;
            let i = t[e],
              r = eO.getIfExists(e);
            if (null == r) continue;
            let a = [
              null === (n = i.new_messages) || void 0 === n ? void 0 : n[0],
            ]
              .concat(
                null !== (s = i.modified_messages) && void 0 !== s ? s : []
              )
              .filter(U.isNotNullish);
            for (let e of a)
              1 === F.default.compare(e.id, r.lastMessageId) &&
                (r.lastMessageId = e.id);
          }
        },
        CONNECTION_OPEN: function (e) {
          var t, n;
          let {
            guilds: s,
            relationships: i,
            initialPrivateChannels: r,
            readState: a,
          } = e;
          eT(),
            (el = null),
            !ef && !a.partial && eO.clearAll(),
            (ef = !1),
            a.entries.forEach(e => {
              var t, n, s;
              let i =
                null !== (t = e.read_state_type) && void 0 !== t
                  ? t
                  : er.ReadStateTypes.CHANNEL;
              if (i !== er.ReadStateTypes.CHANNEL) {
                e = {
                  id: (s = e).id,
                  read_state_type: s.read_state_type,
                  mention_count: s.badge_count,
                  last_message_id: s.last_acked_id,
                };
              }
              let r = eO.get(e.id, i);
              (r._persisted = !0),
                (r._mentionCount =
                  null !== (n = e.mention_count) && void 0 !== n ? n : 0),
                (r.flags = e.flags),
                (r.lastViewed = e.last_viewed);
              let a = x.default.getBasicChannel(e.id);
              null != a &&
              (0, k.isThread)(a.type) &&
              (null == e.last_message_id || 0 === e.last_message_id)
                ? (r.ackMessageId = F.default.fromTimestamp(
                    eR(a.guild_id, a.id)
                  ))
                : r.ackedWhileCached
                  ? -1 ===
                      F.default.compare(r.ackMessageId, e.last_message_id) &&
                    (r.ackMessageId = e.last_message_id)
                  : (r.ackMessageId = e.last_message_id),
                (r.ackedWhileCached = void 0),
                (r.ackPinTimestamp = eC(e.last_pin_timestamp)),
                eO._mentionChannels.delete(r.channelId),
                r._mentionCount > 0 &&
                  r.canHaveMentions() &&
                  eO._mentionChannels.add(r.channelId);
            }),
            eO.resetGuildSentinels();
          let o =
            null === (t = $.default.getCurrentUser()) || void 0 === t
              ? void 0
              : t.id;
          if (null != o) {
            let e = eO.get(o, er.ReadStateTypes.NOTIFICATION_CENTER);
            e.lastMessageId = F.default.fromTimestamp(Date.now());
          }
          for (let e of ((function (e) {
            let t = $.default.getCurrentUser();
            if (!(0, D.inNotificationCenterEnabled)() || null == t) return 0;
            let n = eO.get(t.id, er.ReadStateTypes.NOTIFICATION_CENTER);
            e.forEach(e => {
              if (
                null == e.since ||
                e.type !== et.RelationshipTypes.PENDING_INCOMING
              )
                return;
              let t = new Date(e.since).getTime(),
                s =
                  null != n.ackMessageId
                    ? F.default.extractTimestamp(n.ackMessageId)
                    : 0;
              s < t &&
                (n.mentionCount++,
                (n.lastMessageId = F.default.fromTimestamp(t)));
            });
          })(i),
          eP(r),
          s))
            eP(null !== (n = e.channels) && void 0 !== n ? n : []),
              eU(e),
              eV(e);
          eL(),
            (eg = setTimeout(
              () =>
                (function (e) {
                  let t = ev();
                  for (let s of e) {
                    var n;
                    let e =
                        null !== (n = s.read_state_type) && void 0 !== n
                          ? n
                          : er.ReadStateTypes.CHANNEL,
                      i = eO.get(s.id, e);
                    i.shouldDeleteReadState(t) && i.delete();
                  }
                })(a.entries),
              10 * w.default.Millis.SECOND
            ));
        },
        CONNECTION_OPEN_SUPPLEMENTAL: function (e) {
          let { lazyPrivateChannels: t } = e;
          eP(t);
        },
        LOGOUT: eL,
        OVERLAY_INITIALIZE: function (e) {
          let { readStates: t, selectedChannelId: n } = e;
          eT(),
            (el = null),
            (ed = n),
            (eu = B.default.getCurrentSidebarChannelId(ed)),
            eO.clearAll(),
            t.forEach(e => {
              let t = eO.get(e.channelId);
              t.deserializeForOverlay(e),
                t.type === er.ReadStateTypes.CHANNEL && t.rebuildChannelState();
            });
        },
        CACHE_LOADED: function (e) {
          let { readStates: t } = e;
          (ef = !0),
            eT(),
            t.forEach(e => {
              var t;
              let n =
                null !== (t = e.type) && void 0 !== t
                  ? t
                  : er.ReadStateTypes.CHANNEL;
              (e.type = n),
                null == eO._readStates[n] && (eO._readStates[n] = {}),
                (eO._readStates[n][e.channelId] = (0, c.dangerouslyCast)(
                  e,
                  eO
                ));
            });
        },
        GUILD_CREATE: function (e) {
          var t;
          let { guild: n } = e,
            s = ev();
          eO.forEach(e => {
            e.guildId === n.id && e.shouldDeleteReadState(s) && e.delete(!1);
          }),
            eP(null !== (t = n.channels) && void 0 !== t ? t : []),
            eU(n),
            eV(n);
        },
        LOAD_MESSAGES_SUCCESS: function (e) {
          let { channelId: t, isAfter: n, messages: s } = e,
            i = eO.get(t);
          i.loadedMessages = !0;
          let r = q.default.getMessages(t);
          null != r &&
            (s.length > 0 &&
            1 === F.default.compare(s[0].id, i.ackMessageId) &&
            0 === i.unreadCount
              ? i.rebuildChannelState()
              : r.hasPresent() || r.jumpTargetId === i.ackMessageId
                ? i.rebuildChannelState()
                : n &&
                  null != i.ackMessageId &&
                  r.has(i.ackMessageId, !0) &&
                  ((i.unreadCount += s.length),
                  null == i.oldestUnreadMessageId && i.rebuildChannelState())),
            eb(s.map(e => e.thread).filter(U.isNotNullish));
        },
        MESSAGE_CREATE: function (e) {
          let t,
            n,
            { channelId: i, message: r, isPushNotification: a } = e,
            o = eO.get(i);
          o.lastMessageId = r.id;
          let d = $.default.getCurrentUser(),
            u = x.default.getBasicChannel(i);
          if (null != r.author && null != d && r.author.id === d.id)
            return (
              null != o.outgoingAck && o.clearOutgoingAck(),
              eK({ channelId: i, messageId: r.id, manual: !1 })
            );
          let l = (0, y.getRootNavigationRefIfInExperiment)();
          if ((null == l ? void 0 : l.isReady()) === !0) {
            let e = l.getCurrentRoute(),
              n = h.default.getChatOpen(o.channelId);
            if (n) t = o.channelId;
            else if ((null == e ? void 0 : e.name) === "channel")
              t = e.params.channelId;
            else if ((null == e ? void 0 : e.name) === "guilds") {
              var f;
              t =
                null === (f = e.params) || void 0 === f ? void 0 : f.channelId;
            }
          } else
            null == l &&
              ((t = Z.default.getChannelId()),
              (n = B.default.getCurrentSidebarChannelId(t)));
          let _ = t === i || n === i;
          if (
            (_ && eN(o) && !a) ||
            (null != s &&
              s.isInstanceFocused() &&
              _ &&
              s.isInstanceUILocked() &&
              s.isPinned(et.OverlayWidgets.TEXT))
          )
            return o.ack({ messageId: r.id });
          (null == o.oldestUnreadMessageId || o.oldestUnreadMessageIdStale) &&
            (o.oldestUnreadMessageId = r.id),
            o.unreadCount++;
          let c =
            (null != r.author && Q.default.isBlocked(r.author.id)) ||
            (r.type === et.MessageTypes.RECIPIENT_REMOVE &&
              (null == u ? void 0 : u.type) === et.ChannelTypes.GROUP_DM);
          !c &&
            (function (e, t, n) {
              if (
                null != t &&
                (0, I.isRawMessageMentioned)({
                  rawMessage: e,
                  userId: t.id,
                  suppressEveryone: J.default.isSuppressEveryoneEnabled(
                    n.guildId
                  ),
                  suppressRoles: J.default.isSuppressRolesEnabled(n.guildId),
                })
              )
                return !0;
              let s = x.default.getChannel(e.channel_id);
              return (
                !!eI(s) ||
                (!!J.default.mentionOnAllMessages &&
                  null != s &&
                  !s.isVocal() &&
                  !J.default.isChannelMuted(s.guild_id, s.id) &&
                  J.default.resolvedMessageNotifications(s) ===
                    et.UserNotificationSettings.ALL_MESSAGES) ||
                !1
              );
            })(r, d, o) &&
            o.mentionCount++;
        },
        MESSAGE_DELETE: eG,
        MESSAGE_DELETE_BULK: eG,
        MESSAGE_ACK: eK,
        CHANNEL_ACK: function (e) {
          let {
              channelId: t,
              messageId: n,
              immediate: s = !1,
              force: i = !1,
              context: r,
              location: a,
            } = e,
            o = eO.get(t),
            d = o.ack({
              messageId: n,
              local: r !== et.CURRENT_APP_CONTEXT,
              immediate: s,
              force: i,
              isExplicitUserAction: !0,
              location: a,
            });
          return null != n ? (o.rebuildChannelState(), !0) : d;
        },
        CHANNEL_LOCAL_ACK: function (e) {
          let { channelId: t } = e,
            n = eO.get(t);
          return n.ack({
            messageId: void 0,
            local: !0,
            immediate: void 0,
            force: void 0,
            isExplicitUserAction: !0,
          });
        },
        CHANNEL_PINS_ACK: function (e) {
          let { channelId: t, timestamp: n } = e,
            s = eO.get(t);
          return s.ackPins(n);
        },
        CHANNEL_PINS_UPDATE: function (e) {
          let { channelId: t, lastPinTimestamp: n } = e,
            s = eO.get(t),
            i = eC(n);
          return s.lastPinTimestamp !== i && ((s.lastPinTimestamp = i), !0);
        },
        CHANNEL_SELECT: function (e) {
          let { channelId: t } = e,
            n = B.default.getCurrentSidebarChannelId(t),
            s = x.default.getChannel(t);
          if (null != s) {
            var i;
            let e = eO.get(s.id);
            (e.ackMessageIdAtChannelSelect =
              null !== (i = e.ackMessageId) && void 0 !== i
                ? i
                : F.default.fromTimestamp(e.getAckTimestamp())),
              e.recordLastViewedTime();
          }
          eY(ed), eY(eu);
          let r = !1;
          return (
            ed !== t && ((r = ej(ed) || r), (r = ej(eu) || r)),
            (ed === t ||
              ((null == s ? void 0 : s.type) != null &&
                et.ChannelTypesSets.GUILD_THREADS_ONLY.has(s.type))) &&
              (r = ew(t) || r),
            ed === t && (r = ew(n) || r),
            (ed = t),
            (eu = n),
            r
          );
        },
        VOICE_CHANNEL_SELECT: function (e) {
          let { channelId: t } = e;
          if (null == t) return;
          let n = eO.get(t);
          if (!n.hasMentions())
            return (
              (n.oldestUnreadMessageId = null),
              n.ack({ isExplicitUserAction: !0 })
            );
        },
        CHANNEL_CREATE: function (e) {
          let { channel: t } = e;
          if (!(0, k.isReadableType)(t.type)) return !1;
          let n = eO.get(t.id);
          (n.lastMessageId = t.lastMessageId),
            (n.lastPinTimestamp = eC(t.lastPinTimestamp));
        },
        THREAD_CREATE: function (e) {
          let { channel: t } = e;
          (function (e) {
            if (!k.ALL_CHANNEL_TYPES.has(e.type)) return 0;
            let t = eO.get(e.id);
            (t.lastMessageId = e.lastMessageId),
              (t.lastPinTimestamp = eC(e.lastPinTimestamp)),
              t.syncThreadSettings(),
              e.ownerId === H.default.getId() && (t.loadedMessages = !0);
          })(t),
            (function (e) {
              let t = e.parent_id,
                n = eO.get(t);
              n.lastMessageId = e.id;
              let s = $.default.getCurrentUser();
              if (e.ownerId === (null == s ? void 0 : s.id)) {
                let n = eO.get(e.id);
                (n._persisted = !0),
                  eK({ channelId: t, messageId: e.id, manual: !1 });
              }
            })(t);
        },
        THREAD_UPDATE: function (e) {
          let { channel: t } = e;
          return (
            !!k.ALL_CHANNEL_TYPES.has(t.type) &&
            eO.get(t.id).syncThreadSettings()
          );
        },
        THREAD_LIST_SYNC: function (e) {
          let { threads: t } = e;
          t.forEach(e => {
            if (!k.ALL_CHANNEL_TYPES.has(e.type)) return;
            let t = eO.get(e.id);
            if (
              ((t.lastMessageId = e.lastMessageId),
              (t.lastPinTimestamp = eC(e.lastPinTimestamp)),
              (t._isThread = !0),
              (t._isActiveThread = !0),
              (t._isJoinedThread = b.default.hasJoined(e.id)),
              e.isForumPost())
            ) {
              let t = eO.get(e.parent_id);
              0 > F.default.compare(t.lastMessageId, e.id) &&
                (t.lastMessageId = e.id);
            }
          });
        },
        LOAD_THREADS_SUCCESS: eF,
        LOAD_ARCHIVED_THREADS_SUCCESS: eF,
        SEARCH_FINISH: function (e) {
          let { messages: t, threads: n } = e;
          for (let e of t)
            eb(
              e
                .map(e => {
                  let { thread: t } = e;
                  return t;
                })
                .filter(U.isNotNullish)
            );
          eb(n);
        },
        THREAD_MEMBER_UPDATE: function (e) {
          let { id: t } = e;
          return eO.get(t).syncThreadSettings();
        },
        THREAD_MEMBERS_UPDATE: function (e) {
          return (
            (0, V.doesThreadMembersActionAffectMe)(e) &&
            eO.get(e.id).syncThreadSettings()
          );
        },
        CHANNEL_DELETE: eB,
        THREAD_DELETE: eB,
        WINDOW_FOCUS: function (e) {
          let t = !1;
          for (let [n, s] of Object.entries(em))
            s === e.windowId &&
              (t =
                (function (e, t) {
                  if (null == e) return !1;
                  let n = eO.get(e);
                  return (
                    !t && !n.hasUnread() && (n.oldestUnreadMessageIdStale = !0),
                    ew(e)
                  );
                })(n, e.focused) || t);
          return t;
        },
        UPDATE_CHANNEL_DIMENSIONS: function (e) {
          let { channelId: t } = e;
          return ew(t);
        },
        CURRENT_USER_UPDATE: function () {
          el = null;
        },
        DRAWER_OPEN: function () {
          if (null != ed) {
            let e = eO.get(ed);
            !e.hasUnread() && (e.oldestUnreadMessageIdStale = !0);
          }
          return !1;
        },
        DRAWER_CLOSE: function () {
          return ew(ed);
        },
        BULK_ACK: function (e) {
          var t, n, s;
          let { channels: i, context: r, onFinished: a } = e,
            o = i.filter(
              e =>
                null != e.messageId &&
                eX.hasUnread(e.channelId, e.readStateType)
            );
          (t = o),
            (n = r),
            (s = a),
            t.forEach(e => {
              let { channelId: t, messageId: n, readStateType: s } = e,
                i = eO.get(t, s);
              i.ack({
                messageId: n,
                local: !0,
                immediate: void 0,
                force: void 0,
                isExplicitUserAction: !0,
              });
            }),
            n !== et.CURRENT_APP_CONTEXT ||
              (e_.push(
                ...t.map(e => ({
                  channel_id: e.channelId,
                  message_id: e.messageId,
                  read_state_type: e.readStateType,
                }))
              ),
              ec || eA(s));
        },
        ENABLE_AUTOMATIC_ACK: function (e) {
          let { channelId: t, windowId: n } = e;
          return (
            em[t] !== n &&
            (o(
              void 0 === em[t],
              "handleEnableAutomaticAck: channel already visible in another window"
            ),
            (em[t] = n),
            ew(t))
          );
        },
        DISABLE_AUTOMATIC_ACK: function (e) {
          let { channelId: t } = e;
          return (em[t] = void 0), !1;
        },
        GUILD_FEATURE_ACK: eW,
        GUILD_SCHEDULED_EVENT_CREATE: function (e) {
          let { guildScheduledEvent: t } = e,
            n = t.guild_id,
            s = eO.get(t.guild_id, er.ReadStateTypes.GUILD_EVENT);
          if (((s.lastMessageId = t.id), eH(t))) {
            eW({
              type: "GUILD_FEATURE_ACK",
              id: n,
              ackType: er.ReadStateTypes.GUILD_EVENT,
              ackedId: t.id,
              local: !1,
            });
            return;
          }
          !J.default.isMuteScheduledEventsEnabled(n) && s.mentionCount++;
        },
        GUILD_SCHEDULED_EVENT_UPDATE: function (e) {
          let { guildScheduledEvent: t } = e,
            n = t.guild_id;
          if (
            eH(t) ||
            ![
              ei.GuildScheduledEventStatus.CANCELED,
              ei.GuildScheduledEventStatus.COMPLETED,
            ].includes(t.status)
          )
            return !1;
          let s = eO.get(n, er.ReadStateTypes.GUILD_EVENT);
          s.handleGuildEventRemoval(n, t.id);
        },
        GUILD_SCHEDULED_EVENT_DELETE: function (e) {
          let { guildScheduledEvent: t } = e,
            n = t.guild_id;
          if (eH(t)) return !1;
          let s = eO.get(t.guild_id, er.ReadStateTypes.GUILD_EVENT);
          s.handleGuildEventRemoval(n, t.id);
        },
        GUILD_DELETE: function (e) {
          let { guild: t } = e;
          return eO.clear(t.id, er.ReadStateTypes.GUILD_EVENT);
        },
        GUILD_UPDATE: function (e) {
          let { guild: t } = e,
            n = t.latest_onboarding_question_id;
          if (null == n) return;
          let s = eO.get(t.id, er.ReadStateTypes.GUILD_ONBOARDING_QUESTION);
          (s._guildId = t.id), (s.lastMessageId = n);
        },
        RESORT_THREADS: function (e) {
          let { channelId: t } = e;
          return ew(t);
        },
        CHANNEL_RTC_UPDATE_CHAT_OPEN: function (e) {
          let { channelId: t, chatOpen: n } = e;
        },
        DECAY_READ_STATES: eT,
        NOTIFICATION_CENTER_ITEM_CREATE: function (e) {
          var t;
          let { item: n } = e;
          if (!(0, D.inNotificationCenterEnabled)()) return !1;
          let s =
            null === (t = $.default.getCurrentUser()) || void 0 === t
              ? void 0
              : t.id;
          if (null == s) return !1;
          let i = eO.get(s, er.ReadStateTypes.NOTIFICATION_CENTER);
          i.lastMessageId = n.id;
          if ((0, A.default.active)) {
            ez(s, er.ReadStateTypes.NOTIFICATION_CENTER, n.id, !1);
            return;
          }
          i.mentionCount++;
        },
        RELATIONSHIP_ADD: function (e) {
          let t = $.default.getCurrentUser();
          if (
            !(0, D.inNotificationCenterEnabled)() ||
            null == t ||
            null == e.relationship.since ||
            (e.relationship.type !== et.RelationshipTypes.PENDING_INCOMING &&
              e.relationship.type !== et.RelationshipTypes.FRIEND)
          )
            return !1;
          let n = eO.get(t.id, er.ReadStateTypes.NOTIFICATION_CENTER),
            s = e.relationship.type === et.RelationshipTypes.FRIEND,
            i = s
              ? new Date(Date.now()).getTime()
              : new Date(e.relationship.since).getTime(),
            r =
              null != n.ackMessageId
                ? F.default.extractTimestamp(n.ackMessageId)
                : 0;
          r < i &&
            ((n.lastMessageId = F.default.fromTimestamp(i)),
            (0, A.default.active)
              ? ez(t.id, er.ReadStateTypes.NOTIFICATION_CENTER, void 0, !1)
              : s
                ? n.mentionCount--
                : n.mentionCount++);
        },
        RELATIONSHIP_REMOVE: function (e) {
          let t = $.default.getCurrentUser();
          if (
            !(0, D.inNotificationCenterEnabled)() ||
            null == t ||
            null == e.relationship.since ||
            e.relationship.type !== et.RelationshipTypes.PENDING_INCOMING
          )
            return !1;
          let n = eO.get(t.id, er.ReadStateTypes.NOTIFICATION_CENTER),
            s = new Date(e.relationship.since).getTime(),
            i =
              null != n.ackMessageId
                ? F.default.extractTimestamp(n.ackMessageId)
                : 0;
          i <= s && (n.mentionCount = Math.max(0, n.mentionCount - 1));
        },
        NOTIFICATION_CENTER_ITEMS_ACK: function (e) {
          var t;
          let { ids: n, optimistic: s } = e;
          if (s || !(0, D.inNotificationCenterEnabled)() || A.default.active)
            return !1;
          let i =
            null === (t = $.default.getCurrentUser()) || void 0 === t
              ? void 0
              : t.id;
          if (null == i) return !1;
          let r = eO.get(i, er.ReadStateTypes.NOTIFICATION_CENTER);
          n.forEach(e => {
            0 > F.default.compare(r.ackMessageId, e) &&
              (r.mentionCount = Math.max(r.mentionCount - 1, 0));
          });
        },
        USER_NON_CHANNEL_ACK: function (e) {
          var t;
          let { ackType: n, ackedId: s, local: i } = e,
            r =
              null === (t = $.default.getCurrentUser()) || void 0 === t
                ? void 0
                : t.id;
          return null != r && ez(r, n, s, i);
        },
        PASSIVE_UPDATE_V1: function (e) {
          var t;
          let n = !1;
          for (let s of null !== (t = e.channels) && void 0 !== t ? t : []) {
            let e = eO.get(s.id),
              t = eC(s.lastPinTimestamp);
            (e.lastMessageId !== s.lastMessageId || e.lastPinTimestamp !== t) &&
              ((n = !0),
              (e.lastMessageId = s.lastMessageId),
              (e.lastPinTimestamp = t));
          }
          return n;
        },
        CLEAR_OLDEST_UNREAD_MESSAGE: function (e) {
          let { channelId: t } = e;
          return ej(t);
        },
        TRY_ACK: function (e) {
          let { channelId: t } = e;
          return ew(t);
        },
      });
      var eQ = eX;
    },
    744983: function (e, t, n) {
      "use strict";
      let s;
      n.r(t),
        n.d(t, {
          default: function () {
            return N;
          },
        }),
        n("843762");
      var i = n("917351"),
        r = n.n(i),
        a = n("446674"),
        o = n("95410"),
        d = n("913144"),
        u = n("390933"),
        l = n("25932"),
        f = n("42203"),
        _ = n("305961"),
        c = n("49111");
      let g = {},
        m = !1;
      function h(e) {
        return (
          null == g[e] &&
            (g[e] = {
              searchId: e,
              searchType: v(e),
              isIndexing: !1,
              isHistoricalIndexing: !1,
              isSearching: !1,
              analyticsId: null,
              editorState: null,
              offset: 0,
              query: null,
              hasError: !1,
              searchFetcher: null,
              rawResults: null,
              totalResults: 0,
              documentsIndexed: 0,
              resultsBlocked: 0,
              showBlockedResults: !1,
              showNoResultsAlt: !1,
            }),
          g[e]
        );
      }
      function v(e) {
        return e === c.SearchTypes.DMS
          ? c.SearchTypes.DMS
          : e === c.FAVORITES
            ? c.SearchTypes.FAVORITES
            : null != _.default.getGuild(e)
              ? c.SearchTypes.GUILD
              : null != f.default.getChannel(e)
                ? c.SearchTypes.CHANNEL
                : null;
      }
      function E(e, t) {
        let n =
          arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
        if (null == e) return n;
        let s = g[e];
        return null == s ? n : t(s);
      }
      let p = "SearchStore",
        y = !1,
        T = {},
        C = null;
      function S(e) {
        var t;
        let { searchId: n, query: s } = e;
        if ("string" != typeof s || "" === (s = s.trim())) return;
        let i = (T[n] = null !== (t = T[n]) && void 0 !== t ? t : []),
          r = i.indexOf(s);
        -1 !== r
          ? (i.splice(r, 1), i.unshift(s))
          : null != i[0] && "" !== i[0] && s.startsWith(i[0])
            ? (i[0] = s)
            : r < 0 && i.unshift(s),
          i.length > 5 && i.splice(5, i.length),
          o.default.set(p, { history: T });
      }
      function I(e) {
        let { searchId: t } = e,
          n = g[t];
        if (null == n) return !1;
        null != n.searchFetcher && n.searchFetcher.cancel(), delete g[t];
      }
      function A(e) {
        if (e === C) return !1;
        null != e && null == g[e] && h(e), (C = e);
      }
      class D extends a.default.Store {
        initialize() {
          this.waitFor(_.default, f.default);
          let e = o.default.get(p);
          if ((null == e ? void 0 : e.history) != null) {
            var t;
            Object.keys((t = e.history)).forEach(e => {
              Array.isArray(t[e]) &&
                (t[e] = t[e].filter(e => "string" == typeof e && e.trim())),
                (!Array.isArray(t[e]) || 0 === t[e].length) && delete t[e];
            }),
              (T = t);
          }
          y = !!o.default.get("tokenized");
        }
        isOpen() {
          return m;
        }
        getCurrentSearchModalType() {
          return s;
        }
        getCurrentSearchId() {
          return C;
        }
        isActive() {
          let e =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : C;
          return (
            null != e &&
            (this.isIndexing(e) || this.isSearching(e) || this.hasResults(e))
          );
        }
        isTokenized() {
          return y;
        }
        getSearchType(e) {
          return E(null != e ? e : C, e => e.searchType);
        }
        getRawResults(e) {
          return E(e, e => e.rawResults);
        }
        hasResults(e) {
          return null != E(e, e => e.rawResults);
        }
        isIndexing(e) {
          return E(e, e => e.isIndexing) || !1;
        }
        isHistoricalIndexing(e) {
          return E(e, e => e.isHistoricalIndexing) || !1;
        }
        isSearching(e) {
          return E(e, e => e.isSearching) || !1;
        }
        getAnalyticsId(e) {
          return E(e, e => e.analyticsId);
        }
        getResultsBlocked(e) {
          return E(e, e => e.resultsBlocked);
        }
        getDocumentsIndexedCount(e) {
          return E(e, e => e.documentsIndexed);
        }
        getSearchFetcher(e) {
          return E(e, e => e.searchFetcher);
        }
        getTotalResults(e) {
          var t;
          return null !== (t = E(e, e => e.totalResults)) && void 0 !== t
            ? t
            : 0;
        }
        getEditorState(e) {
          return E(e, e => e.editorState);
        }
        getHistory(e) {
          return T[e];
        }
        getOffset(e) {
          var t;
          return null !== (t = E(e, e => e.offset)) && void 0 !== t ? t : 0;
        }
        getQuery(e) {
          return E(e, e => e.query);
        }
        hasError(e) {
          var t;
          return null !== (t = E(e, e => e.hasError)) && void 0 !== t && t;
        }
        shouldShowBlockedResults(e) {
          var t;
          return (
            null !== (t = E(e, e => e.showBlockedResults, !1)) &&
            void 0 !== t &&
            t
          );
        }
        shouldShowNoResultsAlt(e) {
          var t;
          return (
            null !== (t = E(e, e => e.showNoResultsAlt, !1)) &&
            void 0 !== t &&
            t
          );
        }
        getResultsState(e) {
          return {
            isSearching: this.isSearching(e),
            isIndexing: this.isIndexing(e),
            isHistoricalIndexing: this.isHistoricalIndexing(e),
            documentsIndexed: this.getDocumentsIndexedCount(e),
            offset: this.getOffset(e),
            totalResults: this.getTotalResults(e),
            hasError: this.hasError(e),
            showBlockedResults: this.shouldShowBlockedResults(e),
            showNoResultsAlt: this.shouldShowNoResultsAlt(e),
          };
        }
      }
      D.displayName = "SearchStore";
      var N = new D(d.default, {
        SEARCH_START: function (e) {
          var t, n;
          let { queryString: s, searchId: i, query: a } = e,
            o = h(i);
          null != o.searchFetcher &&
            (o.searchFetcher.cancel(), (o.searchFetcher = null));
          let _ = o.searchType,
            g = new u.default(i, _, a);
          (o.searchFetcher = g),
            (o.isSearching = !0),
            (o.rawResults = null),
            (o.analyticsId = null),
            (o.query = r.omit(a, "type")),
            (o.offset = null !== (n = a.offset) && void 0 !== n ? n : 0),
            (o.showBlockedResults = !1),
            S({ type: "SEARCH_ADD_HISTORY", searchId: i, query: s });
          let m =
            i === c.FAVORITES
              ? null === (t = f.default.getChannel(i)) || void 0 === t
                ? void 0
                : t.guild_id
              : _ === c.SearchTypes.GUILD
                ? i
                : null;
          g.fetch(
            e => {
              var t, n;
              d.default.dispatch({
                type: "SEARCH_FINISH",
                searchId: i,
                guildId: m,
                analyticsId: e.body.analytics_id,
                totalResults: e.body.total_results,
                messages: e.body.messages,
                threads: null !== (t = e.body.threads) && void 0 !== t ? t : [],
                members: (null !== (n = e.body.members) && void 0 !== n
                  ? n
                  : []
                ).map(e => (0, l.default)(e)),
                hasError: !1,
                doingHistoricalIndex: e.body.doing_deep_historical_index,
                documentsIndexed: e.body.documents_indexed,
              });
            },
            () => {
              d.default.dispatch({ type: "SEARCH_INDEXING", searchId: i });
            },
            () => {
              d.default.dispatch({
                type: "SEARCH_FINISH",
                searchId: i,
                guildId: m,
                messages: [],
                threads: [],
                members: [],
                totalResults: 0,
                analyticsId: null,
                hasError: !0,
                doingHistoricalIndex: !1,
                documentsIndexed: 0,
              });
            }
          );
        },
        SEARCH_INDEXING: function (e) {
          let { searchId: t } = e,
            n = h(t);
          (n.isIndexing = !0),
            (n.isHistoricalIndexing = !0),
            (n.isSearching = !1);
        },
        SEARCH_FINISH: function (e) {
          let { searchId: t } = e,
            n = h(t);
          (n.isSearching = !1),
            (n.isIndexing = !1),
            (n.isHistoricalIndexing = e.doingHistoricalIndex || !1),
            (n.searchFetcher = null),
            (n.totalResults = e.totalResults),
            (n.hasError = e.hasError),
            (n.analyticsId = e.analyticsId),
            (n.documentsIndexed =
              null != e.documentsIndexed ? e.documentsIndexed : 0),
            (n.showNoResultsAlt = 0.05 > Math.random()),
            (n.rawResults = e.messages);
          let s = n.query;
          null == s && (n.hasError = !0);
        },
        SEARCH_EDITOR_STATE_CLEAR: I,
        SEARCH_ENSURE_SEARCH_STATE: function (e) {
          let { searchId: t } = e;
          null != t && h(t);
        },
        SEARCH_EDITOR_STATE_CHANGE: function (e) {
          let { searchId: t, editorState: n } = e;
          h(t).editorState = n;
        },
        SEARCH_SET_SHOW_BLOCKED_RESULTS: function (e) {
          let { searchId: t, showBlocked: n } = e,
            s = h(t);
          s.showBlockedResults = n;
        },
        SEARCH_SCREEN_OPEN: function (e) {
          let { searchId: t } = e;
          A(t);
        },
        CHANNEL_SELECT: function (e) {
          let { guildId: t, channelId: n } = e;
          A(null != t ? t : n);
        },
        CHANNEL_TOGGLE_MEMBERS_SECTION: function () {
          return null != C && I({ searchId: C });
        },
        SEARCH_CLEAR_HISTORY: function (e) {
          let { searchId: t } = e;
          null == t
            ? (o.default.remove(p), (T = {}))
            : (delete T[t], o.default.set(p, { history: T }));
        },
        SEARCH_REMOVE_HISTORY: function (e) {
          let { searchId: t, query: n } = e;
          null != T[t] &&
            ((T[t] = T[t].filter(e => e !== n)),
            o.default.set(p, { history: T }));
        },
        SEARCH_ADD_HISTORY: S,
        LOGOUT: function () {
          o.default.remove(p), (T = {});
        },
        CONNECTION_OPEN: function () {
          Object.keys(g).forEach(e => {
            null != g[e] && (g[e].searchType = v(e));
          });
        },
        SEARCH_MODAL_OPEN: function (e) {
          let { searchId: t, searchType: n } = e;
          null != t && (C = t), (m = !0), (s = n);
        },
        SEARCH_MODAL_CLOSE: function () {
          (m = !1), (s = void 0);
        },
      });
    },
    101125: function (e, t, n) {
      "use strict";
      let s, i;
      n.r(t),
        n.d(t, {
          default: function () {
            return B;
          },
        }),
        n("222007");
      var r = n("714617"),
        a = n.n(r),
        o = n("917351"),
        d = n.n(o),
        u = n("446674"),
        l = n("913144"),
        f = n("429928"),
        _ = n("837374"),
        c = n("662285"),
        g = n("845579"),
        m = n("374363"),
        h = n("233069"),
        v = n("964889"),
        E = n("271938"),
        p = n("546463"),
        y = n("603699"),
        T = n("686470"),
        C = n("52028"),
        S = n("824563"),
        I = n("235660"),
        A = n("49111");
      let D = !1,
        N = A.StatusTypes.ONLINE,
        O = A.StatusTypes.UNKNOWN,
        P = 0,
        b = [],
        V = !1,
        R = !0,
        k = Object.freeze([]),
        M = [];
      function w(e) {
        return (0, v.shouldShareApplicationActivity)(e, T.default);
      }
      function L(e) {
        switch (e.type) {
          case A.ActivityTypes.LISTENING:
            if ((0, f.default)(e)) return c.default.shouldShowActivity();
            if (null != e.application_id) return w(e.application_id);
            return !1;
          case A.ActivityTypes.PLAYING:
            return null != e.application_id
              ? w(e.application_id)
              : (function (e) {
                  let t = p.default.getGameByName(e);
                  return null != t ? w(t.id) : g.ShowCurrentGame.getSetting();
                })(e.name);
          case A.ActivityTypes.STREAMING:
          case A.ActivityTypes.WATCHING:
          default:
            return null == e.application_id || w(e.application_id);
        }
      }
      function U() {
        var e;
        (P = null !== (e = y.default.getIdleSince()) && void 0 !== e ? e : 0),
          (V = y.default.isAFK()),
          R
            ? ((N = O), G())
            : (N = D ? A.StatusTypes.INVISIBLE : g.StatusSetting.getSetting()),
          N === A.StatusTypes.ONLINE && P > 0 && (N = A.StatusTypes.IDLE);
        let t = !1,
          n =
            R || N === A.StatusTypes.INVISIBLE
              ? []
              : C.default.getActivities().filter(L);
        !a(b, n) && ((b = n), (t = !0));
        let s = I.default.getRemoteActivities();
        if ((k !== s && ((k = s), (t = !0)), t)) {
          let e = b.find(e => e.type === A.ActivityTypes.CUSTOM_STATUS),
            t = b.filter(e => e.type !== A.ActivityTypes.CUSTOM_STATUS);
          M =
            t.length > 0
              ? b
              : null != e
                ? [
                    e,
                    ...d(k)
                      .filter(e => e.type !== A.ActivityTypes.CUSTOM_STATUS)
                      .uniqBy(e =>
                        ""
                          .concat(e.type, ":")
                          .concat(e.application_id, ":")
                          .concat(e.name)
                      )
                      .value(),
                  ]
                : d.uniqBy(k, e =>
                    ""
                      .concat(e.type, ":")
                      .concat(e.application_id, ":")
                      .concat(e.name)
                  );
        }
      }
      function G() {
        (s = void 0), (i = void 0);
      }
      function F() {
        (R = !1),
          (O = A.StatusTypes.UNKNOWN),
          U(),
          S.default.setCurrentUserOnConnectionOpen(N, M);
      }
      class H extends u.default.Store {
        initialize() {
          this.waitFor(
            y.default,
            m.default,
            C.default,
            I.default,
            T.default,
            p.default
          ),
            this.syncWith([C.default], U);
        }
        getLocalPresence() {
          return { status: N, since: P, activities: b, afk: V, broadcast: i };
        }
        getStatus() {
          return N;
        }
        getActivities() {
          let e =
            !(arguments.length > 0) || void 0 === arguments[0] || arguments[0];
          return e ? M : b;
        }
        getPrimaryActivity() {
          let e =
            !(arguments.length > 0) || void 0 === arguments[0] || arguments[0];
          return e ? M[0] : b[0];
        }
        getApplicationActivity(e) {
          let t =
            !(arguments.length > 1) || void 0 === arguments[1] || arguments[1];
          return this.findActivity(t => t.application_id === e, t);
        }
        findActivity(e) {
          let t =
            !(arguments.length > 1) || void 0 === arguments[1] || arguments[1];
          return this.getActivities(t).find(e);
        }
        getBroadcast() {
          return s;
        }
      }
      H.displayName = "SelfPresenceStore";
      var B = new H(l.default, {
        START_SESSION: U,
        CONNECTION_OPEN: function () {
          F();
        },
        CONNECTION_OPEN_SUPPLEMENTAL: F,
        OVERLAY_INITIALIZE: F,
        CONNECTION_CLOSED: U,
        IDLE: U,
        AFK: U,
        RUNNING_GAMES_CHANGE: U,
        STREAMING_UPDATE: U,
        USER_SETTINGS_PROTO_UPDATE: U,
        LOCAL_ACTIVITY_UPDATE: U,
        SPOTIFY_PLAYER_STATE: U,
        SPOTIFY_PLAYER_PLAY: U,
        USER_CONNECTIONS_UPDATE: U,
        SESSIONS_REPLACE: U,
        RPC_APP_DISCONNECTED: U,
        LIBRARY_FETCH_SUCCESS: U,
        LIBRARY_APPLICATION_FLAGS_UPDATE_SUCCESS: U,
        LOGOUT: function () {
          (R = !0), (O = N), U();
        },
        EMBEDDED_ACTIVITY_CLOSE: U,
        EMBEDDED_ACTIVITY_OPEN: U,
        FORCE_INVISIBLE: function (e) {
          return (D = e.invisible), U();
        },
        WINDOW_FOCUS: function () {
          return (D = !1), U();
        },
        BROADCAST_START: function (e) {
          (s = e.broadcast), (i = (0, _.broadcastToServer)(e.broadcast));
        },
        BROADCAST_STOP: G,
        CHANNEL_DELETE: function (e) {
          let { channel: t } = e;
          t instanceof h.ChannelRecordBase &&
            (null == t ? void 0 : t.isBroadcastChannel()) &&
            (null == t ? void 0 : t.ownerId) === E.default.getId() &&
            ((s = void 0), (i = void 0));
        },
      });
    },
    205817: function (e, t, n) {
      "use strict";
      let s, i;
      n.r(t),
        n.d(t, {
          default: function () {
            return U;
          },
        }),
        n("424973");
      var r = n("627445"),
        a = n.n(r),
        o = n("917351"),
        d = n.n(o),
        u = n("446674"),
        l = n("773364"),
        f = n("913144"),
        _ = n("583702"),
        c = n("374014"),
        g = n("582415"),
        m = n("537429"),
        h = n("773336"),
        v = n("373469"),
        E = n("271938"),
        p = n("42203"),
        y = n("42887"),
        T = n("824563"),
        C = n("945956"),
        S = n("568307"),
        I = n("49111"),
        A = n("353927");
      let D = {},
        N = {},
        O = {},
        P = {},
        b = I.StreamLayouts.THEATRE,
        V = {},
        R = [];
      function k() {
        d.forEach(V, (e, t) => {
          e.destroy(e.isOwner ? "sender-disconnect" : "receiver-disconnect"),
            delete V[t];
        });
      }
      function M(e) {
        e.filter(e => {
          let { connection: t } = e;
          return t.context === A.MediaEngineContextTypes.STREAM;
        }).forEach(e => {
          let { stats: t } = e;
          f.default.dispatch({ type: "STREAM_STATS_UPDATE", stats: t });
        });
      }
      function w() {
        return !0;
      }
      class L extends u.default.Store {
        getActiveStreamKey() {
          return (0, m.default)(y.default) ? i : null;
        }
        getAllActiveStreamKeys() {
          return Object.keys(V);
        }
        getRTCConnection(e) {
          return V[e];
        }
        getStatsHistory(e, t, n) {
          if (!(0, m.default)(y.default) || null == t) return null;
          if (n) {
            let n = v.default.getActiveStreamForUser(t, e);
            if (null == n || 0 === v.default.getViewerIds(n).length)
              return null;
          }
          return R.map(e =>
            n
              ? (function (e) {
                  var t, n, s, i, r;
                  let a = e.find(e => "video" === e.type);
                  return null != a && "video" === a.type
                    ? {
                        type: "streamer",
                        packetsSentOrReceived:
                          null !== (n = a.packetsSent) && void 0 !== n ? n : 0,
                        packetsLost:
                          null !== (s = a.packetsLost) && void 0 !== s ? s : 0,
                        frameRate:
                          null !== (i = a.frameRateEncode) && void 0 !== i
                            ? i
                            : 0,
                        resolution:
                          null !==
                            (r =
                              null === (t = a.resolution) || void 0 === t
                                ? void 0
                                : t.height) && void 0 !== r
                            ? r
                            : 0,
                        bitrate: 0,
                      }
                    : null;
                })(e.rtp.outbound)
              : (function (e) {
                  var t, n, s, i, r, a;
                  if (null == e) return null;
                  let o = e.find(e => "video" === e.type);
                  return null != o && "video" === o.type
                    ? {
                        type: "spectator",
                        packetsSentOrReceived:
                          null !== (n = o.packetsReceived) && void 0 !== n
                            ? n
                            : 0,
                        packetsLost:
                          null !== (s = o.packetsLost) && void 0 !== s ? s : 0,
                        frameRate:
                          null !== (i = o.frameRateDecode) && void 0 !== i
                            ? i
                            : 0,
                        bitrate:
                          null !== (r = o.bitrate) && void 0 !== r ? r : 0,
                        resolution:
                          null !==
                            (a =
                              null === (t = o.resolution) || void 0 === t
                                ? void 0
                                : t.height) && void 0 !== a
                            ? a
                            : 0,
                      }
                    : null;
                })(e.rtp.inbound[t])
          );
        }
        getQuality() {
          if (!(0, m.default)(y.default)) return I.RTCConnectionQuality.UNKNOWN;
          let e = this.getActiveStreamKey(),
            t = null != e ? V[e] : null;
          return null != t ? t.quality : I.RTCConnectionQuality.UNKNOWN;
        }
        getMediaSessionId(e) {
          if (null == e) return null;
          let t = V[e];
          if (null != t) return null != t ? t.getMediaSessionId() : null;
        }
        getRtcConnectionId(e) {
          if (null == e) return null;
          let t = V[e];
          if (null != t) return null != t ? t.getRTCConnectionId() : null;
        }
        getVideoStats(e) {
          if (null == e) return null;
          let t = V[e];
          return null != t ? t.getVideoStats() : null;
        }
        getHostname(e) {
          if (null == e) return "";
          let t = V[e];
          return null != t ? (null != t.hostname ? t.hostname : "") : "";
        }
        getRegion(e) {
          if (null == e) return null;
          let t = V[e];
          return null != t ? t.getRegion() : null;
        }
        getMaxViewers(e) {
          if (null == e) return null;
          let t = V[e];
          return null != t ? t.getMaxViewers() : null;
        }
        getStreamSourceId(e) {
          return P[e];
        }
      }
      L.displayName = "StreamRTCConnectionStore";
      var U = new L(
        f.default,
        !y.default.isSupported() || __OVERLAY__
          ? {}
          : {
              CONNECTION_OPEN: function (e) {
                (s = e.sessionId), (i = null), k();
              },
              CONNECTION_CLOSED: function () {
                (s = null), (i = null), k();
              },
              RTC_CONNECTION_STATE: w,
              RTC_CONNECTION_PING: w,
              RTC_CONNECTION_LOSS_RATE: w,
              RTC_CONNECTION_UPDATE_ID: function (e) {
                return d.some(V, t => t === e.connection);
              },
              STREAM_START: function (e) {
                let {
                    streamType: t,
                    guildId: n,
                    channelId: s,
                    appContext: i,
                    pid: r,
                    sourceId: a,
                  } = e,
                  o = (0, c.encodeStreamKey)({
                    streamType: t,
                    guildId: n,
                    channelId: s,
                    ownerId: E.default.getId(),
                  });
                if (
                  ((D[o] = i),
                  d.forEach(V, e => {
                    let { analyticsContext: t } = e;
                    t.setActionContext(i);
                  }),
                  (P[o] = a),
                  (O[o] = r),
                  null != r)
                ) {
                  let e = S.default.getGameForPID(r);
                  null != e &&
                    (N[o] = { name: e.name, id: e.id, exe: e.exeName });
                }
              },
              STREAM_STOP: function (e) {
                let { appContext: t, streamKey: n } = e;
                (D[n] = t),
                  d.forEach(V, e => {
                    let { analyticsContext: n } = e;
                    n.setActionContext(t);
                  }),
                  (P[n] = null),
                  (O[n] = null);
              },
              STREAM_CREATE: function (e) {
                let {
                  streamKey: t,
                  rtcServerId: n,
                  region: r,
                  viewerIds: o,
                } = e;
                i = t;
                let d = V[t];
                if (null == d && null != n) {
                  var u, f, m;
                  null == O[t] && (N[t] = null);
                  let e = (0, c.decodeStreamKey)(t);
                  null == N[t] &&
                    null == P[t] &&
                    (N[t] = (0, g.getStreamerApplication)(e, T.default));
                  let i = p.default.getChannel(e.channelId),
                    l = null != i && i.isBroadcastChannel(),
                    v = new _.StreamRTCAnalyticsContext({
                      streamRegion: r,
                      streamApplication: N[t],
                      streamSourceType: (function (e) {
                        var t, n, s;
                        if (null == e) return "unknown";
                        if (
                          h.isPlatformEmbedded ||
                          (null === (t = platform) || void 0 === t
                            ? void 0
                            : t.name) === "Chrome"
                        ) {
                          if (e.startsWith("web-contents-media-stream:"))
                            return "tab";
                          if (e.startsWith("window:")) return "window";
                          else if (e.startsWith("screen:")) return "screen";
                        } else if (
                          (null === (n = platform) || void 0 === n
                            ? void 0
                            : n.name) === "Firefox"
                        )
                          return "" !== e ? "window" : "screen";
                        else if (
                          (null === (s = platform) || void 0 === s
                            ? void 0
                            : s.name) === "Safari"
                        )
                          return "window";
                        return "unknown";
                      })(P[t]),
                      actionContext: D[t],
                      numViewers: null != o ? o.length : 0,
                      isBroadcast: l,
                    });
                  (u = t),
                    (f = n),
                    (m = v),
                    a(null != s, "Creating RTCConnection without session."),
                    (d = new _.default({
                      sessionId: s,
                      streamKey: u,
                      serverId: f,
                      initialLayout: b,
                      analyticsContext: m,
                      isStreamer: null != N[u],
                      parentMediaSessionId: C.default.getMediaSessionId(),
                    })),
                    (V[t] = d);
                }
                (R = []),
                  y.default
                    .getMediaEngine()
                    .on(l.MediaEngineEvent.ConnectionStats, M);
              },
              STREAM_SERVER_UPDATE: function (e) {
                let t = V[e.streamKey];
                if (null == t) return !1;
                t.connect(e.endpoint, e.token);
              },
              STREAM_UPDATE: function (e) {
                let { streamKey: t, viewerIds: n, paused: s } = e,
                  i = V[t];
                if (null == i) return !1;
                null != n && i.analyticsContext.trackViewerCount(n.length),
                  i.streamUpdate(s);
              },
              STREAM_DELETE: function (e) {
                let { streamKey: t } = e,
                  n = V[t];
                if (null == n) return !1;
                t === i &&
                  ((i = null),
                  y.default
                    .getMediaEngine()
                    .off(l.MediaEngineEvent.ConnectionStats, M)),
                  n.destroy("stream-end"),
                  delete V[t];
              },
              STREAM_STATS_UPDATE: function (e) {
                let { stats: t } = e;
                if (null == t) return !1;
                R.push(t), R.length > 30 && R.shift();
              },
              STREAM_LAYOUT_UPDATE: function (e) {
                let { layout: t } = e;
                (b = t), Object.values(V).forEach(e => e.layoutChange(t));
              },
            }
      );
    },
    278163: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getSystemAnalyticsInfo: function () {
            return g;
          },
        }),
        n("222007");
      var s = n("446674"),
        i = n("913144"),
        r = n("599110"),
        a = n("773336"),
        o = n("50885"),
        d = n("760190");
      let u = { hashes: {} };
      async function l() {
        if (!a.isPlatformEmbedded || !(0, a.isWindows)()) return [];
        await o.default.ensureModule("discord_media");
        let e = o.default.requireModule("discord_media"),
          t = await e.getSystemAnalyticsBlob();
        return t || [];
      }
      async function f() {
        try {
          let e = await l(),
            t = e.filter(e => u.hashes[e.name] !== e.hash);
          for (let { name: e, hash: n, data: s } of t)
            r.default.track(e, s),
              ((u = { hashes: { ...u.hashes } }).hashes[e] = n);
          t.length > 0 && c.emitChange();
        } catch (e) {}
      }
      class _ extends s.default.PersistedStore {
        initialize(e) {
          (u = null != e && "object" == typeof e.hashes ? e : { hashes: {} }),
            this.waitFor(d.default);
        }
        getState() {
          return u;
        }
        async info() {
          try {
            let e = await l(),
              t = e.find(e => "hardware_detected" === e.name);
            if (null == t) return null;
            return t.data;
          } catch (e) {}
        }
      }
      (_.displayName = "SystemAnalyticsStore"),
        (_.persistKey = "SystemAnalyticsStore");
      let c = new _(i.default, {
        START_SESSION: function () {
          return f(), !1;
        },
      });
      function g() {
        return c.info();
      }
    },
    585722: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return p;
          },
        }),
        n("222007"),
        n("424973");
      var s = n("917351"),
        i = n.n(s),
        r = n("446674"),
        a = n("913144"),
        o = n("404118"),
        d = n("282928"),
        u = n("402752"),
        l = n("474643"),
        f = n("49111"),
        _ = n("782340");
      let c = new Map(),
        g = [];
      function m(e, t) {
        var n, s;
        return null !==
          (s = null === (n = h(e)) || void 0 === n ? void 0 : n.get(t)) &&
          void 0 !== s
          ? s
          : g;
      }
      function h(e) {
        var t;
        return null !== (t = c.get(e)) && void 0 !== t ? t : new Map();
      }
      function v(e, t, n) {
        let s = h(e);
        s.set(t, n), c.set(e, s);
      }
      class E extends r.default.Store {
        getFirstUpload(e, t) {
          let n = m(e, t);
          return n.length > 0 ? n[0] : null;
        }
        hasAdditionalUploads(e, t) {
          var n;
          return (null !== (n = m(e, t).length) && void 0 !== n ? n : 0) > 1;
        }
        getUploads(e, t) {
          return m(e, t);
        }
        getUploadCount(e, t) {
          var n;
          return null !== (n = m(e, t).length) && void 0 !== n ? n : 0;
        }
        getUpload(e, t, n) {
          return m(e, n).find(e => e.id === t);
        }
        findUpload(e, t, n) {
          return m(e, t).find(n);
        }
      }
      E.displayName = "UploadAttachmentStore";
      var p = new E(a.default, {
        UPLOAD_ATTACHMENT_POP_FILE: function (e) {
          let { channelId: t } = e,
            n = [...m(t, l.DraftType.ChannelMessage)];
          n.shift(), v(t, l.DraftType.ChannelMessage, n);
        },
        UPLOAD_ATTACHMENT_ADD_FILES: e => {
          let {
              files: t,
              channelId: n,
              showLargeMessageDialog: s,
              draftType: r,
            } = e,
            a = [...m(n, r)];
          if (
            a.length + t.length > f.MAX_UPLOAD_COUNT &&
            r !== l.DraftType.SlashCommand &&
            r !== l.DraftType.ApplicationLauncherCommand
          ) {
            o.default.show({
              title: _.default.Messages.ATTACHMENT_TOO_MANY_ERROR_TITLE,
              body: _.default.Messages.ATTACHMENT_TOO_MANY_ERROR_MESSAGE.format(
                { limit: f.MAX_UPLOAD_COUNT }
              ),
            });
            return;
          }
          i.forEach(t, e => {
            let t = new d.CloudUpload(e, n, s, a.length);
            t.upload(), a.push(t);
          }),
            v(n, r, a);
        },
        UPLOAD_ATTACHMENT_UPDATE_FILE: function (e) {
          let {
              channelId: t,
              id: n,
              filename: s,
              description: i,
              spoiler: r,
              thumbnail: a,
              draftType: o,
            } = e,
            d = [...m(t, o)],
            u = d.map(
              e => (
                e.id === n &&
                  (void 0 !== s && (e.filename = s),
                  void 0 !== r && (e.spoiler = r),
                  void 0 !== i && (e.description = i),
                  void 0 !== a && (e.isThumbnail = a)),
                e
              )
            );
          v(t, o, u);
        },
        UPLOAD_ATTACHMENT_REMOVE_FILE: function (e) {
          let { channelId: t, id: n, draftType: s } = e,
            i = [...m(t, s)],
            r = i.findIndex(e =>
              (0, u.doesImageMatchUpload)({ uri: n, filename: n }, e)
            );
          if (r > -1) {
            let e = i.splice(r, 1)[0];
            e.cancel(), v(t, s, i);
          }
        },
        UPLOAD_ATTACHMENT_REMOVE_FILES: function (e) {
          let { channelId: t, attachmentIds: n, draftType: s } = e,
            i = [...m(t, s)];
          n.forEach(e => {
            let t = i.findIndex(t => e === t.id);
            if (t > -1) {
              let e = i.splice(t, 1)[0];
              e.cancel();
            }
          }),
            v(t, s, i);
        },
        UPLOAD_ATTACHMENT_CLEAR_ALL_FILES: function (e) {
          let { channelId: t, draftType: n } = e;
          v(t, n, []);
        },
        UPLOAD_ATTACHMENT_SET_UPLOADS: function (e) {
          let { channelId: t, uploads: n, draftType: s } = e;
          v(t, s, n);
        },
        UPLOAD_ATTACHMENT_SET_FILE: function (e) {
          let { channelId: t, id: n, file: s, draftType: i } = e,
            r = [...m(t, i)],
            a = r.filter(e => e.id !== n),
            o = new d.CloudUpload(s, t);
          o.upload(), a.push(o), v(t, i, a);
        },
        SIDEBAR_CLOSE: function (e) {
          let { baseChannelId: t } = e;
          v(t, l.DraftType.FirstThreadMessage, []);
        },
      });
    },
    26092: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return P;
          },
        });
      var s = n("917351"),
        i = n.n(s),
        r = n("446674"),
        a = n("913144"),
        o = n("697218"),
        d = n("49111");
      let u = d.FormStates.CLOSED,
        l = null,
        f = null,
        _ = {},
        c = {},
        g = {},
        m = null,
        h = null,
        v = !1,
        E = !1,
        p = null,
        y = null,
        T = null,
        C = [],
        S = null,
        I = null;
      function A(e) {
        var t, n, s, i, r, a;
        let l = o.default.getCurrentUser();
        if (null == l) return D();
        (f = null !== (t = e.section) && void 0 !== t ? t : f),
          (S = null !== (n = e.section) && void 0 !== n ? n : f),
          null != e.subsection && null != f && (_[f] = e.subsection),
          null != e.scrollPosition && null != f && (c[f] = e.scrollPosition),
          (E = !!e.openWithoutBackstack),
          (u = d.FormStates.OPEN),
          (g = {}),
          (h = {
            ...(m = {
              [d.UserSettingsSections.ACCOUNT]: {
                userId: l.id,
                username: l.username,
                discriminator: l.discriminator,
                email: l.email,
                avatar: l.avatar,
                password: "",
                newPassword: null,
                claimed: l.isClaimed(),
              },
            }),
          }),
          (y = null !== (s = e.onClose) && void 0 !== s ? s : null),
          (T = null !== (i = e.analyticsLocation) && void 0 !== i ? i : null),
          (C = null !== (r = e.analyticsLocations) && void 0 !== r ? r : []),
          (I = null !== (a = e.impressionSource) && void 0 !== a ? a : null);
      }
      function D() {
        (u = d.FormStates.CLOSED),
          (v = !1),
          (m = null),
          (S = null),
          (h = null),
          (l = null),
          (f = null),
          (_ = {}),
          (c = {}),
          (y = null),
          (T = null),
          (C = []),
          (I = null);
      }
      function N() {
        (u = d.FormStates.OPEN), (g = {});
      }
      class O extends r.default.Store {
        initialize() {
          this.waitFor(o.default);
        }
        hasChanges() {
          return (
            null != h &&
            null != m &&
            (!!this.isOpen() || p === d.DrawerTabTypes.USER_SETTINGS) &&
            !i.isEqual(h, m)
          );
        }
        isOpen() {
          return v;
        }
        getPreviousSection() {
          return l;
        }
        getSection() {
          return f;
        }
        getSubsection() {
          return null != f ? _[f] : null;
        }
        getScrollPosition() {
          return null != f ? c[f] : null;
        }
        shouldOpenWithoutBackstack() {
          return E;
        }
        getProps() {
          return {
            submitting: u === d.FormStates.SUBMITTING,
            section: f,
            subsection: null != f ? _[f] : null,
            scrollPosition: null != f ? c[f] : null,
            settings: h,
            errors: g,
            hasChanges: this.hasChanges(),
            openWithoutBackstack: E,
            analyticsLocation: T,
            analyticsLocations: C,
            initialSection: S,
            impressionSource: I,
          };
        }
        get onClose() {
          return y;
        }
      }
      O.displayName = "UserSettingsModalStore";
      var P = new O(a.default, {
        USER_SETTINGS_MODAL_OPEN: function (e) {
          (v = !0), A(e);
        },
        USER_SETTINGS_MODAL_INIT: A,
        USER_SETTINGS_MODAL_CLOSE: D,
        LOGOUT: D,
        USER_SETTINGS_MODAL_SUBMIT: function () {
          u = d.FormStates.SUBMITTING;
        },
        USER_SETTINGS_MODAL_SUBMIT_FAILURE: function (e) {
          var t;
          if (u !== d.FormStates.SUBMITTING) return !1;
          (u = d.FormStates.OPEN),
            (f = d.UserSettingsSections.ACCOUNT),
            (g = null !== (t = e.errors) && void 0 !== t ? t : {});
        },
        USER_SETTINGS_MODAL_SET_SECTION: function (e) {
          var t;
          (l = f),
            (f = e.section),
            (T = null),
            (C = null !== (t = e.analyticsLocations) && void 0 !== t ? t : []),
            null != e.subsection && (_[f] = e.subsection);
        },
        USER_SETTINGS_MODAL_CLEAR_SUBSECTION: function (e) {
          let { forSection: t } = e;
          null != t ? delete _[t] : null != f && delete _[f];
        },
        USER_SETTINGS_MODAL_CLEAR_SCROLL_POSITION: function (e) {
          let { forSection: t } = e;
          null != t ? delete c[t] : null != f && delete c[f];
        },
        USER_SETTINGS_MODAL_UPDATE_ACCOUNT: function (e) {
          let { settings: t } = e;
          null == h && (h = {});
          let n = h[d.UserSettingsSections.ACCOUNT];
          h[d.UserSettingsSections.ACCOUNT] = { ...n, ...t };
        },
        USER_SETTINGS_MODAL_SUBMIT_COMPLETE: N,
        USER_SETTINGS_MODAL_RESET: function () {
          let e = o.default.getCurrentUser();
          N(),
            null != e &&
              (h = {
                ...(m = {
                  [d.UserSettingsSections.ACCOUNT]: {
                    userId: e.id,
                    username: e.username,
                    discriminator: e.discriminator,
                    email: e.email,
                    avatar: e.avatar,
                    password: "",
                    newPassword: null,
                    claimed: e.isClaimed(),
                  },
                }),
              });
        },
        DRAWER_SELECT_TAB: function (e) {
          return (
            (p = e.tab),
            null == f &&
              p === d.DrawerTabTypes.USER_SETTINGS &&
              A({
                type: "USER_SETTINGS_MODAL_INIT",
                section: null,
                subsection: null,
                scrollPosition: null,
                openWithoutBackstack: !1,
              })
          );
        },
      });
    },
    555035: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        }),
        n("222007"),
        n("808653");
      var s = n("446674"),
        i = n("913144"),
        r = n("353927");
      let a = null,
        o = null,
        d = {};
      function u(e, t) {
        let n =
            arguments.length > 2 && void 0 !== arguments[2]
              ? arguments[2]
              : null,
          s = d[e];
        if (null == s) return;
        let i = s[null != t ? t : "null"];
        if (null != i) {
          for (let e of Object.values(r.MediaEngineContextTypes))
            (n === e || null == n) && delete i[e];
          d[e][null != t ? t : "null"] = i;
        }
      }
      class l extends s.default.Store {
        getStreamId(e, t) {
          var n, s, i;
          let a =
            arguments.length > 2 && void 0 !== arguments[2]
              ? arguments[2]
              : r.MediaEngineContextTypes.DEFAULT;
          return null === (i = d[e]) || void 0 === i
            ? void 0
            : null === (s = i[null != t ? t : "null"]) || void 0 === s
              ? void 0
              : null === (n = s[a]) || void 0 === n
                ? void 0
                : n.streamId;
        }
        getUserStreamData(e, t) {
          var n, s;
          let i =
            arguments.length > 2 && void 0 !== arguments[2]
              ? arguments[2]
              : r.MediaEngineContextTypes.DEFAULT;
          return null === (s = d[e]) || void 0 === s
            ? void 0
            : null === (n = s[null != t ? t : "null"]) || void 0 === n
              ? void 0
              : n[i];
        }
      }
      l.displayName = "VideoStreamStore";
      var f = new l(i.default, {
        CONNECTION_OPEN: function (e) {
          let { user: t, sessionId: n } = e;
          (a = t.id), (o = n);
        },
        OVERLAY_INITIALIZE: function (e) {
          let { user: t, sessionId: n } = e;
          (a = t.id), (o = n);
        },
        RTC_CONNECTION_VIDEO: function (e) {
          let { userId: t, guildId: n, streamId: s, context: i } = e;
          null != s
            ? !(function (e, t, n, s) {
                var i;
                !(e in d) && (d[e] = {});
                let r =
                  null !== (i = d[e][null != t ? t : "null"]) && void 0 !== i
                    ? i
                    : {};
                d[e][null != t ? t : "null"] = { ...r, [s]: { streamId: n } };
              })(t, n, s, i)
            : u(t, n, i);
        },
        VOICE_STATE_UPDATES: function (e) {
          let { voiceStates: t } = e;
          return t.reduce((e, t) => {
            var n;
            let { userId: s, sessionId: i, channelId: r, guildId: l } = t;
            if (null == r && s === a) {
              if (i !== o) return e;
              d = {};
            } else {
              if (
                null != r ||
                (null === (n = d[s]) || void 0 === n
                  ? void 0
                  : n[null != l ? l : "null"]) == null
              )
                return e;
              u(s, l);
            }
            return !0;
          }, !1);
        },
      });
    },
    167726: function (e, t, n) {
      "use strict";
      let s, i, r;
      n.r(t),
        n.d(t, {
          default: function () {
            return p;
          },
        }),
        n("222007"),
        n("860677");
      var a = n("446674"),
        o = n("913144"),
        d = n("737292"),
        u = n("845579"),
        l = n("374363"),
        f = n("686470");
      let _ = { applicationId: null, originURL: null },
        c = _,
        g = new Set(),
        m = !1;
      function h() {
        r = null;
      }
      function v() {
        (s = null),
          (i = null),
          (g = new Set()),
          (c.applicationId = null),
          (c.originURL = null),
          h();
      }
      class E extends a.default.PersistedStore {
        initialize(e) {
          (s = (c = { ...(null != e ? e : _) }).applicationId),
            (i = c.originURL),
            this.waitFor(l.default, d.default),
            this.syncWith([l.default, d.default], () => !0),
            f.default.whenInitialized(() => {
              m = !0;
            });
        }
        inTestModeForApplication(e) {
          return s === e;
        }
        inTestModeForEmbeddedApplication(e) {
          return s === e && null != i;
        }
        shouldDisplayTestMode(e) {
          return (
            u.DeveloperMode.getSetting() && this.inTestModeForApplication(e)
          );
        }
        getState() {
          return c;
        }
        get isTestMode() {
          return null != s;
        }
        get isFetchingAuthorization() {
          return g.size > 0;
        }
        get testModeEmbeddedApplicationId() {
          return null != i ? s : null;
        }
        get testModeApplicationId() {
          return s;
        }
        get testModeOriginURL() {
          return i;
        }
        get error() {
          return r;
        }
        whenInitialized(e) {
          this.addConditionalChangeListener(() => {
            if (m) return setImmediate(e), !1;
          });
        }
      }
      (E.displayName = "TestModeStore"), (E.persistKey = "TestModeStore");
      var p = new E(o.default, {
        DEVELOPER_TEST_MODE_AUTHORIZATION_START: function (e) {
          let { applicationId: t } = e;
          g.add(t), (r = null);
        },
        DEVELOPER_TEST_MODE_AUTHORIZATION_SUCCESS: function (e) {
          let { applicationId: t, originURL: n } = e;
          (s = t),
            (i = n),
            g.delete(t),
            (r = null),
            (c.applicationId = t),
            (c.originURL = n);
        },
        DEVELOPER_TEST_MODE_AUTHORIZATION_FAIL: function (e) {
          let { applicationId: t, error: n } = e;
          g.delete(t), (r = n);
        },
        OVERLAY_INITIALIZE: function (e) {
          let { testModeApplicationId: t } = e;
          s = t;
        },
        DEVELOPER_TEST_MODE_RESET_ERROR: h,
        LOGOUT: v,
        DEVELOPER_TEST_MODE_RESET: v,
      });
    },
    703370: function (e, t, n) {
      "use strict";
      let s;
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var i = n("446674"),
        r = n("913144"),
        a = n("546463"),
        o = n("568307");
      class d extends i.default.Store {
        getGameForPID(e) {
          var t;
          if (__OVERLAY__ || null == e) return null;
          let n =
            null === (t = o.default.getGameForPID(e)) || void 0 === t
              ? void 0
              : t.name;
          return a.default.getGameByName(n);
        }
        getGame() {
          return __OVERLAY__ ? s : null;
        }
      }
      d.displayName = "OverlayRunningGameStore";
      var u = new d(r.default, {
        OVERLAY_INITIALIZE: function (e) {
          s = e.currentGame;
        },
        OVERLAY_SET_ASSOCIATED_GAME: function (e) {
          s = e.associatedGame;
        },
      });
    },
    901165: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return H;
          },
        }),
        n("222007"),
        n("70102");
      var s = n("446674"),
        i = n("95410"),
        r = n("913144"),
        a = n("741148"),
        o = n("121338"),
        d = n("116949"),
        u = n("233069"),
        l = n("271938"),
        f = n("42203"),
        _ = n("923959"),
        c = n("505507"),
        g = n("162771"),
        m = n("773336"),
        h = n("50885"),
        v = n("819068"),
        E = n("471671"),
        p = n("49111"),
        y = n("6791");
      let T = Object.freeze({
          selectedGuildId: null,
          selectedChannelId: null,
          displayUserMode: p.OverlayDisplayUsers.ALWAYS,
          displayNameMode: p.OverlayDisplayNames.ALWAYS,
          avatarSizeMode: p.OverlayAvatarSizes.LARGE,
          notificationPositionMode: p.OverlayNotificationPositions.TOP_LEFT,
          textChatNotifications: p.OverlayNotificationTextChatTypes.ENABLED,
          disableExternalLinkAlert: !1,
          disablePinTutorial: !1,
          showKeybindIndicators: !0,
          textWidgetOpacity: y.OpacityBounds.LOWER,
        }),
        C = null,
        S = {},
        I = null,
        A = new Set(),
        D = !1,
        N = null,
        O = !1,
        P = !1,
        b = new Set(),
        V = !1;
      function R(e) {
        let t = S[e];
        return null == t && (t = S[e] = { ...T }), t;
      }
      let k = { ...T },
        M = new Set([
          "AUDIO_SET_INPUT_DEVICE",
          "AUDIO_SET_INPUT_VOLUME",
          "AUDIO_SET_LOCAL_VIDEO_DISABLED",
          "AUDIO_SET_LOCAL_VOLUME",
          "AUDIO_SET_MODE",
          "AUDIO_SET_NOISE_CANCELLATION",
          "AUDIO_SET_NOISE_SUPPRESSION",
          "AUDIO_SET_OUTPUT_DEVICE",
          "AUDIO_SET_OUTPUT_VOLUME",
          "AUDIO_TOGGLE_LOCAL_MUTE",
          "AUDIO_TOGGLE_SELF_DEAF",
          "AUDIO_TOGGLE_SELF_MUTE",
          "BILLING_SUBSCRIPTION_UPDATE_SUCCESS",
          "CATEGORY_COLLAPSE",
          "CATEGORY_EXPAND",
          "CHANNEL_ACK",
          "CHANNEL_PRELOAD",
          "GIFT_CODE_REDEEM",
          "GIFT_CODE_REDEEM_FAILURE",
          "GIFT_CODE_REDEEM_SUCCESS",
          "HOTSPOT_HIDE",
          "INVITE_MODAL_CLOSE",
          "LAYOUT_CREATE",
          "LAYOUT_CREATE_WIDGETS",
          "LAYOUT_DELETE_ALL_WIDGETS",
          "LAYOUT_DELETE_WIDGET",
          "LAYOUT_SET_PINNED",
          "LAYOUT_SET_TOP_WIDGET",
          "LAYOUT_UPDATE_WIDGET",
          "LOAD_MESSAGES",
          "LOAD_MESSAGES_FAILURE",
          "LOAD_MESSAGES_SUCCESS",
          "MEDIA_ENGINE_SET_GO_LIVE_SOURCE",
          "OVERLAY_ACTIVATE_REGION",
          "OVERLAY_DEACTIVATE_ALL_REGIONS",
          "OVERLAY_MESSAGE_EVENT_ACTION",
          "OVERLAY_SET_AVATAR_SIZE_MODE",
          "OVERLAY_SET_CLICK_ZONES",
          "OVERLAY_SET_DISPLAY_NAME_MODE",
          "OVERLAY_SET_DISPLAY_USER_MODE",
          "OVERLAY_SET_INPUT_LOCKED",
          "OVERLAY_SET_NOTIFICATION_POSITION_MODE",
          "OVERLAY_SET_TEXT_CHAT_NOTIFICATION_MODE",
          "OVERLAY_SET_SHOW_KEYBIND_INDICATORS",
          "OVERLAY_SET_TEXT_WIDGET_OPACITY",
          "OVERLAY_SET_UI_LOCKED",
          "OVERLAY_NOTIFY_READY_TO_SHOW",
          "PREMIUM_PAYMENT_ERROR_CLEAR",
          "PREMIUM_PAYMENT_MODAL_CLOSE",
          "PREMIUM_PAYMENT_MODAL_OPEN",
          "PREMIUM_PAYMENT_SUBSCRIBE_FAIL",
          "PREMIUM_PAYMENT_SUBSCRIBE_SUCCESS",
          "PREMIUM_PAYMENT_UPDATE_FAIL",
          "PREMIUM_PAYMENT_UPDATE_SUCCESS",
          "PREMIUM_REQUIRED_MODAL_CLOSE",
          "PREMIUM_REQUIRED_MODAL_OPEN",
          "PURCHASE_CONFIRMATION_MODAL_CLOSE",
          "PURCHASE_CONFIRMATION_MODAL_OPEN",
          "SKU_PURCHASE_CLEAR_ERROR",
          "SKU_PURCHASE_FAIL",
          "SKU_PURCHASE_MODAL_CLOSE",
          "SKU_PURCHASE_MODAL_OPEN",
          "SKU_PURCHASE_PREVIEW_FETCH_SUCCESS",
          "SKU_PURCHASE_SHOW_CONFIRMATION_STEP",
          "SKU_PURCHASE_START",
          "SKU_PURCHASE_SUCCESS",
          "STREAM_CLOSE",
          "STREAM_START",
          "VOICE_CHANNEL_SELECT",
          "USER_SETTINGS_PROTO_ENQUEUE_UPDATE",
          "USER_SETTINGS_PROTO_LOAD_IF_NECESSARY",
        ]),
        w = new Set([
          ...M.values(),
          "ACTIVITY_INVITE_MODAL_CLOSE",
          "CALL_DELETE",
          "CHANNEL_COLLAPSE",
          "CHANNEL_SELECT",
          "GUILD_SOUNDBOARD_SOUND_PLAY_LOCALLY",
          "OVERLAY_CALL_PRIVATE_CHANNEL",
          "OVERLAY_JOIN_GAME",
          "OVERLAY_NOTIFICATION_EVENT",
          "OVERLAY_SELECT_CALL",
          "OVERLAY_SET_NOT_IDLE",
          "OVERLAY_SOUNDBOARD_SOUNDS_FETCH_REQUEST",
          "OVERLAY_WIDGET_CHANGED",
          "SOUNDBOARD_SET_OVERLAY_ENABLED",
          "STREAM_STOP",
        ]);
      function L() {
        if (!__OVERLAY__) return !1;
        let e = C === (0, v.getPID)(),
          t = A.has((0, v.getPID)()) || b.size > 0;
        e && t ? (0, a.focus)(window, !0) : (0, a.focus)(window, !1);
      }
      function U() {
        if (C !== (0, v.getPID)()) return !1;
        b.clear();
      }
      function G(e) {
        let t = (0, v.getPID)();
        if (null == e.pid || e.pid === t)
          switch (e.type) {
            case p.OverlayEventTypes.STORAGE_SYNC:
              s.default.PersistedStore.initializeAll(e.states);
              break;
            case p.OverlayEventTypes.DISPATCH:
              null != e.payloads &&
                ((O = !0),
                e.payloads.forEach(e =>
                  (function (e) {
                    var t, n, s, i, a, l;
                    if (
                      "OVERLAY_INITIALIZE" === e.type &&
                      ((null == (l = e).version && 1 === v.OVERLAY_VERSION) ||
                        l.version === v.OVERLAY_VERSION ||
                        (r.default.dispatch({
                          type: "OVERLAY_INCOMPATIBLE_APP",
                        }),
                        (0, o.disconnect)(),
                        0))
                    )
                      P = !0;
                    if (P)
                      switch (e.type) {
                        case "CHANNEL_CREATE":
                        case "THREAD_CREATE":
                        case "THREAD_UPDATE":
                        case "CHANNEL_DELETE":
                        case "THREAD_DELETE":
                          let f = (0, u.createChannelRecord)(e.channel);
                          if (!u.ALL_CHANNEL_TYPES.has(f.type)) break;
                          r.default.dispatch({ type: e.type, channel: f });
                          break;
                        case "CHANNEL_UPDATES":
                          r.default.dispatch({
                            type: e.type,
                            channels: e.channels.map(e =>
                              (0, u.createChannelRecord)(e)
                            ),
                          });
                          break;
                        case "CONNECTION_OPEN_SUPPLEMENTAL":
                          (e.lazyPrivateChannels = (
                            null !== (t = e.lazyPrivateChannels) && void 0 !== t
                              ? t
                              : []
                          ).map(e => (0, u.createChannelRecord)(e))),
                            r.default.dispatch(e);
                          break;
                        case "THREAD_LIST_SYNC":
                          r.default.dispatch({
                            ...e,
                            threads: e.threads.map(e =>
                              (0, u.createChannelRecord)(e)
                            ),
                          });
                          break;
                        case "GUILD_CREATE":
                          let _ = e => (0, u.createChannelRecord)(e),
                            c = e.guild;
                          (c.channels =
                            null !==
                              (i =
                                null === (n = c.channels) || void 0 === n
                                  ? void 0
                                  : n.map(_)) && void 0 !== i
                              ? i
                              : null),
                            (c.threads =
                              null === (s = c.threads) || void 0 === s
                                ? void 0
                                : s.map(_)),
                            null != c.channelUpdates &&
                              (c.channelUpdates.writes =
                                null === (a = c.channelUpdates.writes) ||
                                void 0 === a
                                  ? void 0
                                  : a.map(_)),
                            r.default.dispatch({
                              type: "GUILD_CREATE",
                              guild: c,
                            });
                          break;
                        case "USER_SETTINGS_PROTO_UPDATE":
                          r.default.dispatch({
                            ...e,
                            settings: {
                              proto: (0, d.b64ToProtoWithType)(
                                e.settings.type,
                                e.settings.proto
                              ),
                              type: e.settings.type,
                            },
                          });
                          break;
                        default:
                          r.default.dispatch(e);
                      }
                  })(e)
                ),
                (O = !1));
          }
      }
      class F extends s.default.PersistedStore {
        initialize(e) {
          if (
            (this.waitFor(l.default),
            this.syncWith([l.default], () => {
              let e = l.default.getId();
              k = null != e ? R(e) : { ...T };
            }),
            __OVERLAY__ &&
              (m.isPlatformEmbedded &&
                h.default.requireModule("discord_overlay2"),
              A.delete((0, v.getPID)())),
            null != e)
          ) {
            S = e;
            let t = l.default.getId();
            null != t &&
              (null == (k = R(t)).textChatNotifications &&
                (k.textChatNotifications = T.textChatNotifications),
              null == k.textWidgetOpacity &&
                (k.textWidgetOpacity = T.textWidgetOpacity));
          }
        }
        getState() {
          return S;
        }
        isUILocked(e) {
          return !A.has(e);
        }
        isInstanceUILocked() {
          if (!__OVERLAY__)
            throw Error(
              "OverlayStore: App instance should never call .isInstanceUILocked()"
            );
          return !A.has((0, v.getPID)());
        }
        isInstanceFocused() {
          if (!__OVERLAY__)
            throw Error(
              "OverlayStore: App instance should never call .isInstanceFocused()"
            );
          return C === (0, v.getPID)();
        }
        isFocused(e) {
          return C === e;
        }
        isPinned(e) {
          let t = c.default.getLayout(v.OVERLAY_LAYOUT_ID);
          if (null != t) {
            let n = t.widgets.find(t => {
              let n = c.default.getWidget(t);
              return (null != n && n.type === e && !!n.pinned) || !1;
            });
            return null != n;
          }
          return !1;
        }
        getSelectedGuildId() {
          return k.selectedGuildId;
        }
        getSelectedChannelId() {
          return k.selectedChannelId;
        }
        getSelectedCallId() {
          return I;
        }
        getDisplayUserMode() {
          return k.displayUserMode;
        }
        getDisplayNameMode() {
          return k.displayNameMode;
        }
        getAvatarSizeMode() {
          return k.avatarSizeMode;
        }
        getNotificationPositionMode() {
          return k.notificationPositionMode;
        }
        getTextChatNotificationMode() {
          return k.notificationPositionMode ===
            p.OverlayNotificationPositions.DISABLED
            ? p.OverlayNotificationTextChatTypes.DISABLED
            : k.textChatNotifications;
        }
        get showKeybindIndicators() {
          return null == k.showKeybindIndicators || k.showKeybindIndicators;
        }
        getDisableExternalLinkAlert() {
          return k.disableExternalLinkAlert;
        }
        getFocusedPID() {
          return C;
        }
        get initialized() {
          return P;
        }
        get incompatibleApp() {
          return D;
        }
        getActiveRegions() {
          return b;
        }
        getTextWidgetOpacity() {
          return k.textWidgetOpacity;
        }
        isPreviewingInGame() {
          return V;
        }
      }
      (F.displayName = "OverlayStore"),
        (F.persistKey = "OverlayStoreV2"),
        (F.migrations = [
          () => {
            let e = { ...i.default.get("OverlayStore") },
              { pinnedWidgets: t, positions: n, sizes: s, v: r, ...a } = e;
            return { ...T, ...(5 === r ? a : null) };
          },
          e => {
            let t = l.default.getId();
            if (null == e || null == t) return {};
            let n = { [t]: { ...e } };
            return n;
          },
        ]);
      var H = new F(r.default, {
        LOGOUT: function (e) {
          !e.isSwitchingAccount && (S = {});
        },
        MULTI_ACCOUNT_REMOVE_ACCOUNT: function (e) {
          e.userId in S && delete S[e.userId];
        },
        CONNECTION_CLOSED: function () {
          A.clear();
        },
        OVERLAY_START_SESSION: function () {
          r.default.addInterceptor(e => {
            if (O || !w.has(e.type)) return !1;
            if ("CHANNEL_SELECT" === e.type) {
              let { guildId: t, channelId: n } = e;
              return (
                null != n &&
                ((0, o.send)({
                  type: p.OverlayEventTypes.DISPATCH,
                  pid: (0, v.getPID)(),
                  token: (0, v.getRPCAuthToken)(),
                  payloads: [
                    {
                      type: "CHANNEL_PRELOAD",
                      guildId: t === p.ME ? null : t,
                      channelId: n,
                      context: p.CURRENT_APP_CONTEXT,
                    },
                    {
                      type: "OVERLAY_SELECT_CHANNEL",
                      guildId: t,
                      channelId: n,
                    },
                  ],
                }),
                !1)
              );
            }
            return (
              (0, o.send)({
                type: p.OverlayEventTypes.DISPATCH,
                pid: (0, v.getPID)(),
                token: (0, v.getRPCAuthToken)(),
                payloads: [e],
              }),
              !M.has(e.type)
            );
          }),
            (0, o.setReceiveEventHandler)(G, (0, v.getRPCAuthToken)()),
            (0, o.connect)(),
            (0, o.send)({
              type: p.OverlayEventTypes.CONNECT,
              pid: (0, v.getPID)(),
              token: (0, v.getRPCAuthToken)(),
            });
        },
        OVERLAY_INITIALIZE: function (e) {
          let { focusedPID: t } = e;
          C = t;
        },
        OVERLAY_READY: function () {
          let e = k.selectedGuildId,
            t = k.selectedChannelId;
          if (
            (null != e &&
              (!_.default.hasChannels(e) ||
                (null != t && !_.default.hasSelectableChannel(e, t))) &&
              ((e = null), (t = null)),
            null != t &&
              null == f.default.getChannel(t) &&
              ((e = null), (t = null)),
            null == e && null == t && (e = g.default.getGuildId()),
            null != e && null == t)
          ) {
            let n = _.default.getDefaultChannel(e);
            null != n && (t = n.id);
          }
          (k.selectedGuildId = e), (k.selectedChannelId = t);
        },
        OVERLAY_FOCUSED: function (e) {
          let { pid: t } = e;
          (C = t), L();
        },
        OVERLAY_SELECT_CHANNEL: function (e) {
          let { guildId: t, channelId: n } = e;
          (k.selectedGuildId = t), (k.selectedChannelId = n);
        },
        OVERLAY_SELECT_CALL: function (e) {
          let { callId: t } = e;
          I = t;
        },
        CALL_DELETE: function () {
          I = null;
        },
        LAYOUT_CREATE: function () {},
        OVERLAY_SET_DISPLAY_NAME_MODE: function (e) {
          let { mode: t } = e;
          k.displayNameMode = t;
        },
        OVERLAY_SET_DISPLAY_USER_MODE: function (e) {
          let { mode: t } = e;
          k.displayUserMode = t;
        },
        OVERLAY_SET_AVATAR_SIZE_MODE: function (e) {
          let { mode: t } = e;
          k.avatarSizeMode = t;
        },
        OVERLAY_SET_NOTIFICATION_POSITION_MODE: function (e) {
          let { mode: t } = e;
          k.notificationPositionMode = t;
        },
        OVERLAY_SET_TEXT_CHAT_NOTIFICATION_MODE: function (e) {
          let { mode: t } = e;
          k.textChatNotifications = t;
        },
        OVERLAY_SET_SHOW_KEYBIND_INDICATORS: function (e) {
          let { shouldShow: t } = e;
          k.showKeybindIndicators = t;
        },
        OVERLAY_SET_TEXT_WIDGET_OPACITY: function (e) {
          let { opacity: t } = e,
            n = k.textWidgetOpacity !== t;
          return (k.textWidgetOpacity = t), n;
        },
        OVERLAY_DISABLE_EXTERNAL_LINK_ALERT: function () {
          k.disableExternalLinkAlert = !0;
        },
        OVERLAY_INCOMPATIBLE_APP: function () {
          D = !0;
        },
        OVERLAY_SET_UI_LOCKED: function (e) {
          let { locked: t, pid: n } = e;
          t ? A.delete(n) : A.add(n), U(), L(), (V = !1);
        },
        OVERLAY_ACTIVATE_REGION: function (e) {
          let { region: t } = e;
          if (C !== (0, v.getPID)() || b.has(t)) return !1;
          b.add(t);
        },
        OVERLAY_DEACTIVATE_ALL_REGIONS: U,
        OVERLAY_SET_PREVIEW_IN_GAME_MODE: function (e) {
          V = e.isPreviewingInGame;
        },
        WINDOW_RESIZED: function () {
          if (__OVERLAY__) {
            let e = E.default.windowSize();
            !(0, v.validResolution)(e) && (V = !1);
          }
        },
        OVERLAY_SET_ASSOCIATED_GAME: function (e) {
          A.delete(e.previousAssociatedGamePID);
        },
      });
    },
    79798: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var s = n("37983");
      n("884691");
      var i = n("414456"),
        r = n.n(i),
        a = n("414055"),
        o = n("996554"),
        d = n("486952"),
        u = n("988268"),
        l = n("782340"),
        f = n("647431");
      let _ = e => {
        let t,
          {
            invertColor: n = !1,
            type: i = u.BotTagTypes.BOT,
            className: _,
            verified: c,
            hideIcon: g = !1,
            useRemSizes: m = !1,
            children: h = [],
          } = e,
          v = null,
          E = l.default.Messages.VERIFIED_BOT_TOOLTIP,
          { enabled: p } = o.AppLauncherOnboardingExperiment.useExperiment(
            { location: "Bot Tag" },
            { autoTrackExposure: !1 }
          );
        switch (i) {
          case u.BotTagTypes.SYSTEM_DM:
          case u.BotTagTypes.OFFICIAL:
            (c = !0),
              (E = l.default.Messages.DISCORD_SYSTEM_MESSAGE_BOT_TAG_TOOLTIP),
              (v = l.default.Messages.SYSTEM_DM_TAG_SYSTEM);
            break;
          case u.BotTagTypes.SERVER:
            v = l.default.Messages.BOT_TAG_SERVER;
            break;
          case u.BotTagTypes.ORIGINAL_POSTER:
            v = l.default.Messages.BOT_TAG_FORUM_ORIGINAL_POSTER;
            break;
          case u.BotTagTypes.STAFF_ONLY_DM:
            v = l.default.Messages.STAFF_BADGE_TOOLTIP;
            break;
          case u.BotTagTypes.AI:
            (c = !0),
              (E = l.default.Messages.AI_GENERATED_TOOLTIP),
              (v = l.default.Messages.AI_TAG);
            break;
          case u.BotTagTypes.REMIX:
            (c = !1), (v = l.default.Messages.REMIXING_TAG);
            break;
          case u.BotTagTypes.BOT:
          default:
            v = p ? l.default.Messages.APP_TAG : l.default.Messages.BOT_TAG_BOT;
        }
        let y = i === u.BotTagTypes.ORIGINAL_POSTER,
          T = i === u.BotTagTypes.REMIX,
          C = null;
        c &&
          (C = (0, s.jsx)(a.Tooltip, {
            text: E,
            align: "center",
            position: "top",
            children: e =>
              (0, s.jsx)(d.default, { ...e, className: f.botTagVerified }),
          })),
          (t =
            i === u.BotTagTypes.AI
              ? f.botTagAI
              : n
                ? f.botTagInvert
                : f.botTagRegular);
        let S = e =>
          (0, s.jsxs)("span", {
            ...e,
            className: r(_, t, m ? f.rem : f.px, {
              [f.botTagOP]: y,
              [f.botTagRemix]: T,
            }),
            children: [
              g ? null : C,
              h,
              (0, s.jsx)("span", { className: f.botText, children: v }),
            ],
          });
        switch (i) {
          case u.BotTagTypes.REMIX:
            return (0, s.jsx)(a.Tooltip, {
              text: l.default.Messages.REMIXING_DOWNLOAD_APP,
              position: "top",
              children: e => S(e),
            });
          case u.BotTagTypes.ORIGINAL_POSTER:
            return (0, s.jsx)(a.Tooltip, {
              text: l.default.Messages.BOT_TAG_FORUM_ORIGINAL_POSTER_TOOLTIP,
              position: "top",
              children: e => S(e),
            });
          default:
            return S();
        }
      };
      _.Types = u.BotTagTypes;
      var c = _;
    },
    313609: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        }),
        n("70102");
      var s = n("37983"),
        i = n("884691"),
        r = n("414456"),
        a = n.n(r),
        o = n("508330");
      let d = e =>
        new Promise((t, n) => {
          null == e && n(Error("No image src passed"));
          let s = new Image();
          (s.src = e), (s.onload = () => t(s)), (s.onerror = e => n(e));
        });
      class u extends i.PureComponent {
        componentDidUpdate(e) {
          e.src !== this.props.src &&
            this.setState({ loaded: !1 }, () => this.initialize());
        }
        initialize() {
          d(this.props.src).then(() => {
            !this.unmounting && this.setState({ loaded: !0 });
          });
        }
        componentWillUnmount() {
          this.unmounting = !0;
        }
        render() {
          let {
              className: e,
              src: t,
              alt: n,
              width: i,
              height: r,
              onLoad: d,
              style: u,
              imageClassName: l,
            } = this.props,
            { loaded: f } = this.state;
          return (0, s.jsx)("div", {
            className: e,
            style: { ...u, width: i, height: r },
            children: (0, s.jsx)("img", {
              className: a(o.image, l, { [o.loaded]: f }),
              width: i,
              height: r,
              src: t,
              alt: n,
              onLoad: d,
            }),
          });
        }
        constructor(e) {
          super(e),
            (this.unmounting = !1),
            (this.state = { loaded: !1 }),
            this.initialize();
        }
      }
      u.defaultProps = { width: 0, height: 0, alt: "" };
      var l = u;
    },
    725484: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        }),
        n("222007");
      var s,
        i,
        r = n("37983"),
        a = n("884691"),
        o = n("414456"),
        d = n.n(o),
        u = n("458960"),
        l = n("77078"),
        f = n("49111"),
        _ = n("603127");
      ((s = class extends a.Component {
        componentDidMount() {
          this.props.show && this.animate(1);
        }
        componentDidUpdate(e) {
          e.show !== this.props.show && this.animate(this.props.show ? 1 : 0);
        }
        getAnimatedStyle() {
          let { anim: e } = this,
            { reducedMotion: t } = this.context;
          return {
            opacity: e,
            transform: t.enabled
              ? void 0
              : [
                  {
                    translateY: e.interpolate({
                      inputRange: [0, 1],
                      outputRange: ["-100px", "0px"],
                    }),
                  },
                  { translateZ: 0 },
                ],
          };
        }
        render() {
          return (0, r.jsx)(u.default.a, {
            href: f.Routes.INDEX,
            target: "_blank",
            rel: "noopener",
            className: d(_.logo, this.props.className),
            style: this.getAnimatedStyle(),
          });
        }
        constructor(...e) {
          super(...e),
            (this.anim = new u.default.Value(0)),
            (this.animate = e => {
              u.default
                .spring(this.anim, { toValue: e, friction: 10, tension: 100 })
                .start();
            });
        }
      }).contextType = l.AccessibilityPreferencesContext),
        (i = s);
    },
    331756: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return T;
          },
        });
      var s = n("37983"),
        i = n("884691"),
        r = n("414456"),
        a = n.n(r),
        o = n("669491"),
        d = n("769846"),
        u = n("77078"),
        l = n("659500"),
        f = n("159885"),
        _ = n("470074"),
        c = n("261147"),
        g = n("401059"),
        m = n("289382"),
        h = n("49111"),
        v = n("606474");
      let E = (0, f.cssValueToNumber)(
          d.default.WAVE_SPLASH_RESPONSIVE_WIDTH_MOBILE
        ),
        p = 1 / 120;
      class y extends i.Component {
        componentDidMount() {
          this.initialize();
        }
        componentDidUpdate(e) {
          let { waveState: t } = this.props;
          t === m.WaveStates.FILLING && t !== e.waveState && this.waveFill();
        }
        componentWillUnmount() {
          this.terminate();
        }
        initialize() {
          this.children.forEach(e => e.initialize()),
            this.bindEvents(),
            this.resizeCanvas(),
            document.hidden && this.delayedPause();
        }
        terminate() {
          this.pause(),
            this.unbindEvents(),
            this.children.forEach(e => e.terminate());
        }
        bindEvents() {
          window.addEventListener("resize", this.resizeCanvas, !1),
            window.addEventListener("blur", this.delayedPause, !1),
            window.addEventListener("focus", this.play, !1),
            document.addEventListener(
              "visibilitychange",
              this.handleVisibilityChange,
              !1
            ),
            l.ComponentDispatch.subscribe(
              h.ComponentActions.WAVE_EMPHASIZE,
              this.handleWaveEmphasize
            );
        }
        unbindEvents() {
          window.removeEventListener("resize", this.resizeCanvas, !1),
            window.removeEventListener("blur", this.delayedPause, !1),
            window.removeEventListener("focus", this.play, !1),
            document.removeEventListener(
              "visibilitychange",
              this.handleVisibilityChange,
              !1
            ),
            l.ComponentDispatch.unsubscribe(
              h.ComponentActions.WAVE_EMPHASIZE,
              this.handleWaveEmphasize
            );
        }
        advanceTransitionalState() {
          let { waveState: e } = this.props;
          (e === m.WaveStates.INITIAL || e === m.WaveStates.FILLING) &&
            this.updateWaveState(e + 1);
        }
        waveFill() {
          this._isPlaying
            ? this.children.forEach(e => e.fill())
            : this.updateWaveState(m.WaveStates.FILLED);
        }
        updateAnimation(e) {
          this.children.forEach(t => t.update(e));
        }
        renderAnimation() {
          let { canvasFillStyle: e } = this.props,
            { canvasContext: t } = this;
          null != t &&
            ((t.fillStyle = e),
            t.fillRect(0, 0, this.width, this.height),
            this.children.forEach(e => e.render(t)));
        }
        render() {
          let { waveState: e, hideFallback: t, embedded: n } = this.props;
          return (0, s.jsx)(u.AccessibilityPreferencesContext.Consumer, {
            children: i => {
              let { reducedMotion: r } = i;
              return r.enabled
                ? (0, s.jsx)("div", {
                    className: a(v.fallbackImage, {
                      [v.embedded]: n,
                      [v.visible]: !t && e >= m.WaveStates.ENTERED,
                    }),
                  })
                : (0, s.jsx)("canvas", {
                    className: a(v.canvas, { [v.embedded]: n }),
                    ref: this.setCanvas,
                  });
            },
          });
        }
        constructor(e) {
          super(e),
            (this.width = 0),
            (this.height = 0),
            (this.children = []),
            (this.ratio = 0),
            (this._lastTick = 0),
            (this._isPlaying = !1),
            (this._reqAnimId = null),
            (this.setCanvas = e => {
              var t;
              if (null == e) return;
              (this.canvas = e),
                (this.canvasContext = this.canvas.getContext("2d"));
              let n =
                  null !== (t = window.devicePixelRatio) && void 0 !== t
                    ? t
                    : 1,
                s =
                  this.canvasContext.webkitBackingStorePixelRatio ||
                  this.canvasContext.mozBackingStorePixelRatio ||
                  this.canvasContext.msBackingStorePixelRatio ||
                  this.canvasContext.oBackingStorePixelRatio ||
                  this.canvasContext.backingStorePixelRatio ||
                  1;
              (this.ratio = n / s), this.resizeCanvas();
            }),
            (this.resizeCanvas = () => {
              (this.width = window.innerWidth),
                (this.height = window.innerHeight);
              let {
                canvas: e,
                canvasContext: t,
                width: n,
                height: s,
                ratio: i,
              } = this;
              null != e &&
                null != t &&
                ((e.width = n * i),
                (e.height = s * i),
                (e.style.width = n + "px"),
                (e.style.height = s + "px"),
                t.scale(i, i)),
                n <= E ? this.pause() : this.play(),
                this.wave.resizeWave(),
                this.renderAnimation();
            }),
            (this.handleVisibilityChange = () => {
              document.hidden ? this.delayedPause() : this.play();
            }),
            (this.play = () => {
              clearTimeout(this._pauseTimeout),
                !this._isPlaying && ((this._isPlaying = !0), this.run());
            }),
            (this.pause = () => {
              clearTimeout(this._pauseTimeout),
                (this._isPlaying = !1),
                null != this._reqAnimId &&
                  window.cancelAnimationFrame(this._reqAnimId),
                (this._reqAnimId = null),
                this.advanceTransitionalState();
            }),
            (this.delayedPause = () => {
              clearTimeout(this._pauseTimeout),
                (this._pauseTimeout = setTimeout(this.pause, 4e3));
            }),
            (this.updateWaveState = e => {
              let { updateWaveState: t } = this.props;
              t(e);
            }),
            (this.handleWaveEmphasize = () => {
              this.wave.emphasize();
            }),
            (this.run = () => {
              if (!this._isPlaying) return;
              if (0 === this._lastTick) {
                (this._lastTick = Date.now()),
                  (this._reqAnimId = requestAnimationFrame(this.run));
                return;
              }
              let e = Date.now(),
                t = Math.min((e - this._lastTick) / 1e3, 8 * p);
              for (; t > 0; ) {
                let e = t < p ? t : p;
                this.updateAnimation(e), (t -= e);
              }
              this.renderAnimation(),
                (this._lastTick = e),
                (this._reqAnimId = requestAnimationFrame(this.run));
            }),
            (this.wave = new g.default(this.updateWaveState)),
            (this.children = [new _.default(), new c.default(), this.wave]);
        }
      }
      y.defaultProps = { embedded: !1 };
      var T = e => {
        let t = (0, u.useToken)(o.default.unsafe_rawColors.PRIMARY_630).hex();
        return (0, s.jsx)(y, { canvasFillStyle: t, ...e });
      };
    },
    554054: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          Splash: function () {
            return h;
          },
          default: function () {
            return E;
          },
        }),
        n("222007");
      var s = n("37983"),
        i = n("884691"),
        r = n("414456"),
        a = n.n(r),
        o = n("769846"),
        d = n("313609"),
        u = n("159885"),
        l = n("725484"),
        f = n("331756"),
        _ = n("289382"),
        c = n("634984");
      let g = (0, u.cssValueToNumber)(
        o.default.WAVE_SPLASH_RESPONSIVE_WIDTH_MOBILE
      );
      function m(e, t) {
        let { innerWidth: n, innerHeight: s } = window;
        if (0 === e || 0 === t) return null;
        let i = t / e,
          r = n,
          a = Math.round(n * i);
        return (
          a < s && ((a = s), (r = Math.round(s * (i = e / t)))),
          { naturalWidth: e, naturalHeight: t, width: r, height: a }
        );
      }
      function h(e) {
        let { splash: t, children: n } = e,
          [{ width: r, height: o }, u] = i.useState({
            width: 0,
            height: 0,
            naturalHeight: 0,
            naturalWidth: 0,
          });
        return (
          i.useEffect(() => {
            function e() {
              u(e => {
                let { naturalWidth: t, naturalHeight: n } = e,
                  s = m(t, n);
                return null != s ? s : e;
              });
            }
            return (
              window.addEventListener("resize", e),
              () => window.removeEventListener("reslize", e)
            );
          }, []),
          (0, s.jsxs)(s.Fragment, {
            children: [
              (0, s.jsx)(d.default, {
                className: a(c.rightSplit),
                onLoad: function (e) {
                  let { currentTarget: t } = e,
                    { naturalWidth: n, naturalHeight: s } = t,
                    i = m(n, s);
                  null != i && u(i);
                },
                src: t,
                width: r,
                height: o,
              }),
              (0, s.jsx)("div", {
                className: a(c.leftSplit, { [c.nonEmbeddedLeftSplit]: !0 }),
                children: n,
              }),
            ],
          })
        );
      }
      class v extends i.PureComponent {
        componentWillUnmount() {
          window.removeEventListener("resize", this.handleResize);
        }
        calculateShowWaveAnimation() {
          return window.innerWidth > g;
        }
        renderSplashArt() {
          let { splash: e, embedded: t } = this.props,
            { width: n, height: i } = this.state;
          return null != e
            ? (0, s.jsx)(d.default, {
                className: a(c.rightSplit, { [c.embedded]: t }),
                src: e,
                width: n,
                height: i,
                onLoad: this.handleLoad,
              })
            : null;
        }
        renderWave() {
          let { waveState: e, updateWaveState: t, embedded: n } = this.props,
            { showWaveAnimation: i, splashLoaded: r } = this.state;
          return i
            ? (0, s.jsx)(f.default, {
                embedded: n,
                waveState: e,
                updateWaveState: t,
                hideFallback: !r,
              })
            : (0, s.jsx)("div", { className: c.mobileWave });
        }
        renderContent() {
          let {
              children: e,
              waveState: t,
              showLogo: n,
              logoClassName: r,
              embedded: o,
            } = this.props,
            { showWaveAnimation: d } = this.state;
          return (0, s.jsxs)(i.Fragment, {
            children: [
              this.renderWave(),
              (0, s.jsxs)("div", {
                className: a(c.leftSplit, { [c.nonEmbeddedLeftSplit]: o }),
                children: [
                  n
                    ? (0, s.jsx)(l.default, {
                        show:
                          !d ||
                          (t === _.WaveStates.ENTERED &&
                            t !== _.WaveStates.FILLING),
                        className: a(c.logo, r),
                      })
                    : null,
                  e,
                ],
              }),
            ],
          });
        }
        render() {
          let { className: e } = this.props;
          return (0, s.jsxs)("div", {
            className: a(e, c.wrapper),
            children: [this.renderSplashArt(), this.renderContent()],
          });
        }
        constructor(...e) {
          super(...e),
            (this.state = {
              naturalWidth: 0,
              naturalHeight: 0,
              width: 0,
              height: 0,
              showWaveAnimation: this.calculateShowWaveAnimation(),
              splashLoaded: !1,
            }),
            (this.handleResize = () => {
              let { naturalWidth: e, naturalHeight: t } = this.state,
                n = m(e, t),
                s = this.calculateShowWaveAnimation();
              null != n
                ? this.setState({ ...n, showWaveAnimation: s })
                : this.setState({ showWaveAnimation: s });
            }),
            (this.handleLoad = e => {
              let { currentTarget: t } = e,
                { naturalWidth: n, naturalHeight: s } = t,
                i = m(n, s);
              null != i && this.setState(i),
                this.setState({ splashLoaded: !0 }),
                window.removeEventListener("resize", this.handleResize),
                window.addEventListener("resize", this.handleResize);
            });
        }
      }
      v.defaultProps = { embedded: !1 };
      var E = v;
    },
    470074: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("347219"),
        i = n("273215"),
        r = class e {
          initialize() {
            (this.img = new Image()),
              (this.img.onload = () => {
                this.loaded = !0;
              }),
              (this.img.src = i),
              this.bind();
          }
          bind() {
            window.addEventListener("mousemove", this.handleMouseMove, !1);
          }
          unbind() {
            window.removeEventListener("mousemove", this.handleMouseMove, !1);
          }
          terminate() {
            (this.img = null),
              (this.loaded = !1),
              (this.isFilled = !1),
              (this.alpha = 0),
              this.unbind();
          }
          update(e) {
            this.loaded &&
              (!this.isFilled && this.alpha < 1
                ? (this.alpha = Math.min(1, this.alpha + e))
                : this.isFilled &&
                  this.alpha > 0 &&
                  (this.alpha = Math.max(0, this.alpha - 3 * e)),
              (this.velX +=
                (0, s.applySpringForce)(
                  this.targetX,
                  this.x,
                  this.velX,
                  this.spring
                ) * e),
              (this.velY +=
                (0, s.applySpringForce)(
                  this.targetY,
                  this.y,
                  this.velY,
                  this.spring
                ) * e),
              (this.x += this.velX * e),
              (this.y += this.velY * e));
          }
          render(e) {
            let { img: t } = this;
            this.loaded &&
              null != t &&
              (e.save(),
              (e.globalCompositeOperation = "source-atop"),
              (e.globalAlpha = this.alpha),
              e.drawImage(t, this.x + 20, this.y + 20),
              e.restore());
          }
          fill() {
            this.isFilled = !0;
          }
          constructor() {
            (this.img = null),
              (this.loaded = !1),
              (this.isFilled = !1),
              (this.alpha = 0),
              (this.mx = 0),
              (this.my = 0),
              (this.x = 0),
              (this.y = 0),
              (this.velX = 0),
              (this.velY = 0),
              (this.targetX = 40),
              (this.targetY = 40),
              (this.spring = { friction: 60, tension: 100 }),
              (this.handleMouseMove = e => {
                let { clientX: t, clientY: n } = e;
                (this.targetX = (t / window.innerWidth) * 20 + 20),
                  (this.targetY = (n / window.innerWidth) * 20 + 20);
              });
          }
        };
    },
    126982: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
      var s = n("347219"),
        i = n("289382");
      let r = ["#7d8187", "#18191c", "#8fa2df", "#4f545c"];
      var a = class e {
        checkBounds() {
          this.x > this.offscreenX
            ? (this.x = -this.size)
            : this.y > this.offscreenY
              ? (this.y = -this.size)
              : this.x < -this.size
                ? (this.x = this.offscreenX)
                : this.y < -this.size && (this.y = this.offscreenY);
        }
        update(e, t) {
          this.checkBounds(),
            (this.y += t * this.positionMultiplier),
            (this.x += e * this.positionMultiplier);
        }
        render(e, t) {
          e.beginPath(),
            (e.globalAlpha = (t * this.depth) / 4),
            e.arc(this.x, this.y, this.size, 0, i.TWO_PI, !0),
            (e.fillStyle = this.color),
            e.fill(),
            (e.globalAlpha = 1);
        }
        constructor() {
          (this.size = (0, s.randomNumber)(2, 3)),
            (this.depth = (0, s.randomNumber)(1, 4)),
            (this.positionMultiplier = this.depth / 4),
            (this.color = r[4 - this.depth]),
            (this.offscreenX = i.MAX_RADIUS + this.size),
            (this.offscreenY = i.MAX_RADIUS + this.size),
            (this.x = (0, s.randomNumber)(-this.size, this.offscreenX)),
            (this.y = (0, s.randomNumber)(-this.size, this.offscreenY));
        }
      };
    },
    261147: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        }),
        n("424973");
      var s = n("126982"),
        i = n("940322"),
        r = class e {
          initialize() {
            (this.particles = []),
              this.wind.initialize(),
              (this.loadInTimer = setTimeout(() => {
                for (let e = 0; e < 75; e++)
                  this.particles.push(new s.default());
              }, 250));
          }
          terminate() {
            (this.particles = []),
              this.wind.terminate(),
              null != this.loadInTimer && clearTimeout(this.loadInTimer);
          }
          update(e) {
            0 !== this.particles.length &&
              (!this.isFilled && this.alpha < 1
                ? (this.alpha = Math.min(1, this.alpha + e))
                : this.isFilled &&
                  this.alpha > 0 &&
                  (this.alpha = Math.max(0, this.alpha - 3 * e)),
              this.wind.update(),
              this.particles.forEach(t =>
                t.update(
                  10 * this.wind.forceX * e,
                  10 * Math.min(this.wind.forceY, -0.001) * e + -0.1
                )
              ));
          }
          render(e) {
            0 !== this.particles.length &&
              (e.save(),
              (e.globalCompositeOperation = "source-atop"),
              this.particles.forEach(t => t.render(e, this.alpha)),
              e.restore());
          }
          fill() {
            this.isFilled = !0;
          }
          constructor() {
            (this.particles = []),
              (this.wind = new i.default()),
              (this.alpha = 0),
              (this.isFilled = !1),
              (this.loadInTimer = null);
          }
        };
    },
    502945: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
      var s = n("347219"),
        i = n("289382");
      let r = -2.15;
      var a = class e {
        updateStatic() {
          (this.targetX =
            this.targetX + 30 * Math.cos(this.angle) * Math.sin(this.count)),
            (this.targetY =
              this.targetY + 30 * Math.sin(this.angle) * Math.sin(this.count)),
            (this.x = this.targetX),
            (this.y = this.targetY);
        }
        update(e) {
          let t, n;
          if (
            (this.speedUp > 0
              ? ((this.speedUp = Math.max(0, this.speedUp - e)),
                (this.count += e * (10 * Math.min(this.speedUp, 1) + 0.4)))
              : (this.count += 0.4 * e),
            (t = (0, s.applySpringForce)(
              this.targetX,
              this.x,
              this.velX,
              this.spring
            )),
            (n = (0, s.applySpringForce)(
              this.targetY,
              this.y,
              this.velY,
              this.spring
            )),
            (this.velX += t * e),
            (this.velY += n * e),
            this.oscillate)
          ) {
            let i =
                this.targetX +
                this.waveRange * Math.cos(this.angle) * Math.sin(this.count),
              r =
                this.targetY +
                this.waveRange * Math.sin(this.angle) * Math.sin(this.count);
            (t = (0, s.applySpringForce)(i, this.x, this.velX, this.spring)),
              (n = (0, s.applySpringForce)(r, this.y, this.velY, this.spring)),
              (this.velX += t * e),
              (this.velY += n * e);
          }
          (this.x += this.velX * e), (this.y += this.velY * e);
        }
        render(e) {
          (e.fillStyle = "#fff"), e.fillRect(this.x, this.y, 4, 4);
        }
        constructor(e) {
          (this.x = -40),
            (this.y = -40),
            (this.targetX = 0),
            (this.targetY = 0),
            (this.oscillate = !0),
            (this.velX = 0),
            (this.velY = 0),
            (this.angle = 0),
            (this.speedUp = 1.5),
            (this.waveRange = 60),
            (this.spring = { friction: 15, tension: i.POINT_TENSION_DEFAULT }),
            (this.index = e),
            (this.spring.tension =
              i.POINT_TENSION_DEFAULT * Math.max(0.1, e / 7) +
              i.POINT_TENSION_DEFAULT),
            (this.count = r * e);
        }
      };
    },
    347219: function (e, t, n) {
      "use strict";
      function s(e, t) {
        return Math.floor(Math.random() * (t - e + 1) + e);
      }
      function i(e, t, n, s) {
        return s.tension * (e - t) - s.friction * n;
      }
      n.r(t),
        n.d(t, {
          randomNumber: function () {
            return s;
          },
          applySpringForce: function () {
            return i;
          },
        });
    },
    401059: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return m;
          },
        }),
        n("222007"),
        n("424973");
      var s = n("483366"),
        i = n.n(s),
        r = n("769846"),
        a = n("159885"),
        o = n("502945"),
        d = n("347219"),
        u = n("289382");
      let l = 7.5,
        f = (0, a.cssValueToNumber)(
          r.default.WAVE_SPLASH_RESPONSIVE_WIDTH_MOBILE
        ),
        _ = 1 / 60;
      function c(e, t, n, s) {
        return t * (n / s) + e;
      }
      function g() {
        return Math.min(
          Math.max(
            Math.min(0.8 * window.innerWidth, 0.8 * window.innerHeight),
            u.MIN_RADIUS
          ),
          u.MAX_RADIUS
        );
      }
      var m = class e {
        initialize() {
          this._resizeWave();
        }
        emphasize() {
          this.points.forEach(e => (e.speedUp = 1));
        }
        terminate() {
          this.points = [];
        }
        update(e) {
          0 !== this.points.length &&
            (this.points.forEach(t => t.update(Math.min(e, _))),
            !this.hasEntered &&
              this.points[0].x > f &&
              ((this.hasEntered = !0),
              this.updateWaveState(u.WaveStates.ENTERED)),
            this.isFilling &&
              this.points[0].x > this.points[0].targetX &&
              ((this.isFilling = !1),
              this.updateWaveState(u.WaveStates.FILLED)));
        }
        render(e) {
          if (0 === this.points.length) return;
          let [t, ...n] = this.points;
          e.save(),
            e.beginPath(),
            e.moveTo(t.x, t.y),
            n.forEach((t, s) => {
              if (null == n[s + 1]) e.quadraticCurveTo(t.x, t.y, t.x, t.y);
              else {
                let i = (t.x + n[s + 1].x) / 2,
                  r = (t.y + n[s + 1].y) / 2;
                e.quadraticCurveTo(t.x, t.y, i, r);
              }
            }),
            e.lineTo(0, 0),
            e.closePath(),
            (e.fillStyle = "#000"),
            (e.globalCompositeOperation = "destination-in"),
            e.fill(),
            e.restore();
        }
        fill() {
          let e =
              Math.sqrt(
                window.innerWidth * window.innerWidth +
                  window.innerHeight * window.innerHeight
              ) + 100,
            t = g() - 140,
            n = (e, t, n, s) => {
              (e.targetX =
                -40 + t * Math.cos(u.TWO_PI * (0.25 * (n / 15) + 0))),
                (e.targetY =
                  -40 + t * Math.sin(u.TWO_PI * (0.25 * (n / 15) + 0))),
                s &&
                  ((e.targetX += (0, d.randomNumber)(0, 30) - 15),
                  (e.targetY += (0, d.randomNumber)(0, 30) - 15),
                  (e.speedUp = 3),
                  (e.spring.tension =
                    u.POINT_TENSION_DEFAULT * Math.random() * 0.5 +
                    u.POINT_TENSION_DEFAULT));
            };
          this.points.forEach((e, s) => n(e, t, s, !0)),
            setTimeout(() => {
              this.points.forEach((t, s) => {
                n(t, e, s, !1);
                let i = 1 - t.index / 7.5;
                (t.spring.friction +=
                  t.spring.friction + t.spring.friction * i),
                  (t.spring.tension =
                    0.7 * u.POINT_TENSION_DEFAULT + 80 * Math.random()),
                  (t.waveRange = 2 * t.waveRange);
              }),
                (this.isFilling = !0),
                this.updateWaveState(u.WaveStates.FILLING);
            }, 250);
        }
        constructor(e) {
          (this.points = []),
            (this.hasEntered = !1),
            (this.isFilling = !1),
            (this._resizeWave = () => {
              let e = g();
              this.points.forEach((t, n) => {
                let s = -40 + e * Math.cos(u.TWO_PI * (0.25 * (n / 15) + 0)),
                  i = -40 + e * Math.sin(u.TWO_PI * (0.25 * (n / 15) + 0));
                0 !== n
                  ? (i += (0, d.randomNumber)(0, 30) - 15)
                  : (s += (0, d.randomNumber)(0, 30) - 15),
                  (t.targetX = s),
                  (t.targetY = i),
                  (t.angle = Math.atan2(i, s));
              });
            }),
            (this.resizeWave = i(this._resizeWave, 200)),
            (this.updateWaveState = e),
            (this.hasEntered = !1);
          for (let e = 0; e <= 15; e++)
            this.points.push(
              new o.default(Math.floor(l - Math.floor(Math.abs(e - l))))
            );
        }
      };
    },
    289382: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          MIN_RADIUS: function () {
            return s;
          },
          MAX_RADIUS: function () {
            return i;
          },
          TWO_PI: function () {
            return r;
          },
          POINT_TENSION_DEFAULT: function () {
            return a;
          },
          WaveStates: function () {
            return o;
          },
        });
      let s = 780,
        i = 1e3,
        r = 2 * Math.PI,
        a = 150,
        o = { INITIAL: 0, ENTERED: 1, FILLING: 2, FILLED: 3 };
    },
    940322: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      function s(e, t) {
        return Math.max(Math.min((e - t) / 30, 1), -1);
      }
      var i = class e {
        initialize() {
          window.addEventListener("mousemove", this.handleMouseMove);
        }
        terminate() {
          window.removeEventListener("mousemove", this.handleMouseMove);
        }
        update() {
          this.x !== this.px &&
            this.y !== this.py &&
            ((this.forceX += s(this.x, this.px)),
            (this.forceY += s(this.y, this.py)),
            (this.px = this.x),
            (this.py = this.y)),
            0 !== this.forceX && (this.forceX = this.forceX * this.resistance),
            0 !== this.forceY && (this.forceY = this.forceY * this.resistance);
        }
        render() {}
        constructor() {
          (this.resistance = 0.98),
            (this.px = 0),
            (this.py = 0),
            (this.x = 0),
            (this.y = 0),
            (this.forceX = 0),
            (this.forceY = 0),
            (this.handleMouseMove = e => {
              let { clientX: t, clientY: n } = e;
              (this.x = t), (this.y = n);
            });
        }
      };
    },
    841811: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var s = n("37983");
      n("884691");
      var i = n("469563"),
        r = n("503420"),
        a = n("75196"),
        o = (0, i.replaceIcon)(
          function (e) {
            let {
              width: t = 16,
              height: n = 16,
              color: i = "currentColor",
              foreground: r,
              ...o
            } = e;
            return (0, s.jsx)("svg", {
              ...(0, a.default)(o),
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              children: (0, s.jsx)("path", {
                d: "M12 2C6.4764 2 2 6.4764 2 12C2 17.5236 6.4764 22 12 22C17.5236 22 22 17.5236 22 12C22 6.4764 17.5236 2 12 2ZM12 5.6C12.4422 5.6 12.8 5.95781 12.8 6.4V11.5376L16.5625 13.7126C16.9453 13.9329 17.0703 14.4173 16.85 14.8001C16.6297 15.183 16.1453 15.3079 15.7625 15.0876L11.6873 12.7376C11.656 12.7251 11.6279 12.7048 11.5998 12.6876C11.3607 12.5486 11.1998 12.2954 11.1998 12.0001V6.4001C11.1998 5.9579 11.5578 5.6 12 5.6Z",
                fill: i,
                className: r,
              }),
            });
          },
          r.ClockIcon,
          void 0,
          { size: 16 }
        );
    },
    338835: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var s = n("37983");
      n("884691");
      var i = n("469563"),
        r = n("521590"),
        a = n("75196"),
        o = (0, i.replaceIcon)(
          function (e) {
            let {
              width: t = 24,
              height: n = 24,
              color: i = "currentColor",
              foreground: r,
              ...o
            } = e;
            return (0, s.jsx)("svg", {
              ...(0, a.default)(o),
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              children: (0, s.jsx)("path", {
                fill: i,
                className: r,
                fillRule: "evenodd",
                d: "M16.4770909,19 C18.0152727,16.936 18.9381818,14.531 19.1323636,12 L21.7527273,12 C21.3829091,15.056 19.3363636,17.65 16.4770909,19 Z M2.24618182,12 L4.86654545,12 C5.06072727,14.531 5.98363636,16.936 7.52181818,19 C4.66254545,17.65 2.616,15.056 2.24618182,12 Z M7.52181818,3 C5.98254545,5.064 5.06072727,7.469 4.86654545,10 L2.24618182,10 C2.616,6.944 4.66254545,4.35 7.52181818,3 Z M13.0909091,10 L13.0909091,2.369 C15.3294545,4.416 16.6930909,7.111 16.9505455,10 L13.0909091,10 Z M13.0909091,19.631 L13.0909091,12 L16.9505455,12 C16.6930909,14.889 15.3294545,17.584 13.0909091,19.631 Z M10.9090909,12 L10.9090909,19.631 C8.66945455,17.584 7.30581818,14.889 7.04836364,12 L10.9090909,12 Z M10.9090909,10 L7.04836364,10 C7.30581818,7.111 8.66945455,4.416 10.9090909,2.369 L10.9090909,10 Z M19.1323636,10 C18.9381818,7.469 18.0163636,5.064 16.4770909,3 C19.3363636,4.35 21.3829091,6.944 21.7527273,10 L19.1323636,10 Z M0,11 C0,17.075 5.37163636,22 12,22 C18.6272727,22 24,17.075 24,11 C24,4.925 18.6272727,0 12,0 C5.37163636,0 0,4.925 0,11 Z",
                transform: "translate(0 1)",
              }),
            });
          },
          r.GlobeEarthIcon,
          void 0,
          { size: 24 }
        );
    },
    45029: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var s = n("37983");
      n("884691");
      var i = n("469563"),
        r = n("434657"),
        a = n("75196"),
        o = (0, i.replaceIcon)(
          function (e) {
            let {
              width: t = 24,
              height: n = 24,
              color: i = "currentColor",
              className: r,
              foreground: o,
              ...d
            } = e;
            return (0, s.jsx)("svg", {
              width: t,
              height: n,
              className: r,
              viewBox: "0 0 24 24",
              ...(0, a.default)(d),
              children: (0, s.jsx)("path", {
                className: o,
                fill: i,
                d: "M17 11V7C17 4.243 14.756 2 12 2C9.242 2 7 4.243 7 7V11C5.897 11 5 11.896 5 13V20C5 21.103 5.897 22 7 22H17C18.103 22 19 21.103 19 20V13C19 11.896 18.103 11 17 11ZM12 18C11.172 18 10.5 17.328 10.5 16.5C10.5 15.672 11.172 15 12 15C12.828 15 13.5 15.672 13.5 16.5C13.5 17.328 12.828 18 12 18ZM15 11H9V7C9 5.346 10.346 4 12 4C13.654 4 15 5.346 15 7V11Z",
                "aria-hidden": !0,
              }),
            });
          },
          r.LockIcon,
          void 0,
          { size: 24 }
        );
    },
    71216: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var s = n("37983");
      n("884691");
      var i = n("469563"),
        r = n("173010"),
        a = n("75196"),
        o = (0, i.replaceIcon)(
          function (e) {
            let {
              width: t = 16,
              height: n = 16,
              color: i = "currentColor",
              foreground: r,
              ...o
            } = e;
            return (0, s.jsx)("svg", {
              ...(0, a.default)(o),
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              children: (0, s.jsx)("path", {
                className: r,
                fill: i,
                d: "M12 2C14.761 2 17 4.238 17 7V9H7V7C7 4.238 9.238 2 12 2ZM10.5 5.5C10.5 6.329 11.172 7 12 7C12.828 7 13.5 6.329 13.5 5.5C13.5 4.671 12.828 4 12 4C11.172 4 10.5 4.671 10.5 5.5ZM23 22H17L19 19V12H17V18C17 18.553 16.552 19 16 19H14L15 22H9L10 19H8C7.448 19 7 18.553 7 18V12H5V19L7 22H1L3 19V12C3 10.896 3.897 10 5 10H19C20.103 10 21 10.896 21 12V19L23 22ZM13 14C13 14.553 13.448 15 14 15C14.552 15 15 14.553 15 14C15 13.447 14.552 13 14 13C13.448 13 13 13.447 13 14Z",
              }),
            });
          },
          r.RobotIcon,
          void 0,
          { size: 16 }
        );
    },
    148337: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var s = n("37983");
      n("884691");
      var i = n("469563"),
        r = n("877585"),
        a = n("75196"),
        o = (0, i.replaceIcon)(
          function (e) {
            let {
              width: t = 18,
              height: n = 18,
              color: i = "currentColor",
              foreground: r,
              ...o
            } = e;
            return (0, s.jsx)("svg", {
              ...(0, a.default)(o),
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              children: (0, s.jsx)("path", {
                className: r,
                fill: i,
                d: "M19 6.00001C15.56 6.00001 12.826 2.43501 12.799 2.39801C12.421 1.89801 11.579 1.89801 11.201 2.39801C11.174 2.43501 8.44 6.00001 5 6.00001C4.447 6.00001 4 6.44801 4 7.00001V14C4 17.807 10.764 21.478 11.534 21.884C11.68 21.961 11.84 21.998 12 21.998C12.16 21.998 12.32 21.96 12.466 21.884C13.236 21.478 20 17.807 20 14V7.00001C20 6.44801 19.553 6.00001 19 6.00001ZM15 16L12 14L9 16L10 13L8 11H11L12 8.00001L13 11H16L14 13L15 16Z",
              }),
            });
          },
          r.ShieldIcon,
          void 0,
          { size: 18 }
        );
    },
    550368: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getAssetFromImageURL: function () {
            return T;
          },
          getAssetImage: function () {
            return C;
          },
          getAssets: function () {
            return S;
          },
          fetchAssetIds: function () {
            return N;
          },
          getAssetIds: function () {
            return O;
          },
        }),
        n("511434"),
        n("313619"),
        n("654714"),
        n("287168"),
        n("956660"),
        n("222007");
      var s = n("627445"),
        i = n.n(s),
        r = n("917351"),
        a = n.n(r),
        o = n("872717"),
        d = n("913144"),
        u = n("605250"),
        l = n("407063"),
        f = n("49111");
      let _ = "https://i.scdn.co/image/",
        c = (e, t, n) =>
          "https://static-cdn.jtvnw.net/previews-ttv/live_user_"
            .concat(e, "-")
            .concat(t, "x")
            .concat(n, ".jpg"),
        g =
          /https:\/\/static-cdn\.jtvnw\.net\/previews-ttv\/live_user_(.+)-\{width\}x\{height\}.jpg/,
        m = e => "https://i.ytimg.com/vi/".concat(e, "/hqdefault_live.jpg"),
        h =
          /https:\/\/i\.ytimg\.com\/vi\/([a-zA-Z0-9_-]+)\/hqdefault_live\.jpg/,
        v = {
          [f.PlatformTypes.SPOTIFY]: {
            deserialize: e => "".concat(_).concat(encodeURIComponent(e)),
            serialize: e => e.split(_)[1],
          },
          [f.PlatformTypes.TWITCH]: {
            deserialize: (e, t) => c(encodeURIComponent(e), t[0], t[1]),
            serialize: e => {
              let t = e.match(g);
              return null != t ? t[1] : null;
            },
          },
          [f.PlatformTypes.YOUTUBE]: {
            deserialize: e => m(encodeURIComponent(e)),
            serialize: e => {
              let t = e.match(h);
              return null != t ? t[1] : null;
            },
          },
          mp: {
            deserialize: e => (
              i(
                null != window.GLOBAL_ENV.MEDIA_PROXY_ENDPOINT,
                "MEDIA_PROXY_ENDPOINT not configured"
              ),
              new URL(
                e,
                location.protocol + window.GLOBAL_ENV.MEDIA_PROXY_ENDPOINT
              ).toString()
            ),
            serialize: e => e,
          },
        },
        E = {},
        p = {};
      async function y(e) {
        let { body: t } = await o.default.get({
          url: f.Endpoints.APPLICATION_ASSETS(e),
          oldFormErrors: !0,
        });
        return (E[e] = { assets: a.keyBy(t, "name"), lastUpdated: Date.now() });
      }
      function T(e, t) {
        let n = v[e].serialize(t);
        return n ? "".concat(e, ":").concat(n.toString()) : null;
      }
      function C(e, t, n) {
        if (null != t && t.includes(":")) {
          let [e, s] = t.split(":");
          if (e === f.PlatformTypes.TWITCH) {
            if (null == n || "number" == typeof n) {
              new (0, u.default)("ApplicationAssetUtils").warn(
                "getAssetImage: size must === [number, number] for Twitch"
              );
              return;
            }
            return v[f.PlatformTypes.TWITCH].deserialize(s, n);
          }
          return Object.prototype.hasOwnProperty.call(v, e)
            ? v[e].deserialize(s)
            : void 0;
        }
        if (null == e || null == t) return;
        let s =
          "number" == typeof n
            ? "?size=".concat((0, l.getBestMediaProxySize)(n))
            : "";
        return null != window.GLOBAL_ENV.CDN_HOST
          ? ""
              .concat(location.protocol, "//")
              .concat(window.GLOBAL_ENV.CDN_HOST, "/app-assets/")
              .concat(e, "/")
              .concat(t, ".png")
              .concat(s)
          : ""
              .concat(o.default.getAPIBaseURL(), "/applications/")
              .concat(e, "/app-assets/")
              .concat(t, ".png")
              .concat(s);
      }
      async function S(e) {
        let { assets: t } = await (function (e) {
          var t;
          let n = E[e];
          return null == n || ((t = n.lastUpdated), Date.now() - t > 36e5)
            ? y(e)
            : Promise.resolve(n);
        })(e);
        return t;
      }
      async function I(e, t) {
        let n = t.filter(
          e =>
            null != e &&
            !Object.prototype.hasOwnProperty.call(p, e) &&
            null == p[e]
        );
        if (0 === n.length) return;
        let { body: s } = await o.default.post({
          url: f.Endpoints.APPLICATION_EXTERNAL_ASSETS(e),
          body: { urls: n },
          oldFormErrors: !0,
        });
        for (let { url: e, external_asset_path: t } of s) p[e] = t;
      }
      function A(e, t) {
        let n = 0,
          s = e.filter(
            e =>
              (null == e ? void 0 : e.startsWith("http:")) ||
              (null == e ? void 0 : e.startsWith("https:"))
          );
        if (s.length > 0)
          for (let s = 0; s < e.length; s++) {
            let i = e[s];
            if (null == i) continue;
            let r = Object.prototype.hasOwnProperty.call(p, i) ? p[i] : void 0;
            null != r && ((t[s] = T("mp", r)), n++);
          }
        return n === e.length;
      }
      function D(e, t, n, s) {
        let i = !1;
        for (let r = 0; r < e.length; r++) {
          let a = e[r];
          if (null == a || null != t[r]) continue;
          let o = Object.prototype.hasOwnProperty.call(n, a) && n[a];
          if (!o) {
            if (null == s || s <= 0) {
              t[r] = null;
              continue;
            }
            i = !0;
          }
          t[r] = o.id;
        }
        return i;
      }
      async function N(e, t) {
        let n =
          arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
        d.default.dispatch({
          type: "APPLICATION_ASSETS_FETCH",
          applicationId: e,
        });
        let s = [],
          i = t.filter(
            e =>
              (null == e ? void 0 : e.startsWith("http:")) ||
              (null == e ? void 0 : e.startsWith("https:"))
          );
        i.length > 0 && (await I(e, i));
        let r = A(t, s);
        if (r)
          return (
            d.default.dispatch({
              type: "APPLICATION_ASSETS_FETCH_SUCCESS",
              applicationId: e,
            }),
            s
          );
        let a = await S(e),
          o = D(t, s, a, n);
        return o
          ? y(e).then(() => N(e, t, n - 1))
          : (d.default.dispatch({
              type: "APPLICATION_ASSETS_FETCH_SUCCESS",
              applicationId: e,
            }),
            s);
      }
      function O(e, t) {
        var n;
        let s = [],
          i = A(t, s);
        if (i) return s;
        let r = null === (n = E[e]) || void 0 === n ? void 0 : n.assets;
        return null == r ? s : (D(t, s, r), s);
      }
    },
    994440: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getAttachmentFile: function () {
            return o;
          },
          cancelGetAttachmentFile: function () {
            return d;
          },
        });
      var s = n("627445"),
        i = n.n(s),
        r = n("966724"),
        a = n("980134");
      function o(e, t) {
        var n;
        i(
          e.item.platform === r.UploadPlatform.WEB,
          "Upload must be in the Web format"
        );
        let s = (0, a.getAttachmentPayload)(e, t);
        return Promise.resolve({
          file: e.item.file,
          name: null !== (n = s.filename) && void 0 !== n ? n : "",
        });
      }
      async function d(e) {}
    },
    172182: function (e, t, n) {
      "use strict";
      var s;
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        }),
        n("781738"),
        n("222007");
      let i = /^#[0-9a-f]{3,8}$/i,
        r = /^((?:rgb|hsl)a?)\s*\(([^)]*)\)/i;
      s = class e {
        toHexString() {
          var e = Math.round(this.red).toString(16),
            t = Math.round(this.green).toString(16),
            n = Math.round(this.blue).toString(16);
          return (
            "#" +
            (this.red > 15.5 ? e : "0" + e) +
            (this.green > 15.5 ? t : "0" + t) +
            (this.blue > 15.5 ? n : "0" + n)
          );
        }
        static parseString(e) {
          return null != e.match(r)
            ? this.parseColorFnString(e)
            : null != e.match(i)
              ? this.parseHexString(e)
              : void 0;
        }
        static parseRgbString(t) {
          return "transparent" === t
            ? new e(0, 0, 0, 0)
            : this.parseColorFnString(t);
        }
        static parseHexString(t) {
          if (!(null == t.match(i) || [6, 8].includes(t.length))) {
            if ((t = t.replace("#", "")).length < 6) {
              let [e, n, s, i] = t;
              (t = e + e + n + n + s + s), null != i && (t += i + i);
            }
            var n = t.match(/.{1,2}/g);
            if (null != n)
              return new e(
                parseInt(n[0], 16),
                parseInt(n[1], 16),
                parseInt(n[2], 16),
                null != n[3] ? parseInt(n[3], 16) / 255 : 1
              );
          }
        }
        static parseColorFnString(t) {
          var n;
          let [, s, i] = null !== (n = t.match(r)) && void 0 !== n ? n : [];
          if (null == s || null == i) return;
          let a = i
              .split(/\s*[,/\s]\s*/)
              .map(e => e.replace(",", "").trim())
              .filter(e => "" !== e),
            o = a.map((e, t) =>
              (function (e, t, n) {
                if (/%$/.test(t))
                  return 3 === n
                    ? parseFloat(t) / 100
                    : (255 * parseFloat(t)) / 100;
                if ("h" === e[n]) {
                  if (/turn$/.test(t)) return 360 * parseFloat(t);
                  if (/rad$/.test(t)) return 57.3 * parseFloat(t);
                }
                return parseFloat(t);
              })(s, e, t)
            );
          if ("hsl" === s.substr(0, 3)) {
            let t = (function (e) {
              let t,
                { hue: n, saturation: s, lightness: i, alpha: r } = e;
              (s /= 255), (i /= 255);
              let a = (1 - Math.abs(2 * i - 1)) * s,
                o = a * (1 - Math.abs(((n / 60) % 2) - 1)),
                d = i - a / 2;
              t =
                n < 60
                  ? [a, o, 0]
                  : n < 120
                    ? [o, a, 0]
                    : n < 180
                      ? [0, a, o]
                      : n < 240
                        ? [0, o, a]
                        : n < 300
                          ? [o, 0, a]
                          : [a, 0, o];
              let u = t.map(e => Math.round((e + d) * 255));
              return { red: u[0], green: u[1], blue: u[2], alpha: r };
            })({ hue: o[0], saturation: o[1], lightness: o[2], alpha: o[3] });
            return new e(t.red, t.green, t.blue, t.alpha);
          }
          return new e(o[0], o[1], o[2], "number" == typeof o[3] ? o[3] : 1);
        }
        toHSL() {
          return (function (e) {
            let { red: t, green: n, blue: s, alpha: i } = e,
              r = t / 255,
              a = n / 255,
              o = s / 255,
              d = Math.max(r, a, o),
              u = Math.min(r, a, o),
              l = d - u,
              f = (d + u) / 2,
              _ = l > 0 ? l / (1 - Math.abs(2 * f - 1)) : 0;
            if (0 === l)
              return { hue: 0, saturation: _, lightness: f, alpha: i };
            let c = 0;
            switch (d) {
              case r:
                c = ((a - o) / l) % 6;
                break;
              case a:
                c = (o - r) / l + 2;
                break;
              case o:
                c = (a - o) / l + 4;
            }
            return { hue: 60 * c, saturation: _, lightness: f, alpha: i };
          })({
            red: this.red,
            green: this.green,
            blue: this.blue,
            alpha: this.alpha,
          });
        }
        getRelativeLuminance() {
          var e = this.red / 255,
            t = this.green / 255,
            n = this.blue / 255;
          return (
            0.2126 *
              (e <= 0.03928 ? e / 12.92 : Math.pow((e + 0.055) / 1.055, 2.4)) +
            0.7152 *
              (t <= 0.03928 ? t / 12.92 : Math.pow((t + 0.055) / 1.055, 2.4)) +
            0.0722 *
              (n <= 0.03928 ? n / 12.92 : Math.pow((n + 0.055) / 1.055, 2.4))
          );
        }
        constructor(e, t, n, s) {
          (this.red = e), (this.green = t), (this.blue = n), (this.alpha = s);
        }
      };
    },
    284679: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          hexWithOpacity: function () {
            return a;
          },
          hexToRgb: function () {
            return o;
          },
          hexOpacityToRgba: function () {
            return d;
          },
          rgbToHex: function () {
            return u;
          },
          getComplimentaryPaletteForColor: function () {
            return l;
          },
          rawRgbToHsl: function () {
            return c;
          },
          getColorLightnessAdjusted: function () {
            return m;
          },
          getAccessibleColor: function () {
            return h;
          },
          findColorByHsv: function () {
            return v;
          },
          getSaturatedColorHex: function () {
            return p;
          },
          interpolateColor: function () {
            return y;
          },
        }),
        n("424973");
      var s = n("509043");
      n("605250");
      var i = n("172182"),
        r = n("782340");
      function a(e, t) {
        let n;
        let s = e;
        if (9 === e.length) {
          s = e.slice(0, 7);
          let i = parseInt(e.slice(7, 9), 16) / 255;
          n = Math.round(i * t * 255);
        } else n = Math.round(255 * t);
        let i = n.toString(16).toUpperCase().padStart(2, "0");
        return "".concat(s).concat(i).padEnd(9, "0");
      }
      function o(e) {
        "#" === e[0] && (e = e.slice(1));
        let t = parseInt(e, 16);
        return { r: (t >> 16) & 255, g: (t >> 8) & 255, b: 255 & t };
      }
      function d(e, t) {
        let { r: n, g: s, b: i } = o(e);
        return "rgba("
          .concat(n, ", ")
          .concat(s, ", ")
          .concat(i, ", ")
          .concat(t, ")");
      }
      function u(e, t, n) {
        return (
          "#" + (16777216 + (e << 16) + (t << 8) + n).toString(16).slice(1)
        );
      }
      function l(e) {
        let t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 3,
          n = [],
          {
            h: s,
            s: i,
            l: r,
          } = (function (e, t, n) {
            (e /= 255), (t /= 255), (n /= 255);
            let s = Math.min(e, t, n),
              i = Math.max(e, t, n),
              r = i - s,
              a = 0,
              o = 0,
              d = 0;
            return (
              (a = Math.round(
                60 *
                  (a =
                    0 === r
                      ? 0
                      : i === e
                        ? ((t - n) / r) % 6
                        : i === t
                          ? (n - e) / r + 2
                          : (e - t) / r + 4)
              )) < 0 && (a += 360),
              (d = (i + s) / 2),
              (o = +(
                100 * (o = 0 === r ? 0 : r / (1 - Math.abs(2 * d - 1)))
              ).toFixed(1)),
              { h: a, s: o, l: (d = +(100 * d).toFixed(1)) }
            );
          })(e[0], e[1], e[2]),
          a = s,
          d = i,
          u = r;
        d < 30 && (d += 30), u > 80 && (u -= 40), u < 20 && (u += 15);
        let l = 360 / (t + 1);
        for (; n.length < t; ) {
          (a -= l) < 0 && (a += 360);
          let {
            r: e,
            g: t,
            b: s,
          } = o(
            (function (e, t, n) {
              n /= 100;
              let s = (t * Math.min(n, 1 - n)) / 100,
                i = t => {
                  let i = (t + e / 30) % 12,
                    r = n - s * Math.max(Math.min(i - 3, 9 - i, 1), -1);
                  return Math.round(255 * r)
                    .toString(16)
                    .padStart(2, "0");
                };
              return "#".concat(i(0)).concat(i(8)).concat(i(4));
            })(a, d, u)
          );
          n.push([e, t, s]);
        }
        return n;
      }
      function f(e) {
        let { red: t, green: n, blue: s } = e,
          i = [t, n, s].map(e =>
            (e /= 255) <= 0.03928
              ? e / 12.92
              : Math.pow((e + 0.055) / 1.055, 2.4)
          );
        return 0.2126 * i[0] + 0.7152 * i[1] + 0.0722 * i[2];
      }
      function _(e) {
        let t = e[0],
          n = e[1],
          s = f(t),
          i = f(n);
        return (Math.max(s, i) + 0.05) / (Math.min(s, i) + 0.05);
      }
      function c(e, t, n) {
        let s, i;
        (e /= 255), (t /= 255), (n /= 255);
        let r = Math.max(e, t, n),
          a = Math.min(e, t, n),
          o = (r + a) / 2;
        if (r === a) s = i = 0;
        else {
          let d = r - a;
          switch (((i = o > 0.5 ? d / (2 - r - a) : d / (r + a)), r)) {
            case e:
              s = (t - n) / d + (t < n ? 6 : 0);
              break;
            case t:
              s = (n - e) / d + 2;
              break;
            case n:
              s = (e - t) / d + 4;
          }
          null == s ? (s = 0) : (s /= 6);
        }
        return { hue: 360 * s, saturation: i, lightness: o, alpha: 1 };
      }
      function g(e, t, n) {
        let s, r, a;
        if (((e /= 360), 0 === t)) s = r = a = n;
        else {
          let i = function (e, t, n) {
              return (n < 0 && (n += 1), n > 1 && (n -= 1), n < 1 / 6)
                ? e + (t - e) * 6 * n
                : n < 0.5
                  ? t
                  : n < 2 / 3
                    ? e + (t - e) * (2 / 3 - n) * 6
                    : e;
            },
            o = n < 0.5 ? n * (1 + t) : n + t - n * t,
            d = 2 * n - o;
          (s = i(d, o, e + 1 / 3)), (r = i(d, o, e)), (a = i(d, o, e - 1 / 3));
        }
        return new i.default(
          Math.round(255 * s),
          Math.round(255 * r),
          Math.round(255 * a),
          1
        );
      }
      function m(e, t) {
        let n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
          s = c(e.red, e.green, e.blue);
        return (
          n
            ? (s.lightness = s.lightness + t > 1 ? 0.9 : s.lightness + t)
            : (s.lightness = s.lightness - t < 0 ? 0.1 : s.lightness - t),
          g(s.hue, s.saturation, s.lightness)
        );
      }
      function h(e) {
        let { colors: t, ratio: n = 5, saturationFactor: i = 1 } = e;
        if (t.length < 2) return;
        let r = t[0],
          a = t[1];
        if (null == a || null == r) return;
        let o = (0, s.hex2int)(a.toHexString()),
          d = (0, s.getDarkness)(o) > 0.5,
          u = _([r, a]),
          l = c(r.red, r.green, r.blue);
        for (l.saturation *= i; u < n && null != l; ) {
          if (d) {
            if (l.lightness < 0.95) l.lightness += 0.05;
            else break;
          } else if (l.lightness > 0.05) l.lightness -= 0.05;
          else break;
          u = _([g(l.hue, l.saturation, l.lightness), t[1]]);
        }
        return g(l.hue, l.saturation, l.lightness);
      }
      function v(e) {
        let t = e
          .slice(0, 3)
          .map(e => {
            var t;
            return {
              hex: e,
              hsv:
                null !==
                  (t = (function (e) {
                    let t, n, s, i, r;
                    var a,
                      o,
                      d,
                      u = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);
                    if (null == u) return null;
                    var l = parseInt(u[1], 16),
                      f = parseInt(u[2], 16),
                      _ = parseInt(u[3], 16);
                    let c = l / 255,
                      g = f / 255,
                      m = _ / 255,
                      h = Math.max(c, g, m),
                      v = h - Math.min(c, g, m),
                      E = e => Math.round(100 * e) / 100;
                    if (0 === v) i = r = 0;
                    else {
                      (r = v / h),
                        (a = c),
                        (t = (h - a) / 6 / v + 0.5),
                        (o = g),
                        (n = (h - o) / 6 / v + 0.5),
                        (d = m),
                        (s = (h - d) / 6 / v + 0.5),
                        (i =
                          c === h
                            ? s - n
                            : g === h
                              ? 1 / 3 + t - s
                              : m === h
                                ? 2 / 3 + n - t
                                : 0) < 0
                          ? (i += 1)
                          : i > 1 && (i -= 1);
                    }
                    return {
                      h: Math.round(360 * i),
                      s: E(100 * r),
                      v: E(100 * h),
                    };
                  })(e)) && void 0 !== t
                  ? t
                  : { h: 0, s: 0, v: 0 },
            };
          })
          .sort(E);
        return t[0].hex;
      }
      function E(e, t) {
        let n = e.hsv,
          s = t.hsv;
        return s.s + s.v - (n.s + n.v);
      }
      function p(e) {
        var t;
        let { colorRGB: n, saturationFactor: s = 1 } = e;
        if (null == n) return n;
        let i = c(n.red, n.green, n.blue);
        if (null == i) return null == n ? void 0 : n.toHexString();
        return null === (t = g(i.hue, i.saturation * s, i.lightness)) ||
          void 0 === t
          ? void 0
          : t.toHexString();
      }
      function y(e, t, n) {
        let s = parseInt(e.substring(1, 3), 16),
          i = parseInt(e.substring(3, 5), 16),
          r = parseInt(e.substring(5, 7), 16),
          a = parseInt(t.substring(1, 3), 16),
          o = parseInt(t.substring(3, 5), 16),
          d = parseInt(t.substring(5, 7), 16),
          u = Math.round(s + (a - s) * n)
            .toString(16)
            .padStart(2, "0"),
          l = Math.round(i + (o - i) * n)
            .toString(16)
            .padStart(2, "0"),
          f = Math.round(r + (d - r) * n)
            .toString(16)
            .padStart(2, "0");
        return "#".concat(u).concat(l).concat(f);
      }
    },
    240873: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          sanitizeEmbed: function () {
            return E;
          },
          mergeEmbedsOnURL: function () {
            return p;
          },
          isEmbedInline: function () {
            return y;
          },
          isServerShopArticleEmbed: function () {
            return T;
          },
          getMaxEmbedMediaSize: function () {
            return C;
          },
        }),
        n("222007"),
        n("702976"),
        n("424973");
      var s = n("917351"),
        i = n.n(s),
        r = n("866227"),
        a = n.n(r),
        o = n("509043"),
        d = n("299039"),
        u = n("49111");
      let l = /sketchfab/i,
        f = /^https:\/\/sketchfab\.com/i,
        _ =
          /youtube|steam|imgur|vimeo|sketchfab|soundcloud|streamable|twitch|vid\.me|twitter/i,
        c =
          /^https?:\/\/(?:canary\.|ptb\.|www\.)?discord(?:app)?\.com\/channels\/([0-9]+)\/shop$/,
        g =
          /^https?:\/\/(?:canary\.|ptb\.|www\.)?discord(?:app)?\.com\/channels\/([0-9]+)\/shop\/([0-9]+)$/,
        m = new Set([
          u.MessageEmbedTypes.AUTO_MODERATION_MESSAGE,
          u.MessageEmbedTypes.AUTO_MODERATION_NOTIFICATION,
          u.MessageEmbedTypes.RICH,
          u.MessageEmbedTypes.SAFETY_POLICY_NOTICE,
          u.MessageEmbedTypes.SAFETY_SYSTEM_NOTIFICATION,
          u.MessageEmbedTypes.VOICE_CHANNEL,
        ]);
      function h(e) {
        let { width: t, height: n } = e;
        return t > 0 && n > 0;
      }
      function v(e) {
        let {
          url: t,
          proxy_url: n,
          width: s,
          height: i,
          placeholder: r,
          placeholder_version: a,
        } = e;
        return {
          url: t,
          proxyURL: n,
          width: s,
          height: i,
          placeholder: r,
          placeholderVersion: a,
        };
      }
      function E(e, t, n) {
        let s = {
          id: i.uniqueId("embed_"),
          url: n.url,
          type: n.type,
          rawTitle: n.title,
          rawDescription: n.description,
          referenceId: n.reference_id,
          flags: n.flags,
          contentScanVersion: n.content_scan_version,
        };
        if (
          (null != n.footer &&
            (s.footer = {
              text: n.footer.text,
              iconURL: n.footer.icon_url,
              iconProxyURL: n.footer.proxy_icon_url,
            }),
          null != n.author &&
            null != n.author.name &&
            (s.author = {
              name: n.author.name,
              url: n.author.url,
              iconURL: n.author.icon_url,
              iconProxyURL: n.author.proxy_icon_url,
            }),
          null != n.provider &&
            null != n.provider.name &&
            (s.provider = { name: n.provider.name, url: n.provider.url }),
          null != n.timestamp && (s.timestamp = a(new Date(n.timestamp))),
          null != n.color && (s.color = (0, o.int2hsl)(n.color, !0)),
          null != n.thumbnail && h(n.thumbnail))
        )
          switch (s.type) {
            case u.MessageEmbedTypes.ARTICLE:
            case u.MessageEmbedTypes.IMAGE:
              s.image = v(n.thumbnail);
              break;
            default:
              s.thumbnail = v(n.thumbnail);
          }
        if (
          (null != n.image && h(n.image) && (s.image = v(n.image)),
          null != n.video &&
            (null == s.thumbnail &&
              null != n.video.proxy_url &&
              h(n.video) &&
              (s.thumbnail = {
                width: n.video.width,
                height: n.video.height,
                url: "".concat(n.video.proxy_url, "?format=jpeg"),
              }),
            null != s.thumbnail &&
              h(n.video) &&
              (function (e, t, n) {
                if ((null != t && l.test(t.name)) || f.test(n.url)) return !1;
                let s = null != n.proxy_url || /^https:/i.test(n.url);
                return (
                  1492472454139 > d.default.extractTimestamp(e) &&
                    (s = s && null != t && _.test(t.name)),
                  s
                );
              })(t, n.provider, n.video) &&
              (s.video = v(n.video))),
          m.has(s.type))
        ) {
          var r;
          let e = null !== (r = n.fields) && void 0 !== r ? r : [];
          s.fields = e.map(e => {
            let { name: t, value: n, inline: s } = e;
            return { rawName: t, rawValue: n, inline: s };
          });
        } else s.fields = [];
        return s;
      }
      function p(e) {
        let t = new Map(),
          n = [];
        return (
          e.forEach(e => {
            if (null == e.url) {
              n.push(e);
              return;
            }
            let s = t.get(e.url);
            if (null == s) {
              n.push(e), t.set(e.url, e);
              return;
            }
            null != e.image &&
              (null == s.images &&
                ((s.images = []), null != s.image && s.images.push(s.image)),
              s.images.push(e.image));
          }),
          n
        );
      }
      function y(e) {
        let { image: t, video: n, type: s, author: i, rawTitle: r } = e;
        return (
          (null != t || null != n) &&
          (s === u.MessageEmbedTypes.GIFV ||
            (s !== u.MessageEmbedTypes.RICH && null == i && null == r))
        );
      }
      function T(e) {
        return (
          e.type === u.MessageEmbedTypes.ARTICLE &&
          null != e.url &&
          (g.test(e.url) || c.test(e.url))
        );
      }
      function C(e, t, n) {
        var s;
        return null != t && null != n
          ? { maxMediaWidth: t, maxMediaHeight: n }
          : (null === (s = e.provider) || void 0 === s ? void 0 : s.name) ===
              "TikTok"
            ? { maxMediaWidth: 400, maxMediaHeight: 450 }
            : { maxMediaWidth: 400, maxMediaHeight: 300 };
      }
    },
    402671: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          countEmoji: function () {
            return T;
          },
          default: function () {
            return C;
          },
          getEmojiColors: function () {
            return S;
          },
          getEmojiUrl: function () {
            return I;
          },
        }),
        n("222007"),
        n("781738"),
        n("808653"),
        n("424973");
      var s = n("736271"),
        i = n("858619"),
        r = n("153043"),
        a = n("233069"),
        o = n("957255"),
        d = n("697218"),
        u = n("315102"),
        l = n("61069"),
        f = n("103603"),
        _ = n("719923"),
        c = n("49111"),
        g = n("958706");
      let m = new Set([
          g.EmojiDisabledReasons.PREMIUM_LOCKED,
          g.EmojiDisabledReasons.ROLE_SUBSCRIPTION_LOCKED,
        ]),
        h = new Set([
          g.EmojiDisabledReasons.PREMIUM_LOCKED,
          g.EmojiDisabledReasons.GUILD_SUBSCRIPTION_UNAVAILABLE,
          g.EmojiDisabledReasons.ROLE_SUBSCRIPTION_LOCKED,
          g.EmojiDisabledReasons.ROLE_SUBSCRIPTION_UNAVAILABLE,
        ]),
        v = new Set([
          g.EmojiDisabledReasons.DISALLOW_EXTERNAL,
          g.EmojiDisabledReasons.GUILD_SUBSCRIPTION_UNAVAILABLE,
          g.EmojiDisabledReasons.ONLY_GUILD_EMOJIS_ALLOWED,
        ]);
      function E(e) {
        if (e.type === i.EmojiTypes.GUILD) return !0;
        return null != e.guildId;
      }
      function p(e, t) {
        return null != e && null != t && (!E(e) || t === e.guildId);
      }
      function y(e) {
        var t;
        let {
          emoji: n,
          channel: i,
          intention: u,
          forceIncludeExternalGuilds: l,
        } = e;
        if (u === g.EmojiIntention.COMMUNITY_CONTENT_ONLY && null == n.guildId)
          return g.EmojiDisabledReasons.ONLY_GUILD_EMOJIS_ALLOWED;
        if (!E(n)) return null;
        let f =
            null !== (t = e.guildId) && void 0 !== t
              ? t
              : null == i
                ? void 0
                : i.getGuildId(),
          m = null != i && (0, a.isGuildTextChannelType)(i.type),
          h = null != i && (0, a.isGuildVocalChannelType)(i.type),
          v = p(n, f),
          y = o.default.can(c.Permissions.USE_EXTERNAL_EMOJIS, i);
        if (
          u === g.EmojiIntention.COMMUNITY_CONTENT ||
          u === g.EmojiIntention.COMMUNITY_CONTENT_ONLY
        )
          return v && n.available
            ? null
            : g.EmojiDisabledReasons.DISALLOW_EXTERNAL;
        if (
          (!(0, g.isExternalEmojiAllowedForIntention)(u) && !p(n, f) && !l) ||
          ((m || h) && !v && !y)
        )
          return g.EmojiDisabledReasons.DISALLOW_EXTERNAL;
        if (!n.available)
          return g.EmojiDisabledReasons.GUILD_SUBSCRIPTION_UNAVAILABLE;
        let T = d.default.getCurrentUser();
        if (!_.default.canUseEmojisEverywhere(T) && !v) {
          if (u === g.EmojiIntention.STATUS)
            return g.EmojiDisabledReasons.PREMIUM_LOCKED;
          if (!n.managed) return g.EmojiDisabledReasons.PREMIUM_LOCKED;
        }
        if ((0, r.isUnusableRoleSubscriptionEmoji)(n, null != f ? f : void 0))
          return (0, s.shouldHideGuildPurchaseEntryPoints)(n.guildId)
            ? g.EmojiDisabledReasons.ROLE_SUBSCRIPTION_UNAVAILABLE
            : g.EmojiDisabledReasons.ROLE_SUBSCRIPTION_LOCKED;
        return !n.animated ||
          _.default.canUseAnimatedEmojis(T) ||
          (0, r.isPurchasableRoleSubscriptionEmoji)(n)
          ? null
          : g.EmojiDisabledReasons.PREMIUM_LOCKED;
      }
      function T(e, t) {
        let n = 0,
          s = 0,
          r = 0,
          a = 0,
          o = 0,
          d = 0;
        return (
          e.forEach(e => {
            null != e.id
              ? (e.type === i.EmojiTypes.GUILD &&
                  (e.guildId === t
                    ? e.managed
                      ? a++
                      : s++
                    : e.managed
                      ? o++
                      : r++),
                e.animated && d++)
              : n++;
          }),
          {
            unicode: n,
            custom: s,
            customExternal: r,
            managed: a,
            managedExternal: o,
            animated: d,
          }
        );
      }
      var C = {
        sanitizeEmojiName(e) {
          for (
            e = e.replace(g.EMOJI_RE, "").slice(0, g.EMOJI_MAX_LENGTH);
            e.length < 2;

          )
            e += "_";
          return e;
        },
        filterUnsupportedEmojis: l.default.filterUnsupportedEmojis,
        getURL: l.default.getURL,
        isInternalEmojiForGuildId: p,
        getEmojiUnavailableReason: y,
        isCustomEmoji: E,
        isEmojiFiltered(e) {
          let { emoji: t, channel: n, intention: s, guildId: i } = e,
            r = y({ emoji: t, channel: n, intention: s, guildId: i });
          return v.has(r);
        },
        isEmojiPremiumLocked(e) {
          let { emoji: t, channel: n, intention: s, guildId: i } = e,
            r = y({ emoji: t, channel: n, guildId: i, intention: s });
          return m.has(r);
        },
        isEmojiCategoryNitroLocked(e) {
          let { categoryEmojis: t, channel: n, intention: s } = e,
            i = t.reduce((e, t) => {
              let i = y({ emoji: t, channel: n, intention: s });
              return (
                (i === g.EmojiDisabledReasons.PREMIUM_LOCKED ||
                  i ===
                    g.EmojiDisabledReasons.GUILD_SUBSCRIPTION_UNAVAILABLE) &&
                  e.push(i),
                e
              );
            }, []),
            r = i.some(e => e === g.EmojiDisabledReasons.PREMIUM_LOCKED);
          return r && i.length === t.length;
        },
        isEmojiFilteredOrLocked(e) {
          let { emoji: t, channel: n, intention: s } = e;
          return (
            this.isEmojiFiltered({ emoji: t, channel: n, intention: s }) ||
            this.isEmojiPremiumLocked({ emoji: t, channel: n, intention: s })
          );
        },
        isEmojiDisabled(e) {
          let { emoji: t, channel: n, intention: s } = e,
            i = y({ emoji: t, channel: n, intention: s });
          return h.has(i);
        },
        isFileTooBig: e => e.size > 2097152,
        isDataTooBig: e => (0, f.dataUriFileSize)(e) > g.EMOJI_MAX_FILESIZE,
      };
      async function S(e) {
        return await l.default.getEmojiColors(e);
      }
      function I(e) {
        let t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 32,
          { id: n, name: s, animated: i } = e;
        return null != n
          ? u.default.getEmojiURL({ id: n, size: t, animated: null != i && i })
          : l.default.getURL(s);
      }
    },
    61069: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        }),
        n("222007"),
        n("781738");
      var s = n("895547"),
        i = n("315102"),
        r = n("284679"),
        a = n("103603"),
        o = n("261742");
      let d = new Set(["™", "™️", "\xa9", "\xa9️", "\xae", "\xae️"]);
      function u(e) {
        if (d.has(e)) return "";
        try {
          let t = 0 > e.indexOf("‍") ? e.replace("️", "") : e;
          return n("331246")(
            "@discordapp/twemoji/dist/svg/"
              .concat(s.default.convert.toCodePoint(t), ".svg")
              .replace("@discordapp/twemoji/dist/svg/", "./")
          );
        } catch (t) {
          return console.warn(t, "no emoji for", e), "";
        }
      }
      async function l(e) {
        let t;
        let { id: n, name: s } = e;
        t =
          null != n
            ? i.default.getEmojiURL({ id: n, size: 32, animated: !1 })
            : u(s);
        let o = await (0, a.getPaletteForAvatar)(t);
        return null == o
          ? void 0
          : o.map(e => {
              let [t, n, s] = e;
              return (0, r.rgbToHex)(t, n, s);
            });
      }
      var f = {
        getURL: o.default.makeMemoizer(u),
        filterUnsupportedEmojis: function (e) {
          return e;
        },
        applyPlatformToThemedEmojiColorPalette: function (e) {
          let { palette: t, shouldProcessMobileColors: n = !1 } = e;
          return t;
        },
        getEmojiColors: l,
        triggerFullscreenAnimation: function (e) {
          let { channelId: t, messageId: n, emoji: s } = e;
        },
      };
    },
    284609: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          validateDiscordTag: function () {
            return l;
          },
          humanizeAbortCode: function () {
            return f;
          },
        }),
        n("222007");
      var s = n("599110"),
        i = n("340454"),
        r = n("49111"),
        a = n("782340");
      let o = /^\d+$/,
        d = /^(.+?@.+?\..+?|.+?#\d{4})$/,
        u = /^[a-zA-Z0-9_\\.]+$/;
      function l(e) {
        return u.test(e) || (e.includes("#") && d.test(e))
          ? null
          : ((function (e) {
              let [t, n] = e.split("#");
              s.default.track(r.AnalyticEvents.FRIEND_REQUEST_FAILED, {
                reason: "Invalid Username",
                query: e,
                discrim_len: (null != n ? n : "").length,
                username_len: t.length,
                is_email_like: i.default.isEmail(e),
                is_invite_like: i.default.isInvite(e),
                is_num_only: o.test(e),
              });
            })(e),
            a.default.Messages.POMELO_ADD_FRIEND_ERROR);
      }
      function f(e, t) {
        switch (e) {
          case r.AbortCodes.RELATIONSHIP_INCOMING_DISABLED:
            return a.default.Messages.ADD_FRIEND_ERROR_INVALID_DISCORD_TAG.format(
              { discordTag: t }
            );
          case r.AbortCodes.TOO_MANY_FRIENDS:
            return a.default.Messages.ADD_FRIEND_ERROR_TOO_MANY_FRIENDS;
          case r.AbortCodes.RELATIONSHIP_ALREADY_FRIENDS:
            return a.default.Messages.ADD_FRIEND_ERROR_ALREADY_FRIENDS;
          case r.AbortCodes.USER_QUARANTINED:
          case r.AbortCodes.USER_FRIEND_REQUEST_LIMITED_ACCESS:
            return a.default.Messages.LIMITED_ACCESS_INFO_MODAL_HEADING;
          case r.AbortCodes.TOO_MANY_BLOCKED_USERS:
            return a.default.Messages.BLOCK_USER_ERROR_TOO_MANY_BLOCKED_USERS;
          case r.AbortCodes.RELATIONSHIP_INCOMING_BLOCKED:
          case r.AbortCodes.RELATIONSHIP_INVALID_SELF:
          case r.AbortCodes.RELATIONSHIP_INVALUD_USER_BOT:
          case r.AbortCodes.RELATIONSHIP_INVALID_DISCORD_TAG:
          default:
            return a.default.Messages.POMELO_ADD_FRIEND_ERROR;
        }
      }
    },
    659632: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          isCustomGiftEnabled: function () {
            return M;
          },
          GiftExperience: function () {
            return s;
          },
          GIFT_EXPERIENCES_WITH_CUSTOM_MESSAGING: function () {
            return w;
          },
          GIFT_EXPERIENCES_WITH_CUSTOM_EMOJI_SOUNDBOARD: function () {
            return L;
          },
          getGiftExperience: function () {
            return U;
          },
          shouldShowCustomGiftExperience: function () {
            return G;
          },
          makeComboId: function () {
            return F;
          },
          parseComboId: function () {
            return H;
          },
          isGiftCodeEmbed: function () {
            return x;
          },
          findGiftCodes: function () {
            return Y;
          },
          getGiftCodeURL: function () {
            return j;
          },
          resolveGiftCode: function () {
            return K;
          },
          trackGiftCodeCopy: function () {
            return W;
          },
          getStep: function () {
            return z;
          },
          getHeaderText: function () {
            return q;
          },
          getButtonText: function () {
            return X;
          },
          getBodyText: function () {
            return Q;
          },
          getErrorMessage: function () {
            return Z;
          },
          firstLibraryApplicationForGiftCode: function () {
            return J;
          },
          processGiftCodeInput: function () {
            return $;
          },
          useGetGiftCode: function () {
            return ee;
          },
        }),
        n("222007"),
        n("781738"),
        n("794252");
      var s,
        i,
        r = n("506838"),
        a = n("446674"),
        o = n("333805"),
        d = n("791160"),
        u = n("977591"),
        l = n("353365"),
        f = n("697218"),
        _ = n("599110"),
        c = n("449008"),
        g = n("773336"),
        m = n("719923"),
        h = n("655518"),
        v = n("271560"),
        E = n("49111"),
        p = n("646718"),
        y = n("782340");
      let T = h.default.escape(window.GLOBAL_ENV.GIFT_CODE_HOST),
        C = ["discordapp.com/gifts", "discord.com/gifts"].map(e =>
          h.default.escape(e)
        ),
        S = [T, ...C].join("|"),
        I = RegExp("(?: |^|https?://)(?:".concat(S, ")/([a-z0-9-]+)"), "gi"),
        A = ["discord.com/billing/promotions", "promos.discord.gg"].map(e =>
          h.default.escape(e)
        ),
        D = [...A].join("|"),
        N = RegExp("(?: |^|https?://)(?:".concat(D, ")/([a-z0-9-]+)"), "gi"),
        O = (e, t) =>
          Array(t)
            .fill(void 0)
            .map(() =>
              "["
                .concat(
                  "abcdefghjkmnpqrstuvwxyzABCDEFGHJKMNPQRSTUVWXYZ23456789",
                  "]{"
                )
                .concat(e, "}")
            )
            .join("-?"),
        P = O(4, 4),
        b = O(4, 6),
        V = O(5, 3),
        R = [P, b, V, "[a-zA-Z]{4}-?[0-9a-zA-Z]{4}-?[a-zA-Z]{4}"].join("|"),
        k = new RegExp("^(".concat("WUMP-?", ")?(").concat(R, ")$")),
        M = e => null != e && !0;
      ((i = s || (s = {}))[(i.DEFAULT = 0)] = "DEFAULT"),
        (i[(i.CUSTOM_STYLE = 1)] = "CUSTOM_STYLE"),
        (i[(i.CUSTOM_MESSAGE = 2)] = "CUSTOM_MESSAGE"),
        (i[(i.EMOJI_SOUNDBOARD = 3)] = "EMOJI_SOUNDBOARD");
      let w = new Set([2, 3]),
        L = new Set([3]),
        U = function (e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
            n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : "getGiftExperience";
          return null != e
            ? 3
            : u.ExpandedGiftingRevampExperiment.getCurrentConfig(
                  { location: n },
                  { autoTrackExposure: t }
                ).enabled
              ? 1
              : 0;
        },
        G = function (e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
            n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : "shouldShowCustomGiftExperience";
          return 0 !== U(e, t, n);
        };
      function F(e) {
        let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : null,
          n = arguments.length > 2 ? arguments[2] : void 0;
        return ""
          .concat(e, ":")
          .concat(null != t ? t : "", ":")
          .concat(null != n ? n : "");
      }
      function H(e) {
        let [t, n, s] = e.split(":");
        return {
          skuId: t,
          subscriptionPlanId: "" === n ? null : n,
          giftStyle: "" !== s && null != s ? Number.parseInt(s) : void 0,
        };
      }
      function B(e) {
        return e.replace(/[^A-Za-z0-9]/g, "");
      }
      let x = e =>
          (null == e ? void 0 : e.type) === E.MessageTypes.CUSTOM_GIFT &&
          (null == e ? void 0 : e.embeds.length) === 1 &&
          (null == e ? void 0 : e.embeds[0].type) === E.MessageEmbedTypes.GIFT,
        Y = e => {
          let t;
          if (null == e) return [];
          let n = new Set();
          for (; null != (t = I.exec(e)) && n.size < 3; ) n.add(B(t[1]));
          for (; null != (t = N.exec(e)) && n.size < 3; ) n.add(B(t[1]));
          return Array.from(n);
        };
      function j() {
        let e,
          t =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "",
          n = window.GLOBAL_ENV.GIFT_CODE_HOST;
        return (
          null == n || (0, g.isAndroid)()
            ? ((n = location.host), (e = "/gifts/".concat(t)))
            : (e = "/".concat(t)),
          "".concat(location.protocol, "//").concat(n).concat(e)
        );
      }
      async function K(e) {
        let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
          n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
        try {
          let s = await (0, v.httpGetWithCountryCodeQuery)({
              url: E.Endpoints.GIFT_CODE_RESOLVE(e),
              query: { with_application: t, with_subscription_plan: n },
              oldFormErrors: !0,
            }),
            i = s.body;
          return (
            _.default.track(
              E.AnalyticEvents.GIFT_CODE_RESOLVED,
              {
                resolved: !0,
                gift_code: i.code,
                gift_code_max_uses: i.max_uses,
                sku_id: i.store_listing.sku.id,
                sku_type: i.store_listing.sku.type,
                application_id: i.store_listing.sku.application_id,
                store_title: i.store_listing.sku.name,
              },
              { flush: !0 }
            ),
            i
          );
        } catch (t) {
          throw (
            (_.default.track(E.AnalyticEvents.GIFT_CODE_RESOLVED, {
              resolved: !1,
              gift_code: e,
            }),
            new o.default(t))
          );
        }
      }
      function W(e, t) {
        _.default.track(E.AnalyticEvents.GIFT_CODE_COPIED, {
          ...(0, d.default)(t, !1, !1),
          ...e.analyticsData,
        });
      }
      function z(e, t, n, s, i, r, a) {
        return null == n && (s || i || null == e)
          ? !a || r || s || i
            ? s && (t.isSubscription || null != e)
              ? E.GiftCodeModalStates.SUCCESS
              : E.GiftCodeModalStates.CONFIRM
            : E.GiftCodeModalStates.OPEN
          : E.GiftCodeModalStates.ERROR;
      }
      function q(e, t, n) {
        switch (e) {
          case E.GiftCodeModalStates.ERROR:
            return y.default.Messages.GIFT_CONFIRMATION_HEADER_FAIL;
          case E.GiftCodeModalStates.SUCCESS:
            return t.isSubscription
              ? y.default.Messages.GIFT_CONFIRMATION_HEADER_SUCCESS_NITRO.format(
                  { skuName: n.name }
                )
              : y.default.Messages.GIFT_CONFIRMATION_HEADER_SUCCESS;
          case E.GiftCodeModalStates.CONFIRM:
          default:
            return t.isSubscription
              ? y.default.Messages.GIFT_CONFIRMATION_HEADER_CONFIRM_NITRO.format(
                  { skuName: n.name }
                )
              : y.default.Messages.GIFT_CONFIRMATION_HEADER_CONFIRM;
        }
      }
      function X(e, t, n) {
        switch (e) {
          case E.GiftCodeModalStates.ERROR:
            return y.default.Messages.GIFT_CONFIRMATION_BUTTON_FAIL;
          case E.GiftCodeModalStates.SUCCESS:
            if (__OVERLAY__)
              return y.default.Messages.GIFT_CONFIRMATION_BUTTON_NOICE;
            if (t.isSubscription)
              return y.default.Messages
                .GIFT_CONFIRMATION_BUTTON_SUBSCRIPTION_SUCCESS;
            return y.default.Messages.GIFT_CONFIRMATION_BUTTON_GO_TO_LIBRARY;
          case E.GiftCodeModalStates.OPEN:
            return y.default.Messages.GIFT_OPEN_PROMPT;
          case E.GiftCodeModalStates.CONFIRM:
          default:
            if (null != n && n) return y.default.Messages.GIFT_CODE_AUTH_ACCEPT;
            if (null != t.giftStyle)
              return t.isClaimed
                ? y.default.Messages.GIFT_CONFIRMATION_BUTTON_CONFIRM
                : y.default.Messages.GIFT_CONFIRMATION_BUTTON_CONFIRM_MOBILE;
            return t.isSubscription
              ? y.default.Messages.GIFT_CONFIRMATION_BUTTON_CONFIRM_SUBSCRIPTION
              : y.default.Messages.GIFT_CONFIRMATION_BUTTON_CONFIRM;
        }
      }
      function Q(e) {
        let {
          step: t,
          sku: n,
          libraryApplication: s,
          error: i,
          accepted: a,
          accepting: o,
          onGoToLibrary: d,
          subscriptionPlan: u = null,
        } = e;
        switch (t) {
          case E.GiftCodeModalStates.ERROR:
            return Z(s, i, a, o, d);
          case E.GiftCodeModalStates.SUCCESS:
            if (null != u) {
              var l;
              return (
                (l = u),
                (0, r.match)(l)
                  .with(
                    {
                      interval: p.SubscriptionIntervalTypes.MONTH,
                      premiumSubscriptionType: p.PremiumTypes.TIER_2,
                    },
                    () =>
                      y.default.Messages.PREMIUM_FEATURES_TIER_2.format({
                        timeInterval:
                          y.default.Messages
                            .PREMIUM_SUBSCRIPTION_INTERVAL_MONTH,
                      })
                  )
                  .with(
                    {
                      interval: p.SubscriptionIntervalTypes.YEAR,
                      premiumSubscriptionType: p.PremiumTypes.TIER_2,
                    },
                    () =>
                      y.default.Messages.PREMIUM_FEATURES_TIER_2.format({
                        timeInterval:
                          y.default.Messages.PREMIUM_SUBSCRIPTION_INTERVAL_YEAR,
                      })
                  )
                  .with(
                    {
                      interval: p.SubscriptionIntervalTypes.MONTH,
                      premiumSubscriptionType: p.PremiumTypes.TIER_1,
                    },
                    () =>
                      y.default.Messages.GIFT_CONFIRMATION_BODY_SUCCESS_PREMIUM_TIER_1_MONTHLY.format(
                        { intervalCount: l.intervalCount }
                      )
                  )
                  .with(
                    {
                      interval: p.SubscriptionIntervalTypes.YEAR,
                      premiumSubscriptionType: p.PremiumTypes.TIER_1,
                    },
                    () =>
                      y.default.Messages.GIFT_CONFIRMATION_BODY_SUCCESS_PREMIUM_TIER_1_YEARLY.format(
                        { intervalCount: l.intervalCount }
                      )
                  )
                  .otherwise(
                    () =>
                      y.default.Messages.GIFT_CONFIRMATION_BODY_SUCCESS_GENERIC
                  )
              );
            }
            return y.default.Messages.GIFT_CONFIRMATION_BODY_SUCCESS.format({
              skuName: n.name,
            });
          case E.GiftCodeModalStates.CONFIRM:
          default:
            if (null != u) {
              let e =
                u.interval === p.SubscriptionIntervalTypes.MONTH
                  ? y.default.Messages
                      .GIFT_CONFIRMATION_BODY_SUBSCRIPTION_MONTHLY_CONFIRM
                  : y.default.Messages
                      .GIFT_CONFIRMATION_BODY_SUBSCRIPTION_YEARLY_CONFIRM;
              return e.format({
                skuName: n.name,
                intervalCount: u.intervalCount,
              });
            }
            return y.default.Messages.GIFT_CONFIRMATION_BODY_CONFIRM.format({
              skuName: n.name,
            });
        }
      }
      function Z(e, t, n, s, i) {
        let r = y.default.Messages.GIFT_CONFIRMATION_BODY_OWNED.format({
          onGoToLibrary: i,
        });
        if (null != (n || s ? void 0 : e)) return r;
        if (null == t) return null;
        let a = f.default.getCurrentUser();
        return (function (e, t) {
          switch (e.code) {
            case E.AbortCodes.INVALID_GIFT_SELF_REDEMPTION:
              return y.default.Messages
                .GIFT_CONFIRMATION_BODY_SELF_GIFT_NO_PAYMENT;
            case E.AbortCodes.INVALID_GIFT_REDEMPTION_EXHAUSTED:
              return y.default.Messages.GIFT_CONFIRMATION_BODY_CLAIMED;
            case E.AbortCodes.INVALID_GIFT_REDEMPTION_OWNED:
              return y.default.Messages.GIFT_ERROR_OWNED;
            case E.AbortCodes.UNKNOWN_GIFT_CODE:
              return y.default.Messages.GIFT_CONFIRMATION_BODY_INVALID;
            case E.AbortCodes.INVALID_GIFT_REDEMPTION_SUBSCRIPTION_INCOMPATIBLE:
              return y.default.Messages.GIFT_EMBED_BODY_SUBSCRIPTION_MISMATCH.format(
                {
                  planName: (0, m.isPremiumExactly)(t, p.PremiumTypes.TIER_2)
                    ? y.default.Messages.PREMIUM_TIER_2
                    : y.default.Messages.PREMIUM_TIER_1,
                }
              );
            case E.AbortCodes.INVALID_GIFT_REDEMPTION_SUBSCRIPTION_MANAGED:
              return y.default.Messages
                .GIFT_CONFIRMATION_BODY_ERROR_SUBSCRIPTION_MANAGED;
            case E.AbortCodes.INVALID_GIFT_REDEMPTION_INVOICE_OPEN:
              return y.default.Messages
                .GIFT_CONFIRMATION_BODY_ERROR_INVOICE_OPEN;
            case E.AbortCodes.INVALID_GIFT_REDEMPTION_FRAUD_REJECTED:
              return y.default.Messages.GIFT_CODE_SMITE_REJECT_HELP_TEXT;
            case E.AbortCodes.BILLING_NON_REFUNDABLE_PAYMENT_SOURCE:
              return y.default.Messages.GIFT_CODE_PAYMENT_SOURCE_INVALID;
            default:
              return y.default.Messages.GIFT_CONFIRMATION_BODY_UNKNOWN_ERROR;
          }
        })(t, a);
      }
      function J(e, t, n) {
        let s = t.applicationId,
          i = e.length > 0 ? e : [s],
          r = i
            .map(e => n.getLibraryApplication(s, e, !0))
            .filter(c.isNotNullish);
        return r.length === i.length ? r[0] : null;
      }
      function $(e) {
        let t = e.trim().split("/").pop(),
          n = t.match(k);
        if (null == n) return null;
        let [s, i, r] = n;
        return null == r ? null : r.replace(/-/g, "");
      }
      let ee = (e, t) =>
        (0, a.useStateFromStores)([l.default], () => {
          if (null == e || !t) return null;
          let n = l.default.getGiftCode(e);
          return null == n || "" === n ? null : n;
        });
    },
    615931: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          resolveThunk: function () {
            return r;
          },
        });
      var s = n("917351"),
        i = n.n(s);
      let r = e => ("function" == typeof e ? e() : e);
      i.curry((e, t, n) => (r(t) ? e(n) : n({})));
    },
    80687: function (e, t, n) {
      "use strict";
      function s(e) {
        return Math.max(Math.min(e, 1), 0);
      }
      function i(e, t) {
        let { top: n, bottom: i, left: r, right: a } = e;
        return {
          top: null != n ? Math.floor(s(n) * t.height) : null,
          left: null != r ? Math.floor(s(r) * t.width) : null,
          bottom: null != i ? Math.floor(s(i) * t.height) : null,
          right: null != a ? Math.floor(s(a) * t.width) : null,
        };
      }
      function r(e, t) {
        let { width: n, height: i } = e;
        return {
          width: "auto" === n ? n : Math.floor(s(n) * t.width),
          height: "auto" === i ? i : Math.floor(s(i) * t.height),
        };
      }
      function a(e, t) {
        let { top: n, bottom: i, left: r, right: a } = e;
        return {
          top: null != n ? s(n / t.height) : null,
          left: null != r ? s(r / t.width) : null,
          bottom: null != i ? s(i / t.height) : null,
          right: null != a ? s(a / t.width) : null,
        };
      }
      function o(e, t) {
        let { width: n, height: s } = e;
        return {
          width: "auto" === n ? n : n / t.width,
          height: "auto" === s ? s : s / t.height,
        };
      }
      function d(e, t, n, s, i) {
        let { top: r, bottom: a, left: o, right: d } = e;
        if (
          (null == r && null == a
            ? ((r = 0), (a = n - i))
            : null == r && null != a
              ? (r = n - (a + i))
              : null != r && (a = n - (r + i)),
          null == o && null == d
            ? ((o = 0), (d = t - s))
            : null == o && null != d
              ? (o = t - (d + s))
              : null == d && null != o && (d = t - (o + s)),
          null == r || null == a || null == o || null == d)
        )
          throw Error(
            "Logically this can never happen based on our if/else statements"
          );
        return { top: r, left: o, bottom: a, right: d };
      }
      function u(e) {
        let { top: t, left: n, bottom: s, right: i } = e;
        return (
          0 === t || t <= s ? (s = null) : (t = null),
          0 === n || n <= i ? (i = null) : (n = null),
          { top: t, left: n, bottom: s, right: i }
        );
      }
      function l(e) {
        let { top: t, left: n, bottom: s, right: i } = e;
        return (
          s < 0 && ((t += s), (s = 0)),
          t < 0 && ((s += t), (t = 0)),
          i < 0 && ((n += i), (i = 0)),
          n < 0 && ((i += n), (n = 0)),
          { top: t, left: n, bottom: s, right: i }
        );
      }
      function f(e, t, n) {
        e = i(e, n);
        let { width: s, height: a } = r(t, n);
        return (
          (s = "string" == typeof s ? 0 : s),
          (a = "string" == typeof a ? 0 : a),
          d(e, n.width, n.height, s, a)
        );
      }
      function _(e, t, n) {
        let { top: s, left: i } = e,
          { x: r, y: f } =
            arguments.length > 3 && void 0 !== arguments[3]
              ? arguments[3]
              : { x: 0, y: 0 },
          { width: _, height: c } = t,
          g = u(
            l(
              d(
                { top: s + f, left: i + r, bottom: null, right: null },
                n.width,
                n.height,
                "number" == typeof _ ? _ : 0,
                "number" == typeof c ? c : 0
              )
            )
          );
        return [a(g, n), o(t, n)];
      }
      function c(e, t, n) {
        let { top: s, right: i } = e,
          { x: r, y: f } =
            arguments.length > 3 && void 0 !== arguments[3]
              ? arguments[3]
              : { x: 0, y: 0 },
          { width: _, height: c } = t,
          g = u(
            l(
              d(
                { top: s + f, left: null, bottom: null, right: i - r },
                n.width,
                n.height,
                "number" == typeof _ ? _ : 0,
                "number" == typeof c ? c : 0
              )
            )
          );
        return [a(g, n), o(t, n)];
      }
      n.r(t),
        n.d(t, {
          getAnchorCoordsFromLayoutSize: function () {
            return i;
          },
          getSizeFromLayoutSize: function () {
            return r;
          },
          getAnchorPercentageFromLayoutSize: function () {
            return a;
          },
          getSizePercentageFromSize: function () {
            return o;
          },
          getFullCoordsFromAnchorCoords: function () {
            return d;
          },
          getAnchorCoordsFromFullCoords: function () {
            return u;
          },
          fitFullCoordsToContainer: function () {
            return l;
          },
          getFullCoordsFromLayoutSize: function () {
            return f;
          },
          getLeftWidgetSpecs: function () {
            return _;
          },
          getRightWidgetSpecs: function () {
            return c;
          },
        }),
        n("70102");
    },
    730622: function (e, t, n) {
      "use strict";
      let s, i;
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        }),
        n("70102");
      var r = n("697218"),
        a = n("615931");
      let o = () => {
        throw Error("updateModal has not been implemented.");
      };
      {
        let e = n("670924");
        (s = e.showModal),
          (o = e.updateModalProps),
          (i = n("551042").closeModal);
      }
      function d(e) {
        let {
          promiseFn: t,
          resolve: n,
          reject: r,
          modalProps: a = {},
          hooks: { onEarlyClose: d } = {},
        } = e;
        if (null == s) {
          null == d || d();
          return;
        }
        let l = s(g, f, a);
        function f() {
          null == d || d();
        }
        function _(e) {
          i(l), n(e);
        }
        function c(e) {
          i(l), r(e);
        }
        function g(e) {
          return (
            o(l, g, f, { ...a, isLoading: !0 }),
            u({
              promiseFn: t,
              resolve: _,
              reject: c,
              code: e,
              mfaCodeHandler: m,
              isModalOpen: !0,
            })
          );
        }
        function m(e) {
          let { res: t } = e;
          o(l, g, f, { ...a, error: t.body.message });
        }
      }
      function u(e) {
        let {
          promiseFn: t,
          resolve: n,
          reject: s,
          code: i,
          mfaCodeHandler: r = d,
          isModalOpen: a = !1,
          ...o
        } = e;
        return t(null != i ? { code: i } : {}).then(n, e => {
          var i, d;
          if (
            ((i = e),
            (d = a),
            (i.body && 60008 === i.body.code) || (d && 429 === i.status))
          )
            return r({ promiseFn: t, resolve: n, reject: s, res: e, ...o });
          s(e);
        });
      }
      function l(e, t) {
        var n, s;
        let {
          checkEnabled: i = null !==
            (s =
              null === (n = r.default.getCurrentUser()) || void 0 === n
                ? void 0
                : n.mfaEnabled) &&
            void 0 !== s &&
            s,
          ...o
        } = null != t ? t : {};
        return new Promise((t, n) => {
          ((0, a.resolveThunk)(i) ? d : u)({
            promiseFn: e,
            resolve: t,
            reject: n,
            ...o,
          });
        });
      }
    },
    128259: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          isLinkTrusted: function () {
            return N;
          },
          handleClick: function () {
            return O;
          },
        });
      var s = n("404828"),
        i = n.n(s),
        r = n("404118"),
        a = n("145292"),
        o = n("545158"),
        d = n("195052"),
        u = n("352266"),
        l = n("630869"),
        f = n("537025"),
        _ = n("765089"),
        c = n("647374"),
        g = n("91984"),
        m = n("835174"),
        h = n("566271"),
        v = n("42203"),
        E = n("305961"),
        p = n("569983"),
        y = n("48703"),
        T = n("377253"),
        C = n("27618"),
        S = n("18494"),
        I = n("599110"),
        A = n("49111"),
        D = n("782340");
      function N(e, t) {
        var n;
        let s = v.default.getChannel(S.default.getChannelId());
        return (
          !!(
            null == s ||
            s.type !== A.ChannelTypes.DM ||
            C.default.isFriend(
              null !== (n = s.getRecipientId()) && void 0 !== n ? n : ""
            )
          ) && e === t
        );
      }
      function O(e, t) {
        let s =
            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [],
          {
            trusted: C,
            onClick: N,
            onConfirm: O,
            shouldConfirm: P,
            messageId: b,
            channelId: V,
          } = e,
          R = i.sanitizeUrl(e.href);
        if (null == R) {
          null != t && t.preventDefault(),
            r.default.show({
              title: D.default.Messages.HOLD_UP,
              body: D.default.Messages.MALFORMED_LINK_BODY.format({
                url: e.href,
              }),
              isDismissable: !0,
            });
          return;
        }
        let k = null,
          M = !1,
          w = b,
          L = V,
          U = null;
        if (null != b && null != V) {
          var G, F, H;
          let e = T.default.getMessage(V, b),
            t = v.default.getBasicChannel(V);
          k =
            null !== (H = null == t ? void 0 : t.guild_id) && void 0 !== H
              ? H
              : null;
          let n = E.default.getGuild(k),
            s =
              (null == e
                ? void 0
                : null === (G = e.messageReference) || void 0 === G
                  ? void 0
                  : G.guild_id) != null &&
              (null == e ? void 0 : e.webhookId) != null &&
              (null == e ? void 0 : e.hasFlag(A.MessageFlags.IS_CROSSPOST)) &&
              null != k;
          s &&
          (null == e
            ? void 0
            : null === (F = e.messageReference) || void 0 === F
              ? void 0
              : F.guild_id) != null
            ? ((w = e.messageReference.message_id),
              (L = e.messageReference.channel_id),
              (U = e.messageReference.guild_id))
            : (U = k);
          let i =
              (null == t ? void 0 : t.type) ===
                A.ChannelTypes.GUILD_ANNOUNCEMENT &&
              (null == n ? void 0 : n.hasFeature(A.GuildFeatures.COMMUNITY)) ===
                !0,
            r =
              (null == e ? void 0 : e.hasFlag(A.MessageFlags.EPHEMERAL)) === !0;
          M = null != e && !r && (s || i);
        }
        let B = v.default.getChannel(S.default.getChannelId()),
          x = E.default.getGuild(null == B ? void 0 : B.getGuildId());
        if (
          (null != B &&
            null != x &&
            x.hasFeature(A.GuildFeatures.DISCOVERABLE) &&
            I.default.track(A.AnalyticEvents.URL_CLICKED, {
              url_domain: (0, y.getHostname)(R),
              guild_id: x.id,
              channel_id: B.id,
            }),
          _.default.trackLinkClicked(R),
          null != N)
        ) {
          if (N(t)) return;
        } else {
          let { default: e } = n("572544"),
            i = e(R, { skipExtensionCheck: void 0, analyticsLocations: s });
          if (null != i && i(t)) return;
        }
        let Y = () => {
            if (
              (M &&
                _.default.trackAnnouncementMessageLinkClicked({
                  messageId: w,
                  channelId: V,
                  guildId: k,
                  sourceChannelId: L,
                  sourceGuildId: U,
                }),
              null != O)
            ) {
              O();
              return;
            }
            (0, o.default)(R);
          },
          j = u.default.isBlockedDomain(R);
        if (null !== j) {
          null == t || t.preventDefault(), d.default.show(R);
          return;
        }
        if (null != (0, h.isSuspiciousDownload)(R)) {
          null == t || t.preventDefault(), m.default.show(R);
          return;
        }
        if ((0, f.shouldShowLinkNotDiscordWarning)(R)) {
          null == t || t.preventDefault(), l.default.show(R);
          return;
        }
        let K = "function" == typeof C ? C() : C,
          W = (0, y.getProtocol)(R),
          z = !("http:" === W || "https:" === W);
        if (
          (!z && (K || p.default.isTrustedDomain(R))) ||
          (z && p.default.isTrustedProtocol(R))
        ) {
          null == t || (null != P && P)
            ? Y()
            : M &&
              _.default.trackAnnouncementMessageLinkClicked({
                messageId: w,
                channelId: V,
                guildId: k,
                sourceChannelId: L,
                sourceGuildId: U,
              });
          return;
        }
        if ((null != t && t.preventDefault(), z))
          g.default.show({
            url: R,
            trustUrl: a.trustProtocol,
            onConfirm: Y,
            isProtocol: !0,
          });
        else {
          let e = (0, c.punycodeLink)(R),
            t = null != e ? e.displayTarget : R;
          g.default.show({
            url: t,
            trustUrl: a.trustDomain,
            onConfirm: Y,
            isProtocol: !1,
          });
        }
      }
    },
    261742: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        }),
        n("222007");
      var s = {
        makeMemoizer: function (e) {
          let t = new Map();
          return n => {
            let s = t.get(n);
            return void 0 === s && ((s = e(n)), t.set(n, s)), s;
          };
        },
      };
    },
    829536: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          perceptualToAmplitude: function () {
            return s;
          },
          amplitudeToPerceptual: function () {
            return i;
          },
        });
      function s(e) {
        let t,
          n =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : 100;
        return 0 === e
          ? 0
          : ((t = e > n ? ((e - n) / n) * 6 : (e / n) * 50 - 50),
            n * Math.pow(10, t / 20));
      }
      function i(e) {
        let t,
          n =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : 100;
        if (0 === e) return 0;
        let s = 20 * Math.log10(e / n);
        return n * (t = s > 0 ? s / 6 + 1 : (50 + s) / 50);
      }
    },
    231987: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        }),
        n("424973"),
        n("860677"),
        n("843762");
      var s,
        i = n("485828"),
        r = n.n(i),
        a = n("605250");
      let o = new a.default("Queue");
      s = class {
        enqueue(e, t, n) {
          this.queue.push({ message: e, success: t, logId: n }),
            this._drainIfNecessary();
        }
        get length() {
          return this.queue.length;
        }
        _drainIfNecessary() {
          if (
            null !== this.timeout ||
            0 === this.queue.length ||
            !0 === this.draining
          )
            return;
          this.draining = !0;
          let e = this.queue.shift(),
            { message: t, success: n, logId: s } = e;
          this.logger.log(
            "Draining message from queue LogId:"
              .concat(s, " QueueLength: ")
              .concat(this.queue.length)
          ),
            this.drain(t, (t, i) => {
              if (
                (this.logger.log(
                  "Finished draining message from queue LogId:"
                    .concat(s, " QueueLength: ")
                    .concat(this.queue.length)
                ),
                (this.draining = !1),
                null == t)
              ) {
                setImmediate(() => this._drainIfNecessary());
                try {
                  n(i);
                } catch (e) {
                  this.logger.error("", e);
                }
              } else {
                var r;
                let n =
                  null !== (r = t.retryAfter) && void 0 !== r
                    ? r
                    : this.defaultRetryAfter;
                this.logger.info(
                  "Rate limited. Delaying draining of queue for "
                    .concat(n, " ms. LogId:")
                    .concat(s, " QueueLength: ")
                    .concat(this.queue.length)
                ),
                  (this.timeout = setTimeout(() => {
                    this.queue.unshift(e),
                      (this.timeout = null),
                      this._drainIfNecessary();
                  }, n));
              }
            });
        }
        constructor(e = o, t = 100) {
          (this.logger = e),
            (this.defaultRetryAfter = t),
            (this.queue = new r()),
            (this.timeout = null),
            (this.draining = !1);
        }
      };
    },
    390946: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          hydrateReadySupplementalPayload: function () {
            return I;
          },
          preloadReadyPayloadData: function () {
            return A;
          },
          hydrateReadyPayloadPrioritized: function () {
            return D;
          },
          hydrateInitialGuild: function () {
            return O;
          },
          hydratePreviouslyUnavailableGuild: function () {
            return R;
          },
        }),
        n("424973"),
        n("222007"),
        n("70102");
      var s = n("627445"),
        i = n.n(s),
        r = n("917351"),
        a = n.n(r),
        o = n("802493"),
        d = n("105059"),
        u = n("849365"),
        l = n("860255"),
        f = n("723939"),
        _ = n("70754"),
        c = n("605250"),
        g = n("385976"),
        m = n("364685"),
        h = n("233069"),
        v = n("305961"),
        E = n("660478"),
        p = n("665618");
      let y = new c.default("ReadyPayloadUtils"),
        T = {},
        C = null,
        S = {};
      function I(e, t) {
        var n;
        let { guilds: s, merged_members: i, merged_presences: r, ...a } = e,
          o = P(S, null == r ? void 0 : r.friends),
          d =
            null !==
              (n =
                null == s
                  ? void 0
                  : s.map((e, t) => {
                      let n = P(S, null == r ? void 0 : r.guilds[t]),
                        s = P(S, null == i ? void 0 : i[t]);
                      return {
                        ...e,
                        unavailable: void 0 === e.voice_states,
                        presences: n,
                        members: s,
                      };
                    })) && void 0 !== n
              ? n
              : [],
          u = N(t, s, e => ({
            id: e.id,
            members: e.members,
            presences: e.presences,
            embedded_activities: e.embedded_activities,
            voice_states: e.voice_states,
            unavailable: !1,
          }));
        return (
          null != u && d.push(u), (S = {}), { ...a, presences: o, guilds: d }
        );
      }
      function A() {
        let e = o.default.database(),
          t = (0, _.isCacheEnabled)()
            ? d.default.getCommittedVersions()
            : Promise.resolve({}),
          n = (0, _.isCacheEnabled)()
            ? l.default.getGuildIds()
            : Promise.resolve(new Set()),
          s = null != e ? u.default.okAsync(e) : Promise.resolve(!1);
        return Promise.all([t, n, s]).then(e => {
          let [t, n, s] = e;
          return { guildVersions: t, guildChannels: n, databaseOk: s };
        });
      }
      function D(e, t, n) {
        var s;
        let {
          users: r,
          relationships: d,
          private_channels: u,
          merged_members: l,
          guilds: _,
          ...c
        } = e;
        (function (e) {
          let t = o.default.database();
          null != t &&
            !1 === e.databaseOk &&
            f.default.replaceDisableAllDatabases(
              "ReadyPayloadUtils: database was not ok"
            ),
            (T = {});
          let n = Object.values(v.default.getGuilds()),
            s = g.default.getGuilds(),
            i = m.default.getRawStickersByGuild(),
            r = E.default.getReadStatesByChannel();
          for (let t of n) {
            var a, d, u;
            t.id in e.guildVersions &&
              e.guildChannels.has(t.id) &&
              (T[t.id] = {
                properties: p.toServer(t),
                roles: t.roles,
                emojis:
                  null !==
                    (d =
                      null === (a = s[t.id]) || void 0 === a
                        ? void 0
                        : a.rawEmojis) && void 0 !== d
                    ? d
                    : null,
                stickers: null !== (u = i.get(t.id)) && void 0 !== u ? u : null,
                readStates: r,
              });
          }
        })(n),
          (S = a.keyBy(r, e => e.id));
        let h = P(S, d);
        null == u ||
          u.forEach(e => {
            let t = e.recipient_ids;
            null != t &&
              (e.recipients = t.map(
                e => (
                  i(null != S[e], "Missing user in compressed ready payload"),
                  S[e]
                )
              )),
              delete e.recipient_ids;
          });
        let y =
            null !==
              (s =
                null == _
                  ? void 0
                  : _.map((e, t) =>
                      !0 === e.unavailable
                        ? e
                        : ((e.members = P(S, null == l ? void 0 : l[t])), V(e))
                    )) && void 0 !== s
              ? s
              : [],
          C = N(t, _, e => V(e));
        return (
          null != C && y.push(C),
          {
            ...c,
            users: r,
            presences: [],
            relationships: h,
            guilds: y,
            private_channels: null != u ? u : [],
          }
        );
      }
      function N(e, t, n) {
        return null == C ||
          C.identifyTime !== e ||
          (null != t && t.some(e => e.id === C.guild.id))
          ? null
          : n(C.guild);
      }
      function O(e, t) {
        var n, s, i;
        let r = v.default.getGuild(e.id),
          a = R(
            e,
            null == r
              ? void 0
              : {
                  properties: p.toServer(r),
                  roles: r.roles,
                  emojis:
                    null !==
                      (s =
                        null === (n = g.default.getGuilds()[r.id]) ||
                        void 0 === n
                          ? void 0
                          : n.rawEmojis) && void 0 !== s
                      ? s
                      : null,
                  stickers:
                    null !==
                      (i = m.default.getRawStickersByGuild().get(r.id)) &&
                    void 0 !== i
                      ? i
                      : null,
                  readStates: {},
                }
          );
        return (C = { guild: e, identifyTime: t }), a;
      }
      function P(e, t) {
        let n = [];
        return (
          null == t ||
            t.forEach(t => {
              if (null == t) return;
              let s = t.user_id;
              null != s &&
                (i(
                  null != e[s],
                  "Missing user[".concat(s, "] in compressed ready payload")
                ),
                (t.user = e[s])),
                delete t.user_id,
                n.push(t);
            }),
          n
        );
      }
      function b(e) {
        let t = T[e];
        return delete T[e], t;
      }
      function V(e) {
        var t, n, s, i, r, a, o, d, u, l, f, _;
        let c = b(e.id);
        if ("partial" !== e.data_mode)
          return {
            id: e.id,
            dataMode: e.data_mode,
            emojis: e.emojis,
            guild_scheduled_events: e.guild_scheduled_events,
            joined_at: e.joined_at,
            lastMessages: e.last_messages,
            member_count: e.member_count,
            members: e.members,
            premium_subscription_count: e.premium_subscription_count,
            properties: e.properties,
            roles: e.roles,
            stage_instances: e.stage_instances,
            stickers: e.stickers,
            threads:
              null !==
                (i =
                  null === (s = e.threads) || void 0 === s
                    ? void 0
                    : s.map(t =>
                        (0, h.createChannelRecordFromServer)(t, e.id)
                      )) && void 0 !== i
                ? i
                : [],
            threadMessages: k(e.threads),
            channels: e.channels.map(
              t => (
                (t.guild_id = e.id),
                (0, h.createChannelRecordFromServer)(t, e.id)
              )
            ),
            version: e.version,
            hasThreadsSubscription: e.has_threads_subscription,
          };
        if (null == c)
          throw (
            (y.log(
              "no cache entry for partial guild (guild: ".concat(
                e.id,
                ", type: ready)"
              )
            ),
            Error(
              "Guild data was missing from store, but hash was still available."
            ))
          );
        return {
          id: e.id,
          dataMode: e.data_mode,
          channels: null,
          channelUpdates: {
            writes:
              null !==
                (r =
                  null === (t = e.partial_updates.channels) || void 0 === t
                    ? void 0
                    : t.map(t =>
                        (0, h.createChannelRecordFromServer)(t, e.id)
                      )) && void 0 !== r
                ? r
                : [],
            deletes:
              null !== (a = e.partial_updates.deleted_channel_ids) &&
              void 0 !== a
                ? a
                : [],
          },
          channelTimestampUpdates: e.channel_updates,
          emojis:
            null == c.emojis
              ? null
              : M(
                  c.emojis,
                  e.partial_updates.emojis,
                  e.partial_updates.deleted_emoji_ids
                ),
          emojiUpdates: {
            writes:
              null !== (o = e.partial_updates.emojis) && void 0 !== o ? o : [],
            deletes:
              null !== (d = e.partial_updates.deleted_emoji_ids) && void 0 !== d
                ? d
                : [],
          },
          guild_scheduled_events: e.guild_scheduled_events,
          joined_at: e.joined_at,
          lastMessages: e.last_messages,
          member_count: e.member_count,
          members: e.members,
          premium_subscription_count: e.premium_subscription_count,
          properties:
            null !== (u = e.properties) && void 0 !== u ? u : c.properties,
          roles: p.filterRoleDeletes(
            e.id,
            c.roles,
            e.partial_updates.roles,
            e.partial_updates.deleted_role_ids
          ),
          stage_instances: e.stage_instances,
          stickers:
            null == c.stickers
              ? null
              : M(
                  c.stickers,
                  e.partial_updates.stickers,
                  e.partial_updates.deleted_sticker_ids
                ),
          stickerUpdates: {
            writes:
              null !== (l = e.partial_updates.stickers) && void 0 !== l
                ? l
                : [],
            deletes:
              null !== (f = e.partial_updates.deleted_sticker_ids) &&
              void 0 !== f
                ? f
                : [],
          },
          unableToSyncDeletes: e.unable_to_sync_deletes,
          threads:
            null !==
              (_ =
                null === (n = e.threads) || void 0 === n
                  ? void 0
                  : n.map(t =>
                      (0, h.createChannelRecordFromServer)(t, e.id)
                    )) && void 0 !== _
              ? _
              : [],
          threadMessages: k(e.threads),
          version: e.version,
          hasThreadsSubscription: e.has_threads_subscription,
        };
      }
      function R(e, t) {
        var n, s, i, r, a, o, d, u, l, f, _, c;
        if ((null == t && (t = b(e.id)), "partial" !== e.data_mode))
          return {
            id: e.id,
            emojis: e.emojis,
            guild_scheduled_events: e.guild_scheduled_events,
            joined_at: e.joined_at,
            lastMessages: e.last_messages,
            member_count: e.member_count,
            members: e.members,
            premium_subscription_count: e.premium_subscription_count,
            properties: e.properties,
            roles: e.roles,
            stage_instances: e.stage_instances,
            stickers: e.stickers,
            threads:
              null !==
                (r =
                  null === (i = e.threads) || void 0 === i
                    ? void 0
                    : i.map(t =>
                        (0, h.createChannelRecordFromServer)(t, e.id)
                      )) && void 0 !== r
                ? r
                : [],
            threadMessages: k(e.threads),
            channels: e.channels.map(
              t => (
                (t.guild_id = e.id),
                (0, h.createChannelRecordFromServer)(t, e.id)
              )
            ),
            presences: e.presences,
            embedded_activities: e.embedded_activities,
            voice_states: e.voice_states,
            version: e.version,
            hasThreadsSubscription: e.has_threads_subscription,
          };
        if (null == t)
          throw (
            (y.log(
              "no cache entry for partial guild (guild: ".concat(
                e.id,
                ", type: post_ready)"
              )
            ),
            Error(
              "Guild data was missing from store, but hash was still available."
            ))
          );
        return {
          id: e.id,
          channels: null,
          channelUpdates: {
            writes:
              null !==
                (a =
                  null === (n = e.partial_updates.channels) || void 0 === n
                    ? void 0
                    : n.map(t =>
                        (0, h.createChannelRecordFromServer)(t, e.id)
                      )) && void 0 !== a
                ? a
                : [],
            deletes:
              null !== (o = e.partial_updates.deleted_channel_ids) &&
              void 0 !== o
                ? o
                : [],
          },
          channelTimestampUpdates: e.channel_updates,
          embedded_activities: e.embedded_activities,
          emojis:
            null == t.emojis
              ? null
              : M(
                  t.emojis,
                  e.partial_updates.emojis,
                  e.partial_updates.deleted_emoji_ids
                ),
          emojiUpdates: {
            writes:
              null !== (d = e.partial_updates.emojis) && void 0 !== d ? d : [],
            deletes:
              null !== (u = e.partial_updates.deleted_emoji_ids) && void 0 !== u
                ? u
                : [],
          },
          guild_scheduled_events: e.guild_scheduled_events,
          joined_at: e.joined_at,
          lastMessages: e.last_messages,
          member_count: e.member_count,
          members: e.members,
          premium_subscription_count: e.premium_subscription_count,
          presences: e.presences,
          properties:
            null !== (l = e.properties) && void 0 !== l ? l : t.properties,
          roles: p.filterRoleDeletes(
            e.id,
            t.roles,
            e.partial_updates.roles,
            e.partial_updates.deleted_role_ids
          ),
          stage_instances: e.stage_instances,
          stickers:
            null == t.stickers
              ? null
              : M(
                  t.stickers,
                  e.partial_updates.stickers,
                  e.partial_updates.deleted_sticker_ids
                ),
          stickerUpdates: {
            writes:
              null !== (f = e.partial_updates.stickers) && void 0 !== f
                ? f
                : [],
            deletes:
              null !== (_ = e.partial_updates.deleted_sticker_ids) &&
              void 0 !== _
                ? _
                : [],
          },
          unableToSyncDeletes: e.unable_to_sync_deletes,
          threads:
            null !==
              (c =
                null === (s = e.threads) || void 0 === s
                  ? void 0
                  : s.map(t =>
                      (0, h.createChannelRecordFromServer)(t, e.id)
                    )) && void 0 !== c
              ? c
              : [],
          threadMessages: k(e.threads),
          voice_states: e.voice_states,
          version: e.version,
          hasThreadsSubscription: e.has_threads_subscription,
        };
      }
      function k(e) {
        let t = [];
        if (null != e)
          for (let n of e)
            null != n.most_recent_message && t.push(n.most_recent_message);
        return t;
      }
      function M(e, t, n) {
        t = null != t ? t : [];
        let s = new Set((null != n ? n : []).concat(t.map(e => e.id)));
        return e.filter(e => !s.has(e.id)).concat(t);
      }
    },
    35013: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          insert: function () {
            return s;
          },
        });
      function s(e, t, n) {
        let s = (function (e, t, n) {
          let s = 0,
            i = e.length;
          for (; s < i; ) {
            let r = (s + i) >>> 1;
            0 > n(e[r], t) ? (s = r + 1) : (i = r);
          }
          return s;
        })(e, t, n);
        e.splice(s, 0, t);
      }
    },
    271560: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getStoreListingLocation: function () {
            return S;
          },
          getApplicationStoreListingLocation: function () {
            return I;
          },
          getAssetURL: function () {
            return A;
          },
          httpGetWithCountryCodeQuery: function () {
            return D;
          },
          nativePlatformTypeToSKUOperatingSystem: function () {
            return N;
          },
          skuOperatingSystemToText: function () {
            return O;
          },
          getPrimarySKUForApplication: function () {
            return P;
          },
          getSocialRecommendationReasons: function () {
            return V;
          },
          getNonSocialRecommendationReasons: function () {
            return k;
          },
        }),
        n("424973"),
        n("462568"),
        n("222007"),
        n("70102"),
        n("702976");
      var s = n("917351"),
        i = n.n(s),
        r = n("866227"),
        a = n.n(r),
        o = n("642852"),
        d = n.n(o),
        u = n("394846"),
        l = n("872717"),
        f = n("850068"),
        _ = n("407063"),
        c = n("160299"),
        g = n("357957"),
        m = n("521012"),
        h = n("560528"),
        v = n("568734"),
        E = n("449008"),
        p = n("773336"),
        y = n("49111"),
        T = n("782340");
      d.shim();
      let C = !u.isMobile && !u.isTablet && -1 !== (0, h.getChromeVersion)();
      function S(e, t) {
        let {
          analyticsSource: n,
          analyticsProperties: s,
          storeListingId: i,
          slug: r,
          channelId: a,
          guildId: o,
        } = t;
        return {
          pathname:
            null != a && null != o
              ? y.Routes.CHANNEL(o, a, e)
              : y.Routes.APPLICATION_STORE_LISTING_SKU(e, r),
          state: { analyticsSource: n, analyticsProperties: s },
          search: null != i ? "?store_listing_id=".concat(i) : "",
        };
      }
      function I(e, t) {
        let { analyticsSource: n, analyticsProperties: s, slug: i } = t;
        return {
          pathname: y.Routes.APPLICATION_STORE_LISTING_APPLICATION(e, i),
          state: { analyticsSource: n, analyticsProperties: s },
        };
      }
      function A(e, t, n, s) {
        var i;
        let r;
        let a = window.GLOBAL_ENV.CDN_HOST;
        if (null == s)
          switch (t.mimeType || t.mime_type) {
            case "video/quicktime":
            case "video/mp4":
              s = "mp4";
              break;
            case "image/gif":
              s = "gif";
              break;
            default:
              s = "webp";
          }
        "webp" === s && !C && (s = "png");
        let o = "string" == typeof t ? t : t.id,
          d = ((i = "https:"), "https:");
        return (
          (r =
            null != a
              ? ""
                  .concat(d, "//")
                  .concat(a, "/app-assets/")
                  .concat(e, "/store/")
                  .concat(o, ".")
                  .concat(s)
              : ""
                  .concat(d)
                  .concat(window.GLOBAL_ENV.API_ENDPOINT)
                  .concat(y.Endpoints.STORE_ASSET(e, o, s))),
          null != n &&
            (r += "?size=".concat(
              (0, _.getBestMediaProxySize)(n * (0, _.getDevicePixelRatio)())
            )),
          r
        );
      }
      async function D(e) {
        var t, n, s, i;
        let r =
          !(arguments.length > 1) || void 0 === arguments[1] || arguments[1];
        if (r) {
          let e = [];
          !g.default.hasFetchedPaymentSources &&
            e.push(
              null !== (n = c.default.paymentSourcesFetchRequest) &&
                void 0 !== n
                ? n
                : (0, f.fetchPaymentSources)()
            ),
            !c.default.ipCountryCodeLoaded &&
              e.push((0, f.fetchIpCountryCode)()),
            e.push(
              new Promise(async e => {
                if (m.default.hasFetchedSubscriptions()) e();
                else if (c.default.isSubscriptionFetching) {
                  let t = () => {
                    c.default.isSubscriptionFetching ? setTimeout(t, 50) : e();
                  };
                  t();
                } else await (0, f.fetchSubscriptions)(), e();
              })
            ),
            await Promise.allSettled(e);
        }
        let a = g.default.getDefaultBillingCountryCode(),
          o =
            null !==
              (s =
                null === (t = g.default.defaultPaymentSource) || void 0 === t
                  ? void 0
                  : t.id) && void 0 !== s
              ? s
              : null,
          d = m.default.getPremiumTypeSubscription();
        null != d && null != d.paymentSourceId && (o = d.paymentSourceId),
          null === a &&
            (a =
              null !== (i = c.default.ipCountryCode) && void 0 !== i
                ? i
                : null);
        let u = {};
        if (
          (null != a && (u.country_code = a),
          null != o && (u.payment_source_id = o),
          null != a || null != o)
        ) {
          if ("string" == typeof e) {
            let t = { url: e, oldFormErrors: !0 };
            e = t;
          }
          if ("string" == typeof e.query)
            throw Error("string query not supported");
          e.query = { ...u, ...e.query };
        }
        return l.default.get(e);
      }
      function N(e) {
        switch (e) {
          case p.PlatformTypes.WINDOWS:
            return y.OperatingSystems.WINDOWS;
          case p.PlatformTypes.OSX:
            return y.OperatingSystems.MACOS;
          case p.PlatformTypes.LINUX:
            return y.OperatingSystems.LINUX;
          default:
            return null;
        }
      }
      function O(e) {
        switch (e) {
          case y.OperatingSystems.WINDOWS:
            return T.default.Messages.WINDOWS;
          case y.OperatingSystems.MACOS:
            return T.default.Messages.MACOS;
          case y.OperatingSystems.LINUX:
            return T.default.Messages.LINUX;
        }
        throw Error("Unknown operating system value: ".concat(e));
      }
      function P(e, t, n) {
        let s = t.getApplication(e);
        return null == s || null == s.primarySkuId
          ? null
          : n.get(s.primarySkuId);
      }
      let b = [];
      function V(e, t, n, s, r) {
        let a = t.get(e);
        if (null == a) return b;
        let o = a.applicationId,
          d = [],
          u = [],
          l = (function (e, t, n) {
            var s;
            let i = null !== (s = n.getNowPlaying(e)) && void 0 !== s ? s : {},
              r = Object.keys(i),
              a = r
                .map(e => {
                  let n = t.getUser(e);
                  return null == n
                    ? null
                    : { user: n, startTime: i[n.id].startedPlaying };
                })
                .filter(E.isNotNullish)
                .sort((e, t) => t.startTime - e.startTime);
            return 0 === a.length
              ? null
              : { type: y.StoreRecommendationTypes.NOW_PLAYING, userInfo: a };
          })(o, n, s);
        null != l &&
          (d.push(l),
          (u = l.userInfo.map(e => {
            let { user: t } = e;
            return t.id;
          })));
        let f = r.getStatisticsForApplication(o);
        if (null != f) {
          let e = f.map(e => e.user_id);
          if (i.difference(e, u).length > 0) {
            let e = (function (e, t, n) {
              let s = n.getStatisticsForApplication(e);
              if (null == s) return null;
              let i = s
                .map(e => {
                  let n = t.getUser(e.user_id);
                  return null == n
                    ? null
                    : { user: n, endTime: Date.parse(e.last_played_at) };
                })
                .filter(E.isNotNullish)
                .sort((e, t) => t.endTime - e.endTime);
              return 0 === i.length
                ? null
                : { type: y.StoreRecommendationTypes.EVER_PLAYED, userInfo: i };
            })(o, n, r);
            null != e && d.push(e);
          }
        }
        return d;
      }
      let R = [];
      function k(e, t, n) {
        let s = t.get(e),
          i = n.getForSKU(e);
        if (null == s || null == i) return R;
        let r = [];
        (0, v.hasFlag)(s.flags, y.SKUFlags.HAS_FREE_PREMIUM_CONTENT) &&
          r.push({ type: y.StoreRecommendationTypes.HAS_FREE_PREMIUM_CONTENT });
        let o = s.releaseDate;
        return (
          null != o &&
            3 > a().diff(o, "months") &&
            (s.accessType === y.SKUAccessTypes.EARLY_ACCESS
              ? r.push({
                  type: y.StoreRecommendationTypes.EARLY_ACCESS,
                  releaseDate: o,
                })
              : r.push({
                  type: y.StoreRecommendationTypes.RECENT_RELEASE_DATE,
                  releaseDate: o,
                })),
          null != i.flavorText &&
            r.push({
              type: y.StoreRecommendationTypes.FLAVOR_TEXT,
              flavorText: i.flavorText,
            }),
          r
        );
      }
    },
    12307: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          isPremiumResolution: function () {
            return _;
          },
          isPremiumFPS: function () {
            return c;
          },
          getResolutionText: function () {
            return m;
          },
          getFPSText: function () {
            return h;
          },
          getMaxQuality: function () {
            return v;
          },
          trackStreamSettingsUpdate: function () {
            return E;
          },
        });
      var s = n("305961"),
        i = n("945956"),
        r = n("697218"),
        a = n("599110"),
        o = n("49111"),
        d = n("686298"),
        u = n("646718"),
        l = n("353927"),
        f = n("782340");
      function _(e) {
        if (null == e) return;
        let t =
            e.maxResolution.type === l.ResolutionTypes.SOURCE
              ? d.ApplicationStreamResolutions.RESOLUTION_SOURCE
              : e.maxResolution.height,
          n = (0, d.getApplicationResolution)(t),
          s = (0, d.getApplicationFramerate)(e.maxFrameRate);
        return (
          s !== d.ApplicationStreamFPS.FPS_5 &&
          null ==
            d.ApplicationStreamSettingRequirements.find(
              e =>
                e.resolution === n &&
                e.fps !== d.ApplicationStreamFPS.FPS_5 &&
                !g(e)
            )
        );
      }
      function c(e) {
        if (null == e) return;
        let t = (0, d.getApplicationFramerate)(e.maxFrameRate);
        return (
          null ==
          d.ApplicationStreamSettingRequirements.find(e => e.fps === t && !g(e))
        );
      }
      function g(e) {
        return null != e.quality || null != e.guildPremiumTier;
      }
      function m(e) {
        return e.type === l.ResolutionTypes.SOURCE
          ? f.default.Messages.SCREENSHARE_SOURCE
          : f.default.Messages.SCREENSHARE_RESOLUTION_ABBREVIATED.format({
              resolution: e.height,
            });
      }
      function h(e) {
        return f.default.Messages.SCREENSHARE_FPS_ABBREVIATED.format({
          fps: e,
        });
      }
      function v(e) {
        return null == e.maxResolution || null == e.maxFrameRate
          ? null
          : { maxFrameRate: e.maxFrameRate, maxResolution: e.maxResolution };
      }
      function E(e, t, n) {
        var l, f, _;
        let c =
            ((l = e),
            (f = t),
            (_ = n),
            d.ApplicationStreamSettingRequirements.find(
              e =>
                (null == e.preset || e.preset === l) &&
                e.resolution === f &&
                e.fps === _
            )),
          g = r.default.getCurrentUser(),
          m = i.default.getGuildId(),
          h = null != m ? s.default.getGuild(m) : null;
        a.default.track(o.AnalyticEvents.STREAM_SETTINGS_UPDATE, {
          user_premium_tier: null == g ? void 0 : g.premiumType,
          guild_premium_tier: null == h ? void 0 : h.premiumTier,
          stream_quality_user_premium_tier:
            (null == c ? void 0 : c.quality) != null
              ? u.StreamQualitiesToPremiumType[c.quality]
              : null,
          stream_quality_guild_premium_tier:
            null == c ? void 0 : c.guildPremiumTier,
          stream_quality_preset: e,
          stream_quality_resolution: t,
          stream_quality_frame_rate: n,
        });
      }
    },
    340454: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      let s =
          /^([\w-+]+(?:\.[\w-+]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,63}(?:\.[a-z]{2})?)$/i,
        i =
          /^((https:\/\/)?(discord\.gg\/)|(discord\.com\/)(invite\/)?)?[A-Za-z0-9]{8,8}$/,
        r = /^(\+\d{1,2}\s)?\(?\d{3}\)?[\s.-]?\d{3}[\s.-]?\d{4}$/,
        a = /^(.*)#[0-9]{1,5}$/,
        o = [
          "@",
          "#",
          ":",
          "```",
          "discord",
          "hypesquad",
          "system message",
          "system mesage",
          "sustem message",
          "sustem mesage",
        ],
        d = ["discordtag", "everyone", "here", "discord nitro", "discord"];
      var u = {
        isEmail: function (e) {
          return s.test(e);
        },
        isInvite: function (e) {
          return i.test(e);
        },
        isPhoneNumber: function (e) {
          return r.test(e);
        },
        isUserTagLike: function (e) {
          let t = a.exec(e);
          if (null != t && t.length > 1) {
            let e = t[1],
              n = o.some(t => e.includes(t)),
              s = d.includes(e);
            return !n && !s;
          }
          return !1;
        },
      };
    },
    563680: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getFullScreenNode: function () {
            return i;
          },
          requestFullScreen: function () {
            return r;
          },
          exitFullScreen: function () {
            return a;
          },
          isFullScreen: function () {
            return o;
          },
          FULLSCREEN_CHANGE_EVENT: function () {
            return d;
          },
          subscribeDocumentToFullScreenChange: function () {
            return u;
          },
        });
      var s = n("605250");
      function i() {
        for (var e = arguments.length, t = Array(e), n = 0; n < e; n++)
          t[n] = arguments[n];
        return t.find(
          e =>
            null != e &&
            (function (e) {
              return (
                null != e.requestFullscreen ||
                null != e.webkitRequestFullscreen ||
                e.webkitSupportsFullscreen ||
                null != e.mozRequestFullScreen ||
                null != e.msRequestFullscreen
              );
            })(e)
        );
      }
      function r(e) {
        "function" == typeof e.requestFullscreen
          ? e.requestFullscreen()
          : "function" == typeof e.webkitRequestFullscreen
            ? e.webkitRequestFullscreen()
            : "function" == typeof e.webkitEnterFullscreen
              ? e.webkitEnterFullscreen()
              : "function" == typeof e.mozRequestFullScreen
                ? e.mozRequestFullScreen()
                : "function" == typeof e.msRequestFullscreen
                  ? e.msRequestFullscreen()
                  : new (0, s.default)("FullScreenUtils").warn(
                      "Fullscreen API is not supported."
                    );
      }
      function a(e, t) {
        let n = null != t ? t : document;
        o(null, n) &&
          ("function" == typeof n.exitFullscreen
            ? n.exitFullscreen()
            : "function" == typeof n.webkitExitFullscreen
              ? n.webkitExitFullscreen()
              : "function" == typeof e.webkitExitFullscreen
                ? e.webkitExitFullscreen()
                : "function" == typeof n.mozCancelFullScreen
                  ? n.mozCancelFullScreen()
                  : "function" == typeof n.msExitFullscreen
                    ? n.msExitFullscreen()
                    : new (0, s.default)("FullScreenUtils").warn(
                        "Fullscreen API is not supported."
                      ));
      }
      function o(e, t) {
        let n = null != t ? t : document;
        return !!(
          null != n.fullscreenElement ||
          null != n.mozFullScreenElement ||
          null != n.webkitFullscreenElement ||
          null != n.msFullscreenElement ||
          (null != e && e.webkitDisplayingFullscreen)
        );
      }
      let d = (() => {
        if ("undefined" != typeof document) {
          let e = document.createElement("video");
          if ("function" == typeof e.requestFullscreen);
          else if ("function" == typeof e.webkitRequestFullscreen)
            return "webkitfullscreenchange";
          else if ("function" == typeof e.webkitEnterFullscreen)
            return "webkitendfullscreen";
          else if ("function" == typeof e.mozRequestFullScreen)
            return "mozfullscreenchange";
          else if ("function" == typeof e.msRequestFullscreen)
            return "msfullscreenchange";
        } else
          console.warn(
            "FullScreenUtils has been imported in a non-web environment"
          );
        return "fullscreenchange";
      })();
      function u(e, t) {
        return (
          e.addEventListener(d, t),
          e.addEventListener("webkitfullscreenchange", t),
          () => {
            e.removeEventListener(d, t),
              e.removeEventListener("webkitfullscreenchange", t);
          }
        );
      }
    },
    670924: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          showModal: function () {
            return o;
          },
          updateModalProps: function () {
            return d;
          },
        });
      var s = n("37983");
      n("884691");
      var i = n("551042"),
        r = n("920636");
      let a = (e, t, n) =>
        function (i) {
          return (0, s.jsx)(r.default, {
            handleSubmit: e,
            handleEarlyClose: t,
            ...n,
            ...i,
          });
        };
      function o(e, t, n) {
        return (0, i.openModal)(a(e, t, n), { onCloseCallback: t });
      }
      function d(e, t, n, s) {
        return (0, i.updateModal)(e, a(t, n, s));
      }
    },
    65300: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var s = n("597755"),
        i = n.n(s),
        r = n("390493");
      function a(e, t) {
        if (!e.startsWith("discord:"))
          return (location.href = e), r.nextTick(() => t(!0));
        let { body: n } = document;
        if (null == n) return r.nextTick(() => t(!1));
        let s = document.createElement("iframe");
        n.appendChild(s);
        try {
          null != s.contentWindow && (s.contentWindow.location.href = e),
            r.nextTick(() => t(!0));
        } catch (e) {
          "NS_ERROR_UNKNOWN_PROTOCOL" === e.name && r.nextTick(() => t(!1));
        }
        window.setTimeout(() => {
          var e;
          (null !== (e = null == s ? void 0 : s.parentElement) && void 0 !== e
            ? e
            : null) !== null && n.removeChild(s);
        }, 1e3);
      }
      function o(e, t) {
        let n = !1;
        function s() {
          n = !0;
        }
        window.addEventListener("blur", s),
          (location.href = e),
          setTimeout(() => {
            window.removeEventListener("blur", s), t(n);
          }, 1e3);
      }
      function d(e, t) {
        t(!1);
      }
      function u(e, t) {
        (location.href = e), r.nextTick(() => t(!0));
      }
      var l = {
        launch: (function () {
          var e, t;
          if (
            (null === (e = i.os) || void 0 === e ? void 0 : e.family) ===
              "Android" ||
            (null === (t = i.os) || void 0 === t ? void 0 : t.family) === "iOS"
          )
            return u;
          if ("Gecko" === i.layout) return a;
          if (null != i.ua && -1 !== i.ua.indexOf("Valve Steam GameOverlay"))
            return d;
          return o;
        })(),
      };
    },
    435703: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ClockIcon: function () {
            return a;
          },
        });
      var s = n("37983");
      n("884691");
      var i = n("669491"),
        r = n("82169");
      let a = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: a = i.default.colors.INTERACTIVE_NORMAL,
          colorClass: o = "",
          ...d
        } = e;
        return (0, s.jsx)("svg", {
          ...(0, r.default)(d),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: (0, s.jsx)("path", {
            fill: "string" == typeof a ? a : a.css,
            fillRule: "evenodd",
            d: "M12 23a11 11 0 1 0 0-22 11 11 0 0 0 0 22Zm1-18a1 1 0 1 0-2 0v7c0 .27.1.52.3.7l3 3a1 1 0 0 0 1.4-1.4L13 11.58V5Z",
            clipRule: "evenodd",
            className: o,
          }),
        });
      };
    },
    879619: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          EmbedIcon: function () {
            return a;
          },
        });
      var s = n("37983");
      n("884691");
      var i = n("669491"),
        r = n("82169");
      let a = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: a = i.default.colors.INTERACTIVE_NORMAL,
          colorClass: o = "",
          ...d
        } = e;
        return (0, s.jsxs)("svg", {
          ...(0, r.default)(d),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: [
            (0, s.jsx)("path", {
              fill: "string" == typeof a ? a : a.css,
              d: "M9.5 11.87a1 1 0 0 1 1.55-.83l3.2 2.13a1 1 0 0 1 0 1.66l-3.2 2.13a1 1 0 0 1-1.55-.83v-4.26Z",
              className: o,
            }),
            (0, s.jsx)("path", {
              fill: "string" == typeof a ? a : a.css,
              fillRule: "evenodd",
              d: "M5 2a3 3 0 0 0-3 3v14a3 3 0 0 0 3 3h14a3 3 0 0 0 3-3V5a3 3 0 0 0-3-3H5Zm2 7a2 2 0 0 0-2 2v6c0 1.1.9 2 2 2h10a2 2 0 0 0 2-2v-6a2 2 0 0 0-2-2H7ZM5 6a1 1 0 0 1 1-1h6a1 1 0 1 1 0 2H6a1 1 0 0 1-1-1Z",
              clipRule: "evenodd",
              className: o,
            }),
          ],
        });
      };
    },
    768961: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          GlobeEarthIcon: function () {
            return a;
          },
        });
      var s = n("37983");
      n("884691");
      var i = n("669491"),
        r = n("82169");
      let a = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: a = i.default.colors.INTERACTIVE_NORMAL,
          colorClass: o = "",
          ...d
        } = e;
        return (0, s.jsx)("svg", {
          ...(0, r.default)(d),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: (0, s.jsx)("path", {
            fill: "string" == typeof a ? a : a.css,
            fillRule: "evenodd",
            d: "M23 12a11 11 0 1 1-22 0 11 11 0 0 1 22 0Zm-4.16 5.85A9 9 0 0 0 15 3.52V4a3 3 0 0 1-3 3h-.77c-.13 0-.23.1-.23.23A2.77 2.77 0 0 1 8.23 10c-.13 0-.23.1-.23.23v1.52c0 .14.11.25.25.25H13a3 3 0 0 1 3 3v.77c0 .13.1.23.23.23 1.2 0 2.23.77 2.61 1.85ZM3.18 10.18A9 9 0 0 0 11 20.94v-2.7c0-.14-.1-.24-.23-.24h-.65A2.12 2.12 0 0 1 8 15.88c0-.56-.22-1.1-.62-1.5l-4.2-4.2Z",
            clipRule: "evenodd",
            className: o,
          }),
        });
      };
    },
    122508: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          LockIcon: function () {
            return a;
          },
        });
      var s = n("37983");
      n("884691");
      var i = n("669491"),
        r = n("82169");
      let a = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: a = i.default.colors.INTERACTIVE_NORMAL,
          colorClass: o = "",
          ...d
        } = e;
        return (0, s.jsx)("svg", {
          ...(0, r.default)(d),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: (0, s.jsx)("path", {
            fill: "string" == typeof a ? a : a.css,
            fillRule: "evenodd",
            d: "M6 9h1V6a5 5 0 0 1 10 0v3h1a3 3 0 0 1 3 3v8a3 3 0 0 1-3 3H6a3 3 0 0 1-3-3v-8a3 3 0 0 1 3-3Zm9-3v3H9V6a3 3 0 1 1 6 0Zm-1 8a2 2 0 0 1-1 1.73V18a1 1 0 1 1-2 0v-2.27A2 2 0 1 1 14 14Z",
            clipRule: "evenodd",
            className: o,
          }),
        });
      };
    },
    372286: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          RobotIcon: function () {
            return a;
          },
        });
      var s = n("37983");
      n("884691");
      var i = n("669491"),
        r = n("82169");
      let a = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: a = i.default.colors.INTERACTIVE_NORMAL,
          colorClass: o = "",
          ...d
        } = e;
        return (0, s.jsxs)("svg", {
          ...(0, r.default)(d),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: [
            (0, s.jsx)("path", {
              fill: "string" == typeof a ? a : a.css,
              d: "M7.89 13.46a1 1 0 0 1-1.78-.9L7 13l-.9-.45.01-.01.01-.02a2.42 2.42 0 0 1 .14-.23c.1-.14.23-.31.4-.5.37-.36.98-.79 1.84-.79.86 0 1.47.43 1.83.8a3.28 3.28 0 0 1 .55.72v.02h.01v.01L10 13l.9-.45a1 1 0 0 1-1.79.9 1.28 1.28 0 0 0-.19-.25c-.14-.13-.28-.2-.42-.2-.14 0-.28.07-.42.2a1.28 1.28 0 0 0-.19.25ZM13.55 13.9a1 1 0 0 0 1.34-.44c0-.02.02-.04.04-.06.03-.05.08-.13.15-.2.14-.13.28-.2.42-.2.14 0 .28.07.42.2a1.28 1.28 0 0 1 .19.25 1 1 0 0 0 1.78-.9L17 13l.9-.45-.01-.01-.01-.02a2.57 2.57 0 0 0-.14-.23 3.28 3.28 0 0 0-.4-.5c-.37-.36-.98-.79-1.84-.79-.86 0-1.47.43-1.83.8a3.28 3.28 0 0 0-.55.72v.02h-.01v.01L14 13l-.9-.45a1 1 0 0 0 .45 1.34Z",
              className: o,
            }),
            (0, s.jsx)("path", {
              fill: "string" == typeof a ? a : a.css,
              fillRule: "evenodd",
              d: "M12 21c5.52 0 10-1.86 10-6 0-5.59-2.8-10.07-4.26-11.67a1 1 0 1 0-1.48 1.34 14.8 14.8 0 0 1 2.35 3.86A10.23 10.23 0 0 0 12 6C9.47 6 7.15 7.02 5.4 8.53a14.8 14.8 0 0 1 2.34-3.86 1 1 0 0 0-1.48-1.34A18.65 18.65 0 0 0 2 15c0 4.14 4.48 6 10 6Zm0-12c3.87 0 7 2 7 4.2S15.87 17 12 17s-7-1.6-7-3.8C5 11 8.13 9 12 9Z",
              clipRule: "evenodd",
              className: o,
            }),
          ],
        });
      };
    },
    797405: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ShieldIcon: function () {
            return a;
          },
        });
      var s = n("37983");
      n("884691");
      var i = n("669491"),
        r = n("82169");
      let a = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: a = i.default.colors.INTERACTIVE_NORMAL,
          colorClass: o = "",
          ...d
        } = e;
        return (0, s.jsx)("svg", {
          ...(0, r.default)(d),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: (0, s.jsx)("path", {
            fill: "string" == typeof a ? a : a.css,
            fillRule: "evenodd",
            d: "M4.27 5.22A2.66 2.66 0 0 0 3 7.5v2.3c0 5.6 3.3 10.68 8.42 12.95.37.17.79.17 1.16 0A14.18 14.18 0 0 0 21 9.78V7.5c0-.93-.48-1.78-1.27-2.27l-6.17-3.76a3 3 0 0 0-3.12 0L4.27 5.22ZM6 7.68l6-3.66V12H6.22C6.08 11.28 6 10.54 6 9.78v-2.1Zm6 12.01V12h5.78A11.19 11.19 0 0 1 12 19.7Z",
            clipRule: "evenodd",
            className: o,
          }),
        });
      };
    },
    742270: function (e, t, n) {
      "use strict";
      function s(e) {
        return ""
          .concat(location.protocol, "//")
          .concat(window.GLOBAL_ENV.INVITE_HOST, "/")
          .concat(e);
      }
      function i(e) {
        return ""
          .concat(location.protocol, "//")
          .concat(window.GLOBAL_ENV.GUILD_TEMPLATE_HOST, "/")
          .concat(e);
      }
      function r() {
        return ""
          .concat(location.protocol, "//")
          .concat(window.GLOBAL_ENV.WEBAPP_ENDPOINT, "/channels/@me");
      }
      n.r(t),
        n.d(t, {
          getInviteDynamicLinkTemplate: function () {
            return s;
          },
          getGuildTemplateDynamicLinkTemplate: function () {
            return i;
          },
          getDefaultDynamicLinkTemplate: function () {
            return r;
          },
        });
    },
    815157: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          generateAttemptId: function () {
            return d;
          },
          parseDynamicLink: function () {
            return u;
          },
          default: function () {
            return l;
          },
        }),
        n("511434"),
        n("313619"),
        n("654714"),
        n("287168"),
        n("956660"),
        n("222007");
      var s = n("383536"),
        i = n.n(s),
        r = n("748820"),
        a = n("530334");
      let o = "https://discordapp.page.link";
      function d() {
        return (0, r.v4)();
      }
      function u(e) {
        if (!e.startsWith(o)) return null;
        try {
          var t;
          let n = new URL(e),
            s = n.searchParams,
            i = s.get("link");
          if (null == i) return null;
          let r = decodeURIComponent(i),
            a = new URL(r).searchParams,
            o = {
              utmSource:
                null !== (t = s.get("utm_source")) && void 0 !== t ? t : void 0,
            };
          for (let [e, t] of a.entries()) o[e] = t;
          return o;
        } catch {
          return null;
        }
      }
      function l(e, t) {
        let {
            utmSource: n,
            androidFallbackLink: s,
            iosFallbackLink: r,
            ...d
          } = t,
          u = new URL(e);
        for (let e in d) {
          let t = d[e];
          null != t && u.searchParams.set(e, t);
        }
        let l = encodeURIComponent(u.toString()),
          f = encodeURIComponent((0, a.default)()),
          _ = !(function () {
            var e, t;
            let n = RegExp(
                "(".concat("WebView|(iPhone|iPod|iPad)(?!.*Safari/)", ")"),
                "ig"
              ),
              s =
                (null == i
                  ? void 0
                  : null === (e = i.ua) || void 0 === e
                    ? void 0
                    : e.match(n)) != null,
              r = (null == i ? void 0 : i.name) === "Safari" && !s;
            return (
              (null == i
                ? void 0
                : null === (t = i.os) || void 0 === t
                  ? void 0
                  : t.family) !== "iOS" || r
            );
          })()
            ? 0
            : 1,
          c = null != s ? encodeURIComponent(s) : null,
          g = null != r ? encodeURIComponent(r) : null,
          m = ""
            .concat(o, "/?link=")
            .concat(l, "&utm_source=")
            .concat(n, "&apn=")
            .concat("com.discord", "&isi=")
            .concat(985746746, "&ibi=")
            .concat("com.hammerandchisel.discord", "&sd=")
            .concat(f, "&efr=")
            .concat(_);
        return (
          null != c && (m += "&afl=".concat(c)),
          null != g && (m += "&ifl=".concat(g)),
          m
        );
      }
    },
    530334: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      let s = () => "";
      var i = (s = n("466237").default);
    },
    466237: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var s = n("792788");
      function i() {
        return s.default.Messages.DynamicLinks.IOS_APP_PREVIEW_DESCRIPTION;
      }
    },
    592861: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
      var s = [
        {
          name: "Afghanistan",
          alpha2: "AF",
          phoneCountryCode: "+93",
          phoneCountryCodes: ["+93"],
        },
        {
          name: "Aland Islands",
          alpha2: "AX",
          phoneCountryCode: "+358",
          phoneCountryCodes: ["+358"],
        },
        {
          name: "Albania",
          alpha2: "AL",
          phoneCountryCode: "+355",
          phoneCountryCodes: ["+355"],
        },
        {
          name: "Algeria",
          alpha2: "DZ",
          phoneCountryCode: "+213",
          phoneCountryCodes: ["+213"],
        },
        {
          name: "American Samoa",
          alpha2: "AS",
          phoneCountryCode: "+1 684",
          phoneCountryCodes: ["+1 684"],
        },
        {
          name: "Andorra",
          alpha2: "AD",
          phoneCountryCode: "+376",
          phoneCountryCodes: ["+376"],
        },
        {
          name: "Angola",
          alpha2: "AO",
          phoneCountryCode: "+244",
          phoneCountryCodes: ["+244"],
        },
        {
          name: "Anguilla",
          alpha2: "AI",
          phoneCountryCode: "+1 264",
          phoneCountryCodes: ["+1 264"],
        },
        {
          name: "Antarctica",
          alpha2: "AQ",
          phoneCountryCode: "+672",
          phoneCountryCodes: ["+672"],
        },
        {
          name: "Antigua and Barbuda",
          alpha2: "AG",
          phoneCountryCode: "+1 268",
          phoneCountryCodes: ["+1 268"],
        },
        {
          name: "Argentina",
          alpha2: "AR",
          phoneCountryCode: "+54",
          phoneCountryCodes: ["+54"],
          localeForICU: "es-AR",
          currencyCode: "ars",
        },
        {
          name: "Armenia",
          alpha2: "AM",
          phoneCountryCode: "+374",
          phoneCountryCodes: ["+374"],
        },
        {
          name: "Aruba",
          alpha2: "AW",
          phoneCountryCode: "+297",
          phoneCountryCodes: ["+297"],
        },
        {
          name: "Ascension",
          alpha2: "AC",
          phoneCountryCode: "+247",
          phoneCountryCodes: ["+247"],
        },
        {
          name: "Australia",
          alpha2: "AU",
          phoneCountryCode: "+61",
          phoneCountryCodes: ["+61"],
          localeForICU: "en-AU",
          currencyCode: "aud",
        },
        {
          name: "Austria",
          alpha2: "AT",
          phoneCountryCode: "+43",
          phoneCountryCodes: ["+43"],
        },
        {
          name: "Azerbaijan",
          alpha2: "AZ",
          phoneCountryCode: "+994",
          phoneCountryCodes: ["+994"],
        },
        {
          name: "Bahamas",
          alpha2: "BS",
          phoneCountryCode: "+1 242",
          phoneCountryCodes: ["+1 242"],
        },
        {
          name: "Bahrain",
          alpha2: "BH",
          phoneCountryCode: "+973",
          phoneCountryCodes: ["+973"],
        },
        {
          name: "Bangladesh",
          alpha2: "BD",
          phoneCountryCode: "+880",
          phoneCountryCodes: ["+880"],
        },
        {
          name: "Barbados",
          alpha2: "BB",
          phoneCountryCode: "+1 246",
          phoneCountryCodes: ["+1 246"],
        },
        {
          name: "Belarus",
          alpha2: "BY",
          phoneCountryCode: "+375",
          phoneCountryCodes: ["+375"],
        },
        {
          name: "Belgium",
          alpha2: "BE",
          phoneCountryCode: "+32",
          phoneCountryCodes: ["+32"],
        },
        {
          name: "Belize",
          alpha2: "BZ",
          phoneCountryCode: "+501",
          phoneCountryCodes: ["+501"],
        },
        {
          name: "Benin",
          alpha2: "BJ",
          phoneCountryCode: "+229",
          phoneCountryCodes: ["+229"],
        },
        {
          name: "Bermuda",
          alpha2: "BM",
          phoneCountryCode: "+1 441",
          phoneCountryCodes: ["+1 441"],
        },
        {
          name: "Bhutan",
          alpha2: "BT",
          phoneCountryCode: "+975",
          phoneCountryCodes: ["+975"],
        },
        {
          name: "Bolivia, Plurinational State of",
          alpha2: "BO",
          phoneCountryCode: "+591",
          phoneCountryCodes: ["+591"],
        },
        {
          name: "Bonaire, Sint Eustatius and Saba",
          alpha2: "BQ",
          phoneCountryCode: "+599",
          phoneCountryCodes: ["+599"],
        },
        {
          name: "Bosnia and Herzegovina",
          alpha2: "BA",
          phoneCountryCode: "+387",
          phoneCountryCodes: ["+387"],
        },
        {
          name: "Botswana",
          alpha2: "BW",
          phoneCountryCode: "+267",
          phoneCountryCodes: ["+267"],
        },
        {
          name: "Bouvet Island",
          alpha2: "BV",
          phoneCountryCode: "+55",
          phoneCountryCodes: ["+55"],
        },
        {
          name: "Brazil",
          alpha2: "BR",
          phoneCountryCode: "+55",
          phoneCountryCodes: ["+55"],
        },
        {
          name: "British Indian Ocean Territory",
          alpha2: "IO",
          phoneCountryCode: "+246",
          phoneCountryCodes: ["+246"],
        },
        {
          name: "Brunei Darussalam",
          alpha2: "BN",
          phoneCountryCode: "+673",
          phoneCountryCodes: ["+673"],
        },
        {
          name: "Bulgaria",
          alpha2: "BG",
          phoneCountryCode: "+359",
          phoneCountryCodes: ["+359"],
        },
        {
          name: "Burkina Faso",
          alpha2: "BF",
          phoneCountryCode: "+226",
          phoneCountryCodes: ["+226"],
        },
        {
          name: "Burundi",
          alpha2: "BI",
          phoneCountryCode: "+257",
          phoneCountryCodes: ["+257"],
        },
        {
          name: "Cambodia",
          alpha2: "KH",
          phoneCountryCode: "+855",
          phoneCountryCodes: ["+855"],
        },
        {
          name: "Cameroon",
          alpha2: "CM",
          phoneCountryCode: "+237",
          phoneCountryCodes: ["+237"],
        },
        {
          name: "Canada",
          alpha2: "CA",
          phoneCountryCode: "+1",
          phoneCountryCodes: ["+1"],
        },
        {
          name: "Cape Verde",
          alpha2: "CV",
          phoneCountryCode: "+238",
          phoneCountryCodes: ["+238"],
        },
        {
          name: "Cayman Islands",
          alpha2: "KY",
          phoneCountryCode: "+1 345",
          phoneCountryCodes: ["+1 345"],
        },
        {
          name: "Central African Republic",
          alpha2: "CF",
          phoneCountryCode: "+236",
          phoneCountryCodes: ["+236"],
        },
        {
          name: "Chad",
          alpha2: "TD",
          phoneCountryCode: "+235",
          phoneCountryCodes: ["+235"],
        },
        {
          name: "Chile",
          alpha2: "CL",
          phoneCountryCode: "+56",
          phoneCountryCodes: ["+56"],
          localeForICU: "es-CL",
          currencyCode: "clp",
        },
        {
          name: "China",
          alpha2: "CN",
          phoneCountryCode: "+86",
          phoneCountryCodes: ["+86"],
        },
        {
          name: "Christmas Island",
          alpha2: "CX",
          phoneCountryCode: "+61",
          phoneCountryCodes: ["+61"],
        },
        {
          name: "Cocos (Keeling) Islands",
          alpha2: "CC",
          phoneCountryCode: "+61",
          phoneCountryCodes: ["+61"],
        },
        {
          name: "Colombia",
          alpha2: "CO",
          phoneCountryCode: "+57",
          phoneCountryCodes: ["+57"],
          localeForICU: "es-CO",
          currencyCode: "cop",
        },
        {
          name: "Comoros",
          alpha2: "KM",
          phoneCountryCode: "+269",
          phoneCountryCodes: ["+269"],
        },
        {
          name: "Congo",
          alpha2: "CG",
          phoneCountryCode: "+242",
          phoneCountryCodes: ["+242"],
        },
        {
          name: "Congo, The Democratic Republic of the",
          alpha2: "CD",
          phoneCountryCode: "+243",
          phoneCountryCodes: ["+243"],
        },
        {
          name: "Cook Islands",
          alpha2: "CK",
          phoneCountryCode: "+682",
          phoneCountryCodes: ["+682"],
        },
        {
          name: "Costa Rica",
          alpha2: "CR",
          phoneCountryCode: "+506",
          phoneCountryCodes: ["+506"],
        },
        {
          name: "Cote d'Ivoire",
          alpha2: "CI",
          phoneCountryCode: "+225",
          phoneCountryCodes: ["+225"],
        },
        {
          name: "Croatia",
          alpha2: "HR",
          phoneCountryCode: "+385",
          phoneCountryCodes: ["+385"],
        },
        {
          name: "Cuba",
          alpha2: "CU",
          phoneCountryCode: "+53",
          phoneCountryCodes: ["+53"],
        },
        {
          name: "Curacao",
          alpha2: "CW",
          phoneCountryCode: "+599",
          phoneCountryCodes: ["+599"],
        },
        {
          name: "Cyprus",
          alpha2: "CY",
          phoneCountryCode: "+357",
          phoneCountryCodes: ["+357"],
        },
        {
          name: "Czech Republic",
          alpha2: "CZ",
          phoneCountryCode: "+420",
          phoneCountryCodes: ["+420"],
        },
        {
          name: "Denmark",
          alpha2: "DK",
          phoneCountryCode: "+45",
          phoneCountryCodes: ["+45"],
        },
        {
          name: "Diego Garcia",
          alpha2: "DG",
          phoneCountryCode: "+246",
          phoneCountryCodes: ["+246"],
        },
        {
          name: "Djibouti",
          alpha2: "DJ",
          phoneCountryCode: "+253",
          phoneCountryCodes: ["+253"],
        },
        {
          name: "Dominica",
          alpha2: "DM",
          phoneCountryCode: "+1 767",
          phoneCountryCodes: ["+1 767"],
        },
        {
          name: "Dominican Republic",
          alpha2: "DO",
          phoneCountryCode: "+1 809",
          phoneCountryCodes: ["+1 809", "+1 829", "+1 849"],
        },
        {
          name: "East Timor",
          alpha2: "TP",
          phoneCountryCode: "+670",
          phoneCountryCodes: ["+670"],
        },
        {
          name: "Ecuador",
          alpha2: "EC",
          phoneCountryCode: "+593",
          phoneCountryCodes: ["+593"],
        },
        {
          name: "Egypt",
          alpha2: "EG",
          phoneCountryCode: "+20",
          phoneCountryCodes: ["+20"],
        },
        {
          name: "El Salvador",
          alpha2: "SV",
          phoneCountryCode: "+503",
          phoneCountryCodes: ["+503"],
        },
        {
          name: "Equatorial Guinea",
          alpha2: "GQ",
          phoneCountryCode: "+240",
          phoneCountryCodes: ["+240"],
        },
        {
          name: "Eritrea",
          alpha2: "ER",
          phoneCountryCode: "+291",
          phoneCountryCodes: ["+291"],
        },
        {
          name: "Estonia",
          alpha2: "EE",
          phoneCountryCode: "+372",
          phoneCountryCodes: ["+372"],
        },
        {
          name: "Ethiopia",
          alpha2: "ET",
          phoneCountryCode: "+251",
          phoneCountryCodes: ["+251"],
        },
        {
          name: "Falkland Islands (Malvinas)",
          alpha2: "FK",
          phoneCountryCode: "+500",
          phoneCountryCodes: ["+500"],
        },
        {
          name: "Faroe Islands",
          alpha2: "FO",
          phoneCountryCode: "+298",
          phoneCountryCodes: ["+298"],
        },
        {
          name: "Fiji",
          alpha2: "FJ",
          phoneCountryCode: "+679",
          phoneCountryCodes: ["+679"],
        },
        {
          name: "Finland",
          alpha2: "FI",
          phoneCountryCode: "+358",
          phoneCountryCodes: ["+358"],
        },
        {
          name: "France",
          alpha2: "FR",
          phoneCountryCode: "+33",
          phoneCountryCodes: ["+33"],
        },
        {
          name: "French Guiana",
          alpha2: "GF",
          phoneCountryCode: "+594",
          phoneCountryCodes: ["+594"],
        },
        {
          name: "French Polynesia",
          alpha2: "PF",
          phoneCountryCode: "+689",
          phoneCountryCodes: ["+689"],
        },
        {
          name: "French Southern Territories",
          alpha2: "TF",
          phoneCountryCode: "+262",
          phoneCountryCodes: ["+262"],
        },
        {
          name: "Gabon",
          alpha2: "GA",
          phoneCountryCode: "+241",
          phoneCountryCodes: ["+241"],
        },
        {
          name: "Gambia",
          alpha2: "GM",
          phoneCountryCode: "+220",
          phoneCountryCodes: ["+220"],
        },
        {
          name: "Georgia",
          alpha2: "GE",
          phoneCountryCode: "+995",
          phoneCountryCodes: ["+995"],
        },
        {
          name: "Germany",
          alpha2: "DE",
          phoneCountryCode: "+49",
          phoneCountryCodes: ["+49"],
        },
        {
          name: "Ghana",
          alpha2: "GH",
          phoneCountryCode: "+233",
          phoneCountryCodes: ["+233"],
        },
        {
          name: "Gibraltar",
          alpha2: "GI",
          phoneCountryCode: "+350",
          phoneCountryCodes: ["+350"],
        },
        {
          name: "Greece",
          alpha2: "GR",
          phoneCountryCode: "+30",
          phoneCountryCodes: ["+30"],
        },
        {
          name: "Greenland",
          alpha2: "GL",
          phoneCountryCode: "+299",
          phoneCountryCodes: ["+299"],
        },
        {
          name: "Grenada",
          alpha2: "GD",
          phoneCountryCode: "+1 473",
          phoneCountryCodes: ["+1 473"],
        },
        {
          name: "Guadeloupe",
          alpha2: "GP",
          phoneCountryCode: "+590",
          phoneCountryCodes: ["+590"],
        },
        {
          name: "Guam",
          alpha2: "GU",
          phoneCountryCode: "+1 671",
          phoneCountryCodes: ["+1 671"],
        },
        {
          name: "Guatemala",
          alpha2: "GT",
          phoneCountryCode: "+502",
          phoneCountryCodes: ["+502"],
        },
        {
          name: "Guernsey",
          alpha2: "GG",
          phoneCountryCode: "+44",
          phoneCountryCodes: ["+44"],
        },
        {
          name: "Guinea",
          alpha2: "GN",
          phoneCountryCode: "+224",
          phoneCountryCodes: ["+224"],
        },
        {
          name: "Guinea-Bissau",
          alpha2: "GW",
          phoneCountryCode: "+245",
          phoneCountryCodes: ["+245"],
        },
        {
          name: "Guyana",
          alpha2: "GY",
          phoneCountryCode: "+592",
          phoneCountryCodes: ["+592"],
        },
        {
          name: "Haiti",
          alpha2: "HT",
          phoneCountryCode: "+509",
          phoneCountryCodes: ["+509"],
        },
        {
          name: "Heard Island and McDonald Islands",
          alpha2: "HM",
          phoneCountryCode: "+672",
          phoneCountryCodes: ["+672"],
        },
        {
          name: "Holy See (Vatican City State)",
          alpha2: "VA",
          phoneCountryCode: "+39",
          phoneCountryCodes: ["+39"],
        },
        {
          name: "Honduras",
          alpha2: "HN",
          phoneCountryCode: "+504",
          phoneCountryCodes: ["+504"],
        },
        {
          name: "Hong Kong",
          alpha2: "HK",
          phoneCountryCode: "+852",
          phoneCountryCodes: ["+852"],
        },
        {
          name: "Hungary",
          alpha2: "HU",
          phoneCountryCode: "+36",
          phoneCountryCodes: ["+36"],
        },
        {
          name: "Iceland",
          alpha2: "IS",
          phoneCountryCode: "+354",
          phoneCountryCodes: ["+354"],
        },
        {
          name: "India",
          alpha2: "IN",
          phoneCountryCode: "+91",
          phoneCountryCodes: ["+91"],
        },
        {
          name: "Indonesia",
          alpha2: "ID",
          phoneCountryCode: "+62",
          phoneCountryCodes: ["+62"],
          localeForICU: "id",
          currencyCode: "idr",
        },
        {
          name: "Iran, Islamic Republic of",
          alpha2: "IR",
          phoneCountryCode: "+98",
          phoneCountryCodes: ["+98"],
        },
        {
          name: "Iraq",
          alpha2: "IQ",
          phoneCountryCode: "+964",
          phoneCountryCodes: ["+964"],
        },
        {
          name: "Ireland",
          alpha2: "IE",
          phoneCountryCode: "+353",
          phoneCountryCodes: ["+353"],
        },
        {
          name: "Isle of Man",
          alpha2: "IM",
          phoneCountryCode: "+44",
          phoneCountryCodes: ["+44"],
        },
        {
          name: "Israel",
          alpha2: "IL",
          phoneCountryCode: "+972",
          phoneCountryCodes: ["+972"],
        },
        {
          name: "Italy",
          alpha2: "IT",
          phoneCountryCode: "+39",
          phoneCountryCodes: ["+39"],
        },
        {
          name: "Jamaica",
          alpha2: "JM",
          phoneCountryCode: "+1 876",
          phoneCountryCodes: ["+1 876"],
        },
        {
          name: "Japan",
          alpha2: "JP",
          phoneCountryCode: "+81",
          phoneCountryCodes: ["+81"],
          localeForICU: "jp",
          currencyCode: "jpy",
        },
        {
          name: "Jersey",
          alpha2: "JE",
          phoneCountryCode: "+44",
          phoneCountryCodes: ["+44"],
        },
        {
          name: "Jordan",
          alpha2: "JO",
          phoneCountryCode: "+962",
          phoneCountryCodes: ["+962"],
        },
        {
          name: "Kazakhstan",
          alpha2: "KZ",
          phoneCountryCode: "+7",
          phoneCountryCodes: ["+7"],
        },
        {
          name: "Kenya",
          alpha2: "KE",
          phoneCountryCode: "+254",
          phoneCountryCodes: ["+254"],
        },
        {
          name: "Kiribati",
          alpha2: "KI",
          phoneCountryCode: "+686",
          phoneCountryCodes: ["+686"],
        },
        {
          name: "Kosovo",
          alpha2: "XK",
          phoneCountryCode: "+383",
          phoneCountryCodes: ["+383"],
        },
        {
          name: "Korea, Democratic People's Republic of",
          alpha2: "KP",
          phoneCountryCode: "+850",
          phoneCountryCodes: ["+850"],
        },
        {
          name: "Korea, Republic of",
          alpha2: "KR",
          phoneCountryCode: "+82",
          phoneCountryCodes: ["+82"],
        },
        {
          name: "Kuwait",
          alpha2: "KW",
          phoneCountryCode: "+965",
          phoneCountryCodes: ["+965"],
        },
        {
          name: "Kyrgyzstan",
          alpha2: "KG",
          phoneCountryCode: "+996",
          phoneCountryCodes: ["+996"],
        },
        {
          name: "Lao People's Democratic Republic",
          alpha2: "LA",
          phoneCountryCode: "+856",
          phoneCountryCodes: ["+856"],
        },
        {
          name: "Latvia",
          alpha2: "LV",
          phoneCountryCode: "+371",
          phoneCountryCodes: ["+371"],
        },
        {
          name: "Lebanon",
          alpha2: "LB",
          phoneCountryCode: "+961",
          phoneCountryCodes: ["+961"],
        },
        {
          name: "Lesotho",
          alpha2: "LS",
          phoneCountryCode: "+266",
          phoneCountryCodes: ["+266"],
        },
        {
          name: "Liberia",
          alpha2: "LR",
          phoneCountryCode: "+231",
          phoneCountryCodes: ["+231"],
        },
        {
          name: "Libya",
          alpha2: "LY",
          phoneCountryCode: "+218",
          phoneCountryCodes: ["+218"],
        },
        {
          name: "Liechtenstein",
          alpha2: "LI",
          phoneCountryCode: "+423",
          phoneCountryCodes: ["+423"],
        },
        {
          name: "Lithuania",
          alpha2: "LT",
          phoneCountryCode: "+370",
          phoneCountryCodes: ["+370"],
        },
        {
          name: "Luxembourg",
          alpha2: "LU",
          phoneCountryCode: "+352",
          phoneCountryCodes: ["+352"],
        },
        {
          name: "Macao",
          alpha2: "MO",
          phoneCountryCode: "+853",
          phoneCountryCodes: ["+853"],
        },
        {
          name: "Macedonia, Republic of",
          alpha2: "MK",
          phoneCountryCode: "+389",
          phoneCountryCodes: ["+389"],
        },
        {
          name: "Madagascar",
          alpha2: "MG",
          phoneCountryCode: "+261",
          phoneCountryCodes: ["+261"],
        },
        {
          name: "Malawi",
          alpha2: "MW",
          phoneCountryCode: "+265",
          phoneCountryCodes: ["+265"],
        },
        {
          name: "Malaysia",
          alpha2: "MY",
          phoneCountryCode: "+60",
          phoneCountryCodes: ["+60"],
          localeForICU: "ms",
          currencyCode: "myr",
        },
        {
          name: "Maldives",
          alpha2: "MV",
          phoneCountryCode: "+960",
          phoneCountryCodes: ["+960"],
        },
        {
          name: "Mali",
          alpha2: "ML",
          phoneCountryCode: "+223",
          phoneCountryCodes: ["+223"],
        },
        {
          name: "Malta",
          alpha2: "MT",
          phoneCountryCode: "+356",
          phoneCountryCodes: ["+356"],
        },
        {
          name: "Marshall Islands",
          alpha2: "MH",
          phoneCountryCode: "+692",
          phoneCountryCodes: ["+692"],
        },
        {
          name: "Martinique",
          alpha2: "MQ",
          phoneCountryCode: "+596",
          phoneCountryCodes: ["+596"],
        },
        {
          name: "Mauritania",
          alpha2: "MR",
          phoneCountryCode: "+222",
          phoneCountryCodes: ["+222"],
        },
        {
          name: "Mauritius",
          alpha2: "MU",
          phoneCountryCode: "+230",
          phoneCountryCodes: ["+230"],
        },
        {
          name: "Mayotte",
          alpha2: "YT",
          phoneCountryCode: "+262",
          phoneCountryCodes: ["+262"],
        },
        {
          name: "Mexico",
          alpha2: "MX",
          phoneCountryCode: "+52",
          phoneCountryCodes: ["+52"],
        },
        {
          name: "Micronesia, Federated States of",
          alpha2: "FM",
          phoneCountryCode: "+691",
          phoneCountryCodes: ["+691"],
        },
        {
          name: "Midway Island",
          alpha2: "MI",
          phoneCountryCode: "+1 808",
          phoneCountryCodes: ["+1 808"],
        },
        {
          name: "Moldova, Republic of",
          alpha2: "MD",
          phoneCountryCode: "+373",
          phoneCountryCodes: ["+373"],
        },
        {
          name: "Monaco",
          alpha2: "MC",
          phoneCountryCode: "+377",
          phoneCountryCodes: ["+377"],
        },
        {
          name: "Mongolia",
          alpha2: "MN",
          phoneCountryCode: "+976",
          phoneCountryCodes: ["+976"],
        },
        {
          name: "Montenegro",
          alpha2: "ME",
          phoneCountryCode: "+382",
          phoneCountryCodes: ["+382"],
        },
        {
          name: "Montserrat",
          alpha2: "MS",
          phoneCountryCode: "+1664",
          phoneCountryCodes: ["+1664"],
        },
        {
          name: "Morocco",
          alpha2: "MA",
          phoneCountryCode: "+212",
          phoneCountryCodes: ["+212"],
        },
        {
          name: "Mozambique",
          alpha2: "MZ",
          phoneCountryCode: "+258",
          phoneCountryCodes: ["+258"],
        },
        {
          name: "Myanmar",
          alpha2: "MM",
          phoneCountryCode: "+95",
          phoneCountryCodes: ["+95"],
        },
        {
          name: "Namibia",
          alpha2: "NA",
          phoneCountryCode: "+264",
          phoneCountryCodes: ["+264"],
        },
        {
          name: "Nauru",
          alpha2: "NR",
          phoneCountryCode: "+674",
          phoneCountryCodes: ["+674"],
        },
        {
          name: "Nepal",
          alpha2: "NP",
          phoneCountryCode: "+977",
          phoneCountryCodes: ["+977"],
        },
        {
          name: "Netherlands",
          alpha2: "NL",
          phoneCountryCode: "+31",
          phoneCountryCodes: ["+31"],
        },
        {
          name: "Netherlands Antilles",
          alpha2: "AN",
          phoneCountryCode: "+599",
          phoneCountryCodes: ["+599"],
        },
        {
          name: "New Caledonia",
          alpha2: "NC",
          phoneCountryCode: "+687",
          phoneCountryCodes: ["+687"],
        },
        {
          name: "New Zealand",
          alpha2: "NZ",
          phoneCountryCode: "+64",
          phoneCountryCodes: ["+64"],
        },
        {
          name: "Nicaragua",
          alpha2: "NI",
          phoneCountryCode: "+505",
          phoneCountryCodes: ["+505"],
        },
        {
          name: "Niger",
          alpha2: "NE",
          phoneCountryCode: "+227",
          phoneCountryCodes: ["+227"],
        },
        {
          name: "Nigeria",
          alpha2: "NG",
          phoneCountryCode: "+234",
          phoneCountryCodes: ["+234"],
        },
        {
          name: "Niue",
          alpha2: "NU",
          phoneCountryCode: "+683",
          phoneCountryCodes: ["+683"],
        },
        {
          name: "Norfolk Island",
          alpha2: "NF",
          phoneCountryCode: "+672",
          phoneCountryCodes: ["+672"],
        },
        {
          name: "Northern Mariana Islands",
          alpha2: "MP",
          phoneCountryCode: "+1 670",
          phoneCountryCodes: ["+1 670"],
        },
        {
          name: "Norway",
          alpha2: "NO",
          phoneCountryCode: "+47",
          phoneCountryCodes: ["+47"],
        },
        {
          name: "Oman",
          alpha2: "OM",
          phoneCountryCode: "+968",
          phoneCountryCodes: ["+968"],
        },
        {
          name: "Pakistan",
          alpha2: "PK",
          phoneCountryCode: "+92",
          phoneCountryCodes: ["+92"],
        },
        {
          name: "Palau",
          alpha2: "PW",
          phoneCountryCode: "+680",
          phoneCountryCodes: ["+680"],
        },
        {
          name: "Palestine, State of",
          alpha2: "PS",
          phoneCountryCode: "+970",
          phoneCountryCodes: ["+970"],
        },
        {
          name: "Panama",
          alpha2: "PA",
          phoneCountryCode: "+507",
          phoneCountryCodes: ["+507"],
        },
        {
          name: "Papua New Guinea",
          alpha2: "PG",
          phoneCountryCode: "+675",
          phoneCountryCodes: ["+675"],
        },
        {
          name: "Paraguay",
          alpha2: "PY",
          phoneCountryCode: "+595",
          phoneCountryCodes: ["+595"],
        },
        {
          name: "Peru",
          alpha2: "PE",
          phoneCountryCode: "+51",
          phoneCountryCodes: ["+51"],
          localeForICU: "es-PE",
          currencyCode: "pen",
        },
        {
          name: "Philippines",
          alpha2: "PH",
          phoneCountryCode: "+63",
          phoneCountryCodes: ["+63"],
          localeForICU: "en-PH",
          currencyCode: "php",
        },
        {
          name: "Pitcairn",
          alpha2: "PN",
          phoneCountryCode: "+64",
          phoneCountryCodes: ["+64"],
        },
        {
          name: "Poland",
          alpha2: "PL",
          phoneCountryCode: "+48",
          phoneCountryCodes: ["+48"],
        },
        {
          name: "Portugal",
          alpha2: "PT",
          phoneCountryCode: "+351",
          phoneCountryCodes: ["+351"],
        },
        {
          name: "Puerto Rico",
          alpha2: "PR",
          phoneCountryCode: "+1 787",
          phoneCountryCodes: ["+1 787"],
        },
        {
          name: "Qatar",
          alpha2: "QA",
          phoneCountryCode: "+974",
          phoneCountryCodes: ["+974"],
        },
        {
          name: "Reunion",
          alpha2: "RE",
          phoneCountryCode: "+262",
          phoneCountryCodes: ["+262"],
        },
        {
          name: "Romania",
          alpha2: "RO",
          phoneCountryCode: "+40",
          phoneCountryCodes: ["+40"],
        },
        {
          name: "Russian Federation",
          alpha2: "RU",
          phoneCountryCode: "+7",
          phoneCountryCodes: ["+7"],
        },
        {
          name: "Rwanda",
          alpha2: "RW",
          phoneCountryCode: "+250",
          phoneCountryCodes: ["+250"],
        },
        {
          name: "Saint Barth\xe9lemy",
          alpha2: "BL",
          phoneCountryCode: "+590",
          phoneCountryCodes: ["+590"],
        },
        {
          name: "Saint Helena, Ascension and Tristan da Cunha",
          alpha2: "SH",
          phoneCountryCode: "+290",
          phoneCountryCodes: ["+290"],
        },
        {
          name: "Saint Kitts and Nevis",
          alpha2: "KN",
          phoneCountryCode: "+1 869",
          phoneCountryCodes: ["+1 869"],
        },
        {
          name: "Saint Lucia",
          alpha2: "LC",
          phoneCountryCode: "+1 758",
          phoneCountryCodes: ["+1 758"],
        },
        {
          name: "Saint Martin (French part)",
          alpha2: "MF",
          phoneCountryCode: "+590",
          phoneCountryCodes: ["+590"],
        },
        {
          name: "Saint Pierre and Miquelon",
          alpha2: "PM",
          phoneCountryCode: "+508",
          phoneCountryCodes: ["+508"],
        },
        {
          name: "Saint Vincent and the Grenadines",
          alpha2: "VC",
          phoneCountryCode: "+1 784",
          phoneCountryCodes: ["+1 784"],
        },
        {
          name: "Samoa",
          alpha2: "WS",
          phoneCountryCode: "+685",
          phoneCountryCodes: ["+685"],
        },
        {
          name: "San Marino",
          alpha2: "SM",
          phoneCountryCode: "+378",
          phoneCountryCodes: ["+378"],
        },
        {
          name: "Sao Tome and Principe",
          alpha2: "ST",
          phoneCountryCode: "+239",
          phoneCountryCodes: ["+239"],
        },
        {
          name: "Saudi Arabia",
          alpha2: "SA",
          phoneCountryCode: "+966",
          phoneCountryCodes: ["+966"],
        },
        {
          name: "Senegal",
          alpha2: "SN",
          phoneCountryCode: "+221",
          phoneCountryCodes: ["+221"],
        },
        {
          name: "Serbia",
          alpha2: "RS",
          phoneCountryCode: "+381",
          phoneCountryCodes: ["+381"],
        },
        {
          name: "Seychelles",
          alpha2: "SC",
          phoneCountryCode: "+248",
          phoneCountryCodes: ["+248"],
        },
        {
          name: "Sierra Leone",
          alpha2: "SL",
          phoneCountryCode: "+232",
          phoneCountryCodes: ["+232"],
        },
        {
          name: "Singapore",
          alpha2: "SG",
          phoneCountryCode: "+65",
          phoneCountryCodes: ["+65"],
        },
        {
          name: "Sint Maarten (Dutch part)",
          alpha2: "SX",
          phoneCountryCode: "+1 721",
          phoneCountryCodes: ["+1 721"],
        },
        {
          name: "Slovakia",
          alpha2: "SK",
          phoneCountryCode: "+421",
          phoneCountryCodes: ["+421"],
        },
        {
          name: "Slovenia",
          alpha2: "SI",
          phoneCountryCode: "+386",
          phoneCountryCodes: ["+386"],
        },
        {
          name: "Solomon Islands",
          alpha2: "SB",
          phoneCountryCode: "+677",
          phoneCountryCodes: ["+677"],
        },
        {
          name: "Somalia",
          alpha2: "SO",
          phoneCountryCode: "+252",
          phoneCountryCodes: ["+252"],
        },
        {
          name: "South Africa",
          alpha2: "ZA",
          phoneCountryCode: "+27",
          phoneCountryCodes: ["+27"],
        },
        {
          name: "South Georgia and the South Sandwich Islands",
          alpha2: "GS",
          phoneCountryCode: "+500",
          phoneCountryCodes: ["+500"],
        },
        {
          name: "South Sudan",
          alpha2: "SS",
          phoneCountryCode: "+211",
          phoneCountryCodes: ["+211"],
        },
        {
          name: "Spain",
          alpha2: "ES",
          phoneCountryCode: "+34",
          phoneCountryCodes: ["+34"],
        },
        {
          name: "Sri Lanka",
          alpha2: "LK",
          phoneCountryCode: "+94",
          phoneCountryCodes: ["+94"],
        },
        {
          name: "Sudan",
          alpha2: "SD",
          phoneCountryCode: "+249",
          phoneCountryCodes: ["+249"],
        },
        {
          name: "Suriname",
          alpha2: "SR",
          phoneCountryCode: "+597",
          phoneCountryCodes: ["+597"],
        },
        {
          name: "Svalbard and Jan Mayen",
          alpha2: "SJ",
          phoneCountryCode: "+47",
          phoneCountryCodes: ["+47"],
        },
        {
          name: "Swaziland",
          alpha2: "SZ",
          phoneCountryCode: "+268",
          phoneCountryCodes: ["+268"],
        },
        {
          name: "Sweden",
          alpha2: "SE",
          phoneCountryCode: "+46",
          phoneCountryCodes: ["+46"],
        },
        {
          name: "Switzerland",
          alpha2: "CH",
          phoneCountryCode: "+41",
          phoneCountryCodes: ["+41"],
        },
        {
          name: "Syrian Arab Republic",
          alpha2: "SY",
          phoneCountryCode: "+963",
          phoneCountryCodes: ["+963"],
        },
        {
          name: "Taiwan",
          alpha2: "TW",
          phoneCountryCode: "+886",
          phoneCountryCodes: ["+886"],
        },
        {
          name: "Tajikistan",
          alpha2: "TJ",
          phoneCountryCode: "+992",
          phoneCountryCodes: ["+992"],
        },
        {
          name: "Tanzania, United Republic of",
          alpha2: "TZ",
          phoneCountryCode: "+255",
          phoneCountryCodes: ["+255"],
        },
        {
          name: "Thailand",
          alpha2: "TH",
          phoneCountryCode: "+66",
          phoneCountryCodes: ["+66"],
          localeForICU: "th",
          currencyCode: "thb",
        },
        {
          name: "Timor-Leste",
          alpha2: "TL",
          phoneCountryCode: "+670",
          phoneCountryCodes: ["+670"],
        },
        {
          name: "Togo",
          alpha2: "TG",
          phoneCountryCode: "+228",
          phoneCountryCodes: ["+228"],
        },
        {
          name: "Tokelau",
          alpha2: "TK",
          phoneCountryCode: "+690",
          phoneCountryCodes: ["+690"],
        },
        {
          name: "Tonga",
          alpha2: "TO",
          phoneCountryCode: "+676",
          phoneCountryCodes: ["+676"],
        },
        {
          name: "Trinidad and Tobago",
          alpha2: "TT",
          phoneCountryCode: "+1 868",
          phoneCountryCodes: ["+1 868"],
        },
        {
          name: "Tunisia",
          alpha2: "TN",
          phoneCountryCode: "+216",
          phoneCountryCodes: ["+216"],
        },
        {
          name: "Turkey",
          alpha2: "TR",
          phoneCountryCode: "+90",
          phoneCountryCodes: ["+90"],
        },
        {
          name: "Turkmenistan",
          alpha2: "TM",
          phoneCountryCode: "+993",
          phoneCountryCodes: ["+993"],
        },
        {
          name: "Turks and Caicos Islands",
          alpha2: "TC",
          phoneCountryCode: "+1 649",
          phoneCountryCodes: ["+1 649"],
        },
        {
          name: "Tuvalu",
          alpha2: "TV",
          phoneCountryCode: "+688",
          phoneCountryCodes: ["+688"],
        },
        {
          name: "Uganda",
          alpha2: "UG",
          phoneCountryCode: "+256",
          phoneCountryCodes: ["+256"],
        },
        {
          name: "Ukraine",
          alpha2: "UA",
          phoneCountryCode: "+380",
          phoneCountryCodes: ["+380"],
        },
        {
          name: "United Arab Emirates",
          alpha2: "AE",
          phoneCountryCode: "+971",
          phoneCountryCodes: ["+971"],
        },
        {
          name: "United Kingdom",
          alpha2: "GB",
          phoneCountryCode: "+44",
          phoneCountryCodes: ["+44"],
        },
        {
          name: "United States",
          alpha2: "US",
          phoneCountryCode: "+1",
          phoneCountryCodes: ["+1"],
        },
        {
          name: "United States Minor Outlying Islands",
          alpha2: "UM",
          phoneCountryCode: "+1",
          phoneCountryCodes: ["+1"],
        },
        {
          name: "Uruguay",
          alpha2: "UY",
          phoneCountryCode: "+598",
          phoneCountryCodes: ["+598"],
        },
        {
          name: "Uzbekistan",
          alpha2: "UZ",
          phoneCountryCode: "+998",
          phoneCountryCodes: ["+998"],
        },
        {
          name: "Vanuatu",
          alpha2: "VU",
          phoneCountryCode: "+678",
          phoneCountryCodes: ["+678"],
        },
        {
          name: "Venezuela, Bolivarian Republic of",
          alpha2: "VE",
          phoneCountryCode: "+58",
          phoneCountryCodes: ["+58"],
        },
        {
          name: "Vietnam",
          alpha2: "VN",
          phoneCountryCode: "+84",
          phoneCountryCodes: ["+84"],
          localeForICU: "vi",
          currencyCode: "vnd",
        },
        {
          name: "Virgin Islands, British",
          alpha2: "VG",
          phoneCountryCode: "+1 284",
          phoneCountryCodes: ["+1 284"],
        },
        {
          name: "Virgin Islands, U.S.",
          alpha2: "VI",
          phoneCountryCode: "+1 340",
          phoneCountryCodes: ["+1 340"],
        },
        {
          name: "Wallis and Futuna",
          alpha2: "WF",
          phoneCountryCode: "+681",
          phoneCountryCodes: ["+681"],
        },
        {
          name: "Western Sahara",
          alpha2: "EH",
          phoneCountryCode: "+212",
          phoneCountryCodes: ["+212"],
        },
        {
          name: "Yemen",
          alpha2: "YE",
          phoneCountryCode: "+967",
          phoneCountryCodes: ["+967"],
        },
        {
          name: "Zambia",
          alpha2: "ZM",
          phoneCountryCode: "+260",
          phoneCountryCodes: ["+260"],
        },
        {
          name: "Zimbabwe",
          alpha2: "ZW",
          phoneCountryCode: "+263",
          phoneCountryCodes: ["+263"],
        },
      ];
    },
    891189: function (e, t, n) {
      "use strict";
      var s, i;
      n.r(t),
        n.d(t, {
          ApplicationIntegrationType: function () {
            return s;
          },
        }),
        ((i = s || (s = {}))[(i.GUILD_INSTALL = 0)] = "GUILD_INSTALL"),
        (i[(i.USER_INSTALL = 1)] = "USER_INSTALL");
    },
    938850: function (e, t, n) {
      "use strict";
      var s, i;
      n.r(t),
        n.d(t, {
          AudioSettingsDefaultVolumes: function () {
            return s;
          },
        }),
        ((i = s || (s = {}))[(i.USER = 100)] = "USER"),
        (i[(i.STREAM = 18)] = "STREAM");
    },
    30945: function (e, t, n) {
      "use strict";
      var s;
      n.r(t),
        n.d(t, {
          ConsoleCommands: function () {
            return s;
          },
        }),
        n("222007"),
        ((s || (s = {})).CONNECT_VOICE = "connect_voice");
    },
    363747: function (e, t, n) {
      "use strict";
      var s, i;
      n.r(t),
        n.d(t, {
          ConsoleHandoffType: function () {
            return s;
          },
        }),
        n("222007"),
        ((i = s || (s = {})).TRANSFER_EXISTING_CALL = "TRANSFER_EXISTING_CALL"),
        (i.CREATE_NEW_CALL = "CREATE_NEW_CALL");
    },
    576863: function (e, t, n) {
      "use strict";
      n.r(t), n("102053");
    },
  },
]);
//# sourceMappingURL=23303.52b08b5bd0076798df4b.js.map
