(this.webpackChunkdiscord_app = this.webpackChunkdiscord_app || []).push([
  ["26934"],
  {
    258593: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          emojiTermsImporter: function () {
            return s;
          },
        });
      let s = {
        bg: () => n.el("258593@418:449").then(n.t.bind(n, "731376", 19)),
        cs: () => n.el("258593@463:494").then(n.t.bind(n, "788014", 19)),
        da: () => n.el("258593@508:539").then(n.t.bind(n, "452673", 19)),
        de: () => n.el("258593@553:584").then(n.t.bind(n, "509691", 19)),
        el: () => n.el("258593@598:629").then(n.t.bind(n, "445881", 19)),
        "en-US": () => n.el("258593@648:682").then(n.t.bind(n, "241749", 19)),
        "es-ES": () => n.el("258593@701:735").then(n.t.bind(n, "510998", 19)),
        "es-419": () => n.el("258593@755:790").then(n.t.bind(n, "207236", 19)),
        fi: () => n.el("258593@804:835").then(n.t.bind(n, "114867", 19)),
        fr: () => n.el("258593@849:880").then(n.t.bind(n, "234356", 19)),
        hr: () => n.el("258593@894:925").then(n.t.bind(n, "298012", 19)),
        hu: () => n.el("258593@939:970").then(n.t.bind(n, "847174", 19)),
        it: () => n.el("258593@984:1015").then(n.t.bind(n, "933887", 19)),
        ja: () => n.el("258593@1029:1060").then(n.t.bind(n, "174350", 19)),
        ko: () => n.el("258593@1074:1105").then(n.t.bind(n, "344546", 19)),
        lt: () => n.el("258593@1119:1150").then(n.t.bind(n, "916446", 19)),
        nl: () => n.el("258593@1164:1195").then(n.t.bind(n, "175256", 19)),
        no: () => n.el("258593@1209:1240").then(n.t.bind(n, "66215", 19)),
        pl: () => n.el("258593@1254:1285").then(n.t.bind(n, "79527", 19)),
        "pt-BR": () => n.el("258593@1304:1338").then(n.t.bind(n, "757066", 19)),
        ro: () => n.el("258593@1352:1383").then(n.t.bind(n, "586569", 19)),
        ru: () => n.el("258593@1397:1428").then(n.t.bind(n, "561690", 19)),
        "sv-SE": () => n.el("258593@1447:1481").then(n.t.bind(n, "737608", 19)),
        th: () => n.el("258593@1495:1526").then(n.t.bind(n, "701286", 19)),
        tr: () => n.el("258593@1540:1571").then(n.t.bind(n, "711288", 19)),
        uk: () => n.el("258593@1585:1616").then(n.t.bind(n, "422535", 19)),
        vi: () => n.el("258593@1630:1661").then(n.t.bind(n, "163969", 19)),
        "zh-CN": () => n.el("258593@1680:1714").then(n.t.bind(n, "49484", 19)),
        hi: () => n.el("258593@1830:1861").then(n.t.bind(n, "908431", 19)),
      };
    },
    964191: function (e, t, n) {
      var s = {
        "./1f004.svg": "428103",
        "./1f0cf.svg": "409738",
        "./1f170.svg": "186540",
        "./1f171.svg": "440604",
        "./1f17e.svg": "993875",
        "./1f17f.svg": "867269",
        "./1f18e.svg": "918622",
        "./1f191.svg": "175492",
        "./1f192.svg": "667564",
        "./1f193.svg": "35768",
        "./1f194.svg": "565334",
        "./1f195.svg": "653342",
        "./1f196.svg": "348535",
        "./1f197.svg": "500626",
        "./1f198.svg": "770869",
        "./1f199.svg": "846187",
        "./1f19a.svg": "431125",
        "./1f1e6-1f1e8.svg": "115549",
        "./1f1e6-1f1e9.svg": "537489",
        "./1f1e6-1f1ea.svg": "90562",
        "./1f1e6-1f1eb.svg": "745497",
        "./1f1e6-1f1ec.svg": "335434",
        "./1f1e6-1f1ee.svg": "881037",
        "./1f1e6-1f1f1.svg": "339092",
        "./1f1e6-1f1f2.svg": "224190",
        "./1f1e6-1f1f4.svg": "772959",
        "./1f1e6-1f1f6.svg": "390498",
        "./1f1e6-1f1f7.svg": "335620",
        "./1f1e6-1f1f8.svg": "989189",
        "./1f1e6-1f1f9.svg": "406224",
        "./1f1e6-1f1fa.svg": "292847",
        "./1f1e6-1f1fc.svg": "793098",
        "./1f1e6-1f1fd.svg": "763240",
        "./1f1e6-1f1ff.svg": "926187",
        "./1f1e6.svg": "593814",
        "./1f1e7-1f1e6.svg": "765142",
        "./1f1e7-1f1e7.svg": "476007",
        "./1f1e7-1f1e9.svg": "552983",
        "./1f1e7-1f1ea.svg": "6925",
        "./1f1e7-1f1eb.svg": "431805",
        "./1f1e7-1f1ec.svg": "52492",
        "./1f1e7-1f1ed.svg": "686179",
        "./1f1e7-1f1ee.svg": "519555",
        "./1f1e7-1f1ef.svg": "168089",
        "./1f1e7-1f1f1.svg": "133592",
        "./1f1e7-1f1f2.svg": "776880",
        "./1f1e7-1f1f3.svg": "3526",
        "./1f1e7-1f1f4.svg": "142302",
        "./1f1e7-1f1f6.svg": "610590",
        "./1f1e7-1f1f7.svg": "629126",
        "./1f1e7-1f1f8.svg": "290710",
        "./1f1e7-1f1f9.svg": "591890",
        "./1f1e7-1f1fb.svg": "97720",
        "./1f1e7-1f1fc.svg": "396651",
        "./1f1e7-1f1fe.svg": "110206",
        "./1f1e7-1f1ff.svg": "346435",
        "./1f1e7.svg": "830747",
        "./1f1e8-1f1e6.svg": "560546",
        "./1f1e8-1f1e8.svg": "701648",
        "./1f1e8-1f1e9.svg": "94785",
        "./1f1e8-1f1eb.svg": "162533",
        "./1f1e8-1f1ec.svg": "709010",
        "./1f1e8-1f1ed.svg": "572352",
        "./1f1e8-1f1ee.svg": "619154",
        "./1f1e8-1f1f0.svg": "87289",
        "./1f1e8-1f1f1.svg": "733006",
        "./1f1e8-1f1f2.svg": "387082",
        "./1f1e8-1f1f3.svg": "951559",
        "./1f1e8-1f1f4.svg": "627678",
        "./1f1e8-1f1f5.svg": "680994",
        "./1f1e8-1f1f7.svg": "44125",
        "./1f1e8-1f1fa.svg": "11369",
        "./1f1e8-1f1fb.svg": "40847",
        "./1f1e8-1f1fc.svg": "799365",
        "./1f1e8-1f1fd.svg": "566021",
        "./1f1e8-1f1fe.svg": "63701",
        "./1f1e8-1f1ff.svg": "781317",
        "./1f1e8.svg": "48214",
        "./1f1e9-1f1ea.svg": "903025",
        "./1f1e9-1f1ec.svg": "19839",
        "./1f1e9-1f1ef.svg": "993810",
        "./1f1e9-1f1f0.svg": "119513",
        "./1f1e9-1f1f2.svg": "13940",
        "./1f1e9-1f1f4.svg": "585903",
        "./1f1e9-1f1ff.svg": "393771",
        "./1f1e9.svg": "282807",
        "./1f1ea-1f1e6.svg": "609433",
        "./1f1ea-1f1e8.svg": "681757",
        "./1f1ea-1f1ea.svg": "518870",
        "./1f1ea-1f1ec.svg": "63400",
        "./1f1ea-1f1ed.svg": "110898",
        "./1f1ea-1f1f7.svg": "685618",
        "./1f1ea-1f1f8.svg": "13394",
        "./1f1ea-1f1f9.svg": "745207",
        "./1f1ea-1f1fa.svg": "967019",
        "./1f1ea.svg": "295065",
        "./1f1eb-1f1ee.svg": "520151",
        "./1f1eb-1f1ef.svg": "582740",
        "./1f1eb-1f1f0.svg": "386082",
        "./1f1eb-1f1f2.svg": "144572",
        "./1f1eb-1f1f4.svg": "652664",
        "./1f1eb-1f1f7.svg": "25332",
        "./1f1eb.svg": "10095",
        "./1f1ec-1f1e6.svg": "298595",
        "./1f1ec-1f1e7.svg": "221040",
        "./1f1ec-1f1e9.svg": "578423",
        "./1f1ec-1f1ea.svg": "551440",
        "./1f1ec-1f1eb.svg": "806800",
        "./1f1ec-1f1ec.svg": "230800",
        "./1f1ec-1f1ed.svg": "865428",
        "./1f1ec-1f1ee.svg": "629715",
        "./1f1ec-1f1f1.svg": "695206",
        "./1f1ec-1f1f2.svg": "239348",
        "./1f1ec-1f1f3.svg": "487423",
        "./1f1ec-1f1f5.svg": "484206",
        "./1f1ec-1f1f6.svg": "157628",
        "./1f1ec-1f1f7.svg": "827545",
        "./1f1ec-1f1f8.svg": "695077",
        "./1f1ec-1f1f9.svg": "798222",
        "./1f1ec-1f1fa.svg": "791256",
        "./1f1ec-1f1fc.svg": "56758",
        "./1f1ec-1f1fe.svg": "831297",
        "./1f1ec.svg": "823355",
        "./1f1ed-1f1f0.svg": "383462",
        "./1f1ed-1f1f2.svg": "870027",
        "./1f1ed-1f1f3.svg": "211310",
        "./1f1ed-1f1f7.svg": "731042",
        "./1f1ed-1f1f9.svg": "914826",
        "./1f1ed-1f1fa.svg": "270097",
        "./1f1ed.svg": "798216",
        "./1f1ee-1f1e8.svg": "991300",
        "./1f1ee-1f1e9.svg": "619780",
        "./1f1ee-1f1ea.svg": "959967",
        "./1f1ee-1f1f1.svg": "594443",
        "./1f1ee-1f1f2.svg": "116908",
        "./1f1ee-1f1f3.svg": "351226",
        "./1f1ee-1f1f4.svg": "194439",
        "./1f1ee-1f1f6.svg": "383134",
        "./1f1ee-1f1f7.svg": "855203",
        "./1f1ee-1f1f8.svg": "924244",
        "./1f1ee-1f1f9.svg": "745219",
        "./1f1ee.svg": "901192",
        "./1f1ef-1f1ea.svg": "159351",
        "./1f1ef-1f1f2.svg": "67408",
        "./1f1ef-1f1f4.svg": "895512",
        "./1f1ef-1f1f5.svg": "551922",
        "./1f1ef.svg": "980006",
        "./1f1f0-1f1ea.svg": "944545",
        "./1f1f0-1f1ec.svg": "944162",
        "./1f1f0-1f1ed.svg": "187095",
        "./1f1f0-1f1ee.svg": "890567",
        "./1f1f0-1f1f2.svg": "197056",
        "./1f1f0-1f1f3.svg": "556319",
        "./1f1f0-1f1f5.svg": "156929",
        "./1f1f0-1f1f7.svg": "589502",
        "./1f1f0-1f1fc.svg": "817810",
        "./1f1f0-1f1fe.svg": "189821",
        "./1f1f0-1f1ff.svg": "129221",
        "./1f1f0.svg": "831511",
        "./1f1f1-1f1e6.svg": "997274",
        "./1f1f1-1f1e7.svg": "802094",
        "./1f1f1-1f1e8.svg": "407006",
        "./1f1f1-1f1ee.svg": "374934",
        "./1f1f1-1f1f0.svg": "894765",
        "./1f1f1-1f1f7.svg": "662674",
        "./1f1f1-1f1f8.svg": "364064",
        "./1f1f1-1f1f9.svg": "380353",
        "./1f1f1-1f1fa.svg": "216711",
        "./1f1f1-1f1fb.svg": "788035",
        "./1f1f1-1f1fe.svg": "183348",
        "./1f1f1.svg": "536488",
        "./1f1f2-1f1e6.svg": "108254",
        "./1f1f2-1f1e8.svg": "383499",
        "./1f1f2-1f1e9.svg": "720148",
        "./1f1f2-1f1ea.svg": "763243",
        "./1f1f2-1f1eb.svg": "498315",
        "./1f1f2-1f1ec.svg": "259275",
        "./1f1f2-1f1ed.svg": "481362",
        "./1f1f2-1f1f0.svg": "453537",
        "./1f1f2-1f1f1.svg": "242100",
        "./1f1f2-1f1f2.svg": "372812",
        "./1f1f2-1f1f3.svg": "889591",
        "./1f1f2-1f1f4.svg": "746926",
        "./1f1f2-1f1f5.svg": "863823",
        "./1f1f2-1f1f6.svg": "326893",
        "./1f1f2-1f1f7.svg": "301545",
        "./1f1f2-1f1f8.svg": "867555",
        "./1f1f2-1f1f9.svg": "134654",
        "./1f1f2-1f1fa.svg": "17863",
        "./1f1f2-1f1fb.svg": "659171",
        "./1f1f2-1f1fc.svg": "830739",
        "./1f1f2-1f1fd.svg": "15706",
        "./1f1f2-1f1fe.svg": "621538",
        "./1f1f2-1f1ff.svg": "32519",
        "./1f1f2.svg": "550445",
        "./1f1f3-1f1e6.svg": "553390",
        "./1f1f3-1f1e8.svg": "956433",
        "./1f1f3-1f1ea.svg": "549730",
        "./1f1f3-1f1eb.svg": "624814",
        "./1f1f3-1f1ec.svg": "44492",
        "./1f1f3-1f1ee.svg": "256476",
        "./1f1f3-1f1f1.svg": "734706",
        "./1f1f3-1f1f4.svg": "90687",
        "./1f1f3-1f1f5.svg": "955844",
        "./1f1f3-1f1f7.svg": "378985",
        "./1f1f3-1f1fa.svg": "362741",
        "./1f1f3-1f1ff.svg": "657572",
        "./1f1f3.svg": "944715",
        "./1f1f4-1f1f2.svg": "307611",
        "./1f1f4.svg": "91781",
        "./1f1f5-1f1e6.svg": "440834",
        "./1f1f5-1f1ea.svg": "55264",
        "./1f1f5-1f1eb.svg": "198366",
        "./1f1f5-1f1ec.svg": "633382",
        "./1f1f5-1f1ed.svg": "672098",
        "./1f1f5-1f1f0.svg": "926465",
        "./1f1f5-1f1f1.svg": "956077",
        "./1f1f5-1f1f2.svg": "119286",
        "./1f1f5-1f1f3.svg": "344760",
        "./1f1f5-1f1f7.svg": "679121",
        "./1f1f5-1f1f8.svg": "624183",
        "./1f1f5-1f1f9.svg": "522085",
        "./1f1f5-1f1fc.svg": "72810",
        "./1f1f5-1f1fe.svg": "986680",
        "./1f1f5.svg": "551973",
        "./1f1f6-1f1e6.svg": "992788",
        "./1f1f6.svg": "681317",
        "./1f1f7-1f1ea.svg": "823094",
        "./1f1f7-1f1f4.svg": "846640",
        "./1f1f7-1f1f8.svg": "866920",
        "./1f1f7-1f1fa.svg": "669654",
        "./1f1f7-1f1fc.svg": "430595",
        "./1f1f7.svg": "628122",
        "./1f1f8-1f1e6.svg": "900631",
        "./1f1f8-1f1e7.svg": "462301",
        "./1f1f8-1f1e8.svg": "324110",
        "./1f1f8-1f1e9.svg": "684210",
        "./1f1f8-1f1ea.svg": "898687",
        "./1f1f8-1f1ec.svg": "155425",
        "./1f1f8-1f1ed.svg": "533136",
        "./1f1f8-1f1ee.svg": "396622",
        "./1f1f8-1f1ef.svg": "730575",
        "./1f1f8-1f1f0.svg": "921700",
        "./1f1f8-1f1f1.svg": "101698",
        "./1f1f8-1f1f2.svg": "610184",
        "./1f1f8-1f1f3.svg": "231510",
        "./1f1f8-1f1f4.svg": "929752",
        "./1f1f8-1f1f7.svg": "591048",
        "./1f1f8-1f1f8.svg": "299074",
        "./1f1f8-1f1f9.svg": "938376",
        "./1f1f8-1f1fb.svg": "44598",
        "./1f1f8-1f1fd.svg": "362963",
        "./1f1f8-1f1fe.svg": "601098",
        "./1f1f8-1f1ff.svg": "989100",
        "./1f1f8.svg": "449932",
        "./1f1f9-1f1e6.svg": "895620",
        "./1f1f9-1f1e8.svg": "752377",
        "./1f1f9-1f1e9.svg": "657759",
        "./1f1f9-1f1eb.svg": "152888",
        "./1f1f9-1f1ec.svg": "661398",
        "./1f1f9-1f1ed.svg": "333435",
        "./1f1f9-1f1ef.svg": "983993",
        "./1f1f9-1f1f0.svg": "803917",
        "./1f1f9-1f1f1.svg": "253589",
        "./1f1f9-1f1f2.svg": "540721",
        "./1f1f9-1f1f3.svg": "99788",
        "./1f1f9-1f1f4.svg": "855961",
        "./1f1f9-1f1f7.svg": "207044",
        "./1f1f9-1f1f9.svg": "171492",
        "./1f1f9-1f1fb.svg": "769919",
        "./1f1f9-1f1fc.svg": "703879",
        "./1f1f9-1f1ff.svg": "661903",
        "./1f1f9.svg": "191876",
        "./1f1fa-1f1e6.svg": "948641",
        "./1f1fa-1f1ec.svg": "642957",
        "./1f1fa-1f1f2.svg": "270466",
        "./1f1fa-1f1f3.svg": "639973",
        "./1f1fa-1f1f8.svg": "303609",
        "./1f1fa-1f1fe.svg": "597738",
        "./1f1fa-1f1ff.svg": "142272",
        "./1f1fa.svg": "526818",
        "./1f1fb-1f1e6.svg": "955680",
        "./1f1fb-1f1e8.svg": "829538",
        "./1f1fb-1f1ea.svg": "742395",
        "./1f1fb-1f1ec.svg": "588841",
        "./1f1fb-1f1ee.svg": "5519",
        "./1f1fb-1f1f3.svg": "350451",
        "./1f1fb-1f1fa.svg": "223638",
        "./1f1fb.svg": "968691",
        "./1f1fc-1f1eb.svg": "776027",
        "./1f1fc-1f1f8.svg": "511674",
        "./1f1fc.svg": "131722",
        "./1f1fd-1f1f0.svg": "687119",
        "./1f1fd.svg": "876022",
        "./1f1fe-1f1ea.svg": "616780",
        "./1f1fe-1f1f9.svg": "832634",
        "./1f1fe.svg": "5395",
        "./1f1ff-1f1e6.svg": "16018",
        "./1f1ff-1f1f2.svg": "868617",
        "./1f1ff-1f1fc.svg": "93464",
        "./1f1ff.svg": "220015",
        "./1f201.svg": "347308",
        "./1f202.svg": "728866",
        "./1f21a.svg": "958870",
        "./1f22f.svg": "926771",
        "./1f232.svg": "41816",
        "./1f233.svg": "898852",
        "./1f234.svg": "183132",
        "./1f235.svg": "259885",
        "./1f236.svg": "70605",
        "./1f237.svg": "762261",
        "./1f238.svg": "332965",
        "./1f239.svg": "746098",
        "./1f23a.svg": "999643",
        "./1f250.svg": "472335",
        "./1f251.svg": "392698",
        "./1f300.svg": "336397",
        "./1f301.svg": "573264",
        "./1f302.svg": "875416",
        "./1f303.svg": "778415",
        "./1f304.svg": "220488",
        "./1f305.svg": "65067",
        "./1f306.svg": "5576",
        "./1f307.svg": "260771",
        "./1f308.svg": "720906",
        "./1f309.svg": "292005",
        "./1f30a.svg": "898466",
        "./1f30b.svg": "319563",
        "./1f30c.svg": "848327",
        "./1f30d.svg": "1937",
        "./1f30e.svg": "923485",
        "./1f30f.svg": "637213",
        "./1f310.svg": "439730",
        "./1f311.svg": "373013",
        "./1f312.svg": "953621",
        "./1f313.svg": "503766",
        "./1f314.svg": "203838",
        "./1f315.svg": "300755",
        "./1f316.svg": "434555",
        "./1f317.svg": "36738",
        "./1f318.svg": "613064",
        "./1f319.svg": "413119",
        "./1f31a.svg": "695781",
        "./1f31b.svg": "879641",
        "./1f31c.svg": "716835",
        "./1f31d.svg": "179720",
        "./1f31e.svg": "19208",
        "./1f31f.svg": "673554",
        "./1f320.svg": "51574",
        "./1f321.svg": "4146",
        "./1f324.svg": "371136",
        "./1f325.svg": "381840",
        "./1f326.svg": "62906",
        "./1f327.svg": "478366",
        "./1f328.svg": "236173",
        "./1f329.svg": "568993",
        "./1f32a.svg": "807010",
        "./1f32b.svg": "492215",
        "./1f32c.svg": "91300",
        "./1f32d.svg": "256780",
        "./1f32e.svg": "783834",
        "./1f32f.svg": "140786",
        "./1f330.svg": "241053",
        "./1f331.svg": "362233",
        "./1f332.svg": "719173",
        "./1f333.svg": "476954",
        "./1f334.svg": "34607",
        "./1f335.svg": "944801",
        "./1f336.svg": "50843",
        "./1f337.svg": "124460",
        "./1f338.svg": "25228",
        "./1f339.svg": "872789",
        "./1f33a.svg": "773344",
        "./1f33b.svg": "72672",
        "./1f33c.svg": "95252",
        "./1f33d.svg": "943792",
        "./1f33e.svg": "442343",
        "./1f33f.svg": "567412",
        "./1f340.svg": "710626",
        "./1f341.svg": "235334",
        "./1f342.svg": "178915",
        "./1f343.svg": "431393",
        "./1f344.svg": "395249",
        "./1f345.svg": "632415",
        "./1f346.svg": "876657",
        "./1f347.svg": "136798",
        "./1f348.svg": "767360",
        "./1f349.svg": "268805",
        "./1f34a.svg": "103905",
        "./1f34b.svg": "769866",
        "./1f34c.svg": "609360",
        "./1f34d.svg": "66925",
        "./1f34e.svg": "613764",
        "./1f34f.svg": "351675",
        "./1f350.svg": "176984",
        "./1f351.svg": "350403",
        "./1f352.svg": "130448",
        "./1f353.svg": "165125",
        "./1f354.svg": "653099",
        "./1f355.svg": "576364",
        "./1f356.svg": "669601",
        "./1f357.svg": "684685",
        "./1f358.svg": "928507",
        "./1f359.svg": "397484",
        "./1f35a.svg": "763509",
        "./1f35b.svg": "87018",
        "./1f35c.svg": "551945",
        "./1f35d.svg": "604667",
        "./1f35e.svg": "176725",
        "./1f35f.svg": "26370",
        "./1f360.svg": "870839",
        "./1f361.svg": "878319",
        "./1f362.svg": "191587",
        "./1f363.svg": "2289",
        "./1f364.svg": "319166",
        "./1f365.svg": "319085",
        "./1f366.svg": "624928",
        "./1f367.svg": "966553",
        "./1f368.svg": "187488",
        "./1f369.svg": "158515",
        "./1f36a.svg": "505622",
        "./1f36b.svg": "921427",
        "./1f36c.svg": "599357",
        "./1f36d.svg": "727406",
        "./1f36e.svg": "6436",
        "./1f36f.svg": "980631",
        "./1f370.svg": "92086",
        "./1f371.svg": "922069",
        "./1f372.svg": "496193",
        "./1f373.svg": "280174",
        "./1f374.svg": "223542",
        "./1f375.svg": "158814",
        "./1f376.svg": "57025",
        "./1f377.svg": "170771",
        "./1f378.svg": "911482",
        "./1f379.svg": "523963",
        "./1f37a.svg": "778704",
        "./1f37b.svg": "980499",
        "./1f37c.svg": "617198",
        "./1f37d.svg": "201579",
        "./1f37e.svg": "335198",
        "./1f37f.svg": "297085",
        "./1f380.svg": "950261",
        "./1f381.svg": "209888",
        "./1f382.svg": "123058",
        "./1f383.svg": "49013",
        "./1f384.svg": "315131",
        "./1f385-1f3fb.svg": "843062",
        "./1f385-1f3fc.svg": "692051",
        "./1f385-1f3fd.svg": "684146",
        "./1f385-1f3fe.svg": "646056",
        "./1f385-1f3ff.svg": "161919",
        "./1f385.svg": "760955",
        "./1f386.svg": "970591",
        "./1f387.svg": "107832",
        "./1f388.svg": "302083",
        "./1f389.svg": "24710",
        "./1f38a.svg": "160149",
        "./1f38b.svg": "97857",
        "./1f38c.svg": "632996",
        "./1f38d.svg": "37018",
        "./1f38e.svg": "934327",
        "./1f38f.svg": "883602",
        "./1f390.svg": "559499",
        "./1f391.svg": "897953",
        "./1f392.svg": "202950",
        "./1f393.svg": "759228",
        "./1f396.svg": "914415",
        "./1f397.svg": "393070",
        "./1f399.svg": "739276",
        "./1f39a.svg": "769552",
        "./1f39b.svg": "113524",
        "./1f39e.svg": "291182",
        "./1f39f.svg": "988490",
        "./1f3a0.svg": "171070",
        "./1f3a1.svg": "612934",
        "./1f3a2.svg": "589399",
        "./1f3a3.svg": "30974",
        "./1f3a4.svg": "781393",
        "./1f3a5.svg": "22974",
        "./1f3a6.svg": "469565",
        "./1f3a7.svg": "594718",
        "./1f3a8.svg": "693280",
        "./1f3a9.svg": "862365",
        "./1f3aa.svg": "251184",
        "./1f3ab.svg": "535021",
        "./1f3ac.svg": "259769",
        "./1f3ad.svg": "202691",
        "./1f3ae.svg": "359951",
        "./1f3af.svg": "943144",
        "./1f3b0.svg": "9883",
        "./1f3b1.svg": "861061",
        "./1f3b2.svg": "580920",
        "./1f3b3.svg": "896516",
        "./1f3b4.svg": "479362",
        "./1f3b5.svg": "92534",
        "./1f3b6.svg": "153563",
        "./1f3b7.svg": "419736",
        "./1f3b8.svg": "318262",
        "./1f3b9.svg": "858690",
        "./1f3ba.svg": "783170",
        "./1f3bb.svg": "375388",
        "./1f3bc.svg": "223602",
        "./1f3bd.svg": "234458",
        "./1f3be.svg": "776670",
        "./1f3bf.svg": "880844",
        "./1f3c0.svg": "504478",
        "./1f3c1.svg": "730903",
        "./1f3c2-1f3fb.svg": "854366",
        "./1f3c2-1f3fc.svg": "347554",
        "./1f3c2-1f3fd.svg": "540000",
        "./1f3c2-1f3fe.svg": "272864",
        "./1f3c2-1f3ff.svg": "680996",
        "./1f3c2.svg": "968240",
        "./1f3c3-1f3fb-200d-2640-fe0f.svg": "358383",
        "./1f3c3-1f3fb-200d-2642-fe0f.svg": "946436",
        "./1f3c3-1f3fb.svg": "388833",
        "./1f3c3-1f3fc-200d-2640-fe0f.svg": "971926",
        "./1f3c3-1f3fc-200d-2642-fe0f.svg": "317918",
        "./1f3c3-1f3fc.svg": "721693",
        "./1f3c3-1f3fd-200d-2640-fe0f.svg": "19647",
        "./1f3c3-1f3fd-200d-2642-fe0f.svg": "865200",
        "./1f3c3-1f3fd.svg": "127781",
        "./1f3c3-1f3fe-200d-2640-fe0f.svg": "241392",
        "./1f3c3-1f3fe-200d-2642-fe0f.svg": "94497",
        "./1f3c3-1f3fe.svg": "44379",
        "./1f3c3-1f3ff-200d-2640-fe0f.svg": "557412",
        "./1f3c3-1f3ff-200d-2642-fe0f.svg": "882198",
        "./1f3c3-1f3ff.svg": "156330",
        "./1f3c3-200d-2640-fe0f.svg": "200762",
        "./1f3c3-200d-2642-fe0f.svg": "285157",
        "./1f3c3.svg": "443907",
        "./1f3c4-1f3fb-200d-2640-fe0f.svg": "384820",
        "./1f3c4-1f3fb-200d-2642-fe0f.svg": "470415",
        "./1f3c4-1f3fb.svg": "453021",
        "./1f3c4-1f3fc-200d-2640-fe0f.svg": "46565",
        "./1f3c4-1f3fc-200d-2642-fe0f.svg": "696893",
        "./1f3c4-1f3fc.svg": "542152",
        "./1f3c4-1f3fd-200d-2640-fe0f.svg": "672813",
        "./1f3c4-1f3fd-200d-2642-fe0f.svg": "37661",
        "./1f3c4-1f3fd.svg": "599205",
        "./1f3c4-1f3fe-200d-2640-fe0f.svg": "929591",
        "./1f3c4-1f3fe-200d-2642-fe0f.svg": "435598",
        "./1f3c4-1f3fe.svg": "465177",
        "./1f3c4-1f3ff-200d-2640-fe0f.svg": "470682",
        "./1f3c4-1f3ff-200d-2642-fe0f.svg": "981942",
        "./1f3c4-1f3ff.svg": "785106",
        "./1f3c4-200d-2640-fe0f.svg": "549625",
        "./1f3c4-200d-2642-fe0f.svg": "21575",
        "./1f3c4.svg": "85519",
        "./1f3c5.svg": "865423",
        "./1f3c6.svg": "58180",
        "./1f3c7-1f3fb.svg": "152896",
        "./1f3c7-1f3fc.svg": "8248",
        "./1f3c7-1f3fd.svg": "46496",
        "./1f3c7-1f3fe.svg": "650753",
        "./1f3c7-1f3ff.svg": "753830",
        "./1f3c7.svg": "882440",
        "./1f3c8.svg": "483590",
        "./1f3c9.svg": "502274",
        "./1f3ca-1f3fb-200d-2640-fe0f.svg": "753571",
        "./1f3ca-1f3fb-200d-2642-fe0f.svg": "587470",
        "./1f3ca-1f3fb.svg": "398188",
        "./1f3ca-1f3fc-200d-2640-fe0f.svg": "14270",
        "./1f3ca-1f3fc-200d-2642-fe0f.svg": "762108",
        "./1f3ca-1f3fc.svg": "123572",
        "./1f3ca-1f3fd-200d-2640-fe0f.svg": "367303",
        "./1f3ca-1f3fd-200d-2642-fe0f.svg": "363262",
        "./1f3ca-1f3fd.svg": "293862",
        "./1f3ca-1f3fe-200d-2640-fe0f.svg": "725917",
        "./1f3ca-1f3fe-200d-2642-fe0f.svg": "788872",
        "./1f3ca-1f3fe.svg": "385112",
        "./1f3ca-1f3ff-200d-2640-fe0f.svg": "149843",
        "./1f3ca-1f3ff-200d-2642-fe0f.svg": "451015",
        "./1f3ca-1f3ff.svg": "958909",
        "./1f3ca-200d-2640-fe0f.svg": "888196",
        "./1f3ca-200d-2642-fe0f.svg": "532428",
        "./1f3ca.svg": "998856",
        "./1f3cb-1f3fb-200d-2640-fe0f.svg": "380158",
        "./1f3cb-1f3fb-200d-2642-fe0f.svg": "408451",
        "./1f3cb-1f3fb.svg": "300226",
        "./1f3cb-1f3fc-200d-2640-fe0f.svg": "779623",
        "./1f3cb-1f3fc-200d-2642-fe0f.svg": "204485",
        "./1f3cb-1f3fc.svg": "609767",
        "./1f3cb-1f3fd-200d-2640-fe0f.svg": "580102",
        "./1f3cb-1f3fd-200d-2642-fe0f.svg": "311247",
        "./1f3cb-1f3fd.svg": "802315",
        "./1f3cb-1f3fe-200d-2640-fe0f.svg": "507808",
        "./1f3cb-1f3fe-200d-2642-fe0f.svg": "525917",
        "./1f3cb-1f3fe.svg": "346830",
        "./1f3cb-1f3ff-200d-2640-fe0f.svg": "363102",
        "./1f3cb-1f3ff-200d-2642-fe0f.svg": "468606",
        "./1f3cb-1f3ff.svg": "497381",
        "./1f3cb-fe0f-200d-2640-fe0f.svg": "9264",
        "./1f3cb-fe0f-200d-2642-fe0f.svg": "671286",
        "./1f3cb.svg": "797509",
        "./1f3cc-1f3fb-200d-2640-fe0f.svg": "55814",
        "./1f3cc-1f3fb-200d-2642-fe0f.svg": "710337",
        "./1f3cc-1f3fb.svg": "798853",
        "./1f3cc-1f3fc-200d-2640-fe0f.svg": "156947",
        "./1f3cc-1f3fc-200d-2642-fe0f.svg": "607566",
        "./1f3cc-1f3fc.svg": "379783",
        "./1f3cc-1f3fd-200d-2640-fe0f.svg": "408748",
        "./1f3cc-1f3fd-200d-2642-fe0f.svg": "435874",
        "./1f3cc-1f3fd.svg": "827512",
        "./1f3cc-1f3fe-200d-2640-fe0f.svg": "715054",
        "./1f3cc-1f3fe-200d-2642-fe0f.svg": "79596",
        "./1f3cc-1f3fe.svg": "977447",
        "./1f3cc-1f3ff-200d-2640-fe0f.svg": "254332",
        "./1f3cc-1f3ff-200d-2642-fe0f.svg": "277949",
        "./1f3cc-1f3ff.svg": "411649",
        "./1f3cc-fe0f-200d-2640-fe0f.svg": "373321",
        "./1f3cc-fe0f-200d-2642-fe0f.svg": "820802",
        "./1f3cc.svg": "733135",
        "./1f3cd.svg": "497051",
        "./1f3ce.svg": "764633",
        "./1f3cf.svg": "818064",
        "./1f3d0.svg": "909865",
        "./1f3d1.svg": "424611",
        "./1f3d2.svg": "980804",
        "./1f3d3.svg": "652466",
        "./1f3d4.svg": "434800",
        "./1f3d5.svg": "683456",
        "./1f3d6.svg": "530363",
        "./1f3d7.svg": "388569",
        "./1f3d8.svg": "982022",
        "./1f3d9.svg": "40012",
        "./1f3da.svg": "857455",
        "./1f3db.svg": "987843",
        "./1f3dc.svg": "329039",
        "./1f3dd.svg": "125429",
        "./1f3de.svg": "970453",
        "./1f3df.svg": "115171",
        "./1f3e0.svg": "455547",
        "./1f3e1.svg": "362172",
        "./1f3e2.svg": "288966",
        "./1f3e3.svg": "912444",
        "./1f3e4.svg": "112903",
        "./1f3e5.svg": "387510",
        "./1f3e6.svg": "337779",
        "./1f3e7.svg": "453724",
        "./1f3e8.svg": "953730",
        "./1f3e9.svg": "28451",
        "./1f3ea.svg": "6062",
        "./1f3eb.svg": "308786",
        "./1f3ec.svg": "610877",
        "./1f3ed.svg": "806517",
        "./1f3ee.svg": "163604",
        "./1f3ef.svg": "937220",
        "./1f3f0.svg": "620815",
        "./1f3f3-fe0f-200d-1f308.svg": "903146",
        "./1f3f3-fe0f-200d-26a7-fe0f.svg": "843662",
        "./1f3f3.svg": "67377",
        "./1f3f4-200d-2620-fe0f.svg": "969524",
        "./1f3f4-e0067-e0062-e0065-e006e-e0067-e007f.svg": "178347",
        "./1f3f4-e0067-e0062-e0073-e0063-e0074-e007f.svg": "358988",
        "./1f3f4-e0067-e0062-e0077-e006c-e0073-e007f.svg": "472743",
        "./1f3f4.svg": "934423",
        "./1f3f5.svg": "110002",
        "./1f3f7.svg": "366815",
        "./1f3f8.svg": "509797",
        "./1f3f9.svg": "506559",
        "./1f3fa.svg": "968827",
        "./1f3fb.svg": "841462",
        "./1f3fc.svg": "812663",
        "./1f3fd.svg": "224274",
        "./1f3fe.svg": "117119",
        "./1f3ff.svg": "820717",
        "./1f400.svg": "183340",
        "./1f401.svg": "748598",
        "./1f402.svg": "747585",
        "./1f403.svg": "999430",
        "./1f404.svg": "625609",
        "./1f405.svg": "560270",
        "./1f406.svg": "940139",
        "./1f407.svg": "755800",
        "./1f408-200d-2b1b.svg": "839921",
        "./1f408.svg": "775532",
        "./1f409.svg": "55687",
        "./1f40a.svg": "576843",
        "./1f40b.svg": "926686",
        "./1f40c.svg": "196687",
        "./1f40d.svg": "945718",
        "./1f40e.svg": "553895",
        "./1f40f.svg": "394019",
        "./1f410.svg": "54574",
        "./1f411.svg": "120003",
        "./1f412.svg": "582354",
        "./1f413.svg": "451001",
        "./1f414.svg": "112446",
        "./1f415-200d-1f9ba.svg": "195486",
        "./1f415.svg": "781523",
        "./1f416.svg": "677782",
        "./1f417.svg": "671824",
        "./1f418.svg": "509842",
        "./1f419.svg": "969088",
        "./1f41a.svg": "378844",
        "./1f41b.svg": "606491",
        "./1f41c.svg": "147352",
        "./1f41d.svg": "313500",
        "./1f41e.svg": "59108",
        "./1f41f.svg": "536731",
        "./1f420.svg": "786830",
        "./1f421.svg": "44737",
        "./1f422.svg": "851985",
        "./1f423.svg": "970977",
        "./1f424.svg": "902375",
        "./1f425.svg": "52000",
        "./1f426-200d-2b1b.svg": "627626",
        "./1f426.svg": "352633",
        "./1f427.svg": "833059",
        "./1f428.svg": "335073",
        "./1f429.svg": "954623",
        "./1f42a.svg": "694166",
        "./1f42b.svg": "52667",
        "./1f42c.svg": "929081",
        "./1f42d.svg": "730375",
        "./1f42e.svg": "259010",
        "./1f42f.svg": "478308",
        "./1f430.svg": "64944",
        "./1f431.svg": "117577",
        "./1f432.svg": "515978",
        "./1f433.svg": "752327",
        "./1f434.svg": "81296",
        "./1f435.svg": "657437",
        "./1f436.svg": "295875",
        "./1f437.svg": "829651",
        "./1f438.svg": "870845",
        "./1f439.svg": "27321",
        "./1f43a.svg": "711285",
        "./1f43b-200d-2744-fe0f.svg": "137316",
        "./1f43b.svg": "928010",
        "./1f43c.svg": "570799",
        "./1f43d.svg": "79376",
        "./1f43e.svg": "384217",
        "./1f43f.svg": "769179",
        "./1f440.svg": "400223",
        "./1f441-200d-1f5e8.svg": "279952",
        "./1f441.svg": "753861",
        "./1f442-1f3fb.svg": "653787",
        "./1f442-1f3fc.svg": "849951",
        "./1f442-1f3fd.svg": "103273",
        "./1f442-1f3fe.svg": "811450",
        "./1f442-1f3ff.svg": "997",
        "./1f442.svg": "483292",
        "./1f443-1f3fb.svg": "753248",
        "./1f443-1f3fc.svg": "873272",
        "./1f443-1f3fd.svg": "172688",
        "./1f443-1f3fe.svg": "228711",
        "./1f443-1f3ff.svg": "56480",
        "./1f443.svg": "183468",
        "./1f444.svg": "141890",
        "./1f445.svg": "707711",
        "./1f446-1f3fb.svg": "635413",
        "./1f446-1f3fc.svg": "325392",
        "./1f446-1f3fd.svg": "52834",
        "./1f446-1f3fe.svg": "457230",
        "./1f446-1f3ff.svg": "438230",
        "./1f446.svg": "486414",
        "./1f447-1f3fb.svg": "698361",
        "./1f447-1f3fc.svg": "859023",
        "./1f447-1f3fd.svg": "161813",
        "./1f447-1f3fe.svg": "511256",
        "./1f447-1f3ff.svg": "103887",
        "./1f447.svg": "57947",
        "./1f448-1f3fb.svg": "719420",
        "./1f448-1f3fc.svg": "365164",
        "./1f448-1f3fd.svg": "894548",
        "./1f448-1f3fe.svg": "674393",
        "./1f448-1f3ff.svg": "196746",
        "./1f448.svg": "61088",
        "./1f449-1f3fb.svg": "668992",
        "./1f449-1f3fc.svg": "943141",
        "./1f449-1f3fd.svg": "619244",
        "./1f449-1f3fe.svg": "610691",
        "./1f449-1f3ff.svg": "685071",
        "./1f449.svg": "977677",
        "./1f44a-1f3fb.svg": "62718",
        "./1f44a-1f3fc.svg": "538249",
        "./1f44a-1f3fd.svg": "41555",
        "./1f44a-1f3fe.svg": "678157",
        "./1f44a-1f3ff.svg": "320873",
        "./1f44a.svg": "558581",
        "./1f44b-1f3fb.svg": "610485",
        "./1f44b-1f3fc.svg": "129155",
        "./1f44b-1f3fd.svg": "613331",
        "./1f44b-1f3fe.svg": "956499",
        "./1f44b-1f3ff.svg": "182360",
        "./1f44b.svg": "113823",
        "./1f44c-1f3fb.svg": "117968",
        "./1f44c-1f3fc.svg": "387",
        "./1f44c-1f3fd.svg": "574552",
        "./1f44c-1f3fe.svg": "154157",
        "./1f44c-1f3ff.svg": "573087",
        "./1f44c.svg": "257359",
        "./1f44d-1f3fb.svg": "874099",
        "./1f44d-1f3fc.svg": "73631",
        "./1f44d-1f3fd.svg": "646262",
        "./1f44d-1f3fe.svg": "399374",
        "./1f44d-1f3ff.svg": "307284",
        "./1f44d.svg": "445409",
        "./1f44e-1f3fb.svg": "379175",
        "./1f44e-1f3fc.svg": "745638",
        "./1f44e-1f3fd.svg": "711017",
        "./1f44e-1f3fe.svg": "62949",
        "./1f44e-1f3ff.svg": "66173",
        "./1f44e.svg": "661311",
        "./1f44f-1f3fb.svg": "235386",
        "./1f44f-1f3fc.svg": "955064",
        "./1f44f-1f3fd.svg": "559813",
        "./1f44f-1f3fe.svg": "647884",
        "./1f44f-1f3ff.svg": "388417",
        "./1f44f.svg": "447291",
        "./1f450-1f3fb.svg": "290114",
        "./1f450-1f3fc.svg": "660532",
        "./1f450-1f3fd.svg": "273282",
        "./1f450-1f3fe.svg": "429813",
        "./1f450-1f3ff.svg": "496780",
        "./1f450.svg": "876188",
        "./1f451.svg": "505843",
        "./1f452.svg": "807163",
        "./1f453.svg": "495975",
        "./1f454.svg": "602280",
        "./1f455.svg": "439762",
        "./1f456.svg": "561584",
        "./1f457.svg": "455558",
        "./1f458.svg": "205448",
        "./1f459.svg": "717988",
        "./1f45a.svg": "78130",
        "./1f45b.svg": "489639",
        "./1f45c.svg": "142718",
        "./1f45d.svg": "949753",
        "./1f45e.svg": "595800",
        "./1f45f.svg": "350377",
        "./1f460.svg": "669798",
        "./1f461.svg": "85213",
        "./1f462.svg": "857578",
        "./1f463.svg": "271758",
        "./1f464.svg": "739420",
        "./1f465.svg": "831272",
        "./1f466-1f3fb.svg": "125639",
        "./1f466-1f3fc.svg": "660137",
        "./1f466-1f3fd.svg": "387537",
        "./1f466-1f3fe.svg": "682052",
        "./1f466-1f3ff.svg": "158603",
        "./1f466.svg": "308935",
        "./1f467-1f3fb.svg": "580602",
        "./1f467-1f3fc.svg": "879194",
        "./1f467-1f3fd.svg": "681579",
        "./1f467-1f3fe.svg": "715241",
        "./1f467-1f3ff.svg": "781155",
        "./1f467.svg": "938180",
        "./1f468-1f3fb-200d-1f33e.svg": "540020",
        "./1f468-1f3fb-200d-1f373.svg": "34282",
        "./1f468-1f3fb-200d-1f37c.svg": "565589",
        "./1f468-1f3fb-200d-1f384.svg": "13738",
        "./1f468-1f3fb-200d-1f393.svg": "163665",
        "./1f468-1f3fb-200d-1f3a4.svg": "508312",
        "./1f468-1f3fb-200d-1f3a8.svg": "641165",
        "./1f468-1f3fb-200d-1f3eb.svg": "884552",
        "./1f468-1f3fb-200d-1f3ed.svg": "539199",
        "./1f468-1f3fb-200d-1f4bb.svg": "214370",
        "./1f468-1f3fb-200d-1f4bc.svg": "742595",
        "./1f468-1f3fb-200d-1f527.svg": "906263",
        "./1f468-1f3fb-200d-1f52c.svg": "659694",
        "./1f468-1f3fb-200d-1f680.svg": "586348",
        "./1f468-1f3fb-200d-1f692.svg": "349253",
        "./1f468-1f3fb-200d-1f91d-200d-1f468-1f3fc.svg": "608227",
        "./1f468-1f3fb-200d-1f91d-200d-1f468-1f3fd.svg": "679648",
        "./1f468-1f3fb-200d-1f91d-200d-1f468-1f3fe.svg": "246371",
        "./1f468-1f3fb-200d-1f91d-200d-1f468-1f3ff.svg": "599300",
        "./1f468-1f3fb-200d-1f9af.svg": "586166",
        "./1f468-1f3fb-200d-1f9b0.svg": "101558",
        "./1f468-1f3fb-200d-1f9b1.svg": "865839",
        "./1f468-1f3fb-200d-1f9b2.svg": "895438",
        "./1f468-1f3fb-200d-1f9b3.svg": "797173",
        "./1f468-1f3fb-200d-1f9bc.svg": "492773",
        "./1f468-1f3fb-200d-1f9bd.svg": "705417",
        "./1f468-1f3fb-200d-2695-fe0f.svg": "988911",
        "./1f468-1f3fb-200d-2696-fe0f.svg": "231405",
        "./1f468-1f3fb-200d-2708-fe0f.svg": "311954",
        "./1f468-1f3fb-200d-2764-fe0f-200d-1f468-1f3fb.svg": "131535",
        "./1f468-1f3fb-200d-2764-fe0f-200d-1f468-1f3fc.svg": "600334",
        "./1f468-1f3fb-200d-2764-fe0f-200d-1f468-1f3fd.svg": "819173",
        "./1f468-1f3fb-200d-2764-fe0f-200d-1f468-1f3fe.svg": "286274",
        "./1f468-1f3fb-200d-2764-fe0f-200d-1f468-1f3ff.svg": "659212",
        "./1f468-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb.svg":
          "933801",
        "./1f468-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc.svg":
          "596662",
        "./1f468-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd.svg":
          "274926",
        "./1f468-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe.svg":
          "934540",
        "./1f468-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff.svg":
          "266732",
        "./1f468-1f3fb.svg": "293560",
        "./1f468-1f3fc-200d-1f33e.svg": "167739",
        "./1f468-1f3fc-200d-1f373.svg": "874589",
        "./1f468-1f3fc-200d-1f37c.svg": "34803",
        "./1f468-1f3fc-200d-1f384.svg": "122042",
        "./1f468-1f3fc-200d-1f393.svg": "954917",
        "./1f468-1f3fc-200d-1f3a4.svg": "399889",
        "./1f468-1f3fc-200d-1f3a8.svg": "920117",
        "./1f468-1f3fc-200d-1f3eb.svg": "704706",
        "./1f468-1f3fc-200d-1f3ed.svg": "831022",
        "./1f468-1f3fc-200d-1f4bb.svg": "423805",
        "./1f468-1f3fc-200d-1f4bc.svg": "572122",
        "./1f468-1f3fc-200d-1f527.svg": "930405",
        "./1f468-1f3fc-200d-1f52c.svg": "481026",
        "./1f468-1f3fc-200d-1f680.svg": "165128",
        "./1f468-1f3fc-200d-1f692.svg": "515880",
        "./1f468-1f3fc-200d-1f91d-200d-1f468-1f3fb.svg": "628794",
        "./1f468-1f3fc-200d-1f91d-200d-1f468-1f3fd.svg": "452211",
        "./1f468-1f3fc-200d-1f91d-200d-1f468-1f3fe.svg": "558602",
        "./1f468-1f3fc-200d-1f91d-200d-1f468-1f3ff.svg": "235111",
        "./1f468-1f3fc-200d-1f9af.svg": "938951",
        "./1f468-1f3fc-200d-1f9b0.svg": "6478",
        "./1f468-1f3fc-200d-1f9b1.svg": "524553",
        "./1f468-1f3fc-200d-1f9b2.svg": "225004",
        "./1f468-1f3fc-200d-1f9b3.svg": "132708",
        "./1f468-1f3fc-200d-1f9bc.svg": "971167",
        "./1f468-1f3fc-200d-1f9bd.svg": "317447",
        "./1f468-1f3fc-200d-2695-fe0f.svg": "102677",
        "./1f468-1f3fc-200d-2696-fe0f.svg": "593433",
        "./1f468-1f3fc-200d-2708-fe0f.svg": "582643",
        "./1f468-1f3fc-200d-2764-fe0f-200d-1f468-1f3fb.svg": "55617",
        "./1f468-1f3fc-200d-2764-fe0f-200d-1f468-1f3fc.svg": "535518",
        "./1f468-1f3fc-200d-2764-fe0f-200d-1f468-1f3fd.svg": "563898",
        "./1f468-1f3fc-200d-2764-fe0f-200d-1f468-1f3fe.svg": "831490",
        "./1f468-1f3fc-200d-2764-fe0f-200d-1f468-1f3ff.svg": "786650",
        "./1f468-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb.svg":
          "742965",
        "./1f468-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc.svg":
          "547575",
        "./1f468-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd.svg":
          "573870",
        "./1f468-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe.svg":
          "357509",
        "./1f468-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff.svg":
          "490271",
        "./1f468-1f3fc.svg": "851538",
        "./1f468-1f3fd-200d-1f33e.svg": "316468",
        "./1f468-1f3fd-200d-1f373.svg": "264808",
        "./1f468-1f3fd-200d-1f37c.svg": "94195",
        "./1f468-1f3fd-200d-1f384.svg": "540298",
        "./1f468-1f3fd-200d-1f393.svg": "305915",
        "./1f468-1f3fd-200d-1f3a4.svg": "169774",
        "./1f468-1f3fd-200d-1f3a8.svg": "790883",
        "./1f468-1f3fd-200d-1f3eb.svg": "690206",
        "./1f468-1f3fd-200d-1f3ed.svg": "28862",
        "./1f468-1f3fd-200d-1f4bb.svg": "559981",
        "./1f468-1f3fd-200d-1f4bc.svg": "860204",
        "./1f468-1f3fd-200d-1f527.svg": "534671",
        "./1f468-1f3fd-200d-1f52c.svg": "292922",
        "./1f468-1f3fd-200d-1f680.svg": "617601",
        "./1f468-1f3fd-200d-1f692.svg": "385786",
        "./1f468-1f3fd-200d-1f91d-200d-1f468-1f3fb.svg": "206067",
        "./1f468-1f3fd-200d-1f91d-200d-1f468-1f3fc.svg": "369070",
        "./1f468-1f3fd-200d-1f91d-200d-1f468-1f3fe.svg": "915460",
        "./1f468-1f3fd-200d-1f91d-200d-1f468-1f3ff.svg": "608599",
        "./1f468-1f3fd-200d-1f9af.svg": "28091",
        "./1f468-1f3fd-200d-1f9b0.svg": "675352",
        "./1f468-1f3fd-200d-1f9b1.svg": "953431",
        "./1f468-1f3fd-200d-1f9b2.svg": "133154",
        "./1f468-1f3fd-200d-1f9b3.svg": "551870",
        "./1f468-1f3fd-200d-1f9bc.svg": "776231",
        "./1f468-1f3fd-200d-1f9bd.svg": "178794",
        "./1f468-1f3fd-200d-2695-fe0f.svg": "412729",
        "./1f468-1f3fd-200d-2696-fe0f.svg": "173118",
        "./1f468-1f3fd-200d-2708-fe0f.svg": "45570",
        "./1f468-1f3fd-200d-2764-fe0f-200d-1f468-1f3fb.svg": "52260",
        "./1f468-1f3fd-200d-2764-fe0f-200d-1f468-1f3fc.svg": "516977",
        "./1f468-1f3fd-200d-2764-fe0f-200d-1f468-1f3fd.svg": "397941",
        "./1f468-1f3fd-200d-2764-fe0f-200d-1f468-1f3fe.svg": "647161",
        "./1f468-1f3fd-200d-2764-fe0f-200d-1f468-1f3ff.svg": "613390",
        "./1f468-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb.svg": "88840",
        "./1f468-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc.svg":
          "422456",
        "./1f468-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd.svg":
          "396088",
        "./1f468-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe.svg":
          "751759",
        "./1f468-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff.svg":
          "531535",
        "./1f468-1f3fd.svg": "981953",
        "./1f468-1f3fe-200d-1f33e.svg": "952264",
        "./1f468-1f3fe-200d-1f373.svg": "386243",
        "./1f468-1f3fe-200d-1f37c.svg": "792341",
        "./1f468-1f3fe-200d-1f384.svg": "458309",
        "./1f468-1f3fe-200d-1f393.svg": "49901",
        "./1f468-1f3fe-200d-1f3a4.svg": "899915",
        "./1f468-1f3fe-200d-1f3a8.svg": "472595",
        "./1f468-1f3fe-200d-1f3eb.svg": "501630",
        "./1f468-1f3fe-200d-1f3ed.svg": "69821",
        "./1f468-1f3fe-200d-1f4bb.svg": "369816",
        "./1f468-1f3fe-200d-1f4bc.svg": "497989",
        "./1f468-1f3fe-200d-1f527.svg": "221578",
        "./1f468-1f3fe-200d-1f52c.svg": "727925",
        "./1f468-1f3fe-200d-1f680.svg": "400433",
        "./1f468-1f3fe-200d-1f692.svg": "831248",
        "./1f468-1f3fe-200d-1f91d-200d-1f468-1f3fb.svg": "793659",
        "./1f468-1f3fe-200d-1f91d-200d-1f468-1f3fc.svg": "632682",
        "./1f468-1f3fe-200d-1f91d-200d-1f468-1f3fd.svg": "982816",
        "./1f468-1f3fe-200d-1f91d-200d-1f468-1f3ff.svg": "687687",
        "./1f468-1f3fe-200d-1f9af.svg": "672457",
        "./1f468-1f3fe-200d-1f9b0.svg": "882804",
        "./1f468-1f3fe-200d-1f9b1.svg": "334351",
        "./1f468-1f3fe-200d-1f9b2.svg": "616358",
        "./1f468-1f3fe-200d-1f9b3.svg": "695546",
        "./1f468-1f3fe-200d-1f9bc.svg": "152546",
        "./1f468-1f3fe-200d-1f9bd.svg": "205949",
        "./1f468-1f3fe-200d-2695-fe0f.svg": "33058",
        "./1f468-1f3fe-200d-2696-fe0f.svg": "944397",
        "./1f468-1f3fe-200d-2708-fe0f.svg": "407110",
        "./1f468-1f3fe-200d-2764-fe0f-200d-1f468-1f3fb.svg": "195322",
        "./1f468-1f3fe-200d-2764-fe0f-200d-1f468-1f3fc.svg": "396060",
        "./1f468-1f3fe-200d-2764-fe0f-200d-1f468-1f3fd.svg": "259978",
        "./1f468-1f3fe-200d-2764-fe0f-200d-1f468-1f3fe.svg": "660220",
        "./1f468-1f3fe-200d-2764-fe0f-200d-1f468-1f3ff.svg": "983747",
        "./1f468-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb.svg":
          "509893",
        "./1f468-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc.svg":
          "899084",
        "./1f468-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd.svg": "36424",
        "./1f468-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe.svg": "28682",
        "./1f468-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff.svg":
          "951987",
        "./1f468-1f3fe.svg": "604639",
        "./1f468-1f3ff-200d-1f33e.svg": "458529",
        "./1f468-1f3ff-200d-1f373.svg": "843458",
        "./1f468-1f3ff-200d-1f37c.svg": "126826",
        "./1f468-1f3ff-200d-1f384.svg": "36104",
        "./1f468-1f3ff-200d-1f393.svg": "475134",
        "./1f468-1f3ff-200d-1f3a4.svg": "638176",
        "./1f468-1f3ff-200d-1f3a8.svg": "51732",
        "./1f468-1f3ff-200d-1f3eb.svg": "508574",
        "./1f468-1f3ff-200d-1f3ed.svg": "27726",
        "./1f468-1f3ff-200d-1f4bb.svg": "263043",
        "./1f468-1f3ff-200d-1f4bc.svg": "352673",
        "./1f468-1f3ff-200d-1f527.svg": "821949",
        "./1f468-1f3ff-200d-1f52c.svg": "255546",
        "./1f468-1f3ff-200d-1f680.svg": "648690",
        "./1f468-1f3ff-200d-1f692.svg": "383873",
        "./1f468-1f3ff-200d-1f91d-200d-1f468-1f3fb.svg": "557693",
        "./1f468-1f3ff-200d-1f91d-200d-1f468-1f3fc.svg": "56602",
        "./1f468-1f3ff-200d-1f91d-200d-1f468-1f3fd.svg": "775902",
        "./1f468-1f3ff-200d-1f91d-200d-1f468-1f3fe.svg": "793385",
        "./1f468-1f3ff-200d-1f9af.svg": "602155",
        "./1f468-1f3ff-200d-1f9b0.svg": "295780",
        "./1f468-1f3ff-200d-1f9b1.svg": "180858",
        "./1f468-1f3ff-200d-1f9b2.svg": "478571",
        "./1f468-1f3ff-200d-1f9b3.svg": "684473",
        "./1f468-1f3ff-200d-1f9bc.svg": "557621",
        "./1f468-1f3ff-200d-1f9bd.svg": "53554",
        "./1f468-1f3ff-200d-2695-fe0f.svg": "568356",
        "./1f468-1f3ff-200d-2696-fe0f.svg": "582493",
        "./1f468-1f3ff-200d-2708-fe0f.svg": "174898",
        "./1f468-1f3ff-200d-2764-fe0f-200d-1f468-1f3fb.svg": "334225",
        "./1f468-1f3ff-200d-2764-fe0f-200d-1f468-1f3fc.svg": "693304",
        "./1f468-1f3ff-200d-2764-fe0f-200d-1f468-1f3fd.svg": "994300",
        "./1f468-1f3ff-200d-2764-fe0f-200d-1f468-1f3fe.svg": "522589",
        "./1f468-1f3ff-200d-2764-fe0f-200d-1f468-1f3ff.svg": "541555",
        "./1f468-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb.svg":
          "864326",
        "./1f468-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc.svg": "96653",
        "./1f468-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd.svg":
          "235957",
        "./1f468-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe.svg":
          "849630",
        "./1f468-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff.svg":
          "344823",
        "./1f468-1f3ff.svg": "593368",
        "./1f468-200d-1f33e.svg": "4898",
        "./1f468-200d-1f373.svg": "716030",
        "./1f468-200d-1f37c.svg": "263889",
        "./1f468-200d-1f384.svg": "450015",
        "./1f468-200d-1f393.svg": "825007",
        "./1f468-200d-1f3a4.svg": "62225",
        "./1f468-200d-1f3a8.svg": "366201",
        "./1f468-200d-1f3eb.svg": "604554",
        "./1f468-200d-1f3ed.svg": "478017",
        "./1f468-200d-1f466-200d-1f466.svg": "325317",
        "./1f468-200d-1f466.svg": "354975",
        "./1f468-200d-1f467-200d-1f466.svg": "812609",
        "./1f468-200d-1f467-200d-1f467.svg": "883940",
        "./1f468-200d-1f467.svg": "700276",
        "./1f468-200d-1f468-200d-1f466-200d-1f466.svg": "737543",
        "./1f468-200d-1f468-200d-1f466.svg": "308065",
        "./1f468-200d-1f468-200d-1f467-200d-1f466.svg": "985804",
        "./1f468-200d-1f468-200d-1f467-200d-1f467.svg": "345372",
        "./1f468-200d-1f468-200d-1f467.svg": "981861",
        "./1f468-200d-1f469-200d-1f466-200d-1f466.svg": "245832",
        "./1f468-200d-1f469-200d-1f466.svg": "102217",
        "./1f468-200d-1f469-200d-1f467-200d-1f466.svg": "203812",
        "./1f468-200d-1f469-200d-1f467-200d-1f467.svg": "507296",
        "./1f468-200d-1f469-200d-1f467.svg": "440675",
        "./1f468-200d-1f4bb.svg": "662824",
        "./1f468-200d-1f4bc.svg": "297045",
        "./1f468-200d-1f527.svg": "575919",
        "./1f468-200d-1f52c.svg": "362628",
        "./1f468-200d-1f680.svg": "499803",
        "./1f468-200d-1f692.svg": "335675",
        "./1f468-200d-1f9af.svg": "815437",
        "./1f468-200d-1f9b0.svg": "711572",
        "./1f468-200d-1f9b1.svg": "820227",
        "./1f468-200d-1f9b2.svg": "886057",
        "./1f468-200d-1f9b3.svg": "89022",
        "./1f468-200d-1f9bc.svg": "175205",
        "./1f468-200d-1f9bd.svg": "545922",
        "./1f468-200d-2695-fe0f.svg": "545380",
        "./1f468-200d-2696-fe0f.svg": "96459",
        "./1f468-200d-2708-fe0f.svg": "841668",
        "./1f468-200d-2764-fe0f-200d-1f468.svg": "641875",
        "./1f468-200d-2764-fe0f-200d-1f48b-200d-1f468.svg": "885887",
        "./1f468.svg": "475024",
        "./1f469-1f3fb-200d-1f33e.svg": "437536",
        "./1f469-1f3fb-200d-1f373.svg": "650758",
        "./1f469-1f3fb-200d-1f37c.svg": "904139",
        "./1f469-1f3fb-200d-1f384.svg": "577705",
        "./1f469-1f3fb-200d-1f393.svg": "554906",
        "./1f469-1f3fb-200d-1f3a4.svg": "4784",
        "./1f469-1f3fb-200d-1f3a8.svg": "509605",
        "./1f469-1f3fb-200d-1f3eb.svg": "440542",
        "./1f469-1f3fb-200d-1f3ed.svg": "503437",
        "./1f469-1f3fb-200d-1f4bb.svg": "701229",
        "./1f469-1f3fb-200d-1f4bc.svg": "591985",
        "./1f469-1f3fb-200d-1f527.svg": "756139",
        "./1f469-1f3fb-200d-1f52c.svg": "970828",
        "./1f469-1f3fb-200d-1f680.svg": "385770",
        "./1f469-1f3fb-200d-1f692.svg": "71394",
        "./1f469-1f3fb-200d-1f91d-200d-1f468-1f3fc.svg": "526333",
        "./1f469-1f3fb-200d-1f91d-200d-1f468-1f3fd.svg": "103968",
        "./1f469-1f3fb-200d-1f91d-200d-1f468-1f3fe.svg": "943893",
        "./1f469-1f3fb-200d-1f91d-200d-1f468-1f3ff.svg": "408673",
        "./1f469-1f3fb-200d-1f91d-200d-1f469-1f3fc.svg": "931766",
        "./1f469-1f3fb-200d-1f91d-200d-1f469-1f3fd.svg": "985266",
        "./1f469-1f3fb-200d-1f91d-200d-1f469-1f3fe.svg": "168117",
        "./1f469-1f3fb-200d-1f91d-200d-1f469-1f3ff.svg": "801187",
        "./1f469-1f3fb-200d-1f9af.svg": "797040",
        "./1f469-1f3fb-200d-1f9b0.svg": "837732",
        "./1f469-1f3fb-200d-1f9b1.svg": "497779",
        "./1f469-1f3fb-200d-1f9b2.svg": "899720",
        "./1f469-1f3fb-200d-1f9b3.svg": "645866",
        "./1f469-1f3fb-200d-1f9bc.svg": "599538",
        "./1f469-1f3fb-200d-1f9bd.svg": "999699",
        "./1f469-1f3fb-200d-2695-fe0f.svg": "648769",
        "./1f469-1f3fb-200d-2696-fe0f.svg": "244530",
        "./1f469-1f3fb-200d-2708-fe0f.svg": "767927",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f468-1f3fb.svg": "417550",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f468-1f3fc.svg": "668460",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f468-1f3fd.svg": "860534",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f468-1f3fe.svg": "838645",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f468-1f3ff.svg": "776333",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f469-1f3fb.svg": "408808",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f469-1f3fc.svg": "489194",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f469-1f3fd.svg": "532885",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f469-1f3fe.svg": "335756",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f469-1f3ff.svg": "104001",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb.svg": "28059",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc.svg": "29873",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd.svg":
          "722657",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe.svg":
          "462494",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff.svg":
          "308453",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fb.svg":
          "715706",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fc.svg":
          "426102",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fd.svg":
          "576482",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fe.svg":
          "836248",
        "./1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3ff.svg":
          "655858",
        "./1f469-1f3fb.svg": "826073",
        "./1f469-1f3fc-200d-1f33e.svg": "205072",
        "./1f469-1f3fc-200d-1f373.svg": "188223",
        "./1f469-1f3fc-200d-1f37c.svg": "918978",
        "./1f469-1f3fc-200d-1f384.svg": "174517",
        "./1f469-1f3fc-200d-1f393.svg": "340259",
        "./1f469-1f3fc-200d-1f3a4.svg": "694479",
        "./1f469-1f3fc-200d-1f3a8.svg": "287597",
        "./1f469-1f3fc-200d-1f3eb.svg": "79896",
        "./1f469-1f3fc-200d-1f3ed.svg": "639251",
        "./1f469-1f3fc-200d-1f4bb.svg": "330642",
        "./1f469-1f3fc-200d-1f4bc.svg": "508150",
        "./1f469-1f3fc-200d-1f527.svg": "741",
        "./1f469-1f3fc-200d-1f52c.svg": "694309",
        "./1f469-1f3fc-200d-1f680.svg": "282411",
        "./1f469-1f3fc-200d-1f692.svg": "564393",
        "./1f469-1f3fc-200d-1f91d-200d-1f468-1f3fb.svg": "212338",
        "./1f469-1f3fc-200d-1f91d-200d-1f468-1f3fd.svg": "946516",
        "./1f469-1f3fc-200d-1f91d-200d-1f468-1f3fe.svg": "510618",
        "./1f469-1f3fc-200d-1f91d-200d-1f468-1f3ff.svg": "838204",
        "./1f469-1f3fc-200d-1f91d-200d-1f469-1f3fb.svg": "669814",
        "./1f469-1f3fc-200d-1f91d-200d-1f469-1f3fd.svg": "653421",
        "./1f469-1f3fc-200d-1f91d-200d-1f469-1f3fe.svg": "882033",
        "./1f469-1f3fc-200d-1f91d-200d-1f469-1f3ff.svg": "746435",
        "./1f469-1f3fc-200d-1f9af.svg": "979879",
        "./1f469-1f3fc-200d-1f9b0.svg": "509118",
        "./1f469-1f3fc-200d-1f9b1.svg": "781653",
        "./1f469-1f3fc-200d-1f9b2.svg": "264635",
        "./1f469-1f3fc-200d-1f9b3.svg": "479679",
        "./1f469-1f3fc-200d-1f9bc.svg": "965520",
        "./1f469-1f3fc-200d-1f9bd.svg": "436322",
        "./1f469-1f3fc-200d-2695-fe0f.svg": "289851",
        "./1f469-1f3fc-200d-2696-fe0f.svg": "775635",
        "./1f469-1f3fc-200d-2708-fe0f.svg": "273021",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f468-1f3fb.svg": "734864",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f468-1f3fc.svg": "335678",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f468-1f3fd.svg": "986797",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f468-1f3fe.svg": "468331",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f468-1f3ff.svg": "170356",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f469-1f3fb.svg": "964400",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f469-1f3fc.svg": "81556",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f469-1f3fd.svg": "102172",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f469-1f3fe.svg": "406890",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f469-1f3ff.svg": "117725",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb.svg":
          "452542",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc.svg":
          "149199",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd.svg":
          "503874",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe.svg":
          "823922",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff.svg":
          "447237",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fb.svg":
          "930660",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fc.svg":
          "856119",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fd.svg":
          "870826",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fe.svg":
          "125016",
        "./1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3ff.svg":
          "327818",
        "./1f469-1f3fc.svg": "915052",
        "./1f469-1f3fd-200d-1f33e.svg": "192471",
        "./1f469-1f3fd-200d-1f373.svg": "212655",
        "./1f469-1f3fd-200d-1f37c.svg": "830991",
        "./1f469-1f3fd-200d-1f384.svg": "860475",
        "./1f469-1f3fd-200d-1f393.svg": "562944",
        "./1f469-1f3fd-200d-1f3a4.svg": "994864",
        "./1f469-1f3fd-200d-1f3a8.svg": "405998",
        "./1f469-1f3fd-200d-1f3eb.svg": "355197",
        "./1f469-1f3fd-200d-1f3ed.svg": "494370",
        "./1f469-1f3fd-200d-1f4bb.svg": "151559",
        "./1f469-1f3fd-200d-1f4bc.svg": "643390",
        "./1f469-1f3fd-200d-1f527.svg": "666158",
        "./1f469-1f3fd-200d-1f52c.svg": "122542",
        "./1f469-1f3fd-200d-1f680.svg": "572302",
        "./1f469-1f3fd-200d-1f692.svg": "543989",
        "./1f469-1f3fd-200d-1f91d-200d-1f468-1f3fb.svg": "144256",
        "./1f469-1f3fd-200d-1f91d-200d-1f468-1f3fc.svg": "326492",
        "./1f469-1f3fd-200d-1f91d-200d-1f468-1f3fe.svg": "329431",
        "./1f469-1f3fd-200d-1f91d-200d-1f468-1f3ff.svg": "366440",
        "./1f469-1f3fd-200d-1f91d-200d-1f469-1f3fb.svg": "965050",
        "./1f469-1f3fd-200d-1f91d-200d-1f469-1f3fc.svg": "13449",
        "./1f469-1f3fd-200d-1f91d-200d-1f469-1f3fe.svg": "619789",
        "./1f469-1f3fd-200d-1f91d-200d-1f469-1f3ff.svg": "690288",
        "./1f469-1f3fd-200d-1f9af.svg": "22827",
        "./1f469-1f3fd-200d-1f9b0.svg": "907398",
        "./1f469-1f3fd-200d-1f9b1.svg": "370421",
        "./1f469-1f3fd-200d-1f9b2.svg": "396273",
        "./1f469-1f3fd-200d-1f9b3.svg": "261207",
        "./1f469-1f3fd-200d-1f9bc.svg": "389945",
        "./1f469-1f3fd-200d-1f9bd.svg": "703611",
        "./1f469-1f3fd-200d-2695-fe0f.svg": "833424",
        "./1f469-1f3fd-200d-2696-fe0f.svg": "724511",
        "./1f469-1f3fd-200d-2708-fe0f.svg": "733025",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f468-1f3fb.svg": "209985",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f468-1f3fc.svg": "996280",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f468-1f3fd.svg": "821045",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f468-1f3fe.svg": "320038",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f468-1f3ff.svg": "405471",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f469-1f3fb.svg": "561665",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f469-1f3fc.svg": "681368",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f469-1f3fd.svg": "210407",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f469-1f3fe.svg": "786675",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f469-1f3ff.svg": "495614",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb.svg":
          "261126",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc.svg":
          "825631",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd.svg":
          "637409",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe.svg":
          "876430",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff.svg": "8673",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fb.svg": "13118",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fc.svg":
          "516763",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fd.svg":
          "824562",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fe.svg":
          "919962",
        "./1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3ff.svg":
          "212854",
        "./1f469-1f3fd.svg": "749096",
        "./1f469-1f3fe-200d-1f33e.svg": "62663",
        "./1f469-1f3fe-200d-1f373.svg": "314572",
        "./1f469-1f3fe-200d-1f37c.svg": "272222",
        "./1f469-1f3fe-200d-1f384.svg": "544661",
        "./1f469-1f3fe-200d-1f393.svg": "561955",
        "./1f469-1f3fe-200d-1f3a4.svg": "34139",
        "./1f469-1f3fe-200d-1f3a8.svg": "111936",
        "./1f469-1f3fe-200d-1f3eb.svg": "225666",
        "./1f469-1f3fe-200d-1f3ed.svg": "212660",
        "./1f469-1f3fe-200d-1f4bb.svg": "635849",
        "./1f469-1f3fe-200d-1f4bc.svg": "485642",
        "./1f469-1f3fe-200d-1f527.svg": "8796",
        "./1f469-1f3fe-200d-1f52c.svg": "293175",
        "./1f469-1f3fe-200d-1f680.svg": "715368",
        "./1f469-1f3fe-200d-1f692.svg": "319332",
        "./1f469-1f3fe-200d-1f91d-200d-1f468-1f3fb.svg": "423231",
        "./1f469-1f3fe-200d-1f91d-200d-1f468-1f3fc.svg": "434196",
        "./1f469-1f3fe-200d-1f91d-200d-1f468-1f3fd.svg": "800472",
        "./1f469-1f3fe-200d-1f91d-200d-1f468-1f3ff.svg": "125823",
        "./1f469-1f3fe-200d-1f91d-200d-1f469-1f3fb.svg": "950118",
        "./1f469-1f3fe-200d-1f91d-200d-1f469-1f3fc.svg": "753964",
        "./1f469-1f3fe-200d-1f91d-200d-1f469-1f3fd.svg": "877645",
        "./1f469-1f3fe-200d-1f91d-200d-1f469-1f3ff.svg": "850243",
        "./1f469-1f3fe-200d-1f9af.svg": "440162",
        "./1f469-1f3fe-200d-1f9b0.svg": "351749",
        "./1f469-1f3fe-200d-1f9b1.svg": "108145",
        "./1f469-1f3fe-200d-1f9b2.svg": "394124",
        "./1f469-1f3fe-200d-1f9b3.svg": "791746",
        "./1f469-1f3fe-200d-1f9bc.svg": "248199",
        "./1f469-1f3fe-200d-1f9bd.svg": "867906",
        "./1f469-1f3fe-200d-2695-fe0f.svg": "532973",
        "./1f469-1f3fe-200d-2696-fe0f.svg": "288275",
        "./1f469-1f3fe-200d-2708-fe0f.svg": "20578",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f468-1f3fb.svg": "488614",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f468-1f3fc.svg": "61110",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f468-1f3fd.svg": "330951",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f468-1f3fe.svg": "79840",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f468-1f3ff.svg": "734524",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f469-1f3fb.svg": "439001",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f469-1f3fc.svg": "722809",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f469-1f3fd.svg": "637071",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f469-1f3fe.svg": "352854",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f469-1f3ff.svg": "783644",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb.svg":
          "174529",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc.svg":
          "689595",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd.svg": "86706",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe.svg":
          "646082",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff.svg":
          "868990",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fb.svg":
          "105152",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fc.svg": "40671",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fd.svg":
          "758231",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fe.svg":
          "735973",
        "./1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3ff.svg":
          "318306",
        "./1f469-1f3fe.svg": "318213",
        "./1f469-1f3ff-200d-1f33e.svg": "576425",
        "./1f469-1f3ff-200d-1f373.svg": "844962",
        "./1f469-1f3ff-200d-1f37c.svg": "752351",
        "./1f469-1f3ff-200d-1f384.svg": "248390",
        "./1f469-1f3ff-200d-1f393.svg": "554911",
        "./1f469-1f3ff-200d-1f3a4.svg": "750696",
        "./1f469-1f3ff-200d-1f3a8.svg": "238848",
        "./1f469-1f3ff-200d-1f3eb.svg": "104644",
        "./1f469-1f3ff-200d-1f3ed.svg": "985385",
        "./1f469-1f3ff-200d-1f4bb.svg": "937286",
        "./1f469-1f3ff-200d-1f4bc.svg": "314386",
        "./1f469-1f3ff-200d-1f527.svg": "171000",
        "./1f469-1f3ff-200d-1f52c.svg": "570242",
        "./1f469-1f3ff-200d-1f680.svg": "271172",
        "./1f469-1f3ff-200d-1f692.svg": "834262",
        "./1f469-1f3ff-200d-1f91d-200d-1f468-1f3fb.svg": "208677",
        "./1f469-1f3ff-200d-1f91d-200d-1f468-1f3fc.svg": "775719",
        "./1f469-1f3ff-200d-1f91d-200d-1f468-1f3fd.svg": "985273",
        "./1f469-1f3ff-200d-1f91d-200d-1f468-1f3fe.svg": "211364",
        "./1f469-1f3ff-200d-1f91d-200d-1f469-1f3fb.svg": "915206",
        "./1f469-1f3ff-200d-1f91d-200d-1f469-1f3fc.svg": "849123",
        "./1f469-1f3ff-200d-1f91d-200d-1f469-1f3fd.svg": "275958",
        "./1f469-1f3ff-200d-1f91d-200d-1f469-1f3fe.svg": "556894",
        "./1f469-1f3ff-200d-1f9af.svg": "904789",
        "./1f469-1f3ff-200d-1f9b0.svg": "707501",
        "./1f469-1f3ff-200d-1f9b1.svg": "946093",
        "./1f469-1f3ff-200d-1f9b2.svg": "543114",
        "./1f469-1f3ff-200d-1f9b3.svg": "919644",
        "./1f469-1f3ff-200d-1f9bc.svg": "917495",
        "./1f469-1f3ff-200d-1f9bd.svg": "760407",
        "./1f469-1f3ff-200d-2695-fe0f.svg": "380548",
        "./1f469-1f3ff-200d-2696-fe0f.svg": "890928",
        "./1f469-1f3ff-200d-2708-fe0f.svg": "126836",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f468-1f3fb.svg": "199846",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f468-1f3fc.svg": "429130",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f468-1f3fd.svg": "43977",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f468-1f3fe.svg": "823853",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f468-1f3ff.svg": "444979",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f469-1f3fb.svg": "941253",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f469-1f3fc.svg": "946194",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f469-1f3fd.svg": "390412",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f469-1f3fe.svg": "146989",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f469-1f3ff.svg": "839752",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb.svg":
          "533446",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc.svg":
          "120856",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd.svg":
          "101402",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe.svg":
          "883781",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff.svg":
          "762230",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fb.svg":
          "365285",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fc.svg":
          "895585",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fd.svg":
          "865884",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fe.svg":
          "234834",
        "./1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3ff.svg":
          "296490",
        "./1f469-1f3ff.svg": "470263",
        "./1f469-200d-1f33e.svg": "447797",
        "./1f469-200d-1f373.svg": "825304",
        "./1f469-200d-1f37c.svg": "587341",
        "./1f469-200d-1f384.svg": "927725",
        "./1f469-200d-1f393.svg": "983733",
        "./1f469-200d-1f3a4.svg": "338179",
        "./1f469-200d-1f3a8.svg": "46332",
        "./1f469-200d-1f3eb.svg": "360499",
        "./1f469-200d-1f3ed.svg": "641689",
        "./1f469-200d-1f466-200d-1f466.svg": "595830",
        "./1f469-200d-1f466.svg": "387152",
        "./1f469-200d-1f467-200d-1f466.svg": "496402",
        "./1f469-200d-1f467-200d-1f467.svg": "301529",
        "./1f469-200d-1f467.svg": "831608",
        "./1f469-200d-1f469-200d-1f466-200d-1f466.svg": "162867",
        "./1f469-200d-1f469-200d-1f466.svg": "769150",
        "./1f469-200d-1f469-200d-1f467-200d-1f466.svg": "213895",
        "./1f469-200d-1f469-200d-1f467-200d-1f467.svg": "805843",
        "./1f469-200d-1f469-200d-1f467.svg": "658383",
        "./1f469-200d-1f4bb.svg": "890285",
        "./1f469-200d-1f4bc.svg": "630171",
        "./1f469-200d-1f527.svg": "325830",
        "./1f469-200d-1f52c.svg": "154059",
        "./1f469-200d-1f680.svg": "63361",
        "./1f469-200d-1f692.svg": "257031",
        "./1f469-200d-1f9af.svg": "124128",
        "./1f469-200d-1f9b0.svg": "389938",
        "./1f469-200d-1f9b1.svg": "158193",
        "./1f469-200d-1f9b2.svg": "718080",
        "./1f469-200d-1f9b3.svg": "438343",
        "./1f469-200d-1f9bc.svg": "265143",
        "./1f469-200d-1f9bd.svg": "420643",
        "./1f469-200d-2695-fe0f.svg": "463300",
        "./1f469-200d-2696-fe0f.svg": "405221",
        "./1f469-200d-2708-fe0f.svg": "128640",
        "./1f469-200d-2764-fe0f-200d-1f468.svg": "841555",
        "./1f469-200d-2764-fe0f-200d-1f469.svg": "385155",
        "./1f469-200d-2764-fe0f-200d-1f48b-200d-1f468.svg": "112948",
        "./1f469-200d-2764-fe0f-200d-1f48b-200d-1f469.svg": "59111",
        "./1f469.svg": "617530",
        "./1f46a.svg": "638658",
        "./1f46b-1f3fb.svg": "25675",
        "./1f46b-1f3fc.svg": "489074",
        "./1f46b-1f3fd.svg": "224929",
        "./1f46b-1f3fe.svg": "909611",
        "./1f46b-1f3ff.svg": "587643",
        "./1f46b.svg": "948765",
        "./1f46c-1f3fb.svg": "105725",
        "./1f46c-1f3fc.svg": "415428",
        "./1f46c-1f3fd.svg": "242783",
        "./1f46c-1f3fe.svg": "22597",
        "./1f46c-1f3ff.svg": "515292",
        "./1f46c.svg": "992177",
        "./1f46d-1f3fb.svg": "615502",
        "./1f46d-1f3fc.svg": "369118",
        "./1f46d-1f3fd.svg": "374086",
        "./1f46d-1f3fe.svg": "16761",
        "./1f46d-1f3ff.svg": "859934",
        "./1f46d.svg": "487387",
        "./1f46e-1f3fb-200d-2640-fe0f.svg": "209502",
        "./1f46e-1f3fb-200d-2642-fe0f.svg": "959020",
        "./1f46e-1f3fb.svg": "156606",
        "./1f46e-1f3fc-200d-2640-fe0f.svg": "530420",
        "./1f46e-1f3fc-200d-2642-fe0f.svg": "102839",
        "./1f46e-1f3fc.svg": "422851",
        "./1f46e-1f3fd-200d-2640-fe0f.svg": "536632",
        "./1f46e-1f3fd-200d-2642-fe0f.svg": "756442",
        "./1f46e-1f3fd.svg": "401475",
        "./1f46e-1f3fe-200d-2640-fe0f.svg": "444470",
        "./1f46e-1f3fe-200d-2642-fe0f.svg": "126584",
        "./1f46e-1f3fe.svg": "426406",
        "./1f46e-1f3ff-200d-2640-fe0f.svg": "608239",
        "./1f46e-1f3ff-200d-2642-fe0f.svg": "560026",
        "./1f46e-1f3ff.svg": "671154",
        "./1f46e-200d-2640-fe0f.svg": "350122",
        "./1f46e-200d-2642-fe0f.svg": "37683",
        "./1f46e.svg": "556989",
        "./1f46f-200d-2640-fe0f.svg": "733633",
        "./1f46f-200d-2642-fe0f.svg": "755286",
        "./1f46f.svg": "156314",
        "./1f470-1f3fb-200d-2640-fe0f.svg": "444416",
        "./1f470-1f3fb-200d-2642-fe0f.svg": "471825",
        "./1f470-1f3fb.svg": "651431",
        "./1f470-1f3fc-200d-2640-fe0f.svg": "396843",
        "./1f470-1f3fc-200d-2642-fe0f.svg": "169786",
        "./1f470-1f3fc.svg": "141445",
        "./1f470-1f3fd-200d-2640-fe0f.svg": "690034",
        "./1f470-1f3fd-200d-2642-fe0f.svg": "891971",
        "./1f470-1f3fd.svg": "556868",
        "./1f470-1f3fe-200d-2640-fe0f.svg": "598221",
        "./1f470-1f3fe-200d-2642-fe0f.svg": "21022",
        "./1f470-1f3fe.svg": "540534",
        "./1f470-1f3ff-200d-2640-fe0f.svg": "949360",
        "./1f470-1f3ff-200d-2642-fe0f.svg": "416637",
        "./1f470-1f3ff.svg": "885573",
        "./1f470-200d-2640-fe0f.svg": "494051",
        "./1f470-200d-2642-fe0f.svg": "458382",
        "./1f470.svg": "136618",
        "./1f471-1f3fb-200d-2640-fe0f.svg": "15529",
        "./1f471-1f3fb-200d-2642-fe0f.svg": "678019",
        "./1f471-1f3fb.svg": "662573",
        "./1f471-1f3fc-200d-2640-fe0f.svg": "593210",
        "./1f471-1f3fc-200d-2642-fe0f.svg": "565709",
        "./1f471-1f3fc.svg": "58827",
        "./1f471-1f3fd-200d-2640-fe0f.svg": "376375",
        "./1f471-1f3fd-200d-2642-fe0f.svg": "697186",
        "./1f471-1f3fd.svg": "89650",
        "./1f471-1f3fe-200d-2640-fe0f.svg": "340925",
        "./1f471-1f3fe-200d-2642-fe0f.svg": "907195",
        "./1f471-1f3fe.svg": "92538",
        "./1f471-1f3ff-200d-2640-fe0f.svg": "501516",
        "./1f471-1f3ff-200d-2642-fe0f.svg": "876478",
        "./1f471-1f3ff.svg": "222289",
        "./1f471-200d-2640-fe0f.svg": "35718",
        "./1f471-200d-2642-fe0f.svg": "568872",
        "./1f471.svg": "15261",
        "./1f472-1f3fb.svg": "361309",
        "./1f472-1f3fc.svg": "751442",
        "./1f472-1f3fd.svg": "694009",
        "./1f472-1f3fe.svg": "390596",
        "./1f472-1f3ff.svg": "720592",
        "./1f472.svg": "970596",
        "./1f473-1f3fb-200d-2640-fe0f.svg": "500164",
        "./1f473-1f3fb-200d-2642-fe0f.svg": "179719",
        "./1f473-1f3fb.svg": "484753",
        "./1f473-1f3fc-200d-2640-fe0f.svg": "537802",
        "./1f473-1f3fc-200d-2642-fe0f.svg": "590753",
        "./1f473-1f3fc.svg": "271169",
        "./1f473-1f3fd-200d-2640-fe0f.svg": "869564",
        "./1f473-1f3fd-200d-2642-fe0f.svg": "425637",
        "./1f473-1f3fd.svg": "129554",
        "./1f473-1f3fe-200d-2640-fe0f.svg": "395000",
        "./1f473-1f3fe-200d-2642-fe0f.svg": "569455",
        "./1f473-1f3fe.svg": "566357",
        "./1f473-1f3ff-200d-2640-fe0f.svg": "765508",
        "./1f473-1f3ff-200d-2642-fe0f.svg": "607121",
        "./1f473-1f3ff.svg": "78778",
        "./1f473-200d-2640-fe0f.svg": "729313",
        "./1f473-200d-2642-fe0f.svg": "392154",
        "./1f473.svg": "779841",
        "./1f474-1f3fb.svg": "609941",
        "./1f474-1f3fc.svg": "652295",
        "./1f474-1f3fd.svg": "617700",
        "./1f474-1f3fe.svg": "226566",
        "./1f474-1f3ff.svg": "631242",
        "./1f474.svg": "525225",
        "./1f475-1f3fb.svg": "252845",
        "./1f475-1f3fc.svg": "259983",
        "./1f475-1f3fd.svg": "64144",
        "./1f475-1f3fe.svg": "420230",
        "./1f475-1f3ff.svg": "29443",
        "./1f475.svg": "761074",
        "./1f476-1f3fb.svg": "838124",
        "./1f476-1f3fc.svg": "173352",
        "./1f476-1f3fd.svg": "245431",
        "./1f476-1f3fe.svg": "159548",
        "./1f476-1f3ff.svg": "431784",
        "./1f476.svg": "140032",
        "./1f477-1f3fb-200d-2640-fe0f.svg": "735593",
        "./1f477-1f3fb-200d-2642-fe0f.svg": "839815",
        "./1f477-1f3fb.svg": "451042",
        "./1f477-1f3fc-200d-2640-fe0f.svg": "914671",
        "./1f477-1f3fc-200d-2642-fe0f.svg": "338212",
        "./1f477-1f3fc.svg": "265251",
        "./1f477-1f3fd-200d-2640-fe0f.svg": "867077",
        "./1f477-1f3fd-200d-2642-fe0f.svg": "214518",
        "./1f477-1f3fd.svg": "617408",
        "./1f477-1f3fe-200d-2640-fe0f.svg": "391738",
        "./1f477-1f3fe-200d-2642-fe0f.svg": "865321",
        "./1f477-1f3fe.svg": "834574",
        "./1f477-1f3ff-200d-2640-fe0f.svg": "839629",
        "./1f477-1f3ff-200d-2642-fe0f.svg": "540287",
        "./1f477-1f3ff.svg": "670819",
        "./1f477-200d-2640-fe0f.svg": "710571",
        "./1f477-200d-2642-fe0f.svg": "787211",
        "./1f477.svg": "322534",
        "./1f478-1f3fb.svg": "363134",
        "./1f478-1f3fc.svg": "935449",
        "./1f478-1f3fd.svg": "915804",
        "./1f478-1f3fe.svg": "295912",
        "./1f478-1f3ff.svg": "118001",
        "./1f478.svg": "471218",
        "./1f479.svg": "619585",
        "./1f47a.svg": "770775",
        "./1f47b.svg": "204234",
        "./1f47c-1f3fb.svg": "684098",
        "./1f47c-1f3fc.svg": "518256",
        "./1f47c-1f3fd.svg": "890296",
        "./1f47c-1f3fe.svg": "696037",
        "./1f47c-1f3ff.svg": "405928",
        "./1f47c.svg": "168962",
        "./1f47d.svg": "196840",
        "./1f47e.svg": "830120",
        "./1f47f.svg": "840473",
        "./1f480.svg": "903888",
        "./1f481-1f3fb-200d-2640-fe0f.svg": "232355",
        "./1f481-1f3fb-200d-2642-fe0f.svg": "320635",
        "./1f481-1f3fb.svg": "622456",
        "./1f481-1f3fc-200d-2640-fe0f.svg": "155840",
        "./1f481-1f3fc-200d-2642-fe0f.svg": "877130",
        "./1f481-1f3fc.svg": "359124",
        "./1f481-1f3fd-200d-2640-fe0f.svg": "114204",
        "./1f481-1f3fd-200d-2642-fe0f.svg": "257829",
        "./1f481-1f3fd.svg": "683689",
        "./1f481-1f3fe-200d-2640-fe0f.svg": "736546",
        "./1f481-1f3fe-200d-2642-fe0f.svg": "333522",
        "./1f481-1f3fe.svg": "362665",
        "./1f481-1f3ff-200d-2640-fe0f.svg": "509433",
        "./1f481-1f3ff-200d-2642-fe0f.svg": "395669",
        "./1f481-1f3ff.svg": "179264",
        "./1f481-200d-2640-fe0f.svg": "137955",
        "./1f481-200d-2642-fe0f.svg": "104182",
        "./1f481.svg": "37403",
        "./1f482-1f3fb-200d-2640-fe0f.svg": "137376",
        "./1f482-1f3fb-200d-2642-fe0f.svg": "788108",
        "./1f482-1f3fb.svg": "35834",
        "./1f482-1f3fc-200d-2640-fe0f.svg": "808078",
        "./1f482-1f3fc-200d-2642-fe0f.svg": "983327",
        "./1f482-1f3fc.svg": "88606",
        "./1f482-1f3fd-200d-2640-fe0f.svg": "642815",
        "./1f482-1f3fd-200d-2642-fe0f.svg": "34523",
        "./1f482-1f3fd.svg": "258078",
        "./1f482-1f3fe-200d-2640-fe0f.svg": "187082",
        "./1f482-1f3fe-200d-2642-fe0f.svg": "486725",
        "./1f482-1f3fe.svg": "659331",
        "./1f482-1f3ff-200d-2640-fe0f.svg": "872780",
        "./1f482-1f3ff-200d-2642-fe0f.svg": "861322",
        "./1f482-1f3ff.svg": "37255",
        "./1f482-200d-2640-fe0f.svg": "593408",
        "./1f482-200d-2642-fe0f.svg": "834591",
        "./1f482.svg": "419593",
        "./1f483-1f3fb.svg": "78912",
        "./1f483-1f3fc.svg": "368442",
        "./1f483-1f3fd.svg": "707252",
        "./1f483-1f3fe.svg": "434362",
        "./1f483-1f3ff.svg": "410548",
        "./1f483.svg": "178068",
        "./1f484.svg": "288632",
        "./1f485-1f3fb.svg": "598470",
        "./1f485-1f3fc.svg": "739209",
        "./1f485-1f3fd.svg": "946258",
        "./1f485-1f3fe.svg": "501256",
        "./1f485-1f3ff.svg": "161999",
        "./1f485.svg": "299439",
        "./1f486-1f3fb-200d-2640-fe0f.svg": "654534",
        "./1f486-1f3fb-200d-2642-fe0f.svg": "812517",
        "./1f486-1f3fb.svg": "767444",
        "./1f486-1f3fc-200d-2640-fe0f.svg": "955048",
        "./1f486-1f3fc-200d-2642-fe0f.svg": "702263",
        "./1f486-1f3fc.svg": "108250",
        "./1f486-1f3fd-200d-2640-fe0f.svg": "840238",
        "./1f486-1f3fd-200d-2642-fe0f.svg": "537967",
        "./1f486-1f3fd.svg": "668756",
        "./1f486-1f3fe-200d-2640-fe0f.svg": "361691",
        "./1f486-1f3fe-200d-2642-fe0f.svg": "169062",
        "./1f486-1f3fe.svg": "911195",
        "./1f486-1f3ff-200d-2640-fe0f.svg": "271097",
        "./1f486-1f3ff-200d-2642-fe0f.svg": "150976",
        "./1f486-1f3ff.svg": "201356",
        "./1f486-200d-2640-fe0f.svg": "189188",
        "./1f486-200d-2642-fe0f.svg": "114241",
        "./1f486.svg": "335902",
        "./1f487-1f3fb-200d-2640-fe0f.svg": "944635",
        "./1f487-1f3fb-200d-2642-fe0f.svg": "979385",
        "./1f487-1f3fb.svg": "601264",
        "./1f487-1f3fc-200d-2640-fe0f.svg": "148648",
        "./1f487-1f3fc-200d-2642-fe0f.svg": "940393",
        "./1f487-1f3fc.svg": "504469",
        "./1f487-1f3fd-200d-2640-fe0f.svg": "556154",
        "./1f487-1f3fd-200d-2642-fe0f.svg": "150400",
        "./1f487-1f3fd.svg": "219298",
        "./1f487-1f3fe-200d-2640-fe0f.svg": "610997",
        "./1f487-1f3fe-200d-2642-fe0f.svg": "719648",
        "./1f487-1f3fe.svg": "745528",
        "./1f487-1f3ff-200d-2640-fe0f.svg": "373930",
        "./1f487-1f3ff-200d-2642-fe0f.svg": "584425",
        "./1f487-1f3ff.svg": "70586",
        "./1f487-200d-2640-fe0f.svg": "679041",
        "./1f487-200d-2642-fe0f.svg": "120814",
        "./1f487.svg": "374234",
        "./1f488.svg": "415563",
        "./1f489.svg": "253190",
        "./1f48a.svg": "895578",
        "./1f48b.svg": "70641",
        "./1f48c.svg": "324278",
        "./1f48d.svg": "778724",
        "./1f48e.svg": "493365",
        "./1f48f-1f3fb.svg": "881463",
        "./1f48f-1f3fc.svg": "52865",
        "./1f48f-1f3fd.svg": "495883",
        "./1f48f-1f3fe.svg": "877658",
        "./1f48f-1f3ff.svg": "881724",
        "./1f48f.svg": "247206",
        "./1f490.svg": "687058",
        "./1f491-1f3fb.svg": "254609",
        "./1f491-1f3fc.svg": "571927",
        "./1f491-1f3fd.svg": "644448",
        "./1f491-1f3fe.svg": "511055",
        "./1f491-1f3ff.svg": "707278",
        "./1f491.svg": "644633",
        "./1f492.svg": "43129",
        "./1f493.svg": "786355",
        "./1f494.svg": "616488",
        "./1f495.svg": "268035",
        "./1f496.svg": "74547",
        "./1f497.svg": "994134",
        "./1f498.svg": "366955",
        "./1f499.svg": "46263",
        "./1f49a.svg": "814946",
        "./1f49b.svg": "237453",
        "./1f49c.svg": "248360",
        "./1f49d.svg": "112752",
        "./1f49e.svg": "932202",
        "./1f49f.svg": "675956",
        "./1f4a0.svg": "880390",
        "./1f4a1.svg": "89861",
        "./1f4a2.svg": "447214",
        "./1f4a3.svg": "900320",
        "./1f4a4.svg": "940534",
        "./1f4a5.svg": "133847",
        "./1f4a6.svg": "873683",
        "./1f4a7.svg": "373135",
        "./1f4a8.svg": "618913",
        "./1f4a9.svg": "854375",
        "./1f4aa-1f3fb.svg": "163463",
        "./1f4aa-1f3fc.svg": "539949",
        "./1f4aa-1f3fd.svg": "838038",
        "./1f4aa-1f3fe.svg": "906379",
        "./1f4aa-1f3ff.svg": "564386",
        "./1f4aa.svg": "992365",
        "./1f4ab.svg": "683798",
        "./1f4ac.svg": "22759",
        "./1f4ad.svg": "977995",
        "./1f4ae.svg": "590074",
        "./1f4af.svg": "736829",
        "./1f4b0.svg": "788409",
        "./1f4b1.svg": "310333",
        "./1f4b2.svg": "866662",
        "./1f4b3.svg": "150402",
        "./1f4b4.svg": "140681",
        "./1f4b5.svg": "802848",
        "./1f4b6.svg": "319056",
        "./1f4b7.svg": "123544",
        "./1f4b8.svg": "876455",
        "./1f4b9.svg": "996881",
        "./1f4ba.svg": "297495",
        "./1f4bb.svg": "93702",
        "./1f4bc.svg": "926333",
        "./1f4bd.svg": "46770",
        "./1f4be.svg": "746512",
        "./1f4bf.svg": "952870",
        "./1f4c0.svg": "624539",
        "./1f4c1.svg": "774953",
        "./1f4c2.svg": "581153",
        "./1f4c3.svg": "230728",
        "./1f4c4.svg": "589447",
        "./1f4c5.svg": "595076",
        "./1f4c6.svg": "379042",
        "./1f4c7.svg": "134668",
        "./1f4c8.svg": "838381",
        "./1f4c9.svg": "146245",
        "./1f4ca.svg": "231753",
        "./1f4cb.svg": "412492",
        "./1f4cc.svg": "701913",
        "./1f4cd.svg": "12208",
        "./1f4ce.svg": "12908",
        "./1f4cf.svg": "746706",
        "./1f4d0.svg": "500047",
        "./1f4d1.svg": "759157",
        "./1f4d2.svg": "377785",
        "./1f4d3.svg": "770809",
        "./1f4d4.svg": "489608",
        "./1f4d5.svg": "563273",
        "./1f4d6.svg": "468759",
        "./1f4d7.svg": "724703",
        "./1f4d8.svg": "515633",
        "./1f4d9.svg": "568184",
        "./1f4da.svg": "451998",
        "./1f4db.svg": "519777",
        "./1f4dc.svg": "191269",
        "./1f4dd.svg": "959373",
        "./1f4de.svg": "664289",
        "./1f4df.svg": "933653",
        "./1f4e0.svg": "743063",
        "./1f4e1.svg": "257152",
        "./1f4e2.svg": "267025",
        "./1f4e3.svg": "702156",
        "./1f4e4.svg": "855758",
        "./1f4e5.svg": "340776",
        "./1f4e6.svg": "918468",
        "./1f4e7.svg": "734141",
        "./1f4e8.svg": "157744",
        "./1f4e9.svg": "471939",
        "./1f4ea.svg": "316692",
        "./1f4eb.svg": "86049",
        "./1f4ec.svg": "238722",
        "./1f4ed.svg": "619032",
        "./1f4ee.svg": "216614",
        "./1f4ef.svg": "80686",
        "./1f4f0.svg": "212490",
        "./1f4f1.svg": "410215",
        "./1f4f2.svg": "942242",
        "./1f4f3.svg": "79491",
        "./1f4f4.svg": "342590",
        "./1f4f5.svg": "178833",
        "./1f4f6.svg": "273453",
        "./1f4f7.svg": "232618",
        "./1f4f8.svg": "698133",
        "./1f4f9.svg": "155163",
        "./1f4fa.svg": "334273",
        "./1f4fb.svg": "426798",
        "./1f4fc.svg": "837348",
        "./1f4fd.svg": "401568",
        "./1f4ff.svg": "993236",
        "./1f500.svg": "239860",
        "./1f501.svg": "323387",
        "./1f502.svg": "598837",
        "./1f503.svg": "570840",
        "./1f504.svg": "305592",
        "./1f505.svg": "750098",
        "./1f506.svg": "74910",
        "./1f507.svg": "792786",
        "./1f508.svg": "39713",
        "./1f509.svg": "528051",
        "./1f50a.svg": "862586",
        "./1f50b.svg": "598384",
        "./1f50c.svg": "295346",
        "./1f50d.svg": "942589",
        "./1f50e.svg": "806262",
        "./1f50f.svg": "228810",
        "./1f510.svg": "906183",
        "./1f511.svg": "920901",
        "./1f512.svg": "541942",
        "./1f513.svg": "969787",
        "./1f514.svg": "613577",
        "./1f515.svg": "84732",
        "./1f516.svg": "181055",
        "./1f517.svg": "317419",
        "./1f518.svg": "765186",
        "./1f519.svg": "961801",
        "./1f51a.svg": "298034",
        "./1f51b.svg": "151071",
        "./1f51c.svg": "372396",
        "./1f51d.svg": "725577",
        "./1f51e.svg": "764149",
        "./1f51f.svg": "183971",
        "./1f520.svg": "591779",
        "./1f521.svg": "606734",
        "./1f522.svg": "286",
        "./1f523.svg": "258820",
        "./1f524.svg": "489836",
        "./1f525.svg": "627472",
        "./1f526.svg": "685973",
        "./1f527.svg": "818134",
        "./1f528.svg": "198204",
        "./1f529.svg": "345550",
        "./1f52a.svg": "998387",
        "./1f52b.svg": "558373",
        "./1f52c.svg": "497198",
        "./1f52d.svg": "360973",
        "./1f52e.svg": "141483",
        "./1f52f.svg": "179832",
        "./1f530.svg": "669751",
        "./1f531.svg": "196492",
        "./1f532.svg": "403537",
        "./1f533.svg": "680134",
        "./1f534.svg": "702522",
        "./1f535.svg": "496910",
        "./1f536.svg": "667955",
        "./1f537.svg": "361366",
        "./1f538.svg": "182978",
        "./1f539.svg": "365418",
        "./1f53a.svg": "516437",
        "./1f53b.svg": "2229",
        "./1f53c.svg": "317644",
        "./1f53d.svg": "465254",
        "./1f549.svg": "542754",
        "./1f54a.svg": "584227",
        "./1f54b.svg": "669780",
        "./1f54c.svg": "903803",
        "./1f54d.svg": "404398",
        "./1f54e.svg": "571551",
        "./1f550.svg": "395308",
        "./1f551.svg": "479729",
        "./1f552.svg": "50352",
        "./1f553.svg": "597870",
        "./1f554.svg": "38026",
        "./1f555.svg": "281838",
        "./1f556.svg": "869854",
        "./1f557.svg": "853349",
        "./1f558.svg": "703453",
        "./1f559.svg": "296255",
        "./1f55a.svg": "242979",
        "./1f55b.svg": "204794",
        "./1f55c.svg": "656348",
        "./1f55d.svg": "536299",
        "./1f55e.svg": "299601",
        "./1f55f.svg": "981242",
        "./1f560.svg": "659449",
        "./1f561.svg": "134482",
        "./1f562.svg": "757610",
        "./1f563.svg": "15085",
        "./1f564.svg": "27299",
        "./1f565.svg": "740289",
        "./1f566.svg": "780119",
        "./1f567.svg": "212990",
        "./1f56f.svg": "174113",
        "./1f570.svg": "168673",
        "./1f573.svg": "637532",
        "./1f574-1f3fb-200d-2640-fe0f.svg": "989981",
        "./1f574-1f3fb-200d-2642-fe0f.svg": "252836",
        "./1f574-1f3fb.svg": "358782",
        "./1f574-1f3fc-200d-2640-fe0f.svg": "593375",
        "./1f574-1f3fc-200d-2642-fe0f.svg": "784541",
        "./1f574-1f3fc.svg": "8571",
        "./1f574-1f3fd-200d-2640-fe0f.svg": "141929",
        "./1f574-1f3fd-200d-2642-fe0f.svg": "538763",
        "./1f574-1f3fd.svg": "276683",
        "./1f574-1f3fe-200d-2640-fe0f.svg": "545877",
        "./1f574-1f3fe-200d-2642-fe0f.svg": "215968",
        "./1f574-1f3fe.svg": "816658",
        "./1f574-1f3ff-200d-2640-fe0f.svg": "281471",
        "./1f574-1f3ff-200d-2642-fe0f.svg": "318135",
        "./1f574-1f3ff.svg": "754865",
        "./1f574-fe0f-200d-2640-fe0f.svg": "648574",
        "./1f574-fe0f-200d-2642-fe0f.svg": "435117",
        "./1f574.svg": "661799",
        "./1f575-1f3fb-200d-2640-fe0f.svg": "100228",
        "./1f575-1f3fb-200d-2642-fe0f.svg": "147292",
        "./1f575-1f3fb.svg": "212165",
        "./1f575-1f3fc-200d-2640-fe0f.svg": "254127",
        "./1f575-1f3fc-200d-2642-fe0f.svg": "860673",
        "./1f575-1f3fc.svg": "316251",
        "./1f575-1f3fd-200d-2640-fe0f.svg": "432005",
        "./1f575-1f3fd-200d-2642-fe0f.svg": "283552",
        "./1f575-1f3fd.svg": "958305",
        "./1f575-1f3fe-200d-2640-fe0f.svg": "503208",
        "./1f575-1f3fe-200d-2642-fe0f.svg": "435697",
        "./1f575-1f3fe.svg": "356492",
        "./1f575-1f3ff-200d-2640-fe0f.svg": "41970",
        "./1f575-1f3ff-200d-2642-fe0f.svg": "296635",
        "./1f575-1f3ff.svg": "618082",
        "./1f575-fe0f-200d-2640-fe0f.svg": "987756",
        "./1f575-fe0f-200d-2642-fe0f.svg": "949042",
        "./1f575.svg": "258002",
        "./1f576.svg": "267699",
        "./1f577.svg": "18196",
        "./1f578.svg": "188228",
        "./1f579.svg": "297170",
        "./1f57a-1f3fb.svg": "688236",
        "./1f57a-1f3fc.svg": "208772",
        "./1f57a-1f3fd.svg": "792046",
        "./1f57a-1f3fe.svg": "372357",
        "./1f57a-1f3ff.svg": "960279",
        "./1f57a.svg": "189118",
        "./1f587.svg": "686698",
        "./1f58a.svg": "521966",
        "./1f58b.svg": "613049",
        "./1f58c.svg": "1295",
        "./1f58d.svg": "741807",
        "./1f590-1f3fb.svg": "436295",
        "./1f590-1f3fc.svg": "406281",
        "./1f590-1f3fd.svg": "342974",
        "./1f590-1f3fe.svg": "409964",
        "./1f590-1f3ff.svg": "677295",
        "./1f590.svg": "636000",
        "./1f595-1f3fb.svg": "992927",
        "./1f595-1f3fc.svg": "368363",
        "./1f595-1f3fd.svg": "787889",
        "./1f595-1f3fe.svg": "425726",
        "./1f595-1f3ff.svg": "516300",
        "./1f595.svg": "964741",
        "./1f596-1f3fb.svg": "904531",
        "./1f596-1f3fc.svg": "343867",
        "./1f596-1f3fd.svg": "651940",
        "./1f596-1f3fe.svg": "325885",
        "./1f596-1f3ff.svg": "321612",
        "./1f596.svg": "655370",
        "./1f5a4.svg": "249612",
        "./1f5a5.svg": "403896",
        "./1f5a8.svg": "146120",
        "./1f5b1.svg": "439672",
        "./1f5b2.svg": "375779",
        "./1f5bc.svg": "582474",
        "./1f5c2.svg": "194796",
        "./1f5c3.svg": "869155",
        "./1f5c4.svg": "581214",
        "./1f5d1.svg": "889029",
        "./1f5d2.svg": "735018",
        "./1f5d3.svg": "701758",
        "./1f5dc.svg": "729319",
        "./1f5dd.svg": "105742",
        "./1f5de.svg": "558514",
        "./1f5e1.svg": "323014",
        "./1f5e3.svg": "995470",
        "./1f5e8.svg": "806953",
        "./1f5ef.svg": "476154",
        "./1f5f3.svg": "513694",
        "./1f5fa.svg": "723195",
        "./1f5fb.svg": "969138",
        "./1f5fc.svg": "612341",
        "./1f5fd.svg": "403804",
        "./1f5fe.svg": "598919",
        "./1f5ff.svg": "190333",
        "./1f600.svg": "50034",
        "./1f601.svg": "421233",
        "./1f602.svg": "358211",
        "./1f603.svg": "681751",
        "./1f604.svg": "906462",
        "./1f605.svg": "322248",
        "./1f606.svg": "201001",
        "./1f607.svg": "972627",
        "./1f608.svg": "510029",
        "./1f609.svg": "450260",
        "./1f60a.svg": "645615",
        "./1f60b.svg": "567072",
        "./1f60c.svg": "500483",
        "./1f60d.svg": "398925",
        "./1f60e.svg": "942550",
        "./1f60f.svg": "202632",
        "./1f610.svg": "565191",
        "./1f611.svg": "120610",
        "./1f612.svg": "374372",
        "./1f613.svg": "170907",
        "./1f614.svg": "218903",
        "./1f615.svg": "769270",
        "./1f616.svg": "686627",
        "./1f617.svg": "609831",
        "./1f618.svg": "167395",
        "./1f619.svg": "416018",
        "./1f61a.svg": "712658",
        "./1f61b.svg": "671276",
        "./1f61c.svg": "950376",
        "./1f61d.svg": "817186",
        "./1f61e.svg": "264198",
        "./1f61f.svg": "282451",
        "./1f620.svg": "891408",
        "./1f621.svg": "370147",
        "./1f622.svg": "630946",
        "./1f623.svg": "201328",
        "./1f624.svg": "818391",
        "./1f625.svg": "528482",
        "./1f626.svg": "21894",
        "./1f627.svg": "190088",
        "./1f628.svg": "218586",
        "./1f629.svg": "50040",
        "./1f62a.svg": "861933",
        "./1f62b.svg": "645102",
        "./1f62c.svg": "461600",
        "./1f62d.svg": "161618",
        "./1f62e-200d-1f4a8.svg": "48107",
        "./1f62e.svg": "299886",
        "./1f62f.svg": "510275",
        "./1f630.svg": "113180",
        "./1f631.svg": "299417",
        "./1f632.svg": "412691",
        "./1f633.svg": "615209",
        "./1f634.svg": "656844",
        "./1f635-200d-1f4ab.svg": "443905",
        "./1f635.svg": "744846",
        "./1f636-200d-1f32b-fe0f.svg": "749335",
        "./1f636.svg": "849832",
        "./1f637.svg": "337842",
        "./1f638.svg": "213123",
        "./1f639.svg": "853185",
        "./1f63a.svg": "150706",
        "./1f63b.svg": "268004",
        "./1f63c.svg": "364592",
        "./1f63d.svg": "755056",
        "./1f63e.svg": "842732",
        "./1f63f.svg": "667816",
        "./1f640.svg": "316824",
        "./1f641.svg": "540419",
        "./1f642.svg": "973088",
        "./1f643.svg": "397182",
        "./1f644.svg": "76042",
        "./1f645-1f3fb-200d-2640-fe0f.svg": "248059",
        "./1f645-1f3fb-200d-2642-fe0f.svg": "345221",
        "./1f645-1f3fb.svg": "909492",
        "./1f645-1f3fc-200d-2640-fe0f.svg": "870499",
        "./1f645-1f3fc-200d-2642-fe0f.svg": "92286",
        "./1f645-1f3fc.svg": "969664",
        "./1f645-1f3fd-200d-2640-fe0f.svg": "632797",
        "./1f645-1f3fd-200d-2642-fe0f.svg": "925583",
        "./1f645-1f3fd.svg": "290559",
        "./1f645-1f3fe-200d-2640-fe0f.svg": "143270",
        "./1f645-1f3fe-200d-2642-fe0f.svg": "449614",
        "./1f645-1f3fe.svg": "213618",
        "./1f645-1f3ff-200d-2640-fe0f.svg": "617786",
        "./1f645-1f3ff-200d-2642-fe0f.svg": "134858",
        "./1f645-1f3ff.svg": "183120",
        "./1f645-200d-2640-fe0f.svg": "850229",
        "./1f645-200d-2642-fe0f.svg": "382425",
        "./1f645.svg": "465938",
        "./1f646-1f3fb-200d-2640-fe0f.svg": "618883",
        "./1f646-1f3fb-200d-2642-fe0f.svg": "969893",
        "./1f646-1f3fb.svg": "289656",
        "./1f646-1f3fc-200d-2640-fe0f.svg": "456670",
        "./1f646-1f3fc-200d-2642-fe0f.svg": "346497",
        "./1f646-1f3fc.svg": "276884",
        "./1f646-1f3fd-200d-2640-fe0f.svg": "968805",
        "./1f646-1f3fd-200d-2642-fe0f.svg": "934141",
        "./1f646-1f3fd.svg": "105026",
        "./1f646-1f3fe-200d-2640-fe0f.svg": "521937",
        "./1f646-1f3fe-200d-2642-fe0f.svg": "611938",
        "./1f646-1f3fe.svg": "966278",
        "./1f646-1f3ff-200d-2640-fe0f.svg": "328985",
        "./1f646-1f3ff-200d-2642-fe0f.svg": "741759",
        "./1f646-1f3ff.svg": "852415",
        "./1f646-200d-2640-fe0f.svg": "551865",
        "./1f646-200d-2642-fe0f.svg": "459231",
        "./1f646.svg": "220582",
        "./1f647-1f3fb-200d-2640-fe0f.svg": "709974",
        "./1f647-1f3fb-200d-2642-fe0f.svg": "102071",
        "./1f647-1f3fb.svg": "426740",
        "./1f647-1f3fc-200d-2640-fe0f.svg": "311156",
        "./1f647-1f3fc-200d-2642-fe0f.svg": "264607",
        "./1f647-1f3fc.svg": "825546",
        "./1f647-1f3fd-200d-2640-fe0f.svg": "685661",
        "./1f647-1f3fd-200d-2642-fe0f.svg": "2955",
        "./1f647-1f3fd.svg": "588038",
        "./1f647-1f3fe-200d-2640-fe0f.svg": "460537",
        "./1f647-1f3fe-200d-2642-fe0f.svg": "613152",
        "./1f647-1f3fe.svg": "184858",
        "./1f647-1f3ff-200d-2640-fe0f.svg": "694584",
        "./1f647-1f3ff-200d-2642-fe0f.svg": "943553",
        "./1f647-1f3ff.svg": "101914",
        "./1f647-200d-2640-fe0f.svg": "831508",
        "./1f647-200d-2642-fe0f.svg": "571844",
        "./1f647.svg": "218119",
        "./1f648.svg": "336926",
        "./1f649.svg": "922221",
        "./1f64a.svg": "137408",
        "./1f64b-1f3fb-200d-2640-fe0f.svg": "13664",
        "./1f64b-1f3fb-200d-2642-fe0f.svg": "176975",
        "./1f64b-1f3fb.svg": "386543",
        "./1f64b-1f3fc-200d-2640-fe0f.svg": "421418",
        "./1f64b-1f3fc-200d-2642-fe0f.svg": "927133",
        "./1f64b-1f3fc.svg": "451473",
        "./1f64b-1f3fd-200d-2640-fe0f.svg": "920025",
        "./1f64b-1f3fd-200d-2642-fe0f.svg": "894482",
        "./1f64b-1f3fd.svg": "798701",
        "./1f64b-1f3fe-200d-2640-fe0f.svg": "43057",
        "./1f64b-1f3fe-200d-2642-fe0f.svg": "781234",
        "./1f64b-1f3fe.svg": "134141",
        "./1f64b-1f3ff-200d-2640-fe0f.svg": "204844",
        "./1f64b-1f3ff-200d-2642-fe0f.svg": "301690",
        "./1f64b-1f3ff.svg": "407016",
        "./1f64b-200d-2640-fe0f.svg": "925171",
        "./1f64b-200d-2642-fe0f.svg": "272379",
        "./1f64b.svg": "421117",
        "./1f64c-1f3fb.svg": "168065",
        "./1f64c-1f3fc.svg": "55366",
        "./1f64c-1f3fd.svg": "781121",
        "./1f64c-1f3fe.svg": "827478",
        "./1f64c-1f3ff.svg": "52423",
        "./1f64c.svg": "705793",
        "./1f64d-1f3fb-200d-2640-fe0f.svg": "932999",
        "./1f64d-1f3fb-200d-2642-fe0f.svg": "597477",
        "./1f64d-1f3fb.svg": "86000",
        "./1f64d-1f3fc-200d-2640-fe0f.svg": "491180",
        "./1f64d-1f3fc-200d-2642-fe0f.svg": "667959",
        "./1f64d-1f3fc.svg": "983153",
        "./1f64d-1f3fd-200d-2640-fe0f.svg": "272494",
        "./1f64d-1f3fd-200d-2642-fe0f.svg": "728824",
        "./1f64d-1f3fd.svg": "901366",
        "./1f64d-1f3fe-200d-2640-fe0f.svg": "454781",
        "./1f64d-1f3fe-200d-2642-fe0f.svg": "602611",
        "./1f64d-1f3fe.svg": "916764",
        "./1f64d-1f3ff-200d-2640-fe0f.svg": "169190",
        "./1f64d-1f3ff-200d-2642-fe0f.svg": "245761",
        "./1f64d-1f3ff.svg": "296291",
        "./1f64d-200d-2640-fe0f.svg": "237249",
        "./1f64d-200d-2642-fe0f.svg": "510952",
        "./1f64d.svg": "861708",
        "./1f64e-1f3fb-200d-2640-fe0f.svg": "729744",
        "./1f64e-1f3fb-200d-2642-fe0f.svg": "414602",
        "./1f64e-1f3fb.svg": "648881",
        "./1f64e-1f3fc-200d-2640-fe0f.svg": "110606",
        "./1f64e-1f3fc-200d-2642-fe0f.svg": "478127",
        "./1f64e-1f3fc.svg": "388018",
        "./1f64e-1f3fd-200d-2640-fe0f.svg": "407219",
        "./1f64e-1f3fd-200d-2642-fe0f.svg": "251780",
        "./1f64e-1f3fd.svg": "595132",
        "./1f64e-1f3fe-200d-2640-fe0f.svg": "729383",
        "./1f64e-1f3fe-200d-2642-fe0f.svg": "369457",
        "./1f64e-1f3fe.svg": "402294",
        "./1f64e-1f3ff-200d-2640-fe0f.svg": "711423",
        "./1f64e-1f3ff-200d-2642-fe0f.svg": "874193",
        "./1f64e-1f3ff.svg": "170744",
        "./1f64e-200d-2640-fe0f.svg": "414334",
        "./1f64e-200d-2642-fe0f.svg": "218491",
        "./1f64e.svg": "403479",
        "./1f64f-1f3fb.svg": "382168",
        "./1f64f-1f3fc.svg": "544575",
        "./1f64f-1f3fd.svg": "51443",
        "./1f64f-1f3fe.svg": "144488",
        "./1f64f-1f3ff.svg": "21524",
        "./1f64f.svg": "932527",
        "./1f680.svg": "846540",
        "./1f681.svg": "524443",
        "./1f682.svg": "640234",
        "./1f683.svg": "947398",
        "./1f684.svg": "857967",
        "./1f685.svg": "268574",
        "./1f686.svg": "699293",
        "./1f687.svg": "917124",
        "./1f688.svg": "957392",
        "./1f689.svg": "252429",
        "./1f68a.svg": "826072",
        "./1f68b.svg": "963118",
        "./1f68c.svg": "210894",
        "./1f68d.svg": "464619",
        "./1f68e.svg": "749652",
        "./1f68f.svg": "424539",
        "./1f690.svg": "676058",
        "./1f691.svg": "388917",
        "./1f692.svg": "336868",
        "./1f693.svg": "828380",
        "./1f694.svg": "643803",
        "./1f695.svg": "371998",
        "./1f696.svg": "383882",
        "./1f697.svg": "504839",
        "./1f698.svg": "915321",
        "./1f699.svg": "12422",
        "./1f69a.svg": "82001",
        "./1f69b.svg": "373237",
        "./1f69c.svg": "92200",
        "./1f69d.svg": "850029",
        "./1f69e.svg": "203198",
        "./1f69f.svg": "150307",
        "./1f6a0.svg": "106776",
        "./1f6a1.svg": "934051",
        "./1f6a2.svg": "769012",
        "./1f6a3-1f3fb-200d-2640-fe0f.svg": "763216",
        "./1f6a3-1f3fb-200d-2642-fe0f.svg": "198052",
        "./1f6a3-1f3fb.svg": "45853",
        "./1f6a3-1f3fc-200d-2640-fe0f.svg": "130945",
        "./1f6a3-1f3fc-200d-2642-fe0f.svg": "904514",
        "./1f6a3-1f3fc.svg": "887228",
        "./1f6a3-1f3fd-200d-2640-fe0f.svg": "62026",
        "./1f6a3-1f3fd-200d-2642-fe0f.svg": "926548",
        "./1f6a3-1f3fd.svg": "745312",
        "./1f6a3-1f3fe-200d-2640-fe0f.svg": "930359",
        "./1f6a3-1f3fe-200d-2642-fe0f.svg": "977216",
        "./1f6a3-1f3fe.svg": "954597",
        "./1f6a3-1f3ff-200d-2640-fe0f.svg": "369265",
        "./1f6a3-1f3ff-200d-2642-fe0f.svg": "110864",
        "./1f6a3-1f3ff.svg": "703296",
        "./1f6a3-200d-2640-fe0f.svg": "582573",
        "./1f6a3-200d-2642-fe0f.svg": "800244",
        "./1f6a3.svg": "433099",
        "./1f6a4.svg": "965967",
        "./1f6a5.svg": "988545",
        "./1f6a6.svg": "550439",
        "./1f6a7.svg": "897717",
        "./1f6a8.svg": "968771",
        "./1f6a9.svg": "65156",
        "./1f6aa.svg": "240530",
        "./1f6ab.svg": "479939",
        "./1f6ac.svg": "223622",
        "./1f6ad.svg": "738535",
        "./1f6ae.svg": "753680",
        "./1f6af.svg": "788884",
        "./1f6b0.svg": "269032",
        "./1f6b1.svg": "872857",
        "./1f6b2.svg": "950504",
        "./1f6b3.svg": "191248",
        "./1f6b4-1f3fb-200d-2640-fe0f.svg": "209359",
        "./1f6b4-1f3fb-200d-2642-fe0f.svg": "863263",
        "./1f6b4-1f3fb.svg": "384917",
        "./1f6b4-1f3fc-200d-2640-fe0f.svg": "136647",
        "./1f6b4-1f3fc-200d-2642-fe0f.svg": "488254",
        "./1f6b4-1f3fc.svg": "222045",
        "./1f6b4-1f3fd-200d-2640-fe0f.svg": "580373",
        "./1f6b4-1f3fd-200d-2642-fe0f.svg": "607261",
        "./1f6b4-1f3fd.svg": "223998",
        "./1f6b4-1f3fe-200d-2640-fe0f.svg": "438211",
        "./1f6b4-1f3fe-200d-2642-fe0f.svg": "768891",
        "./1f6b4-1f3fe.svg": "794943",
        "./1f6b4-1f3ff-200d-2640-fe0f.svg": "260722",
        "./1f6b4-1f3ff-200d-2642-fe0f.svg": "114091",
        "./1f6b4-1f3ff.svg": "502125",
        "./1f6b4-200d-2640-fe0f.svg": "287017",
        "./1f6b4-200d-2642-fe0f.svg": "982569",
        "./1f6b4.svg": "365769",
        "./1f6b5-1f3fb-200d-2640-fe0f.svg": "710622",
        "./1f6b5-1f3fb-200d-2642-fe0f.svg": "517867",
        "./1f6b5-1f3fb.svg": "845970",
        "./1f6b5-1f3fc-200d-2640-fe0f.svg": "449703",
        "./1f6b5-1f3fc-200d-2642-fe0f.svg": "985731",
        "./1f6b5-1f3fc.svg": "296652",
        "./1f6b5-1f3fd-200d-2640-fe0f.svg": "893710",
        "./1f6b5-1f3fd-200d-2642-fe0f.svg": "682758",
        "./1f6b5-1f3fd.svg": "720733",
        "./1f6b5-1f3fe-200d-2640-fe0f.svg": "768186",
        "./1f6b5-1f3fe-200d-2642-fe0f.svg": "197551",
        "./1f6b5-1f3fe.svg": "878807",
        "./1f6b5-1f3ff-200d-2640-fe0f.svg": "148129",
        "./1f6b5-1f3ff-200d-2642-fe0f.svg": "692201",
        "./1f6b5-1f3ff.svg": "628518",
        "./1f6b5-200d-2640-fe0f.svg": "365114",
        "./1f6b5-200d-2642-fe0f.svg": "228241",
        "./1f6b5.svg": "711386",
        "./1f6b6-1f3fb-200d-2640-fe0f.svg": "442672",
        "./1f6b6-1f3fb-200d-2642-fe0f.svg": "86809",
        "./1f6b6-1f3fb.svg": "790976",
        "./1f6b6-1f3fc-200d-2640-fe0f.svg": "823563",
        "./1f6b6-1f3fc-200d-2642-fe0f.svg": "939396",
        "./1f6b6-1f3fc.svg": "635997",
        "./1f6b6-1f3fd-200d-2640-fe0f.svg": "798079",
        "./1f6b6-1f3fd-200d-2642-fe0f.svg": "116898",
        "./1f6b6-1f3fd.svg": "271404",
        "./1f6b6-1f3fe-200d-2640-fe0f.svg": "997376",
        "./1f6b6-1f3fe-200d-2642-fe0f.svg": "467219",
        "./1f6b6-1f3fe.svg": "811831",
        "./1f6b6-1f3ff-200d-2640-fe0f.svg": "996521",
        "./1f6b6-1f3ff-200d-2642-fe0f.svg": "987397",
        "./1f6b6-1f3ff.svg": "14686",
        "./1f6b6-200d-2640-fe0f.svg": "349518",
        "./1f6b6-200d-2642-fe0f.svg": "967012",
        "./1f6b6.svg": "164229",
        "./1f6b7.svg": "523396",
        "./1f6b8.svg": "560824",
        "./1f6b9.svg": "651783",
        "./1f6ba.svg": "811683",
        "./1f6bb.svg": "504174",
        "./1f6bc.svg": "290066",
        "./1f6bd.svg": "282921",
        "./1f6be.svg": "804440",
        "./1f6bf.svg": "720154",
        "./1f6c0-1f3fb.svg": "946634",
        "./1f6c0-1f3fc.svg": "695720",
        "./1f6c0-1f3fd.svg": "663182",
        "./1f6c0-1f3fe.svg": "228248",
        "./1f6c0-1f3ff.svg": "901495",
        "./1f6c0.svg": "512113",
        "./1f6c1.svg": "848057",
        "./1f6c2.svg": "632322",
        "./1f6c3.svg": "141330",
        "./1f6c4.svg": "755869",
        "./1f6c5.svg": "969982",
        "./1f6cb.svg": "627012",
        "./1f6cc-1f3fb.svg": "725203",
        "./1f6cc-1f3fc.svg": "291926",
        "./1f6cc-1f3fd.svg": "363404",
        "./1f6cc-1f3fe.svg": "547323",
        "./1f6cc-1f3ff.svg": "464418",
        "./1f6cc.svg": "335792",
        "./1f6cd.svg": "805035",
        "./1f6ce.svg": "952736",
        "./1f6cf.svg": "479212",
        "./1f6d0.svg": "530098",
        "./1f6d1.svg": "750887",
        "./1f6d2.svg": "71482",
        "./1f6d5.svg": "182614",
        "./1f6d6.svg": "809558",
        "./1f6d7.svg": "311526",
        "./1f6dc.svg": "78224",
        "./1f6dd.svg": "930140",
        "./1f6de.svg": "830159",
        "./1f6df.svg": "832971",
        "./1f6e0.svg": "524831",
        "./1f6e1.svg": "474174",
        "./1f6e2.svg": "967874",
        "./1f6e3.svg": "687784",
        "./1f6e4.svg": "730034",
        "./1f6e5.svg": "532927",
        "./1f6e9.svg": "199277",
        "./1f6eb.svg": "726224",
        "./1f6ec.svg": "962150",
        "./1f6f0.svg": "631179",
        "./1f6f3.svg": "152201",
        "./1f6f4.svg": "126992",
        "./1f6f5.svg": "99177",
        "./1f6f6.svg": "904449",
        "./1f6f7.svg": "788646",
        "./1f6f8.svg": "949137",
        "./1f6f9.svg": "266043",
        "./1f6fa.svg": "569142",
        "./1f6fb.svg": "201064",
        "./1f6fc.svg": "894681",
        "./1f7e0.svg": "483059",
        "./1f7e1.svg": "355484",
        "./1f7e2.svg": "142708",
        "./1f7e3.svg": "488986",
        "./1f7e4.svg": "949732",
        "./1f7e5.svg": "110148",
        "./1f7e6.svg": "125567",
        "./1f7e7.svg": "128963",
        "./1f7e8.svg": "596046",
        "./1f7e9.svg": "500158",
        "./1f7ea.svg": "593115",
        "./1f7eb.svg": "829260",
        "./1f7f0.svg": "420297",
        "./1f90c-1f3fb.svg": "525633",
        "./1f90c-1f3fc.svg": "718085",
        "./1f90c-1f3fd.svg": "817906",
        "./1f90c-1f3fe.svg": "372015",
        "./1f90c-1f3ff.svg": "36088",
        "./1f90c.svg": "708777",
        "./1f90d.svg": "989517",
        "./1f90e.svg": "957228",
        "./1f90f-1f3fb.svg": "518769",
        "./1f90f-1f3fc.svg": "420172",
        "./1f90f-1f3fd.svg": "100797",
        "./1f90f-1f3fe.svg": "420792",
        "./1f90f-1f3ff.svg": "436193",
        "./1f90f.svg": "111521",
        "./1f910.svg": "225627",
        "./1f911.svg": "281021",
        "./1f912.svg": "510606",
        "./1f913.svg": "805488",
        "./1f914.svg": "242406",
        "./1f915.svg": "783296",
        "./1f916.svg": "127735",
        "./1f917.svg": "787714",
        "./1f918-1f3fb.svg": "970403",
        "./1f918-1f3fc.svg": "558579",
        "./1f918-1f3fd.svg": "970677",
        "./1f918-1f3fe.svg": "151227",
        "./1f918-1f3ff.svg": "973191",
        "./1f918.svg": "308351",
        "./1f919-1f3fb.svg": "661894",
        "./1f919-1f3fc.svg": "255425",
        "./1f919-1f3fd.svg": "822226",
        "./1f919-1f3fe.svg": "773968",
        "./1f919-1f3ff.svg": "603096",
        "./1f919.svg": "346980",
        "./1f91a-1f3fb.svg": "677791",
        "./1f91a-1f3fc.svg": "718412",
        "./1f91a-1f3fd.svg": "252805",
        "./1f91a-1f3fe.svg": "728520",
        "./1f91a-1f3ff.svg": "722729",
        "./1f91a.svg": "615531",
        "./1f91b-1f3fb.svg": "441047",
        "./1f91b-1f3fc.svg": "325573",
        "./1f91b-1f3fd.svg": "342412",
        "./1f91b-1f3fe.svg": "750025",
        "./1f91b-1f3ff.svg": "332488",
        "./1f91b.svg": "546517",
        "./1f91c-1f3fb.svg": "653882",
        "./1f91c-1f3fc.svg": "133320",
        "./1f91c-1f3fd.svg": "244267",
        "./1f91c-1f3fe.svg": "95474",
        "./1f91c-1f3ff.svg": "132421",
        "./1f91c.svg": "779382",
        "./1f91d-1f3fb.svg": "166026",
        "./1f91d-1f3fc.svg": "8939",
        "./1f91d-1f3fd.svg": "671509",
        "./1f91d-1f3fe.svg": "488748",
        "./1f91d-1f3ff.svg": "872245",
        "./1f91d.svg": "185102",
        "./1f91e-1f3fb.svg": "477353",
        "./1f91e-1f3fc.svg": "997790",
        "./1f91e-1f3fd.svg": "352196",
        "./1f91e-1f3fe.svg": "378302",
        "./1f91e-1f3ff.svg": "831483",
        "./1f91e.svg": "888054",
        "./1f91f-1f3fb.svg": "368592",
        "./1f91f-1f3fc.svg": "937005",
        "./1f91f-1f3fd.svg": "973881",
        "./1f91f-1f3fe.svg": "494565",
        "./1f91f-1f3ff.svg": "798875",
        "./1f91f.svg": "371864",
        "./1f920.svg": "797492",
        "./1f921.svg": "167000",
        "./1f922.svg": "191934",
        "./1f923.svg": "558249",
        "./1f924.svg": "343104",
        "./1f925.svg": "478997",
        "./1f926-1f3fb-200d-2640-fe0f.svg": "496432",
        "./1f926-1f3fb-200d-2642-fe0f.svg": "893946",
        "./1f926-1f3fb.svg": "240253",
        "./1f926-1f3fc-200d-2640-fe0f.svg": "243825",
        "./1f926-1f3fc-200d-2642-fe0f.svg": "631657",
        "./1f926-1f3fc.svg": "378914",
        "./1f926-1f3fd-200d-2640-fe0f.svg": "430125",
        "./1f926-1f3fd-200d-2642-fe0f.svg": "776323",
        "./1f926-1f3fd.svg": "212121",
        "./1f926-1f3fe-200d-2640-fe0f.svg": "729421",
        "./1f926-1f3fe-200d-2642-fe0f.svg": "68733",
        "./1f926-1f3fe.svg": "540101",
        "./1f926-1f3ff-200d-2640-fe0f.svg": "769865",
        "./1f926-1f3ff-200d-2642-fe0f.svg": "269310",
        "./1f926-1f3ff.svg": "293935",
        "./1f926-200d-2640-fe0f.svg": "499849",
        "./1f926-200d-2642-fe0f.svg": "5831",
        "./1f926.svg": "221951",
        "./1f927.svg": "286854",
        "./1f928.svg": "552980",
        "./1f929.svg": "527275",
        "./1f92a.svg": "161665",
        "./1f92b.svg": "636931",
        "./1f92c.svg": "90766",
        "./1f92d.svg": "777849",
        "./1f92e.svg": "764661",
        "./1f92f.svg": "647187",
        "./1f930-1f3fb.svg": "711489",
        "./1f930-1f3fc.svg": "650102",
        "./1f930-1f3fd.svg": "124182",
        "./1f930-1f3fe.svg": "52485",
        "./1f930-1f3ff.svg": "522642",
        "./1f930.svg": "41294",
        "./1f931-1f3fb.svg": "387077",
        "./1f931-1f3fc.svg": "57091",
        "./1f931-1f3fd.svg": "849117",
        "./1f931-1f3fe.svg": "306975",
        "./1f931-1f3ff.svg": "142525",
        "./1f931.svg": "685579",
        "./1f932-1f3fb.svg": "805636",
        "./1f932-1f3fc.svg": "841964",
        "./1f932-1f3fd.svg": "741781",
        "./1f932-1f3fe.svg": "457392",
        "./1f932-1f3ff.svg": "396124",
        "./1f932.svg": "129962",
        "./1f933-1f3fb.svg": "191600",
        "./1f933-1f3fc.svg": "344872",
        "./1f933-1f3fd.svg": "40468",
        "./1f933-1f3fe.svg": "732312",
        "./1f933-1f3ff.svg": "984130",
        "./1f933.svg": "458629",
        "./1f934-1f3fb.svg": "520979",
        "./1f934-1f3fc.svg": "112670",
        "./1f934-1f3fd.svg": "179193",
        "./1f934-1f3fe.svg": "43834",
        "./1f934-1f3ff.svg": "581091",
        "./1f934.svg": "219049",
        "./1f935-1f3fb-200d-2640-fe0f.svg": "497013",
        "./1f935-1f3fb-200d-2642-fe0f.svg": "111327",
        "./1f935-1f3fb.svg": "628687",
        "./1f935-1f3fc-200d-2640-fe0f.svg": "550552",
        "./1f935-1f3fc-200d-2642-fe0f.svg": "625464",
        "./1f935-1f3fc.svg": "582866",
        "./1f935-1f3fd-200d-2640-fe0f.svg": "897283",
        "./1f935-1f3fd-200d-2642-fe0f.svg": "276001",
        "./1f935-1f3fd.svg": "901591",
        "./1f935-1f3fe-200d-2640-fe0f.svg": "496757",
        "./1f935-1f3fe-200d-2642-fe0f.svg": "842225",
        "./1f935-1f3fe.svg": "931548",
        "./1f935-1f3ff-200d-2640-fe0f.svg": "908268",
        "./1f935-1f3ff-200d-2642-fe0f.svg": "567562",
        "./1f935-1f3ff.svg": "699662",
        "./1f935-200d-2640-fe0f.svg": "852447",
        "./1f935-200d-2642-fe0f.svg": "590472",
        "./1f935.svg": "711218",
        "./1f936-1f3fb.svg": "628129",
        "./1f936-1f3fc.svg": "532950",
        "./1f936-1f3fd.svg": "164445",
        "./1f936-1f3fe.svg": "148943",
        "./1f936-1f3ff.svg": "430938",
        "./1f936.svg": "223737",
        "./1f937-1f3fb-200d-2640-fe0f.svg": "924511",
        "./1f937-1f3fb-200d-2642-fe0f.svg": "203341",
        "./1f937-1f3fb.svg": "511825",
        "./1f937-1f3fc-200d-2640-fe0f.svg": "806240",
        "./1f937-1f3fc-200d-2642-fe0f.svg": "482293",
        "./1f937-1f3fc.svg": "533933",
        "./1f937-1f3fd-200d-2640-fe0f.svg": "423585",
        "./1f937-1f3fd-200d-2642-fe0f.svg": "169467",
        "./1f937-1f3fd.svg": "40638",
        "./1f937-1f3fe-200d-2640-fe0f.svg": "903199",
        "./1f937-1f3fe-200d-2642-fe0f.svg": "117473",
        "./1f937-1f3fe.svg": "938740",
        "./1f937-1f3ff-200d-2640-fe0f.svg": "366798",
        "./1f937-1f3ff-200d-2642-fe0f.svg": "605388",
        "./1f937-1f3ff.svg": "82093",
        "./1f937-200d-2640-fe0f.svg": "989237",
        "./1f937-200d-2642-fe0f.svg": "558166",
        "./1f937.svg": "346583",
        "./1f938-1f3fb-200d-2640-fe0f.svg": "54156",
        "./1f938-1f3fb-200d-2642-fe0f.svg": "448587",
        "./1f938-1f3fb.svg": "913951",
        "./1f938-1f3fc-200d-2640-fe0f.svg": "794481",
        "./1f938-1f3fc-200d-2642-fe0f.svg": "119654",
        "./1f938-1f3fc.svg": "986157",
        "./1f938-1f3fd-200d-2640-fe0f.svg": "321981",
        "./1f938-1f3fd-200d-2642-fe0f.svg": "433015",
        "./1f938-1f3fd.svg": "185837",
        "./1f938-1f3fe-200d-2640-fe0f.svg": "13638",
        "./1f938-1f3fe-200d-2642-fe0f.svg": "883889",
        "./1f938-1f3fe.svg": "94049",
        "./1f938-1f3ff-200d-2640-fe0f.svg": "649307",
        "./1f938-1f3ff-200d-2642-fe0f.svg": "109338",
        "./1f938-1f3ff.svg": "390070",
        "./1f938-200d-2640-fe0f.svg": "84889",
        "./1f938-200d-2642-fe0f.svg": "985347",
        "./1f938.svg": "976178",
        "./1f939-1f3fb-200d-2640-fe0f.svg": "144940",
        "./1f939-1f3fb-200d-2642-fe0f.svg": "851671",
        "./1f939-1f3fb.svg": "631850",
        "./1f939-1f3fc-200d-2640-fe0f.svg": "24248",
        "./1f939-1f3fc-200d-2642-fe0f.svg": "534390",
        "./1f939-1f3fc.svg": "43868",
        "./1f939-1f3fd-200d-2640-fe0f.svg": "646357",
        "./1f939-1f3fd-200d-2642-fe0f.svg": "778779",
        "./1f939-1f3fd.svg": "394497",
        "./1f939-1f3fe-200d-2640-fe0f.svg": "792630",
        "./1f939-1f3fe-200d-2642-fe0f.svg": "6940",
        "./1f939-1f3fe.svg": "197049",
        "./1f939-1f3ff-200d-2640-fe0f.svg": "39122",
        "./1f939-1f3ff-200d-2642-fe0f.svg": "909423",
        "./1f939-1f3ff.svg": "499429",
        "./1f939-200d-2640-fe0f.svg": "619972",
        "./1f939-200d-2642-fe0f.svg": "393027",
        "./1f939.svg": "991221",
        "./1f93a.svg": "82146",
        "./1f93c-200d-2640-fe0f.svg": "400538",
        "./1f93c-200d-2642-fe0f.svg": "971210",
        "./1f93c.svg": "135753",
        "./1f93d-1f3fb-200d-2640-fe0f.svg": "657473",
        "./1f93d-1f3fb-200d-2642-fe0f.svg": "38278",
        "./1f93d-1f3fb.svg": "745252",
        "./1f93d-1f3fc-200d-2640-fe0f.svg": "459854",
        "./1f93d-1f3fc-200d-2642-fe0f.svg": "257600",
        "./1f93d-1f3fc.svg": "453561",
        "./1f93d-1f3fd-200d-2640-fe0f.svg": "42026",
        "./1f93d-1f3fd-200d-2642-fe0f.svg": "910696",
        "./1f93d-1f3fd.svg": "760917",
        "./1f93d-1f3fe-200d-2640-fe0f.svg": "96492",
        "./1f93d-1f3fe-200d-2642-fe0f.svg": "410762",
        "./1f93d-1f3fe.svg": "203241",
        "./1f93d-1f3ff-200d-2640-fe0f.svg": "464721",
        "./1f93d-1f3ff-200d-2642-fe0f.svg": "993917",
        "./1f93d-1f3ff.svg": "540467",
        "./1f93d-200d-2640-fe0f.svg": "331419",
        "./1f93d-200d-2642-fe0f.svg": "554169",
        "./1f93d.svg": "632971",
        "./1f93e-1f3fb-200d-2640-fe0f.svg": "960160",
        "./1f93e-1f3fb-200d-2642-fe0f.svg": "74714",
        "./1f93e-1f3fb.svg": "758917",
        "./1f93e-1f3fc-200d-2640-fe0f.svg": "826594",
        "./1f93e-1f3fc-200d-2642-fe0f.svg": "753778",
        "./1f93e-1f3fc.svg": "879750",
        "./1f93e-1f3fd-200d-2640-fe0f.svg": "571492",
        "./1f93e-1f3fd-200d-2642-fe0f.svg": "599011",
        "./1f93e-1f3fd.svg": "942825",
        "./1f93e-1f3fe-200d-2640-fe0f.svg": "277894",
        "./1f93e-1f3fe-200d-2642-fe0f.svg": "158401",
        "./1f93e-1f3fe.svg": "609201",
        "./1f93e-1f3ff-200d-2640-fe0f.svg": "120865",
        "./1f93e-1f3ff-200d-2642-fe0f.svg": "217583",
        "./1f93e-1f3ff.svg": "417239",
        "./1f93e-200d-2640-fe0f.svg": "327201",
        "./1f93e-200d-2642-fe0f.svg": "513066",
        "./1f93e.svg": "903036",
        "./1f93f.svg": "369405",
        "./1f940.svg": "184230",
        "./1f941.svg": "744328",
        "./1f942.svg": "507362",
        "./1f943.svg": "81098",
        "./1f944.svg": "464175",
        "./1f945.svg": "999790",
        "./1f947.svg": "233145",
        "./1f948.svg": "275321",
        "./1f949.svg": "430897",
        "./1f94a.svg": "674446",
        "./1f94b.svg": "286045",
        "./1f94c.svg": "954434",
        "./1f94d.svg": "559778",
        "./1f94e.svg": "181268",
        "./1f94f.svg": "932120",
        "./1f950.svg": "861326",
        "./1f951.svg": "586890",
        "./1f952.svg": "143801",
        "./1f953.svg": "311207",
        "./1f954.svg": "431546",
        "./1f955.svg": "89627",
        "./1f956.svg": "305976",
        "./1f957.svg": "902109",
        "./1f958.svg": "786024",
        "./1f959.svg": "235527",
        "./1f95a.svg": "347246",
        "./1f95b.svg": "18544",
        "./1f95c.svg": "502551",
        "./1f95d.svg": "160762",
        "./1f95e.svg": "707716",
        "./1f95f.svg": "557212",
        "./1f960.svg": "388859",
        "./1f961.svg": "636306",
        "./1f962.svg": "782920",
        "./1f963.svg": "766617",
        "./1f964.svg": "926442",
        "./1f965.svg": "513806",
        "./1f966.svg": "123832",
        "./1f967.svg": "175873",
        "./1f968.svg": "948058",
        "./1f969.svg": "787427",
        "./1f96a.svg": "405577",
        "./1f96b.svg": "307681",
        "./1f96c.svg": "483008",
        "./1f96d.svg": "540711",
        "./1f96e.svg": "377561",
        "./1f96f.svg": "210478",
        "./1f970.svg": "320876",
        "./1f971.svg": "77460",
        "./1f972.svg": "558761",
        "./1f973.svg": "244966",
        "./1f974.svg": "806193",
        "./1f975.svg": "822658",
        "./1f976.svg": "269599",
        "./1f977-1f3fb.svg": "901349",
        "./1f977-1f3fc.svg": "48823",
        "./1f977-1f3fd.svg": "748766",
        "./1f977-1f3fe.svg": "858510",
        "./1f977-1f3ff.svg": "267278",
        "./1f977.svg": "489485",
        "./1f978.svg": "931721",
        "./1f979.svg": "518503",
        "./1f97a.svg": "632857",
        "./1f97b.svg": "982001",
        "./1f97c.svg": "7913",
        "./1f97d.svg": "299812",
        "./1f97e.svg": "251206",
        "./1f97f.svg": "201222",
        "./1f980.svg": "586131",
        "./1f981.svg": "878338",
        "./1f982.svg": "502351",
        "./1f983.svg": "330665",
        "./1f984.svg": "50643",
        "./1f985.svg": "39927",
        "./1f986.svg": "592258",
        "./1f987.svg": "171510",
        "./1f988.svg": "923754",
        "./1f989.svg": "619582",
        "./1f98a.svg": "35047",
        "./1f98b.svg": "197141",
        "./1f98c.svg": "735342",
        "./1f98d.svg": "607025",
        "./1f98e.svg": "409798",
        "./1f98f.svg": "225276",
        "./1f990.svg": "595846",
        "./1f991.svg": "270153",
        "./1f992.svg": "677234",
        "./1f993.svg": "867177",
        "./1f994.svg": "33596",
        "./1f995.svg": "685270",
        "./1f996.svg": "907176",
        "./1f997.svg": "21568",
        "./1f998.svg": "997891",
        "./1f999.svg": "575372",
        "./1f99a.svg": "532571",
        "./1f99b.svg": "756041",
        "./1f99c.svg": "614007",
        "./1f99d.svg": "58547",
        "./1f99e.svg": "184537",
        "./1f99f.svg": "346104",
        "./1f9a0.svg": "707407",
        "./1f9a1.svg": "314088",
        "./1f9a2.svg": "747765",
        "./1f9a3.svg": "890847",
        "./1f9a4.svg": "919974",
        "./1f9a5.svg": "185953",
        "./1f9a6.svg": "42581",
        "./1f9a7.svg": "106432",
        "./1f9a8.svg": "13516",
        "./1f9a9.svg": "586771",
        "./1f9aa.svg": "766472",
        "./1f9ab.svg": "947692",
        "./1f9ac.svg": "487002",
        "./1f9ad.svg": "598340",
        "./1f9ae.svg": "910669",
        "./1f9af.svg": "944687",
        "./1f9b0.svg": "700668",
        "./1f9b1.svg": "944200",
        "./1f9b2.svg": "758803",
        "./1f9b3.svg": "689465",
        "./1f9b4.svg": "426724",
        "./1f9b5-1f3fb.svg": "281155",
        "./1f9b5-1f3fc.svg": "481791",
        "./1f9b5-1f3fd.svg": "776314",
        "./1f9b5-1f3fe.svg": "260535",
        "./1f9b5-1f3ff.svg": "692247",
        "./1f9b5.svg": "950011",
        "./1f9b6-1f3fb.svg": "172817",
        "./1f9b6-1f3fc.svg": "956193",
        "./1f9b6-1f3fd.svg": "826663",
        "./1f9b6-1f3fe.svg": "872278",
        "./1f9b6-1f3ff.svg": "696270",
        "./1f9b6.svg": "984123",
        "./1f9b7.svg": "192325",
        "./1f9b8-1f3fb-200d-2640-fe0f.svg": "373628",
        "./1f9b8-1f3fb-200d-2642-fe0f.svg": "765277",
        "./1f9b8-1f3fb.svg": "414992",
        "./1f9b8-1f3fc-200d-2640-fe0f.svg": "186882",
        "./1f9b8-1f3fc-200d-2642-fe0f.svg": "988530",
        "./1f9b8-1f3fc.svg": "614866",
        "./1f9b8-1f3fd-200d-2640-fe0f.svg": "924091",
        "./1f9b8-1f3fd-200d-2642-fe0f.svg": "643456",
        "./1f9b8-1f3fd.svg": "191253",
        "./1f9b8-1f3fe-200d-2640-fe0f.svg": "341792",
        "./1f9b8-1f3fe-200d-2642-fe0f.svg": "493511",
        "./1f9b8-1f3fe.svg": "673021",
        "./1f9b8-1f3ff-200d-2640-fe0f.svg": "751699",
        "./1f9b8-1f3ff-200d-2642-fe0f.svg": "922136",
        "./1f9b8-1f3ff.svg": "275274",
        "./1f9b8-200d-2640-fe0f.svg": "501428",
        "./1f9b8-200d-2642-fe0f.svg": "333167",
        "./1f9b8.svg": "797372",
        "./1f9b9-1f3fb-200d-2640-fe0f.svg": "615067",
        "./1f9b9-1f3fb-200d-2642-fe0f.svg": "189559",
        "./1f9b9-1f3fb.svg": "885845",
        "./1f9b9-1f3fc-200d-2640-fe0f.svg": "589316",
        "./1f9b9-1f3fc-200d-2642-fe0f.svg": "345224",
        "./1f9b9-1f3fc.svg": "6856",
        "./1f9b9-1f3fd-200d-2640-fe0f.svg": "388881",
        "./1f9b9-1f3fd-200d-2642-fe0f.svg": "576368",
        "./1f9b9-1f3fd.svg": "957855",
        "./1f9b9-1f3fe-200d-2640-fe0f.svg": "366549",
        "./1f9b9-1f3fe-200d-2642-fe0f.svg": "917069",
        "./1f9b9-1f3fe.svg": "969804",
        "./1f9b9-1f3ff-200d-2640-fe0f.svg": "810547",
        "./1f9b9-1f3ff-200d-2642-fe0f.svg": "225979",
        "./1f9b9-1f3ff.svg": "478975",
        "./1f9b9-200d-2640-fe0f.svg": "370185",
        "./1f9b9-200d-2642-fe0f.svg": "860000",
        "./1f9b9.svg": "668639",
        "./1f9ba.svg": "141006",
        "./1f9bb-1f3fb.svg": "521447",
        "./1f9bb-1f3fc.svg": "771191",
        "./1f9bb-1f3fd.svg": "312832",
        "./1f9bb-1f3fe.svg": "929163",
        "./1f9bb-1f3ff.svg": "858151",
        "./1f9bb.svg": "343353",
        "./1f9bc.svg": "617792",
        "./1f9bd.svg": "358411",
        "./1f9be.svg": "698043",
        "./1f9bf.svg": "935477",
        "./1f9c0.svg": "584614",
        "./1f9c1.svg": "987599",
        "./1f9c2.svg": "436386",
        "./1f9c3.svg": "861154",
        "./1f9c4.svg": "572575",
        "./1f9c5.svg": "327206",
        "./1f9c6.svg": "183394",
        "./1f9c7.svg": "263316",
        "./1f9c8.svg": "374984",
        "./1f9c9.svg": "605866",
        "./1f9ca.svg": "808973",
        "./1f9cb.svg": "611700",
        "./1f9cc.svg": "835945",
        "./1f9cd-1f3fb-200d-2640-fe0f.svg": "80513",
        "./1f9cd-1f3fb-200d-2642-fe0f.svg": "966051",
        "./1f9cd-1f3fb.svg": "813667",
        "./1f9cd-1f3fc-200d-2640-fe0f.svg": "433154",
        "./1f9cd-1f3fc-200d-2642-fe0f.svg": "936369",
        "./1f9cd-1f3fc.svg": "714271",
        "./1f9cd-1f3fd-200d-2640-fe0f.svg": "773634",
        "./1f9cd-1f3fd-200d-2642-fe0f.svg": "415781",
        "./1f9cd-1f3fd.svg": "836836",
        "./1f9cd-1f3fe-200d-2640-fe0f.svg": "822043",
        "./1f9cd-1f3fe-200d-2642-fe0f.svg": "887828",
        "./1f9cd-1f3fe.svg": "687570",
        "./1f9cd-1f3ff-200d-2640-fe0f.svg": "530812",
        "./1f9cd-1f3ff-200d-2642-fe0f.svg": "95147",
        "./1f9cd-1f3ff.svg": "880409",
        "./1f9cd-200d-2640-fe0f.svg": "65525",
        "./1f9cd-200d-2642-fe0f.svg": "78595",
        "./1f9cd.svg": "138257",
        "./1f9ce-1f3fb-200d-2640-fe0f.svg": "270249",
        "./1f9ce-1f3fb-200d-2642-fe0f.svg": "172922",
        "./1f9ce-1f3fb.svg": "449467",
        "./1f9ce-1f3fc-200d-2640-fe0f.svg": "813877",
        "./1f9ce-1f3fc-200d-2642-fe0f.svg": "464218",
        "./1f9ce-1f3fc.svg": "707544",
        "./1f9ce-1f3fd-200d-2640-fe0f.svg": "269535",
        "./1f9ce-1f3fd-200d-2642-fe0f.svg": "812804",
        "./1f9ce-1f3fd.svg": "503366",
        "./1f9ce-1f3fe-200d-2640-fe0f.svg": "734670",
        "./1f9ce-1f3fe-200d-2642-fe0f.svg": "495216",
        "./1f9ce-1f3fe.svg": "103616",
        "./1f9ce-1f3ff-200d-2640-fe0f.svg": "338185",
        "./1f9ce-1f3ff-200d-2642-fe0f.svg": "223188",
        "./1f9ce-1f3ff.svg": "842848",
        "./1f9ce-200d-2640-fe0f.svg": "447693",
        "./1f9ce-200d-2642-fe0f.svg": "843889",
        "./1f9ce.svg": "915856",
        "./1f9cf-1f3fb-200d-2640-fe0f.svg": "65703",
        "./1f9cf-1f3fb-200d-2642-fe0f.svg": "113891",
        "./1f9cf-1f3fb.svg": "888302",
        "./1f9cf-1f3fc-200d-2640-fe0f.svg": "584765",
        "./1f9cf-1f3fc-200d-2642-fe0f.svg": "532380",
        "./1f9cf-1f3fc.svg": "354956",
        "./1f9cf-1f3fd-200d-2640-fe0f.svg": "577286",
        "./1f9cf-1f3fd-200d-2642-fe0f.svg": "434590",
        "./1f9cf-1f3fd.svg": "247784",
        "./1f9cf-1f3fe-200d-2640-fe0f.svg": "410354",
        "./1f9cf-1f3fe-200d-2642-fe0f.svg": "815308",
        "./1f9cf-1f3fe.svg": "551471",
        "./1f9cf-1f3ff-200d-2640-fe0f.svg": "60947",
        "./1f9cf-1f3ff-200d-2642-fe0f.svg": "834697",
        "./1f9cf-1f3ff.svg": "874454",
        "./1f9cf-200d-2640-fe0f.svg": "730577",
        "./1f9cf-200d-2642-fe0f.svg": "490243",
        "./1f9cf.svg": "392642",
        "./1f9d0.svg": "989619",
        "./1f9d1-1f3fb-200d-1f33e.svg": "340819",
        "./1f9d1-1f3fb-200d-1f373.svg": "887169",
        "./1f9d1-1f3fb-200d-1f37c.svg": "263656",
        "./1f9d1-1f3fb-200d-1f384.svg": "354920",
        "./1f9d1-1f3fb-200d-1f393.svg": "487351",
        "./1f9d1-1f3fb-200d-1f3a4.svg": "259547",
        "./1f9d1-1f3fb-200d-1f3a8.svg": "718891",
        "./1f9d1-1f3fb-200d-1f3eb.svg": "560663",
        "./1f9d1-1f3fb-200d-1f3ed.svg": "206311",
        "./1f9d1-1f3fb-200d-1f4bb.svg": "640045",
        "./1f9d1-1f3fb-200d-1f4bc.svg": "780942",
        "./1f9d1-1f3fb-200d-1f527.svg": "600370",
        "./1f9d1-1f3fb-200d-1f52c.svg": "492081",
        "./1f9d1-1f3fb-200d-1f680.svg": "632978",
        "./1f9d1-1f3fb-200d-1f692.svg": "571358",
        "./1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fb.svg": "373870",
        "./1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fc.svg": "671954",
        "./1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fd.svg": "977389",
        "./1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fe.svg": "543275",
        "./1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3ff.svg": "423505",
        "./1f9d1-1f3fb-200d-1f9af.svg": "692032",
        "./1f9d1-1f3fb-200d-1f9b0.svg": "487977",
        "./1f9d1-1f3fb-200d-1f9b1.svg": "708629",
        "./1f9d1-1f3fb-200d-1f9b2.svg": "737394",
        "./1f9d1-1f3fb-200d-1f9b3.svg": "332500",
        "./1f9d1-1f3fb-200d-1f9bc.svg": "769140",
        "./1f9d1-1f3fb-200d-1f9bd.svg": "322381",
        "./1f9d1-1f3fb-200d-2695-fe0f.svg": "184322",
        "./1f9d1-1f3fb-200d-2696-fe0f.svg": "336176",
        "./1f9d1-1f3fb-200d-2708-fe0f.svg": "221135",
        "./1f9d1-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fc.svg":
          "599956",
        "./1f9d1-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fd.svg":
          "226084",
        "./1f9d1-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fe.svg":
          "672222",
        "./1f9d1-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3ff.svg":
          "285374",
        "./1f9d1-1f3fb-200d-2764-fe0f-200d-1f9d1-1f3fc.svg": "959048",
        "./1f9d1-1f3fb-200d-2764-fe0f-200d-1f9d1-1f3fd.svg": "328480",
        "./1f9d1-1f3fb-200d-2764-fe0f-200d-1f9d1-1f3fe.svg": "301412",
        "./1f9d1-1f3fb-200d-2764-fe0f-200d-1f9d1-1f3ff.svg": "125154",
        "./1f9d1-1f3fb.svg": "116919",
        "./1f9d1-1f3fc-200d-1f33e.svg": "581062",
        "./1f9d1-1f3fc-200d-1f373.svg": "770612",
        "./1f9d1-1f3fc-200d-1f37c.svg": "623651",
        "./1f9d1-1f3fc-200d-1f384.svg": "552032",
        "./1f9d1-1f3fc-200d-1f393.svg": "382773",
        "./1f9d1-1f3fc-200d-1f3a4.svg": "439962",
        "./1f9d1-1f3fc-200d-1f3a8.svg": "73287",
        "./1f9d1-1f3fc-200d-1f3eb.svg": "88830",
        "./1f9d1-1f3fc-200d-1f3ed.svg": "117396",
        "./1f9d1-1f3fc-200d-1f4bb.svg": "104526",
        "./1f9d1-1f3fc-200d-1f4bc.svg": "377830",
        "./1f9d1-1f3fc-200d-1f527.svg": "21644",
        "./1f9d1-1f3fc-200d-1f52c.svg": "637436",
        "./1f9d1-1f3fc-200d-1f680.svg": "318329",
        "./1f9d1-1f3fc-200d-1f692.svg": "383702",
        "./1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fb.svg": "489889",
        "./1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fc.svg": "680571",
        "./1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fd.svg": "677304",
        "./1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fe.svg": "919151",
        "./1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3ff.svg": "460378",
        "./1f9d1-1f3fc-200d-1f9af.svg": "534005",
        "./1f9d1-1f3fc-200d-1f9b0.svg": "810505",
        "./1f9d1-1f3fc-200d-1f9b1.svg": "121404",
        "./1f9d1-1f3fc-200d-1f9b2.svg": "187539",
        "./1f9d1-1f3fc-200d-1f9b3.svg": "613696",
        "./1f9d1-1f3fc-200d-1f9bc.svg": "979928",
        "./1f9d1-1f3fc-200d-1f9bd.svg": "802653",
        "./1f9d1-1f3fc-200d-2695-fe0f.svg": "376926",
        "./1f9d1-1f3fc-200d-2696-fe0f.svg": "142289",
        "./1f9d1-1f3fc-200d-2708-fe0f.svg": "819797",
        "./1f9d1-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fb.svg":
          "919623",
        "./1f9d1-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fd.svg":
          "989636",
        "./1f9d1-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fe.svg":
          "332134",
        "./1f9d1-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3ff.svg":
          "262163",
        "./1f9d1-1f3fc-200d-2764-fe0f-200d-1f9d1-1f3fb.svg": "497393",
        "./1f9d1-1f3fc-200d-2764-fe0f-200d-1f9d1-1f3fd.svg": "102733",
        "./1f9d1-1f3fc-200d-2764-fe0f-200d-1f9d1-1f3fe.svg": "740551",
        "./1f9d1-1f3fc-200d-2764-fe0f-200d-1f9d1-1f3ff.svg": "82843",
        "./1f9d1-1f3fc.svg": "743241",
        "./1f9d1-1f3fd-200d-1f33e.svg": "91422",
        "./1f9d1-1f3fd-200d-1f373.svg": "839672",
        "./1f9d1-1f3fd-200d-1f37c.svg": "890140",
        "./1f9d1-1f3fd-200d-1f384.svg": "115067",
        "./1f9d1-1f3fd-200d-1f393.svg": "276946",
        "./1f9d1-1f3fd-200d-1f3a4.svg": "620190",
        "./1f9d1-1f3fd-200d-1f3a8.svg": "439707",
        "./1f9d1-1f3fd-200d-1f3eb.svg": "834827",
        "./1f9d1-1f3fd-200d-1f3ed.svg": "435958",
        "./1f9d1-1f3fd-200d-1f4bb.svg": "944533",
        "./1f9d1-1f3fd-200d-1f4bc.svg": "877596",
        "./1f9d1-1f3fd-200d-1f527.svg": "808094",
        "./1f9d1-1f3fd-200d-1f52c.svg": "107363",
        "./1f9d1-1f3fd-200d-1f680.svg": "19770",
        "./1f9d1-1f3fd-200d-1f692.svg": "755003",
        "./1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fb.svg": "33549",
        "./1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fc.svg": "590184",
        "./1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fd.svg": "986557",
        "./1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fe.svg": "436831",
        "./1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3ff.svg": "352608",
        "./1f9d1-1f3fd-200d-1f9af.svg": "715453",
        "./1f9d1-1f3fd-200d-1f9b0.svg": "189162",
        "./1f9d1-1f3fd-200d-1f9b1.svg": "951560",
        "./1f9d1-1f3fd-200d-1f9b2.svg": "197991",
        "./1f9d1-1f3fd-200d-1f9b3.svg": "357179",
        "./1f9d1-1f3fd-200d-1f9bc.svg": "167791",
        "./1f9d1-1f3fd-200d-1f9bd.svg": "473882",
        "./1f9d1-1f3fd-200d-2695-fe0f.svg": "964786",
        "./1f9d1-1f3fd-200d-2696-fe0f.svg": "724675",
        "./1f9d1-1f3fd-200d-2708-fe0f.svg": "817740",
        "./1f9d1-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fb.svg": "96199",
        "./1f9d1-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fc.svg":
          "442940",
        "./1f9d1-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fe.svg":
          "480536",
        "./1f9d1-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3ff.svg":
          "390048",
        "./1f9d1-1f3fd-200d-2764-fe0f-200d-1f9d1-1f3fb.svg": "330046",
        "./1f9d1-1f3fd-200d-2764-fe0f-200d-1f9d1-1f3fc.svg": "181146",
        "./1f9d1-1f3fd-200d-2764-fe0f-200d-1f9d1-1f3fe.svg": "773742",
        "./1f9d1-1f3fd-200d-2764-fe0f-200d-1f9d1-1f3ff.svg": "584088",
        "./1f9d1-1f3fd.svg": "947754",
        "./1f9d1-1f3fe-200d-1f33e.svg": "426420",
        "./1f9d1-1f3fe-200d-1f373.svg": "533142",
        "./1f9d1-1f3fe-200d-1f37c.svg": "774895",
        "./1f9d1-1f3fe-200d-1f384.svg": "96941",
        "./1f9d1-1f3fe-200d-1f393.svg": "641313",
        "./1f9d1-1f3fe-200d-1f3a4.svg": "309919",
        "./1f9d1-1f3fe-200d-1f3a8.svg": "2074",
        "./1f9d1-1f3fe-200d-1f3eb.svg": "957558",
        "./1f9d1-1f3fe-200d-1f3ed.svg": "518681",
        "./1f9d1-1f3fe-200d-1f4bb.svg": "240640",
        "./1f9d1-1f3fe-200d-1f4bc.svg": "908348",
        "./1f9d1-1f3fe-200d-1f527.svg": "216609",
        "./1f9d1-1f3fe-200d-1f52c.svg": "336711",
        "./1f9d1-1f3fe-200d-1f680.svg": "242288",
        "./1f9d1-1f3fe-200d-1f692.svg": "348130",
        "./1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fb.svg": "231278",
        "./1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fc.svg": "182755",
        "./1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fd.svg": "72127",
        "./1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fe.svg": "536929",
        "./1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3ff.svg": "359933",
        "./1f9d1-1f3fe-200d-1f9af.svg": "540505",
        "./1f9d1-1f3fe-200d-1f9b0.svg": "220394",
        "./1f9d1-1f3fe-200d-1f9b1.svg": "12031",
        "./1f9d1-1f3fe-200d-1f9b2.svg": "624220",
        "./1f9d1-1f3fe-200d-1f9b3.svg": "415217",
        "./1f9d1-1f3fe-200d-1f9bc.svg": "68374",
        "./1f9d1-1f3fe-200d-1f9bd.svg": "52684",
        "./1f9d1-1f3fe-200d-2695-fe0f.svg": "572499",
        "./1f9d1-1f3fe-200d-2696-fe0f.svg": "886847",
        "./1f9d1-1f3fe-200d-2708-fe0f.svg": "580158",
        "./1f9d1-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fb.svg":
          "588787",
        "./1f9d1-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fc.svg":
          "331113",
        "./1f9d1-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fd.svg":
          "537101",
        "./1f9d1-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3ff.svg": "49465",
        "./1f9d1-1f3fe-200d-2764-fe0f-200d-1f9d1-1f3fb.svg": "762173",
        "./1f9d1-1f3fe-200d-2764-fe0f-200d-1f9d1-1f3fc.svg": "576855",
        "./1f9d1-1f3fe-200d-2764-fe0f-200d-1f9d1-1f3fd.svg": "978107",
        "./1f9d1-1f3fe-200d-2764-fe0f-200d-1f9d1-1f3ff.svg": "443734",
        "./1f9d1-1f3fe.svg": "132929",
        "./1f9d1-1f3ff-200d-1f33e.svg": "841035",
        "./1f9d1-1f3ff-200d-1f373.svg": "858552",
        "./1f9d1-1f3ff-200d-1f37c.svg": "743198",
        "./1f9d1-1f3ff-200d-1f384.svg": "113157",
        "./1f9d1-1f3ff-200d-1f393.svg": "166322",
        "./1f9d1-1f3ff-200d-1f3a4.svg": "973450",
        "./1f9d1-1f3ff-200d-1f3a8.svg": "122463",
        "./1f9d1-1f3ff-200d-1f3eb.svg": "252528",
        "./1f9d1-1f3ff-200d-1f3ed.svg": "291603",
        "./1f9d1-1f3ff-200d-1f4bb.svg": "195925",
        "./1f9d1-1f3ff-200d-1f4bc.svg": "804221",
        "./1f9d1-1f3ff-200d-1f527.svg": "310098",
        "./1f9d1-1f3ff-200d-1f52c.svg": "427449",
        "./1f9d1-1f3ff-200d-1f680.svg": "808252",
        "./1f9d1-1f3ff-200d-1f692.svg": "261257",
        "./1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fb.svg": "305694",
        "./1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fc.svg": "819491",
        "./1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fd.svg": "884451",
        "./1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fe.svg": "227073",
        "./1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3ff.svg": "907802",
        "./1f9d1-1f3ff-200d-1f9af.svg": "460941",
        "./1f9d1-1f3ff-200d-1f9b0.svg": "223093",
        "./1f9d1-1f3ff-200d-1f9b1.svg": "993776",
        "./1f9d1-1f3ff-200d-1f9b2.svg": "907464",
        "./1f9d1-1f3ff-200d-1f9b3.svg": "361116",
        "./1f9d1-1f3ff-200d-1f9bc.svg": "601287",
        "./1f9d1-1f3ff-200d-1f9bd.svg": "15573",
        "./1f9d1-1f3ff-200d-2695-fe0f.svg": "235570",
        "./1f9d1-1f3ff-200d-2696-fe0f.svg": "69054",
        "./1f9d1-1f3ff-200d-2708-fe0f.svg": "886411",
        "./1f9d1-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fb.svg":
          "528089",
        "./1f9d1-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fc.svg":
          "438161",
        "./1f9d1-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fd.svg":
          "209419",
        "./1f9d1-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fe.svg":
          "189582",
        "./1f9d1-1f3ff-200d-2764-fe0f-200d-1f9d1-1f3fb.svg": "410984",
        "./1f9d1-1f3ff-200d-2764-fe0f-200d-1f9d1-1f3fc.svg": "851681",
        "./1f9d1-1f3ff-200d-2764-fe0f-200d-1f9d1-1f3fd.svg": "842535",
        "./1f9d1-1f3ff-200d-2764-fe0f-200d-1f9d1-1f3fe.svg": "49202",
        "./1f9d1-1f3ff.svg": "101895",
        "./1f9d1-200d-1f33e.svg": "133837",
        "./1f9d1-200d-1f373.svg": "370640",
        "./1f9d1-200d-1f37c.svg": "743604",
        "./1f9d1-200d-1f384.svg": "483034",
        "./1f9d1-200d-1f393.svg": "618249",
        "./1f9d1-200d-1f3a4.svg": "795449",
        "./1f9d1-200d-1f3a8.svg": "330472",
        "./1f9d1-200d-1f3eb.svg": "356221",
        "./1f9d1-200d-1f3ed.svg": "688035",
        "./1f9d1-200d-1f4bb.svg": "233332",
        "./1f9d1-200d-1f4bc.svg": "414876",
        "./1f9d1-200d-1f527.svg": "339507",
        "./1f9d1-200d-1f52c.svg": "402643",
        "./1f9d1-200d-1f680.svg": "257010",
        "./1f9d1-200d-1f692.svg": "890127",
        "./1f9d1-200d-1f91d-200d-1f9d1.svg": "671408",
        "./1f9d1-200d-1f9af.svg": "218650",
        "./1f9d1-200d-1f9b0.svg": "411889",
        "./1f9d1-200d-1f9b1.svg": "428224",
        "./1f9d1-200d-1f9b2.svg": "290816",
        "./1f9d1-200d-1f9b3.svg": "482304",
        "./1f9d1-200d-1f9bc.svg": "904959",
        "./1f9d1-200d-1f9bd.svg": "63488",
        "./1f9d1-200d-2695-fe0f.svg": "216945",
        "./1f9d1-200d-2696-fe0f.svg": "786257",
        "./1f9d1-200d-2708-fe0f.svg": "988521",
        "./1f9d1.svg": "827918",
        "./1f9d2-1f3fb.svg": "822132",
        "./1f9d2-1f3fc.svg": "884543",
        "./1f9d2-1f3fd.svg": "126803",
        "./1f9d2-1f3fe.svg": "191799",
        "./1f9d2-1f3ff.svg": "567390",
        "./1f9d2.svg": "544881",
        "./1f9d3-1f3fb.svg": "455538",
        "./1f9d3-1f3fc.svg": "82314",
        "./1f9d3-1f3fd.svg": "173240",
        "./1f9d3-1f3fe.svg": "945551",
        "./1f9d3-1f3ff.svg": "926612",
        "./1f9d3.svg": "536032",
        "./1f9d4-1f3fb-200d-2640-fe0f.svg": "756579",
        "./1f9d4-1f3fb-200d-2642-fe0f.svg": "775929",
        "./1f9d4-1f3fb.svg": "14872",
        "./1f9d4-1f3fc-200d-2640-fe0f.svg": "197980",
        "./1f9d4-1f3fc-200d-2642-fe0f.svg": "154303",
        "./1f9d4-1f3fc.svg": "693763",
        "./1f9d4-1f3fd-200d-2640-fe0f.svg": "362703",
        "./1f9d4-1f3fd-200d-2642-fe0f.svg": "92793",
        "./1f9d4-1f3fd.svg": "527099",
        "./1f9d4-1f3fe-200d-2640-fe0f.svg": "671544",
        "./1f9d4-1f3fe-200d-2642-fe0f.svg": "475406",
        "./1f9d4-1f3fe.svg": "515092",
        "./1f9d4-1f3ff-200d-2640-fe0f.svg": "92447",
        "./1f9d4-1f3ff-200d-2642-fe0f.svg": "327151",
        "./1f9d4-1f3ff.svg": "924628",
        "./1f9d4-200d-2640-fe0f.svg": "730676",
        "./1f9d4-200d-2642-fe0f.svg": "120994",
        "./1f9d4.svg": "350037",
        "./1f9d5-1f3fb.svg": "66357",
        "./1f9d5-1f3fc.svg": "813021",
        "./1f9d5-1f3fd.svg": "916834",
        "./1f9d5-1f3fe.svg": "348218",
        "./1f9d5-1f3ff.svg": "507345",
        "./1f9d5.svg": "224478",
        "./1f9d6-1f3fb-200d-2640-fe0f.svg": "742861",
        "./1f9d6-1f3fb-200d-2642-fe0f.svg": "686146",
        "./1f9d6-1f3fb.svg": "848949",
        "./1f9d6-1f3fc-200d-2640-fe0f.svg": "769699",
        "./1f9d6-1f3fc-200d-2642-fe0f.svg": "922300",
        "./1f9d6-1f3fc.svg": "211107",
        "./1f9d6-1f3fd-200d-2640-fe0f.svg": "323870",
        "./1f9d6-1f3fd-200d-2642-fe0f.svg": "883965",
        "./1f9d6-1f3fd.svg": "844537",
        "./1f9d6-1f3fe-200d-2640-fe0f.svg": "635506",
        "./1f9d6-1f3fe-200d-2642-fe0f.svg": "336346",
        "./1f9d6-1f3fe.svg": "382225",
        "./1f9d6-1f3ff-200d-2640-fe0f.svg": "32791",
        "./1f9d6-1f3ff-200d-2642-fe0f.svg": "287684",
        "./1f9d6-1f3ff.svg": "882954",
        "./1f9d6-200d-2640-fe0f.svg": "570822",
        "./1f9d6-200d-2642-fe0f.svg": "280429",
        "./1f9d6.svg": "286857",
        "./1f9d7-1f3fb-200d-2640-fe0f.svg": "154626",
        "./1f9d7-1f3fb-200d-2642-fe0f.svg": "493935",
        "./1f9d7-1f3fb.svg": "895625",
        "./1f9d7-1f3fc-200d-2640-fe0f.svg": "887901",
        "./1f9d7-1f3fc-200d-2642-fe0f.svg": "199856",
        "./1f9d7-1f3fc.svg": "540941",
        "./1f9d7-1f3fd-200d-2640-fe0f.svg": "796965",
        "./1f9d7-1f3fd-200d-2642-fe0f.svg": "7594",
        "./1f9d7-1f3fd.svg": "600450",
        "./1f9d7-1f3fe-200d-2640-fe0f.svg": "857070",
        "./1f9d7-1f3fe-200d-2642-fe0f.svg": "963232",
        "./1f9d7-1f3fe.svg": "667123",
        "./1f9d7-1f3ff-200d-2640-fe0f.svg": "942983",
        "./1f9d7-1f3ff-200d-2642-fe0f.svg": "645948",
        "./1f9d7-1f3ff.svg": "888461",
        "./1f9d7-200d-2640-fe0f.svg": "178254",
        "./1f9d7-200d-2642-fe0f.svg": "81160",
        "./1f9d7.svg": "32168",
        "./1f9d8-1f3fb-200d-2640-fe0f.svg": "363847",
        "./1f9d8-1f3fb-200d-2642-fe0f.svg": "349198",
        "./1f9d8-1f3fb.svg": "126874",
        "./1f9d8-1f3fc-200d-2640-fe0f.svg": "376612",
        "./1f9d8-1f3fc-200d-2642-fe0f.svg": "236695",
        "./1f9d8-1f3fc.svg": "807362",
        "./1f9d8-1f3fd-200d-2640-fe0f.svg": "868620",
        "./1f9d8-1f3fd-200d-2642-fe0f.svg": "668846",
        "./1f9d8-1f3fd.svg": "427859",
        "./1f9d8-1f3fe-200d-2640-fe0f.svg": "657813",
        "./1f9d8-1f3fe-200d-2642-fe0f.svg": "65668",
        "./1f9d8-1f3fe.svg": "701788",
        "./1f9d8-1f3ff-200d-2640-fe0f.svg": "701904",
        "./1f9d8-1f3ff-200d-2642-fe0f.svg": "439068",
        "./1f9d8-1f3ff.svg": "737511",
        "./1f9d8-200d-2640-fe0f.svg": "408666",
        "./1f9d8-200d-2642-fe0f.svg": "655035",
        "./1f9d8.svg": "710164",
        "./1f9d9-1f3fb-200d-2640-fe0f.svg": "159881",
        "./1f9d9-1f3fb-200d-2642-fe0f.svg": "268031",
        "./1f9d9-1f3fb.svg": "822729",
        "./1f9d9-1f3fc-200d-2640-fe0f.svg": "721757",
        "./1f9d9-1f3fc-200d-2642-fe0f.svg": "623734",
        "./1f9d9-1f3fc.svg": "922636",
        "./1f9d9-1f3fd-200d-2640-fe0f.svg": "895471",
        "./1f9d9-1f3fd-200d-2642-fe0f.svg": "966848",
        "./1f9d9-1f3fd.svg": "247523",
        "./1f9d9-1f3fe-200d-2640-fe0f.svg": "492927",
        "./1f9d9-1f3fe-200d-2642-fe0f.svg": "455185",
        "./1f9d9-1f3fe.svg": "153849",
        "./1f9d9-1f3ff-200d-2640-fe0f.svg": "968380",
        "./1f9d9-1f3ff-200d-2642-fe0f.svg": "768294",
        "./1f9d9-1f3ff.svg": "402194",
        "./1f9d9-200d-2640-fe0f.svg": "219490",
        "./1f9d9-200d-2642-fe0f.svg": "613172",
        "./1f9d9.svg": "583630",
        "./1f9da-1f3fb-200d-2640-fe0f.svg": "797620",
        "./1f9da-1f3fb-200d-2642-fe0f.svg": "161518",
        "./1f9da-1f3fb.svg": "549249",
        "./1f9da-1f3fc-200d-2640-fe0f.svg": "713993",
        "./1f9da-1f3fc-200d-2642-fe0f.svg": "427039",
        "./1f9da-1f3fc.svg": "71341",
        "./1f9da-1f3fd-200d-2640-fe0f.svg": "203006",
        "./1f9da-1f3fd-200d-2642-fe0f.svg": "498012",
        "./1f9da-1f3fd.svg": "897529",
        "./1f9da-1f3fe-200d-2640-fe0f.svg": "753634",
        "./1f9da-1f3fe-200d-2642-fe0f.svg": "46643",
        "./1f9da-1f3fe.svg": "845896",
        "./1f9da-1f3ff-200d-2640-fe0f.svg": "634560",
        "./1f9da-1f3ff-200d-2642-fe0f.svg": "62548",
        "./1f9da-1f3ff.svg": "638927",
        "./1f9da-200d-2640-fe0f.svg": "914599",
        "./1f9da-200d-2642-fe0f.svg": "523877",
        "./1f9da.svg": "722589",
        "./1f9db-1f3fb-200d-2640-fe0f.svg": "109926",
        "./1f9db-1f3fb-200d-2642-fe0f.svg": "583763",
        "./1f9db-1f3fb.svg": "714083",
        "./1f9db-1f3fc-200d-2640-fe0f.svg": "714221",
        "./1f9db-1f3fc-200d-2642-fe0f.svg": "913041",
        "./1f9db-1f3fc.svg": "935387",
        "./1f9db-1f3fd-200d-2640-fe0f.svg": "221697",
        "./1f9db-1f3fd-200d-2642-fe0f.svg": "527337",
        "./1f9db-1f3fd.svg": "61097",
        "./1f9db-1f3fe-200d-2640-fe0f.svg": "668182",
        "./1f9db-1f3fe-200d-2642-fe0f.svg": "5269",
        "./1f9db-1f3fe.svg": "89703",
        "./1f9db-1f3ff-200d-2640-fe0f.svg": "461507",
        "./1f9db-1f3ff-200d-2642-fe0f.svg": "611684",
        "./1f9db-1f3ff.svg": "108767",
        "./1f9db-200d-2640-fe0f.svg": "90050",
        "./1f9db-200d-2642-fe0f.svg": "11450",
        "./1f9db.svg": "678118",
        "./1f9dc-1f3fb-200d-2640-fe0f.svg": "573133",
        "./1f9dc-1f3fb-200d-2642-fe0f.svg": "387035",
        "./1f9dc-1f3fb.svg": "579616",
        "./1f9dc-1f3fc-200d-2640-fe0f.svg": "577425",
        "./1f9dc-1f3fc-200d-2642-fe0f.svg": "83108",
        "./1f9dc-1f3fc.svg": "858960",
        "./1f9dc-1f3fd-200d-2640-fe0f.svg": "38416",
        "./1f9dc-1f3fd-200d-2642-fe0f.svg": "354980",
        "./1f9dc-1f3fd.svg": "356240",
        "./1f9dc-1f3fe-200d-2640-fe0f.svg": "123450",
        "./1f9dc-1f3fe-200d-2642-fe0f.svg": "569205",
        "./1f9dc-1f3fe.svg": "905750",
        "./1f9dc-1f3ff-200d-2640-fe0f.svg": "181740",
        "./1f9dc-1f3ff-200d-2642-fe0f.svg": "802301",
        "./1f9dc-1f3ff.svg": "17690",
        "./1f9dc-200d-2640-fe0f.svg": "519257",
        "./1f9dc-200d-2642-fe0f.svg": "382566",
        "./1f9dc.svg": "189808",
        "./1f9dd-1f3fb-200d-2640-fe0f.svg": "832509",
        "./1f9dd-1f3fb-200d-2642-fe0f.svg": "831278",
        "./1f9dd-1f3fb.svg": "891952",
        "./1f9dd-1f3fc-200d-2640-fe0f.svg": "971396",
        "./1f9dd-1f3fc-200d-2642-fe0f.svg": "361272",
        "./1f9dd-1f3fc.svg": "660397",
        "./1f9dd-1f3fd-200d-2640-fe0f.svg": "394959",
        "./1f9dd-1f3fd-200d-2642-fe0f.svg": "437899",
        "./1f9dd-1f3fd.svg": "874105",
        "./1f9dd-1f3fe-200d-2640-fe0f.svg": "887289",
        "./1f9dd-1f3fe-200d-2642-fe0f.svg": "709951",
        "./1f9dd-1f3fe.svg": "239163",
        "./1f9dd-1f3ff-200d-2640-fe0f.svg": "334253",
        "./1f9dd-1f3ff-200d-2642-fe0f.svg": "793929",
        "./1f9dd-1f3ff.svg": "160908",
        "./1f9dd-200d-2640-fe0f.svg": "659761",
        "./1f9dd-200d-2642-fe0f.svg": "484158",
        "./1f9dd.svg": "653086",
        "./1f9de-200d-2640-fe0f.svg": "313989",
        "./1f9de-200d-2642-fe0f.svg": "353575",
        "./1f9de.svg": "474319",
        "./1f9df-200d-2640-fe0f.svg": "917224",
        "./1f9df-200d-2642-fe0f.svg": "749751",
        "./1f9df.svg": "360542",
        "./1f9e0.svg": "309770",
        "./1f9e1.svg": "764793",
        "./1f9e2.svg": "572282",
        "./1f9e3.svg": "756724",
        "./1f9e4.svg": "505715",
        "./1f9e5.svg": "64457",
        "./1f9e6.svg": "79247",
        "./1f9e7.svg": "301970",
        "./1f9e8.svg": "684959",
        "./1f9e9.svg": "500821",
        "./1f9ea.svg": "39445",
        "./1f9eb.svg": "128263",
        "./1f9ec.svg": "989241",
        "./1f9ed.svg": "621633",
        "./1f9ee.svg": "311477",
        "./1f9ef.svg": "993591",
        "./1f9f0.svg": "985981",
        "./1f9f1.svg": "870701",
        "./1f9f2.svg": "499469",
        "./1f9f3.svg": "128160",
        "./1f9f4.svg": "969061",
        "./1f9f5.svg": "516849",
        "./1f9f6.svg": "505437",
        "./1f9f7.svg": "166899",
        "./1f9f8.svg": "915610",
        "./1f9f9.svg": "90641",
        "./1f9fa.svg": "227378",
        "./1f9fb.svg": "699914",
        "./1f9fc.svg": "634771",
        "./1f9fd.svg": "634208",
        "./1f9fe.svg": "139685",
        "./1f9ff.svg": "493915",
        "./1fa70.svg": "718749",
        "./1fa71.svg": "291357",
        "./1fa72.svg": "920488",
        "./1fa73.svg": "756310",
        "./1fa74.svg": "698755",
        "./1fa75.svg": "916391",
        "./1fa76.svg": "154087",
        "./1fa77.svg": "214065",
        "./1fa78.svg": "891977",
        "./1fa79.svg": "800498",
        "./1fa7a.svg": "333139",
        "./1fa7b.svg": "906182",
        "./1fa7c.svg": "282918",
        "./1fa80.svg": "520181",
        "./1fa81.svg": "112195",
        "./1fa82.svg": "198429",
        "./1fa83.svg": "223184",
        "./1fa84.svg": "852114",
        "./1fa85.svg": "181847",
        "./1fa86.svg": "149517",
        "./1fa87.svg": "9178",
        "./1fa88.svg": "746487",
        "./1fa90.svg": "164788",
        "./1fa91.svg": "4000",
        "./1fa92.svg": "364914",
        "./1fa93.svg": "680143",
        "./1fa94.svg": "993641",
        "./1fa95.svg": "91077",
        "./1fa96.svg": "907978",
        "./1fa97.svg": "659491",
        "./1fa98.svg": "30942",
        "./1fa99.svg": "305749",
        "./1fa9a.svg": "469648",
        "./1fa9b.svg": "726535",
        "./1fa9c.svg": "357097",
        "./1fa9d.svg": "119977",
        "./1fa9e.svg": "243624",
        "./1fa9f.svg": "284415",
        "./1faa0.svg": "485219",
        "./1faa1.svg": "341174",
        "./1faa2.svg": "990047",
        "./1faa3.svg": "204352",
        "./1faa4.svg": "629210",
        "./1faa5.svg": "216203",
        "./1faa6.svg": "599341",
        "./1faa7.svg": "970882",
        "./1faa8.svg": "165537",
        "./1faa9.svg": "757850",
        "./1faaa.svg": "430228",
        "./1faab.svg": "711233",
        "./1faac.svg": "732085",
        "./1faad.svg": "735098",
        "./1faae.svg": "187680",
        "./1faaf.svg": "619078",
        "./1fab0.svg": "382708",
        "./1fab1.svg": "288995",
        "./1fab2.svg": "585618",
        "./1fab3.svg": "562018",
        "./1fab4.svg": "501123",
        "./1fab5.svg": "722408",
        "./1fab6.svg": "186137",
        "./1fab7.svg": "510012",
        "./1fab8.svg": "781848",
        "./1fab9.svg": "800398",
        "./1faba.svg": "953650",
        "./1fabb.svg": "665762",
        "./1fabc.svg": "954688",
        "./1fabd.svg": "525434",
        "./1fabf.svg": "94494",
        "./1fac0.svg": "656319",
        "./1fac1.svg": "267818",
        "./1fac2.svg": "809276",
        "./1fac3-1f3fb.svg": "343927",
        "./1fac3-1f3fc.svg": "867216",
        "./1fac3-1f3fd.svg": "957246",
        "./1fac3-1f3fe.svg": "118012",
        "./1fac3-1f3ff.svg": "545861",
        "./1fac3.svg": "869289",
        "./1fac4-1f3fb.svg": "973875",
        "./1fac4-1f3fc.svg": "977841",
        "./1fac4-1f3fd.svg": "442810",
        "./1fac4-1f3fe.svg": "66886",
        "./1fac4-1f3ff.svg": "550824",
        "./1fac4.svg": "193475",
        "./1fac5-1f3fb.svg": "928030",
        "./1fac5-1f3fc.svg": "928506",
        "./1fac5-1f3fd.svg": "828067",
        "./1fac5-1f3fe.svg": "85652",
        "./1fac5-1f3ff.svg": "623042",
        "./1fac5.svg": "788201",
        "./1face.svg": "444567",
        "./1facf.svg": "817725",
        "./1fad0.svg": "193047",
        "./1fad1.svg": "495814",
        "./1fad2.svg": "104815",
        "./1fad3.svg": "820985",
        "./1fad4.svg": "508214",
        "./1fad5.svg": "714911",
        "./1fad6.svg": "355601",
        "./1fad7.svg": "548797",
        "./1fad8.svg": "855847",
        "./1fad9.svg": "770951",
        "./1fada.svg": "322553",
        "./1fadb.svg": "912762",
        "./1fae0.svg": "832206",
        "./1fae1.svg": "664335",
        "./1fae2.svg": "765959",
        "./1fae3.svg": "101892",
        "./1fae4.svg": "720767",
        "./1fae5.svg": "656095",
        "./1fae6.svg": "7026",
        "./1fae7.svg": "525812",
        "./1fae8.svg": "334154",
        "./1faf0-1f3fb.svg": "876228",
        "./1faf0-1f3fc.svg": "452749",
        "./1faf0-1f3fd.svg": "43763",
        "./1faf0-1f3fe.svg": "225402",
        "./1faf0-1f3ff.svg": "427105",
        "./1faf0.svg": "32379",
        "./1faf1-1f3fb-200d-1faf2-1f3fc.svg": "631100",
        "./1faf1-1f3fb-200d-1faf2-1f3fd.svg": "317694",
        "./1faf1-1f3fb-200d-1faf2-1f3fe.svg": "105053",
        "./1faf1-1f3fb-200d-1faf2-1f3ff.svg": "519203",
        "./1faf1-1f3fb.svg": "399026",
        "./1faf1-1f3fc-200d-1faf2-1f3fb.svg": "643470",
        "./1faf1-1f3fc-200d-1faf2-1f3fd.svg": "834538",
        "./1faf1-1f3fc-200d-1faf2-1f3fe.svg": "217287",
        "./1faf1-1f3fc-200d-1faf2-1f3ff.svg": "499331",
        "./1faf1-1f3fc.svg": "138136",
        "./1faf1-1f3fd-200d-1faf2-1f3fb.svg": "83714",
        "./1faf1-1f3fd-200d-1faf2-1f3fc.svg": "480592",
        "./1faf1-1f3fd-200d-1faf2-1f3fe.svg": "911207",
        "./1faf1-1f3fd-200d-1faf2-1f3ff.svg": "813964",
        "./1faf1-1f3fd.svg": "74594",
        "./1faf1-1f3fe-200d-1faf2-1f3fb.svg": "934164",
        "./1faf1-1f3fe-200d-1faf2-1f3fc.svg": "338805",
        "./1faf1-1f3fe-200d-1faf2-1f3fd.svg": "508593",
        "./1faf1-1f3fe-200d-1faf2-1f3ff.svg": "853834",
        "./1faf1-1f3fe.svg": "54429",
        "./1faf1-1f3ff-200d-1faf2-1f3fb.svg": "352662",
        "./1faf1-1f3ff-200d-1faf2-1f3fc.svg": "585191",
        "./1faf1-1f3ff-200d-1faf2-1f3fd.svg": "497731",
        "./1faf1-1f3ff-200d-1faf2-1f3fe.svg": "986028",
        "./1faf1-1f3ff.svg": "724667",
        "./1faf1.svg": "957941",
        "./1faf2-1f3fb.svg": "366044",
        "./1faf2-1f3fc.svg": "480087",
        "./1faf2-1f3fd.svg": "8773",
        "./1faf2-1f3fe.svg": "952573",
        "./1faf2-1f3ff.svg": "188980",
        "./1faf2.svg": "949752",
        "./1faf3-1f3fb.svg": "170871",
        "./1faf3-1f3fc.svg": "390563",
        "./1faf3-1f3fd.svg": "792040",
        "./1faf3-1f3fe.svg": "347058",
        "./1faf3-1f3ff.svg": "644498",
        "./1faf3.svg": "897433",
        "./1faf4-1f3fb.svg": "424712",
        "./1faf4-1f3fc.svg": "568598",
        "./1faf4-1f3fd.svg": "600737",
        "./1faf4-1f3fe.svg": "854726",
        "./1faf4-1f3ff.svg": "853079",
        "./1faf4.svg": "712855",
        "./1faf5-1f3fb.svg": "78148",
        "./1faf5-1f3fc.svg": "361119",
        "./1faf5-1f3fd.svg": "916229",
        "./1faf5-1f3fe.svg": "753504",
        "./1faf5-1f3ff.svg": "326973",
        "./1faf5.svg": "470224",
        "./1faf6-1f3fb.svg": "300383",
        "./1faf6-1f3fc.svg": "38647",
        "./1faf6-1f3fd.svg": "910955",
        "./1faf6-1f3fe.svg": "211703",
        "./1faf6-1f3ff.svg": "815251",
        "./1faf6.svg": "36855",
        "./1faf7-1f3fb.svg": "809986",
        "./1faf7-1f3fc.svg": "391161",
        "./1faf7-1f3fd.svg": "903649",
        "./1faf7-1f3fe.svg": "172184",
        "./1faf7-1f3ff.svg": "24964",
        "./1faf7.svg": "132772",
        "./1faf8-1f3fb.svg": "534903",
        "./1faf8-1f3fc.svg": "859341",
        "./1faf8-1f3fd.svg": "239474",
        "./1faf8-1f3fe.svg": "131682",
        "./1faf8-1f3ff.svg": "863639",
        "./1faf8.svg": "143146",
        "./203c.svg": "489938",
        "./2049.svg": "859987",
        "./2122.svg": "705423",
        "./2139.svg": "542983",
        "./2194.svg": "834250",
        "./2195.svg": "587582",
        "./2196.svg": "203229",
        "./2197.svg": "26690",
        "./2198.svg": "448058",
        "./2199.svg": "811075",
        "./21a9.svg": "926096",
        "./21aa.svg": "888333",
        "./23-20e3.svg": "95235",
        "./231a.svg": "165",
        "./231b.svg": "32630",
        "./2328.svg": "966902",
        "./23cf.svg": "723265",
        "./23e9.svg": "669306",
        "./23ea.svg": "584842",
        "./23eb.svg": "660019",
        "./23ec.svg": "834464",
        "./23ed.svg": "801068",
        "./23ee.svg": "266924",
        "./23ef.svg": "55390",
        "./23f0.svg": "272970",
        "./23f1.svg": "638582",
        "./23f2.svg": "237266",
        "./23f3.svg": "868298",
        "./23f8.svg": "310300",
        "./23f9.svg": "305534",
        "./23fa.svg": "952362",
        "./24c2.svg": "997417",
        "./25aa.svg": "319119",
        "./25ab.svg": "349873",
        "./25b6.svg": "947243",
        "./25c0.svg": "745084",
        "./25fb.svg": "31401",
        "./25fc.svg": "844347",
        "./25fd.svg": "265447",
        "./25fe.svg": "84425",
        "./2600.svg": "423695",
        "./2601.svg": "903009",
        "./2602.svg": "939069",
        "./2603.svg": "399574",
        "./2604.svg": "203036",
        "./260e.svg": "413186",
        "./2611.svg": "20866",
        "./2614.svg": "177310",
        "./2615.svg": "816012",
        "./2618.svg": "995932",
        "./261d-1f3fb.svg": "652592",
        "./261d-1f3fc.svg": "202928",
        "./261d-1f3fd.svg": "14515",
        "./261d-1f3fe.svg": "295197",
        "./261d-1f3ff.svg": "196338",
        "./261d.svg": "245337",
        "./2620.svg": "289775",
        "./2622.svg": "65390",
        "./2623.svg": "580216",
        "./2626.svg": "562144",
        "./262a.svg": "464280",
        "./262e.svg": "821802",
        "./262f.svg": "250769",
        "./2638.svg": "264849",
        "./2639.svg": "772454",
        "./263a.svg": "609192",
        "./2640.svg": "275554",
        "./2642.svg": "937640",
        "./2648.svg": "76552",
        "./2649.svg": "48656",
        "./264a.svg": "789966",
        "./264b.svg": "663427",
        "./264c.svg": "905894",
        "./264d.svg": "932393",
        "./264e.svg": "744690",
        "./264f.svg": "196666",
        "./2650.svg": "187483",
        "./2651.svg": "278729",
        "./2652.svg": "993944",
        "./2653.svg": "999811",
        "./265f.svg": "35599",
        "./2660.svg": "831702",
        "./2663.svg": "74940",
        "./2665.svg": "794629",
        "./2666.svg": "100153",
        "./2668.svg": "870343",
        "./267b.svg": "520376",
        "./267e.svg": "608204",
        "./267f.svg": "502079",
        "./2692.svg": "989194",
        "./2693.svg": "405242",
        "./2694.svg": "674272",
        "./2695.svg": "322085",
        "./2696.svg": "398133",
        "./2697.svg": "8447",
        "./2699.svg": "176621",
        "./269b.svg": "440117",
        "./269c.svg": "426422",
        "./26a0.svg": "971051",
        "./26a1.svg": "31867",
        "./26a7.svg": "470169",
        "./26aa.svg": "987842",
        "./26ab.svg": "679070",
        "./26b0.svg": "160031",
        "./26b1.svg": "516720",
        "./26bd.svg": "840136",
        "./26be.svg": "992863",
        "./26c4.svg": "732000",
        "./26c5.svg": "842682",
        "./26c8.svg": "728509",
        "./26ce.svg": "470150",
        "./26cf.svg": "176468",
        "./26d1.svg": "391100",
        "./26d3.svg": "699345",
        "./26d4.svg": "142765",
        "./26e9.svg": "943812",
        "./26ea.svg": "856985",
        "./26f0.svg": "208821",
        "./26f1.svg": "237753",
        "./26f2.svg": "568809",
        "./26f3.svg": "256422",
        "./26f4.svg": "27851",
        "./26f5.svg": "68570",
        "./26f7-1f3fb.svg": "225580",
        "./26f7-1f3fc.svg": "313060",
        "./26f7-1f3fd.svg": "130669",
        "./26f7-1f3fe.svg": "347294",
        "./26f7-1f3ff.svg": "982139",
        "./26f7.svg": "505044",
        "./26f8.svg": "473147",
        "./26f9-1f3fb-200d-2640-fe0f.svg": "303016",
        "./26f9-1f3fb-200d-2642-fe0f.svg": "283924",
        "./26f9-1f3fb.svg": "608817",
        "./26f9-1f3fc-200d-2640-fe0f.svg": "907650",
        "./26f9-1f3fc-200d-2642-fe0f.svg": "455217",
        "./26f9-1f3fc.svg": "487377",
        "./26f9-1f3fd-200d-2640-fe0f.svg": "860887",
        "./26f9-1f3fd-200d-2642-fe0f.svg": "29861",
        "./26f9-1f3fd.svg": "993922",
        "./26f9-1f3fe-200d-2640-fe0f.svg": "741818",
        "./26f9-1f3fe-200d-2642-fe0f.svg": "599074",
        "./26f9-1f3fe.svg": "777195",
        "./26f9-1f3ff-200d-2640-fe0f.svg": "636149",
        "./26f9-1f3ff-200d-2642-fe0f.svg": "378359",
        "./26f9-1f3ff.svg": "224630",
        "./26f9-fe0f-200d-2640-fe0f.svg": "962443",
        "./26f9-fe0f-200d-2642-fe0f.svg": "158669",
        "./26f9.svg": "872648",
        "./26fa.svg": "782512",
        "./26fd.svg": "630633",
        "./2702.svg": "70207",
        "./2705.svg": "638021",
        "./2708.svg": "927628",
        "./2709.svg": "495110",
        "./270a-1f3fb.svg": "694743",
        "./270a-1f3fc.svg": "150860",
        "./270a-1f3fd.svg": "429828",
        "./270a-1f3fe.svg": "768029",
        "./270a-1f3ff.svg": "821462",
        "./270a.svg": "293199",
        "./270b-1f3fb.svg": "750865",
        "./270b-1f3fc.svg": "185473",
        "./270b-1f3fd.svg": "949555",
        "./270b-1f3fe.svg": "539003",
        "./270b-1f3ff.svg": "825825",
        "./270b.svg": "909683",
        "./270c-1f3fb.svg": "454371",
        "./270c-1f3fc.svg": "120213",
        "./270c-1f3fd.svg": "785666",
        "./270c-1f3fe.svg": "274599",
        "./270c-1f3ff.svg": "241456",
        "./270c.svg": "372539",
        "./270d-1f3fb.svg": "145517",
        "./270d-1f3fc.svg": "274217",
        "./270d-1f3fd.svg": "686827",
        "./270d-1f3fe.svg": "199153",
        "./270d-1f3ff.svg": "839652",
        "./270d.svg": "758880",
        "./270f.svg": "470737",
        "./2712.svg": "466509",
        "./2714.svg": "137108",
        "./2716.svg": "483105",
        "./271d.svg": "787956",
        "./2721.svg": "513427",
        "./2728.svg": "666859",
        "./2733.svg": "863192",
        "./2734.svg": "979212",
        "./2744.svg": "107414",
        "./2747.svg": "521263",
        "./274c.svg": "555312",
        "./274e.svg": "679248",
        "./2753.svg": "560982",
        "./2754.svg": "694708",
        "./2755.svg": "51849",
        "./2757.svg": "200308",
        "./2763.svg": "570566",
        "./2764-fe0f-200d-1f525.svg": "169504",
        "./2764-fe0f-200d-1fa79.svg": "896813",
        "./2764.svg": "85236",
        "./2795.svg": "794631",
        "./2796.svg": "290508",
        "./2797.svg": "160297",
        "./27a1.svg": "797895",
        "./27b0.svg": "826203",
        "./27bf.svg": "606949",
        "./2934.svg": "412121",
        "./2935.svg": "605993",
        "./2a-20e3.svg": "224570",
        "./2b05.svg": "666895",
        "./2b06.svg": "973653",
        "./2b07.svg": "619710",
        "./2b1b.svg": "558925",
        "./2b1c.svg": "837959",
        "./2b50.svg": "416628",
        "./2b55.svg": "736726",
        "./30-20e3.svg": "338337",
        "./3030.svg": "969417",
        "./303d.svg": "464132",
        "./31-20e3.svg": "385005",
        "./32-20e3.svg": "412574",
        "./3297.svg": "288554",
        "./3299.svg": "855282",
        "./33-20e3.svg": "18819",
        "./34-20e3.svg": "521486",
        "./35-20e3.svg": "907362",
        "./36-20e3.svg": "269684",
        "./37-20e3.svg": "119217",
        "./38-20e3.svg": "554025",
        "./39-20e3.svg": "824219",
        "./a9.svg": "206249",
        "./ae.svg": "984063",
        "./e50a.svg": "55612",
      };
      function i(e) {
        return n(r(e));
      }
      function r(e) {
        if (!n.o(s, e)) {
          var t = Error("Cannot find module '" + e + "'");
          throw ((t.code = "MODULE_NOT_FOUND"), t);
        }
        return s[e];
      }
      (i.id = '"964191"'),
        (i.keys = function () {
          return Object.keys(s);
        }),
        (i.resolve = r),
        (e.exports = i);
    },
    482682: function (e, t, n) {
      "use strict";
      e.exports = n.p + "63900a1ba1f23d305c53.png";
    },
    752028: function (e, t, n) {
      "use strict";
      e.exports = n.p + "2d8d31d0ce7c0e673266.png";
    },
    733949: function (e, t, n) {
      "use strict";
      e.exports = n.p + "a5bb35518e19a27b57be.png";
    },
    74830: function (e, t, n) {
      "use strict";
      e.exports = n.p + "16b667dc5539a47aa346.svg";
    },
    281332: function (e, t, n) {
      "use strict";
      e.exports = n.p + "b0efcdc15f8bd689c89f.svg";
    },
    321161: function (e, t, n) {
      "use strict";
      e.exports = n.p + "6d387ec5eedee450a1c6.svg";
    },
    671231: function (e, t, n) {
      "use strict";
      e.exports = n.p + "6adc630fe0534895ff0f.mp4";
    },
    647248: function (e, t, n) {
      "use strict";
      e.exports = n.p + "f3c9e56752e6e7dae615.mp4";
    },
    912855: function (e, t, n) {
      "use strict";
      e.exports = n.p + "61220d00e627e7f4a440.png";
    },
    320236: function (e, t, n) {
      "use strict";
      e.exports = n.p + "c3f841e9edf0f8c90ca2.mp4";
    },
    502058: function (e, t, n) {
      "use strict";
      e.exports = n.p + "c694675351be2cd8923b.png";
    },
    794951: function (e, t, n) {
      "use strict";
      e.exports = n.p + "0a10740d903f2a7e3f1e.png";
    },
    655142: function (e, t, n) {
      "use strict";
      e.exports = n.p + "4c6d753b661bdac6ed49.png";
    },
    166453: function (e, t, n) {
      "use strict";
      e.exports = n.p + "a1aa5e5cf3f255bb84cd.mp4";
    },
    603882: function (e, t, n) {},
    223686: function (e, t, n) {},
    908690: function (e, t, n) {},
    252602: function (e, t, n) {},
    260907: function (e, t, n) {},
    523558: function (e, t, n) {
      "use strict";
      e.exports = JSON.parse(
        '{">:(":"angry",">:-(":"angry",">=(":"angry",">=-(":"angry",":\\")":"blush",":-\\")":"blush","=\\")":"blush","=-\\")":"blush","</3":"broken_heart","<\\\\3":"broken_heart",":-\\\\":"confused",":-/":"confused","=-\\\\":"confused","=-/":"confused",":\'(":"cry",":\'-(":"cry",":,(":"cry",":,-(":"cry","=\'(":"cry","=\'-(":"cry","=,(":"cry","=,-(":"cry",":(":"frowning",":-(":"frowning","=(":"frowning","=-(":"frowning","<3":"heart","♡":"heart","]:(":"imp","]:-(":"imp","]=(":"imp","]=-(":"imp","o:)":"innocent","O:)":"innocent","o:-)":"innocent","O:-)":"innocent","0:)":"innocent","0:-)":"innocent","o=)":"innocent","O=)":"innocent","o=-)":"innocent","O=-)":"innocent","0=)":"innocent","0=-)":"innocent",":\'D":"joy",":\'-D":"joy",":,D":"joy",":,-D":"joy","=\'D":"joy","=\'-D":"joy","=,D":"joy","=,-D":"joy",":*":"kissing",":-*":"kissing","=*":"kissing","=-*":"kissing","x-)":"laughing","X-)":"laughing",":|":"neutral_face",":-|":"neutral_face","=|":"neutral_face","=-|":"neutral_face",":o":"open_mouth",":-o":"open_mouth",":O":"open_mouth",":-O":"open_mouth","=o":"open_mouth","=-o":"open_mouth","=O":"open_mouth","=-O":"open_mouth",":@":"rage",":-@":"rage","=@":"rage","=-@":"rage",":D":"smile",":-D":"smile","=D":"smile","=-D":"smile",":\')":"smiling_face_with_tear",":\'-)":"smiling_face_with_tear",":,)":"smiling_face_with_tear",":,-)":"smiling_face_with_tear","=\')":"smiling_face_with_tear","=\'-)":"smiling_face_with_tear","=,)":"smiling_face_with_tear","=,-)":"smiling_face_with_tear",":)":"slight_smile",":-)":"slight_smile","=)":"slight_smile","=-)":"slight_smile","]:)":"smiling_imp","]:-)":"smiling_imp","]=)":"smiling_imp","]=-)":"smiling_imp",":,\'(":"sob",":,\'-(":"sob",";(":"sob",";-(":"sob","=,\'(":"sob","=,\'-(":"sob",":P":"stuck_out_tongue",":-P":"stuck_out_tongue","=P":"stuck_out_tongue","=-P":"stuck_out_tongue","8-)":"sunglasses","B-)":"sunglasses",",:(":"sweat",",:-(":"sweat",",=(":"sweat",",=-(":"sweat",",:)":"sweat_smile",",:-)":"sweat_smile",",=)":"sweat_smile",",=-)":"sweat_smile",":s":"unamused",":-S":"unamused",":z":"unamused",":-Z":"unamused",":$":"unamused",":-$":"unamused","=s":"unamused","=-S":"unamused","=z":"unamused","=-Z":"unamused","=$":"unamused","=-$":"unamused",";)":"wink",";-)":"wink"}'
      );
    },
    5420: function (e, t, n) {
      "use strict";
      e.exports = JSON.parse(
        '{"people":[{"names":["grinning","grinning_face"],"surrogates":"\uD83D\uDE00","unicodeVersion":6.1},{"names":["smiley"],"surrogates":"\uD83D\uDE03","unicodeVersion":6},{"names":["smile"],"surrogates":"\uD83D\uDE04","unicodeVersion":6},{"names":["grin"],"surrogates":"\uD83D\uDE01","unicodeVersion":6},{"names":["laughing","satisfied"],"surrogates":"\uD83D\uDE06","unicodeVersion":6},{"names":["face_holding_back_tears"],"surrogates":"\uD83E\uDD79","unicodeVersion":14},{"names":["sweat_smile"],"surrogates":"\uD83D\uDE05","unicodeVersion":6},{"names":["joy"],"surrogates":"\uD83D\uDE02","unicodeVersion":6},{"names":["rofl","rolling_on_the_floor_laughing"],"surrogates":"\uD83E\uDD23","unicodeVersion":9},{"names":["smiling_face_with_tear"],"surrogates":"\uD83E\uDD72","unicodeVersion":13},{"names":["relaxed","smiling_face"],"surrogates":"☺️","unicodeVersion":1.1},{"names":["blush"],"surrogates":"\uD83D\uDE0A","unicodeVersion":6},{"names":["innocent"],"surrogates":"\uD83D\uDE07","unicodeVersion":6},{"names":["slight_smile","slightly_smiling_face"],"surrogates":"\uD83D\uDE42","unicodeVersion":7},{"names":["upside_down","upside_down_face"],"surrogates":"\uD83D\uDE43","unicodeVersion":8},{"names":["wink","winking_face"],"surrogates":"\uD83D\uDE09","unicodeVersion":6},{"names":["relieved","relieved_face"],"surrogates":"\uD83D\uDE0C","unicodeVersion":6},{"names":["heart_eyes"],"surrogates":"\uD83D\uDE0D","unicodeVersion":6},{"names":["smiling_face_with_3_hearts"],"surrogates":"\uD83E\uDD70","unicodeVersion":11},{"names":["kissing_heart"],"surrogates":"\uD83D\uDE18","unicodeVersion":6},{"names":["kissing","kissing_face"],"surrogates":"\uD83D\uDE17","unicodeVersion":6.1},{"names":["kissing_smiling_eyes"],"surrogates":"\uD83D\uDE19","unicodeVersion":6.1},{"names":["kissing_closed_eyes"],"surrogates":"\uD83D\uDE1A","unicodeVersion":6},{"names":["yum"],"surrogates":"\uD83D\uDE0B","unicodeVersion":6},{"names":["stuck_out_tongue"],"surrogates":"\uD83D\uDE1B","unicodeVersion":6.1},{"names":["stuck_out_tongue_closed_eyes"],"surrogates":"\uD83D\uDE1D","unicodeVersion":6},{"names":["stuck_out_tongue_winking_eye"],"surrogates":"\uD83D\uDE1C","unicodeVersion":6},{"names":["zany_face"],"surrogates":"\uD83E\uDD2A","unicodeVersion":10},{"names":["face_with_raised_eyebrow"],"surrogates":"\uD83E\uDD28","unicodeVersion":10},{"names":["face_with_monocle"],"surrogates":"\uD83E\uDDD0","unicodeVersion":10},{"names":["nerd","nerd_face"],"surrogates":"\uD83E\uDD13","unicodeVersion":8},{"names":["sunglasses"],"surrogates":"\uD83D\uDE0E","unicodeVersion":6},{"names":["disguised_face"],"surrogates":"\uD83E\uDD78","unicodeVersion":13},{"names":["star_struck"],"surrogates":"\uD83E\uDD29","unicodeVersion":10},{"names":["partying_face"],"surrogates":"\uD83E\uDD73","unicodeVersion":11},{"names":["smirk","smirking_face"],"surrogates":"\uD83D\uDE0F","unicodeVersion":6},{"names":["unamused","unamused_face"],"surrogates":"\uD83D\uDE12","unicodeVersion":6},{"names":["disappointed"],"surrogates":"\uD83D\uDE1E","unicodeVersion":6},{"names":["pensive","pensive_face"],"surrogates":"\uD83D\uDE14","unicodeVersion":6},{"names":["worried","worried_face"],"surrogates":"\uD83D\uDE1F","unicodeVersion":6.1},{"names":["confused","confused_face"],"surrogates":"\uD83D\uDE15","unicodeVersion":6.1},{"names":["slight_frown","slightly_frowning_face"],"surrogates":"\uD83D\uDE41","unicodeVersion":7},{"names":["frowning2","white_frowning_face","frowning_face"],"surrogates":"☹️","unicodeVersion":1.1},{"names":["persevere"],"surrogates":"\uD83D\uDE23","unicodeVersion":6},{"names":["confounded"],"surrogates":"\uD83D\uDE16","unicodeVersion":6},{"names":["tired_face"],"surrogates":"\uD83D\uDE2B","unicodeVersion":6},{"names":["weary","weary_face"],"surrogates":"\uD83D\uDE29","unicodeVersion":6},{"names":["pleading_face"],"surrogates":"\uD83E\uDD7A","unicodeVersion":11},{"names":["cry","crying_face"],"surrogates":"\uD83D\uDE22","unicodeVersion":6},{"names":["sob"],"surrogates":"\uD83D\uDE2D","unicodeVersion":6},{"names":["triumph"],"surrogates":"\uD83D\uDE24","unicodeVersion":6},{"names":["angry","angry_face"],"surrogates":"\uD83D\uDE20","unicodeVersion":6},{"names":["rage","pouting_face"],"surrogates":"\uD83D\uDE21","unicodeVersion":6},{"names":["face_with_symbols_over_mouth"],"surrogates":"\uD83E\uDD2C","unicodeVersion":10},{"names":["exploding_head"],"surrogates":"\uD83E\uDD2F","unicodeVersion":10},{"names":["flushed","flushed_face"],"surrogates":"\uD83D\uDE33","unicodeVersion":6},{"names":["hot_face"],"surrogates":"\uD83E\uDD75","unicodeVersion":11},{"names":["cold_face"],"surrogates":"\uD83E\uDD76","unicodeVersion":11},{"names":["face_in_clouds"],"surrogates":"\uD83D\uDE36‍\uD83C\uDF2B️","unicodeVersion":13.1},{"names":["scream"],"surrogates":"\uD83D\uDE31","unicodeVersion":6},{"names":["fearful","fearful_face"],"surrogates":"\uD83D\uDE28","unicodeVersion":6},{"names":["cold_sweat"],"surrogates":"\uD83D\uDE30","unicodeVersion":6},{"names":["disappointed_relieved"],"surrogates":"\uD83D\uDE25","unicodeVersion":6},{"names":["sweat"],"surrogates":"\uD83D\uDE13","unicodeVersion":6},{"names":["hugging","hugging_face"],"surrogates":"\uD83E\uDD17","unicodeVersion":8},{"names":["thinking","thinking_face"],"surrogates":"\uD83E\uDD14","unicodeVersion":8},{"names":["face_with_peeking_eye"],"surrogates":"\uD83E\uDEE3","unicodeVersion":14},{"names":["face_with_hand_over_mouth"],"surrogates":"\uD83E\uDD2D","unicodeVersion":10},{"names":["face_with_open_eyes_and_hand_over_mouth"],"surrogates":"\uD83E\uDEE2","unicodeVersion":14},{"names":["saluting_face"],"surrogates":"\uD83E\uDEE1","unicodeVersion":14},{"names":["shushing_face"],"surrogates":"\uD83E\uDD2B","unicodeVersion":10},{"names":["melting_face"],"surrogates":"\uD83E\uDEE0","unicodeVersion":14},{"names":["lying_face","liar"],"surrogates":"\uD83E\uDD25","unicodeVersion":9},{"names":["no_mouth"],"surrogates":"\uD83D\uDE36","unicodeVersion":6},{"names":["dotted_line_face"],"surrogates":"\uD83E\uDEE5","unicodeVersion":14},{"names":["neutral_face"],"surrogates":"\uD83D\uDE10","unicodeVersion":6},{"names":["face_with_diagonal_mouth"],"surrogates":"\uD83E\uDEE4","unicodeVersion":14},{"names":["expressionless"],"surrogates":"\uD83D\uDE11","unicodeVersion":6.1},{"names":["shaking_face"],"surrogates":"\uD83E\uDEE8","unicodeVersion":15},{"names":["grimacing"],"surrogates":"\uD83D\uDE2C","unicodeVersion":6.1},{"names":["rolling_eyes","face_with_rolling_eyes"],"surrogates":"\uD83D\uDE44","unicodeVersion":8},{"names":["hushed","hushed_face"],"surrogates":"\uD83D\uDE2F","unicodeVersion":6.1},{"names":["frowning"],"surrogates":"\uD83D\uDE26","unicodeVersion":6.1},{"names":["anguished"],"surrogates":"\uD83D\uDE27","unicodeVersion":6.1},{"names":["open_mouth"],"surrogates":"\uD83D\uDE2E","unicodeVersion":6.1},{"names":["astonished"],"surrogates":"\uD83D\uDE32","unicodeVersion":6},{"names":["yawning_face"],"surrogates":"\uD83E\uDD71","unicodeVersion":12},{"names":["sleeping","sleeping_face"],"surrogates":"\uD83D\uDE34","unicodeVersion":6.1},{"names":["drooling_face","drool"],"surrogates":"\uD83E\uDD24","unicodeVersion":9},{"names":["sleepy","sleepy_face"],"surrogates":"\uD83D\uDE2A","unicodeVersion":6},{"names":["face_exhaling"],"surrogates":"\uD83D\uDE2E‍\uD83D\uDCA8","unicodeVersion":13.1},{"names":["dizzy_face"],"surrogates":"\uD83D\uDE35","unicodeVersion":6},{"names":["face_with_spiral_eyes"],"surrogates":"\uD83D\uDE35‍\uD83D\uDCAB","unicodeVersion":13.1},{"names":["zipper_mouth","zipper_mouth_face"],"surrogates":"\uD83E\uDD10","unicodeVersion":8},{"names":["woozy_face"],"surrogates":"\uD83E\uDD74","unicodeVersion":11},{"names":["nauseated_face","sick"],"surrogates":"\uD83E\uDD22","unicodeVersion":9},{"names":["face_vomiting"],"surrogates":"\uD83E\uDD2E","unicodeVersion":10},{"names":["sneezing_face","sneeze"],"surrogates":"\uD83E\uDD27","unicodeVersion":9},{"names":["mask"],"surrogates":"\uD83D\uDE37","unicodeVersion":6},{"names":["thermometer_face","face_with_thermometer"],"surrogates":"\uD83E\uDD12","unicodeVersion":8},{"names":["head_bandage","face_with_head_bandage"],"surrogates":"\uD83E\uDD15","unicodeVersion":8},{"names":["money_mouth","money_mouth_face"],"surrogates":"\uD83E\uDD11","unicodeVersion":8},{"names":["cowboy","face_with_cowboy_hat"],"surrogates":"\uD83E\uDD20","unicodeVersion":9},{"names":["smiling_imp"],"surrogates":"\uD83D\uDE08","unicodeVersion":6},{"names":["imp"],"surrogates":"\uD83D\uDC7F","unicodeVersion":6},{"names":["japanese_ogre","ogre"],"surrogates":"\uD83D\uDC79","unicodeVersion":6},{"names":["japanese_goblin","goblin"],"surrogates":"\uD83D\uDC7A","unicodeVersion":6},{"names":["clown","clown_face"],"surrogates":"\uD83E\uDD21","unicodeVersion":9},{"names":["poop","shit","hankey","poo","pile_of_poo"],"surrogates":"\uD83D\uDCA9","unicodeVersion":6},{"names":["ghost"],"surrogates":"\uD83D\uDC7B","unicodeVersion":6},{"names":["skull","skeleton"],"surrogates":"\uD83D\uDC80","unicodeVersion":6},{"names":["skull_crossbones","skull_and_crossbones"],"surrogates":"☠️","unicodeVersion":1.1},{"names":["alien"],"surrogates":"\uD83D\uDC7D","unicodeVersion":6},{"names":["space_invader","alien_monster"],"surrogates":"\uD83D\uDC7E","unicodeVersion":6},{"names":["robot","robot_face"],"surrogates":"\uD83E\uDD16","unicodeVersion":8},{"names":["jack_o_lantern"],"surrogates":"\uD83C\uDF83","unicodeVersion":6},{"names":["smiley_cat","grinning_cat"],"surrogates":"\uD83D\uDE3A","unicodeVersion":6},{"names":["smile_cat"],"surrogates":"\uD83D\uDE38","unicodeVersion":6},{"names":["joy_cat"],"surrogates":"\uD83D\uDE39","unicodeVersion":6},{"names":["heart_eyes_cat"],"surrogates":"\uD83D\uDE3B","unicodeVersion":6},{"names":["smirk_cat"],"surrogates":"\uD83D\uDE3C","unicodeVersion":6},{"names":["kissing_cat"],"surrogates":"\uD83D\uDE3D","unicodeVersion":6},{"names":["scream_cat","weary_cat"],"surrogates":"\uD83D\uDE40","unicodeVersion":6},{"names":["crying_cat_face","crying_cat"],"surrogates":"\uD83D\uDE3F","unicodeVersion":6},{"names":["pouting_cat"],"surrogates":"\uD83D\uDE3E","unicodeVersion":6},{"names":["heart_hands"],"surrogates":"\uD83E\uDEF6","unicodeVersion":14,"hasDiversity":true,"diversityChildren":[{"names":["heart_hands_tone1","heart_hands_light_skin_tone"],"surrogates":"\uD83E\uDEF6\uD83C\uDFFB","unicodeVersion":14,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["heart_hands_tone2","heart_hands_medium_light_skin_tone"],"surrogates":"\uD83E\uDEF6\uD83C\uDFFC","unicodeVersion":14,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["heart_hands_tone3","heart_hands_medium_skin_tone"],"surrogates":"\uD83E\uDEF6\uD83C\uDFFD","unicodeVersion":14,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["heart_hands_tone4","heart_hands_medium_dark_skin_tone"],"surrogates":"\uD83E\uDEF6\uD83C\uDFFE","unicodeVersion":14,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["heart_hands_tone5","heart_hands_dark_skin_tone"],"surrogates":"\uD83E\uDEF6\uD83C\uDFFF","unicodeVersion":14,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["palms_up_together"],"surrogates":"\uD83E\uDD32","unicodeVersion":10,"hasDiversity":true,"diversityChildren":[{"names":["palms_up_together_tone1","palms_up_together_light_skin_tone"],"surrogates":"\uD83E\uDD32\uD83C\uDFFB","unicodeVersion":10,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["palms_up_together_tone2","palms_up_together_medium_light_skin_tone"],"surrogates":"\uD83E\uDD32\uD83C\uDFFC","unicodeVersion":10,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["palms_up_together_tone3","palms_up_together_medium_skin_tone"],"surrogates":"\uD83E\uDD32\uD83C\uDFFD","unicodeVersion":10,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["palms_up_together_tone4","palms_up_together_medium_dark_skin_tone"],"surrogates":"\uD83E\uDD32\uD83C\uDFFE","unicodeVersion":10,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["palms_up_together_tone5","palms_up_together_dark_skin_tone"],"surrogates":"\uD83E\uDD32\uD83C\uDFFF","unicodeVersion":10,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["open_hands"],"surrogates":"\uD83D\uDC50","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["open_hands_tone1"],"surrogates":"\uD83D\uDC50\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["open_hands_tone2"],"surrogates":"\uD83D\uDC50\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["open_hands_tone3"],"surrogates":"\uD83D\uDC50\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["open_hands_tone4"],"surrogates":"\uD83D\uDC50\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["open_hands_tone5"],"surrogates":"\uD83D\uDC50\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["raised_hands","raising_hands"],"surrogates":"\uD83D\uDE4C","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["raised_hands_tone1"],"surrogates":"\uD83D\uDE4C\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["raised_hands_tone2"],"surrogates":"\uD83D\uDE4C\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["raised_hands_tone3"],"surrogates":"\uD83D\uDE4C\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["raised_hands_tone4"],"surrogates":"\uD83D\uDE4C\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["raised_hands_tone5"],"surrogates":"\uD83D\uDE4C\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["clap"],"surrogates":"\uD83D\uDC4F","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["clap_tone1"],"surrogates":"\uD83D\uDC4F\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["clap_tone2"],"surrogates":"\uD83D\uDC4F\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["clap_tone3"],"surrogates":"\uD83D\uDC4F\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["clap_tone4"],"surrogates":"\uD83D\uDC4F\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["clap_tone5"],"surrogates":"\uD83D\uDC4F\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["handshake","shaking_hands"],"surrogates":"\uD83E\uDD1D","unicodeVersion":9,"diversityChildren":[{"names":["handshake_tone1","handshake_light_skin_tone"],"surrogates":"\uD83E\uDD1D\uD83C\uDFFB","unicodeVersion":14,"diversity":["1f3fb"],"hasMultiDiversityParent":true},{"names":["handshake_tone1_tone2","handshake_light_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83E\uDEF1\uD83C\uDFFB‍\uD83E\uDEF2\uD83C\uDFFC","unicodeVersion":14,"diversity":["1f3fb","1f3fc"],"hasMultiDiversityParent":true},{"names":["handshake_tone1_tone3","handshake_light_skin_tone_medium_skin_tone"],"surrogates":"\uD83E\uDEF1\uD83C\uDFFB‍\uD83E\uDEF2\uD83C\uDFFD","unicodeVersion":14,"diversity":["1f3fb","1f3fd"],"hasMultiDiversityParent":true},{"names":["handshake_tone1_tone4","handshake_light_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83E\uDEF1\uD83C\uDFFB‍\uD83E\uDEF2\uD83C\uDFFE","unicodeVersion":14,"diversity":["1f3fb","1f3fe"],"hasMultiDiversityParent":true},{"names":["handshake_tone1_tone5","handshake_light_skin_tone_dark_skin_tone"],"surrogates":"\uD83E\uDEF1\uD83C\uDFFB‍\uD83E\uDEF2\uD83C\uDFFF","unicodeVersion":14,"diversity":["1f3fb","1f3ff"],"hasMultiDiversityParent":true},{"names":["handshake_tone2_tone1","handshake_medium_light_skin_tone_light_skin_tone"],"surrogates":"\uD83E\uDEF1\uD83C\uDFFC‍\uD83E\uDEF2\uD83C\uDFFB","unicodeVersion":14,"diversity":["1f3fc","1f3fb"],"hasMultiDiversityParent":true},{"names":["handshake_tone2","handshake_medium_light_skin_tone"],"surrogates":"\uD83E\uDD1D\uD83C\uDFFC","unicodeVersion":14,"diversity":["1f3fc"],"hasMultiDiversityParent":true},{"names":["handshake_tone2_tone3","handshake_medium_light_skin_tone_medium_skin_tone"],"surrogates":"\uD83E\uDEF1\uD83C\uDFFC‍\uD83E\uDEF2\uD83C\uDFFD","unicodeVersion":14,"diversity":["1f3fc","1f3fd"],"hasMultiDiversityParent":true},{"names":["handshake_tone2_tone4","handshake_medium_light_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83E\uDEF1\uD83C\uDFFC‍\uD83E\uDEF2\uD83C\uDFFE","unicodeVersion":14,"diversity":["1f3fc","1f3fe"],"hasMultiDiversityParent":true},{"names":["handshake_tone2_tone5","handshake_medium_light_skin_tone_dark_skin_tone"],"surrogates":"\uD83E\uDEF1\uD83C\uDFFC‍\uD83E\uDEF2\uD83C\uDFFF","unicodeVersion":14,"diversity":["1f3fc","1f3ff"],"hasMultiDiversityParent":true},{"names":["handshake_tone3_tone1","handshake_medium_skin_tone_light_skin_tone"],"surrogates":"\uD83E\uDEF1\uD83C\uDFFD‍\uD83E\uDEF2\uD83C\uDFFB","unicodeVersion":14,"diversity":["1f3fd","1f3fb"],"hasMultiDiversityParent":true},{"names":["handshake_tone3_tone2","handshake_medium_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83E\uDEF1\uD83C\uDFFD‍\uD83E\uDEF2\uD83C\uDFFC","unicodeVersion":14,"diversity":["1f3fd","1f3fc"],"hasMultiDiversityParent":true},{"names":["handshake_tone3","handshake_medium_skin_tone"],"surrogates":"\uD83E\uDD1D\uD83C\uDFFD","unicodeVersion":14,"diversity":["1f3fd"],"hasMultiDiversityParent":true},{"names":["handshake_tone3_tone4","handshake_medium_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83E\uDEF1\uD83C\uDFFD‍\uD83E\uDEF2\uD83C\uDFFE","unicodeVersion":14,"diversity":["1f3fd","1f3fe"],"hasMultiDiversityParent":true},{"names":["handshake_tone3_tone5","handshake_medium_skin_tone_dark_skin_tone"],"surrogates":"\uD83E\uDEF1\uD83C\uDFFD‍\uD83E\uDEF2\uD83C\uDFFF","unicodeVersion":14,"diversity":["1f3fd","1f3ff"],"hasMultiDiversityParent":true},{"names":["handshake_tone4_tone1","handshake_medium_dark_skin_tone_light_skin_tone"],"surrogates":"\uD83E\uDEF1\uD83C\uDFFE‍\uD83E\uDEF2\uD83C\uDFFB","unicodeVersion":14,"diversity":["1f3fe","1f3fb"],"hasMultiDiversityParent":true},{"names":["handshake_tone4_tone2","handshake_medium_dark_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83E\uDEF1\uD83C\uDFFE‍\uD83E\uDEF2\uD83C\uDFFC","unicodeVersion":14,"diversity":["1f3fe","1f3fc"],"hasMultiDiversityParent":true},{"names":["handshake_tone4_tone3","handshake_medium_dark_skin_tone_medium_skin_tone"],"surrogates":"\uD83E\uDEF1\uD83C\uDFFE‍\uD83E\uDEF2\uD83C\uDFFD","unicodeVersion":14,"diversity":["1f3fe","1f3fd"],"hasMultiDiversityParent":true},{"names":["handshake_tone4","handshake_medium_dark_skin_tone"],"surrogates":"\uD83E\uDD1D\uD83C\uDFFE","unicodeVersion":14,"diversity":["1f3fe"],"hasMultiDiversityParent":true},{"names":["handshake_tone4_tone5","handshake_medium_dark_skin_tone_dark_skin_tone"],"surrogates":"\uD83E\uDEF1\uD83C\uDFFE‍\uD83E\uDEF2\uD83C\uDFFF","unicodeVersion":14,"diversity":["1f3fe","1f3ff"],"hasMultiDiversityParent":true},{"names":["handshake_tone5_tone1","handshake_dark_skin_tone_light_skin_tone"],"surrogates":"\uD83E\uDEF1\uD83C\uDFFF‍\uD83E\uDEF2\uD83C\uDFFB","unicodeVersion":14,"diversity":["1f3ff","1f3fb"],"hasMultiDiversityParent":true},{"names":["handshake_tone5_tone2","handshake_dark_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83E\uDEF1\uD83C\uDFFF‍\uD83E\uDEF2\uD83C\uDFFC","unicodeVersion":14,"diversity":["1f3ff","1f3fc"],"hasMultiDiversityParent":true},{"names":["handshake_tone5_tone3","handshake_dark_skin_tone_medium_skin_tone"],"surrogates":"\uD83E\uDEF1\uD83C\uDFFF‍\uD83E\uDEF2\uD83C\uDFFD","unicodeVersion":14,"diversity":["1f3ff","1f3fd"],"hasMultiDiversityParent":true},{"names":["handshake_tone5_tone4","handshake_dark_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83E\uDEF1\uD83C\uDFFF‍\uD83E\uDEF2\uD83C\uDFFE","unicodeVersion":14,"diversity":["1f3ff","1f3fe"],"hasMultiDiversityParent":true},{"names":["handshake_tone5","handshake_dark_skin_tone"],"surrogates":"\uD83E\uDD1D\uD83C\uDFFF","unicodeVersion":14,"diversity":["1f3ff"],"hasMultiDiversityParent":true}],"hasMultiDiversity":true},{"names":["thumbsup","+1","thumbup","thumbs_up"],"surrogates":"\uD83D\uDC4D","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["thumbsup_tone1","+1_tone1","thumbup_tone1"],"surrogates":"\uD83D\uDC4D\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["thumbsup_tone2","+1_tone2","thumbup_tone2"],"surrogates":"\uD83D\uDC4D\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["thumbsup_tone3","+1_tone3","thumbup_tone3"],"surrogates":"\uD83D\uDC4D\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["thumbsup_tone4","+1_tone4","thumbup_tone4"],"surrogates":"\uD83D\uDC4D\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["thumbsup_tone5","+1_tone5","thumbup_tone5"],"surrogates":"\uD83D\uDC4D\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["thumbsdown","-1","thumbdown","thumbs_down"],"surrogates":"\uD83D\uDC4E","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["thumbsdown_tone1","_1_tone1","thumbdown_tone1"],"surrogates":"\uD83D\uDC4E\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["thumbsdown_tone2","_1_tone2","thumbdown_tone2"],"surrogates":"\uD83D\uDC4E\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["thumbsdown_tone3","_1_tone3","thumbdown_tone3"],"surrogates":"\uD83D\uDC4E\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["thumbsdown_tone4","_1_tone4","thumbdown_tone4"],"surrogates":"\uD83D\uDC4E\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["thumbsdown_tone5","_1_tone5","thumbdown_tone5"],"surrogates":"\uD83D\uDC4E\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["punch","oncoming_fist"],"surrogates":"\uD83D\uDC4A","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["punch_tone1"],"surrogates":"\uD83D\uDC4A\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["punch_tone2"],"surrogates":"\uD83D\uDC4A\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["punch_tone3"],"surrogates":"\uD83D\uDC4A\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["punch_tone4"],"surrogates":"\uD83D\uDC4A\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["punch_tone5"],"surrogates":"\uD83D\uDC4A\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["fist","raised_fist"],"surrogates":"✊","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["fist_tone1"],"surrogates":"✊\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["fist_tone2"],"surrogates":"✊\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["fist_tone3"],"surrogates":"✊\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["fist_tone4"],"surrogates":"✊\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["fist_tone5"],"surrogates":"✊\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["left_facing_fist","left_fist"],"surrogates":"\uD83E\uDD1B","unicodeVersion":9,"hasDiversity":true,"diversityChildren":[{"names":["left_facing_fist_tone1","left_fist_tone1"],"surrogates":"\uD83E\uDD1B\uD83C\uDFFB","unicodeVersion":9,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["left_facing_fist_tone2","left_fist_tone2"],"surrogates":"\uD83E\uDD1B\uD83C\uDFFC","unicodeVersion":9,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["left_facing_fist_tone3","left_fist_tone3"],"surrogates":"\uD83E\uDD1B\uD83C\uDFFD","unicodeVersion":9,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["left_facing_fist_tone4","left_fist_tone4"],"surrogates":"\uD83E\uDD1B\uD83C\uDFFE","unicodeVersion":9,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["left_facing_fist_tone5","left_fist_tone5"],"surrogates":"\uD83E\uDD1B\uD83C\uDFFF","unicodeVersion":9,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["right_facing_fist","right_fist"],"surrogates":"\uD83E\uDD1C","unicodeVersion":9,"hasDiversity":true,"diversityChildren":[{"names":["right_facing_fist_tone1","right_fist_tone1"],"surrogates":"\uD83E\uDD1C\uD83C\uDFFB","unicodeVersion":9,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["right_facing_fist_tone2","right_fist_tone2"],"surrogates":"\uD83E\uDD1C\uD83C\uDFFC","unicodeVersion":9,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["right_facing_fist_tone3","right_fist_tone3"],"surrogates":"\uD83E\uDD1C\uD83C\uDFFD","unicodeVersion":9,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["right_facing_fist_tone4","right_fist_tone4"],"surrogates":"\uD83E\uDD1C\uD83C\uDFFE","unicodeVersion":9,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["right_facing_fist_tone5","right_fist_tone5"],"surrogates":"\uD83E\uDD1C\uD83C\uDFFF","unicodeVersion":9,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["leftwards_pushing_hand"],"surrogates":"\uD83E\uDEF7","unicodeVersion":15,"hasDiversity":true,"diversityChildren":[{"names":["leftwards_pushing_hand_tone1","leftwards_pushing_hand_light_skin_tone"],"surrogates":"\uD83E\uDEF7\uD83C\uDFFB","unicodeVersion":15,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["leftwards_pushing_hand_tone2","leftwards_pushing_hand_medium_light_skin_tone"],"surrogates":"\uD83E\uDEF7\uD83C\uDFFC","unicodeVersion":15,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["leftwards_pushing_hand_tone3","leftwards_pushing_hand_medium_skin_tone"],"surrogates":"\uD83E\uDEF7\uD83C\uDFFD","unicodeVersion":15,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["leftwards_pushing_hand_tone4","leftwards_pushing_hand_medium_dark_skin_tone"],"surrogates":"\uD83E\uDEF7\uD83C\uDFFE","unicodeVersion":15,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["leftwards_pushing_hand_tone5","leftwards_pushing_hand_dark_skin_tone"],"surrogates":"\uD83E\uDEF7\uD83C\uDFFF","unicodeVersion":15,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["rightwards_pushing_hand"],"surrogates":"\uD83E\uDEF8","unicodeVersion":15,"hasDiversity":true,"diversityChildren":[{"names":["rightwards_pushing_hand_tone1","rightwards_pushing_hand_light_skin_tone"],"surrogates":"\uD83E\uDEF8\uD83C\uDFFB","unicodeVersion":15,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["rightwards_pushing_hand_tone2","rightwards_pushing_hand_medium_light_skin_tone"],"surrogates":"\uD83E\uDEF8\uD83C\uDFFC","unicodeVersion":15,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["rightwards_pushing_hand_tone3","rightwards_pushing_hand_medium_skin_tone"],"surrogates":"\uD83E\uDEF8\uD83C\uDFFD","unicodeVersion":15,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["rightwards_pushing_hand_tone4","rightwards_pushing_hand_medium_dark_skin_tone"],"surrogates":"\uD83E\uDEF8\uD83C\uDFFE","unicodeVersion":15,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["rightwards_pushing_hand_tone5","rightwards_pushing_hand_dark_skin_tone"],"surrogates":"\uD83E\uDEF8\uD83C\uDFFF","unicodeVersion":15,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["fingers_crossed","hand_with_index_and_middle_finger_crossed"],"surrogates":"\uD83E\uDD1E","unicodeVersion":9,"hasDiversity":true,"diversityChildren":[{"names":["fingers_crossed_tone1","hand_with_index_and_middle_fingers_crossed_tone1"],"surrogates":"\uD83E\uDD1E\uD83C\uDFFB","unicodeVersion":9,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["fingers_crossed_tone2","hand_with_index_and_middle_fingers_crossed_tone2"],"surrogates":"\uD83E\uDD1E\uD83C\uDFFC","unicodeVersion":9,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["fingers_crossed_tone3","hand_with_index_and_middle_fingers_crossed_tone3"],"surrogates":"\uD83E\uDD1E\uD83C\uDFFD","unicodeVersion":9,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["fingers_crossed_tone4","hand_with_index_and_middle_fingers_crossed_tone4"],"surrogates":"\uD83E\uDD1E\uD83C\uDFFE","unicodeVersion":9,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["fingers_crossed_tone5","hand_with_index_and_middle_fingers_crossed_tone5"],"surrogates":"\uD83E\uDD1E\uD83C\uDFFF","unicodeVersion":9,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["v","victory_hand"],"surrogates":"✌️","unicodeVersion":1.1,"hasDiversity":true,"diversityChildren":[{"names":["v_tone1"],"surrogates":"✌\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["v_tone2"],"surrogates":"✌\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["v_tone3"],"surrogates":"✌\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["v_tone4"],"surrogates":"✌\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["v_tone5"],"surrogates":"✌\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["hand_with_index_finger_and_thumb_crossed"],"surrogates":"\uD83E\uDEF0","unicodeVersion":14,"hasDiversity":true,"diversityChildren":[{"names":["hand_with_index_finger_and_thumb_crossed_tone1","hand_with_index_finger_and_thumb_crossed_light_skin_tone"],"surrogates":"\uD83E\uDEF0\uD83C\uDFFB","unicodeVersion":14,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["hand_with_index_finger_and_thumb_crossed_tone2","hand_with_index_finger_and_thumb_crossed_medium_light_skin_tone"],"surrogates":"\uD83E\uDEF0\uD83C\uDFFC","unicodeVersion":14,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["hand_with_index_finger_and_thumb_crossed_tone3","hand_with_index_finger_and_thumb_crossed_medium_skin_tone"],"surrogates":"\uD83E\uDEF0\uD83C\uDFFD","unicodeVersion":14,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["hand_with_index_finger_and_thumb_crossed_tone4","hand_with_index_finger_and_thumb_crossed_medium_dark_skin_tone"],"surrogates":"\uD83E\uDEF0\uD83C\uDFFE","unicodeVersion":14,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["hand_with_index_finger_and_thumb_crossed_tone5","hand_with_index_finger_and_thumb_crossed_dark_skin_tone"],"surrogates":"\uD83E\uDEF0\uD83C\uDFFF","unicodeVersion":14,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["love_you_gesture"],"surrogates":"\uD83E\uDD1F","unicodeVersion":10,"hasDiversity":true,"diversityChildren":[{"names":["love_you_gesture_tone1","love_you_gesture_light_skin_tone"],"surrogates":"\uD83E\uDD1F\uD83C\uDFFB","unicodeVersion":10,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["love_you_gesture_tone2","love_you_gesture_medium_light_skin_tone"],"surrogates":"\uD83E\uDD1F\uD83C\uDFFC","unicodeVersion":10,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["love_you_gesture_tone3","love_you_gesture_medium_skin_tone"],"surrogates":"\uD83E\uDD1F\uD83C\uDFFD","unicodeVersion":10,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["love_you_gesture_tone4","love_you_gesture_medium_dark_skin_tone"],"surrogates":"\uD83E\uDD1F\uD83C\uDFFE","unicodeVersion":10,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["love_you_gesture_tone5","love_you_gesture_dark_skin_tone"],"surrogates":"\uD83E\uDD1F\uD83C\uDFFF","unicodeVersion":10,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["metal","sign_of_the_horns"],"surrogates":"\uD83E\uDD18","unicodeVersion":8,"hasDiversity":true,"diversityChildren":[{"names":["metal_tone1","sign_of_the_horns_tone1"],"surrogates":"\uD83E\uDD18\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["metal_tone2","sign_of_the_horns_tone2"],"surrogates":"\uD83E\uDD18\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["metal_tone3","sign_of_the_horns_tone3"],"surrogates":"\uD83E\uDD18\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["metal_tone4","sign_of_the_horns_tone4"],"surrogates":"\uD83E\uDD18\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["metal_tone5","sign_of_the_horns_tone5"],"surrogates":"\uD83E\uDD18\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["ok_hand"],"surrogates":"\uD83D\uDC4C","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["ok_hand_tone1"],"surrogates":"\uD83D\uDC4C\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["ok_hand_tone2"],"surrogates":"\uD83D\uDC4C\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["ok_hand_tone3"],"surrogates":"\uD83D\uDC4C\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["ok_hand_tone4"],"surrogates":"\uD83D\uDC4C\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["ok_hand_tone5"],"surrogates":"\uD83D\uDC4C\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["pinched_fingers"],"surrogates":"\uD83E\uDD0C","unicodeVersion":13,"hasDiversity":true,"diversityChildren":[{"names":["pinched_fingers_tone2","pinched_fingers_medium_light_skin_tone"],"surrogates":"\uD83E\uDD0C\uD83C\uDFFC","unicodeVersion":13,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["pinched_fingers_tone1","pinched_fingers_light_skin_tone"],"surrogates":"\uD83E\uDD0C\uD83C\uDFFB","unicodeVersion":13,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["pinched_fingers_tone3","pinched_fingers_medium_skin_tone"],"surrogates":"\uD83E\uDD0C\uD83C\uDFFD","unicodeVersion":13,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["pinched_fingers_tone4","pinched_fingers_medium_dark_skin_tone"],"surrogates":"\uD83E\uDD0C\uD83C\uDFFE","unicodeVersion":13,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["pinched_fingers_tone5","pinched_fingers_dark_skin_tone"],"surrogates":"\uD83E\uDD0C\uD83C\uDFFF","unicodeVersion":13,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["pinching_hand"],"surrogates":"\uD83E\uDD0F","unicodeVersion":12,"hasDiversity":true,"diversityChildren":[{"names":["pinching_hand_tone1","pinching_hand_light_skin_tone"],"surrogates":"\uD83E\uDD0F\uD83C\uDFFB","unicodeVersion":12,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["pinching_hand_tone2","pinching_hand_medium_light_skin_tone"],"surrogates":"\uD83E\uDD0F\uD83C\uDFFC","unicodeVersion":12,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["pinching_hand_tone3","pinching_hand_medium_skin_tone"],"surrogates":"\uD83E\uDD0F\uD83C\uDFFD","unicodeVersion":12,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["pinching_hand_tone4","pinching_hand_medium_dark_skin_tone"],"surrogates":"\uD83E\uDD0F\uD83C\uDFFE","unicodeVersion":12,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["pinching_hand_tone5","pinching_hand_dark_skin_tone"],"surrogates":"\uD83E\uDD0F\uD83C\uDFFF","unicodeVersion":12,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["palm_down_hand"],"surrogates":"\uD83E\uDEF3","unicodeVersion":14,"hasDiversity":true,"diversityChildren":[{"names":["palm_down_hand_tone1","palm_down_hand_light_skin_tone"],"surrogates":"\uD83E\uDEF3\uD83C\uDFFB","unicodeVersion":14,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["palm_down_hand_tone2","palm_down_hand_medium_light_skin_tone"],"surrogates":"\uD83E\uDEF3\uD83C\uDFFC","unicodeVersion":14,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["palm_down_hand_tone3","palm_down_hand_medium_skin_tone"],"surrogates":"\uD83E\uDEF3\uD83C\uDFFD","unicodeVersion":14,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["palm_down_hand_tone4","palm_down_hand_medium_dark_skin_tone"],"surrogates":"\uD83E\uDEF3\uD83C\uDFFE","unicodeVersion":14,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["palm_down_hand_tone5","palm_down_hand_dark_skin_tone"],"surrogates":"\uD83E\uDEF3\uD83C\uDFFF","unicodeVersion":14,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["palm_up_hand"],"surrogates":"\uD83E\uDEF4","unicodeVersion":14,"hasDiversity":true,"diversityChildren":[{"names":["palm_up_hand_tone1","palm_up_hand_light_skin_tone"],"surrogates":"\uD83E\uDEF4\uD83C\uDFFB","unicodeVersion":14,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["palm_up_hand_tone2","palm_up_hand_medium_light_skin_tone"],"surrogates":"\uD83E\uDEF4\uD83C\uDFFC","unicodeVersion":14,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["palm_up_hand_tone3","palm_up_hand_medium_skin_tone"],"surrogates":"\uD83E\uDEF4\uD83C\uDFFD","unicodeVersion":14,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["palm_up_hand_tone4","palm_up_hand_medium_dark_skin_tone"],"surrogates":"\uD83E\uDEF4\uD83C\uDFFE","unicodeVersion":14,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["palm_up_hand_tone5","palm_up_hand_dark_skin_tone"],"surrogates":"\uD83E\uDEF4\uD83C\uDFFF","unicodeVersion":14,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["point_left"],"surrogates":"\uD83D\uDC48","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["point_left_tone1"],"surrogates":"\uD83D\uDC48\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["point_left_tone2"],"surrogates":"\uD83D\uDC48\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["point_left_tone3"],"surrogates":"\uD83D\uDC48\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["point_left_tone4"],"surrogates":"\uD83D\uDC48\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["point_left_tone5"],"surrogates":"\uD83D\uDC48\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["point_right"],"surrogates":"\uD83D\uDC49","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["point_right_tone1"],"surrogates":"\uD83D\uDC49\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["point_right_tone2"],"surrogates":"\uD83D\uDC49\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["point_right_tone3"],"surrogates":"\uD83D\uDC49\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["point_right_tone4"],"surrogates":"\uD83D\uDC49\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["point_right_tone5"],"surrogates":"\uD83D\uDC49\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["point_up_2"],"surrogates":"\uD83D\uDC46","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["point_up_2_tone1"],"surrogates":"\uD83D\uDC46\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["point_up_2_tone2"],"surrogates":"\uD83D\uDC46\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["point_up_2_tone3"],"surrogates":"\uD83D\uDC46\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["point_up_2_tone4"],"surrogates":"\uD83D\uDC46\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["point_up_2_tone5"],"surrogates":"\uD83D\uDC46\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["point_down"],"surrogates":"\uD83D\uDC47","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["point_down_tone1"],"surrogates":"\uD83D\uDC47\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["point_down_tone2"],"surrogates":"\uD83D\uDC47\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["point_down_tone3"],"surrogates":"\uD83D\uDC47\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["point_down_tone4"],"surrogates":"\uD83D\uDC47\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["point_down_tone5"],"surrogates":"\uD83D\uDC47\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["point_up"],"surrogates":"☝️","unicodeVersion":1.1,"hasDiversity":true,"diversityChildren":[{"names":["point_up_tone1"],"surrogates":"☝\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["point_up_tone2"],"surrogates":"☝\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["point_up_tone3"],"surrogates":"☝\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["point_up_tone4"],"surrogates":"☝\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["point_up_tone5"],"surrogates":"☝\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["raised_hand"],"surrogates":"✋","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["raised_hand_tone1"],"surrogates":"✋\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["raised_hand_tone2"],"surrogates":"✋\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["raised_hand_tone3"],"surrogates":"✋\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["raised_hand_tone4"],"surrogates":"✋\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["raised_hand_tone5"],"surrogates":"✋\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["raised_back_of_hand","back_of_hand"],"surrogates":"\uD83E\uDD1A","unicodeVersion":9,"hasDiversity":true,"diversityChildren":[{"names":["raised_back_of_hand_tone1","back_of_hand_tone1"],"surrogates":"\uD83E\uDD1A\uD83C\uDFFB","unicodeVersion":9,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["raised_back_of_hand_tone2","back_of_hand_tone2"],"surrogates":"\uD83E\uDD1A\uD83C\uDFFC","unicodeVersion":9,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["raised_back_of_hand_tone3","back_of_hand_tone3"],"surrogates":"\uD83E\uDD1A\uD83C\uDFFD","unicodeVersion":9,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["raised_back_of_hand_tone4","back_of_hand_tone4"],"surrogates":"\uD83E\uDD1A\uD83C\uDFFE","unicodeVersion":9,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["raised_back_of_hand_tone5","back_of_hand_tone5"],"surrogates":"\uD83E\uDD1A\uD83C\uDFFF","unicodeVersion":9,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["hand_splayed","raised_hand_with_fingers_splayed"],"surrogates":"\uD83D\uDD90️","unicodeVersion":7,"hasDiversity":true,"diversityChildren":[{"names":["hand_splayed_tone1","raised_hand_with_fingers_splayed_tone1"],"surrogates":"\uD83D\uDD90\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["hand_splayed_tone2","raised_hand_with_fingers_splayed_tone2"],"surrogates":"\uD83D\uDD90\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["hand_splayed_tone3","raised_hand_with_fingers_splayed_tone3"],"surrogates":"\uD83D\uDD90\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["hand_splayed_tone4","raised_hand_with_fingers_splayed_tone4"],"surrogates":"\uD83D\uDD90\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["hand_splayed_tone5","raised_hand_with_fingers_splayed_tone5"],"surrogates":"\uD83D\uDD90\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["vulcan","raised_hand_with_part_between_middle_and_ring_fingers","vulcan_salute"],"surrogates":"\uD83D\uDD96","unicodeVersion":7,"hasDiversity":true,"diversityChildren":[{"names":["vulcan_tone1","raised_hand_with_part_between_middle_and_ring_fingers_tone1"],"surrogates":"\uD83D\uDD96\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["vulcan_tone2","raised_hand_with_part_between_middle_and_ring_fingers_tone2"],"surrogates":"\uD83D\uDD96\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["vulcan_tone3","raised_hand_with_part_between_middle_and_ring_fingers_tone3"],"surrogates":"\uD83D\uDD96\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["vulcan_tone4","raised_hand_with_part_between_middle_and_ring_fingers_tone4"],"surrogates":"\uD83D\uDD96\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["vulcan_tone5","raised_hand_with_part_between_middle_and_ring_fingers_tone5"],"surrogates":"\uD83D\uDD96\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["wave","waving_hand"],"surrogates":"\uD83D\uDC4B","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["wave_tone1"],"surrogates":"\uD83D\uDC4B\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["wave_tone2"],"surrogates":"\uD83D\uDC4B\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["wave_tone3"],"surrogates":"\uD83D\uDC4B\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["wave_tone4"],"surrogates":"\uD83D\uDC4B\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["wave_tone5"],"surrogates":"\uD83D\uDC4B\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["call_me","call_me_hand"],"surrogates":"\uD83E\uDD19","unicodeVersion":9,"hasDiversity":true,"diversityChildren":[{"names":["call_me_tone1","call_me_hand_tone1"],"surrogates":"\uD83E\uDD19\uD83C\uDFFB","unicodeVersion":9,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["call_me_tone2","call_me_hand_tone2"],"surrogates":"\uD83E\uDD19\uD83C\uDFFC","unicodeVersion":9,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["call_me_tone3","call_me_hand_tone3"],"surrogates":"\uD83E\uDD19\uD83C\uDFFD","unicodeVersion":9,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["call_me_tone4","call_me_hand_tone4"],"surrogates":"\uD83E\uDD19\uD83C\uDFFE","unicodeVersion":9,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["call_me_tone5","call_me_hand_tone5"],"surrogates":"\uD83E\uDD19\uD83C\uDFFF","unicodeVersion":9,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["leftwards_hand"],"surrogates":"\uD83E\uDEF2","unicodeVersion":14,"hasDiversity":true,"diversityChildren":[{"names":["leftwards_hand_tone1","leftwards_hand_light_skin_tone"],"surrogates":"\uD83E\uDEF2\uD83C\uDFFB","unicodeVersion":14,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["leftwards_hand_tone2","leftwards_hand_medium_light_skin_tone"],"surrogates":"\uD83E\uDEF2\uD83C\uDFFC","unicodeVersion":14,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["leftwards_hand_tone3","leftwards_hand_medium_skin_tone"],"surrogates":"\uD83E\uDEF2\uD83C\uDFFD","unicodeVersion":14,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["leftwards_hand_tone4","leftwards_hand_medium_dark_skin_tone"],"surrogates":"\uD83E\uDEF2\uD83C\uDFFE","unicodeVersion":14,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["leftwards_hand_tone5","leftwards_hand_dark_skin_tone"],"surrogates":"\uD83E\uDEF2\uD83C\uDFFF","unicodeVersion":14,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["rightwards_hand"],"surrogates":"\uD83E\uDEF1","unicodeVersion":14,"hasDiversity":true,"diversityChildren":[{"names":["rightwards_hand_tone1","rightwards_hand_light_skin_tone"],"surrogates":"\uD83E\uDEF1\uD83C\uDFFB","unicodeVersion":14,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["rightwards_hand_tone2","rightwards_hand_medium_light_skin_tone"],"surrogates":"\uD83E\uDEF1\uD83C\uDFFC","unicodeVersion":14,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["rightwards_hand_tone3","rightwards_hand_medium_skin_tone"],"surrogates":"\uD83E\uDEF1\uD83C\uDFFD","unicodeVersion":14,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["rightwards_hand_tone4","rightwards_hand_medium_dark_skin_tone"],"surrogates":"\uD83E\uDEF1\uD83C\uDFFE","unicodeVersion":14,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["rightwards_hand_tone5","rightwards_hand_dark_skin_tone"],"surrogates":"\uD83E\uDEF1\uD83C\uDFFF","unicodeVersion":14,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["muscle","flexed_biceps"],"surrogates":"\uD83D\uDCAA","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["muscle_tone1"],"surrogates":"\uD83D\uDCAA\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["muscle_tone2"],"surrogates":"\uD83D\uDCAA\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["muscle_tone3"],"surrogates":"\uD83D\uDCAA\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["muscle_tone4"],"surrogates":"\uD83D\uDCAA\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["muscle_tone5"],"surrogates":"\uD83D\uDCAA\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["mechanical_arm"],"surrogates":"\uD83E\uDDBE","unicodeVersion":12},{"names":["middle_finger","reversed_hand_with_middle_finger_extended"],"surrogates":"\uD83D\uDD95","unicodeVersion":7,"hasDiversity":true,"diversityChildren":[{"names":["middle_finger_tone1","reversed_hand_with_middle_finger_extended_tone1"],"surrogates":"\uD83D\uDD95\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["middle_finger_tone2","reversed_hand_with_middle_finger_extended_tone2"],"surrogates":"\uD83D\uDD95\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["middle_finger_tone3","reversed_hand_with_middle_finger_extended_tone3"],"surrogates":"\uD83D\uDD95\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["middle_finger_tone4","reversed_hand_with_middle_finger_extended_tone4"],"surrogates":"\uD83D\uDD95\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["middle_finger_tone5","reversed_hand_with_middle_finger_extended_tone5"],"surrogates":"\uD83D\uDD95\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["writing_hand"],"surrogates":"✍️","unicodeVersion":1.1,"hasDiversity":true,"diversityChildren":[{"names":["writing_hand_tone1"],"surrogates":"✍\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["writing_hand_tone2"],"surrogates":"✍\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["writing_hand_tone3"],"surrogates":"✍\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["writing_hand_tone4"],"surrogates":"✍\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["writing_hand_tone5"],"surrogates":"✍\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["pray","folded_hands"],"surrogates":"\uD83D\uDE4F","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["pray_tone1"],"surrogates":"\uD83D\uDE4F\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["pray_tone2"],"surrogates":"\uD83D\uDE4F\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["pray_tone3"],"surrogates":"\uD83D\uDE4F\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["pray_tone4"],"surrogates":"\uD83D\uDE4F\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["pray_tone5"],"surrogates":"\uD83D\uDE4F\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["index_pointing_at_the_viewer"],"surrogates":"\uD83E\uDEF5","unicodeVersion":14,"hasDiversity":true,"diversityChildren":[{"names":["index_pointing_at_the_viewer_tone1","index_pointing_at_the_viewer_light_skin_tone"],"surrogates":"\uD83E\uDEF5\uD83C\uDFFB","unicodeVersion":14,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["index_pointing_at_the_viewer_tone2","index_pointing_at_the_viewer_medium_light_skin_tone"],"surrogates":"\uD83E\uDEF5\uD83C\uDFFC","unicodeVersion":14,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["index_pointing_at_the_viewer_tone3","index_pointing_at_the_viewer_medium_skin_tone"],"surrogates":"\uD83E\uDEF5\uD83C\uDFFD","unicodeVersion":14,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["index_pointing_at_the_viewer_tone4","index_pointing_at_the_viewer_medium_dark_skin_tone"],"surrogates":"\uD83E\uDEF5\uD83C\uDFFE","unicodeVersion":14,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["index_pointing_at_the_viewer_tone5","index_pointing_at_the_viewer_dark_skin_tone"],"surrogates":"\uD83E\uDEF5\uD83C\uDFFF","unicodeVersion":14,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["foot"],"surrogates":"\uD83E\uDDB6","unicodeVersion":11,"hasDiversity":true,"diversityChildren":[{"names":["foot_tone1","foot_light_skin_tone"],"surrogates":"\uD83E\uDDB6\uD83C\uDFFB","unicodeVersion":11,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["foot_tone2","foot_medium_light_skin_tone"],"surrogates":"\uD83E\uDDB6\uD83C\uDFFC","unicodeVersion":11,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["foot_tone3","foot_medium_skin_tone"],"surrogates":"\uD83E\uDDB6\uD83C\uDFFD","unicodeVersion":11,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["foot_tone4","foot_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDB6\uD83C\uDFFE","unicodeVersion":11,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["foot_tone5","foot_dark_skin_tone"],"surrogates":"\uD83E\uDDB6\uD83C\uDFFF","unicodeVersion":11,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["leg"],"surrogates":"\uD83E\uDDB5","unicodeVersion":11,"hasDiversity":true,"diversityChildren":[{"names":["leg_tone1","leg_light_skin_tone"],"surrogates":"\uD83E\uDDB5\uD83C\uDFFB","unicodeVersion":11,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["leg_tone2","leg_medium_light_skin_tone"],"surrogates":"\uD83E\uDDB5\uD83C\uDFFC","unicodeVersion":11,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["leg_tone3","leg_medium_skin_tone"],"surrogates":"\uD83E\uDDB5\uD83C\uDFFD","unicodeVersion":11,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["leg_tone4","leg_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDB5\uD83C\uDFFE","unicodeVersion":11,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["leg_tone5","leg_dark_skin_tone"],"surrogates":"\uD83E\uDDB5\uD83C\uDFFF","unicodeVersion":11,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["mechanical_leg"],"surrogates":"\uD83E\uDDBF","unicodeVersion":12},{"names":["lipstick"],"surrogates":"\uD83D\uDC84","unicodeVersion":6},{"names":["kiss","kiss_mark"],"surrogates":"\uD83D\uDC8B","unicodeVersion":6},{"names":["lips","mouth"],"surrogates":"\uD83D\uDC44","unicodeVersion":6},{"names":["biting_lip"],"surrogates":"\uD83E\uDEE6","unicodeVersion":14},{"names":["tooth"],"surrogates":"\uD83E\uDDB7","unicodeVersion":11},{"names":["tongue"],"surrogates":"\uD83D\uDC45","unicodeVersion":6},{"names":["ear"],"surrogates":"\uD83D\uDC42","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["ear_tone1"],"surrogates":"\uD83D\uDC42\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["ear_tone2"],"surrogates":"\uD83D\uDC42\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["ear_tone3"],"surrogates":"\uD83D\uDC42\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["ear_tone4"],"surrogates":"\uD83D\uDC42\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["ear_tone5"],"surrogates":"\uD83D\uDC42\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["ear_with_hearing_aid"],"surrogates":"\uD83E\uDDBB","unicodeVersion":12,"hasDiversity":true,"diversityChildren":[{"names":["ear_with_hearing_aid_tone1","ear_with_hearing_aid_light_skin_tone"],"surrogates":"\uD83E\uDDBB\uD83C\uDFFB","unicodeVersion":12,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["ear_with_hearing_aid_tone2","ear_with_hearing_aid_medium_light_skin_tone"],"surrogates":"\uD83E\uDDBB\uD83C\uDFFC","unicodeVersion":12,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["ear_with_hearing_aid_tone3","ear_with_hearing_aid_medium_skin_tone"],"surrogates":"\uD83E\uDDBB\uD83C\uDFFD","unicodeVersion":12,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["ear_with_hearing_aid_tone4","ear_with_hearing_aid_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDBB\uD83C\uDFFE","unicodeVersion":12,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["ear_with_hearing_aid_tone5","ear_with_hearing_aid_dark_skin_tone"],"surrogates":"\uD83E\uDDBB\uD83C\uDFFF","unicodeVersion":12,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["nose"],"surrogates":"\uD83D\uDC43","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["nose_tone1"],"surrogates":"\uD83D\uDC43\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["nose_tone2"],"surrogates":"\uD83D\uDC43\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["nose_tone3"],"surrogates":"\uD83D\uDC43\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["nose_tone4"],"surrogates":"\uD83D\uDC43\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["nose_tone5"],"surrogates":"\uD83D\uDC43\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["footprints"],"surrogates":"\uD83D\uDC63","unicodeVersion":6},{"names":["eye"],"surrogates":"\uD83D\uDC41️","unicodeVersion":7},{"names":["eyes"],"surrogates":"\uD83D\uDC40","unicodeVersion":6},{"names":["anatomical_heart"],"surrogates":"\uD83E\uDEC0","unicodeVersion":13},{"names":["lungs"],"surrogates":"\uD83E\uDEC1","unicodeVersion":13},{"names":["brain"],"surrogates":"\uD83E\uDDE0","unicodeVersion":10},{"names":["speaking_head","speaking_head_in_silhouette"],"surrogates":"\uD83D\uDDE3️","unicodeVersion":7},{"names":["bust_in_silhouette"],"surrogates":"\uD83D\uDC64","unicodeVersion":6},{"names":["busts_in_silhouette"],"surrogates":"\uD83D\uDC65","unicodeVersion":6},{"names":["people_hugging"],"surrogates":"\uD83E\uDEC2","unicodeVersion":13},{"names":["baby"],"surrogates":"\uD83D\uDC76","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["baby_tone1"],"surrogates":"\uD83D\uDC76\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["baby_tone2"],"surrogates":"\uD83D\uDC76\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["baby_tone3"],"surrogates":"\uD83D\uDC76\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["baby_tone4"],"surrogates":"\uD83D\uDC76\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["baby_tone5"],"surrogates":"\uD83D\uDC76\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["child"],"surrogates":"\uD83E\uDDD2","unicodeVersion":10,"hasDiversity":true,"diversityChildren":[{"names":["child_tone1","child_light_skin_tone"],"surrogates":"\uD83E\uDDD2\uD83C\uDFFB","unicodeVersion":10,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["child_tone2","child_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD2\uD83C\uDFFC","unicodeVersion":10,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["child_tone3","child_medium_skin_tone"],"surrogates":"\uD83E\uDDD2\uD83C\uDFFD","unicodeVersion":10,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["child_tone4","child_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD2\uD83C\uDFFE","unicodeVersion":10,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["child_tone5","child_dark_skin_tone"],"surrogates":"\uD83E\uDDD2\uD83C\uDFFF","unicodeVersion":10,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["girl"],"surrogates":"\uD83D\uDC67","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["girl_tone1"],"surrogates":"\uD83D\uDC67\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["girl_tone2"],"surrogates":"\uD83D\uDC67\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["girl_tone3"],"surrogates":"\uD83D\uDC67\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["girl_tone4"],"surrogates":"\uD83D\uDC67\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["girl_tone5"],"surrogates":"\uD83D\uDC67\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["boy"],"surrogates":"\uD83D\uDC66","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["boy_tone1"],"surrogates":"\uD83D\uDC66\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["boy_tone2"],"surrogates":"\uD83D\uDC66\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["boy_tone3"],"surrogates":"\uD83D\uDC66\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["boy_tone4"],"surrogates":"\uD83D\uDC66\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["boy_tone5"],"surrogates":"\uD83D\uDC66\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["adult","person"],"surrogates":"\uD83E\uDDD1","unicodeVersion":10,"hasDiversity":true,"diversityChildren":[{"names":["adult_tone1","adult_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFB","unicodeVersion":10,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["adult_tone2","adult_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFC","unicodeVersion":10,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["adult_tone3","adult_medium_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFD","unicodeVersion":10,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["adult_tone4","adult_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFE","unicodeVersion":10,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["adult_tone5","adult_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFF","unicodeVersion":10,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman"],"surrogates":"\uD83D\uDC69","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["woman_tone1"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_tone2"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_tone3"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_tone4"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_tone5"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man"],"surrogates":"\uD83D\uDC68","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["man_tone1"],"surrogates":"\uD83D\uDC68\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_tone2"],"surrogates":"\uD83D\uDC68\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_tone3"],"surrogates":"\uD83D\uDC68\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_tone4"],"surrogates":"\uD83D\uDC68\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_tone5"],"surrogates":"\uD83D\uDC68\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["person_curly_hair"],"surrogates":"\uD83E\uDDD1‍\uD83E\uDDB1","unicodeVersion":12.1,"hasDiversity":true,"diversityChildren":[{"names":["person_tone1_curly_hair","person_light_skin_tone_curly_hair"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFB‍\uD83E\uDDB1","unicodeVersion":12.1,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_tone2_curly_hair","person_medium_light_skin_tone_curly_hair"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFC‍\uD83E\uDDB1","unicodeVersion":12.1,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_tone3_curly_hair","person_medium_skin_tone_curly_hair"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFD‍\uD83E\uDDB1","unicodeVersion":12.1,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_tone4_curly_hair","person_medium_dark_skin_tone_curly_hair"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFE‍\uD83E\uDDB1","unicodeVersion":12.1,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_tone5_curly_hair","person_dark_skin_tone_curly_hair"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFF‍\uD83E\uDDB1","unicodeVersion":12.1,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_curly_haired"],"surrogates":"\uD83D\uDC69‍\uD83E\uDDB1","unicodeVersion":11,"hasDiversity":true,"diversityChildren":[{"names":["woman_curly_haired_tone1","woman_curly_haired_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍\uD83E\uDDB1","unicodeVersion":11,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_curly_haired_tone2","woman_curly_haired_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍\uD83E\uDDB1","unicodeVersion":11,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_curly_haired_tone3","woman_curly_haired_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍\uD83E\uDDB1","unicodeVersion":11,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_curly_haired_tone4","woman_curly_haired_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍\uD83E\uDDB1","unicodeVersion":11,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_curly_haired_tone5","woman_curly_haired_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍\uD83E\uDDB1","unicodeVersion":11,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_curly_haired"],"surrogates":"\uD83D\uDC68‍\uD83E\uDDB1","unicodeVersion":11,"hasDiversity":true,"diversityChildren":[{"names":["man_curly_haired_tone1","man_curly_haired_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFB‍\uD83E\uDDB1","unicodeVersion":11,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_curly_haired_tone2","man_curly_haired_medium_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFC‍\uD83E\uDDB1","unicodeVersion":11,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_curly_haired_tone3","man_curly_haired_medium_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFD‍\uD83E\uDDB1","unicodeVersion":11,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_curly_haired_tone4","man_curly_haired_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFE‍\uD83E\uDDB1","unicodeVersion":11,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_curly_haired_tone5","man_curly_haired_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFF‍\uD83E\uDDB1","unicodeVersion":11,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["person_red_hair"],"surrogates":"\uD83E\uDDD1‍\uD83E\uDDB0","unicodeVersion":12.1,"hasDiversity":true,"diversityChildren":[{"names":["person_tone1_red_hair","person_light_skin_tone_red_hair"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFB‍\uD83E\uDDB0","unicodeVersion":12.1,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_tone2_red_hair","person_medium_light_skin_tone_red_hair"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFC‍\uD83E\uDDB0","unicodeVersion":12.1,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_tone3_red_hair","person_medium_skin_tone_red_hair"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFD‍\uD83E\uDDB0","unicodeVersion":12.1,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_tone4_red_hair","person_medium_dark_skin_tone_red_hair"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFE‍\uD83E\uDDB0","unicodeVersion":12.1,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_tone5_red_hair","person_dark_skin_tone_red_hair"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFF‍\uD83E\uDDB0","unicodeVersion":12.1,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_red_haired"],"surrogates":"\uD83D\uDC69‍\uD83E\uDDB0","unicodeVersion":11,"hasDiversity":true,"diversityChildren":[{"names":["woman_red_haired_tone1","woman_red_haired_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍\uD83E\uDDB0","unicodeVersion":11,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_red_haired_tone2","woman_red_haired_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍\uD83E\uDDB0","unicodeVersion":11,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_red_haired_tone3","woman_red_haired_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍\uD83E\uDDB0","unicodeVersion":11,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_red_haired_tone4","woman_red_haired_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍\uD83E\uDDB0","unicodeVersion":11,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_red_haired_tone5","woman_red_haired_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍\uD83E\uDDB0","unicodeVersion":11,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_red_haired","man_red_hair"],"surrogates":"\uD83D\uDC68‍\uD83E\uDDB0","unicodeVersion":11,"hasDiversity":true,"diversityChildren":[{"names":["man_red_haired_tone1","man_red_haired_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFB‍\uD83E\uDDB0","unicodeVersion":11,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_red_haired_tone2","man_red_haired_medium_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFC‍\uD83E\uDDB0","unicodeVersion":11,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_red_haired_tone3","man_red_haired_medium_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFD‍\uD83E\uDDB0","unicodeVersion":11,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_red_haired_tone4","man_red_haired_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFE‍\uD83E\uDDB0","unicodeVersion":11,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_red_haired_tone5","man_red_haired_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFF‍\uD83E\uDDB0","unicodeVersion":11,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["blond_haired_person","person_with_blond_hair"],"surrogates":"\uD83D\uDC71","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["blond_haired_person_tone1","person_with_blond_hair_tone1"],"surrogates":"\uD83D\uDC71\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["blond_haired_person_tone2","person_with_blond_hair_tone2"],"surrogates":"\uD83D\uDC71\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["blond_haired_person_tone3","person_with_blond_hair_tone3"],"surrogates":"\uD83D\uDC71\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["blond_haired_person_tone4","person_with_blond_hair_tone4"],"surrogates":"\uD83D\uDC71\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["blond_haired_person_tone5","person_with_blond_hair_tone5"],"surrogates":"\uD83D\uDC71\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["blond_haired_woman"],"surrogates":"\uD83D\uDC71‍♀️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["blond_haired_woman_tone1","blond_haired_woman_light_skin_tone"],"surrogates":"\uD83D\uDC71\uD83C\uDFFB‍♀️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["blond_haired_woman_tone2","blond_haired_woman_medium_light_skin_tone"],"surrogates":"\uD83D\uDC71\uD83C\uDFFC‍♀️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["blond_haired_woman_tone3","blond_haired_woman_medium_skin_tone"],"surrogates":"\uD83D\uDC71\uD83C\uDFFD‍♀️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["blond_haired_woman_tone4","blond_haired_woman_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC71\uD83C\uDFFE‍♀️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["blond_haired_woman_tone5","blond_haired_woman_dark_skin_tone"],"surrogates":"\uD83D\uDC71\uD83C\uDFFF‍♀️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["blond_haired_man"],"surrogates":"\uD83D\uDC71‍♂️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["blond_haired_man_tone1","blond_haired_man_light_skin_tone"],"surrogates":"\uD83D\uDC71\uD83C\uDFFB‍♂️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["blond_haired_man_tone2","blond_haired_man_medium_light_skin_tone"],"surrogates":"\uD83D\uDC71\uD83C\uDFFC‍♂️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["blond_haired_man_tone3","blond_haired_man_medium_skin_tone"],"surrogates":"\uD83D\uDC71\uD83C\uDFFD‍♂️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["blond_haired_man_tone4","blond_haired_man_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC71\uD83C\uDFFE‍♂️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["blond_haired_man_tone5","blond_haired_man_dark_skin_tone"],"surrogates":"\uD83D\uDC71\uD83C\uDFFF‍♂️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["person_white_hair"],"surrogates":"\uD83E\uDDD1‍\uD83E\uDDB3","unicodeVersion":12.1,"hasDiversity":true,"diversityChildren":[{"names":["person_tone1_white_hair","person_light_skin_tone_white_hair"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFB‍\uD83E\uDDB3","unicodeVersion":12.1,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_tone2_white_hair","person_medium_light_skin_tone_white_hair"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFC‍\uD83E\uDDB3","unicodeVersion":12.1,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_tone3_white_hair","person_medium_skin_tone_white_hair"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFD‍\uD83E\uDDB3","unicodeVersion":12.1,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_tone4_white_hair","person_medium_dark_skin_tone_white_hair"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFE‍\uD83E\uDDB3","unicodeVersion":12.1,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_tone5_white_hair","person_dark_skin_tone_white_hair"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFF‍\uD83E\uDDB3","unicodeVersion":12.1,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_white_haired"],"surrogates":"\uD83D\uDC69‍\uD83E\uDDB3","unicodeVersion":11,"hasDiversity":true,"diversityChildren":[{"names":["woman_white_haired_tone1","woman_white_haired_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍\uD83E\uDDB3","unicodeVersion":11,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_white_haired_tone2","woman_white_haired_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍\uD83E\uDDB3","unicodeVersion":11,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_white_haired_tone3","woman_white_haired_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍\uD83E\uDDB3","unicodeVersion":11,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_white_haired_tone4","woman_white_haired_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍\uD83E\uDDB3","unicodeVersion":11,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_white_haired_tone5","woman_white_haired_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍\uD83E\uDDB3","unicodeVersion":11,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_white_haired"],"surrogates":"\uD83D\uDC68‍\uD83E\uDDB3","unicodeVersion":11,"hasDiversity":true,"diversityChildren":[{"names":["man_white_haired_tone1","man_white_haired_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFB‍\uD83E\uDDB3","unicodeVersion":11,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_white_haired_tone2","man_white_haired_medium_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFC‍\uD83E\uDDB3","unicodeVersion":11,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_white_haired_tone3","man_white_haired_medium_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFD‍\uD83E\uDDB3","unicodeVersion":11,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_white_haired_tone4","man_white_haired_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFE‍\uD83E\uDDB3","unicodeVersion":11,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_white_haired_tone5","man_white_haired_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFF‍\uD83E\uDDB3","unicodeVersion":11,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["person_bald"],"surrogates":"\uD83E\uDDD1‍\uD83E\uDDB2","unicodeVersion":12.1,"hasDiversity":true,"diversityChildren":[{"names":["person_tone1_bald","person_light_skin_tone_bald"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFB‍\uD83E\uDDB2","unicodeVersion":12.1,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_tone2_bald","person_medium_light_skin_tone_bald"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFC‍\uD83E\uDDB2","unicodeVersion":12.1,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_tone3_bald","person_medium_skin_tone_bald"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFD‍\uD83E\uDDB2","unicodeVersion":12.1,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_tone4_bald","person_medium_dark_skin_tone_bald"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFE‍\uD83E\uDDB2","unicodeVersion":12.1,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_tone5_bald","person_dark_skin_tone_bald"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFF‍\uD83E\uDDB2","unicodeVersion":12.1,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_bald"],"surrogates":"\uD83D\uDC69‍\uD83E\uDDB2","unicodeVersion":11,"hasDiversity":true,"diversityChildren":[{"names":["woman_bald_tone1","woman_bald_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍\uD83E\uDDB2","unicodeVersion":11,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_bald_tone2","woman_bald_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍\uD83E\uDDB2","unicodeVersion":11,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_bald_tone3","woman_bald_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍\uD83E\uDDB2","unicodeVersion":11,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_bald_tone4","woman_bald_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍\uD83E\uDDB2","unicodeVersion":11,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_bald_tone5","woman_bald_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍\uD83E\uDDB2","unicodeVersion":11,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_bald"],"surrogates":"\uD83D\uDC68‍\uD83E\uDDB2","unicodeVersion":11,"hasDiversity":true,"diversityChildren":[{"names":["man_bald_tone1","man_bald_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFB‍\uD83E\uDDB2","unicodeVersion":11,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_bald_tone2","man_bald_medium_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFC‍\uD83E\uDDB2","unicodeVersion":11,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_bald_tone3","man_bald_medium_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFD‍\uD83E\uDDB2","unicodeVersion":11,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_bald_tone4","man_bald_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFE‍\uD83E\uDDB2","unicodeVersion":11,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_bald_tone5","man_bald_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFF‍\uD83E\uDDB2","unicodeVersion":11,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["bearded_person","person_beard"],"surrogates":"\uD83E\uDDD4","unicodeVersion":10,"hasDiversity":true,"diversityChildren":[{"names":["bearded_person_tone1","bearded_person_light_skin_tone"],"surrogates":"\uD83E\uDDD4\uD83C\uDFFB","unicodeVersion":10,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["bearded_person_tone2","bearded_person_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD4\uD83C\uDFFC","unicodeVersion":10,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["bearded_person_tone3","bearded_person_medium_skin_tone"],"surrogates":"\uD83E\uDDD4\uD83C\uDFFD","unicodeVersion":10,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["bearded_person_tone4","bearded_person_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD4\uD83C\uDFFE","unicodeVersion":10,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["bearded_person_tone5","bearded_person_dark_skin_tone"],"surrogates":"\uD83E\uDDD4\uD83C\uDFFF","unicodeVersion":10,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_beard"],"surrogates":"\uD83E\uDDD4‍♀️","unicodeVersion":13.1,"hasDiversity":true,"diversityChildren":[{"names":["woman_tone1_beard","woman_light_skin_tone_beard"],"surrogates":"\uD83E\uDDD4\uD83C\uDFFB‍♀️","unicodeVersion":13.1,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_tone2_beard","woman_medium_light_skin_tone_beard"],"surrogates":"\uD83E\uDDD4\uD83C\uDFFC‍♀️","unicodeVersion":13.1,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_tone3_beard","woman_medium_skin_tone_beard"],"surrogates":"\uD83E\uDDD4\uD83C\uDFFD‍♀️","unicodeVersion":13.1,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_tone4_beard","woman_medium_dark_skin_tone_beard"],"surrogates":"\uD83E\uDDD4\uD83C\uDFFE‍♀️","unicodeVersion":13.1,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_tone5_beard","woman_dark_skin_tone_beard"],"surrogates":"\uD83E\uDDD4\uD83C\uDFFF‍♀️","unicodeVersion":13.1,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_beard"],"surrogates":"\uD83E\uDDD4‍♂️","unicodeVersion":13.1,"hasDiversity":true,"diversityChildren":[{"names":["man_tone1_beard","man_light_skin_tone_beard"],"surrogates":"\uD83E\uDDD4\uD83C\uDFFB‍♂️","unicodeVersion":13.1,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_tone2_beard","man_medium_light_skin_tone_beard"],"surrogates":"\uD83E\uDDD4\uD83C\uDFFC‍♂️","unicodeVersion":13.1,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_tone3_beard","man_medium_skin_tone_beard"],"surrogates":"\uD83E\uDDD4\uD83C\uDFFD‍♂️","unicodeVersion":13.1,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_tone4_beard","man_medium_dark_skin_tone_beard"],"surrogates":"\uD83E\uDDD4\uD83C\uDFFE‍♂️","unicodeVersion":13.1,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_tone5_beard","man_dark_skin_tone_beard"],"surrogates":"\uD83E\uDDD4\uD83C\uDFFF‍♂️","unicodeVersion":13.1,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["older_adult","older_person"],"surrogates":"\uD83E\uDDD3","unicodeVersion":10,"hasDiversity":true,"diversityChildren":[{"names":["older_adult_tone1","older_adult_light_skin_tone"],"surrogates":"\uD83E\uDDD3\uD83C\uDFFB","unicodeVersion":10,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["older_adult_tone2","older_adult_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD3\uD83C\uDFFC","unicodeVersion":10,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["older_adult_tone3","older_adult_medium_skin_tone"],"surrogates":"\uD83E\uDDD3\uD83C\uDFFD","unicodeVersion":10,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["older_adult_tone4","older_adult_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD3\uD83C\uDFFE","unicodeVersion":10,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["older_adult_tone5","older_adult_dark_skin_tone"],"surrogates":"\uD83E\uDDD3\uD83C\uDFFF","unicodeVersion":10,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["older_woman","grandma","old_woman"],"surrogates":"\uD83D\uDC75","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["older_woman_tone1","grandma_tone1"],"surrogates":"\uD83D\uDC75\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["older_woman_tone2","grandma_tone2"],"surrogates":"\uD83D\uDC75\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["older_woman_tone3","grandma_tone3"],"surrogates":"\uD83D\uDC75\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["older_woman_tone4","grandma_tone4"],"surrogates":"\uD83D\uDC75\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["older_woman_tone5","grandma_tone5"],"surrogates":"\uD83D\uDC75\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["older_man","old_man"],"surrogates":"\uD83D\uDC74","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["older_man_tone1"],"surrogates":"\uD83D\uDC74\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["older_man_tone2"],"surrogates":"\uD83D\uDC74\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["older_man_tone3"],"surrogates":"\uD83D\uDC74\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["older_man_tone4"],"surrogates":"\uD83D\uDC74\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["older_man_tone5"],"surrogates":"\uD83D\uDC74\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_with_chinese_cap","man_with_gua_pi_mao"],"surrogates":"\uD83D\uDC72","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["man_with_chinese_cap_tone1","man_with_gua_pi_mao_tone1"],"surrogates":"\uD83D\uDC72\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_with_chinese_cap_tone2","man_with_gua_pi_mao_tone2"],"surrogates":"\uD83D\uDC72\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_with_chinese_cap_tone3","man_with_gua_pi_mao_tone3"],"surrogates":"\uD83D\uDC72\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_with_chinese_cap_tone4","man_with_gua_pi_mao_tone4"],"surrogates":"\uD83D\uDC72\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_with_chinese_cap_tone5","man_with_gua_pi_mao_tone5"],"surrogates":"\uD83D\uDC72\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["person_wearing_turban","man_with_turban"],"surrogates":"\uD83D\uDC73","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["person_wearing_turban_tone1","man_with_turban_tone1"],"surrogates":"\uD83D\uDC73\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_wearing_turban_tone2","man_with_turban_tone2"],"surrogates":"\uD83D\uDC73\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_wearing_turban_tone3","man_with_turban_tone3"],"surrogates":"\uD83D\uDC73\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_wearing_turban_tone4","man_with_turban_tone4"],"surrogates":"\uD83D\uDC73\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_wearing_turban_tone5","man_with_turban_tone5"],"surrogates":"\uD83D\uDC73\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_wearing_turban"],"surrogates":"\uD83D\uDC73‍♀️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["woman_wearing_turban_tone1","woman_wearing_turban_light_skin_tone"],"surrogates":"\uD83D\uDC73\uD83C\uDFFB‍♀️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_wearing_turban_tone2","woman_wearing_turban_medium_light_skin_tone"],"surrogates":"\uD83D\uDC73\uD83C\uDFFC‍♀️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_wearing_turban_tone3","woman_wearing_turban_medium_skin_tone"],"surrogates":"\uD83D\uDC73\uD83C\uDFFD‍♀️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_wearing_turban_tone4","woman_wearing_turban_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC73\uD83C\uDFFE‍♀️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_wearing_turban_tone5","woman_wearing_turban_dark_skin_tone"],"surrogates":"\uD83D\uDC73\uD83C\uDFFF‍♀️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_wearing_turban"],"surrogates":"\uD83D\uDC73‍♂️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["man_wearing_turban_tone1","man_wearing_turban_light_skin_tone"],"surrogates":"\uD83D\uDC73\uD83C\uDFFB‍♂️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_wearing_turban_tone2","man_wearing_turban_medium_light_skin_tone"],"surrogates":"\uD83D\uDC73\uD83C\uDFFC‍♂️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_wearing_turban_tone3","man_wearing_turban_medium_skin_tone"],"surrogates":"\uD83D\uDC73\uD83C\uDFFD‍♂️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_wearing_turban_tone4","man_wearing_turban_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC73\uD83C\uDFFE‍♂️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_wearing_turban_tone5","man_wearing_turban_dark_skin_tone"],"surrogates":"\uD83D\uDC73\uD83C\uDFFF‍♂️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_with_headscarf"],"surrogates":"\uD83E\uDDD5","unicodeVersion":10,"hasDiversity":true,"diversityChildren":[{"names":["woman_with_headscarf_tone1","woman_with_headscarf_light_skin_tone"],"surrogates":"\uD83E\uDDD5\uD83C\uDFFB","unicodeVersion":10,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_with_headscarf_tone2","woman_with_headscarf_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD5\uD83C\uDFFC","unicodeVersion":10,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_with_headscarf_tone3","woman_with_headscarf_medium_skin_tone"],"surrogates":"\uD83E\uDDD5\uD83C\uDFFD","unicodeVersion":10,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_with_headscarf_tone4","woman_with_headscarf_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD5\uD83C\uDFFE","unicodeVersion":10,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_with_headscarf_tone5","woman_with_headscarf_dark_skin_tone"],"surrogates":"\uD83E\uDDD5\uD83C\uDFFF","unicodeVersion":10,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["police_officer","cop"],"surrogates":"\uD83D\uDC6E","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["police_officer_tone1","cop_tone1"],"surrogates":"\uD83D\uDC6E\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["police_officer_tone2","cop_tone2"],"surrogates":"\uD83D\uDC6E\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["police_officer_tone3","cop_tone3"],"surrogates":"\uD83D\uDC6E\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["police_officer_tone4","cop_tone4"],"surrogates":"\uD83D\uDC6E\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["police_officer_tone5","cop_tone5"],"surrogates":"\uD83D\uDC6E\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_police_officer"],"surrogates":"\uD83D\uDC6E‍♀️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["woman_police_officer_tone1","woman_police_officer_light_skin_tone"],"surrogates":"\uD83D\uDC6E\uD83C\uDFFB‍♀️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_police_officer_tone2","woman_police_officer_medium_light_skin_tone"],"surrogates":"\uD83D\uDC6E\uD83C\uDFFC‍♀️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_police_officer_tone3","woman_police_officer_medium_skin_tone"],"surrogates":"\uD83D\uDC6E\uD83C\uDFFD‍♀️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_police_officer_tone4","woman_police_officer_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC6E\uD83C\uDFFE‍♀️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_police_officer_tone5","woman_police_officer_dark_skin_tone"],"surrogates":"\uD83D\uDC6E\uD83C\uDFFF‍♀️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_police_officer"],"surrogates":"\uD83D\uDC6E‍♂️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["man_police_officer_tone1","man_police_officer_light_skin_tone"],"surrogates":"\uD83D\uDC6E\uD83C\uDFFB‍♂️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_police_officer_tone2","man_police_officer_medium_light_skin_tone"],"surrogates":"\uD83D\uDC6E\uD83C\uDFFC‍♂️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_police_officer_tone3","man_police_officer_medium_skin_tone"],"surrogates":"\uD83D\uDC6E\uD83C\uDFFD‍♂️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_police_officer_tone4","man_police_officer_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC6E\uD83C\uDFFE‍♂️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_police_officer_tone5","man_police_officer_dark_skin_tone"],"surrogates":"\uD83D\uDC6E\uD83C\uDFFF‍♂️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["construction_worker"],"surrogates":"\uD83D\uDC77","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["construction_worker_tone1"],"surrogates":"\uD83D\uDC77\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["construction_worker_tone2"],"surrogates":"\uD83D\uDC77\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["construction_worker_tone3"],"surrogates":"\uD83D\uDC77\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["construction_worker_tone4"],"surrogates":"\uD83D\uDC77\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["construction_worker_tone5"],"surrogates":"\uD83D\uDC77\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_construction_worker"],"surrogates":"\uD83D\uDC77‍♀️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["woman_construction_worker_tone1","woman_construction_worker_light_skin_tone"],"surrogates":"\uD83D\uDC77\uD83C\uDFFB‍♀️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_construction_worker_tone2","woman_construction_worker_medium_light_skin_tone"],"surrogates":"\uD83D\uDC77\uD83C\uDFFC‍♀️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_construction_worker_tone3","woman_construction_worker_medium_skin_tone"],"surrogates":"\uD83D\uDC77\uD83C\uDFFD‍♀️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_construction_worker_tone4","woman_construction_worker_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC77\uD83C\uDFFE‍♀️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_construction_worker_tone5","woman_construction_worker_dark_skin_tone"],"surrogates":"\uD83D\uDC77\uD83C\uDFFF‍♀️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_construction_worker"],"surrogates":"\uD83D\uDC77‍♂️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["man_construction_worker_tone1","man_construction_worker_light_skin_tone"],"surrogates":"\uD83D\uDC77\uD83C\uDFFB‍♂️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_construction_worker_tone2","man_construction_worker_medium_light_skin_tone"],"surrogates":"\uD83D\uDC77\uD83C\uDFFC‍♂️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_construction_worker_tone3","man_construction_worker_medium_skin_tone"],"surrogates":"\uD83D\uDC77\uD83C\uDFFD‍♂️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_construction_worker_tone4","man_construction_worker_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC77\uD83C\uDFFE‍♂️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_construction_worker_tone5","man_construction_worker_dark_skin_tone"],"surrogates":"\uD83D\uDC77\uD83C\uDFFF‍♂️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["guard","guardsman"],"surrogates":"\uD83D\uDC82","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["guard_tone1","guardsman_tone1"],"surrogates":"\uD83D\uDC82\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["guard_tone2","guardsman_tone2"],"surrogates":"\uD83D\uDC82\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["guard_tone3","guardsman_tone3"],"surrogates":"\uD83D\uDC82\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["guard_tone4","guardsman_tone4"],"surrogates":"\uD83D\uDC82\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["guard_tone5","guardsman_tone5"],"surrogates":"\uD83D\uDC82\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_guard"],"surrogates":"\uD83D\uDC82‍♀️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["woman_guard_tone1","woman_guard_light_skin_tone"],"surrogates":"\uD83D\uDC82\uD83C\uDFFB‍♀️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_guard_tone2","woman_guard_medium_light_skin_tone"],"surrogates":"\uD83D\uDC82\uD83C\uDFFC‍♀️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_guard_tone3","woman_guard_medium_skin_tone"],"surrogates":"\uD83D\uDC82\uD83C\uDFFD‍♀️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_guard_tone4","woman_guard_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC82\uD83C\uDFFE‍♀️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_guard_tone5","woman_guard_dark_skin_tone"],"surrogates":"\uD83D\uDC82\uD83C\uDFFF‍♀️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_guard"],"surrogates":"\uD83D\uDC82‍♂️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["man_guard_tone1","man_guard_light_skin_tone"],"surrogates":"\uD83D\uDC82\uD83C\uDFFB‍♂️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_guard_tone2","man_guard_medium_light_skin_tone"],"surrogates":"\uD83D\uDC82\uD83C\uDFFC‍♂️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_guard_tone3","man_guard_medium_skin_tone"],"surrogates":"\uD83D\uDC82\uD83C\uDFFD‍♂️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_guard_tone4","man_guard_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC82\uD83C\uDFFE‍♂️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_guard_tone5","man_guard_dark_skin_tone"],"surrogates":"\uD83D\uDC82\uD83C\uDFFF‍♂️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["detective","spy","sleuth_or_spy"],"surrogates":"\uD83D\uDD75️","unicodeVersion":7,"hasDiversity":true,"diversityChildren":[{"names":["detective_tone1","spy_tone1","sleuth_or_spy_tone1"],"surrogates":"\uD83D\uDD75\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["detective_tone2","spy_tone2","sleuth_or_spy_tone2"],"surrogates":"\uD83D\uDD75\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["detective_tone3","spy_tone3","sleuth_or_spy_tone3"],"surrogates":"\uD83D\uDD75\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["detective_tone4","spy_tone4","sleuth_or_spy_tone4"],"surrogates":"\uD83D\uDD75\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["detective_tone5","spy_tone5","sleuth_or_spy_tone5"],"surrogates":"\uD83D\uDD75\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_detective"],"surrogates":"\uD83D\uDD75️‍♀️","unicodeVersion":7,"hasDiversity":true,"diversityChildren":[{"names":["woman_detective_tone1","woman_detective_light_skin_tone"],"surrogates":"\uD83D\uDD75\uD83C\uDFFB‍♀️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_detective_tone2","woman_detective_medium_light_skin_tone"],"surrogates":"\uD83D\uDD75\uD83C\uDFFC‍♀️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_detective_tone3","woman_detective_medium_skin_tone"],"surrogates":"\uD83D\uDD75\uD83C\uDFFD‍♀️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_detective_tone4","woman_detective_medium_dark_skin_tone"],"surrogates":"\uD83D\uDD75\uD83C\uDFFE‍♀️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_detective_tone5","woman_detective_dark_skin_tone"],"surrogates":"\uD83D\uDD75\uD83C\uDFFF‍♀️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_detective"],"surrogates":"\uD83D\uDD75️‍♂️","unicodeVersion":7,"hasDiversity":true,"diversityChildren":[{"names":["man_detective_tone1","man_detective_light_skin_tone"],"surrogates":"\uD83D\uDD75\uD83C\uDFFB‍♂️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_detective_tone2","man_detective_medium_light_skin_tone"],"surrogates":"\uD83D\uDD75\uD83C\uDFFC‍♂️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_detective_tone3","man_detective_medium_skin_tone"],"surrogates":"\uD83D\uDD75\uD83C\uDFFD‍♂️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_detective_tone4","man_detective_medium_dark_skin_tone"],"surrogates":"\uD83D\uDD75\uD83C\uDFFE‍♂️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_detective_tone5","man_detective_dark_skin_tone"],"surrogates":"\uD83D\uDD75\uD83C\uDFFF‍♂️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["health_worker"],"surrogates":"\uD83E\uDDD1‍⚕️","unicodeVersion":12.1,"hasDiversity":true,"diversityChildren":[{"names":["health_worker_tone1","health_worker_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFB‍⚕️","unicodeVersion":12.1,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["health_worker_tone2","health_worker_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFC‍⚕️","unicodeVersion":12.1,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["health_worker_tone3","health_worker_medium_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFD‍⚕️","unicodeVersion":12.1,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["health_worker_tone4","health_worker_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFE‍⚕️","unicodeVersion":12.1,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["health_worker_tone5","health_worker_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFF‍⚕️","unicodeVersion":12.1,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_health_worker"],"surrogates":"\uD83D\uDC69‍⚕️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["woman_health_worker_tone1","woman_health_worker_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍⚕️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_health_worker_tone2","woman_health_worker_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍⚕️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_health_worker_tone3","woman_health_worker_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍⚕️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_health_worker_tone4","woman_health_worker_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍⚕️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_health_worker_tone5","woman_health_worker_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍⚕️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_health_worker"],"surrogates":"\uD83D\uDC68‍⚕️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["man_health_worker_tone1","man_health_worker_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFB‍⚕️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_health_worker_tone2","man_health_worker_medium_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFC‍⚕️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_health_worker_tone3","man_health_worker_medium_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFD‍⚕️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_health_worker_tone4","man_health_worker_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFE‍⚕️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_health_worker_tone5","man_health_worker_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFF‍⚕️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["farmer"],"surrogates":"\uD83E\uDDD1‍\uD83C\uDF3E","unicodeVersion":12.1,"hasDiversity":true,"diversityChildren":[{"names":["farmer_tone1","farmer_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFB‍\uD83C\uDF3E","unicodeVersion":12.1,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["farmer_tone2","farmer_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFC‍\uD83C\uDF3E","unicodeVersion":12.1,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["farmer_tone3","farmer_medium_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFD‍\uD83C\uDF3E","unicodeVersion":12.1,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["farmer_tone4","farmer_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFE‍\uD83C\uDF3E","unicodeVersion":12.1,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["farmer_tone5","farmer_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFF‍\uD83C\uDF3E","unicodeVersion":12.1,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_farmer"],"surrogates":"\uD83D\uDC69‍\uD83C\uDF3E","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["woman_farmer_tone1","woman_farmer_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍\uD83C\uDF3E","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_farmer_tone2","woman_farmer_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍\uD83C\uDF3E","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_farmer_tone3","woman_farmer_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍\uD83C\uDF3E","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_farmer_tone4","woman_farmer_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍\uD83C\uDF3E","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_farmer_tone5","woman_farmer_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍\uD83C\uDF3E","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_farmer"],"surrogates":"\uD83D\uDC68‍\uD83C\uDF3E","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["man_farmer_tone1","man_farmer_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFB‍\uD83C\uDF3E","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_farmer_tone2","man_farmer_medium_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFC‍\uD83C\uDF3E","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_farmer_tone3","man_farmer_medium_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFD‍\uD83C\uDF3E","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_farmer_tone4","man_farmer_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFE‍\uD83C\uDF3E","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_farmer_tone5","man_farmer_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFF‍\uD83C\uDF3E","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["cook"],"surrogates":"\uD83E\uDDD1‍\uD83C\uDF73","unicodeVersion":12.1,"hasDiversity":true,"diversityChildren":[{"names":["cook_tone1","cook_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFB‍\uD83C\uDF73","unicodeVersion":12.1,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["cook_tone2","cook_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFC‍\uD83C\uDF73","unicodeVersion":12.1,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["cook_tone3","cook_medium_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFD‍\uD83C\uDF73","unicodeVersion":12.1,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["cook_tone4","cook_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFE‍\uD83C\uDF73","unicodeVersion":12.1,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["cook_tone5","cook_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFF‍\uD83C\uDF73","unicodeVersion":12.1,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_cook"],"surrogates":"\uD83D\uDC69‍\uD83C\uDF73","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["woman_cook_tone1","woman_cook_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍\uD83C\uDF73","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_cook_tone2","woman_cook_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍\uD83C\uDF73","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_cook_tone3","woman_cook_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍\uD83C\uDF73","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_cook_tone4","woman_cook_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍\uD83C\uDF73","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_cook_tone5","woman_cook_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍\uD83C\uDF73","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_cook"],"surrogates":"\uD83D\uDC68‍\uD83C\uDF73","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["man_cook_tone1","man_cook_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFB‍\uD83C\uDF73","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_cook_tone2","man_cook_medium_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFC‍\uD83C\uDF73","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_cook_tone3","man_cook_medium_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFD‍\uD83C\uDF73","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_cook_tone4","man_cook_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFE‍\uD83C\uDF73","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_cook_tone5","man_cook_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFF‍\uD83C\uDF73","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["student"],"surrogates":"\uD83E\uDDD1‍\uD83C\uDF93","unicodeVersion":12.1,"hasDiversity":true,"diversityChildren":[{"names":["student_tone1","student_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFB‍\uD83C\uDF93","unicodeVersion":12.1,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["student_tone2","student_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFC‍\uD83C\uDF93","unicodeVersion":12.1,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["student_tone3","student_medium_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFD‍\uD83C\uDF93","unicodeVersion":12.1,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["student_tone4","student_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFE‍\uD83C\uDF93","unicodeVersion":12.1,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["student_tone5","student_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFF‍\uD83C\uDF93","unicodeVersion":12.1,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_student"],"surrogates":"\uD83D\uDC69‍\uD83C\uDF93","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["woman_student_tone1","woman_student_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍\uD83C\uDF93","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_student_tone2","woman_student_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍\uD83C\uDF93","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_student_tone3","woman_student_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍\uD83C\uDF93","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_student_tone4","woman_student_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍\uD83C\uDF93","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_student_tone5","woman_student_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍\uD83C\uDF93","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_student"],"surrogates":"\uD83D\uDC68‍\uD83C\uDF93","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["man_student_tone1","man_student_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFB‍\uD83C\uDF93","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_student_tone2","man_student_medium_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFC‍\uD83C\uDF93","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_student_tone3","man_student_medium_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFD‍\uD83C\uDF93","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_student_tone4","man_student_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFE‍\uD83C\uDF93","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_student_tone5","man_student_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFF‍\uD83C\uDF93","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["singer"],"surrogates":"\uD83E\uDDD1‍\uD83C\uDFA4","unicodeVersion":12.1,"hasDiversity":true,"diversityChildren":[{"names":["singer_tone1","singer_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFB‍\uD83C\uDFA4","unicodeVersion":12.1,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["singer_tone2","singer_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFC‍\uD83C\uDFA4","unicodeVersion":12.1,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["singer_tone3","singer_medium_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFD‍\uD83C\uDFA4","unicodeVersion":12.1,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["singer_tone4","singer_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFE‍\uD83C\uDFA4","unicodeVersion":12.1,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["singer_tone5","singer_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFF‍\uD83C\uDFA4","unicodeVersion":12.1,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_singer"],"surrogates":"\uD83D\uDC69‍\uD83C\uDFA4","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["woman_singer_tone1","woman_singer_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍\uD83C\uDFA4","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_singer_tone2","woman_singer_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍\uD83C\uDFA4","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_singer_tone3","woman_singer_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍\uD83C\uDFA4","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_singer_tone4","woman_singer_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍\uD83C\uDFA4","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_singer_tone5","woman_singer_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍\uD83C\uDFA4","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_singer"],"surrogates":"\uD83D\uDC68‍\uD83C\uDFA4","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["man_singer_tone1","man_singer_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFB‍\uD83C\uDFA4","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_singer_tone2","man_singer_medium_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFC‍\uD83C\uDFA4","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_singer_tone3","man_singer_medium_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFD‍\uD83C\uDFA4","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_singer_tone4","man_singer_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFE‍\uD83C\uDFA4","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_singer_tone5","man_singer_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFF‍\uD83C\uDFA4","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["teacher"],"surrogates":"\uD83E\uDDD1‍\uD83C\uDFEB","unicodeVersion":12.1,"hasDiversity":true,"diversityChildren":[{"names":["teacher_tone1","teacher_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFB‍\uD83C\uDFEB","unicodeVersion":12.1,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["teacher_tone2","teacher_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFC‍\uD83C\uDFEB","unicodeVersion":12.1,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["teacher_tone3","teacher_medium_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFD‍\uD83C\uDFEB","unicodeVersion":12.1,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["teacher_tone4","teacher_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFE‍\uD83C\uDFEB","unicodeVersion":12.1,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["teacher_tone5","teacher_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFF‍\uD83C\uDFEB","unicodeVersion":12.1,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_teacher"],"surrogates":"\uD83D\uDC69‍\uD83C\uDFEB","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["woman_teacher_tone1","woman_teacher_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍\uD83C\uDFEB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_teacher_tone2","woman_teacher_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍\uD83C\uDFEB","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_teacher_tone3","woman_teacher_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍\uD83C\uDFEB","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_teacher_tone4","woman_teacher_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍\uD83C\uDFEB","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_teacher_tone5","woman_teacher_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍\uD83C\uDFEB","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_teacher"],"surrogates":"\uD83D\uDC68‍\uD83C\uDFEB","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["man_teacher_tone1","man_teacher_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFB‍\uD83C\uDFEB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_teacher_tone2","man_teacher_medium_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFC‍\uD83C\uDFEB","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_teacher_tone3","man_teacher_medium_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFD‍\uD83C\uDFEB","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_teacher_tone4","man_teacher_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFE‍\uD83C\uDFEB","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_teacher_tone5","man_teacher_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFF‍\uD83C\uDFEB","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["factory_worker"],"surrogates":"\uD83E\uDDD1‍\uD83C\uDFED","unicodeVersion":12.1,"hasDiversity":true,"diversityChildren":[{"names":["factory_worker_tone1","factory_worker_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFB‍\uD83C\uDFED","unicodeVersion":12.1,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["factory_worker_tone2","factory_worker_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFC‍\uD83C\uDFED","unicodeVersion":12.1,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["factory_worker_tone3","factory_worker_medium_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFD‍\uD83C\uDFED","unicodeVersion":12.1,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["factory_worker_tone4","factory_worker_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFE‍\uD83C\uDFED","unicodeVersion":12.1,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["factory_worker_tone5","factory_worker_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFF‍\uD83C\uDFED","unicodeVersion":12.1,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_factory_worker"],"surrogates":"\uD83D\uDC69‍\uD83C\uDFED","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["woman_factory_worker_tone1","woman_factory_worker_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍\uD83C\uDFED","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_factory_worker_tone2","woman_factory_worker_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍\uD83C\uDFED","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_factory_worker_tone3","woman_factory_worker_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍\uD83C\uDFED","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_factory_worker_tone4","woman_factory_worker_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍\uD83C\uDFED","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_factory_worker_tone5","woman_factory_worker_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍\uD83C\uDFED","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_factory_worker"],"surrogates":"\uD83D\uDC68‍\uD83C\uDFED","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["man_factory_worker_tone1","man_factory_worker_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFB‍\uD83C\uDFED","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_factory_worker_tone2","man_factory_worker_medium_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFC‍\uD83C\uDFED","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_factory_worker_tone3","man_factory_worker_medium_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFD‍\uD83C\uDFED","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_factory_worker_tone4","man_factory_worker_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFE‍\uD83C\uDFED","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_factory_worker_tone5","man_factory_worker_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFF‍\uD83C\uDFED","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["technologist"],"surrogates":"\uD83E\uDDD1‍\uD83D\uDCBB","unicodeVersion":12.1,"hasDiversity":true,"diversityChildren":[{"names":["technologist_tone1","technologist_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFB‍\uD83D\uDCBB","unicodeVersion":12.1,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["technologist_tone2","technologist_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFC‍\uD83D\uDCBB","unicodeVersion":12.1,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["technologist_tone3","technologist_medium_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFD‍\uD83D\uDCBB","unicodeVersion":12.1,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["technologist_tone4","technologist_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFE‍\uD83D\uDCBB","unicodeVersion":12.1,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["technologist_tone5","technologist_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFF‍\uD83D\uDCBB","unicodeVersion":12.1,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_technologist"],"surrogates":"\uD83D\uDC69‍\uD83D\uDCBB","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["woman_technologist_tone1","woman_technologist_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍\uD83D\uDCBB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_technologist_tone2","woman_technologist_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍\uD83D\uDCBB","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_technologist_tone3","woman_technologist_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍\uD83D\uDCBB","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_technologist_tone4","woman_technologist_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍\uD83D\uDCBB","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_technologist_tone5","woman_technologist_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍\uD83D\uDCBB","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_technologist"],"surrogates":"\uD83D\uDC68‍\uD83D\uDCBB","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["man_technologist_tone1","man_technologist_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFB‍\uD83D\uDCBB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_technologist_tone2","man_technologist_medium_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFC‍\uD83D\uDCBB","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_technologist_tone3","man_technologist_medium_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFD‍\uD83D\uDCBB","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_technologist_tone4","man_technologist_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFE‍\uD83D\uDCBB","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_technologist_tone5","man_technologist_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFF‍\uD83D\uDCBB","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["office_worker"],"surrogates":"\uD83E\uDDD1‍\uD83D\uDCBC","unicodeVersion":12.1,"hasDiversity":true,"diversityChildren":[{"names":["office_worker_tone1","office_worker_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFB‍\uD83D\uDCBC","unicodeVersion":12.1,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["office_worker_tone2","office_worker_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFC‍\uD83D\uDCBC","unicodeVersion":12.1,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["office_worker_tone3","office_worker_medium_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFD‍\uD83D\uDCBC","unicodeVersion":12.1,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["office_worker_tone4","office_worker_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFE‍\uD83D\uDCBC","unicodeVersion":12.1,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["office_worker_tone5","office_worker_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFF‍\uD83D\uDCBC","unicodeVersion":12.1,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_office_worker"],"surrogates":"\uD83D\uDC69‍\uD83D\uDCBC","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["woman_office_worker_tone1","woman_office_worker_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍\uD83D\uDCBC","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_office_worker_tone2","woman_office_worker_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍\uD83D\uDCBC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_office_worker_tone3","woman_office_worker_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍\uD83D\uDCBC","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_office_worker_tone4","woman_office_worker_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍\uD83D\uDCBC","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_office_worker_tone5","woman_office_worker_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍\uD83D\uDCBC","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_office_worker"],"surrogates":"\uD83D\uDC68‍\uD83D\uDCBC","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["man_office_worker_tone1","man_office_worker_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFB‍\uD83D\uDCBC","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_office_worker_tone2","man_office_worker_medium_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFC‍\uD83D\uDCBC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_office_worker_tone3","man_office_worker_medium_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFD‍\uD83D\uDCBC","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_office_worker_tone4","man_office_worker_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFE‍\uD83D\uDCBC","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_office_worker_tone5","man_office_worker_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFF‍\uD83D\uDCBC","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["mechanic"],"surrogates":"\uD83E\uDDD1‍\uD83D\uDD27","unicodeVersion":12.1,"hasDiversity":true,"diversityChildren":[{"names":["mechanic_tone1","mechanic_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFB‍\uD83D\uDD27","unicodeVersion":12.1,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["mechanic_tone2","mechanic_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFC‍\uD83D\uDD27","unicodeVersion":12.1,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["mechanic_tone3","mechanic_medium_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFD‍\uD83D\uDD27","unicodeVersion":12.1,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["mechanic_tone4","mechanic_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFE‍\uD83D\uDD27","unicodeVersion":12.1,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["mechanic_tone5","mechanic_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFF‍\uD83D\uDD27","unicodeVersion":12.1,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_mechanic"],"surrogates":"\uD83D\uDC69‍\uD83D\uDD27","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["woman_mechanic_tone1","woman_mechanic_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍\uD83D\uDD27","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_mechanic_tone2","woman_mechanic_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍\uD83D\uDD27","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_mechanic_tone3","woman_mechanic_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍\uD83D\uDD27","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_mechanic_tone4","woman_mechanic_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍\uD83D\uDD27","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_mechanic_tone5","woman_mechanic_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍\uD83D\uDD27","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_mechanic"],"surrogates":"\uD83D\uDC68‍\uD83D\uDD27","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["man_mechanic_tone1","man_mechanic_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFB‍\uD83D\uDD27","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_mechanic_tone2","man_mechanic_medium_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFC‍\uD83D\uDD27","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_mechanic_tone3","man_mechanic_medium_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFD‍\uD83D\uDD27","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_mechanic_tone4","man_mechanic_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFE‍\uD83D\uDD27","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_mechanic_tone5","man_mechanic_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFF‍\uD83D\uDD27","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["scientist"],"surrogates":"\uD83E\uDDD1‍\uD83D\uDD2C","unicodeVersion":12.1,"hasDiversity":true,"diversityChildren":[{"names":["scientist_tone1","scientist_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFB‍\uD83D\uDD2C","unicodeVersion":12.1,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["scientist_tone2","scientist_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFC‍\uD83D\uDD2C","unicodeVersion":12.1,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["scientist_tone3","scientist_medium_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFD‍\uD83D\uDD2C","unicodeVersion":12.1,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["scientist_tone4","scientist_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFE‍\uD83D\uDD2C","unicodeVersion":12.1,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["scientist_tone5","scientist_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFF‍\uD83D\uDD2C","unicodeVersion":12.1,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_scientist"],"surrogates":"\uD83D\uDC69‍\uD83D\uDD2C","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["woman_scientist_tone1","woman_scientist_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍\uD83D\uDD2C","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_scientist_tone2","woman_scientist_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍\uD83D\uDD2C","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_scientist_tone3","woman_scientist_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍\uD83D\uDD2C","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_scientist_tone4","woman_scientist_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍\uD83D\uDD2C","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_scientist_tone5","woman_scientist_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍\uD83D\uDD2C","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_scientist"],"surrogates":"\uD83D\uDC68‍\uD83D\uDD2C","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["man_scientist_tone1","man_scientist_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFB‍\uD83D\uDD2C","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_scientist_tone2","man_scientist_medium_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFC‍\uD83D\uDD2C","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_scientist_tone3","man_scientist_medium_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFD‍\uD83D\uDD2C","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_scientist_tone4","man_scientist_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFE‍\uD83D\uDD2C","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_scientist_tone5","man_scientist_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFF‍\uD83D\uDD2C","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["artist"],"surrogates":"\uD83E\uDDD1‍\uD83C\uDFA8","unicodeVersion":12.1,"hasDiversity":true,"diversityChildren":[{"names":["artist_tone1","artist_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFB‍\uD83C\uDFA8","unicodeVersion":12.1,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["artist_tone2","artist_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFC‍\uD83C\uDFA8","unicodeVersion":12.1,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["artist_tone3","artist_medium_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFD‍\uD83C\uDFA8","unicodeVersion":12.1,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["artist_tone4","artist_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFE‍\uD83C\uDFA8","unicodeVersion":12.1,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["artist_tone5","artist_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFF‍\uD83C\uDFA8","unicodeVersion":12.1,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_artist"],"surrogates":"\uD83D\uDC69‍\uD83C\uDFA8","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["woman_artist_tone1","woman_artist_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍\uD83C\uDFA8","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_artist_tone2","woman_artist_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍\uD83C\uDFA8","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_artist_tone3","woman_artist_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍\uD83C\uDFA8","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_artist_tone4","woman_artist_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍\uD83C\uDFA8","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_artist_tone5","woman_artist_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍\uD83C\uDFA8","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_artist"],"surrogates":"\uD83D\uDC68‍\uD83C\uDFA8","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["man_artist_tone1","man_artist_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFB‍\uD83C\uDFA8","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_artist_tone2","man_artist_medium_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFC‍\uD83C\uDFA8","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_artist_tone3","man_artist_medium_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFD‍\uD83C\uDFA8","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_artist_tone4","man_artist_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFE‍\uD83C\uDFA8","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_artist_tone5","man_artist_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFF‍\uD83C\uDFA8","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["firefighter"],"surrogates":"\uD83E\uDDD1‍\uD83D\uDE92","unicodeVersion":12.1,"hasDiversity":true,"diversityChildren":[{"names":["firefighter_tone1","firefighter_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFB‍\uD83D\uDE92","unicodeVersion":12.1,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["firefighter_tone2","firefighter_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFC‍\uD83D\uDE92","unicodeVersion":12.1,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["firefighter_tone3","firefighter_medium_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFD‍\uD83D\uDE92","unicodeVersion":12.1,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["firefighter_tone4","firefighter_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFE‍\uD83D\uDE92","unicodeVersion":12.1,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["firefighter_tone5","firefighter_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFF‍\uD83D\uDE92","unicodeVersion":12.1,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_firefighter"],"surrogates":"\uD83D\uDC69‍\uD83D\uDE92","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["woman_firefighter_tone1","woman_firefighter_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍\uD83D\uDE92","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_firefighter_tone2","woman_firefighter_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍\uD83D\uDE92","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_firefighter_tone3","woman_firefighter_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍\uD83D\uDE92","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_firefighter_tone4","woman_firefighter_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍\uD83D\uDE92","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_firefighter_tone5","woman_firefighter_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍\uD83D\uDE92","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_firefighter"],"surrogates":"\uD83D\uDC68‍\uD83D\uDE92","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["man_firefighter_tone1","man_firefighter_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFB‍\uD83D\uDE92","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_firefighter_tone2","man_firefighter_medium_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFC‍\uD83D\uDE92","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_firefighter_tone3","man_firefighter_medium_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFD‍\uD83D\uDE92","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_firefighter_tone4","man_firefighter_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFE‍\uD83D\uDE92","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_firefighter_tone5","man_firefighter_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFF‍\uD83D\uDE92","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["pilot"],"surrogates":"\uD83E\uDDD1‍✈️","unicodeVersion":12.1,"hasDiversity":true,"diversityChildren":[{"names":["pilot_tone1","pilot_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFB‍✈️","unicodeVersion":12.1,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["pilot_tone2","pilot_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFC‍✈️","unicodeVersion":12.1,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["pilot_tone3","pilot_medium_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFD‍✈️","unicodeVersion":12.1,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["pilot_tone4","pilot_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFE‍✈️","unicodeVersion":12.1,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["pilot_tone5","pilot_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFF‍✈️","unicodeVersion":12.1,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_pilot"],"surrogates":"\uD83D\uDC69‍✈️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["woman_pilot_tone1","woman_pilot_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍✈️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_pilot_tone2","woman_pilot_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍✈️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_pilot_tone3","woman_pilot_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍✈️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_pilot_tone4","woman_pilot_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍✈️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_pilot_tone5","woman_pilot_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍✈️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_pilot"],"surrogates":"\uD83D\uDC68‍✈️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["man_pilot_tone1","man_pilot_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFB‍✈️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_pilot_tone2","man_pilot_medium_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFC‍✈️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_pilot_tone3","man_pilot_medium_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFD‍✈️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_pilot_tone4","man_pilot_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFE‍✈️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_pilot_tone5","man_pilot_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFF‍✈️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["astronaut"],"surrogates":"\uD83E\uDDD1‍\uD83D\uDE80","unicodeVersion":12.1,"hasDiversity":true,"diversityChildren":[{"names":["astronaut_tone1","astronaut_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFB‍\uD83D\uDE80","unicodeVersion":12.1,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["astronaut_tone2","astronaut_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFC‍\uD83D\uDE80","unicodeVersion":12.1,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["astronaut_tone3","astronaut_medium_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFD‍\uD83D\uDE80","unicodeVersion":12.1,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["astronaut_tone4","astronaut_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFE‍\uD83D\uDE80","unicodeVersion":12.1,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["astronaut_tone5","astronaut_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFF‍\uD83D\uDE80","unicodeVersion":12.1,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_astronaut"],"surrogates":"\uD83D\uDC69‍\uD83D\uDE80","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["woman_astronaut_tone1","woman_astronaut_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍\uD83D\uDE80","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_astronaut_tone2","woman_astronaut_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍\uD83D\uDE80","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_astronaut_tone3","woman_astronaut_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍\uD83D\uDE80","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_astronaut_tone4","woman_astronaut_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍\uD83D\uDE80","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_astronaut_tone5","woman_astronaut_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍\uD83D\uDE80","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_astronaut"],"surrogates":"\uD83D\uDC68‍\uD83D\uDE80","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["man_astronaut_tone1","man_astronaut_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFB‍\uD83D\uDE80","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_astronaut_tone2","man_astronaut_medium_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFC‍\uD83D\uDE80","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_astronaut_tone3","man_astronaut_medium_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFD‍\uD83D\uDE80","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_astronaut_tone4","man_astronaut_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFE‍\uD83D\uDE80","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_astronaut_tone5","man_astronaut_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFF‍\uD83D\uDE80","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["judge"],"surrogates":"\uD83E\uDDD1‍⚖️","unicodeVersion":12.1,"hasDiversity":true,"diversityChildren":[{"names":["judge_tone1","judge_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFB‍⚖️","unicodeVersion":12.1,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["judge_tone2","judge_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFC‍⚖️","unicodeVersion":12.1,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["judge_tone3","judge_medium_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFD‍⚖️","unicodeVersion":12.1,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["judge_tone4","judge_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFE‍⚖️","unicodeVersion":12.1,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["judge_tone5","judge_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFF‍⚖️","unicodeVersion":12.1,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_judge"],"surrogates":"\uD83D\uDC69‍⚖️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["woman_judge_tone1","woman_judge_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍⚖️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_judge_tone2","woman_judge_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍⚖️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_judge_tone3","woman_judge_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍⚖️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_judge_tone4","woman_judge_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍⚖️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_judge_tone5","woman_judge_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍⚖️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_judge"],"surrogates":"\uD83D\uDC68‍⚖️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["man_judge_tone1","man_judge_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFB‍⚖️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_judge_tone2","man_judge_medium_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFC‍⚖️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_judge_tone3","man_judge_medium_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFD‍⚖️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_judge_tone4","man_judge_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFE‍⚖️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_judge_tone5","man_judge_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFF‍⚖️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["person_with_veil"],"surrogates":"\uD83D\uDC70","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["person_with_veil_tone1"],"surrogates":"\uD83D\uDC70\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_with_veil_tone2"],"surrogates":"\uD83D\uDC70\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_with_veil_tone3"],"surrogates":"\uD83D\uDC70\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_with_veil_tone4"],"surrogates":"\uD83D\uDC70\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_with_veil_tone5"],"surrogates":"\uD83D\uDC70\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_with_veil","bride_with_veil"],"surrogates":"\uD83D\uDC70‍♀️","unicodeVersion":13,"hasDiversity":true,"diversityChildren":[{"names":["woman_with_veil_tone1","woman_with_veil_light_skin_tone"],"surrogates":"\uD83D\uDC70\uD83C\uDFFB‍♀️","unicodeVersion":13,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_with_veil_tone2","woman_with_veil_medium_light_skin_tone"],"surrogates":"\uD83D\uDC70\uD83C\uDFFC‍♀️","unicodeVersion":13,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_with_veil_tone3","woman_with_veil_medium_skin_tone"],"surrogates":"\uD83D\uDC70\uD83C\uDFFD‍♀️","unicodeVersion":13,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_with_veil_tone4","woman_with_veil_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC70\uD83C\uDFFE‍♀️","unicodeVersion":13,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_with_veil_tone5","woman_with_veil_dark_skin_tone"],"surrogates":"\uD83D\uDC70\uD83C\uDFFF‍♀️","unicodeVersion":13,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_with_veil"],"surrogates":"\uD83D\uDC70‍♂️","unicodeVersion":13,"hasDiversity":true,"diversityChildren":[{"names":["man_with_veil_tone1","man_with_veil_light_skin_tone"],"surrogates":"\uD83D\uDC70\uD83C\uDFFB‍♂️","unicodeVersion":13,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_with_veil_tone2","man_with_veil_medium_light_skin_tone"],"surrogates":"\uD83D\uDC70\uD83C\uDFFC‍♂️","unicodeVersion":13,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_with_veil_tone3","man_with_veil_medium_skin_tone"],"surrogates":"\uD83D\uDC70\uD83C\uDFFD‍♂️","unicodeVersion":13,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_with_veil_tone4","man_with_veil_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC70\uD83C\uDFFE‍♂️","unicodeVersion":13,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_with_veil_tone5","man_with_veil_dark_skin_tone"],"surrogates":"\uD83D\uDC70\uD83C\uDFFF‍♂️","unicodeVersion":13,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["person_in_tuxedo"],"surrogates":"\uD83E\uDD35","unicodeVersion":9,"hasDiversity":true,"diversityChildren":[{"names":["person_in_tuxedo_tone1","tuxedo_tone1"],"surrogates":"\uD83E\uDD35\uD83C\uDFFB","unicodeVersion":9,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_in_tuxedo_tone2","tuxedo_tone2"],"surrogates":"\uD83E\uDD35\uD83C\uDFFC","unicodeVersion":9,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_in_tuxedo_tone3","tuxedo_tone3"],"surrogates":"\uD83E\uDD35\uD83C\uDFFD","unicodeVersion":9,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_in_tuxedo_tone4","tuxedo_tone4"],"surrogates":"\uD83E\uDD35\uD83C\uDFFE","unicodeVersion":9,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_in_tuxedo_tone5","tuxedo_tone5"],"surrogates":"\uD83E\uDD35\uD83C\uDFFF","unicodeVersion":9,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_in_tuxedo"],"surrogates":"\uD83E\uDD35‍♀️","unicodeVersion":13,"hasDiversity":true,"diversityChildren":[{"names":["woman_in_tuxedo_tone1","woman_in_tuxedo_light_skin_tone"],"surrogates":"\uD83E\uDD35\uD83C\uDFFB‍♀️","unicodeVersion":13,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_in_tuxedo_tone2","woman_in_tuxedo_medium_light_skin_tone"],"surrogates":"\uD83E\uDD35\uD83C\uDFFC‍♀️","unicodeVersion":13,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_in_tuxedo_tone3","woman_in_tuxedo_medium_skin_tone"],"surrogates":"\uD83E\uDD35\uD83C\uDFFD‍♀️","unicodeVersion":13,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_in_tuxedo_tone4","woman_in_tuxedo_medium_dark_skin_tone"],"surrogates":"\uD83E\uDD35\uD83C\uDFFE‍♀️","unicodeVersion":13,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_in_tuxedo_tone5","woman_in_tuxedo_dark_skin_tone"],"surrogates":"\uD83E\uDD35\uD83C\uDFFF‍♀️","unicodeVersion":13,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_in_tuxedo"],"surrogates":"\uD83E\uDD35‍♂️","unicodeVersion":13,"hasDiversity":true,"diversityChildren":[{"names":["man_in_tuxedo_tone1","man_in_tuxedo_light_skin_tone"],"surrogates":"\uD83E\uDD35\uD83C\uDFFB‍♂️","unicodeVersion":13,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_in_tuxedo_tone2","man_in_tuxedo_medium_light_skin_tone"],"surrogates":"\uD83E\uDD35\uD83C\uDFFC‍♂️","unicodeVersion":13,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_in_tuxedo_tone3","man_in_tuxedo_medium_skin_tone"],"surrogates":"\uD83E\uDD35\uD83C\uDFFD‍♂️","unicodeVersion":13,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_in_tuxedo_tone4","man_in_tuxedo_medium_dark_skin_tone"],"surrogates":"\uD83E\uDD35\uD83C\uDFFE‍♂️","unicodeVersion":13,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_in_tuxedo_tone5","man_in_tuxedo_dark_skin_tone"],"surrogates":"\uD83E\uDD35\uD83C\uDFFF‍♂️","unicodeVersion":13,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["person_with_crown"],"surrogates":"\uD83E\uDEC5","unicodeVersion":14,"hasDiversity":true,"diversityChildren":[{"names":["person_with_crown_tone1","person_with_crown_light_skin_tone"],"surrogates":"\uD83E\uDEC5\uD83C\uDFFB","unicodeVersion":14,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_with_crown_tone2","person_with_crown_medium_light_skin_tone"],"surrogates":"\uD83E\uDEC5\uD83C\uDFFC","unicodeVersion":14,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_with_crown_tone3","person_with_crown_medium_skin_tone"],"surrogates":"\uD83E\uDEC5\uD83C\uDFFD","unicodeVersion":14,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_with_crown_tone4","person_with_crown_medium_dark_skin_tone"],"surrogates":"\uD83E\uDEC5\uD83C\uDFFE","unicodeVersion":14,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_with_crown_tone5","person_with_crown_dark_skin_tone"],"surrogates":"\uD83E\uDEC5\uD83C\uDFFF","unicodeVersion":14,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["princess"],"surrogates":"\uD83D\uDC78","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["princess_tone1"],"surrogates":"\uD83D\uDC78\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["princess_tone2"],"surrogates":"\uD83D\uDC78\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["princess_tone3"],"surrogates":"\uD83D\uDC78\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["princess_tone4"],"surrogates":"\uD83D\uDC78\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["princess_tone5"],"surrogates":"\uD83D\uDC78\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["prince"],"surrogates":"\uD83E\uDD34","unicodeVersion":9,"hasDiversity":true,"diversityChildren":[{"names":["prince_tone1"],"surrogates":"\uD83E\uDD34\uD83C\uDFFB","unicodeVersion":9,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["prince_tone2"],"surrogates":"\uD83E\uDD34\uD83C\uDFFC","unicodeVersion":9,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["prince_tone3"],"surrogates":"\uD83E\uDD34\uD83C\uDFFD","unicodeVersion":9,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["prince_tone4"],"surrogates":"\uD83E\uDD34\uD83C\uDFFE","unicodeVersion":9,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["prince_tone5"],"surrogates":"\uD83E\uDD34\uD83C\uDFFF","unicodeVersion":9,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["superhero"],"surrogates":"\uD83E\uDDB8","unicodeVersion":11,"hasDiversity":true,"diversityChildren":[{"names":["superhero_tone1","superhero_light_skin_tone"],"surrogates":"\uD83E\uDDB8\uD83C\uDFFB","unicodeVersion":11,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["superhero_tone2","superhero_medium_light_skin_tone"],"surrogates":"\uD83E\uDDB8\uD83C\uDFFC","unicodeVersion":11,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["superhero_tone3","superhero_medium_skin_tone"],"surrogates":"\uD83E\uDDB8\uD83C\uDFFD","unicodeVersion":11,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["superhero_tone4","superhero_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDB8\uD83C\uDFFE","unicodeVersion":11,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["superhero_tone5","superhero_dark_skin_tone"],"surrogates":"\uD83E\uDDB8\uD83C\uDFFF","unicodeVersion":11,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_superhero"],"surrogates":"\uD83E\uDDB8‍♀️","unicodeVersion":11,"hasDiversity":true,"diversityChildren":[{"names":["woman_superhero_tone1","woman_superhero_light_skin_tone"],"surrogates":"\uD83E\uDDB8\uD83C\uDFFB‍♀️","unicodeVersion":11,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_superhero_tone2","woman_superhero_medium_light_skin_tone"],"surrogates":"\uD83E\uDDB8\uD83C\uDFFC‍♀️","unicodeVersion":11,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_superhero_tone3","woman_superhero_medium_skin_tone"],"surrogates":"\uD83E\uDDB8\uD83C\uDFFD‍♀️","unicodeVersion":11,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_superhero_tone4","woman_superhero_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDB8\uD83C\uDFFE‍♀️","unicodeVersion":11,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_superhero_tone5","woman_superhero_dark_skin_tone"],"surrogates":"\uD83E\uDDB8\uD83C\uDFFF‍♀️","unicodeVersion":11,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_superhero"],"surrogates":"\uD83E\uDDB8‍♂️","unicodeVersion":11,"hasDiversity":true,"diversityChildren":[{"names":["man_superhero_tone1","man_superhero_light_skin_tone"],"surrogates":"\uD83E\uDDB8\uD83C\uDFFB‍♂️","unicodeVersion":11,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_superhero_tone2","man_superhero_medium_light_skin_tone"],"surrogates":"\uD83E\uDDB8\uD83C\uDFFC‍♂️","unicodeVersion":11,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_superhero_tone3","man_superhero_medium_skin_tone"],"surrogates":"\uD83E\uDDB8\uD83C\uDFFD‍♂️","unicodeVersion":11,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_superhero_tone4","man_superhero_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDB8\uD83C\uDFFE‍♂️","unicodeVersion":11,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_superhero_tone5","man_superhero_dark_skin_tone"],"surrogates":"\uD83E\uDDB8\uD83C\uDFFF‍♂️","unicodeVersion":11,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["supervillain"],"surrogates":"\uD83E\uDDB9","unicodeVersion":11,"hasDiversity":true,"diversityChildren":[{"names":["supervillain_tone1","supervillain_light_skin_tone"],"surrogates":"\uD83E\uDDB9\uD83C\uDFFB","unicodeVersion":11,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["supervillain_tone2","supervillain_medium_light_skin_tone"],"surrogates":"\uD83E\uDDB9\uD83C\uDFFC","unicodeVersion":11,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["supervillain_tone3","supervillain_medium_skin_tone"],"surrogates":"\uD83E\uDDB9\uD83C\uDFFD","unicodeVersion":11,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["supervillain_tone4","supervillain_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDB9\uD83C\uDFFE","unicodeVersion":11,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["supervillain_tone5","supervillain_dark_skin_tone"],"surrogates":"\uD83E\uDDB9\uD83C\uDFFF","unicodeVersion":11,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_supervillain"],"surrogates":"\uD83E\uDDB9‍♀️","unicodeVersion":11,"hasDiversity":true,"diversityChildren":[{"names":["woman_supervillain_tone1","woman_supervillain_light_skin_tone"],"surrogates":"\uD83E\uDDB9\uD83C\uDFFB‍♀️","unicodeVersion":11,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_supervillain_tone2","woman_supervillain_medium_light_skin_tone"],"surrogates":"\uD83E\uDDB9\uD83C\uDFFC‍♀️","unicodeVersion":11,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_supervillain_tone3","woman_supervillain_medium_skin_tone"],"surrogates":"\uD83E\uDDB9\uD83C\uDFFD‍♀️","unicodeVersion":11,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_supervillain_tone4","woman_supervillain_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDB9\uD83C\uDFFE‍♀️","unicodeVersion":11,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_supervillain_tone5","woman_supervillain_dark_skin_tone"],"surrogates":"\uD83E\uDDB9\uD83C\uDFFF‍♀️","unicodeVersion":11,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_supervillain"],"surrogates":"\uD83E\uDDB9‍♂️","unicodeVersion":11,"hasDiversity":true,"diversityChildren":[{"names":["man_supervillain_tone1","man_supervillain_light_skin_tone"],"surrogates":"\uD83E\uDDB9\uD83C\uDFFB‍♂️","unicodeVersion":11,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_supervillain_tone2","man_supervillain_medium_light_skin_tone"],"surrogates":"\uD83E\uDDB9\uD83C\uDFFC‍♂️","unicodeVersion":11,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_supervillain_tone3","man_supervillain_medium_skin_tone"],"surrogates":"\uD83E\uDDB9\uD83C\uDFFD‍♂️","unicodeVersion":11,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_supervillain_tone4","man_supervillain_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDB9\uD83C\uDFFE‍♂️","unicodeVersion":11,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_supervillain_tone5","man_supervillain_dark_skin_tone"],"surrogates":"\uD83E\uDDB9\uD83C\uDFFF‍♂️","unicodeVersion":11,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["ninja"],"surrogates":"\uD83E\uDD77","unicodeVersion":13,"hasDiversity":true,"diversityChildren":[{"names":["ninja_tone1","ninja_light_skin_tone"],"surrogates":"\uD83E\uDD77\uD83C\uDFFB","unicodeVersion":13,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["ninja_tone2","ninja_medium_light_skin_tone"],"surrogates":"\uD83E\uDD77\uD83C\uDFFC","unicodeVersion":13,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["ninja_tone3","ninja_medium_skin_tone"],"surrogates":"\uD83E\uDD77\uD83C\uDFFD","unicodeVersion":13,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["ninja_tone4","ninja_medium_dark_skin_tone"],"surrogates":"\uD83E\uDD77\uD83C\uDFFE","unicodeVersion":13,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["ninja_tone5","ninja_dark_skin_tone"],"surrogates":"\uD83E\uDD77\uD83C\uDFFF","unicodeVersion":13,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["mx_claus"],"surrogates":"\uD83E\uDDD1‍\uD83C\uDF84","unicodeVersion":13,"hasDiversity":true,"diversityChildren":[{"names":["mx_claus_tone1","mx_claus_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFB‍\uD83C\uDF84","unicodeVersion":13,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["mx_claus_tone2","mx_claus_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFC‍\uD83C\uDF84","unicodeVersion":13,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["mx_claus_tone3","mx_claus_medium_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFD‍\uD83C\uDF84","unicodeVersion":13,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["mx_claus_tone4","mx_claus_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFE‍\uD83C\uDF84","unicodeVersion":13,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["mx_claus_tone5","mx_claus_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFF‍\uD83C\uDF84","unicodeVersion":13,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["mrs_claus","mother_christmas"],"surrogates":"\uD83E\uDD36","unicodeVersion":9,"hasDiversity":true,"diversityChildren":[{"names":["mrs_claus_tone1","mother_christmas_tone1"],"surrogates":"\uD83E\uDD36\uD83C\uDFFB","unicodeVersion":9,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["mrs_claus_tone2","mother_christmas_tone2"],"surrogates":"\uD83E\uDD36\uD83C\uDFFC","unicodeVersion":9,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["mrs_claus_tone3","mother_christmas_tone3"],"surrogates":"\uD83E\uDD36\uD83C\uDFFD","unicodeVersion":9,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["mrs_claus_tone4","mother_christmas_tone4"],"surrogates":"\uD83E\uDD36\uD83C\uDFFE","unicodeVersion":9,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["mrs_claus_tone5","mother_christmas_tone5"],"surrogates":"\uD83E\uDD36\uD83C\uDFFF","unicodeVersion":9,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["santa","santa_claus"],"surrogates":"\uD83C\uDF85","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["santa_tone1"],"surrogates":"\uD83C\uDF85\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["santa_tone2"],"surrogates":"\uD83C\uDF85\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["santa_tone3"],"surrogates":"\uD83C\uDF85\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["santa_tone4"],"surrogates":"\uD83C\uDF85\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["santa_tone5"],"surrogates":"\uD83C\uDF85\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["mage"],"surrogates":"\uD83E\uDDD9","unicodeVersion":10,"hasDiversity":true,"diversityChildren":[{"names":["mage_tone1","mage_light_skin_tone"],"surrogates":"\uD83E\uDDD9\uD83C\uDFFB","unicodeVersion":10,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["mage_tone2","mage_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD9\uD83C\uDFFC","unicodeVersion":10,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["mage_tone3","mage_medium_skin_tone"],"surrogates":"\uD83E\uDDD9\uD83C\uDFFD","unicodeVersion":10,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["mage_tone4","mage_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD9\uD83C\uDFFE","unicodeVersion":10,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["mage_tone5","mage_dark_skin_tone"],"surrogates":"\uD83E\uDDD9\uD83C\uDFFF","unicodeVersion":10,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_mage"],"surrogates":"\uD83E\uDDD9‍♀️","unicodeVersion":10,"hasDiversity":true,"diversityChildren":[{"names":["woman_mage_tone1","woman_mage_light_skin_tone"],"surrogates":"\uD83E\uDDD9\uD83C\uDFFB‍♀️","unicodeVersion":10,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_mage_tone2","woman_mage_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD9\uD83C\uDFFC‍♀️","unicodeVersion":10,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_mage_tone3","woman_mage_medium_skin_tone"],"surrogates":"\uD83E\uDDD9\uD83C\uDFFD‍♀️","unicodeVersion":10,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_mage_tone4","woman_mage_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD9\uD83C\uDFFE‍♀️","unicodeVersion":10,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_mage_tone5","woman_mage_dark_skin_tone"],"surrogates":"\uD83E\uDDD9\uD83C\uDFFF‍♀️","unicodeVersion":10,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_mage"],"surrogates":"\uD83E\uDDD9‍♂️","unicodeVersion":10,"hasDiversity":true,"diversityChildren":[{"names":["man_mage_tone1","man_mage_light_skin_tone"],"surrogates":"\uD83E\uDDD9\uD83C\uDFFB‍♂️","unicodeVersion":10,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_mage_tone2","man_mage_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD9\uD83C\uDFFC‍♂️","unicodeVersion":10,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_mage_tone3","man_mage_medium_skin_tone"],"surrogates":"\uD83E\uDDD9\uD83C\uDFFD‍♂️","unicodeVersion":10,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_mage_tone4","man_mage_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD9\uD83C\uDFFE‍♂️","unicodeVersion":10,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_mage_tone5","man_mage_dark_skin_tone"],"surrogates":"\uD83E\uDDD9\uD83C\uDFFF‍♂️","unicodeVersion":10,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["elf"],"surrogates":"\uD83E\uDDDD","unicodeVersion":10,"hasDiversity":true,"diversityChildren":[{"names":["elf_tone1","elf_light_skin_tone"],"surrogates":"\uD83E\uDDDD\uD83C\uDFFB","unicodeVersion":10,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["elf_tone2","elf_medium_light_skin_tone"],"surrogates":"\uD83E\uDDDD\uD83C\uDFFC","unicodeVersion":10,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["elf_tone3","elf_medium_skin_tone"],"surrogates":"\uD83E\uDDDD\uD83C\uDFFD","unicodeVersion":10,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["elf_tone4","elf_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDDD\uD83C\uDFFE","unicodeVersion":10,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["elf_tone5","elf_dark_skin_tone"],"surrogates":"\uD83E\uDDDD\uD83C\uDFFF","unicodeVersion":10,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_elf"],"surrogates":"\uD83E\uDDDD‍♀️","unicodeVersion":10,"hasDiversity":true,"diversityChildren":[{"names":["woman_elf_tone1","woman_elf_light_skin_tone"],"surrogates":"\uD83E\uDDDD\uD83C\uDFFB‍♀️","unicodeVersion":10,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_elf_tone2","woman_elf_medium_light_skin_tone"],"surrogates":"\uD83E\uDDDD\uD83C\uDFFC‍♀️","unicodeVersion":10,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_elf_tone3","woman_elf_medium_skin_tone"],"surrogates":"\uD83E\uDDDD\uD83C\uDFFD‍♀️","unicodeVersion":10,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_elf_tone4","woman_elf_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDDD\uD83C\uDFFE‍♀️","unicodeVersion":10,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_elf_tone5","woman_elf_dark_skin_tone"],"surrogates":"\uD83E\uDDDD\uD83C\uDFFF‍♀️","unicodeVersion":10,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_elf"],"surrogates":"\uD83E\uDDDD‍♂️","unicodeVersion":10,"hasDiversity":true,"diversityChildren":[{"names":["man_elf_tone1","man_elf_light_skin_tone"],"surrogates":"\uD83E\uDDDD\uD83C\uDFFB‍♂️","unicodeVersion":10,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_elf_tone2","man_elf_medium_light_skin_tone"],"surrogates":"\uD83E\uDDDD\uD83C\uDFFC‍♂️","unicodeVersion":10,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_elf_tone3","man_elf_medium_skin_tone"],"surrogates":"\uD83E\uDDDD\uD83C\uDFFD‍♂️","unicodeVersion":10,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_elf_tone4","man_elf_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDDD\uD83C\uDFFE‍♂️","unicodeVersion":10,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_elf_tone5","man_elf_dark_skin_tone"],"surrogates":"\uD83E\uDDDD\uD83C\uDFFF‍♂️","unicodeVersion":10,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["troll"],"surrogates":"\uD83E\uDDCC","unicodeVersion":14},{"names":["vampire"],"surrogates":"\uD83E\uDDDB","unicodeVersion":10,"hasDiversity":true,"diversityChildren":[{"names":["vampire_tone1","vampire_light_skin_tone"],"surrogates":"\uD83E\uDDDB\uD83C\uDFFB","unicodeVersion":10,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["vampire_tone2","vampire_medium_light_skin_tone"],"surrogates":"\uD83E\uDDDB\uD83C\uDFFC","unicodeVersion":10,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["vampire_tone3","vampire_medium_skin_tone"],"surrogates":"\uD83E\uDDDB\uD83C\uDFFD","unicodeVersion":10,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["vampire_tone4","vampire_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDDB\uD83C\uDFFE","unicodeVersion":10,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["vampire_tone5","vampire_dark_skin_tone"],"surrogates":"\uD83E\uDDDB\uD83C\uDFFF","unicodeVersion":10,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_vampire"],"surrogates":"\uD83E\uDDDB‍♀️","unicodeVersion":10,"hasDiversity":true,"diversityChildren":[{"names":["woman_vampire_tone1","woman_vampire_light_skin_tone"],"surrogates":"\uD83E\uDDDB\uD83C\uDFFB‍♀️","unicodeVersion":10,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_vampire_tone2","woman_vampire_medium_light_skin_tone"],"surrogates":"\uD83E\uDDDB\uD83C\uDFFC‍♀️","unicodeVersion":10,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_vampire_tone3","woman_vampire_medium_skin_tone"],"surrogates":"\uD83E\uDDDB\uD83C\uDFFD‍♀️","unicodeVersion":10,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_vampire_tone4","woman_vampire_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDDB\uD83C\uDFFE‍♀️","unicodeVersion":10,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_vampire_tone5","woman_vampire_dark_skin_tone"],"surrogates":"\uD83E\uDDDB\uD83C\uDFFF‍♀️","unicodeVersion":10,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_vampire"],"surrogates":"\uD83E\uDDDB‍♂️","unicodeVersion":10,"hasDiversity":true,"diversityChildren":[{"names":["man_vampire_tone1","man_vampire_light_skin_tone"],"surrogates":"\uD83E\uDDDB\uD83C\uDFFB‍♂️","unicodeVersion":10,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_vampire_tone2","man_vampire_medium_light_skin_tone"],"surrogates":"\uD83E\uDDDB\uD83C\uDFFC‍♂️","unicodeVersion":10,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_vampire_tone3","man_vampire_medium_skin_tone"],"surrogates":"\uD83E\uDDDB\uD83C\uDFFD‍♂️","unicodeVersion":10,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_vampire_tone4","man_vampire_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDDB\uD83C\uDFFE‍♂️","unicodeVersion":10,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_vampire_tone5","man_vampire_dark_skin_tone"],"surrogates":"\uD83E\uDDDB\uD83C\uDFFF‍♂️","unicodeVersion":10,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["zombie"],"surrogates":"\uD83E\uDDDF","unicodeVersion":10},{"names":["woman_zombie"],"surrogates":"\uD83E\uDDDF‍♀️","unicodeVersion":10},{"names":["man_zombie"],"surrogates":"\uD83E\uDDDF‍♂️","unicodeVersion":10},{"names":["genie"],"surrogates":"\uD83E\uDDDE","unicodeVersion":10},{"names":["woman_genie"],"surrogates":"\uD83E\uDDDE‍♀️","unicodeVersion":10},{"names":["man_genie"],"surrogates":"\uD83E\uDDDE‍♂️","unicodeVersion":10},{"names":["merperson"],"surrogates":"\uD83E\uDDDC","unicodeVersion":10,"hasDiversity":true,"diversityChildren":[{"names":["merperson_tone1","merperson_light_skin_tone"],"surrogates":"\uD83E\uDDDC\uD83C\uDFFB","unicodeVersion":10,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["merperson_tone2","merperson_medium_light_skin_tone"],"surrogates":"\uD83E\uDDDC\uD83C\uDFFC","unicodeVersion":10,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["merperson_tone3","merperson_medium_skin_tone"],"surrogates":"\uD83E\uDDDC\uD83C\uDFFD","unicodeVersion":10,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["merperson_tone4","merperson_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDDC\uD83C\uDFFE","unicodeVersion":10,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["merperson_tone5","merperson_dark_skin_tone"],"surrogates":"\uD83E\uDDDC\uD83C\uDFFF","unicodeVersion":10,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["mermaid"],"surrogates":"\uD83E\uDDDC‍♀️","unicodeVersion":10,"hasDiversity":true,"diversityChildren":[{"names":["mermaid_tone1","mermaid_light_skin_tone"],"surrogates":"\uD83E\uDDDC\uD83C\uDFFB‍♀️","unicodeVersion":10,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["mermaid_tone2","mermaid_medium_light_skin_tone"],"surrogates":"\uD83E\uDDDC\uD83C\uDFFC‍♀️","unicodeVersion":10,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["mermaid_tone3","mermaid_medium_skin_tone"],"surrogates":"\uD83E\uDDDC\uD83C\uDFFD‍♀️","unicodeVersion":10,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["mermaid_tone4","mermaid_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDDC\uD83C\uDFFE‍♀️","unicodeVersion":10,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["mermaid_tone5","mermaid_dark_skin_tone"],"surrogates":"\uD83E\uDDDC\uD83C\uDFFF‍♀️","unicodeVersion":10,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["merman"],"surrogates":"\uD83E\uDDDC‍♂️","unicodeVersion":10,"hasDiversity":true,"diversityChildren":[{"names":["merman_tone1","merman_light_skin_tone"],"surrogates":"\uD83E\uDDDC\uD83C\uDFFB‍♂️","unicodeVersion":10,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["merman_tone2","merman_medium_light_skin_tone"],"surrogates":"\uD83E\uDDDC\uD83C\uDFFC‍♂️","unicodeVersion":10,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["merman_tone3","merman_medium_skin_tone"],"surrogates":"\uD83E\uDDDC\uD83C\uDFFD‍♂️","unicodeVersion":10,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["merman_tone4","merman_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDDC\uD83C\uDFFE‍♂️","unicodeVersion":10,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["merman_tone5","merman_dark_skin_tone"],"surrogates":"\uD83E\uDDDC\uD83C\uDFFF‍♂️","unicodeVersion":10,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["fairy"],"surrogates":"\uD83E\uDDDA","unicodeVersion":10,"hasDiversity":true,"diversityChildren":[{"names":["fairy_tone1","fairy_light_skin_tone"],"surrogates":"\uD83E\uDDDA\uD83C\uDFFB","unicodeVersion":10,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["fairy_tone2","fairy_medium_light_skin_tone"],"surrogates":"\uD83E\uDDDA\uD83C\uDFFC","unicodeVersion":10,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["fairy_tone3","fairy_medium_skin_tone"],"surrogates":"\uD83E\uDDDA\uD83C\uDFFD","unicodeVersion":10,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["fairy_tone4","fairy_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDDA\uD83C\uDFFE","unicodeVersion":10,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["fairy_tone5","fairy_dark_skin_tone"],"surrogates":"\uD83E\uDDDA\uD83C\uDFFF","unicodeVersion":10,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_fairy"],"surrogates":"\uD83E\uDDDA‍♀️","unicodeVersion":10,"hasDiversity":true,"diversityChildren":[{"names":["woman_fairy_tone1","woman_fairy_light_skin_tone"],"surrogates":"\uD83E\uDDDA\uD83C\uDFFB‍♀️","unicodeVersion":10,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_fairy_tone2","woman_fairy_medium_light_skin_tone"],"surrogates":"\uD83E\uDDDA\uD83C\uDFFC‍♀️","unicodeVersion":10,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_fairy_tone3","woman_fairy_medium_skin_tone"],"surrogates":"\uD83E\uDDDA\uD83C\uDFFD‍♀️","unicodeVersion":10,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_fairy_tone4","woman_fairy_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDDA\uD83C\uDFFE‍♀️","unicodeVersion":10,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_fairy_tone5","woman_fairy_dark_skin_tone"],"surrogates":"\uD83E\uDDDA\uD83C\uDFFF‍♀️","unicodeVersion":10,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_fairy"],"surrogates":"\uD83E\uDDDA‍♂️","unicodeVersion":10,"hasDiversity":true,"diversityChildren":[{"names":["man_fairy_tone1","man_fairy_light_skin_tone"],"surrogates":"\uD83E\uDDDA\uD83C\uDFFB‍♂️","unicodeVersion":10,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_fairy_tone2","man_fairy_medium_light_skin_tone"],"surrogates":"\uD83E\uDDDA\uD83C\uDFFC‍♂️","unicodeVersion":10,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_fairy_tone3","man_fairy_medium_skin_tone"],"surrogates":"\uD83E\uDDDA\uD83C\uDFFD‍♂️","unicodeVersion":10,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_fairy_tone4","man_fairy_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDDA\uD83C\uDFFE‍♂️","unicodeVersion":10,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_fairy_tone5","man_fairy_dark_skin_tone"],"surrogates":"\uD83E\uDDDA\uD83C\uDFFF‍♂️","unicodeVersion":10,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["angel","baby_angel"],"surrogates":"\uD83D\uDC7C","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["angel_tone1"],"surrogates":"\uD83D\uDC7C\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["angel_tone2"],"surrogates":"\uD83D\uDC7C\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["angel_tone3"],"surrogates":"\uD83D\uDC7C\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["angel_tone4"],"surrogates":"\uD83D\uDC7C\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["angel_tone5"],"surrogates":"\uD83D\uDC7C\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["pregnant_person"],"surrogates":"\uD83E\uDEC4","unicodeVersion":14,"hasDiversity":true,"diversityChildren":[{"names":["pregnant_person_tone1","pregnant_person_light_skin_tone"],"surrogates":"\uD83E\uDEC4\uD83C\uDFFB","unicodeVersion":14,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["pregnant_person_tone2","pregnant_person_medium_light_skin_tone"],"surrogates":"\uD83E\uDEC4\uD83C\uDFFC","unicodeVersion":14,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["pregnant_person_tone3","pregnant_person_medium_skin_tone"],"surrogates":"\uD83E\uDEC4\uD83C\uDFFD","unicodeVersion":14,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["pregnant_person_tone4","pregnant_person_medium_dark_skin_tone"],"surrogates":"\uD83E\uDEC4\uD83C\uDFFE","unicodeVersion":14,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["pregnant_person_tone5","pregnant_person_dark_skin_tone"],"surrogates":"\uD83E\uDEC4\uD83C\uDFFF","unicodeVersion":14,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["pregnant_woman","expecting_woman"],"surrogates":"\uD83E\uDD30","unicodeVersion":9,"hasDiversity":true,"diversityChildren":[{"names":["pregnant_woman_tone1","expecting_woman_tone1"],"surrogates":"\uD83E\uDD30\uD83C\uDFFB","unicodeVersion":9,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["pregnant_woman_tone2","expecting_woman_tone2"],"surrogates":"\uD83E\uDD30\uD83C\uDFFC","unicodeVersion":9,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["pregnant_woman_tone3","expecting_woman_tone3"],"surrogates":"\uD83E\uDD30\uD83C\uDFFD","unicodeVersion":9,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["pregnant_woman_tone4","expecting_woman_tone4"],"surrogates":"\uD83E\uDD30\uD83C\uDFFE","unicodeVersion":9,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["pregnant_woman_tone5","expecting_woman_tone5"],"surrogates":"\uD83E\uDD30\uD83C\uDFFF","unicodeVersion":9,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["pregnant_man"],"surrogates":"\uD83E\uDEC3","unicodeVersion":14,"hasDiversity":true,"diversityChildren":[{"names":["pregnant_man_tone1","pregnant_man_light_skin_tone"],"surrogates":"\uD83E\uDEC3\uD83C\uDFFB","unicodeVersion":14,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["pregnant_man_tone2","pregnant_man_medium_light_skin_tone"],"surrogates":"\uD83E\uDEC3\uD83C\uDFFC","unicodeVersion":14,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["pregnant_man_tone3","pregnant_man_medium_skin_tone"],"surrogates":"\uD83E\uDEC3\uD83C\uDFFD","unicodeVersion":14,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["pregnant_man_tone4","pregnant_man_medium_dark_skin_tone"],"surrogates":"\uD83E\uDEC3\uD83C\uDFFE","unicodeVersion":14,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["pregnant_man_tone5","pregnant_man_dark_skin_tone"],"surrogates":"\uD83E\uDEC3\uD83C\uDFFF","unicodeVersion":14,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["breast_feeding"],"surrogates":"\uD83E\uDD31","unicodeVersion":10,"hasDiversity":true,"diversityChildren":[{"names":["breast_feeding_tone1","breast_feeding_light_skin_tone"],"surrogates":"\uD83E\uDD31\uD83C\uDFFB","unicodeVersion":10,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["breast_feeding_tone2","breast_feeding_medium_light_skin_tone"],"surrogates":"\uD83E\uDD31\uD83C\uDFFC","unicodeVersion":10,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["breast_feeding_tone3","breast_feeding_medium_skin_tone"],"surrogates":"\uD83E\uDD31\uD83C\uDFFD","unicodeVersion":10,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["breast_feeding_tone4","breast_feeding_medium_dark_skin_tone"],"surrogates":"\uD83E\uDD31\uD83C\uDFFE","unicodeVersion":10,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["breast_feeding_tone5","breast_feeding_dark_skin_tone"],"surrogates":"\uD83E\uDD31\uD83C\uDFFF","unicodeVersion":10,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["person_feeding_baby"],"surrogates":"\uD83E\uDDD1‍\uD83C\uDF7C","unicodeVersion":13,"hasDiversity":true,"diversityChildren":[{"names":["person_feeding_baby_tone1","person_feeding_baby_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFB‍\uD83C\uDF7C","unicodeVersion":13,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_feeding_baby_tone2","person_feeding_baby_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFC‍\uD83C\uDF7C","unicodeVersion":13,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_feeding_baby_tone3","person_feeding_baby_medium_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFD‍\uD83C\uDF7C","unicodeVersion":13,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_feeding_baby_tone4","person_feeding_baby_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFE‍\uD83C\uDF7C","unicodeVersion":13,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_feeding_baby_tone5","person_feeding_baby_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFF‍\uD83C\uDF7C","unicodeVersion":13,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_feeding_baby"],"surrogates":"\uD83D\uDC69‍\uD83C\uDF7C","unicodeVersion":13,"hasDiversity":true,"diversityChildren":[{"names":["woman_feeding_baby_tone1","woman_feeding_baby_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍\uD83C\uDF7C","unicodeVersion":13,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_feeding_baby_tone2","woman_feeding_baby_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍\uD83C\uDF7C","unicodeVersion":13,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_feeding_baby_tone3","woman_feeding_baby_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍\uD83C\uDF7C","unicodeVersion":13,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_feeding_baby_tone4","woman_feeding_baby_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍\uD83C\uDF7C","unicodeVersion":13,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_feeding_baby_tone5","woman_feeding_baby_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍\uD83C\uDF7C","unicodeVersion":13,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_feeding_baby"],"surrogates":"\uD83D\uDC68‍\uD83C\uDF7C","unicodeVersion":13,"hasDiversity":true,"diversityChildren":[{"names":["man_feeding_baby_tone1","man_feeding_baby_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFB‍\uD83C\uDF7C","unicodeVersion":13,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_feeding_baby_tone2","man_feeding_baby_medium_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFC‍\uD83C\uDF7C","unicodeVersion":13,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_feeding_baby_tone3","man_feeding_baby_medium_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFD‍\uD83C\uDF7C","unicodeVersion":13,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_feeding_baby_tone4","man_feeding_baby_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFE‍\uD83C\uDF7C","unicodeVersion":13,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_feeding_baby_tone5","man_feeding_baby_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFF‍\uD83C\uDF7C","unicodeVersion":13,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["person_bowing","bow"],"surrogates":"\uD83D\uDE47","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["person_bowing_tone1","bow_tone1"],"surrogates":"\uD83D\uDE47\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_bowing_tone2","bow_tone2"],"surrogates":"\uD83D\uDE47\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_bowing_tone3","bow_tone3"],"surrogates":"\uD83D\uDE47\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_bowing_tone4","bow_tone4"],"surrogates":"\uD83D\uDE47\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_bowing_tone5","bow_tone5"],"surrogates":"\uD83D\uDE47\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_bowing"],"surrogates":"\uD83D\uDE47‍♀️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["woman_bowing_tone1","woman_bowing_light_skin_tone"],"surrogates":"\uD83D\uDE47\uD83C\uDFFB‍♀️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_bowing_tone2","woman_bowing_medium_light_skin_tone"],"surrogates":"\uD83D\uDE47\uD83C\uDFFC‍♀️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_bowing_tone3","woman_bowing_medium_skin_tone"],"surrogates":"\uD83D\uDE47\uD83C\uDFFD‍♀️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_bowing_tone4","woman_bowing_medium_dark_skin_tone"],"surrogates":"\uD83D\uDE47\uD83C\uDFFE‍♀️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_bowing_tone5","woman_bowing_dark_skin_tone"],"surrogates":"\uD83D\uDE47\uD83C\uDFFF‍♀️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_bowing"],"surrogates":"\uD83D\uDE47‍♂️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["man_bowing_tone1","man_bowing_light_skin_tone"],"surrogates":"\uD83D\uDE47\uD83C\uDFFB‍♂️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_bowing_tone2","man_bowing_medium_light_skin_tone"],"surrogates":"\uD83D\uDE47\uD83C\uDFFC‍♂️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_bowing_tone3","man_bowing_medium_skin_tone"],"surrogates":"\uD83D\uDE47\uD83C\uDFFD‍♂️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_bowing_tone4","man_bowing_medium_dark_skin_tone"],"surrogates":"\uD83D\uDE47\uD83C\uDFFE‍♂️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_bowing_tone5","man_bowing_dark_skin_tone"],"surrogates":"\uD83D\uDE47\uD83C\uDFFF‍♂️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["person_tipping_hand","information_desk_person"],"surrogates":"\uD83D\uDC81","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["person_tipping_hand_tone1","information_desk_person_tone1"],"surrogates":"\uD83D\uDC81\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_tipping_hand_tone2","information_desk_person_tone2"],"surrogates":"\uD83D\uDC81\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_tipping_hand_tone3","information_desk_person_tone3"],"surrogates":"\uD83D\uDC81\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_tipping_hand_tone4","information_desk_person_tone4"],"surrogates":"\uD83D\uDC81\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_tipping_hand_tone5","information_desk_person_tone5"],"surrogates":"\uD83D\uDC81\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_tipping_hand"],"surrogates":"\uD83D\uDC81‍♀️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["woman_tipping_hand_tone1","woman_tipping_hand_light_skin_tone"],"surrogates":"\uD83D\uDC81\uD83C\uDFFB‍♀️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_tipping_hand_tone2","woman_tipping_hand_medium_light_skin_tone"],"surrogates":"\uD83D\uDC81\uD83C\uDFFC‍♀️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_tipping_hand_tone3","woman_tipping_hand_medium_skin_tone"],"surrogates":"\uD83D\uDC81\uD83C\uDFFD‍♀️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_tipping_hand_tone4","woman_tipping_hand_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC81\uD83C\uDFFE‍♀️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_tipping_hand_tone5","woman_tipping_hand_dark_skin_tone"],"surrogates":"\uD83D\uDC81\uD83C\uDFFF‍♀️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_tipping_hand"],"surrogates":"\uD83D\uDC81‍♂️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["man_tipping_hand_tone1","man_tipping_hand_light_skin_tone"],"surrogates":"\uD83D\uDC81\uD83C\uDFFB‍♂️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_tipping_hand_tone2","man_tipping_hand_medium_light_skin_tone"],"surrogates":"\uD83D\uDC81\uD83C\uDFFC‍♂️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_tipping_hand_tone3","man_tipping_hand_medium_skin_tone"],"surrogates":"\uD83D\uDC81\uD83C\uDFFD‍♂️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_tipping_hand_tone4","man_tipping_hand_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC81\uD83C\uDFFE‍♂️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_tipping_hand_tone5","man_tipping_hand_dark_skin_tone"],"surrogates":"\uD83D\uDC81\uD83C\uDFFF‍♂️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["person_gesturing_no","no_good"],"surrogates":"\uD83D\uDE45","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["person_gesturing_no_tone1","no_good_tone1"],"surrogates":"\uD83D\uDE45\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_gesturing_no_tone2","no_good_tone2"],"surrogates":"\uD83D\uDE45\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_gesturing_no_tone3","no_good_tone3"],"surrogates":"\uD83D\uDE45\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_gesturing_no_tone4","no_good_tone4"],"surrogates":"\uD83D\uDE45\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_gesturing_no_tone5","no_good_tone5"],"surrogates":"\uD83D\uDE45\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_gesturing_no"],"surrogates":"\uD83D\uDE45‍♀️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["woman_gesturing_no_tone1","woman_gesturing_no_light_skin_tone"],"surrogates":"\uD83D\uDE45\uD83C\uDFFB‍♀️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_gesturing_no_tone2","woman_gesturing_no_medium_light_skin_tone"],"surrogates":"\uD83D\uDE45\uD83C\uDFFC‍♀️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_gesturing_no_tone3","woman_gesturing_no_medium_skin_tone"],"surrogates":"\uD83D\uDE45\uD83C\uDFFD‍♀️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_gesturing_no_tone4","woman_gesturing_no_medium_dark_skin_tone"],"surrogates":"\uD83D\uDE45\uD83C\uDFFE‍♀️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_gesturing_no_tone5","woman_gesturing_no_dark_skin_tone"],"surrogates":"\uD83D\uDE45\uD83C\uDFFF‍♀️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_gesturing_no"],"surrogates":"\uD83D\uDE45‍♂️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["man_gesturing_no_tone1","man_gesturing_no_light_skin_tone"],"surrogates":"\uD83D\uDE45\uD83C\uDFFB‍♂️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_gesturing_no_tone2","man_gesturing_no_medium_light_skin_tone"],"surrogates":"\uD83D\uDE45\uD83C\uDFFC‍♂️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_gesturing_no_tone3","man_gesturing_no_medium_skin_tone"],"surrogates":"\uD83D\uDE45\uD83C\uDFFD‍♂️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_gesturing_no_tone4","man_gesturing_no_medium_dark_skin_tone"],"surrogates":"\uD83D\uDE45\uD83C\uDFFE‍♂️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_gesturing_no_tone5","man_gesturing_no_dark_skin_tone"],"surrogates":"\uD83D\uDE45\uD83C\uDFFF‍♂️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["person_gesturing_ok"],"surrogates":"\uD83D\uDE46","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["person_gesturing_ok_tone1"],"surrogates":"\uD83D\uDE46\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_gesturing_ok_tone2"],"surrogates":"\uD83D\uDE46\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_gesturing_ok_tone3"],"surrogates":"\uD83D\uDE46\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_gesturing_ok_tone4"],"surrogates":"\uD83D\uDE46\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_gesturing_ok_tone5"],"surrogates":"\uD83D\uDE46\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_gesturing_ok"],"surrogates":"\uD83D\uDE46‍♀️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["woman_gesturing_ok_tone1","woman_gesturing_ok_light_skin_tone"],"surrogates":"\uD83D\uDE46\uD83C\uDFFB‍♀️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_gesturing_ok_tone2","woman_gesturing_ok_medium_light_skin_tone"],"surrogates":"\uD83D\uDE46\uD83C\uDFFC‍♀️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_gesturing_ok_tone3","woman_gesturing_ok_medium_skin_tone"],"surrogates":"\uD83D\uDE46\uD83C\uDFFD‍♀️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_gesturing_ok_tone4","woman_gesturing_ok_medium_dark_skin_tone"],"surrogates":"\uD83D\uDE46\uD83C\uDFFE‍♀️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_gesturing_ok_tone5","woman_gesturing_ok_dark_skin_tone"],"surrogates":"\uD83D\uDE46\uD83C\uDFFF‍♀️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_gesturing_ok"],"surrogates":"\uD83D\uDE46‍♂️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["man_gesturing_ok_tone1","man_gesturing_ok_light_skin_tone"],"surrogates":"\uD83D\uDE46\uD83C\uDFFB‍♂️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_gesturing_ok_tone2","man_gesturing_ok_medium_light_skin_tone"],"surrogates":"\uD83D\uDE46\uD83C\uDFFC‍♂️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_gesturing_ok_tone3","man_gesturing_ok_medium_skin_tone"],"surrogates":"\uD83D\uDE46\uD83C\uDFFD‍♂️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_gesturing_ok_tone4","man_gesturing_ok_medium_dark_skin_tone"],"surrogates":"\uD83D\uDE46\uD83C\uDFFE‍♂️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_gesturing_ok_tone5","man_gesturing_ok_dark_skin_tone"],"surrogates":"\uD83D\uDE46\uD83C\uDFFF‍♂️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["person_raising_hand","raising_hand"],"surrogates":"\uD83D\uDE4B","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["person_raising_hand_tone1","raising_hand_tone1"],"surrogates":"\uD83D\uDE4B\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_raising_hand_tone2","raising_hand_tone2"],"surrogates":"\uD83D\uDE4B\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_raising_hand_tone3","raising_hand_tone3"],"surrogates":"\uD83D\uDE4B\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_raising_hand_tone4","raising_hand_tone4"],"surrogates":"\uD83D\uDE4B\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_raising_hand_tone5","raising_hand_tone5"],"surrogates":"\uD83D\uDE4B\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_raising_hand"],"surrogates":"\uD83D\uDE4B‍♀️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["woman_raising_hand_tone1","woman_raising_hand_light_skin_tone"],"surrogates":"\uD83D\uDE4B\uD83C\uDFFB‍♀️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_raising_hand_tone2","woman_raising_hand_medium_light_skin_tone"],"surrogates":"\uD83D\uDE4B\uD83C\uDFFC‍♀️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_raising_hand_tone3","woman_raising_hand_medium_skin_tone"],"surrogates":"\uD83D\uDE4B\uD83C\uDFFD‍♀️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_raising_hand_tone4","woman_raising_hand_medium_dark_skin_tone"],"surrogates":"\uD83D\uDE4B\uD83C\uDFFE‍♀️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_raising_hand_tone5","woman_raising_hand_dark_skin_tone"],"surrogates":"\uD83D\uDE4B\uD83C\uDFFF‍♀️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_raising_hand"],"surrogates":"\uD83D\uDE4B‍♂️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["man_raising_hand_tone1","man_raising_hand_light_skin_tone"],"surrogates":"\uD83D\uDE4B\uD83C\uDFFB‍♂️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_raising_hand_tone2","man_raising_hand_medium_light_skin_tone"],"surrogates":"\uD83D\uDE4B\uD83C\uDFFC‍♂️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_raising_hand_tone3","man_raising_hand_medium_skin_tone"],"surrogates":"\uD83D\uDE4B\uD83C\uDFFD‍♂️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_raising_hand_tone4","man_raising_hand_medium_dark_skin_tone"],"surrogates":"\uD83D\uDE4B\uD83C\uDFFE‍♂️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_raising_hand_tone5","man_raising_hand_dark_skin_tone"],"surrogates":"\uD83D\uDE4B\uD83C\uDFFF‍♂️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["deaf_person"],"surrogates":"\uD83E\uDDCF","unicodeVersion":12,"hasDiversity":true,"diversityChildren":[{"names":["deaf_person_tone1","deaf_person_light_skin_tone"],"surrogates":"\uD83E\uDDCF\uD83C\uDFFB","unicodeVersion":12,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["deaf_person_tone2","deaf_person_medium_light_skin_tone"],"surrogates":"\uD83E\uDDCF\uD83C\uDFFC","unicodeVersion":12,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["deaf_person_tone3","deaf_person_medium_skin_tone"],"surrogates":"\uD83E\uDDCF\uD83C\uDFFD","unicodeVersion":12,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["deaf_person_tone4","deaf_person_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDCF\uD83C\uDFFE","unicodeVersion":12,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["deaf_person_tone5","deaf_person_dark_skin_tone"],"surrogates":"\uD83E\uDDCF\uD83C\uDFFF","unicodeVersion":12,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["deaf_woman"],"surrogates":"\uD83E\uDDCF‍♀️","unicodeVersion":12,"hasDiversity":true,"diversityChildren":[{"names":["deaf_woman_tone1","deaf_woman_light_skin_tone"],"surrogates":"\uD83E\uDDCF\uD83C\uDFFB‍♀️","unicodeVersion":12,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["deaf_woman_tone2","deaf_woman_medium_light_skin_tone"],"surrogates":"\uD83E\uDDCF\uD83C\uDFFC‍♀️","unicodeVersion":12,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["deaf_woman_tone3","deaf_woman_medium_skin_tone"],"surrogates":"\uD83E\uDDCF\uD83C\uDFFD‍♀️","unicodeVersion":12,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["deaf_woman_tone4","deaf_woman_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDCF\uD83C\uDFFE‍♀️","unicodeVersion":12,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["deaf_woman_tone5","deaf_woman_dark_skin_tone"],"surrogates":"\uD83E\uDDCF\uD83C\uDFFF‍♀️","unicodeVersion":12,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["deaf_man"],"surrogates":"\uD83E\uDDCF‍♂️","unicodeVersion":12,"hasDiversity":true,"diversityChildren":[{"names":["deaf_man_tone1","deaf_man_light_skin_tone"],"surrogates":"\uD83E\uDDCF\uD83C\uDFFB‍♂️","unicodeVersion":12,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["deaf_man_tone2","deaf_man_medium_light_skin_tone"],"surrogates":"\uD83E\uDDCF\uD83C\uDFFC‍♂️","unicodeVersion":12,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["deaf_man_tone3","deaf_man_medium_skin_tone"],"surrogates":"\uD83E\uDDCF\uD83C\uDFFD‍♂️","unicodeVersion":12,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["deaf_man_tone4","deaf_man_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDCF\uD83C\uDFFE‍♂️","unicodeVersion":12,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["deaf_man_tone5","deaf_man_dark_skin_tone"],"surrogates":"\uD83E\uDDCF\uD83C\uDFFF‍♂️","unicodeVersion":12,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["person_facepalming","face_palm","facepalm"],"surrogates":"\uD83E\uDD26","unicodeVersion":9,"hasDiversity":true,"diversityChildren":[{"names":["person_facepalming_tone1","face_palm_tone1","facepalm_tone1"],"surrogates":"\uD83E\uDD26\uD83C\uDFFB","unicodeVersion":9,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_facepalming_tone2","face_palm_tone2","facepalm_tone2"],"surrogates":"\uD83E\uDD26\uD83C\uDFFC","unicodeVersion":9,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_facepalming_tone3","face_palm_tone3","facepalm_tone3"],"surrogates":"\uD83E\uDD26\uD83C\uDFFD","unicodeVersion":9,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_facepalming_tone4","face_palm_tone4","facepalm_tone4"],"surrogates":"\uD83E\uDD26\uD83C\uDFFE","unicodeVersion":9,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_facepalming_tone5","face_palm_tone5","facepalm_tone5"],"surrogates":"\uD83E\uDD26\uD83C\uDFFF","unicodeVersion":9,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_facepalming"],"surrogates":"\uD83E\uDD26‍♀️","unicodeVersion":9,"hasDiversity":true,"diversityChildren":[{"names":["woman_facepalming_tone1","woman_facepalming_light_skin_tone"],"surrogates":"\uD83E\uDD26\uD83C\uDFFB‍♀️","unicodeVersion":9,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_facepalming_tone2","woman_facepalming_medium_light_skin_tone"],"surrogates":"\uD83E\uDD26\uD83C\uDFFC‍♀️","unicodeVersion":9,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_facepalming_tone3","woman_facepalming_medium_skin_tone"],"surrogates":"\uD83E\uDD26\uD83C\uDFFD‍♀️","unicodeVersion":9,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_facepalming_tone4","woman_facepalming_medium_dark_skin_tone"],"surrogates":"\uD83E\uDD26\uD83C\uDFFE‍♀️","unicodeVersion":9,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_facepalming_tone5","woman_facepalming_dark_skin_tone"],"surrogates":"\uD83E\uDD26\uD83C\uDFFF‍♀️","unicodeVersion":9,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_facepalming"],"surrogates":"\uD83E\uDD26‍♂️","unicodeVersion":9,"hasDiversity":true,"diversityChildren":[{"names":["man_facepalming_tone1","man_facepalming_light_skin_tone"],"surrogates":"\uD83E\uDD26\uD83C\uDFFB‍♂️","unicodeVersion":9,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_facepalming_tone2","man_facepalming_medium_light_skin_tone"],"surrogates":"\uD83E\uDD26\uD83C\uDFFC‍♂️","unicodeVersion":9,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_facepalming_tone3","man_facepalming_medium_skin_tone"],"surrogates":"\uD83E\uDD26\uD83C\uDFFD‍♂️","unicodeVersion":9,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_facepalming_tone4","man_facepalming_medium_dark_skin_tone"],"surrogates":"\uD83E\uDD26\uD83C\uDFFE‍♂️","unicodeVersion":9,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_facepalming_tone5","man_facepalming_dark_skin_tone"],"surrogates":"\uD83E\uDD26\uD83C\uDFFF‍♂️","unicodeVersion":9,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["person_shrugging","shrug"],"surrogates":"\uD83E\uDD37","unicodeVersion":9,"hasDiversity":true,"diversityChildren":[{"names":["person_shrugging_tone1","shrug_tone1"],"surrogates":"\uD83E\uDD37\uD83C\uDFFB","unicodeVersion":9,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_shrugging_tone2","shrug_tone2"],"surrogates":"\uD83E\uDD37\uD83C\uDFFC","unicodeVersion":9,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_shrugging_tone3","shrug_tone3"],"surrogates":"\uD83E\uDD37\uD83C\uDFFD","unicodeVersion":9,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_shrugging_tone4","shrug_tone4"],"surrogates":"\uD83E\uDD37\uD83C\uDFFE","unicodeVersion":9,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_shrugging_tone5","shrug_tone5"],"surrogates":"\uD83E\uDD37\uD83C\uDFFF","unicodeVersion":9,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_shrugging"],"surrogates":"\uD83E\uDD37‍♀️","unicodeVersion":9,"hasDiversity":true,"diversityChildren":[{"names":["woman_shrugging_tone1","woman_shrugging_light_skin_tone"],"surrogates":"\uD83E\uDD37\uD83C\uDFFB‍♀️","unicodeVersion":9,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_shrugging_tone2","woman_shrugging_medium_light_skin_tone"],"surrogates":"\uD83E\uDD37\uD83C\uDFFC‍♀️","unicodeVersion":9,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_shrugging_tone3","woman_shrugging_medium_skin_tone"],"surrogates":"\uD83E\uDD37\uD83C\uDFFD‍♀️","unicodeVersion":9,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_shrugging_tone4","woman_shrugging_medium_dark_skin_tone"],"surrogates":"\uD83E\uDD37\uD83C\uDFFE‍♀️","unicodeVersion":9,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_shrugging_tone5","woman_shrugging_dark_skin_tone"],"surrogates":"\uD83E\uDD37\uD83C\uDFFF‍♀️","unicodeVersion":9,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_shrugging"],"surrogates":"\uD83E\uDD37‍♂️","unicodeVersion":9,"hasDiversity":true,"diversityChildren":[{"names":["man_shrugging_tone1","man_shrugging_light_skin_tone"],"surrogates":"\uD83E\uDD37\uD83C\uDFFB‍♂️","unicodeVersion":9,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_shrugging_tone2","man_shrugging_medium_light_skin_tone"],"surrogates":"\uD83E\uDD37\uD83C\uDFFC‍♂️","unicodeVersion":9,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_shrugging_tone3","man_shrugging_medium_skin_tone"],"surrogates":"\uD83E\uDD37\uD83C\uDFFD‍♂️","unicodeVersion":9,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_shrugging_tone4","man_shrugging_medium_dark_skin_tone"],"surrogates":"\uD83E\uDD37\uD83C\uDFFE‍♂️","unicodeVersion":9,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_shrugging_tone5","man_shrugging_dark_skin_tone"],"surrogates":"\uD83E\uDD37\uD83C\uDFFF‍♂️","unicodeVersion":9,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["person_pouting","person_with_pouting_face"],"surrogates":"\uD83D\uDE4E","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["person_pouting_tone1","person_with_pouting_face_tone1"],"surrogates":"\uD83D\uDE4E\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_pouting_tone2","person_with_pouting_face_tone2"],"surrogates":"\uD83D\uDE4E\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_pouting_tone3","person_with_pouting_face_tone3"],"surrogates":"\uD83D\uDE4E\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_pouting_tone4","person_with_pouting_face_tone4"],"surrogates":"\uD83D\uDE4E\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_pouting_tone5","person_with_pouting_face_tone5"],"surrogates":"\uD83D\uDE4E\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_pouting"],"surrogates":"\uD83D\uDE4E‍♀️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["woman_pouting_tone1","woman_pouting_light_skin_tone"],"surrogates":"\uD83D\uDE4E\uD83C\uDFFB‍♀️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_pouting_tone2","woman_pouting_medium_light_skin_tone"],"surrogates":"\uD83D\uDE4E\uD83C\uDFFC‍♀️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_pouting_tone3","woman_pouting_medium_skin_tone"],"surrogates":"\uD83D\uDE4E\uD83C\uDFFD‍♀️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_pouting_tone4","woman_pouting_medium_dark_skin_tone"],"surrogates":"\uD83D\uDE4E\uD83C\uDFFE‍♀️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_pouting_tone5","woman_pouting_dark_skin_tone"],"surrogates":"\uD83D\uDE4E\uD83C\uDFFF‍♀️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_pouting"],"surrogates":"\uD83D\uDE4E‍♂️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["man_pouting_tone1","man_pouting_light_skin_tone"],"surrogates":"\uD83D\uDE4E\uD83C\uDFFB‍♂️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_pouting_tone2","man_pouting_medium_light_skin_tone"],"surrogates":"\uD83D\uDE4E\uD83C\uDFFC‍♂️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_pouting_tone3","man_pouting_medium_skin_tone"],"surrogates":"\uD83D\uDE4E\uD83C\uDFFD‍♂️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_pouting_tone4","man_pouting_medium_dark_skin_tone"],"surrogates":"\uD83D\uDE4E\uD83C\uDFFE‍♂️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_pouting_tone5","man_pouting_dark_skin_tone"],"surrogates":"\uD83D\uDE4E\uD83C\uDFFF‍♂️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["person_frowning"],"surrogates":"\uD83D\uDE4D","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["person_frowning_tone1"],"surrogates":"\uD83D\uDE4D\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_frowning_tone2"],"surrogates":"\uD83D\uDE4D\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_frowning_tone3"],"surrogates":"\uD83D\uDE4D\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_frowning_tone4"],"surrogates":"\uD83D\uDE4D\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_frowning_tone5"],"surrogates":"\uD83D\uDE4D\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_frowning"],"surrogates":"\uD83D\uDE4D‍♀️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["woman_frowning_tone1","woman_frowning_light_skin_tone"],"surrogates":"\uD83D\uDE4D\uD83C\uDFFB‍♀️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_frowning_tone2","woman_frowning_medium_light_skin_tone"],"surrogates":"\uD83D\uDE4D\uD83C\uDFFC‍♀️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_frowning_tone3","woman_frowning_medium_skin_tone"],"surrogates":"\uD83D\uDE4D\uD83C\uDFFD‍♀️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_frowning_tone4","woman_frowning_medium_dark_skin_tone"],"surrogates":"\uD83D\uDE4D\uD83C\uDFFE‍♀️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_frowning_tone5","woman_frowning_dark_skin_tone"],"surrogates":"\uD83D\uDE4D\uD83C\uDFFF‍♀️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_frowning"],"surrogates":"\uD83D\uDE4D‍♂️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["man_frowning_tone1","man_frowning_light_skin_tone"],"surrogates":"\uD83D\uDE4D\uD83C\uDFFB‍♂️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_frowning_tone2","man_frowning_medium_light_skin_tone"],"surrogates":"\uD83D\uDE4D\uD83C\uDFFC‍♂️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_frowning_tone3","man_frowning_medium_skin_tone"],"surrogates":"\uD83D\uDE4D\uD83C\uDFFD‍♂️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_frowning_tone4","man_frowning_medium_dark_skin_tone"],"surrogates":"\uD83D\uDE4D\uD83C\uDFFE‍♂️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_frowning_tone5","man_frowning_dark_skin_tone"],"surrogates":"\uD83D\uDE4D\uD83C\uDFFF‍♂️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["person_getting_haircut","haircut"],"surrogates":"\uD83D\uDC87","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["person_getting_haircut_tone1","haircut_tone1"],"surrogates":"\uD83D\uDC87\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_getting_haircut_tone2","haircut_tone2"],"surrogates":"\uD83D\uDC87\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_getting_haircut_tone3","haircut_tone3"],"surrogates":"\uD83D\uDC87\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_getting_haircut_tone4","haircut_tone4"],"surrogates":"\uD83D\uDC87\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_getting_haircut_tone5","haircut_tone5"],"surrogates":"\uD83D\uDC87\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_getting_haircut"],"surrogates":"\uD83D\uDC87‍♀️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["woman_getting_haircut_tone1","woman_getting_haircut_light_skin_tone"],"surrogates":"\uD83D\uDC87\uD83C\uDFFB‍♀️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_getting_haircut_tone2","woman_getting_haircut_medium_light_skin_tone"],"surrogates":"\uD83D\uDC87\uD83C\uDFFC‍♀️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_getting_haircut_tone3","woman_getting_haircut_medium_skin_tone"],"surrogates":"\uD83D\uDC87\uD83C\uDFFD‍♀️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_getting_haircut_tone4","woman_getting_haircut_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC87\uD83C\uDFFE‍♀️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_getting_haircut_tone5","woman_getting_haircut_dark_skin_tone"],"surrogates":"\uD83D\uDC87\uD83C\uDFFF‍♀️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_getting_haircut"],"surrogates":"\uD83D\uDC87‍♂️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["man_getting_haircut_tone1","man_getting_haircut_light_skin_tone"],"surrogates":"\uD83D\uDC87\uD83C\uDFFB‍♂️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_getting_haircut_tone2","man_getting_haircut_medium_light_skin_tone"],"surrogates":"\uD83D\uDC87\uD83C\uDFFC‍♂️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_getting_haircut_tone3","man_getting_haircut_medium_skin_tone"],"surrogates":"\uD83D\uDC87\uD83C\uDFFD‍♂️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_getting_haircut_tone4","man_getting_haircut_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC87\uD83C\uDFFE‍♂️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_getting_haircut_tone5","man_getting_haircut_dark_skin_tone"],"surrogates":"\uD83D\uDC87\uD83C\uDFFF‍♂️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["person_getting_massage","massage"],"surrogates":"\uD83D\uDC86","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["person_getting_massage_tone1","massage_tone1"],"surrogates":"\uD83D\uDC86\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_getting_massage_tone2","massage_tone2"],"surrogates":"\uD83D\uDC86\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_getting_massage_tone3","massage_tone3"],"surrogates":"\uD83D\uDC86\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_getting_massage_tone4","massage_tone4"],"surrogates":"\uD83D\uDC86\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_getting_massage_tone5","massage_tone5"],"surrogates":"\uD83D\uDC86\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_getting_face_massage"],"surrogates":"\uD83D\uDC86‍♀️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["woman_getting_face_massage_tone1","woman_getting_face_massage_light_skin_tone"],"surrogates":"\uD83D\uDC86\uD83C\uDFFB‍♀️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_getting_face_massage_tone2","woman_getting_face_massage_medium_light_skin_tone"],"surrogates":"\uD83D\uDC86\uD83C\uDFFC‍♀️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_getting_face_massage_tone3","woman_getting_face_massage_medium_skin_tone"],"surrogates":"\uD83D\uDC86\uD83C\uDFFD‍♀️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_getting_face_massage_tone4","woman_getting_face_massage_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC86\uD83C\uDFFE‍♀️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_getting_face_massage_tone5","woman_getting_face_massage_dark_skin_tone"],"surrogates":"\uD83D\uDC86\uD83C\uDFFF‍♀️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_getting_face_massage"],"surrogates":"\uD83D\uDC86‍♂️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["man_getting_face_massage_tone1","man_getting_face_massage_light_skin_tone"],"surrogates":"\uD83D\uDC86\uD83C\uDFFB‍♂️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_getting_face_massage_tone2","man_getting_face_massage_medium_light_skin_tone"],"surrogates":"\uD83D\uDC86\uD83C\uDFFC‍♂️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_getting_face_massage_tone3","man_getting_face_massage_medium_skin_tone"],"surrogates":"\uD83D\uDC86\uD83C\uDFFD‍♂️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_getting_face_massage_tone4","man_getting_face_massage_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC86\uD83C\uDFFE‍♂️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_getting_face_massage_tone5","man_getting_face_massage_dark_skin_tone"],"surrogates":"\uD83D\uDC86\uD83C\uDFFF‍♂️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["person_in_steamy_room"],"surrogates":"\uD83E\uDDD6","unicodeVersion":10,"hasDiversity":true,"diversityChildren":[{"names":["person_in_steamy_room_tone1","person_in_steamy_room_light_skin_tone"],"surrogates":"\uD83E\uDDD6\uD83C\uDFFB","unicodeVersion":10,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_in_steamy_room_tone2","person_in_steamy_room_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD6\uD83C\uDFFC","unicodeVersion":10,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_in_steamy_room_tone3","person_in_steamy_room_medium_skin_tone"],"surrogates":"\uD83E\uDDD6\uD83C\uDFFD","unicodeVersion":10,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_in_steamy_room_tone4","person_in_steamy_room_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD6\uD83C\uDFFE","unicodeVersion":10,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_in_steamy_room_tone5","person_in_steamy_room_dark_skin_tone"],"surrogates":"\uD83E\uDDD6\uD83C\uDFFF","unicodeVersion":10,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_in_steamy_room"],"surrogates":"\uD83E\uDDD6‍♀️","unicodeVersion":10,"hasDiversity":true,"diversityChildren":[{"names":["woman_in_steamy_room_tone1","woman_in_steamy_room_light_skin_tone"],"surrogates":"\uD83E\uDDD6\uD83C\uDFFB‍♀️","unicodeVersion":10,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_in_steamy_room_tone2","woman_in_steamy_room_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD6\uD83C\uDFFC‍♀️","unicodeVersion":10,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_in_steamy_room_tone3","woman_in_steamy_room_medium_skin_tone"],"surrogates":"\uD83E\uDDD6\uD83C\uDFFD‍♀️","unicodeVersion":10,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_in_steamy_room_tone4","woman_in_steamy_room_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD6\uD83C\uDFFE‍♀️","unicodeVersion":10,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_in_steamy_room_tone5","woman_in_steamy_room_dark_skin_tone"],"surrogates":"\uD83E\uDDD6\uD83C\uDFFF‍♀️","unicodeVersion":10,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_in_steamy_room"],"surrogates":"\uD83E\uDDD6‍♂️","unicodeVersion":10,"hasDiversity":true,"diversityChildren":[{"names":["man_in_steamy_room_tone1","man_in_steamy_room_light_skin_tone"],"surrogates":"\uD83E\uDDD6\uD83C\uDFFB‍♂️","unicodeVersion":10,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_in_steamy_room_tone2","man_in_steamy_room_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD6\uD83C\uDFFC‍♂️","unicodeVersion":10,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_in_steamy_room_tone3","man_in_steamy_room_medium_skin_tone"],"surrogates":"\uD83E\uDDD6\uD83C\uDFFD‍♂️","unicodeVersion":10,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_in_steamy_room_tone4","man_in_steamy_room_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD6\uD83C\uDFFE‍♂️","unicodeVersion":10,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_in_steamy_room_tone5","man_in_steamy_room_dark_skin_tone"],"surrogates":"\uD83E\uDDD6\uD83C\uDFFF‍♂️","unicodeVersion":10,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["nail_care","nail_polish"],"surrogates":"\uD83D\uDC85","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["nail_care_tone1"],"surrogates":"\uD83D\uDC85\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["nail_care_tone2"],"surrogates":"\uD83D\uDC85\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["nail_care_tone3"],"surrogates":"\uD83D\uDC85\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["nail_care_tone4"],"surrogates":"\uD83D\uDC85\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["nail_care_tone5"],"surrogates":"\uD83D\uDC85\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["selfie"],"surrogates":"\uD83E\uDD33","unicodeVersion":9,"hasDiversity":true,"diversityChildren":[{"names":["selfie_tone1"],"surrogates":"\uD83E\uDD33\uD83C\uDFFB","unicodeVersion":9,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["selfie_tone2"],"surrogates":"\uD83E\uDD33\uD83C\uDFFC","unicodeVersion":9,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["selfie_tone3"],"surrogates":"\uD83E\uDD33\uD83C\uDFFD","unicodeVersion":9,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["selfie_tone4"],"surrogates":"\uD83E\uDD33\uD83C\uDFFE","unicodeVersion":9,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["selfie_tone5"],"surrogates":"\uD83E\uDD33\uD83C\uDFFF","unicodeVersion":9,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["dancer","woman_dancing"],"surrogates":"\uD83D\uDC83","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["dancer_tone1"],"surrogates":"\uD83D\uDC83\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["dancer_tone2"],"surrogates":"\uD83D\uDC83\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["dancer_tone3"],"surrogates":"\uD83D\uDC83\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["dancer_tone4"],"surrogates":"\uD83D\uDC83\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["dancer_tone5"],"surrogates":"\uD83D\uDC83\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_dancing","male_dancer"],"surrogates":"\uD83D\uDD7A","unicodeVersion":9,"hasDiversity":true,"diversityChildren":[{"names":["man_dancing_tone1","male_dancer_tone1"],"surrogates":"\uD83D\uDD7A\uD83C\uDFFB","unicodeVersion":9,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_dancing_tone2","male_dancer_tone2"],"surrogates":"\uD83D\uDD7A\uD83C\uDFFC","unicodeVersion":9,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_dancing_tone3","male_dancer_tone3"],"surrogates":"\uD83D\uDD7A\uD83C\uDFFD","unicodeVersion":9,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_dancing_tone5","male_dancer_tone5"],"surrogates":"\uD83D\uDD7A\uD83C\uDFFF","unicodeVersion":9,"diversity":["1f3ff"],"hasDiversityParent":true},{"names":["man_dancing_tone4","male_dancer_tone4"],"surrogates":"\uD83D\uDD7A\uD83C\uDFFE","unicodeVersion":9,"diversity":["1f3fe"],"hasDiversityParent":true}]},{"names":["people_with_bunny_ears_partying","dancers"],"surrogates":"\uD83D\uDC6F","unicodeVersion":6},{"names":["women_with_bunny_ears_partying"],"surrogates":"\uD83D\uDC6F‍♀️","unicodeVersion":6},{"names":["men_with_bunny_ears_partying"],"surrogates":"\uD83D\uDC6F‍♂️","unicodeVersion":6},{"names":["levitate","man_in_business_suit_levitating"],"surrogates":"\uD83D\uDD74️","unicodeVersion":7,"hasDiversity":true,"diversityChildren":[{"names":["levitate_tone1","man_in_business_suit_levitating_tone1","man_in_business_suit_levitating_light_skin_tone"],"surrogates":"\uD83D\uDD74\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["levitate_tone2","man_in_business_suit_levitating_tone2","man_in_business_suit_levitating_medium_light_skin_tone"],"surrogates":"\uD83D\uDD74\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["levitate_tone3","man_in_business_suit_levitating_tone3","man_in_business_suit_levitating_medium_skin_tone"],"surrogates":"\uD83D\uDD74\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["levitate_tone4","man_in_business_suit_levitating_tone4","man_in_business_suit_levitating_medium_dark_skin_tone"],"surrogates":"\uD83D\uDD74\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["levitate_tone5","man_in_business_suit_levitating_tone5","man_in_business_suit_levitating_dark_skin_tone"],"surrogates":"\uD83D\uDD74\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["person_in_manual_wheelchair"],"surrogates":"\uD83E\uDDD1‍\uD83E\uDDBD","unicodeVersion":12.1,"hasDiversity":true,"diversityChildren":[{"names":["person_in_manual_wheelchair_tone1","person_in_manual_wheelchair_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFB‍\uD83E\uDDBD","unicodeVersion":12.1,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_in_manual_wheelchair_tone2","person_in_manual_wheelchair_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFC‍\uD83E\uDDBD","unicodeVersion":12.1,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_in_manual_wheelchair_tone3","person_in_manual_wheelchair_medium_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFD‍\uD83E\uDDBD","unicodeVersion":12.1,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_in_manual_wheelchair_tone4","person_in_manual_wheelchair_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFE‍\uD83E\uDDBD","unicodeVersion":12.1,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_in_manual_wheelchair_tone5","person_in_manual_wheelchair_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFF‍\uD83E\uDDBD","unicodeVersion":12.1,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_in_manual_wheelchair"],"surrogates":"\uD83D\uDC69‍\uD83E\uDDBD","unicodeVersion":12,"hasDiversity":true,"diversityChildren":[{"names":["woman_in_manual_wheelchair_tone1","woman_in_manual_wheelchair_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍\uD83E\uDDBD","unicodeVersion":12,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_in_manual_wheelchair_tone2","woman_in_manual_wheelchair_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍\uD83E\uDDBD","unicodeVersion":12,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_in_manual_wheelchair_tone3","woman_in_manual_wheelchair_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍\uD83E\uDDBD","unicodeVersion":12,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_in_manual_wheelchair_tone4","woman_in_manual_wheelchair_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍\uD83E\uDDBD","unicodeVersion":12,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_in_manual_wheelchair_tone5","woman_in_manual_wheelchair_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍\uD83E\uDDBD","unicodeVersion":12,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_in_manual_wheelchair"],"surrogates":"\uD83D\uDC68‍\uD83E\uDDBD","unicodeVersion":12,"hasDiversity":true,"diversityChildren":[{"names":["man_in_manual_wheelchair_tone1","man_in_manual_wheelchair_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFB‍\uD83E\uDDBD","unicodeVersion":12,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_in_manual_wheelchair_tone2","man_in_manual_wheelchair_medium_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFC‍\uD83E\uDDBD","unicodeVersion":12,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_in_manual_wheelchair_tone3","man_in_manual_wheelchair_medium_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFD‍\uD83E\uDDBD","unicodeVersion":12,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_in_manual_wheelchair_tone4","man_in_manual_wheelchair_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFE‍\uD83E\uDDBD","unicodeVersion":12,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_in_manual_wheelchair_tone5","man_in_manual_wheelchair_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFF‍\uD83E\uDDBD","unicodeVersion":12,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["person_in_motorized_wheelchair"],"surrogates":"\uD83E\uDDD1‍\uD83E\uDDBC","unicodeVersion":12.1,"hasDiversity":true,"diversityChildren":[{"names":["person_in_motorized_wheelchair_tone1","person_in_motorized_wheelchair_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFB‍\uD83E\uDDBC","unicodeVersion":12.1,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_in_motorized_wheelchair_tone2","person_in_motorized_wheelchair_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFC‍\uD83E\uDDBC","unicodeVersion":12.1,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_in_motorized_wheelchair_tone3","person_in_motorized_wheelchair_medium_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFD‍\uD83E\uDDBC","unicodeVersion":12.1,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_in_motorized_wheelchair_tone4","person_in_motorized_wheelchair_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFE‍\uD83E\uDDBC","unicodeVersion":12.1,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_in_motorized_wheelchair_tone5","person_in_motorized_wheelchair_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFF‍\uD83E\uDDBC","unicodeVersion":12.1,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_in_motorized_wheelchair"],"surrogates":"\uD83D\uDC69‍\uD83E\uDDBC","unicodeVersion":12,"hasDiversity":true,"diversityChildren":[{"names":["woman_in_motorized_wheelchair_tone1","woman_in_motorized_wheelchair_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍\uD83E\uDDBC","unicodeVersion":12,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_in_motorized_wheelchair_tone2","woman_in_motorized_wheelchair_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍\uD83E\uDDBC","unicodeVersion":12,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_in_motorized_wheelchair_tone3","woman_in_motorized_wheelchair_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍\uD83E\uDDBC","unicodeVersion":12,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_in_motorized_wheelchair_tone4","woman_in_motorized_wheelchair_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍\uD83E\uDDBC","unicodeVersion":12,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_in_motorized_wheelchair_tone5","woman_in_motorized_wheelchair_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍\uD83E\uDDBC","unicodeVersion":12,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_in_motorized_wheelchair"],"surrogates":"\uD83D\uDC68‍\uD83E\uDDBC","unicodeVersion":12,"hasDiversity":true,"diversityChildren":[{"names":["man_in_motorized_wheelchair_tone1","man_in_motorized_wheelchair_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFB‍\uD83E\uDDBC","unicodeVersion":12,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_in_motorized_wheelchair_tone2","man_in_motorized_wheelchair_medium_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFC‍\uD83E\uDDBC","unicodeVersion":12,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_in_motorized_wheelchair_tone3","man_in_motorized_wheelchair_medium_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFD‍\uD83E\uDDBC","unicodeVersion":12,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_in_motorized_wheelchair_tone4","man_in_motorized_wheelchair_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFE‍\uD83E\uDDBC","unicodeVersion":12,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_in_motorized_wheelchair_tone5","man_in_motorized_wheelchair_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFF‍\uD83E\uDDBC","unicodeVersion":12,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["person_walking","walking"],"surrogates":"\uD83D\uDEB6","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["person_walking_tone1","walking_tone1"],"surrogates":"\uD83D\uDEB6\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_walking_tone2","walking_tone2"],"surrogates":"\uD83D\uDEB6\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_walking_tone3","walking_tone3"],"surrogates":"\uD83D\uDEB6\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_walking_tone4","walking_tone4"],"surrogates":"\uD83D\uDEB6\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_walking_tone5","walking_tone5"],"surrogates":"\uD83D\uDEB6\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_walking"],"surrogates":"\uD83D\uDEB6‍♀️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["woman_walking_tone1","woman_walking_light_skin_tone"],"surrogates":"\uD83D\uDEB6\uD83C\uDFFB‍♀️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_walking_tone2","woman_walking_medium_light_skin_tone"],"surrogates":"\uD83D\uDEB6\uD83C\uDFFC‍♀️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_walking_tone3","woman_walking_medium_skin_tone"],"surrogates":"\uD83D\uDEB6\uD83C\uDFFD‍♀️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_walking_tone4","woman_walking_medium_dark_skin_tone"],"surrogates":"\uD83D\uDEB6\uD83C\uDFFE‍♀️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_walking_tone5","woman_walking_dark_skin_tone"],"surrogates":"\uD83D\uDEB6\uD83C\uDFFF‍♀️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_walking"],"surrogates":"\uD83D\uDEB6‍♂️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["man_walking_tone1","man_walking_light_skin_tone"],"surrogates":"\uD83D\uDEB6\uD83C\uDFFB‍♂️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_walking_tone2","man_walking_medium_light_skin_tone"],"surrogates":"\uD83D\uDEB6\uD83C\uDFFC‍♂️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_walking_tone3","man_walking_medium_skin_tone"],"surrogates":"\uD83D\uDEB6\uD83C\uDFFD‍♂️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_walking_tone4","man_walking_medium_dark_skin_tone"],"surrogates":"\uD83D\uDEB6\uD83C\uDFFE‍♂️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_walking_tone5","man_walking_dark_skin_tone"],"surrogates":"\uD83D\uDEB6\uD83C\uDFFF‍♂️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["person_with_probing_cane"],"surrogates":"\uD83E\uDDD1‍\uD83E\uDDAF","unicodeVersion":12.1,"hasDiversity":true,"diversityChildren":[{"names":["person_with_probing_cane_tone1","person_with_probing_cane_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFB‍\uD83E\uDDAF","unicodeVersion":12.1,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_with_probing_cane_tone2","person_with_probing_cane_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFC‍\uD83E\uDDAF","unicodeVersion":12.1,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_with_probing_cane_tone3","person_with_probing_cane_medium_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFD‍\uD83E\uDDAF","unicodeVersion":12.1,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_with_probing_cane_tone4","person_with_probing_cane_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFE‍\uD83E\uDDAF","unicodeVersion":12.1,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_with_probing_cane_tone5","person_with_probing_cane_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFF‍\uD83E\uDDAF","unicodeVersion":12.1,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_with_probing_cane"],"surrogates":"\uD83D\uDC69‍\uD83E\uDDAF","unicodeVersion":12,"hasDiversity":true,"diversityChildren":[{"names":["woman_with_probing_cane_tone1","woman_with_probing_cane_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍\uD83E\uDDAF","unicodeVersion":12,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_with_probing_cane_tone2","woman_with_probing_cane_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍\uD83E\uDDAF","unicodeVersion":12,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_with_probing_cane_tone3","woman_with_probing_cane_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍\uD83E\uDDAF","unicodeVersion":12,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_with_probing_cane_tone4","woman_with_probing_cane_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍\uD83E\uDDAF","unicodeVersion":12,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_with_probing_cane_tone5","woman_with_probing_cane_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍\uD83E\uDDAF","unicodeVersion":12,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_with_probing_cane"],"surrogates":"\uD83D\uDC68‍\uD83E\uDDAF","unicodeVersion":12,"hasDiversity":true,"diversityChildren":[{"names":["man_with_probing_cane_tone1","man_with_probing_cane_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFB‍\uD83E\uDDAF","unicodeVersion":12,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_with_probing_cane_tone2","man_with_probing_cane_medium_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFC‍\uD83E\uDDAF","unicodeVersion":12,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_with_probing_cane_tone3","man_with_probing_cane_medium_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFD‍\uD83E\uDDAF","unicodeVersion":12,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_with_probing_cane_tone4","man_with_probing_cane_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFE‍\uD83E\uDDAF","unicodeVersion":12,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_with_probing_cane_tone5","man_with_probing_cane_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFF‍\uD83E\uDDAF","unicodeVersion":12,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["person_kneeling"],"surrogates":"\uD83E\uDDCE","unicodeVersion":12,"hasDiversity":true,"diversityChildren":[{"names":["person_kneeling_tone1","person_kneeling_light_skin_tone"],"surrogates":"\uD83E\uDDCE\uD83C\uDFFB","unicodeVersion":12,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_kneeling_tone2","person_kneeling_medium_light_skin_tone"],"surrogates":"\uD83E\uDDCE\uD83C\uDFFC","unicodeVersion":12,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_kneeling_tone3","person_kneeling_medium_skin_tone"],"surrogates":"\uD83E\uDDCE\uD83C\uDFFD","unicodeVersion":12,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_kneeling_tone4","person_kneeling_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDCE\uD83C\uDFFE","unicodeVersion":12,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_kneeling_tone5","person_kneeling_dark_skin_tone"],"surrogates":"\uD83E\uDDCE\uD83C\uDFFF","unicodeVersion":12,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_kneeling"],"surrogates":"\uD83E\uDDCE‍♀️","unicodeVersion":12,"hasDiversity":true,"diversityChildren":[{"names":["woman_kneeling_tone1","woman_kneeling_light_skin_tone"],"surrogates":"\uD83E\uDDCE\uD83C\uDFFB‍♀️","unicodeVersion":12,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_kneeling_tone2","woman_kneeling_medium_light_skin_tone"],"surrogates":"\uD83E\uDDCE\uD83C\uDFFC‍♀️","unicodeVersion":12,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_kneeling_tone3","woman_kneeling_medium_skin_tone"],"surrogates":"\uD83E\uDDCE\uD83C\uDFFD‍♀️","unicodeVersion":12,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_kneeling_tone4","woman_kneeling_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDCE\uD83C\uDFFE‍♀️","unicodeVersion":12,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_kneeling_tone5","woman_kneeling_dark_skin_tone"],"surrogates":"\uD83E\uDDCE\uD83C\uDFFF‍♀️","unicodeVersion":12,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_kneeling"],"surrogates":"\uD83E\uDDCE‍♂️","unicodeVersion":12,"hasDiversity":true,"diversityChildren":[{"names":["man_kneeling_tone1","man_kneeling_light_skin_tone"],"surrogates":"\uD83E\uDDCE\uD83C\uDFFB‍♂️","unicodeVersion":12,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_kneeling_tone2","man_kneeling_medium_light_skin_tone"],"surrogates":"\uD83E\uDDCE\uD83C\uDFFC‍♂️","unicodeVersion":12,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_kneeling_tone3","man_kneeling_medium_skin_tone"],"surrogates":"\uD83E\uDDCE\uD83C\uDFFD‍♂️","unicodeVersion":12,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_kneeling_tone4","man_kneeling_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDCE\uD83C\uDFFE‍♂️","unicodeVersion":12,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_kneeling_tone5","man_kneeling_dark_skin_tone"],"surrogates":"\uD83E\uDDCE\uD83C\uDFFF‍♂️","unicodeVersion":12,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["person_running","runner"],"surrogates":"\uD83C\uDFC3","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["person_running_tone1","runner_tone1"],"surrogates":"\uD83C\uDFC3\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_running_tone2","runner_tone2"],"surrogates":"\uD83C\uDFC3\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_running_tone3","runner_tone3"],"surrogates":"\uD83C\uDFC3\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_running_tone4","runner_tone4"],"surrogates":"\uD83C\uDFC3\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_running_tone5","runner_tone5"],"surrogates":"\uD83C\uDFC3\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_running"],"surrogates":"\uD83C\uDFC3‍♀️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["woman_running_tone1","woman_running_light_skin_tone"],"surrogates":"\uD83C\uDFC3\uD83C\uDFFB‍♀️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_running_tone2","woman_running_medium_light_skin_tone"],"surrogates":"\uD83C\uDFC3\uD83C\uDFFC‍♀️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_running_tone3","woman_running_medium_skin_tone"],"surrogates":"\uD83C\uDFC3\uD83C\uDFFD‍♀️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_running_tone4","woman_running_medium_dark_skin_tone"],"surrogates":"\uD83C\uDFC3\uD83C\uDFFE‍♀️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_running_tone5","woman_running_dark_skin_tone"],"surrogates":"\uD83C\uDFC3\uD83C\uDFFF‍♀️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_running"],"surrogates":"\uD83C\uDFC3‍♂️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["man_running_tone1","man_running_light_skin_tone"],"surrogates":"\uD83C\uDFC3\uD83C\uDFFB‍♂️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_running_tone2","man_running_medium_light_skin_tone"],"surrogates":"\uD83C\uDFC3\uD83C\uDFFC‍♂️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_running_tone3","man_running_medium_skin_tone"],"surrogates":"\uD83C\uDFC3\uD83C\uDFFD‍♂️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_running_tone4","man_running_medium_dark_skin_tone"],"surrogates":"\uD83C\uDFC3\uD83C\uDFFE‍♂️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_running_tone5","man_running_dark_skin_tone"],"surrogates":"\uD83C\uDFC3\uD83C\uDFFF‍♂️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["person_standing"],"surrogates":"\uD83E\uDDCD","unicodeVersion":12,"hasDiversity":true,"diversityChildren":[{"names":["person_standing_tone1","person_standing_light_skin_tone"],"surrogates":"\uD83E\uDDCD\uD83C\uDFFB","unicodeVersion":12,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_standing_tone2","person_standing_medium_light_skin_tone"],"surrogates":"\uD83E\uDDCD\uD83C\uDFFC","unicodeVersion":12,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_standing_tone3","person_standing_medium_skin_tone"],"surrogates":"\uD83E\uDDCD\uD83C\uDFFD","unicodeVersion":12,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_standing_tone4","person_standing_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDCD\uD83C\uDFFE","unicodeVersion":12,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_standing_tone5","person_standing_dark_skin_tone"],"surrogates":"\uD83E\uDDCD\uD83C\uDFFF","unicodeVersion":12,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_standing"],"surrogates":"\uD83E\uDDCD‍♀️","unicodeVersion":12,"hasDiversity":true,"diversityChildren":[{"names":["woman_standing_tone1","woman_standing_light_skin_tone"],"surrogates":"\uD83E\uDDCD\uD83C\uDFFB‍♀️","unicodeVersion":12,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_standing_tone2","woman_standing_medium_light_skin_tone"],"surrogates":"\uD83E\uDDCD\uD83C\uDFFC‍♀️","unicodeVersion":12,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_standing_tone3","woman_standing_medium_skin_tone"],"surrogates":"\uD83E\uDDCD\uD83C\uDFFD‍♀️","unicodeVersion":12,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_standing_tone4","woman_standing_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDCD\uD83C\uDFFE‍♀️","unicodeVersion":12,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_standing_tone5","woman_standing_dark_skin_tone"],"surrogates":"\uD83E\uDDCD\uD83C\uDFFF‍♀️","unicodeVersion":12,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_standing"],"surrogates":"\uD83E\uDDCD‍♂️","unicodeVersion":12,"hasDiversity":true,"diversityChildren":[{"names":["man_standing_tone1","man_standing_light_skin_tone"],"surrogates":"\uD83E\uDDCD\uD83C\uDFFB‍♂️","unicodeVersion":12,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_standing_tone2","man_standing_medium_light_skin_tone"],"surrogates":"\uD83E\uDDCD\uD83C\uDFFC‍♂️","unicodeVersion":12,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_standing_tone3","man_standing_medium_skin_tone"],"surrogates":"\uD83E\uDDCD\uD83C\uDFFD‍♂️","unicodeVersion":12,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_standing_tone4","man_standing_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDCD\uD83C\uDFFE‍♂️","unicodeVersion":12,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_standing_tone5","man_standing_dark_skin_tone"],"surrogates":"\uD83E\uDDCD\uD83C\uDFFF‍♂️","unicodeVersion":12,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["people_holding_hands"],"surrogates":"\uD83E\uDDD1‍\uD83E\uDD1D‍\uD83E\uDDD1","unicodeVersion":12,"diversityChildren":[{"names":["people_holding_hands_tone1","people_holding_hands_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFB‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFB","unicodeVersion":12,"diversity":["1f3fb"],"hasMultiDiversityParent":true},{"names":["people_holding_hands_tone1_tone2","people_holding_hands_light_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFB‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFC","unicodeVersion":12.1,"diversity":["1f3fb","1f3fc"],"hasMultiDiversityParent":true},{"names":["people_holding_hands_tone1_tone3","people_holding_hands_light_skin_tone_medium_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFB‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFD","unicodeVersion":12.1,"diversity":["1f3fb","1f3fd"],"hasMultiDiversityParent":true},{"names":["people_holding_hands_tone1_tone4","people_holding_hands_light_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFB‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFE","unicodeVersion":12.1,"diversity":["1f3fb","1f3fe"],"hasMultiDiversityParent":true},{"names":["people_holding_hands_tone1_tone5","people_holding_hands_light_skin_tone_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFB‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFF","unicodeVersion":12.1,"diversity":["1f3fb","1f3ff"],"hasMultiDiversityParent":true},{"names":["people_holding_hands_tone2_tone1","people_holding_hands_medium_light_skin_tone_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFC‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFB","unicodeVersion":12,"diversity":["1f3fc","1f3fb"],"hasMultiDiversityParent":true},{"names":["people_holding_hands_tone2","people_holding_hands_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFC‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFC","unicodeVersion":12,"diversity":["1f3fc"],"hasMultiDiversityParent":true},{"names":["people_holding_hands_tone2_tone3","people_holding_hands_medium_light_skin_tone_medium_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFC‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFD","unicodeVersion":12.1,"diversity":["1f3fc","1f3fd"],"hasMultiDiversityParent":true},{"names":["people_holding_hands_tone2_tone4","people_holding_hands_medium_light_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFC‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFE","unicodeVersion":12.1,"diversity":["1f3fc","1f3fe"],"hasMultiDiversityParent":true},{"names":["people_holding_hands_tone2_tone5","people_holding_hands_medium_light_skin_tone_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFC‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFF","unicodeVersion":12.1,"diversity":["1f3fc","1f3ff"],"hasMultiDiversityParent":true},{"names":["people_holding_hands_tone3_tone1","people_holding_hands_medium_skin_tone_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFD‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFB","unicodeVersion":12,"diversity":["1f3fd","1f3fb"],"hasMultiDiversityParent":true},{"names":["people_holding_hands_tone3_tone2","people_holding_hands_medium_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFD‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFC","unicodeVersion":12,"diversity":["1f3fd","1f3fc"],"hasMultiDiversityParent":true},{"names":["people_holding_hands_tone3","people_holding_hands_medium_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFD‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFD","unicodeVersion":12,"diversity":["1f3fd"],"hasMultiDiversityParent":true},{"names":["people_holding_hands_tone3_tone4","people_holding_hands_medium_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFD‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFE","unicodeVersion":12.1,"diversity":["1f3fd","1f3fe"],"hasMultiDiversityParent":true},{"names":["people_holding_hands_tone3_tone5","people_holding_hands_medium_skin_tone_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFD‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFF","unicodeVersion":12.1,"diversity":["1f3fd","1f3ff"],"hasMultiDiversityParent":true},{"names":["people_holding_hands_tone4_tone1","people_holding_hands_medium_dark_skin_tone_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFE‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFB","unicodeVersion":12,"diversity":["1f3fe","1f3fb"],"hasMultiDiversityParent":true},{"names":["people_holding_hands_tone4_tone2","people_holding_hands_medium_dark_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFE‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFC","unicodeVersion":12,"diversity":["1f3fe","1f3fc"],"hasMultiDiversityParent":true},{"names":["people_holding_hands_tone4_tone3","people_holding_hands_medium_dark_skin_tone_medium_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFE‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFD","unicodeVersion":12,"diversity":["1f3fe","1f3fd"],"hasMultiDiversityParent":true},{"names":["people_holding_hands_tone4","people_holding_hands_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFE‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFE","unicodeVersion":12,"diversity":["1f3fe"],"hasMultiDiversityParent":true},{"names":["people_holding_hands_tone4_tone5","people_holding_hands_medium_dark_skin_tone_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFE‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFF","unicodeVersion":12.1,"diversity":["1f3fe","1f3ff"],"hasMultiDiversityParent":true},{"names":["people_holding_hands_tone5_tone1","people_holding_hands_dark_skin_tone_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFF‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFB","unicodeVersion":12,"diversity":["1f3ff","1f3fb"],"hasMultiDiversityParent":true},{"names":["people_holding_hands_tone5_tone2","people_holding_hands_dark_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFF‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFC","unicodeVersion":12,"diversity":["1f3ff","1f3fc"],"hasMultiDiversityParent":true},{"names":["people_holding_hands_tone5_tone3","people_holding_hands_dark_skin_tone_medium_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFF‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFD","unicodeVersion":12,"diversity":["1f3ff","1f3fd"],"hasMultiDiversityParent":true},{"names":["people_holding_hands_tone5_tone4","people_holding_hands_dark_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFF‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFE","unicodeVersion":12,"diversity":["1f3ff","1f3fe"],"hasMultiDiversityParent":true},{"names":["people_holding_hands_tone5","people_holding_hands_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFF‍\uD83E\uDD1D‍\uD83E\uDDD1\uD83C\uDFFF","unicodeVersion":12,"diversity":["1f3ff"],"hasMultiDiversityParent":true}],"hasMultiDiversity":true},{"names":["couple"],"surrogates":"\uD83D\uDC6B","unicodeVersion":6,"diversityChildren":[{"names":["woman_and_man_holding_hands_tone1","woman_and_man_holding_hands_light_skin_tone"],"surrogates":"\uD83D\uDC6B\uD83C\uDFFB","unicodeVersion":12,"diversity":["1f3fb"],"hasMultiDiversityParent":true},{"names":["woman_and_man_holding_hands_tone1_tone2","woman_and_man_holding_hands_light_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFC","unicodeVersion":12,"diversity":["1f3fb","1f3fc"],"hasMultiDiversityParent":true},{"names":["woman_and_man_holding_hands_tone1_tone3","woman_and_man_holding_hands_light_skin_tone_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFD","unicodeVersion":12,"diversity":["1f3fb","1f3fd"],"hasMultiDiversityParent":true},{"names":["woman_and_man_holding_hands_tone1_tone4","woman_and_man_holding_hands_light_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFE","unicodeVersion":12,"diversity":["1f3fb","1f3fe"],"hasMultiDiversityParent":true},{"names":["woman_and_man_holding_hands_tone1_tone5","woman_and_man_holding_hands_light_skin_tone_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFF","unicodeVersion":12,"diversity":["1f3fb","1f3ff"],"hasMultiDiversityParent":true},{"names":["woman_and_man_holding_hands_tone2_tone1","woman_and_man_holding_hands_medium_light_skin_tone_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFB","unicodeVersion":12,"diversity":["1f3fc","1f3fb"],"hasMultiDiversityParent":true},{"names":["woman_and_man_holding_hands_tone2","woman_and_man_holding_hands_medium_light_skin_tone"],"surrogates":"\uD83D\uDC6B\uD83C\uDFFC","unicodeVersion":12,"diversity":["1f3fc"],"hasMultiDiversityParent":true},{"names":["woman_and_man_holding_hands_tone2_tone3","woman_and_man_holding_hands_medium_light_skin_tone_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFD","unicodeVersion":12,"diversity":["1f3fc","1f3fd"],"hasMultiDiversityParent":true},{"names":["woman_and_man_holding_hands_tone2_tone4","woman_and_man_holding_hands_medium_light_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFE","unicodeVersion":12,"diversity":["1f3fc","1f3fe"],"hasMultiDiversityParent":true},{"names":["woman_and_man_holding_hands_tone2_tone5","woman_and_man_holding_hands_medium_light_skin_tone_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFF","unicodeVersion":12,"diversity":["1f3fc","1f3ff"],"hasMultiDiversityParent":true},{"names":["woman_and_man_holding_hands_tone3_tone1","woman_and_man_holding_hands_medium_skin_tone_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFB","unicodeVersion":12,"diversity":["1f3fd","1f3fb"],"hasMultiDiversityParent":true},{"names":["woman_and_man_holding_hands_tone3_tone2","woman_and_man_holding_hands_medium_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFC","unicodeVersion":12,"diversity":["1f3fd","1f3fc"],"hasMultiDiversityParent":true},{"names":["woman_and_man_holding_hands_tone3","woman_and_man_holding_hands_medium_skin_tone"],"surrogates":"\uD83D\uDC6B\uD83C\uDFFD","unicodeVersion":12,"diversity":["1f3fd"],"hasMultiDiversityParent":true},{"names":["woman_and_man_holding_hands_tone3_tone4","woman_and_man_holding_hands_medium_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFE","unicodeVersion":12,"diversity":["1f3fd","1f3fe"],"hasMultiDiversityParent":true},{"names":["woman_and_man_holding_hands_tone3_tone5","woman_and_man_holding_hands_medium_skin_tone_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFF","unicodeVersion":12,"diversity":["1f3fd","1f3ff"],"hasMultiDiversityParent":true},{"names":["woman_and_man_holding_hands_tone4_tone1","woman_and_man_holding_hands_medium_dark_skin_tone_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFB","unicodeVersion":12,"diversity":["1f3fe","1f3fb"],"hasMultiDiversityParent":true},{"names":["woman_and_man_holding_hands_tone4_tone2","woman_and_man_holding_hands_medium_dark_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFC","unicodeVersion":12,"diversity":["1f3fe","1f3fc"],"hasMultiDiversityParent":true},{"names":["woman_and_man_holding_hands_tone4_tone3","woman_and_man_holding_hands_medium_dark_skin_tone_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFD","unicodeVersion":12,"diversity":["1f3fe","1f3fd"],"hasMultiDiversityParent":true},{"names":["woman_and_man_holding_hands_tone4","woman_and_man_holding_hands_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC6B\uD83C\uDFFE","unicodeVersion":12,"diversity":["1f3fe"],"hasMultiDiversityParent":true},{"names":["woman_and_man_holding_hands_tone4_tone5","woman_and_man_holding_hands_medium_dark_skin_tone_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFF","unicodeVersion":12,"diversity":["1f3fe","1f3ff"],"hasMultiDiversityParent":true},{"names":["woman_and_man_holding_hands_tone5_tone1","woman_and_man_holding_hands_dark_skin_tone_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFB","unicodeVersion":12,"diversity":["1f3ff","1f3fb"],"hasMultiDiversityParent":true},{"names":["woman_and_man_holding_hands_tone5_tone2","woman_and_man_holding_hands_dark_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFC","unicodeVersion":12,"diversity":["1f3ff","1f3fc"],"hasMultiDiversityParent":true},{"names":["woman_and_man_holding_hands_tone5_tone3","woman_and_man_holding_hands_dark_skin_tone_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFD","unicodeVersion":12,"diversity":["1f3ff","1f3fd"],"hasMultiDiversityParent":true},{"names":["woman_and_man_holding_hands_tone5_tone4","woman_and_man_holding_hands_dark_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFE","unicodeVersion":12,"diversity":["1f3ff","1f3fe"],"hasMultiDiversityParent":true},{"names":["woman_and_man_holding_hands_tone5","woman_and_man_holding_hands_dark_skin_tone"],"surrogates":"\uD83D\uDC6B\uD83C\uDFFF","unicodeVersion":12,"diversity":["1f3ff"],"hasMultiDiversityParent":true}],"hasMultiDiversity":true},{"names":["two_women_holding_hands"],"surrogates":"\uD83D\uDC6D","unicodeVersion":6,"diversityChildren":[{"names":["women_holding_hands_tone1","women_holding_hands_light_skin_tone"],"surrogates":"\uD83D\uDC6D\uD83C\uDFFB","unicodeVersion":12,"diversity":["1f3fb"],"hasMultiDiversityParent":true},{"names":["women_holding_hands_tone1_tone2","women_holding_hands_light_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFC","unicodeVersion":12.1,"diversity":["1f3fb","1f3fc"],"hasMultiDiversityParent":true},{"names":["women_holding_hands_tone1_tone3","women_holding_hands_light_skin_tone_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFD","unicodeVersion":12.1,"diversity":["1f3fb","1f3fd"],"hasMultiDiversityParent":true},{"names":["women_holding_hands_tone1_tone4","women_holding_hands_light_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFE","unicodeVersion":12.1,"diversity":["1f3fb","1f3fe"],"hasMultiDiversityParent":true},{"names":["women_holding_hands_tone1_tone5","women_holding_hands_light_skin_tone_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFF","unicodeVersion":12.1,"diversity":["1f3fb","1f3ff"],"hasMultiDiversityParent":true},{"names":["women_holding_hands_tone2_tone1","women_holding_hands_medium_light_skin_tone_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFB","unicodeVersion":12,"diversity":["1f3fc","1f3fb"],"hasMultiDiversityParent":true},{"names":["women_holding_hands_tone2","women_holding_hands_medium_light_skin_tone"],"surrogates":"\uD83D\uDC6D\uD83C\uDFFC","unicodeVersion":12,"diversity":["1f3fc"],"hasMultiDiversityParent":true},{"names":["women_holding_hands_tone2_tone3","women_holding_hands_medium_light_skin_tone_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFD","unicodeVersion":12.1,"diversity":["1f3fc","1f3fd"],"hasMultiDiversityParent":true},{"names":["women_holding_hands_tone2_tone4","women_holding_hands_medium_light_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFE","unicodeVersion":12.1,"diversity":["1f3fc","1f3fe"],"hasMultiDiversityParent":true},{"names":["women_holding_hands_tone2_tone5","women_holding_hands_medium_light_skin_tone_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFF","unicodeVersion":12.1,"diversity":["1f3fc","1f3ff"],"hasMultiDiversityParent":true},{"names":["women_holding_hands_tone3_tone1","women_holding_hands_medium_skin_tone_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFB","unicodeVersion":12,"diversity":["1f3fd","1f3fb"],"hasMultiDiversityParent":true},{"names":["women_holding_hands_tone3_tone2","women_holding_hands_medium_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFC","unicodeVersion":12,"diversity":["1f3fd","1f3fc"],"hasMultiDiversityParent":true},{"names":["women_holding_hands_tone3","women_holding_hands_medium_skin_tone"],"surrogates":"\uD83D\uDC6D\uD83C\uDFFD","unicodeVersion":12,"diversity":["1f3fd"],"hasMultiDiversityParent":true},{"names":["women_holding_hands_tone3_tone4","women_holding_hands_medium_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFE","unicodeVersion":12.1,"diversity":["1f3fd","1f3fe"],"hasMultiDiversityParent":true},{"names":["women_holding_hands_tone3_tone5","women_holding_hands_medium_skin_tone_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFF","unicodeVersion":12.1,"diversity":["1f3fd","1f3ff"],"hasMultiDiversityParent":true},{"names":["women_holding_hands_tone4_tone1","women_holding_hands_medium_dark_skin_tone_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFB","unicodeVersion":12,"diversity":["1f3fe","1f3fb"],"hasMultiDiversityParent":true},{"names":["women_holding_hands_tone4_tone2","women_holding_hands_medium_dark_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFC","unicodeVersion":12,"diversity":["1f3fe","1f3fc"],"hasMultiDiversityParent":true},{"names":["women_holding_hands_tone4_tone3","women_holding_hands_medium_dark_skin_tone_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFD","unicodeVersion":12,"diversity":["1f3fe","1f3fd"],"hasMultiDiversityParent":true},{"names":["women_holding_hands_tone4","women_holding_hands_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC6D\uD83C\uDFFE","unicodeVersion":12,"diversity":["1f3fe"],"hasMultiDiversityParent":true},{"names":["women_holding_hands_tone4_tone5","women_holding_hands_medium_dark_skin_tone_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFF","unicodeVersion":12.1,"diversity":["1f3fe","1f3ff"],"hasMultiDiversityParent":true},{"names":["women_holding_hands_tone5_tone1","women_holding_hands_dark_skin_tone_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFB","unicodeVersion":12,"diversity":["1f3ff","1f3fb"],"hasMultiDiversityParent":true},{"names":["women_holding_hands_tone5_tone2","women_holding_hands_dark_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFC","unicodeVersion":12,"diversity":["1f3ff","1f3fc"],"hasMultiDiversityParent":true},{"names":["women_holding_hands_tone5_tone3","women_holding_hands_dark_skin_tone_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFD","unicodeVersion":12,"diversity":["1f3ff","1f3fd"],"hasMultiDiversityParent":true},{"names":["women_holding_hands_tone5_tone4","women_holding_hands_dark_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍\uD83E\uDD1D‍\uD83D\uDC69\uD83C\uDFFE","unicodeVersion":12,"diversity":["1f3ff","1f3fe"],"hasMultiDiversityParent":true},{"names":["women_holding_hands_tone5","women_holding_hands_dark_skin_tone"],"surrogates":"\uD83D\uDC6D\uD83C\uDFFF","unicodeVersion":12,"diversity":["1f3ff"],"hasMultiDiversityParent":true}],"hasMultiDiversity":true},{"names":["two_men_holding_hands"],"surrogates":"\uD83D\uDC6C","unicodeVersion":6,"diversityChildren":[{"names":["men_holding_hands_tone1","men_holding_hands_light_skin_tone"],"surrogates":"\uD83D\uDC6C\uD83C\uDFFB","unicodeVersion":12,"diversity":["1f3fb"],"hasMultiDiversityParent":true},{"names":["men_holding_hands_tone1_tone2","men_holding_hands_light_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFB‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFC","unicodeVersion":12.1,"diversity":["1f3fb","1f3fc"],"hasMultiDiversityParent":true},{"names":["men_holding_hands_tone1_tone3","men_holding_hands_light_skin_tone_medium_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFB‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFD","unicodeVersion":12.1,"diversity":["1f3fb","1f3fd"],"hasMultiDiversityParent":true},{"names":["men_holding_hands_tone1_tone4","men_holding_hands_light_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFB‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFE","unicodeVersion":12.1,"diversity":["1f3fb","1f3fe"],"hasMultiDiversityParent":true},{"names":["men_holding_hands_tone1_tone5","men_holding_hands_light_skin_tone_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFB‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFF","unicodeVersion":12.1,"diversity":["1f3fb","1f3ff"],"hasMultiDiversityParent":true},{"names":["men_holding_hands_tone2_tone1","men_holding_hands_medium_light_skin_tone_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFC‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFB","unicodeVersion":12,"diversity":["1f3fc","1f3fb"],"hasMultiDiversityParent":true},{"names":["men_holding_hands_tone2","men_holding_hands_medium_light_skin_tone"],"surrogates":"\uD83D\uDC6C\uD83C\uDFFC","unicodeVersion":12,"diversity":["1f3fc"],"hasMultiDiversityParent":true},{"names":["men_holding_hands_tone2_tone3","men_holding_hands_medium_light_skin_tone_medium_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFC‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFD","unicodeVersion":12.1,"diversity":["1f3fc","1f3fd"],"hasMultiDiversityParent":true},{"names":["men_holding_hands_tone2_tone4","men_holding_hands_medium_light_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFC‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFE","unicodeVersion":12.1,"diversity":["1f3fc","1f3fe"],"hasMultiDiversityParent":true},{"names":["men_holding_hands_tone2_tone5","men_holding_hands_medium_light_skin_tone_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFC‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFF","unicodeVersion":12.1,"diversity":["1f3fc","1f3ff"],"hasMultiDiversityParent":true},{"names":["men_holding_hands_tone3_tone1","men_holding_hands_medium_skin_tone_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFD‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFB","unicodeVersion":12,"diversity":["1f3fd","1f3fb"],"hasMultiDiversityParent":true},{"names":["men_holding_hands_tone3_tone2","men_holding_hands_medium_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFD‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFC","unicodeVersion":12,"diversity":["1f3fd","1f3fc"],"hasMultiDiversityParent":true},{"names":["men_holding_hands_tone3","men_holding_hands_medium_skin_tone"],"surrogates":"\uD83D\uDC6C\uD83C\uDFFD","unicodeVersion":12,"diversity":["1f3fd"],"hasMultiDiversityParent":true},{"names":["men_holding_hands_tone3_tone4","men_holding_hands_medium_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFD‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFE","unicodeVersion":12.1,"diversity":["1f3fd","1f3fe"],"hasMultiDiversityParent":true},{"names":["men_holding_hands_tone3_tone5","men_holding_hands_medium_skin_tone_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFD‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFF","unicodeVersion":12.1,"diversity":["1f3fd","1f3ff"],"hasMultiDiversityParent":true},{"names":["men_holding_hands_tone4_tone1","men_holding_hands_medium_dark_skin_tone_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFE‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFB","unicodeVersion":12,"diversity":["1f3fe","1f3fb"],"hasMultiDiversityParent":true},{"names":["men_holding_hands_tone4_tone2","men_holding_hands_medium_dark_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFE‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFC","unicodeVersion":12,"diversity":["1f3fe","1f3fc"],"hasMultiDiversityParent":true},{"names":["men_holding_hands_tone4_tone3","men_holding_hands_medium_dark_skin_tone_medium_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFE‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFD","unicodeVersion":12,"diversity":["1f3fe","1f3fd"],"hasMultiDiversityParent":true},{"names":["men_holding_hands_tone4","men_holding_hands_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC6C\uD83C\uDFFE","unicodeVersion":12,"diversity":["1f3fe"],"hasMultiDiversityParent":true},{"names":["men_holding_hands_tone4_tone5","men_holding_hands_medium_dark_skin_tone_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFE‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFF","unicodeVersion":12.1,"diversity":["1f3fe","1f3ff"],"hasMultiDiversityParent":true},{"names":["men_holding_hands_tone5_tone1","men_holding_hands_dark_skin_tone_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFF‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFB","unicodeVersion":12,"diversity":["1f3ff","1f3fb"],"hasMultiDiversityParent":true},{"names":["men_holding_hands_tone5_tone2","men_holding_hands_dark_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFF‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFC","unicodeVersion":12,"diversity":["1f3ff","1f3fc"],"hasMultiDiversityParent":true},{"names":["men_holding_hands_tone5_tone3","men_holding_hands_dark_skin_tone_medium_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFF‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFD","unicodeVersion":12,"diversity":["1f3ff","1f3fd"],"hasMultiDiversityParent":true},{"names":["men_holding_hands_tone5_tone4","men_holding_hands_dark_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFF‍\uD83E\uDD1D‍\uD83D\uDC68\uD83C\uDFFE","unicodeVersion":12,"diversity":["1f3ff","1f3fe"],"hasMultiDiversityParent":true},{"names":["men_holding_hands_tone5","men_holding_hands_dark_skin_tone"],"surrogates":"\uD83D\uDC6C\uD83C\uDFFF","unicodeVersion":12,"diversity":["1f3ff"],"hasMultiDiversityParent":true}],"hasMultiDiversity":true},{"names":["couple_with_heart"],"surrogates":"\uD83D\uDC91","unicodeVersion":6,"diversityChildren":[{"names":["couple_with_heart_tone1","couple_with_heart_light_skin_tone"],"surrogates":"\uD83D\uDC91\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3fb"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_person_person_tone1_tone2","couple_with_heart_person_person_light_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFB‍❤️‍\uD83E\uDDD1\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3fb","1f3fc"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_person_person_tone1_tone3","couple_with_heart_person_person_light_skin_tone_medium_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFB‍❤️‍\uD83E\uDDD1\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3fb","1f3fd"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_person_person_tone1_tone4","couple_with_heart_person_person_light_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFB‍❤️‍\uD83E\uDDD1\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3fb","1f3fe"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_person_person_tone1_tone5","couple_with_heart_person_person_light_skin_tone_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFB‍❤️‍\uD83E\uDDD1\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3fb","1f3ff"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_person_person_tone2_tone1","couple_with_heart_person_person_medium_light_skin_tone_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFC‍❤️‍\uD83E\uDDD1\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3fc","1f3fb"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_tone2","couple_with_heart_medium_light_skin_tone"],"surrogates":"\uD83D\uDC91\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3fc"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_person_person_tone2_tone3","couple_with_heart_person_person_medium_light_skin_tone_medium_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFC‍❤️‍\uD83E\uDDD1\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3fc","1f3fd"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_person_person_tone2_tone4","couple_with_heart_person_person_medium_light_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFC‍❤️‍\uD83E\uDDD1\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3fc","1f3fe"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_person_person_tone2_tone5","couple_with_heart_person_person_medium_light_skin_tone_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFC‍❤️‍\uD83E\uDDD1\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3fc","1f3ff"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_person_person_tone3_tone1","couple_with_heart_person_person_medium_skin_tone_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFD‍❤️‍\uD83E\uDDD1\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3fd","1f3fb"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_person_person_tone3_tone2","couple_with_heart_person_person_medium_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFD‍❤️‍\uD83E\uDDD1\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3fd","1f3fc"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_tone3","couple_with_heart_medium_skin_tone"],"surrogates":"\uD83D\uDC91\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3fd"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_person_person_tone3_tone4","couple_with_heart_person_person_medium_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFD‍❤️‍\uD83E\uDDD1\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3fd","1f3fe"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_person_person_tone3_tone5","couple_with_heart_person_person_medium_skin_tone_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFD‍❤️‍\uD83E\uDDD1\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3fd","1f3ff"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_person_person_tone4_tone1","couple_with_heart_person_person_medium_dark_skin_tone_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFE‍❤️‍\uD83E\uDDD1\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3fe","1f3fb"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_person_person_tone4_tone2","couple_with_heart_person_person_medium_dark_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFE‍❤️‍\uD83E\uDDD1\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3fe","1f3fc"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_person_person_tone4_tone3","couple_with_heart_person_person_medium_dark_skin_tone_medium_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFE‍❤️‍\uD83E\uDDD1\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3fe","1f3fd"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_tone4","couple_with_heart_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC91\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3fe"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_person_person_tone4_tone5","couple_with_heart_person_person_medium_dark_skin_tone_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFE‍❤️‍\uD83E\uDDD1\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3fe","1f3ff"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_person_person_tone5_tone1","couple_with_heart_person_person_dark_skin_tone_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFF‍❤️‍\uD83E\uDDD1\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3ff","1f3fb"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_person_person_tone5_tone2","couple_with_heart_person_person_dark_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFF‍❤️‍\uD83E\uDDD1\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3ff","1f3fc"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_person_person_tone5_tone3","couple_with_heart_person_person_dark_skin_tone_medium_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFF‍❤️‍\uD83E\uDDD1\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3ff","1f3fd"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_person_person_tone5_tone4","couple_with_heart_person_person_dark_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFF‍❤️‍\uD83E\uDDD1\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3ff","1f3fe"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_tone5","couple_with_heart_dark_skin_tone"],"surrogates":"\uD83D\uDC91\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3ff"],"hasMultiDiversityParent":true}],"hasMultiDiversity":true},{"names":["couple_with_heart_woman_man"],"surrogates":"\uD83D\uDC69‍❤️‍\uD83D\uDC68","unicodeVersion":6,"diversityChildren":[{"names":["couple_with_heart_woman_man_tone1","couple_with_heart_woman_man_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC68\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3fb"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_man_tone1_tone2","couple_with_heart_woman_man_light_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC68\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3fb","1f3fc"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_man_tone1_tone3","couple_with_heart_woman_man_light_skin_tone_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC68\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3fb","1f3fd"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_man_tone1_tone4","couple_with_heart_woman_man_light_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC68\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3fb","1f3fe"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_man_tone1_tone5","couple_with_heart_woman_man_light_skin_tone_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC68\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3fb","1f3ff"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_man_tone2_tone1","couple_with_heart_woman_man_medium_light_skin_tone_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC68\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3fc","1f3fb"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_man_tone2","couple_with_heart_woman_man_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC68\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3fc"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_man_tone2_tone3","couple_with_heart_woman_man_medium_light_skin_tone_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC68\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3fc","1f3fd"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_man_tone2_tone4","couple_with_heart_woman_man_medium_light_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC68\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3fc","1f3fe"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_man_tone2_tone5","couple_with_heart_woman_man_medium_light_skin_tone_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC68\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3fc","1f3ff"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_man_tone3_tone1","couple_with_heart_woman_man_medium_skin_tone_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC68\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3fd","1f3fb"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_man_tone3_tone2","couple_with_heart_woman_man_medium_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC68\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3fd","1f3fc"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_man_tone3","couple_with_heart_woman_man_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC68\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3fd"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_man_tone3_tone4","couple_with_heart_woman_man_medium_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC68\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3fd","1f3fe"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_man_tone3_tone5","couple_with_heart_woman_man_medium_skin_tone_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC68\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3fd","1f3ff"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_man_tone4_tone1","couple_with_heart_woman_man_medium_dark_skin_tone_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC68\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3fe","1f3fb"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_man_tone4_tone2","couple_with_heart_woman_man_medium_dark_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC68\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3fe","1f3fc"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_man_tone4_tone3","couple_with_heart_woman_man_medium_dark_skin_tone_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC68\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3fe","1f3fd"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_man_tone4","couple_with_heart_woman_man_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC68\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3fe"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_man_tone4_tone5","couple_with_heart_woman_man_medium_dark_skin_tone_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC68\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3fe","1f3ff"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_man_tone5_tone1","couple_with_heart_woman_man_dark_skin_tone_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC68\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3ff","1f3fb"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_man_tone5_tone2","couple_with_heart_woman_man_dark_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC68\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3ff","1f3fc"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_man_tone5_tone3","couple_with_heart_woman_man_dark_skin_tone_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC68\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3ff","1f3fd"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_man_tone5_tone4","couple_with_heart_woman_man_dark_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC68\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3ff","1f3fe"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_man_tone5","couple_with_heart_woman_man_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC68\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3ff"],"hasMultiDiversityParent":true}],"hasMultiDiversity":true},{"names":["couple_ww","couple_with_heart_ww"],"surrogates":"\uD83D\uDC69‍❤️‍\uD83D\uDC69","unicodeVersion":6,"diversityChildren":[{"names":["couple_with_heart_woman_woman_tone1","couple_with_heart_woman_woman_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC69\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3fb"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_woman_tone1_tone2","couple_with_heart_woman_woman_light_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC69\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3fb","1f3fc"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_woman_tone1_tone3","couple_with_heart_woman_woman_light_skin_tone_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC69\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3fb","1f3fd"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_woman_tone1_tone4","couple_with_heart_woman_woman_light_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC69\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3fb","1f3fe"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_woman_tone1_tone5","couple_with_heart_woman_woman_light_skin_tone_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC69\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3fb","1f3ff"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_woman_tone2_tone1","couple_with_heart_woman_woman_medium_light_skin_tone_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC69\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3fc","1f3fb"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_woman_tone2","couple_with_heart_woman_woman_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC69\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3fc"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_woman_tone2_tone3","couple_with_heart_woman_woman_medium_light_skin_tone_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC69\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3fc","1f3fd"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_woman_tone2_tone4","couple_with_heart_woman_woman_medium_light_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC69\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3fc","1f3fe"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_woman_tone2_tone5","couple_with_heart_woman_woman_medium_light_skin_tone_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC69\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3fc","1f3ff"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_woman_tone3_tone1","couple_with_heart_woman_woman_medium_skin_tone_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC69\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3fd","1f3fb"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_woman_tone3_tone2","couple_with_heart_woman_woman_medium_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC69\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3fd","1f3fc"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_woman_tone3","couple_with_heart_woman_woman_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC69\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3fd"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_woman_tone3_tone4","couple_with_heart_woman_woman_medium_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC69\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3fd","1f3fe"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_woman_tone3_tone5","couple_with_heart_woman_woman_medium_skin_tone_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC69\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3fd","1f3ff"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_woman_tone4_tone1","couple_with_heart_woman_woman_medium_dark_skin_tone_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC69\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3fe","1f3fb"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_woman_tone4_tone2","couple_with_heart_woman_woman_medium_dark_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC69\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3fe","1f3fc"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_woman_tone4_tone3","couple_with_heart_woman_woman_medium_dark_skin_tone_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC69\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3fe","1f3fd"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_woman_tone4","couple_with_heart_woman_woman_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC69\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3fe"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_woman_tone4_tone5","couple_with_heart_woman_woman_medium_dark_skin_tone_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC69\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3fe","1f3ff"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_woman_tone5_tone1","couple_with_heart_woman_woman_dark_skin_tone_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC69\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3ff","1f3fb"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_woman_tone5_tone2","couple_with_heart_woman_woman_dark_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC69\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3ff","1f3fc"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_woman_tone5_tone3","couple_with_heart_woman_woman_dark_skin_tone_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC69\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3ff","1f3fd"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_woman_tone5_tone4","couple_with_heart_woman_woman_dark_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC69\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3ff","1f3fe"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_woman_woman_tone5","couple_with_heart_woman_woman_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC69\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3ff"],"hasMultiDiversityParent":true}],"hasMultiDiversity":true},{"names":["couple_mm","couple_with_heart_mm"],"surrogates":"\uD83D\uDC68‍❤️‍\uD83D\uDC68","unicodeVersion":6,"diversityChildren":[{"names":["couple_with_heart_man_man_tone1","couple_with_heart_man_man_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFB‍❤️‍\uD83D\uDC68\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3fb"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_man_man_tone1_tone2","couple_with_heart_man_man_light_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFB‍❤️‍\uD83D\uDC68\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3fb","1f3fc"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_man_man_tone1_tone3","couple_with_heart_man_man_light_skin_tone_medium_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFB‍❤️‍\uD83D\uDC68\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3fb","1f3fd"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_man_man_tone1_tone4","couple_with_heart_man_man_light_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFB‍❤️‍\uD83D\uDC68\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3fb","1f3fe"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_man_man_tone1_tone5","couple_with_heart_man_man_light_skin_tone_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFB‍❤️‍\uD83D\uDC68\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3fb","1f3ff"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_man_man_tone2_tone1","couple_with_heart_man_man_medium_light_skin_tone_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFC‍❤️‍\uD83D\uDC68\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3fc","1f3fb"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_man_man_tone2","couple_with_heart_man_man_medium_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFC‍❤️‍\uD83D\uDC68\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3fc"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_man_man_tone2_tone3","couple_with_heart_man_man_medium_light_skin_tone_medium_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFC‍❤️‍\uD83D\uDC68\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3fc","1f3fd"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_man_man_tone2_tone4","couple_with_heart_man_man_medium_light_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFC‍❤️‍\uD83D\uDC68\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3fc","1f3fe"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_man_man_tone2_tone5","couple_with_heart_man_man_medium_light_skin_tone_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFC‍❤️‍\uD83D\uDC68\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3fc","1f3ff"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_man_man_tone3_tone1","couple_with_heart_man_man_medium_skin_tone_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFD‍❤️‍\uD83D\uDC68\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3fd","1f3fb"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_man_man_tone3_tone2","couple_with_heart_man_man_medium_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFD‍❤️‍\uD83D\uDC68\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3fd","1f3fc"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_man_man_tone3","couple_with_heart_man_man_medium_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFD‍❤️‍\uD83D\uDC68\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3fd"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_man_man_tone3_tone4","couple_with_heart_man_man_medium_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFD‍❤️‍\uD83D\uDC68\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3fd","1f3fe"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_man_man_tone3_tone5","couple_with_heart_man_man_medium_skin_tone_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFD‍❤️‍\uD83D\uDC68\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3fd","1f3ff"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_man_man_tone4_tone1","couple_with_heart_man_man_medium_dark_skin_tone_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFE‍❤️‍\uD83D\uDC68\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3fe","1f3fb"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_man_man_tone4_tone2","couple_with_heart_man_man_medium_dark_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFE‍❤️‍\uD83D\uDC68\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3fe","1f3fc"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_man_man_tone4_tone3","couple_with_heart_man_man_medium_dark_skin_tone_medium_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFE‍❤️‍\uD83D\uDC68\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3fe","1f3fd"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_man_man_tone4","couple_with_heart_man_man_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFE‍❤️‍\uD83D\uDC68\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3fe"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_man_man_tone4_tone5","couple_with_heart_man_man_medium_dark_skin_tone_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFE‍❤️‍\uD83D\uDC68\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3fe","1f3ff"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_man_man_tone5_tone1","couple_with_heart_man_man_dark_skin_tone_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFF‍❤️‍\uD83D\uDC68\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3ff","1f3fb"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_man_man_tone5_tone2","couple_with_heart_man_man_dark_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFF‍❤️‍\uD83D\uDC68\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3ff","1f3fc"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_man_man_tone5_tone3","couple_with_heart_man_man_dark_skin_tone_medium_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFF‍❤️‍\uD83D\uDC68\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3ff","1f3fd"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_man_man_tone5_tone4","couple_with_heart_man_man_dark_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFF‍❤️‍\uD83D\uDC68\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3ff","1f3fe"],"hasMultiDiversityParent":true},{"names":["couple_with_heart_man_man_tone5","couple_with_heart_man_man_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFF‍❤️‍\uD83D\uDC68\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3ff"],"hasMultiDiversityParent":true}],"hasMultiDiversity":true},{"names":["couplekiss"],"surrogates":"\uD83D\uDC8F","unicodeVersion":6,"diversityChildren":[{"names":["kiss_tone1","kiss_light_skin_tone"],"surrogates":"\uD83D\uDC8F\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3fb"],"hasMultiDiversityParent":true},{"names":["kiss_person_person_tone1_tone2","kiss_person_person_light_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFB‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3fb","1f3fc"],"hasMultiDiversityParent":true},{"names":["kiss_person_person_tone1_tone3","kiss_person_person_light_skin_tone_medium_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFB‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3fb","1f3fd"],"hasMultiDiversityParent":true},{"names":["kiss_person_person_tone1_tone4","kiss_person_person_light_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFB‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3fb","1f3fe"],"hasMultiDiversityParent":true},{"names":["kiss_person_person_tone1_tone5","kiss_person_person_light_skin_tone_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFB‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3fb","1f3ff"],"hasMultiDiversityParent":true},{"names":["kiss_person_person_tone2_tone1","kiss_person_person_medium_light_skin_tone_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFC‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3fc","1f3fb"],"hasMultiDiversityParent":true},{"names":["kiss_tone2","kiss_medium_light_skin_tone"],"surrogates":"\uD83D\uDC8F\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3fc"],"hasMultiDiversityParent":true},{"names":["kiss_person_person_tone2_tone3","kiss_person_person_medium_light_skin_tone_medium_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFC‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3fc","1f3fd"],"hasMultiDiversityParent":true},{"names":["kiss_person_person_tone2_tone4","kiss_person_person_medium_light_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFC‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3fc","1f3fe"],"hasMultiDiversityParent":true},{"names":["kiss_person_person_tone2_tone5","kiss_person_person_medium_light_skin_tone_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFC‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3fc","1f3ff"],"hasMultiDiversityParent":true},{"names":["kiss_person_person_tone3_tone1","kiss_person_person_medium_skin_tone_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFD‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3fd","1f3fb"],"hasMultiDiversityParent":true},{"names":["kiss_person_person_tone3_tone2","kiss_person_person_medium_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFD‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3fd","1f3fc"],"hasMultiDiversityParent":true},{"names":["kiss_tone3","kiss_medium_skin_tone"],"surrogates":"\uD83D\uDC8F\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3fd"],"hasMultiDiversityParent":true},{"names":["kiss_person_person_tone3_tone4","kiss_person_person_medium_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFD‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3fd","1f3fe"],"hasMultiDiversityParent":true},{"names":["kiss_person_person_tone3_tone5","kiss_person_person_medium_skin_tone_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFD‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3fd","1f3ff"],"hasMultiDiversityParent":true},{"names":["kiss_person_person_tone4_tone1","kiss_person_person_medium_dark_skin_tone_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFE‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3fe","1f3fb"],"hasMultiDiversityParent":true},{"names":["kiss_person_person_tone4_tone2","kiss_person_person_medium_dark_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFE‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3fe","1f3fc"],"hasMultiDiversityParent":true},{"names":["kiss_person_person_tone4_tone3","kiss_person_person_medium_dark_skin_tone_medium_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFE‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3fe","1f3fd"],"hasMultiDiversityParent":true},{"names":["kiss_tone4","kiss_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC8F\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3fe"],"hasMultiDiversityParent":true},{"names":["kiss_person_person_tone4_tone5","kiss_person_person_medium_dark_skin_tone_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFE‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3fe","1f3ff"],"hasMultiDiversityParent":true},{"names":["kiss_person_person_tone5_tone1","kiss_person_person_dark_skin_tone_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFF‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3ff","1f3fb"],"hasMultiDiversityParent":true},{"names":["kiss_person_person_tone5_tone2","kiss_person_person_dark_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFF‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3ff","1f3fc"],"hasMultiDiversityParent":true},{"names":["kiss_person_person_tone5_tone3","kiss_person_person_dark_skin_tone_medium_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFF‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3ff","1f3fd"],"hasMultiDiversityParent":true},{"names":["kiss_person_person_tone5_tone4","kiss_person_person_dark_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD1\uD83C\uDFFF‍❤️‍\uD83D\uDC8B‍\uD83E\uDDD1\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3ff","1f3fe"],"hasMultiDiversityParent":true},{"names":["kiss_tone5","kiss_dark_skin_tone"],"surrogates":"\uD83D\uDC8F\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3ff"],"hasMultiDiversityParent":true}],"hasMultiDiversity":true},{"names":["kiss_woman_man"],"surrogates":"\uD83D\uDC69‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68","unicodeVersion":6,"diversityChildren":[{"names":["kiss_woman_man_tone1","kiss_woman_man_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3fb"],"hasMultiDiversityParent":true},{"names":["kiss_woman_man_tone1_tone2","kiss_woman_man_light_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3fb","1f3fc"],"hasMultiDiversityParent":true},{"names":["kiss_woman_man_tone1_tone3","kiss_woman_man_light_skin_tone_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3fb","1f3fd"],"hasMultiDiversityParent":true},{"names":["kiss_woman_man_tone1_tone4","kiss_woman_man_light_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3fb","1f3fe"],"hasMultiDiversityParent":true},{"names":["kiss_woman_man_tone1_tone5","kiss_woman_man_light_skin_tone_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3fb","1f3ff"],"hasMultiDiversityParent":true},{"names":["kiss_woman_man_tone2_tone1","kiss_woman_man_medium_light_skin_tone_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3fc","1f3fb"],"hasMultiDiversityParent":true},{"names":["kiss_woman_man_tone2","kiss_woman_man_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3fc"],"hasMultiDiversityParent":true},{"names":["kiss_woman_man_tone2_tone3","kiss_woman_man_medium_light_skin_tone_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3fc","1f3fd"],"hasMultiDiversityParent":true},{"names":["kiss_woman_man_tone2_tone4","kiss_woman_man_medium_light_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3fc","1f3fe"],"hasMultiDiversityParent":true},{"names":["kiss_woman_man_tone2_tone5","kiss_woman_man_medium_light_skin_tone_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3fc","1f3ff"],"hasMultiDiversityParent":true},{"names":["kiss_woman_man_tone3_tone1","kiss_woman_man_medium_skin_tone_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3fd","1f3fb"],"hasMultiDiversityParent":true},{"names":["kiss_woman_man_tone3_tone2","kiss_woman_man_medium_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3fd","1f3fc"],"hasMultiDiversityParent":true},{"names":["kiss_woman_man_tone3","kiss_woman_man_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3fd"],"hasMultiDiversityParent":true},{"names":["kiss_woman_man_tone3_tone4","kiss_woman_man_medium_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3fd","1f3fe"],"hasMultiDiversityParent":true},{"names":["kiss_woman_man_tone3_tone5","kiss_woman_man_medium_skin_tone_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3fd","1f3ff"],"hasMultiDiversityParent":true},{"names":["kiss_woman_man_tone4_tone1","kiss_woman_man_medium_dark_skin_tone_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3fe","1f3fb"],"hasMultiDiversityParent":true},{"names":["kiss_woman_man_tone4_tone2","kiss_woman_man_medium_dark_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3fe","1f3fc"],"hasMultiDiversityParent":true},{"names":["kiss_woman_man_tone4_tone3","kiss_woman_man_medium_dark_skin_tone_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3fe","1f3fd"],"hasMultiDiversityParent":true},{"names":["kiss_woman_man_tone4","kiss_woman_man_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3fe"],"hasMultiDiversityParent":true},{"names":["kiss_woman_man_tone4_tone5","kiss_woman_man_medium_dark_skin_tone_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3fe","1f3ff"],"hasMultiDiversityParent":true},{"names":["kiss_woman_man_tone5_tone1","kiss_woman_man_dark_skin_tone_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3ff","1f3fb"],"hasMultiDiversityParent":true},{"names":["kiss_woman_man_tone5_tone2","kiss_woman_man_dark_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3ff","1f3fc"],"hasMultiDiversityParent":true},{"names":["kiss_woman_man_tone5_tone3","kiss_woman_man_dark_skin_tone_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3ff","1f3fd"],"hasMultiDiversityParent":true},{"names":["kiss_woman_man_tone5_tone4","kiss_woman_man_dark_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3ff","1f3fe"],"hasMultiDiversityParent":true},{"names":["kiss_woman_man_tone5","kiss_woman_man_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3ff"],"hasMultiDiversityParent":true}],"hasMultiDiversity":true},{"names":["kiss_ww","couplekiss_ww"],"surrogates":"\uD83D\uDC69‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69","unicodeVersion":6,"diversityChildren":[{"names":["kiss_woman_woman_tone1","kiss_woman_woman_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3fb"],"hasMultiDiversityParent":true},{"names":["kiss_woman_woman_tone1_tone2","kiss_woman_woman_light_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3fb","1f3fc"],"hasMultiDiversityParent":true},{"names":["kiss_woman_woman_tone1_tone3","kiss_woman_woman_light_skin_tone_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3fb","1f3fd"],"hasMultiDiversityParent":true},{"names":["kiss_woman_woman_tone1_tone4","kiss_woman_woman_light_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3fb","1f3fe"],"hasMultiDiversityParent":true},{"names":["kiss_woman_woman_tone1_tone5","kiss_woman_woman_light_skin_tone_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFB‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3fb","1f3ff"],"hasMultiDiversityParent":true},{"names":["kiss_woman_woman_tone2_tone1","kiss_woman_woman_medium_light_skin_tone_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3fc","1f3fb"],"hasMultiDiversityParent":true},{"names":["kiss_woman_woman_tone2","kiss_woman_woman_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3fc"],"hasMultiDiversityParent":true},{"names":["kiss_woman_woman_tone2_tone3","kiss_woman_woman_medium_light_skin_tone_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3fc","1f3fd"],"hasMultiDiversityParent":true},{"names":["kiss_woman_woman_tone2_tone4","kiss_woman_woman_medium_light_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3fc","1f3fe"],"hasMultiDiversityParent":true},{"names":["kiss_woman_woman_tone2_tone5","kiss_woman_woman_medium_light_skin_tone_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFC‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3fc","1f3ff"],"hasMultiDiversityParent":true},{"names":["kiss_woman_woman_tone3_tone1","kiss_woman_woman_medium_skin_tone_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3fd","1f3fb"],"hasMultiDiversityParent":true},{"names":["kiss_woman_woman_tone3_tone2","kiss_woman_woman_medium_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3fd","1f3fc"],"hasMultiDiversityParent":true},{"names":["kiss_woman_woman_tone3","kiss_woman_woman_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3fd"],"hasMultiDiversityParent":true},{"names":["kiss_woman_woman_tone3_tone4","kiss_woman_woman_medium_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3fd","1f3fe"],"hasMultiDiversityParent":true},{"names":["kiss_woman_woman_tone3_tone5","kiss_woman_woman_medium_skin_tone_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFD‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3fd","1f3ff"],"hasMultiDiversityParent":true},{"names":["kiss_woman_woman_tone4_tone1","kiss_woman_woman_medium_dark_skin_tone_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3fe","1f3fb"],"hasMultiDiversityParent":true},{"names":["kiss_woman_woman_tone4_tone2","kiss_woman_woman_medium_dark_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3fe","1f3fc"],"hasMultiDiversityParent":true},{"names":["kiss_woman_woman_tone4_tone3","kiss_woman_woman_medium_dark_skin_tone_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3fe","1f3fd"],"hasMultiDiversityParent":true},{"names":["kiss_woman_woman_tone4","kiss_woman_woman_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3fe"],"hasMultiDiversityParent":true},{"names":["kiss_woman_woman_tone4_tone5","kiss_woman_woman_medium_dark_skin_tone_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFE‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3fe","1f3ff"],"hasMultiDiversityParent":true},{"names":["kiss_woman_woman_tone5_tone1","kiss_woman_woman_dark_skin_tone_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3ff","1f3fb"],"hasMultiDiversityParent":true},{"names":["kiss_woman_woman_tone5_tone2","kiss_woman_woman_dark_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3ff","1f3fc"],"hasMultiDiversityParent":true},{"names":["kiss_woman_woman_tone5_tone3","kiss_woman_woman_dark_skin_tone_medium_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3ff","1f3fd"],"hasMultiDiversityParent":true},{"names":["kiss_woman_woman_tone5_tone4","kiss_woman_woman_dark_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3ff","1f3fe"],"hasMultiDiversityParent":true},{"names":["kiss_woman_woman_tone5","kiss_woman_woman_dark_skin_tone"],"surrogates":"\uD83D\uDC69\uD83C\uDFFF‍❤️‍\uD83D\uDC8B‍\uD83D\uDC69\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3ff"],"hasMultiDiversityParent":true}],"hasMultiDiversity":true},{"names":["kiss_mm","couplekiss_mm","kiss_man_man"],"surrogates":"\uD83D\uDC68‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68","unicodeVersion":6,"diversityChildren":[{"names":["kiss_man_man_tone1","kiss_man_man_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFB‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3fb"],"hasMultiDiversityParent":true},{"names":["kiss_man_man_tone1_tone2","kiss_man_man_light_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFB‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3fb","1f3fc"],"hasMultiDiversityParent":true},{"names":["kiss_man_man_tone1_tone3","kiss_man_man_light_skin_tone_medium_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFB‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3fb","1f3fd"],"hasMultiDiversityParent":true},{"names":["kiss_man_man_tone1_tone4","kiss_man_man_light_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFB‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3fb","1f3fe"],"hasMultiDiversityParent":true},{"names":["kiss_man_man_tone1_tone5","kiss_man_man_light_skin_tone_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFB‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3fb","1f3ff"],"hasMultiDiversityParent":true},{"names":["kiss_man_man_tone2_tone1","kiss_man_man_medium_light_skin_tone_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFC‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3fc","1f3fb"],"hasMultiDiversityParent":true},{"names":["kiss_man_man_tone2","kiss_man_man_medium_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFC‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3fc"],"hasMultiDiversityParent":true},{"names":["kiss_man_man_tone2_tone3","kiss_man_man_medium_light_skin_tone_medium_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFC‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3fc","1f3fd"],"hasMultiDiversityParent":true},{"names":["kiss_man_man_tone2_tone4","kiss_man_man_medium_light_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFC‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3fc","1f3fe"],"hasMultiDiversityParent":true},{"names":["kiss_man_man_tone2_tone5","kiss_man_man_medium_light_skin_tone_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFC‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3fc","1f3ff"],"hasMultiDiversityParent":true},{"names":["kiss_man_man_tone3_tone1","kiss_man_man_medium_skin_tone_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFD‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3fd","1f3fb"],"hasMultiDiversityParent":true},{"names":["kiss_man_man_tone3_tone2","kiss_man_man_medium_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFD‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3fd","1f3fc"],"hasMultiDiversityParent":true},{"names":["kiss_man_man_tone3","kiss_man_man_medium_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFD‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3fd"],"hasMultiDiversityParent":true},{"names":["kiss_man_man_tone3_tone4","kiss_man_man_medium_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFD‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3fd","1f3fe"],"hasMultiDiversityParent":true},{"names":["kiss_man_man_tone3_tone5","kiss_man_man_medium_skin_tone_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFD‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3fd","1f3ff"],"hasMultiDiversityParent":true},{"names":["kiss_man_man_tone4_tone1","kiss_man_man_medium_dark_skin_tone_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFE‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3fe","1f3fb"],"hasMultiDiversityParent":true},{"names":["kiss_man_man_tone4_tone2","kiss_man_man_medium_dark_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFE‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3fe","1f3fc"],"hasMultiDiversityParent":true},{"names":["kiss_man_man_tone4_tone3","kiss_man_man_medium_dark_skin_tone_medium_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFE‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3fe","1f3fd"],"hasMultiDiversityParent":true},{"names":["kiss_man_man_tone4","kiss_man_man_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFE‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3fe"],"hasMultiDiversityParent":true},{"names":["kiss_man_man_tone4_tone5","kiss_man_man_medium_dark_skin_tone_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFE‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3fe","1f3ff"],"hasMultiDiversityParent":true},{"names":["kiss_man_man_tone5_tone1","kiss_man_man_dark_skin_tone_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFF‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFB","unicodeVersion":13.1,"diversity":["1f3ff","1f3fb"],"hasMultiDiversityParent":true},{"names":["kiss_man_man_tone5_tone2","kiss_man_man_dark_skin_tone_medium_light_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFF‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFC","unicodeVersion":13.1,"diversity":["1f3ff","1f3fc"],"hasMultiDiversityParent":true},{"names":["kiss_man_man_tone5_tone3","kiss_man_man_dark_skin_tone_medium_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFF‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFD","unicodeVersion":13.1,"diversity":["1f3ff","1f3fd"],"hasMultiDiversityParent":true},{"names":["kiss_man_man_tone5_tone4","kiss_man_man_dark_skin_tone_medium_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFF‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFE","unicodeVersion":13.1,"diversity":["1f3ff","1f3fe"],"hasMultiDiversityParent":true},{"names":["kiss_man_man_tone5","kiss_man_man_dark_skin_tone"],"surrogates":"\uD83D\uDC68\uD83C\uDFFF‍❤️‍\uD83D\uDC8B‍\uD83D\uDC68\uD83C\uDFFF","unicodeVersion":13.1,"diversity":["1f3ff"],"hasMultiDiversityParent":true}],"hasMultiDiversity":true},{"names":["family"],"surrogates":"\uD83D\uDC6A","unicodeVersion":6},{"names":["family_man_woman_boy"],"surrogates":"\uD83D\uDC68‍\uD83D\uDC69‍\uD83D\uDC66","unicodeVersion":6},{"names":["family_mwg"],"surrogates":"\uD83D\uDC68‍\uD83D\uDC69‍\uD83D\uDC67","unicodeVersion":6},{"names":["family_mwgb"],"surrogates":"\uD83D\uDC68‍\uD83D\uDC69‍\uD83D\uDC67‍\uD83D\uDC66","unicodeVersion":6},{"names":["family_mwbb"],"surrogates":"\uD83D\uDC68‍\uD83D\uDC69‍\uD83D\uDC66‍\uD83D\uDC66","unicodeVersion":6},{"names":["family_mwgg"],"surrogates":"\uD83D\uDC68‍\uD83D\uDC69‍\uD83D\uDC67‍\uD83D\uDC67","unicodeVersion":6},{"names":["family_wwb"],"surrogates":"\uD83D\uDC69‍\uD83D\uDC69‍\uD83D\uDC66","unicodeVersion":6},{"names":["family_wwg"],"surrogates":"\uD83D\uDC69‍\uD83D\uDC69‍\uD83D\uDC67","unicodeVersion":6},{"names":["family_wwgb"],"surrogates":"\uD83D\uDC69‍\uD83D\uDC69‍\uD83D\uDC67‍\uD83D\uDC66","unicodeVersion":6},{"names":["family_wwbb"],"surrogates":"\uD83D\uDC69‍\uD83D\uDC69‍\uD83D\uDC66‍\uD83D\uDC66","unicodeVersion":6},{"names":["family_wwgg"],"surrogates":"\uD83D\uDC69‍\uD83D\uDC69‍\uD83D\uDC67‍\uD83D\uDC67","unicodeVersion":6},{"names":["family_mmb"],"surrogates":"\uD83D\uDC68‍\uD83D\uDC68‍\uD83D\uDC66","unicodeVersion":6},{"names":["family_mmg"],"surrogates":"\uD83D\uDC68‍\uD83D\uDC68‍\uD83D\uDC67","unicodeVersion":6},{"names":["family_mmgb"],"surrogates":"\uD83D\uDC68‍\uD83D\uDC68‍\uD83D\uDC67‍\uD83D\uDC66","unicodeVersion":6},{"names":["family_mmbb"],"surrogates":"\uD83D\uDC68‍\uD83D\uDC68‍\uD83D\uDC66‍\uD83D\uDC66","unicodeVersion":6},{"names":["family_mmgg"],"surrogates":"\uD83D\uDC68‍\uD83D\uDC68‍\uD83D\uDC67‍\uD83D\uDC67","unicodeVersion":6},{"names":["family_woman_boy"],"surrogates":"\uD83D\uDC69‍\uD83D\uDC66","unicodeVersion":6},{"names":["family_woman_girl"],"surrogates":"\uD83D\uDC69‍\uD83D\uDC67","unicodeVersion":6},{"names":["family_woman_girl_boy"],"surrogates":"\uD83D\uDC69‍\uD83D\uDC67‍\uD83D\uDC66","unicodeVersion":6},{"names":["family_woman_boy_boy"],"surrogates":"\uD83D\uDC69‍\uD83D\uDC66‍\uD83D\uDC66","unicodeVersion":6},{"names":["family_woman_girl_girl"],"surrogates":"\uD83D\uDC69‍\uD83D\uDC67‍\uD83D\uDC67","unicodeVersion":6},{"names":["family_man_boy"],"surrogates":"\uD83D\uDC68‍\uD83D\uDC66","unicodeVersion":6},{"names":["family_man_girl"],"surrogates":"\uD83D\uDC68‍\uD83D\uDC67","unicodeVersion":6},{"names":["family_man_girl_boy"],"surrogates":"\uD83D\uDC68‍\uD83D\uDC67‍\uD83D\uDC66","unicodeVersion":6},{"names":["family_man_boy_boy"],"surrogates":"\uD83D\uDC68‍\uD83D\uDC66‍\uD83D\uDC66","unicodeVersion":6},{"names":["family_man_girl_girl"],"surrogates":"\uD83D\uDC68‍\uD83D\uDC67‍\uD83D\uDC67","unicodeVersion":6},{"names":["knot"],"surrogates":"\uD83E\uDEA2","unicodeVersion":13},{"names":["yarn"],"surrogates":"\uD83E\uDDF6","unicodeVersion":11},{"names":["thread"],"surrogates":"\uD83E\uDDF5","unicodeVersion":11},{"names":["sewing_needle"],"surrogates":"\uD83E\uDEA1","unicodeVersion":13},{"names":["coat"],"surrogates":"\uD83E\uDDE5","unicodeVersion":10},{"names":["lab_coat"],"surrogates":"\uD83E\uDD7C","unicodeVersion":11},{"names":["safety_vest"],"surrogates":"\uD83E\uDDBA","unicodeVersion":12},{"names":["womans_clothes"],"surrogates":"\uD83D\uDC5A","unicodeVersion":6},{"names":["shirt","t_shirt"],"surrogates":"\uD83D\uDC55","unicodeVersion":6},{"names":["jeans"],"surrogates":"\uD83D\uDC56","unicodeVersion":6},{"names":["briefs"],"surrogates":"\uD83E\uDE72","unicodeVersion":12},{"names":["shorts"],"surrogates":"\uD83E\uDE73","unicodeVersion":12},{"names":["necktie"],"surrogates":"\uD83D\uDC54","unicodeVersion":6},{"names":["dress"],"surrogates":"\uD83D\uDC57","unicodeVersion":6},{"names":["bikini"],"surrogates":"\uD83D\uDC59","unicodeVersion":6},{"names":["one_piece_swimsuit"],"surrogates":"\uD83E\uDE71","unicodeVersion":12},{"names":["kimono"],"surrogates":"\uD83D\uDC58","unicodeVersion":6},{"names":["sari"],"surrogates":"\uD83E\uDD7B","unicodeVersion":12},{"names":["thong_sandal"],"surrogates":"\uD83E\uDE74","unicodeVersion":13},{"names":["womans_flat_shoe","flat_shoe"],"surrogates":"\uD83E\uDD7F","unicodeVersion":11},{"names":["high_heel"],"surrogates":"\uD83D\uDC60","unicodeVersion":6},{"names":["sandal","womans_sandal"],"surrogates":"\uD83D\uDC61","unicodeVersion":6},{"names":["boot","womans_boot"],"surrogates":"\uD83D\uDC62","unicodeVersion":6},{"names":["mans_shoe"],"surrogates":"\uD83D\uDC5E","unicodeVersion":6},{"names":["athletic_shoe","running_shoe"],"surrogates":"\uD83D\uDC5F","unicodeVersion":6},{"names":["hiking_boot"],"surrogates":"\uD83E\uDD7E","unicodeVersion":11},{"names":["socks"],"surrogates":"\uD83E\uDDE6","unicodeVersion":10},{"names":["gloves"],"surrogates":"\uD83E\uDDE4","unicodeVersion":10},{"names":["scarf"],"surrogates":"\uD83E\uDDE3","unicodeVersion":10},{"names":["tophat","top_hat"],"surrogates":"\uD83C\uDFA9","unicodeVersion":6},{"names":["billed_cap"],"surrogates":"\uD83E\uDDE2","unicodeVersion":10},{"names":["womans_hat"],"surrogates":"\uD83D\uDC52","unicodeVersion":6},{"names":["mortar_board"],"surrogates":"\uD83C\uDF93","unicodeVersion":6},{"names":["helmet_with_cross","helmet_with_white_cross"],"surrogates":"⛑️","unicodeVersion":5.2},{"names":["military_helmet"],"surrogates":"\uD83E\uDE96","unicodeVersion":13},{"names":["crown"],"surrogates":"\uD83D\uDC51","unicodeVersion":6},{"names":["ring"],"surrogates":"\uD83D\uDC8D","unicodeVersion":6},{"names":["pouch","clutch_bag"],"surrogates":"\uD83D\uDC5D","unicodeVersion":6},{"names":["purse"],"surrogates":"\uD83D\uDC5B","unicodeVersion":6},{"names":["handbag"],"surrogates":"\uD83D\uDC5C","unicodeVersion":6},{"names":["briefcase"],"surrogates":"\uD83D\uDCBC","unicodeVersion":6},{"names":["school_satchel","backpack"],"surrogates":"\uD83C\uDF92","unicodeVersion":6},{"names":["luggage"],"surrogates":"\uD83E\uDDF3","unicodeVersion":11},{"names":["eyeglasses","glasses"],"surrogates":"\uD83D\uDC53","unicodeVersion":6},{"names":["dark_sunglasses"],"surrogates":"\uD83D\uDD76️","unicodeVersion":7},{"names":["goggles"],"surrogates":"\uD83E\uDD7D","unicodeVersion":11},{"names":["closed_umbrella"],"surrogates":"\uD83C\uDF02","unicodeVersion":6}],"nature":[{"names":["dog","dog_face"],"surrogates":"\uD83D\uDC36","unicodeVersion":6},{"names":["cat","cat_face"],"surrogates":"\uD83D\uDC31","unicodeVersion":6},{"names":["mouse","mouse_face"],"surrogates":"\uD83D\uDC2D","unicodeVersion":6},{"names":["hamster"],"surrogates":"\uD83D\uDC39","unicodeVersion":6},{"names":["rabbit","rabbit_face"],"surrogates":"\uD83D\uDC30","unicodeVersion":6},{"names":["fox","fox_face"],"surrogates":"\uD83E\uDD8A","unicodeVersion":9},{"names":["bear"],"surrogates":"\uD83D\uDC3B","unicodeVersion":6},{"names":["panda_face","panda"],"surrogates":"\uD83D\uDC3C","unicodeVersion":6},{"names":["polar_bear"],"surrogates":"\uD83D\uDC3B‍❄️","unicodeVersion":13},{"names":["koala"],"surrogates":"\uD83D\uDC28","unicodeVersion":6},{"names":["tiger","tiger_face"],"surrogates":"\uD83D\uDC2F","unicodeVersion":6},{"names":["lion_face","lion"],"surrogates":"\uD83E\uDD81","unicodeVersion":8},{"names":["cow","cow_face"],"surrogates":"\uD83D\uDC2E","unicodeVersion":6},{"names":["pig","pig_face"],"surrogates":"\uD83D\uDC37","unicodeVersion":6},{"names":["pig_nose"],"surrogates":"\uD83D\uDC3D","unicodeVersion":6},{"names":["frog"],"surrogates":"\uD83D\uDC38","unicodeVersion":6},{"names":["monkey_face"],"surrogates":"\uD83D\uDC35","unicodeVersion":6},{"names":["see_no_evil"],"surrogates":"\uD83D\uDE48","unicodeVersion":6},{"names":["hear_no_evil"],"surrogates":"\uD83D\uDE49","unicodeVersion":6},{"names":["speak_no_evil"],"surrogates":"\uD83D\uDE4A","unicodeVersion":6},{"names":["monkey"],"surrogates":"\uD83D\uDC12","unicodeVersion":6},{"names":["chicken"],"surrogates":"\uD83D\uDC14","unicodeVersion":6},{"names":["penguin"],"surrogates":"\uD83D\uDC27","unicodeVersion":6},{"names":["bird"],"surrogates":"\uD83D\uDC26","unicodeVersion":6},{"names":["baby_chick"],"surrogates":"\uD83D\uDC24","unicodeVersion":6},{"names":["hatching_chick"],"surrogates":"\uD83D\uDC23","unicodeVersion":6},{"names":["hatched_chick"],"surrogates":"\uD83D\uDC25","unicodeVersion":6},{"names":["goose"],"surrogates":"\uD83E\uDEBF","unicodeVersion":15},{"names":["duck"],"surrogates":"\uD83E\uDD86","unicodeVersion":9},{"names":["black_bird"],"surrogates":"\uD83D\uDC26‍⬛","unicodeVersion":15},{"names":["eagle"],"surrogates":"\uD83E\uDD85","unicodeVersion":9},{"names":["owl"],"surrogates":"\uD83E\uDD89","unicodeVersion":9},{"names":["bat"],"surrogates":"\uD83E\uDD87","unicodeVersion":9},{"names":["wolf"],"surrogates":"\uD83D\uDC3A","unicodeVersion":6},{"names":["boar"],"surrogates":"\uD83D\uDC17","unicodeVersion":6},{"names":["horse","horse_face"],"surrogates":"\uD83D\uDC34","unicodeVersion":6},{"names":["unicorn","unicorn_face"],"surrogates":"\uD83E\uDD84","unicodeVersion":8},{"names":["moose"],"surrogates":"\uD83E\uDECE","unicodeVersion":15},{"names":["bee","honeybee"],"surrogates":"\uD83D\uDC1D","unicodeVersion":6},{"names":["worm"],"surrogates":"\uD83E\uDEB1","unicodeVersion":13},{"names":["bug"],"surrogates":"\uD83D\uDC1B","unicodeVersion":6},{"names":["butterfly"],"surrogates":"\uD83E\uDD8B","unicodeVersion":9},{"names":["snail"],"surrogates":"\uD83D\uDC0C","unicodeVersion":6},{"names":["lady_beetle"],"surrogates":"\uD83D\uDC1E","unicodeVersion":6},{"names":["ant"],"surrogates":"\uD83D\uDC1C","unicodeVersion":6},{"names":["fly"],"surrogates":"\uD83E\uDEB0","unicodeVersion":13},{"names":["beetle"],"surrogates":"\uD83E\uDEB2","unicodeVersion":13},{"names":["cockroach"],"surrogates":"\uD83E\uDEB3","unicodeVersion":13},{"names":["mosquito"],"surrogates":"\uD83E\uDD9F","unicodeVersion":11},{"names":["cricket"],"surrogates":"\uD83E\uDD97","unicodeVersion":10},{"names":["spider"],"surrogates":"\uD83D\uDD77️","unicodeVersion":7},{"names":["spider_web"],"surrogates":"\uD83D\uDD78️","unicodeVersion":7},{"names":["scorpion"],"surrogates":"\uD83E\uDD82","unicodeVersion":8},{"names":["turtle"],"surrogates":"\uD83D\uDC22","unicodeVersion":6},{"names":["snake"],"surrogates":"\uD83D\uDC0D","unicodeVersion":6},{"names":["lizard"],"surrogates":"\uD83E\uDD8E","unicodeVersion":9},{"names":["t_rex"],"surrogates":"\uD83E\uDD96","unicodeVersion":10},{"names":["sauropod"],"surrogates":"\uD83E\uDD95","unicodeVersion":10},{"names":["octopus"],"surrogates":"\uD83D\uDC19","unicodeVersion":6},{"names":["squid"],"surrogates":"\uD83E\uDD91","unicodeVersion":9},{"names":["jellyfish"],"surrogates":"\uD83E\uDEBC","unicodeVersion":15},{"names":["shrimp"],"surrogates":"\uD83E\uDD90","unicodeVersion":9},{"names":["lobster"],"surrogates":"\uD83E\uDD9E","unicodeVersion":11},{"names":["crab"],"surrogates":"\uD83E\uDD80","unicodeVersion":8},{"names":["blowfish"],"surrogates":"\uD83D\uDC21","unicodeVersion":6},{"names":["tropical_fish"],"surrogates":"\uD83D\uDC20","unicodeVersion":6},{"names":["fish"],"surrogates":"\uD83D\uDC1F","unicodeVersion":6},{"names":["dolphin"],"surrogates":"\uD83D\uDC2C","unicodeVersion":6},{"names":["whale"],"surrogates":"\uD83D\uDC33","unicodeVersion":6},{"names":["whale2"],"surrogates":"\uD83D\uDC0B","unicodeVersion":6},{"names":["shark"],"surrogates":"\uD83E\uDD88","unicodeVersion":9},{"names":["seal"],"surrogates":"\uD83E\uDDAD","unicodeVersion":13},{"names":["crocodile"],"surrogates":"\uD83D\uDC0A","unicodeVersion":6},{"names":["tiger2"],"surrogates":"\uD83D\uDC05","unicodeVersion":6},{"names":["leopard"],"surrogates":"\uD83D\uDC06","unicodeVersion":6},{"names":["zebra"],"surrogates":"\uD83E\uDD93","unicodeVersion":10},{"names":["gorilla"],"surrogates":"\uD83E\uDD8D","unicodeVersion":9},{"names":["orangutan"],"surrogates":"\uD83E\uDDA7","unicodeVersion":12},{"names":["mammoth"],"surrogates":"\uD83E\uDDA3","unicodeVersion":13},{"names":["elephant"],"surrogates":"\uD83D\uDC18","unicodeVersion":6},{"names":["hippopotamus"],"surrogates":"\uD83E\uDD9B","unicodeVersion":11},{"names":["rhino","rhinoceros"],"surrogates":"\uD83E\uDD8F","unicodeVersion":9},{"names":["dromedary_camel"],"surrogates":"\uD83D\uDC2A","unicodeVersion":6},{"names":["camel"],"surrogates":"\uD83D\uDC2B","unicodeVersion":6},{"names":["giraffe"],"surrogates":"\uD83E\uDD92","unicodeVersion":10},{"names":["kangaroo"],"surrogates":"\uD83E\uDD98","unicodeVersion":11},{"names":["bison"],"surrogates":"\uD83E\uDDAC","unicodeVersion":13},{"names":["water_buffalo"],"surrogates":"\uD83D\uDC03","unicodeVersion":6},{"names":["ox"],"surrogates":"\uD83D\uDC02","unicodeVersion":6},{"names":["cow2"],"surrogates":"\uD83D\uDC04","unicodeVersion":6},{"names":["donkey"],"surrogates":"\uD83E\uDECF","unicodeVersion":15},{"names":["racehorse"],"surrogates":"\uD83D\uDC0E","unicodeVersion":6},{"names":["pig2"],"surrogates":"\uD83D\uDC16","unicodeVersion":6},{"names":["ram"],"surrogates":"\uD83D\uDC0F","unicodeVersion":6},{"names":["sheep","ewe"],"surrogates":"\uD83D\uDC11","unicodeVersion":6},{"names":["llama"],"surrogates":"\uD83E\uDD99","unicodeVersion":11},{"names":["goat"],"surrogates":"\uD83D\uDC10","unicodeVersion":6},{"names":["deer"],"surrogates":"\uD83E\uDD8C","unicodeVersion":9},{"names":["dog2"],"surrogates":"\uD83D\uDC15","unicodeVersion":6},{"names":["poodle"],"surrogates":"\uD83D\uDC29","unicodeVersion":6},{"names":["guide_dog"],"surrogates":"\uD83E\uDDAE","unicodeVersion":12},{"names":["service_dog"],"surrogates":"\uD83D\uDC15‍\uD83E\uDDBA","unicodeVersion":12},{"names":["cat2"],"surrogates":"\uD83D\uDC08","unicodeVersion":6},{"names":["black_cat"],"surrogates":"\uD83D\uDC08‍⬛","unicodeVersion":13},{"names":["feather"],"surrogates":"\uD83E\uDEB6","unicodeVersion":13},{"names":["wing"],"surrogates":"\uD83E\uDEBD","unicodeVersion":15},{"names":["rooster"],"surrogates":"\uD83D\uDC13","unicodeVersion":6},{"names":["turkey"],"surrogates":"\uD83E\uDD83","unicodeVersion":8},{"names":["dodo"],"surrogates":"\uD83E\uDDA4","unicodeVersion":13},{"names":["peacock"],"surrogates":"\uD83E\uDD9A","unicodeVersion":11},{"names":["parrot"],"surrogates":"\uD83E\uDD9C","unicodeVersion":11},{"names":["swan"],"surrogates":"\uD83E\uDDA2","unicodeVersion":11},{"names":["flamingo"],"surrogates":"\uD83E\uDDA9","unicodeVersion":12},{"names":["dove","dove_of_peace"],"surrogates":"\uD83D\uDD4A️","unicodeVersion":7},{"names":["rabbit2"],"surrogates":"\uD83D\uDC07","unicodeVersion":6},{"names":["raccoon"],"surrogates":"\uD83E\uDD9D","unicodeVersion":11},{"names":["skunk"],"surrogates":"\uD83E\uDDA8","unicodeVersion":12},{"names":["badger"],"surrogates":"\uD83E\uDDA1","unicodeVersion":11},{"names":["beaver"],"surrogates":"\uD83E\uDDAB","unicodeVersion":13},{"names":["otter"],"surrogates":"\uD83E\uDDA6","unicodeVersion":12},{"names":["sloth"],"surrogates":"\uD83E\uDDA5","unicodeVersion":12},{"names":["mouse2"],"surrogates":"\uD83D\uDC01","unicodeVersion":6},{"names":["rat"],"surrogates":"\uD83D\uDC00","unicodeVersion":6},{"names":["chipmunk"],"surrogates":"\uD83D\uDC3F️","unicodeVersion":7},{"names":["hedgehog"],"surrogates":"\uD83E\uDD94","unicodeVersion":10},{"names":["feet","paw_prints"],"surrogates":"\uD83D\uDC3E","unicodeVersion":6},{"names":["dragon"],"surrogates":"\uD83D\uDC09","unicodeVersion":6},{"names":["dragon_face"],"surrogates":"\uD83D\uDC32","unicodeVersion":6},{"names":["cactus"],"surrogates":"\uD83C\uDF35","unicodeVersion":6},{"names":["christmas_tree"],"surrogates":"\uD83C\uDF84","unicodeVersion":6},{"names":["evergreen_tree"],"surrogates":"\uD83C\uDF32","unicodeVersion":6},{"names":["deciduous_tree"],"surrogates":"\uD83C\uDF33","unicodeVersion":6},{"names":["palm_tree"],"surrogates":"\uD83C\uDF34","unicodeVersion":6},{"names":["wood"],"surrogates":"\uD83E\uDEB5","unicodeVersion":13},{"names":["seedling"],"surrogates":"\uD83C\uDF31","unicodeVersion":6},{"names":["herb"],"surrogates":"\uD83C\uDF3F","unicodeVersion":6},{"names":["shamrock"],"surrogates":"☘️","unicodeVersion":4.1},{"names":["four_leaf_clover"],"surrogates":"\uD83C\uDF40","unicodeVersion":6},{"names":["bamboo"],"surrogates":"\uD83C\uDF8D","unicodeVersion":6},{"names":["potted_plant"],"surrogates":"\uD83E\uDEB4","unicodeVersion":13},{"names":["tanabata_tree"],"surrogates":"\uD83C\uDF8B","unicodeVersion":6},{"names":["leaves"],"surrogates":"\uD83C\uDF43","unicodeVersion":6},{"names":["fallen_leaf"],"surrogates":"\uD83C\uDF42","unicodeVersion":6},{"names":["maple_leaf"],"surrogates":"\uD83C\uDF41","unicodeVersion":6},{"names":["nest_with_eggs"],"surrogates":"\uD83E\uDEBA","unicodeVersion":14},{"names":["empty_nest"],"surrogates":"\uD83E\uDEB9","unicodeVersion":14},{"names":["mushroom"],"surrogates":"\uD83C\uDF44","unicodeVersion":6},{"names":["shell","spiral_shell"],"surrogates":"\uD83D\uDC1A","unicodeVersion":6},{"names":["coral"],"surrogates":"\uD83E\uDEB8","unicodeVersion":14},{"names":["rock"],"surrogates":"\uD83E\uDEA8","unicodeVersion":13},{"names":["ear_of_rice","sheaf_of_rice"],"surrogates":"\uD83C\uDF3E","unicodeVersion":6},{"names":["bouquet"],"surrogates":"\uD83D\uDC90","unicodeVersion":6},{"names":["tulip"],"surrogates":"\uD83C\uDF37","unicodeVersion":6},{"names":["rose"],"surrogates":"\uD83C\uDF39","unicodeVersion":6},{"names":["wilted_rose","wilted_flower"],"surrogates":"\uD83E\uDD40","unicodeVersion":9},{"names":["hyacinth"],"surrogates":"\uD83E\uDEBB","unicodeVersion":15},{"names":["lotus"],"surrogates":"\uD83E\uDEB7","unicodeVersion":14},{"names":["hibiscus"],"surrogates":"\uD83C\uDF3A","unicodeVersion":6},{"names":["cherry_blossom"],"surrogates":"\uD83C\uDF38","unicodeVersion":6},{"names":["blossom"],"surrogates":"\uD83C\uDF3C","unicodeVersion":6},{"names":["sunflower"],"surrogates":"\uD83C\uDF3B","unicodeVersion":6},{"names":["sun_with_face"],"surrogates":"\uD83C\uDF1E","unicodeVersion":6},{"names":["full_moon_with_face"],"surrogates":"\uD83C\uDF1D","unicodeVersion":6},{"names":["first_quarter_moon_with_face"],"surrogates":"\uD83C\uDF1B","unicodeVersion":6},{"names":["last_quarter_moon_with_face"],"surrogates":"\uD83C\uDF1C","unicodeVersion":6},{"names":["new_moon_with_face","new_moon_face"],"surrogates":"\uD83C\uDF1A","unicodeVersion":6},{"names":["full_moon"],"surrogates":"\uD83C\uDF15","unicodeVersion":6},{"names":["waning_gibbous_moon"],"surrogates":"\uD83C\uDF16","unicodeVersion":6},{"names":["last_quarter_moon"],"surrogates":"\uD83C\uDF17","unicodeVersion":6},{"names":["waning_crescent_moon"],"surrogates":"\uD83C\uDF18","unicodeVersion":6},{"names":["new_moon"],"surrogates":"\uD83C\uDF11","unicodeVersion":6},{"names":["waxing_crescent_moon"],"surrogates":"\uD83C\uDF12","unicodeVersion":6},{"names":["first_quarter_moon"],"surrogates":"\uD83C\uDF13","unicodeVersion":6},{"names":["waxing_gibbous_moon"],"surrogates":"\uD83C\uDF14","unicodeVersion":6},{"names":["crescent_moon"],"surrogates":"\uD83C\uDF19","unicodeVersion":6},{"names":["earth_americas"],"surrogates":"\uD83C\uDF0E","unicodeVersion":6},{"names":["earth_africa"],"surrogates":"\uD83C\uDF0D","unicodeVersion":6},{"names":["earth_asia"],"surrogates":"\uD83C\uDF0F","unicodeVersion":6},{"names":["ringed_planet"],"surrogates":"\uD83E\uDE90","unicodeVersion":12},{"names":["dizzy"],"surrogates":"\uD83D\uDCAB","unicodeVersion":6},{"names":["star"],"surrogates":"⭐","unicodeVersion":5.1},{"names":["star2","glowing_star"],"surrogates":"\uD83C\uDF1F","unicodeVersion":6},{"names":["sparkles"],"surrogates":"✨","unicodeVersion":6},{"names":["zap","high_voltage"],"surrogates":"⚡","unicodeVersion":4},{"names":["comet"],"surrogates":"☄️","unicodeVersion":1.1},{"names":["boom","collision"],"surrogates":"\uD83D\uDCA5","unicodeVersion":6},{"names":["fire","flame"],"surrogates":"\uD83D\uDD25","unicodeVersion":6},{"names":["cloud_tornado","cloud_with_tornado","tornado"],"surrogates":"\uD83C\uDF2A️","unicodeVersion":7},{"names":["rainbow"],"surrogates":"\uD83C\uDF08","unicodeVersion":6},{"names":["sunny","sun"],"surrogates":"☀️","unicodeVersion":1.1},{"names":["white_sun_small_cloud","white_sun_with_small_cloud"],"surrogates":"\uD83C\uDF24️","unicodeVersion":7},{"names":["partly_sunny"],"surrogates":"⛅","unicodeVersion":5.2},{"names":["white_sun_cloud","white_sun_behind_cloud"],"surrogates":"\uD83C\uDF25️","unicodeVersion":7},{"names":["cloud"],"surrogates":"☁️","unicodeVersion":1.1},{"names":["white_sun_rain_cloud","white_sun_behind_cloud_with_rain"],"surrogates":"\uD83C\uDF26️","unicodeVersion":7},{"names":["cloud_rain","cloud_with_rain"],"surrogates":"\uD83C\uDF27️","unicodeVersion":7},{"names":["thunder_cloud_rain","thunder_cloud_and_rain"],"surrogates":"⛈️","unicodeVersion":5.2},{"names":["cloud_lightning","cloud_with_lightning"],"surrogates":"\uD83C\uDF29️","unicodeVersion":7},{"names":["cloud_snow","cloud_with_snow"],"surrogates":"\uD83C\uDF28️","unicodeVersion":7},{"names":["snowflake"],"surrogates":"❄️","unicodeVersion":1.1},{"names":["snowman2"],"surrogates":"☃️","unicodeVersion":1.1},{"names":["snowman"],"surrogates":"⛄","unicodeVersion":5.2},{"names":["wind_blowing_face","wind_face"],"surrogates":"\uD83C\uDF2C️","unicodeVersion":7},{"names":["dash","dashing_away"],"surrogates":"\uD83D\uDCA8","unicodeVersion":6},{"names":["droplet"],"surrogates":"\uD83D\uDCA7","unicodeVersion":6},{"names":["sweat_drops"],"surrogates":"\uD83D\uDCA6","unicodeVersion":6},{"names":["bubbles"],"surrogates":"\uD83E\uDEE7","unicodeVersion":14},{"names":["umbrella"],"surrogates":"☔","unicodeVersion":4},{"names":["umbrella2"],"surrogates":"☂️","unicodeVersion":1.1},{"names":["ocean","water_wave"],"surrogates":"\uD83C\uDF0A","unicodeVersion":6},{"names":["fog"],"surrogates":"\uD83C\uDF2B️","unicodeVersion":7}],"food":[{"names":["green_apple"],"surrogates":"\uD83C\uDF4F","unicodeVersion":6},{"names":["apple","red_apple"],"surrogates":"\uD83C\uDF4E","unicodeVersion":6},{"names":["pear"],"surrogates":"\uD83C\uDF50","unicodeVersion":6},{"names":["tangerine"],"surrogates":"\uD83C\uDF4A","unicodeVersion":6},{"names":["lemon"],"surrogates":"\uD83C\uDF4B","unicodeVersion":6},{"names":["banana"],"surrogates":"\uD83C\uDF4C","unicodeVersion":6},{"names":["watermelon"],"surrogates":"\uD83C\uDF49","unicodeVersion":6},{"names":["grapes"],"surrogates":"\uD83C\uDF47","unicodeVersion":6},{"names":["strawberry"],"surrogates":"\uD83C\uDF53","unicodeVersion":6},{"names":["blueberries"],"surrogates":"\uD83E\uDED0","unicodeVersion":13},{"names":["melon"],"surrogates":"\uD83C\uDF48","unicodeVersion":6},{"names":["cherries"],"surrogates":"\uD83C\uDF52","unicodeVersion":6},{"names":["peach"],"surrogates":"\uD83C\uDF51","unicodeVersion":6},{"names":["mango"],"surrogates":"\uD83E\uDD6D","unicodeVersion":11},{"names":["pineapple"],"surrogates":"\uD83C\uDF4D","unicodeVersion":6},{"names":["coconut"],"surrogates":"\uD83E\uDD65","unicodeVersion":10},{"names":["kiwi","kiwifruit","kiwi_fruit"],"surrogates":"\uD83E\uDD5D","unicodeVersion":9},{"names":["tomato"],"surrogates":"\uD83C\uDF45","unicodeVersion":6},{"names":["eggplant"],"surrogates":"\uD83C\uDF46","unicodeVersion":6},{"names":["avocado"],"surrogates":"\uD83E\uDD51","unicodeVersion":9},{"names":["pea_pod"],"surrogates":"\uD83E\uDEDB","unicodeVersion":15},{"names":["broccoli"],"surrogates":"\uD83E\uDD66","unicodeVersion":10},{"names":["leafy_green"],"surrogates":"\uD83E\uDD6C","unicodeVersion":11},{"names":["cucumber"],"surrogates":"\uD83E\uDD52","unicodeVersion":9},{"names":["hot_pepper"],"surrogates":"\uD83C\uDF36️","unicodeVersion":7},{"names":["bell_pepper"],"surrogates":"\uD83E\uDED1","unicodeVersion":13},{"names":["corn","ear_of_corn"],"surrogates":"\uD83C\uDF3D","unicodeVersion":6},{"names":["carrot"],"surrogates":"\uD83E\uDD55","unicodeVersion":9},{"names":["olive"],"surrogates":"\uD83E\uDED2","unicodeVersion":13},{"names":["garlic"],"surrogates":"\uD83E\uDDC4","unicodeVersion":12},{"names":["onion"],"surrogates":"\uD83E\uDDC5","unicodeVersion":12},{"names":["potato"],"surrogates":"\uD83E\uDD54","unicodeVersion":9},{"names":["sweet_potato"],"surrogates":"\uD83C\uDF60","unicodeVersion":6},{"names":["ginger_root"],"surrogates":"\uD83E\uDEDA","unicodeVersion":15},{"names":["croissant"],"surrogates":"\uD83E\uDD50","unicodeVersion":9},{"names":["bagel"],"surrogates":"\uD83E\uDD6F","unicodeVersion":11},{"names":["bread"],"surrogates":"\uD83C\uDF5E","unicodeVersion":6},{"names":["french_bread","baguette_bread"],"surrogates":"\uD83E\uDD56","unicodeVersion":9},{"names":["pretzel"],"surrogates":"\uD83E\uDD68","unicodeVersion":10},{"names":["cheese","cheese_wedge"],"surrogates":"\uD83E\uDDC0","unicodeVersion":8},{"names":["egg"],"surrogates":"\uD83E\uDD5A","unicodeVersion":9},{"names":["cooking"],"surrogates":"\uD83C\uDF73","unicodeVersion":6},{"names":["butter"],"surrogates":"\uD83E\uDDC8","unicodeVersion":12},{"names":["pancakes"],"surrogates":"\uD83E\uDD5E","unicodeVersion":9},{"names":["waffle"],"surrogates":"\uD83E\uDDC7","unicodeVersion":12},{"names":["bacon"],"surrogates":"\uD83E\uDD53","unicodeVersion":9},{"names":["cut_of_meat"],"surrogates":"\uD83E\uDD69","unicodeVersion":10},{"names":["poultry_leg"],"surrogates":"\uD83C\uDF57","unicodeVersion":6},{"names":["meat_on_bone"],"surrogates":"\uD83C\uDF56","unicodeVersion":6},{"names":["bone"],"surrogates":"\uD83E\uDDB4","unicodeVersion":11},{"names":["hotdog","hot_dog"],"surrogates":"\uD83C\uDF2D","unicodeVersion":8},{"names":["hamburger"],"surrogates":"\uD83C\uDF54","unicodeVersion":6},{"names":["fries","french_fries"],"surrogates":"\uD83C\uDF5F","unicodeVersion":6},{"names":["pizza"],"surrogates":"\uD83C\uDF55","unicodeVersion":6},{"names":["flatbread"],"surrogates":"\uD83E\uDED3","unicodeVersion":13},{"names":["sandwich"],"surrogates":"\uD83E\uDD6A","unicodeVersion":10},{"names":["stuffed_flatbread","stuffed_pita"],"surrogates":"\uD83E\uDD59","unicodeVersion":9},{"names":["falafel"],"surrogates":"\uD83E\uDDC6","unicodeVersion":12},{"names":["taco"],"surrogates":"\uD83C\uDF2E","unicodeVersion":8},{"names":["burrito"],"surrogates":"\uD83C\uDF2F","unicodeVersion":8},{"names":["tamale"],"surrogates":"\uD83E\uDED4","unicodeVersion":13},{"names":["salad","green_salad"],"surrogates":"\uD83E\uDD57","unicodeVersion":9},{"names":["shallow_pan_of_food","paella"],"surrogates":"\uD83E\uDD58","unicodeVersion":9},{"names":["fondue"],"surrogates":"\uD83E\uDED5","unicodeVersion":13},{"names":["canned_food"],"surrogates":"\uD83E\uDD6B","unicodeVersion":10},{"names":["jar"],"surrogates":"\uD83E\uDED9","unicodeVersion":14},{"names":["spaghetti"],"surrogates":"\uD83C\uDF5D","unicodeVersion":6},{"names":["ramen","steaming_bowl"],"surrogates":"\uD83C\uDF5C","unicodeVersion":6},{"names":["stew","pot_of_food"],"surrogates":"\uD83C\uDF72","unicodeVersion":6},{"names":["curry","curry_rice"],"surrogates":"\uD83C\uDF5B","unicodeVersion":6},{"names":["sushi"],"surrogates":"\uD83C\uDF63","unicodeVersion":6},{"names":["bento","bento_box"],"surrogates":"\uD83C\uDF71","unicodeVersion":6},{"names":["dumpling"],"surrogates":"\uD83E\uDD5F","unicodeVersion":10},{"names":["oyster"],"surrogates":"\uD83E\uDDAA","unicodeVersion":12},{"names":["fried_shrimp"],"surrogates":"\uD83C\uDF64","unicodeVersion":6},{"names":["rice_ball"],"surrogates":"\uD83C\uDF59","unicodeVersion":6},{"names":["rice","cooked_rice"],"surrogates":"\uD83C\uDF5A","unicodeVersion":6},{"names":["rice_cracker"],"surrogates":"\uD83C\uDF58","unicodeVersion":6},{"names":["fish_cake"],"surrogates":"\uD83C\uDF65","unicodeVersion":6},{"names":["fortune_cookie"],"surrogates":"\uD83E\uDD60","unicodeVersion":10},{"names":["moon_cake"],"surrogates":"\uD83E\uDD6E","unicodeVersion":11},{"names":["oden"],"surrogates":"\uD83C\uDF62","unicodeVersion":6},{"names":["dango"],"surrogates":"\uD83C\uDF61","unicodeVersion":6},{"names":["shaved_ice"],"surrogates":"\uD83C\uDF67","unicodeVersion":6},{"names":["ice_cream"],"surrogates":"\uD83C\uDF68","unicodeVersion":6},{"names":["icecream"],"surrogates":"\uD83C\uDF66","unicodeVersion":6},{"names":["pie"],"surrogates":"\uD83E\uDD67","unicodeVersion":10},{"names":["cupcake"],"surrogates":"\uD83E\uDDC1","unicodeVersion":11},{"names":["cake","shortcake"],"surrogates":"\uD83C\uDF70","unicodeVersion":6},{"names":["birthday","birthday_cake"],"surrogates":"\uD83C\uDF82","unicodeVersion":6},{"names":["custard","pudding","flan"],"surrogates":"\uD83C\uDF6E","unicodeVersion":6},{"names":["lollipop"],"surrogates":"\uD83C\uDF6D","unicodeVersion":6},{"names":["candy"],"surrogates":"\uD83C\uDF6C","unicodeVersion":6},{"names":["chocolate_bar"],"surrogates":"\uD83C\uDF6B","unicodeVersion":6},{"names":["popcorn"],"surrogates":"\uD83C\uDF7F","unicodeVersion":8},{"names":["doughnut"],"surrogates":"\uD83C\uDF69","unicodeVersion":6},{"names":["cookie"],"surrogates":"\uD83C\uDF6A","unicodeVersion":6},{"names":["chestnut"],"surrogates":"\uD83C\uDF30","unicodeVersion":6},{"names":["peanuts","shelled_peanut"],"surrogates":"\uD83E\uDD5C","unicodeVersion":9},{"names":["beans"],"surrogates":"\uD83E\uDED8","unicodeVersion":14},{"names":["honey_pot"],"surrogates":"\uD83C\uDF6F","unicodeVersion":6},{"names":["milk","glass_of_milk"],"surrogates":"\uD83E\uDD5B","unicodeVersion":9},{"names":["pouring_liquid"],"surrogates":"\uD83E\uDED7","unicodeVersion":14},{"names":["baby_bottle"],"surrogates":"\uD83C\uDF7C","unicodeVersion":6},{"names":["teapot"],"surrogates":"\uD83E\uDED6","unicodeVersion":13},{"names":["coffee","hot_beverage"],"surrogates":"☕","unicodeVersion":4},{"names":["tea"],"surrogates":"\uD83C\uDF75","unicodeVersion":6},{"names":["mate"],"surrogates":"\uD83E\uDDC9","unicodeVersion":12},{"names":["beverage_box"],"surrogates":"\uD83E\uDDC3","unicodeVersion":12},{"names":["cup_with_straw"],"surrogates":"\uD83E\uDD64","unicodeVersion":10},{"names":["bubble_tea"],"surrogates":"\uD83E\uDDCB","unicodeVersion":13},{"names":["sake"],"surrogates":"\uD83C\uDF76","unicodeVersion":6},{"names":["beer","beer_mug"],"surrogates":"\uD83C\uDF7A","unicodeVersion":6},{"names":["beers"],"surrogates":"\uD83C\uDF7B","unicodeVersion":6},{"names":["champagne_glass","clinking_glass"],"surrogates":"\uD83E\uDD42","unicodeVersion":9},{"names":["wine_glass"],"surrogates":"\uD83C\uDF77","unicodeVersion":6},{"names":["tumbler_glass","whisky"],"surrogates":"\uD83E\uDD43","unicodeVersion":9},{"names":["cocktail"],"surrogates":"\uD83C\uDF78","unicodeVersion":6},{"names":["tropical_drink"],"surrogates":"\uD83C\uDF79","unicodeVersion":6},{"names":["champagne","bottle_with_popping_cork"],"surrogates":"\uD83C\uDF7E","unicodeVersion":8},{"names":["ice_cube"],"surrogates":"\uD83E\uDDCA","unicodeVersion":12},{"names":["spoon"],"surrogates":"\uD83E\uDD44","unicodeVersion":9},{"names":["fork_and_knife"],"surrogates":"\uD83C\uDF74","unicodeVersion":6},{"names":["fork_knife_plate","fork_and_knife_with_plate"],"surrogates":"\uD83C\uDF7D️","unicodeVersion":7},{"names":["bowl_with_spoon"],"surrogates":"\uD83E\uDD63","unicodeVersion":10},{"names":["takeout_box"],"surrogates":"\uD83E\uDD61","unicodeVersion":10},{"names":["chopsticks"],"surrogates":"\uD83E\uDD62","unicodeVersion":10},{"names":["salt"],"surrogates":"\uD83E\uDDC2","unicodeVersion":11}],"activity":[{"names":["soccer","soccer_ball"],"surrogates":"⚽","unicodeVersion":5.2},{"names":["basketball"],"surrogates":"\uD83C\uDFC0","unicodeVersion":6},{"names":["football"],"surrogates":"\uD83C\uDFC8","unicodeVersion":6},{"names":["baseball"],"surrogates":"⚾","unicodeVersion":5.2},{"names":["softball"],"surrogates":"\uD83E\uDD4E","unicodeVersion":11},{"names":["tennis"],"surrogates":"\uD83C\uDFBE","unicodeVersion":6},{"names":["volleyball"],"surrogates":"\uD83C\uDFD0","unicodeVersion":8},{"names":["rugby_football"],"surrogates":"\uD83C\uDFC9","unicodeVersion":6},{"names":["flying_disc"],"surrogates":"\uD83E\uDD4F","unicodeVersion":11},{"names":["8ball"],"surrogates":"\uD83C\uDFB1","unicodeVersion":6},{"names":["yo_yo"],"surrogates":"\uD83E\uDE80","unicodeVersion":12},{"names":["ping_pong","table_tennis"],"surrogates":"\uD83C\uDFD3","unicodeVersion":8},{"names":["badminton"],"surrogates":"\uD83C\uDFF8","unicodeVersion":8},{"names":["hockey","ice_hockey"],"surrogates":"\uD83C\uDFD2","unicodeVersion":8},{"names":["field_hockey"],"surrogates":"\uD83C\uDFD1","unicodeVersion":8},{"names":["lacrosse"],"surrogates":"\uD83E\uDD4D","unicodeVersion":11},{"names":["cricket_game","cricket_bat_ball"],"surrogates":"\uD83C\uDFCF","unicodeVersion":8},{"names":["boomerang"],"surrogates":"\uD83E\uDE83","unicodeVersion":13},{"names":["goal","goal_net"],"surrogates":"\uD83E\uDD45","unicodeVersion":9},{"names":["golf","flag_in_hole"],"surrogates":"⛳","unicodeVersion":5.2},{"names":["kite"],"surrogates":"\uD83E\uDE81","unicodeVersion":12},{"names":["playground_slide"],"surrogates":"\uD83D\uDEDD","unicodeVersion":14},{"names":["bow_and_arrow","archery"],"surrogates":"\uD83C\uDFF9","unicodeVersion":8},{"names":["fishing_pole_and_fish","fishing_pole"],"surrogates":"\uD83C\uDFA3","unicodeVersion":6},{"names":["diving_mask"],"surrogates":"\uD83E\uDD3F","unicodeVersion":12},{"names":["boxing_glove","boxing_gloves"],"surrogates":"\uD83E\uDD4A","unicodeVersion":9},{"names":["martial_arts_uniform","karate_uniform"],"surrogates":"\uD83E\uDD4B","unicodeVersion":9},{"names":["running_shirt_with_sash","running_shirt"],"surrogates":"\uD83C\uDFBD","unicodeVersion":6},{"names":["skateboard"],"surrogates":"\uD83D\uDEF9","unicodeVersion":11},{"names":["roller_skate"],"surrogates":"\uD83D\uDEFC","unicodeVersion":13},{"names":["sled"],"surrogates":"\uD83D\uDEF7","unicodeVersion":10},{"names":["ice_skate"],"surrogates":"⛸️","unicodeVersion":5.2},{"names":["curling_stone"],"surrogates":"\uD83E\uDD4C","unicodeVersion":10},{"names":["ski","skis"],"surrogates":"\uD83C\uDFBF","unicodeVersion":6},{"names":["skier"],"surrogates":"⛷️","unicodeVersion":5.2},{"names":["snowboarder"],"surrogates":"\uD83C\uDFC2","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["snowboarder_tone1","snowboarder_light_skin_tone"],"surrogates":"\uD83C\uDFC2\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["snowboarder_tone2","snowboarder_medium_light_skin_tone"],"surrogates":"\uD83C\uDFC2\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["snowboarder_tone3","snowboarder_medium_skin_tone"],"surrogates":"\uD83C\uDFC2\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["snowboarder_tone4","snowboarder_medium_dark_skin_tone"],"surrogates":"\uD83C\uDFC2\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["snowboarder_tone5","snowboarder_dark_skin_tone"],"surrogates":"\uD83C\uDFC2\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["parachute"],"surrogates":"\uD83E\uDE82","unicodeVersion":12},{"names":["person_lifting_weights","lifter","weight_lifter"],"surrogates":"\uD83C\uDFCB️","unicodeVersion":7,"hasDiversity":true,"diversityChildren":[{"names":["person_lifting_weights_tone1","lifter_tone1","weight_lifter_tone1"],"surrogates":"\uD83C\uDFCB\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_lifting_weights_tone2","lifter_tone2","weight_lifter_tone2"],"surrogates":"\uD83C\uDFCB\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_lifting_weights_tone3","lifter_tone3","weight_lifter_tone3"],"surrogates":"\uD83C\uDFCB\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_lifting_weights_tone4","lifter_tone4","weight_lifter_tone4"],"surrogates":"\uD83C\uDFCB\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_lifting_weights_tone5","lifter_tone5","weight_lifter_tone5"],"surrogates":"\uD83C\uDFCB\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_lifting_weights"],"surrogates":"\uD83C\uDFCB️‍♀️","unicodeVersion":7,"hasDiversity":true,"diversityChildren":[{"names":["woman_lifting_weights_tone1","woman_lifting_weights_light_skin_tone"],"surrogates":"\uD83C\uDFCB\uD83C\uDFFB‍♀️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_lifting_weights_tone2","woman_lifting_weights_medium_light_skin_tone"],"surrogates":"\uD83C\uDFCB\uD83C\uDFFC‍♀️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_lifting_weights_tone3","woman_lifting_weights_medium_skin_tone"],"surrogates":"\uD83C\uDFCB\uD83C\uDFFD‍♀️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_lifting_weights_tone4","woman_lifting_weights_medium_dark_skin_tone"],"surrogates":"\uD83C\uDFCB\uD83C\uDFFE‍♀️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_lifting_weights_tone5","woman_lifting_weights_dark_skin_tone"],"surrogates":"\uD83C\uDFCB\uD83C\uDFFF‍♀️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_lifting_weights"],"surrogates":"\uD83C\uDFCB️‍♂️","unicodeVersion":7,"hasDiversity":true,"diversityChildren":[{"names":["man_lifting_weights_tone1","man_lifting_weights_light_skin_tone"],"surrogates":"\uD83C\uDFCB\uD83C\uDFFB‍♂️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_lifting_weights_tone2","man_lifting_weights_medium_light_skin_tone"],"surrogates":"\uD83C\uDFCB\uD83C\uDFFC‍♂️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_lifting_weights_tone3","man_lifting_weights_medium_skin_tone"],"surrogates":"\uD83C\uDFCB\uD83C\uDFFD‍♂️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_lifting_weights_tone4","man_lifting_weights_medium_dark_skin_tone"],"surrogates":"\uD83C\uDFCB\uD83C\uDFFE‍♂️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_lifting_weights_tone5","man_lifting_weights_dark_skin_tone"],"surrogates":"\uD83C\uDFCB\uD83C\uDFFF‍♂️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["people_wrestling","wrestlers","wrestling"],"surrogates":"\uD83E\uDD3C","unicodeVersion":9},{"names":["women_wrestling"],"surrogates":"\uD83E\uDD3C‍♀️","unicodeVersion":9},{"names":["men_wrestling"],"surrogates":"\uD83E\uDD3C‍♂️","unicodeVersion":9},{"names":["person_doing_cartwheel","cartwheel"],"surrogates":"\uD83E\uDD38","unicodeVersion":9,"hasDiversity":true,"diversityChildren":[{"names":["person_doing_cartwheel_tone1","cartwheel_tone1"],"surrogates":"\uD83E\uDD38\uD83C\uDFFB","unicodeVersion":9,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_doing_cartwheel_tone2","cartwheel_tone2"],"surrogates":"\uD83E\uDD38\uD83C\uDFFC","unicodeVersion":9,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_doing_cartwheel_tone3","cartwheel_tone3"],"surrogates":"\uD83E\uDD38\uD83C\uDFFD","unicodeVersion":9,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_doing_cartwheel_tone4","cartwheel_tone4"],"surrogates":"\uD83E\uDD38\uD83C\uDFFE","unicodeVersion":9,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_doing_cartwheel_tone5","cartwheel_tone5"],"surrogates":"\uD83E\uDD38\uD83C\uDFFF","unicodeVersion":9,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_cartwheeling"],"surrogates":"\uD83E\uDD38‍♀️","unicodeVersion":9,"hasDiversity":true,"diversityChildren":[{"names":["woman_cartwheeling_tone1","woman_cartwheeling_light_skin_tone"],"surrogates":"\uD83E\uDD38\uD83C\uDFFB‍♀️","unicodeVersion":9,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_cartwheeling_tone2","woman_cartwheeling_medium_light_skin_tone"],"surrogates":"\uD83E\uDD38\uD83C\uDFFC‍♀️","unicodeVersion":9,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_cartwheeling_tone3","woman_cartwheeling_medium_skin_tone"],"surrogates":"\uD83E\uDD38\uD83C\uDFFD‍♀️","unicodeVersion":9,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_cartwheeling_tone4","woman_cartwheeling_medium_dark_skin_tone"],"surrogates":"\uD83E\uDD38\uD83C\uDFFE‍♀️","unicodeVersion":9,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_cartwheeling_tone5","woman_cartwheeling_dark_skin_tone"],"surrogates":"\uD83E\uDD38\uD83C\uDFFF‍♀️","unicodeVersion":9,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_cartwheeling"],"surrogates":"\uD83E\uDD38‍♂️","unicodeVersion":9,"hasDiversity":true,"diversityChildren":[{"names":["man_cartwheeling_tone1","man_cartwheeling_light_skin_tone"],"surrogates":"\uD83E\uDD38\uD83C\uDFFB‍♂️","unicodeVersion":9,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_cartwheeling_tone2","man_cartwheeling_medium_light_skin_tone"],"surrogates":"\uD83E\uDD38\uD83C\uDFFC‍♂️","unicodeVersion":9,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_cartwheeling_tone3","man_cartwheeling_medium_skin_tone"],"surrogates":"\uD83E\uDD38\uD83C\uDFFD‍♂️","unicodeVersion":9,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_cartwheeling_tone4","man_cartwheeling_medium_dark_skin_tone"],"surrogates":"\uD83E\uDD38\uD83C\uDFFE‍♂️","unicodeVersion":9,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_cartwheeling_tone5","man_cartwheeling_dark_skin_tone"],"surrogates":"\uD83E\uDD38\uD83C\uDFFF‍♂️","unicodeVersion":9,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["person_bouncing_ball","basketball_player","person_with_ball"],"surrogates":"⛹️","unicodeVersion":5.2,"hasDiversity":true,"diversityChildren":[{"names":["person_bouncing_ball_tone1","basketball_player_tone1","person_with_ball_tone1"],"surrogates":"⛹\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_bouncing_ball_tone2","basketball_player_tone2","person_with_ball_tone2"],"surrogates":"⛹\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_bouncing_ball_tone3","basketball_player_tone3","person_with_ball_tone3"],"surrogates":"⛹\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_bouncing_ball_tone4","basketball_player_tone4","person_with_ball_tone4"],"surrogates":"⛹\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_bouncing_ball_tone5","basketball_player_tone5","person_with_ball_tone5"],"surrogates":"⛹\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_bouncing_ball"],"surrogates":"⛹️‍♀️","unicodeVersion":5.2,"hasDiversity":true,"diversityChildren":[{"names":["woman_bouncing_ball_tone1","woman_bouncing_ball_light_skin_tone"],"surrogates":"⛹\uD83C\uDFFB‍♀️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_bouncing_ball_tone2","woman_bouncing_ball_medium_light_skin_tone"],"surrogates":"⛹\uD83C\uDFFC‍♀️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_bouncing_ball_tone3","woman_bouncing_ball_medium_skin_tone"],"surrogates":"⛹\uD83C\uDFFD‍♀️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_bouncing_ball_tone4","woman_bouncing_ball_medium_dark_skin_tone"],"surrogates":"⛹\uD83C\uDFFE‍♀️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_bouncing_ball_tone5","woman_bouncing_ball_dark_skin_tone"],"surrogates":"⛹\uD83C\uDFFF‍♀️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_bouncing_ball"],"surrogates":"⛹️‍♂️","unicodeVersion":5.2,"hasDiversity":true,"diversityChildren":[{"names":["man_bouncing_ball_tone1","man_bouncing_ball_light_skin_tone"],"surrogates":"⛹\uD83C\uDFFB‍♂️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_bouncing_ball_tone2","man_bouncing_ball_medium_light_skin_tone"],"surrogates":"⛹\uD83C\uDFFC‍♂️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_bouncing_ball_tone3","man_bouncing_ball_medium_skin_tone"],"surrogates":"⛹\uD83C\uDFFD‍♂️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_bouncing_ball_tone4","man_bouncing_ball_medium_dark_skin_tone"],"surrogates":"⛹\uD83C\uDFFE‍♂️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_bouncing_ball_tone5","man_bouncing_ball_dark_skin_tone"],"surrogates":"⛹\uD83C\uDFFF‍♂️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["person_fencing","fencer","fencing"],"surrogates":"\uD83E\uDD3A","unicodeVersion":9},{"names":["person_playing_handball","handball"],"surrogates":"\uD83E\uDD3E","unicodeVersion":9,"hasDiversity":true,"diversityChildren":[{"names":["person_playing_handball_tone1","handball_tone1"],"surrogates":"\uD83E\uDD3E\uD83C\uDFFB","unicodeVersion":9,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_playing_handball_tone2","handball_tone2"],"surrogates":"\uD83E\uDD3E\uD83C\uDFFC","unicodeVersion":9,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_playing_handball_tone3","handball_tone3"],"surrogates":"\uD83E\uDD3E\uD83C\uDFFD","unicodeVersion":9,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_playing_handball_tone4","handball_tone4"],"surrogates":"\uD83E\uDD3E\uD83C\uDFFE","unicodeVersion":9,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_playing_handball_tone5","handball_tone5"],"surrogates":"\uD83E\uDD3E\uD83C\uDFFF","unicodeVersion":9,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_playing_handball"],"surrogates":"\uD83E\uDD3E‍♀️","unicodeVersion":9,"hasDiversity":true,"diversityChildren":[{"names":["woman_playing_handball_tone1","woman_playing_handball_light_skin_tone"],"surrogates":"\uD83E\uDD3E\uD83C\uDFFB‍♀️","unicodeVersion":9,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_playing_handball_tone2","woman_playing_handball_medium_light_skin_tone"],"surrogates":"\uD83E\uDD3E\uD83C\uDFFC‍♀️","unicodeVersion":9,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_playing_handball_tone3","woman_playing_handball_medium_skin_tone"],"surrogates":"\uD83E\uDD3E\uD83C\uDFFD‍♀️","unicodeVersion":9,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_playing_handball_tone4","woman_playing_handball_medium_dark_skin_tone"],"surrogates":"\uD83E\uDD3E\uD83C\uDFFE‍♀️","unicodeVersion":9,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_playing_handball_tone5","woman_playing_handball_dark_skin_tone"],"surrogates":"\uD83E\uDD3E\uD83C\uDFFF‍♀️","unicodeVersion":9,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_playing_handball"],"surrogates":"\uD83E\uDD3E‍♂️","unicodeVersion":9,"hasDiversity":true,"diversityChildren":[{"names":["man_playing_handball_tone1","man_playing_handball_light_skin_tone"],"surrogates":"\uD83E\uDD3E\uD83C\uDFFB‍♂️","unicodeVersion":9,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_playing_handball_tone2","man_playing_handball_medium_light_skin_tone"],"surrogates":"\uD83E\uDD3E\uD83C\uDFFC‍♂️","unicodeVersion":9,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_playing_handball_tone3","man_playing_handball_medium_skin_tone"],"surrogates":"\uD83E\uDD3E\uD83C\uDFFD‍♂️","unicodeVersion":9,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_playing_handball_tone4","man_playing_handball_medium_dark_skin_tone"],"surrogates":"\uD83E\uDD3E\uD83C\uDFFE‍♂️","unicodeVersion":9,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_playing_handball_tone5","man_playing_handball_dark_skin_tone"],"surrogates":"\uD83E\uDD3E\uD83C\uDFFF‍♂️","unicodeVersion":9,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["person_golfing","golfer"],"surrogates":"\uD83C\uDFCC️","unicodeVersion":7,"hasDiversity":true,"diversityChildren":[{"names":["person_golfing_tone1","person_golfing_light_skin_tone"],"surrogates":"\uD83C\uDFCC\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_golfing_tone2","person_golfing_medium_light_skin_tone"],"surrogates":"\uD83C\uDFCC\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_golfing_tone3","person_golfing_medium_skin_tone"],"surrogates":"\uD83C\uDFCC\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_golfing_tone4","person_golfing_medium_dark_skin_tone"],"surrogates":"\uD83C\uDFCC\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_golfing_tone5","person_golfing_dark_skin_tone"],"surrogates":"\uD83C\uDFCC\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_golfing"],"surrogates":"\uD83C\uDFCC️‍♀️","unicodeVersion":7,"hasDiversity":true,"diversityChildren":[{"names":["woman_golfing_tone1","woman_golfing_light_skin_tone"],"surrogates":"\uD83C\uDFCC\uD83C\uDFFB‍♀️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_golfing_tone2","woman_golfing_medium_light_skin_tone"],"surrogates":"\uD83C\uDFCC\uD83C\uDFFC‍♀️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_golfing_tone3","woman_golfing_medium_skin_tone"],"surrogates":"\uD83C\uDFCC\uD83C\uDFFD‍♀️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_golfing_tone4","woman_golfing_medium_dark_skin_tone"],"surrogates":"\uD83C\uDFCC\uD83C\uDFFE‍♀️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_golfing_tone5","woman_golfing_dark_skin_tone"],"surrogates":"\uD83C\uDFCC\uD83C\uDFFF‍♀️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_golfing"],"surrogates":"\uD83C\uDFCC️‍♂️","unicodeVersion":7,"hasDiversity":true,"diversityChildren":[{"names":["man_golfing_tone1","man_golfing_light_skin_tone"],"surrogates":"\uD83C\uDFCC\uD83C\uDFFB‍♂️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_golfing_tone2","man_golfing_medium_light_skin_tone"],"surrogates":"\uD83C\uDFCC\uD83C\uDFFC‍♂️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_golfing_tone3","man_golfing_medium_skin_tone"],"surrogates":"\uD83C\uDFCC\uD83C\uDFFD‍♂️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_golfing_tone4","man_golfing_medium_dark_skin_tone"],"surrogates":"\uD83C\uDFCC\uD83C\uDFFE‍♂️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_golfing_tone5","man_golfing_dark_skin_tone"],"surrogates":"\uD83C\uDFCC\uD83C\uDFFF‍♂️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["horse_racing"],"surrogates":"\uD83C\uDFC7","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["horse_racing_tone1"],"surrogates":"\uD83C\uDFC7\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["horse_racing_tone2"],"surrogates":"\uD83C\uDFC7\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["horse_racing_tone3"],"surrogates":"\uD83C\uDFC7\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["horse_racing_tone4"],"surrogates":"\uD83C\uDFC7\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["horse_racing_tone5"],"surrogates":"\uD83C\uDFC7\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["person_in_lotus_position"],"surrogates":"\uD83E\uDDD8","unicodeVersion":10,"hasDiversity":true,"diversityChildren":[{"names":["person_in_lotus_position_tone1","person_in_lotus_position_light_skin_tone"],"surrogates":"\uD83E\uDDD8\uD83C\uDFFB","unicodeVersion":10,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_in_lotus_position_tone2","person_in_lotus_position_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD8\uD83C\uDFFC","unicodeVersion":10,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_in_lotus_position_tone3","person_in_lotus_position_medium_skin_tone"],"surrogates":"\uD83E\uDDD8\uD83C\uDFFD","unicodeVersion":10,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_in_lotus_position_tone4","person_in_lotus_position_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD8\uD83C\uDFFE","unicodeVersion":10,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_in_lotus_position_tone5","person_in_lotus_position_dark_skin_tone"],"surrogates":"\uD83E\uDDD8\uD83C\uDFFF","unicodeVersion":10,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_in_lotus_position"],"surrogates":"\uD83E\uDDD8‍♀️","unicodeVersion":10,"hasDiversity":true,"diversityChildren":[{"names":["woman_in_lotus_position_tone1","woman_in_lotus_position_light_skin_tone"],"surrogates":"\uD83E\uDDD8\uD83C\uDFFB‍♀️","unicodeVersion":10,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_in_lotus_position_tone2","woman_in_lotus_position_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD8\uD83C\uDFFC‍♀️","unicodeVersion":10,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_in_lotus_position_tone3","woman_in_lotus_position_medium_skin_tone"],"surrogates":"\uD83E\uDDD8\uD83C\uDFFD‍♀️","unicodeVersion":10,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_in_lotus_position_tone4","woman_in_lotus_position_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD8\uD83C\uDFFE‍♀️","unicodeVersion":10,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_in_lotus_position_tone5","woman_in_lotus_position_dark_skin_tone"],"surrogates":"\uD83E\uDDD8\uD83C\uDFFF‍♀️","unicodeVersion":10,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_in_lotus_position"],"surrogates":"\uD83E\uDDD8‍♂️","unicodeVersion":10,"hasDiversity":true,"diversityChildren":[{"names":["man_in_lotus_position_tone1","man_in_lotus_position_light_skin_tone"],"surrogates":"\uD83E\uDDD8\uD83C\uDFFB‍♂️","unicodeVersion":10,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_in_lotus_position_tone2","man_in_lotus_position_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD8\uD83C\uDFFC‍♂️","unicodeVersion":10,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_in_lotus_position_tone3","man_in_lotus_position_medium_skin_tone"],"surrogates":"\uD83E\uDDD8\uD83C\uDFFD‍♂️","unicodeVersion":10,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_in_lotus_position_tone4","man_in_lotus_position_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD8\uD83C\uDFFE‍♂️","unicodeVersion":10,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_in_lotus_position_tone5","man_in_lotus_position_dark_skin_tone"],"surrogates":"\uD83E\uDDD8\uD83C\uDFFF‍♂️","unicodeVersion":10,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["person_surfing","surfer"],"surrogates":"\uD83C\uDFC4","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["person_surfing_tone1","surfer_tone1"],"surrogates":"\uD83C\uDFC4\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_surfing_tone2","surfer_tone2"],"surrogates":"\uD83C\uDFC4\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_surfing_tone3","surfer_tone3"],"surrogates":"\uD83C\uDFC4\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_surfing_tone4","surfer_tone4"],"surrogates":"\uD83C\uDFC4\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_surfing_tone5","surfer_tone5"],"surrogates":"\uD83C\uDFC4\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_surfing"],"surrogates":"\uD83C\uDFC4‍♀️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["woman_surfing_tone1","woman_surfing_light_skin_tone"],"surrogates":"\uD83C\uDFC4\uD83C\uDFFB‍♀️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_surfing_tone2","woman_surfing_medium_light_skin_tone"],"surrogates":"\uD83C\uDFC4\uD83C\uDFFC‍♀️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_surfing_tone3","woman_surfing_medium_skin_tone"],"surrogates":"\uD83C\uDFC4\uD83C\uDFFD‍♀️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_surfing_tone4","woman_surfing_medium_dark_skin_tone"],"surrogates":"\uD83C\uDFC4\uD83C\uDFFE‍♀️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_surfing_tone5","woman_surfing_dark_skin_tone"],"surrogates":"\uD83C\uDFC4\uD83C\uDFFF‍♀️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_surfing"],"surrogates":"\uD83C\uDFC4‍♂️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["man_surfing_tone1","man_surfing_light_skin_tone"],"surrogates":"\uD83C\uDFC4\uD83C\uDFFB‍♂️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_surfing_tone2","man_surfing_medium_light_skin_tone"],"surrogates":"\uD83C\uDFC4\uD83C\uDFFC‍♂️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_surfing_tone3","man_surfing_medium_skin_tone"],"surrogates":"\uD83C\uDFC4\uD83C\uDFFD‍♂️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_surfing_tone4","man_surfing_medium_dark_skin_tone"],"surrogates":"\uD83C\uDFC4\uD83C\uDFFE‍♂️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_surfing_tone5","man_surfing_dark_skin_tone"],"surrogates":"\uD83C\uDFC4\uD83C\uDFFF‍♂️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["person_swimming","swimmer"],"surrogates":"\uD83C\uDFCA","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["person_swimming_tone1","swimmer_tone1"],"surrogates":"\uD83C\uDFCA\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_swimming_tone2","swimmer_tone2"],"surrogates":"\uD83C\uDFCA\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_swimming_tone3","swimmer_tone3"],"surrogates":"\uD83C\uDFCA\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_swimming_tone4","swimmer_tone4"],"surrogates":"\uD83C\uDFCA\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_swimming_tone5","swimmer_tone5"],"surrogates":"\uD83C\uDFCA\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_swimming"],"surrogates":"\uD83C\uDFCA‍♀️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["woman_swimming_tone1","woman_swimming_light_skin_tone"],"surrogates":"\uD83C\uDFCA\uD83C\uDFFB‍♀️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_swimming_tone2","woman_swimming_medium_light_skin_tone"],"surrogates":"\uD83C\uDFCA\uD83C\uDFFC‍♀️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_swimming_tone3","woman_swimming_medium_skin_tone"],"surrogates":"\uD83C\uDFCA\uD83C\uDFFD‍♀️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_swimming_tone4","woman_swimming_medium_dark_skin_tone"],"surrogates":"\uD83C\uDFCA\uD83C\uDFFE‍♀️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_swimming_tone5","woman_swimming_dark_skin_tone"],"surrogates":"\uD83C\uDFCA\uD83C\uDFFF‍♀️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_swimming"],"surrogates":"\uD83C\uDFCA‍♂️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["man_swimming_tone1","man_swimming_light_skin_tone"],"surrogates":"\uD83C\uDFCA\uD83C\uDFFB‍♂️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_swimming_tone2","man_swimming_medium_light_skin_tone"],"surrogates":"\uD83C\uDFCA\uD83C\uDFFC‍♂️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_swimming_tone3","man_swimming_medium_skin_tone"],"surrogates":"\uD83C\uDFCA\uD83C\uDFFD‍♂️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_swimming_tone4","man_swimming_medium_dark_skin_tone"],"surrogates":"\uD83C\uDFCA\uD83C\uDFFE‍♂️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_swimming_tone5","man_swimming_dark_skin_tone"],"surrogates":"\uD83C\uDFCA\uD83C\uDFFF‍♂️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["person_playing_water_polo","water_polo"],"surrogates":"\uD83E\uDD3D","unicodeVersion":9,"hasDiversity":true,"diversityChildren":[{"names":["person_playing_water_polo_tone1","water_polo_tone1"],"surrogates":"\uD83E\uDD3D\uD83C\uDFFB","unicodeVersion":9,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_playing_water_polo_tone2","water_polo_tone2"],"surrogates":"\uD83E\uDD3D\uD83C\uDFFC","unicodeVersion":9,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_playing_water_polo_tone3","water_polo_tone3"],"surrogates":"\uD83E\uDD3D\uD83C\uDFFD","unicodeVersion":9,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_playing_water_polo_tone4","water_polo_tone4"],"surrogates":"\uD83E\uDD3D\uD83C\uDFFE","unicodeVersion":9,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_playing_water_polo_tone5","water_polo_tone5"],"surrogates":"\uD83E\uDD3D\uD83C\uDFFF","unicodeVersion":9,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_playing_water_polo"],"surrogates":"\uD83E\uDD3D‍♀️","unicodeVersion":9,"hasDiversity":true,"diversityChildren":[{"names":["woman_playing_water_polo_tone1","woman_playing_water_polo_light_skin_tone"],"surrogates":"\uD83E\uDD3D\uD83C\uDFFB‍♀️","unicodeVersion":9,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_playing_water_polo_tone2","woman_playing_water_polo_medium_light_skin_tone"],"surrogates":"\uD83E\uDD3D\uD83C\uDFFC‍♀️","unicodeVersion":9,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_playing_water_polo_tone3","woman_playing_water_polo_medium_skin_tone"],"surrogates":"\uD83E\uDD3D\uD83C\uDFFD‍♀️","unicodeVersion":9,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_playing_water_polo_tone4","woman_playing_water_polo_medium_dark_skin_tone"],"surrogates":"\uD83E\uDD3D\uD83C\uDFFE‍♀️","unicodeVersion":9,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_playing_water_polo_tone5","woman_playing_water_polo_dark_skin_tone"],"surrogates":"\uD83E\uDD3D\uD83C\uDFFF‍♀️","unicodeVersion":9,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_playing_water_polo"],"surrogates":"\uD83E\uDD3D‍♂️","unicodeVersion":9,"hasDiversity":true,"diversityChildren":[{"names":["man_playing_water_polo_tone1","man_playing_water_polo_light_skin_tone"],"surrogates":"\uD83E\uDD3D\uD83C\uDFFB‍♂️","unicodeVersion":9,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_playing_water_polo_tone2","man_playing_water_polo_medium_light_skin_tone"],"surrogates":"\uD83E\uDD3D\uD83C\uDFFC‍♂️","unicodeVersion":9,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_playing_water_polo_tone3","man_playing_water_polo_medium_skin_tone"],"surrogates":"\uD83E\uDD3D\uD83C\uDFFD‍♂️","unicodeVersion":9,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_playing_water_polo_tone4","man_playing_water_polo_medium_dark_skin_tone"],"surrogates":"\uD83E\uDD3D\uD83C\uDFFE‍♂️","unicodeVersion":9,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_playing_water_polo_tone5","man_playing_water_polo_dark_skin_tone"],"surrogates":"\uD83E\uDD3D\uD83C\uDFFF‍♂️","unicodeVersion":9,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["person_rowing_boat","rowboat"],"surrogates":"\uD83D\uDEA3","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["person_rowing_boat_tone1","rowboat_tone1"],"surrogates":"\uD83D\uDEA3\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_rowing_boat_tone2","rowboat_tone2"],"surrogates":"\uD83D\uDEA3\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_rowing_boat_tone3","rowboat_tone3"],"surrogates":"\uD83D\uDEA3\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_rowing_boat_tone4","rowboat_tone4"],"surrogates":"\uD83D\uDEA3\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_rowing_boat_tone5","rowboat_tone5"],"surrogates":"\uD83D\uDEA3\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_rowing_boat"],"surrogates":"\uD83D\uDEA3‍♀️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["woman_rowing_boat_tone1","woman_rowing_boat_light_skin_tone"],"surrogates":"\uD83D\uDEA3\uD83C\uDFFB‍♀️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_rowing_boat_tone2","woman_rowing_boat_medium_light_skin_tone"],"surrogates":"\uD83D\uDEA3\uD83C\uDFFC‍♀️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_rowing_boat_tone3","woman_rowing_boat_medium_skin_tone"],"surrogates":"\uD83D\uDEA3\uD83C\uDFFD‍♀️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_rowing_boat_tone4","woman_rowing_boat_medium_dark_skin_tone"],"surrogates":"\uD83D\uDEA3\uD83C\uDFFE‍♀️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_rowing_boat_tone5","woman_rowing_boat_dark_skin_tone"],"surrogates":"\uD83D\uDEA3\uD83C\uDFFF‍♀️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_rowing_boat"],"surrogates":"\uD83D\uDEA3‍♂️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["man_rowing_boat_tone1","man_rowing_boat_light_skin_tone"],"surrogates":"\uD83D\uDEA3\uD83C\uDFFB‍♂️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_rowing_boat_tone2","man_rowing_boat_medium_light_skin_tone"],"surrogates":"\uD83D\uDEA3\uD83C\uDFFC‍♂️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_rowing_boat_tone3","man_rowing_boat_medium_skin_tone"],"surrogates":"\uD83D\uDEA3\uD83C\uDFFD‍♂️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_rowing_boat_tone4","man_rowing_boat_medium_dark_skin_tone"],"surrogates":"\uD83D\uDEA3\uD83C\uDFFE‍♂️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_rowing_boat_tone5","man_rowing_boat_dark_skin_tone"],"surrogates":"\uD83D\uDEA3\uD83C\uDFFF‍♂️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["person_climbing"],"surrogates":"\uD83E\uDDD7","unicodeVersion":10,"hasDiversity":true,"diversityChildren":[{"names":["person_climbing_tone1","person_climbing_light_skin_tone"],"surrogates":"\uD83E\uDDD7\uD83C\uDFFB","unicodeVersion":10,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_climbing_tone2","person_climbing_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD7\uD83C\uDFFC","unicodeVersion":10,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_climbing_tone3","person_climbing_medium_skin_tone"],"surrogates":"\uD83E\uDDD7\uD83C\uDFFD","unicodeVersion":10,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_climbing_tone4","person_climbing_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD7\uD83C\uDFFE","unicodeVersion":10,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_climbing_tone5","person_climbing_dark_skin_tone"],"surrogates":"\uD83E\uDDD7\uD83C\uDFFF","unicodeVersion":10,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_climbing"],"surrogates":"\uD83E\uDDD7‍♀️","unicodeVersion":10,"hasDiversity":true,"diversityChildren":[{"names":["woman_climbing_tone1","woman_climbing_light_skin_tone"],"surrogates":"\uD83E\uDDD7\uD83C\uDFFB‍♀️","unicodeVersion":10,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_climbing_tone2","woman_climbing_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD7\uD83C\uDFFC‍♀️","unicodeVersion":10,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_climbing_tone3","woman_climbing_medium_skin_tone"],"surrogates":"\uD83E\uDDD7\uD83C\uDFFD‍♀️","unicodeVersion":10,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_climbing_tone4","woman_climbing_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD7\uD83C\uDFFE‍♀️","unicodeVersion":10,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_climbing_tone5","woman_climbing_dark_skin_tone"],"surrogates":"\uD83E\uDDD7\uD83C\uDFFF‍♀️","unicodeVersion":10,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_climbing"],"surrogates":"\uD83E\uDDD7‍♂️","unicodeVersion":10,"hasDiversity":true,"diversityChildren":[{"names":["man_climbing_tone1","man_climbing_light_skin_tone"],"surrogates":"\uD83E\uDDD7\uD83C\uDFFB‍♂️","unicodeVersion":10,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_climbing_tone2","man_climbing_medium_light_skin_tone"],"surrogates":"\uD83E\uDDD7\uD83C\uDFFC‍♂️","unicodeVersion":10,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_climbing_tone3","man_climbing_medium_skin_tone"],"surrogates":"\uD83E\uDDD7\uD83C\uDFFD‍♂️","unicodeVersion":10,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_climbing_tone4","man_climbing_medium_dark_skin_tone"],"surrogates":"\uD83E\uDDD7\uD83C\uDFFE‍♂️","unicodeVersion":10,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_climbing_tone5","man_climbing_dark_skin_tone"],"surrogates":"\uD83E\uDDD7\uD83C\uDFFF‍♂️","unicodeVersion":10,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["person_mountain_biking","mountain_bicyclist"],"surrogates":"\uD83D\uDEB5","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["person_mountain_biking_tone1","mountain_bicyclist_tone1"],"surrogates":"\uD83D\uDEB5\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_mountain_biking_tone2","mountain_bicyclist_tone2"],"surrogates":"\uD83D\uDEB5\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_mountain_biking_tone3","mountain_bicyclist_tone3"],"surrogates":"\uD83D\uDEB5\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_mountain_biking_tone4","mountain_bicyclist_tone4"],"surrogates":"\uD83D\uDEB5\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_mountain_biking_tone5","mountain_bicyclist_tone5"],"surrogates":"\uD83D\uDEB5\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_mountain_biking"],"surrogates":"\uD83D\uDEB5‍♀️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["woman_mountain_biking_tone1","woman_mountain_biking_light_skin_tone"],"surrogates":"\uD83D\uDEB5\uD83C\uDFFB‍♀️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_mountain_biking_tone2","woman_mountain_biking_medium_light_skin_tone"],"surrogates":"\uD83D\uDEB5\uD83C\uDFFC‍♀️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_mountain_biking_tone3","woman_mountain_biking_medium_skin_tone"],"surrogates":"\uD83D\uDEB5\uD83C\uDFFD‍♀️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_mountain_biking_tone4","woman_mountain_biking_medium_dark_skin_tone"],"surrogates":"\uD83D\uDEB5\uD83C\uDFFE‍♀️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_mountain_biking_tone5","woman_mountain_biking_dark_skin_tone"],"surrogates":"\uD83D\uDEB5\uD83C\uDFFF‍♀️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_mountain_biking"],"surrogates":"\uD83D\uDEB5‍♂️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["man_mountain_biking_tone1","man_mountain_biking_light_skin_tone"],"surrogates":"\uD83D\uDEB5\uD83C\uDFFB‍♂️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_mountain_biking_tone2","man_mountain_biking_medium_light_skin_tone"],"surrogates":"\uD83D\uDEB5\uD83C\uDFFC‍♂️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_mountain_biking_tone3","man_mountain_biking_medium_skin_tone"],"surrogates":"\uD83D\uDEB5\uD83C\uDFFD‍♂️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_mountain_biking_tone4","man_mountain_biking_medium_dark_skin_tone"],"surrogates":"\uD83D\uDEB5\uD83C\uDFFE‍♂️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_mountain_biking_tone5","man_mountain_biking_dark_skin_tone"],"surrogates":"\uD83D\uDEB5\uD83C\uDFFF‍♂️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["person_biking","bicyclist"],"surrogates":"\uD83D\uDEB4","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["person_biking_tone1","bicyclist_tone1"],"surrogates":"\uD83D\uDEB4\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_biking_tone2","bicyclist_tone2"],"surrogates":"\uD83D\uDEB4\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_biking_tone3","bicyclist_tone3"],"surrogates":"\uD83D\uDEB4\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_biking_tone4","bicyclist_tone4"],"surrogates":"\uD83D\uDEB4\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_biking_tone5","bicyclist_tone5"],"surrogates":"\uD83D\uDEB4\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_biking"],"surrogates":"\uD83D\uDEB4‍♀️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["woman_biking_tone1","woman_biking_light_skin_tone"],"surrogates":"\uD83D\uDEB4\uD83C\uDFFB‍♀️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_biking_tone2","woman_biking_medium_light_skin_tone"],"surrogates":"\uD83D\uDEB4\uD83C\uDFFC‍♀️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_biking_tone3","woman_biking_medium_skin_tone"],"surrogates":"\uD83D\uDEB4\uD83C\uDFFD‍♀️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_biking_tone4","woman_biking_medium_dark_skin_tone"],"surrogates":"\uD83D\uDEB4\uD83C\uDFFE‍♀️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_biking_tone5","woman_biking_dark_skin_tone"],"surrogates":"\uD83D\uDEB4\uD83C\uDFFF‍♀️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_biking"],"surrogates":"\uD83D\uDEB4‍♂️","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["man_biking_tone1","man_biking_light_skin_tone"],"surrogates":"\uD83D\uDEB4\uD83C\uDFFB‍♂️","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_biking_tone2","man_biking_medium_light_skin_tone"],"surrogates":"\uD83D\uDEB4\uD83C\uDFFC‍♂️","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_biking_tone3","man_biking_medium_skin_tone"],"surrogates":"\uD83D\uDEB4\uD83C\uDFFD‍♂️","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_biking_tone4","man_biking_medium_dark_skin_tone"],"surrogates":"\uD83D\uDEB4\uD83C\uDFFE‍♂️","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_biking_tone5","man_biking_dark_skin_tone"],"surrogates":"\uD83D\uDEB4\uD83C\uDFFF‍♂️","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["trophy"],"surrogates":"\uD83C\uDFC6","unicodeVersion":6},{"names":["first_place","first_place_medal"],"surrogates":"\uD83E\uDD47","unicodeVersion":9},{"names":["second_place","second_place_medal"],"surrogates":"\uD83E\uDD48","unicodeVersion":9},{"names":["third_place","third_place_medal"],"surrogates":"\uD83E\uDD49","unicodeVersion":9},{"names":["medal","sports_medal"],"surrogates":"\uD83C\uDFC5","unicodeVersion":7},{"names":["military_medal"],"surrogates":"\uD83C\uDF96️","unicodeVersion":7},{"names":["rosette"],"surrogates":"\uD83C\uDFF5️","unicodeVersion":7},{"names":["reminder_ribbon"],"surrogates":"\uD83C\uDF97️","unicodeVersion":7},{"names":["ticket"],"surrogates":"\uD83C\uDFAB","unicodeVersion":6},{"names":["tickets","admission_tickets"],"surrogates":"\uD83C\uDF9F️","unicodeVersion":7},{"names":["circus_tent"],"surrogates":"\uD83C\uDFAA","unicodeVersion":6},{"names":["person_juggling","juggling","juggler"],"surrogates":"\uD83E\uDD39","unicodeVersion":9,"hasDiversity":true,"diversityChildren":[{"names":["person_juggling_tone1","juggling_tone1","juggler_tone1"],"surrogates":"\uD83E\uDD39\uD83C\uDFFB","unicodeVersion":9,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_juggling_tone2","juggling_tone2","juggler_tone2"],"surrogates":"\uD83E\uDD39\uD83C\uDFFC","unicodeVersion":9,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_juggling_tone3","juggling_tone3","juggler_tone3"],"surrogates":"\uD83E\uDD39\uD83C\uDFFD","unicodeVersion":9,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_juggling_tone4","juggling_tone4","juggler_tone4"],"surrogates":"\uD83E\uDD39\uD83C\uDFFE","unicodeVersion":9,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_juggling_tone5","juggling_tone5","juggler_tone5"],"surrogates":"\uD83E\uDD39\uD83C\uDFFF","unicodeVersion":9,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["woman_juggling"],"surrogates":"\uD83E\uDD39‍♀️","unicodeVersion":9,"hasDiversity":true,"diversityChildren":[{"names":["woman_juggling_tone1","woman_juggling_light_skin_tone"],"surrogates":"\uD83E\uDD39\uD83C\uDFFB‍♀️","unicodeVersion":9,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["woman_juggling_tone2","woman_juggling_medium_light_skin_tone"],"surrogates":"\uD83E\uDD39\uD83C\uDFFC‍♀️","unicodeVersion":9,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["woman_juggling_tone3","woman_juggling_medium_skin_tone"],"surrogates":"\uD83E\uDD39\uD83C\uDFFD‍♀️","unicodeVersion":9,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["woman_juggling_tone4","woman_juggling_medium_dark_skin_tone"],"surrogates":"\uD83E\uDD39\uD83C\uDFFE‍♀️","unicodeVersion":9,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["woman_juggling_tone5","woman_juggling_dark_skin_tone"],"surrogates":"\uD83E\uDD39\uD83C\uDFFF‍♀️","unicodeVersion":9,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["man_juggling"],"surrogates":"\uD83E\uDD39‍♂️","unicodeVersion":9,"hasDiversity":true,"diversityChildren":[{"names":["man_juggling_tone1","man_juggling_light_skin_tone"],"surrogates":"\uD83E\uDD39\uD83C\uDFFB‍♂️","unicodeVersion":9,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["man_juggling_tone2","man_juggling_medium_light_skin_tone"],"surrogates":"\uD83E\uDD39\uD83C\uDFFC‍♂️","unicodeVersion":9,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["man_juggling_tone3","man_juggling_medium_skin_tone"],"surrogates":"\uD83E\uDD39\uD83C\uDFFD‍♂️","unicodeVersion":9,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["man_juggling_tone4","man_juggling_medium_dark_skin_tone"],"surrogates":"\uD83E\uDD39\uD83C\uDFFE‍♂️","unicodeVersion":9,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["man_juggling_tone5","man_juggling_dark_skin_tone"],"surrogates":"\uD83E\uDD39\uD83C\uDFFF‍♂️","unicodeVersion":9,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["performing_arts"],"surrogates":"\uD83C\uDFAD","unicodeVersion":6},{"names":["ballet_shoes"],"surrogates":"\uD83E\uDE70","unicodeVersion":12},{"names":["art"],"surrogates":"\uD83C\uDFA8","unicodeVersion":6},{"names":["clapper","clapper_board"],"surrogates":"\uD83C\uDFAC","unicodeVersion":6},{"names":["microphone"],"surrogates":"\uD83C\uDFA4","unicodeVersion":6},{"names":["headphones","headphone"],"surrogates":"\uD83C\uDFA7","unicodeVersion":6},{"names":["musical_score"],"surrogates":"\uD83C\uDFBC","unicodeVersion":6},{"names":["musical_keyboard"],"surrogates":"\uD83C\uDFB9","unicodeVersion":6},{"names":["maracas"],"surrogates":"\uD83E\uDE87","unicodeVersion":15},{"names":["drum","drum_with_drumsticks"],"surrogates":"\uD83E\uDD41","unicodeVersion":9},{"names":["long_drum"],"surrogates":"\uD83E\uDE98","unicodeVersion":13},{"names":["saxophone"],"surrogates":"\uD83C\uDFB7","unicodeVersion":6},{"names":["trumpet"],"surrogates":"\uD83C\uDFBA","unicodeVersion":6},{"names":["accordion"],"surrogates":"\uD83E\uDE97","unicodeVersion":13},{"names":["guitar"],"surrogates":"\uD83C\uDFB8","unicodeVersion":6},{"names":["banjo"],"surrogates":"\uD83E\uDE95","unicodeVersion":12},{"names":["violin"],"surrogates":"\uD83C\uDFBB","unicodeVersion":6},{"names":["flute"],"surrogates":"\uD83E\uDE88","unicodeVersion":15},{"names":["game_die"],"surrogates":"\uD83C\uDFB2","unicodeVersion":6},{"names":["chess_pawn"],"surrogates":"♟️","unicodeVersion":1.1},{"names":["dart","direct_hit"],"surrogates":"\uD83C\uDFAF","unicodeVersion":6},{"names":["bowling"],"surrogates":"\uD83C\uDFB3","unicodeVersion":6},{"names":["video_game"],"surrogates":"\uD83C\uDFAE","unicodeVersion":6},{"names":["slot_machine"],"surrogates":"\uD83C\uDFB0","unicodeVersion":6},{"names":["jigsaw","puzzle_piece"],"surrogates":"\uD83E\uDDE9","unicodeVersion":11}],"travel":[{"names":["red_car","automobile"],"surrogates":"\uD83D\uDE97","unicodeVersion":6},{"names":["taxi"],"surrogates":"\uD83D\uDE95","unicodeVersion":6},{"names":["blue_car"],"surrogates":"\uD83D\uDE99","unicodeVersion":6},{"names":["pickup_truck"],"surrogates":"\uD83D\uDEFB","unicodeVersion":13},{"names":["minibus"],"surrogates":"\uD83D\uDE90","unicodeVersion":6},{"names":["bus"],"surrogates":"\uD83D\uDE8C","unicodeVersion":6},{"names":["trolleybus"],"surrogates":"\uD83D\uDE8E","unicodeVersion":6},{"names":["race_car","racing_car"],"surrogates":"\uD83C\uDFCE️","unicodeVersion":7},{"names":["police_car"],"surrogates":"\uD83D\uDE93","unicodeVersion":6},{"names":["ambulance"],"surrogates":"\uD83D\uDE91","unicodeVersion":6},{"names":["fire_engine"],"surrogates":"\uD83D\uDE92","unicodeVersion":6},{"names":["truck"],"surrogates":"\uD83D\uDE9A","unicodeVersion":6},{"names":["articulated_lorry"],"surrogates":"\uD83D\uDE9B","unicodeVersion":6},{"names":["tractor"],"surrogates":"\uD83D\uDE9C","unicodeVersion":6},{"names":["probing_cane"],"surrogates":"\uD83E\uDDAF","unicodeVersion":12},{"names":["manual_wheelchair"],"surrogates":"\uD83E\uDDBD","unicodeVersion":12},{"names":["motorized_wheelchair"],"surrogates":"\uD83E\uDDBC","unicodeVersion":12},{"names":["crutch"],"surrogates":"\uD83E\uDE7C","unicodeVersion":14},{"names":["scooter","kick_scooter"],"surrogates":"\uD83D\uDEF4","unicodeVersion":9},{"names":["bike","bicycle"],"surrogates":"\uD83D\uDEB2","unicodeVersion":6},{"names":["motor_scooter","motorbike"],"surrogates":"\uD83D\uDEF5","unicodeVersion":9},{"names":["motorcycle","racing_motorcycle"],"surrogates":"\uD83C\uDFCD️","unicodeVersion":7},{"names":["auto_rickshaw"],"surrogates":"\uD83D\uDEFA","unicodeVersion":12},{"names":["wheel"],"surrogates":"\uD83D\uDEDE","unicodeVersion":14},{"names":["rotating_light"],"surrogates":"\uD83D\uDEA8","unicodeVersion":6},{"names":["oncoming_police_car"],"surrogates":"\uD83D\uDE94","unicodeVersion":6},{"names":["oncoming_bus"],"surrogates":"\uD83D\uDE8D","unicodeVersion":6},{"names":["oncoming_automobile"],"surrogates":"\uD83D\uDE98","unicodeVersion":6},{"names":["oncoming_taxi"],"surrogates":"\uD83D\uDE96","unicodeVersion":6},{"names":["aerial_tramway"],"surrogates":"\uD83D\uDEA1","unicodeVersion":6},{"names":["mountain_cableway"],"surrogates":"\uD83D\uDEA0","unicodeVersion":6},{"names":["suspension_railway"],"surrogates":"\uD83D\uDE9F","unicodeVersion":6},{"names":["railway_car"],"surrogates":"\uD83D\uDE83","unicodeVersion":6},{"names":["train","tram_car"],"surrogates":"\uD83D\uDE8B","unicodeVersion":6},{"names":["mountain_railway"],"surrogates":"\uD83D\uDE9E","unicodeVersion":6},{"names":["monorail"],"surrogates":"\uD83D\uDE9D","unicodeVersion":6},{"names":["bullettrain_side"],"surrogates":"\uD83D\uDE84","unicodeVersion":6},{"names":["bullettrain_front","bullet_train"],"surrogates":"\uD83D\uDE85","unicodeVersion":6},{"names":["light_rail"],"surrogates":"\uD83D\uDE88","unicodeVersion":6},{"names":["steam_locomotive","locomotive"],"surrogates":"\uD83D\uDE82","unicodeVersion":6},{"names":["train2"],"surrogates":"\uD83D\uDE86","unicodeVersion":6},{"names":["metro"],"surrogates":"\uD83D\uDE87","unicodeVersion":6},{"names":["tram"],"surrogates":"\uD83D\uDE8A","unicodeVersion":6},{"names":["station"],"surrogates":"\uD83D\uDE89","unicodeVersion":6},{"names":["airplane"],"surrogates":"✈️","unicodeVersion":1.1},{"names":["airplane_departure"],"surrogates":"\uD83D\uDEEB","unicodeVersion":7},{"names":["airplane_arriving"],"surrogates":"\uD83D\uDEEC","unicodeVersion":7},{"names":["airplane_small","small_airplane"],"surrogates":"\uD83D\uDEE9️","unicodeVersion":7},{"names":["seat"],"surrogates":"\uD83D\uDCBA","unicodeVersion":6},{"names":["satellite_orbital"],"surrogates":"\uD83D\uDEF0️","unicodeVersion":7},{"names":["rocket"],"surrogates":"\uD83D\uDE80","unicodeVersion":6},{"names":["flying_saucer"],"surrogates":"\uD83D\uDEF8","unicodeVersion":10},{"names":["helicopter"],"surrogates":"\uD83D\uDE81","unicodeVersion":6},{"names":["canoe","kayak"],"surrogates":"\uD83D\uDEF6","unicodeVersion":9},{"names":["sailboat"],"surrogates":"⛵","unicodeVersion":5.2},{"names":["speedboat"],"surrogates":"\uD83D\uDEA4","unicodeVersion":6},{"names":["motorboat","motor_boat"],"surrogates":"\uD83D\uDEE5️","unicodeVersion":7},{"names":["cruise_ship","passenger_ship"],"surrogates":"\uD83D\uDEF3️","unicodeVersion":7},{"names":["ferry"],"surrogates":"⛴️","unicodeVersion":5.2},{"names":["ship"],"surrogates":"\uD83D\uDEA2","unicodeVersion":6},{"names":["ring_buoy"],"surrogates":"\uD83D\uDEDF","unicodeVersion":14},{"names":["anchor"],"surrogates":"⚓","unicodeVersion":4.1},{"names":["hook"],"surrogates":"\uD83E\uDE9D","unicodeVersion":13},{"names":["fuelpump","fuel_pump"],"surrogates":"⛽","unicodeVersion":5.2},{"names":["construction"],"surrogates":"\uD83D\uDEA7","unicodeVersion":6},{"names":["vertical_traffic_light"],"surrogates":"\uD83D\uDEA6","unicodeVersion":6},{"names":["traffic_light"],"surrogates":"\uD83D\uDEA5","unicodeVersion":6},{"names":["busstop","bus_stop"],"surrogates":"\uD83D\uDE8F","unicodeVersion":6},{"names":["map","world_map"],"surrogates":"\uD83D\uDDFA️","unicodeVersion":7},{"names":["moyai","moai"],"surrogates":"\uD83D\uDDFF","unicodeVersion":6},{"names":["statue_of_liberty"],"surrogates":"\uD83D\uDDFD","unicodeVersion":6},{"names":["tokyo_tower"],"surrogates":"\uD83D\uDDFC","unicodeVersion":6},{"names":["european_castle","castle"],"surrogates":"\uD83C\uDFF0","unicodeVersion":6},{"names":["japanese_castle"],"surrogates":"\uD83C\uDFEF","unicodeVersion":6},{"names":["stadium"],"surrogates":"\uD83C\uDFDF️","unicodeVersion":7},{"names":["ferris_wheel"],"surrogates":"\uD83C\uDFA1","unicodeVersion":6},{"names":["roller_coaster"],"surrogates":"\uD83C\uDFA2","unicodeVersion":6},{"names":["carousel_horse"],"surrogates":"\uD83C\uDFA0","unicodeVersion":6},{"names":["fountain"],"surrogates":"⛲","unicodeVersion":5.2},{"names":["beach_umbrella","umbrella_on_ground"],"surrogates":"⛱️","unicodeVersion":5.2},{"names":["beach","beach_with_umbrella"],"surrogates":"\uD83C\uDFD6️","unicodeVersion":7},{"names":["island","desert_island"],"surrogates":"\uD83C\uDFDD️","unicodeVersion":7},{"names":["desert"],"surrogates":"\uD83C\uDFDC️","unicodeVersion":7},{"names":["volcano"],"surrogates":"\uD83C\uDF0B","unicodeVersion":6},{"names":["mountain"],"surrogates":"⛰️","unicodeVersion":5.2},{"names":["mountain_snow","snow_capped_mountain"],"surrogates":"\uD83C\uDFD4️","unicodeVersion":7},{"names":["mount_fuji"],"surrogates":"\uD83D\uDDFB","unicodeVersion":6},{"names":["camping"],"surrogates":"\uD83C\uDFD5️","unicodeVersion":7},{"names":["tent"],"surrogates":"⛺","unicodeVersion":5.2},{"names":["house"],"surrogates":"\uD83C\uDFE0","unicodeVersion":6},{"names":["house_with_garden"],"surrogates":"\uD83C\uDFE1","unicodeVersion":6},{"names":["homes","house_buildings","houses"],"surrogates":"\uD83C\uDFD8️","unicodeVersion":7},{"names":["house_abandoned","derelict_house_building"],"surrogates":"\uD83C\uDFDA️","unicodeVersion":7},{"names":["hut"],"surrogates":"\uD83D\uDED6","unicodeVersion":13},{"names":["construction_site","building_construction"],"surrogates":"\uD83C\uDFD7️","unicodeVersion":7},{"names":["factory"],"surrogates":"\uD83C\uDFED","unicodeVersion":6},{"names":["office"],"surrogates":"\uD83C\uDFE2","unicodeVersion":6},{"names":["department_store"],"surrogates":"\uD83C\uDFEC","unicodeVersion":6},{"names":["post_office"],"surrogates":"\uD83C\uDFE3","unicodeVersion":6},{"names":["european_post_office"],"surrogates":"\uD83C\uDFE4","unicodeVersion":6},{"names":["hospital"],"surrogates":"\uD83C\uDFE5","unicodeVersion":6},{"names":["bank"],"surrogates":"\uD83C\uDFE6","unicodeVersion":6},{"names":["hotel"],"surrogates":"\uD83C\uDFE8","unicodeVersion":6},{"names":["convenience_store"],"surrogates":"\uD83C\uDFEA","unicodeVersion":6},{"names":["school"],"surrogates":"\uD83C\uDFEB","unicodeVersion":6},{"names":["love_hotel"],"surrogates":"\uD83C\uDFE9","unicodeVersion":6},{"names":["wedding"],"surrogates":"\uD83D\uDC92","unicodeVersion":6},{"names":["classical_building"],"surrogates":"\uD83C\uDFDB️","unicodeVersion":7},{"names":["church"],"surrogates":"⛪","unicodeVersion":5.2},{"names":["mosque"],"surrogates":"\uD83D\uDD4C","unicodeVersion":8},{"names":["synagogue"],"surrogates":"\uD83D\uDD4D","unicodeVersion":8},{"names":["hindu_temple"],"surrogates":"\uD83D\uDED5","unicodeVersion":12},{"names":["kaaba"],"surrogates":"\uD83D\uDD4B","unicodeVersion":8},{"names":["shinto_shrine"],"surrogates":"⛩️","unicodeVersion":5.2},{"names":["railway_track","railroad_track"],"surrogates":"\uD83D\uDEE4️","unicodeVersion":7},{"names":["motorway"],"surrogates":"\uD83D\uDEE3️","unicodeVersion":7},{"names":["japan","map_of_japan"],"surrogates":"\uD83D\uDDFE","unicodeVersion":6},{"names":["rice_scene"],"surrogates":"\uD83C\uDF91","unicodeVersion":6},{"names":["park","national_park"],"surrogates":"\uD83C\uDFDE️","unicodeVersion":7},{"names":["sunrise"],"surrogates":"\uD83C\uDF05","unicodeVersion":6},{"names":["sunrise_over_mountains"],"surrogates":"\uD83C\uDF04","unicodeVersion":6},{"names":["stars","shooting_star"],"surrogates":"\uD83C\uDF20","unicodeVersion":6},{"names":["sparkler"],"surrogates":"\uD83C\uDF87","unicodeVersion":6},{"names":["fireworks"],"surrogates":"\uD83C\uDF86","unicodeVersion":6},{"names":["city_sunset","city_sunrise","sunset"],"surrogates":"\uD83C\uDF07","unicodeVersion":6},{"names":["city_dusk"],"surrogates":"\uD83C\uDF06","unicodeVersion":6},{"names":["cityscape"],"surrogates":"\uD83C\uDFD9️","unicodeVersion":7},{"names":["night_with_stars"],"surrogates":"\uD83C\uDF03","unicodeVersion":6},{"names":["milky_way"],"surrogates":"\uD83C\uDF0C","unicodeVersion":6},{"names":["bridge_at_night"],"surrogates":"\uD83C\uDF09","unicodeVersion":6},{"names":["foggy"],"surrogates":"\uD83C\uDF01","unicodeVersion":6}],"objects":[{"names":["watch"],"surrogates":"⌚","unicodeVersion":1.1},{"names":["mobile_phone","iphone"],"surrogates":"\uD83D\uDCF1","unicodeVersion":6},{"names":["calling"],"surrogates":"\uD83D\uDCF2","unicodeVersion":6},{"names":["computer"],"surrogates":"\uD83D\uDCBB","unicodeVersion":6},{"names":["keyboard"],"surrogates":"⌨️","unicodeVersion":1.1},{"names":["desktop","desktop_computer"],"surrogates":"\uD83D\uDDA5️","unicodeVersion":7},{"names":["printer"],"surrogates":"\uD83D\uDDA8️","unicodeVersion":7},{"names":["mouse_three_button","three_button_mouse"],"surrogates":"\uD83D\uDDB1️","unicodeVersion":7},{"names":["trackball"],"surrogates":"\uD83D\uDDB2️","unicodeVersion":7},{"names":["joystick"],"surrogates":"\uD83D\uDD79️","unicodeVersion":7},{"names":["compression","clamp"],"surrogates":"\uD83D\uDDDC️","unicodeVersion":7},{"names":["minidisc","computer_disk"],"surrogates":"\uD83D\uDCBD","unicodeVersion":6},{"names":["floppy_disk"],"surrogates":"\uD83D\uDCBE","unicodeVersion":6},{"names":["cd","optical_disk"],"surrogates":"\uD83D\uDCBF","unicodeVersion":6},{"names":["dvd"],"surrogates":"\uD83D\uDCC0","unicodeVersion":6},{"names":["vhs","videocassette"],"surrogates":"\uD83D\uDCFC","unicodeVersion":6},{"names":["camera"],"surrogates":"\uD83D\uDCF7","unicodeVersion":6},{"names":["camera_with_flash"],"surrogates":"\uD83D\uDCF8","unicodeVersion":7},{"names":["video_camera"],"surrogates":"\uD83D\uDCF9","unicodeVersion":6},{"names":["movie_camera"],"surrogates":"\uD83C\uDFA5","unicodeVersion":6},{"names":["projector","film_projector"],"surrogates":"\uD83D\uDCFD️","unicodeVersion":7},{"names":["film_frames"],"surrogates":"\uD83C\uDF9E️","unicodeVersion":7},{"names":["telephone_receiver"],"surrogates":"\uD83D\uDCDE","unicodeVersion":6},{"names":["telephone"],"surrogates":"☎️","unicodeVersion":1.1},{"names":["pager"],"surrogates":"\uD83D\uDCDF","unicodeVersion":6},{"names":["fax","fax_machine"],"surrogates":"\uD83D\uDCE0","unicodeVersion":6},{"names":["tv","television"],"surrogates":"\uD83D\uDCFA","unicodeVersion":6},{"names":["radio"],"surrogates":"\uD83D\uDCFB","unicodeVersion":6},{"names":["microphone2","studio_microphone"],"surrogates":"\uD83C\uDF99️","unicodeVersion":7},{"names":["level_slider"],"surrogates":"\uD83C\uDF9A️","unicodeVersion":7},{"names":["control_knobs"],"surrogates":"\uD83C\uDF9B️","unicodeVersion":7},{"names":["compass"],"surrogates":"\uD83E\uDDED","unicodeVersion":11},{"names":["stopwatch"],"surrogates":"⏱️","unicodeVersion":6},{"names":["timer","timer_clock"],"surrogates":"⏲️","unicodeVersion":6},{"names":["alarm_clock"],"surrogates":"⏰","unicodeVersion":6},{"names":["clock","mantlepiece_clock"],"surrogates":"\uD83D\uDD70️","unicodeVersion":7},{"names":["hourglass"],"surrogates":"⌛","unicodeVersion":1.1},{"names":["hourglass_flowing_sand"],"surrogates":"⏳","unicodeVersion":6},{"names":["satellite"],"surrogates":"\uD83D\uDCE1","unicodeVersion":6},{"names":["battery"],"surrogates":"\uD83D\uDD0B","unicodeVersion":6},{"names":["low_battery"],"surrogates":"\uD83E\uDEAB","unicodeVersion":14},{"names":["electric_plug"],"surrogates":"\uD83D\uDD0C","unicodeVersion":6},{"names":["bulb","light_bulb"],"surrogates":"\uD83D\uDCA1","unicodeVersion":6},{"names":["flashlight"],"surrogates":"\uD83D\uDD26","unicodeVersion":6},{"names":["candle"],"surrogates":"\uD83D\uDD6F️","unicodeVersion":7},{"names":["diya_lamp"],"surrogates":"\uD83E\uDE94","unicodeVersion":12},{"names":["fire_extinguisher"],"surrogates":"\uD83E\uDDEF","unicodeVersion":11},{"names":["oil","oil_drum"],"surrogates":"\uD83D\uDEE2️","unicodeVersion":7},{"names":["money_with_wings"],"surrogates":"\uD83D\uDCB8","unicodeVersion":6},{"names":["dollar"],"surrogates":"\uD83D\uDCB5","unicodeVersion":6},{"names":["yen","yen_banknote"],"surrogates":"\uD83D\uDCB4","unicodeVersion":6},{"names":["euro","euro_banknote"],"surrogates":"\uD83D\uDCB6","unicodeVersion":6},{"names":["pound"],"surrogates":"\uD83D\uDCB7","unicodeVersion":6},{"names":["coin"],"surrogates":"\uD83E\uDE99","unicodeVersion":13},{"names":["moneybag","money_bag"],"surrogates":"\uD83D\uDCB0","unicodeVersion":6},{"names":["credit_card"],"surrogates":"\uD83D\uDCB3","unicodeVersion":6},{"names":["identification_card"],"surrogates":"\uD83E\uDEAA","unicodeVersion":14},{"names":["gem","gem_stone"],"surrogates":"\uD83D\uDC8E","unicodeVersion":6},{"names":["scales","balance_scale"],"surrogates":"⚖️","unicodeVersion":4.1},{"names":["ladder"],"surrogates":"\uD83E\uDE9C","unicodeVersion":13},{"names":["toolbox"],"surrogates":"\uD83E\uDDF0","unicodeVersion":11},{"names":["screwdriver"],"surrogates":"\uD83E\uDE9B","unicodeVersion":13},{"names":["wrench"],"surrogates":"\uD83D\uDD27","unicodeVersion":6},{"names":["hammer"],"surrogates":"\uD83D\uDD28","unicodeVersion":6},{"names":["hammer_pick","hammer_and_pick"],"surrogates":"⚒️","unicodeVersion":4.1},{"names":["tools","hammer_and_wrench"],"surrogates":"\uD83D\uDEE0️","unicodeVersion":7},{"names":["pick"],"surrogates":"⛏️","unicodeVersion":5.2},{"names":["carpentry_saw"],"surrogates":"\uD83E\uDE9A","unicodeVersion":13},{"names":["nut_and_bolt"],"surrogates":"\uD83D\uDD29","unicodeVersion":6},{"names":["gear"],"surrogates":"⚙️","unicodeVersion":4.1},{"names":["mouse_trap"],"surrogates":"\uD83E\uDEA4","unicodeVersion":13},{"names":["bricks","brick"],"surrogates":"\uD83E\uDDF1","unicodeVersion":11},{"names":["chains"],"surrogates":"⛓️","unicodeVersion":5.2},{"names":["magnet"],"surrogates":"\uD83E\uDDF2","unicodeVersion":11},{"names":["gun","pistol"],"surrogates":"\uD83D\uDD2B","unicodeVersion":6},{"names":["bomb"],"surrogates":"\uD83D\uDCA3","unicodeVersion":6},{"names":["firecracker"],"surrogates":"\uD83E\uDDE8","unicodeVersion":11},{"names":["axe"],"surrogates":"\uD83E\uDE93","unicodeVersion":12},{"names":["knife","kitchen_knife"],"surrogates":"\uD83D\uDD2A","unicodeVersion":6},{"names":["dagger","dagger_knife"],"surrogates":"\uD83D\uDDE1️","unicodeVersion":7},{"names":["crossed_swords"],"surrogates":"⚔️","unicodeVersion":4.1},{"names":["shield"],"surrogates":"\uD83D\uDEE1️","unicodeVersion":7},{"names":["smoking","cigarette"],"surrogates":"\uD83D\uDEAC","unicodeVersion":6},{"names":["coffin"],"surrogates":"⚰️","unicodeVersion":4.1},{"names":["headstone"],"surrogates":"\uD83E\uDEA6","unicodeVersion":13},{"names":["urn","funeral_urn"],"surrogates":"⚱️","unicodeVersion":4.1},{"names":["amphora"],"surrogates":"\uD83C\uDFFA","unicodeVersion":8},{"names":["crystal_ball"],"surrogates":"\uD83D\uDD2E","unicodeVersion":6},{"names":["prayer_beads"],"surrogates":"\uD83D\uDCFF","unicodeVersion":8},{"names":["nazar_amulet"],"surrogates":"\uD83E\uDDFF","unicodeVersion":11},{"names":["hamsa"],"surrogates":"\uD83E\uDEAC","unicodeVersion":14},{"names":["barber","barber_pole"],"surrogates":"\uD83D\uDC88","unicodeVersion":6},{"names":["alembic"],"surrogates":"⚗️","unicodeVersion":4.1},{"names":["telescope"],"surrogates":"\uD83D\uDD2D","unicodeVersion":6},{"names":["microscope"],"surrogates":"\uD83D\uDD2C","unicodeVersion":6},{"names":["hole"],"surrogates":"\uD83D\uDD73️","unicodeVersion":7},{"names":["x_ray"],"surrogates":"\uD83E\uDE7B","unicodeVersion":14},{"names":["adhesive_bandage"],"surrogates":"\uD83E\uDE79","unicodeVersion":12},{"names":["stethoscope"],"surrogates":"\uD83E\uDE7A","unicodeVersion":12},{"names":["pill"],"surrogates":"\uD83D\uDC8A","unicodeVersion":6},{"names":["syringe"],"surrogates":"\uD83D\uDC89","unicodeVersion":6},{"names":["drop_of_blood"],"surrogates":"\uD83E\uDE78","unicodeVersion":12},{"names":["dna"],"surrogates":"\uD83E\uDDEC","unicodeVersion":11},{"names":["microbe"],"surrogates":"\uD83E\uDDA0","unicodeVersion":11},{"names":["petri_dish"],"surrogates":"\uD83E\uDDEB","unicodeVersion":11},{"names":["test_tube"],"surrogates":"\uD83E\uDDEA","unicodeVersion":11},{"names":["thermometer"],"surrogates":"\uD83C\uDF21️","unicodeVersion":7},{"names":["broom"],"surrogates":"\uD83E\uDDF9","unicodeVersion":11},{"names":["plunger"],"surrogates":"\uD83E\uDEA0","unicodeVersion":13},{"names":["basket"],"surrogates":"\uD83E\uDDFA","unicodeVersion":11},{"names":["roll_of_paper"],"surrogates":"\uD83E\uDDFB","unicodeVersion":11},{"names":["toilet"],"surrogates":"\uD83D\uDEBD","unicodeVersion":6},{"names":["potable_water"],"surrogates":"\uD83D\uDEB0","unicodeVersion":6},{"names":["shower"],"surrogates":"\uD83D\uDEBF","unicodeVersion":6},{"names":["bathtub"],"surrogates":"\uD83D\uDEC1","unicodeVersion":6},{"names":["bath"],"surrogates":"\uD83D\uDEC0","unicodeVersion":6,"hasDiversity":true,"diversityChildren":[{"names":["bath_tone1"],"surrogates":"\uD83D\uDEC0\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["bath_tone2"],"surrogates":"\uD83D\uDEC0\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["bath_tone3"],"surrogates":"\uD83D\uDEC0\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["bath_tone4"],"surrogates":"\uD83D\uDEC0\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["bath_tone5"],"surrogates":"\uD83D\uDEC0\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["soap"],"surrogates":"\uD83E\uDDFC","unicodeVersion":11},{"names":["toothbrush"],"surrogates":"\uD83E\uDEA5","unicodeVersion":13},{"names":["razor"],"surrogates":"\uD83E\uDE92","unicodeVersion":12},{"names":["hair_pick"],"surrogates":"\uD83E\uDEAE","unicodeVersion":15},{"names":["sponge"],"surrogates":"\uD83E\uDDFD","unicodeVersion":11},{"names":["bucket"],"surrogates":"\uD83E\uDEA3","unicodeVersion":13},{"names":["squeeze_bottle","lotion_bottle"],"surrogates":"\uD83E\uDDF4","unicodeVersion":11},{"names":["bellhop","bellhop_bell"],"surrogates":"\uD83D\uDECE️","unicodeVersion":7},{"names":["key"],"surrogates":"\uD83D\uDD11","unicodeVersion":6},{"names":["key2","old_key"],"surrogates":"\uD83D\uDDDD️","unicodeVersion":7},{"names":["door"],"surrogates":"\uD83D\uDEAA","unicodeVersion":6},{"names":["chair"],"surrogates":"\uD83E\uDE91","unicodeVersion":12},{"names":["couch","couch_and_lamp"],"surrogates":"\uD83D\uDECB️","unicodeVersion":7},{"names":["bed"],"surrogates":"\uD83D\uDECF️","unicodeVersion":7},{"names":["sleeping_accommodation","person_in_bed"],"surrogates":"\uD83D\uDECC","unicodeVersion":7,"hasDiversity":true,"diversityChildren":[{"names":["person_in_bed_tone1","person_in_bed_light_skin_tone"],"surrogates":"\uD83D\uDECC\uD83C\uDFFB","unicodeVersion":8,"diversity":["1f3fb"],"hasDiversityParent":true},{"names":["person_in_bed_tone2","person_in_bed_medium_light_skin_tone"],"surrogates":"\uD83D\uDECC\uD83C\uDFFC","unicodeVersion":8,"diversity":["1f3fc"],"hasDiversityParent":true},{"names":["person_in_bed_tone3","person_in_bed_medium_skin_tone"],"surrogates":"\uD83D\uDECC\uD83C\uDFFD","unicodeVersion":8,"diversity":["1f3fd"],"hasDiversityParent":true},{"names":["person_in_bed_tone4","person_in_bed_medium_dark_skin_tone"],"surrogates":"\uD83D\uDECC\uD83C\uDFFE","unicodeVersion":8,"diversity":["1f3fe"],"hasDiversityParent":true},{"names":["person_in_bed_tone5","person_in_bed_dark_skin_tone"],"surrogates":"\uD83D\uDECC\uD83C\uDFFF","unicodeVersion":8,"diversity":["1f3ff"],"hasDiversityParent":true}]},{"names":["teddy_bear"],"surrogates":"\uD83E\uDDF8","unicodeVersion":11},{"names":["nesting_dolls"],"surrogates":"\uD83E\uDE86","unicodeVersion":13},{"names":["frame_photo","frame_with_picture"],"surrogates":"\uD83D\uDDBC️","unicodeVersion":7},{"names":["mirror"],"surrogates":"\uD83E\uDE9E","unicodeVersion":13},{"names":["window"],"surrogates":"\uD83E\uDE9F","unicodeVersion":13},{"names":["shopping_bags"],"surrogates":"\uD83D\uDECD️","unicodeVersion":7},{"names":["shopping_cart","shopping_trolley"],"surrogates":"\uD83D\uDED2","unicodeVersion":9},{"names":["gift","wrapped_gift"],"surrogates":"\uD83C\uDF81","unicodeVersion":6},{"names":["balloon"],"surrogates":"\uD83C\uDF88","unicodeVersion":6},{"names":["flags","carp_streamer"],"surrogates":"\uD83C\uDF8F","unicodeVersion":6},{"names":["ribbon"],"surrogates":"\uD83C\uDF80","unicodeVersion":6},{"names":["magic_wand"],"surrogates":"\uD83E\uDE84","unicodeVersion":13},{"names":["pi\xf1ata"],"surrogates":"\uD83E\uDE85","unicodeVersion":13},{"names":["confetti_ball"],"surrogates":"\uD83C\uDF8A","unicodeVersion":6},{"names":["tada","party_popper"],"surrogates":"\uD83C\uDF89","unicodeVersion":6},{"names":["dolls"],"surrogates":"\uD83C\uDF8E","unicodeVersion":6},{"names":["folding_hand_fan"],"surrogates":"\uD83E\uDEAD","unicodeVersion":15},{"names":["izakaya_lantern"],"surrogates":"\uD83C\uDFEE","unicodeVersion":6},{"names":["wind_chime"],"surrogates":"\uD83C\uDF90","unicodeVersion":6},{"names":["mirror_ball"],"surrogates":"\uD83E\uDEA9","unicodeVersion":14},{"names":["red_envelope"],"surrogates":"\uD83E\uDDE7","unicodeVersion":11},{"names":["envelope"],"surrogates":"✉️","unicodeVersion":1.1},{"names":["envelope_with_arrow"],"surrogates":"\uD83D\uDCE9","unicodeVersion":6},{"names":["incoming_envelope"],"surrogates":"\uD83D\uDCE8","unicodeVersion":6},{"names":["e_mail","email"],"surrogates":"\uD83D\uDCE7","unicodeVersion":6},{"names":["love_letter"],"surrogates":"\uD83D\uDC8C","unicodeVersion":6},{"names":["inbox_tray"],"surrogates":"\uD83D\uDCE5","unicodeVersion":6},{"names":["outbox_tray"],"surrogates":"\uD83D\uDCE4","unicodeVersion":6},{"names":["package"],"surrogates":"\uD83D\uDCE6","unicodeVersion":6},{"names":["label"],"surrogates":"\uD83C\uDFF7️","unicodeVersion":7},{"names":["placard"],"surrogates":"\uD83E\uDEA7","unicodeVersion":13},{"names":["mailbox_closed"],"surrogates":"\uD83D\uDCEA","unicodeVersion":6},{"names":["mailbox"],"surrogates":"\uD83D\uDCEB","unicodeVersion":6},{"names":["mailbox_with_mail"],"surrogates":"\uD83D\uDCEC","unicodeVersion":6},{"names":["mailbox_with_no_mail"],"surrogates":"\uD83D\uDCED","unicodeVersion":6},{"names":["postbox"],"surrogates":"\uD83D\uDCEE","unicodeVersion":6},{"names":["postal_horn"],"surrogates":"\uD83D\uDCEF","unicodeVersion":6},{"names":["scroll"],"surrogates":"\uD83D\uDCDC","unicodeVersion":6},{"names":["page_with_curl"],"surrogates":"\uD83D\uDCC3","unicodeVersion":6},{"names":["page_facing_up"],"surrogates":"\uD83D\uDCC4","unicodeVersion":6},{"names":["bookmark_tabs"],"surrogates":"\uD83D\uDCD1","unicodeVersion":6},{"names":["receipt"],"surrogates":"\uD83E\uDDFE","unicodeVersion":11},{"names":["bar_chart"],"surrogates":"\uD83D\uDCCA","unicodeVersion":6},{"names":["chart_with_upwards_trend"],"surrogates":"\uD83D\uDCC8","unicodeVersion":6},{"names":["chart_with_downwards_trend"],"surrogates":"\uD83D\uDCC9","unicodeVersion":6},{"names":["notepad_spiral","spiral_note_pad"],"surrogates":"\uD83D\uDDD2️","unicodeVersion":7},{"names":["calendar_spiral","spiral_calendar_pad"],"surrogates":"\uD83D\uDDD3️","unicodeVersion":7},{"names":["calendar"],"surrogates":"\uD83D\uDCC6","unicodeVersion":6},{"names":["date"],"surrogates":"\uD83D\uDCC5","unicodeVersion":6},{"names":["wastebasket"],"surrogates":"\uD83D\uDDD1️","unicodeVersion":7},{"names":["card_index"],"surrogates":"\uD83D\uDCC7","unicodeVersion":6},{"names":["card_box","card_file_box"],"surrogates":"\uD83D\uDDC3️","unicodeVersion":7},{"names":["ballot_box","ballot_box_with_ballot"],"surrogates":"\uD83D\uDDF3️","unicodeVersion":7},{"names":["file_cabinet"],"surrogates":"\uD83D\uDDC4️","unicodeVersion":7},{"names":["clipboard"],"surrogates":"\uD83D\uDCCB","unicodeVersion":6},{"names":["file_folder"],"surrogates":"\uD83D\uDCC1","unicodeVersion":6},{"names":["open_file_folder"],"surrogates":"\uD83D\uDCC2","unicodeVersion":6},{"names":["dividers","card_index_dividers"],"surrogates":"\uD83D\uDDC2️","unicodeVersion":7},{"names":["newspaper2","rolled_up_newspaper"],"surrogates":"\uD83D\uDDDE️","unicodeVersion":7},{"names":["newspaper"],"surrogates":"\uD83D\uDCF0","unicodeVersion":6},{"names":["notebook"],"surrogates":"\uD83D\uDCD3","unicodeVersion":6},{"names":["notebook_with_decorative_cover"],"surrogates":"\uD83D\uDCD4","unicodeVersion":6},{"names":["ledger"],"surrogates":"\uD83D\uDCD2","unicodeVersion":6},{"names":["closed_book"],"surrogates":"\uD83D\uDCD5","unicodeVersion":6},{"names":["green_book"],"surrogates":"\uD83D\uDCD7","unicodeVersion":6},{"names":["blue_book"],"surrogates":"\uD83D\uDCD8","unicodeVersion":6},{"names":["orange_book"],"surrogates":"\uD83D\uDCD9","unicodeVersion":6},{"names":["books"],"surrogates":"\uD83D\uDCDA","unicodeVersion":6},{"names":["book","open_book"],"surrogates":"\uD83D\uDCD6","unicodeVersion":6},{"names":["bookmark"],"surrogates":"\uD83D\uDD16","unicodeVersion":6},{"names":["safety_pin"],"surrogates":"\uD83E\uDDF7","unicodeVersion":11},{"names":["link"],"surrogates":"\uD83D\uDD17","unicodeVersion":6},{"names":["paperclip"],"surrogates":"\uD83D\uDCCE","unicodeVersion":6},{"names":["paperclips","linked_paperclips"],"surrogates":"\uD83D\uDD87️","unicodeVersion":7},{"names":["triangular_ruler"],"surrogates":"\uD83D\uDCD0","unicodeVersion":6},{"names":["straight_ruler"],"surrogates":"\uD83D\uDCCF","unicodeVersion":6},{"names":["abacus"],"surrogates":"\uD83E\uDDEE","unicodeVersion":11},{"names":["pushpin"],"surrogates":"\uD83D\uDCCC","unicodeVersion":6},{"names":["round_pushpin"],"surrogates":"\uD83D\uDCCD","unicodeVersion":6},{"names":["scissors"],"surrogates":"✂️","unicodeVersion":1.1},{"names":["pen_ballpoint","lower_left_ballpoint_pen","pen"],"surrogates":"\uD83D\uDD8A️","unicodeVersion":7},{"names":["pen_fountain","lower_left_fountain_pen","fountain_pen"],"surrogates":"\uD83D\uDD8B️","unicodeVersion":7},{"names":["black_nib"],"surrogates":"✒️","unicodeVersion":1.1},{"names":["paintbrush","lower_left_paintbrush"],"surrogates":"\uD83D\uDD8C️","unicodeVersion":7},{"names":["crayon","lower_left_crayon"],"surrogates":"\uD83D\uDD8D️","unicodeVersion":7},{"names":["pencil","memo"],"surrogates":"\uD83D\uDCDD","unicodeVersion":6},{"names":["pencil2"],"surrogates":"✏️","unicodeVersion":1.1},{"names":["mag"],"surrogates":"\uD83D\uDD0D","unicodeVersion":6},{"names":["mag_right"],"surrogates":"\uD83D\uDD0E","unicodeVersion":6},{"names":["lock_with_ink_pen"],"surrogates":"\uD83D\uDD0F","unicodeVersion":6},{"names":["closed_lock_with_key"],"surrogates":"\uD83D\uDD10","unicodeVersion":6},{"names":["lock","locked"],"surrogates":"\uD83D\uDD12","unicodeVersion":6},{"names":["unlock","unlocked"],"surrogates":"\uD83D\uDD13","unicodeVersion":6}],"symbols":[{"names":["pink_heart"],"surrogates":"\uD83E\uDE77","unicodeVersion":15},{"names":["heart","red_heart"],"surrogates":"❤️","unicodeVersion":1.1},{"names":["orange_heart"],"surrogates":"\uD83E\uDDE1","unicodeVersion":10},{"names":["yellow_heart"],"surrogates":"\uD83D\uDC9B","unicodeVersion":6},{"names":["green_heart"],"surrogates":"\uD83D\uDC9A","unicodeVersion":6},{"names":["light_blue_heart"],"surrogates":"\uD83E\uDE75","unicodeVersion":15},{"names":["blue_heart"],"surrogates":"\uD83D\uDC99","unicodeVersion":6},{"names":["purple_heart"],"surrogates":"\uD83D\uDC9C","unicodeVersion":6},{"names":["black_heart"],"surrogates":"\uD83D\uDDA4","unicodeVersion":9},{"names":["grey_heart"],"surrogates":"\uD83E\uDE76","unicodeVersion":15},{"names":["white_heart"],"surrogates":"\uD83E\uDD0D","unicodeVersion":12},{"names":["brown_heart"],"surrogates":"\uD83E\uDD0E","unicodeVersion":12},{"names":["broken_heart"],"surrogates":"\uD83D\uDC94","unicodeVersion":6},{"names":["heart_exclamation","heavy_heart_exclamation_mark_ornament"],"surrogates":"❣️","unicodeVersion":1.1},{"names":["two_hearts"],"surrogates":"\uD83D\uDC95","unicodeVersion":6},{"names":["revolving_hearts"],"surrogates":"\uD83D\uDC9E","unicodeVersion":6},{"names":["heartbeat","beating_heart"],"surrogates":"\uD83D\uDC93","unicodeVersion":6},{"names":["heartpulse","growing_heart"],"surrogates":"\uD83D\uDC97","unicodeVersion":6},{"names":["sparkling_heart"],"surrogates":"\uD83D\uDC96","unicodeVersion":6},{"names":["cupid"],"surrogates":"\uD83D\uDC98","unicodeVersion":6},{"names":["gift_heart"],"surrogates":"\uD83D\uDC9D","unicodeVersion":6},{"names":["mending_heart"],"surrogates":"❤️‍\uD83E\uDE79","unicodeVersion":13.1},{"names":["heart_on_fire"],"surrogates":"❤️‍\uD83D\uDD25","unicodeVersion":13.1},{"names":["heart_decoration"],"surrogates":"\uD83D\uDC9F","unicodeVersion":6},{"names":["peace","peace_symbol"],"surrogates":"☮️","unicodeVersion":1.1},{"names":["cross","latin_cross"],"surrogates":"✝️","unicodeVersion":1.1},{"names":["star_and_crescent"],"surrogates":"☪️","unicodeVersion":1.1},{"names":["om_symbol"],"surrogates":"\uD83D\uDD49️","unicodeVersion":7},{"names":["wheel_of_dharma"],"surrogates":"☸️","unicodeVersion":1.1},{"names":["khanda"],"surrogates":"\uD83E\uDEAF","unicodeVersion":15},{"names":["star_of_david"],"surrogates":"✡️","unicodeVersion":1.1},{"names":["six_pointed_star"],"surrogates":"\uD83D\uDD2F","unicodeVersion":6},{"names":["menorah"],"surrogates":"\uD83D\uDD4E","unicodeVersion":8},{"names":["yin_yang"],"surrogates":"☯️","unicodeVersion":1.1},{"names":["orthodox_cross"],"surrogates":"☦️","unicodeVersion":1.1},{"names":["place_of_worship","worship_symbol"],"surrogates":"\uD83D\uDED0","unicodeVersion":8},{"names":["ophiuchus"],"surrogates":"⛎","unicodeVersion":6},{"names":["aries"],"surrogates":"♈","unicodeVersion":1.1},{"names":["taurus"],"surrogates":"♉","unicodeVersion":1.1},{"names":["gemini"],"surrogates":"♊","unicodeVersion":1.1},{"names":["cancer"],"surrogates":"♋","unicodeVersion":1.1},{"names":["leo"],"surrogates":"♌","unicodeVersion":1.1},{"names":["virgo"],"surrogates":"♍","unicodeVersion":1.1},{"names":["libra"],"surrogates":"♎","unicodeVersion":1.1},{"names":["scorpius","scorpio"],"surrogates":"♏","unicodeVersion":1.1},{"names":["sagittarius"],"surrogates":"♐","unicodeVersion":1.1},{"names":["capricorn"],"surrogates":"♑","unicodeVersion":1.1},{"names":["aquarius"],"surrogates":"♒","unicodeVersion":1.1},{"names":["pisces"],"surrogates":"♓","unicodeVersion":1.1},{"names":["id"],"surrogates":"\uD83C\uDD94","unicodeVersion":6},{"names":["atom","atom_symbol"],"surrogates":"⚛️","unicodeVersion":4.1},{"names":["accept"],"surrogates":"\uD83C\uDE51","unicodeVersion":6},{"names":["radioactive","radioactive_sign"],"surrogates":"☢️","unicodeVersion":1.1},{"names":["biohazard","biohazard_sign"],"surrogates":"☣️","unicodeVersion":1.1},{"names":["mobile_phone_off"],"surrogates":"\uD83D\uDCF4","unicodeVersion":6},{"names":["vibration_mode"],"surrogates":"\uD83D\uDCF3","unicodeVersion":6},{"names":["u6709"],"surrogates":"\uD83C\uDE36","unicodeVersion":6},{"names":["u7121"],"surrogates":"\uD83C\uDE1A","unicodeVersion":5.2},{"names":["u7533"],"surrogates":"\uD83C\uDE38","unicodeVersion":6},{"names":["u55b6"],"surrogates":"\uD83C\uDE3A","unicodeVersion":6},{"names":["u6708"],"surrogates":"\uD83C\uDE37️","unicodeVersion":6},{"names":["eight_pointed_black_star"],"surrogates":"✴️","unicodeVersion":1.1},{"names":["vs"],"surrogates":"\uD83C\uDD9A","unicodeVersion":6},{"names":["white_flower"],"surrogates":"\uD83D\uDCAE","unicodeVersion":6},{"names":["ideograph_advantage"],"surrogates":"\uD83C\uDE50","unicodeVersion":6},{"names":["secret"],"surrogates":"㊙️","unicodeVersion":1.1},{"names":["congratulations"],"surrogates":"㊗️","unicodeVersion":1.1},{"names":["u5408"],"surrogates":"\uD83C\uDE34","unicodeVersion":6},{"names":["u6e80"],"surrogates":"\uD83C\uDE35","unicodeVersion":6},{"names":["u5272"],"surrogates":"\uD83C\uDE39","unicodeVersion":6},{"names":["u7981"],"surrogates":"\uD83C\uDE32","unicodeVersion":6},{"names":["a"],"surrogates":"\uD83C\uDD70️","unicodeVersion":6},{"names":["b"],"surrogates":"\uD83C\uDD71️","unicodeVersion":6},{"names":["ab"],"surrogates":"\uD83C\uDD8E","unicodeVersion":6},{"names":["cl"],"surrogates":"\uD83C\uDD91","unicodeVersion":6},{"names":["o2"],"surrogates":"\uD83C\uDD7E️","unicodeVersion":6},{"names":["sos"],"surrogates":"\uD83C\uDD98","unicodeVersion":6},{"names":["x","cross_mark"],"surrogates":"❌","unicodeVersion":6},{"names":["o"],"surrogates":"⭕","unicodeVersion":5.2},{"names":["octagonal_sign","stop_sign"],"surrogates":"\uD83D\uDED1","unicodeVersion":9},{"names":["no_entry"],"surrogates":"⛔","unicodeVersion":5.2},{"names":["name_badge"],"surrogates":"\uD83D\uDCDB","unicodeVersion":6},{"names":["no_entry_sign","prohibited"],"surrogates":"\uD83D\uDEAB","unicodeVersion":6},{"names":["100"],"surrogates":"\uD83D\uDCAF","unicodeVersion":6},{"names":["anger"],"surrogates":"\uD83D\uDCA2","unicodeVersion":6},{"names":["hotsprings","hot_springs"],"surrogates":"♨️","unicodeVersion":1.1},{"names":["no_pedestrians"],"surrogates":"\uD83D\uDEB7","unicodeVersion":6},{"names":["do_not_litter","no_littering"],"surrogates":"\uD83D\uDEAF","unicodeVersion":6},{"names":["no_bicycles"],"surrogates":"\uD83D\uDEB3","unicodeVersion":6},{"names":["non_potable_water"],"surrogates":"\uD83D\uDEB1","unicodeVersion":6},{"names":["underage"],"surrogates":"\uD83D\uDD1E","unicodeVersion":6},{"names":["no_mobile_phones"],"surrogates":"\uD83D\uDCF5","unicodeVersion":6},{"names":["no_smoking"],"surrogates":"\uD83D\uDEAD","unicodeVersion":6},{"names":["exclamation"],"surrogates":"❗","unicodeVersion":5.2},{"names":["grey_exclamation"],"surrogates":"❕","unicodeVersion":6},{"names":["question","question_mark"],"surrogates":"❓","unicodeVersion":6},{"names":["grey_question"],"surrogates":"❔","unicodeVersion":6},{"names":["bangbang"],"surrogates":"‼️","unicodeVersion":1.1},{"names":["interrobang"],"surrogates":"⁉️","unicodeVersion":3},{"names":["low_brightness"],"surrogates":"\uD83D\uDD05","unicodeVersion":6},{"names":["high_brightness"],"surrogates":"\uD83D\uDD06","unicodeVersion":6},{"names":["part_alternation_mark"],"surrogates":"〽️","unicodeVersion":3.2},{"names":["warning"],"surrogates":"⚠️","unicodeVersion":4},{"names":["children_crossing"],"surrogates":"\uD83D\uDEB8","unicodeVersion":6},{"names":["trident"],"surrogates":"\uD83D\uDD31","unicodeVersion":6},{"names":["fleur_de_lis"],"surrogates":"⚜️","unicodeVersion":4.1},{"names":["beginner"],"surrogates":"\uD83D\uDD30","unicodeVersion":6},{"names":["recycle"],"surrogates":"♻️","unicodeVersion":3.2},{"names":["white_check_mark"],"surrogates":"✅","unicodeVersion":6},{"names":["u6307"],"surrogates":"\uD83C\uDE2F","unicodeVersion":5.2},{"names":["chart"],"surrogates":"\uD83D\uDCB9","unicodeVersion":6},{"names":["sparkle"],"surrogates":"❇️","unicodeVersion":1.1},{"names":["eight_spoked_asterisk"],"surrogates":"✳️","unicodeVersion":1.1},{"names":["negative_squared_cross_mark"],"surrogates":"❎","unicodeVersion":6},{"names":["globe_with_meridians"],"surrogates":"\uD83C\uDF10","unicodeVersion":6},{"names":["diamond_shape_with_a_dot_inside"],"surrogates":"\uD83D\uDCA0","unicodeVersion":6},{"names":["m","circled_m"],"surrogates":"Ⓜ️","unicodeVersion":1.1},{"names":["cyclone"],"surrogates":"\uD83C\uDF00","unicodeVersion":6},{"names":["zzz"],"surrogates":"\uD83D\uDCA4","unicodeVersion":6},{"names":["atm"],"surrogates":"\uD83C\uDFE7","unicodeVersion":6},{"names":["wc","water_closet"],"surrogates":"\uD83D\uDEBE","unicodeVersion":6},{"names":["wheelchair"],"surrogates":"♿","unicodeVersion":4.1},{"names":["parking"],"surrogates":"\uD83C\uDD7F️","unicodeVersion":5.2},{"names":["elevator"],"surrogates":"\uD83D\uDED7","unicodeVersion":13},{"names":["u7a7a"],"surrogates":"\uD83C\uDE33","unicodeVersion":6},{"names":["sa"],"surrogates":"\uD83C\uDE02️","unicodeVersion":6},{"names":["passport_control"],"surrogates":"\uD83D\uDEC2","unicodeVersion":6},{"names":["customs"],"surrogates":"\uD83D\uDEC3","unicodeVersion":6},{"names":["baggage_claim"],"surrogates":"\uD83D\uDEC4","unicodeVersion":6},{"names":["left_luggage"],"surrogates":"\uD83D\uDEC5","unicodeVersion":6},{"names":["wireless"],"surrogates":"\uD83D\uDEDC","unicodeVersion":15},{"names":["mens","mens_room"],"surrogates":"\uD83D\uDEB9","unicodeVersion":6},{"names":["womens","womens_room"],"surrogates":"\uD83D\uDEBA","unicodeVersion":6},{"names":["baby_symbol"],"surrogates":"\uD83D\uDEBC","unicodeVersion":6},{"names":["restroom"],"surrogates":"\uD83D\uDEBB","unicodeVersion":6},{"names":["put_litter_in_its_place"],"surrogates":"\uD83D\uDEAE","unicodeVersion":6},{"names":["cinema"],"surrogates":"\uD83C\uDFA6","unicodeVersion":6},{"names":["signal_strength","antenna_bars"],"surrogates":"\uD83D\uDCF6","unicodeVersion":6},{"names":["koko"],"surrogates":"\uD83C\uDE01","unicodeVersion":6},{"names":["symbols","input_symbols"],"surrogates":"\uD83D\uDD23","unicodeVersion":6},{"names":["information_source","information"],"surrogates":"ℹ️","unicodeVersion":3},{"names":["abc"],"surrogates":"\uD83D\uDD24","unicodeVersion":6},{"names":["abcd"],"surrogates":"\uD83D\uDD21","unicodeVersion":6},{"names":["capital_abcd"],"surrogates":"\uD83D\uDD20","unicodeVersion":6},{"names":["ng"],"surrogates":"\uD83C\uDD96","unicodeVersion":6},{"names":["ok"],"surrogates":"\uD83C\uDD97","unicodeVersion":6},{"names":["up"],"surrogates":"\uD83C\uDD99","unicodeVersion":6},{"names":["cool"],"surrogates":"\uD83C\uDD92","unicodeVersion":6},{"names":["new"],"surrogates":"\uD83C\uDD95","unicodeVersion":6},{"names":["free"],"surrogates":"\uD83C\uDD93","unicodeVersion":6},{"names":["zero"],"surrogates":"0️⃣","unicodeVersion":3},{"names":["one"],"surrogates":"1️⃣","unicodeVersion":3},{"names":["two"],"surrogates":"2️⃣","unicodeVersion":3},{"names":["three"],"surrogates":"3️⃣","unicodeVersion":3},{"names":["four"],"surrogates":"4️⃣","unicodeVersion":3},{"names":["five"],"surrogates":"5️⃣","unicodeVersion":3},{"names":["six"],"surrogates":"6️⃣","unicodeVersion":3},{"names":["seven"],"surrogates":"7️⃣","unicodeVersion":3},{"names":["eight"],"surrogates":"8️⃣","unicodeVersion":3},{"names":["nine"],"surrogates":"9️⃣","unicodeVersion":3},{"names":["keycap_ten"],"surrogates":"\uD83D\uDD1F","unicodeVersion":6},{"names":["1234","input_numbers"],"surrogates":"\uD83D\uDD22","unicodeVersion":6},{"names":["hash"],"surrogates":"#️⃣","unicodeVersion":3},{"names":["asterisk","keycap_asterisk"],"surrogates":"*️⃣","unicodeVersion":3},{"names":["eject","eject_symbol"],"surrogates":"⏏️","unicodeVersion":4},{"names":["arrow_forward"],"surrogates":"▶️","unicodeVersion":1.1},{"names":["pause_button","double_vertical_bar"],"surrogates":"⏸️","unicodeVersion":7},{"names":["play_pause"],"surrogates":"⏯️","unicodeVersion":6},{"names":["stop_button"],"surrogates":"⏹️","unicodeVersion":7},{"names":["record_button"],"surrogates":"⏺️","unicodeVersion":7},{"names":["track_next","next_track"],"surrogates":"⏭️","unicodeVersion":6},{"names":["track_previous","previous_track"],"surrogates":"⏮️","unicodeVersion":6},{"names":["fast_forward"],"surrogates":"⏩","unicodeVersion":6},{"names":["rewind"],"surrogates":"⏪","unicodeVersion":6},{"names":["arrow_double_up"],"surrogates":"⏫","unicodeVersion":6},{"names":["arrow_double_down"],"surrogates":"⏬","unicodeVersion":6},{"names":["arrow_backward"],"surrogates":"◀️","unicodeVersion":1.1},{"names":["arrow_up_small"],"surrogates":"\uD83D\uDD3C","unicodeVersion":6},{"names":["arrow_down_small"],"surrogates":"\uD83D\uDD3D","unicodeVersion":6},{"names":["arrow_right","right_arrow"],"surrogates":"➡️","unicodeVersion":1.1},{"names":["arrow_left","left_arrow"],"surrogates":"⬅️","unicodeVersion":4},{"names":["arrow_up","up_arrow"],"surrogates":"⬆️","unicodeVersion":4},{"names":["arrow_down","down_arrow"],"surrogates":"⬇️","unicodeVersion":4},{"names":["arrow_upper_right"],"surrogates":"↗️","unicodeVersion":1.1},{"names":["arrow_lower_right"],"surrogates":"↘️","unicodeVersion":1.1},{"names":["arrow_lower_left"],"surrogates":"↙️","unicodeVersion":1.1},{"names":["arrow_upper_left","up_left_arrow"],"surrogates":"↖️","unicodeVersion":1.1},{"names":["arrow_up_down","up_down_arrow"],"surrogates":"↕️","unicodeVersion":1.1},{"names":["left_right_arrow"],"surrogates":"↔️","unicodeVersion":1.1},{"names":["arrow_right_hook"],"surrogates":"↪️","unicodeVersion":1.1},{"names":["leftwards_arrow_with_hook"],"surrogates":"↩️","unicodeVersion":1.1},{"names":["arrow_heading_up"],"surrogates":"⤴️","unicodeVersion":3.2},{"names":["arrow_heading_down"],"surrogates":"⤵️","unicodeVersion":3.2},{"names":["twisted_rightwards_arrows"],"surrogates":"\uD83D\uDD00","unicodeVersion":6},{"names":["repeat"],"surrogates":"\uD83D\uDD01","unicodeVersion":6},{"names":["repeat_one"],"surrogates":"\uD83D\uDD02","unicodeVersion":6},{"names":["arrows_counterclockwise"],"surrogates":"\uD83D\uDD04","unicodeVersion":6},{"names":["arrows_clockwise"],"surrogates":"\uD83D\uDD03","unicodeVersion":6},{"names":["musical_note"],"surrogates":"\uD83C\uDFB5","unicodeVersion":6},{"names":["notes","musical_notes"],"surrogates":"\uD83C\uDFB6","unicodeVersion":6},{"names":["heavy_plus_sign"],"surrogates":"➕","unicodeVersion":6},{"names":["heavy_minus_sign"],"surrogates":"➖","unicodeVersion":6},{"names":["heavy_division_sign"],"surrogates":"➗","unicodeVersion":6},{"names":["heavy_multiplication_x"],"surrogates":"✖️","unicodeVersion":1.1},{"names":["heavy_equals_sign"],"surrogates":"\uD83D\uDFF0","unicodeVersion":14},{"names":["infinity"],"surrogates":"♾️","unicodeVersion":11},{"names":["heavy_dollar_sign"],"surrogates":"\uD83D\uDCB2","unicodeVersion":6},{"names":["currency_exchange"],"surrogates":"\uD83D\uDCB1","unicodeVersion":6},{"names":["tm","trade_mark"],"surrogates":"™️","unicodeVersion":1.1},{"names":["copyright"],"surrogates":"\xa9️","unicodeVersion":1.1},{"names":["registered"],"surrogates":"\xae️","unicodeVersion":1.1},{"names":["wavy_dash"],"surrogates":"〰️","unicodeVersion":1.1},{"names":["curly_loop"],"surrogates":"➰","unicodeVersion":6},{"names":["loop"],"surrogates":"➿","unicodeVersion":6},{"names":["end","end_arrow"],"surrogates":"\uD83D\uDD1A","unicodeVersion":6},{"names":["back","back_arrow"],"surrogates":"\uD83D\uDD19","unicodeVersion":6},{"names":["on","on_arrow"],"surrogates":"\uD83D\uDD1B","unicodeVersion":6},{"names":["top","top_arrow"],"surrogates":"\uD83D\uDD1D","unicodeVersion":6},{"names":["soon","soon_arrow"],"surrogates":"\uD83D\uDD1C","unicodeVersion":6},{"names":["heavy_check_mark","check_mark"],"surrogates":"✔️","unicodeVersion":1.1},{"names":["ballot_box_with_check"],"surrogates":"☑️","unicodeVersion":1.1},{"names":["radio_button"],"surrogates":"\uD83D\uDD18","unicodeVersion":6},{"names":["white_circle"],"surrogates":"⚪","unicodeVersion":4.1},{"names":["black_circle"],"surrogates":"⚫","unicodeVersion":4.1},{"names":["red_circle"],"surrogates":"\uD83D\uDD34","unicodeVersion":6},{"names":["blue_circle"],"surrogates":"\uD83D\uDD35","unicodeVersion":6},{"names":["brown_circle"],"surrogates":"\uD83D\uDFE4","unicodeVersion":12},{"names":["purple_circle"],"surrogates":"\uD83D\uDFE3","unicodeVersion":12},{"names":["green_circle"],"surrogates":"\uD83D\uDFE2","unicodeVersion":12},{"names":["yellow_circle"],"surrogates":"\uD83D\uDFE1","unicodeVersion":12},{"names":["orange_circle"],"surrogates":"\uD83D\uDFE0","unicodeVersion":12},{"names":["small_red_triangle"],"surrogates":"\uD83D\uDD3A","unicodeVersion":6},{"names":["small_red_triangle_down"],"surrogates":"\uD83D\uDD3B","unicodeVersion":6},{"names":["small_orange_diamond"],"surrogates":"\uD83D\uDD38","unicodeVersion":6},{"names":["small_blue_diamond"],"surrogates":"\uD83D\uDD39","unicodeVersion":6},{"names":["large_orange_diamond"],"surrogates":"\uD83D\uDD36","unicodeVersion":6},{"names":["large_blue_diamond"],"surrogates":"\uD83D\uDD37","unicodeVersion":6},{"names":["white_square_button"],"surrogates":"\uD83D\uDD33","unicodeVersion":6},{"names":["black_square_button"],"surrogates":"\uD83D\uDD32","unicodeVersion":6},{"names":["black_small_square"],"surrogates":"▪️","unicodeVersion":1.1},{"names":["white_small_square"],"surrogates":"▫️","unicodeVersion":1.1},{"names":["black_medium_small_square"],"surrogates":"◾","unicodeVersion":3.2},{"names":["white_medium_small_square"],"surrogates":"◽","unicodeVersion":3.2},{"names":["black_medium_square"],"surrogates":"◼️","unicodeVersion":3.2},{"names":["white_medium_square"],"surrogates":"◻️","unicodeVersion":3.2},{"names":["black_large_square"],"surrogates":"⬛","unicodeVersion":5.1},{"names":["white_large_square"],"surrogates":"⬜","unicodeVersion":5.1},{"names":["orange_square"],"surrogates":"\uD83D\uDFE7","unicodeVersion":12},{"names":["blue_square"],"surrogates":"\uD83D\uDFE6","unicodeVersion":12},{"names":["red_square"],"surrogates":"\uD83D\uDFE5","unicodeVersion":12},{"names":["brown_square"],"surrogates":"\uD83D\uDFEB","unicodeVersion":12},{"names":["purple_square"],"surrogates":"\uD83D\uDFEA","unicodeVersion":12},{"names":["green_square"],"surrogates":"\uD83D\uDFE9","unicodeVersion":12},{"names":["yellow_square"],"surrogates":"\uD83D\uDFE8","unicodeVersion":12},{"names":["speaker"],"surrogates":"\uD83D\uDD08","unicodeVersion":6},{"names":["mute","muted_speaker"],"surrogates":"\uD83D\uDD07","unicodeVersion":6},{"names":["sound"],"surrogates":"\uD83D\uDD09","unicodeVersion":6},{"names":["loud_sound"],"surrogates":"\uD83D\uDD0A","unicodeVersion":6},{"names":["bell"],"surrogates":"\uD83D\uDD14","unicodeVersion":6},{"names":["no_bell"],"surrogates":"\uD83D\uDD15","unicodeVersion":6},{"names":["mega","megaphone"],"surrogates":"\uD83D\uDCE3","unicodeVersion":6},{"names":["loudspeaker"],"surrogates":"\uD83D\uDCE2","unicodeVersion":6},{"names":["speech_left","left_speech_bubble"],"surrogates":"\uD83D\uDDE8️","unicodeVersion":7},{"names":["eye_in_speech_bubble"],"surrogates":"\uD83D\uDC41‍\uD83D\uDDE8","unicodeVersion":7},{"names":["speech_balloon"],"surrogates":"\uD83D\uDCAC","unicodeVersion":6},{"names":["thought_balloon"],"surrogates":"\uD83D\uDCAD","unicodeVersion":6},{"names":["anger_right","right_anger_bubble"],"surrogates":"\uD83D\uDDEF️","unicodeVersion":7},{"names":["spades","spade_suit"],"surrogates":"♠️","unicodeVersion":1.1},{"names":["clubs","club_suit"],"surrogates":"♣️","unicodeVersion":1.1},{"names":["hearts","heart_suit"],"surrogates":"♥️","unicodeVersion":1.1},{"names":["diamonds","diamond_suit"],"surrogates":"♦️","unicodeVersion":1.1},{"names":["black_joker","joker"],"surrogates":"\uD83C\uDCCF","unicodeVersion":6},{"names":["flower_playing_cards"],"surrogates":"\uD83C\uDFB4","unicodeVersion":6},{"names":["mahjong"],"surrogates":"\uD83C\uDC04","unicodeVersion":5.1},{"names":["clock1","one_oclock"],"surrogates":"\uD83D\uDD50","unicodeVersion":6},{"names":["clock2","two_oclock"],"surrogates":"\uD83D\uDD51","unicodeVersion":6},{"names":["clock3","three_oclock"],"surrogates":"\uD83D\uDD52","unicodeVersion":6},{"names":["clock4","four_oclock"],"surrogates":"\uD83D\uDD53","unicodeVersion":6},{"names":["clock5","five_oclock"],"surrogates":"\uD83D\uDD54","unicodeVersion":6},{"names":["clock6","six_oclock"],"surrogates":"\uD83D\uDD55","unicodeVersion":6},{"names":["clock7","seven_oclock"],"surrogates":"\uD83D\uDD56","unicodeVersion":6},{"names":["clock8","eight_oclock"],"surrogates":"\uD83D\uDD57","unicodeVersion":6},{"names":["clock9","nine_oclock"],"surrogates":"\uD83D\uDD58","unicodeVersion":6},{"names":["clock10","ten_oclock"],"surrogates":"\uD83D\uDD59","unicodeVersion":6},{"names":["clock11","eleven_oclock"],"surrogates":"\uD83D\uDD5A","unicodeVersion":6},{"names":["clock12","twelve_oclock"],"surrogates":"\uD83D\uDD5B","unicodeVersion":6},{"names":["clock130","one_thirty"],"surrogates":"\uD83D\uDD5C","unicodeVersion":6},{"names":["clock230","two_thirty"],"surrogates":"\uD83D\uDD5D","unicodeVersion":6},{"names":["clock330","three_thirty"],"surrogates":"\uD83D\uDD5E","unicodeVersion":6},{"names":["clock430","four_thirty"],"surrogates":"\uD83D\uDD5F","unicodeVersion":6},{"names":["clock530","five_thirty"],"surrogates":"\uD83D\uDD60","unicodeVersion":6},{"names":["clock630","six_thirty"],"surrogates":"\uD83D\uDD61","unicodeVersion":6},{"names":["clock730","seven_thirty"],"surrogates":"\uD83D\uDD62","unicodeVersion":6},{"names":["clock830","eight_thirty"],"surrogates":"\uD83D\uDD63","unicodeVersion":6},{"names":["clock930","nine_thirty"],"surrogates":"\uD83D\uDD64","unicodeVersion":6},{"names":["clock1030","ten_thirty"],"surrogates":"\uD83D\uDD65","unicodeVersion":6},{"names":["clock1130","eleven_thirty"],"surrogates":"\uD83D\uDD66","unicodeVersion":6},{"names":["clock1230","twelve_thirty"],"surrogates":"\uD83D\uDD67","unicodeVersion":6},{"names":["female_sign"],"surrogates":"♀️","unicodeVersion":1.1},{"names":["male_sign"],"surrogates":"♂️","unicodeVersion":1.1},{"names":["transgender_symbol"],"surrogates":"⚧","unicodeVersion":13},{"names":["medical_symbol"],"surrogates":"⚕️","unicodeVersion":4.1},{"names":["regional_indicator_z"],"surrogates":"\uD83C\uDDFF","unicodeVersion":6},{"names":["regional_indicator_y"],"surrogates":"\uD83C\uDDFE","unicodeVersion":6},{"names":["regional_indicator_x"],"surrogates":"\uD83C\uDDFD","unicodeVersion":6},{"names":["regional_indicator_w"],"surrogates":"\uD83C\uDDFC","unicodeVersion":6},{"names":["regional_indicator_v"],"surrogates":"\uD83C\uDDFB","unicodeVersion":6},{"names":["regional_indicator_u"],"surrogates":"\uD83C\uDDFA","unicodeVersion":6},{"names":["regional_indicator_t"],"surrogates":"\uD83C\uDDF9","unicodeVersion":6},{"names":["regional_indicator_s"],"surrogates":"\uD83C\uDDF8","unicodeVersion":6},{"names":["regional_indicator_r"],"surrogates":"\uD83C\uDDF7","unicodeVersion":6},{"names":["regional_indicator_q"],"surrogates":"\uD83C\uDDF6","unicodeVersion":6},{"names":["regional_indicator_p"],"surrogates":"\uD83C\uDDF5","unicodeVersion":6},{"names":["regional_indicator_o"],"surrogates":"\uD83C\uDDF4","unicodeVersion":6},{"names":["regional_indicator_n"],"surrogates":"\uD83C\uDDF3","unicodeVersion":6},{"names":["regional_indicator_m"],"surrogates":"\uD83C\uDDF2","unicodeVersion":6},{"names":["regional_indicator_l"],"surrogates":"\uD83C\uDDF1","unicodeVersion":6},{"names":["regional_indicator_k"],"surrogates":"\uD83C\uDDF0","unicodeVersion":6},{"names":["regional_indicator_j"],"surrogates":"\uD83C\uDDEF","unicodeVersion":6},{"names":["regional_indicator_i"],"surrogates":"\uD83C\uDDEE","unicodeVersion":6},{"names":["regional_indicator_h"],"surrogates":"\uD83C\uDDED","unicodeVersion":6},{"names":["regional_indicator_g"],"surrogates":"\uD83C\uDDEC","unicodeVersion":6},{"names":["regional_indicator_f"],"surrogates":"\uD83C\uDDEB","unicodeVersion":6},{"names":["regional_indicator_e"],"surrogates":"\uD83C\uDDEA","unicodeVersion":6},{"names":["regional_indicator_d"],"surrogates":"\uD83C\uDDE9","unicodeVersion":6},{"names":["regional_indicator_c"],"surrogates":"\uD83C\uDDE8","unicodeVersion":6},{"names":["regional_indicator_b"],"surrogates":"\uD83C\uDDE7","unicodeVersion":6},{"names":["regional_indicator_a"],"surrogates":"\uD83C\uDDE6","unicodeVersion":6}],"flags":[{"names":["flag_white"],"surrogates":"\uD83C\uDFF3️","unicodeVersion":7},{"names":["flag_black"],"surrogates":"\uD83C\uDFF4","unicodeVersion":7},{"names":["pirate_flag"],"surrogates":"\uD83C\uDFF4‍☠️","unicodeVersion":11},{"names":["checkered_flag"],"surrogates":"\uD83C\uDFC1","unicodeVersion":6},{"names":["triangular_flag_on_post"],"surrogates":"\uD83D\uDEA9","unicodeVersion":6},{"names":["rainbow_flag","gay_pride_flag"],"surrogates":"\uD83C\uDFF3️‍\uD83C\uDF08","unicodeVersion":7},{"names":["transgender_flag"],"surrogates":"\uD83C\uDFF3️‍⚧️","unicodeVersion":13},{"names":["united_nations"],"surrogates":"\uD83C\uDDFA\uD83C\uDDF3","unicodeVersion":6},{"names":["flag_af"],"surrogates":"\uD83C\uDDE6\uD83C\uDDEB","unicodeVersion":6},{"names":["flag_ax"],"surrogates":"\uD83C\uDDE6\uD83C\uDDFD","unicodeVersion":6},{"names":["flag_al"],"surrogates":"\uD83C\uDDE6\uD83C\uDDF1","unicodeVersion":6},{"names":["flag_dz"],"surrogates":"\uD83C\uDDE9\uD83C\uDDFF","unicodeVersion":6},{"names":["flag_as"],"surrogates":"\uD83C\uDDE6\uD83C\uDDF8","unicodeVersion":6},{"names":["flag_ad"],"surrogates":"\uD83C\uDDE6\uD83C\uDDE9","unicodeVersion":6},{"names":["flag_ao"],"surrogates":"\uD83C\uDDE6\uD83C\uDDF4","unicodeVersion":6},{"names":["flag_ai"],"surrogates":"\uD83C\uDDE6\uD83C\uDDEE","unicodeVersion":6},{"names":["flag_aq"],"surrogates":"\uD83C\uDDE6\uD83C\uDDF6","unicodeVersion":6},{"names":["flag_ag"],"surrogates":"\uD83C\uDDE6\uD83C\uDDEC","unicodeVersion":6},{"names":["flag_ar"],"surrogates":"\uD83C\uDDE6\uD83C\uDDF7","unicodeVersion":6},{"names":["flag_am"],"surrogates":"\uD83C\uDDE6\uD83C\uDDF2","unicodeVersion":6},{"names":["flag_aw"],"surrogates":"\uD83C\uDDE6\uD83C\uDDFC","unicodeVersion":6},{"names":["flag_au"],"surrogates":"\uD83C\uDDE6\uD83C\uDDFA","unicodeVersion":6},{"names":["flag_at"],"surrogates":"\uD83C\uDDE6\uD83C\uDDF9","unicodeVersion":6},{"names":["flag_az"],"surrogates":"\uD83C\uDDE6\uD83C\uDDFF","unicodeVersion":6},{"names":["flag_bs"],"surrogates":"\uD83C\uDDE7\uD83C\uDDF8","unicodeVersion":6},{"names":["flag_bh"],"surrogates":"\uD83C\uDDE7\uD83C\uDDED","unicodeVersion":6},{"names":["flag_bd"],"surrogates":"\uD83C\uDDE7\uD83C\uDDE9","unicodeVersion":6},{"names":["flag_bb"],"surrogates":"\uD83C\uDDE7\uD83C\uDDE7","unicodeVersion":6},{"names":["flag_by"],"surrogates":"\uD83C\uDDE7\uD83C\uDDFE","unicodeVersion":6},{"names":["flag_be"],"surrogates":"\uD83C\uDDE7\uD83C\uDDEA","unicodeVersion":6},{"names":["flag_bz"],"surrogates":"\uD83C\uDDE7\uD83C\uDDFF","unicodeVersion":6},{"names":["flag_bj"],"surrogates":"\uD83C\uDDE7\uD83C\uDDEF","unicodeVersion":6},{"names":["flag_bm"],"surrogates":"\uD83C\uDDE7\uD83C\uDDF2","unicodeVersion":6},{"names":["flag_bt"],"surrogates":"\uD83C\uDDE7\uD83C\uDDF9","unicodeVersion":6},{"names":["flag_bo"],"surrogates":"\uD83C\uDDE7\uD83C\uDDF4","unicodeVersion":6},{"names":["flag_ba"],"surrogates":"\uD83C\uDDE7\uD83C\uDDE6","unicodeVersion":6},{"names":["flag_bw"],"surrogates":"\uD83C\uDDE7\uD83C\uDDFC","unicodeVersion":6},{"names":["flag_br"],"surrogates":"\uD83C\uDDE7\uD83C\uDDF7","unicodeVersion":6},{"names":["flag_io"],"surrogates":"\uD83C\uDDEE\uD83C\uDDF4","unicodeVersion":6},{"names":["flag_vg"],"surrogates":"\uD83C\uDDFB\uD83C\uDDEC","unicodeVersion":6},{"names":["flag_bn"],"surrogates":"\uD83C\uDDE7\uD83C\uDDF3","unicodeVersion":6},{"names":["flag_bg"],"surrogates":"\uD83C\uDDE7\uD83C\uDDEC","unicodeVersion":6},{"names":["flag_bf"],"surrogates":"\uD83C\uDDE7\uD83C\uDDEB","unicodeVersion":6},{"names":["flag_bi"],"surrogates":"\uD83C\uDDE7\uD83C\uDDEE","unicodeVersion":6},{"names":["flag_kh"],"surrogates":"\uD83C\uDDF0\uD83C\uDDED","unicodeVersion":6},{"names":["flag_cm"],"surrogates":"\uD83C\uDDE8\uD83C\uDDF2","unicodeVersion":6},{"names":["flag_ca"],"surrogates":"\uD83C\uDDE8\uD83C\uDDE6","unicodeVersion":6},{"names":["flag_ic"],"surrogates":"\uD83C\uDDEE\uD83C\uDDE8","unicodeVersion":6},{"names":["flag_cv"],"surrogates":"\uD83C\uDDE8\uD83C\uDDFB","unicodeVersion":6},{"names":["flag_bq"],"surrogates":"\uD83C\uDDE7\uD83C\uDDF6","unicodeVersion":6},{"names":["flag_ky"],"surrogates":"\uD83C\uDDF0\uD83C\uDDFE","unicodeVersion":6},{"names":["flag_cf"],"surrogates":"\uD83C\uDDE8\uD83C\uDDEB","unicodeVersion":6},{"names":["flag_td"],"surrogates":"\uD83C\uDDF9\uD83C\uDDE9","unicodeVersion":6},{"names":["flag_cl"],"surrogates":"\uD83C\uDDE8\uD83C\uDDF1","unicodeVersion":6},{"names":["flag_cn"],"surrogates":"\uD83C\uDDE8\uD83C\uDDF3","unicodeVersion":6},{"names":["flag_cx"],"surrogates":"\uD83C\uDDE8\uD83C\uDDFD","unicodeVersion":6},{"names":["flag_cc"],"surrogates":"\uD83C\uDDE8\uD83C\uDDE8","unicodeVersion":6},{"names":["flag_co"],"surrogates":"\uD83C\uDDE8\uD83C\uDDF4","unicodeVersion":6},{"names":["flag_km"],"surrogates":"\uD83C\uDDF0\uD83C\uDDF2","unicodeVersion":6},{"names":["flag_cg"],"surrogates":"\uD83C\uDDE8\uD83C\uDDEC","unicodeVersion":6},{"names":["flag_cd"],"surrogates":"\uD83C\uDDE8\uD83C\uDDE9","unicodeVersion":6},{"names":["flag_ck"],"surrogates":"\uD83C\uDDE8\uD83C\uDDF0","unicodeVersion":6},{"names":["flag_cr"],"surrogates":"\uD83C\uDDE8\uD83C\uDDF7","unicodeVersion":6},{"names":["flag_ci"],"surrogates":"\uD83C\uDDE8\uD83C\uDDEE","unicodeVersion":6},{"names":["flag_hr"],"surrogates":"\uD83C\uDDED\uD83C\uDDF7","unicodeVersion":6},{"names":["flag_cu"],"surrogates":"\uD83C\uDDE8\uD83C\uDDFA","unicodeVersion":6},{"names":["flag_cw"],"surrogates":"\uD83C\uDDE8\uD83C\uDDFC","unicodeVersion":6},{"names":["flag_cy"],"surrogates":"\uD83C\uDDE8\uD83C\uDDFE","unicodeVersion":6},{"names":["flag_cz"],"surrogates":"\uD83C\uDDE8\uD83C\uDDFF","unicodeVersion":6},{"names":["flag_dk"],"surrogates":"\uD83C\uDDE9\uD83C\uDDF0","unicodeVersion":6},{"names":["flag_dj"],"surrogates":"\uD83C\uDDE9\uD83C\uDDEF","unicodeVersion":6},{"names":["flag_dm"],"surrogates":"\uD83C\uDDE9\uD83C\uDDF2","unicodeVersion":6},{"names":["flag_do"],"surrogates":"\uD83C\uDDE9\uD83C\uDDF4","unicodeVersion":6},{"names":["flag_ec"],"surrogates":"\uD83C\uDDEA\uD83C\uDDE8","unicodeVersion":6},{"names":["flag_eg"],"surrogates":"\uD83C\uDDEA\uD83C\uDDEC","unicodeVersion":6},{"names":["flag_sv"],"surrogates":"\uD83C\uDDF8\uD83C\uDDFB","unicodeVersion":6},{"names":["flag_gq"],"surrogates":"\uD83C\uDDEC\uD83C\uDDF6","unicodeVersion":6},{"names":["flag_er"],"surrogates":"\uD83C\uDDEA\uD83C\uDDF7","unicodeVersion":6},{"names":["flag_ee"],"surrogates":"\uD83C\uDDEA\uD83C\uDDEA","unicodeVersion":6},{"names":["flag_et"],"surrogates":"\uD83C\uDDEA\uD83C\uDDF9","unicodeVersion":6},{"names":["flag_eu"],"surrogates":"\uD83C\uDDEA\uD83C\uDDFA","unicodeVersion":6},{"names":["flag_fk"],"surrogates":"\uD83C\uDDEB\uD83C\uDDF0","unicodeVersion":6},{"names":["flag_fo"],"surrogates":"\uD83C\uDDEB\uD83C\uDDF4","unicodeVersion":6},{"names":["flag_fj"],"surrogates":"\uD83C\uDDEB\uD83C\uDDEF","unicodeVersion":6},{"names":["flag_fi"],"surrogates":"\uD83C\uDDEB\uD83C\uDDEE","unicodeVersion":6},{"names":["flag_fr"],"surrogates":"\uD83C\uDDEB\uD83C\uDDF7","unicodeVersion":6},{"names":["flag_gf"],"surrogates":"\uD83C\uDDEC\uD83C\uDDEB","unicodeVersion":6},{"names":["flag_pf"],"surrogates":"\uD83C\uDDF5\uD83C\uDDEB","unicodeVersion":6},{"names":["flag_tf"],"surrogates":"\uD83C\uDDF9\uD83C\uDDEB","unicodeVersion":6},{"names":["flag_ga"],"surrogates":"\uD83C\uDDEC\uD83C\uDDE6","unicodeVersion":6},{"names":["flag_gm"],"surrogates":"\uD83C\uDDEC\uD83C\uDDF2","unicodeVersion":6},{"names":["flag_ge"],"surrogates":"\uD83C\uDDEC\uD83C\uDDEA","unicodeVersion":6},{"names":["flag_de"],"surrogates":"\uD83C\uDDE9\uD83C\uDDEA","unicodeVersion":6},{"names":["flag_gh"],"surrogates":"\uD83C\uDDEC\uD83C\uDDED","unicodeVersion":6},{"names":["flag_gi"],"surrogates":"\uD83C\uDDEC\uD83C\uDDEE","unicodeVersion":6},{"names":["flag_gr"],"surrogates":"\uD83C\uDDEC\uD83C\uDDF7","unicodeVersion":6},{"names":["flag_gl"],"surrogates":"\uD83C\uDDEC\uD83C\uDDF1","unicodeVersion":6},{"names":["flag_gd"],"surrogates":"\uD83C\uDDEC\uD83C\uDDE9","unicodeVersion":6},{"names":["flag_gp"],"surrogates":"\uD83C\uDDEC\uD83C\uDDF5","unicodeVersion":6},{"names":["flag_gu"],"surrogates":"\uD83C\uDDEC\uD83C\uDDFA","unicodeVersion":6},{"names":["flag_gt"],"surrogates":"\uD83C\uDDEC\uD83C\uDDF9","unicodeVersion":6},{"names":["flag_gg"],"surrogates":"\uD83C\uDDEC\uD83C\uDDEC","unicodeVersion":6},{"names":["flag_gn"],"surrogates":"\uD83C\uDDEC\uD83C\uDDF3","unicodeVersion":6},{"names":["flag_gw"],"surrogates":"\uD83C\uDDEC\uD83C\uDDFC","unicodeVersion":6},{"names":["flag_gy"],"surrogates":"\uD83C\uDDEC\uD83C\uDDFE","unicodeVersion":6},{"names":["flag_ht"],"surrogates":"\uD83C\uDDED\uD83C\uDDF9","unicodeVersion":6},{"names":["flag_hn"],"surrogates":"\uD83C\uDDED\uD83C\uDDF3","unicodeVersion":6},{"names":["flag_hk"],"surrogates":"\uD83C\uDDED\uD83C\uDDF0","unicodeVersion":6},{"names":["flag_hu"],"surrogates":"\uD83C\uDDED\uD83C\uDDFA","unicodeVersion":6},{"names":["flag_is"],"surrogates":"\uD83C\uDDEE\uD83C\uDDF8","unicodeVersion":6},{"names":["flag_in"],"surrogates":"\uD83C\uDDEE\uD83C\uDDF3","unicodeVersion":6},{"names":["flag_id"],"surrogates":"\uD83C\uDDEE\uD83C\uDDE9","unicodeVersion":6},{"names":["flag_ir"],"surrogates":"\uD83C\uDDEE\uD83C\uDDF7","unicodeVersion":6},{"names":["flag_iq"],"surrogates":"\uD83C\uDDEE\uD83C\uDDF6","unicodeVersion":6},{"names":["flag_ie"],"surrogates":"\uD83C\uDDEE\uD83C\uDDEA","unicodeVersion":6},{"names":["flag_im"],"surrogates":"\uD83C\uDDEE\uD83C\uDDF2","unicodeVersion":6},{"names":["flag_il"],"surrogates":"\uD83C\uDDEE\uD83C\uDDF1","unicodeVersion":6},{"names":["flag_it"],"surrogates":"\uD83C\uDDEE\uD83C\uDDF9","unicodeVersion":6},{"names":["flag_jm"],"surrogates":"\uD83C\uDDEF\uD83C\uDDF2","unicodeVersion":6},{"names":["flag_jp"],"surrogates":"\uD83C\uDDEF\uD83C\uDDF5","unicodeVersion":6},{"names":["crossed_flags"],"surrogates":"\uD83C\uDF8C","unicodeVersion":6},{"names":["flag_je"],"surrogates":"\uD83C\uDDEF\uD83C\uDDEA","unicodeVersion":6},{"names":["flag_jo"],"surrogates":"\uD83C\uDDEF\uD83C\uDDF4","unicodeVersion":6},{"names":["flag_kz"],"surrogates":"\uD83C\uDDF0\uD83C\uDDFF","unicodeVersion":6},{"names":["flag_ke"],"surrogates":"\uD83C\uDDF0\uD83C\uDDEA","unicodeVersion":6},{"names":["flag_ki"],"surrogates":"\uD83C\uDDF0\uD83C\uDDEE","unicodeVersion":6},{"names":["flag_xk"],"surrogates":"\uD83C\uDDFD\uD83C\uDDF0","unicodeVersion":6},{"names":["flag_kw"],"surrogates":"\uD83C\uDDF0\uD83C\uDDFC","unicodeVersion":6},{"names":["flag_kg"],"surrogates":"\uD83C\uDDF0\uD83C\uDDEC","unicodeVersion":6},{"names":["flag_la"],"surrogates":"\uD83C\uDDF1\uD83C\uDDE6","unicodeVersion":6},{"names":["flag_lv"],"surrogates":"\uD83C\uDDF1\uD83C\uDDFB","unicodeVersion":6},{"names":["flag_lb"],"surrogates":"\uD83C\uDDF1\uD83C\uDDE7","unicodeVersion":6},{"names":["flag_ls"],"surrogates":"\uD83C\uDDF1\uD83C\uDDF8","unicodeVersion":6},{"names":["flag_lr"],"surrogates":"\uD83C\uDDF1\uD83C\uDDF7","unicodeVersion":6},{"names":["flag_ly"],"surrogates":"\uD83C\uDDF1\uD83C\uDDFE","unicodeVersion":6},{"names":["flag_li"],"surrogates":"\uD83C\uDDF1\uD83C\uDDEE","unicodeVersion":6},{"names":["flag_lt"],"surrogates":"\uD83C\uDDF1\uD83C\uDDF9","unicodeVersion":6},{"names":["flag_lu"],"surrogates":"\uD83C\uDDF1\uD83C\uDDFA","unicodeVersion":6},{"names":["flag_mo"],"surrogates":"\uD83C\uDDF2\uD83C\uDDF4","unicodeVersion":6},{"names":["flag_mk"],"surrogates":"\uD83C\uDDF2\uD83C\uDDF0","unicodeVersion":6},{"names":["flag_mg"],"surrogates":"\uD83C\uDDF2\uD83C\uDDEC","unicodeVersion":6},{"names":["flag_mw"],"surrogates":"\uD83C\uDDF2\uD83C\uDDFC","unicodeVersion":6},{"names":["flag_my"],"surrogates":"\uD83C\uDDF2\uD83C\uDDFE","unicodeVersion":6},{"names":["flag_mv"],"surrogates":"\uD83C\uDDF2\uD83C\uDDFB","unicodeVersion":6},{"names":["flag_ml"],"surrogates":"\uD83C\uDDF2\uD83C\uDDF1","unicodeVersion":6},{"names":["flag_mt"],"surrogates":"\uD83C\uDDF2\uD83C\uDDF9","unicodeVersion":6},{"names":["flag_mh"],"surrogates":"\uD83C\uDDF2\uD83C\uDDED","unicodeVersion":6},{"names":["flag_mq"],"surrogates":"\uD83C\uDDF2\uD83C\uDDF6","unicodeVersion":6},{"names":["flag_mr"],"surrogates":"\uD83C\uDDF2\uD83C\uDDF7","unicodeVersion":6},{"names":["flag_mu"],"surrogates":"\uD83C\uDDF2\uD83C\uDDFA","unicodeVersion":6},{"names":["flag_yt"],"surrogates":"\uD83C\uDDFE\uD83C\uDDF9","unicodeVersion":6},{"names":["flag_mx"],"surrogates":"\uD83C\uDDF2\uD83C\uDDFD","unicodeVersion":6},{"names":["flag_fm"],"surrogates":"\uD83C\uDDEB\uD83C\uDDF2","unicodeVersion":6},{"names":["flag_md"],"surrogates":"\uD83C\uDDF2\uD83C\uDDE9","unicodeVersion":6},{"names":["flag_mc"],"surrogates":"\uD83C\uDDF2\uD83C\uDDE8","unicodeVersion":6},{"names":["flag_mn"],"surrogates":"\uD83C\uDDF2\uD83C\uDDF3","unicodeVersion":6},{"names":["flag_me"],"surrogates":"\uD83C\uDDF2\uD83C\uDDEA","unicodeVersion":6},{"names":["flag_ms"],"surrogates":"\uD83C\uDDF2\uD83C\uDDF8","unicodeVersion":6},{"names":["flag_ma"],"surrogates":"\uD83C\uDDF2\uD83C\uDDE6","unicodeVersion":6},{"names":["flag_mz"],"surrogates":"\uD83C\uDDF2\uD83C\uDDFF","unicodeVersion":6},{"names":["flag_mm"],"surrogates":"\uD83C\uDDF2\uD83C\uDDF2","unicodeVersion":6},{"names":["flag_na"],"surrogates":"\uD83C\uDDF3\uD83C\uDDE6","unicodeVersion":6},{"names":["flag_nr"],"surrogates":"\uD83C\uDDF3\uD83C\uDDF7","unicodeVersion":6},{"names":["flag_np"],"surrogates":"\uD83C\uDDF3\uD83C\uDDF5","unicodeVersion":6},{"names":["flag_nl"],"surrogates":"\uD83C\uDDF3\uD83C\uDDF1","unicodeVersion":6},{"names":["flag_nc"],"surrogates":"\uD83C\uDDF3\uD83C\uDDE8","unicodeVersion":6},{"names":["flag_nz"],"surrogates":"\uD83C\uDDF3\uD83C\uDDFF","unicodeVersion":6},{"names":["flag_ni"],"surrogates":"\uD83C\uDDF3\uD83C\uDDEE","unicodeVersion":6},{"names":["flag_ne"],"surrogates":"\uD83C\uDDF3\uD83C\uDDEA","unicodeVersion":6},{"names":["flag_ng"],"surrogates":"\uD83C\uDDF3\uD83C\uDDEC","unicodeVersion":6},{"names":["flag_nu"],"surrogates":"\uD83C\uDDF3\uD83C\uDDFA","unicodeVersion":6},{"names":["flag_nf"],"surrogates":"\uD83C\uDDF3\uD83C\uDDEB","unicodeVersion":6},{"names":["flag_kp"],"surrogates":"\uD83C\uDDF0\uD83C\uDDF5","unicodeVersion":6},{"names":["flag_mp"],"surrogates":"\uD83C\uDDF2\uD83C\uDDF5","unicodeVersion":6},{"names":["flag_no"],"surrogates":"\uD83C\uDDF3\uD83C\uDDF4","unicodeVersion":6},{"names":["flag_om"],"surrogates":"\uD83C\uDDF4\uD83C\uDDF2","unicodeVersion":6},{"names":["flag_pk"],"surrogates":"\uD83C\uDDF5\uD83C\uDDF0","unicodeVersion":6},{"names":["flag_pw"],"surrogates":"\uD83C\uDDF5\uD83C\uDDFC","unicodeVersion":6},{"names":["flag_ps"],"surrogates":"\uD83C\uDDF5\uD83C\uDDF8","unicodeVersion":6},{"names":["flag_pa"],"surrogates":"\uD83C\uDDF5\uD83C\uDDE6","unicodeVersion":6},{"names":["flag_pg"],"surrogates":"\uD83C\uDDF5\uD83C\uDDEC","unicodeVersion":6},{"names":["flag_py"],"surrogates":"\uD83C\uDDF5\uD83C\uDDFE","unicodeVersion":6},{"names":["flag_pe"],"surrogates":"\uD83C\uDDF5\uD83C\uDDEA","unicodeVersion":6},{"names":["flag_ph"],"surrogates":"\uD83C\uDDF5\uD83C\uDDED","unicodeVersion":6},{"names":["flag_pn"],"surrogates":"\uD83C\uDDF5\uD83C\uDDF3","unicodeVersion":6},{"names":["flag_pl"],"surrogates":"\uD83C\uDDF5\uD83C\uDDF1","unicodeVersion":6},{"names":["flag_pt"],"surrogates":"\uD83C\uDDF5\uD83C\uDDF9","unicodeVersion":6},{"names":["flag_pr"],"surrogates":"\uD83C\uDDF5\uD83C\uDDF7","unicodeVersion":6},{"names":["flag_qa"],"surrogates":"\uD83C\uDDF6\uD83C\uDDE6","unicodeVersion":6},{"names":["flag_re"],"surrogates":"\uD83C\uDDF7\uD83C\uDDEA","unicodeVersion":6},{"names":["flag_ro"],"surrogates":"\uD83C\uDDF7\uD83C\uDDF4","unicodeVersion":6},{"names":["flag_ru"],"surrogates":"\uD83C\uDDF7\uD83C\uDDFA","unicodeVersion":6},{"names":["flag_rw"],"surrogates":"\uD83C\uDDF7\uD83C\uDDFC","unicodeVersion":6},{"names":["flag_ws"],"surrogates":"\uD83C\uDDFC\uD83C\uDDF8","unicodeVersion":6},{"names":["flag_sm"],"surrogates":"\uD83C\uDDF8\uD83C\uDDF2","unicodeVersion":6},{"names":["flag_st"],"surrogates":"\uD83C\uDDF8\uD83C\uDDF9","unicodeVersion":6},{"names":["flag_sa"],"surrogates":"\uD83C\uDDF8\uD83C\uDDE6","unicodeVersion":6},{"names":["flag_sn"],"surrogates":"\uD83C\uDDF8\uD83C\uDDF3","unicodeVersion":6},{"names":["flag_rs"],"surrogates":"\uD83C\uDDF7\uD83C\uDDF8","unicodeVersion":6},{"names":["flag_sc"],"surrogates":"\uD83C\uDDF8\uD83C\uDDE8","unicodeVersion":6},{"names":["flag_sl"],"surrogates":"\uD83C\uDDF8\uD83C\uDDF1","unicodeVersion":6},{"names":["flag_sg"],"surrogates":"\uD83C\uDDF8\uD83C\uDDEC","unicodeVersion":6},{"names":["flag_sx"],"surrogates":"\uD83C\uDDF8\uD83C\uDDFD","unicodeVersion":6},{"names":["flag_sk"],"surrogates":"\uD83C\uDDF8\uD83C\uDDF0","unicodeVersion":6},{"names":["flag_si"],"surrogates":"\uD83C\uDDF8\uD83C\uDDEE","unicodeVersion":6},{"names":["flag_gs"],"surrogates":"\uD83C\uDDEC\uD83C\uDDF8","unicodeVersion":6},{"names":["flag_sb"],"surrogates":"\uD83C\uDDF8\uD83C\uDDE7","unicodeVersion":6},{"names":["flag_so"],"surrogates":"\uD83C\uDDF8\uD83C\uDDF4","unicodeVersion":6},{"names":["flag_za"],"surrogates":"\uD83C\uDDFF\uD83C\uDDE6","unicodeVersion":6},{"names":["flag_kr"],"surrogates":"\uD83C\uDDF0\uD83C\uDDF7","unicodeVersion":6},{"names":["flag_ss"],"surrogates":"\uD83C\uDDF8\uD83C\uDDF8","unicodeVersion":6},{"names":["flag_es"],"surrogates":"\uD83C\uDDEA\uD83C\uDDF8","unicodeVersion":6},{"names":["flag_lk"],"surrogates":"\uD83C\uDDF1\uD83C\uDDF0","unicodeVersion":6},{"names":["flag_bl"],"surrogates":"\uD83C\uDDE7\uD83C\uDDF1","unicodeVersion":6},{"names":["flag_sh"],"surrogates":"\uD83C\uDDF8\uD83C\uDDED","unicodeVersion":6},{"names":["flag_kn"],"surrogates":"\uD83C\uDDF0\uD83C\uDDF3","unicodeVersion":6},{"names":["flag_lc"],"surrogates":"\uD83C\uDDF1\uD83C\uDDE8","unicodeVersion":6},{"names":["flag_pm"],"surrogates":"\uD83C\uDDF5\uD83C\uDDF2","unicodeVersion":6},{"names":["flag_vc"],"surrogates":"\uD83C\uDDFB\uD83C\uDDE8","unicodeVersion":6},{"names":["flag_sd"],"surrogates":"\uD83C\uDDF8\uD83C\uDDE9","unicodeVersion":6},{"names":["flag_sr"],"surrogates":"\uD83C\uDDF8\uD83C\uDDF7","unicodeVersion":6},{"names":["flag_sz"],"surrogates":"\uD83C\uDDF8\uD83C\uDDFF","unicodeVersion":6},{"names":["flag_se"],"surrogates":"\uD83C\uDDF8\uD83C\uDDEA","unicodeVersion":6},{"names":["flag_ch"],"surrogates":"\uD83C\uDDE8\uD83C\uDDED","unicodeVersion":6},{"names":["flag_sy"],"surrogates":"\uD83C\uDDF8\uD83C\uDDFE","unicodeVersion":6},{"names":["flag_tw"],"surrogates":"\uD83C\uDDF9\uD83C\uDDFC","unicodeVersion":6},{"names":["flag_tj"],"surrogates":"\uD83C\uDDF9\uD83C\uDDEF","unicodeVersion":6},{"names":["flag_tz"],"surrogates":"\uD83C\uDDF9\uD83C\uDDFF","unicodeVersion":6},{"names":["flag_th"],"surrogates":"\uD83C\uDDF9\uD83C\uDDED","unicodeVersion":6},{"names":["flag_tl"],"surrogates":"\uD83C\uDDF9\uD83C\uDDF1","unicodeVersion":6},{"names":["flag_tg"],"surrogates":"\uD83C\uDDF9\uD83C\uDDEC","unicodeVersion":6},{"names":["flag_tk"],"surrogates":"\uD83C\uDDF9\uD83C\uDDF0","unicodeVersion":6},{"names":["flag_to"],"surrogates":"\uD83C\uDDF9\uD83C\uDDF4","unicodeVersion":6},{"names":["flag_tt"],"surrogates":"\uD83C\uDDF9\uD83C\uDDF9","unicodeVersion":6},{"names":["flag_tn"],"surrogates":"\uD83C\uDDF9\uD83C\uDDF3","unicodeVersion":6},{"names":["flag_tr"],"surrogates":"\uD83C\uDDF9\uD83C\uDDF7","unicodeVersion":6},{"names":["flag_tm"],"surrogates":"\uD83C\uDDF9\uD83C\uDDF2","unicodeVersion":6},{"names":["flag_tc"],"surrogates":"\uD83C\uDDF9\uD83C\uDDE8","unicodeVersion":6},{"names":["flag_vi"],"surrogates":"\uD83C\uDDFB\uD83C\uDDEE","unicodeVersion":6},{"names":["flag_tv"],"surrogates":"\uD83C\uDDF9\uD83C\uDDFB","unicodeVersion":6},{"names":["flag_ug"],"surrogates":"\uD83C\uDDFA\uD83C\uDDEC","unicodeVersion":6},{"names":["flag_ua"],"surrogates":"\uD83C\uDDFA\uD83C\uDDE6","unicodeVersion":6},{"names":["flag_ae"],"surrogates":"\uD83C\uDDE6\uD83C\uDDEA","unicodeVersion":6},{"names":["flag_gb"],"surrogates":"\uD83C\uDDEC\uD83C\uDDE7","unicodeVersion":6},{"names":["england"],"surrogates":"\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67\uDB40\uDC7F","unicodeVersion":7},{"names":["scotland"],"surrogates":"\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74\uDB40\uDC7F","unicodeVersion":7},{"names":["wales"],"surrogates":"\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73\uDB40\uDC7F","unicodeVersion":7},{"names":["flag_us"],"surrogates":"\uD83C\uDDFA\uD83C\uDDF8","unicodeVersion":6},{"names":["flag_uy"],"surrogates":"\uD83C\uDDFA\uD83C\uDDFE","unicodeVersion":6},{"names":["flag_uz"],"surrogates":"\uD83C\uDDFA\uD83C\uDDFF","unicodeVersion":6},{"names":["flag_vu"],"surrogates":"\uD83C\uDDFB\uD83C\uDDFA","unicodeVersion":6},{"names":["flag_va"],"surrogates":"\uD83C\uDDFB\uD83C\uDDE6","unicodeVersion":6},{"names":["flag_ve"],"surrogates":"\uD83C\uDDFB\uD83C\uDDEA","unicodeVersion":6},{"names":["flag_vn"],"surrogates":"\uD83C\uDDFB\uD83C\uDDF3","unicodeVersion":6},{"names":["flag_wf"],"surrogates":"\uD83C\uDDFC\uD83C\uDDEB","unicodeVersion":6},{"names":["flag_eh"],"surrogates":"\uD83C\uDDEA\uD83C\uDDED","unicodeVersion":6},{"names":["flag_ye"],"surrogates":"\uD83C\uDDFE\uD83C\uDDEA","unicodeVersion":6},{"names":["flag_zm"],"surrogates":"\uD83C\uDDFF\uD83C\uDDF2","unicodeVersion":6},{"names":["flag_zw"],"surrogates":"\uD83C\uDDFF\uD83C\uDDFC","unicodeVersion":6},{"names":["flag_ac"],"surrogates":"\uD83C\uDDE6\uD83C\uDDE8","unicodeVersion":6},{"names":["flag_bv"],"surrogates":"\uD83C\uDDE7\uD83C\uDDFB","unicodeVersion":6},{"names":["flag_cp"],"surrogates":"\uD83C\uDDE8\uD83C\uDDF5","unicodeVersion":6},{"names":["flag_ea"],"surrogates":"\uD83C\uDDEA\uD83C\uDDE6","unicodeVersion":6},{"names":["flag_dg"],"surrogates":"\uD83C\uDDE9\uD83C\uDDEC","unicodeVersion":6},{"names":["flag_hm"],"surrogates":"\uD83C\uDDED\uD83C\uDDF2","unicodeVersion":6},{"names":["flag_mf"],"surrogates":"\uD83C\uDDF2\uD83C\uDDEB","unicodeVersion":6},{"names":["flag_sj"],"surrogates":"\uD83C\uDDF8\uD83C\uDDEF","unicodeVersion":6},{"names":["flag_ta"],"surrogates":"\uD83C\uDDF9\uD83C\uDDE6","unicodeVersion":6},{"names":["flag_um"],"surrogates":"\uD83C\uDDFA\uD83C\uDDF2","unicodeVersion":6}]}'
      );
    },
    821445: function (e, t, n) {
      "use strict";
      e.exports = JSON.parse(
        '["7z","ade","adp","arj","apk","application","appx","appxbundle","asx","bas","bat","cab","cer","chm","cmd","cnt","cpl","crt","csh","deb","der","diagcab","dll","dmg","docm","dotm","ex","ex_","exe","fxp","gadget","grp","gz","hlp","hpj","hta","htc","inf","ins","ipa","iso","isp","its","jar","jnlp","jse","ksh","lib","lnk","mad","maf","mag","mam","maq","mar","mas","mat","mau","mav","maw","mcf","mda","mdb","mde","mdt","mdw","mdz","msc","msh","msh1","msh1xml","msh2","msh2xml","mshxml","msi","msix","msixbundle","msp","mst","msu","nsh","ops","osd","pcd","pif","pkg","pl","plg","potm","ppam","ppsm","pptm","prf","prg","printerexport","ps1","ps1xml","ps2","ps2xml","psc1","psc2","psd1","psdm1","pst","py","pyc","pyo","pyw","pyz","pyzw","rar","reg","rpm","scf","scr","sct","shb","shs","sldm","sys","theme","tmp","url","vb","vbe","vbp","vbs","vhd","vhdx","vsmacros","vsw","vxd","webpnp","ws","wsc","wsf","wsh","xbap","xlam","xll","xlsm","xltm","xnk","z","zip"]'
      );
    },
    720872: function (e, t, n) {
      "use strict";
      let s;
      n.r(t),
        n.d(t, {
          PasswordResetResult: function () {
            return i;
          },
          default: function () {
            return N;
          },
        }),
        n("177593");
      var i,
        r,
        a = n("682797"),
        o = n("691457"),
        u = n("454836"),
        d = n("986329"),
        l = n("312916"),
        f = n("253842"),
        _ = n("682385"),
        c = n("841869"),
        g = n("422557"),
        m = n("521588"),
        h = n("262047"),
        E = n("662378"),
        p = n("334990"),
        v = n("654937"),
        y = n("467006"),
        I = n("999114");
      let T = new c.default("AuthenticationActionCreators"),
        S = null;
      function C(e) {
        let t = { type: "LOGOUT", ...e };
        l.default.dispatch(t).catch(e => {
          throw (
            (T.error("Error while dispatching LOGOUT", e),
            window.DiscordErrors?.softCrash(e),
            e)
          );
        });
      }
      function A() {
        let e =
          arguments.length > 0 && void 0 !== arguments[0]
            ? arguments[0]
            : y.Routes.DEFAULT_LOGGED_OUT;
        C();
        let t = (0, g.getRootNavigationRefIfInExperiment)();
        null != e &&
          (null != t
            ? (v.default.popAll(), t.navigate("auth"))
            : (0, m.transitionTo)(e));
      }
      ((r = i || (i = {})).MFA = "MFA"), (r.SUCCESS = "SUCCESS");
      var N = {
        startSession(e) {
          l.default.wait(() => {
            l.default.dispatch({ type: "START_SESSION", token: e });
          });
        },
        setLoginCredentials(e, t) {
          l.default.dispatch({
            type: "SET_LOGIN_CREDENTIALS",
            login: e,
            password: t,
          });
        },
        login(e) {
          let {
            login: t,
            password: n,
            loginCode: s,
            undelete: i,
            source: r,
            giftCodeSKUId: o,
            invite: u,
            isMultiAccount: d,
          } = e;
          l.default.dispatch({
            type: "LOGIN",
            login: t,
            loginMethod:
              null != s && "" !== s
                ? y.LoginMethods.LOGIN_CODE
                : y.LoginMethods.PASSWORD,
          }),
            this.setLoginCredentials(t, n ?? s ?? void 0),
            p.default
              .post({
                url: y.Endpoints.LOGIN,
                body: {
                  login: t,
                  password: n,
                  undelete: i,
                  login_code: s,
                  login_source: r,
                  gift_code_sku_id: o,
                },
                retries: 2,
                oldFormErrors: !0,
                trackedActionData: {
                  event: a.NetworkActionNames.USER_LOGIN,
                  properties: { invite_code: u?.code, is_multi_account: d },
                },
                ...(d ? { headers: { authorization: "" } } : {}),
              })
              .then(
                e => {
                  let {
                    body: {
                      mfa: t,
                      sms: n,
                      webauthn: s,
                      ticket: i,
                      token: r,
                      backup: a,
                      user_id: o,
                      required_actions: u,
                      totp: f,
                    },
                  } = e;
                  l.default.dispatch({
                    type: "LOGIN_ATTEMPTED",
                    user_id: o,
                    required_actions: u,
                  }),
                    t
                      ? l.default.dispatch({
                          type: "LOGIN_MFA_STEP",
                          ticket: i,
                          sms: n,
                          webauthn: s,
                          totp: f,
                          backup: a,
                        })
                      : d
                        ? this.switchAccountToken(r)
                        : l.default.dispatch({
                            type: "LOGIN_SUCCESS",
                            token: r,
                          });
                },
                e => {
                  if (null != e.body && e.body?.suspended_user_token != null) {
                    l.default.dispatch({
                      type: "LOGIN_SUSPENDED_USER",
                      suspendedUserToken: e.body?.suspended_user_token,
                    });
                    return;
                  }
                  let s = e.body?.code;
                  s === y.AbortCodes.ACCOUNT_SCHEDULED_FOR_DELETION &&
                  null != n &&
                  "" !== n
                    ? l.default.dispatch({
                        type: "LOGIN_ACCOUNT_SCHEDULED_FOR_DELETION",
                        credentials: { login: t, password: n },
                      })
                    : s === y.AbortCodes.ACCOUNT_DISABLED &&
                        null != n &&
                        "" !== n
                      ? l.default.dispatch({
                          type: "LOGIN_ACCOUNT_DISABLED",
                          credentials: { login: t, password: n },
                        })
                      : s === y.AbortCodes.PHONE_VERIFICATION_REQUIRED
                        ? l.default.dispatch({
                            type: "LOGIN_PHONE_IP_AUTHORIZATION_REQUIRED",
                          })
                        : l.default.dispatch({
                            type: "LOGIN_FAILURE",
                            error: new f.V6OrEarlierAPIError(e),
                          });
                }
              );
        },
        loginMFAv2(e) {
          let t,
            {
              code: n,
              ticket: s,
              source: i,
              giftCodeSKUId: r,
              isMultiAccount: o,
              mfaType: u,
            } = e;
          return (
            (t =
              "webauthn" === u
                ? y.Endpoints.LOGIN_WEBAUTHN
                : "sms" === u
                  ? y.Endpoints.LOGIN_SMS
                  : y.Endpoints.LOGIN_MFA),
            p.default
              .post({
                url: t,
                body: {
                  code: n,
                  ticket: s,
                  login_source: i,
                  gift_code_sku_id: r,
                },
                retries: 2,
                oldFormErrors: !0,
                trackedActionData: {
                  event: a.NetworkActionNames.USER_LOGIN_MFA,
                },
              })
              .then(e => {
                o
                  ? this.switchAccountToken(e.body.token)
                  : l.default.dispatch({
                      type: "LOGIN_SUCCESS",
                      token: e.body.token,
                    });
              })
              .catch(e => {
                if (null != e.body && null != e.body.suspended_user_token) {
                  l.default.dispatch({
                    type: "LOGIN_SUSPENDED_USER",
                    suspendedUserToken: e.body.suspended_user_token,
                  });
                  return;
                }
                if (e.body?.code === y.AbortCodes.MFA_INVALID_CODE)
                  throw Error(e.body.message);
                throw e;
              })
          );
        },
        loginToken(e) {
          let t =
            !(arguments.length > 1) || void 0 === arguments[1] || arguments[1];
          return (
            l.default.dispatch({ type: "LOGIN" }),
            new Promise(n => {
              setImmediate(() => {
                l.default.dispatch({ type: "LOGIN_SUCCESS", token: e }),
                  t && this.startSession(e),
                  n();
              });
            })
          );
        },
        loginReset(e) {
          l.default.dispatch({ type: "LOGIN_RESET", isMultiAccount: e });
        },
        loginStatusReset() {
          l.default.dispatch({ type: "LOGIN_STATUS_RESET" });
        },
        logoutInternal(e) {
          C(e);
        },
        logout() {
          let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : y.Routes.DEFAULT_LOGGED_OUT,
            t = arguments.length > 1 ? arguments[1] : void 0;
          return p.default
            .post({
              url: y.Endpoints.LOGOUT,
              body: {
                provider: (0, I.getDevicePushProvider)(),
                token: d.default.get(y.DEVICE_TOKEN),
                voip_provider: I.DEVICE_PUSH_VOIP_PROVIDER,
                voip_token: d.default.get(y.DEVICE_VOIP_TOKEN),
              },
              oldFormErrors: !0,
              trackedActionData: { event: a.NetworkActionNames.USER_LOGOUT },
              ...(null != t && {
                headers: { authorization: o.default.getToken(t) ?? "" },
              }),
            })
            .finally(() => {
              (null == t || t === h.default.getId()) && A(e);
            });
        },
        switchAccountToken(e) {
          let t =
              !(arguments.length > 1) ||
              void 0 === arguments[1] ||
              arguments[1],
            n = h.default.getToken();
          T.log("Switching accounts", {
            wasLoggedIn: null != n,
            tokenHasChanged: e !== n,
          }),
            C({ isSwitchingAccount: !0 });
          let s = this.loginToken(e, !0).then(() => {
            let t = h.default.getToken();
            T.log("Switched accounts finished", { isCorrectToken: e === t });
          });
          return t && (0, m.transitionTo)(y.Routes.ME), s;
        },
        verifySSOToken() {
          let e =
            arguments.length > 0 && void 0 !== arguments[0]
              ? arguments[0]
              : y.Routes.DEFAULT_LOGGED_OUT;
          return u.default
            .get({ url: y.Endpoints.ME, oldFormErrors: !0 })
            .catch(() => A(e));
        },
        verify(e) {
          null != e
            ? p.default
                .post({
                  url: y.Endpoints.VERIFY,
                  body: { token: e },
                  oldFormErrors: !0,
                  trackedActionData: {
                    event: a.NetworkActionNames.USER_VERIFY,
                  },
                })
                .then(
                  e => {
                    l.default.dispatch({
                      type: "LOGIN_SUCCESS",
                      token: e.body.token,
                    }),
                      l.default.dispatch({
                        type: "VERIFY_SUCCESS",
                        verifyingUserId: e.body.user_id,
                      });
                  },
                  e =>
                    l.default.dispatch({
                      type: "VERIFY_FAILURE",
                      errors: e.body,
                    })
                )
            : l.default.dispatch({ type: "VERIFY_FAILURE", errors: {} });
        },
        async authorizePayment(e) {
          try {
            await p.default.post({
              url: y.Endpoints.AUTHORIZE_PAYMENT,
              body: { token: e },
              oldFormErrors: !0,
              trackedActionData: {
                event: a.NetworkActionNames.AUTHORIZE_PAYMENT,
              },
            }),
              l.default.dispatch({ type: "VERIFY_SUCCESS" });
          } catch (e) {
            l.default.dispatch({ type: "VERIFY_FAILURE", errors: {} });
          }
        },
        async authorizeIPAddress(e) {
          if (null == e) {
            l.default.dispatch({ type: "VERIFY_FAILURE", errors: {} });
            return;
          }
          try {
            await p.default.post({
              url: y.Endpoints.AUTHORIZE_IP,
              body: { token: e },
              oldFormErrors: !0,
              trackedActionData: { event: a.NetworkActionNames.AUTHORIZE_IP },
            }),
              l.default.dispatch({ type: "VERIFY_SUCCESS" });
          } catch (e) {
            l.default.dispatch({ type: "VERIFY_FAILURE", errors: {} });
          }
        },
        verifyResend: () =>
          p.default.post({
            url: y.Endpoints.VERIFY_RESEND,
            oldFormErrors: !0,
            trackedActionData: {
              event: a.NetworkActionNames.USER_VERIFY_RESEND,
            },
          }),
        async resetPassword(e, t, n) {
          l.default.dispatch({ type: "LOGIN" });
          let s = { token: e, password: t, source: n },
            i = d.default.get(y.DEVICE_TOKEN),
            r = (0, I.getDevicePushProvider)();
          null != r && null != i && ((s.push_provider = r), (s.push_token = i));
          let o = d.default.get(y.DEVICE_VOIP_TOKEN);
          null != I.DEVICE_PUSH_VOIP_PROVIDER &&
            null != o &&
            ((s.push_voip_provider = I.DEVICE_PUSH_VOIP_PROVIDER),
            (s.push_voip_token = o));
          try {
            let {
              body: {
                mfa: e,
                sms: t,
                webauthn: n,
                ticket: i,
                token: r,
                backup: o,
                totp: u,
              },
            } = await p.default.post({
              url: y.Endpoints.RESET_PASSWORD,
              body: s,
              oldFormErrors: !0,
              trackedActionData: {
                event: a.NetworkActionNames.USER_RESET_PASSWORD,
              },
            });
            return {
              result: e ? "MFA" : "SUCCESS",
              sms: t,
              webauthn: n,
              ticket: i,
              token: r,
              backup: o,
              totp: u,
            };
          } catch (e) {
            throw (
              (l.default.dispatch({
                type: "LOGIN_FAILURE",
                error: new f.V6OrEarlierAPIError(e),
              }),
              e)
            );
          }
        },
        async resetPasswordMFAv2(e) {
          let {
            method: t,
            code: n,
            ticket: s,
            password: i,
            token: r,
            source: o,
          } = e;
          return (
            l.default.dispatch({ type: "LOGIN_MFA" }),
            (
              await p.default.post({
                url: y.Endpoints.RESET_PASSWORD,
                body: {
                  code: n,
                  ticket: s,
                  password: i,
                  token: r,
                  source: o,
                  method: t,
                },
                oldFormErrors: !0,
                trackedActionData: {
                  event: a.NetworkActionNames.USER_RESET_PASSWORD,
                  properties: { mfa: !0 },
                },
              })
            ).body.token
          );
        },
        async forgotPassword(e) {
          this.setLoginCredentials(e),
            l.default.dispatch({ type: "FORGOT_PASSWORD_REQUEST" });
          try {
            await p.default.post({
              url: y.Endpoints.FORGOT_PASSWORD,
              body: { login: e },
              oldFormErrors: !0,
              trackedActionData: {
                event: a.NetworkActionNames.FORGOT_PASSWORD,
              },
            }),
              l.default.dispatch({ type: "FORGOT_PASSWORD_SENT" });
          } catch (t) {
            let e = new f.V6OrEarlierAPIError(t);
            throw (
              (e.code === y.AbortCodes.PHONE_VERIFICATION_REQUIRED
                ? l.default.dispatch({
                    type: "LOGIN_PASSWORD_RECOVERY_PHONE_VERIFICATION",
                  })
                : l.default.dispatch({ type: "LOGIN_FAILURE", error: e }),
              t)
            );
          }
        },
        setFingerprint(e) {
          l.default.dispatch({ type: "FINGERPRINT", fingerprint: e });
        },
        getExperiments(e) {
          l.default.dispatch({
            type: "EXPERIMENTS_FETCH",
            withGuildExperiments: e,
          });
        },
        getLocationMetadata: () =>
          null != S
            ? S
            : (clearTimeout(s),
              (s = setTimeout(() => {
                l.default.dispatch({
                  type: "SET_CONSENT_REQUIRED",
                  consentRequired: !0,
                });
              }, 5e3)),
              (S = u.default
                .get({
                  url: y.Endpoints.AUTH_LOCATION_METADATA,
                  retries: 2,
                  oldFormErrors: !0,
                })
                .then(
                  e => {
                    if (
                      (clearTimeout(s),
                      null == E.default.getAuthenticationConsentRequired())
                    ) {
                      let t = e?.body?.consent_required ?? !0;
                      l.default.dispatch({
                        type: "SET_CONSENT_REQUIRED",
                        consentRequired: t,
                      });
                    }
                    if (
                      (l.default.dispatch({
                        type: "SET_LOCATION_METADATA",
                        countryCode: e?.body?.country_code ?? void 0,
                      }),
                      (S = null),
                      e?.body?.promotional_email_opt_in != null)
                    ) {
                      let t = e.body.promotional_email_opt_in;
                      (0, _.setPromoEmailConsentState)({
                        required: t.required,
                        checked: t.pre_checked,
                        preChecked: t.pre_checked,
                      });
                    }
                  },
                  () => {
                    clearTimeout(s),
                      l.default.dispatch({
                        type: "SET_CONSENT_REQUIRED",
                        consentRequired: !0,
                      }),
                      (S = null);
                  }
                ))),
        closeSuspendedUser() {
          l.default.dispatch({ type: "CLOSE_SUSPENDED_USER" });
        },
      };
    },
    242677: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          cancelSubscription: function () {
            return eo;
          },
          changePaymentSource: function () {
            return ec;
          },
          changeSubscriptionCurrency: function () {
            return e_;
          },
          clearPaymentAuthenticationError: function () {
            return eh;
          },
          clearRemovePaymentSourceError: function () {
            return em;
          },
          clearUpdatePaymentSourceError: function () {
            return eg;
          },
          confirmCardPaymentSource: function () {
            return w;
          },
          confirmEPS: function () {
            return M;
          },
          confirmIdeal: function () {
            return V;
          },
          confirmPrzelewy24: function () {
            return L;
          },
          confirmSofort: function () {
            return k;
          },
          createAdyenPaymentSourceToken: function () {
            return O;
          },
          createAdyenPrepaidPaymentSource: function () {
            return B;
          },
          createAdyenVaultablePaymentSource: function () {
            return H;
          },
          createBraintreePaymentSource: function () {
            return G;
          },
          createCardToken: function () {
            return b;
          },
          createPaymentRequestPaymentSource: function () {
            return U;
          },
          createPaymentSource: function () {
            return R;
          },
          createPaymentSourceToken: function () {
            return Y;
          },
          createStripePaymentSource: function () {
            return F;
          },
          createStripePaymentSourceToken: function () {
            return x;
          },
          createSubscription: function () {
            return Q;
          },
          deletePaymentSource: function () {
            return T;
          },
          deleteRenewalMutation: function () {
            return eu;
          },
          dispatchConfirmationError: function () {
            return P;
          },
          fetchIpCountryCode: function () {
            return eI;
          },
          fetchLocalizedPromo: function () {
            return eT;
          },
          fetchMostRecentSubscription: function () {
            return X;
          },
          fetchPayment: function () {
            return K;
          },
          fetchPaymentSources: function () {
            return j;
          },
          fetchPayments: function () {
            return W;
          },
          fetchSubscriptions: function () {
            return z;
          },
          getNitroAffinity: function () {
            return q;
          },
          getPerksRelevance: function () {
            return $;
          },
          handleConfirmation: function () {
            return J;
          },
          payInvoiceManually: function () {
            return Z;
          },
          paymentIntentSucceeded: function () {
            return es;
          },
          popupBridgeCallback: function () {
            return ey;
          },
          popupBridgeState: function () {
            return ev;
          },
          redirectedPaymentSucceeded: function () {
            return en;
          },
          refundPayment: function () {
            return ep;
          },
          resetPaymentIntentId: function () {
            return eS;
          },
          resetSubscriptionStore: function () {
            return eC;
          },
          resubscribeToSubscription: function () {
            return el;
          },
          startBrowserCheckout: function () {
            return eA;
          },
          updatePaymentSource: function () {
            return S;
          },
          updateSubscription: function () {
            return ed;
          },
          upgradeSubscription: function () {
            return ef;
          },
          validatePaymentSourceBillingAddress: function () {
            return D;
          },
          voidPendingPayment: function () {
            return eE;
          },
        });
      var s = n("452079"),
        i = n("512722"),
        r = n.n(i),
        a = n("454836"),
        o = n("312916"),
        u = n("253842"),
        d = n("479852"),
        l = n("372671"),
        f = n("535291"),
        _ = n("579914"),
        c = n("328470"),
        g = n("743102"),
        m = n("488867"),
        h = n("28692"),
        E = n("5336"),
        p = n("467006"),
        v = n("38404"),
        y = n("477815"),
        I = n("30175");
      async function T(e) {
        o.default.dispatch({ type: "BILLING_PAYMENT_SOURCE_REMOVE_START" });
        try {
          await a.default.delete({
            url: p.Endpoints.BILLING_PAYMENT_SOURCE(e),
            oldFormErrors: !0,
          }),
            o.default.dispatch({
              type: "BILLING_PAYMENT_SOURCE_REMOVE_SUCCESS",
              id: e,
            });
        } catch (t) {
          let e = new u.BillingError(t);
          throw (
            (o.default.dispatch({
              type: "BILLING_PAYMENT_SOURCE_REMOVE_FAIL",
              error: e,
            }),
            e)
          );
        }
      }
      async function S(e, t) {
        o.default.dispatch({ type: "BILLING_PAYMENT_SOURCE_UPDATE_START" });
        try {
          let {
              billingAddress: { line1: n, line2: s, postalCode: i, ...r },
            } = t,
            u = await a.default.patch({
              url: p.Endpoints.BILLING_PAYMENT_SOURCE(e),
              body: {
                billing_address: { ...r, line_1: n, line_2: s, postal_code: i },
                expires_month: t.expiresMonth,
                expires_year: t.expiresYear,
                default: t.isDefault,
              },
            }),
            d = l.default.createFromServer(u.body);
          o.default.dispatch({
            type: "BILLING_PAYMENT_SOURCE_UPDATE_SUCCESS",
            paymentSource: d,
          });
        } catch (t) {
          let e = (0, d.parseV8BillingAddressSkemaErrorToBillingError)(t);
          throw (
            (o.default.dispatch({
              type: "BILLING_PAYMENT_SOURCE_UPDATE_FAIL",
              error: e,
            }),
            e)
          );
        }
      }
      async function C(e) {
        let { stripe_payment_intent_client_secret: t } = (
          await a.default.get({
            url: p.Endpoints.BILLING_STRIPE_PAYMENT_INTENTS(e),
            oldFormErrors: !0,
          })
        ).body;
        return t;
      }
      async function A(e) {
        let {
          stripe_payment_intent_client_secret: t,
          stripe_payment_intent_payment_method_id: n,
        } = (
          await a.default.get({
            url: p.Endpoints.BILLING_STRIPE_PAYMENT_INTENTS(e),
            oldFormErrors: !0,
          })
        ).body;
        return { clientSecret: t, paymentMethodId: n };
      }
      async function N() {
        return (
          await a.default.post({
            url: p.Endpoints.BILLING_STRIPE_SETUP_INTENT_SECRET,
            oldFormErrors: !0,
          })
        ).body.client_secret;
      }
      async function D(e) {
        try {
          return (
            await a.default.post({
              url: p.Endpoints.BILLING_PAYMENT_SOURCES_VALIDATE_BILLING_ADDRESS,
              body: {
                billing_address: {
                  name: e.name,
                  line_1: e.line1,
                  line_2: e.line2,
                  city: e.city,
                  state: e.state,
                  postal_code: e.postalCode,
                  country: e.country,
                  email: e.email,
                },
              },
            })
          ).body.token;
        } catch (t) {
          let e = (0, d.parseV8BillingAddressSkemaErrorToBillingError)(t);
          throw (
            (o.default.dispatch({
              type: "BILLING_PAYMENT_SOURCE_CREATE_FAIL",
              error: e,
            }),
            e)
          );
        }
      }
      function O(e) {
        return p.VAULTABLE_PAYMENT_SOURCES.has(e.type)
          ? null
          : JSON.stringify({
              type: y.ADYEN_PAYMENT_SOURCES.get(e.type) ?? null,
            });
      }
      async function R(e, t, n, s) {
        o.default.dispatch({ type: "BILLING_PAYMENT_SOURCE_CREATE_START" });
        try {
          let i = await a.default.post({
              url: p.Endpoints.BILLING_PAYMENT_SOURCES,
              query: { location: s.analyticsLocation },
              body: {
                payment_gateway: e,
                token: t,
                billing_address: {
                  name: n.name,
                  line_1: n.line1,
                  line_2: n.line2,
                  city: n.city,
                  state: n.state,
                  postal_code: n.postalCode,
                  country: n.country,
                  email: n.email,
                },
                billing_address_token: s.billingAddressToken,
                bank: s.bank,
                return_url: s.returnUrl,
              },
            }),
            r = l.default.createFromServer(i.body);
          return (
            o.default.dispatch({
              type: "BILLING_PAYMENT_SOURCE_CREATE_SUCCESS",
              paymentSource: r,
            }),
            r
          );
        } catch (t) {
          let e = (0, d.parseV8BillingAddressSkemaErrorToBillingError)(t);
          throw (
            ((function (e, t) {
              t?.body?.adyen_redirect_url &&
                (e.fields.adyen_redirect_url = t?.body?.adyen_redirect_url);
            })(e, t),
            e.code !== d.ErrorCodes.CONFIRMATION_REQUIRED &&
              o.default.dispatch({
                type: "BILLING_PAYMENT_SOURCE_CREATE_FAIL",
                error: e,
              }),
            e)
          );
        }
      }
      function P(e) {
        var t;
        let n,
          s,
          i =
            !(arguments.length > 1) || void 0 === arguments[1] || arguments[1],
          r = I.default.Messages.PAYMENT_METHOD_CONFIRMATION_ERROR;
        if (((t = e), v.StripeErrorTypes.includes(t.type))) {
          let t = null != e.message ? `${r}: ${e.message}` : r,
            a = {
              failure_message: t,
              error_type: e.type,
              failure_code: e.code,
              failure_sub_code: e.decline_code,
              payment_source_type: e.payment_method?.type,
            };
          if (((s = a), "card_error" === e.type))
            c.default.track(p.AnalyticEvents.PAYMENT_SOURCE_CREATION_FAILED, {
              ...a,
              stacktrace: Error().stack,
            }),
              (i = !1);
          n = new u.BillingError(t);
        } else
          (s = {
            failure_message: (n = new u.BillingError(
              "string" == typeof e ? r : e
            )).message,
            status_code: n.code,
          }),
            429 === n.code && (i = !1);
        o.default.dispatch({
          type: "BILLING_PAYMENT_SOURCE_CREATE_FAIL",
          error: n,
        });
        let a = Error("string" == typeof e ? e : n.message);
        return i && (0, g.captureBillingException)(a, { extra: s }), a;
      }
      async function b(e, t) {
        if (null == e || null == t) throw P("Stripe or elements not loaded");
        let n = t.getElement(s.CardNumberElement);
        if (null == n) throw P("Unable to load card elements from Stripe");
        let { token: i, error: r } = await e.createToken(n);
        if (null != r) throw P(r);
        if (null == i)
          throw P("token not available with successful stripe call");
        return i.id;
      }
      async function M(e, t, n, s) {
        if (null == e) throw P("Stripe not loaded");
        if (null == t) throw P("Bank required for EPS");
        let {
          email: i,
          name: r,
          line1: a,
          line2: u,
          city: d,
          state: l,
          postalCode: f,
          country: _,
        } = n;
        if (null == r) throw P("Name required for EPS");
        o.default.dispatch({ type: "BILLING_PAYMENT_SOURCE_CREATE_START" });
        let c = await D(n),
          { paymentMethod: g, error: m } = await e.createPaymentMethod({
            type: "eps",
            eps: { bank: t },
            billing_details: {
              address: {
                line1: a,
                line2: u,
                city: d,
                state: l,
                postal_code: f,
                country: _,
              },
              name: r,
              email: i,
            },
          });
        if (null != m) throw P(m);
        if (null == g)
          throw P("paymentMethod not available with successful stripe call");
        return R(p.PaymentGateways.STRIPE, g.id, n, {
          billingAddressToken: c,
          analyticsLocation: s,
          bank: t,
        });
      }
      async function V(e, t, n, s) {
        if (null == e) throw P("Stripe not loaded");
        if (null == t) throw P("Bank required for iDEAL");
        let {
          email: i,
          name: r,
          line1: a,
          line2: u,
          city: d,
          state: l,
          postalCode: f,
          country: _,
        } = n;
        if (null == r) throw P("Name required for iDEAL");
        o.default.dispatch({ type: "BILLING_PAYMENT_SOURCE_CREATE_START" });
        let c = await D(n),
          { paymentMethod: g, error: m } = await e.createPaymentMethod({
            type: "ideal",
            ideal: { bank: t },
            billing_details: {
              address: {
                line1: a,
                line2: u,
                city: d,
                state: l,
                postal_code: f,
                country: _,
              },
              name: r,
              email: i,
            },
          });
        if (null != m) throw P(m);
        if (null == g)
          throw P("paymentMethod not available with successful stripe call");
        return R(p.PaymentGateways.STRIPE, g.id, n, {
          billingAddressToken: c,
          analyticsLocation: s,
          bank: t,
        });
      }
      async function L(e, t, n, s) {
        if (null == e) throw P("Stripe not loaded");
        let {
          email: i,
          name: r,
          line1: a,
          line2: u,
          city: d,
          state: l,
          postalCode: f,
          country: _,
        } = n;
        if (null == i) throw P("Email required for Przelewy24");
        o.default.dispatch({ type: "BILLING_PAYMENT_SOURCE_CREATE_START" });
        let c = await D(n),
          g = t.p24Bank,
          { paymentMethod: m, error: h } = await e.createPaymentMethod({
            type: "p24",
            p24: { bank: g },
            billing_details: {
              address: {
                line1: a,
                line2: u,
                city: d,
                state: l,
                postal_code: f,
                country: _,
              },
              name: r,
              email: i,
            },
          });
        if (null != h) throw P(h);
        if (null == m)
          throw P("paymentMethod not available with successful stripe call");
        return R(p.PaymentGateways.STRIPE, m.id, n, {
          billingAddressToken: c,
          analyticsLocation: s,
          bank: g,
        });
      }
      async function k(e, t, n) {
        if (null == e) throw P("Stripe not loaded");
        o.default.dispatch({ type: "BILLING_PAYMENT_SOURCE_CREATE_START" });
        let s = await D(t),
          {
            email: i,
            name: r,
            line1: a,
            line2: u,
            city: d,
            state: l,
            postalCode: f,
            country: _,
          } = t,
          { paymentMethod: c, error: g } = await e.createPaymentMethod({
            type: "sofort",
            sofort: { country: _ },
            billing_details: {
              address: {
                line1: a,
                line2: u,
                city: d,
                state: l,
                postal_code: f,
                country: _,
              },
              name: r,
              email: i,
            },
          });
        if (null != g) throw P(g);
        if (null == c)
          throw P("paymentMethod not available with successful stripe call");
        return R(p.PaymentGateways.STRIPE, c.id, t, {
          billingAddressToken: s,
          analyticsLocation: n,
        });
      }
      async function w(e, t, n, s) {
        if (null == e || null == t) throw P("Stripe or token not loaded");
        o.default.dispatch({ type: "BILLING_PAYMENT_SOURCE_CREATE_START" });
        let i = null;
        try {
          i = await N();
        } catch (e) {
          throw P(e);
        }
        let {
            name: a,
            line1: u,
            line2: d,
            city: l,
            state: f,
            postalCode: _,
            country: c,
          } = n,
          g = await D(n),
          { setupIntent: m, error: h } = await e.confirmCardSetup(i, {
            payment_method: {
              card: { token: t },
              billing_details: {
                address: {
                  line1: u,
                  line2: d,
                  city: l,
                  state: f,
                  postal_code: _,
                  country: c,
                },
                name: a,
              },
            },
          });
        if (null != h) throw P(h);
        if (m?.payment_method == null)
          throw P(
            "setupIntent.payment_method not available with successful stripe call"
          );
        return (
          r()(
            "string" == typeof m.payment_method,
            "setupIntent.payment_method expanded not supported"
          ),
          R(p.PaymentGateways.STRIPE, m.payment_method, n, {
            billingAddressToken: g,
            analyticsLocation: s,
          })
        );
      }
      function U(e, t, n) {
        let { token: s, billingAddressInfo: i } = E.parseStripePaymentMethod(e);
        return R(p.PaymentGateways.STRIPE, s, t ?? i, { analyticsLocation: n });
      }
      function G(e, t, n) {
        return R(p.PaymentGateways.BRAINTREE, e, t, { analyticsLocation: n });
      }
      async function F(e, t, n, s) {
        if (null == e) throw P("Stripe not loaded");
        let i = await D(t),
          {
            name: a,
            line1: o,
            line2: u,
            city: d,
            state: l,
            postalCode: f,
            country: _,
          } = t,
          c = y.STRIPE_PAYMENT_SOURCES.get(n);
        r()(null != c, "unsupported payment method type");
        let { paymentMethod: g, error: m } = await e.createPaymentMethod({
          type: c,
          billing_details: {
            address: {
              line1: o,
              line2: u,
              city: d,
              state: l,
              postal_code: f,
              country: _,
            },
            name: a,
          },
        });
        if (null != m) throw P(m);
        if (null == g)
          throw P(
            "stripePaymentMethod not available with successful stripe call"
          );
        return R(p.PaymentGateways.STRIPE, g.id, t, {
          billingAddressToken: i,
          analyticsLocation: s,
        });
      }
      async function B(e, t, n) {
        let s = await D(e),
          i = { type: y.ADYEN_PAYMENT_SOURCES.get(t) };
        return R(p.PaymentGateways.ADYEN, JSON.stringify(i), e, {
          billingAddressToken: s,
          analyticsLocation: n,
        });
      }
      async function H(e, t, n, s) {
        let i = await D(e),
          r = {
            type: y.ADYEN_PAYMENT_SOURCES.get(t),
            ...(s?.paymentMethod ?? {}),
          },
          l = await ev(t),
          f =
            a.default.getAPIBaseURL() +
            p.Endpoints.BILLING_POPUP_BRIDGE_CALLBACK_REDIRECT_PREFIX(
              t,
              l ?? "",
              "success"
            );
        try {
          return {
            paymentSource: await R(
              p.PaymentGateways.ADYEN,
              JSON.stringify(r),
              e,
              { billingAddressToken: i, analyticsLocation: n, returnUrl: f }
            ),
            redirectConfirmation: !1,
          };
        } catch (t) {
          if (t.code !== d.ErrorCodes.CONFIRMATION_REQUIRED)
            throw (
              (o.default.dispatch({
                type: "BILLING_PAYMENT_SOURCE_CREATE_FAIL",
                error: new u.BillingError(
                  `Unable to create payment source token: code: ${t?.code} message: ${t?.message}`,
                  u.BillingError.ErrorCodes.UNKNOWN
                ),
              }),
              t)
            );
          let e = t.fields.adyen_redirect_url;
          if (null == e)
            throw P("redirect url cannot be null on a redirect for adyen.");
          return ei(e), { redirectConfirmation: !0 };
        }
      }
      async function x(e) {
        if (p.VAULTABLE_PAYMENT_SOURCES.has(e.type)) return null;
        let t = await E.getStripe();
        if (null == t)
          throw new u.BillingError(
            "Stripe not loaded",
            u.BillingError.ErrorCodes.UNKNOWN
          );
        let {
            email: n,
            name: s,
            line1: i,
            line2: a,
            city: o,
            state: d,
            postalCode: l,
            country: f,
          } = e.billingAddress,
          _ = {
            billing_details: {
              address: {
                line1: i,
                line2: a,
                city: o,
                state: d,
                postal_code: l,
                country: f,
              },
              name: s,
            },
          };
        switch (e.type) {
          case y.PaymentSourceTypes.GIROPAY:
            _.type = "giropay";
            break;
          case y.PaymentSourceTypes.SOFORT:
            (_.type = "sofort"),
              (_.sofort = { country: f ?? "" }),
              (_.billing_details.email = n);
            break;
          case y.PaymentSourceTypes.BANCONTACT:
            _.type = "bancontact";
            break;
          case y.PaymentSourceTypes.IDEAL:
            if (null == e.bank)
              throw new u.BillingError(
                "iDEAL missing bank information",
                u.BillingError.ErrorCodes.UNKNOWN_PAYMENT_SOURCE
              );
            (_.type = "ideal"), (_.ideal = { bank: e.bank });
            break;
          case y.PaymentSourceTypes.PRZELEWY24:
            if (null == e.bank)
              throw new u.BillingError(
                "p24 missing bank information",
                u.BillingError.ErrorCodes.UNKNOWN_PAYMENT_SOURCE
              );
            (_.type = "p24"),
              (_.p24 = { bank: e.bank }),
              (_.billing_details.email = e.email);
            break;
          case y.PaymentSourceTypes.EPS:
            if (null == e.bank)
              throw new u.BillingError(
                "EPS missing bank information",
                u.BillingError.ErrorCodes.UNKNOWN_PAYMENT_SOURCE
              );
            (_.type = "eps"), (_.eps = { bank: e.bank });
        }
        r()(null != _.type, "unsupported payment method type");
        let { paymentMethod: c, error: g } = await t.createPaymentMethod(_);
        if (null != g || null == c)
          throw new u.BillingError(
            `Unable to create payment source token: code: ${g?.code} message: ${g?.message}`,
            u.BillingError.ErrorCodes.UNKNOWN
          );
        return c.id;
      }
      function Y(e) {
        return p.VAULTABLE_PAYMENT_SOURCES.has(e.type)
          ? null
          : y.ADYEN_PAYMENT_SOURCES.has(e.type)
            ? O(e)
            : x(e);
      }
      async function j() {
        try {
          let e = a.default.get({
            url: p.Endpoints.BILLING_PAYMENT_SOURCES,
            oldFormErrors: !0,
          });
          o.default.wait(() =>
            o.default.dispatch({
              type: "BILLING_PAYMENT_SOURCES_FETCH_START",
              request: e,
            })
          );
          let t = await e;
          return (
            o.default.dispatch({
              type: "BILLING_PAYMENT_SOURCES_FETCH_SUCCESS",
              paymentSources: t.body,
            }),
            t
          );
        } catch (e) {
          throw (
            (o.default.dispatch({ type: "BILLING_PAYMENT_SOURCES_FETCH_FAIL" }),
            e)
          );
        }
      }
      async function K(e) {
        let t = await a.default.get({ url: p.Endpoints.BILLING_PAYMENT(e) });
        return (
          o.default.dispatch({
            type: "BILLING_PAYMENT_FETCH_SUCCESS",
            payment: t.body,
          }),
          t
        );
      }
      async function W() {
        let e =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 10,
          t = arguments.length > 1 ? arguments[1] : void 0;
        o.default.dispatch({ type: "BILLING_PAYMENTS_FETCH_START" });
        try {
          let n = await a.default.get({
            url: p.Endpoints.BILLING_PAYMENTS,
            query: { limit: e, before: t },
            oldFormErrors: !0,
          });
          return (
            o.default.dispatch({
              type: "BILLING_PAYMENTS_FETCH_SUCCESS",
              payments: n.body,
            }),
            n
          );
        } catch (e) {
          throw (
            (o.default.dispatch({ type: "BILLING_PAYMENTS_FETCH_FAIL" }), e)
          );
        }
      }
      async function z() {
        o.default.wait(() => {
          o.default.dispatch({ type: "BILLING_SUBSCRIPTION_FETCH_START" });
        });
        try {
          let e = await a.default.get({
            url: p.Endpoints.BILLING_SUBSCRIPTIONS,
            oldFormErrors: !0,
          });
          if (null == e.body)
            throw new u.BillingError(
              `response body is null, response: ${JSON.stringify(e)}`,
              e.status
            );
          return (
            o.default.dispatch({
              type: "BILLING_SUBSCRIPTION_FETCH_SUCCESS",
              subscriptions: e.body,
            }),
            e
          );
        } catch (e) {
          throw (
            (o.default.dispatch({ type: "BILLING_SUBSCRIPTION_FETCH_FAIL" }), e)
          );
        }
      }
      async function $() {
        o.default.wait(() => {
          o.default.dispatch({ type: "BILLING_PERKS_RELEVANCE_FETCH_START" });
        });
        try {
          let e = await a.default.get(p.Endpoints.BILLING_PERKS_RELEVANCE);
          o.default.dispatch({
            type: "BILLING_PERKS_RELEVANCE_FETCH_SUCCESS",
            res: e.body,
          });
        } catch (e) {
          o.default.dispatch({ type: "BILLING_PERKS_RELEVANCE_FETCH_FAIL" });
        }
      }
      async function q() {
        try {
          let e = await a.default.get(p.Endpoints.BILLING_NITRO_AFFINITY);
          o.default.dispatch({
            type: "BILLING_NITRO_AFFINITY_FETCH_SUCCEEDED",
            res: e.body.map(e => new f.default(e)),
          });
        } finally {
          o.default.dispatch({ type: "BILLING_NITRO_AFFINITY_FETCHED" });
        }
      }
      async function X() {
        o.default.wait(() => {
          o.default.dispatch({
            type: "BILLING_MOST_RECENT_SUBSCRIPTION_FETCH_START",
          });
        });
        try {
          let e = await a.default.get({
            url: p.Endpoints.BILLING_SUBSCRIPTIONS,
            query: {
              include_inactive: !0,
              limit: 2,
              exclude_unpaid_statuses: !0,
              subscription_type: y.SubscriptionTypes.PREMIUM,
            },
            oldFormErrors: !0,
          });
          return (
            e.ok
              ? (o.default.dispatch({
                  type: "BILLING_MOST_RECENT_SUBSCRIPTION_FETCH_SUCCESS",
                  subscription: e.body.length > 0 ? e.body[0] : null,
                }),
                o.default.dispatch({
                  type: "BILLING_PREVIOUS_PREMIUM_SUBSCRIPTION_FETCH_SUCCESS",
                  subscription: e.body.length > 1 ? e.body[1] : null,
                }))
              : o.default.dispatch({
                  type: "BILLING_MOST_RECENT_SUBSCRIPTION_FETCH_FAIL",
                }),
            e
          );
        } catch (e) {
          o.default.dispatch({
            type: "BILLING_MOST_RECENT_SUBSCRIPTION_FETCH_FAIL",
          });
        }
      }
      async function Q(e) {
        let {
          items: t,
          paymentSource: n,
          trialId: s,
          code: i,
          currency: r,
          metadata: l,
          referralCode: f,
          loadId: _,
        } = e;
        o.default.dispatch({ type: "BILLING_SUBSCRIPTION_UPDATE_START" }),
          (t = (0, m.coerceExistingItemsToNewItemInterval)(t));
        let c = null;
        if (null != n && y.ADYEN_PAYMENT_SOURCES.has(n.type)) {
          let e = await ev(n.type);
          c =
            a.default.getAPIBaseURL() +
            p.Endpoints.BILLING_POPUP_BRIDGE_CALLBACK_REDIRECT_PREFIX(
              n.type,
              e ?? "",
              "success"
            );
        }
        try {
          let e = await a.default.post({
            url: p.Endpoints.BILLING_SUBSCRIPTIONS,
            body: {
              items: t.map(e => {
                let { planId: t, quantity: n } = e;
                return { plan_id: t, quantity: n };
              }),
              payment_source_id: null != n ? n.id : null,
              payment_source_token: null != n ? await Y(n) : null,
              trial_id: s,
              return_url: c,
              code: i,
              currency: null != n ? r : y.CurrencyCodes.USD,
              metadata: l,
              gateway_checkout_context: await (0,
              g.createGatewayCheckoutContext)(n),
              purchase_token: (0, h.getPurchaseToken)(),
              referral_code: f,
              load_id: _,
            },
            oldFormErrors: !0,
          });
          return (
            o.default.dispatch({
              type: "BILLING_SUBSCRIPTION_UPDATE_SUCCESS",
              subscription: e.body,
            }),
            { subscription: e.body, redirectConfirmation: !1 }
          );
        } catch (t) {
          let e = t instanceof u.BillingError ? t : new u.BillingError(t);
          if (e.code !== d.ErrorCodes.CONFIRMATION_REQUIRED)
            throw (
              (o.default.dispatch({
                type: "BILLING_SUBSCRIPTION_UPDATE_FAIL",
                error: e,
              }),
              e)
            );
          if (!t.body.payment_id)
            throw P("payment id cannot be null on redirected confirmations.");
          return J(t.body, n);
        }
      }
      async function Z(e, t, n, s) {
        let i = null;
        if (null != n && y.PREPAID_PAYMENT_SOURCES.has(n.type)) {
          let e = await ev(n.type);
          i =
            a.default.getAPIBaseURL() +
            p.Endpoints.BILLING_POPUP_BRIDGE_CALLBACK_REDIRECT_PREFIX(
              n.type,
              e ?? "",
              "success"
            );
        }
        try {
          let r = await a.default.post({
            url: p.Endpoints.BILLING_INVOICE_MANUAL_PAYMENT(e.id, t),
            body: {
              payment_source_id: null != n ? n.id : null,
              payment_source_token: null != n ? await Y(n) : null,
              return_url: i,
              currency: s,
            },
            oldFormErrors: !0,
          });
          return (
            o.default.dispatch({
              type: "BILLING_SUBSCRIPTION_UPDATE_SUCCESS",
              subscription: r.body,
            }),
            {
              subscription: r.body,
              redirectConfirmation: p.REDIRECTED_PAYMENT_SOURCES.has(n.type),
            }
          );
        } catch (t) {
          let e = t instanceof u.BillingError ? t : new u.BillingError(t);
          if (e.code !== d.ErrorCodes.CONFIRMATION_REQUIRED)
            throw (
              (o.default.dispatch({
                type: "BILLING_SUBSCRIPTION_UPDATE_FAIL",
                error: e,
              }),
              e)
            );
          if (!t.body.payment_id)
            throw P("payment id cannot be null on redirected confirmations.");
          return J(t.body, n);
        }
      }
      function J(e, t) {
        return null != t && y.ADYEN_PAYMENT_SOURCES.has(t.type)
          ? ee(e.adyen_redirect_url, t)
          : et(e.payment_id, t);
      }
      async function ee(e, t) {
        if (null == e)
          throw P("redirect url cannot be null on a redirect for adyen.");
        if (null == t) throw P("Payment source cannot be null on a redirect.");
        return p.REDIRECTED_PAYMENT_SOURCES.has(t.type)
          ? (ei(e), { redirectConfirmation: !0, redirectURL: e })
          : { redirectConfirmation: !1, redirectURL: e };
      }
      async function et(e, t) {
        let n = await E.getStripe();
        if (null == t) throw P("Payment source cannot be null on a redirect.");
        let { clientSecret: s, paymentMethodId: i } = await A(e);
        if (null == n) throw P("Stripe cannot be null on a redirect.");
        if (p.REDIRECTED_PAYMENT_SOURCES.has(t.type)) {
          let e = await ev(t.type);
          return (
            ei(
              await ea({
                stripe: n,
                paymentSource: t,
                clientSecret: s,
                state: e,
              })
            ),
            { redirectConfirmation: !0 }
          );
        }
        return (
          await er({
            stripe: n,
            clientSecret: s,
            paymentMethodId: i,
            paymentSource: t,
          }),
          { redirectConfirmation: !1 }
        );
      }
      async function en(e) {
        let t = await K(e);
        if (t?.body == null) throw P("could not fetch payment");
        let n = l.default.createFromServer(t.body.payment_source);
        if (!p.REDIRECTED_PAYMENT_SOURCES.has(n.type))
          throw P("unsupported redirect payment source");
        if (t?.body?.status === y.PaymentStatusTypes.FAILED)
          throw P("payment failed");
        return n.paymentGateway !== p.PaymentGateways.STRIPE || es(e);
      }
      async function es(e) {
        let t = await E.getStripe();
        if (null == t) throw P("Stripe has not loaded.");
        if (null == e) throw P("payment intent id cannot be null.");
        let n = await C(e),
          { paymentIntent: s, error: i } = await t.retrievePaymentIntent(n);
        if (null != i) throw P(i);
        if (null == s)
          throw P("paymentIntent not available with successful stripe call");
        if (null != s.last_payment_error)
          throw P(`unable to retrieve payment intent ${s.last_payment_error}`);
        return !0;
      }
      function ei(e) {
        window.open(e);
      }
      async function er(e) {
        let t,
          {
            stripe: n,
            paymentSource: s,
            paymentMethodId: i,
            clientSecret: r,
          } = e,
          a = {};
        if (s.type === y.PaymentSourceTypes.SEPA_DEBIT) {
          if (null == i)
            throw P("On a sepa payment payment method id cannot be null");
          (a.payment_method = i), (t = n.confirmSepaDebitPayment);
        } else throw P("Unsupported redirected payment source type.");
        let { paymentIntent: o, error: u } = await t(r, a);
        if (null != u) throw P(u);
        if (null == o)
          throw P("paymentIntent not available with successful stripe call");
      }
      async function ea(e) {
        let t,
          { stripe: n, paymentSource: s, clientSecret: i, state: r } = e,
          o = {};
        switch (s.type) {
          case y.PaymentSourceTypes.GIROPAY:
            (o = { billing_details: { name: s.billingAddress.name } }),
              (t = n.confirmGiropayPayment);
            break;
          case y.PaymentSourceTypes.BANCONTACT:
            (o = {
              billing_details: { name: s.billingAddress.name, email: s.email },
            }),
              (t = n.confirmBancontactPayment);
            break;
          case y.PaymentSourceTypes.SOFORT:
            (o = {
              sofort: { country: s.billingAddress.country },
              billing_details: { name: s.billingAddress.name, email: s.email },
            }),
              (t = n.confirmSofortPayment);
            break;
          case y.PaymentSourceTypes.PRZELEWY24:
            if (null == s.bank)
              throw P(`PaymentSource (${s.id}) missing bank info for p24.`);
            (o = {
              p24: { bank: s.bank },
              billing_details: { name: s.billingAddress.name, email: s.email },
            }),
              (t = n.confirmP24Payment);
            break;
          case y.PaymentSourceTypes.EPS:
            if (null == s.bank)
              throw P(`PaymentSource (${s.id}) missing bank info for EPS.`);
            (o = {
              eps: { bank: s.bank },
              billing_details: { name: s.billingAddress.name },
            }),
              (t = n.confirmEpsPayment);
            break;
          case y.PaymentSourceTypes.IDEAL:
            if (null == s.bank)
              throw P(`PaymentSource (${s.id}) missing bank info for iDEAL.`);
            (o = {
              ideal: { bank: s.bank },
              billing_details: { name: s.billingAddress.name },
            }),
              (t = n.confirmIdealPayment);
            break;
          default:
            throw P("Unsupported redirected payment source type.");
        }
        let { paymentIntent: u, error: d } = await t(
          i,
          {
            payment_method: o,
            return_url:
              a.default.getAPIBaseURL() +
              p.Endpoints.BILLING_POPUP_BRIDGE_CALLBACK_REDIRECT_PREFIX(
                s.type,
                r ?? "",
                "success"
              ),
          },
          { handleActions: !1 }
        );
        if (null != d) throw P(d);
        if (null == u)
          throw P("paymentIntent not available with successful api call");
        if (u.next_action?.redirect_to_url?.url == null)
          throw P("confirm payment did not return a redirect url");
        return u.next_action.redirect_to_url.url;
      }
      async function eo(e, t, n) {
        o.default.dispatch({ type: "BILLING_SUBSCRIPTION_CANCEL_START" });
        try {
          let s = await a.default.delete({
            url: p.Endpoints.BILLING_SUBSCRIPTION(e),
            query: { location: n, location_stack: t },
            oldFormErrors: !0,
          });
          return (
            o.default.dispatch({ type: "BILLING_SUBSCRIPTION_CANCEL_SUCCESS" }),
            s
          );
        } catch (t) {
          let e = new u.BillingError(t);
          throw (
            (o.default.dispatch({
              type: "BILLING_SUBSCRIPTION_CANCEL_FAIL",
              error: e,
            }),
            e)
          );
        }
      }
      function eu(e, t) {
        return ed(e, { items: e.items }, t);
      }
      async function ed(e, t, n, s, i) {
        if (null != t.paymentSource && null == t.currency)
          throw Error("Currency must be specified with payment source");
        o.default.dispatch({ type: "BILLING_SUBSCRIPTION_UPDATE_START" });
        try {
          let r = {
            status: t.status,
            payment_source_id: t.paymentSource?.id,
            payment_source_token:
              null != t.paymentSource ? await Y(t.paymentSource) : null,
            currency: t.currency,
            gateway_checkout_context: await (0, g.createGatewayCheckoutContext)(
              t.paymentSource
            ),
            load_id: i,
          };
          if (
            null != t.paymentSource &&
            y.ADYEN_PAYMENT_SOURCES.has(t.paymentSource.type)
          ) {
            let e = await ev(t.paymentSource.type);
            r.return_url =
              a.default.getAPIBaseURL() +
              p.Endpoints.BILLING_POPUP_BRIDGE_CALLBACK_REDIRECT_PREFIX(
                t.paymentSource.type,
                e ?? "",
                "success"
              );
          }
          null != t.items &&
            (r.items = (0, m.coerceExistingItemsToNewItemInterval)(t.items).map(
              e => {
                let { planId: t, ...n } = e;
                return { ...n, plan_id: t };
              }
            ));
          let u = await a.default.patch({
            url: p.Endpoints.BILLING_SUBSCRIPTION(e.id),
            query: { location: s, location_stack: n },
            body: r,
            oldFormErrors: !0,
          });
          return (
            o.default.dispatch({
              type: "BILLING_SUBSCRIPTION_UPDATE_SUCCESS",
              subscription: u.body,
            }),
            { subscription: u.body, redirectConfirmation: !1 }
          );
        } catch (n) {
          let e = n instanceof u.BillingError ? n : new u.BillingError(n);
          if (e.code !== d.ErrorCodes.CONFIRMATION_REQUIRED)
            throw (
              (o.default.dispatch({
                type: "BILLING_SUBSCRIPTION_UPDATE_FAIL",
                error: e,
              }),
              e)
            );
          if (!n.body.payment_id)
            throw P("payment id cannot be null on redirected confirmations.");
          return J(n.body, t.paymentSource);
        }
      }
      function el(e, t, n, s, i) {
        return ed(
          e,
          {
            status: p.SubscriptionStatusTypes.ACTIVE,
            paymentSource: n,
            currency: s,
          },
          t,
          i
        );
      }
      function ef(e, t, n, s) {
        let i = (0, m.getItemsWithUpsertedPremiumPlanId)(e, t);
        return ed(
          e,
          { status: p.SubscriptionStatusTypes.ACTIVE, items: i },
          n,
          s
        );
      }
      function e_(e, t, n, s) {
        return ed(e, { currency: t }, n, s);
      }
      function ec(e, t, n, s, i) {
        return ed(e, { paymentSource: t, currency: n }, s, i);
      }
      function eg() {
        o.default.dispatch({
          type: "BILLING_PAYMENT_SOURCE_UPDATE_CLEAR_ERROR",
        });
      }
      function em() {
        o.default.dispatch({
          type: "BILLING_PAYMENT_SOURCE_REMOVE_CLEAR_ERROR",
        });
      }
      function eh() {
        o.default.dispatch({ type: "PAYMENT_AUTHENTICATION_CLEAR_ERROR" });
      }
      async function eE(e) {
        await a.default.post({
          url: p.Endpoints.BILLING_PAYMENTS_VOID(e),
          oldFormErrors: !0,
        });
      }
      async function ep(e, t) {
        await a.default.post({
          url: p.Endpoints.BILLING_PAYMENTS_REFUND(e),
          body: { reason: t },
        });
      }
      async function ev(e) {
        let {
          body: { state: t },
        } = await a.default.post({
          url: p.Endpoints.BILLING_POPUP_BRIDGE(e),
          oldFormErrors: !0,
        });
        return (
          o.default.dispatch({
            type: "BILLING_POPUP_BRIDGE_STATE_UPDATE",
            state: t,
            paymentSourceType: e,
          }),
          t
        );
      }
      function ey(e) {
        let {
          paymentSourceType: t,
          state: n,
          path: s,
          query: i,
          insecure: r,
        } = e;
        return (
          o.default.dispatch({
            type: "BILLING_POPUP_BRIDGE_CALLBACK_START",
            paymentSourceType: t,
          }),
          a.default
            .post({
              url: p.Endpoints.BILLING_POPUP_BRIDGE_CALLBACK(t),
              body: { state: n, path: s, query: i, insecure: r },
              oldFormErrors: !0,
            })
            .then(
              e => (
                o.default.dispatch({
                  type: "BILLING_POPUP_BRIDGE_CALLBACK_END",
                  paymentSourceType: t,
                }),
                e
              )
            )
        );
      }
      async function eI() {
        let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
        if (!e && null != _.default.ipCountryCodeRequest)
          return _.default.ipCountryCodeRequest;
        try {
          let e = a.default.get({ url: p.Endpoints.BILLING_COUNTRY_CODE });
          o.default.wait(() =>
            o.default.dispatch({
              type: "BILLING_IP_COUNTRY_CODE_FETCH_START",
              request: e,
            })
          );
          let t = await e,
            n = t.body.country_code;
          return (
            o.default.dispatch({
              type: "BILLING_SET_IP_COUNTRY_CODE",
              countryCode: n,
            }),
            t
          );
        } catch (e) {
          return (
            o.default.dispatch({ type: "BILLING_IP_COUNTRY_CODE_FAILURE" }), e
          );
        }
      }
      async function eT() {
        try {
          let e = await a.default.get({
            url: p.Endpoints.BILLING_LOCALIZED_PROMO,
          });
          if (null != e.body.localized_pricing_promo) {
            let t = e.body.localized_pricing_promo;
            o.default.dispatch({
              type: "BILLING_SET_LOCALIZED_PRICING_PROMO",
              localizedPricingPromo: t,
            });
          }
          return e;
        } catch (e) {
          return (
            o.default.dispatch({
              type: "BILLING_LOCALIZED_PRICING_PROMO_FAILURE",
            }),
            e
          );
        }
      }
      function eS() {
        o.default.dispatch({ type: "RESET_PAYMENT_ID" });
      }
      function eC() {
        o.default.dispatch({ type: "BILLING_SUBSCRIPTION_RESET" });
      }
      function eA(e) {
        o.default.dispatch({
          type: "USER_PAYMENT_BROWSER_CHECKOUT_STARTED",
          loadId: e,
        });
      }
    },
    557982: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return g;
          },
        });
      var s = n("454836"),
        i = n("312916"),
        r = n("249877"),
        a = n("606929"),
        o = n("871831"),
        u = n("328470"),
        d = n("992888"),
        l = n("419533"),
        f = n("820228"),
        _ = n("467006"),
        c = n("30175"),
        g = {
          call(e, t, n, i, r) {
            let g = n => {
              f.default.selectVoiceChannel(e, t), n && this.ring(e), r?.(e);
            };
            if (null != i) {
              if (a.default.isBlocked(i)) return;
              let t = o.default.getUser(i);
              s.default
                .get({ url: _.Endpoints.CALL(e), oldFormErrors: !0 })
                .then(
                  e => {
                    g(n && e.body.ringable);
                  },
                  () => {
                    u.default.track(_.AnalyticEvents.OPEN_POPOUT, {
                      type: "Not Friend",
                      source: "Call",
                    }),
                      d.default.show({
                        title: c.default.Messages.START_CALL,
                        body: c.default.Messages.CALL_INVITE_NOT_FRIENDS.format(
                          { username: null != t ? t.username : "" }
                        ),
                        confirmText: c.default.Messages.ADD_FRIEND_BUTTON,
                        cancelText: c.default.Messages.OKAY,
                        onConfirm() {
                          l.default.addRelationship({
                            userId: i,
                            context: { location: "Call" },
                          });
                        },
                      });
                  }
                );
            } else g(n);
          },
          ring(e, t) {
            let n = r.default.getCall(e);
            if (
              null != n &&
              null != n.messageId &&
              !r.default.isCallUnavailable(e)
            ) {
              s.default.post({
                url: _.Endpoints.CALL_RING(e),
                body: { recipients: t },
                oldFormErrors: !0,
              });
              return;
            }
            i.default.dispatch({
              type: "CALL_ENQUEUE_RING",
              channelId: e,
              recipients: t,
            });
          },
          stopRinging: (e, t) =>
            s.default.post({
              url: _.Endpoints.CALL_STOP_RINGING(e),
              body: { recipients: t },
              oldFormErrors: !0,
            }),
        };
    },
    561427: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return p;
          },
        });
      var s = n("454836"),
        i = n("24135"),
        r = n("312916"),
        a = n("437148"),
        o = n("422557"),
        u = n("77579"),
        d = n("521588"),
        l = n("775822"),
        f = n("731865"),
        _ = n("413775"),
        c = n("557982"),
        g = n("820228"),
        m = n("467006"),
        h = n("866313"),
        E = n("30175"),
        p = {
          async openPrivateChannel(e) {
            let t =
                arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
              n =
                arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
              i = arguments.length > 3 ? arguments[3] : void 0,
              r = arguments.length > 4 ? arguments[4] : void 0,
              a = this._getRecipients(e),
              o = e => {
                t &&
                  c.default.call(
                    e.id,
                    n,
                    !0,
                    e.isDM() ? e.getRecipientId() : null
                  );
              };
            if (1 === a.length) {
              let [e] = a,
                t = this._openCachedDMChannel(e, r);
              if (null != t) return o(t), Promise.resolve(t.id);
            }
            try {
              let e = await s.default.post({
                url: m.Endpoints.USER_CHANNELS,
                body: { recipients: a },
                context: { location: i },
                oldFormErrors: !0,
              });
              r?.();
              let t = this._openPrivateChannel(e.body);
              return o(t), e.body.id;
            } catch (e) {
              throw (
                (e?.body?.code === m.AbortCodes.QUARANTINED && (0, u.default)(),
                e)
              );
            }
          },
          async createBroadcastPrivateChannel() {
            try {
              let e = await s.default.post({
                  url: m.Endpoints.BROADCAST_PRIVATE_CHANNEL,
                }),
                t = (0, l.createChannelRecordFromServer)(e.body);
              return c.default.call(t.id, !1, !1, null), e.body.id;
            } catch (e) {
              throw (
                (e?.body?.code === m.AbortCodes.QUARANTINED && (0, u.default)(),
                e)
              );
            }
          },
          _openCachedDMChannel(e, t) {
            let n = f.default.getDMFromUserId(e),
              s = null != n ? f.default.getChannel(n) : null;
            return null != s
              ? (t?.(),
                null != (0, o.getRootNavigationRefIfInExperiment)()
                  ? (0, d.transitionTo)(m.Routes.CHANNEL(m.ME, s.id), {
                      navigationReplace: !0,
                    })
                  : g.default.selectPrivateChannel(s.id),
                s)
              : null;
          },
          async ensurePrivateChannel(e) {
            let t = this._getRecipients(e),
              n = await s.default.post({
                url: m.Endpoints.USER_CHANNELS,
                body: { recipients: t },
                oldFormErrors: !0,
              }),
              i = (0, l.createChannelRecordFromServer)(n.body);
            return (
              r.default.dispatch({ type: "CHANNEL_CREATE", channel: i }), i.id
            );
          },
          async getOrEnsurePrivateChannel(e) {
            let t = f.default.getDMFromUserId(e);
            return null != t ? t : await this.ensurePrivateChannel(e);
          },
          async getDMChannel(e) {
            let t = await s.default.get(m.Endpoints.DM_CHANNEL(e)),
              n = (0, l.createChannelRecordFromServer)(t.body);
            return (
              r.default.dispatch({ type: "CHANNEL_CREATE", channel: n }), n.id
            );
          },
          _getRecipients: e => (null != e ? (Array.isArray(e) ? e : [e]) : []),
          _openPrivateChannel(e) {
            let t = (0, l.createChannelRecordFromServer)(e);
            return (
              r.default.dispatch({ type: "CHANNEL_CREATE", channel: t }),
              null != (0, o.getRootNavigationRefIfInExperiment)()
                ? (0, d.transitionTo)(m.Routes.CHANNEL(m.ME, t.id), {
                    navigationReplace: !0,
                  })
                : g.default.selectPrivateChannel(t.id),
              t
            );
          },
          closePrivateChannel(e) {
            let t =
                arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
              n =
                arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
            return (
              r.default.dispatch({
                type: "CHANNEL_DELETE",
                channel: { id: e, guild_id: void 0, parent_id: void 0 },
                silent: n,
              }),
              t && !__OVERLAY__ && (0, d.transitionTo)(m.Routes.FRIENDS),
              s.default
                .delete({
                  url: m.Endpoints.CHANNEL(e),
                  query: { silent: n },
                  oldFormErrors: !0,
                })
                .then(() => {
                  i.AccessibilityAnnouncer.announce(
                    E.default.Messages.A11Y_ANNOUNCEMENT_DM_CLOSED
                  );
                })
                .catch(() => {
                  i.AccessibilityAnnouncer.announce(
                    E.default.Messages.A11Y_ANNOUNCEMENT_DM_CLOSED_FAILED
                  );
                })
            );
          },
          updatePermissionOverwrite: (e, t) =>
            s.default.put({
              url: m.Endpoints.CHANNEL_PERMISSIONS_OVERWRITE(e, t.id),
              body: t,
              oldFormErrors: !0,
            }),
          clearPermissionOverwrite: (e, t) =>
            s.default.delete({
              url: m.Endpoints.CHANNEL_PERMISSIONS_OVERWRITE(e, t),
              oldFormErrors: !0,
            }),
          addRecipient(e, t, n, r) {
            return s.default
              .put({
                url: m.Endpoints.CHANNEL_RECIPIENT(e, t),
                context: { location: n },
                oldFormErrors: !0,
              })
              .then(t =>
                (i.AccessibilityAnnouncer.announce(
                  E.default.Messages.A11Y_ANNOUNCEMENT_USER_ADDED_TO_GROUP_DM
                ),
                r?.(),
                201 === t.status)
                  ? this._openPrivateChannel(t.body).id
                  : e
              )
              .catch(
                () => (
                  i.AccessibilityAnnouncer.announce(
                    E.default.Messages
                      .A11Y_ANNOUNCEMENT_USER_ADDED_TO_GROUP_DM_FAILED
                  ),
                  e
                )
              );
          },
          addRecipients(e, t, n, s) {
            return this.addRecipient(e, t[0], n, s).then(e =>
              Promise.all(t.slice(1).map(t => this.addRecipient(e, t, n))).then(
                () => e
              )
            );
          },
          removeRecipient: (e, t) =>
            s.default.delete({
              url: m.Endpoints.CHANNEL_RECIPIENT(e, t),
              oldFormErrors: !0,
            }),
          setDMOwner: (e, t) =>
            s.default.patch({
              url: m.Endpoints.CHANNEL(e),
              body: { owner: t },
              oldFormErrors: !0,
            }),
          async setName(e, t) {
            let n = f.default.getChannel(e),
              i = await s.default.patch({
                url: m.Endpoints.CHANNEL(e),
                body: { name: t },
                oldFormErrors: !0,
              }),
              r = n?.getGuildId();
            return (
              null != r &&
                !n?.isThread() &&
                a.default.checkGuildTemplateDirty(r),
              i
            );
          },
          setIcon(e, t) {
            let n = f.default.getChannel(e);
            s.default
              .patch({
                url: m.Endpoints.CHANNEL(e),
                body: { icon: t },
                oldFormErrors: !0,
              })
              .then(() => {
                let e = n?.getGuildId();
                null != e &&
                  !n?.isThread() &&
                  a.default.checkGuildTemplateDirty(e);
              });
          },
          setVoiceBackgroundDisplay(e, t) {
            let n;
            return (
              (n =
                t.type === h.VoiceCallBackgroundTypes.EMPTY
                  ? t
                  : { type: t.type, resource_id: t.resourceId }),
              s.default.put({
                url: m.Endpoints.UPDATE_VOICE_CHANNEL_BACKGROUND(e),
                body: { voice_background_display: n },
                oldFormErrors: !0,
              })
            );
          },
          convertToGuild: e =>
            s.default.post({
              url: m.Endpoints.CHANNEL_CONVERT(e),
              oldFormErrors: !0,
            }),
          preload(e, t) {
            r.default.dispatch({
              type: "CHANNEL_PRELOAD",
              guildId: e === m.ME ? null : e,
              channelId: t,
              context: m.CURRENT_APP_CONTEXT,
            });
          },
          fetchChannelStoreListing(e, t) {
            let n =
              null != t
                ? m.Endpoints.CHANNEL_STORE_LISTING_SKU(e, t)
                : m.Endpoints.CHANNEL_STORE_LISTING(e);
            return (0, _.httpGetWithCountryCodeQuery)(n).then(t => {
              r.default.dispatch({
                type: "STORE_LISTING_FETCH_SUCCESS",
                channelId: e,
                storeListing: t.body,
              });
            });
          },
          async createTextChannel(e, t, n, i) {
            let r = {
              type: m.ChannelTypes.GUILD_TEXT,
              name: t,
              permission_overwrites: [],
            };
            null != n && (r.parent_id = n), null != i && (r.topic = i);
            let o = await s.default.post({
              url: m.Endpoints.GUILD_CHANNELS(e),
              body: r,
              oldFormErrors: !0,
            });
            return a.default.checkGuildTemplateDirty(e), o;
          },
        };
    },
    164545: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var s = n("312916"),
        i = n("244180"),
        r = n("328470"),
        a = n("845649"),
        o = n("467006"),
        u = {
          rebuildRTCActiveChannels() {
            s.default.dispatch({ type: "CHANNEL_RTC_ACTIVE_CHANNELS" });
          },
          selectParticipant(e, t) {
            s.default.dispatch({
              type: "CHANNEL_RTC_SELECT_PARTICIPANT",
              channelId: e,
              id: t,
            });
          },
          updateLayout(e, t) {
            let n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : o.AppContext.APP;
            r.default.track(o.AnalyticEvents.VIDEO_LAYOUT_TOGGLED, {
              video_layout: t,
              ...(0, i.collectVoiceAnalyticsMetadata)(e),
            }),
              s.default.dispatch({
                type: "CHANNEL_RTC_UPDATE_LAYOUT",
                channelId: e,
                layout: t,
                appContext: n,
              });
          },
          toggleParticipants(e, t) {
            s.default.dispatch({
              type: "CHANNEL_RTC_UPDATE_PARTICIPANTS_OPEN",
              channelId: e,
              participantsOpen: t,
            });
          },
          toggleVoiceParticipantsHidden(e, t) {
            s.default.dispatch({
              type: "CHANNEL_RTC_UPDATE_VOICE_PARTICIPANTS_HIDDEN",
              channelId: e,
              voiceParticipantsHidden: t,
            });
          },
          updateStageStreamSize(e, t) {
            s.default.dispatch({
              type: "CHANNEL_RTC_UPDATE_STAGE_STREAM_SIZE",
              channelId: e,
              large: t,
            });
          },
          updateStageVideoLimitBoostUpsellDismissed(e, t) {
            s.default.dispatch({
              type: "CHANNEL_RTC_UPDATE_STAGE_VIDEO_LIMIT_BOOST_UPSELL_DISMISSED",
              channelId: e,
              dismissed: t,
            });
          },
          updateChatOpen(e, t) {
            s.default.dispatch({
              type: "CHANNEL_RTC_UPDATE_CHAT_OPEN",
              channelId: e,
              chatOpen: t,
            }),
              t
                ? setTimeout(() => {
                    a.ComponentDispatch.dispatch(
                      o.ComponentActions.FOCUS_CHANNEL_TEXT_AREA,
                      { channelId: e }
                    );
                  }, 0)
                : a.ComponentDispatch.dispatch(
                    o.ComponentActions.FOCUS_CHAT_BUTTON
                  );
          },
        };
    },
    379756: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return g;
          },
        });
      var s = n("682797"),
        i = n("136539"),
        r = n("454836"),
        a = n("312916"),
        o = n("360750"),
        u = n("841869"),
        d = n("328470"),
        l = n("334990"),
        f = n("467006");
      let _ = new u.default("ConnectedAccounts");
      function c(e, t) {
        let n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
        return r.default.post({
          url: f.Endpoints.CONNECTIONS_CALLBACK(e),
          body: {
            ...t,
            insecure: n,
            friend_sync: f.FRIEND_SYNC_PLATFORM_TYPES.has(e),
          },
          oldFormErrors: !0,
        });
      }
      var g = {
        fetch: () =>
          r.default
            .get({ url: f.Endpoints.CONNECTIONS, oldFormErrors: !0 })
            .then(
              e =>
                a.default.dispatch({
                  type: "USER_CONNECTIONS_UPDATE",
                  local: !0,
                  accounts: e.body,
                }),
              () =>
                a.default.dispatch({
                  type: "USER_CONNECTIONS_UPDATE",
                  local: !0,
                  accounts: [],
                })
            ),
        authorize(e) {
          let t,
            {
              location: n,
              twoWayLinkType: s,
              userCode: a,
            } = arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : {};
          return (
            d.default.track(f.AnalyticEvents.CONNECTED_ACCOUNT_INITIATED, {
              platform_type: e,
              location: n,
            }),
            (t =
              s === i.TwoWayLinkType.DEVICE_CODE && null != a
                ? f.Endpoints.CONNECTIONS_AUTHORIZE_LINK_DEVICE(e, a)
                : null != s
                  ? f.Endpoints.CONNECTIONS_AUTHORIZE_LINK(e, s)
                  : f.Endpoints.CONNECTIONS_AUTHORIZE(e)),
            r.default.get({ url: t, oldFormErrors: !0 })
          );
        },
        callback: c,
        connect: (e, t, n, i, r) =>
          l.default.put({
            url: f.Endpoints.CONNECTION(e, t),
            body: {
              name: n,
              friend_sync:
                r?.friend_sync ?? f.FRIEND_SYNC_PLATFORM_TYPES.has(e),
            },
            context: { location: i },
            oldFormErrors: !0,
            trackedActionData: {
              event: s.NetworkActionNames.USER_CONNECTIONS_UPDATE,
              properties: {
                name: n,
                friend_sync: f.FRIEND_SYNC_PLATFORM_TYPES.has(e),
              },
            },
          }),
        disconnect: (e, t) =>
          r.default.delete({
            url: f.Endpoints.CONNECTION(e, t),
            oldFormErrors: !0,
          }),
        refresh: (e, t) =>
          r.default.post({
            url: f.Endpoints.CONNECTION_REFRESH(e, t),
            oldFormErrors: !0,
          }),
        submitPinCode: (e, t) =>
          r.default
            .get({
              url: f.Endpoints.CONNECTIONS_CALLBACK_CONTINUATION(t, e),
              oldFormErrors: !0,
            })
            .then(e => {
              let { body: n } = e;
              return (
                d.default.track(f.AnalyticEvents.ACCOUNT_LINK_STEP, {
                  previous_step: "PIN code entry",
                  current_step: "PIN success",
                  session_id: n.state,
                  platform_type: t,
                }),
                c(t, { ...n, from_continuation: !0 }, !0)
              );
            }),
        setVisibility(e, t, n) {
          return this.update(e, t, { visibility: 1 === n });
        },
        setMetadataVisibility(e, t, n) {
          return this.update(e, t, { metadata_visibility: 1 === n });
        },
        setFriendSync(e, t, n) {
          return this.update(e, t, { friend_sync: n });
        },
        setShowActivity(e, t, n) {
          return this.update(e, t, { show_activity: n });
        },
        update: (e, t, n) =>
          l.default.patch({
            url: f.Endpoints.CONNECTION(e, t),
            body: n,
            oldFormErrors: !0,
            trackedActionData: {
              event: s.NetworkActionNames.USER_CONNECTIONS_UPDATE,
              properties: { ...n },
            },
          }),
        joinServer(e, t) {
          a.default.dispatch({
            type: "USER_CONNECTIONS_INTEGRATION_JOINING",
            integrationId: e,
            joining: !0,
          }),
            r.default.post(
              { url: f.Endpoints.INTEGRATION_JOIN(e), oldFormErrors: !0 },
              n => {
                a.default.dispatch({
                  type: "USER_CONNECTIONS_INTEGRATION_JOINING",
                  integrationId: e,
                  joining: !1,
                }),
                  !n.ok &&
                    (a.default.dispatch({
                      type: "USER_CONNECTIONS_INTEGRATION_JOINING_ERROR",
                      integrationId: e,
                      error: n.hasErr ? void 0 : n.body.message,
                    }),
                    t?.());
              }
            );
        },
        async refreshAccessToken(e, t) {
          try {
            let {
              body: { access_token: n },
            } = await r.default.get({
              url: f.Endpoints.CONNECTION_ACCESS_TOKEN(e, t),
              oldFormErrors: !0,
            });
            return (
              a.default.dispatch({
                type: "USER_CONNECTION_UPDATE",
                platformType: e,
                id: t,
                accessToken: n,
              }),
              n
            );
          } catch (n) {
            throw (
              (n.body.code === f.AbortCodes.CONNECTION_REVOKED &&
                a.default.dispatch({
                  type: "USER_CONNECTION_UPDATE",
                  platformType: e,
                  id: t,
                  revoked: !0,
                }),
              n)
            );
          }
        },
        linkDispatchAuthCallback: (e, t) =>
          r.default.post({
            url: f.Endpoints.CONNECTIONS_LINK_DISPATCH_AUTH_CALLBACK(e),
            body: { ...t },
            oldFormErrors: !0,
          }),
        async completeTwoWayLink(e, t, n, s, i) {
          if (null == t) {
            _.error("Two-way link: missing authorize location");
            return;
          }
          let {
            code: r,
            error: a,
            errorDescription: u,
          } = (0, o.getCallbackParamsFromURL)(t);
          if (null != a) {
            _.error("Two-way link: missing authorize code", {
              error: a,
              errorDescription: u,
            });
            return;
          }
          return await c(e, {
            code: n,
            state: s,
            two_way_link_code: r,
            token_redirect_uri: i,
          });
        },
      };
    },
    181123: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return U;
          },
          waitForGuild: function () {
            return w;
          },
        }),
        n("177593");
      var s = n("682797"),
        i = n("768517"),
        r = n("454836"),
        a = n("312916"),
        o = n("421752"),
        u = n("437148"),
        d = n("533549"),
        l = n("422557"),
        f = n("403119"),
        _ = n("893687"),
        c = n("655864"),
        g = n("77579"),
        m = n("521588"),
        h = n("497994"),
        E = n("262047"),
        p = n("731865"),
        v = n("487488"),
        y = n("610043"),
        I = n("327271"),
        T = n("232733"),
        S = n("632706"),
        C = n("871831"),
        A = n("328470"),
        N = n("694574"),
        D = n("488867"),
        O = n("334990"),
        R = n("992888"),
        P = n("467006"),
        b = n("30175");
      let M = e => {
          R.default.show({
            title: b.default.Messages.TOO_MANY_USER_GUILDS_ALERT_TITLE,
            body: b.default.Messages.TOO_MANY_USER_GUILDS_ALERT_DESCRIPTION.format(
              { quantity: e }
            ),
          });
        },
        V = e => {
          a.default.dispatch({ type: "GUILD_DELETE", guild: { id: e } });
        },
        L = () => {
          R.default.show({
            title: b.default.Messages.SERVER_IS_CURRENTLY_FULL,
            body: b.default.Messages.PLEASE_TRY_AGAIN_LATER,
          });
        };
      async function k(e) {
        let t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
          { source: s, loadId: i, lurkLocation: o } = t,
          u = t.lurker ?? !1,
          d = C.default.getCurrentUser();
        if (d?.hasFlag(P.UserFlags.QUARANTINED))
          return (0, g.default)(), new Promise((e, t) => t(Error()));
        a.default.wait(() =>
          a.default.dispatch({
            type: "GUILD_JOIN",
            guildId: e,
            lurker: u,
            source: s,
            loadId: i,
          })
        );
        try {
          let t = S.default.getGuildId(),
            d =
              e === t && null != I.default.getGuild(e)
                ? T.default.getChannelId(e)
                : null,
            l = await r.default.put({
              url: P.Endpoints.GUILD_JOIN(e),
              query: {
                lurker: u,
                session_id: u ? E.default.getSessionId() : null,
                recommendation_load_id: i,
                location: u && null != o ? o : null,
              },
              context: { source: s },
              oldFormErrors: !0,
              body: {},
            });
          if (
            (null != l.body.join_request &&
              a.default.dispatch({
                type: "USER_GUILD_JOIN_REQUEST_UPDATE",
                guildId: e,
                request: l.body.join_request,
              }),
            null == I.default.getGuild(e) && l.body.show_verification_form)
          )
            return (
              (0, m.transitionTo)(P.Routes.GUILD_MEMBER_VERIFICATION(e)), l
            );
          if (
            (null != l.body.welcome_screen &&
              a.default.dispatch({
                type: "WELCOME_SCREEN_UPDATE",
                guildId: l.body.id,
                welcomeScreen: l.body.welcome_screen,
              }),
            null != l.body.approximate_presence_count &&
              a.default.dispatch({
                type: "ONLINE_GUILD_MEMBER_COUNT_UPDATE",
                guildId: l.body.id,
                count: l.body.approximate_presence_count,
              }),
            !u)
          ) {
            let { default: t } = await n
              .el("181123@5157:5214")
              .then(n.bind(n, "329547"));
            await t({ guildId: e, returnChannelId: d });
          }
          return l;
        } catch (t) {
          if (t.body?.code === P.AbortCodes.TOO_MANY_USER_GUILDS) {
            let e = C.default.getCurrentUser();
            D.default.canUseIncreasedGuildCap(e) || e?.isStaff()
              ? M(P.MAX_USER_GUILDS_PREMIUM)
              : M(P.MAX_USER_GUILDS);
          }
          throw (
            (t.body?.code === P.AbortCodes.GUILD_AT_CAPACITY && L(),
            u && t.body?.code === P.AbortCodes.UNKNOWN_GUILD && V(e),
            t)
          );
        }
      }
      function w(e) {
        return new Promise(t =>
          I.default.addConditionalChangeListener(() => {
            let n = I.default.getGuild(e);
            return null == n || (t(n), !1);
          })
        );
      }
      var U = {
        joinGuild: k,
        waitForGuild: w,
        async transitionToGuildSync(e, t, n, s) {
          var i, r;
          let a =
              ((i = (await w(e)).id),
              null != (r = n)
                ? r
                : !(0, l.isInMainTabsExperiment)() || (0, c.isOnNewPanels)()
                  ? (0, h.getChannelIdForGuildTransition)(i)
                  : void 0),
            o = t;
          t?.hasOwnProperty("welcomeModalChannelId") &&
            null == t.welcomeModalChannelId &&
            (o = { ...t, welcomeModalChannelId: a }),
            (0, m.transitionTo)(P.Routes.CHANNEL(e, a), o, void 0, s),
            await new Promise(setImmediate);
        },
        deleteGuild: V,
        selectGuild(e) {
          (0, d.stopLurking)(e);
        },
        createGuild(e) {
          a.default.dispatch({ type: "GUILD_CREATE", guild: e });
        },
        setServerMute: (e, t, n) =>
          r.default.patch({
            url: P.Endpoints.GUILD_MEMBER(e, t),
            body: { mute: n },
            oldFormErrors: !0,
          }),
        setServerDeaf: (e, t, n) =>
          r.default.patch({
            url: P.Endpoints.GUILD_MEMBER(e, t),
            body: { deaf: n },
            oldFormErrors: !0,
          }),
        setChannel(e, t, n) {
          r.default.patch({
            url: P.Endpoints.GUILD_MEMBER(e, t),
            body: { channel_id: n },
            oldFormErrors: !0,
          });
        },
        setMemberFlags(e, t, n) {
          r.default.patch({
            url: P.Endpoints.GUILD_MEMBER(e, t),
            body: { flags: n },
            oldFormErrors: !0,
          });
        },
        kickUser: (e, t, n) =>
          r.default.delete({
            url: P.Endpoints.GUILD_MEMBER(e, t),
            reason: n,
            oldFormErrors: !0,
          }),
        setCommunicationDisabledUntil(e) {
          let {
            guildId: t,
            userId: n,
            communicationDisabledUntilTimestamp: i,
            duration: r,
            reason: a,
            location: o,
          } = e;
          return O.default.patch({
            url: P.Endpoints.GUILD_MEMBER(t, n),
            reason: a,
            body: { communication_disabled_until: i },
            oldFormErrors: !0,
            trackedActionData: {
              event: s.NetworkActionNames.USER_COMMUNICATION_DISABLED_UPDATE,
              properties: {
                guild_id: t,
                target_user_id: n,
                duration: null != r ? r : null,
                reason: null != a ? a : null,
                communication_disabled_until: i,
                location: null != o ? o : null,
              },
            },
          });
        },
        banUser: (e, t, n, s) =>
          r.default.put({
            url: P.Endpoints.GUILD_BAN(e, t),
            reason: s,
            body: { delete_message_seconds: n },
            oldFormErrors: !0,
          }),
        unbanUser: (e, t) =>
          r.default.delete({
            url: P.Endpoints.GUILD_BAN(e, t),
            oldFormErrors: !0,
          }),
        banMultipleUsers: (e, t, n, s) =>
          r.default.post({
            url: P.Endpoints.BULK_GUILD_BAN(e),
            body: { user_ids: t, delete_message_seconds: n, reason: s },
            oldFormErrors: !0,
          }),
        async createRole(e, t, n) {
          let s = {
            name: null != t && "" !== t ? t : b.default.Messages.NEW_ROLE,
            color: n ?? 0,
            permissions: N.default.NONE,
          };
          try {
            let t = await r.default.post({
                url: P.Endpoints.GUILD_ROLES(e),
                oldFormErrors: !0,
                body: s,
              }),
              n = t.body;
            return (
              (n.permissions = i.default.deserialize(n.permissions)),
              a.default.dispatch({
                type: "GUILD_SETTINGS_ROLE_SELECT",
                roleId: t.body.id,
                role: n,
              }),
              u.default.checkGuildTemplateDirty(e),
              n
            );
          } catch (e) {
            throw new o.default(e);
          }
        },
        async updateRole(e, t, n) {
          let { icon: s, unicodeEmoji: i, ...a } = n,
            o = null === s || s?.startsWith("data:") ? s : void 0,
            d = await r.default.patch({
              url: P.Endpoints.GUILD_ROLE(e, t),
              body: { ...a, icon: o, unicode_emoji: i },
              oldFormErrors: !0,
            });
          return u.default.checkGuildTemplateDirty(e), d;
        },
        updateRolePermissions: (e, t, n) =>
          r.default.patch({
            url: P.Endpoints.GUILD_ROLE(e, t),
            body: { permissions: n },
            oldFormErrors: !0,
          }),
        deleteRole(e, t) {
          r.default
            .delete({ url: P.Endpoints.GUILD_ROLE(e, t), oldFormErrors: !0 })
            .then(() => {
              u.default.checkGuildTemplateDirty(e);
            });
        },
        async batchChannelUpdate(e, t) {
          let n = await r.default.patch({
            url: P.Endpoints.GUILD_CHANNELS(e),
            body: t,
            oldFormErrors: !0,
          });
          return u.default.checkGuildTemplateDirty(e), n;
        },
        async batchRoleUpdate(e, t) {
          let n = await r.default.patch({
            url: P.Endpoints.GUILD_ROLES(e),
            body: t,
            oldFormErrors: !0,
          });
          return u.default.checkGuildTemplateDirty(e), n;
        },
        requestMembers(e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : "",
            n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : 10,
            s =
              !(arguments.length > 3) ||
              void 0 === arguments[3] ||
              arguments[3];
          return a.default.dispatch({
            type: "GUILD_MEMBERS_REQUEST",
            guildIds: Array.isArray(e) ? e : [e],
            query: t,
            limit: n,
            presences: s,
          });
        },
        searchRecentMembers(e, t) {
          let { query: n, continuationToken: s } = t ?? {};
          return a.default.dispatch({
            type: "GUILD_SEARCH_RECENT_MEMBERS",
            guildId: e,
            query: n,
            continuationToken: s,
          });
        },
        requestMembersById(e, t) {
          let n =
            !(arguments.length > 2) || void 0 === arguments[2] || arguments[2];
          return a.default.dispatch({
            type: "GUILD_MEMBERS_REQUEST",
            guildIds: Array.isArray(e) ? e : [e],
            userIds: Array.isArray(t) ? t : [t],
            presences: n,
          });
        },
        move(e, t, n, s) {
          a.default.dispatch({
            type: "GUILD_MOVE",
            fromIndex: e,
            toIndex: t,
            fromFolderIndex: n,
            toFolderIndex: s,
          });
        },
        moveById(e, t) {
          let n =
              arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
            s = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
          a.default.dispatch({
            type: "GUILD_MOVE_BY_ID",
            sourceId: e,
            targetId: t,
            moveToBelow: n,
            combine: s,
          });
        },
        createGuildFolderLocal(e, t) {
          A.default.track(P.AnalyticEvents.GUILD_FOLDER_CREATED),
            a.default.dispatch({
              type: "GUILD_FOLDER_CREATE_LOCAL",
              sourceIds: e,
              name: t,
            });
        },
        editGuildFolderLocal(e, t, n) {
          a.default.dispatch({
            type: "GUILD_FOLDER_EDIT_LOCAL",
            targetId: e,
            sourceIds: t,
            name: n,
          });
        },
        deleteGuildFolderLocal(e) {
          a.default.dispatch({
            type: "GUILD_FOLDER_DELETE_LOCAL",
            targetId: e,
          });
        },
        toggleGuildFolderExpand(e) {
          let t = v.default.isFolderExpanded(e);
          A.default.track(P.AnalyticEvents.GUILD_FOLDER_CLICKED, {
            source: "sidebar",
            action: t ? "collapsed" : "expanded",
          }),
            a.default.dispatch({
              type: "TOGGLE_GUILD_FOLDER_EXPAND",
              folderId: e,
            });
        },
        setGuildFolderExpanded(e, t) {
          a.default.dispatch({
            type: "SET_GUILD_FOLDER_EXPANDED",
            folderId: e,
            expanded: t,
          });
        },
        collapseAllFolders() {
          a.default.dispatch({ type: "GUILD_FOLDER_COLLAPSE" });
        },
        nsfwAgree(e) {
          a.default.dispatch({ type: "GUILD_NSFW_AGREE", guildId: e });
        },
        nsfwReturnToSafety(e) {
          if ((0, l.isInMainTabsExperiment)() && !(0, c.isOnNewPanels)()) {
            let e = (0, f.getRootNavigationRef)();
            if (e?.isReady() !== !0) return;
            for (
              null != (0, _.coerceModalRoute)(e.getCurrentRoute()) &&
              e.goBack();
              ;

            ) {
              let t = (0, _.coerceChannelRoute)(e.getCurrentRoute());
              if (null == t) break;
              let n = p.default.getChannel(t.params.channelId);
              if (null == n || !n.isNSFW()) break;
              e.goBack();
            }
            return;
          }
          if (null == e) {
            (0, m.transitionTo)(P.Routes.FRIENDS);
            return;
          }
          let t = y.default.getDefaultChannel(e);
          null == t || t.isNSFW()
            ? (0, m.transitionTo)(P.Routes.FRIENDS)
            : (0, m.transitionTo)(P.Routes.CHANNEL(e, t.id));
        },
        escapeToDefaultChannel(e) {
          let t = y.default.getDefaultChannel(e);
          null != t
            ? (0, m.transitionTo)(P.Routes.CHANNEL(e, t.id))
            : (0, m.transitionTo)(P.Routes.FRIENDS);
        },
        async fetchApplications(e, t) {
          let n = { url: P.Endpoints.GUILD_APPLICATIONS(e), oldFormErrors: !0 };
          null != t && (n.query = { channel_id: t });
          let s = (await r.default.get(n)).body;
          a.default.dispatch({
            type: "GUILD_APPLICATIONS_FETCH_SUCCESS",
            guildId: e,
            applications: s,
          });
        },
        async fetchGuildBansBatch(e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 1e3,
            n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : null,
            s = { limit: t };
          null != n && (s.after = n),
            await r.default
              .get({
                url: P.Endpoints.GUILD_BANS(e),
                oldFormErrors: !0,
                query: s,
              })
              .then(t => {
                a.default.dispatch({
                  type: "GUILD_SETTINGS_LOADED_BANS_BATCH",
                  bans: t.body,
                  guildId: e,
                });
              });
        },
        async searchGuildBans(e, t, n) {
          let s =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : 10,
            i = { limit: s };
          null != n && n.length > 0 && (i.user_ids = n),
            null != t && t.trim().length > 0 && (i.query = t),
            await r.default
              .get({
                url: P.Endpoints.GUILD_BANS_SEARCH(e),
                oldFormErrors: !0,
                query: i,
              })
              .then(t => {
                a.default.dispatch({
                  type: "GUILD_SETTINGS_LOADED_BANS_BATCH",
                  bans: t.body,
                  guildId: e,
                });
              });
        },
        async fetchGuildBans(e) {
          await r.default
            .get({ url: P.Endpoints.GUILD_BANS(e), oldFormErrors: !0 })
            .then(e => {
              a.default.dispatch({
                type: "GUILD_SETTINGS_LOADED_BANS",
                bans: e.body,
              });
            });
        },
        fetchGuildRoleConnectionsEligibility: (e, t) =>
          r.default
            .get({
              url: P.Endpoints.GUILD_ROLE_CONNECTIONS_ELIGIBILITY(e, t),
              oldFormErrors: !0,
            })
            .then(e => {
              let { body: n } = e;
              return (
                a.default.dispatch({
                  type: "GUILD_ROLE_CONNECTION_ELIGIBILITY_FETCH_SUCCESS",
                  roleId: t,
                  roleConnectionEligibility: n,
                }),
                n
              );
            }),
        async assignGuildRoleConnection(e, t) {
          await r.default.post({
            url: P.Endpoints.GUILD_ROLE_CONNECTIONS_ASSIGN(e, t),
            oldFormErrors: !0,
          });
        },
        async unassignGuildRoleConnection(e, t) {
          await r.default.post({
            url: P.Endpoints.GUILD_ROLE_CONNECTIONS_UNASSIGN(e, t),
            oldFormErrors: !0,
          });
        },
        getGuildRoleConnectionsConfigurations: async e =>
          (
            await r.default.get({
              url: P.Endpoints.GUILD_ROLE_CONNECTIONS_CONFIGURATIONS(e),
              oldFormErrors: !0,
            })
          ).body,
      };
    },
    19569: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return es;
          },
          transitionToGuildFromEventInvite: function () {
            return en;
          },
        });
      var s = n("525654"),
        i = n.n(s),
        r = n("682797"),
        a = n("534577"),
        o = n("127770"),
        u = n("463565"),
        d = n("454836"),
        l = n("312916"),
        f = n("648519"),
        _ = n("421752"),
        c = n("237427"),
        g = n("351216"),
        m = n("471620"),
        h = n("511349"),
        E = n("138795"),
        p = n("680243"),
        v = n("222556"),
        y = n("913897"),
        I = n("805426"),
        T = n("62470"),
        S = n("501541"),
        C = n("442409"),
        A = n("626034"),
        N = n("77579"),
        D = n("410293"),
        O = n("521588"),
        R = n("620582"),
        P = n("775822"),
        b = n("262047"),
        M = n("731865"),
        V = n("610043"),
        L = n("361733"),
        k = n("327271"),
        w = n("200560"),
        U = n("145083"),
        G = n("197905"),
        F = n("871831"),
        B = n("328470"),
        H = n("152551"),
        x = n("334990"),
        Y = n("896820"),
        j = n("181123"),
        K = n("116395"),
        W = n("467006"),
        z = n("551835"),
        $ = n("833337"),
        q = n("859699"),
        X = n("479832");
      let Q = "invite",
        Z = null;
      function J(e) {
        let t = {};
        switch (e.target_type) {
          case q.InviteTargetTypes.STREAM:
            (t.targetType = e.target_type),
              (t.targetUserId = e.target_user?.id);
            break;
          case q.InviteTargetTypes.EMBEDDED_APPLICATION:
            (t.targetType = e.target_type),
              (t.targetApplicationId = e.target_application?.id);
            break;
          case q.InviteTargetTypes.ROLE_SUBSCRIPTIONS_PURCHASE:
            t.targetType = e.target_type;
        }
        return (
          (!(null != k.default.getGuild(e.guild?.id)) || e.new_member) &&
            null != e.channel &&
            (0, P.isGuildTextChannelType)(e.channel.type) &&
            (t.welcomeModalChannelId = e.channel.id),
          null != e.guild_scheduled_event &&
            (t.guildScheduledEvent = e.guild_scheduled_event),
          t
        );
      }
      function ee(e) {
        let {
            guildId: t,
            channel: s,
            options: i,
            analyticsLocations: r = [],
          } = e,
          { type: a } = s,
          o = (function (e, t, n) {
            if (
              n?.targetType === q.InviteTargetTypes.ROLE_SUBSCRIPTIONS_PURCHASE
            )
              return z.StaticChannelRoute.ROLE_SUBSCRIPTIONS;
            if (
              n?.targetType == null &&
              !P.GUILD_VOCAL_CHANNEL_TYPES.has(t.type) &&
              ((0, E.canSeeGuildHome)(e) || (0, y.canSeeOnboardingHome)(e))
            )
              return z.StaticChannelRoute.GUILD_HOME;
            let s = M.default.getChannel(t.id);
            return G.default.can(W.Permissions.VIEW_CHANNEL, s)
              ? t.id
              : V.default.getDefaultChannel(
                  e,
                  !0,
                  W.Permissions.CREATE_INSTANT_INVITE
                )?.id ?? t.id;
          })(t, s, i),
          { targetUserId: u, targetType: d, targetApplicationId: l } = i ?? {},
          f = a === W.ChannelTypes.GUILD_STAGE_VOICE,
          _ = W.Routes.CHANNEL(t, o);
        P.GUILD_VOCAL_CHANNEL_TYPES.has(a)
          ? (0, h.addPostConnectionCallback)(() => {
              n.el("19569@7849:7947")
                .then(n.bind(n, "820228"))
                .then(e => {
                  let { default: n } = e,
                    a = () => {
                      if (f) {
                        (0, R.connectAndOpen)(
                          s instanceof P.ChannelRecordBase
                            ? s
                            : (0, P.createChannelRecord)(s)
                        ),
                          (0, O.transitionTo)(_);
                        return;
                      }
                      n.selectVoiceChannel(o),
                        d === q.InviteTargetTypes.STREAM &&
                          null != u &&
                          K.watchStreamAndTransitionToStream({
                            streamType: $.StreamTypes.GUILD,
                            ownerId: u,
                            guildId: t,
                            channelId: o,
                          }),
                        d === q.InviteTargetTypes.EMBEDDED_APPLICATION &&
                          null != l &&
                          ((0, O.transitionTo)(W.Routes.CHANNEL(t ?? W.ME, o)),
                          (0, g.default)(o, l, r, i?.intent));
                    };
                  (0, v.shouldShowMembershipVerificationGate)(t, [
                    k.default,
                    w.default,
                    F.default,
                    L.default,
                  ])
                    ? (0, p.openMemberVerificationModal)(t, a)
                    : a();
                });
            })
          : (0, c.isActivityInTextSupportedForChannelType)(a) &&
            d === q.InviteTargetTypes.EMBEDDED_APPLICATION &&
            null != l &&
            ((0, O.transitionTo)(W.Routes.CHANNEL(t ?? W.ME, o)),
            (0, g.default)(o, l, r, i?.intent)),
          (function (e, t) {
            let { type: n } = e,
              {
                transitionTo: s,
                welcomeModalChannelId: i,
                guildScheduledEvent: r,
              } = t ?? {},
              a = n === W.ChannelTypes.GUILD_STAGE_VOICE,
              o = { navigationReplace: !0 };
            return (
              null != i && (o.welcomeModalChannelId = i),
              a && (o.state = X.STAGE_INVITE_STATE_KEY),
              null != r && (o.guildScheduledEventId = r.id),
              e =>
                null != s
                  ? s(e, o, D.default.INVITE_ACCEPT)
                  : (0, O.transitionTo)(e, o, D.default.INVITE_ACCEPT)
            );
          })(
            s,
            i
          )(_);
      }
      let et = function (e, t) {
          let n =
            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [];
          M.default.addConditionalChangeListener(() => {
            let s = M.default.getChannel(e),
              i = F.default.getCurrentUser();
            return (
              null == s ||
              null == i ||
              ((!s.nsfw || !!i.nsfwAllowed) &&
                (t?.guildScheduledEvent != null
                  ? (!(function (e) {
                      let { guildScheduledEvent: t, welcomeModalChannelId: n } =
                        e;
                      null != t &&
                        (0, h.addPostConnectionCallback)(() => {
                          let e = { guildScheduledEventId: t.id };
                          null != n && (e.welcomeModalChannelId = n),
                            (0, I.transitionToEventDetailsFromInvite)(t, e);
                        });
                    })(t),
                    !1)
                  : (ee({
                      guildId: s.getGuildId() ?? W.ME,
                      channel: s,
                      options: t,
                      analyticsLocations: n,
                    }),
                    !1)))
            );
          });
        },
        en = async e => {
          let { guild_id: t, channel_id: n } = e;
          (0, T.isGuildScheduledEventActive)(e) && null != n
            ? et(n)
            : await j.default.transitionToGuildSync(t);
        };
      var es = {
        resolveInvite: function e(t, n, s) {
          return l.default.isDispatching()
            ? Promise.resolve().then(() => e(t, n, s))
            : (l.default.dispatch({ type: "INVITE_RESOLVE", code: t }),
              (0, A.default)(t, n, s).then(e => {
                let { invite: t, code: n, banned: s } = e;
                return (
                  null != t
                    ? l.default.dispatch({
                        type: "INVITE_RESOLVE_SUCCESS",
                        invite: t,
                        code: n,
                      })
                    : l.default.dispatch({
                        type: "INVITE_RESOLVE_FAILURE",
                        code: n,
                        banned: s,
                      }),
                  { invite: t, code: n }
                );
              }));
        },
        getInviteContext: (e, t) => ({
          location: e,
          location_guild_id: null != t.guild ? t.guild.id : void 0,
          location_channel_id: null != t.channel ? t.channel.id : void 0,
          location_channel_type: null != t.channel ? t.channel.type : void 0,
        }),
        async createInvite(e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : {},
            n = arguments.length > 2 ? arguments[2] : void 0;
          try {
            let { body: s } = await d.default.post({
              url: W.Endpoints.INSTANT_INVITES(e),
              body: t,
              context: { location: n },
            });
            return (
              l.default.dispatch({
                type: "INSTANT_INVITE_CREATE_SUCCESS",
                channelId: e,
                invite: s,
              }),
              s
            );
          } catch (t) {
            throw (
              (l.default.dispatch({
                type: "INSTANT_INVITE_CREATE_FAILURE",
                channelId: e,
              }),
              new f.default(t))
            );
          }
        },
        async mobileCreateInvite(e, t) {
          let n = U.default.getInvite(e.id);
          if (null != n && !n.isExpired()) return n.code;
          let s = { max_age: H.default.Seconds.DAY },
            i = await this.createInvite(e.id, s, t).catch(() =>
              l.default.dispatch({
                type: "NATIVE_APP_INSTANT_INVITE_GDM_SHARE_FAILED",
              })
            );
          return i?.code;
        },
        async getAllFriendInvites(e) {
          if (
            (await new Promise(e => l.default.wait(() => e(null))),
            U.default.getFriendInvitesFetching())
          )
            return null != Z
              ? Z.then(e => e.body)
              : Promise.reject(Error("Invalid friend invite fetch request"));
          (Z = d.default.get({
            url: W.Endpoints.FRIEND_INVITES,
            context: { location: e },
          })),
            l.default.dispatch({
              type: "FRIEND_INVITES_FETCH_REQUEST",
              requestedAt: new Date(),
            });
          let { body: t } = await Z;
          return (
            (Z = null),
            l.default.dispatch({
              type: "FRIEND_INVITES_FETCH_RESPONSE",
              receivedAt: new Date(),
              invites: t,
            }),
            t
          );
        },
        createFriendInvite: (e, t) => (
          l.default.dispatch({ type: "FRIEND_INVITE_CREATE_REQUEST" }),
          d.default
            .post({
              url: W.Endpoints.FRIEND_INVITES,
              body: e ?? {},
              context: { location: t },
            })
            .then(
              e => {
                let { body: t } = e;
                return (
                  l.default.dispatch({
                    type: "FRIEND_INVITE_CREATE_SUCCESS",
                    invite: t,
                  }),
                  t
                );
              },
              e => {
                throw (
                  (l.default.dispatch({
                    type: "FRIEND_INVITE_CREATE_FAILURE",
                    error: e,
                  }),
                  e)
                );
              }
            )
        ),
        revokeFriendInvites: () => (
          l.default.dispatch({ type: "FRIEND_INVITE_REVOKE_REQUEST" }),
          d.default
            .delete({ url: W.Endpoints.FRIEND_INVITES, context: { location } })
            .then(e => {
              let { body: t } = e;
              l.default.dispatch({
                type: "FRIEND_INVITE_REVOKE_SUCCESS",
                invites: t,
              });
            })
        ),
        revokeFriendInvite: e =>
          d.default.delete({ url: W.Endpoints.INVITE(e) }),
        clearInviteFromStore(e) {
          l.default.dispatch({ type: "INSTANT_INVITE_CLEAR", channelId: e });
        },
        revokeInvite(e) {
          let { code: t, channel: n } = e;
          return x.default
            .delete({
              url: W.Endpoints.INVITE(t),
              oldFormErrors: !0,
              trackedActionData: {
                event: r.NetworkActionNames.INVITE_REVOKE,
                properties: {
                  uses: e.uses,
                  max_uses: e.maxUses,
                  max_age: e.maxAge,
                  invite_type: e.type,
                },
              },
            })
            .then(() => {
              l.default.dispatch({
                type: "INSTANT_INVITE_REVOKE_SUCCESS",
                code: t,
                channelId: n.id,
              });
            });
        },
        acceptInvite(e) {
          var t, s;
          let { inviteKey: i, context: r, callback: a, skipOnboarding: o } = e,
            u = (0, C.parseExtraDataFromInviteKey)(i),
            f = u.baseCode,
            c = b.default.getSessionId();
          let g =
              ((t = r),
              (s = u),
              {
                ...t,
                invite_guild_scheduled_event_id: s.guildScheduledEventId,
              }),
            m = F.default.getCurrentUser();
          return m?.hasFlag(W.UserFlags.QUARANTINED)
            ? ((0, N.default)(), new Promise((e, t) => t(Error())))
            : (l.default.dispatch({ type: "INVITE_ACCEPT", code: f }),
              d.default
                .post({
                  url: W.Endpoints.INVITE(f),
                  context: g,
                  oldFormErrors: !0,
                  body: { session_id: c },
                })
                .then(
                  async e => {
                    l.default.dispatch({
                      type: "INVITE_ACCEPT_SUCCESS",
                      invite: e.body,
                      code: f,
                    });
                    let t = T.default.getGuildScheduledEvent(
                        u.guildScheduledEventId
                      ),
                      s = { ...e.body, guild_scheduled_event: t },
                      i = s?.guild_id ?? s?.guild?.id;
                    if (!o && null != i && s.new_member) {
                      let { default: e } = await n
                        .el("19569@20100:20157")
                        .then(n.bind(n, "329547"));
                      await e({ guildId: i });
                    }
                    return a?.(s), e.body;
                  },
                  e => {
                    throw (
                      (l.default.dispatch({
                        type: "INVITE_ACCEPT_FAILURE",
                        code: f,
                        error: { message: e.body?.message, code: e.body?.code },
                      }),
                      new _.default(e))
                    );
                  }
                ));
        },
        acceptInviteAndTransitionToInviteChannel(e) {
          let {
            inviteKey: t,
            context: n,
            analyticsLocations: s,
            callback: i,
            skipOnboarding: r,
          } = e;
          return this.acceptInvite({
            inviteKey: t,
            context: n,
            skipOnboarding: r,
            callback: e => {
              if (null != e.channel) {
                let t = J(e);
                et(e.channel.id, t, s ?? []);
              }
              null != i && i(e);
            },
          });
        },
        transitionToInvite(e, t) {
          let { channel: n, guild: s } = e;
          if (null != s && s.features?.includes(W.GuildFeatures.HUB)) {
            S.default.onOpenHubInvite(e);
            return;
          }
          if (
            null != s &&
            s.features?.includes(W.GuildFeatures.COMMUNITY) &&
            s.features?.includes(
              W.GuildFeatures.MEMBER_VERIFICATION_GATE_ENABLED
            ) &&
            !s.features.includes(W.GuildFeatures.PREVIEW_ENABLED)
          ) {
            (0, O.transitionTo)(
              W.Routes.GUILD_MEMBER_VERIFICATION(s.id, e.code)
            );
            return;
          }
          if (null == n) return;
          let i = J(e);
          null != t && (i.transitionTo = t),
            ee({ guildId: null != s ? s.id : W.ME, channel: n, options: i });
        },
        transitionToInviteSync(e, t, n) {
          if (null != e.channel) {
            let s = J(e);
            this.transitionToInviteChannelSync(e.channel.id, {
              ...s,
              intent: n,
              transitionTo: t,
            });
          }
        },
        openNativeAppModal(e) {
          m.default.openNativeAppModal(e, W.RPCCommands.INVITE_BROWSER);
        },
        openApp(e, t, n, s, r) {
          let d;
          let f = null != e ? (0, C.parseExtraDataFromInviteKey)(e) : null,
            _ = f?.baseCode;
          if (
            (l.default.dispatch({ type: "INVITE_APP_OPENING", code: e }),
            null != i().ua && i().ua.toLowerCase().indexOf("googlebot") > -1)
          ) {
            l.default.dispatch({ type: "INVITE_APP_NOT_OPENED", code: e });
            return;
          }
          if (i().os?.family === "Android" || i().os?.family === "iOS") {
            let e =
                null != _
                  ? (0, a.getInviteDynamicLinkTemplate)(_)
                  : (0, a.getDefaultDynamicLinkTemplate)(),
              t = (0, o.generateAttemptId)();
            (d = (0, o.default)(e, {
              utmSource: 2 === r ? "friend_invite" : Q,
              fingerprint: n,
              username: s,
              attemptId: t,
              event: f?.guildScheduledEventId,
              iosFallbackLink: `https://discord.com/api/download/mobile?invite_code=${_}`,
            })),
              B.default.track(W.AnalyticEvents.DEEP_LINK_CLICKED, {
                fingerprint: (0, u.maybeExtractId)(n),
                attempt_id: t,
                source: Q,
                invite_code: _,
              });
          } else
            "#" === (d = null != t ? W.Routes.INVITE_PROXY(t) : "")[0] &&
              (d = d.slice(1)),
              (d = `discord://${d}`);
          Y.default.launch(d, t => {
            l.default.dispatch(
              t
                ? { type: "INVITE_APP_OPENED", code: e }
                : { type: "INVITE_APP_NOT_OPENED", code: e }
            );
          });
        },
        transitionToInviteChannelSync: et,
      };
    },
    939591: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          popAllLayers: function () {
            return a;
          },
          popLayer: function () {
            return r;
          },
          pushLayer: function () {
            return i;
          },
        });
      var s = n("312916");
      function i(e) {
        s.default.dispatch({ type: "LAYER_PUSH", component: e });
      }
      function r() {
        s.default.dispatch({ type: "LAYER_POP" });
      }
      function a() {
        s.default.dispatch({ type: "LAYER_POP_ALL" });
      }
    },
    981122: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          trustDomain: function () {
            return i;
          },
          trustProtocol: function () {
            return r;
          },
        });
      var s = n("312916");
      function i(e) {
        s.default.dispatch({ type: "MASKED_LINK_ADD_TRUSTED_DOMAIN", url: e });
      }
      function r(e) {
        s.default.dispatch({
          type: "MASKED_LINK_ADD_TRUSTED_PROTOCOL",
          url: e,
        });
      }
    },
    654937: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        }),
        n("653041");
      var s = n("97613"),
        i = n.n(s),
        r = n("312916"),
        a = n("403119"),
        o = n("893687"),
        u = n("889977"),
        d = n("94097"),
        l = n("467006"),
        f = {
          push(e, t) {
            let n =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : i()("modal"),
              s = arguments.length > 3 ? arguments[3] : void 0,
              a =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : l.AppContext.APP;
            return (
              (0, o.pushModal)({
                key: n,
                modal: (0, d.default)(e, {}, t, n),
                ...s,
              }),
              r.default.dispatch({
                type: "MODAL_PUSH",
                modal: e,
                props: t,
                key: n,
                appContext: a,
              }),
              n
            );
          },
          pushLazy(e, t) {
            let n =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : i()("modal"),
              s = arguments.length > 3 ? arguments[3] : void 0,
              r = (0, a.getRootNavigationRef)();
            return null != r && r.isReady()
              ? (e instanceof Promise
                  ? e.then(e => {
                      let { default: t } = e;
                      return t;
                    })
                  : e()
                ).then(e => this.push(e, t, n, s))
              : new Promise(i =>
                  u.default.enqueue(() => i(this.pushLazy(e, t, n, s)))
                );
          },
          updateAnimation(e, t) {
            r.default.dispatch({
              type: "MODAL_UPDATE",
              key: e,
              props: {},
              partial: !0,
              animation: t,
            });
          },
          pop() {
            (0, o.popModal)(), r.default.dispatch({ type: "MODAL_POP" });
          },
          popWithKey(e, t) {
            (0, o.popModal)(e, t),
              r.default.dispatch({ type: "MODAL_POP", key: e, onExited: t });
          },
          popAll() {
            (0, o.popAllModals)(),
              r.default.dispatch({ type: "MODAL_POP_ALL" }),
              r.default.dispatch({ type: "CHANNEL_SETTINGS_CLOSE" }),
              r.default.dispatch({ type: "EMAIL_VERIFICATION_MODAL_CLOSE" }),
              r.default.dispatch({ type: "GUILD_SETTINGS_CLOSE" }),
              r.default.dispatch({ type: "HIDE_ACTION_SHEET" }),
              r.default.dispatch({ type: "DISPLAYED_INVITE_CLEAR" }),
              r.default.dispatch({ type: "DRAWER_CLOSE", animated: !0 }),
              r.default.dispatch({ type: "NOTIFICATION_SETTINGS_MODAL_CLOSE" }),
              r.default.dispatch({ type: "QUICKSWITCHER_HIDE" }),
              r.default.dispatch({ type: "MENTION_MODAL_CLOSE" }),
              r.default.dispatch({ type: "USER_SETTINGS_MODAL_CLOSE" }),
              r.default.dispatch({ type: "SEARCH_MODAL_CLOSE" }),
              r.default.dispatch({ type: "CONNECTIONS_GRID_MODAL_HIDE" });
          },
        };
    },
    419533: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return T;
          },
        });
      var s,
        i,
        r = n("454836"),
        a = n("24135"),
        o = n("312916"),
        u = n("297932"),
        d = n("81147"),
        l = n("77579"),
        f = n("964154"),
        _ = n("871831"),
        c = n("25318"),
        g = n("439823"),
        m = n("992888"),
        h = n("256805"),
        E = n("467006"),
        p = n("30175");
      function v(e) {
        (0, h.closeContextMenu)(), m.default.show(e);
      }
      function y(e, t, n) {
        let { status: s, body: i } = e,
          r = i && i.code;
        switch (s) {
          case 429:
            0 === t &&
              v({
                title: p.default.Messages.FRIEND_REQUEST_RATE_LIMITED_HEADER,
                body: p.default.Messages.FRIEND_REQUEST_RATE_LIMITED_BODY,
                confirmText:
                  p.default.Messages.FRIEND_REQUEST_RATE_LIMITED_BUTTON,
              });
            break;
          case 403:
            if (r === E.AbortCodes.EMAIL_VERIFICATION_REQUIRED) {
              v({
                title:
                  p.default.Messages
                    .FRIEND_REQUEST_REQUIRES_EMAIL_VALIDATION_HEADER,
                body: p.default.Messages
                  .FRIEND_REQUEST_REQUIRES_EMAIL_VALIDATION_BODY,
                confirmText:
                  p.default.Messages
                    .FRIEND_REQUEST_REQUIRES_EMAIL_VALIDATION_BUTTON,
                onConfirm: () => {
                  u.openClaimAccountModal();
                },
              });
              break;
            }
          default:
            if (r === E.AbortCodes.USER_QUARANTINED)
              (0, h.closeContextMenu)(), (0, l.default)();
            else if ((0, f.isLimitedAccessErrorCode)(s, r)) break;
            else if (0 === t) {
              let e =
                null != n
                  ? (0, c.humanizeAbortCode)(r || 0, n)
                  : p.default.Messages.POMELO_ADD_FRIEND_ERROR;
              v({
                title: p.default.Messages.FRIEND_REQUEST_FAILED_HEADER,
                body: e,
                confirmText: p.default.Messages.OKAY,
              });
            }
        }
        throw e;
      }
      ((s = i || (i = {}))[(s.SHOW_ALWAYS = 0)] = "SHOW_ALWAYS"),
        (s[(s.SHOW_ONLY_IF_ACTION_NEEDED = 1)] = "SHOW_ONLY_IF_ACTION_NEEDED");
      let I = {
        sendRequest(e) {
          let {
              discordTag: t,
              context: n,
              captchaPayload: s,
              errorUxConfig: i = 0,
            } = e,
            [a, o] = t.split("#");
          return r.default
            .post({
              url: E.Endpoints.USER_RELATIONSHIPS(),
              body: { username: a, discriminator: parseInt(o), ...s },
              context: n,
              oldFormErrors: !0,
            })
            .catch(e => {
              y(e, i, t);
            });
        },
        addRelationship(e, t) {
          let {
              userId: n,
              context: s,
              type: i,
              friendToken: a,
              fromFriendSuggestion: o,
              captchaPayload: u,
            } = e,
            d =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : 0,
            l = _.default.getUser(n);
          return r.default
            .put({
              url: E.Endpoints.USER_RELATIONSHIP(n),
              body: {
                type: i,
                friend_token: a,
                from_friend_suggestion: o,
                ...u,
              },
              context: s,
              oldFormErrors: !0,
            })
            .then(() => {
              t?.();
            })
            .catch(e => {
              y(e, d, g.default.getUserTag(l));
            });
        },
        acceptFriendRequest: e =>
          I.addRelationship(e, function () {
            a.AccessibilityAnnouncer.announce(
              p.default.Messages.A11Y_ANNOUNCEMENT_FRIEND_ACCEPT_REQUEST
            );
          }),
        cancelFriendRequest: (e, t) =>
          I.removeRelationship(e, t, function () {
            a.AccessibilityAnnouncer.announce(
              p.default.Messages.A11Y_ANNOUNCEMENT_FRIEND_CANCEL_REQUEST
            );
          }),
        removeFriend(e, t) {
          I.removeRelationship(e, t, function () {
            a.AccessibilityAnnouncer.announce(
              p.default.Messages.A11Y_ANNOUNCEMENT_FRIEND_REMOVED
            );
          });
        },
        unblockUser(e, t) {
          I.removeRelationship(e, t, function () {
            a.AccessibilityAnnouncer.announce(
              p.default.Messages.A11Y_ANNOUNCEMENT_USER_UNBLOCKED
            );
          });
        },
        removeRelationship: (e, t, n) =>
          r.default
            .delete({
              url: E.Endpoints.USER_RELATIONSHIP(e),
              context: t,
              oldFormErrors: !0,
            })
            .then(() => {
              n?.();
            })
            .catch(() => {
              a.AccessibilityAnnouncer.announce(
                p.default.Messages.A11Y_ANNOUNCEMENT_GENERIC_FAIL
              );
            }),
        updateRelationship: (e, t) =>
          r.default.patch({
            url: E.Endpoints.USER_RELATIONSHIP(e),
            body: { nickname: t },
          }),
        fetchRelationships() {
          r.default
            .get({ url: E.Endpoints.USER_RELATIONSHIPS(), oldFormErrors: !0 })
            .then(
              e =>
                o.default.dispatch({
                  type: "LOAD_RELATIONSHIPS_SUCCESS",
                  relationships: e.body,
                }),
              () => o.default.dispatch({ type: "LOAD_RELATIONSHIPS_FAILURE" })
            );
        },
        confirmClearPendingRelationships(e) {
          (0, d.default)(e);
        },
        clearPendingRelationships: () =>
          r.default
            .delete({
              url: E.Endpoints.USER_RELATIONSHIPS(),
              query: {
                relationship_type: E.RelationshipTypes.PENDING_INCOMING,
              },
            })
            .then(() => {
              o.default.dispatch({
                type: "RELATIONSHIP_PENDING_INCOMING_REMOVED",
              });
            })
            .catch(() => {
              a.AccessibilityAnnouncer.announce(
                p.default.Messages.A11Y_ANNOUNCEMENT_GENERIC_FAIL
              );
            }),
      };
      var T = I;
    },
    820228: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return p;
          },
        });
      var s = n("312916"),
        i = n("766667"),
        r = n("983325");
      n("925029");
      var a = n("401388"),
        o = n("521588"),
        u = n("497683"),
        d = n("731865"),
        l = n("371728"),
        f = n("386130"),
        _ = n("232733"),
        c = n("632706"),
        g = n("871831"),
        m = n("557129"),
        h = n("360266"),
        E = n("467006"),
        p = {
          selectChannel(e) {
            let {
              guildId: t,
              channelId: n,
              messageId: i,
              jumpType: r,
              preserveDrawerState: a,
              source: o,
            } = e;
            s.default.dispatch({
              type: "CHANNEL_SELECT",
              guildId: t === E.ME ? null : t,
              channelId: n,
              messageId: i,
              jumpType: r,
              preserveDrawerState: a,
              source: o,
            });
          },
          selectPrivateChannel(e) {
            (0, o.transitionTo)(E.Routes.CHANNEL(E.ME, e));
          },
          selectVoiceChannel(e) {
            let t =
                arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
              n =
                arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
              s = d.default.getChannel(e),
              i = s?.getGuildId();
            if (
              s?.isGuildVocal() &&
              s?.isNSFW() &&
              (!g.default.getCurrentUser()?.nsfwAllowed ||
                !l.default.didAgree(i))
            ) {
              (0, o.transitionTo)(E.Routes.CHANNEL(i, e));
              return;
            }
            f.default.isSupported() &&
              (null != e && f.default.getMediaEngine().interact(),
              (0, h.selectVoiceChannelAdditional)(e, i, t, n));
          },
          disconnect() {
            let e = r.default.getRemoteSessionId();
            if (
              (null != e && i.remoteDisconnect(e), (0, u.isOldVoiceUIEnabled)())
            ) {
              let e = d.default.getChannel(_.default.getChannelId()),
                t =
                  _.default.getChannelId() === _.default.getVoiceChannelId() &&
                  e?.isThread() === !0;
              if (
                (this.selectVoiceChannel(null),
                a.close(E.PopoutWindowKeys.CHANNEL_CALL_POPOUT),
                t)
              ) {
                let e = c.default.getGuildId();
                null != e &&
                  (0, o.transitionTo)(
                    (0, m.previousTextChannelRouteForGuild)(e)
                  );
              }
            } else this.selectVoiceChannel(null);
          },
        };
    },
    360266: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          selectVoiceChannelAdditional: function () {
            return h;
          },
        });
      var s = n("910838"),
        i = n("312916"),
        r = n("222556"),
        a = n("566761"),
        o = n("733980"),
        u = n("867580"),
        d = n("273647"),
        l = n("731865"),
        f = n("327271"),
        _ = n("200560"),
        c = n("232733"),
        g = n("642174"),
        m = n("557129");
      let h = function (e, t) {
        let h = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
          E = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],
          p = l.default.getChannel(e),
          v = g.default.getCurrentClientVoiceChannelId(t ?? null) === e,
          y = null != p ? _.default.getCheck(p.guild_id) : null;
        if (!(null != t && (0, r.shouldShowMembershipVerificationGate)(t))) {
          if (null == y || y.canChat || (0, a.canLurkerListen)(p)) {
            if (null != p && !v) {
              let e = (0, m.isChannelFull)(p, g.default, f.default);
              if (e && p.isGuildStageVoice() && (0, o.getStageHasMedia)(p.id)) {
                (0, s.openModalLazy)(async () => {
                  let { default: e } = await n
                    .el("360266@2091:2151")
                    .then(n.bind(n, "456254"));
                  return t => e({ channel: p, ...t });
                });
                return;
              }
              if (e) {
                (0, s.openModalLazy)(async () => {
                  let { default: e } = await n
                    .el("360266@2459:2508")
                    .then(n.bind(n, "629783"));
                  return t => e(t);
                });
                return;
              }
            }
            h && (0, u.applyInitialVideoBackgroundOption)(),
              (0, d.default)(
                function () {
                  i.default.dispatch({
                    type: "VOICE_CHANNEL_SELECT",
                    guildId: t,
                    channelId: e,
                    currentVoiceChannelId: c.default.getVoiceChannelId(),
                    video: h,
                    stream: E,
                  });
                },
                e,
                E,
                h
              );
          }
        }
      };
    },
    116395: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          changeStreamRegion: function () {
            return F;
          },
          closeStream: function () {
            return k;
          },
          createBroadcastChannelOrStartStream: function () {
            return H;
          },
          fetchStreamPreview: function () {
            return w;
          },
          joinPrivateChannelAndWatchStream: function () {
            return x;
          },
          notifyStreamStart: function () {
            return U;
          },
          setStreamPaused: function () {
            return R;
          },
          startStream: function () {
            return O;
          },
          stopOwnStream: function () {
            return B;
          },
          stopStream: function () {
            return L;
          },
          toggleSelfStreamHidden: function () {
            return M;
          },
          updateStreamSettings: function () {
            return G;
          },
          watchStream: function () {
            return b;
          },
          watchStreamAndTransitionToStream: function () {
            return V;
          },
        });
      var s = n("512722"),
        i = n.n(s),
        r = n("682797"),
        a = n("454836"),
        o = n("312916"),
        u = n("983325"),
        d = n("188304"),
        l = n("84385"),
        f = n("491261"),
        _ = n("311545"),
        c = n("262047"),
        g = n("731865"),
        m = n("327271"),
        h = n("232733"),
        E = n("642174"),
        p = n("557129"),
        v = n("152551"),
        y = n("483650"),
        I = n("334990"),
        T = n("557982"),
        S = n("561427"),
        C = n("164545"),
        A = n("820228"),
        N = n("467006"),
        D = n("833337");
      function O(e, t, n) {
        o.default.dispatch({
          type: "STREAM_START",
          streamType: null != e ? D.StreamTypes.GUILD : D.StreamTypes.CALL,
          guildId: e,
          channelId: t,
          appContext: __OVERLAY__ ? N.AppContext.OVERLAY : N.AppContext.APP,
          ...n,
        });
      }
      function R(e, t) {
        let n = (0, d.encodeStreamKey)(e);
        o.default.dispatch({
          type: "STREAM_SET_PAUSED",
          streamKey: n,
          paused: t,
        });
      }
      function P(e, t) {
        let n = g.default.getChannel(t);
        return (
          i()(null != n, "Cannot join a null voice channel"),
          !E.default.isInChannel(t) &&
            (0, p.isChannelFull)(n, E.default, m.default)
        );
      }
      function b(e, t) {
        if (null != u.default.getRemoteSessionId()) return;
        let { guildId: n, channelId: s } = e;
        if (null != n && P(n, s)) return;
        let i = (0, d.encodeStreamKey)(e),
          r =
            t?.forceMultiple ||
            _.default.getAllActiveStreamsForChannel(s).filter(e => {
              let { ownerId: t } = e;
              return t !== c.default.getId();
            }).length >= 2;
        o.default.dispatch({
          type: "STREAM_WATCH",
          streamKey: i,
          allowMultiple: r,
        }),
          !(r || t?.noFocus) && C.default.selectParticipant(e.channelId, i);
      }
      function M(e, t) {
        o.default.dispatch({
          type: "STREAM_UPDATE_SELF_HIDDEN",
          channelId: e,
          selfStreamHidden: t,
        });
      }
      function V(e, t) {
        let { guildId: n, channelId: s } = e;
        if (null != n && P(n, s)) return;
        b(e, t);
        let i = f.default.getWindowOpen(N.PopoutWindowKeys.CHANNEL_CALL_POPOUT),
          r = h.default.getVoiceChannelId();
        (!i || r !== s) && (0, l.default)(e);
      }
      function L(e) {
        let t =
          !(arguments.length > 1) || void 0 === arguments[1] || arguments[1];
        k(e, t),
          o.default.dispatch({
            type: "STREAM_STOP",
            streamKey: e,
            appContext: __OVERLAY__ ? N.AppContext.OVERLAY : N.AppContext.APP,
          });
      }
      function k(e) {
        let t =
          !(arguments.length > 1) || void 0 === arguments[1] || arguments[1];
        o.default.dispatch({
          type: "STREAM_CLOSE",
          streamKey: e,
          canShowFeedback: t,
        });
      }
      async function w(e, t, n) {
        let s = (0, d.encodeStreamKey)({
          streamType: null != e ? D.StreamTypes.GUILD : D.StreamTypes.CALL,
          guildId: e,
          channelId: t,
          ownerId: n,
        });
        o.default.dispatch({
          type: "STREAM_PREVIEW_FETCH_START",
          streamKey: s,
        });
        try {
          let e = await a.default.get({
            url: N.Endpoints.STREAM_PREVIEW(s),
            query: { version: Date.now() },
            oldFormErrors: !0,
          });
          o.default.dispatch({
            type: "STREAM_PREVIEW_FETCH_SUCCESS",
            streamKey: s,
            previewURL: e.body.url,
          });
        } catch (t) {
          let e;
          429 === t.status &&
            (e = t.body.retry_after * v.default.Millis.SECOND),
            o.default.dispatch({
              type: "STREAM_PREVIEW_FETCH_FAIL",
              streamKey: s,
              retryAfter: e,
            });
        }
      }
      async function U(e) {
        try {
          await I.default.post({
            url: N.Endpoints.STREAM_NOTIFY(e),
            oldFormErrors: !0,
            trackedActionData: { event: r.NetworkActionNames.STREAM_NOTIFY },
          });
        } catch (e) {}
      }
      function G(e) {
        (0, y.trackStreamSettingsUpdate)(e.preset, e.resolution, e.frameRate),
          o.default.dispatch({ type: "STREAM_UPDATE_SETTINGS", ...e });
      }
      function F(e, t) {
        a.default.patch({
          url: N.Endpoints.STREAM(e),
          body: { region: t },
          oldFormErrors: !0,
        });
      }
      function B() {
        let e =
            !(arguments.length > 0) || void 0 === arguments[0] || arguments[0],
          t = _.default.getCurrentUserActiveStream();
        null != t && L((0, d.encodeStreamKey)(t), e);
      }
      function H(e) {
        let { channelId: t, pid: n, sourceId: s, sourceName: i } = e;
        (null != n || null != s || null != i) &&
          (o.default.dispatch({
            type: "START_BROADCAST_STREAM",
            options: { pid: n, sourceId: s, sourceName: i },
          }),
          null == t
            ? S.default.createBroadcastPrivateChannel()
            : O(null, t, { pid: n, sourceId: s, sourceName: i }));
      }
      function x(e, t) {
        let n = c.default.getId(),
          s = (0, d.decodeStreamKey)(t),
          i = h.default.getVoiceChannelId();
        null != i && i !== e && A.default.disconnect(),
          S.default.addRecipient(e, n, void 0, () => {
            T.default.call(e, !1, !1, null, () => {
              V(s);
            });
          });
      }
    },
    714558: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          fetchPremiumSubscriptionPlans: function () {
            return c;
          },
          fetchSubscriptionPlansBySKUs: function () {
            return _;
          },
          fetchSubscriptionPlansForSKU: function () {
            return f;
          },
          resetSubscriptionPlanData: function () {
            return g;
          },
        });
      var s = n("454836"),
        i = n("312916"),
        r = n("421752"),
        a = n("579914"),
        o = n("743102"),
        u = n("242677"),
        d = n("467006"),
        l = n("171168");
      async function f(e, t, n, l, f) {
        i.default.dispatch({ type: "SUBSCRIPTION_PLANS_FETCH", skuId: e });
        try {
          let r = {
              url: d.Endpoints.STORE_PUBLISHED_LISTINGS_SUBSCRIPTION_PLANS(e),
              oldFormErrors: !0,
            },
            o = {};
          null != t && (o.country_code = t),
            null != n && (o.payment_source_id = n),
            null != l && (o.include_unpublished = l),
            null != f && (o.revenue_surface = f),
            (r.query = o),
            !a.default.ipCountryCodeLoaded &&
              (await (0, u.fetchIpCountryCode)());
          let _ = await s.default.get(r);
          i.default.dispatch({
            type: "SUBSCRIPTION_PLANS_FETCH_SUCCESS",
            skuId: e,
            subscriptionPlans: _.body,
          });
        } catch (t) {
          throw (
            (i.default.dispatch({
              type: "SUBSCRIPTION_PLANS_FETCH_FAILURE",
              skuId: e,
            }),
            (0, o.captureBillingException)(t),
            new r.default(t))
          );
        }
      }
      function _(e, t) {
        return Promise.all(
          e.filter(e => e !== l.PremiumSubscriptionSKUs.NONE).map(e => f(e, t))
        );
      }
      function c(e, t, n) {
        return Promise.all(
          l.ACTIVE_PREMIUM_SKUS.filter(
            e => e !== l.PremiumSubscriptionSKUs.NONE
          ).map(s => f(s, e, t, void 0, n))
        );
      }
      function g() {
        i.default.dispatch({ type: "SUBSCRIPTION_PLANS_RESET" });
      }
    },
    122677: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          acceptAgreements: function () {
            return m;
          },
          fetchCurrentUser: function () {
            return g;
          },
          fetchMutualFriends: function () {
            return v;
          },
          fetchProfile: function () {
            return p;
          },
          getUser: function () {
            return E;
          },
          setFlag: function () {
            return h;
          },
        }),
        n("789020");
      var s = n("512722"),
        i = n.n(s),
        r = n("550960"),
        a = n("388684"),
        o = n("454836"),
        u = n("312916"),
        d = n("535291"),
        l = n("871831"),
        f = n("334990"),
        _ = n("467006");
      let c = new a.default("UserProfileModalActionCreators");
      function g() {
        let e =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
          { withAnalyticsToken: t = !1 } = e;
        return o.default
          .get({
            url: _.Endpoints.ME,
            query: { with_analytics_token: t },
            oldFormErrors: !0,
          })
          .then(
            e => (
              u.default.dispatch({
                type: "CURRENT_USER_UPDATE",
                user: e.body,
                analyticsToken: t ? e.body.analytics_token : void 0,
              }),
              new d.default(e.body)
            )
          );
      }
      function m() {
        let e =
            !(arguments.length > 0) || void 0 === arguments[0] || arguments[0],
          t =
            !(arguments.length > 1) || void 0 === arguments[1] || arguments[1];
        return f.default
          .patch({
            url: _.Endpoints.USER_AGREEMENTS,
            trackedActionData: {
              event: r.NetworkActionNames.USER_ACCEPT_AGREEMENTS,
            },
            body: { terms: e, privacy: t },
            oldFormErrors: !0,
          })
          .then(
            () => !0,
            () => !1
          );
      }
      function h(e, t) {
        let n = l.default.getCurrentUser();
        i()(null != n, "setFlag: user cannot be undefined");
        let s = t ? n.flags | e : n.flags & ~e;
        return o.default.patch({
          url: _.Endpoints.ME,
          oldFormErrors: !0,
          body: { flags: s },
        });
      }
      function E(e) {
        let t = l.default.getUser(e);
        return null != t
          ? Promise.resolve(t)
          : o.default
              .get({ url: _.Endpoints.USER(e), oldFormErrors: !0 })
              .then(
                t => (
                  u.default.dispatch({ type: "USER_UPDATE", user: t.body }),
                  l.default.getUser(e)
                )
              );
      }
      async function p(e) {
        let {
            friendToken: t,
            withMutualGuilds: n,
            withMutualFriendsCount: s,
            guildId: i,
            connectionsRoleId: r,
          } = arguments.length > 1 && void 0 !== arguments[1]
            ? arguments[1]
            : {},
          a = arguments.length > 2 ? arguments[2] : void 0;
        u.default.dispatch({ type: "USER_PROFILE_FETCH_START", userId: e });
        try {
          let d = await o.default.get({
            url: _.Endpoints.USER_PROFILE(e),
            query: {
              friend_token: t,
              with_mutual_guilds: n,
              with_mutual_friends_count: s,
              guild_id: i,
              connections_role_id: r,
            },
            oldFormErrors: !0,
          });
          return (
            a?.(d.body, i),
            u.default.dispatch({ type: "USER_UPDATE", user: d.body.user }),
            u.default.dispatch({
              type: "USER_PROFILE_FETCH_SUCCESS",
              ...d.body,
            }),
            null != i &&
              null != d.body.guild_member &&
              u.default.dispatch({
                type: "GUILD_MEMBER_PROFILE_UPDATE",
                guildId: i,
                guildMember: d.body.guild_member,
              }),
            d.body
          );
        } catch (t) {
          throw (
            (null != t &&
              t?.body != null &&
              c.warn(`fetchProfile error: ${t.body.code} - ${t.body.message}`),
            u.default.dispatch({
              type: "USER_PROFILE_FETCH_FAILURE",
              userId: e,
            }),
            t)
          );
        }
      }
      async function v(e) {
        u.default.dispatch({ type: "MUTUAL_FRIENDS_FETCH_START", userId: e });
        try {
          let t = await o.default.get({
            url: _.Endpoints.USER_RELATIONSHIPS(e),
            oldFormErrors: !0,
          });
          u.default.dispatch({
            type: "MUTUAL_FRIENDS_FETCH_SUCCESS",
            userId: e,
            mutualFriends: t.body,
          });
        } catch (t) {
          throw (
            (t?.body != null &&
              c.warn(
                `fetchMutualFriends error: ${t.body.code} - ${t.body.message}`
              ),
            u.default.dispatch({
              type: "MUTUAL_FRIENDS_FETCH_FAILURE",
              userId: e,
            }),
            t)
          );
        }
      }
    },
    620412: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return g;
          },
        });
      var s = n("454836"),
        i = n("986329"),
        r = n("312916"),
        a = n("62755"),
        o = n("207958"),
        u = n("328470"),
        d = n("204606"),
        l = n("567713"),
        f = n("467006"),
        _ = n("999114"),
        c = n("30175"),
        g = {
          open() {
            let e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : null,
              t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : null,
              n =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : { openWithoutBackstack: !1 };
            (0, a.default)(e, t, n);
          },
          init: function (e) {
            let t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : null,
              n = arguments.length > 2 ? arguments[2] : void 0;
            r.default.dispatch({
              type: "USER_SETTINGS_MODAL_INIT",
              section: e,
              subsection: t,
              ...n,
            });
          },
          close() {
            let e = o.default.onClose;
            r.default.dispatch({ type: "USER_SETTINGS_MODAL_CLOSE" }),
              null != e && e();
          },
          setSection(e) {
            let t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : null,
              n =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : {};
            r.default.dispatch({
              type: "USER_SETTINGS_MODAL_SET_SECTION",
              section: e,
              subsection: t,
              ...n,
            });
          },
          clearSubsection(e) {
            r.default.dispatch({
              type: "USER_SETTINGS_MODAL_CLEAR_SUBSECTION",
              forSection: e,
            });
          },
          clearScrollPosition(e) {
            r.default.dispatch({
              type: "USER_SETTINGS_MODAL_CLEAR_SCROLL_POSITION",
              forSection: e,
            });
          },
          updateAccount(e) {
            r.default.dispatch({
              type: "USER_SETTINGS_MODAL_UPDATE_ACCOUNT",
              settings: e,
            });
          },
          submitComplete() {
            r.default.dispatch({ type: "USER_SETTINGS_MODAL_SUBMIT_COMPLETE" });
          },
          reset() {
            r.default.dispatch({ type: "USER_SETTINGS_MODAL_RESET" });
          },
          saveAccountChanges(e, t) {
            r.default.dispatch({ type: "USER_SETTINGS_MODAL_SUBMIT" });
            let {
                username: n,
                email: a,
                emailToken: o,
                password: g,
                avatar: m,
                newPassword: h,
                discriminator: E,
              } = e,
              { close: p } = t;
            return (0, l.default)(
              e => {
                let t = {
                    username: n,
                    email: a,
                    email_token: o,
                    password: g,
                    avatar: m,
                    new_password: h,
                    ...e,
                    discriminator: null != E && "" !== E ? E : void 0,
                  },
                  r = i.default.get(f.DEVICE_TOKEN),
                  u = (0, _.getDevicePushProvider)();
                null != u &&
                  null != r &&
                  ((t.push_provider = u), (t.push_token = r));
                let d = i.default.get(f.DEVICE_VOIP_TOKEN);
                return (
                  null != _.DEVICE_PUSH_VOIP_PROVIDER &&
                    null != d &&
                    ((t.push_voip_provider = _.DEVICE_PUSH_VOIP_PROVIDER),
                    (t.push_voip_token = d)),
                  s.default.patch({
                    url: f.Endpoints.ME,
                    oldFormErrors: !0,
                    body: t,
                  })
                );
              },
              {
                checkEnabled: !1,
                modalProps: { title: c.default.Messages.TWO_FA_CHANGE_ACCOUNT },
                hooks: {
                  onEarlyClose: () =>
                    r.default.dispatch({
                      type: "USER_SETTINGS_MODAL_SUBMIT_FAILURE",
                      errors: {},
                    }),
                },
              }
            ).then(
              e => {
                let t = e.body,
                  n = t.token;
                return (
                  u.default.track(f.AnalyticEvents.USER_AVATAR_UPDATED, {
                    animated: (0, d.isAnimatedIconHash)(t.avatar),
                  }),
                  delete t.token,
                  r.default.dispatch({
                    type: "UPDATE_TOKEN",
                    token: n,
                    userId: t.id,
                  }),
                  r.default.dispatch({ type: "CURRENT_USER_UPDATE", user: t }),
                  null != h &&
                    r.default.dispatch({
                      type: "USER_PASSWORD_UPDATE",
                      user: t,
                      newPassword: h,
                    }),
                  null != g &&
                    null != h &&
                    r.default.dispatch({
                      type: "PASSWORD_UPDATED",
                      userId: t.id,
                    }),
                  p ? this.close() : this.submitComplete(),
                  e
                );
              },
              e => (
                r.default.dispatch({
                  type: "USER_SETTINGS_MODAL_SUBMIT_FAILURE",
                  errors: e.body,
                }),
                e
              )
            );
          },
        };
    },
    152103: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          focus: function () {
            return o;
          },
          fullscreenChange: function () {
            return f;
          },
          hidden: function () {
            return u;
          },
          init: function () {
            return c;
          },
          resized: function () {
            return l;
          },
          unload: function () {
            return g;
          },
          visibilityChange: function () {
            return _;
          },
        });
      var s = n("392711"),
        i = n("312916"),
        r = n("45245"),
        a = n("40093");
      function o(e, t) {
        i.default.dispatch({
          type: "WINDOW_FOCUS",
          windowId: (0, a.getWindowId)(e),
          focused: t,
        });
      }
      function u(e) {
        i.default.dispatch({
          type: "WINDOW_HIDDEN",
          windowId: (0, a.getWindowId)(e),
        });
      }
      let d = (0, s.memoize)(e =>
        (0, s.debounce)((t, n) => {
          i.default.dispatch({
            type: "WINDOW_RESIZED",
            windowId: e,
            width: t,
            height: n,
          });
        }, 100)
      );
      function l(e) {
        d((0, a.getWindowId)(e))(e.innerWidth, e.innerHeight);
      }
      function f(e) {
        let t = (0, a.getWindowId)(e);
        i.default.dispatch({
          type: "WINDOW_FULLSCREEN_CHANGE",
          windowId: t,
          isElementFullscreen: (0, r.isFullScreen)(null, e.document),
        });
      }
      function _(e) {
        let t = (0, a.getWindowId)(e);
        i.default.dispatch({
          type: "WINDOW_VISIBILITY_CHANGE",
          windowId: t,
          visible: "visible" === e.document.visibilityState,
        });
      }
      function c(e) {
        let t = (0, a.getWindowId)(e),
          n = e.document;
        i.default.dispatch({
          type: "WINDOW_INIT",
          windowId: t,
          isElementFullscreen: (0, r.isFullScreen)(null, n),
          focused: n.hasFocus(),
          width: e.innerWidth,
          height: e.innerHeight,
          visible: "visible" === n.visibilityState,
        });
      }
      function g(e) {
        i.default.dispatch({
          type: "WINDOW_UNLOAD",
          windowId: (0, a.getWindowId)(e),
        });
      }
    },
    831085: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        });
      var s = n("735250"),
        i = n("470079"),
        r = n("803997"),
        a = n.n(r),
        o = n("974328"),
        u = n("30175"),
        d = n("554985");
      class l extends i.PureComponent {
        static #e = (this.defaultProps = {
          btnClass: "",
          isLoading: !1,
          disallowBackupCodes: !1,
          error: null,
          forceNoPlaceholder: !1,
        });
        render() {
          let {
              title: e,
              actionText: t,
              children: n,
              error: r,
              isLoading: l,
              maxLength: f,
              transitionState: _,
              helpMessage: c,
              retryPrompt: g,
              retrySuccessMessage: m,
            } = this.props,
            { code: h, errorMessage: E, retrySuccess: p } = this.state,
            v =
              i.Children.count(n) > 0
                ? (0, s.jsx)(o.Card, {
                    type: o.Card.Types.WARNING,
                    className: d.card,
                    children: (0, s.jsx)(o.Text, {
                      variant: "text-md/normal",
                      children: n,
                    }),
                  })
                : null,
            y =
              null != g
                ? (0, s.jsxs)(o.Text, {
                    className: a()(d.submitText, d.spacing),
                    variant: "text-sm/normal",
                    children: [
                      (0, s.jsx)("br", {}),
                      (0, s.jsx)(o.Clickable, {
                        className: a()(d.spacing, d.link),
                        onClick: this.handleRetry,
                        children: (0, s.jsx)(o.Anchor, { children: g }),
                      }),
                    ],
                  })
                : null,
            I = p
              ? (0, s.jsx)(o.Card, {
                  type: o.Card.Types.SUCCESS,
                  className: d.card,
                  children: (0, s.jsx)(o.Text, {
                    variant: "text-md/normal",
                    children: m,
                  }),
                })
              : null;
          return (0, s.jsx)(o.ModalRoot, {
            transitionState: _,
            children: (0, s.jsxs)("form", {
              onSubmit: this.handleSubmit,
              children: [
                (0, s.jsx)(o.ModalHeader, {
                  separator: !1,
                  children: (0, s.jsx)(o.Heading, {
                    variant: "heading-lg/semibold",
                    children: e,
                  }),
                }),
                (0, s.jsxs)(o.ModalContent, {
                  children: [
                    null != c
                      ? (0, s.jsx)(o.Text, {
                          color: "text-normal",
                          variant: "text-md/normal",
                          className: d.spacing,
                          children: c,
                        })
                      : null,
                    v,
                    I,
                    (0, s.jsxs)(o.FormItem, {
                      title: this.getLabelText(),
                      className: d.spacing,
                      children: [
                        (0, s.jsx)(o.TextInput, {
                          inputRef: this.setRef,
                          onChange: this.handleCodeChange,
                          placeholder: this.getPlaceholder() ?? void 0,
                          maxLength: f ?? 10,
                          value: h,
                          autoComplete: "one-time-code",
                          autoFocus: !0,
                        }),
                        this.errorPresent()
                          ? (0, s.jsx)(o.Text, {
                              color: "text-danger",
                              variant: "text-xs/normal",
                              className: d.error,
                              children: null != r ? r : E,
                            })
                          : null,
                        y,
                      ],
                    }),
                  ],
                }),
                (0, s.jsxs)(o.ModalFooter, {
                  children: [
                    (0, s.jsx)(o.Button, {
                      type: "submit",
                      disabled: l || 0 === h.length,
                      children: t ?? u.default.Messages.CONFIRM,
                    }),
                    (0, s.jsx)(o.Button, {
                      onClick: this.handleCancel,
                      disabled: l,
                      look: o.Button.Looks.LINK,
                      color: o.Button.Colors.PRIMARY,
                      children: u.default.Messages.CANCEL,
                    }),
                  ],
                }),
              ],
            }),
          });
        }
        constructor(...e) {
          super(...e),
            (this.state = { code: "", errorMessage: "", retrySuccess: !1 }),
            (this.setRef = e => {
              this._input = e;
            }),
            (this.getLabelText = () =>
              this.props.label ??
              (this.props.disallowBackupCodes
                ? u.default.Messages.TWO_FA_ENTER_TOKEN_NO_BACKUP_LABEL
                : u.default.Messages.TWO_FA_ENTER_TOKEN_LABEL)),
            (this.getSupportedCodeTypes = () =>
              this.props.disallowBackupCodes
                ? u.default.Messages.TWO_FA_AUTH_CODE_NO_BACKUP
                : u.default.Messages.TWO_FA_AUTH_CODE),
            (this.getPlaceholder = () =>
              this.props.forceNoPlaceholder
                ? null
                : this.props.placeholder ?? this.getSupportedCodeTypes()),
            (this.errorPresent = () =>
              (null != this.props.error && "" !== this.props.error) ||
              (null != this.state.errorMessage &&
                "" !== this.state.errorMessage)),
            (this.handleRetry = () => {
              let { onRetry: e } = this.props;
              e?.().then(() => this.setState({ retrySuccess: !0 }));
            }),
            (this.handleSubmit = e => {
              e.preventDefault();
              let { handleSubmit: t, onError: n } = this.props;
              t(this.state.code).catch(e => {
                null != e.body &&
                  (n?.(e.body),
                  e.body.message &&
                    this.setState({ errorMessage: e.body.message }));
              });
            }),
            (this.handleCancel = () => {
              let { onClose: e, handleEarlyClose: t } = this.props;
              e(), t?.();
            }),
            (this.handleCodeChange = e => {
              this.setState({ code: e });
            });
        }
      }
      var f = l;
    },
    195893: function (e, t, n) {
      "use strict";
      n.r(t);
      var s = n("875650");
      n.es(s, t);
    },
    981956: function (e, t, n) {
      "use strict";
      n.r(t);
      var s = n("18854");
      n.es(s, t);
    },
    165750: function (e, t, n) {
      "use strict";
      n.r(t);
      var s = n("369368");
      n.es(s, t);
    },
    797217: function (e, t, n) {
      "use strict";
      n.r(t);
      var s = n("479896");
      n.es(s, t);
    },
    210624: function (e, t, n) {
      "use strict";
      n.r(t);
      var s = n("944449");
      n.es(s, t);
    },
    703666: function (e, t, n) {
      "use strict";
      n.r(t);
      var s = n("597484");
      n.es(s, t);
    },
    465744: function (e, t, n) {
      "use strict";
      n.r(t);
      var s = n("157130");
      n.es(s, t);
    },
    57365: function (e, t, n) {
      "use strict";
      n.r(t);
      var s = n("362273");
      n.es(s, t);
    },
    849557: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        }),
        ((s =
          i || (i = {})).CHANNEL_CHAT_RESIZABLE_SIDEBAR_RESIZE_HANDLE_WIDTH =
          "8px"),
        (s.WAVE_SPLASH_RESPONSIVE_WIDTH_MOBILE = "485px"),
        (s.ACTIVITIES_HOME_WHATS_NEW_TILE_WIDTH = "224px"),
        (s.ACTIVITIES_HOME_WHATS_NEW_HORIZONTAL_MARGIN = "10px"),
        (s.ACTIVITIES_HOME_HAPPENING_NOW_CARD_WIDTH = "305px"),
        (s.ACTIVITIES_HOME_HAPPENING_NOW_GAP = "16px"),
        (s.ACTIVITY_BOOKMARK_EMBED_IMAGE_WIDTH = "356px"),
        (s.FOLDER_ITEM_ANIMATION_DURATION = "150ms"),
        (s.FOLDER_ITEM_GUILD_ICON_SIZE = "48px"),
        (s.GUILD_TOOLTIP_ICON_SIZE = "20px"),
        (s.GUILD_TOOLTIP_ICON_SIZE_V_2 = "16px"),
        (s.MEMBER_LIST_ITEM_AVATAR_DECORATION_PADDING = "2px"),
        (s.FULL_SCREEN_LAYER_ANIMATION_DURATION = "150ms"),
        (s.GUILD_SETTINGS_PREMIUM_TIER_STATUS_PROGRESS_WITH_SUBSCRIPTIONS_MARGIN_TOP =
          "7px"),
        (s.STICKERS_CONSTANTS_STICKER_PURCHASE_PACK_PREVIEW_DIMENSIONS =
          "76px"),
        (s.STICKERS_CONSTANTS_STICKER_PURCHASE_PACK_PREVIEW_PADDING = "2px"),
        (s.STICKERS_CONSTANTS_STICKER_PURCHASE_PACK_PREVIEW_MARGIN = "0"),
        (s.STICKERS_CONSTANTS_STICKER_CATEGORY_LIST_PADDING = "8px"),
        (s.STICKERS_CONSTANTS_STICKER_CATEGORY_ICON_SIZE = "32px"),
        (s.STICKERS_CONSTANTS_STICKER_CATEGORY_ICON_MARGIN = "8px"),
        (s.STICKERS_CONSTANTS_STICKER_CATEGORY_UNICODE_ICON_SIZE = "24px"),
        (s.STICKERS_CONSTANTS_CATEGORY_SEPARATOR_SIZE = "1px"),
        (s.STICKERS_CONSTANTS_CATEGORY_SEPARATOR_MARGIN_VERTICAL = "12px"),
        (s.STICKERS_CONSTANTS_STICKER_PICKER_BREAKPOINT_SMALL = "360px"),
        (s.STICKERS_CONSTANTS_STICKER_PICKER_BREAKPOINT_MEDIUM = "446px"),
        (s.STICKERS_CONSTANTS_STICKERS_LIST_PADDING_TOP = "0"),
        (s.STICKERS_CONSTANTS_STICKERS_LIST_PADDING_TOP_SEARCH_RESULTS = "8px"),
        (s.STICKERS_CONSTANTS_STICKERS_LIST_PADDING_RIGHT = "0"),
        (s.STICKERS_CONSTANTS_STICKERS_LIST_PADDING_BOTTOM = "0"),
        (s.STICKERS_CONSTANTS_STICKERS_LIST_PADDING_LEFT = "8px"),
        (s.STICKERS_CONSTANTS_STICKERS_LIST_DIVIDER_HEIGHT = "30px"),
        (s.STICKERS_CONSTANTS_STICKER_PICKER_PREVIEW_DIMENSIONS = "96px"),
        (s.STICKERS_CONSTANTS_STICKER_PICKER_PREVIEW_DIMENSIONS_SMALL = "80px"),
        (s.STICKERS_CONSTANTS_STICKER_PICKER_PREVIEW_PADDING = "2px"),
        (s.STICKERS_CONSTANTS_STICKER_PICKER_PREVIEW_MARGIN = "12px"),
        (s.STICKERS_CONSTANTS_STICKERS_LIST_EMPTY_GUILD_UPSELL_HEIGHT = "54px"),
        (s.EXPRESSION_PICKER_CONSTANTS_EXPRESSION_PICKER_LIST_SECTION_HEADING_HEIGHT =
          "32px"),
        (s.EXPRESSION_PICKER_CONSTANTS_EXPRESSION_PICKER_INSPECTOR_BAR_GRAPHIC_PRIMARY_DIMENSIONS =
          "28px"),
        (s.EXPRESSION_PICKER_CONSTANTS_EXPRESSION_PICKER_INSPECTOR_BAR_GRAPHIC_SECONDARY_DIMENSIONS =
          "32px"),
        (s.STICKERS_CONSTANTS_STICKER_DIMENSION = "160px"),
        (s.STICKERS_CONSTANTS_STICKER_PICKER_PREVIEW_MARGIN_SMALL = "4px"),
        (s.ASPECT_STABLE_IMAGE_CONTAINER_PADDING = "20px"),
        (s.USER_PROFILE_THEMED_CONTAINER_USER_PROFILE_THEMED_PADDING = "4px"),
        (s.USER_PROFILE_THEMED_CONTAINER_USER_POPOUT_WIDTH = "340px"),
        (s.USER_PROFILE_THEMED_CONTAINER_PROFILE_EFFECTS_USER_POPOUT_WIDTH =
          "280px"),
        (s.USER_BANNER_PREMIUM_BANNER_HEIGHT_POPOUT = "120px"),
        (s.USER_BANNER_PREMIUM_BANNER_HEIGHT_NO_BANNER_IMAGE_POPOUT = "90px"),
        (s.USER_BANNER_BANNER_HEIGHT_POPOUT = "60px"),
        (s.USER_BANNER_PREMIUM_BANNER_HEIGHT_PROFILE = "212px"),
        (s.USER_BANNER_BANNER_HEIGHT_PROFILE = "106px"),
        (s.USER_BANNER_BANNER_HEIGHT_POMELO = "64px"),
        (s.USER_BANNER_PREMIUM_BANNER_HEIGHT_SETTINGS = "100px"),
        (s.USER_BANNER_BANNER_HEIGHT_PANEL = "120px"),
        (s.USER_BANNER_CANCEL_MODAL_HEIGHT = "42px"),
        (s.PREMIUM_GUILD_PROGRESS_BAR_PROGRESS_BAR_WIDTH = "24px"),
        (s.PREMIUM_GUILD_PROGRESS_BAR_TIER_MARKER_SIZE = "16px"),
        (s.ACTIVITY_SHELF_MODAL_MODAL_PADDING = "80px"),
        (s.ACTIVITY_SHELF_MODAL_MODAL_WIDTH = "496px"),
        (s.ACTIVITY_SHELF_MODAL_MODAL_MIN_WIDTH = "496px"),
        (s.ACTIVITY_SHELF_MODAL_MODAL_MAX_WIDTH = "1024px"),
        (s.ACTIVITY_SHELF_MODAL_MODAL_MAX_HEIGHT = "720px"),
        (s.ACTIVITY_SHELF_MODAL_MODAL_ART_HEIGHT = "64px"),
        (s.ACTIVITY_SHELF_ITEM_ACTIVITY_ITEM_HEIGHT = "230px"),
        (s.ACTIVITY_SHELF_ITEM_LARGE_ACTIVITY_ITEM_HEIGHT = "143px"),
        (s.ACTIVITY_SHELF_SLIDE_ACTIVITY_DIRECTORY_SHELF_GRID_GAP = "16px"),
        (s.LIVE_INDICATOR_BORDER_RADIUS = "16px"),
        (s.GUILD_PRODUCT_DOWNLOAD_MODAL_HEADER_IMAGE_WIDTH = "119px"),
        (s.FOLDER_ITEM_GUILD_ICON_MARGIN = "8px"),
        (s.EMBEDDED_APPLICATION_INVITE_IMAGE_WIDTH_LARGE = "288px"),
        (s.EMBEDDED_APPLICATION_INVITE_IMAGE_WIDTH_SMALL = "225px"),
        (s.EMBEDDED_APPLICATION_INVITE_CONTENT_WIDTH = "576px"),
        (s.GUILD_ROLE_SUBSCRIPTION_CARD_BASIC_INFO_TIER_IMAGE_SIZE = "80px"),
        (s.GUILD_ROLE_SUBSCRIPTION_CARD_BASIC_INFO_TIER_IMAGE_SIZE_MOBILE =
          "48px"),
        (s.APPLICATION_DIRECTORY_CONTENT_MAX_WIDTH = "1024px"),
        (s.GUILD_COUNT_SMALL_ICON_SIZE = "16px"),
        (s.GUILD_COUNT_LARGE_ICON_SIZE = "20px"),
        (s.GUILD_BOOSTING_SIDEBAR_DISPLAY_CONDITIONAL_BOTTOM_MARGIN = "12px"),
        (s.USER_PREMIUM_GUILD_SUBSCRIPTION_EASTER_EGG_SIZE = "196px"),
        (s.APPLICATION_SUBSCRIPTION_CARD_LISTING_IMAGE_SIZE = "40px"),
        (s.EMOJI_PICKER_CONSTANTS_EMOJI_CONTAINER_PADDING_HORIZONTAL = "4px"),
        (s.EMOJI_PICKER_CONSTANTS_EMOJI_LIST_PADDING_LEFT = "8px"),
        (s.EMOJI_PICKER_CONSTANTS_GUILD_CATEGORY_ICON_SIZE = "32px"),
        (s.EMOJI_PICKER_CONSTANTS_GUILD_CATEGORY_ICON_MARGIN_VERICAL = "8px"),
        (s.EMOJI_PICKER_CONSTANTS_UNICODE_CATEGORY_ICON_SIZE = "24px"),
        (s.EMOJI_PICKER_CONSTANTS_UNICODE_CATEGORY_ICON_MARGIN_VERTICAL =
          "2px"),
        (s.EMOJI_PICKER_CONSTANTS_UNICODE_CATEGORY_ICON_PADDING = "4px"),
        (s.EMOJI_PICKER_CONSTANTS_CATEGORY_SEPARATOR_SIZE = "1px"),
        (s.EMOJI_PICKER_CONSTANTS_CATEGORY_SEPARATOR_MARGIN_VERTICAL = "12px"),
        (s.EMOJI_PICKER_CONSTANTS_EMOJI_CONTAINER_PADDING_VERTICAL = "4px"),
        (s.EMOJI_PICKER_CONSTANTS_DIVERSITY_EMOJI_SIZE = "24px"),
        (s.EMOJI_PICKER_CONSTANTS_EMOJI_LIST_PADDING_TOP = "0"),
        (s.EMOJI_PICKER_CONSTANTS_EMOJI_LIST_PADDING_RIGHT = "0"),
        (s.EMOJI_PICKER_CONSTANTS_EMOJI_LIST_PADDING_BOTTOM = "8px"),
        (s.EMOJI_PICKER_CONSTANTS_EMOJI_LIST_SEARCH_RESULTS_PADDING_TOP =
          "8px"),
        (s.EMOJI_PICKER_CONSTANTS_EMOJI_SECTION_MARGIN_BOTTOM = "12px"),
        (s.EMOJI_PICKER_CONSTANTS_EMOJI_PREMIUM_UPSELL_HEIGHT = "54px"),
        (s.EMOJI_PICKER_CONSTANTS_EMOJI_PREMIUM_UPSELL_MARGIN_TOP = "16px"),
        (s.VOICE_WIDGET_TOP_MARGIN =
          "var(--custom-widget-bar-height) + calc(2 * var(--custom-widget-bar-padding))"),
        (s.EXPRESSION_SUGGESTIONS_CONTAINER_PADDING = "8px"),
        (s.EXPRESSION_SUGGESTIONS_STICKER_SUGGESTION_SIZE = "48px"),
        (s.EXPRESSION_SUGGESTIONS_STICKER_SUGGESTION_MARGIN = "8px"),
        (s.COLLECTION_GALLERY_MEDIA_BREAKPOINT = "1024px"),
        (s.COLLECTION_GALLERY_COLUMN_CARD_HEIGHT = "600px"),
        (s.COLLECTION_GALLERY_ROW_CARD_HEIGHT = "283px"),
        (s.COLLECTION_LIST_CARD_GAP = "16px"),
        (s.GUILD_SETTINGS_ROLE_SUBSCRIPTIONS_OVERVIEW_SETTINGS_MAX_WIDTH =
          "520px"),
        (s.IMPORT_BENEFITS_MODAL_ROLE_ICON_SIZE = "40px"),
        (s.ROLE_ICON_UPLOADER_ICON_SIZE = "24px"),
        (s.GRADIENT_PROGRESS_NOTCH_WIDTH = "8px"),
        (s.GAME_LIST_ROW_MIN_HEIGHT = "62px"),
        (s.GAME_LIST_LINKED_TO_GLOW_DURATION = "2000ms"),
        (s.INTERACTION_IFRAME_MODAL_MODAL_MIN_WIDTH = "320px"),
        (s.INTERACTION_IFRAME_MODAL_MODAL_MAX_WIDTH = "1280px"),
        (s.INTERACTION_IFRAME_MODAL_MODAL_MARGIN = "80px"),
        (s.INTERACTION_IFRAME_MODAL_MODAL_HEADER_HEIGHT = "52px"),
        (s.APPLICATION_DIRECTORY_PROFILE_ICON_SIZE = "122px");
      var s,
        i,
        r = i;
    },
    648519: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
      var s = n("454836"),
        i = n("467006"),
        r = n("30175");
      class a extends s.default.V8APIError {
        constructor(e, t) {
          super(
            e,
            t,
            null != t
              ? r.default.Messages.FORM_ERROR_GENERIC_WITH_DETAILS.format({
                  statusPageURL: i.Links.STATUS,
                  details: `${t}`,
                })
              : r.default.Messages.FORM_ERROR_GENERIC.format({
                  statusPageURL: i.Links.STATUS,
                })
          );
        }
      }
    },
    878598: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var s = n("566031"),
        i = n("152551"),
        r = n("421752"),
        a = n("30175");
      class o extends r.default {
        constructor(e, t) {
          super(e, t),
            429 === this.status &&
              (this.message = this._getMessageFromRateLimit(e));
        }
        _getMessageFromRateLimit(e) {
          let t = e.body.retry_after,
            n = (0, s.diffAsUnits)(0, t * i.default.Millis.SECOND);
          return (0, s.unitsAsStrings)(n, {
            days: a.default.Messages
              .PREMIUM_GUILD_SUBSCRIPTION_ERROR_RATE_LIMIT_DAYS,
            hours:
              a.default.Messages
                .PREMIUM_GUILD_SUBSCRIPTION_ERROR_RATE_LIMIT_HOURS,
            minutes:
              a.default.Messages
                .PREMIUM_GUILD_SUBSCRIPTION_ERROR_RATE_LIMIT_MINUTES,
          });
        }
      }
      var u = o;
    },
    479852: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ErrorCodes: function () {
            return o;
          },
          default: function () {
            return S;
          },
          parseV8BillingAddressSkemaErrorToBillingError: function () {
            return I;
          },
        });
      var s,
        i,
        r,
        a,
        o,
        u,
        d,
        l,
        f = n("855676"),
        _ = n("260419"),
        c = n("844210"),
        g = n("421752"),
        m = n("30175");
      ((s = o || (o = {}))[(s.UNKNOWN = 0)] = "UNKNOWN"),
        (s[(s.UNKNOWN_BILLING_PROFILE = 100001)] = "UNKNOWN_BILLING_PROFILE"),
        (s[(s.UNKNOWN_PAYMENT_SOURCE = 100002)] = "UNKNOWN_PAYMENT_SOURCE"),
        (s[(s.UNKNOWN_SUBSCRIPTION = 100003)] = "UNKNOWN_SUBSCRIPTION"),
        (s[(s.ALREADY_SUBSCRIBED = 100004)] = "ALREADY_SUBSCRIBED"),
        (s[(s.INVALID_PLAN = 100005)] = "INVALID_PLAN"),
        (s[(s.PAYMENT_SOURCE_REQUIRED = 100006)] = "PAYMENT_SOURCE_REQUIRED"),
        (s[(s.ALREADY_CANCELED = 100007)] = "ALREADY_CANCELED"),
        (s[(s.INVALID_PAYMENT = 100008)] = "INVALID_PAYMENT"),
        (s[(s.ALREADY_REFUNDED = 100009)] = "ALREADY_REFUNDED"),
        (s[(s.INVALID_BILLING_ADDRESS = 100010)] = "INVALID_BILLING_ADDRESS"),
        (s[(s.ALREADY_PURCHASED = 100011)] = "ALREADY_PURCHASED"),
        (s[(s.NEGATIVE_INVOICE_AMOUNT = 100027)] = "NEGATIVE_INVOICE_AMOUNT"),
        (s[(s.AUTHENTICATION_REQUIRED = 100029)] = "AUTHENTICATION_REQUIRED"),
        (s[(s.SUBSCRIPTION_RENEWAL_IN_PROGRESS = 100042)] =
          "SUBSCRIPTION_RENEWAL_IN_PROGRESS"),
        (s[(s.CONFIRMATION_REQUIRED = 100047)] = "CONFIRMATION_REQUIRED"),
        (s[(s.CARD_DECLINED = 100054)] = "CARD_DECLINED"),
        (s[(s.INVALID_GIFT_REDEMPTION_FRAUD_REJECTED = 50097)] =
          "INVALID_GIFT_REDEMPTION_FRAUD_REJECTED"),
        (s[(s.PURCHASE_TOKEN_AUTHORIZATION_REQUIRED = 100056)] =
          "PURCHASE_TOKEN_AUTHORIZATION_REQUIRED"),
        (s[(s.INVALID_PAYMENT_SOURCE = 50048)] = "INVALID_PAYMENT_SOURCE"),
        (s[(s.INVALID_CURRENCY_FOR_PAYMENT_SOURCE = 100051)] =
          "INVALID_CURRENCY_FOR_PAYMENT_SOURCE"),
        (s[(s.BILLING_APPLE_SERVER_API_ERROR = 100070)] =
          "BILLING_APPLE_SERVER_API_ERROR"),
        (s[(s.BILLING_TRIAL_REDEMPTION_DISABLED = 100078)] =
          "BILLING_TRIAL_REDEMPTION_DISABLED"),
        (s[(s.BILLING_PAUSE_DISABLED = 100079)] = "BILLING_PAUSE_DISABLED"),
        (s[(s.BILLING_PAUSE_PENDING_ALREADY_SET = 100080)] =
          "BILLING_PAUSE_PENDING_ALREADY_SET"),
        (s[(s.BILLING_PAUSE_NOT_ELIGIBLE = 100081)] =
          "BILLING_PAUSE_NOT_ELIGIBLE"),
        (s[(s.BILLING_PAUSE_INVALID_INTERVAL = 100082)] =
          "BILLING_PAUSE_INVALID_INTERVAL"),
        (s[(s.BILLING_ALREADY_PAUSED = 100083)] = "BILLING_ALREADY_PAUSED"),
        ((i = u || (u = {})).CARD_NUMBER = "cardNumber"),
        (i.CARD_CVC = "cvc"),
        (i.CARD_EXPIRATION_DATE = "expirationDate"),
        (i.CARD_NAME = "name"),
        (i.ADDRESS_NAME = "name"),
        (i.ADDRESS_LINE_1 = "line1"),
        (i.ADDRESS_LINE_2 = "line2"),
        (i.ADDRESS_CITY = "city"),
        (i.ADDRESS_STATE = "state"),
        (i.ADDRESS_POSTAL_CODE = "postalCode"),
        (i.ADDRESS_COUNTRY = "country"),
        ((r = d || (d = {})).ADDRESS_LINE_1 = "address_line1"),
        (r.ADDRESS_LINE_2 = "address_line2"),
        (r.ADDRESS_CITY = "address_city"),
        (r.ADDRESS_STATE = "address_state"),
        (r.ADDRESS_ZIP = "address_zip"),
        (r.ADDRESS_COUNTRY = "address_country"),
        (r.CARD_NUMBER = "number"),
        (r.CARD_EXPIRATION_DATE = "exp"),
        (r.CARD_EXPIRATION_MONTH = "exp_month"),
        (r.CARD_EXPIRATION_YEAR = "exp_year");
      let h = Object.freeze({
          address_line1: "line1",
          address_line2: "line2",
          address_city: "city",
          address_state: "state",
          address_zip: "postalCode",
          address_country: "country",
          number: "cardNumber",
          exp: "expirationDate",
          exp_month: "expirationDate",
          exp_year: "expirationDate",
        }),
        E = Object.freeze({
          line_1: "line1",
          line_2: "line2",
          postal_code: "postalCode",
        });
      ((a = l || (l = {})).CARD = "card"), (a.ADDRESS = "address");
      let p = new Set(["cardNumber", "cvc", "expirationDate", "name"]),
        v = new Set([
          "cardNumber",
          "cvc",
          "expirationDate",
          "name",
          "postalCode",
          "country",
          "line1",
          "city",
          "state",
        ]),
        y = new Set([
          "name",
          "line1",
          "line2",
          "city",
          "state",
          "postalCode",
          "country",
        ]);
      function I(e) {
        if (
          "string" != typeof e &&
          e?.body?.code === f.INVALID_FORM_BODY_ERROR_CODE
        ) {
          if (
            !Array.isArray(e?.body?.errors) &&
            e?.body?.errors?.billing_address != null
          ) {
            for (let t in e.body.errors.billing_address) {
              let n = e.body.errors.billing_address[t];
              delete e.body.errors.billing_address[t], (e.body.errors[t] = n);
            }
            delete e.body.errors.billing_address;
          }
          e.body?.errors != null && (e.body = (0, _.default)(e.body.errors));
        }
        return new T(e);
      }
      class T extends g.default {
        static #e = (this.ErrorCodes = o);
        static #t = (this.Fields = u);
        static #n = (this.Sections = l);
        static #s = (this.CARD_ERRORS = p);
        static #i = (this.ADDRESS_ERRORS = y);
        constructor(e, t) {
          for (let n in (super(e, t),
          (this.paymentId = null),
          100027 === this.code
            ? (this.message =
                m.default.Messages.BILLING_ERROR_NEGATIVE_INVOICE_AMOUNT)
            : 50048 === this.code
              ? (this.message =
                  m.default.Messages.BILLING_PAYMENT_SOURCE_INVALID)
              : 100002 === this.code
                ? (this.message =
                    m.default.Messages.BILLING_ERROR_UNKNOWN_PAYMENT_SOURCE)
                : 100042 === this.code
                  ? (this.message =
                      m.default.Messages.BILLING_ERROR_PENDING_PAYMENT)
                  : 100078 === this.code
                    ? (this.message =
                        m.default.Messages.BILLING_TRIAL_REDEMPTION_DISABLED)
                    : 429 === this.status
                      ? (this.message =
                          m.default.Messages.BILLING_ERROR_RATE_LIMIT)
                      : 0 === this.code
                        ? (this.message =
                            m.default.Messages.BILLING_ERROR_GENERIC)
                        : 400 === this.status &&
                          null != this.fields.captcha_key &&
                          (this.message =
                            m.default.Messages.BILLING_ERROR_INVALID_CAPTCHA_RESPONSE),
          this.fields)) {
            let e = h[n] || E[n];
            if (null != e) {
              let t = this.fields[n];
              delete this.fields[n], (this.fields[e] = t);
            }
          }
          null != e.body &&
            "string" == typeof e.body.payment_id &&
            (this.paymentId = e.body.payment_id);
        }
        _isInFieldSet(e) {
          for (let t in this.fields) if (e.has(t)) return !0;
        }
        hasCardError() {
          return 2 === (0, c.reducedPaymentInfoExperiment)().bucket
            ? this._isInFieldSet(v)
            : this._isInFieldSet(p);
        }
        hasAddressError() {
          return this._isInFieldSet(y);
        }
      }
      var S = T;
    },
    421632: function (e, t, n) {
      "use strict";
      n.r(t), n("479852");
    },
    874411: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          UploadErrorCodes: function () {
            return i;
          },
          default: function () {
            return a;
          },
        });
      var s,
        i,
        r = n("30175");
      ((s = i || (i = {}))[(s.GENERAL = 0)] = "GENERAL"),
        (s[(s.NO_FILE = 1)] = "NO_FILE"),
        (s[(s.PROGRESS = 2)] = "PROGRESS"),
        (s[(s.UPLOAD = 3)] = "UPLOAD"),
        (s[(s.READ = 4)] = "READ");
      var a = class e {
        constructor(e) {
          this.code = e;
        }
        get displayMessage() {
          switch (this.code) {
            case 1:
              return r.default.Messages.UPLOAD_DEBUG_LOG_FAILURE_NO_FILE;
            case 2:
              return r.default.Messages.UPLOAD_DEBUG_LOG_FAILURE_PROGRESS;
            case 3:
              return r.default.Messages.UPLOAD_DEBUG_LOG_FAILURE_UPLOAD;
            case 4:
              return r.default.Messages.UPLOAD_DEBUG_LOG_FAILURE_READ;
            default:
              return r.default.Messages.UPLOAD_DEBUG_LOG_FAILURE;
          }
        }
      };
    },
    421752: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
      var s = n("454836"),
        i = n("467006"),
        r = n("30175");
      class a extends s.default.V6OrEarlierAPIError {
        constructor(e, t) {
          super(
            e,
            t,
            null != t
              ? r.default.Messages.FORM_ERROR_GENERIC_WITH_DETAILS.format({
                  statusPageURL: i.Links.STATUS,
                  details: `${t}`,
                })
              : r.default.Messages.FORM_ERROR_GENERIC.format({
                  statusPageURL: i.Links.STATUS,
                })
          );
        }
      }
    },
    253842: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          APIError: function () {
            return i.default;
          },
          AppliedGuildBoostError: function () {
            return a.default;
          },
          BillingError: function () {
            return r.default;
          },
          UploadErrorCodes: function () {
            return o.UploadErrorCodes;
          },
          UploadVoiceDebugLogsError: function () {
            return o.default;
          },
          V6OrEarlierAPIError: function () {
            return s.default;
          },
        });
      var s = n("421752"),
        i = n("648519"),
        r = n("479852");
      n("421632"), n("157761");
      var a = n("878598"),
        o = n("874411");
    },
    921358: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
      var s = (0, n("516086").createExperiment)({
        kind: "user",
        id: "2023-03_store_latest_message_data",
        label: "Store latest message data",
        defaultConfig: { enabled: !1 },
        treatments: [
          {
            id: 1,
            label: "Use latest data from api/gateway",
            config: { enabled: !0 },
          },
        ],
      });
    },
    925677: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
          getIsSpeaking: function () {
            return l;
          },
        });
      var s = n("661223"),
        i = n("697067"),
        r = n("232733"),
        a = n("24606"),
        o = n("642174");
      function u(e, t, n) {
        return e || t || n;
      }
      function d(e) {
        var t, n, u;
        let {
            userId: d,
            checkSoundSharing: l = !1,
            checkSoundboardSounds: f = !0,
            checkIsMuted: _ = !1,
            context: c,
          } = e,
          g = (0, s.useStateFromStores)([o.default, r.default], () => {
            let e = r.default.getVoiceChannelId();
            return null != e ? o.default.getVoiceStateForChannel(e, d) : null;
          }),
          m = _ && (g?.mute || g?.selfMute),
          h = (0, s.useStateFromStores)(
            [a.default],
            () => a.default.isSpeaking(d, c) && !m
          ),
          E = (0, s.useStateFromStores)(
            [a.default],
            () => a.default.isSoundSharing(d) && l
          ),
          p = (0, s.useStateFromStores)(
            [i.default],
            () => i.default.isUserPlayingSounds(d) && f
          );
        return (t = h), (n = p), (u = E), t || n || u;
      }
      function l(e) {
        var t, n, s;
        let {
            userId: u,
            checkSoundSharing: d = !1,
            checkSoundboardSounds: l = !0,
            checkIsMuted: f = !1,
            context: _,
          } = e,
          c = r.default.getVoiceChannelId(),
          g = null != c ? o.default.getVoiceStateForChannel(c, u) : null,
          m = f && (g?.mute || g?.selfMute),
          h = a.default.isSpeaking(u, _) && !m,
          E = a.default.isSoundSharing(u) && d,
          p = i.default.isUserPlayingSounds(u) && l;
        return (t = h), (n = p), (s = E), t || n || s;
      }
    },
    648641: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var s = n("470079");
      function i() {
        let e = s.useRef(null);
        return (
          null === e.current && (e.current = new AbortController()),
          s.useEffect(
            () => () => {
              e.current?.abort();
            },
            []
          ),
          e.current.signal
        );
      }
    },
    963694: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        }),
        n("42084");
      var s = n("312916");
      class i {
        initialize() {
          this.initializedCount++,
            !(this.initializedCount > 1) &&
              (this._initialize(),
              Object.entries(this.actions).forEach(e => {
                let [t, n] = e;
                s.default.subscribe(t, "function" == typeof n ? n : n.callback);
              }),
              this.stores.forEach((e, t) => {
                t.addChangeListener(e), e();
              }));
        }
        terminate(e) {
          !(this.initializedCount <= 0) &&
            (e ? (this.initializedCount = 0) : this.initializedCount--,
            0 === this.initializedCount &&
              (this._terminate(),
              Object.entries(this.actions).forEach(e => {
                let [t, n] = e;
                s.default.unsubscribe(
                  t,
                  "function" == typeof n ? n : n.callback
                );
              })));
        }
        _initialize() {}
        _terminate() {}
        constructor() {
          (this.initializedCount = 0),
            (this.actions = {}),
            (this.stores = new Map());
        }
      }
    },
    237091: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
        }),
        n("852437"),
        n("653041"),
        n("733860");
      var s = n("392711"),
        i = n.n(s),
        r = n("921358"),
        a = n("841708"),
        o = n("840441"),
        u = n("841869"),
        d = n("822534"),
        l = n("84819"),
        f = n("892027"),
        _ = n("467006");
      let c = new u.default("ChannelMessages");
      function g(e, t) {
        let n = e.get(t.id);
        return null == n ||
          (function (e, t) {
            let n = null != e.editedTimestamp ? +e.editedTimestamp : 0;
            return (
              !!(
                (null != t.edited_timestamp
                  ? +new Date(t.edited_timestamp)
                  : 0) > n || e.embeds.length < (t.embeds?.length ?? 0)
              ) || e.content !== t.content
            );
          })(n, t) ||
          e.cached
          ? (0, d.createMessageRecord)(t)
          : n;
      }
      class m {
        constructor(e) {
          (this._messages = []),
            (this._map = {}),
            (this._wasAtEdge = !1),
            (this._isCacheBefore = e);
        }
        clone() {
          let e = new m(this._isCacheBefore);
          return (
            (e._map = { ...this._map }),
            (e._messages = [...this._messages]),
            (e._wasAtEdge = this._wasAtEdge),
            e
          );
        }
        get wasAtEdge() {
          return this._wasAtEdge;
        }
        set wasAtEdge(e) {
          this._wasAtEdge = e;
        }
        get length() {
          return this._messages.length;
        }
        clear() {
          (this._map = {}), (this._messages = []), (this._wasAtEdge = !1);
        }
        remove(e) {
          (this._messages = i().filter(this._messages, t => {
            let { id: n } = t;
            return n !== e;
          })),
            delete this._map[e];
        }
        removeMany(e) {
          i().each(e, e => {
            delete this._map[e];
          }),
            (this._messages = this._messages.filter(
              t => -1 === e.indexOf(t.id)
            ));
        }
        replace(e, t) {
          let n = this._map[e];
          null != n &&
            (delete this._map[e],
            (this._map[t.id] = t),
            (this._messages[this._messages.indexOf(n)] = t));
        }
        update(e, t) {
          let n = this._map[e];
          if (null == n) return;
          let s = t(n);
          (this._map[n.id] = s),
            (this._messages[this._messages.indexOf(n)] = s);
        }
        has(e) {
          return null != this._map[e];
        }
        get(e) {
          return this._map[e];
        }
        forEach(e, t) {
          this._messages.forEach(e, t);
        }
        cache(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
          if (
            (0 === this.length && (this._wasAtEdge = t),
            this._messages.length + e.length > _.MAX_MESSAGE_CACHE_SIZE)
          ) {
            if (((this._wasAtEdge = !1), e.length > _.MAX_MESSAGE_CACHE_SIZE)) {
              this._isCacheBefore
                ? (this._messages = e.slice(
                    e.length - _.MAX_MESSAGE_CACHE_SIZE
                  ))
                : (this._messages = e.slice(0, _.MAX_MESSAGE_CACHE_SIZE)),
                (this._map = {}),
                this._messages.forEach(e => (this._map[e.id] = e));
              return;
            }
            let t = _.MAX_MESSAGE_CACHE_SIZE - e.length;
            this._isCacheBefore
              ? (this._messages = this._messages.slice(
                  Math.max(this._messages.length - t, 0)
                ))
              : (this._messages = this._messages.slice(0, t));
          }
          (this._messages = this._isCacheBefore
            ? [...this._messages, ...e]
            : [...e, ...this._messages]),
            (this._map = {}),
            this._messages.forEach(e => (this._map[e.id] = e));
        }
        extractAll() {
          let e = this._messages;
          return (this._messages = []), (this._map = {}), e;
        }
        extract(e) {
          let t;
          if (this._isCacheBefore) {
            let n = Math.max(this.length - e, 0),
              s = this.length;
            (t = this._messages.slice(n, s)), this._messages.splice(n);
          } else {
            let n = Math.min(e, this.length);
            (t = this._messages.slice(0, n)), this._messages.splice(0, e);
          }
          return t.forEach(e => delete this._map[e.id]), t;
        }
      }
      class h {
        static #e = (this._channelMessages = {});
        static forEach(e) {
          i().forEach(h._channelMessages, e);
        }
        static get(e) {
          return h._channelMessages[e];
        }
        static hasPresent(e) {
          let t = h.get(e);
          return null != t && t.hasPresent();
        }
        static getOrCreate(e) {
          let t = h._channelMessages[e];
          return null == t && ((t = new h(e)), (h._channelMessages[e] = t)), t;
        }
        static clear(e) {
          delete h._channelMessages[e];
        }
        static clearCache(e) {
          let t = h._channelMessages[e];
          null != t && (t._before.clear(), t._after.clear(), this.commit(t));
        }
        static commit(e) {
          h._channelMessages[e.channelId] = e;
        }
        constructor(e) {
          (this._array = []),
            (this._map = {}),
            (this.channelId = e),
            (this.ready = !1),
            (this.jumpTargetId = null),
            (this.jumpTargetOffset = 0),
            (this.jumpSequenceId = 1),
            (this.jumped = !1),
            (this.jumpedToPresent = !1),
            (this.jumpType = a.JumpTypes.ANIMATED),
            (this.jumpFlash = !0),
            (this.jumpReturnTargetId = null),
            (this.hasMoreBefore = !0),
            (this.hasMoreAfter = !1),
            (this.loadingMore = !1),
            (this.revealedMessageId = null),
            this._clearMessages(),
            (this._before = new m(!0)),
            (this._after = new m(!1)),
            (this.cached = !1),
            (this.hasFetched = !1),
            (this.error = !1);
        }
        mutate(e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
            n = new h(this.channelId);
          return (
            (n._array = t ? [...this._array] : this._array),
            (n._map = t ? { ...this._map } : this._map),
            (n._after = t ? this._after.clone() : this._after),
            (n._before = t ? this._before.clone() : this._before),
            e instanceof Function
              ? ((n.ready = this.ready),
                (n.jumpType = this.jumpType),
                (n.jumpTargetId = this.jumpTargetId),
                (n.jumpTargetOffset = this.jumpTargetOffset),
                (n.jumpSequenceId = this.jumpSequenceId),
                (n.jumped = this.jumped),
                (n.jumpedToPresent = this.jumpedToPresent),
                (n.jumpFlash = this.jumpFlash),
                (n.jumpReturnTargetId = this.jumpReturnTargetId),
                (n.focusTargetId = this.focusTargetId),
                (n.hasMoreBefore = this.hasMoreBefore),
                (n.hasMoreAfter = this.hasMoreAfter),
                (n.loadingMore = this.loadingMore),
                (n.revealedMessageId = this.revealedMessageId),
                (n.cached = this.cached),
                (n.hasFetched = this.hasFetched),
                (n.error = this.error),
                e(n))
              : "object" == typeof e &&
                ((n.ready = void 0 !== e.ready ? !0 === e.ready : this.ready),
                (n.jumpType =
                  void 0 !== e.jumpType ? e.jumpType : this.jumpType),
                (n.jumpTargetId =
                  void 0 !== e.jumpTargetId
                    ? e.jumpTargetId
                    : this.jumpTargetId),
                (n.jumpTargetOffset =
                  void 0 !== e.jumpTargetOffset
                    ? e.jumpTargetOffset
                    : this.jumpTargetOffset),
                (n.jumpSequenceId =
                  void 0 !== e.jumpSequenceId
                    ? e.jumpSequenceId
                    : this.jumpSequenceId),
                (n.jumped =
                  void 0 !== e.jumped ? !0 === e.jumped : this.jumped),
                (n.jumpedToPresent =
                  void 0 !== e.jumpedToPresent
                    ? !0 === e.jumpedToPresent
                    : this.jumpedToPresent),
                (n.jumpFlash =
                  void 0 !== e.jumpFlash ? !0 === e.jumpFlash : this.jumpFlash),
                (n.jumpReturnTargetId =
                  void 0 !== e.jumpReturnTargetId
                    ? e.jumpReturnTargetId
                    : this.jumpReturnTargetId),
                (n.focusTargetId =
                  void 0 !== e.focusTargetId
                    ? e.focusTargetId
                    : this.focusTargetId),
                (n.hasMoreBefore =
                  void 0 !== e.hasMoreBefore
                    ? !0 === e.hasMoreBefore
                    : this.hasMoreBefore),
                (n.hasMoreAfter =
                  void 0 !== e.hasMoreAfter
                    ? !0 === e.hasMoreAfter
                    : this.hasMoreAfter),
                (n.loadingMore =
                  void 0 !== e.loadingMore ? e.loadingMore : this.loadingMore),
                (n.revealedMessageId =
                  void 0 !== e.revealedMessageId
                    ? e.revealedMessageId
                    : this.revealedMessageId),
                (n.cached = void 0 !== e.cached ? e.cached : this.cached),
                (n.hasFetched =
                  void 0 !== e.hasFetched ? e.hasFetched : this.hasFetched),
                (n.error = void 0 !== e.error ? e.error : this.error)),
            n
          );
        }
        get length() {
          return this._array.length;
        }
        toArray() {
          return [...this._array];
        }
        forEach(e, t) {
          let n =
            arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
          if (n) {
            let n = this._array;
            for (
              let s = n.length - 1;
              s >= 0 && !1 !== e.call(t, n[s], s);
              s--
            );
          } else this._array.forEach(e, t);
        }
        reduce(e, t) {
          return this._array.reduce(e, t);
        }
        some(e, t) {
          return this._array.some(e, t);
        }
        filter(e, t) {
          return this._array.filter(e, t);
        }
        forAll(e, t) {
          this._before.forEach(e, t),
            this._array.forEach(e, t),
            this._after.forEach(e, t);
        }
        findOldest(e) {
          return (
            i().find(this._before._messages, e) ??
            i().find(this._array, e) ??
            i().find(this._after._messages, e)
          );
        }
        findNewest(e) {
          return (
            i().findLast(this._after._messages, e) ??
            i().findLast(this._array, e) ??
            i().findLast(this._before._messages, e)
          );
        }
        map(e, t) {
          return this._array.map(e, t);
        }
        first() {
          return this._array[0];
        }
        last() {
          return this._array[this._array.length - 1];
        }
        get(e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
            n = this._map[e];
          return null == n && t ? this._before.get(e) ?? this._after.get(e) : n;
        }
        getByIndex(e) {
          return this._array[e];
        }
        getAfter(e) {
          let t = this.get(e);
          if (null == t) return null;
          let n = this._array.indexOf(t);
          return -1 === n || n === this.length - 1 ? null : this._array[n + 1];
        }
        getManyAfter(e, t, n) {
          let s = this.get(e);
          if (null == s) return null;
          let i = this._array.indexOf(s);
          if (-1 === i) return null;
          let r = [];
          for (
            let e = i + 1;
            e < this.length && (-1 === t || r.length < t);
            e++
          )
            (null == n || n(this._array[e])) && r.push(this._array[e]);
          return r;
        }
        getManyBefore(e, t, n) {
          let s = this.get(e);
          if (null == s) return null;
          let i = this._array.indexOf(s);
          if (-1 === i) return null;
          let r = [];
          for (let e = i - 1; e >= 0 && (-1 === t || r.length < t); e--)
            (null == n || n(this._array[e])) && r.unshift(this._array[e]);
          return r;
        }
        has(e) {
          let t =
            !(arguments.length > 1) || void 0 === arguments[1] || arguments[1];
          return (
            null != this._map[e] ||
            (t && (this._before.has(e) || this._after.has(e)))
          );
        }
        indexOf(e) {
          let t = -1;
          return this._array.find((n, s) => n.id === e && ((t = s), !0)), t;
        }
        hasPresent() {
          return (
            (this._after.length > 0 && this._after.wasAtEdge) ||
            !this.hasMoreAfter
          );
        }
        hasBeforeCached(e) {
          if (this.length > 0 && this._before.length > 0) {
            let t = this.first();
            return null != t && t.id === e;
          }
          return !1;
        }
        hasAfterCached(e) {
          if (this.length > 0 && this._after.length > 0) {
            let t = this.last();
            return null != t && t.id === e;
          }
          return !1;
        }
        update(e, t) {
          let n = this._map[e];
          if (null == n)
            return this._before.has(e)
              ? this.mutate(n => n._before.update(e, t), !0)
              : this._after.has(e)
                ? this.mutate(n => n._after.update(e, t), !0)
                : this;
          let s = t(n);
          return this.mutate(e => {
            (e._map[n.id] = s), (e._array[e._array.indexOf(n)] = s);
          }, !0);
        }
        replace(e, t) {
          let n = this._map[e];
          if (null == n)
            return this._before.has(e)
              ? this.mutate(n => n._before.replace(e, t), !0)
              : this._after.has(e)
                ? this.mutate(n => n._after.replace(e, t), !0)
                : this;
          return this.mutate(s => {
            delete s._map[e],
              (s._map[t.id] = t),
              (s._array[s._array.indexOf(n)] = t);
          }, !0);
        }
        remove(e) {
          return this.mutate(t => {
            delete t._map[e],
              (t._array = t._array.filter(t => t.id !== e)),
              t._before.remove(e),
              t._after.remove(e);
          }, !0);
        }
        removeMany(e) {
          return e.some(e => this.has(e))
            ? this.mutate(t => {
                i().each(e, e => {
                  delete t._map[e];
                }),
                  (t._array = t._array.filter(t => -1 === e.indexOf(t.id))),
                  t._before.removeMany(e),
                  t._after.removeMany(e);
              }, !0)
            : this;
        }
        merge(e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
            n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
          return this.mutate(s => {
            s._merge(e, t, n);
          }, !0);
        }
        _merge(e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
            n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
          (e = e.filter(e => {
            let t = this._map[e.id];
            return (
              (this._map[e.id] = e),
              null == t || ((this._array[this._array.indexOf(t)] = e), !1)
            );
          })),
            n && (t ? this._before : this._after).clear(),
            (this._array = t ? [...e, ...this._array] : [...this._array, ...e]);
        }
        mergeDelta() {
          let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : [],
            t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : [],
            n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : [];
          return this.mutate(s => {
            s._before.clear(), s._after.clear();
            let i = new Set(n);
            e.forEach(e => i.add(e.id)),
              t.forEach(e => i.add(e.id)),
              (s._array = s._array
                .filter(e => !i.has(e.id))
                .concat(
                  e.map(e => (0, d.createMessageRecord)(e)),
                  t.map(e => (0, d.createMessageRecord)(e))
                )
                .sort((e, t) => l.default.compare(e.id, t.id)));
          });
        }
        _clearMessages() {
          (this._array = []), (this._map = {});
        }
        reset(e) {
          return this.mutate(t => {
            (t._array = e),
              (t._map = {}),
              e.forEach(e => (t._map[e.id] = e)),
              t._before.clear(),
              t._after.clear();
          });
        }
        truncateTop(e) {
          let t =
              !(arguments.length > 1) ||
              void 0 === arguments[1] ||
              arguments[1],
            n = this._array.length - e;
          return n <= 0
            ? this
            : this.mutate(e => {
                for (let t = 0; t < n; t++) delete e._map[e._array[t].id];
                e._before.cache(e._array.slice(0, n), !e.hasMoreBefore),
                  (e._array = e._array.slice(n)),
                  (e.hasMoreBefore = !0);
              }, t);
        }
        truncateBottom(e) {
          let t =
            !(arguments.length > 1) || void 0 === arguments[1] || arguments[1];
          return this._array.length <= e
            ? this
            : this.mutate(t => {
                for (let n = e; n < this._array.length; n++)
                  delete t._map[t._array[n].id];
                t._after.cache(
                  t._array.slice(e, this._array.length),
                  !t.hasMoreAfter
                ),
                  (t._array = t._array.slice(0, e)),
                  (t.hasMoreAfter = !0);
              }, t);
        }
        jumpToPresent(e) {
          return this.mutate(t => {
            let n = t._after.extractAll();
            t.hasMoreAfter = !1;
            let s = Math.max(n.length - e, 0),
              i = n.slice(s);
            n.splice(s),
              t._before.cache(t._array),
              t._before.cache(n),
              t._clearMessages(),
              t._merge(i),
              (t.hasMoreBefore = t._before.length > 0),
              (t.jumped = !0),
              (t.jumpTargetId = null),
              (t.jumpTargetOffset = 0),
              (t.jumpedToPresent = !0),
              (t.jumpFlash = !1),
              (t.jumpReturnTargetId = null),
              (t.jumpSequenceId = t.jumpSequenceId + 1),
              (t.ready = !0),
              (t.loadingMore = !1);
          }, !0);
        }
        jumpToMessage(e) {
          let t =
              !(arguments.length > 1) ||
              void 0 === arguments[1] ||
              arguments[1],
            n = arguments.length > 2 ? arguments[2] : void 0,
            s = arguments.length > 3 ? arguments[3] : void 0,
            i = arguments.length > 4 ? arguments[4] : void 0;
          return this.mutate(r => {
            (r.jumped = !0),
              (r.jumpedToPresent = !1),
              (r.jumpType = i ?? a.JumpTypes.ANIMATED),
              (r.jumpTargetId = e),
              (r.jumpTargetOffset = null != e && null != n ? n : 0),
              (r.jumpSequenceId = r.jumpSequenceId + 1),
              (r.jumpFlash = t),
              (r.jumpReturnTargetId = s),
              (r.ready = !0),
              (r.loadingMore = !1);
          }, !1);
        }
        focusOnMessage(e) {
          return this.mutate(t => {
            (t.focusTargetId = e), (t.ready = !0), (t.loadingMore = !1);
          }, !1);
        }
        loadFromCache(e, t) {
          return this.mutate(n => {
            let s = e ? n._before : n._after;
            n._merge(s.extract(t), e);
            let i = s.length > 0 || !s.wasAtEdge;
            e ? (n.hasMoreBefore = i) : (n.hasMoreAfter = i),
              (n.ready = !0),
              (n.loadingMore = !1);
          }, !0);
        }
        truncate(e, t) {
          return this.length <= _.MAX_LOADED_MESSAGES
            ? this
            : e
              ? this.truncateBottom(_.TRUNCATED_MESSAGE_VIEW_SIZE)
              : t
                ? this.truncateTop(_.TRUNCATED_MESSAGE_VIEW_SIZE)
                : this;
        }
        receiveMessage(e) {
          let t =
              !(arguments.length > 1) ||
              void 0 === arguments[1] ||
              arguments[1],
            n = null == e.nonce ? null : this.get(e.nonce, !0);
          if (
            null != n &&
            (e.author?.id === n.author?.id ||
              (null != e.interaction &&
                e.interaction.user.id === n.author.id)) &&
            null != e.nonce &&
            n.id === e.nonce
          ) {
            let t = (0, d.createMessageRecord)(e);
            return (
              null != n.interactionData &&
                (t.interactionData = n.interactionData),
              this.replace(e.nonce, t)
            );
          }
          if (this.hasMoreAfter)
            this._after.wasAtEdge && (this._after.wasAtEdge = !1);
          else {
            let n = r.default.getCurrentConfig(
                { location: "2ecb25_1" },
                { autoTrackExposure: !1 }
              ).enabled
                ? (0, d.createMessageRecord)(e)
                : g(this, e),
              s = this.merge([n]);
            return t
              ? s.truncateTop(_.TRUNCATED_MESSAGE_VIEW_SIZE, !1)
              : this.length > _.MAX_LOADED_MESSAGES
                ? s.truncateBottom(_.TRUNCATED_MESSAGE_VIEW_SIZE, !1)
                : s;
          }
          return this;
        }
        receivePushNotification(e) {
          return null != (null == e.nonce ? null : this.get(e.nonce, !0))
            ? this
            : this.mutate({ ready: !0, cached: !0 }).merge([g(this, e)]);
        }
        loadStart(e) {
          return this.mutate({
            loadingMore: !0,
            jumped: null != e,
            jumpedToPresent: e?.present ?? !1,
            jumpTargetId: e?.messageId ?? null,
            jumpTargetOffset: e?.offset ?? 0,
            jumpReturnTargetId: e?.returnMessageId ?? null,
            ready: null == e && this.ready,
          });
        }
        loadComplete(e) {
          let t = [...e.newMessages],
            n = e.isBefore ?? !1,
            s = e.isAfter ?? !1,
            o = e.jump ?? null,
            u = e.hasMoreBefore ?? !1,
            l = e.hasMoreAfter ?? !1,
            f = e.cached ?? !1,
            m = i()(t)
              .reverse()
              .map(
                r.default.getCurrentConfig(
                  { location: "2ecb25_2" },
                  { autoTrackExposure: !1 }
                ).enabled
                  ? e => (0, d.createMessageRecord)(e)
                  : e => g(this, e)
              )
              .value(),
            h = null;
          if ((n || s) && null == o && this.ready) h = this.merge(m, n, !0);
          else {
            let e = this._array.filter(
              e => e.state === _.MessageStates.SENDING
            );
            (h = this.reset(m)),
              !(e.length > 0) ||
              n ||
              s ||
              o?.messageId != null ||
              o?.offset != null
                ? c.info(
                    `loadComplete: resetting state for channelId=${this.channelId}, sending.length=${e.length}`
                  )
                : (c.info(
                    `loadComplete: merging with SENDING messages for channelId=${this.channelId}`
                  ),
                  (h = h.merge(e)));
          }
          return (h = h.mutate({
            ready: !0,
            loadingMore: !1,
            jumpType: o?.jumpType ?? a.JumpTypes.ANIMATED,
            jumpFlash: o?.flash ?? !1,
            jumped: null != o,
            jumpedToPresent: o?.present ?? !1,
            jumpTargetId: o?.messageId ?? null,
            jumpTargetOffset:
              null != o && null != o.messageId && null != o.offset
                ? o.offset
                : 0,
            jumpSequenceId: null != o ? h.jumpSequenceId + 1 : h.jumpSequenceId,
            jumpReturnTargetId: o?.returnMessageId ?? null,
            hasMoreBefore: null == o && s ? h.hasMoreBefore : u,
            hasMoreAfter: null == o && n ? h.hasMoreAfter : l,
            cached: f,
            hasFetched: e.hasFetched,
            error: !1,
          }));
        }
        addCachedMessages(e, t) {
          (0, o.requireSortedDescending)(e);
          let n = e.map(e => g(this, e)).reverse();
          return (
            this._array
              .filter(e => !n.some(t => t.id === e.id))
              .forEach(e =>
                f.insert(n, e, (e, t) => l.default.compare(e.id, t.id))
              ),
            this.reset(n).mutate({ ready: !0, cached: t, error: !1 })
          );
        }
      }
      var E = h;
    },
    580905: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        }),
        n("653041");
      var s = n("392711"),
        i = n.n(s),
        r = n("913527"),
        a = n.n(r),
        o = class e {
          constructor({
            computeBonus: e,
            computeWeight: t,
            lookupKey: n,
            afterCompute: s,
            numFrequentlyItems: i = 32,
            maxSamples: r = 10,
          }) {
            (this.computeBonus = e),
              (this.computeWeight = t),
              (this.afterCompute = s),
              (this.lookupKey = n),
              (this.usageHistory = {}),
              (this.frequently = []),
              (this.maxSamples = r),
              (this.numFrequentlyItems = i),
              (this.dirty = !1);
          }
          overwriteHistory(e, t) {
            (this.usageHistory = i().mapValues(e ?? {}, e => ({
              ...e,
              frecency: -1,
            }))),
              t?.forEach(e => {
                let { key: t, timestamp: n } = e;
                return this.track(t, n);
              }),
              this.markDirty();
          }
          markDirty() {
            this.dirty = !0;
          }
          isDirty() {
            return this.dirty;
          }
          track(e, t) {
            if (null == e) return;
            let n = Object.prototype.hasOwnProperty.call(this.usageHistory, e)
              ? this.usageHistory[e]
              : void 0;
            if (null == n)
              n = {
                totalUses: 1,
                recentUses: [t ?? Date.now()],
                frecency: -1,
                score: 0,
              };
            else
              for (
                n.frecency = -1,
                  n.totalUses += 1,
                  null == t
                    ? n.recentUses.push(Date.now())
                    : (n.recentUses.push(t), n.recentUses.sort());
                n.recentUses.length > this.maxSamples;

              )
                n.recentUses.shift();
            (this.usageHistory[e] = n), this.markDirty();
          }
          getEntry(e) {
            return null == e
              ? null
              : (this.dirty && this.compute(),
                Object.prototype.hasOwnProperty.call(this.usageHistory, e)
                  ? this.usageHistory[e]
                  : void 0);
          }
          getScore(e) {
            let t = this.getEntry(e);
            return null != t ? t.score : null;
          }
          getFrecency(e) {
            let t = this.getEntry(e);
            return null != t ? t.frecency : null;
          }
          compute() {
            let e = a()();
            i().forEach(this.usageHistory, (t, n) => {
              let { totalUses: s, recentUses: r, frecency: o } = t;
              if (-1 !== o) return;
              let u = this.computeBonus(n) / 100;
              (t.score = 0),
                i().forEach(r, (n, s) => {
                  if (s >= this.maxSamples) return !1;
                  let i = this.computeWeight(e.diff(a()(n), "days"));
                  t.score += u * i;
                }),
                t.score > 0
                  ? (t.recentUses.length > 0 &&
                      (t.frecency = Math.ceil((t.score / r.length) * s)),
                    (this.usageHistory[n] = t))
                  : delete this.usageHistory[n];
            }),
              (this.frequently = i()(this.usageHistory)
                .map((e, t) => {
                  let n = this.lookupKey(t);
                  return null == n ? null : [n, e.frecency];
                })
                .filter(e => null !== e)
                .sortBy(e => {
                  let [t, n] = e;
                  return -n;
                })
                .map(e => {
                  let [t] = e;
                  return t;
                })
                .take(this.numFrequentlyItems)
                .value()),
              (this.dirty = !1),
              this.afterCompute(this.usageHistory, this._frequently);
          }
          get frequently() {
            return this.dirty && this.compute(), this._frequently;
          }
          set frequently(e) {
            this._frequently = e;
          }
        };
    },
    53575: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          MessageDataType: function () {
            return a;
          },
          default: function () {
            return P;
          },
          getFailedMessageId: function () {
            return D;
          },
          isMessageDataEdit: function () {
            return N;
          },
        });
      var s,
        i,
        r,
        a,
        o = n("512722"),
        u = n.n(o),
        d = n("743548"),
        l = n("454836"),
        f = n("243770"),
        _ = n("244180"),
        c = n("841869"),
        g = n("31123"),
        m = n("34887"),
        h = n("262047"),
        E = n("278205"),
        p = n("152551"),
        v = n("10357"),
        y = n("374126"),
        I = n("980227"),
        T = n("194794"),
        S = n("467006");
      let C = null;
      __OVERLAY__ && (C = n("875572").default),
        ((s = r || (r = {})).OVERLAY_UNLOCKED = "overlay_unlocked"),
        (s.OVERLAY_UNLOCKED_PINNED = "overlay_unlocked_pinned"),
        (s.OVERLAY_LOCKED_ACTIVATED = "overlay_locked_activated"),
        ((i = a || (a = {}))[(i.SEND = 0)] = "SEND"),
        (i[(i.EDIT = 1)] = "EDIT"),
        (i[(i.COMMAND = 2)] = "COMMAND");
      let A = e => 0 === e.type,
        N = e => 1 === e.type,
        D = e =>
          A(e)
            ? e.message.nonce
            : N(e)
              ? e.message.messageId
              : e.message.data.id,
        O = [1 * p.default.Millis.SECOND, 5 * p.default.Millis.MINUTE];
      class R extends y.default {
        constructor(e = 5) {
          super(new c.default("MessageQueue")),
            (this.maxSize = e),
            (this.requests = new Map()),
            (this.analyticsTimeouts = new Map());
        }
        isFull() {
          return this.queue.length >= this.maxSize;
        }
        drain(e, t) {
          switch (
            (this.logger.log("Draining Message Queue with: ", e.type), e.type)
          ) {
            case 0:
              this.handleSend(e.message, t);
              break;
            case 1:
              this.handleEdit(e.message, t);
              break;
            case 2:
              this.handleCommand(e.message, t);
          }
        }
        cancelRequest(e) {
          this.requests.get(e)?.abort(),
            this.requests.delete(e),
            this.cancelQueueMetricTimers(e);
        }
        startQueueMetricTimers(e) {
          let t = O.map(e =>
            setTimeout(() => {
              (0, _.trackWithMetadata)(S.AnalyticEvents.SEND_MESSAGE_QUEUED, {
                queued_duration_ms: e,
              });
            }, e)
          );
          this.analyticsTimeouts.set(e, t);
        }
        cancelQueueMetricTimers(e) {
          this.analyticsTimeouts.get(e)?.forEach(clearTimeout),
            this.analyticsTimeouts.delete(e);
        }
        createResponseHandler(e, t) {
          return n => {
            if (
              (null != e &&
                (this.requests.delete(e), this.cancelQueueMetricTimers(e)),
              n.hasErr)
            )
              return t(null, n);
            null != n.body &&
            (n.body.code === S.AbortCodes.SLOWMODE_RATE_LIMITED ||
              n.body.code === S.AbortCodes.CHANNEL_FOLLOWING_EDIT_RATE_LIMITED)
              ? t(null, n)
              : 429 === n.status
                ? t({
                    retryAfter: n.body.retry_after * p.default.Millis.SECOND,
                  })
                : t(null, n);
          };
        }
        handleSend(e, t) {
          let n;
          let { channelId: s, file: i, filename: r, ...a } = e,
            o = (0, m.getSignalStrength)(),
            u = {
              mobile_network_type: E.default.getType(),
              ...a,
              ...(null != o && { signal_strength: o }),
            };
          if (g.default.get("send_fail_100")) {
            this.logger.log(
              "Skipping message sened because send_fail_100 is enabled"
            ),
              t(null, {
                ok: !1,
                hasErr: !1,
                status: 500,
                headers: {},
                body: "{}",
                text: "Simulated failure",
              });
            return;
          }
          null != C &&
            (C.isInstanceUILocked()
              ? (n = { location: "overlay_locked_activated" })
              : !C.isInstanceUILocked() &&
                (n = C.isPinned(S.OverlayWidgets.TEXT)
                  ? { location: "overlay_unlocked_pinned" }
                  : { location: "overlay_unlocked" }));
          let f = this.createResponseHandler(e.nonce, t),
            _ = new AbortController();
          if (
            (this.startQueueMetricTimers(e.nonce),
            null != i && null != r && "" !== r)
          )
            l.default.post(
              {
                url: S.Endpoints.MESSAGES(s),
                fields: Object.entries(u).map(e => {
                  let [t, n] = e;
                  return { name: t, value: n };
                }),
                attachments: [{ name: "file", file: i, filename: r }],
                context: n,
                oldFormErrors: !0,
                signal: _.signal,
                onRequestCreated: () => {
                  null != e.nonce && this.requests.set(e.nonce, _);
                },
              },
              f
            );
          else {
            let t = {
              timeout: 60 * p.default.Millis.SECOND,
              retries: 3,
              backoff: new d.default(),
            };
            l.default.post(
              {
                url: S.Endpoints.MESSAGES(s),
                body: u,
                context: n,
                oldFormErrors: !0,
                ...t,
                signal: _.signal,
                onRequestCreated: () => {
                  null != e.nonce && this.requests.set(e.nonce, _);
                },
              },
              f
            );
          }
        }
        handleEdit(e, t) {
          let { channelId: n, messageId: s, ...i } = e,
            r = new AbortController();
          l.default.patch(
            {
              url: S.Endpoints.MESSAGE(n, s),
              body: i,
              retries: 1,
              oldFormErrors: !0,
              signal: r.signal,
              onRequestCreated: () => {
                this.requests.set(s, r);
              },
            },
            this.createResponseHandler(s, t)
          );
        }
        handleCommand(e, t) {
          let n,
            {
              applicationId: s,
              guildId: i,
              channelId: r,
              data: a,
              nonce: o,
              attachments: d,
              maxSizeCallback: _,
              analytics_location: c,
            } = e,
            g = {
              type: f.InteractionTypes.APPLICATION_COMMAND,
              application_id: s,
              guild_id: i,
              channel_id: r,
              session_id: h.default.getSessionId(),
              data: a,
              nonce: o,
              analytics_location: c,
            };
          if (null != d) {
            (g.data.attachments = []), (n = []);
            g.data.attachments = d.map(
              (e, t) => (
                u()(
                  e.status === T.CloudUploadStatus.COMPLETED,
                  "Uploads must be staged before trying to send a message"
                ),
                (0, I.getAttachmentPayload)(e, t)
              )
            );
          }
          let m = new AbortController();
          l.default.post(
            {
              url: S.Endpoints.INTERACTIONS,
              fields: [{ name: "payload_json", value: JSON.stringify(g) }],
              attachments: n,
              signal: m.signal,
              onRequestCreated: e => {
                this.requests.set(o, m),
                  e.on("progress", e => {
                    let { total: t } = e,
                      n = (0, v.maxFileSize)(i);
                    null != t && t > n && (this.cancelRequest(o), _?.(n));
                  });
              },
            },
            this.createResponseHandler(o, t)
          );
        }
      }
      var P = new R();
    },
    857211: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          SearchTabFetcherImpl: function () {
            return l;
          },
          default: function () {
            return d;
          },
        });
      var s = n("664751"),
        i = n("454836"),
        r = n("841869"),
        a = n("152551"),
        o = n("467006");
      class u {
        constructor(e, t, n) {
          (this.isCanceled = !1),
            (this.searchId = e),
            (this.searchType = t),
            (this.query = n);
        }
        async fetch(e, t, n) {
          if (!this.isCanceled)
            try {
              let s = await this.makeRequest();
              if (null == s || this.isCanceled) return;
              if (200 === s.status) e(s);
              else if (202 === s.status) {
                if (
                  ((this.query.attempts = (this.query.attempts ?? 0) + 1),
                  this.query.attempts > 5)
                )
                  return;
                let i = s.body.retry_after * a.default.Millis.SECOND;
                (this.retryDelay = isNaN(i) || 0 === i ? 5e3 : i),
                  this.retryLater(e, t, n),
                  t(s);
              }
            } catch (e) {
              new r.default("SearchFetcher").error(e), n(e);
            }
        }
        cancel() {
          (this.isCanceled = !0),
            null != this.indexingPollId && clearTimeout(this.indexingPollId);
        }
        retryLater(e, t, n) {
          null != this.indexingPollId && clearTimeout(this.indexingPollId),
            (this.indexingPollId = setTimeout(
              this.fetch.bind(this, e, t, n),
              this.retryDelay
            ));
        }
      }
      class d extends u {
        getEndpoint() {
          switch (this.searchType) {
            case o.SearchTypes.DMS:
              return o.Endpoints.SEARCH_DMS;
            case o.SearchTypes.FAVORITES:
              return o.Endpoints.SEARCH_FAVORITES;
            case o.SearchTypes.GUILD:
              if (null == this.searchId || "" === this.searchId) return;
              return o.Endpoints.SEARCH_GUILD(this.searchId);
            case o.SearchTypes.CHANNEL:
              if (null == this.searchId || "" === this.searchId) return;
              return o.Endpoints.SEARCH_CHANNEL(this.searchId);
            default:
              throw Error(
                `[SearchFetcher] Unhandled search type: ${this.searchType}`
              );
          }
        }
        makeRequest() {
          let e = this.getEndpoint();
          return null == e
            ? null
            : i.default.get({
                url: e,
                query: s.stringify(this.query),
                oldFormErrors: !0,
              });
        }
      }
      class l extends u {
        constructor(e, t, n, s) {
          super(e, t, n), (this.payload = s);
        }
        getEndpoint() {
          switch (this.searchType) {
            case o.SearchTypes.DMS:
              return o.Endpoints.SEARCH_TABS_DMS;
            case o.SearchTypes.GUILD_CHANNEL:
            case o.SearchTypes.GUILD:
              if (null == this.searchId || "" === this.searchId) return;
              return o.Endpoints.SEARCH_TABS_GUILD(this.searchId);
            case o.SearchTypes.CHANNEL:
              if (null == this.searchId || "" === this.searchId) return;
              return o.Endpoints.SEARCH_TABS_CHANNEL(this.searchId);
            default:
              throw Error(
                `[SearchFetcher] Unhandled search type: ${this.searchType}`
              );
          }
        }
        makeRequest() {
          let e = this.getEndpoint();
          return null == e
            ? null
            : i.default.post({ url: e, body: this.payload, oldFormErrors: !0 });
        }
      }
    },
    267433: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("348327"),
        i = n.n(s);
      class r {
        shouldCommit() {
          return !0;
        }
        setState(e) {
          this.state = { ...this.state, ...e };
        }
        getState() {
          return this.state;
        }
        reset() {
          (this.dirty = !1), (this.state = this.getInitialState());
        }
        update() {
          let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
            n = this.getNextState({ ...this.state, ...e });
          if (t) this.dirty = !i()(n, this.getInitialState());
          else
            for (let e of Object.keys(n))
              this.dirty = this.dirty || !i()(this.state[e], n[e]);
          return (
            (this.state = n),
            !!(this.dirty && this.shouldCommit()) &&
              ((this.dirty = !1), this.didCommit(this.state), !0)
          );
        }
        forceUpdate() {
          (this.dirty = !1), this.didCommit(this.state);
        }
        constructor() {
          (this.dirty = !1), (this.state = this.getInitialState());
        }
      }
    },
    233760: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return R;
          },
        });
      var s = n("729594"),
        i = n("996855"),
        r = n("312916"),
        a = n("19569"),
        o = n("620412"),
        u = n("110531"),
        d = n("959976"),
        l = n("691529"),
        f = n("992545"),
        _ = n("805426"),
        c = n("62470"),
        g = n("839417"),
        m = n("341010"),
        h = n("817788"),
        E = n("642700"),
        p = n("715067"),
        v = n("869817"),
        y = n("232733"),
        I = n("632706"),
        T = n("880315"),
        S = n("328470"),
        C = n("366230");
      n("560858");
      var A = n("467006");
      async function N(e, t) {
        await r.default.dispatch({
          type: "INVITE_MODAL_OPEN",
          invite: e,
          code: t,
          context: A.AppContext.APP,
        });
      }
      async function D(e) {
        let t = v.default.getInvite(e.code);
        if (null == t) {
          let { invite: n } = await a.default.resolveInvite(
            e.code,
            "Markdown Link"
          );
          t = n;
        }
        if (null == t) return;
        if (
          t.state === A.InviteStates.EXPIRED ||
          t.state === A.InviteStates.BANNED ||
          t.state === A.InviteStates.ERROR
        ) {
          await N(t, e.code);
          return;
        }
        let n = T.default.getFlattenedGuildIds(),
          s = t?.guild?.id;
        null != s && n.includes(s)
          ? a.default.transitionToInviteSync(t)
          : await N(t, e.code);
      }
      let O = { skipExtensionCheck: void 0, analyticsLocations: [] };
      function R(e) {
        let t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : O,
          r = (0, f.findCodedLink)(e),
          { skipExtensionCheck: a } = t;
        if (
          null != r &&
          (r.type === l.CodedLinkType.INVITE ||
            r.type === l.CodedLinkType.EMBEDDED_ACTIVITY_INVITE)
        )
          return e => (e?.preventDefault(), D(r), !0);
        if (null != r && r.type === l.CodedLinkType.APP_DIRECTORY_PROFILE)
          return e => {
            e?.preventDefault();
            let { code: t } = r,
              s = I.default.getGuildId() ?? void 0;
            return (
              S.default.track(
                A.AnalyticEvents.APP_DIRECTORY_PROFILE_EMBED_URL_CLICKED,
                {
                  application_id: t,
                  device_platform: i.isMobile ? "mobile_web" : "desktop_web",
                  guild_id: s,
                  channel_id: y.default.getChannelId(),
                }
              ),
              n
                .el("233760@4118:4213")
                .then(n.bind(n, "553657"))
                .then(e => {
                  let { goToAppDirectory: i } = e,
                    { ApplicationDirectoryViews: r } = n("959976");
                  i({
                    view: r.APPLICATION,
                    applicationId: t,
                    guildId: s,
                    entrypoint: {
                      name: d.ApplicationDirectoryEntrypointNames
                        .APPLICATION_DIRECTORY_URL,
                    },
                  });
                }),
              !0
            );
          };
        if (null != r && r.type === l.CodedLinkType.GUILD_PRODUCT)
          return e => {
            e?.preventDefault();
            let [t, s] = r.code.split("-");
            return (
              n
                .el("233760@4948:5016")
                .then(n.bind(n, "284414"))
                .then(e => {
                  let { openGuildProductLink: n } = e;
                  n(t, s);
                }),
              !0
            );
          };
        let { path: v, hostname: T = "", host: N, query: R } = s.parse(e),
          P =
            C.default.isDiscordHostname(T) ||
            C.default.isDiscordLocalhost(N, T);
        if (P && v?.startsWith("/application-directory")) {
          let [, , e, t] = v.split("/"),
            s = null != e && (0, u.isSnowflake)(e) ? e : void 0;
          return r => {
            r?.preventDefault();
            let { ApplicationDirectoryProfileSections: a } = n("555049"),
              { ApplicationDirectoryViews: o } = n("959976"),
              u = I.default.getGuildId() ?? void 0,
              l = o.HOME;
            return (
              "search" === e && (l = o.SEARCH),
              null != s &&
                ((l = o.APPLICATION),
                S.default.track(
                  A.AnalyticEvents.APP_DIRECTORY_PROFILE_EMBED_URL_CLICKED,
                  {
                    application_id: s,
                    device_platform: i.isMobile ? "mobile_web" : "desktop_web",
                    guild_id: u,
                    channel_id: y.default.getChannelId(),
                  }
                )),
              n
                .el("233760@6735:6830")
                .then(n.bind(n, "553657"))
                .then(e => {
                  let { goToAppDirectory: n } = e;
                  n({
                    view: l,
                    applicationId: s,
                    guildId: u,
                    applicationSection: (0, g.default)(a, t),
                    entrypoint: {
                      name: d.ApplicationDirectoryEntrypointNames
                        .APPLICATION_DIRECTORY_URL,
                    },
                  });
                }),
              !0
            );
          };
        }
        if (null != v && P && C.default.isAppRoute(v)) {
          let e = null != R ? { search: R } : null;
          return t => (t?.preventDefault(), (0, h.default)(v, e), !0);
        }
        if (null != v && P) {
          let {
              getOAuth2AuthorizeProps: t,
              openOAuth2ModalWithCreateGuildModal: s,
            } = n("498202"),
            i = t(e);
          if (null != i) return e => (e?.preventDefault(), s(i), !0);
        }
        let b = (0, m.tryParseEventDetailsPath)(v);
        if (null != v && P && null != b)
          return e => {
            e?.preventDefault();
            let t = I.default.getGuildId();
            null != b.guildId &&
              "" !== b.guildId &&
              b.guildId !== t &&
              (0, h.default)(A.Routes.CHANNEL(b.guildId));
            let n = c.default.getGuildScheduledEvent(b.guildEventId);
            return (
              null != n && (0, _.openGuildEventDetails)({ eventId: n.id }), !0
            );
          };
        if (P && v?.startsWith("/settings/")) {
          let { default: e } = n("48495"),
            t = e(v);
          if (null != t)
            return e => (
              e?.preventDefault(),
              o.default.open(t.section, t.subsection, {
                openWithoutBackstack: !1,
                impressionSource: t.source,
              }),
              !0
            );
        }
        if (!a && null != (0, p.isSuspiciousDownload)(e))
          return t => (t?.preventDefault(), E.default.show(e), !0);
      }
    },
    220868: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        }),
        n("653041");
      var s = n("392711"),
        i = n.n(s),
        r = n("767191");
      class a {
        constructor(e, t) {
          (this._pendingRequests = new Set()),
            (this._sentRequests = new Set()),
            (this._unacknowledgedRequests = new Set()),
            (this._guildId = e),
            (this._guildMemberExists = n => t(e, n));
        }
        acknowledge(e) {
          this._unacknowledgedRequests.delete(e),
            this._pendingRequests.delete(e);
        }
        flushRequests(e) {
          if (0 === this._pendingRequests.size) return;
          let t = [];
          this._pendingRequests.forEach(e => {
            !this._guildMemberExists(e) &&
              (this._unacknowledgedRequests.add(e),
              this._sentRequests.add(e),
              t.push(e));
          }),
            t.length > 0 && e(this._guildId, t),
            this._pendingRequests.clear();
        }
        requestUnacknowledged() {
          return (
            0 !== this._unacknowledgedRequests.size &&
            (this._unacknowledgedRequests.forEach(e => {
              this._guildMemberExists(e)
                ? this._unacknowledgedRequests.delete(e)
                : this._pendingRequests.add(e);
            }),
            0 !== this._pendingRequests.size && void 0)
          );
        }
        request(e) {
          if (
            this._guildMemberExists(e) ||
            this._sentRequests.has(e) ||
            this._pendingRequests.has(e)
          )
            return !1;
          this._pendingRequests.add(e);
        }
      }
      class o {
        constructor(e, t) {
          (this._guildStates = {}),
            (this._flush = new r.DelayedCall(0, () => this.flushRequests())),
            (this._guildMemberExists = e),
            (this._onChange = t);
        }
        reset() {
          (this._guildStates = {}), this._flush.cancel();
        }
        request(e, t) {
          !1 !== this._getGuildState(e).request(t) && this._flush.delay(!1);
        }
        acknowledge(e, t) {
          this._getGuildState(e).acknowledge(t);
        }
        flushRequests() {
          i().forEach(this._guildStates, e => e.flushRequests(this._onChange));
        }
        requestUnacknowledged() {
          i().reduce(
            this._guildStates,
            (e, t) => !1 !== t.requestUnacknowledged() || t,
            !1
          ) && this._flush.delay();
        }
        _getGuildState(e) {
          let t = this._guildStates[e];
          return (
            null == t &&
              (t = this._guildStates[e] = new a(e, this._guildMemberExists)),
            t
          );
        }
      }
    },
    560858: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var s = n("501769");
      async function i(e, t) {
        let { default: i } = await n
            .el("560858@176:198")
            .then(n.bind(n, "233760")),
          r = i(e, { skipExtensionCheck: t, analyticsLocations: [] });
        if (null != r) r(null);
        else if (s.isPlatformEmbedded) window.open(e);
        else {
          let t = document.createElement("a");
          (t.href = e),
            (t.target = "_blank"),
            (t.rel = "noreferrer noopener"),
            t.click();
        }
      }
    },
    548297: function (e, t, n) {
      "use strict";
      function s(e, t, n) {
        let s;
        let i = [],
          r = function () {
            for (var a = arguments.length, o = Array(a), u = 0; u < a; u++)
              o[u] = arguments[u];
            let d = Date.now();
            for (
              null != s && (clearTimeout(s), (s = null));
              i.length > 0 && i[0] <= d;

            )
              i.shift();
            i.length < e
              ? (i.push(d + t), n(...o))
              : (s = setTimeout(() => r(...o), i[0] - d));
          };
        return r;
      }
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        }),
        n("653041");
    },
    194794: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          CloudUpload: function () {
            return S;
          },
          CloudUploadStatus: function () {
            return i;
          },
        });
      var s,
        i,
        r = n("392711"),
        a = n.n(r),
        o = n("743548"),
        u = n("454836"),
        d = n("841869"),
        l = n("31123"),
        f = n("98185"),
        _ = n("535309"),
        c = n("328470"),
        g = n("305980"),
        m = n("152551"),
        h = n("281925"),
        E = n("980227"),
        p = n("789883"),
        v = n("376203"),
        y = n("467006");
      let I = new d.default("CloudUpload.tsx"),
        T = n("289745").default;
      ((s = i || (i = {})).NOT_STARTED = "NOT_STARTED"),
        (s.STARTED = "STARTED"),
        (s.UPLOADING = "UPLOADING"),
        (s.ERROR = "ERROR"),
        (s.COMPLETED = "COMPLETED"),
        (s.CANCELED = "CANCELED");
      class S extends p.default {
        static fromJson(e) {
          let {
              item: t,
              channelId: n,
              showLargeMessageDialog: s,
              reactNativeFileIndex: i,
            } = e,
            r = new S(t, n, s, i);
          return (
            "COMPLETED" !== r.status && (r.status = "NOT_STARTED"),
            Object.entries(e).forEach(e => {
              let [t, n] = e;
              !t.startsWith("_") && (r[t] = n);
            }),
            r
          );
        }
        constructor(e, t, n, s) {
          super(e, n),
            (this.RESUME_INCOMPLETE_CODES = [308]),
            (this.status = "NOT_STARTED"),
            (this.loaded = 0),
            (this.reactNativeFilePrepped = !1),
            (this._aborted = !1),
            (this.channelId = t),
            (this.preCompressionSize = e.file?.size ?? 0),
            (this.currentSize = e.file?.size ?? 0),
            (this.reactNativeFileIndex = s),
            (this._abortController = new AbortController());
        }
        retryOpts() {
          return this.item.platform === p.UploadPlatform.REACT_NATIVE
            ? {
                timeout: 1 * m.default.Millis.HOUR,
                backoff: new o.default(
                  0.5 * m.default.Millis.SECOND,
                  30 * m.default.Millis.MINUTE
                ),
                retries: 12,
              }
            : {
                timeout: 1 * m.default.Millis.HOUR,
                retries: 12,
                backoff: new o.default(),
              };
        }
        async uploadFileToCloudAsChunks(e) {
          if (null == this.responseUrl || "" === this.responseUrl)
            throw Error("_uploadFileToCloudAsChunks - responseUrl is not set");
          let {
              contentType: t,
              fileSize: n,
              bufferedFileData: s,
            } = await this.prepareChunkUploadItem(),
            i = Math.ceil(n / e);
          this.uploadStats = { numChunks: i, totalRequestCount: 0 };
          for (let r = 0; r < i; r++) {
            I.info(`Uploading chunk ${r + 1} of ${i} for file id ${this.id}`);
            let a = r * e,
              o = Math.min(a + e, n),
              u = await this.getChunk(a, o, s);
            try {
              await this.uploadChunk({
                chunk: u,
                start: a,
                end: o,
                totalSize: n,
                sessionUrl: this.responseUrl,
                contentType: t,
              });
            } catch (e) {
              throw (
                (I.error(
                  `Error uploading chunk ${r + 1} for file id ${this.id}: ${e}`
                ),
                e)
              );
            }
          }
          I.log(`Upload complete for file id ${this.id}`);
        }
        async prepareChunkUploadItem() {
          let e, t, n;
          if (this.item.platform === p.UploadPlatform.REACT_NATIVE) {
            let s = this.item;
            if (
              ((e =
                null != s.mimeType && "" !== s.mimeType
                  ? s.mimeType
                  : "application/octet-stream"),
              null == s.size || 0 === s.size || isNaN(s.size))
            )
              try {
                t = await (0, E.getFileContentLength)(s.uri);
              } catch (e) {
                I.warn(
                  `Failed to peek content length for file id ${this.id}, reading whole file instead: ${e}`
                ),
                  (t = (n = await (0, E.getFileData)(s.uri)).size);
              }
            else t = s.size;
          } else (e = "application/octet-stream"), (t = this.item.file.size);
          return { contentType: e, fileSize: t, bufferedFileData: n };
        }
        async getChunk(e, t, n) {
          return this.item.platform !== p.UploadPlatform.REACT_NATIVE
            ? this.item.file.slice(e, t)
            : null != n
              ? n.slice(e, t)
              : await (0, E.getFileChunk)(this.item.uri, e, t);
        }
        async uploadChunk(e) {
          let t = {
            "Content-Type": e.contentType,
            "Content-Range": `bytes ${e.start}-${e.end - 1}/${e.totalSize}`,
          };
          for (let n = 1; n <= 3; n++) {
            null != this.uploadStats &&
              (this.uploadStats.totalRequestCount += 1),
              I.log(
                `Attempt ${n} for file id ${this.id} : Uploading chunk ${e.start}-${e.end - 1} of ${e.totalSize} bytes`
              );
            let s = a().throttle(t => {
              let n = e.start + t.loaded;
              this.emit("progress", n, e.totalSize, n - this.loaded),
                (this.loaded = n);
            }, 50);
            try {
              if (
                (
                  await u.default.put({
                    url: e.sessionUrl,
                    body: e.chunk,
                    headers: t,
                    signal: this._abortController.signal,
                    onRequestProgress: s,
                    ...this.retryOpts(),
                  })
                ).ok
              )
                return;
            } catch (t) {
              if (!this.RESUME_INCOMPLETE_CODES.includes(t.status)) throw t;
              if (this.isUnsuccessfulChunkUpload(t, e.end - 1)) {
                I.error(
                  `Incomplete chunk upload for file id ${this.id}: ${t.status}`
                );
                continue;
              }
              return;
            }
          }
          throw Error("Failed to upload chunk");
        }
        isUnsuccessfulChunkUpload(e, t) {
          if (null == e.headers.range || "" === e.headers.range) return !0;
          let n = e.headers.range.match(/bytes=(\d+)-(\d+)/);
          return null !== n && parseInt(n[2], 10) !== t;
        }
        uploadFileToCloud() {
          let e, t;
          if (null == this.responseUrl)
            throw Error("_uploadFileToCloud - responseUrl is not set");
          I.log(`Uploading ${this.id}`),
            this.item.platform === p.UploadPlatform.REACT_NATIVE
              ? (t =
                  null !=
                    (e = {
                      type: this.item.mimeType,
                      uri: this.item.uri,
                      name: this.item.filename,
                    }).type && "application/json" !== e.type
                    ? e.type
                    : "application/octet-stream")
              : ((e = this.item.file), (t = "application/octet-stream"));
          let n = a().throttle(e => {
              this.emit("progress", e.loaded, e.total, e.loaded - this.loaded),
                (this.loaded = e.loaded);
            }, 50),
            s = { "Content-Type": t };
          return u.default.put({
            url: this.responseUrl,
            body: e,
            headers: s,
            signal: this._abortController.signal,
            onRequestProgress: n,
            ...this.retryOpts(),
          });
        }
        async getSize() {
          return this.currentSize ?? 0;
        }
        async upload() {
          if ("COMPLETED" === this.status) return;
          if (
            (this.setStatus("STARTED"),
            (this.startTime = new Date()),
            this.trackUploadStart(),
            "CANCELED" === this.status)
          ) {
            this.handleComplete(this.id);
            return;
          }
          let e = await T.getUploadPayload(this),
            t = (0, v.getUploadTarget)(this.item.target);
          if (
            null == e.filename ||
            "" === e.filename ||
            0 === this.currentSize
          ) {
            I.error(
              "File does not have a filename or size is 0.",
              JSON.stringify(e)
            ),
              this.handleError(y.AbortCodes.INVALID_FILE_ASSET);
            return;
          }
          if ((this.currentSize ?? 0) > t.getMaxFileSize(this.channelId)) {
            this.handleError(y.AbortCodes.ENTITY_TOO_LARGE);
            return;
          }
          if (l.default.get("upload_fail_50") && 0.5 > Math.random()) {
            setTimeout(() => {
              this.handleError(500);
            }, 1e3);
            return;
          }
          try {
            I.log(`Requesting upload url for ${this.id}`);
            let n = await u.default.post({
              url: t.getCreateAttachmentURL(this.channelId),
              body: { files: [e] },
              ...this.retryOpts(),
            });
            this.setResponseUrl(n.body.attachments[0].upload_url),
              this.setUploadedFilename(n.body.attachments[0].upload_filename);
          } catch (t) {
            let e = t?.body?.code ?? t.status;
            e !== y.AbortCodes.ENTITY_TOO_LARGE &&
              (I.error(
                `Requesting upload url failed with code ${e ?? JSON.stringify(t.body)} for ${this.id}`
              ),
              h.default.captureException(t)),
              this.handleError(e);
            return;
          }
          try {
            let e;
            let t = f.default.getCurrentConfig(
              { location: "CloudUpload" },
              { autoTrackExposure: !0 }
            );
            (e =
              t.enabled && t.chunkSize > 0
                ? await this.uploadFileToCloudAsChunks(t.chunkSize)
                : await this.uploadFileToCloud()),
              this.trackUploadFinished("COMPLETED"),
              this.handleComplete(e);
          } catch (e) {
            "CANCELED" === this.status
              ? this.handleComplete(e)
              : (I.info(`Error: status ${e.status} for ${this.id}`),
                this.handleError(e));
          }
        }
        async reactNativeCompressAndExtractData() {
          if (
            !(0, v.getUploadTarget)(this.item.target)
              .shouldReactNativeCompressUploads
          ) {
            I.log(
              "reactNativeCompressAndExtractData() disabled by upload target"
            );
            return;
          }
          if (!0 === this.reactNativeFilePrepped) {
            I.log(
              `reactNativeCompressAndExtractData() file already prepped - ${this.id}`
            );
            return;
          }
          I.log(`Starting compression/conversion for ${this.id}`);
          let e = await (0, g.getAttachmentFile)(
            this,
            this.reactNativeFileIndex ?? 0
          );
          if (null == e || null == e.file) return;
          let t = e.uri,
            n = e.file.name,
            s = e.file.type;
          if (((this.filename = n), null == n || null == t || null == s))
            throw (
              (I.error(
                `Insufficient file data: [object Object] for ${this.id}`
              ),
              Error("Insufficient file data: [object Object]"))
            );
          let i = e.fileSize ?? (await (0, E.getFileData)(t)).size;
          if (
            ((this.postCompressionSize = i), (this.currentSize = i), null == i)
          )
            throw (
              (I.error(`Size missing from file data for ${this.id}`),
              Error("Size missing from file data"))
            );
          I.log(
            `Completed compression and conversion. Output size=${i} bytes; filename=${n} for ${this.id}`
          );
          (this.item = { ...this.item, uri: t, filename: n, mimeType: s }),
            (this.reactNativeFilePrepped = !0);
        }
        handleError(e) {
          this.setStatus("ERROR"),
            (this.error = e),
            this.trackUploadFinished("ERROR");
          try {
            this.emit("error", e);
          } catch {}
          this.removeAllListeners();
        }
        handleComplete(e) {
          this.setStatus("COMPLETED"),
            I.log(`Upload complete for ${this.id}`),
            this.emit("complete", e),
            this.removeAllListeners();
        }
        cancel() {
          I.log(`Cancelled called for ${this.id}`),
            this._abortController.abort(),
            this.trackUploadFinished("CANCELED"),
            "COMPLETED" === this.status && this.delete(),
            this.setStatus("CANCELED"),
            this.emit("complete"),
            this.removeAllListeners();
        }
        resetState() {
          return (
            (this.status = "NOT_STARTED"),
            (this.uploadedFilename = void 0),
            (this.responseUrl = void 0),
            (this.error = void 0),
            (this.startTime = void 0),
            (this.uploadStats = void 0),
            (this._abortController = new AbortController()),
            super.resetState()
          );
        }
        async delete() {
          if (null == this.uploadedFilename) return;
          let e = (0, v.getUploadTarget)(this.item.target).getDeleteUploadURL(
            this.uploadedFilename
          );
          try {
            await u.default.delete(e);
          } catch {}
        }
        setResponseUrl(e) {
          this.responseUrl = e;
        }
        setStatus(e) {
          this.status = e;
        }
        setFilename(e) {
          this.filename = e;
        }
        setUploadedFilename(e) {
          this.uploadedFilename = e;
        }
        trackUploadStart() {
          c.default.track(y.AnalyticEvents.ATTACHMENT_UPLOAD_STARTED, {
            file_size: this.currentSize,
            mime_type: this.mimeType ?? "unknown",
            video_upload_quality: _.default.videoUploadQuality,
            data_saving_mode: _.default.dataSavingMode,
            low_quality_image_mode: _.default.lowQualityImageMode,
          });
        }
        trackUploadFinished(e) {
          let t =
              null != this.startTime
                ? Date.now() - this.startTime.getTime()
                : -1,
            n = null,
            s = 1;
          null != this.uploadStats &&
            ((n = this.uploadStats.numChunks),
            (s = this.uploadStats.totalRequestCount)),
            c.default.track(y.AnalyticEvents.ATTACHMENT_UPLOAD_FINISHED, {
              duration_ms: t,
              file_size: this.currentSize,
              pre_compression_file_size: this.preCompressionSize,
              final_state: e,
              mime_type: this.mimeType ?? "unknown",
              num_chunks: n,
              num_upload_attempts: s,
              error_code: this.error,
              video_upload_quality: _.default.videoUploadQuality,
              data_saving_mode: _.default.dataSavingMode,
              low_quality_image_mode: _.default.lowQualityImageMode,
            });
        }
      }
    },
    789883: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          UploadPlatform: function () {
            return r;
          },
          default: function () {
            return c;
          },
        });
      var s,
        i,
        r,
        a,
        o = n("836560"),
        u = n("392711"),
        d = n.n(u),
        l = n("153832"),
        f = n("10357"),
        _ = n("980227");
      ((s = r || (r = {}))[(s.REACT_NATIVE = 0)] = "REACT_NATIVE"),
        (s[(s.WEB = 1)] = "WEB"),
        ((i = a || (a = {}))[(i.FILE_ATTACHMENT = 0)] = "FILE_ATTACHMENT"),
        (i[(i.IMAGE_PICKER = 1)] = "IMAGE_PICKER");
      class c extends o.EventEmitter {
        constructor(e, t) {
          if ((super(), (this.item = e), 0 === e.platform)) {
            this.id = e.id ?? e.uri;
            let t = (0, _.getFile)({
              uri: e.uri,
              overrideFilename: e.filename,
              overrideType: e.mimeType,
            });
            (this.filename = t.filename),
              (this.isImage = t.isImage),
              (this.isVideo = t.isVideo),
              (this.mimeType = t.type),
              (this.origin = e.origin),
              (this.durationSecs = e.durationSecs),
              (this.waveform = e.waveform),
              (this.isRemix = e.isRemix);
          } else
            (this.id = e.id ?? d().uniqueId("upload")),
              (this.classification = f.classifyFile(e.file)),
              (this.isImage = "image" === this.classification),
              (this.isVideo = "video" === this.classification),
              (this.filename = e.file.name),
              (this.mimeType = e.file.type);
          (this.isThumbnail = e.isThumbnail),
            (this.clip = e.clip),
            (this.uniqueId = (0, l.v4)()),
            (this.showLargeMessageDialog = t),
            (this.spoiler = !1),
            (this.description = null);
        }
        cancel() {}
        resetState() {
          return this;
        }
      }
    },
    376203: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          UploadTargets: function () {
            return i;
          },
          getUploadTarget: function () {
            return f;
          },
        });
      var s,
        i,
        r = n("484244"),
        a = n("731865"),
        o = n("10357"),
        u = n("980227"),
        d = n("467006");
      class l {
        getCreateAttachmentURL(e) {
          return d.Endpoints.MESSAGE_CREATE_ATTACHMENT_UPLOAD(e);
        }
        getDeleteUploadURL(e) {
          return d.Endpoints.MESSAGE_DELETE_UPLOAD(e);
        }
        getMaxFileSize(e) {
          let t = a.default.getBasicChannel(e);
          return o.maxFileSize(t?.guild_id);
        }
        getMaxAttachmentsCount() {
          return d.MAX_UPLOAD_COUNT;
        }
        getMaxTotalAttachmentSize() {
          return u.MAX_TOTAL_ATTACHMENT_SIZE;
        }
        get shouldReactNativeCompressUploads() {
          return !0;
        }
      }
      function f(e) {
        if (1 === e) return new r.default();
        return new l();
      }
      ((s = i || (i = {}))[(s.MESSAGE_ATTACHMENT = 0)] = "MESSAGE_ATTACHMENT"),
        (s[(s.GUILD_PRODUCT_ATTACHMENT = 1)] = "GUILD_PRODUCT_ATTACHMENT");
    },
    83939: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          calculateProgress: function () {
            return r;
          },
          doesImageMatchUpload: function () {
            return i;
          },
        });
      var s = n("789883");
      function i(e, t) {
        if (t.id === e.uri || (null != t.id && t.id === e.id)) return !0;
        if (t.item.platform === s.UploadPlatform.REACT_NATIVE) {
          let { item: n } = t,
            { filename: s } = e;
          if (
            n.originalUri === e.uri ||
            (null != s && n.originalUri?.includes(s))
          )
            return !0;
        }
        return !1;
      }
      function r(e, t) {
        return 0 === t ? 0 : Math.min(Math.floor((e / t) * 100), 100);
      }
    },
    289745: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
          getUploadPayload: function () {
            return u;
          },
        });
      var s = n("512722"),
        i = n.n(s),
        r = n("392711"),
        a = n.n(r),
        o = n("993085");
      function u(e) {
        let t = e.item.file;
        return (
          i()(null != t, "file data must not be empty"),
          {
            filename: t.name,
            file_size: t.size,
            id: a().uniqueId(),
            is_clip: null != e.clip,
            title: e.clip?.name,
            application_id: e.clip?.applicationId,
            clip_created_at:
              null != e.clip ? (0, o.getClipCreatedAt)(e.clip.id) : void 0,
            clip_participant_ids:
              null != e.clip
                ? (0, o.getClipParticipantIds)(e.clip.users)
                : void 0,
          }
        );
      }
      var d = { getUploadPayload: u };
    },
    237427: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          isActivitiesInTextEnabled: function () {
            return f;
          },
          isActivityInTextSupportedForChannelType: function () {
            return d;
          },
          useActivitiesInTextButtonVisibility: function () {
            return c;
          },
          useIsActivitiesInTextEnabled: function () {
            return _;
          },
        });
      var s = n("499953"),
        i = n("661223"),
        r = n("516086"),
        a = n("731865");
      let o = (0, r.createExperiment)({
          kind: "user",
          id: "2023-08_activities_in_text",
          label: "Activities in Text User",
          defaultConfig: { enabled: !1 },
          treatments: [
            {
              id: 1,
              label: "enable Activities in text channels",
              config: {
                enabled: !0,
                showInOmniButtonMenu: !0,
                showChatInputButton: !1,
              },
            },
            {
              id: 3,
              label:
                "enable Activities in text with the rocket button in chat input",
              config: {
                enabled: !0,
                showInOmniButtonMenu: !1,
                showChatInputButton: !0,
              },
            },
          ],
        }),
        u = (0, r.createExperiment)({
          kind: "guild",
          id: "2023-11_activities_in_text_guild",
          label: "Activities in Text Guild",
          defaultConfig: { enabled: !1 },
          treatments: [
            {
              id: 1,
              label: "enable Activities in text channels",
              config: {
                enabled: !0,
                showInOmniButtonMenu: !0,
                showChatInputButton: !1,
              },
            },
            {
              id: 3,
              label:
                "enable Activities in text with the rocket button in chat input",
              config: {
                enabled: !0,
                showInOmniButtonMenu: !1,
                showChatInputButton: !0,
              },
            },
          ],
        });
      function d(e) {
        return [
          s.ChannelTypes.GUILD_TEXT,
          s.ChannelTypes.GROUP_DM,
          s.ChannelTypes.DM,
        ].includes(e);
      }
      function l(e) {
        return null != e && d(e.type);
      }
      function f(e, t) {
        if (null == e) return !1;
        let n = d(e.type);
        return e?.guild_id != null
          ? u.getCurrentConfig(
              { guildId: e.guild_id, location: t },
              { autoTrackExposure: !0 }
            ).enabled && n
          : o.getCurrentConfig({ location: t }, { autoTrackExposure: !0 })
              .enabled && n;
      }
      function _(e, t) {
        let n = (0, i.useStateFromStores)([a.default], () =>
            a.default.getChannel(e)
          ),
          s = l(n);
        return (
          (n?.guild_id != null ? u : o).useExperiment(
            { guildId: n?.guild_id, location: t },
            { autoTrackExposure: !0 }
          ).enabled && s
        );
      }
      function c(e, t) {
        let n = (0, i.useStateFromStores)([a.default], () =>
            a.default.getChannel(e)
          ),
          s = l(n),
          r = (n?.guild_id != null ? u : o).useExperiment(
            { guildId: n?.guild_id, location: t },
            { autoTrackExposure: !0 }
          );
        return r.enabled && s
          ? {
              showInOmniButtonMenu: r.showInOmniButtonMenu,
              showChatInputButton: r.showChatInputButton,
            }
          : null;
      }
    },
    123576: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        }),
        n("789020");
      var s = n("661223"),
        i = n("312916"),
        r = n("362939"),
        a = n("984362"),
        o = n("467006");
      function u() {
        return {
          lastUsedObject: {},
          useActivityUrlOverride: !1,
          activityUrlOverride: null,
          filter: "",
        };
      }
      let d = u(),
        l = null,
        f = [];
      class _ extends s.default.PersistedStore {
        static #e = (this.displayName = "DeveloperActivityShelfStore");
        static #t = (this.persistKey = "DeveloperActivityShelfStore");
        initialize(e) {
          d = { ...u(), ...(e ?? {}) };
        }
        static #n = (this.migrations = [e => (delete e.isEnabled, { ...e })]);
        getState() {
          return d;
        }
        getIsEnabled() {
          return r.DeveloperMode.getSetting() && f.length > 0;
        }
        getLastUsedObject() {
          return d.lastUsedObject;
        }
        getUseActivityUrlOverride() {
          return this.getIsEnabled() && d.useActivityUrlOverride;
        }
        getActivityUrlOverride() {
          return this.getIsEnabled() ? d.activityUrlOverride : null;
        }
        getFetchState() {
          return l;
        }
        getFilter() {
          return this.getIsEnabled() ? d.filter : "";
        }
        getDeveloperShelfItems() {
          return this.getIsEnabled() ? f : [];
        }
        inDevModeForApplication(e) {
          return this.getIsEnabled() && null != f.find(t => t.id === e);
        }
      }
      var c = new _(i.default, {
        LOGOUT: function () {
          (d = u()), (l = null), (f = []);
        },
        DEVELOPER_ACTIVITY_SHELF_TOGGLE_USE_ACTIVITY_URL_OVERRIDE: function () {
          d.useActivityUrlOverride = !d.useActivityUrlOverride;
        },
        DEVELOPER_ACTIVITY_SHELF_SET_ACTIVITY_URL_OVERRIDE: function (e) {
          let { activityUrlOverride: t } = e;
          d.activityUrlOverride = t;
        },
        DEVELOPER_ACTIVITY_SHELF_MARK_ACTIVITY_USED: function (e) {
          let { applicationId: t, timestamp: n } = e;
          if (null == f.find(e => e.id === t)) return !1;
          d.lastUsedObject[t] = n;
        },
        DEVELOPER_ACTIVITY_SHELF_FETCH_START() {
          l = "loading";
        },
        DEVELOPER_ACTIVITY_SHELF_FETCH_SUCCESS: function (e) {
          let { items: t } = e;
          (l = "loaded"),
            (f = t.filter(
              e =>
                null != e.flags &&
                (0, a.hasFlag)(e.flags, o.ApplicationFlags.EMBEDDED)
            ));
        },
        DEVELOPER_ACTIVITY_SHELF_FETCH_FAIL: function (e) {
          let { type: t } = e;
          l = "errored";
        },
        DEVELOPER_ACTIVITY_SHELF_UPDATE_FILTER: function (e) {
          let { filter: t } = e;
          d.filter = t;
        },
        USER_SETTINGS_PROTO_UPDATE() {},
      });
    },
    134223: function (e, t, n) {
      "use strict";
      let s;
      n.r(t),
        n.d(t, {
          NO_ACTIVITIES: function () {
            return v;
          },
          default: function () {
            return B;
          },
        }),
        n("653041");
      var i = n("661223"),
        r = n("312916"),
        a = n("243770"),
        o = n("262047"),
        u = n("731865"),
        d = n("197905"),
        l = n("232733"),
        f = n("871831"),
        _ = n("501769"),
        c = n("4699"),
        g = n("345923"),
        m = n("657275"),
        h = n("985924"),
        E = n("467006");
      let p = {
          seenActivities: new Set(),
          seenNewActivities: {},
          seenUpdatedActivities: {},
          shouldShowNewActivityIndicator: !1,
          usersHavePlayedByApp: new Map(),
        },
        v = [],
        y = new Map(),
        I = new Map(),
        T = new Map(),
        S = new Map(),
        C = !1,
        A = new Map(),
        N = new Map(),
        D = new Map(),
        O = new Map(),
        R = new Map(),
        P = new Map(),
        b = new Map();
      let M = h.ActivityPanelModes.DISCONNECTED,
        V = h.FocusedActivityLayouts.RESIZABLE;
      function L(e) {
        return e ?? "0";
      }
      function k(e) {
        let {
            guildId: t,
            channelId: n,
            applicationId: s,
            instanceId: i,
            userIds: a,
            activitySessionId: l,
          } = e,
          f = (0, c.default)(s);
        if (null == f) return;
        let _ = u.default.getBasicChannel(n),
          g =
            (null != _ &&
              d.default.canBasicChannel(E.BasicPermissions.CONNECT, _)) ||
            _?.type === E.ChannelTypes.DM ||
            _?.type === E.ChannelTypes.GROUP_DM;
        if (
          ((function (e, t) {
            p.usersHavePlayedByApp.set(
              e,
              new Set([...(p.usersHavePlayedByApp.get(e) ?? []), ...t])
            );
          })(s, a),
          !g)
        )
          return;
        let m = {
            activitySessionId: l ?? i,
            applicationId: s,
            channelId: n,
            guildId: t,
            instanceId: i,
            url: f,
            userIds: new Set(a),
          },
          h = o.default.getId(),
          v = y.get(m.applicationId);
        a.some(e => e === h) &&
          null != v &&
          (y.set(v.applicationId, { ...v, ...m }),
          r.default.dispatch({
            type: "EMBEDDED_ACTIVITY_INSTANCE_CHANGE",
            channelId: n,
            instanceId: i,
          })),
          null != v &&
            n === v.channelId &&
            !a.some(e => e === h) &&
            Array.from(v.userIds).some(e => e === h) &&
            (S.get(n) === s ? S.delete(n) : y.delete(s));
        let C = (T.get(n) ?? []).filter(e => e.applicationId !== s),
          A = L(t),
          N = (I.get(A) ?? []).filter(
            e => !(e.applicationId === s && e.channelId === n)
          );
        0 !== a.length && (C.push(m), N.push(m)), T.set(n, C), I.set(A, N);
      }
      function w(e) {
        e.embedded_activities.forEach(t => {
          let { channel_id: n, embedded_activity: s, connections: i } = t;
          k({
            guildId: e.id,
            channelId: n,
            applicationId: s.application_id,
            instanceId: s.activity_id,
            userIds: i.map(e => e.user_id),
          });
        });
      }
      function U() {
        C = !1;
      }
      function G(e, t) {
        return `${e}:${t}`;
      }
      class F extends i.default.PersistedStore {
        static #e = (this.displayName = "EmbeddedActivitiesStore");
        static #t = (this.persistKey = "EmbeddedActivities");
        initialize(e) {
          let t = new Map();
          Array.isArray(e?.usersHavePlayedByApp) &&
            e?.usersHavePlayedByApp.forEach(e => {
              if (Array.isArray(e)) {
                let [n, s] = e;
                "string" == typeof n &&
                  Array.isArray(s) &&
                  t.set(n, new Set(s));
              }
            });
          let n = new Set(e?.seenActivities ?? []);
          null != e &&
            (p = { ...e, seenActivities: n, usersHavePlayedByApp: t });
        }
        getState() {
          return p;
        }
        static #n = (this.migrations = [
          e => ({
            ...e,
            seenFeaturedActivities: [],
            shouldShowNewActivityIndicator: !1,
          }),
          e => (delete e.seenFeaturedActivities, { ...e, seenActivities: [] }),
          e => ({ ...e }),
          e => (
            delete e.currentFreeActivity,
            delete e.lastFreeActivityRotationTimestampMs,
            delete e.freePeriodActivities,
            delete e.shouldShowFreeActivityIndicator,
            { ...e }
          ),
          e => {
            let t = new Set(e.seenActivities ?? []);
            return {
              ...e,
              seenActivities: t,
              seenNewActivities: {},
              seenUpdatedActivities: {},
            };
          },
        ]);
        getSelfEmbeddedActivityForChannel(e) {
          return (
            Array.from(y.values()).find(t => {
              let { channelId: n } = t;
              return e === n;
            }) ?? null
          );
        }
        getSelfEmbeddedActivities() {
          return y;
        }
        getEmbeddedActivitiesForGuild(e) {
          return I.get(e) ?? v;
        }
        getEmbeddedActivitiesForChannel(e) {
          return T.get(e) ?? v;
        }
        getEmbeddedActivitiesByChannel() {
          return T;
        }
        getEmbeddedActivityDurationMs(e, t) {
          var n, s;
          let i = b.get(((n = e), (s = t), `${n}:${s}`));
          return null == i ? null : Date.now() - i;
        }
        isLaunchingActivity() {
          return C;
        }
        getShelfActivities(e) {
          let t = L(e);
          return A.get(t) ?? [];
        }
        getShelfFetchStatus(e) {
          let t = L(e);
          return N.get(t);
        }
        shouldFetchShelf(e) {
          let t = L(e),
            n = N.get(t) ?? { isFetching: !1 },
            s = Date.now() - (n?.lastFetchTimestampMs ?? 0) > 216e5;
          return !n?.isFetching && s;
        }
        getOrientationLockStateForApp(e) {
          return D.get(e) ?? null;
        }
        getPipOrientationLockStateForApp(e) {
          return O.get(e) ?? this.getOrientationLockStateForApp(e);
        }
        getGridOrientationLockStateForApp(e) {
          return R.get(e) ?? O.get(e) ?? this.getOrientationLockStateForApp(e);
        }
        getLayoutModeForApp(e) {
          return P.get(e);
        }
        getUsersHavePlayedByApp(e) {
          return [...(p.usersHavePlayedByApp.get(e) ?? [])];
        }
        getConnectedActivityChannelId() {
          return s;
        }
        getActivityPanelMode() {
          return M;
        }
        getFocusedLayout() {
          return V;
        }
        getCurrentEmbeddedActivity() {
          let e = this.getConnectedActivityChannelId();
          if (null != e)
            return this.getSelfEmbeddedActivityForChannel(e) ?? void 0;
        }
        getEmbeddedActivityForUserId(e, t) {
          let n;
          if (void 0 !== t) {
            e: for (let [s, i] of T)
              for (let s of i)
                if (s.applicationId === t && s.userIds.has(e)) {
                  n = s;
                  break e;
                }
            return n;
          }
        }
      }
      var B = new F(r.default, {
        ACTIVITY_LAYOUT_MODE_UPDATE: function (e) {
          let { applicationId: t, layoutMode: n } = e;
          P.set(t, n);
        },
        CONNECTION_OPEN_SUPPLEMENTAL: function (e) {
          let { guilds: t } = e;
          T.clear(), I.clear(), t.forEach(e => w(e));
        },
        GUILD_CREATE: function (e) {
          let { guild: t } = e;
          w(t);
        },
        CALL_CREATE: function (e) {
          let { channelId: t, embeddedActivities: n } = e;
          !(function (e, t) {
            t.forEach(e => {
              let { channel_id: t, embedded_activity: n, connections: s } = e;
              k({
                guildId: null,
                channelId: t,
                applicationId: n.application_id,
                instanceId: n.activity_id,
                userIds: s.map(e => e.user_id),
              });
            });
          })(0, n);
        },
        CHANNEL_DELETE: function (e) {
          let { channel: t } = e;
          T.set(t.id, []);
          let n = t.guild_id;
          if (null != n) {
            let e = L(n),
              s = (I.get(e) ?? []).filter(e => e.channelId !== t.id);
            I.set(e, s);
          }
        },
        EMBEDDED_ACTIVITY_LAUNCH_START: function () {
          C = !0;
        },
        EMBEDDED_ACTIVITY_LAUNCH_SUCCESS: U,
        EMBEDDED_ACTIVITY_LAUNCH_FAIL: U,
        EMBEDDED_ACTIVITY_OPEN: function (e) {
          let { channelId: t, applicationId: n } = e,
            i = (0, c.default)(n),
            r = o.default.getSessionId();
          if (null == i || null == r || y.get(n)?.channelId === t) return !1;
          let a = u.default.getChannel(t),
            d = a?.getGuildId(),
            _ = f.default.getCurrentUser();
          if ((null == d && !a?.isPrivate()) || null == _) return !1;
          (s = t),
            y.set(n, {
              guildId: d,
              channelId: t,
              applicationId: n,
              url: i,
              userIds: new Set([_.id]),
              connectedSince: Date.now(),
            }),
            (M =
              s !== l.default.getChannelId() || (0, m.default)(t)
                ? h.ActivityPanelModes.PIP
                : h.ActivityPanelModes.PANEL),
            b.set(
              (function (e, t) {
                return `${e}:${t}`;
              })(t, n),
              Date.now()
            );
        },
        EMBEDDED_ACTIVITY_CLOSE: function (e) {
          let { applicationId: t } = e,
            n = y.get(t);
          y.delete(t), n?.channelId === s && (s = void 0);
        },
        EMBEDDED_ACTIVITY_INBOUND_UPDATE: function (e) {
          let {
            guildId: t,
            channelId: n,
            embeddedActivity: s,
            connections: i,
          } = e;
          k({
            guildId: t,
            channelId: n,
            applicationId: s.application_id,
            instanceId: s.activity_id,
            userIds: i.map(e => e.user_id),
          });
        },
        EMBEDDED_ACTIVITY_INBOUND_UPDATE_V2: function (e) {
          let {
            activitySessionId: t,
            applicationId: n,
            channelId: s,
            guildId: i,
            instanceId: r,
            userIds: a,
          } = e;
          k({
            guildId: i,
            channelId: s,
            applicationId: n,
            instanceId: r,
            userIds: a,
            activitySessionId: t,
          });
        },
        LOCAL_ACTIVITY_UPDATE: function (e) {
          let { activity: t } = e;
          if (null == t) return !1;
          let n = y.get(t.application_id ?? "");
          if (null == n) return !1;
          y.set(n.applicationId, { ...n });
        },
        EMBEDDED_ACTIVITY_SET_CONFIG: function (e) {
          let { applicationId: t, config: n } = e,
            s = y.get(t);
          null != s && y.set(s.applicationId, { ...s, config: n });
        },
        EMBEDDED_ACTIVITY_FETCH_SHELF: function (e) {
          let { guildId: t } = e,
            n = L(t),
            s = N.get(n);
          N.set(n, {
            isFetching: !0,
            lastFetchTimestampMs: s?.lastFetchTimestampMs,
          });
        },
        EMBEDDED_ACTIVITY_FETCH_SHELF_SUCCESS: function (e) {
          let { guildId: t, activities: n } = e,
            s = L(t);
          A.set(s, n);
          let i = Date.now();
          !(function (e) {
            let { activities: t, now: n } = e;
            t.forEach(e => {
              let t = e.application_id,
                s = e.client_platform_config[(0, g.default)((0, _.getOS)())];
              if (
                (!p.seenActivities.has(t) &&
                  ((p.shouldShowNewActivityIndicator = !0),
                  p.seenActivities.add(t)),
                null == s.label_until)
              )
                return;
              let i = new Date(s.label_until).getTime();
              if (i < n) return;
              let r = p.seenNewActivities[t],
                o = Object.hasOwn(p.seenNewActivities, t),
                u = new Date(r).getTime() < i;
              s.label_type === a.EmbeddedActivityLabelTypes.NEW &&
                (!o || u) &&
                ((p.shouldShowNewActivityIndicator = !0),
                (p.seenNewActivities[t] = s.label_until));
              let d = p.seenUpdatedActivities[t],
                l = Object.hasOwn(p.seenUpdatedActivities, t),
                f = new Date(d).getTime() < i;
              s.label_type === a.EmbeddedActivityLabelTypes.UPDATED &&
                (!l || f) &&
                ((p.shouldShowNewActivityIndicator = !0),
                (p.seenUpdatedActivities[t] = s.label_until));
            });
          })({ activities: n, now: i }),
            N.set(s, { isFetching: !1, lastFetchTimestampMs: i });
        },
        EMBEDDED_ACTIVITY_FETCH_SHELF_FAIL: function (e) {
          let { guildId: t } = e,
            n = L(t),
            s = N.get(n);
          N.set(n, {
            isFetching: !1,
            lastFetchTimestampMs: s?.lastFetchTimestampMs,
          });
        },
        EMBEDDED_ACTIVITY_DISMISS_NEW_INDICATOR: () => {
          p.shouldShowNewActivityIndicator = !1;
        },
        EMBEDDED_ACTIVITY_SET_ORIENTATION_LOCK_STATE: function (e) {
          let {
            applicationId: t,
            lockState: n,
            pictureInPictureLockState: s,
            gridLockState: i,
          } = e;
          null == n ? D.delete(t) : D.set(t, n),
            null === s ? O.delete(t) : void 0 !== s && O.set(t, s),
            null === i ? R.delete(t) : void 0 !== i && R.set(t, i);
        },
        EMBEDDED_ACTIVITY_SET_PANEL_MODE: function (e) {
          let { activityPanelMode: t } = e;
          M = t;
        },
        EMBEDDED_ACTIVITY_SET_FOCUSED_LAYOUT: function (e) {
          let { focusedActivityLayout: t } = e;
          V = t;
        },
        CHANNEL_SELECT: function (e) {
          let { channelId: t } = e;
          s !== t &&
            M === h.ActivityPanelModes.PANEL &&
            (M = h.ActivityPanelModes.PIP);
        },
        EMBEDDED_ACTIVITY_DISCONNECT: function (e) {
          let {
            channelId: t,
            applicationId: n,
            isRejoiningFromCurrentSession: s,
          } = e;
          s && S.set(t, n);
        },
        CONNECTION_INTERRUPTED: function (e) {
          e.code === E.RPCCloseCodes.CLOSE_ABNORMAL &&
            ((s = void 0),
            y.clear(),
            (C = !1),
            (M = h.ActivityPanelModes.DISCONNECTED));
        },
      });
    },
    4699: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("243084"),
        i = n("123576");
      function r(e) {
        let t = i.default.getState();
        return t.useActivityUrlOverride &&
          null != t.activityUrlOverride &&
          "" !== t.activityUrlOverride
          ? t.activityUrlOverride
          : s.default.inTestModeForEmbeddedApplication(e)
            ? s.default.testModeOriginURL
            : (function (e) {
                let t = window.GLOBAL_ENV.ACTIVITY_APPLICATION_HOST;
                return null == t ? null : `https://${e}.${t}`;
              })(e);
      }
    },
    985924: function (e, t, n) {
      "use strict";
      var s, i, r, a;
      n.r(t),
        n.d(t, {
          ActivityPanelModes: function () {
            return s;
          },
          FocusedActivityLayouts: function () {
            return i;
          },
          LANDSCAPE_ACTIVITY_ASPECT_RATIO: function () {
            return o;
          },
        }),
        ((r = s || (s = {})).DISCONNECTED = "disconnected"),
        (r.LAUNCHING_WITH_ORIENTATION_CHANGE =
          "launching_with_orientation_change"),
        (r.PANEL = "panel"),
        (r.PIP = "pip"),
        ((a = i || (i = {}))[(a.NO_CHAT = 0)] = "NO_CHAT"),
        (a[(a.RESIZABLE = 1)] = "RESIZABLE");
      let o = 16 / 9;
    },
    351216: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var s = n("312916");
      function i(e, t, n, i) {
        s.default.dispatch({
          type: "EMBEDDED_ACTIVITY_DEFERRED_OPEN",
          channelId: e,
          applicationId: t,
          intent: i,
          analyticsLocations: n,
        });
      }
    },
    345923: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var s = n("243770");
      function i(e) {
        switch (e) {
          case "android":
            return s.EmbeddedActivitySupportedPlatforms.ANDROID;
          case "ios":
            return s.EmbeddedActivitySupportedPlatforms.IOS;
          default:
            return s.EmbeddedActivitySupportedPlatforms.WEB;
        }
      }
    },
    70484: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var s = n("467006");
      function i(e) {
        return (
          null != e &&
          e.type !== s.ActivityTypes.CUSTOM_STATUS &&
          (null != e.details ||
            (null != e.assets &&
              (null != e.assets.large_image || null != e.assets.small_text)) ||
            null != e.party ||
            null != e.secrets ||
            null != e.state)
        );
      }
    },
    774445: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
      var s = n("763301"),
        i = n("467006"),
        r = n("161423");
      function a(e) {
        return (
          null != e &&
          e.type === i.ActivityTypes.LISTENING &&
          e.name === s.default.get(i.PlatformTypes.SPOTIFY).name &&
          null != e.party &&
          null != e.party.id &&
          (0, r.isSpotifyParty)(e.party.id)
        );
      }
    },
    657275: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
      var s = n("499953"),
        i = n("731865"),
        r = n("237427");
      function a(e) {
        let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : i.default,
          n = t.getChannel(e),
          a = (0, r.isActivitiesInTextEnabled)(n, "isVoiceActivityChannel");
        return (
          null != n &&
          (n.type === s.ChannelTypes.GUILD_VOICE || (n.isPrivate() && !a))
        );
      }
    },
    159110: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var s = n("312916");
      function i() {
        s.default.dispatch({ type: "ACTIVITY_SYNC_STOP" });
      }
    },
    244180: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          collectChannelAnalyticsMetadata: function () {
            return M;
          },
          collectChannelAnalyticsMetadataFromId: function () {
            return b;
          },
          collectGuildAnalyticsMetadata: function () {
            return P;
          },
          collectVoiceAnalyticsMetadata: function () {
            return V;
          },
          default: function () {
            return G;
          },
          getChannelOpenedMetadata: function () {
            return k;
          },
          getCustomStatusMetadata: function () {
            return U;
          },
          getVoiceStateMetadata: function () {
            return w;
          },
          trackWithMetadata: function () {
            return L;
          },
        });
      var s = n("392711"),
        i = n.n(s),
        r = n("768517"),
        a = n("656150"),
        o = n("775822"),
        u = n("262047"),
        d = n("731865"),
        l = n("610043"),
        f = n("362753"),
        _ = n("361733"),
        c = n("327271"),
        g = n("386130"),
        m = n("197905"),
        h = n("565639"),
        E = n("407807"),
        p = n("417223"),
        v = n("232733"),
        y = n("632706"),
        I = n("301309"),
        T = n("642174"),
        S = n("328470"),
        C = n("152551"),
        A = n("694574"),
        N = n("353958"),
        D = n("467006"),
        O = n("551835");
      function R(e) {
        let t = 0;
        for (let n in e) t += 1;
        return t;
      }
      function P(e) {
        if (null == e) return null;
        let t = c.default.getGuild(e);
        if (null == t) return null;
        let n = u.default.getId(),
          s = _.default.getMember(e, n),
          i = l.default.getChannels(e),
          r = i[l.GUILD_SELECTABLE_CHANNELS_KEY].length,
          a = i[l.GUILD_VOCAL_CHANNELS_KEY].length,
          o = T.default.getVoiceStates(e);
        return {
          guild_id: t.id,
          guild_size_total: f.default.getMemberCount(e),
          guild_num_channels: r + a,
          guild_num_text_channels: r,
          guild_num_voice_channels: a,
          guild_num_roles: R(t.roles),
          guild_member_num_roles: null != s ? s.roles.length : 0,
          guild_member_perms: String(
            m.default.getGuildPermissions(t) ?? A.default.NONE
          ),
          guild_is_vip: t.hasFeature(D.GuildFeatures.VIP_REGIONS),
          is_member: null != s,
          num_voice_channels_active: R(o),
        };
      }
      function b(e) {
        if (null == e) return null;
        let t = d.default.getChannel(e);
        return null == t ? null : M(t);
      }
      function M(e) {
        if (null == e) return null;
        let t = !1,
          n = e.getGuildId();
        if (null != n) {
          let s = e => {
            if (null == e) return !1;
            let t = e.permissionOverwrites[n];
            return (
              null != t && r.default.has(t.deny, D.Permissions.VIEW_CHANNEL)
            );
          };
          t =
            o.THREAD_CHANNEL_TYPES.has(e.type) && null != e.parent_id
              ? s(d.default.getChannel(e.parent_id))
              : s(e);
        }
        return {
          channel_id: e.id,
          channel_type: e.type,
          channel_size_total: e.isPrivate() ? e.recipients.length : 0,
          channel_member_perms: String(
            null != n
              ? m.default.getChannelPermissions(e) ?? A.default.NONE
              : A.default.NONE
          ),
          channel_hidden: t,
        };
      }
      function V(e) {
        if (null == e) return null;
        let t = d.default.getChannel(e);
        if (null == t) return null;
        let n = g.default.isVideoEnabled(),
          s = E.default.getMediaSessionId();
        return {
          channel_id: t.id,
          channel_type: t.type,
          guild_id: t.getGuildId(),
          media_session_id: s,
          ...w(t.getGuildId(), t.id, n),
          ...(0, N.getVoiceAnalyticsMetadataAdditional)(),
        };
      }
      function L(e) {
        var t, n, s;
        let i =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
          r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
        if (S.default.isThrottled(e)) return;
        let a =
            !("location" in i) ||
            i.location !== D.AnalyticsLocations.GUILD_CREATE_INVITE_SUGGESTION,
          o = "guild_id" in i ? i.guild_id : a ? y.default.getGuildId() : null,
          u =
            "channel_id" in i
              ? i.channel_id
              : a
                ? v.default.getChannelId(o)
                : null,
          l = d.default.getChannel(u);
        let f =
          ((t = l),
          (n = o),
          null == t
            ? n ?? null
            : t.isPrivate()
              ? null
              : t.getGuildId() ?? n ?? null);
        let _ = {
          ...i,
          ...P(f),
          ...(null != o && null != u && (0, O.isStaticChannelRoute)(u)
            ? ((s = 0), { channel_static_route: u, channel_hidden: !1 })
            : M(l)),
        };
        S.default.track(e, _, { flush: r });
      }
      function k(e) {
        let t = d.default.getChannel(e);
        if (null == t || null == t.guild_id) return {};
        let n = c.default.getGuild(t.guild_id);
        if (null == n) return {};
        let s = p.default.getSnapshot(e, 10 * C.default.Millis.SECOND);
        return {
          channel_was_unread: s.unread,
          channel_mention_count: s.mentionCount,
          channel_is_muted: I.default.isChannelMuted(t.guild_id, t.id),
          channel_resolved_unread_setting: I.default.resolveUnreadSetting(t),
          channel_preset: (0, a.presetFromSettings)(
            I.default.resolveUnreadSetting(t),
            I.default.resolvedMessageNotifications(t)
          ),
          guild_was_unread: s.guildUnread,
          guild_mention_count: s.guildMentionCount,
          guild_is_muted: I.default.isMuted(t.guild_id),
          guild_resolved_unread_setting: I.default.resolveGuildUnreadSetting(n),
          guild_preset: (0, a.presetFromSettings)(
            I.default.resolveGuildUnreadSetting(n),
            I.default.getMessageNotifications(t.guild_id)
          ),
        };
      }
      function w(e, t, n) {
        let s = {
          voice_state_count: 0,
          video_stream_count: 0,
          video_enabled: n,
        };
        return (
          i()(T.default.getVoiceStates(e))
            .filter(e => e.channelId === t)
            .filter(e => e.userId !== u.default.getId())
            .forEach(e => {
              s.voice_state_count++,
                (e.selfVideo || e.selfStream) && s.video_stream_count++;
            }),
          s
        );
      }
      function U(e, t) {
        let n = { custom_status_count: 0 };
        return (
          i()(T.default.getVoiceStates(e)).forEach(e => {
            e.channelId === t &&
              null !=
                h.default.findActivity(
                  e.userId,
                  e => e.type === D.ActivityTypes.CUSTOM_STATUS
                ) &&
              n.custom_status_count++;
          }),
          n
        );
      }
      var G = { trackWithMetadata: L, getVoiceStateMetadata: w };
    },
    353958: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getVoiceAnalyticsMetadataAdditional: function () {
            return i;
          },
        });
      var s = n("224022");
      function i() {
        let e = s.default.getCurrentGameForAnalytics();
        return {
          game_name: null != e ? e.name : null,
          game_id: null != e ? e.id : null,
        };
      }
    },
    432937: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var s = n("470079"),
        i = n("661223"),
        r = n("122677"),
        a = n("174803"),
        o = n("262047");
      function u() {
        let [e, t] = (0, i.useStateFromStoresArray)([o.default], () => [
            o.default.isAuthenticated(),
            null != o.default.getAnalyticsToken(),
          ]),
          n = (0, a.default)(e);
        s.useEffect(() => {
          !n && e && !t && r.fetchCurrentUser({ withAnalyticsToken: !0 });
        }, [n, e, t]);
      }
    },
    514267: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getDesktopSourceMetadata: function () {
            return d;
          },
          trackWithOverlayMetadata: function () {
            return l;
          },
        });
      var s = n("224022"),
        i = n("386130"),
        r = n("415218"),
        a = n("328470"),
        o = n("244180"),
        u = n("467006");
      function d() {
        let e, t, n, r, a;
        let o = i.default.getGoLiveSource();
        if (
          null != o &&
          ((e = o.quality.resolution),
          (t = o.quality.frameRate),
          null != o.desktopSource)
        ) {
          n = o.desktopSource.soundshareSession;
          let e =
            null != o.desktopSource.sourcePid
              ? s.default.getGameForPID(o.desktopSource.sourcePid)
              : null;
          (r = e?.name ?? null), (a = e?.id ?? null);
        }
        return {
          video_input_resolution: e,
          video_input_frame_rate: t,
          soundshare_session: n,
          share_game_name: r,
          share_game_id: a,
        };
      }
      function l(e, t) {
        let n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
          s = r.default.getGame();
        switch (
          ((t = {
            ...t,
            overlay_game_name: null != s ? s.name : "Unknown Game",
            overlay_app_id: null != s ? s.id : null,
          }),
          e)
        ) {
          case u.AnalyticEvents.VOICE_CHANNEL_SELECTED:
          case u.AnalyticEvents.SETTINGS_PANE_VIEWED:
          case u.AnalyticEvents.GUILD_VIEWED:
          case u.AnalyticEvents.CHANNEL_OPENED:
            return (0, o.trackWithMetadata)(e, t, n);
          default:
            return a.default.track(e, t, { flush: n });
        }
      }
    },
    592057: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        }),
        n("653041");
      var s = n("841869"),
        i = n("366598");
      let r = new s.default("GuildEmojis");
      var a = new (class e {
        async getAsync(e) {
          let t = performance.now(),
            n = await i.default.emojis(e).getMapEntries(),
            s = performance.now();
          return (
            r.log(`asynchronously loaded in ${s - t}ms (guilds: ${n.length})`),
            n
          );
        }
        handleConnectionOpen(e, t) {
          for (let n of e.guilds) this.handleOneGuildCreate(n, t);
        }
        handleGuildCreate(e, t) {
          this.handleOneGuildCreate(e.guild, t);
        }
        handleGuildUpdate(e, t) {
          this.replace(e.guild.id, e.guild.emojis, t);
        }
        handleGuildDelete(e, t) {
          this.delete(e.guild.id, t);
        }
        handleGuildEmojisUpdate(e, t) {
          this.replace(e.guildId, e.emojis, t);
        }
        handleBackgroundSync(e, t) {
          e.promisesForBackgroundSyncToWaitOn.push(
            Promise.all(
              e.emojis.map(e => {
                if ("unavailable" === e.dataMode) return Promise.resolve();
                "full" === e.dataMode
                  ? (r.verbose(
                      `Replacing ${e.entities.length} emojis for ${e.guildId}`
                    ),
                    this.replace(e.guildId, e.entities, t))
                  : (e.updatedEntities.length > 0 ||
                      e.deletedEntityIds.length > 0) &&
                    (r.verbose(
                      `Updating ${e.updatedEntities.length} and deleting ${e.deletedEntityIds.length} emojis for ${e.guildId}`
                    ),
                    this.update(
                      e.guildId,
                      e.updatedEntities,
                      e.deletedEntityIds,
                      t
                    ));
              })
            )
          );
        }
        handleOneGuildCreate(e, t) {
          null != e.emojiUpdates
            ? this.update(
                e.id,
                e.emojiUpdates.writes,
                e.emojiUpdates.deletes,
                t
              )
            : null != e.emojis && this.replace(e.id, e.emojis, t);
        }
        resetInMemoryState() {}
        replace(e, t, n) {
          i.default.emojisTransaction(n).replaceAll(e, t);
        }
        delete(e, t) {
          i.default.emojisTransaction(t).delete(e);
        }
        update(e, t, n, s) {
          let r = i.default.emojisTransaction(s);
          for (let s of (r.putAll(e, t), n)) r.delete(e, s);
        }
        constructor() {
          this.actions = {
            BACKGROUND_SYNC: (e, t) => this.handleBackgroundSync(e, t),
            CONNECTION_OPEN: (e, t) => this.handleConnectionOpen(e, t),
            GUILD_CREATE: (e, t) => this.handleGuildCreate(e, t),
            GUILD_DELETE: (e, t) => this.handleGuildDelete(e, t),
            GUILD_EMOJIS_UPDATE: (e, t) => this.handleGuildEmojisUpdate(e, t),
            GUILD_UPDATE: (e, t) => this.handleGuildUpdate(e, t),
          };
        }
      })();
    },
    143776: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        }),
        n("653041");
      var s = n("841869"),
        i = n("366598");
      let r = new s.default("GuildStickers");
      var a = new (class e {
        async getAsync(e) {
          let t = performance.now(),
            n = await i.default.stickers(e).getMapEntries(),
            s = performance.now();
          return (
            r.log(`asynchronously loaded in ${s - t}ms (guilds: ${n.length})`),
            n
          );
        }
        handleConnectionOpen(e, t) {
          for (let n of e.guilds) this.handleOneGuildCreate(n, t);
        }
        handleGuildCreate(e, t) {
          this.handleOneGuildCreate(e.guild, t);
        }
        handleGuildUpdate(e, t) {
          this.replace(e.guild.id, e.guild.stickers, t);
        }
        handleGuildDelete(e, t) {
          this.delete(e.guild.id, t);
        }
        handleGuildStickersUpdate(e, t) {
          this.replace(e.guildId, e.stickers, t);
        }
        handleBackgroundSync(e, t) {
          e.promisesForBackgroundSyncToWaitOn.push(
            Promise.all(
              e.stickers.map(e => {
                if ("unavailable" === e.dataMode) return Promise.resolve();
                "full" === e.dataMode
                  ? (r.verbose(
                      `Replacing ${e.entities.length} stickers for ${e.guildId}`
                    ),
                    this.replace(e.guildId, e.entities, t))
                  : (e.updatedEntities.length > 0 ||
                      e.deletedEntityIds.length > 0) &&
                    (r.verbose(
                      `Updating ${e.updatedEntities.length} and deleting ${e.deletedEntityIds.length} stickers for ${e.guildId}`
                    ),
                    this.update(
                      e.guildId,
                      e.updatedEntities,
                      e.deletedEntityIds,
                      t
                    ));
              })
            )
          );
        }
        handleOneGuildCreate(e, t) {
          null != e.stickers && this.replace(e.id, e.stickers, t),
            null != e.stickerUpdates &&
              this.update(
                e.id,
                e.stickerUpdates.writes,
                e.stickerUpdates.deletes,
                t
              );
        }
        resetInMemoryState() {}
        replace(e, t, n) {
          i.default.stickersTransaction(n).replaceAll(e, t);
        }
        delete(e, t) {
          i.default.stickersTransaction(t).delete(e);
        }
        update(e, t, n, s) {
          let r = i.default.stickersTransaction(s);
          for (let s of (r.putAll(e, t), n)) r.delete(e, s);
        }
        constructor() {
          this.actions = {
            BACKGROUND_SYNC: (e, t) => this.handleBackgroundSync(e, t),
            CONNECTION_OPEN: (e, t) => this.handleConnectionOpen(e, t),
            GUILD_CREATE: (e, t) => this.handleGuildCreate(e, t),
            GUILD_DELETE: (e, t) => this.handleGuildDelete(e, t),
            GUILD_STICKERS_UPDATE: (e, t) =>
              this.handleGuildStickersUpdate(e, t),
            GUILD_UPDATE: (e, t) => this.handleGuildUpdate(e, t),
          };
        }
      })();
    },
    275468: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var s = n("841869"),
        i = n("327271"),
        r = n("366598");
      let a = new s.default("GuildVersions");
      var o = new (class e {
        async getCommittedVersions() {
          try {
            let e = r.default.guildVersions();
            if (null == e) return {};
            let t = (await e.getMany()).map(e => [e.id, e.version]);
            return Object.fromEntries(t ?? []);
          } catch (e) {
            return a.warn("couldn't load guild versions", e), {};
          }
        }
        remove(e, t) {
          this.deleteWith(e), this.commit(t);
        }
        handleBackgroundSync(e, t) {
          for (let n of e.guilds)
            "unavailable" !== n.data_mode && this.updateWith(n.id, [n]),
              null == i.default.getGuild(n.id) && this.remove(n.id, t);
          this.commit(t);
        }
        handleConnectionOpen(e, t) {
          for (let t of (this.reset(), e.guilds)) this.updateWith(t.id, [t]);
          this.commit(t);
        }
        handleGuildCreate(e, t) {
          let n = e.guild,
            s = e.guild.id;
          this.updateWith(s, [n]),
            this.updateWith(s, n.emojis),
            this.updateWith(s, n.stickers),
            this.updateWith(s, n.channels),
            this.updateWith(s, n.channelUpdates?.writes),
            this.updateWith(
              s,
              Array.isArray(n.roles) ? n.roles : Object.values(n.roles)
            ),
            this.commit(t);
        }
        handleGuildUpdate(e, t) {
          let n = e.guild,
            s = e.guild.id;
          this.updateWith(s, [n]),
            this.updateWith(s, n.emojis),
            this.updateWith(s, n.stickers),
            this.updateWith(
              s,
              Array.isArray(n.roles) ? n.roles : Object.values(n.roles)
            ),
            this.commit(t);
        }
        handleGuildDelete(e, t) {
          this.deleteWith(e.guild.id), this.commit(t);
        }
        handleGuildRoleChange(e, t) {
          this.updateWith(e.guildId, [e.role]), this.commit(t);
        }
        handleGuildRoleDelete(e, t) {
          this.updateWith(e.guildId, [{ version: e.version }]), this.commit(t);
        }
        handleGuildEmojisUpdate(e, t) {
          this.updateWith(e.guildId, e.emojis), this.commit(t);
        }
        handleGuildStickersUpdate(e, t) {
          this.updateWith(e.guildId, e.stickers), this.commit(t);
        }
        handleChannelCreate(e, t) {
          null != e.channel.guild_id &&
            this.updateWith(e.channel.guild_id, [e.channel]),
            this.commit(t);
        }
        handleChannelUpdates(e, t) {
          for (let t of e.channels)
            null != t.guild_id && this.updateWith(t.guild_id, [t]);
          this.commit(t);
        }
        handleChannelDelete(e, t) {
          null != e.channel.guild_id &&
            this.updateWith(e.channel.guild_id, [e.channel]),
            this.commit(t);
        }
        resetInMemoryState() {
          this.reset();
        }
        reset() {
          (this.committed = new Map()), (this.pending = new Map());
        }
        deleteWith(e) {
          this.pending.set(e, null);
        }
        updateWith(e, t) {
          if (null != t) {
            let n = Math.max(
                this.committed.get(e) ?? 0,
                this.pending.get(e) ?? 0
              ),
              s = this.computeLatestVersion(n, t);
            s > n && this.pending.set(e, s);
          }
        }
        computeLatestVersion(e, t) {
          let n = e;
          for (let e of t) n = Math.max(n, e.version ?? 0);
          return n;
        }
        commit(e) {
          if (this.pending.size > 0) {
            let t = r.default.guildVersionsTransaction(e);
            for (let [e, n] of this.pending)
              null != n
                ? (t.put({ id: e, version: n }), this.committed.set(e, n))
                : (t.delete(e), this.committed.delete(e));
            this.pending.clear();
          }
        }
        constructor() {
          (this.pending = new Map()),
            (this.committed = new Map()),
            (this.actions = {
              BACKGROUND_SYNC: (e, t) => this.handleBackgroundSync(e, t),
              CHANNEL_CREATE: (e, t) => this.handleChannelCreate(e, t),
              CHANNEL_DELETE: (e, t) => this.handleChannelDelete(e, t),
              CHANNEL_UPDATES: (e, t) => this.handleChannelUpdates(e, t),
              CONNECTION_OPEN: (e, t) => this.handleConnectionOpen(e, t),
              GUILD_CREATE: (e, t) => this.handleGuildCreate(e, t),
              GUILD_DELETE: (e, t) => this.handleGuildDelete(e, t),
              GUILD_EMOJIS_UPDATE: (e, t) => this.handleGuildEmojisUpdate(e, t),
              GUILD_ROLE_CREATE: (e, t) => this.handleGuildRoleChange(e, t),
              GUILD_ROLE_DELETE: (e, t) => this.handleGuildRoleDelete(e, t),
              GUILD_ROLE_UPDATE: (e, t) => this.handleGuildRoleChange(e, t),
              GUILD_STICKERS_UPDATE: (e, t) =>
                this.handleGuildStickersUpdate(e, t),
              GUILD_UPDATE: (e, t) => this.handleGuildUpdate(e, t),
            });
        }
      })();
    },
    517761: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var s = n("841869"),
        i = n("366598"),
        r = n("936147");
      let a = new s.default("KvCacheVersion");
      var o = new (class e {
        async okAsync(e) {
          let t = await i.default
            .cache(e)
            .get(r.VERSION_TO_SKIP_READING_THE_DATABASE_KEY);
          return null == t
            ? null
            : t === r.VERSION_TO_SKIP_READING_THE_DATABASE;
        }
        canUseGuildVersions() {
          return this.hasSuccessfullyConnected
            ? Promise.resolve(!0)
            : this.doesDatabaseVersionMatchJsConstants();
        }
        async doesDatabaseVersionMatchJsConstants() {
          let e = i.default.forceResyncVersion();
          if (null == e) return !1;
          let t = await e.get(r.VERSION_TO_FORCE_RESYNCING_ALL_DATA_KEY),
            n = t?.version;
          return (
            n === r.VERSION_TO_FORCE_RESYNCING_ALL_DATA ||
            (a.info(
              `KVStore version mismatch: ${n} vs ${r.VERSION_TO_FORCE_RESYNCING_ALL_DATA}`
            ),
            !1)
          );
        }
        handleClear() {
          this.hasSuccessfullyConnected = !1;
        }
        handleConnectionOpen() {
          this.hasSuccessfullyConnected = !0;
        }
        handleWrite(e) {
          (this.hasSuccessfullyConnected = !0),
            i.default.cacheTransaction(e).put(r.HELLO_KEY, "\uD83D\uDC4B"),
            i.default
              .cacheTransaction(e)
              .put(
                r.VERSION_TO_SKIP_READING_THE_DATABASE_KEY,
                r.VERSION_TO_SKIP_READING_THE_DATABASE
              ),
            i.default
              .forceResyncVersionTransaction(e)
              .put(r.VERSION_TO_FORCE_RESYNCING_ALL_DATA_KEY, {
                version: r.VERSION_TO_FORCE_RESYNCING_ALL_DATA,
              });
        }
        resetInMemoryState() {
          this.hasSuccessfullyConnected = !1;
        }
        constructor() {
          (this.hasSuccessfullyConnected = !1),
            (this.actions = {
              BACKGROUND_SYNC: (e, t) => this.handleWrite(t),
              CONNECTION_OPEN: () => this.handleConnectionOpen(),
              WRITE_CACHES: (e, t) => this.handleWrite(t),
            });
        }
      })();
    },
    936147: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          HELLO_KEY: function () {
            return s;
          },
          VERSION_TO_FORCE_RESYNCING_ALL_DATA: function () {
            return o;
          },
          VERSION_TO_FORCE_RESYNCING_ALL_DATA_KEY: function () {
            return r;
          },
          VERSION_TO_SKIP_READING_THE_DATABASE: function () {
            return a;
          },
          VERSION_TO_SKIP_READING_THE_DATABASE_KEY: function () {
            return i;
          },
        });
      let s = "hello",
        i = "version",
        r = "force-resync-version",
        a = 3,
        o = "stable-52";
    },
    325318: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        });
      var s = n("392711"),
        i = n.n(s),
        r = n("668192"),
        a = n("841869"),
        o = n("632706"),
        u = n("152551"),
        d = n("366598");
      let l = new a.default("NonGuildVersions");
      var f = new (class e {
        constructor() {
          if (
            ((this.actions = {
              CONNECTION_OPEN: (e, t) => this.handleConnectionOpen(e, t),
              BACKGROUND_SYNC: (e, t) => this.handleConnectionOpen(e, t),
            }),
            !(0, r.isCacheEnabled)())
          )
            return;
          o.default.addChangeListener(
            i().throttle(() => {
              d.default.database()?.transaction(e => {
                let t = o.default.getGuildId();
                null == t || isNaN(Number(t))
                  ? d.default
                      .nonGuildVersionsTransaction(e)
                      .delete("initial_guild_id")
                  : d.default
                      .nonGuildVersionsTransaction(e)
                      .put({ id: "initial_guild_id", versionString: t });
              });
            }, 10 * u.default.Millis.SECOND)
          );
        }
        async getCommittedVersions() {
          try {
            let e = d.default.nonGuildVersions();
            if (null == e) return {};
            let t = (await e.getMany()).map(e => [
              e.id,
              "version" in e ? e.version : e.versionString,
            ]);
            return Object.fromEntries(t ?? []);
          } catch (e) {
            return l.warn("couldn't load guild versions", e), {};
          }
        }
        handleConnectionOpen(e, t) {
          null != e.apiCodeVersion &&
            d.default
              .nonGuildVersionsTransaction(t)
              .put({ id: "api_code_version", version: e.apiCodeVersion });
        }
        resetInMemoryState() {}
      })();
    },
    840441: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          requireSortedDescending: function () {
            return a;
          },
        });
      var s = n("512722"),
        i = n.n(s),
        r = n("84819");
      function a(e) {
        i()(
          e.length <= 2 || r.default.compare(e[0].id, e[e.length - 1].id) >= 0,
          "messages must be sorted in descending order."
        );
      }
    },
    691699: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          AppLauncherDesktopExperiment: function () {
            return i;
          },
          AppLauncherOnboardingExperiment: function () {
            return r;
          },
        });
      var s = n("516086");
      let i = (0, s.createExperiment)({
          kind: "user",
          id: "2023-11_app_launcher_desktop",
          label: "App Launcher - Desktop",
          defaultConfig: { enabled: !1 },
          treatments: [
            {
              id: 1,
              label: "Enable the app launcher feature on desktop",
              config: { enabled: !0 },
            },
          ],
        }),
        r = (0, s.createExperiment)({
          kind: "user",
          id: "2024-01_app_launcher_onboarding",
          label: "App Launcher - Onboarding",
          defaultConfig: { enabled: !1 },
          treatments: [
            {
              id: 1,
              label: "Enable onboarding within App Launcher",
              config: { enabled: !0 },
            },
          ],
        });
    },
    815635: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          size: function () {
            return i;
          },
        });
      let s = new Set();
      function i() {
        return s.size;
      }
    },
    182220: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          APPLICATION_COMMAND_PERMISSIONS_LIMIT: function () {
            return g;
          },
          AUTOCOMPLETE_OPTION_DEBOUNCE_TIME: function () {
            return E;
          },
          BOOLEAN_CHOICES: function () {
            return d;
          },
          BuiltInSectionId: function () {
            return i;
          },
          CONTEXT_MENU_COMMANDS_QUERY_LIMIT: function () {
            return h;
          },
          DISCOVERY_COMMANDS_FRECENCY_LIMIT: function () {
            return f;
          },
          DISCOVERY_COMMANDS_QUERY_LIMIT: function () {
            return l;
          },
          DISCOVERY_COMMAND_FRECENCY_GATEWAY_LIMIT: function () {
            return _;
          },
          FALSE_OPTION_NAME: function () {
            return u;
          },
          MAX_SUBCOMMAND_LEVEL: function () {
            return m;
          },
          SUB_COMMAND_KEY_SEPARATOR: function () {
            return c;
          },
          TRUE_OPTION_NAME: function () {
            return o;
          },
          getValidationErrorText: function () {
            return p;
          },
        });
      var s,
        i,
        r = n("243770"),
        a = n("30175");
      let o = "True",
        u = "False",
        d = [
          { name: o, displayName: o, value: "true" },
          { name: u, displayName: u, value: "false" },
        ];
      ((s = i || (i = {})).BUILT_IN = "-1"), (s.FRECENCY = "-2");
      let l = 10,
        f = 5,
        _ = 25,
        c = "\x00",
        g = 100,
        m = 3,
        h = 10,
        E = 500;
      function p(e) {
        if (null != e.choices)
          return a.default.Messages.COMMAND_VALIDATION_CHOICE_ERROR;
        switch (e.type) {
          case r.ApplicationCommandOptionType.BOOLEAN:
            return a.default.Messages.COMMAND_VALIDATION_BOOLEAN_ERROR;
          case r.ApplicationCommandOptionType.CHANNEL:
            return a.default.Messages.COMMAND_VALIDATION_CHANNEL_ERROR;
          case r.ApplicationCommandOptionType.INTEGER:
            return a.default.Messages.COMMAND_VALIDATION_INTEGER_ERROR;
          case r.ApplicationCommandOptionType.NUMBER:
            return a.default.Messages.COMMAND_VALIDATION_NUMBER_ERROR;
          case r.ApplicationCommandOptionType.ROLE:
            return a.default.Messages.COMMAND_VALIDATION_ROLE_ERROR;
          case r.ApplicationCommandOptionType.USER:
            return a.default.Messages.COMMAND_VALIDATION_USER_ERROR;
          case r.ApplicationCommandOptionType.MENTIONABLE:
            return a.default.Messages.COMMAND_VALIDATION_MENTIONABLE_ERROR;
          default:
            return a.default.Messages.COMMAND_VALIDATION_GENERAL_ERROR;
        }
      }
      Object.freeze([]), Object.freeze([]);
    },
    385939: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          UserAppsTreatment: function () {
            return i;
          },
          default: function () {
            return a;
          },
        });
      var s,
        i,
        r = n("516086");
      ((s = i || (i = {})).ALLOWED = "allowed"), (s.DEFAULT = "default");
      var a = (0, r.createExperiment)({
        kind: "user",
        id: "2023-08_new_app_command_serving",
        label: "New Application Command Serving",
        defaultConfig: { enabled: !1, newScoreLogic: !1 },
        treatments: [
          {
            id: 1,
            label: "Enabled",
            config: { enabled: !0, newScoreLogic: !1 },
          },
          {
            id: 2,
            label: "Enabled + New Logic",
            config: { enabled: !0, newScoreLogic: !0 },
          },
        ],
      });
    },
    150117: function (e, t, n) {
      "use strict";
      var s, i, r, a, o, u, d, l, f, _, c, g;
      n.r(t),
        n.d(t, {
          ApplicationCommandInputType: function () {
            return i;
          },
          ApplicationCommandPermissionType: function () {
            return r;
          },
          ApplicationCommandSectionType: function () {
            return s;
          },
          ApplicationCommandTriggerLocations: function () {
            return a;
          },
          ApplicationCommandTriggerSections: function () {
            return o;
          },
          CommandOrigin: function () {
            return u;
          },
        }),
        ((d = s || (s = {}))[(d.BUILT_IN = 0)] = "BUILT_IN"),
        (d[(d.APPLICATION = 1)] = "APPLICATION"),
        ((l = i || (i = {}))[(l.BUILT_IN = 0)] = "BUILT_IN"),
        (l[(l.BUILT_IN_TEXT = 1)] = "BUILT_IN_TEXT"),
        (l[(l.BUILT_IN_INTEGRATION = 2)] = "BUILT_IN_INTEGRATION"),
        (l[(l.BOT = 3)] = "BOT"),
        (l[(l.PLACEHOLDER = 4)] = "PLACEHOLDER"),
        ((f = r || (r = {}))[(f.ROLE = 1)] = "ROLE"),
        (f[(f.USER = 2)] = "USER"),
        (f[(f.CHANNEL = 3)] = "CHANNEL"),
        ((_ = a || (a = {})).DISCOVERY = "discovery"),
        (_.SUGGESTION = "suggestion"),
        (_.MENTION = "mention"),
        (_.PASTE = "paste"),
        (_.RECALL = "recall"),
        (_.POPULAR_COMMANDS = "popular_commands"),
        (_.MJ_CHAT_BAR = "mj_chat_bar"),
        (_.QUERY = "query"),
        (_.SLASH_UI = "slash_ui"),
        (_.APP_LAUNCHER = "app_launcher"),
        (_.APP_LAUNCHER_HOME = "app_launcher_home"),
        (_.APP_LAUNCHER_HOME_SEARCH = "app_launcher_home_search"),
        (_.APP_LAUNCHER_APPLICATION_VIEW = "app_launcher_application_view"),
        (_.APP_LAUNCHER_APPLICATION_VIEW_FRECENCT =
          "app_launcher_application_view_frecent"),
        (_.APP_LAUNCHER_SLASH_SEARCH = "app_launcher_slash_search"),
        ((c = o || (o = {}))[(c.BUILT_IN = 1)] = "BUILT_IN"),
        (c[(c.FRECENCY = 2)] = "FRECENCY"),
        (c[(c.APP = 3)] = "APP"),
        ((g = u || (u = {}))[(g.CHAT = 0)] = "CHAT"),
        (g[(g.APPLICATION_LAUNCHER = 1)] = "APPLICATION_LAUNCHER");
    },
    624945: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          UserAppsTreatment: function () {
            return i;
          },
          default: function () {
            return a;
          },
        });
      var s,
        i,
        r = n("516086");
      ((s = i || (i = {})).ALLOWED = "allowed"), (s.DEFAULT = "default");
      var a = (0, r.createExperiment)({
        kind: "user",
        id: "2023-08_user_apps",
        label: "Allow user app commands",
        defaultConfig: { userAppsTreatment: "default" },
        treatments: [
          {
            id: 1,
            label: "Allow user app commands",
            config: { userAppsTreatment: "allowed" },
          },
        ],
      });
    },
    657615: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("516086"),
        i = n("624945"),
        r = (0, s.createExperiment)({
          kind: "guild",
          id: "2023-09_user_apps_guild",
          label: "Allow user app commands",
          defaultConfig: { userAppsTreatment: i.UserAppsTreatment.DEFAULT },
          treatments: [
            {
              id: 1,
              label: "Allow user app commands",
              config: { userAppsTreatment: i.UserAppsTreatment.ALLOWED },
            },
          ],
        });
    },
    110531: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          DISABLED_BY_DEFAULT_PERMISSION_FLAG: function () {
            return R;
          },
          allChannelsSentinel: function () {
            return D;
          },
          buildApplicationCommands: function () {
            return S;
          },
          buildCommand: function () {
            return T;
          },
          canUseApplicationCommands: function () {
            return O;
          },
          extractInteractionDataProps: function () {
            return k;
          },
          getApplicationCommandOptionQueryOptions: function () {
            return N;
          },
          getApplicationCommandSection: function () {
            return L;
          },
          getCommandAttachmentDraftType: function () {
            return M;
          },
          getCommandTriggerSection: function () {
            return V;
          },
          getMatchingGroupCommands: function () {
            return A;
          },
          hasAccess: function () {
            return P;
          },
          isInUserAppExperiment: function () {
            return U;
          },
          isSnowflake: function () {
            return C;
          },
          trackCommandSelected: function () {
            return G;
          },
          useIsInUserAppExperiment: function () {
            return w;
          },
        }),
        n("653041");
      var s = n("654861"),
        i = n.n(s),
        r = n("512722"),
        a = n.n(r),
        o = n("392711"),
        u = n.n(o),
        d = n("768517"),
        l = n("243770"),
        f = n("244180"),
        _ = n("558357"),
        c = n("775822"),
        g = n("911388"),
        m = n("385939"),
        h = n("150117"),
        E = n("624945"),
        p = n("657615"),
        v = n("182220"),
        y = n("467006"),
        I = n("477815");
      function T(e) {
        let t,
          {
            rootCommand: n,
            command: s,
            applicationId: i,
            subCommandPath: r,
            useKeyedPermissions: a,
          } = e;
        null != n.permissions &&
          n.permissions.length > 0 &&
          (a
            ? (t = (0, _.keyPermissions)(n.permissions))
            : ((t = {}),
              n.permissions.forEach(e => {
                t[e.id] = e;
              })));
        let o = (r ?? []).map(e => e.name),
          u = (r ?? []).map(e => e.displayName);
        return {
          version: n.version,
          guildId: n.guild_id,
          id: [n.id, ...o].join(v.SUB_COMMAND_KEY_SEPARATOR),
          name: [n.name, ...o].join(" "),
          serverLocalizedName: s.name_localized,
          applicationId: i,
          type: n.type ?? l.ApplicationCommandType.CHAT,
          inputType: h.ApplicationCommandInputType.BOT,
          description: s.description,
          options: (function e(t) {
            return t?.map(t => {
              let n = {
                ...t,
                choices: (function (e) {
                  return e?.map(e => ({
                    ...e,
                    displayName: e.name_localized ?? e.name,
                  }));
                })(t.choices),
                options: e(t.options),
                serverLocalizedName: t.name_localized,
                displayName: t.name_localized ?? t.name,
                displayDescription: t.description_localized ?? t.description,
              };
              if (
                t.type === l.ApplicationCommandOptionType.CHANNEL &&
                "channel_types" in t
              )
                return { ...n, channelTypes: t.channel_types };
              if (
                (t.type === l.ApplicationCommandOptionType.NUMBER ||
                  t.type === l.ApplicationCommandOptionType.INTEGER) &&
                ("min_value" in t || "max_value" in t)
              )
                return { ...n, minValue: t.min_value, maxValue: t.max_value };
              if (
                t.type === l.ApplicationCommandOptionType.STRING &&
                ("min_length" in t || "max_length" in t)
              )
                return {
                  ...n,
                  minLength: t.min_length,
                  maxLength: t.max_length,
                };
              return n;
            });
          })(s.options),
          rootCommand: n,
          subCommandPath: r,
          defaultMemberPermissions:
            null == n.default_member_permissions
              ? void 0
              : d.default.deserialize(n.default_member_permissions),
          dmPermission: n.dm_permission,
          permissions: t,
          displayName: [n.name_localized ?? n.name, ...u].join(" "),
          displayDescription: s.description_localized ?? s.description,
          nsfw: n.nsfw,
          contexts: n.contexts,
          integration_types: n.integration_types,
          global_popularity_rank: n.global_popularity_rank,
        };
      }
      function S(e, t) {
        return u().flatMap(
          e,
          e => (
            a()(null != e.id, "Missing command id"),
            (function e(t) {
              let {
                rootCommand: n,
                command: s,
                applicationId: i,
                subCommandPath: r,
                useKeyedPermissions: a,
              } = t;
              if (s.hasOwnProperty("id")) {
                if (null == s.options || 0 === s.options.length)
                  return [
                    T({
                      rootCommand: n,
                      command: s,
                      applicationId: i,
                      subCommandPath: r,
                      useKeyedPermissions: a,
                    }),
                  ];
              } else if (
                s.type !== l.ApplicationCommandOptionType.SUB_COMMAND &&
                s.type !== l.ApplicationCommandOptionType.SUB_COMMAND_GROUP &&
                (null == s.options || 0 === s.options.length)
              )
                return [
                  T({
                    rootCommand: n,
                    command: s,
                    applicationId: i,
                    subCommandPath: r,
                    useKeyedPermissions: a,
                  }),
                ];
              let o = [];
              if (null == s.options) return o;
              let u = s.options.filter(
                e => e.type === l.ApplicationCommandOptionType.SUB_COMMAND_GROUP
              );
              for (let t = 0; t < u.length; t++)
                o.push(
                  ...e({
                    rootCommand: n,
                    command: u[t],
                    applicationId: i,
                    subCommandPath: (r ?? []).concat([
                      {
                        name: u[t].name,
                        type: l.ApplicationCommandOptionType.SUB_COMMAND_GROUP,
                        displayName: u[t].name_localized ?? u[t].name,
                      },
                    ]),
                    useKeyedPermissions: a,
                  })
                );
              let d = s.options.filter(
                e => e.type === l.ApplicationCommandOptionType.SUB_COMMAND
              );
              for (let e = 0; e < d.length; e++)
                o.push(
                  T({
                    rootCommand: n,
                    command: d[e],
                    applicationId: i,
                    subCommandPath: (r ?? []).concat([
                      {
                        name: d[e].name,
                        type: l.ApplicationCommandOptionType.SUB_COMMAND,
                        displayName: d[e].name_localized ?? d[e].name,
                      },
                    ]),
                    useKeyedPermissions: a,
                  })
                );
              return (
                0 === u.length &&
                  0 === d.length &&
                  o.push(
                    T({
                      rootCommand: n,
                      command: s,
                      applicationId: i,
                      subCommandPath: r,
                      useKeyedPermissions: a,
                    })
                  ),
                o
              );
            })({
              rootCommand: e,
              command: e,
              applicationId: e.application_id,
              subCommandPath: void 0,
              useKeyedPermissions: t,
            })
          )
        );
      }
      function C(e) {
        return y.ID_REGEX.test(e.trim());
      }
      function A(e, t, n, s) {
        let i = [];
        return (
          u()(e).forEach(e => {
            t.test(e.displayName) &&
              (null == e.predicate || e.predicate(n)) &&
              i.push(e);
          }),
          i.slice(0, s)
        );
      }
      function N(e) {
        let t = e.type === l.ApplicationCommandOptionType.STRING,
          n = e.type === l.ApplicationCommandOptionType.CHANNEL,
          s =
            e.type === l.ApplicationCommandOptionType.USER ||
            e.type === l.ApplicationCommandOptionType.MENTIONABLE,
          i =
            e.type === l.ApplicationCommandOptionType.ROLE ||
            e.type === l.ApplicationCommandOptionType.MENTIONABLE;
        return {
          canMentionEveryone: t || i,
          canMentionHere: t,
          canMentionChannels: t || n,
          canMentionUsers: t || s,
          canMentionRoles: t || i,
          canMentionAnyGuildUser: s,
          canMentionNonMentionableRoles: i,
        };
      }
      function D(e) {
        return i()(e).subtract(1).toString();
      }
      function O(e, t, n, s) {
        if (n) return !1;
        if (s.isMultiUserDM())
          return (
            U(
              s.guild_id,
              { location: "canUseApplicationCommands" },
              { autoTrackExposure: !1 }
            ) || t.getIntegrations(s.id).length > 0
          );
        if (s.isDM())
          return (
            !s.isSystemDM() &&
            (null != s.rawRecipients.find(e => e.bot) ||
              U(
                s.guild_id,
                { location: "canUseApplicationCommands" },
                { autoTrackExposure: !1 }
              ) ||
              t.getIntegrations(s.id).length > 0)
          );
        return s.isArchivedLockedThread()
          ? e.can(
              d.default.combine(
                I.Permissions.USE_APPLICATION_COMMANDS,
                I.Permissions.MANAGE_THREADS
              ),
              s
            )
          : !!(0, c.isReadableType)(s.type) &&
              e.can(
                d.default.combine(
                  I.Permissions.USE_APPLICATION_COMMANDS,
                  I.Permissions.SEND_MESSAGES
                ),
                s
              );
      }
      let R = d.default.deserialize(0);
      function P(e) {
        let {
          PermissionStore: t,
          guild: n,
          selfMember: s,
          applicationLevelPermissions: i,
          commandLevelPermissions: r,
          defaultMemberPermissions: a,
        } = e;
        if (n.ownerId === s.userId || t.can(I.Permissions.ADMINISTRATOR, n))
          return !0;
        let o = n.id;
        if (null != r) {
          let e = b(s, o, r);
          if ("boolean" == typeof e) return e;
        }
        let u = b(s, o, i);
        return (
          ("boolean" != typeof u || !!u) &&
          (null == a || (!d.default.equals(a, R) && t.can(a, n)))
        );
      }
      function b(e, t, n) {
        let s =
          n[
            (0, _.toPermissionKey)(
              e.userId,
              h.ApplicationCommandPermissionType.USER
            )
          ];
        if (null != s) return s.permission;
        let i = !1;
        for (let t of e.roles) {
          let e =
            n[
              (0, _.toPermissionKey)(t, h.ApplicationCommandPermissionType.ROLE)
            ];
          if (null != e && ((i = !0), e.permission)) return !0;
        }
        if (i) return !1;
        let r =
          n[(0, _.toPermissionKey)(t, h.ApplicationCommandPermissionType.ROLE)];
        return null != r ? r.permission : null;
      }
      function M(e) {
        switch (e) {
          case h.CommandOrigin.CHAT:
            return g.DraftType.SlashCommand;
          case h.CommandOrigin.APPLICATION_LAUNCHER:
            return g.DraftType.ApplicationLauncherCommand;
        }
      }
      function V(e) {
        if (null != e) {
          if (e.id === v.BuiltInSectionId.BUILT_IN)
            return h.ApplicationCommandTriggerSections.BUILT_IN;
          else if (e.id === v.BuiltInSectionId.FRECENCY)
            return h.ApplicationCommandTriggerSections.FRECENCY;
          else return h.ApplicationCommandTriggerSections.APP;
        }
      }
      function L(e) {
        return {
          type: h.ApplicationCommandSectionType.APPLICATION,
          id: e.id,
          name: e?.bot?.username ?? e.name,
          icon: e.icon,
          application: e,
        };
      }
      function k(e) {
        let t = e.id,
          n = e.options,
          s = n?.find(
            e => e.type === l.ApplicationCommandOptionType.SUB_COMMAND_GROUP
          );
        null != s &&
          ((t += `${v.SUB_COMMAND_KEY_SEPARATOR}${s.name}`), (n = s.options));
        let i = n?.find(
          e => e.type === l.ApplicationCommandOptionType.SUB_COMMAND
        );
        return (
          null != i &&
            ((t += `${v.SUB_COMMAND_KEY_SEPARATOR}${i.name}`), (n = i.options)),
          { commandKey: t, interactionOptions: n }
        );
      }
      function w(e, t, n) {
        let s =
            E.default.useExperiment(t, n).userAppsTreatment ===
            m.UserAppsTreatment.ALLOWED,
          i =
            p.default.useExperiment(
              { guildId: e ?? y.EMPTY_STRING_SNOWFLAKE_ID, ...t },
              n
            ).userAppsTreatment === m.UserAppsTreatment.ALLOWED;
        return s && (null == e || i);
      }
      function U(e, t, n) {
        let s =
            E.default.getCurrentConfig(t, n).userAppsTreatment ===
            m.UserAppsTreatment.ALLOWED,
          i =
            p.default.getCurrentConfig(
              { guildId: e ?? y.EMPTY_STRING_SNOWFLAKE_ID, ...t },
              n
            ).userAppsTreatment === m.UserAppsTreatment.ALLOWED;
        return s && (i || null == e);
      }
      function G(e) {
        let { command: t, location: n, triggerSection: s, queryLength: i } = e;
        (0, f.trackWithMetadata)(
          y.AnalyticEvents.APPLICATION_COMMAND_SELECTED,
          {
            command_id: t.rootCommand?.id ?? t.id,
            application_id: t.applicationId,
            location: n,
            section: s,
            query_length: i,
            command_text_length: t.displayName.length,
          }
        );
      }
    },
    153934: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          FetchState: function () {
            return i;
          },
          default: function () {
            return _;
          },
        });
      var s,
        i,
        r = n("661223"),
        a = n("312916");
      ((s = i || (i = {}))[(s.FETCHING = 0)] = "FETCHING"),
        (s[(s.FETCHED = 1)] = "FETCHED"),
        (s[(s.ERROR = 2)] = "ERROR");
      let o = {},
        u = {},
        d = new Set(),
        l = {};
      class f extends r.default.Store {
        static #e = (this.displayName =
          "ApplicationDirectoryApplicationsStore");
        getApplication(e) {
          if (null != e) return o[e];
        }
        getApplications() {
          return o;
        }
        getApplicationFetchState(e) {
          if (null != e) return u[e];
        }
        getApplicationFetchStates() {
          return u;
        }
        isInvalidApplication(e) {
          return null != e && d.has(e);
        }
        getInvalidApplicationIds() {
          return d;
        }
        isFetching(e) {
          return 0 === this.getApplicationFetchState(e);
        }
        getApplicationLastFetchTime(e) {
          if (null != e) return l[e];
        }
      }
      var _ = new f(a.default, {
        APPLICATION_DIRECTORY_FETCH_APPLICATION: function (e) {
          let { applicationId: t } = e;
          u = { ...u, [t]: 0 };
        },
        APPLICATION_DIRECTORY_FETCH_APPLICATION_SUCCESS: function (e) {
          let { application: t } = e;
          (o = { ...o, [t.id]: t }), (u = { ...u, [t.id]: 1 });
          let n = Date.now();
          (l = { ...l, [t.id]: n }),
            d.has(t.id) && (d.delete(t.id), (d = new Set(d)));
        },
        APPLICATION_DIRECTORY_FETCH_APPLICATION_FAILURE: function (e) {
          let { applicationId: t, isInvalidApplication: n } = e;
          (u = { ...u, [t]: 2 }), n && (d.add(t), (d = new Set(d)));
        },
      });
    },
    959976: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ApplicationDirectoryEntrypointNames: function () {
            return a;
          },
          ApplicationDirectoryViews: function () {
            return r;
          },
          getCurrentView: function () {
            return m;
          },
          getPreviousView: function () {
            return g;
          },
          resetApplicationDirectoryHistory: function () {
            return p;
          },
          setEntrypoint: function () {
            return h;
          },
          setGuildId: function () {
            return E;
          },
          setTrackedOpenedFromExternalEntrypoint: function () {
            return v;
          },
          useApplicationDirectoryHistory: function () {
            return c;
          },
        });
      var s,
        i,
        r,
        a,
        o = n("266067"),
        u = n("652874"),
        d = n("521588"),
        l = n("153934"),
        f = n("467006");
      ((s = r || (r = {})).HOME = "home"),
        (s.SEARCH = "search"),
        (s.APPLICATION = "application"),
        ((i = a || (a = {})).EXTERNAL = "External"),
        (i.KEYBOARD_SHORTCUT = "Keyboard Shortcut"),
        (i.APPLICATION_DIRECTORY_URL = "Application Directory URL"),
        (i.APPLICATION_DIRECTORY_PROFILE_EMBED =
          "Application Directory Profile Embed"),
        (i.APPLICATION_DIRECTORY_UPSELL_MODAL =
          "Application Directory Upsell Modal"),
        (i.GUILD_HEADER_POPOUT = "Guild Header Popout"),
        (i.GUILD_SETTINGS = "Guild Settings"),
        (i.GUILD_INTEGRATION_SETTINGS = "Guild Integration Settings"),
        (i.GUILD_CONTEXT_MENU = "Guild Context Menu");
      let _ = (0, u.default)(() => ({
          guildId: null,
          entrypoint: null,
          trackedOpenedFromExternalEntrypoint: !1,
        })),
        c = _;
      function g() {
        let {
          location: { state: e },
        } = (0, d.getHistory)();
        return e?.previousView;
      }
      function m() {
        let {
            location: { pathname: e },
          } = (0, d.getHistory)(),
          t = (0, o.matchPath)(e, {
            path: f.Routes.APPLICATION_DIRECTORY,
            exact: !0,
          }),
          n = (0, o.matchPath)(e, {
            path: f.Routes.APPLICATION_DIRECTORY_SEARCH,
            exact: !0,
          }),
          s = (0, o.matchPath)(e, {
            path: [
              f.Routes.APPLICATION_DIRECTORY_PROFILE(":applicationId"),
              f.Routes.APPLICATION_DIRECTORY_PROFILE(
                ":applicationId",
                ":section"
              ),
            ],
            exact: !0,
          }),
          { applicationId: i, section: r } = s?.params ?? {};
        if (null != t) return { type: "home" };
        if (null != n) return { type: "search" };
        if (null != s && null != i) {
          let e = l.default.getApplication(i)?.name;
          return {
            type: "application",
            applicationId: i,
            applicationName: e,
            section: r,
          };
        }
      }
      function h(e) {
        _.setState({ entrypoint: e });
      }
      function E(e) {
        _.setState({ guildId: e });
      }
      function p() {
        _.setState({ entrypoint: null, guildId: null });
      }
      function v(e) {
        _.setState({ trackedOpenedFromExternalEntrypoint: e });
      }
    },
    555049: function (e, t, n) {
      "use strict";
      var s, i;
      n.r(t),
        n.d(t, {
          ApplicationDirectoryProfileSections: function () {
            return s;
          },
        }),
        ((i = s || (s = {})).GENERAL = "GENERAL"),
        (i.IMAGES = "IMAGES"),
        (i.PREMIUM = "PREMIUM"),
        (i.PRIVACY = "PRIVACY");
    },
    780535: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        });
      var s,
        i,
        r = n("392711"),
        a = n.n(r),
        o = n("661223"),
        u = n("312916");
      ((s = i || (i = {}))[(s.NOT_FETCHED = 0)] = "NOT_FETCHED"),
        (s[(s.FETCHING = 1)] = "FETCHING"),
        (s[(s.FETCH_SUCCESS = 2)] = "FETCH_SUCCESS");
      let d = {},
        l = {};
      class f extends o.default.Store {
        static #e = (this.displayName = "ApplicationAssetsStore");
        getApplicationAssetFetchState(e) {
          return d[e] ?? 0;
        }
        getFetchingIds() {
          return [
            ...Object.entries(d)
              .filter(e => {
                let [, t] = e;
                return 1 === t;
              })
              .map(e => {
                let [t] = e;
                return t;
              }),
          ];
        }
        getApplicationAssets(e) {
          return l[e];
        }
      }
      var _ = new f(u.default, {
        APPLICATION_ASSETS_FETCH: function (e) {
          let { applicationId: t } = e;
          d = { ...d, [t]: 1 };
        },
        APPLICATION_ASSETS_FETCH_SUCCESS: function (e) {
          let { applicationId: t } = e;
          d = { ...d, [t]: 2 };
        },
        APPLICATION_ASSETS_UPDATE: function (e) {
          let { applicationId: t, assets: n } = e;
          null != n
            ? (l[t] = {
                assets: a().keyBy(n, "name") ?? {},
                lastUpdated: Date.now(),
              })
            : delete l[t];
        },
        EMBEDDED_ACTIVITY_FETCH_SHELF_SUCCESS: function (e) {
          let { assets: t } = e,
            n = { ...d };
          for (let e in t) {
            let s = t[e];
            (n[e] = 2),
              (l[e] = {
                assets: a().keyBy(s, "name") ?? {},
                lastUpdated: Date.now(),
              });
          }
          d = n;
        },
      });
    },
    579896: function (e, t, n) {
      "use strict";
      var s, i, r, a;
      n.r(t),
        n.d(t, {
          ApplicationTypes: function () {
            return s;
          },
          BotTagTypes: function () {
            return i;
          },
        }),
        ((r = s || (s = {}))[(r.GAME = 1)] = "GAME"),
        (r[(r.TICKETED_EVENTS = 3)] = "TICKETED_EVENTS"),
        (r[(r.GUILD_ROLE_SUBSCRIPTIONS = 4)] = "GUILD_ROLE_SUBSCRIPTIONS"),
        ((a = i || (i = {}))[(a.BOT = 0)] = "BOT"),
        (a[(a.SERVER = 1)] = "SERVER"),
        (a[(a.SYSTEM_DM = 2)] = "SYSTEM_DM"),
        (a[(a.OFFICIAL = 3)] = "OFFICIAL"),
        (a[(a.STAFF_ONLY_DM = 4)] = "STAFF_ONLY_DM"),
        (a[(a.ORIGINAL_POSTER = 5)] = "ORIGINAL_POSTER"),
        (a[(a.AI = 6)] = "AI"),
        (a[(a.REMIX = 7)] = "REMIX");
    },
    682385: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          setPromoEmailConsentChecked: function () {
            return r;
          },
          setPromoEmailConsentState: function () {
            return i;
          },
          usePromoEmailConsentStore: function () {
            return a;
          },
        });
      let s = (0, n("652874").default)(() => ({
          required: !1,
          checked: !1,
          preChecked: !1,
        })),
        i = e => {
          s.setState(e);
        },
        r = e => {
          s.setState({ checked: e });
        },
        a = s;
    },
    38404: function (e, t, n) {
      "use strict";
      var s, i;
      n.r(t),
        n.d(t, {
          StripeErrorTypes: function () {
            return r;
          },
        });
      let r = [
        "api_connection_error",
        "api_error",
        "authentication_error",
        "card_error",
        "idempotency_error",
        "invalid_request_error",
        "rate_limit_error",
        "validation_error",
      ];
      ((i = s || (s = {})).CREATE = "create"),
        (i.CANCEL = "cancel"),
        (i.RESUBSCRIBE = "resubscribe"),
        (i.CHARGE = "charge");
    },
    926210: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var s = n("735250");
      n("470079");
      var i = n("986329"),
        r = n("974328"),
        a = n("501769"),
        o = {
          show(e) {
            (0, r.openModalLazy)(async () => {
              let { default: t } = await n
                .el("926210@353:398")
                .then(n.bind(n, "690286"));
              return n => (0, s.jsx)(t, { ...n, url: e });
            });
          },
          getBlockedDomains() {
            if ((0, a.isDesktop)()) {
              let e = i.default.get("BlockedDomainsV2");
              return Promise.resolve(null == e ? [] : e.split("\n"));
            }
            return Promise.resolve([]);
          },
          saveBlockedDomains(e) {
            (0, a.isDesktop)() &&
              i.default.set("BlockedDomainsV2", e.join("\n"));
          },
        };
    },
    105023: function (e, t, n) {
      "use strict";
      let s;
      n.r(t),
        n.d(t, {
          default: function () {
            return m;
          },
        });
      var i = n("661223"),
        r = n("986329"),
        a = n("312916"),
        o = n("958124"),
        u = n("328470"),
        d = n("926210"),
        l = n("467006");
      let f = "BlockedDomainStore",
        _ = "BlockedDomainRevision",
        c = null;
      class g extends i.default.Store {
        static #e = (this.displayName = "BlockedDomainStore");
        initialize() {
          (s = null),
            r.default.get(f) && (r.default.remove(_), r.default.remove(f));
        }
        getCurrentRevision() {
          return null == s && (s = r.default.get(_) ?? null), s;
        }
        async getBlockedDomainList() {
          return (
            null == c && (c = new Set(await d.default.getBlockedDomains())), c
          );
        }
        isBlockedDomain(e) {
          let t = n("647229");
          if (null == c) return this.getBlockedDomainList(), null;
          let s = (0, o.getHostname)(e),
            i = new t.hash.sha256(),
            r = t.codec.hex.fromBits(i.update(s).finalize()),
            a = "";
          c.has(r) && (a = s);
          let d = s.indexOf(".");
          for (; -1 !== d && "" === a; )
            (s = s.substring(d + 1)),
              i.reset(),
              (r = t.codec.hex.fromBits(i.update(s).finalize())),
              c.has(r) && (a = s),
              (d = s.indexOf("."));
          return "" !== a
            ? (u.default.track(l.AnalyticEvents.LINK_SECURITY_CHECK_BLOCKED, {
                blocked_domain: a,
              }),
              a)
            : null;
        }
      }
      var m = new g(a.default, {
        BLOCKED_DOMAIN_LIST_FETCHED: function (e) {
          let { list: t, revision: n } = e;
          (c = null),
            (s = null),
            d.default.saveBlockedDomains(t),
            r.default.set("BlockedDomainRevision", n);
        },
      });
    },
    199643: function (e, t, n) {
      "use strict";
      var s, i;
      function r(e) {
        let {
          sessionId: t,
          userId: n,
          applicationId: s,
          channelId: i,
          streamKey: r,
        } = e;
        return {
          session_id: t,
          user_id: n,
          application_id: s,
          channel_id: i,
          stream_key: r,
        };
      }
      function a(e, t, n) {
        let {
          session_id: s,
          application_id: i,
          channel_id: r,
          stream_key: a,
        } = e;
        return {
          sessionId: s,
          userId: t,
          applicationId: i,
          channelId: r,
          streamKey: a,
          source: n,
        };
      }
      n.r(t),
        n.d(t, {
          BroadcastSourceType: function () {
            return s;
          },
          broadcastFromServer: function () {
            return a;
          },
          broadcastToServer: function () {
            return r;
          },
        }),
        ((i = s || (s = {}))[(i.GLOBAL = 0)] = "GLOBAL"),
        (i[(i.GUILD = 1)] = "GUILD");
    },
    668192: function (e, t, n) {
      "use strict";
      function s() {
        return !0;
      }
      n.r(t),
        n.d(t, {
          isCacheEnabled: function () {
            return s;
          },
        });
    },
    600119: function (e, t, n) {
      "use strict";
      function s() {
        return !1;
      }
      n.r(t),
        n.d(t, {
          isCacheEnabled: function () {
            return s;
          },
        });
    },
    309175: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ChannelRTCParticipantsIndexes: function () {
            return s;
          },
          default: function () {
            return N;
          },
        }),
        n("653041");
      var s,
        i,
        r = n("392711"),
        a = n("386695"),
        o = n("925677"),
        u = n("134223"),
        d = n("188304"),
        l = n("311545"),
        f = n("262047"),
        _ = n("249877"),
        c = n("731865"),
        g = n("386130"),
        m = n("24606"),
        h = n("871831"),
        E = n("693873"),
        p = n("642174"),
        v = n("107888"),
        y = n("643026"),
        I = n("632865"),
        T = n("467006"),
        S = n("389570");
      let C = "__EMBEDDED_ACTIVITIES__";
      function A(e) {
        switch (e.type) {
          case I.ParticipantTypes.ACTIVITY:
            return `\0${e.sortKey}`;
          case I.ParticipantTypes.HIDDEN_STREAM:
          case I.ParticipantTypes.STREAM:
            return `${e.userVideo ? "\x01" : "\x02"}${(0, y.default)(e.userNick, e.user)}\x02`;
          case I.ParticipantTypes.USER:
            let t = "\x04";
            return (
              e.voiceState?.selfVideo
                ? (t = "\x02")
                : e.voiceState?.selfStream && (t = "\x03"),
              `${t}${(0, y.default)(e.userNick, e.user)}`
            );
        }
      }
      ((i = s || (s = {})).VIDEO = "VIDEO"),
        (i.STREAM = "STREAM"),
        (i.FILTERED = "FILTERED"),
        (i.SPEAKING = "SPEAKING"),
        (i.ACTIVITY = "ACTIVITY");
      class N {
        constructor(e) {
          (this.participants = {}),
            (this.lastSpoke = {}),
            (this.participantByIndex = new a.default(e => {
              let t = [];
              return (
                e.type === I.ParticipantTypes.USER &&
                  e.speaking &&
                  t.push("SPEAKING"),
                e.type === I.ParticipantTypes.USER && e.voiceState?.selfVideo
                  ? (t.push("VIDEO"),
                    !e.localVideoDisabled && t.push("FILTERED"))
                  : (0, I.isStreamParticipant)(e) &&
                    (t.push("STREAM"),
                    e.type !== I.ParticipantTypes.HIDDEN_STREAM &&
                      null != e.streamId &&
                      t.push("FILTERED")),
                e.type === I.ParticipantTypes.ACTIVITY && t.push("ACTIVITY"),
                t
              );
            }, A)),
            (this.channelId = e);
        }
        get version() {
          return this.participantByIndex.version;
        }
        size(e) {
          return this.participantByIndex.size(e);
        }
        toArray(e) {
          return this.participantByIndex.values(e, !0);
        }
        rebuild() {
          let e = c.default.getChannel(this.channelId);
          if (null == e || e.type === T.ChannelTypes.GUILD_TEXT) return !1;
          if (
            ((this.call = _.default.getCall(this.channelId)),
            e.isPrivate() && (null == this.call || this.call.unavailable))
          )
            return !1;
          let t = new Set(
            e.isGuildVocalOrThread()
              ? Object.keys(p.default.getVoiceStatesForChannel(e.id))
              : e.recipients
          );
          return (
            t.add(f.default.getId()),
            l.default
              .getAllActiveStreamsForChannel(this.channelId)
              .forEach(e => {
                let { ownerId: n } = e;
                return t.add(n);
              }),
            this.participantByIndex.clear(),
            (this.participants = {}),
            t.forEach(e => this.updateParticipant(e)),
            this.updateEmbeddedActivities(),
            !0
          );
        }
        getParticipant(e) {
          return this.participantByIndex.get(e) ?? null;
        }
        updateEmbeddedActivities() {
          return this.updateParticipant(C);
        }
        hasEmbeddedActivity() {
          let e = this.participants[C];
          return null != e && e.length > 0;
        }
        updateParticipant(e) {
          let t = this.participants[e],
            n =
              e === C
                ? this._getParticipantsForEmbeddedActivities()
                : this._getParticipantsForUser(e);
          return (
            (null != t || 0 !== n.length) &&
            (t?.forEach(e => {
              this.participantByIndex.delete(e.id);
            }),
            n.forEach(e => {
              this.participantByIndex.set(e.id, e);
            }),
            (this.participants[e] = n),
            !0)
          );
        }
        updateParticipantSpeaking(e) {
          return (
            this.participants[e]?.reduce((t, n) => {
              if (n.type === I.ParticipantTypes.USER) {
                let t = o.getIsSpeaking({ userId: e, checkIsMuted: !0 });
                return (
                  t && (this.lastSpoke[e] = Date.now()),
                  this.participantByIndex.set(n.id, {
                    ...n,
                    speaking: t,
                    lastSpoke: this.lastSpoke[e],
                    soundsharing: m.default.isSoundSharing(e),
                  }),
                  !0
                );
              }
              return t;
            }, !1) ?? !1
          );
        }
        updateParticipantQuality(e, t, n) {
          return (
            this.participants[e]?.reduce(
              (e, s) =>
                s.type === I.ParticipantTypes.STREAM
                  ? (this.participantByIndex.set(s.id, {
                      ...s,
                      maxResolution: t,
                      maxFrameRate: n,
                    }),
                    !0)
                  : e,
              !1
            ) ?? !1
          );
        }
        _getEmbeddedActivities() {
          let e = u.default.getEmbeddedActivitiesForChannel(this.channelId),
            t = u.default.getSelfEmbeddedActivityForChannel(this.channelId);
          return null == t ? e : (0, r.uniqBy)([...e, t], e => e.applicationId);
        }
        _getParticipantsForEmbeddedActivities() {
          return this._getEmbeddedActivities().map((e, t) => ({
            type: I.ParticipantTypes.ACTIVITY,
            id: e.applicationId,
            activityType: T.ActivityTypes.PLAYING,
            activityUrl: e.url,
            participants: new Set(e.userIds),
            guildId: c.default.getChannel(this.channelId)?.getGuildId() ?? null,
            sortKey: t.toString(),
          }));
        }
        _getParticipantsForUser(e) {
          let t, n;
          let s = [],
            i = h.default.getUser(e);
          if (null == i) return s;
          let r = p.default.getVoiceStateForChannel(this.channelId, e),
            a = p.default.getVoicePlatformForChannel(this.channelId, e),
            u = c.default.getChannel(this.channelId),
            _ = this.call?.ringing?.includes(e) ?? !1;
          (null != r || _) &&
            ((t = {
              type: I.ParticipantTypes.USER,
              ...E.default.getUserStreamData(e, u?.getGuildId()),
              user: i,
              id: i.id,
              voiceState: r,
              voicePlatform: a,
              speaking: (0, o.getIsSpeaking)({ userId: e, checkIsMuted: !0 }),
              lastSpoke: this.lastSpoke[e] ?? 0,
              soundsharing: m.default.isSoundSharing(e),
              ringing: _,
              userNick: v.default.getName(u?.getGuildId(), this.channelId, i),
              localVideoDisabled: g.default.isLocalVideoDisabled(i.id),
            }),
            s.push(t));
          let y =
            l.default.getStreamForUser(e, u?.getGuildId()) ??
            l.default.getActiveStreamForUser(e, u?.getGuildId());
          if (null != y && y.channelId === this.channelId) {
            let t = (0, d.encodeStreamKey)(y),
              a = this.getParticipant(t),
              o =
                y.ownerId === f.default.getId() &&
                l.default.isSelfStreamHidden(this.channelId),
              _ =
                a?.type === I.ParticipantTypes.STREAM
                  ? {
                      maxResolution:
                        null != a.maxResolution
                          ? { ...a.maxResolution }
                          : void 0,
                      maxFrameRate: a.maxFrameRate,
                    }
                  : null;
            (n = {
              ...E.default.getUserStreamData(
                e,
                u?.getGuildId(),
                S.MediaEngineContextTypes.STREAM
              ),
              ..._,
              type: o
                ? I.ParticipantTypes.HIDDEN_STREAM
                : I.ParticipantTypes.STREAM,
              id: t,
              userVideo: r?.selfVideo ?? !1,
              user: i,
              userNick: v.default.getName(u?.getGuildId(), this.channelId, i),
              stream: y,
            }),
              s.push(n);
          }
          return s;
        }
      }
    },
    901365: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return en;
          },
        }),
        n("653041");
      var s = n("512722"),
        i = n.n(s),
        r = n("392711"),
        a = n.n(r),
        o = n("661223"),
        u = n("312916"),
        d = n("134223"),
        l = n("841869"),
        f = n("983325"),
        _ = n("188304"),
        c = n("311545"),
        g = n("262047"),
        m = n("249877"),
        h = n("731865"),
        E = n("232733"),
        p = n("24606"),
        v = n("871831"),
        y = n("693873"),
        I = n("642174"),
        T = n("309175"),
        S = n("632865"),
        C = n("467006");
      let A = new l.default("ChannelRTCStore"),
        N = Object.freeze([]),
        D = [],
        O = {},
        R = {},
        P = {},
        b = {},
        M = {},
        V = {},
        L = {},
        k = {},
        w = {},
        U = {};
      function G(e) {
        let t = O[e];
        return null == t && ((t = new T.default(e)), (O[e] = t)), t;
      }
      function F(e) {
        let t =
          arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : D;
        return t.reduce(
          (t, n) =>
            e(G(n))
              ? ((function (e) {
                  let t = G(e);
                  if (0 === t.size()) return;
                  let n =
                    ee(e) || K(t) ? C.ChannelModes.VIDEO : C.ChannelModes.VOICE;
                  n === C.ChannelModes.VOICE
                    ? (delete b[e], delete M[e])
                    : (b[e] = n);
                })(n),
                (function (e) {
                  let t = g.default.getId(),
                    n = G(e);
                  if (0 === n.size() || E.default.getVoiceChannelId() !== e) {
                    j(e, null);
                    return;
                  }
                  let s = S.ParticipantSelectionTypes.NONE,
                    r = n
                      .toArray(T.ChannelRTCParticipantsIndexes.STREAM)
                      .find(
                        e =>
                          e.type === S.ParticipantTypes.STREAM &&
                          c.default.getActiveStreamForStreamKey(e.id)
                      );
                  if (null != r)
                    i()(
                      r.type === S.ParticipantTypes.STREAM,
                      "Impossible condition"
                    ),
                      (s = r.id);
                  else if (1 === n.size()) s = t;
                  else if (
                    1 === n.size(T.ChannelRTCParticipantsIndexes.VIDEO)
                  ) {
                    let [e] = n.toArray(T.ChannelRTCParticipantsIndexes.VIDEO);
                    s = e.id;
                  } else {
                    let e = n
                      .toArray()
                      .find(
                        e =>
                          e.type === S.ParticipantTypes.USER &&
                          e.id !== t &&
                          !e.ringing
                      );
                    s = e?.id ?? t;
                  }
                  let [a] = H(e);
                  if (
                    a !== S.ParticipantSelectionTypes.AUTO &&
                    a !== S.ParticipantSelectionTypes.NONE
                  ) {
                    let e = n.getParticipant(a);
                    (null == e ||
                      (e.type === S.ParticipantTypes.STREAM &&
                        null == c.default.getActiveStreamForStreamKey(e.id))) &&
                      (a = S.ParticipantSelectionTypes.NONE);
                  }
                  j(e, [a, s]);
                })(n),
                !0)
              : t,
          !1
        );
      }
      function B(e) {
        let t =
          arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : D;
        return F(t => t.updateParticipant(e), t);
      }
      function H(e) {
        let t = h.default.getChannel(e),
          n = t?.isDM()
            ? S.ParticipantSelectionTypes.AUTO
            : S.ParticipantSelectionTypes.NONE;
        return R[e] ?? [n, S.ParticipantSelectionTypes.NONE];
      }
      function x(e) {
        if (null == R[e]) return !1;
        let [t] = R[e];
        return t !== S.ParticipantSelectionTypes.NONE;
      }
      function Y(e) {
        null == P[e] &&
          (P[e] = {
            gridDurationMs: 0,
            focusDurationMs: 0,
            toggleCount: 0,
            lastUpdate: 0,
          });
        let t = P[e],
          n = performance.now(),
          s = x(e);
        if (t.lastUpdate > 0) {
          let e = n - t.lastUpdate;
          t[s ? "focusDurationMs" : "gridDurationMs"] += e;
        }
        t.lastUpdate = n;
      }
      function j(e, t) {
        Y(e);
        let n = x(e);
        null == t ? delete R[e] : (R[e] = t), n !== x(e) && P[e].toggleCount++;
      }
      function K(e) {
        return (
          e.size(T.ChannelRTCParticipantsIndexes.STREAM) > 0 ||
          e.size(T.ChannelRTCParticipantsIndexes.VIDEO) > 0 ||
          e.hasEmbeddedActivity()
        );
      }
      function W(e) {
        delete O[e], delete R[e], delete b[e], delete M[e];
      }
      function z() {
        return F(
          e => e.rebuild(),
          (function () {
            let e = [],
              t = E.default.getChannelId();
            null != t && e.push(t);
            let n = E.default.getVoiceChannelId();
            null != n && !e.includes(n) && e.push(n);
            let s = f.default.getRemoteSessionId(),
              i = I.default.getVoiceStateForSession(g.default.getId(), s);
            i?.channelId != null && e.push(i?.channelId),
              a().difference(D, e).forEach(W);
            let r = a().difference(e, D);
            return (D = e), r;
          })()
        );
      }
      function $() {
        return F(e => e.updateEmbeddedActivities());
      }
      function q(e) {
        let { userId: t } = e;
        return F(e => e.updateParticipantSpeaking(t));
      }
      function X(e) {
        let { user: t } = e;
        return B(t.id);
      }
      function Q(e) {
        let { channelId: t } = e;
        return F(e => e.rebuild(), [t]);
      }
      function Z(e) {
        let {
          channel: { id: t },
        } = e;
        return delete k[t], delete w[t], W(t);
      }
      function J(e) {
        let { streamKey: t } = e,
          { channelId: n, ownerId: s } = (0, _.decodeStreamKey)(t);
        return B(s, [n]);
      }
      function ee(e) {
        return !!h.default.getChannel(e)?.isGuildVocal();
      }
      class et extends o.default.Store {
        static #e = (this.displayName = "ChannelRTCStore");
        initialize() {
          this.waitFor(
            c.default,
            g.default,
            m.default,
            h.default,
            d.default,
            E.default,
            p.default,
            v.default,
            y.default,
            I.default
          ),
            this.syncWith([d.default], $),
            this.syncWith([f.default], z);
        }
        getParticipantsVersion(e) {
          return G(e).version;
        }
        getParticipants(e) {
          return G(e).toArray() ?? N;
        }
        getSpeakingParticipants(e) {
          return G(e).toArray(T.ChannelRTCParticipantsIndexes.SPEAKING) ?? N;
        }
        getFilteredParticipants(e) {
          return L[e]
            ? G(e).toArray(T.ChannelRTCParticipantsIndexes.FILTERED)
            : G(e).toArray();
        }
        getVideoParticipants(e) {
          return G(e).toArray(T.ChannelRTCParticipantsIndexes.VIDEO) ?? N;
        }
        getStreamParticipants(e) {
          return G(e).toArray(T.ChannelRTCParticipantsIndexes.STREAM) ?? N;
        }
        getActivityParticipants(e) {
          return G(e).toArray(T.ChannelRTCParticipantsIndexes.ACTIVITY) ?? N;
        }
        getParticipant(e, t) {
          return G(e).getParticipant(t);
        }
        getUserParticipantCount(e) {
          let t = G(e);
          return (
            t.size() -
            t.size(T.ChannelRTCParticipantsIndexes.STREAM) -
            t.size(T.ChannelRTCParticipantsIndexes.ACTIVITY)
          );
        }
        getParticipantsOpen(e) {
          return V[e] ?? !0;
        }
        getVoiceParticipantsHidden(e) {
          return L[e] ?? !1;
        }
        getSelectedParticipantId(e) {
          let [t, n] = H(e);
          return t === S.ParticipantSelectionTypes.NONE
            ? null
            : t !== S.ParticipantSelectionTypes.AUTO
              ? t
              : n === S.ParticipantSelectionTypes.NONE ||
                  n === S.ParticipantSelectionTypes.AUTO
                ? null
                : n;
        }
        getSelectedParticipant(e) {
          let t = this.getSelectedParticipantId(e);
          return null == t ? null : G(e).getParticipant(t);
        }
        getSelectedParticipantStats(e) {
          let t = P[e];
          return null == t
            ? {}
            : {
                view_mode_grid_duration_ms: Math.floor(t.gridDurationMs),
                view_mode_focus_duration_ms: Math.floor(t.focusDurationMs),
                view_mode_toggle_count: t.toggleCount,
              };
        }
        getMode(e) {
          return b[e] ?? (ee(e) ? C.ChannelModes.VIDEO : C.ChannelModes.VOICE);
        }
        getLayout(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : C.AppContext.APP;
          if (__OVERLAY__) return C.ChannelLayouts.NORMAL;
          let n = h.default.getChannel(e),
            s = ee(e) || n?.isBroadcastChannel();
          return (
            M[e]?.[t] ??
            (s ? C.ChannelLayouts.NO_CHAT : C.ChannelLayouts.NORMAL)
          );
        }
        getChatOpen(e) {
          return k[e] ?? !1;
        }
        isFullscreenInContext() {
          let e =
            arguments.length > 0 && void 0 !== arguments[0]
              ? arguments[0]
              : C.AppContext.APP;
          return Object.values(M).some(
            t => t[e] === C.ChannelLayouts.FULL_SCREEN
          );
        }
        getStageStreamSize(e) {
          return w[e];
        }
        getStageVideoLimitBoostUpsellDismissed(e) {
          return U[e];
        }
      }
      var en = new et(u.default, {
        CONNECTION_OPEN: z,
        CONNECTION_OPEN_SUPPLEMENTAL: z,
        THREAD_LIST_SYNC: z,
        OVERLAY_INITIALIZE: z,
        VOICE_CHANNEL_SELECT: function (e) {
          let { channelId: t, currentVoiceChannelId: n } = e;
          return (
            null != t
              ? delete P[t]
              : null != n && (delete k[n], delete w[n], Y(n)),
            z()
          );
        },
        CHANNEL_SELECT: function (e) {
          let { channelId: t, messageId: n } = e,
            s = z(),
            i = h.default.getChannel(t);
          return null == t ||
            null == n ||
            (i?.type !== C.ChannelTypes.GUILD_VOICE &&
              i?.type !== C.ChannelTypes.GUILD_STAGE_VOICE) ||
            k[t]
            ? s
            : ((k[t] = !0), !0);
        },
        CHANNEL_RTC_ACTIVE_CHANNELS: z,
        VOICE_STATE_UPDATES: function (e) {
          let { voiceStates: t, initial: n } = e;
          return t.reduce((e, t) => {
            let { userId: s, channelId: i } = t;
            return n && null != i && !D.includes(i) ? e : B(s) || e;
          }, !1);
        },
        CHANNEL_CREATE: function (e) {
          let { channel: t } = e;
          if (t.type === C.ChannelTypes.GROUP_DM) {
            let e = t.originChannelId;
            if (null != e)
              return (
                (M[t.id] = {
                  [C.AppContext.APP]:
                    M[e]?.[C.AppContext.APP] ?? C.ChannelLayouts.NORMAL,
                }),
                !0
              );
            t.isBroadcastChannel() &&
              (M[t.id] = { [C.AppContext.APP]: C.ChannelLayouts.NO_CHAT });
          }
          return !1;
        },
        CHANNEL_DELETE: Z,
        THREAD_DELETE: Z,
        CALL_CREATE: Q,
        CALL_UPDATE: Q,
        CALL_DELETE: function (e) {
          let { channelId: t } = e;
          return W(t);
        },
        CHANNEL_RTC_SELECT_PARTICIPANT: function (e) {
          let { channelId: t, id: n } = e,
            s = G(t);
          null == n &&
            s.toArray(T.ChannelRTCParticipantsIndexes.STREAM).forEach(e => {
              (0, S.isStreamParticipant)(e) && s.updateParticipant(e.user.id);
            });
          let [, i] = H(t);
          if (
            (j(t, [n ?? S.ParticipantSelectionTypes.NONE, i]),
            (0, _.isStreamKey)(n))
          ) {
            try {
              let { ownerId: e } = (0, _.decodeStreamKey)(n);
              e === g.default.getId() && B(e, [t]);
            } catch (e) {
              A.warn(`INVALID STREAM KEY FORMAT ${n}`, e);
            }
            !K(s) && (V[t] = !1);
          }
        },
        CHANNEL_RTC_UPDATE_LAYOUT: function (e) {
          let { channelId: t, layout: n, appContext: s } = e;
          M[t] = { ...M[t], [s]: n };
        },
        CHANNEL_RTC_UPDATE_PARTICIPANTS_OPEN: function (e) {
          let { channelId: t, participantsOpen: n } = e;
          V[t] = n;
        },
        CHANNEL_RTC_UPDATE_VOICE_PARTICIPANTS_HIDDEN: function (e) {
          let { channelId: t, voiceParticipantsHidden: n } = e;
          L[t] = n;
        },
        CHANNEL_RTC_UPDATE_STAGE_STREAM_SIZE: function (e) {
          let { channelId: t, large: n } = e;
          w[t] = n;
        },
        CHANNEL_RTC_UPDATE_STAGE_VIDEO_LIMIT_BOOST_UPSELL_DISMISSED: function (
          e
        ) {
          let { channelId: t, dismissed: n } = e;
          U[t] = n;
        },
        STREAM_UPDATE_SELF_HIDDEN: function (e) {
          let { channelId: t, selfStreamHidden: n } = e,
            s = g.default.getId();
          if (n) {
            let [e] = H(t);
            (0, _.isStreamKey)(e) && e.includes(s) && j(t, null);
          }
          B(s, [t]);
        },
        CHANNEL_RTC_UPDATE_CHAT_OPEN: function (e) {
          let { channelId: t, chatOpen: n } = e;
          k[t] = n;
        },
        RTC_CONNECTION_VIDEO: function (e) {
          let { channelId: t, userId: n } = e;
          return B(n, [t]);
        },
        RTC_CONNECTION_PLATFORM: function (e) {
          let { channelId: t, userId: n } = e;
          return B(n, [t]);
        },
        AUDIO_SET_LOCAL_VIDEO_DISABLED: function (e) {
          let { userId: t } = e;
          return B(t);
        },
        MEDIA_ENGINE_VIDEO_SOURCE_QUALITY_CHANGED: function (e) {
          let {
            channelId: t,
            senderUserId: n,
            maxResolution: s,
            maxFrameRate: i,
          } = e;
          return F(e => e.updateParticipantQuality(n, s, i), [t]);
        },
        STREAM_CLOSE: J,
        STREAM_DELETE: J,
        STREAM_WATCH: function (e) {
          let { streamKey: t } = e,
            { channelId: n, ownerId: s } = (0, _.decodeStreamKey)(t);
          return B(s, [n]);
        },
        SPEAKING: q,
        GUILD_SOUNDBOARD_SOUND_PLAY_START: q,
        GUILD_SOUNDBOARD_SOUND_PLAY_END: q,
        USER_UPDATE: X,
        GUILD_MEMBER_UPDATE: X,
        GUILD_DELETE: function (e) {
          let { guild: t } = e,
            n = [];
          if (
            (a().forEach(D, e => {
              let s = h.default.getChannel(e);
              (null == s || s.getGuildId() === t.id) && n.push(e);
            }),
            0 === n.length)
          )
            return !1;
          a().forEach(n, e => W(e));
        },
      });
    },
    643026: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
      function s(e, t) {
        return `${e.toLowerCase().padEnd(32, "!")}${t.id}`;
      }
    },
    349547: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var s = n("768517"),
        i = n("327271"),
        r = n("467006");
      let a = [
          r.ChannelTypes.GUILD_TEXT,
          r.ChannelTypes.GUILD_VOICE,
          r.ChannelTypes.GUILD_ANNOUNCEMENT,
          r.ChannelTypes.GUILD_FORUM,
          r.ChannelTypes.PUBLIC_THREAD,
          r.ChannelTypes.PRIVATE_THREAD,
        ],
        o = s.default.combine(
          r.Permissions.VIEW_CHANNEL,
          r.Permissions.SEND_MESSAGES
        );
      function u(e) {
        if (null == e || !a.includes(e.type)) return [];
        let t = i.default.getGuild(e.guild_id);
        return null == t
          ? []
          : Object.values(e.permissionOverwrites)
              .filter(
                e =>
                  0 === e.type &&
                  t.roles[e.id]?.tags?.guild_connections === null &&
                  !s.default.hasAny(e.deny, o)
              )
              .map(e => t.roles[e.id])
              .filter(e => null != e);
      }
    },
    714381: function (e, t, n) {
      "use strict";
      function s(e) {
        return e
          .replace(/[\s-~]+/g, "-")
          .replace(/^-+/, "")
          .replace(/[\\'!"#$%&()*+,./:;<=>?@[\]^`{|}~]/g, "")
          .toLowerCase();
      }
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
    },
    130200: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          shouldShowVoiceChannelChangeConfirmation: function () {
            return u;
          },
        });
      var s = n("983325"),
        i = n("535309"),
        r = n("262047"),
        a = n("327271"),
        o = n("642174");
      function u(e) {
        if (i.default.disableVoiceChannelChangeAlert) return !1;
        let t = s.default.getRemoteSessionId();
        if (
          null != o.default.getVoiceStateForSession(r.default.getId(), t) ||
          !o.default.isCurrentClientInVoiceChannel() ||
          o.default.isInChannel(e.id)
        )
          return !1;
        let n = a.default.getGuild(e.getGuildId());
        return (
          !(n?.afkChannelId != null && o.default.isInChannel(n.afkChannelId)) &&
          !0
        );
      }
    },
    297932: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          openClaimAccountModal: function () {
            return u;
          },
          openNewUserAgeGateModal: function () {
            return o;
          },
        });
      var s = n("735250");
      n("470079");
      var i = n("910838"),
        r = n("739527"),
        a = n("477815");
      function o(e) {
        (0, i.openModalLazy)(
          async () => {
            let { default: e } = await n
              .el("297932@434:484")
              .then(n.bind(n, "257312"));
            return t => (0, s.jsx)(e, { ...t });
          },
          {
            modalKey: r.NEW_USER_AGE_GATE_MODAL_KEY,
            onCloseRequest: a.NOOP,
            onCloseCallback: e,
          }
        );
      }
      function u() {
        let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
          t = arguments.length > 1 ? arguments[1] : void 0;
        (0, i.openModalLazy)(
          async () => {
            let { default: t } = await n
              .el("297932@989:1033")
              .then(n.bind(n, "574501"));
            return n => (0, s.jsx)(t, { claimRequired: e, ...n });
          },
          { onCloseRequest: e ? a.NOOP : null, onCloseCallback: t }
        );
      }
    },
    691529: function (e, t, n) {
      "use strict";
      var s, i;
      n.r(t),
        n.d(t, {
          CodedLinkType: function () {
            return s;
          },
        }),
        ((i = s || (s = {})).INVITE = "INVITE"),
        (i.TEMPLATE = "TEMPLATE"),
        (i.BUILD_OVERRIDE = "BUILD_OVERRIDE"),
        (i.MANUAL_BUILD_OVERRIDE = "MANUAL_BUILD_OVERRIDE"),
        (i.EVENT = "EVENT"),
        (i.CHANNEL_LINK = "CHANNEL_LINK"),
        (i.APP_DIRECTORY_PROFILE = "APP_DIRECTORY_PROFILE"),
        (i.ACTIVITY_BOOKMARK = "ACTIVITY_BOOKMARK"),
        (i.EMBEDDED_ACTIVITY_INVITE = "EMBEDDED_ACTIVITY_INVITE"),
        (i.GUILD_PRODUCT = "GUILD_PRODUCT"),
        (i.SERVER_SHOP = "SERVER_SHOP"),
        (i.CLYDE_PROFILE = "CLYDE_PROFILE"),
        (i.QUESTS_EMBED = "QUESTS_EMBED");
    },
    992545: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return L;
          },
          findCodedLink: function () {
            return U;
          },
          parseQuestsEmbedCode: function () {
            return k;
          },
          parseURLSafely: function () {
            return w;
          },
          remainingPathFromDiscordHostMatch: function () {
            return M;
          },
        }),
        n("653041");
      var s = n("729594");
      n("282373");
      var i = n("442409");
      n("173100");
      var r = n("869817"),
        a = n("930771"),
        o = n("366230"),
        u = n("691529"),
        d = n("467006");
      let l = /^\/([a-zA-Z0-9-]+)$/,
        f = /^\/channels\/([0-9]+|@me)\/([0-9]+)$/,
        _ = /^\/(invite|template)\/([a-zA-Z0-9-]+)\/?$/,
        c = RegExp("^/events/(\\d+)(?:/)(\\d+)?((?:/)(\\d+))?"),
        g = /^\/application-directory\/([0-9-]+)\/?$/,
        m = /^\/activities\/([0-9-]+)\/?$/,
        h = /^\/channels\/([0-9]+)\/shop\/([0-9]+)$/,
        E = /^\/channels\/([0-9]+)\/shop$/,
        p = /^\/clyde-profiles\/([0-9-]+)\/?$/,
        v = /^\/quests\/([0-9-]+)\/?$/,
        y = /dev:\/\/[\w-.~:\/?#\[\]@!$&'()*+,;=%]+/i,
        I = P(window.GLOBAL_ENV.INVITE_HOST),
        T = P(window.GLOBAL_ENV.GUILD_TEMPLATE_HOST),
        S = P(
          window.GLOBAL_ENV.WEBAPP_ENDPOINT ?? `//canary.${d.PRIMARY_DOMAIN}`
        ),
        C = P(`//canary.${d.PRIMARY_DOMAIN}`),
        A = P(`//ptb.${d.PRIMARY_DOMAIN}`),
        N = P("discordapp.com"),
        D = P("discord.com"),
        O = [
          a.default.escape(I.host ?? ""),
          a.default.escape(T.host ?? ""),
          a.default.escape(S.host ?? ""),
          a.default.escape(N.host ?? ""),
          a.default.escape(D.host ?? ""),
        ].filter(Boolean),
        R = RegExp(`((https?://[^ ]*)|^|[^/][^/.])(${O.join("|")})`, "g");
      function P(e) {
        if (null == e) return { host: null, pathPrefix: null };
        if (e.indexOf("/") >= 0) {
          let t = (0, s.parse)(e, void 0, !0);
          return { host: t.host, pathPrefix: t.pathname };
        }
        return { host: e, pathPrefix: null };
      }
      function b(e, t) {
        if (t.host?.replace(/^www[.]/i, "") !== e.host) return null;
        let n = t.pathname ?? "",
          s = e.pathPrefix ?? "";
        if (!n.startsWith(s)) return null;
        let i = n.substring(s.length);
        return "" === i ? null : i;
      }
      function M(e) {
        return b(S, e) ?? b(C, e) ?? b(A, e) ?? b(N, e) ?? b(D, e);
      }
      function V(e) {
        let t = w(e);
        if (null == t || null == t.pathname)
          return {
            url: null,
            inviteHostRemainingPath: null,
            templateHostRemainingPath: null,
            primaryHostRemainingPath: null,
          };
        let n = b(I, t),
          s = b(T, t),
          i = b(S, t) ?? b(C, t) ?? b(A, t) ?? b(N, t) ?? b(D, t);
        return {
          url: t,
          inviteHostRemainingPath: n,
          templateHostRemainingPath: s,
          primaryHostRemainingPath: i,
        };
      }
      function L(e) {
        if (null == e) return [];
        let t = new Set(),
          n = [],
          s = (e = e.replace(R, (e, t, n, s) =>
            null == n ? `${t}http://${s}` : e
          )).match(o.default.URL_REGEX),
          a = e.match(y);
        if (null == (s = (s ?? []).concat(a ?? [])) || 0 === s.length)
          return [];
        for (let e of s) {
          if (n.length >= 10) break;
          let {
            url: s,
            inviteHostRemainingPath: a,
            templateHostRemainingPath: o,
            primaryHostRemainingPath: d,
          } = V(e);
          if (null == s || null == s.pathname) continue;
          let v = (e, s) => {
            !t.has(s) && (t.add(s), n.push({ type: e, code: s }));
          };
          if (a?.match(l) != null) {
            let e = (0, i.generateInviteKeyFromUrlParams)(
              a.substring(1),
              s.search
            );
            r.default.getInvite(e), v(u.CodedLinkType.INVITE, e);
          }
          o?.match(l) != null && v(u.CodedLinkType.TEMPLATE, o.substring(1));
          let y = d?.match(_);
          if (null != y) {
            let e = y[1].toUpperCase();
            if (e === u.CodedLinkType.INVITE) {
              let e = (0, i.generateInviteKeyFromUrlParams)(y[2], s.search);
              v(u.CodedLinkType.INVITE, e);
            } else v(e, y[2]);
          }
          d?.match(f) != null &&
            v(u.CodedLinkType.CHANNEL_LINK, d.replace("/channels/", ""));
          let I = (function (e) {
            if (null == e) return null;
            let t = e.match(c);
            return null != t && t.length >= 4
              ? { guildId: t[1], guildEventId: t[2], recurrenceId: t[4] }
              : null;
          })(s.pathname);
          null != I &&
            v(
              u.CodedLinkType.EVENT,
              `${I.guildId}-${I.guildEventId}` +
                (null != I.recurrenceId ? `-${I.recurrenceId}` : "")
            );
          let T = d?.match(g);
          if (null != T) {
            let e = T[1];
            v(u.CodedLinkType.APP_DIRECTORY_PROFILE, e);
          }
          let S = d?.match(p);
          if (null != S) {
            let e = S[1];
            v(u.CodedLinkType.CLYDE_PROFILE, e);
          }
          let C = d?.match(m);
          if (null != C) {
            let e = C[1];
            v(u.CodedLinkType.ACTIVITY_BOOKMARK, e);
          }
          let A = d?.match(h);
          null != A && v(u.CodedLinkType.GUILD_PRODUCT, `${A[1]}-${A[2]}`);
          let N = d?.match(E);
          null != N && v(u.CodedLinkType.SERVER_SHOP, N[1]);
          let D = k(e);
          null != D && v(u.CodedLinkType.QUESTS_EMBED, D);
        }
        return n;
      }
      function k(e) {
        let t = V(e),
          n = t?.primaryHostRemainingPath?.match(v);
        return n?.[1] ?? null;
      }
      function w(e) {
        try {
          return (0, s.parse)(e);
        } catch (e) {
          return null;
        }
      }
      function U(e) {
        return L(e)[0];
      }
    },
    471620: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("312916"),
        i = n("328426"),
        r = {
          openNativeAppModal(e, t) {
            let r =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : {};
            !i.CONFERENCE_MODE_ENABLED &&
              (s.default.dispatch({
                type: "NATIVE_APP_MODAL_OPENING",
                code: e,
              }),
              n
                .el("471620@448:513")
                .then(n.bind(n, "427497"))
                .then(n => {
                  let { default: s } = n;
                  s.request(t, { code: e, ...r })
                    .then(t => {
                      this.nativeModalOpened(t?.code ?? e);
                    })
                    .catch(() => this.nativeModalOpenFailed(e))
                    .then(() => s.disconnect());
                }));
          },
          nativeModalOpened(e) {
            s.default.dispatch({ type: "NATIVE_APP_MODAL_OPENED", code: e });
          },
          nativeModalOpenFailed(e) {
            s.default.dispatch({
              type: "NATIVE_APP_MODAL_OPEN_FAILED",
              code: e,
            });
          },
        };
    },
    360750: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ConnectionConfigurationRuleOperator: function () {
            return i;
          },
          getCallbackParamsFromURL: function () {
            return E;
          },
          getConnectionsCheckText: function () {
            return p;
          },
          getCreatedAtDate: function () {
            return I;
          },
          getVisibleConnectionsRole: function () {
            return y;
          },
          isVerifiedRolesChannelVisible: function () {
            return v;
          },
          officialApplicationIds: function () {
            return h;
          },
        });
      var s,
        i,
        r = n("512722"),
        a = n.n(r),
        o = n("392711"),
        u = n.n(o),
        d = n("729594"),
        l = n("561163");
      n("310057");
      var f = n("349547");
      n("87727");
      var _ = n("327271");
      n("197905");
      var c = n("993241"),
        g = n("467006"),
        m = n("30175");
      let h = [
        "426537812993638400",
        "1042836142560645130",
        "296023718839451649",
        "979802510766268446",
        "1031611223235637258",
        "512333785338216465",
      ];
      function E(e) {
        let { query: t } = d.parse(e, !0),
          { code: n, state: s, error: i, error_description: r } = t;
        return (
          a()(
            !Array.isArray(n),
            "Received multiple query param values for code"
          ),
          a()(
            !Array.isArray(s),
            "Received multiple query param values for state"
          ),
          a()(
            !Array.isArray(i),
            "Received multiple query param values for error"
          ),
          a()(
            !Array.isArray(r),
            "Received multiple query param values for error_description"
          ),
          { code: n, state: s, error: i, errorDescription: r }
        );
      }
      function p(e) {
        let {
            connectionType: t,
            connectionMetadataField: n,
            operator: s,
            operatorText: i,
            value: r,
          } = e,
          a = null,
          o = Math.round(Number(r));
        switch (s) {
          case c.OperatorTypes.EQUAL:
            (a = m.default.Messages.CONNECTIONS_ROLE_POPOUT_MUST_BE),
              t === g.PlatformTypes.PAYPAL &&
                n === c.MetadataFields.PAYPAL_VERIFIED &&
                (a = m.default.Messages.CONNECTIONS_ROLE_POPOUT_MUST_HAVE_A);
            break;
          case c.OperatorTypes.NOT_EQUAL:
            a = m.default.Messages.CONNECTIONS_ROLE_POPOUT_MUST_NOT_BE;
            break;
          case c.OperatorTypes.LESS_THAN:
            (a = m.default.Messages.CONNECTIONS_ROLE_POPOUT_MUST_HAVE_AT_MOST),
              (o = Math.max(0, o - 1));
            break;
          case c.OperatorTypes.GREATER_THAN:
            (a = m.default.Messages.CONNECTIONS_ROLE_POPOUT_MUST_HAVE_AT_LEAST),
              (o = Math.max(0, o + 1));
            break;
          case void 0:
          case null:
            return null;
        }
        if (
          (null != i && (a = i), a instanceof l.FormattedMessage && null != s)
        )
          switch (t) {
            case g.PlatformTypes.REDDIT:
              switch (n) {
                case c.MetadataFields.CREATED_AT:
                  a = a.format({
                    platformQuantityHook: () =>
                      m.default.Messages.CONNECTIONS_ROLE_RULE_ACCOUNT_AGE.format(
                        { days: o }
                      ),
                  });
                  break;
                case c.MetadataFields.REDDIT_TOTAL_KARMA:
                  a = a.format({
                    platformQuantityHook: () =>
                      m.default.Messages.CONNECTIONS_ROLE_RULE_REDDIT_KARMA.format(
                        { karma: o }
                      ),
                  });
                  break;
                case c.MetadataFields.REDDIT_GOLD:
                  a = a.format({
                    platformQuantityHook: () =>
                      m.default.Messages.CONNECTIONS_ROLE_RULE_REDDIT_GOLD,
                  });
                  break;
                case c.MetadataFields.REDDIT_MOD:
                  a = a.format({
                    platformQuantityHook: () =>
                      m.default.Messages.CONNECTIONS_ROLE_RULE_REDDIT_MODERATOR,
                  });
                  break;
                default:
                  return null;
              }
              break;
            case g.PlatformTypes.STEAM:
              switch (n) {
                case c.MetadataFields.CREATED_AT:
                  a = a.format({
                    platformQuantityHook: () =>
                      m.default.Messages.CONNECTIONS_ROLE_RULE_ACCOUNT_AGE.format(
                        { days: o }
                      ),
                  });
                  break;
                case c.MetadataFields.STEAM_GAME_COUNT:
                  a = a.format({
                    platformQuantityHook: () =>
                      m.default.Messages.CONNECTIONS_ROLE_RULE_STEAM_GAMES.format(
                        { count: o }
                      ),
                  });
                  break;
                case c.MetadataFields.STEAM_ITEM_COUNT_TF2:
                  a = a.format({
                    platformQuantityHook: () =>
                      m.default.Messages.CONNECTIONS_ROLE_RULE_STEAM_TF2_ITEMS.format(
                        { count: o }
                      ),
                  });
                  break;
                case c.MetadataFields.STEAM_ITEM_COUNT_DOTA2:
                  a = a.format({
                    platformQuantityHook: () =>
                      m.default.Messages.CONNECTIONS_ROLE_RULE_STEAM_DOTA2_ITEMS.format(
                        { count: o }
                      ),
                  });
                  break;
                default:
                  return null;
              }
              break;
            case g.PlatformTypes.TWITTER:
              switch (n) {
                case c.MetadataFields.CREATED_AT:
                  a = a.format({
                    platformQuantityHook: () =>
                      m.default.Messages.CONNECTIONS_ROLE_RULE_ACCOUNT_AGE.format(
                        { days: o }
                      ),
                  });
                  break;
                case c.MetadataFields.TWITTER_VERIFIED:
                  a = a.format({
                    platformQuantityHook: () =>
                      m.default.Messages.CONNECTIONS_ROLE_RULE_TWITTER_VERIFIED,
                  });
                  break;
                case c.MetadataFields.TWITTER_FOLLOWERS_COUNT:
                  a = a.format({
                    platformQuantityHook: () =>
                      m.default.Messages.CONNECTIONS_ROLE_RULE_TWITTER_FOLLOWERS.format(
                        { count: o }
                      ),
                  });
                  break;
                case c.MetadataFields.TWITTER_STATUSES_COUNT:
                  a = a.format({
                    platformQuantityHook: () =>
                      m.default.Messages.CONNECTIONS_ROLE_RULE_TWITTER_STATUSES.format(
                        { count: o }
                      ),
                  });
                  break;
                default:
                  return null;
              }
              break;
            case g.PlatformTypes.PAYPAL:
              switch (n) {
                case c.MetadataFields.CREATED_AT:
                  a = a.format({
                    platformQuantityHook: () =>
                      m.default.Messages.CONNECTIONS_ROLE_RULE_ACCOUNT_AGE.format(
                        { days: o }
                      ),
                  });
                  break;
                case c.MetadataFields.PAYPAL_VERIFIED:
                  a = a.format({
                    platformQuantityHook: () =>
                      m.default.Messages.CONNECTIONS_ROLE_RULE_PAYPAL_VERIFIED,
                  });
                  break;
                default:
                  return null;
              }
              break;
            case g.PlatformTypes.EBAY:
              switch (n) {
                case c.MetadataFields.CREATED_AT:
                  a = a.format({
                    platformQuantityHook: () =>
                      m.default.Messages.CONNECTIONS_ROLE_RULE_ACCOUNT_AGE.format(
                        { days: o }
                      ),
                  });
                  break;
                case c.MetadataFields.EBAY_TOP_RATED_SELLER:
                  a = a.format({
                    platformQuantityHook: () =>
                      m.default.Messages.CONNECTIONS_EBAY_TOP_RATED_SELLER,
                  });
                  break;
                case c.MetadataFields.EBAY_POSITIVE_FEEDBACK_PERCENTAGE:
                  a = a.format({
                    platformQuantityHook: () =>
                      m.default.Messages.CONNECTIONS_ROLE_RULE_EBAY_POSITIVE_FEEDBACK_PERCENTAGE.format(
                        { value: o }
                      ),
                  });
                  break;
                case c.MetadataFields.EBAY_UNIQUE_POSITIVE_FEEDBACK_COUNT:
                  a = a.format({
                    platformQuantityHook: () =>
                      m.default.Messages.CONNECTIONS_ROLE_RULE_EBAY_UNIQUE_POSITIVE_FEEDBACK_COUNT.format(
                        { count: o }
                      ),
                  });
                  break;
                case c.MetadataFields.EBAY_UNIQUE_NEGATIVE_FEEDBACK_COUNT:
                  a = a.format({
                    platformQuantityHook: () =>
                      m.default.Messages.CONNECTIONS_ROLE_RULE_EBAY_UNIQUE_NEGATIVE_FEEDBACK_COUNT.format(
                        { count: o }
                      ),
                  });
                  break;
                default:
                  return null;
              }
              break;
            case g.PlatformTypes.TIKTOK:
              switch (n) {
                case c.MetadataFields.TIKTOK_VERIFIED:
                  a = a.format({
                    platformQuantityHook: () =>
                      m.default.Messages.CONNECTIONS_ROLE_RULE_TIKTOK_VERIFIED,
                  });
                  break;
                case c.MetadataFields.TIKTOK_FOLLOWER_COUNT:
                  a = a.format({
                    platformQuantityHook: () =>
                      m.default.Messages.CONNECTIONS_ROLE_RULE_TIKTOK_FOLLOWER_COUNT.format(
                        { count: o }
                      ),
                  });
                  break;
                case c.MetadataFields.TIKTOK_FOLLOWING_COUNT:
                  a = a.format({
                    platformQuantityHook: () =>
                      m.default.Messages.CONNECTIONS_ROLE_RULE_TIKTOK_FOLLOWING_COUNT.format(
                        { count: o }
                      ),
                  });
                  break;
                case c.MetadataFields.TIKTOK_LIKES_COUNT:
                  a = a.format({
                    platformQuantityHook: () =>
                      m.default.Messages.CONNECTIONS_ROLE_RULE_TIKTOK_LIKES_COUNT.format(
                        { count: o }
                      ),
                  });
                  break;
                default:
                  return null;
              }
              break;
            default:
              return null;
          }
        return a;
      }
      function v(e) {
        return Object.values(e.roles).some(
          e => e.tags?.guild_connections === null
        );
      }
      function y(e) {
        let {
          guildMember: t,
          guild: n,
          channel: s,
          onlyChannelConnectionRoles: i = !1,
        } = e;
        if (null == t) return null;
        if (
          (null == n && null != s && (n = _.default.getGuild(s.getGuildId())),
          null == n)
        )
          return null;
        let r = t.roles
            .map(e => n?.roles?.[e])
            .filter(e => e?.tags?.guild_connections === null)
            .sort(
              (e, t) => (
                a()(null != e && null != t, "roleA or roleB is null"),
                t.position - e.position
              )
            ),
          o = u().intersection(r, (0, f.default)(s));
        return o.length > 0 ? o[0] ?? null : i ? null : r[0] ?? null;
      }
      function I(e, t) {
        if (null == e || "" === e) return null;
        let n = new Date(e);
        return !(n instanceof Date) || isNaN(n.getTime())
          ? null
          : n.toLocaleDateString(t, {
              month: "short",
              day: "numeric",
              year: "numeric",
            });
      }
      ((s = i || (i = {}))[(s.AND = 0)] = "AND"), (s[(s.OR = 1)] = "OR");
    },
    993241: function (e, t, n) {
      "use strict";
      var s, i, r, a, o, u;
      n.r(t),
        n.d(t, {
          GUILD_ROLE_CONNECTION_APPLICATION_CONNECTION_TYPE: function () {
            return d;
          },
          MetadataFields: function () {
            return i;
          },
          MetadataItemTypes: function () {
            return r;
          },
          OperatorTypes: function () {
            return s;
          },
        }),
        ((a = s || (s = {}))[(a.EQUAL = 1)] = "EQUAL"),
        (a[(a.NOT_EQUAL = 2)] = "NOT_EQUAL"),
        (a[(a.LESS_THAN = 3)] = "LESS_THAN"),
        (a[(a.GREATER_THAN = 4)] = "GREATER_THAN"),
        ((o = i || (i = {})).CREATED_AT = "created_at"),
        (o.REDDIT_TOTAL_KARMA = "total_karma"),
        (o.REDDIT_GOLD = "gold"),
        (o.REDDIT_MOD = "mod"),
        (o.STEAM_GAME_COUNT = "game_count"),
        (o.STEAM_ITEM_COUNT_TF2 = "item_count_tf2"),
        (o.STEAM_ITEM_COUNT_DOTA2 = "item_count_dota2"),
        (o.TWITTER_VERIFIED = "verified"),
        (o.TWITTER_FOLLOWERS_COUNT = "followers_count"),
        (o.TWITTER_STATUSES_COUNT = "statuses_count"),
        (o.PAYPAL_VERIFIED = "verified"),
        (o.EBAY_POSITIVE_FEEDBACK_PERCENTAGE = "positive_feedback_percentage"),
        (o.EBAY_TOP_RATED_SELLER = "top_rated_seller"),
        (o.EBAY_UNIQUE_NEGATIVE_FEEDBACK_COUNT =
          "unique_negative_feedback_count"),
        (o.EBAY_UNIQUE_POSITIVE_FEEDBACK_COUNT =
          "unique_positive_feedback_count"),
        (o.TIKTOK_VERIFIED = "verified"),
        (o.TIKTOK_FOLLOWER_COUNT = "follower_count"),
        (o.TIKTOK_FOLLOWING_COUNT = "following_count"),
        (o.TIKTOK_LIKES_COUNT = "likes_count");
      let d = "application";
      ((u = r || (r = {}))[(u.INTEGER_LESS_THAN_EQUAL = 1)] =
        "INTEGER_LESS_THAN_EQUAL"),
        (u[(u.INTEGER_GREATER_THAN_EQUAL = 2)] = "INTEGER_GREATER_THAN_EQUAL"),
        (u[(u.INTEGER_EQUAL = 3)] = "INTEGER_EQUAL"),
        (u[(u.INTEGER_NOT_EQUAL = 4)] = "INTEGER_NOT_EQUAL"),
        (u[(u.DATETIME_LESS_THAN_EQUAL = 5)] = "DATETIME_LESS_THAN_EQUAL"),
        (u[(u.DATETIME_GREATER_THAN_EQUAL = 6)] =
          "DATETIME_GREATER_THAN_EQUAL"),
        (u[(u.BOOLEAN_EQUAL = 7)] = "BOOLEAN_EQUAL"),
        (u[(u.BOOLEAN_NOT_EQUAL = 8)] = "BOOLEAN_NOT_EQUAL");
    },
    768021: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return g;
          },
          openProviderAuthorize: function () {
            return c;
          },
        });
      var s = n("735250");
      n("470079");
      var i = n("974328"),
        r = n("379756"),
        a = n("106786"),
        o = n("894716"),
        u = n("776053"),
        d = n("600306"),
        l = n("501769"),
        f = n("993241"),
        _ = n("467006");
      async function c(e) {
        let { location: t, twoWayLinkType: n } =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
          s = arguments.length > 2 ? arguments[2] : void 0,
          i = Math.round(screen.width / 2 - 350),
          a = screen.height > 640 ? Math.round(screen.height / 2 - 320) : 0,
          o = null;
        !(0, l.isDesktop)() &&
          (o = window.open(
            `${window.location.protocol}//${window.location.host}${_.Routes.CONNECTIONS(e)}?loading=true`,
            "authorize",
            `scrollbars=yes,resizable=yes,toolbar=no,location=yes,top=${a},left=${i},width=700,height=640`
          ));
        let u = s;
        if (
          null == u &&
          e !== f.GUILD_ROLE_CONNECTION_APPLICATION_CONNECTION_TYPE
        ) {
          let { body: s } = await r.default.authorize(e, {
            location: t,
            twoWayLinkType: n,
          });
          u = s.url;
        }
        if (null != u)
          return null != o ? (o.location.href = u) : window.open(u), u;
      }
      function g(e, t, r) {
        if (
          (e === _.PlatformTypes.LEAGUE_OF_LEGENDS &&
            (e = _.PlatformTypes.RIOT_GAMES),
          e === _.PlatformTypes.CRUNCHYROLL)
        ) {
          a.showModal([t ?? "unknown"]);
          return;
        }
        if (e === _.PlatformTypes.XBOX) {
          u.showModal([t ?? "unknown"]);
          return;
        }
        if (
          e === _.PlatformTypes.PLAYSTATION ||
          e === _.PlatformTypes.PLAYSTATION_STAGING
        ) {
          o.showModal([t ?? "unknown"], e);
          return;
        }
        if (e === _.PlatformTypes.DOMAIN) {
          (0, i.openModalLazy)(async () => {
            let { default: e } = await n
              .el("768021@3033:3062")
              .then(n.bind(n, "260287"));
            return n =>
              (0, s.jsx)(e, { analyticsLocation: [t ?? "unknown"], ...n });
          });
          return;
        }
        if (null != r) {
          (0, d.handleClick)({
            shouldConfirm: !0,
            href: r,
            onConfirm: () => {
              c(e, { location: t }, r);
            },
          });
          return;
        }
        c(e, { location: t });
      }
    },
    372491: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          AppPageTitle: function () {
            return c;
          },
          flashPageTitle: function () {
            return l;
          },
          setPageTitleNotificationCount: function () {
            return d;
          },
          usePageTitle: function () {
            return _;
          },
          usePageTitleManager: function () {
            return g;
          },
        });
      var s = n("470079"),
        i = n("652874");
      let r = { base: n("501769").isPlatformEmbedded ? void 0 : "Discord" },
        a = 0,
        o = { count: 3, onlyWhenBlurred: !1, interval: 1e3 },
        u = (0, i.default)(() => ({
          titles: [r],
          notificationCount: void 0,
          flashQueue: [],
        }));
      function d(e) {
        u.setState({ notificationCount: e });
      }
      function l(e) {
        let t = { ...o, ...e, id: a++ };
        return (
          (t.count = Math.max(t.count, t.messages.length)),
          u.setState(e => ({ flashQueue: [...e.flashQueue, t] })),
          () => f(t.id)
        );
      }
      function f(e) {
        u.setState(t => ({ flashQueue: t.flashQueue.filter(t => t.id !== e) }));
      }
      function _(e) {
        s.useEffect(() => {
          var t;
          return (
            (t = e),
            u.setState(e => ({ titles: [t, ...e.titles] })),
            () => {
              u.setState(e => ({ titles: e.titles.filter(e => e !== t) }));
            }
          );
        }, [...Object.values(e)]);
      }
      function c(e) {
        return _(e), null;
      }
      function g() {
        let { skipsSettingDefaultPageTitle: e } =
          arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
        s.useEffect(() => {
          function e() {
            u.setState({ flashQueue: [] });
          }
          return (
            document.addEventListener("focusin", e, { capture: !0 }),
            () => document.removeEventListener("focusin", e, { capture: !0 })
          );
        }, []);
        let t = (function () {
          let [e, t] = u(e => {
              let { flashQueue: t } = e,
                n = (function (e) {
                  let t, n, s;
                  for (let i of e.titles) {
                    if (null != t && null != n) break;
                    (t = t ?? i.base),
                      (n = n ?? i.location),
                      (s = s ?? i.subsection);
                  }
                  return [t, s, n];
                })(e)
                  .filter(e => null != e)
                  .join(" | "),
                s = (function (e) {
                  let { notificationCount: t } = e;
                  return null == t || 0 === t ? "" : t < 0 ? "• " : `(${t}) `;
                })(e);
              return [`${s}${n}`, t[0]];
            }),
            [n, i] = s.useState(!1),
            r = s.useRef(0),
            a = t?.messages[r.current % t.messages.length];
          return (
            s.useEffect(() => {
              if (null == t) {
                (r.current = 0), i(!1);
                return;
              }
              if (document.hasFocus() && t.onlyWhenBlurred) {
                f(t.id), i(!1);
                return;
              }
              let e = setInterval(() => {
                if (r.current >= t.count) {
                  f(t.id), i(!1);
                  return;
                }
                i(e => !e || ((r.current += 1), !1));
              }, t.interval);
              return () => clearInterval(e);
            }, [t]),
            n ? a : e
          );
        })();
        s.useEffect(() => {
          let n = t === r.base;
          (!e || !n) && (document.title = t);
        }, [e, t]);
      }
    },
    581431: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
      var s = {
        openCreateGuildModal: e => {
          n.el("581431@61:107")
            .then(n.bind(n, "559406"))
            .then(t => {
              let { openCreateGuildModal: n } = t;
              return n(e);
            });
        },
        updateCreateGuildModal: e => {
          n.el("581431@286:332")
            .then(n.bind(n, "559406"))
            .then(t => {
              let { updateCreateGuildModal: n } = t;
              return n(e);
            });
        },
      };
    },
    311853: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          GuildShopPreviewExperiment: function () {
            return a;
          },
          GuildShopStorefrontExperiment: function () {
            return i;
          },
          ShowGuildRoleSubInGuildShopExperiment: function () {
            return r;
          },
        });
      var s = n("516086");
      let i = (0, s.createExperiment)({
          kind: "user",
          id: "2023-08_server_shop_storefront",
          label: "Server Shop Storefront",
          defaultConfig: { enabled: !1 },
          treatments: [
            {
              id: 1,
              label: "Enables Server shop storefront",
              config: { enabled: !0 },
            },
          ],
        }),
        r = (0, s.createExperiment)({
          kind: "user",
          id: "2023-09_show_server_sub_in_server_shop",
          label: "Show server sub in server shop",
          defaultConfig: { enabled: !1 },
          treatments: [
            {
              id: 1,
              label: "Enables showing server sub in server shop",
              config: { enabled: !0 },
            },
          ],
        }),
        a = (0, s.createExperiment)({
          kind: "user",
          id: "2023-09_server_shop_phantom_preview",
          label: "Server Shop Phantom Preview",
          defaultConfig: { enabled: !1 },
          treatments: [
            {
              id: 1,
              label: "Enables Server shop phantom preview",
              config: { enabled: !0 },
            },
          ],
        });
    },
    374713: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          isEligibleForGuildShopStorefront: function () {
            return a;
          },
          isEligibleForSubscriptionsInGuildShop: function () {
            return u;
          },
          useIsEligibleForGuildShopPreview: function () {
            return d;
          },
          useIsEligibleForGuildShopStorefront: function () {
            return r;
          },
          useIsEligibleForSubscriptionsInGuildShop: function () {
            return o;
          },
        });
      var s = n("895345"),
        i = n("311853");
      function r() {
        let { enabled: e } = i.GuildShopStorefrontExperiment.useExperiment({
          location: "adf3ea_1",
        });
        return e;
      }
      function a() {
        let { enabled: e } = i.GuildShopStorefrontExperiment.getCurrentConfig({
          location: "adf3ea_2",
        });
        return e;
      }
      function o(e, t) {
        let { enabled: n } =
            i.ShowGuildRoleSubInGuildShopExperiment.useExperiment({
              location: t,
            }),
          r = (0, s.useGuildEligibleForGuildProducts)(e, t);
        return n && r;
      }
      function u(e, t) {
        let { enabled: n } =
            i.ShowGuildRoleSubInGuildShopExperiment.getCurrentConfig({
              location: t,
            }),
          r = (0, s.isGuildEligibleForGuildProducts)(e, t);
        return n && r;
      }
      function d(e) {
        let { enabled: t } = i.GuildShopPreviewExperiment.useExperiment({
          location: e,
        });
        return t;
      }
    },
    320072: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useGuildShopPreviewVisible: function () {
            return l;
          },
        });
      var s = n("203959"),
        i = n("310057"),
        r = n("87727"),
        a = n("895345"),
        o = n("197905"),
        u = n("374713"),
        d = n("467006");
      function l(e, t) {
        let n = (0, u.useIsEligibleForGuildShopPreview)(t),
          l = (0, r.useIsDismissibleContentDismissed)(
            i.DismissibleContent.SERVER_SHOP_PHANTOM_PREVIEW
          ),
          f = (0, s.default)(
            [o.default],
            () => null != e && o.default.can(d.Permissions.ADMINISTRATOR, e)
          ),
          _ =
            e?.hasFeature(d.GuildFeatures.PRODUCTS_AVAILABLE_FOR_PURCHASE) ??
            !1,
          c = (0, a.useGuildEligibleForGuildProducts)(
            e?.id,
            "useGuildShopPreviewVisible"
          ),
          g = [
            d.GuildFeatures.CREATOR_MONETIZABLE,
            d.GuildFeatures.CREATOR_MONETIZABLE_PROVISIONAL,
            d.GuildFeatures.ROLE_SUBSCRIPTIONS_ENABLED,
          ].some(t => e?.hasFeature(t) === !0);
        return null != e && f && !_ && g && n && c && !l;
      }
    },
    373969: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          isGuildShopVisibleInGuild: function () {
            return d;
          },
          useGuildShopVisibleInGuild: function () {
            return u;
          },
        });
      var s = n("307245"),
        i = n("418714"),
        r = n("374713"),
        a = n("320072"),
        o = n("467006");
      function u(e) {
        let t = (0, r.useIsEligibleForGuildShopStorefront)(),
          n = (0, r.useIsEligibleForSubscriptionsInGuildShop)(
            e?.id,
            "channel_list"
          ),
          u = (0, i.useRoleSubscriptionsVisibleInGuild)(e?.id),
          d = (0, a.useGuildShopPreviewVisible)(e, "channel_list"),
          { shouldHideGuildPurchaseEntryPoints: l } = (0,
          s.useShouldHideGuildPurchaseEntryPoints)(e?.id);
        return (
          !!t &&
          null != e &&
          !l &&
          (e.hasFeature(o.GuildFeatures.PRODUCTS_AVAILABLE_FOR_PURCHASE) ||
            (n && u) ||
            d)
        );
      }
      function d(e) {
        let t = (0, r.isEligibleForGuildShopStorefront)(),
          n = (0, r.isEligibleForSubscriptionsInGuildShop)(
            e?.id,
            "channel_list"
          ),
          s = (0, i.areRoleSubscriptionsVisibleInGuild)(e?.id);
        return (
          !!t &&
          null != e &&
          (e.hasFeature(o.GuildFeatures.PRODUCTS_AVAILABLE_FOR_PURCHASE) ||
            (n && s))
        );
      }
    },
    91819: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
          isCreatorMonetizationEnabledGuild: function () {
            return a;
          },
        });
      var s = n("661223"),
        i = n("327271"),
        r = n("467006");
      function a(e) {
        return (
          !e.hasFeature(r.GuildFeatures.CREATOR_MONETIZABLE_DISABLED) &&
          (e.hasFeature(r.GuildFeatures.CREATOR_MONETIZABLE) ||
            e.hasFeature(r.GuildFeatures.CREATOR_MONETIZABLE_PROVISIONAL))
        );
      }
      function o(e) {
        return (0, s.useStateFromStores)([i.default], () => {
          let t = i.default.getGuild(e);
          return null != t && a(t);
        });
      }
    },
    307245: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useIsMonetizationReapplicationDisabled: function () {
            return g;
          },
          useShouldHideGuildPurchaseEntryPoints: function () {
            return _;
          },
          useShouldRestrictUpdatingCreatorMonetizationSettings: function () {
            return c;
          },
        });
      var s = n("470079"),
        i = n("661223"),
        r = n("648641"),
        a = n("486473"),
        o = n("279965"),
        u = n("327271"),
        d = n("682379"),
        l = n("467006");
      let f = e => {
          let t = (0, r.default)();
          s.useEffect(() => {
            if (
              null != e &&
              !!e.hasFeature(l.GuildFeatures.CREATOR_MONETIZABLE_RESTRICTED)
            )
              o.default.getMonetizationRestrictionsFetchState(e.id) ===
                o.FetchState.NOT_FETCHED &&
                a.fetchMonetizationRestrictions(e.id, { signal: t });
          }, [e, t]);
          let n = e?.id,
            u = (0, i.useStateFromStoresArray)(
              [o.default],
              () =>
                o.default.getMonetizationRestrictions(
                  n ?? l.EMPTY_STRING_SNOWFLAKE_ID
                ) ?? []
            );
          return {
            restrictions: u,
            restrictionsLoading: (0, i.useStateFromStores)(
              [o.default],
              () =>
                o.default.getMonetizationRestrictionsFetchState(
                  n ?? l.EMPTY_STRING_SNOWFLAKE_ID
                ) === o.FetchState.FETCHING
            ),
          };
        },
        _ = e => {
          let t = (0, i.useStateFromStores)(
              [u.default],
              () => u.default.getGuild(e),
              [e]
            ),
            { restrictions: n, restrictionsLoading: s } = f(t);
          return {
            shouldHideGuildPurchaseEntryPoints:
              !(
                t?.hasFeature(l.GuildFeatures.CREATOR_MONETIZABLE) ||
                t?.hasFeature(l.GuildFeatures.CREATOR_MONETIZABLE_PROVISIONAL)
              ) ||
              (s
                ? t?.hasFeature(
                    l.GuildFeatures.CREATOR_MONETIZABLE_RESTRICTED
                  ) ?? !0
                : (0, d.isRestrictedFromShowingGuildPurchaseEntryPoints)(n)),
            restrictionsLoading: s,
          };
        },
        c = e => {
          let t = (0, i.useStateFromStores)(
              [u.default],
              () => u.default.getGuild(e),
              [e]
            ),
            { restrictions: n, restrictionsLoading: s } = f(t),
            r = s
              ? t?.hasFeature(l.GuildFeatures.CREATOR_MONETIZABLE_RESTRICTED) ??
                !0
              : (0, d.isRestrictedFromUpdatingCreatorMonetizationSettings)(n),
            a = !!t?.hasFeature(
              l.GuildFeatures.CREATOR_MONETIZABLE_PENDING_NEW_OWNER_ONBOARDING
            );
          return {
            shouldRestrictUpdatingCreatorMonetizationSettings: r || a,
            allowSelfRemoveMonetization: !r,
            restrictionsLoading: s,
          };
        },
        g = e => {
          let { restrictions: t, restrictionsLoading: n } = f(
            (0, i.useStateFromStores)(
              [u.default],
              () => u.default.getGuild(e),
              [e]
            )
          );
          return {
            isMonetizationReapplicationDisabled: (0,
            d.isRestrictedFromMonetizationReapplication)(t),
            restrictionsLoading: n,
          };
        };
    },
    746509: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
      var s = n("353118"),
        i = n("288990"),
        r = n("467006");
      function a(e) {
        let t = null;
        if (null != e.emojiId && "0" !== e.emojiId) {
          let n = s.default.getUsableCustomEmojiById(e.emojiId);
          t =
            null != n ? { id: n.id, name: n.name, animated: n.animated } : null;
        } else if (null != e.emojiName && "" !== e.emojiName) {
          let n = i.default.getByName(
            i.default.convertSurrogateToName(e.emojiName, !1)
          );
          t = null != n ? { id: null, name: n.surrogates, animated: !1 } : null;
        }
        let n = Number(e.expiresAtMs);
        return {
          name: "Custom Status",
          type: r.ActivityTypes.CUSTOM_STATUS,
          state: e.text.length > 0 ? e.text : void 0,
          timestamps: n > 0 ? { end: n } : void 0,
          emoji: t,
        };
      }
    },
    31123: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          DevSettingsCategory: function () {
            return i;
          },
          default: function () {
            return l;
          },
        });
      var s,
        i,
        r = n("661223"),
        a = n("312916");
      ((s = i || (i = {}))[(s.MESSAGING = 0)] = "MESSAGING"),
        (s[(s.OVERLAYS = 1)] = "OVERLAYS");
      let o = {
          visual_effect_view_overrides: {
            label: "Blur view overrides for designers to test with",
            category: 1,
          },
          obscure_blur_effect_enabled: {
            label: "Force obscure blur effect on for message media and embeds",
            category: 1,
          },
          explicit_media_redaction_ignore_pending_scan: {
            label: "Ignore pending scan on explicit media",
            category: 1,
          },
          upload_fail_50: {
            label:
              "Uploads: Fail 50% of uploads with 500 status after a 1 second delay",
            category: 0,
          },
          send_fail_100: { label: "Send: Fail with 500 status", category: 0 },
        },
        u = {};
      class d extends r.default.DeviceSettingsStore {
        static #e = (this.displayName = "DevToolsDevSettingsStore");
        static #t = (this.persistKey = "DevToolsDevSettingsStore");
        getUserAgnosticState() {
          return { toggleStates: u };
        }
        initialize(e) {
          for (var t in o) {
            let n = e?.toggleStates?.[t] ?? !1;
            u[t] = n;
          }
        }
        get(e) {
          return u[e] ?? !1;
        }
        set(e, t) {
          return (u[e] = t), t;
        }
        all() {
          return u;
        }
        allByCategory(e) {
          return Object.entries(o)
            .filter(t => {
              let [n, s] = t;
              return s.category === e;
            })
            .map(e => {
              let [t, n] = e;
              return [t, u[t], n];
            });
        }
      }
      var l = new d(a.default, {
        DEV_TOOLS_DEV_SETTING_SET: function (e) {
          u[e.toggle] = e.value;
        },
      });
    },
    540019: function (e, t, n) {
      "use strict";
      var s, i, r, a, o, u, d, l, f, _;
      n.r(t),
        n.d(t, {
          EMOJI_PICKER_TAB_ID: function () {
            return h;
          },
          EMOJI_PICKER_TAB_PANEL_ID: function () {
            return m;
          },
          EMOJI_ROW_SIZE: function () {
            return T;
          },
          EMOJI_SIZE_MAP: function () {
            return I;
          },
          EmojiCategories: function () {
            return i;
          },
          EmojiCategoryTypes: function () {
            return s;
          },
          EmojiSize: function () {
            return o;
          },
          EmojiSubCategory: function () {
            return r;
          },
          GIF_PICKER_TAB_ID: function () {
            return y;
          },
          GIF_PICKER_TAB_PANEL_ID: function () {
            return v;
          },
          GRID_NAVIGATOR_ID: function () {
            return c;
          },
          INACTIVE_CATEGORY_INDEX: function () {
            return g;
          },
          SOUNDBOARD_PICKER_TAB_ID: function () {
            return p;
          },
          SOUNDBOARD_PICKER_TAB_PANEL_ID: function () {
            return E;
          },
        }),
        ((u = s || (s = {})).GUILD = "GUILD"),
        (u.UNICODE = "UNICODE"),
        (u.RECENT = "RECENT"),
        (u.CUSTOM = "CUSTOM"),
        (u.SEARCH_RESULTS = "SEARCH_RESULTS"),
        (u.FAVORITES = "FAVORITES"),
        (u.TOP_GUILD_EMOJI = "TOP_GUILD_EMOJI"),
        (u.PREMIUM_UPSELL = "PREMIUM_UPSELL");
      let c = "emoji-picker-grid";
      ((d = i || (i = {})).RECENT = "recent"),
        (d.FAVORITES = "favorites"),
        (d.TOP_GUILD_EMOJI = "top guild emoji"),
        (d.CUSTOM = "custom"),
        (d.PEOPLE = "people"),
        (d.NATURE = "nature"),
        (d.FOOD = "food"),
        (d.ACTIVITY = "activity"),
        (d.TRAVEL = "travel"),
        (d.OBJECTS = "objects"),
        (d.SYMBOLS = "symbols"),
        (d.FLAGS = "flags"),
        (d.PREMIUM_UPSELL = "premium emoji"),
        ((l = r || (r = {})).NONE = ""),
        (l.TOP_GUILD_EMOJI = "top_server"),
        (l.NEWLY_ADDED_EMOJI = "newly_added"),
        ((f = a || (a = {}))[(f.EMOJI = 0)] = "EMOJI"),
        (f[(f.NSFW = 1)] = "NSFW");
      let g = -1;
      ((_ = o || (o = {}))[(_.MEDIUM = 40)] = "MEDIUM"),
        (_[(_.LARGE = 48)] = "LARGE");
      let m = "emoji-picker-tab-panel",
        h = "emoji-picker-tab",
        E = "soundboard-picker-tab-panel",
        p = "soundboard-picker-tab",
        v = "gif-picker-tab-panel",
        y = "gif-picker-tab",
        I = { reaction: 32, default: 44, jumbo: 96 },
        T = 9;
    },
    376388: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      let s = new (n("114432").default)(function (e) {
        {
          let t = n("258593").emojiTermsImporter[e];
          return void 0 !== t ? t().then(e => e.default) : Promise.resolve({});
        }
      });
      var i = {
        setEmojiLocale: function (e) {
          s.setParams(e);
        },
        getTermsForEmoji: function (e) {
          let t = s.get();
          return void 0 !== t ? t[e] : [];
        },
      };
    },
    114432: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
      class s {
        constructor(e) {
          (this.loading = !1), (this.loaded = !1), (this.loader = e);
        }
        setParams(e) {
          this.param !== e &&
            ((this.param = e), (this.loading = !1), (this.loaded = !1));
        }
        get() {
          return this.ensureLoaded(), this.val;
        }
        ensureLoaded() {
          if (this.loaded || this.loading || void 0 === this.param) return;
          let e = this.param;
          (this.loading = !0),
            this.loader(e).then(t => {
              e === this.param &&
                ((this.val = t), (this.loading = !1), (this.loaded = !0));
            });
        }
      }
    },
    353118: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return el;
          },
        }),
        n("653041");
      var s = n("392711"),
        i = n.n(s),
        r = n("913527"),
        a = n.n(r),
        o = n("990835"),
        u = n("661223"),
        d = n("312916"),
        l = n("580905"),
        f = n("366598"),
        _ = n("763617"),
        c = n("592057"),
        g = n("376388"),
        m = n("358312"),
        h = n("440178"),
        E = n("175582"),
        p = n("644669"),
        v = n("703229"),
        y = n("991400"),
        I = n("361733"),
        T = n("979479"),
        S = n("327271"),
        C = n("880315"),
        A = n("871831"),
        N = n("204606"),
        D = n("152551"),
        O = n("659300"),
        R = n("370275"),
        P = n("930771"),
        b = n("84819"),
        M = n("679024"),
        V = n("288990"),
        L = n("680727"),
        k = n("84053"),
        w = n("308439"),
        U = n("467006"),
        G = n("540019"),
        F = n("746835");
      let B = [
          G.EmojiCategories.TOP_GUILD_EMOJI.toString(),
          G.EmojiCategories.FAVORITES.toString(),
          G.EmojiCategories.RECENT.toString(),
          G.EmojiCategories.CUSTOM.toString(),
        ].concat(V.default.getCategories()),
        H = { pendingUsages: [] };
      class x {
        constructor(e, t, n, s = !1) {
          (this._dirty = !0),
            (this._emojiMap = {}),
            (this._emoticons = []),
            (this._usableEmojis = []),
            (this._canSeeServerSubIAP = !1),
            (this._totalUsable = 0),
            (this.id = e),
            (this._userId = t),
            (this._emojis = n),
            (this._canSeeServerSubIAP = s);
        }
        getEmoji(e) {
          return this.build(), this._emojiMap[e];
        }
        getUsableEmoji(e) {
          let t = this.getEmoji(e);
          return null != t && this.isUsable(t) ? t : null;
        }
        isUsable(e) {
          if (0 === e.roles.length) return !0;
          let t = I.default.getMember(this.id, this._userId);
          return (
            null != t &&
            (!!(
              t.roles.some(t => e.roles.includes(t)) ||
              (0, h.isPurchasableRoleSubscriptionEmoji)(e)
            ) ||
              !1)
          );
        }
        get rawEmojis() {
          return this._emojis;
        }
        get emojis() {
          return this.build(), this._emojis;
        }
        get emoticons() {
          return this.build(), this._emoticons;
        }
        get usableEmojis() {
          return this.build(), this._usableEmojis;
        }
        build() {
          this._dirty &&
            ((this._dirty = !1),
            this._emojis.forEach(e => {
              (e.url = N.default.getEmojiURL({
                id: e.id,
                animated: e.animated,
                size: 48,
              })),
                (e.allNamesString = `:${e.name}:`),
                (e.guildId = this.id),
                (e.type = M.EmojiTypes.GUILD),
                (this._emojiMap[e.id] = e);
            }),
            (this._usableEmojis = i().sortBy(
              this._emojis.filter(e => this.isUsable(e)),
              e => e.name
            )),
            (this._emoticons = this._usableEmojis.filter(
              e => !e.require_colons
            )));
        }
      }
      let Y = b.default.fromTimestamp(Date.now() - 60 * D.default.Millis.DAY),
        j = [],
        K = 2,
        W = B.slice(0),
        z = {},
        $ = {},
        q = null,
        X = new Map();
      function Q(e) {
        let t = Z()[e];
        return null != t ? z[t]?.getUsableEmoji(e) : null;
      }
      function Z() {
        if ((J(), null == $))
          for (let e in (($ = {}), z))
            for (let t of z[e].rawEmojis) $[t.id] = e;
        return $;
      }
      async function J() {
        if (0 !== K) return;
        let e = f.default.database();
        if (null == e) return;
        K = 2;
        let t = await (0, _.tryLoadOrResetCacheGatewayAsync)(
          "EmojiStore.loadSavedEmojis",
          () =>
            o.default.timeAsync("\uD83D\uDCBE", "loadSavedEmojis", () =>
              c.default.getAsync(e)
            )
        );
        null != t &&
          d.default.dispatch({ type: "CACHED_EMOJIS_LOADED", emojis: t });
      }
      class ee {
        static #e = (this._lastInstance = null);
        static get(e) {
          return (
            void 0 === e && (e = null),
            (null == ee._lastInstance || ee._lastInstance.guildId !== e) &&
              (ee._lastInstance = new ee(e)),
            ee._lastInstance
          );
        }
        static reset() {
          ee._lastInstance = null;
        }
        static resetFrequentlyUsed() {
          null != ee._lastInstance && (ee._lastInstance.frequentlyUsed = null);
        }
        static resetFavorites() {
          null != ee._lastInstance &&
            ((ee._lastInstance.favorites = null),
            (ee._lastInstance.favoriteNamesAndIds = null));
        }
        static clear(e) {
          null != ee._lastInstance &&
            ee._lastInstance.guildId === e &&
            (ee._lastInstance = null);
        }
        constructor(e) {
          (this.emoticonRegex = null),
            (this.frequentlyUsed = null),
            (this.favorites = null),
            (this.favoriteNamesAndIds = null),
            (this.topEmojis = null),
            (this.escapedEmoticonNames = null),
            (this.disambiguatedEmoji = null),
            (this.newlyAddedEmoji = null),
            (this.isFavoriteEmojiWithoutFetchingLatest = e => {
              if (null == e) return !1;
              let t = this.rebuildFavoriteEmojisWithoutFetchingLatest()[1];
              return null != e.id ? t.has(e.id) : t.has(e.name ?? "");
            }),
            (this.guildId = e);
        }
        ensureDisambiguated() {
          null == this.disambiguatedEmoji &&
            this._buildDisambiguatedCustomEmoji();
        }
        getDisambiguatedEmoji() {
          return (
            null == this.disambiguatedEmoji &&
              this._buildDisambiguatedCustomEmoji(),
            this.disambiguatedEmoji
          );
        }
        getCustomEmoji() {
          return (
            null == this.customEmojis && this._buildDisambiguatedCustomEmoji(),
            this.customEmojis
          );
        }
        getGroupedCustomEmoji() {
          return (
            null == this.groupedCustomEmojis &&
              this._buildDisambiguatedCustomEmoji(),
            this.groupedCustomEmojis
          );
        }
        getByName(e) {
          if (
            ((null == this.emojisByName || null == this.unicodeAliases) &&
              this._buildDisambiguatedCustomEmoji(),
            Object.prototype.hasOwnProperty.call(this.emojisByName, e))
          )
            return this.emojisByName[e];
          if (Object.prototype.hasOwnProperty.call(this.unicodeAliases, e)) {
            let t = this.unicodeAliases[e];
            if (Object.prototype.hasOwnProperty.call(this.emojisByName, t))
              return this.emojisByName[t];
          }
        }
        getEmoticonByName(e) {
          if (
            (null == this.emoticonsByName &&
              this._buildDisambiguatedCustomEmoji(),
            Object.prototype.hasOwnProperty.call(this.emoticonsByName, e))
          )
            return this.emoticonsByName[e];
        }
        getById(e) {
          if (
            (null == this.emojisById && this._buildDisambiguatedCustomEmoji(),
            Object.prototype.hasOwnProperty.call(this.emojisById, e))
          )
            return this.emojisById[e];
        }
        getCustomEmoticonRegex() {
          return (
            null == this.escapedEmoticonNames &&
              this._buildDisambiguatedCustomEmoji(),
            null == this.emoticonRegex &&
              null != this.escapedEmoticonNames &&
              "" !== this.escapedEmoticonNames &&
              (this.emoticonRegex = RegExp(
                `^\\b(${this.escapedEmoticonNames})\\b`
              )),
            this.emoticonRegex
          );
        }
        getFrequentlyUsedEmojisWithoutFetchingLatest() {
          return (
            this.ensureDisambiguated(),
            null == this.frequentlyUsed &&
              (this.frequentlyUsed = et.frequently
                .map(e =>
                  null != e.id
                    ? this.getById(e.id)
                    : null != e.name
                      ? V.default.getByName(e.name)
                      : void 0
                )
                .filter(R.isNotNullish)),
            this.frequentlyUsed
          );
        }
        rebuildFavoriteEmojisWithoutFetchingLatest() {
          return (
            this.ensureDisambiguated(),
            (null == this.favorites || null == this.favoriteNamesAndIds) &&
              ((this.favoriteNamesAndIds = new Set()),
              (this.favorites = (
                y.default.frecencyWithoutFetchingLatest.favoriteEmojis
                  ?.emojis ?? []
              )
                .map(e => {
                  this.favoriteNamesAndIds?.add(e);
                  let t = this.getById(e);
                  return null == t && (t = V.default.getByName(e)), t;
                })
                .filter(R.isNotNullish))),
            [this.favorites, this.favoriteNamesAndIds]
          );
        }
        get favoriteEmojisWithoutFetchingLatest() {
          return this.rebuildFavoriteEmojisWithoutFetchingLatest()[0];
        }
        getEmojiInPriorityOrderWithoutFetchingLatest() {
          let e = new Set();
          return this.favoriteEmojisWithoutFetchingLatest
            .concat(this.getFrequentlyUsedEmojisWithoutFetchingLatest())
            .filter(t => !e.has(t) && (e.add(t), !0));
        }
        getTopEmojiWithoutFetchingLatest(e) {
          if ((this.ensureDisambiguated(), null == this.topEmojis)) {
            let t = X.get(e),
              n = k.default.getTopEmojiIdsByGuildId(e);
            if (null == t && null == n) return j;
            let s = (t?.emojiIds ?? n).map(
                e =>
                  this.getById(e) ??
                  V.default.getByName(V.default.convertSurrogateToName(e, !1))
              ),
              i = [];
            s.forEach(e => {
              null != e && i.push(e);
            });
            let r = this.getNewlyAddedEmojiForGuild(e).map(e => e.id);
            this.topEmojis = i.filter(e => !r.includes(e.id));
          }
          return this.topEmojis;
        }
        getNewlyAddedEmojiForGuild(e) {
          if ((this.ensureDisambiguated(), null == this.newlyAddedEmoji))
            return j;
          let t = this.newlyAddedEmoji[e];
          return null == t ? j : t;
        }
        getEscapedCustomEmoticonNames() {
          return (
            null == this.escapedEmoticonNames &&
              this._buildDisambiguatedCustomEmoji(),
            this.escapedEmoticonNames
          );
        }
        nameMatchesChain(e) {
          return i()(this.getDisambiguatedEmoji()).filter(t => {
            let { id: n, names: s, name: r } = t,
              a = null != s && i().some(s, e),
              o = null != r && e(r),
              u = null != r && i().some(g.default.getTermsForEmoji(r), e),
              d =
                null != n &&
                i().some(L.default.getCaptionsForEmojiById({ emojiId: n }), e);
            return a || o || u || d;
          });
        }
        _buildDisambiguatedCustomEmoji() {
          let e = {},
            t = [];
          (this.emoticonRegex = null),
            (this.frequentlyUsed = null),
            (this.disambiguatedEmoji = []),
            (this.unicodeAliases = Object.create(null)),
            (this.customEmojis = Object.create(null)),
            (this.groupedCustomEmojis = Object.create(null)),
            (this.emoticonsByName = Object.create(null)),
            (this.emojisByName = Object.create(null)),
            (this.emojisById = Object.create(null)),
            (this.newlyAddedEmoji = Object.create(null));
          let n = t => {
              let n = t.name,
                s = e[n] ?? 0;
              if (((e[n] = s + 1), s > 0)) {
                let e = `${n}~${s}`;
                t = {
                  ...t,
                  name: e,
                  originalName: n,
                  allNamesString: `:${e}:`,
                };
              }
              if (
                ((this.emojisByName[t.name] = t),
                "names" in t &&
                  t.names
                    ?.slice(1)
                    .forEach(e => (this.unicodeAliases[e] = t.name)),
                null != t.id)
              ) {
                let e, n;
                if (
                  ((this.emojisById[t.id] = t),
                  (this.customEmojis[t.name] = t),
                  t.type === M.EmojiTypes.GUILD)
                )
                  (e = t.guildId), (n = !0);
                null != e &&
                  (null != this.groupedCustomEmojis[e]
                    ? this.groupedCustomEmojis[e].push(t)
                    : (this.groupedCustomEmojis[e] = [t]),
                  n &&
                    b.default.compare(t.id, Y) >= 0 &&
                    (null != this.newlyAddedEmoji[e]
                      ? this.newlyAddedEmoji[e].push(t)
                      : (this.newlyAddedEmoji[e] = [t])));
              }
              null == this.disambiguatedEmoji && (this.disambiguatedEmoji = []),
                this.disambiguatedEmoji.push(t);
            },
            s = e => {
              !Object.prototype.hasOwnProperty.call(
                this.emoticonsByName,
                e.name
              ) &&
                (t.push(P.default.escape(e.name)),
                (this.emoticonsByName[e.name] = e));
            };
          V.default.forEach(n);
          let r = e => {
            let t = z[null == e ? U.NULL_STRING_GUILD_ID : e];
            null != t &&
              (i().each(t.usableEmojis, n), i().each(t.emoticons, s));
          };
          for (let e in (r(this.guildId), this.newlyAddedEmoji))
            null != this.newlyAddedEmoji[e]
              ? (this.newlyAddedEmoji[e] = this.newlyAddedEmoji[e]
                  .sort((e, t) => b.default.compare(t.id, e.id))
                  .slice(0, 3))
              : (this.newlyAddedEmoji[e] = []);
          C.default.getFlattenedGuildIds().forEach(e => {
            e !== this.guildId && r(e);
          }),
            (this.escapedEmoticonNames = t.join("|"));
        }
      }
      let et = new l.default({
        computeBonus: () => 100,
        computeWeight: e => {
          let t = 0;
          return (
            e <= 3
              ? (t = 100)
              : e <= 15
                ? (t = 70)
                : e <= 30
                  ? (t = 50)
                  : e <= 45
                    ? (t = 30)
                    : e <= 80 && (t = 10),
            t
          );
        },
        lookupKey: e => V.default.getByName(e) ?? Q(e),
        afterCompute: () => {
          ee.resetFrequentlyUsed(),
            (W = B.slice(0)),
            !i().some(z, e => e.usableEmojis.length > 0) &&
              W.splice(B.indexOf(G.EmojiCategories.CUSTOM), 1);
        },
        numFrequentlyItems: 42,
      });
      function en() {
        (z = {}), ($ = {}), ee.reset(), X.clear(), (K = 2);
      }
      function es(e) {
        null != z[e] && delete z[e];
      }
      function ei() {
        ($ = null), ee.reset(), 0 !== K && et.compute();
      }
      function er(e, t) {
        if ((es(e), ee.clear(e), null == t)) return;
        let n = A.default.getCurrentUser();
        if (null == n) return;
        let s = (0, p.canUseRoleSubscriptionIAP)(e);
        z[e] = new x(e, n.id, t, s);
      }
      function ea() {
        let e = y.default.settings,
          t = e.textAndImages?.diversitySurrogate?.value;
        null != t && V.default.setDefaultDiversitySurrogate(t), ee.reset();
        let n = y.default.frecencyWithoutFetchingLatest,
          s = n.emojiFrecency?.emojis ?? {};
        et.overwriteHistory(
          i().mapValues(s, e => ({
            ...e,
            recentUses: e.recentUses.map(Number).filter(e => e > 0),
          })),
          H.pendingUsages
        ),
          i().isEmpty(s) &&
            i().isEmpty(H.pendingUsages) &&
            y.default.hasLoaded(
              F.UserSettingsTypes.FRECENCY_AND_FAVORITES_SETTINGS
            ) &&
            (et.track("thumbsup"),
            et.track("thumbsup"),
            et.track("eyes"),
            et.track("eyes"),
            et.track("laughing"),
            et.track("laughing"),
            et.track("watermelon"),
            et.track("fork_and_knife"),
            et.track("yum"),
            et.track("weary"),
            et.track("tired_face"),
            et.track("poop"),
            et.track("100"));
      }
      function eo(e) {
        for (let t of e) {
          let e = t.id ?? t.uniqueName ?? t.name;
          null != e &&
            (et.track(e),
            H.pendingUsages.push({ key: e, timestamp: Date.now() }));
        }
        let t = e.length > 0;
        return t && 0 !== K && et.compute(), t;
      }
      function eu(e) {
        let { guildId: t, role: n } = e;
        if (!(0, m.isSubscriptionRole)(n)) return !1;
        {
          let e = z[t];
          er(t, e?.emojis), ei();
        }
      }
      class ed extends u.default.PersistedStore {
        static #e = (this.displayName = "EmojiStore");
        static #t = (this.persistKey = "EmojiStoreV2");
        initialize(e) {
          this.waitFor(
            f.default,
            T.default,
            I.default,
            S.default,
            v.default,
            E.default,
            k.default,
            A.default
          ),
            null != e && (H = e),
            this.syncWith([y.default], ea);
        }
        getState() {
          return H;
        }
        get loadState() {
          return K;
        }
        hasPendingUsage() {
          return H.pendingUsages.length > 0;
        }
        get categories() {
          return W;
        }
        get diversitySurrogate() {
          return V.default.getDefaultDiversitySurrogate() ?? "";
        }
        get emojiFrecencyWithoutFetchingLatest() {
          return et;
        }
        getGuildEmoji(e) {
          J();
          let t = z[e];
          return t?.emojis ?? [];
        }
        getUsableGuildEmoji(e) {
          J();
          let t = z[e];
          return t?.usableEmojis ?? [];
        }
        getGuilds() {
          return z;
        }
        getDisambiguatedEmojiContext(e) {
          return J(), ee.get(e);
        }
        getSearchResultsOrder(e, t, n) {
          let s = t.toLowerCase(),
            r = P.default.escape(s);
          if (e.length > 0) {
            let t = RegExp(`^${r}`, "i"),
              n = RegExp(`(^|_|[A-Z])${r}s?([A-Z]|_|$)`),
              a = n.test.bind(n),
              o = t.test.bind(t),
              u = function (e) {
                let t =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : e;
                if (null == e || null == t) return 0;
                let n = e.toLowerCase(),
                  i =
                    1 +
                    (n === s ? 4 : 0) +
                    (a(n) || a(e) ? 2 : 0) +
                    (o(e) ? 1 : 0),
                  r = et.getScore(t);
                return null != r && (i *= r / 100), i;
              };
            e = i().orderBy(
              e,
              [
                e => (null != e.names ? u(e.names[0]) : u(e.name, e.id)),
                e => (null != e.names ? e.names[0] : e.name),
              ],
              ["desc", "asc"]
            );
          }
          return n > 0 && (e = e.slice(0, n)), e;
        }
        searchWithoutFetchingLatest(e) {
          let t,
            {
              channel: n,
              query: s,
              count: i = 0,
              intention: r,
              includeExternalGuilds: a = !0,
              matchComparator: o,
            } = e;
          J();
          let u = s.toLowerCase().replaceAll(/[ _]/g, ""),
            d = P.default.escape(u);
          if (null == o) {
            let e = RegExp(`${d}`, "i");
            t = t => e.test(t.replaceAll("_", ""));
          } else t = o;
          let l = null != n ? n.getGuildId() : null,
            f = ee
              .get(l)
              .nameMatchesChain(t)
              .reduce(
                (e, t) => {
                  let s = O.default.getEmojiUnavailableReason({
                    emoji: t,
                    channel: n,
                    intention: r,
                    forceIncludeExternalGuilds: a,
                  });
                  return (
                    s === w.EmojiDisabledReasons.PREMIUM_LOCKED
                      ? e.locked.push(t)
                      : null == s && e.unlocked.push(t),
                    e
                  );
                },
                { unlocked: [], locked: [] }
              );
          return {
            unlocked: this.getSearchResultsOrder(f.unlocked, s, i),
            locked: this.getSearchResultsOrder(f.locked, s, 0),
          };
        }
        getUsableCustomEmojiById(e) {
          return J(), Q(e);
        }
        getCustomEmojiById(e) {
          return (
            J(),
            (function (e) {
              let t = Z()[e];
              return null != t ? z[t]?.getEmoji(e) : null;
            })(e)
          );
        }
        getTopEmoji(e) {
          return null == e
            ? j
            : (J(), ee.get(e).getTopEmojiWithoutFetchingLatest(e));
        }
        getNewlyAddedEmoji(e) {
          return null == e ? j : (J(), ee.get(e).getNewlyAddedEmojiForGuild(e));
        }
        getTopEmojisMetadata(e) {
          return X.get(e);
        }
        getEmojiAutosuggestion(e) {
          if (null != q && q.length > 0) {
            let { locked: t, unlocked: n } = this.searchWithoutFetchingLatest({
              channel: e,
              count: 10,
              query: q,
              intention: w.EmojiIntention.CHAT,
            });
            return [...n.slice(0, 5), ...t.slice(0, 5)].slice(0, 5);
          }
          return [];
        }
        hasUsableEmojiInAnyGuild() {
          return J(), b.default.keys(z).some(e => z[e].usableEmojis.length > 0);
        }
        hasFavoriteEmojis(e) {
          let t = ee.get(e);
          return null != t && t.favoriteEmojisWithoutFetchingLatest.length > 0;
        }
      }
      var el = new ed(d.default, {
        BACKGROUND_SYNC: function () {
          en();
        },
        CONNECTION_OPEN: function (e) {
          for (let t of (en(), e.guilds)) er(t.id, t.emojis);
          (K = e.guilds.every(e => null != e.emojis) ? 1 : 0), ei();
        },
        CACHED_EMOJIS_LOADED: function (e) {
          let { emojis: t } = e;
          for (let [e, n] of t)
            !Object.hasOwn(z, e) && T.default.isMember(e) && er(e, n);
          ei();
        },
        GUILD_MEMBER_UPDATE: function (e) {
          let { guildId: t, user: n } = e;
          if (n.id !== A.default.getCurrentUser()?.id) return;
          let s = z[t];
          er(t, s?.usableEmojis), ei();
        },
        GUILD_CREATE: function (e) {
          0 !== K &&
            null == e.guild.emojis &&
            null != e.guild.emojiUpdates &&
            (K = 0),
            er(e.guild.id, e.guild.emojis),
            ei();
        },
        GUILD_UPDATE: function (e) {
          er(e.guild.id, e.guild.emojis), ei();
        },
        GUILD_EMOJIS_UPDATE: function (e) {
          let { guildId: t, emojis: n } = e;
          er(t, n), ei();
        },
        GUILD_DELETE: function (e) {
          let { guild: t } = e;
          es(t.id), X.delete(t.id), ei();
        },
        MESSAGE_REACTION_ADD: function (e) {
          if (!e.optimistic) return !1;
          let t =
            null != e.emoji.id && "0" !== e.emoji.id
              ? e.emoji
              : V.default.getByName(
                  V.default.convertSurrogateToName(e.emoji.name, !1)
                );
          if (null == t) return !1;
          eo([t]);
        },
        EMOJI_TRACK_USAGE: function (e) {
          let { emojiUsed: t } = e;
          eo(t);
        },
        USER_SETTINGS_PROTO_UPDATE: function (e) {
          let {
            settings: { type: t },
            wasSaved: n,
          } = e;
          if (
            (g.default.setEmojiLocale(v.default.locale),
            t !== F.UserSettingsTypes.FRECENCY_AND_FAVORITES_SETTINGS || !n)
          )
            return !1;
          H.pendingUsages = [];
        },
        GUILD_ROLE_CREATE: eu,
        GUILD_ROLE_UPDATE: eu,
        TOP_EMOJIS_FETCH_SUCCESS: function (e) {
          let { guildId: t, topEmojisMetadata: n } = e;
          X.set(t, {
            emojiIds: n.map(e => e.emojiId),
            topEmojisTTL: a()(a()()).add(1, "days").valueOf(),
          });
        },
        EMOJI_AUTOSUGGESTION_UPDATE: function (e) {
          let { text: t } = e;
          q = t;
        },
      });
    },
    679024: function (e, t, n) {
      "use strict";
      var s, i;
      n.r(t),
        n.d(t, {
          EmojiTypes: function () {
            return s;
          },
        }),
        ((i = s || (s = {})).UNICODE = "UNICODE"),
        (i.GUILD = "GUILD_EMOJI");
    },
    288990: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          DIVERSITY_SURROGATES: function () {
            return E;
          },
          default: function () {
            return P;
          },
        }),
        n("653041");
      var s = n("392711"),
        i = n.n(s),
        r = n("946188"),
        a = n("659300"),
        o = n("679024");
      let u = null,
        d = {},
        l = {},
        f = {},
        _ = {},
        c = [],
        g = 0,
        m = 0,
        h = { "1f3fb": 0, "1f3fc": 1, "1f3fd": 2, "1f3fe": 3, "1f3ff": 4 },
        E = [
          "\uD83C\uDFFB",
          "\uD83C\uDFFC",
          "\uD83C\uDFFD",
          "\uD83C\uDFFE",
          "\uD83C\uDFFF",
        ],
        p = /^:([^\s:]+?(?:::skin-tone-\d)?):/,
        v = n("523558"),
        y =
          /[\u200d\ud800-\udfff\u0300-\u036f\ufe20-\ufe2f\u20d0-\u20ff\ufe0e\ufe0f\u270b\u2b50\u2728\u26a1\u26c5\u26c4\u2614\u2615\u26bd\u26be\u26f3\u26f5\u2693\u26fd\u26f2\u26fa\u26ea\u231a\u23f0\u231b\u23f3\u26ce\u2648\u2649\u264a\u264b\u264c\u264d\u264e\u264f\u2650\u2651\u2652\u2653\u270a\u274c\u2b55\u26d4\u2757\u2755\u2753\u2754\u2705\u274e\u267f\u23e9\u23ea\u23eb\u23ec\u2795\u2796\u2797\u27b0\u27bf\u26aa\u26ab\u25fe\u25fd\u2b1b\u2b1c\u26a7]/,
        I =
          /\ud83c[\udffb-\udfff](?=\ud83c[\udffb-\udfff])|(?:[^\ud800-\udfff][\u0300-\u036f\ufe20-\ufe2f\u20d0-\u20ff]?|[\u0300-\u036f\ufe20-\ufe2f\u20d0-\u20ff]|(?:\ud83c[\udde6-\uddff]){2}|[\ud800-\udbff][\udc00-\udfff]|[\ud800-\udfff])[\ufe0e\ufe0f]?(?:[\u0300-\u036f\ufe20-\ufe2f\u20d0-\u20ff]|\ud83c[\udffb-\udfff])?(?:\u200d(?:[^\ud800-\udfff]|(?:\ud83c[\udde6-\uddff]){2}|[\ud800-\udbff][\udc00-\udfff])[\ufe0e\ufe0f]?(?:[\u0300-\u036f\ufe20-\ufe2f\u20d0-\u20ff]|\ud83c[\udffb-\udfff])?)*/g;
      for (let e = 0; e < E.length; e++) {
        let t = E[e];
        (f[`skin-tone-${e + 1}`] = t), (_[t] = `skin-tone-${e + 1}`);
      }
      class T {
        constructor(e) {
          if (
            ((this.emojiObject = e),
            (this.type = o.EmojiTypes.UNICODE),
            (this.uniqueName = e.names[0]),
            (this.surrogates = e.surrogates),
            (this.diversityChildren = {}),
            null != e.diversityChildren)
          ) {
            for (let t of e.diversityChildren)
              if (null != t.diversity) {
                let e = t.diversity.join("-");
                this.diversityChildren[e] = new T(t);
              }
          }
        }
        get names() {
          return this.emojiObject.names;
        }
        get allNamesString() {
          return this.names.length > 1
            ? `:${this.names.join(": :")}:`
            : `:${this.uniqueName}:`;
        }
        get unicodeVersion() {
          return this.emojiObject.unicodeVersion ?? 0;
        }
        get hasDiversity() {
          return this.emojiObject.hasDiversity;
        }
        get hasMultiDiversity() {
          return this.emojiObject.hasMultiDiversity;
        }
        get hasDiversityParent() {
          return this.emojiObject.hasDiversityParent;
        }
        get hasMultiDiversityParent() {
          return this.emojiObject.hasMultiDiversityParent;
        }
        get managed() {
          return !0;
        }
        get animated() {
          return !1;
        }
        get defaultDiversityChild() {
          if (this.hasDiversity && null != u) {
            let e = (function (e) {
              return r.default.convert.toCodePoint(e) ?? "";
            })(u);
            return this.diversityChildren[e];
          }
          return null;
        }
        get url() {
          let e = this.defaultDiversityChild;
          return null != e
            ? a.default.getURL(e.surrogates)
            : a.default.getURL(this.surrogates);
        }
        get name() {
          return this.hasDiversity && null != u
            ? `${this.uniqueName}::${_[u]}`
            : this.uniqueName;
        }
        get optionallyDiverseSequence() {
          let e = this.defaultDiversityChild;
          return null != e ? e.surrogates : this.surrogates;
        }
        forEachDiversity(e) {
          null != this.diversityChildren && i().each(this.diversityChildren, e);
        }
        forEachName(e) {
          i().each(this.names, e);
        }
        setSpriteSheetIndex(e) {
          (this.index = e), (this.useSpriteSheet = !0);
        }
      }
      let S = n("5420");
      for (let e in S) {
        let t = S[e].map(e => {
          let t = new T(e),
            n = t.surrogates,
            s = t.uniqueName;
          if (
            (t.setSpriteSheetIndex(t.hasDiversity ? g++ : m++),
            (_[n] = s),
            0 > n.indexOf("‍"))
          ) {
            let e = n.replace("️", "");
            e !== n && (_[e] = s);
          }
          for (let e of t.names) (l[e] = t), (f[e] = n);
          let i = t.diversityChildren;
          for (let t in i) {
            let n = i[t],
              s = n.surrogates;
            for (let e of n.names) (l[e] = n), (f[e] = s);
            if (!e.hasMultiDiversity) {
              let t = h[n.emojiObject.diversity[0]];
              for (let i of e.names) {
                let e = `${i}::skin-tone-${t + 1}`;
                (f[e] = s), (l[e] = n);
              }
            }
            _[s] = n.uniqueName;
          }
          return c.push(t), t;
        });
        d[e] = a.default.filterUnsupportedEmojis(t);
      }
      function C(e) {
        let t = _[e];
        return null != t
          ? { type: "emoji", surrogate: e, emojiName: `:${t}:` }
          : { type: "text", text: e };
      }
      let A = String.fromCodePoint(917631),
        N = String.fromCodePoint(127988),
        D = /^[\u{E0061}-\u{E007A}]$/u;
      function O(e, t) {
        if (!0 !== t && !y.test(e)) return [{ type: "text", text: e }];
        let n = "",
          s = [],
          i = e.match(I) ?? [];
        for (let e = 0; e < i.length; e++) {
          let t = i[e];
          if (null != n && "" !== n) {
            if (t === A) (t = n + t), (n = "");
            else if (D.test(t)) {
              n += t;
              continue;
            } else s.push(C(n)), (n = "");
          } else if (t === N) {
            n = t;
            continue;
          }
          let r = C(t);
          if (s.length > 0) {
            let e = s[s.length - 1];
            if ("text" === r.type && "text" === e.type) {
              e.text += r.text;
              continue;
            }
          }
          s.push(r);
        }
        return null != n && "" !== n && s.push(C(n)), s;
      }
      function R(e) {
        let t =
          arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "";
        return Object.prototype.hasOwnProperty.call(f, e) ? f[e] : t;
      }
      var P = {
        getDefaultDiversitySurrogate: function () {
          return u;
        },
        setDefaultDiversitySurrogate: function (e) {
          u = null != e && "" !== e ? e : null;
        },
        getCategories: function () {
          return Object.keys(d);
        },
        getByName: function (e) {
          return Object.prototype.hasOwnProperty.call(l, e) ? l[e] : null;
        },
        getByCategory: function (e) {
          return d[e];
        },
        translateInlineEmojiToSurrogates: function (e) {
          return e.replace(p, (e, t) => R(t, e));
        },
        maybeTranslateSurrogatesToInlineEmoji: function (e) {
          if (!y.test(e)) return null;
          let t = O(e, !0)
            .map(e => ("text" === e.type ? e.text : e.emojiName))
            .join("");
          return t === e ? null : t;
        },
        findInlineEmojisFromSurrogates: O,
        translateSurrogatesToInlineEmoji: function (e) {
          return O(e)
            .map(e => ("text" === e.type ? e.text : e.emojiName))
            .join("");
        },
        convertNameToSurrogate: R,
        convertSurrogateToName: function (e) {
          let t =
              !(arguments.length > 1) ||
              void 0 === arguments[1] ||
              arguments[1],
            n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : "",
            s = n;
          return (
            Object.prototype.hasOwnProperty.call(_, e) && (s = _[e]),
            t ? `:${s}:` : s
          );
        },
        convertShortcutToName: function (e) {
          let t =
              !(arguments.length > 1) ||
              void 0 === arguments[1] ||
              arguments[1],
            n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : "",
            s = n;
          return (
            Object.prototype.hasOwnProperty.call(v, e) && (s = v[e]),
            t ? `:${s}:` : s
          );
        },
        forEach: e => i().each(c, e),
        all: () => c,
        numDiversitySprites: g,
        numNonDiversitySprites: m,
        EMOJI_NAME_RE: /^:([^\s:]+?(?:::skin-tone-\d)?):/,
        EMOJI_NAME_AND_DIVERSITY_RE: p,
        EMOJI_SHORTCUT_RE:
          /^(>:\(|>:\-\(|>=\(|>=\-\(|:"\)|:\-"\)|="\)|=\-"\)|<\/3|<\\3|:\-\\|:\-\/|=\-\\|=\-\/|:'\(|:'\-\(|:,\(|:,\-\(|='\(|='\-\(|=,\(|=,\-\(|:\(|:\-\(|=\(|=\-\(|<3|♡|\]:\(|\]:\-\(|\]=\(|\]=\-\(|o:\)|O:\)|o:\-\)|O:\-\)|0:\)|0:\-\)|o=\)|O=\)|o=\-\)|O=\-\)|0=\)|0=\-\)|:'D|:'\-D|:,D|:,\-D|='D|='\-D|=,D|=,\-D|:\*|:\-\*|=\*|=\-\*|x\-\)|X\-\)|:\||:\-\||=\||=\-\||:o|:\-o|:O|:\-O|=o|=\-o|=O|=\-O|:@|:\-@|=@|=\-@|:D|:\-D|=D|=\-D|:'\)|:'\-\)|:,\)|:,\-\)|='\)|='\-\)|=,\)|=,\-\)|:\)|:\-\)|=\)|=\-\)|\]:\)|\]:\-\)|\]=\)|\]=\-\)|:,'\(|:,'\-\(|;\(|;\-\(|=,'\(|=,'\-\(|:P|:\-P|=P|=\-P|8\-\)|B\-\)|,:\(|,:\-\(|,=\(|,=\-\(|,:\)|,:\-\)|,=\)|,=\-\)|:s|:\-S|:z|:\-Z|:\$|:\-\$|=s|=\-S|=z|=\-Z|=\$|=\-\$|;\)|;\-\))/,
        hasSurrogates: function (e) {
          return i()
            .toArray(e)
            .some(e => null != _[e]);
        },
      };
    },
    680727: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        });
      var s = n("661223"),
        i = n("312916"),
        r = n("152551");
      let a = { captionsById: new Map() },
        o = a,
        u = !1,
        d = null;
      class l extends s.default.PersistedStore {
        static #e = (this.displayName = "EmojiCaptionsStore");
        static #t = (this.persistKey = "EmojiCaptionsStore");
        initialize(e) {
          o = null != e ? { captionsById: new Map(e.captionsById) } : a;
        }
        getState() {
          return o;
        }
        getCaptionsForEmojiById(e) {
          let { emojiId: t } = e;
          return o.captionsById.get(t) ?? [];
        }
        getIsFetching() {
          return u;
        }
        getEmojiCaptionsTTL() {
          return d;
        }
        hasPersistedState() {
          return o.captionsById.size > 0;
        }
        clear() {
          (o = a), (u = !1), (d = null);
        }
      }
      var f = new l(i.default, {
        LOGOUT: function () {
          (o = a), (u = !1), (d = null);
        },
        EMOJI_CAPTIONS_FETCH: function (e) {
          let {} = e;
          !u && (u = !0);
        },
        EMOJI_CAPTIONS_FETCH_SUCCESS: function (e) {
          let { emojiCaptions: t } = e;
          (o.captionsById = new Map(Object.entries(t))),
            (u = !1),
            (d = Date.now() + 360 * r.default.Millis.MINUTE);
        },
        EMOJI_CAPTIONS_FETCH_ERROR: function (e) {
          let { is4XXError: t } = e;
          u = !1;
          d = Date.now() + (t ? 10 : 1) * r.default.Millis.MINUTE;
        },
        POST_CONNECTION_OPEN: function (e) {
          let {} = e;
          u = !1;
        },
      });
    },
    84053: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var s = n("661223"),
        i = n("312916");
      let r = { topEmojisByGuildId: {} },
        a = r,
        o = {};
      class u extends s.default.PersistedStore {
        static #e = (this.displayName = "TopEmojiStore");
        static #t = (this.persistKey = "TopEmojiStore");
        initialize(e) {
          a = e ?? r;
        }
        getState() {
          return a;
        }
        getTopEmojiIdsByGuildId(e) {
          return a.topEmojisByGuildId[e];
        }
        getIsFetching(e) {
          return o[e];
        }
      }
      var d = new u(i.default, {
        LOGOUT: function () {
          (a = r), (o = {});
        },
        TOP_EMOJIS_FETCH: function (e) {
          let { guildId: t } = e;
          o[t] = !0;
        },
        TOP_EMOJIS_FETCH_SUCCESS: function (e) {
          let { guildId: t, topEmojisMetadata: n } = e;
          (a.topEmojisByGuildId[t] = n.map(e => e.emojiId)), (o[t] = !1);
        },
      });
    },
    62577: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          buildEmojiColorPalette: function () {
            return u;
          },
          buildPlatformedThemedEmojiColorPalette: function () {
            return o;
          },
        });
      var s = n("490884"),
        i = n("567746"),
        r = n("134562");
      let a = e => {
          let { colors: t, saturationFactor: n = 1 } = e;
          if (null == t || t.length < 1) return null;
          let r = (0, i.findColorByHsv)(t),
            a = s.default.parseString("#ffffff");
          if (null == a) return null;
          let o = s.default.parseString("#36393e");
          if (null == o) return null;
          let u = s.default.parseString(r);
          if (null == u) return null;
          let d = (0, i.rawRgbToHsl)(u.red, u.blue, u.green),
            l =
              (0, i.getAccessibleColor)({
                colors: [(0, i.getColorLightnessAdjusted)(u, 0.6, !0), a],
                ratio: 3,
                saturationFactor: n,
              }) ?? u,
            f =
              (0, i.getAccessibleColor)({
                colors: [(0, i.getColorLightnessAdjusted)(u, 0.6, !1), o],
                ratio: 5,
                saturationFactor: n,
              }) ?? u,
            _ = (0, i.getAccessibleColor)({
              colors: [u, a],
              ratio: 7,
              saturationFactor: n,
            }),
            c = (0, i.getAccessibleColor)({
              colors: [u, o],
              ratio: 7,
              saturationFactor: n,
            });
          return {
            LIGHT: {
              accentColor: _?.toHexString(),
              backgroundColor: (0, i.getSaturatedColorHex)({
                colorRGB: l,
                saturationFactor: n,
              }),
              highlightColor: u?.toHexString(),
              opacity: d?.saturation < 0.1 ? 0.35 : 0.1,
            },
            DARK: {
              accentColor: c?.toHexString(),
              backgroundColor: (0, i.getSaturatedColorHex)({
                colorRGB: f,
                saturationFactor: n,
              }),
              highlightColor: u?.toHexString(),
              opacity: d?.saturation < 0.1 ? 0.5 : 0.2,
            },
          };
        },
        o = e => {
          let {
              colors: t,
              saturationFactor: n = 1,
              shouldProcessMobileColors: s = !1,
            } = e,
            i = a({ colors: t, saturationFactor: n });
          return r.default.applyPlatformToThemedEmojiColorPalette({
            palette: i,
            shouldProcessMobileColors: s,
          });
        },
        u = (e, t, n) => {
          if (null == e || e.length < 1) return null;
          let s = o({ colors: e, saturationFactor: t }),
            i = n ? s?.DARK : s?.LIGHT;
          return {
            backgroundColor: i?.backgroundColor,
            accentColor: i?.accentColor,
            highlightColor: i?.highlightColor,
            opacity: i?.opacity ?? 0.15,
          };
        };
    },
    433848: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          MAX_TIMEOUT_FOR_JITTER: function () {
            return A;
          },
          MESSAGE_SCAN_TIMEOUT: function () {
            return C;
          },
          default: function () {
            return X;
          },
        });
      var s = n("952639"),
        i = n.n(s),
        r = n("605906"),
        a = n.n(r),
        o = n("312916"),
        u = n("963694"),
        d = n("822534"),
        l = n("416463"),
        f = n("262047"),
        _ = n("475232"),
        c = n("731865"),
        g = n("162256"),
        m = n("232733"),
        h = n("632706"),
        E = n("84819"),
        p = n("894703"),
        v = n("430458"),
        y = n("615538"),
        I = n("121880"),
        T = n("467006"),
        S = n("746835");
      let C = 3e3,
        A = 800,
        N = {};
      function D(e) {
        return `${e.channel_id}:${e.id}`;
      }
      function O() {
        Object.values(N).forEach(e => {
          let { timeout: t } = e;
          clearTimeout(t);
        }),
          (N = {});
      }
      function R(e, t) {
        if (null == e.id || null == e.channel_id) return;
        let n = D(e);
        if (null != N[n]) {
          let { timeout: s } = N[n];
          return (
            (function (e, t) {
              let { setAt: n } = N[D(e)];
              if (t === y.TimeoutCancelSource.UPDATE) {
                let t = e.attachments ?? [],
                  n = e.embeds ?? [],
                  s = t.filter(e =>
                    (0, y.isMediaObscured)(
                      { type: y.ObscuredMediaTypes.Attachment, media: e },
                      !0
                    )
                  ),
                  i = n.filter(e =>
                    (0, y.isMediaObscured)(
                      { type: y.ObscuredMediaTypes.Embed, media: e },
                      !0
                    )
                  );
                (0, y.trackExplicitMediaScanComplete)({
                  messageId: e.id,
                  channelId: e.channel_id,
                  numOfAttachments: t.length,
                  numOfEmbeds: n.length,
                  numOfExplicitAttachments: s.length,
                  numOfExplicitEmbeds: i.length,
                });
              }
              (0, y.trackScanTiming)(n, t);
            })(e, t),
            clearTimeout(s),
            delete N[n],
            !0
          );
        }
        return !1;
      }
      let P = (e, t) => {
        if (0 !== e.length) {
          if (t) {
            (0, p.sendMultiChannelMessagesForScanning)(e);
            return;
          }
          (0, p.sendMessagesForScanning)(
            e[0].channel_id,
            e.map(e => e.id)
          );
        }
      };
      function b(e, t) {
        let { forceBatchScan: n = !1, jitter: s = !1 } = t ?? {};
        e.forEach(e => {
          let t = D(e);
          null == N[t] &&
            (N[t] = {
              setAt: Date.now(),
              timeout: setTimeout(() => {
                !(function (e) {
                  if (R(e, y.TimeoutCancelSource.TIMEOUT)) {
                    let { attachmentIds: t, embedIds: n } = U(
                      g.default.getMessage(e.channel_id, e.id)
                    );
                    (0, y.trackScanningTimedOut)({
                      channelId: e.channel_id,
                      messageId: e.id,
                      attachmentIds: t,
                      embedIds: n,
                    }),
                      o.default.dispatch({
                        type: "MESSAGE_EXPLICIT_CONTENT_SCAN_TIMEOUT",
                        messageId: e.id,
                        channelId: e.channel_id,
                      });
                  }
                })(e);
              }, C),
            });
        });
        let i = n || new Set(e.map(e => e.channel_id)).size > 1;
        s
          ? setTimeout(() => {
              P(
                e.filter(e => null != N[D(e)]),
                i
              );
            }, Math.random() * A)
          : P(e, i);
      }
      let M = e => null == e.content_scan_version || e.content_scan_version < 1,
        V = e => {
          var t;
          let n =
            null != (t = e).content_scan_version
              ? t.content_scan_version
              : null != t.contentScanVersion
                ? t.contentScanVersion
                : null;
          return (
            !(
              (e.video?.width === 0 && e.video?.height === 0) ||
              (e.thumbnail?.width === 0 && e.thumbnail?.height === 0) ||
              (e.image?.width === 0 && e.image?.height === 0) ||
              ("images" in e &&
                e.images?.some(e => 0 === e.width && 0 === e.height))
            ) &&
            (null == n || n < 1)
          );
        };
      function L(e) {
        let { attachmentIds: t, embedIds: n } = U(e);
        return t.length > 0 || n.length > 0;
      }
      function k(e) {
        return e.reduce((e, t) => {
          null == e[t.channel_id] &&
            (e[t.channel_id] = {
              numOfAttachments: 0,
              numOfAttachmentsPendingScan: 0,
              numOfEmbeds: 0,
              numOfEmbedsPendingScan: 0,
            });
          let n = e[t.channel_id];
          return (
            (n.numOfAttachments += t.attachments?.length ?? 0),
            (n.numOfEmbeds += t.embeds?.length ?? 0),
            (n.numOfAttachmentsPendingScan +=
              t.attachments?.filter(M).length ?? 0),
            (n.numOfEmbedsPendingScan += t?.embeds?.filter(V).length ?? 0),
            { ...e, [t.channel_id]: n }
          );
        }, {});
      }
      function w(e) {
        return (
          null != e &&
          ((null != e.attachments && e.attachments.length > 0) ||
            (null != e.embeds && e.embeds.length > 0))
        );
      }
      function U(e) {
        let t = e?.attachments?.length ?? 0,
          n = e?.embeds?.length ?? 0;
        if (0 === t && 0 === n) return { attachmentIds: [], embedIds: [] };
        let s = e?.attachments?.filter(M) ?? [],
          i = e?.embeds?.filter(V) ?? [];
        return {
          attachmentIds: s.map(e => e.id).filter(Boolean),
          embedIds: i.map((e, t) => `embed_${t}`).filter(Boolean),
        };
      }
      function G(e, t) {
        let { messagesPendingScan: n, attributesByChannelId: s } = (function (
          e
        ) {
          let t = e.filter(e => w(e) && (0, y.shouldRedactExplicitContent)(e)),
            n = e
              .map(e => {
                if (
                  null != e &&
                  "referenced_message" in e &&
                  null != e.referenced_message &&
                  w(e.referenced_message) &&
                  (0, y.shouldRedactExplicitContent)(e.referenced_message)
                )
                  return e.referenced_message;
              })
              .filter(function (e) {
                return null != e;
              });
          n.length > 0 && (t = [...t, ...n]);
          let s = a()(
            t,
            (e, t) => e.id === t.id && e.channel_id === t.channel_id
          );
          return {
            messagesPendingScan: s.filter(e => L(e)),
            attributesByChannelId: k(s),
          };
        })(e);
        return (
          E.default.entries(s).forEach(e => {
            let [t, n] = e;
            (0, y.trackExplicitMediaRedactableMessagedLoaded)({
              channelId: t,
              numOfAttachments: n.numOfAttachments,
              numOfAttachmentsPendingScan: n.numOfAttachmentsPendingScan,
              numOfEmbeds: n.numOfEmbeds,
              numOfEmbedsPendingScan: n.numOfEmbedsPendingScan,
            });
          }),
          !!(n.length > 0) && (b(n, t), !0)
        );
      }
      function F(e) {
        let { message: t } = e;
        if (
          !(0, v.isEligibleForExplicitMediaRedaction)() ||
          null == t.channel_id ||
          null == t.id ||
          t.author?.id === f.default.getId() ||
          (null == t.embeds && null == t.attachments)
        )
          return !1;
        if (!L(t)) {
          let e =
            g.default.getMessage(t.channel_id, t.id) ??
            I.default.getMessage(t.id, t.channel_id) ??
            l.default.getMessage(t.channel_id, t.id)?.message;
          null != e &&
            !L((0, d.updateMessageRecord)(e, t)) &&
            R(e, y.TimeoutCancelSource.UPDATE);
        }
        let n = m.default.getChannelId(),
          s = _.default.getCurrentSidebarChannelId(n);
        if (!(t.channel_id === n || t.channel_id === s)) return !1;
        let i = g.default.getMessage(t.channel_id, t.id);
        return null != i && G([i]);
      }
      function B(e) {
        let {
          channelId: t,
          message: n,
          optimistic: s,
          isPushNotification: i,
        } = e;
        if (
          !(0, v.isEligibleForExplicitMediaRedaction)() ||
          s ||
          i ||
          null == t ||
          n.author?.id === f.default.getId()
        )
          return !1;
        let r = m.default.getChannelId(),
          a = _.default.getCurrentSidebarChannelId(r),
          o = t === r || t === a,
          u = c.default.getChannel(t);
        if (!o) return !1;
        let d = u?.isPrivate() ?? !0,
          l = u?.memberCount == null || u?.memberCount > 100;
        return G([n], { jitter: d && l });
      }
      function H(e) {
        let { channelId: t, messages: n } = e;
        if (
          !(0, v.isEligibleForExplicitMediaRedaction)() ||
          null == t ||
          null == n
        )
          return !1;
        let s = m.default.getChannelId(),
          i = _.default.getCurrentSidebarChannelId(s);
        return (t === s || t === i) && G(n);
      }
      function x(e) {
        let { messages: t } = e;
        if (!(0, v.isEligibleForExplicitMediaRedaction)() || null == t)
          return !1;
        let n = i()(t);
        return G(
          a()(n, (e, t) => e.id === t.id && e.channel_id === t.channel_id)
        );
      }
      function Y(e) {
        let { guildId: t, threads: n } = e;
        return (
          !!(null != n && (0, v.isEligibleForExplicitMediaRedaction)()) &&
          h.default.getGuildId() === t &&
          G(E.default.keys(n).map(e => n[e].first_message))
        );
      }
      function j(e) {
        let { guildId: t, firstMessages: n } = e;
        return (
          !!(null != n && (0, v.isEligibleForExplicitMediaRedaction)()) &&
          h.default.getGuildId() === t &&
          G(n, { forceBatchScan: !0 })
        );
      }
      function K(e) {
        let { channelId: t } = e;
        return (
          !!(null != t && (0, v.isEligibleForExplicitMediaRedaction)()) &&
          t === m.default.getChannelId() &&
          $(t)
        );
      }
      function W(e) {
        let { settings: t, local: n } = e;
        if (
          !(0, v.isEligibleForExplicitMediaRedaction)() ||
          !n ||
          t.type !== S.UserSettingsTypes.PRELOADED_USER_SETTINGS
        )
          return !1;
        let s = m.default.getChannelId();
        return null != s && $(s);
      }
      function z(e) {
        let { channelId: t, chatOpen: n } = e;
        return !!(0, v.isEligibleForExplicitMediaRedaction)() && !!n && $(t);
      }
      function $(e) {
        let t = g.default.getMessages(e);
        return (
          0 !== t.length &&
          (function (e) {
            let { messagesPendingScan: t, attributesByChannelId: n } =
              (function (e) {
                let t = e.filter(
                    e => w(e) && (0, y.shouldRedactExplicitContent)(e)
                  ),
                  n = e
                    .map(e => {
                      if (
                        T.MessageTypesWithLazyLoadedReferences.has(e.type) &&
                        null != e.messageReference
                      ) {
                        let t = l.default.getMessageByReference(
                          e.messageReference
                        );
                        if (
                          t.state === l.ReferencedMessageState.LOADED &&
                          null != t.message &&
                          w(t.message) &&
                          (0, y.shouldRedactExplicitContent)(t.message)
                        )
                          return t.message;
                      }
                    })
                    .filter(function (e) {
                      return null != e;
                    });
                n.length > 0 && (t = [...t, ...n]);
                let s = a()(
                  t,
                  (e, t) => e.id === t.id && e.channel_id === t.channel_id
                );
                return {
                  messagesPendingScan: s.filter(e => L(e)),
                  attributesByChannelId: k(s),
                };
              })(e);
            return (
              E.default.entries(n).forEach(e => {
                let [t, n] = e;
                (0, y.trackExplicitMediaRedactableMessagedLoaded)({
                  channelId: t,
                  numOfAttachments: n.numOfAttachments,
                  numOfAttachmentsPendingScan: n.numOfAttachmentsPendingScan,
                  numOfEmbeds: n.numOfEmbeds,
                  numOfEmbedsPendingScan: n.numOfEmbedsPendingScan,
                });
              }),
              !!(t.length > 0) && (b(t), !0)
            );
          })(t)
        );
      }
      class q extends u.default {
        constructor(...e) {
          super(...e),
            (this.actions = {
              LOAD_MESSAGES_SUCCESS: H,
              LOAD_FORUM_POSTS: Y,
              LOAD_THREADS_SUCCESS: j,
              LOAD_ARCHIVED_THREADS_SUCCESS: j,
              MESSAGE_CREATE: B,
              MESSAGE_UPDATE: F,
              LOGOUT: O,
              SEARCH_FINISH: x,
              MOD_VIEW_SEARCH_FINISH: x,
              CHANNEL_SELECT: K,
              LOAD_PINNED_MESSAGES_SUCCESS: x,
              USER_SETTINGS_PROTO_UPDATE: W,
              CHANNEL_RTC_UPDATE_CHAT_OPEN: z,
            });
        }
      }
      var X = new q();
    },
    894703: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          reportFailedSendFalsePositive: function () {
            return a;
          },
          reportFalsePositive: function () {
            return r;
          },
          sendMessagesForScanning: function () {
            return o;
          },
          sendMultiChannelMessagesForScanning: function () {
            return u;
          },
        });
      var s = n("454836"),
        i = n("467006");
      function r(e, t, n, r) {
        return s.default.post({
          url: i.Endpoints.EXPLICIT_MEDIA_REPORT_FALSE_POSITIVE,
          body: {
            channel_id: e,
            message_id: t,
            attachment_ids: n,
            embed_ids: r,
          },
        });
      }
      function a(e, t, n, r) {
        return s.default.post({
          url: i.Endpoints.EXPLICIT_MEDIA_SENDER_REPORT_FALSE_POSITIVE,
          body: {
            channel_id: e,
            message_id: t,
            attachment_ids: n,
            filenames: r,
          },
        });
      }
      function o(e, t) {
        return s.default.patch({
          url: i.Endpoints.EXPLICIT_MEDIA_SCAN_MESSAGES(e),
          body: { message_ids: t },
        });
      }
      function u(e) {
        let t = e.map(e => ({ channel_id: e.channel_id, message_id: e.id }));
        return s.default.patch({
          url: i.Endpoints.EXPLICIT_MEDIA_SCAN_MULTI_CHANNEL_MESSAGES,
          body: { messages: t },
        });
      }
    },
    64488: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          EXPLICIT_MEDIA_MIN_HEIGHT: function () {
            return a;
          },
          EXPLICIT_MEDIA_MIN_WIDTH: function () {
            return r;
          },
          SUPPORTED_EMBED_TYPES: function () {
            return i;
          },
        });
      var s = n("980595");
      let i = new Set([
          s.MessageEmbedTypes.IMAGE,
          s.MessageEmbedTypes.VIDEO,
          s.MessageEmbedTypes.GIFV,
        ]),
        r = 146,
        a = 212;
    },
    430458: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          isEligibleForExplicitMediaRedaction: function () {
            return a;
          },
          useIsEligibleForExplicitMediaRedaction: function () {
            return o;
          },
        });
      var s = n("516086");
      let i = (0, s.createExperiment)({
          kind: "user",
          id: "2023-08_explicit_media_redaction",
          label: "Explicit Media Redaction",
          defaultConfig: { enabled: !1 },
          treatments: [
            {
              id: 1,
              label: "Enable explicit media redaction",
              config: { enabled: !0 },
            },
          ],
        }),
        r = (0, s.createExperiment)({
          kind: "user",
          id: "2023-08_explicit_media_redaction_teen",
          label: "Explicit Media Redaction for Teens",
          defaultConfig: { enabled: !1 },
          treatments: [
            {
              id: 1,
              label: "Enable explicit media redaction for teens",
              config: { enabled: !0 },
            },
          ],
        });
      function a() {
        let { enabled: e } = i.getCurrentConfig(
            { location: "686da2_1" },
            { autoTrackExposure: !0 }
          ),
          { enabled: t } = r.getCurrentConfig(
            { location: "686da2_1" },
            { autoTrackExposure: !0 }
          );
        return e || t;
      }
      function o() {
        let { enabled: e } = i.useExperiment(
            { location: "686da2_2" },
            { autoTrackExposure: !0 }
          ),
          { enabled: t } = r.useExperiment(
            { location: "686da2_2" },
            { autoTrackExposure: !0 }
          );
        return e || t;
      }
    },
    615538: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ObscuredMediaTypes: function () {
            return s;
          },
          TimeoutCancelSource: function () {
            return a;
          },
          TrackMediaRedactionActionType: function () {
            return i;
          },
          TrackMediaRedactionContext: function () {
            return r;
          },
          getExplicitContentSettingOrDefault: function () {
            return R;
          },
          getObscuredMediaForMessage: function () {
            return L;
          },
          getShouldObscureForSetting: function () {
            return P;
          },
          handleExplicitMediaScanTimeoutForMessage: function () {
            return H;
          },
          isExplicitMediaBelowConstraints: function () {
            return x;
          },
          isMediaObscured: function () {
            return V;
          },
          isPendingScan: function () {
            return k;
          },
          resolveDefaultSetting: function () {
            return O;
          },
          shouldRedactExplicitContent: function () {
            return b;
          },
          trackExplicitMediaRedactableMessagedLoaded: function () {
            return F;
          },
          trackExplicitMediaScanComplete: function () {
            return B;
          },
          trackMediaRedactionAction: function () {
            return w;
          },
          trackScanTiming: function () {
            return U;
          },
          trackScanningTimedOut: function () {
            return G;
          },
          updateExplicitContentSetting: function () {
            return M;
          },
        }),
        n("789020");
      var s,
        i,
        r,
        a,
        o,
        u,
        d,
        l,
        f = n("120739"),
        _ = n("310057"),
        c = n("31123"),
        g = n("618933"),
        m = n("416793"),
        h = n("362939"),
        E = n("731865"),
        p = n("606929"),
        v = n("871831"),
        y = n("328470"),
        I = n("984362"),
        T = n("433848"),
        S = n("430458"),
        C = n("64488"),
        A = n("467006"),
        N = n("907044");
      n("30175");
      let D = () => {
          let e = v.default.getCurrentUser();
          return e?.nsfwAllowed === !1
            ? _.ExplicitContentRedaction.BLUR
            : _.ExplicitContentRedaction.SHOW;
        },
        O = function () {
          let e =
              arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
          if (!e) return D();
          let n = h.ExplicitContentFilter.getSetting();
          return t
            ? n === N.ExplicitContentFilterTypes.FRIENDS_AND_NON_FRIENDS
              ? _.ExplicitContentRedaction.BLOCK
              : D()
            : n === N.ExplicitContentFilterTypes.NON_FRIENDS ||
                n === N.ExplicitContentFilterTypes.FRIENDS_AND_NON_FRIENDS
              ? _.ExplicitContentRedaction.BLOCK
              : D();
        },
        R = () => {
          let e = h.ExplicitContentSettings.getSetting();
          return {
            explicitContentGuilds:
              e.explicitContentGuilds ===
              _.ExplicitContentRedaction.UNSET_EXPLICIT_CONTENT_REDACTION
                ? O()
                : e.explicitContentGuilds,
            explicitContentNonFriendDm:
              e.explicitContentNonFriendDm ===
              _.ExplicitContentRedaction.UNSET_EXPLICIT_CONTENT_REDACTION
                ? O(!0)
                : e.explicitContentNonFriendDm,
            explicitContentFriendDm:
              e.explicitContentFriendDm ===
              _.ExplicitContentRedaction.UNSET_EXPLICIT_CONTENT_REDACTION
                ? O(!0, !0)
                : e.explicitContentFriendDm,
          };
        };
      function P(e) {
        return (
          e === _.ExplicitContentRedaction.BLUR ||
          e === _.ExplicitContentRedaction.BLOCK
        );
      }
      function b(e) {
        if (!(0, S.isEligibleForExplicitMediaRedaction)()) return !1;
        let t = v.default.getCurrentUser();
        if (null == t || e.author?.id === t.id) return !1;
        let {
            explicitContentGuilds: n,
            explicitContentFriendDm: s,
            explicitContentNonFriendDm: i,
          } = R(),
          r = E.default.getChannel(e.channel_id);
        if (null == r) return !1;
        if (r.isDM() || r.isGroupDM())
          return null != e.author &&
            p.default.getFriendIDs().includes(e.author.id)
            ? P(s)
            : P(i);
        return P(n);
      }
      let M = e => {
        let t = R();
        h.ExplicitContentSettings.updateSetting({ ...t, ...e });
      };
      function V(e, t) {
        if (!t) return !1;
        if (c.default.get("obscure_blur_effect_enabled")) return !0;
        switch (e.type) {
          case 1:
            return (0, I.hasFlag)(
              e.media.flags ?? 0,
              A.MessageEmbedFlags.CONTAINS_EXPLICIT_MEDIA
            );
          case 0:
            return (0, I.hasFlag)(
              e.media.flags ?? 0,
              A.MessageAttachmentFlags.CONTAINS_EXPLICIT_MEDIA
            );
          default:
            return !1;
        }
      }
      function L(e) {
        return b(e)
          ? {
              obscuredAttachments: e.attachments.filter(e =>
                V({ type: 0, media: e }, !0)
              ),
              obscuredEmbeds: e.embeds.filter(e =>
                V({ type: 1, media: e }, !0)
              ),
            }
          : { obscuredAttachments: [], obscuredEmbeds: [] };
      }
      function k(e) {
        return (
          !c.default.get("explicit_media_redaction_ignore_pending_scan") &&
          null == e
        );
      }
      function w(e) {
        let { action: t, channelId: n, messageId: s, context: i } = e;
        if (null == n || null == s) return;
        let r = E.default.getChannel(n);
        y.default.track(A.AnalyticEvents.EXPLICIT_MEDIA_ACTION, {
          action: t,
          guild_id: r?.guild_id,
          channel_id: n,
          message_id: s,
          user_is_underage: (0, m.isCurrentUserTeen)(),
          context: i,
        });
      }
      function U(e, t) {
        let n = Date.now() - e;
        g.default.increment({
          name: f.MetricEvents.EXPLICIT_MEDIA_SCAN_CLIENT_TIMING,
          tags: [
            `timingBucket:${Math.min(Math.floor(n / 1e3), 3)}`,
            `source:${t}`,
          ],
        });
      }
      function G(e) {
        let { channelId: t, messageId: n, attachmentIds: s, embedIds: i } = e;
        if (null == t || null == n) return;
        let r = E.default.getChannel(t);
        y.default.track(A.AnalyticEvents.EXPLICIT_MEDIA_SCAN_CLIENT_TIMED_OUT, {
          channel_id: t,
          guild_id: r?.guild_id,
          message_id: n,
          embed_ids: i,
          user_is_underage: (0, m.isCurrentUserTeen)(),
          scan_timeout_duration: T.MESSAGE_SCAN_TIMEOUT,
          attachment_ids_v2: s,
        }),
          g.default.increment({
            name: f.MetricEvents.EXPLICIT_MEDIA_SCAN_CLIENT_TIMED_OUT,
          });
      }
      function F(e) {
        let {
          channelId: t,
          numOfAttachments: n,
          numOfAttachmentsPendingScan: s,
          numOfEmbeds: i,
          numOfEmbedsPendingScan: r,
        } = e;
        if (null == t) return;
        let a = E.default.getChannel(t);
        y.default.track(
          A.AnalyticEvents.EXPLICIT_MEDIA_REDACTABLE_MESSAGES_LOADED,
          {
            channel_id: t,
            guild_id: a?.guild_id,
            num_of_attachments: n,
            num_of_attachments_pending_scan: s,
            num_of_embeds: i,
            num_of_embeds_pending_scan: r,
          }
        );
      }
      function B(e) {
        let {
          messageId: t,
          channelId: n,
          numOfAttachments: s,
          numOfExplicitAttachments: i,
          numOfEmbeds: r,
          numOfExplicitEmbeds: a,
        } = e;
        if (null == n) return;
        let o = E.default.getChannel(n);
        y.default.track(
          A.AnalyticEvents.EXPLICIT_MEDIA_RETROACTIVE_SCAN_COMPLETE,
          {
            message_id: t,
            channel_id: n,
            channel_type: o?.type,
            guild_id: o?.guild_id,
            num_of_attachments: s,
            num_of_explicit_attachments: i,
            num_of_embeds: r,
            num_of_explicit_embeds: a,
          }
        );
      }
      function H(e) {
        let t = e.attachments.map(
            e => (
              null == e.content_scan_version && (e.content_scan_version = -1), e
            )
          ),
          n = (e = e.set("attachments", t)).embeds.map(
            e => (
              null == e.contentScanVersion && (e.contentScanVersion = -1), e
            )
          );
        return (e = e.set("embeds", n));
      }
      ((o = s || (s = {}))[(o.Attachment = 0)] = "Attachment"),
        (o[(o.Embed = 1)] = "Embed"),
        ((u = i || (i = {})).EXPLICIT_MEDIA_LEARN_MORE_VIEWED =
          "explicit_media_learn_more_viewed"),
        (u.EXPLICIT_MEDIA_LEARN_MORE_CLICK_SETTINGS =
          "explicit_media_learn_more_click_settings"),
        (u.EXPLICIT_MEDIA_LEARN_MORE_CLICK_LEARN_MORE =
          "explicit_media_learn_more_click_learn_more"),
        (u.EXPLICIT_MEDIA_LEARN_MORE_CLICK_DISMISS =
          "explicit_media_learn_more_click_dismiss"),
        (u.EXPLICIT_MEDIA_LEARN_MORE_CLICK_FALSE_POSITIVE =
          "explicit_media_learn_more_click_false_positive"),
        (u.EXPLICIT_MEDIA_FALSE_POSITIVE_VIEWED =
          "explicit_media_false_positive_viewed"),
        (u.EXPLICIT_MEDIA_FALSE_POSITIVE_CLICK_CONFIRM =
          "explicit_media_false_positive_click_confirm"),
        (u.EXPLICIT_MEDIA_FALSE_POSITIVE_CLICK_CANCEL =
          "explicit_media_false_positive_click_cancel"),
        (u.EXPLICIT_MEDIA_SENDER_FALSE_POSITIVE_BUTTON_CLICKED =
          "explicit_media_sender_false_positive_button_clicked"),
        (u.EXPLICIT_MEDIA_FALSE_POSITIVE_CLYDE_MESSAGE_SENT =
          "explicit_media_false_positive_clyde_message_sent"),
        ((d = r || (r = {})).EXPLICIT_MEDIA_OBSCURED_FALSE_POSITIVE_FLOW =
          "explicit_media_obscured_false_positive_flow"),
        (d.EXPLICIT_MEDIA_SENDER_FALSE_POSITIVE_FLOW =
          "explicit_media_sender_false_positive_flow"),
        (d.EXPLICIT_MEDIA_MESSAGE_SEND_BLOCKED =
          "explicit_media_message_send_blocked"),
        (d.EXPLICIT_MEDIA_ADD_MEDIA_TO_FORUM_POST_BLOCKED =
          "explicit_media_add_media_to_forum_post_blocked"),
        ((l = a || (a = {})).UPDATE = "update"),
        (l.TIMEOUT = "timeout");
      let x = (e, t) =>
        null != e &&
        null != t &&
        (e <= C.EXPLICIT_MEDIA_MIN_WIDTH || t <= C.EXPLICIT_MEDIA_MIN_HEIGHT);
    },
    121880: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var s = n("661223"),
        i = n("312916"),
        r = n("822534"),
        a = n("430458"),
        o = n("615538");
      let u = {};
      function d(e) {
        return `${e.channel_id}:${e.id}`;
      }
      function l(e) {
        return (
          !!(0, a.isEligibleForExplicitMediaRedaction)() &&
          null != e.messages &&
          ((u = e.messages.reduce(
            (e, t) => (
              t.forEach(t => {
                e[d(t)] = (0, r.createMessageRecord)(t);
              }),
              e
            ),
            {}
          )),
          !0)
        );
      }
      function f() {
        u = {};
      }
      class _ extends s.default.Store {
        static #e = (this.displayName = "SearchMessageStore");
        getMessage(e, t) {
          return u[d({ id: e, channel_id: t })];
        }
      }
      var c = new _(i.default, {
        SEARCH_FINISH: l,
        MOD_VIEW_SEARCH_FINISH: l,
        MESSAGE_UPDATE: function (e) {
          let { message: t } = e;
          if (
            !(0, a.isEligibleForExplicitMediaRedaction)() ||
            null == t.id ||
            null == t.channel_id
          )
            return !1;
          let n = d(t),
            s = u[n];
          return (
            null != s &&
            ((u[n] = (0, r.updateMessageRecord)(s, {
              attachments: t.attachments,
              embeds: t.embeds,
            })),
            !0)
          );
        },
        LOGOUT: function () {
          (function () {
            u = {};
          })();
        },
        CONNECTION_OPEN: function () {
          (function () {
            u = {};
          })();
        },
        MESSAGE_EXPLICIT_CONTENT_SCAN_TIMEOUT: function (e) {
          let { messageId: t, channelId: n } = e,
            s = d({ id: t, channel_id: n }),
            i = u[s];
          null != i &&
            (u[s] = (0, o.handleExplicitMediaScanTimeoutForMessage)(i));
        },
      });
    },
    303152: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          DELAY_BEFORE_SUGGESTIONS_MS: function () {
            return u;
          },
          MAX_NUM_SUGGESTED_STICKERS: function () {
            return a;
          },
          MAX_NUM_USER_INPUT_WORDS: function () {
            return o;
          },
          REQUEST_THROTTLE_DURATION_MS: function () {
            return l;
          },
          SUGGESTIONS_SHOWED_INSTRUMENTATION_RATE_LIMIT_MS: function () {
            return d;
          },
        });
      var s,
        i,
        r = n("152551");
      let a = 4,
        o = 5,
        u = 350,
        d = r.default.Millis.MINUTE,
        l = 2 * r.default.Millis.MINUTE;
      (s = i || (i = {}))[(s.STICKER = 0)] = "STICKER";
    },
    775218: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getQueriesFromUserInput: function () {
            return f;
          },
          removePunctuation: function () {
            return l;
          },
          throttledTrackExpressionSuggestionDisplayed: function () {
            return _;
          },
        });
      var s = n("299608"),
        i = n.n(s),
        r = n("328470"),
        a = n("303152"),
        o = n("467006");
      let u = /(!|\.|;|,|-|—|–|\?|"|')/g,
        d = /(\n|\t|\s)/g,
        l = e => e.replace(u, "").replace(d, " "),
        f = e => (null == e ? [] : l(e).trim().split(" ")),
        _ = i()(
          e => {
            r.default.track(o.AnalyticEvents.AUTO_SUGGEST_DISPLAYED, {
              suggestion_trigger: e,
            });
          },
          a.SUGGESTIONS_SHOWED_INSTRUMENTATION_RATE_LIMIT_MS,
          { leading: !0, trailing: !1 }
        );
    },
    677700: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
          getGuildIdForGenericRedirect: function () {
            return u;
          },
        });
      var s = n("661223"),
        i = n("632706"),
        r = n("445345"),
        a = n("467006");
      function o(e) {
        let t = (0, s.useStateFromStores)([i.default], () =>
          i.default.getGuildId()
        );
        return null != t ? t : e.getGuildId();
      }
      function u(e) {
        return i.default.getGuildId() !== a.FAVORITES
          ? e.getGuildId()
          : r.default.isFavorite(e.id) ||
              (e.isThread() && r.default.isFavorite(e.parent_id))
            ? a.FAVORITES
            : e.getGuildId();
      }
    },
    766667: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          connectToRemote: function () {
            return y;
          },
          disconnectRemote: function () {
            return v;
          },
          fetchDevices: function () {
            return A;
          },
          persistSelectedDeviceId: function () {
            return N;
          },
          remoteAudioSettingsUpdate: function () {
            return S;
          },
          remoteDisconnect: function () {
            return T;
          },
          remoteVoiceStateUpdate: function () {
            return I;
          },
          transferToPlayStation: function () {
            return R;
          },
        }),
        n("653041");
      var s = n("328779"),
        i = n("7768"),
        r = n("454836"),
        a = n("312916"),
        o = n("992888"),
        u = n("618493"),
        d = n("407807"),
        l = n("706319"),
        f = n("328470"),
        _ = n("281925"),
        c = n("954671"),
        g = n("983325"),
        m = n("958236"),
        h = n("467006"),
        E = n("30175");
      function p(e, t) {
        f.default.track(h.AnalyticEvents.REMOTE_COMMAND_SENT, {
          command_type: e,
          remote_platform: l.default.getSessionById(t)?.clientInfo?.os,
        });
      }
      async function v() {
        let e = g.default.getAwaitingRemoteSessionInfo(),
          t = e?.nonce;
        a.default.dispatch({ type: "REMOTE_SESSION_DISCONNECT" });
        let n = [];
        (e?.type === h.PlatformTypes.PLAYSTATION ||
          e?.type === h.PlatformTypes.PLAYSTATION_STAGING) &&
          e?.commandId != null &&
          e?.deviceId != null &&
          n.push(O(e.type, e.deviceId, e.commandId)),
          null != t &&
            n.push(
              (function (e) {
                return r.default.delete({
                  url: h.Endpoints.CONNECT_REQUEST(e),
                });
              })(t)
            );
        try {
          await Promise.all(n);
        } catch (e) {
          o.default.show({
            title: E.default.Messages.CANCEL_TRANSFER_VOICE_FAILED_TITLE,
            body: E.default.Messages.CANCEL_TRANSFER_VOICE_FAILED_BODY,
          });
        }
      }
      function y(e) {
        a.default.dispatch({ type: "REMOTE_SESSION_CONNECT", sessionId: e });
      }
      function I(e, t) {
        let { selfMute: n, selfDeaf: s } = t;
        a.default.dispatch({
          type: "REMOTE_COMMAND",
          sessionId: e,
          payload: { type: "VOICE_STATE_UPDATE", self_mute: n, self_deaf: s },
        }),
          p("VOICE_STATE_UPDATE", e);
      }
      function T(e) {
        a.default.dispatch({
          type: "REMOTE_COMMAND",
          sessionId: e,
          payload: { type: "DISCONNECT" },
        }),
          p("DISCONNECT", e),
          v();
      }
      function S(e, t, n, s) {
        let i = (0, u.coerceAudioContextForProto)(n);
        null != i &&
          (a.default.dispatch({
            type: "REMOTE_COMMAND",
            sessionId: e,
            payload: { type: "AUDIO_SETTINGS_UPDATE", context: i, id: t, ...s },
          }),
          p("AUDIO_SETTINGS_UPDATE", e));
      }
      async function C() {
        let e;
        try {
          let t =
            null != d.default.getRTCConnectionId()
              ? i.ConsoleHandoffType.TRANSFER_EXISTING_CALL
              : i.ConsoleHandoffType.CREATE_NEW_CALL;
          e = (
            await r.default.post({
              url: h.Endpoints.CONNECT_REQUEST_CREATE,
              body: { analytics_properties: { handoff_type: t } },
            })
          ).body.nonce;
        } catch (e) {
          _.default.captureException(e);
        }
        return e;
      }
      async function A(e) {
        let t;
        a.default.dispatch({
          type: "GAME_CONSOLE_FETCH_DEVICES_START",
          platform: e,
        });
        try {
          t = await r.default.get({ url: h.Endpoints.CONSOLES_DEVICES(e) });
        } catch (t) {
          throw (
            (a.default.dispatch({
              type: "GAME_CONSOLE_FETCH_DEVICES_FAIL",
              platform: e,
              error: t,
            }),
            t)
          );
        }
        let n = t.body.devices;
        return (
          a.default.dispatch({
            type: "GAME_CONSOLE_FETCH_DEVICES_SUCCESS",
            platform: e,
            devices: n,
          }),
          n
        );
      }
      function N(e, t) {
        a.default.dispatch({
          type: "GAME_CONSOLE_SELECT_DEVICE",
          platform: e,
          deviceId: t,
        });
      }
      async function D(e, t, n, i) {
        let o;
        a.default.dispatch({
          type: "GAME_CONSOLE_DEVICE_SEND_COMMAND_START",
          platform: e,
        });
        try {
          o = await r.default.post({
            url: h.Endpoints.CONSOLES_DEVICES_COMMANDS(e, t),
            body: {
              command: s.ConsoleCommands.CONNECT_VOICE,
              channel_id: n.id,
              guild_id: n.guild_id,
              nonce: i,
            },
          });
        } catch (t) {
          throw (
            (a.default.dispatch({
              type: "GAME_CONSOLE_DEVICE_SEND_COMMAND_FAIL",
              platform: e,
              error: t,
            }),
            t)
          );
        }
        let u = o.body.id;
        return (
          a.default.dispatch({
            type: "WAIT_FOR_REMOTE_SESSION",
            sessionType: e,
            nonce: i,
            channelId: n.id,
            deviceId: t,
            commandId: u,
          }),
          u
        );
      }
      async function O(e, t, n) {
        a.default.dispatch({
          type: "GAME_CONSOLE_DEVICE_CANCEL_COMMAND_START",
          platform: e,
          deviceId: t,
          commandId: n,
        });
        try {
          await r.default.delete({
            url: h.Endpoints.CONSOLES_DEVICES_COMMAND(e, t, n),
          });
        } catch (s) {
          throw (
            (a.default.dispatch({
              type: "GAME_CONSOLE_DEVICE_CANCEL_COMMAND_FAIL",
              platform: e,
              deviceId: t,
              commandId: n,
              error: s,
            }),
            s)
          );
        }
        a.default.dispatch({
          type: "GAME_CONSOLE_DEVICE_CANCEL_COMMAND_SUCCESS",
          platform: e,
          deviceId: t,
          commandId: n,
        });
      }
      async function R(e, t, n) {
        await c.default.maybeShowPTTAlert(e), await v();
        let s = await C();
        await D(e, t, n, s), (0, m.default)(n.id, e);
      }
    },
    954671: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
      var s = n("120505").default;
    },
    747939: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          GAME_CONSOLE_ALERT_MODAL_LOCATION: function () {
            return E;
          },
          GAME_CONSOLE_SESSIONS: function () {
            return m;
          },
          GameConsoleCommandResultErrorCodes: function () {
            return i;
          },
          GameConsoleTypes: function () {
            return s;
          },
          PLAYSTATION_CLIENT_SCOPES: function () {
            return c;
          },
          PLAYSTATION_LINK_DEST_ORIGIN: function () {
            return _;
          },
          USER_ACTION_REQUIRED_ERROR_CODES: function () {
            return h;
          },
          XBOX_APP_WEB_LINK: function () {
            return d;
          },
          XBOX_CLIENT_SCOPES: function () {
            return f;
          },
          XBOX_HANDOFF_SEARCH_PARAMS: function () {
            return g;
          },
          XBOX_LINK_DEST_ORIGIN: function () {
            return l;
          },
          XBOX_URL_BASE: function () {
            return u;
          },
        }),
        n("216116"),
        n("78328"),
        n("815648");
      var s,
        i,
        r,
        a,
        o = n("467006");
      let u = "xbox://communitylinking/donut/audio",
        d = "https://www.xbox.com/en-US/apps/xbox-app-for-mobile",
        l = "https://login.live.com",
        f = [
          o.OAuth2Scopes.VOICE,
          o.OAuth2Scopes.DM_CHANNELS_READ,
          o.OAuth2Scopes.GUILDS,
          o.OAuth2Scopes.GUILDS_MEMBERS_READ,
          o.OAuth2Scopes.IDENTIFY,
          o.OAuth2Scopes.CONNECTIONS,
        ],
        _ = "https://my.account.sony.com",
        c = f,
        g = e => {
          let {
              guildId: t,
              channelName: n,
              guildName: s,
              channelId: i,
              muted: r,
              deafened: a,
              nonce: o,
            } = e,
            u = {
              channelid: i,
              guildid: t,
              channelname: n,
              guildname: s,
              muted: String(r),
              deafened: String(a),
            };
          return null != o && (u.nonce = o), new URLSearchParams(u);
        };
      ((r = s || (s = {})).PLAYSTATION = "playstation"), (r.XBOX = "xbox");
      let m = new Set(["xbox", "playstation"]);
      o.ActivityGamePlatforms.XBOX,
        o.ActivityGamePlatforms.PS5,
        ((a = i || (i = {}))[
          (a.CONSOLE_DEVICE_PASSCODE_UNLOCK_REQUIRED = 27e4)
        ] = "CONSOLE_DEVICE_PASSCODE_UNLOCK_REQUIRED"),
        (a[(a.CONSOLE_DEVICE_UNAVAILABLE = 270001)] =
          "CONSOLE_DEVICE_UNAVAILABLE"),
        (a[(a.CONSOLE_DEVICE_UNVAILABLE_FROM_OTHER_USERS = 270002)] =
          "CONSOLE_DEVICE_UNVAILABLE_FROM_OTHER_USERS"),
        (a[(a.CONSOLE_DEVICE_COMMUNICATION_RESTRICTED = 270003)] =
          "CONSOLE_DEVICE_COMMUNICATION_RESTRICTED"),
        (a[(a.CONSOLE_DEVICE_INVALID_POWER_MODE = 270004)] =
          "CONSOLE_DEVICE_INVALID_POWER_MODE"),
        (a[(a.CONSOLE_DEVICE_ACCOUNT_LINK_ERROR = 270005)] =
          "CONSOLE_DEVICE_ACCOUNT_LINK_ERROR"),
        (a[(a.CONSOLE_DEVICE_MAX_MEMBERS_REACHED = 270006)] =
          "CONSOLE_DEVICE_MAX_MEMBERS_REACHED"),
        (a[(a.CONSOLE_DEVICE_BAD_COMMAND = 270007)] =
          "CONSOLE_DEVICE_BAD_COMMAND");
      let h = new Set([27e4]),
        E = "console error alert";
    },
    958236: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var s = n("731865"),
        i = n("407807"),
        r = n("706319"),
        a = n("328470"),
        o = n("467006");
      function u(e, t, n) {
        a.default.track(o.AnalyticEvents.VOICE_CALL_TRANSFER, {
          source_platform:
            null != n
              ? r.default.getSessionById(n)?.clientInfo.os
              : "discord_client",
          guild_id: s.default.getChannel(e)?.guild_id,
          channel_id: e,
          rtc_connection_id: i.default.getRTCConnectionId(),
          target_platform: t,
        });
      }
    },
    794594: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          SelfDismissibleAlertBody: function () {
            return u;
          },
        });
      var s = n("735250"),
        i = n("470079"),
        r = n("661223"),
        a = n("983325"),
        o = n("636879");
      function u(e) {
        let { body: t, dismissCallback: n, errorCodeMessage: u } = e,
          d = (0, r.useStateFromStores)([a.default], () =>
            a.default.getRemoteSessionId()
          );
        return (i.useEffect(() => {
          null != d && n();
        }, [d, n]),
        null == u)
          ? (0, s.jsx)(s.Fragment, { children: t })
          : (0, s.jsxs)(s.Fragment, {
              children: [
                t,
                (0, s.jsx)("div", {
                  className: o.errorCodeMessage,
                  children: u,
                }),
              ],
            });
      }
    },
    120505: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return p;
          },
        });
      var s = n("735250");
      n("470079");
      var i = n("310057"),
        r = n("910838"),
        a = n("781735"),
        o = n("768021"),
        u = n("87727"),
        d = n("386130"),
        l = n("328470"),
        f = n("794594"),
        _ = n("747939"),
        c = n("467006"),
        g = n("30175"),
        m = n("418034");
      let h = "game_console_alert_modal",
        E = "game_console_ptt_alert_modal";
      var p = {
        maybeShowPTTAlert(e) {
          if (
            d.default.getMode() !== c.InputModes.PUSH_TO_TALK ||
            (0, u.isDismissibleContentDismissed)(
              i.DismissibleContent.CONSOLE_PTT_DISABLE_ALERT
            )
          )
            return Promise.resolve();
          let t = {
            [c.PlatformTypes.XBOX]: g.default.Messages.PTT_NOT_SUPPORTED_XBOX,
            [c.PlatformTypes.PLAYSTATION]:
              g.default.Messages.PTT_NOT_SUPPORTED_PLAYSTATION,
            [c.PlatformTypes.PLAYSTATION_STAGING]:
              g.default.Messages.PTT_NOT_SUPPORTED_PLAYSTATION,
          }[e];
          return null == t
            ? Promise.resolve()
            : new Promise(e => {
                let n = () => {
                    (0, u.markDismissibleContentAsDismissed)(
                      i.DismissibleContent.CONSOLE_PTT_DISABLE_ALERT
                    ),
                      e();
                  },
                  o = e =>
                    (0, s.jsx)(a.default, {
                      ...e,
                      title: t,
                      body: g.default.Messages.PTT_NOT_SUPPORTED_ALERT_BODY,
                      onConfirm: n,
                      titleClassName: m.title,
                    });
                (0, r.hasModalOpen)(E)
                  ? (0, r.updateModal)(E, o)
                  : (0, r.openModal)(o, { modalKey: E });
              });
        },
        showSelfDismissableAlert(e) {
          let {
              title: t,
              body: n,
              errorCodeMessage: i,
              reconnectPlatformType: u,
            } = e,
            d = (0, s.jsx)(f.SelfDismissibleAlertBody, {
              body: n,
              errorCodeMessage: i,
              dismissCallback: () => (0, r.closeModal)(h),
            });
          function g() {
            null != u &&
              ((0, o.default)(u),
              l.default.track(c.AnalyticEvents.ACCOUNT_LINK_STEP, {
                previous_step: _.GAME_CONSOLE_ALERT_MODAL_LOCATION,
                current_step: "desktop oauth",
                platform_type: u,
              }));
          }
          let m = e =>
            (0, s.jsx)(a.default, { ...e, title: t, body: d, onConfirm: g });
          (0, r.hasModalOpen)(h)
            ? (0, r.updateModal)(h, m)
            : (0, r.openModal)(m, { modalKey: h });
        },
      };
    },
    786617: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("148934"),
        i = n("467006");
      function r(e) {
        let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
          n =
            !(arguments.length > 2) || void 0 === arguments[2] || arguments[2],
          r = s.default.getApplication(e.applicationId),
          a = e.getPrice(),
          o = e.getPrice(null, !1),
          u = {
            sku_id: e.id,
            sku_type: e.type,
            application_id: e.applicationId,
            application_name: null != r ? r.name : null,
            store_title: e.name,
            distribution_type: e.premium ? "premium" : "distribution",
          },
          d = null;
        n &&
          (d = {
            price: null != a ? a.amount : null,
            regular_price: null != o ? o.amount : null,
            currency: null != a ? a.currency : null,
          });
        let l = null;
        return (
          t &&
            (l = {
              has_single_player: e.hasFeature(i.SKUFeatureTypes.SINGLE_PLAYER),
              has_online_multiplayer: e.hasFeature(
                i.SKUFeatureTypes.ONLINE_MULTIPLAYER
              ),
              has_local_multiplayer: e.hasFeature(
                i.SKUFeatureTypes.LOCAL_MULTIPLAYER
              ),
              has_pvp_features: e.hasFeature(i.SKUFeatureTypes.PVP),
              has_local_coop: e.hasFeature(i.SKUFeatureTypes.LOCAL_COOP),
              has_online_coop: e.hasFeature(i.SKUFeatureTypes.ONLINE_COOP),
              has_cross_platform: e.hasFeature(
                i.SKUFeatureTypes.CROSS_PLATFORM
              ),
              has_rich_presence: e.hasFeature(i.SKUFeatureTypes.RICH_PRESENCE),
              has_game_invites: e.hasFeature(
                i.SKUFeatureTypes.DISCORD_GAME_INVITES
              ),
              has_spectator_mode: e.hasFeature(
                i.SKUFeatureTypes.SPECTATOR_MODE
              ),
              has_controller_support: e.hasFeature(
                i.SKUFeatureTypes.CONTROLLER_SUPPORT
              ),
              has_cloud_saves: e.hasFeature(i.SKUFeatureTypes.CLOUD_SAVES),
              has_secure_networking: e.hasFeature(
                i.SKUFeatureTypes.SECURE_NETWORKING
              ),
            }),
          { ...u, ...d, ...l }
        );
      }
    },
    107634: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        }),
        n("653041");
      var s = n("312916");
      class i {
        static #e = (this.batchers = []);
        static flush(e, t) {
          for (let n of i.batchers)
            null != n.action && (null == e || n.shouldFlush(e, t)) && n.flush();
        }
        constructor(e, t, n) {
          (this.socket = e),
            (this.action = null),
            (this.shouldFlush = n),
            (this.add = e => {
              this.action = t(this.action, e);
            }),
            i.batchers.push(this);
        }
        flush() {
          let { action: e } = this;
          (this.action = null),
            null != e &&
              s.default
                .dispatch(e)
                .catch(t =>
                  this.socket.resetSocketOnError({ error: t, action: e.type })
                );
        }
      }
    },
    596818: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        }),
        ((s = i || (i = {})).CLOSED = "CLOSED"),
        (s.WILL_RECONNECT = "WILL_RECONNECT"),
        (s.CONNECTING = "CONNECTING"),
        (s.IDENTIFYING = "IDENTIFYING"),
        (s.RESUMING = "RESUMING"),
        (s.SESSION_ESTABLISHED = "SESSION_ESTABLISHED");
      var s,
        i,
        r = i;
    },
    725658: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
      var s = 16381;
    },
    973171: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        }),
        n("653041"),
        n("268111"),
        n("941497"),
        n("744285"),
        n("492257"),
        n("873817");
      var s = n("392711"),
        i = n.n(s),
        r = n("841869"),
        a = n("878001");
      let { NativeModules: o } = {},
        u = [];
      class d {
        static canUse() {
          return !1;
        }
        constructor(e) {
          (this._onDataReady = null), (this._gatewayEncoding = e);
        }
        bindWebSocket(e) {}
        feed(e) {}
        dataReady(e) {
          this._onDataReady = e;
        }
      }
      u.push(
        class extends d {
          static canUse() {
            return void 0 !== window.Uint8Array;
          }
          getAlgorithm() {
            return "zlib-stream";
          }
          usesLegacyCompression() {
            return !1;
          }
          constructor(e) {
            super(e), (this._pako = n("457854"));
            let t = this._pako;
            (this._inflate = new t.Inflate({
              chunkSize: 65536,
              to: this._gatewayEncoding.wantsString() ? "string" : "",
            })).onEnd = this.handleFlushEnd.bind(this);
          }
          feed(e) {
            let t = this._pako,
              n = this._inflate;
            if (null == n)
              throw Error("Trying to feed to closed compression adapter");
            if (null === this._onDataReady)
              throw Error(
                "Cannot feed unless a data ready callback is registered."
              );
            if (e instanceof ArrayBuffer) {
              let s = new DataView(e),
                i =
                  s.byteLength >= 4 &&
                  65535 === s.getUint32(s.byteLength - 4, !1);
              n.push(e, !!i && t.Z_SYNC_FLUSH);
            } else throw Error("Expected array buffer, but got " + typeof e);
          }
          close() {
            null != this._inflate &&
              ((this._inflate.onEnd = null), (this._inflate.chunks = [])),
              (this._inflate = null);
          }
          handleFlushEnd(e) {
            let t;
            let n = this._pako,
              s = this._inflate;
            if (null == s) {
              new r.default("GatewayCompressionHandler").error(
                "flush end happened on closed compression adapter"
              );
              return;
            }
            if (e !== n.Z_OK) throw Error(`zlib error, ${e}, ${s.strm.msg}`);
            let { chunks: i } = s,
              a = i.length;
            if (this._gatewayEncoding.wantsString())
              t = a > 1 ? i.join("") : i[0];
            else if (a > 1) {
              let e = 0;
              for (let t = 0; t < a; t++) e += i[t].length;
              let n = new Uint8Array(e),
                s = 0;
              for (let e = 0; e < a; e++) {
                let t = i[e];
                n.set(t, s), (s += t.length);
              }
              t = n;
            } else t = i[0];
            (i.length = 0), null != this._onDataReady && this._onDataReady(t);
          }
        }
      ),
        u.push(
          class extends d {
            static canUse() {
              return !0;
            }
            getAlgorithm() {
              return null;
            }
            usesLegacyCompression() {
              return !0;
            }
            feed(e) {
              let t = this._pako;
              if (
                (e instanceof ArrayBuffer &&
                  this._gatewayEncoding.wantsString() &&
                  (e = t.inflate(e, { to: "string" })),
                null == this._onDataReady)
              )
                throw Error(
                  "Cannot feed unless a data ready callback is registered."
                );
              this._onDataReady(e);
            }
            close() {}
            constructor(...e) {
              super(...e), (this._pako = n("457854"));
            }
          }
        ),
        u.push(
          class extends d {
            static canUse() {
              return !1;
            }
            constructor(e) {
              super(e), (this._socketId = null);
            }
            bindWebSocket(e) {
              this.close(),
                (this._socketId = e._socketId),
                o.DCDCompressionManager.enableZlibStreamSupport(this._socketId);
            }
            getAlgorithm() {
              return "zlib-stream";
            }
            usesLegacyCompression() {
              return !1;
            }
            feed(e) {
              if (null == this._onDataReady)
                throw Error(
                  "Cannot feed unless a data ready callback is registered."
                );
              null !== e && this._onDataReady(e);
            }
            close() {
              let e = this._socketId;
              (this._socketId = null),
                null !== e &&
                  o.DCDCompressionManager.disableZlibStreamSupport(e);
            }
          }
        );
      class l extends d {
        static canUse() {
          return !0;
        }
        getAlgorithm() {
          return null;
        }
        usesLegacyCompression() {
          return !1;
        }
        feed(e) {
          if (null == this._onDataReady)
            throw Error(
              "Cannot feed unless a data ready callback is registered."
            );
          this._onDataReady(e);
        }
        close() {}
      }
      u.push(l);
      let f = i().find(u, e => e.canUse());
      a.ProcessArgs.isDiscordGatewayPlaintextSet() && (f = l);
      var _ = f;
    },
    706608: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return F;
          },
        });
      var s = n("392711"),
        i = n.n(s),
        r = n("661223"),
        a = n("312916"),
        o = n("820228"),
        u = n("841869"),
        d = n("188304"),
        l = n("991400"),
        f = n("262047"),
        _ = n("249877"),
        c = n("731865"),
        g = n("663241"),
        m = n("386130"),
        h = n("407807"),
        E = n("67121"),
        p = n("232733"),
        v = n("145080"),
        y = n("69046"),
        I = n("596818"),
        T = n("307911"),
        S = n("364990"),
        C = n("548339"),
        A = n("467006"),
        N = n("746835");
      let D = window.DiscordNative;
      T.socket.dispatcher.getDispatchHandler = C.default;
      let O = new u.default("ConnectionStore"),
        R = 0,
        P = null,
        b = !0;
      async function M(e) {
        (R = Date.now()),
          (P = e.sessionId),
          T.localPresenceState.handleConnectionOpen();
        let t = {},
          n = p.default.getVoiceChannelId();
        if (null != n) {
          if (
            window?.performance?.getEntriesByType?.("navigation")?.[0]?.type ===
              "reload" ||
            (await D?.processUtils?.getLastCrash?.())?.rendererCrashReason !=
              null ||
            !b
          ) {
            let e = c.default.getChannel(n);
            null != e && (t = { guildId: e.getGuildId(), channelId: n });
          } else
            h.default.setLastSessionVoiceChannelId(null != n ? n : null),
              o.default.selectVoiceChannel(null);
        }
        T.localVoiceState.update(t, !0),
          T.localLobbyVoiceStates.update({}, !0),
          (b = !1);
      }
      function V() {
        T.localVoiceState.update();
      }
      function L() {
        return T.localVoiceState.update(), T.localLobbyVoiceStates.update(), !1;
      }
      function k() {
        return T.localPresenceState.update(), !1;
      }
      function w() {
        return T.localLobbyVoiceStates.update(), !1;
      }
      function U(e) {
        T.socket.isSessionEstablished() && T.socket.streamDelete(e);
      }
      class G extends r.default.Store {
        static #e = (this.displayName = "GatewayConnectionStore");
        initialize() {
          this.waitFor(
            f.default,
            p.default,
            c.default,
            _.default,
            g.default,
            l.default
          ),
            this.syncWith([m.default], L),
            this.syncWith([v.default], k);
        }
        getSocket() {
          return T.socket;
        }
        isTryingToConnect() {
          return !T.socket.isClosed();
        }
        isConnected() {
          return T.socket.isSessionEstablished();
        }
        isConnectedOrOverlay() {
          return T.socket.isSessionEstablished() || __OVERLAY__;
        }
        lastTimeConnectedChanged() {
          return R;
        }
      }
      var F = new G(a.default, {
        START_SESSION: function () {
          return T.socket.isClosed()
            ? (O.verbose(
                "Socket is reconnecting because of starting new session"
              ),
              T.socket.connect())
            : (O.verbose(
                "Socket is not reconnecting during a new session because it is not closed"
              ),
              !1);
        },
        LOGIN_SUCCESS: function () {
          return (
            O.verbose("session refresh dispatched", {
              isEstablished: T.socket.isSessionEstablished(),
            }),
            !!T.socket.isSessionEstablished() &&
              (T.socket.close(), T.socket.connect())
          );
        },
        LOGOUT: function (e) {
          e.isSwitchingAccount && T.localPresenceState.handleAccountSwitch(),
            O.verbose("Closing socket because of logout"),
            T.socket.close();
        },
        CLEAR_CACHES: function (e) {
          return (
            e.resetSocket &&
              (T.socket.close(),
              T.socket.dispatcher.clear(),
              T.socket.connect()),
            !1
          );
        },
        CONNECTION_OPEN: e => {
          M(e);
        },
        CONNECTION_CLOSED: function () {
          O.verbose("connection closed dispatched"), (R = Date.now());
        },
        RTC_CONNECTION_STATE: function (e) {
          if (e.state !== A.RTCConnectionStates.DISCONNECTED) return !1;
          e.willReconnect &&
            (null != e.streamKey
              ? T.socket.streamPing(e.streamKey)
              : T.socket.voiceServerPing());
        },
        VOICE_CHANNEL_SELECT: function (e) {
          return (
            T.localVoiceState.update({
              guildId: e.guildId,
              channelId: e.channelId,
            }),
            !1
          );
        },
        VOICE_STATE_UPDATES: function (e) {
          let { voiceStates: t } = e;
          return t.reduce((e, t) => {
            if (f.default.getId() !== t.userId) return e;
            if (t.sessionId === P)
              T.localVoiceState.setState({
                guildId: t.guildId,
                channelId: t.channelId,
              });
            else {
              if (t.guildId !== T.localVoiceState.guildId) return e;
              T.localVoiceState.setState({ guildId: null, channelId: null });
            }
            return !0;
          }, !1);
        },
        GUILD_DELETE: function (e) {
          e.guild.id === T.localVoiceState.guildId &&
            T.localVoiceState.setState({ guildId: null, channelId: null });
        },
        CHANNEL_DELETE: function (e) {
          let { channel: t } = e;
          t.id === T.localVoiceState.channelId &&
            T.localVoiceState.setState({ guildId: null, channelId: null });
        },
        CALL_DELETE: function (e) {
          let { channelId: t } = e;
          t === T.localVoiceState.channelId &&
            T.localVoiceState.setState({ guildId: null, channelId: null });
        },
        APP_STATE_UPDATE: function (e) {
          return (
            e.state === A.AppStates.ACTIVE &&
              (S.setIsPaused(!1),
              f.default.isAuthenticated() &&
                T.socket.resetBackoff("App state is active")),
            !1
          );
        },
        GUILD_MEMBERS_REQUEST: function (e) {
          return (
            T.socket.isSessionEstablished() &&
              ("userIds" in e
                ? i()(e.userIds)
                    .chunk(100)
                    .forEach(t => {
                      T.socket.requestGuildMembers(e.guildIds, {
                        userIds: t,
                        presences: !!e.presences,
                      });
                    })
                : T.socket.requestGuildMembers(e.guildIds, {
                    query: e.query,
                    limit: e.limit,
                    presences: !!e.presences,
                  })),
            !1
          );
        },
        GUILD_SEARCH_RECENT_MEMBERS: function (e) {
          let { guildId: t, query: n, continuationToken: s } = e;
          T.socket.isSessionEstablished() &&
            T.socket.searchRecentMembers(t, { query: n, continuationToken: s });
        },
        GUILD_SUBSCRIPTIONS_FLUSH: function (e) {
          let { subscriptions: t } = e;
          return (
            T.socket.isSessionEstablished() &&
              T.socket.updateGuildSubscriptions(t),
            !1
          );
        },
        CALL_CONNECT: function (e) {
          let { channelId: t } = e;
          return T.socket.isSessionEstablished() && T.socket.callConnect(t), !1;
        },
        CALL_CONNECT_MULTIPLE: function (e) {
          let { channelIds: t } = e;
          return (
            T.socket.isSessionEstablished() &&
              t.forEach(e => {
                T.socket.callConnect(e);
              }),
            !1
          );
        },
        LOBBY_CONNECT: function (e) {
          let { lobbyId: t, lobbySecret: n } = e;
          return (
            T.socket.isSessionEstablished() && T.socket.lobbyConnect(t, n), !1
          );
        },
        LOBBY_DISCONNECT: function (e) {
          let { lobbyId: t } = e;
          return (
            T.socket.isSessionEstablished() && T.socket.lobbyDisconnect(t),
            T.localLobbyVoiceStates.update(),
            !1
          );
        },
        LOBBY_VOICE_CONNECT: w,
        LOBBY_VOICE_DISCONNECT: w,
        RPC_APP_DISCONNECTED: w,
        STREAM_CREATE: V,
        STREAM_START: function (e) {
          let { streamType: t, guildId: n, channelId: s } = e;
          if (T.socket.isSessionEstablished()) {
            let e =
              null != n
                ? c.default.getChannel(s)?.rtcRegion
                : _.default.getCall(s)?.region;
            T.socket.streamCreate(t, n, s, e ?? E.default.getPreferredRegion());
          }
          return !1;
        },
        STREAM_WATCH: function (e) {
          let { streamKey: t, allowMultiple: n } = e;
          return (
            T.socket.isSessionEstablished() &&
              (n ||
                !(function () {
                  let e = (function () {
                    return y.default
                      .getAllActiveStreamKeys()
                      .find(
                        e =>
                          (0, d.decodeStreamKey)(e).ownerId ===
                          f.default.getId()
                      );
                  })();
                  y.default
                    .getAllActiveStreamKeys()
                    .filter(t => t !== e)
                    .forEach(e => U(e));
                })(),
              T.socket.streamWatch(t)),
            !1
          );
        },
        STREAM_STOP: function (e) {
          let { streamKey: t } = e;
          return U(t), V(), !1;
        },
        STREAM_SET_PAUSED: function (e) {
          let { streamKey: t, paused: n } = e;
          T.socket.isSessionEstablished() && T.socket.streamSetPaused(t, n);
        },
        PUSH_NOTIFICATION_CLICK: function () {
          return (
            T.socket.expeditedHeartbeat(
              5e3,
              "user clicked on notification",
              !0
            ),
            !1
          );
        },
        EMBEDDED_ACTIVITY_DISCONNECT: function (e) {
          let { channelId: t, applicationId: n } = e,
            s = c.default.getChannel(t)?.getGuildId() ?? null;
          T.socket.embeddedActivityClose(s, t, n);
        },
        REQUEST_FORUM_UNREADS: function (e) {
          let { guildId: t, channelId: n, threads: s } = e;
          T.socket.requestForumUnreads(t, n, s);
        },
        REQUEST_SOUNDBOARD_SOUNDS: function (e) {
          let { guildIds: t } = e;
          T.socket.requestSoundboardSounds(t);
        },
        REMOTE_COMMAND: function (e) {
          let { sessionId: t, payload: n } = e;
          return (
            T.socket.isSessionEstablished() && T.socket.remoteCommand(t, n), !1
          );
        },
        RESET_SOCKET: function (e) {
          T.socket.connectionState !== I.default.WILL_RECONNECT &&
            T.socket.resetSocketOnError(e.args);
        },
        RTC_SPEED_TEST_START_TEST: function () {
          return (
            T.socket.isSessionEstablished() &&
              T.socket.speedTestCreate(E.default.getPreferredRegion()),
            !1
          );
        },
        RTC_SPEED_TEST_STOP_TEST: function () {
          return (
            T.socket.isSessionEstablished() && T.socket.speedTestDelete(), !1
          );
        },
        CLIPS_SETTINGS_UPDATE: V,
        RUNNING_GAMES_CHANGE: V,
        USER_SETTINGS_PROTO_UPDATE: function (e) {
          e.settings.type === N.UserSettingsTypes.PRELOADED_USER_SETTINGS &&
            e.settings.proto.clips?.allowVoiceRecording != null &&
            V();
        },
      });
    },
    845484: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var s = n("878001");
      let i = (0, n("291801").getErlpackEncoding)();
      class r {
        pack(e) {
          return JSON.stringify(e);
        }
        unpack(e) {
          if ("string" != typeof e)
            throw Error(
              `Expected a string to be passed to JSONEncoding.unpack, got ${null == e ? null : typeof e}`
            );
          return JSON.parse(e);
        }
        getName() {
          return "json";
        }
        wantsString() {
          return !0;
        }
      }
      let a = void 0 !== i ? i : r;
      s.ProcessArgs.isDiscordGatewayPlaintextSet() && (a = r);
      var o = a;
    },
    291801: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getErlpackEncoding: function () {
            return a;
          },
        }),
        n("268111"),
        n("941497"),
        n("744285"),
        n("492257"),
        n("873817");
      var s = n("841869"),
        i = n("501769"),
        r = n("432056");
      function a() {
        if (i.isPlatformEmbedded) {
          let e;
          try {
            e = r.default.requireModule("discord_erlpack");
          } catch (t) {
            try {
              e = r.default.requireModule("erlpack");
            } catch (e) {}
          }
          if (null != e)
            return class {
              static canUse() {
                return null != e;
              }
              pack(t) {
                return e.pack(t).buffer;
              }
              unpack(t) {
                t instanceof ArrayBuffer && (t = new Uint8Array(t));
                try {
                  return e.unpack(t);
                } catch (e) {
                  throw (
                    (new s.default("GatewayEncodingErlpackEncoding").error(
                      "Error unpacking",
                      {
                        erlpackUnpackError: e,
                        erlpackDataPreview:
                          null != t ? Array.from(t.slice(0, 32)) : null,
                        erlpackDataLength: null != t ? t.length : null,
                      }
                    ),
                    e)
                  );
                }
              }
              getName() {
                return "etf";
              }
              wantsString() {
                return !1;
              }
            };
        }
      }
    },
    741826: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return Y;
          },
        }),
        n("216116"),
        n("78328"),
        n("815648"),
        n("177593");
      var s = n("512722"),
        i = n.n(s),
        r = n("457854"),
        a = n("743548"),
        o = n("990835"),
        u = n("120739"),
        d = n("661223"),
        l = n("454836"),
        f = n("312916"),
        _ = n("275468"),
        c = n("517761"),
        g = n("325318"),
        m = n("668192"),
        h = n("841869"),
        E = n("618933"),
        p = n("167555"),
        v = n("12164"),
        y = n("328470"),
        I = n("527478"),
        T = n("152551"),
        S = n("501769"),
        C = n("281925"),
        A = n("596818"),
        N = n("725658"),
        D = n("973171"),
        O = n("845484"),
        R = n("821145"),
        P = n("264976"),
        b = n("32536"),
        M = n("364990"),
        V = n("16803"),
        L = n("467006");
      let k = new h.default("GatewaySocket"),
        w = new O.default();
      function U() {}
      let G = 30 * T.default.Millis.SECOND,
        F = 3 * T.default.Millis.MINUTE,
        B = 1 * T.default.Millis.MINUTE;
      function H(e) {
        return null == e ? 0 : "string" == typeof e ? e.length : e.byteLength;
      }
      let x = window.GLOBAL_ENV.GATEWAY_ENDPOINT;
      class Y extends b.default {
        get connectionState() {
          return this.connectionState_;
        }
        set connectionState(e) {
          k.verbose(`Setting connection state to ${e}`),
            (this.connectionState_ = e);
        }
        constructor() {
          super(),
            (this.dispatchExceptionBackoff = new a.default(1e3, B)),
            (this.dispatchSuccessTimer = 0),
            (this.didForceClearGuildHashes = !1),
            (this.identifyUncompressedByteSize = 0),
            (this.identifyCompressedByteSize = 0),
            (this.analytics = {}),
            (this.identifyCount = 0),
            (this.resumeUrl = null),
            (this.iosGoingAwayEventCount = 0),
            (this.send = (e, t, n) => {
              v.default.isLoggingGatewayEvents &&
                k.verboseDangerously("~>", e, t);
              let s = w.pack({ op: e, d: t });
              if (!n || this.isSessionEstablished())
                try {
                  null != this.webSocket
                    ? this.webSocket.send(s)
                    : k.warn(
                        `Attempted to send without a websocket that exists. Opcode: ${e}`
                      );
                } catch (e) {}
              else
                k.warn(
                  `Attempted to send while not being in a connected state opcode: ${e}`
                );
            }),
            (this.dispatcher = new P.default(this)),
            (this.gatewayBackoff = new a.default(1e3, 6e4)),
            (this.connectionState_ = A.default.CLOSED),
            (this.webSocket = null),
            (this.seq = 0),
            (this.sessionId = null),
            (this.token = null),
            (this.initialHeartbeatTimeout = null),
            (this.expeditedHeartbeatTimeout = null),
            (this.lastHeartbeatAckTime = null),
            (this.helloTimeout = null),
            (this.heartbeatInterval = null),
            (this.heartbeater = null),
            (this.heartbeatAck = !0),
            (this.connectionStartTime = 0),
            (this.identifyStartTime = 0),
            (this.nextReconnectIsImmediate = !1),
            (this.compressionHandler = new D.default(w)),
            (this.hasConnectedOnce = !1),
            (this.isFastConnect = !1),
            (this.identifyCount = 0),
            (this.iosGoingAwayEventCount = 0);
        }
        addAnalytics(e) {
          this.analytics = { ...this.analytics, ...e };
        }
        setResumeUrl(e) {
          null != e && e.endsWith("/") && (e = e.substring(0, e.length - 1)),
            null !== e && k.verbose(`Updating resume url to ${e}`),
            (this.resumeUrl = e);
        }
        _connect() {
          var e, t;
          let n;
          if (!this.willReconnect()) {
            k.verbose("Skipping _connect because willReconnect is false");
            return;
          }
          if (M.getIsPaused()) {
            k.info("Skipping _connect because socket is paused");
            return;
          }
          (this.connectionState = A.default.CONNECTING),
            (this.nextReconnectIsImmediate = !1);
          let s = this.compressionHandler.getAlgorithm(),
            i = w.getName(),
            r = this._getGatewayUrl(),
            a = window.GLOBAL_ENV.API_VERSION;
          o.default.mark("\uD83C\uDF10", "Socket._connect"),
            k.info(
              `[CONNECT] ${r}, encoding: ${i}, version: ${a}, compression: ${s ?? "none"}`
            ),
            null !== this.webSocket &&
              (k.error("_connect called with already existing websocket"),
              this._cleanup(e => e.close(4e3))),
            (this.connectionStartTime = Date.now()),
            (this.helloTimeout = setTimeout(() => {
              let e = Date.now() - this.connectionStartTime;
              this._handleClose(
                !1,
                0,
                `The connection timed out after ${e} ms - did not receive OP_HELLO in time.`
              ),
                this.setResumeUrl(null);
            }, G));
          let u = new URL(r);
          u.searchParams.append("encoding", i),
            u.searchParams.append("v", a.toString()),
            null != s && u.searchParams.append("compress", s);
          !(function (e) {
            let t,
              {
                gatewayURL: n,
                newCallback: s,
                onOpen: i,
                onMessage: r,
                onError: a,
                onClose: o,
              } = e,
              u = window._ws,
              d = !1,
              l = !1,
              f = null,
              _ = null;
            if (((window._ws = null), null != u)) {
              if (((t = u.ws), u.state.gateway !== n))
                k.verbose(
                  `[FAST CONNECT] gatewayURL mismatch: ${u.state.gateway} !== ${n}`
                ),
                  t.close(1e3),
                  (t = null);
              else {
                let e = { ...u.state };
                null != e.messages &&
                  (e.messages = e.messages.map(e =>
                    null != e.data && "string" == typeof e.data
                      ? { ...e, data: e.data.substring(0, 100) }
                      : e
                  )),
                  k.log(
                    "[FAST CONNECT] successfully took over websocket, state:",
                    { ...e, messages: e.messages?.length }
                  ),
                  (d = u.state.open),
                  (l = u.state.identify),
                  (f = u.state.messages),
                  (_ = u.state.clientState);
              }
            }
            null == t && ((t = (0, V.default)(n)).binaryType = "arraybuffer"),
              s(t),
              d && i(l, _),
              null != f && f.forEach(r),
              (t.onopen = () => i(l, _)),
              (t.onmessage = r),
              (t.onclose = o),
              (t.onerror = a);
          })({
            gatewayURL: u.toString(),
            newCallback: e => {
              (this.webSocket = e), this.compressionHandler.bindWebSocket(e);
            },
            onOpen: e => {
              o.default.mark(`🌐`, `GatewaySocket.onOpen ${e}`);
              let t = Date.now() - this.connectionStartTime;
              k.info(`[CONNECTED] ${u.toString()} in ${t} ms`),
                (this.isFastConnect = e),
                e ? this._doFastConnectIdentify() : this._doResumeOrIdentify();
            },
            onMessage:
              ((e = this.compressionHandler),
              (t = (e, t) => {
                let n = Date.now(),
                  { op: s, s: i, t: r, d: a } = w.unpack(e);
                s !== b.Opcode.DISPATCH &&
                  o.default.mark(
                    `🌐`,
                    `GatewaySocket.onMessage ${s} ${b.Opcode[s]}`
                  );
                let u = Date.now() - n;
                switch (
                  ("READY" === r
                    ? p.default.parseReady.set(n, u)
                    : "READY_SUPPLEMENTAL" === r
                      ? p.default.parseReadySupplemental.set(n, u)
                      : u > 10 &&
                        o.default.mark("\uD83C\uDF10", "Parse " + r, u),
                  null != i && (this.seq = i),
                  s)
                ) {
                  case b.Opcode.HELLO:
                    this._clearHelloTimeout(), this._handleHello(a);
                    break;
                  case b.Opcode.RECONNECT:
                    this._handleReconnect();
                    break;
                  case b.Opcode.INVALID_SESSION:
                    this._handleInvalidSession(a);
                    break;
                  case b.Opcode.HEARTBEAT:
                    this._sendHeartbeat();
                    break;
                  case b.Opcode.HEARTBEAT_ACK:
                    this._handleHeartbeatAck(a);
                    break;
                  case b.Opcode.DISPATCH:
                    this._handleDispatch(
                      a,
                      r,
                      "READY" === r
                        ? {
                            compressed_byte_size: t,
                            uncompressed_byte_size: H(e),
                            compression_algorithm:
                              this.compressionHandler.getAlgorithm(),
                            packing_algorithm: w.getName(),
                            unpack_duration_ms: u,
                          }
                        : null
                    );
                    break;
                  default:
                    k.info(`Unhandled op ${s}`);
                }
              }),
              (n = 0),
              e.dataReady(e => {
                try {
                  return t(e, n);
                } finally {
                  n = 0;
                }
              }),
              t => {
                let s = t.data;
                null != t.raw_length ? (n += t.raw_length) : (n += H(s)),
                  e.feed(s);
              }),
            onError: () => {
              this.setResumeUrl(null),
                I.default.flushDNSCache(),
                this._handleClose(
                  !1,
                  0,
                  "An error with the websocket occurred"
                );
            },
            onClose: e => {
              let { wasClean: t, code: n, reason: s } = e;
              return this._handleClose(t, n, s);
            },
          });
        }
        _handleHello(e) {
          let t = (this.heartbeatInterval = e.heartbeat_interval),
            n = Date.now() - this.connectionStartTime;
          k.verbose(
            `[HELLO] via ${(0, R.getConnectionPath)(e)}, heartbeat interval: ${t}, took ${n} ms`
          ),
            this._startHeartbeater();
        }
        _handleReconnect() {
          k.verbose("[RECONNECT] gateway requested I reconnect."),
            this._cleanup(e => e.close(4e3)),
            (this.connectionState = A.default.WILL_RECONNECT),
            this._connect();
        }
        _handleInvalidSession(e) {
          k.info(`[INVALID_SESSION]${e ? " can resume)" : ""}`),
            e ? this._doResumeOrIdentify() : this._doIdentify();
        }
        _handleDispatch(e, t, n) {
          let s = Date.now() - this.connectionStartTime;
          if ("READY" === t) {
            let t = e.session_id;
            this.sessionId = t;
            let n = (0, R.getConnectionPath)(e);
            o.default.setServerTrace(n),
              k.info(`[READY] took ${s}ms, as ${t}`),
              k.verbose(`${n}`),
              (this.connectionState = A.default.SESSION_ESTABLISHED),
              this.gatewayBackoff.succeed(),
              (this.iosGoingAwayEventCount = 0),
              this.setResumeUrl(e.resume_gateway_url);
          } else
            "READY_SUPPLEMENTAL" === t
              ? (k.info(`[READY_SUPPLEMENTAL] took ${s}ms`),
                (this.connectionState = A.default.SESSION_ESTABLISHED),
                this.gatewayBackoff.succeed(),
                (this.iosGoingAwayEventCount = 0))
              : "RESUMED" === t &&
                (k.verbose((0, R.getConnectionPath)(e)),
                (this.connectionState = A.default.SESSION_ESTABLISHED),
                this.gatewayBackoff.succeed(),
                (this.iosGoingAwayEventCount = 0));
          this.dispatcher.receiveDispatch(e, t, n);
        }
        handleResumeDispatched() {
          let e = Date.now() - this.connectionStartTime;
          k.info(
            `[RESUMED] took ${e}ms, replayed ${this.dispatcher.resumeAnalytics.numEvents} events, new seq: ${this.seq}`
          );
        }
        handleReadyDispatched() {
          (this.didForceClearGuildHashes = !1), (this.hasConnectedOnce = !0);
        }
        _getGatewayUrl() {
          return null != this.resumeUrl ? this.resumeUrl : x;
        }
        _handleHeartbeatAck(e) {
          (this.lastHeartbeatAckTime = Date.now()),
            (this.heartbeatAck = !0),
            null !== this.expeditedHeartbeatTimeout &&
              (clearTimeout(this.expeditedHeartbeatTimeout),
              (this.expeditedHeartbeatTimeout = null),
              k.verbose("Expedited heartbeat succeeded"));
        }
        _handleHeartbeatTimeout() {
          this._cleanup(e => e.close(4e3)),
            (this.connectionState = A.default.WILL_RECONNECT);
          let e = this.gatewayBackoff.fail(() => this._connect());
          k.warn(
            `[ACK TIMEOUT] reconnecting in ${(e / 1e3).toFixed(2)} seconds.`
          );
        }
        _handleClose(e, t, n) {
          if (
            ((e = e || !1),
            this._cleanup(),
            this.emit("close", { code: t, reason: n }),
            4004 === t)
          )
            return (
              (this.connectionState = A.default.CLOSED),
              k.warn(
                "[WS CLOSED] because of authentication failure, marking as closed."
              ),
              this._reset(e, t, n)
            );
          if (
            (this._tryDetectInvalidIOSToken(t, n, e),
            (this.connectionState = A.default.WILL_RECONNECT),
            this.nextReconnectIsImmediate)
          )
            k.info(
              `[WS CLOSED] (${e.toString()}, ${t}, ${n}) retrying immediately.`
            ),
              this._connect();
          else {
            let s = this.gatewayBackoff.fail(() => this._connect());
            k.info(
              `[WS CLOSED] (${e.toString()}, ${t}, ${n}) retrying in ${(s / 1e3).toFixed(2)} seconds.`
            ),
              this.gatewayBackoff.fails > 4 && this._reset(e, t, n);
          }
        }
        _tryDetectInvalidIOSToken(e, t, n) {
          (0, S.isIOS)() &&
            null != this.token &&
            1001 === e &&
            "Stream end encountered" === t &&
            ((this.iosGoingAwayEventCount += 1),
            3 === this.iosGoingAwayEventCount &&
              l.default
                .get({
                  url: L.Endpoints.ME,
                  headers: { authorization: this.token },
                })
                .then(
                  e => {
                    let { status: t } = e;
                    y.default.track(
                      L.AnalyticEvents.IOS_INVALID_TOKEN_WORKAROUND_TRIGGERED,
                      { api_status_code: t }
                    );
                  },
                  e => {
                    let { status: t } = e;
                    401 === t &&
                      ((this.connectionState = A.default.CLOSED),
                      k.warn(
                        "[WS CLOSED] because of manual authentication failure, marking as closed."
                      ),
                      this._reset(n, 4004, "invalid token manually detected")),
                      y.default.track(
                        L.AnalyticEvents.IOS_INVALID_TOKEN_WORKAROUND_TRIGGERED,
                        { api_status_code: t }
                      );
                  }
                ));
        }
        _reset(e, t, n) {
          (this.sessionId = null),
            (this.seq = 0),
            k.warn(`[RESET] (${e.toString()}, ${t}, ${n})`),
            this.emit("disconnect", { wasClean: e, code: t, reason: n });
        }
        _startHeartbeater() {
          let { heartbeatInterval: e } = this;
          i()(
            null != e,
            "GatewaySocket: Heartbeat interval should never null here."
          ),
            null !== this.initialHeartbeatTimeout &&
              clearTimeout(this.initialHeartbeatTimeout),
            null !== this.heartbeater &&
              (clearInterval(this.heartbeater), (this.heartbeater = null));
          let t = () => {
            this.heartbeatAck
              ? ((this.heartbeatAck = !1), this._sendHeartbeat())
              : null === this.expeditedHeartbeatTimeout &&
                this._handleHeartbeatTimeout();
          };
          this.initialHeartbeatTimeout = setTimeout(
            () => {
              (this.initialHeartbeatTimeout = null),
                (this.heartbeatAck = !0),
                (this.heartbeater = setInterval(t, e)),
                t();
            },
            Math.floor(Math.random() * e)
          );
        }
        _stopHeartbeater() {
          null !== this.heartbeater &&
            (clearInterval(this.heartbeater), (this.heartbeater = null)),
            null !== this.initialHeartbeatTimeout &&
              (clearTimeout(this.initialHeartbeatTimeout),
              (this.initialHeartbeatTimeout = null)),
            null !== this.expeditedHeartbeatTimeout &&
              (clearTimeout(this.expeditedHeartbeatTimeout),
              (this.expeditedHeartbeatTimeout = null));
        }
        _clearHelloTimeout() {
          null != this.helloTimeout &&
            (clearTimeout(this.helloTimeout), (this.helloTimeout = null));
        }
        _cleanup(e) {
          d.default.Emitter.resume(),
            this._stopHeartbeater(),
            this._clearHelloTimeout();
          let t = this.webSocket;
          (this.webSocket = null),
            null != t &&
              ((t.onopen = U),
              (t.onmessage = U),
              (t.onerror = U),
              (t.onclose = U),
              e?.(t)),
            this.gatewayBackoff.cancel(),
            this.compressionHandler.close(),
            (this.compressionHandler = new D.default(w));
        }
        _doResume() {
          (this.connectionState = A.default.RESUMING),
            (this.dispatcher.resumeAnalytics = (0, R.createResumeAnalytics)(
              Date.now() - this.connectionStartTime
            )),
            k.info(
              `[RESUME] resuming session ${this.sessionId ?? ""}, seq: ${this.seq}`
            ),
            this.send(
              b.Opcode.RESUME,
              { token: this.token, session_id: this.sessionId, seq: this.seq },
              !1
            );
        }
        async _doIdentify() {
          (this.seq = 0), (this.sessionId = null);
          let e = this.handleIdentify();
          if (null === e) {
            this._handleClose(!0, 4004, "No connection info provided");
            return;
          }
          this.connectionState = A.default.IDENTIFYING;
          let t = Date.now();
          this.identifyStartTime = t;
          let [n, s, i] = await Promise.all([
              (0, m.isCacheEnabled)() ? _.default.getCommittedVersions() : {},
              (0, m.isCacheEnabled)() ? g.default.getCommittedVersions() : {},
              !!(0, m.isCacheEnabled)() && c.default.canUseGuildVersions(),
            ]),
            a = i
              ? {
                  guild_versions: n,
                  highest_last_message_id: s.highest_last_message_id,
                  read_state_version: s.read_state_version,
                  user_guild_settings_version: s.user_guild_settings_version,
                  user_settings_version: s.user_settings_version,
                  private_channels_version: s.private_channels_version,
                  api_code_version: s.api_code_version,
                  initial_guild_id: s.initial_guild_id,
                }
              : { guild_versions: {} };
          if (
            this.connectionState !== A.default.IDENTIFYING ||
            this.identifyStartTime !== t
          ) {
            k.warn(
              "Skipping identify because connectionState or identifyStartTime has changed"
            );
            return;
          }
          let { token: o, properties: u = {}, presence: d } = e;
          (this.token = o), k.verbose("[IDENTIFY]");
          let l = {
              token: o,
              capabilities: N.default,
              properties: u,
              presence: d,
              compress: this.compressionHandler.usesLegacyCompression(),
              client_state: a,
            },
            f = JSON.stringify(l);
          (this.identifyUncompressedByteSize = f.length),
            (this.identifyCompressedByteSize = r.deflate(f).length),
            (this.identifyCount += 1),
            this.send(b.Opcode.IDENTIFY, l, !1);
        }
        _doFastConnectIdentify() {
          (this.seq = 0), (this.sessionId = null);
          let e = this.handleIdentify();
          if (null === e) {
            this._handleClose(!0, 4004, "No connection info provided");
            return;
          }
          let { token: t } = e;
          (this.token = t),
            (this.connectionState = A.default.IDENTIFYING),
            (this.identifyStartTime = Date.now()),
            (this.identifyCount += 1),
            k.verbose("[IDENTIFY, fast-connect]"),
            this._updateLastHeartbeatAckTime();
        }
        _doResumeOrIdentify() {
          let e = Date.now();
          null !== this.sessionId &&
          (null == this.lastHeartbeatAckTime ||
            e - this.lastHeartbeatAckTime <= F)
            ? this._doResume()
            : this._doIdentify(),
            this._updateLastHeartbeatAckTime();
        }
        _updateLastHeartbeatAckTime() {
          this.lastHeartbeatAckTime = Date.now();
        }
        _sendHeartbeat() {
          this.send(b.Opcode.HEARTBEAT, this.seq, !1);
        }
        getLogger() {
          return k;
        }
        willReconnect() {
          return this.connectionState === A.default.WILL_RECONNECT;
        }
        isClosed() {
          return this.connectionState === A.default.CLOSED;
        }
        isSessionEstablished() {
          return (
            this.connectionState === A.default.SESSION_ESTABLISHED ||
            this.connectionState === A.default.RESUMING
          );
        }
        isConnected() {
          return (
            this.connectionState === A.default.IDENTIFYING ||
            this.connectionState === A.default.RESUMING ||
            this.connectionState === A.default.SESSION_ESTABLISHED
          );
        }
        connect() {
          return this.isClosed()
            ? (k.verbose(".connect() called, new state is WILL_RECONNECT"),
              (this.connectionState = A.default.WILL_RECONNECT),
              this._connect(),
              !0)
            : (k.error(
                "Cannot start a new connection, connection state is not closed"
              ),
              !1);
        }
        resetSocketOnError(e) {
          let { action: t, error: n } = e;
          k.error(`resetSocketOnError during ${t}: ${n.message}`, n.stack),
            E.default.increment(
              { name: u.MetricEvents.SOCKET_CRASHED, tags: [`action:${t}`] },
              !0
            ),
            !1 !== e.sentry &&
              C.default.captureException(n, {
                tags: { socketCrashedAction: t },
              }),
            y.default.track(L.AnalyticEvents.GATEWAY_SOCKET_RESET, {
              error_message: n.message,
              error_stack: n.stack,
              action: t,
            }),
            this._cleanup(e => e.close()),
            this._reset(!0, 1e3, "Resetting socket due to error."),
            this.dispatcher.clear(),
            (this.connectionState = A.default.WILL_RECONNECT),
            this.dispatchExceptionBackoff.cancel();
          let s = e.clearCache || this.dispatchExceptionBackoff._fails > 0;
          0 === this.dispatchExceptionBackoff._fails
            ? (k.verbose("Triggering fast reconnect"),
              this.dispatchExceptionBackoff.fail(() => {}),
              setTimeout(() => this._connect(), 0))
            : this.dispatchExceptionBackoff.fail(() => this._connect()),
            s &&
              ((this.didForceClearGuildHashes = !0),
              f.default.dispatch({
                type: "CLEAR_CACHES",
                reason: `Socket reset during ${t}`,
              })),
            clearTimeout(this.dispatchSuccessTimer),
            (this.dispatchSuccessTimer = setTimeout(
              () => this.dispatchExceptionBackoff.succeed(),
              2 * B
            ));
        }
        resetSocketOnDispatchError(e) {
          let t =
            null != e.error.message &&
            e.error.message.indexOf("Guild data was missing from store") >= 0;
          this.resetSocketOnError({ ...e, sentry: !t, clearCache: t });
        }
        close() {
          if (this.isClosed()) {
            k.verbose("close() called, but socket is already closed.");
            return;
          }
          k.info(
            `Closing connection, current state is ${this.connectionState}`
          ),
            this._cleanup(e => e.close()),
            (this.connectionState = A.default.CLOSED),
            setImmediate(() => {
              this._reset(!0, 1e3, "Disconnect requested by user");
            });
        }
        networkStateChange(e, t) {
          let n =
            !(arguments.length > 2) || void 0 === arguments[2] || arguments[2];
          this.expeditedHeartbeat(e, t, n, !1);
        }
        expeditedHeartbeat(e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : "",
            n =
              !(arguments.length > 2) ||
              void 0 === arguments[2] ||
              arguments[2],
            s =
              !(arguments.length > 3) ||
              void 0 === arguments[3] ||
              arguments[3];
          if (!this.isClosed()) {
            if (this.isConnected()) {
              k.verbose(
                `Performing an expedited heartbeat ${null != t && "" !== t ? "reason: " + t : ""}`
              ),
                (this.heartbeatAck = !1),
                this._sendHeartbeat(),
                null !== this.expeditedHeartbeatTimeout &&
                  clearTimeout(this.expeditedHeartbeatTimeout),
                (this.expeditedHeartbeatTimeout = setTimeout(() => {
                  (this.expeditedHeartbeatTimeout = null),
                    !1 === this.heartbeatAck && this._handleHeartbeatTimeout();
                }, e));
              return;
            }
            n
              ? this.resetBackoff(t, s)
              : k.verbose(
                  `Expedited heartbeat requested, but, connection state is ${this.connectionState} and reconnectImmediately was not requested ${null != t && "" !== t ? "reason: " + t : ""}`
                );
          }
        }
        resetBackoff() {
          let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : "",
            t =
              !(arguments.length > 1) ||
              void 0 === arguments[1] ||
              arguments[1];
          k.verbose(
            `Connection has reset backoff${null != e && "" !== e ? " for reason: " + e : ""}`
          ),
            this.gatewayBackoff.succeed(),
            (this.iosGoingAwayEventCount = 0),
            (this.nextReconnectIsImmediate = !0),
            this.willReconnect()
              ? this._connect()
              : t &&
                this.connectionState !== A.default.SESSION_ESTABLISHED &&
                this._handleClose(!0, 0, e);
        }
      }
    },
    821145: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          createResumeAnalytics: function () {
            return f;
          },
          getConnectionPath: function () {
            return d;
          },
          getReadyPayloadByteSizeAnalytics: function () {
            return l;
          },
          logReadyPayloadReceived: function () {
            return u;
          },
          logResumeAnalytics: function () {
            return _;
          },
        }),
        n("653041");
      var s = n("990835");
      n("42084");
      var i = n("167555"),
        r = n("871831"),
        a = n("328470"),
        o = n("467006");
      function u(e, t, n, r, u) {
        let d = (function (e) {
          let { _trace: t } = e,
            n = {};
          try {
            let e = JSON.parse(t);
            null != e[0] &&
              "" !== e[0] &&
              e[0].startsWith("gateway-") &&
              (n.identify_total_server_duration_ms = Math.floor(
                e[1].micros / 1e3
              )),
              (function e(t, n) {
                if (null != t && t.length > 0)
                  for (let s = 0; s < t.length; s += 2) {
                    let i = t[s],
                      r = t[s + 1];
                    n(i, r.micros), e(r.calls, n);
                  }
              })(e, (e, t) => {
                "start_session" === e
                  ? (n.identify_api_duration_ms = Math.floor(t / 1e3))
                  : "guilds_connect" === e &&
                    (n.identify_guilds_duration_ms = Math.floor(t / 1e3));
              });
          } catch (e) {}
          return n;
        })(t);
        null != r &&
          s.default.addDetail(
            "payload_size(kb)",
            Math.round(r.uncompressed_byte_size / 1024)
          ),
          s.default.addDetail(
            "server_time(ms)",
            d.identify_total_server_duration_ms ?? 0
          );
        let l = {
          ...r,
          ...d,
          ...(function (e) {
            let { guilds: t } = e,
              n = 0,
              s = 0;
            return (
              t.forEach(e => {
                if (e.unavailable) return;
                let t =
                  "partial" === e.data_mode
                    ? e.partial_updates.channels
                    : e.channels;
                null != t &&
                  null != t.forEach &&
                  t.forEach(e => {
                    s++, e.type === o.ChannelTypes.GUILD_CATEGORY && n++;
                  });
              }),
              {
                num_guilds: t.length,
                num_guild_channels: s,
                num_guild_category_channels: n,
              }
            );
          })(t),
          ...u,
          duration_ms_since_identify_start: n - e.identifyStartTime,
          duration_ms_since_connection_start: n - e.connectionStartTime,
          duration_ms_since_emit_start: Date.now() - n,
          is_reconnect: e.hasConnectedOnce,
          is_fast_connect: e.isFastConnect,
          did_force_clear_guild_hashes: e.didForceClearGuildHashes,
          identify_uncompressed_byte_size: e.identifyUncompressedByteSize,
          identify_compressed_byte_size: e.identifyCompressedByteSize,
          had_cache_at_startup: e.analytics.hadCacheAtStartup ?? !1,
          used_cache_at_startup: e.analytics.usedCacheAtStartup ?? !1,
        };
        i.default.attachReadyPayloadProperties(l),
          a.default.track(o.AnalyticEvents.READY_PAYLOAD_RECEIVED, l, {
            logEventProperties: !0,
          });
      }
      function d(e) {
        try {
          let t = (function (e) {
            return null == e
              ? null
              : (function e(t, n) {
                  if (null == t) return "";
                  let s = "";
                  for (let i = 0; i < t.length; i += 2)
                    s +=
                      `
${n}${t[i]}: ${t[i + 1].micros / 1e3}` + e(t[i + 1].calls, n + "|  ");
                  return s;
                })(JSON.parse(e), "");
          })(e._trace?.[0]);
          if (null != t) return t;
        } catch (e) {}
        return null != e._trace ? e._trace.join(" -> ") : "???";
      }
      function l(e) {
        let t = Date.now(),
          {
            guilds: n,
            merged_presences: s,
            merged_members: i,
            read_state: r,
            private_channels: a,
            user_guild_settings: o,
            user_settings: u,
            user_settings_proto: d,
            experiments: l,
            guild_experiments: f,
            relationships: _,
            users: c,
            ...g
          } = e,
          m = [],
          h = [],
          E = [],
          p = [],
          v = [],
          y = [],
          I = [],
          T = [];
        return (
          n.forEach(e => {
            if (e.unavailable) return;
            let { features: t, ...n } = e.properties ?? {},
              { threads: s, guild_scheduled_events: i, ...r } = e;
            m.push(
              "partial" === e.data_mode
                ? e.partial_updates.channels
                : e.channels
            ),
              h.push(
                "partial" === e.data_mode ? e.partial_updates.roles : e.roles
              ),
              E.push(
                "partial" === e.data_mode ? e.partial_updates.emojis : e.emojis
              ),
              p.push(s),
              v.push(
                "partial" === e.data_mode
                  ? e.partial_updates.stickers
                  : e.stickers
              ),
              y.push(t),
              I.push(i),
              T.push(r, n);
          }),
          {
            presences_size: JSON.stringify(s?.friends ?? []).length,
            users_size: JSON.stringify(c).length,
            read_states_size: JSON.stringify(r).length,
            private_channels_size: JSON.stringify(a).length,
            user_settings_size:
              JSON.stringify(u ?? "").length + (d ?? "").length,
            experiments_size:
              JSON.stringify(l ?? []).length + JSON.stringify(f ?? []).length,
            user_guild_settings_size: JSON.stringify(o).length,
            relationships_size: JSON.stringify(_).length,
            remaining_data_size: JSON.stringify(g ?? {}).length,
            guild_channels_size: JSON.stringify(m).length,
            guild_members_size: JSON.stringify(i ?? []).length,
            guild_presences_size: JSON.stringify(s?.guilds ?? []).length,
            guild_roles_size: JSON.stringify(h).length,
            guild_emojis_size: JSON.stringify(E).length,
            guild_threads_size: JSON.stringify(p).length,
            guild_stickers_size: JSON.stringify(v).length,
            guild_events_size: JSON.stringify(I).length,
            guild_features_size: JSON.stringify(y).length,
            guild_remaining_data_size: JSON.stringify(T).length,
            size_metrics_duration_ms: Date.now() - t,
          }
        );
      }
      function f(e) {
        return {
          connectTime: e ?? 0,
          numEvents: 0,
          largestWaitTime: 0,
          dispatchTime: 0,
          totalWaitTime: 0,
          initialWaitTime: 0,
          startTime: performance.now(),
          lastUpdateTime: performance.now(),
        };
      }
      function _(e) {
        !(!r.default.getCurrentUser()?.isStaff() && 0.5 > Math.random()) &&
          a.default.track(
            o.AnalyticEvents.CONNECTION_RESUMED,
            {
              connect_time_ms: e.connectTime,
              resume_time_ms: Math.floor(performance.now() - e.startTime),
              num_events: e.numEvents,
              largest_wait_time_ms: Math.floor(e.largestWaitTime),
              initial_wait_time_ms: Math.floor(e.initialWaitTime),
              total_wait_time_ms: Math.floor(e.totalWaitTime),
              total_dispatch_time_ms: Math.floor(e.dispatchTime),
            },
            { logEventProperties: !0 }
          );
      }
    },
    264976: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return m;
          },
        }),
        n("653041");
      var s,
        i,
        r = n("661223"),
        a = n("841869"),
        o = n("12164"),
        u = n("107634"),
        d = n("596818"),
        l = n("821145");
      let f = new a.default("GatewaySocket"),
        _ = new Set(["INITIAL_GUILD", "READY"]),
        c = new Set(["READY", "INITIAL_GUILD"]),
        g = new Set(["READY", "READY_SUPPLEMENTAL", "RESUMED"]);
      ((i = s || (s = {}))[(i.NotStarted = 0)] = "NotStarted"),
        (i[(i.Loading = 1)] = "Loading"),
        (i[(i.Loaded = 2)] = "Loaded");
      class m {
        constructor(e) {
          (this.socket = e),
            (this.queue = []),
            (this.dispatchTimeout = null),
            (this.nextDispatchTimeout = 33),
            (this.paused = !0),
            (this.resumeAnalytics = (0, l.createResumeAnalytics)()),
            (this.getDispatchHandler = null),
            (this.flush = () => {
              if (this.paused) return;
              clearTimeout(this.dispatchTimeout), (this.dispatchTimeout = null);
              let e = Date.now(),
                t = 0;
              for (; t < this.queue.length && 2 === this.queue[t].status; t++);
              if (0 === t) return;
              let n = this.queue.splice(0, t);
              this.dispatchMultiple(n);
              let s = Date.now() - e;
              s > 100
                ? (f.log(`Dispatched ${n.length} messages in ${s}ms`),
                  (this.nextDispatchTimeout = 250))
                : (this.nextDispatchTimeout = 33);
            });
        }
        hasStuffToDispatchNow() {
          return this.queue.length > 0 && 2 === this.queue[0].status;
        }
        processFirstQueuedDispatch(e) {
          let t = [];
          for (
            ;
            this.queue.length > 0 &&
            e.has(this.queue[0].type) &&
            2 === this.queue[0].status;

          )
            t.push(this.queue.shift());
          this.dispatchMultiple(t);
        }
        unpauseDispatchQueue() {
          for (let e of ((this.paused = !1), this.queue)) this.maybePreload(e);
          this.flush();
        }
        receiveDispatch(e, t, n) {
          if (null == this.getDispatchHandler)
            throw Error("getDispatchHandler needs to be passed in first!");
          let s = {
            data: e,
            type: t,
            compressionAnalytics: n,
            status: 0,
            preloadPromise: null,
            preloadedData: null,
          };
          this.queue.push(s), !this.maybePreload(s) && this.scheduleFlush(t);
        }
        maybePreload(e) {
          if (this.paused && !_.has(e.type)) return !1;
          if (0 === e.status) {
            let t = this.getDispatchHandler(e.type)?.preload(e.data);
            if (
              ((e.status = null == t ? 2 : 1),
              (e.preloadPromise = t),
              null != t)
            )
              return (
                t
                  .then(t => {
                    (e.preloadedData = t),
                      (e.status = 2),
                      this.scheduleFlush(e.type);
                  })
                  .catch(t =>
                    this.socket.resetSocketOnDispatchError({
                      error: t,
                      action: e.type,
                    })
                  ),
                !0
              );
          }
          return !1;
        }
        scheduleFlush(e) {
          !this.paused &&
            (c.has(e)
              ? (null != this.dispatchTimeout &&
                  clearTimeout(this.dispatchTimeout),
                this.flush())
              : null == this.dispatchTimeout &&
                (this.dispatchTimeout = setTimeout(
                  this.flush,
                  this.nextDispatchTimeout
                )));
        }
        dispatchMultiple(e) {
          if (0 === e.length) return;
          let t = "none",
            n = !1;
          try {
            this.socket.connectionState === d.default.RESUMING &&
              r.default.Emitter.pause(150),
              r.default.Emitter.batched(() => {
                e.forEach(e => {
                  (t = e.type), (n = n || g.has(e.type)), this.dispatchOne(e);
                }),
                  u.default.flush();
              }),
              n && r.default.Emitter.resume();
          } catch (e) {
            this.socket.resetSocketOnDispatchError({ error: e, action: t });
          }
        }
        dispatchOne(e) {
          let {
              data: t,
              type: n,
              compressionAnalytics: s,
              preloadedData: i,
            } = e,
            r = performance.now();
          if (this.socket.connectionState === d.default.RESUMING) {
            let e = r - this.resumeAnalytics.lastUpdateTime;
            0 === this.resumeAnalytics.numEvents
              ? (this.resumeAnalytics.initialWaitTime = e)
              : e > this.resumeAnalytics.largestWaitTime &&
                (this.resumeAnalytics.largestWaitTime = e),
              (this.resumeAnalytics.totalWaitTime += e),
              (this.resumeAnalytics.lastUpdateTime = r),
              (this.resumeAnalytics.numEvents += 1);
          }
          if (
            (o.default.isLoggingGatewayEvents &&
              f.verboseDangerously("<~", n, t),
            u.default.flush(n, t),
            "READY" === n)
          ) {
            let e = (0, l.getReadyPayloadByteSizeAnalytics)(t);
            this.getDispatchHandler(n)?.dispatch(t, n, i),
              (0, l.logReadyPayloadReceived)(this.socket, t, r, s, e);
          } else
            "RESUMED" === n
              ? (this.getDispatchHandler(n)?.dispatch(t, n, i),
                (0, l.logResumeAnalytics)(this.resumeAnalytics),
                (this.resumeAnalytics = (0, l.createResumeAnalytics)()),
                this.socket.handleResumeDispatched())
              : this.getDispatchHandler(n)?.dispatch(t, n, i);
          this.socket.connectionState === d.default.RESUMING &&
            (this.resumeAnalytics.dispatchTime += performance.now() - r);
        }
        clear() {
          (this.paused = !1), (this.queue.length = 0);
        }
      }
    },
    32536: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          Opcode: function () {
            return s;
          },
          default: function () {
            return d;
          },
        }),
        n("789020");
      var s,
        i,
        r = n("836560"),
        a = n("67121"),
        o = n("84819"),
        u = n("467006");
      ((i = s || (s = {}))[(i.DISPATCH = 0)] = "DISPATCH"),
        (i[(i.HEARTBEAT = 1)] = "HEARTBEAT"),
        (i[(i.IDENTIFY = 2)] = "IDENTIFY"),
        (i[(i.PRESENCE_UPDATE = 3)] = "PRESENCE_UPDATE"),
        (i[(i.VOICE_STATE_UPDATE = 4)] = "VOICE_STATE_UPDATE"),
        (i[(i.VOICE_SERVER_PING = 5)] = "VOICE_SERVER_PING"),
        (i[(i.RESUME = 6)] = "RESUME"),
        (i[(i.RECONNECT = 7)] = "RECONNECT"),
        (i[(i.REQUEST_GUILD_MEMBERS = 8)] = "REQUEST_GUILD_MEMBERS"),
        (i[(i.INVALID_SESSION = 9)] = "INVALID_SESSION"),
        (i[(i.HELLO = 10)] = "HELLO"),
        (i[(i.HEARTBEAT_ACK = 11)] = "HEARTBEAT_ACK"),
        (i[(i.CALL_CONNECT = 13)] = "CALL_CONNECT"),
        (i[(i.GUILD_SUBSCRIPTIONS = 14)] = "GUILD_SUBSCRIPTIONS"),
        (i[(i.LOBBY_CONNECT = 15)] = "LOBBY_CONNECT"),
        (i[(i.LOBBY_DISCONNECT = 16)] = "LOBBY_DISCONNECT"),
        (i[(i.LOBBY_VOICE_STATES_UPDATE = 17)] = "LOBBY_VOICE_STATES_UPDATE"),
        (i[(i.STREAM_CREATE = 18)] = "STREAM_CREATE"),
        (i[(i.STREAM_DELETE = 19)] = "STREAM_DELETE"),
        (i[(i.STREAM_WATCH = 20)] = "STREAM_WATCH"),
        (i[(i.STREAM_PING = 21)] = "STREAM_PING"),
        (i[(i.STREAM_SET_PAUSED = 22)] = "STREAM_SET_PAUSED"),
        (i[(i.REQUEST_GUILD_APPLICATION_COMMANDS = 24)] =
          "REQUEST_GUILD_APPLICATION_COMMANDS"),
        (i[(i.EMBEDDED_ACTIVITY_LAUNCH = 25)] = "EMBEDDED_ACTIVITY_LAUNCH"),
        (i[(i.EMBEDDED_ACTIVITY_CLOSE = 26)] = "EMBEDDED_ACTIVITY_CLOSE"),
        (i[(i.EMBEDDED_ACTIVITY_UPDATE = 27)] = "EMBEDDED_ACTIVITY_UPDATE"),
        (i[(i.REQUEST_FORUM_UNREADS = 28)] = "REQUEST_FORUM_UNREADS"),
        (i[(i.REMOTE_COMMAND = 29)] = "REMOTE_COMMAND"),
        (i[(i.GET_DELETED_ENTITY_IDS_NOT_MATCHING_HASH = 30)] =
          "GET_DELETED_ENTITY_IDS_NOT_MATCHING_HASH"),
        (i[(i.REQUEST_SOUNDBOARD_SOUNDS = 31)] = "REQUEST_SOUNDBOARD_SOUNDS"),
        (i[(i.SPEED_TEST_CREATE = 32)] = "SPEED_TEST_CREATE"),
        (i[(i.SPEED_TEST_DELETE = 33)] = "SPEED_TEST_DELETE"),
        (i[(i.REQUEST_LAST_MESSAGES = 34)] = "REQUEST_LAST_MESSAGES"),
        (i[(i.SEARCH_RECENT_MEMBERS = 35)] = "SEARCH_RECENT_MEMBERS"),
        (i[(i.REQUEST_CHANNEL_STATUSES = 36)] = "REQUEST_CHANNEL_STATUSES"),
        (i[(i.GUILD_SUBSCRIPTIONS_BULK = 37)] = "GUILD_SUBSCRIPTIONS_BULK");
      class d extends r.EventEmitter {
        presenceUpdate(e, t, n, s, i) {
          this.send(3, {
            status: e,
            since: t,
            activities: n,
            afk: s,
            broadcast: i,
          });
        }
        voiceStateUpdate(e) {
          let {
              guildId: t = null,
              channelId: n = null,
              selfMute: s = !1,
              selfDeaf: i = !1,
              selfVideo: r = !1,
              preferredRegion: o = null,
              videoStreamParameters: u = null,
              flags: d = 0,
            } = e,
            l = {
              guild_id: t,
              channel_id: n,
              self_mute: s,
              self_deaf: i,
              self_video: r,
              flags: d,
            };
          null != n &&
            a.default.shouldIncludePreferredRegion() &&
            (l.preferred_region = o),
            null != u &&
              (l.tracks = u?.map(e => ({
                type: e.type,
                rid: e.rid,
                quality: e.quality,
              }))),
            this.send(4, l);
        }
        voiceServerPing() {
          this.send(5, null);
        }
        embeddedActivityClose(e, t, n) {
          this.send(26, {
            guild_id: e ?? u.ZERO_STRING_GUILD_ID,
            channel_id: t,
            application_id: n,
          });
        }
        requestGuildMembers(e, t) {
          let { query: n, limit: s, userIds: i, presences: r } = t;
          this.send(8, {
            guild_id: e,
            query: n,
            limit: s,
            user_ids: i,
            presences: r,
          });
        }
        searchRecentMembers(e, t) {
          let { query: n, continuationToken: s } = t;
          this.send(35, {
            guild_id: e,
            query: n ?? "",
            continuation_token: s ?? null,
          });
        }
        updateGuildSubscriptions(e) {
          let t = {},
            n = 0;
          o.default.keys(e).forEach(s => {
            let i = e[s],
              r = JSON.stringify([s, i]).length;
            n + r > 15360 &&
              (this.send(37, { subscriptions: t }), (t = {}), (n = 0)),
              (t[s] = i),
              (n += r);
          }),
            n > 0 && this.send(37, { subscriptions: t });
        }
        callConnect(e) {
          this.send(13, { channel_id: e });
        }
        lobbyConnect(e, t) {
          this.send(15, { lobby_id: e, lobby_secret: t });
        }
        lobbyDisconnect(e) {
          this.send(16, { lobby_id: e });
        }
        lobbyVoiceStatesUpdate(e) {
          this.send(
            17,
            e.map(e => ({
              lobby_id: e.lobbyId,
              self_mute: e.selfMute,
              self_deaf: e.selfDeaf,
            }))
          );
        }
        streamCreate(e, t, n) {
          let s =
            arguments.length > 3 && void 0 !== arguments[3]
              ? arguments[3]
              : null;
          this.send(18, {
            type: e,
            guild_id: t,
            channel_id: n,
            preferred_region: s,
          });
        }
        streamWatch(e) {
          this.send(20, { stream_key: e });
        }
        streamPing(e) {
          this.send(21, { stream_key: e });
        }
        streamDelete(e) {
          this.send(19, { stream_key: e });
        }
        streamSetPaused(e, t) {
          this.send(22, { stream_key: e, paused: t });
        }
        speedTestCreate() {
          let e =
            arguments.length > 0 && void 0 !== arguments[0]
              ? arguments[0]
              : null;
          this.send(32, { preferred_region: e });
        }
        speedTestDelete() {
          this.send(33, null);
        }
        requestForumUnreads(e, t, n) {
          this.send(28, {
            guild_id: e,
            channel_id: t,
            threads: n.map(e => ({
              thread_id: e.threadId,
              ack_message_id: e.ackMessageId,
            })),
          });
        }
        requestSoundboardSounds(e) {
          this.send(31, { guild_ids: e });
        }
        requestLastMessages(e, t) {
          this.send(34, { guild_id: e, channel_ids: t });
        }
        getDeletedEntityIdsNotMatchingHash(e, t, n, s, i) {
          this.send(30, {
            guild_id: e,
            channel_ids_hash: t,
            role_ids_hash: n,
            emoji_ids_hash: s,
            sticker_ids_hash: i,
          });
        }
        requestChannelStatuses(e) {
          this.send(36, { guild_id: e });
        }
        remoteCommand(e, t) {
          this.send(29, { target_session_id: e, payload: t });
        }
      }
    },
    307911: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          localLobbyVoiceStates: function () {
            return p;
          },
          localPresenceState: function () {
            return h;
          },
          localVoiceState: function () {
            return E;
          },
          socket: function () {
            return m;
          },
        });
      var s = n("312916"),
        i = n("99588"),
        r = n("841869"),
        a = n("262047"),
        o = n("328470"),
        u = n("151254"),
        d = n("501769"),
        l = n("741826"),
        f = n("317843"),
        _ = n("149395"),
        c = n("517741");
      let g = new r.default("ConnectionStore"),
        m = new l.default(),
        h = new _.default(m),
        E = new c.default(m),
        p = new f.default(m);
      (m.handleIdentify = () => {
        let e = a.default.getToken();
        return (g.verbose("handleIdentify called", { hasToken: null != e }),
        null == e)
          ? null
          : {
              token: e,
              properties: o.default.getSuperProperties(),
              presence: h.getState(),
            };
      }),
        (0, d.isDesktop)() &&
          i.default.remotePowerMonitor.on("resume", () => {
            m.expeditedHeartbeat(5e3, "power monitor resumed");
          }),
        u.default.addOfflineCallback(() => {
          m.networkStateChange(15e3, "network detected offline.", !1);
        }),
        u.default.addOnlineCallback(() => {
          m.networkStateChange(5e3, "network detected online.");
        }),
        m.on("disconnect", e => {
          let { code: t, reason: n } = e;
          s.default.dispatch({ type: "CONNECTION_CLOSED", code: t, reason: n });
        }),
        m.on("close", e => {
          let { code: t, reason: n } = e;
          s.default.dispatch({
            type: "CONNECTION_INTERRUPTED",
            code: t,
            reason: n,
          });
        });
    },
    317843: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
      var s = n("267433"),
        i = n("663241"),
        r = n("386130");
      class a extends s.default {
        constructor(e) {
          super(), (this.socket = e), (this._hadLobbyVoiceStates = !1);
        }
        getInitialState() {
          return this.getNextState();
        }
        getNextState() {
          let e = i.default.getLobbiesWithVoice();
          return (
            e.length > 0 && (this._hadLobbyVoiceStates = !0),
            {
              lobbies: e.map(e => ({
                lobbyId: e.id,
                selfMute: r.default.isSelfMute(e.application_id),
                selfDeaf: r.default.isSelfDeaf(e.application_id),
              })),
            }
          );
        }
        shouldCommit() {
          return (
            this._hadLobbyVoiceStates && this.socket.isSessionEstablished()
          );
        }
        didCommit(e) {
          let { lobbies: t } = e;
          this.socket.lobbyVoiceStatesUpdate(t);
        }
        forceUpdate() {
          this._hadLobbyVoiceStates && super.forceUpdate();
        }
      }
    },
    149395: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
      var s = n("267433"),
        i = n("548297"),
        r = n("145080");
      class a extends s.default {
        constructor(e) {
          super(),
            (this.socket = e),
            (this.switchingAccounts = !1),
            (this.didCommit = (0, i.default)(
              5,
              2e4,
              this.emitPresenceUpdate.bind(this)
            ));
        }
        getInitialState() {
          return r.default.getLocalPresence();
        }
        getNextState() {
          return r.default.getLocalPresence();
        }
        shouldCommit() {
          return this.socket.isSessionEstablished();
        }
        emitPresenceUpdate(e) {
          let { status: t, since: n, activities: s, afk: i, broadcast: r } = e;
          this.socket.presenceUpdate(t, n, s, i, r);
        }
        handleConnectionOpen() {
          let e = !this.switchingAccounts;
          this.update({}, e), (this.switchingAccounts = !1);
        }
        handleAccountSwitch() {
          (this.switchingAccounts = !0),
            this.reset(),
            this.emitPresenceUpdate(this.getState());
        }
      }
    },
    517741: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
        }),
        n("789020");
      var s = n("267433"),
        i = n("707609"),
        r = n("957390"),
        a = n("90559"),
        o = n("224022"),
        u = n("894262"),
        d = n("408438"),
        l = n("362939"),
        f = n("311545"),
        _ = n("731865"),
        c = n("386130"),
        g = n("67121"),
        m = n("984362"),
        h = n("467006");
      class E extends s.default {
        constructor(e) {
          super(), (this.socket = e);
        }
        get guildId() {
          return this.getState().guildId;
        }
        get channelId() {
          return this.getState().channelId;
        }
        computeVoiceFlags() {
          let e = 0,
            t = l.ClipsAllowVoiceRecording.getSetting();
          e = (0, m.setFlag)(e, h.VoiceFlags.ALLOW_VOICE_RECORDING, t);
          let n = (0, a.default)(c.default),
            s =
              (0, i.areClipsEnabled)() &&
              r.default.getSettings().clipsEnabled &&
              (f.default.getCurrentUserActiveStream()?.state ===
                h.ApplicationStreamStates.ACTIVE ||
                f.default.getCurrentUserActiveStream()?.state ===
                  h.ApplicationStreamStates.PAUSED),
            { enableDecoupledGameClipping: _ } = u.default.getCurrentConfig({
              location: "computeVoiceFlags",
            }),
            g =
              n &&
              r.default.getSettings().decoupledClipsEnabled &&
              o.default.getVisibleGame()?.windowHandle != null &&
              _;
          e = (0, m.setFlag)(e, h.VoiceFlags.CLIPS_ENABLED, s || g);
          let { enableViewerClipping: E } = d.default.getCurrentConfig(
              { location: "computeVoiceFlags" },
              { autoTrackExposure: !1 }
            ),
            p = E && n && r.default.getSettings().viewerClipsEnabled;
          return (e = (0, m.setFlag)(
            e,
            h.VoiceFlags.ALLOW_ANY_VIEWER_CLIPS,
            p
          ));
        }
        getInitialState() {
          return {
            guildId: null,
            channelId: null,
            selfMute: c.default.isSelfMute(),
            selfDeaf: c.default.isSelfDeaf(),
            selfVideo: c.default.isVideoEnabled(),
            preferredRegion: null,
            videoStreamParameters: null,
            flags: 0,
          };
        }
        getNextState(e) {
          let { guildId: t, channelId: n } = e;
          return {
            guildId: t,
            channelId: n,
            selfMute: c.default.isSelfMute(),
            selfDeaf: c.default.isSelfDeaf(),
            selfVideo: c.default.isVideoEnabled(),
            preferredRegion: g.default.getPreferredRegion(),
            videoStreamParameters: c.default.getVideoStreamParameters(),
            flags: this.computeVoiceFlags(),
          };
        }
        shouldCommit() {
          return this.socket.isSessionEstablished();
        }
        didCommit(e) {
          let {
            guildId: t,
            channelId: n,
            selfMute: s,
            selfDeaf: i,
            selfVideo: r,
            preferredRegion: a,
            videoStreamParameters: o,
            flags: u = 0,
          } = e;
          r &&
          _.default.getChannel(n)?.type === h.ChannelTypes.GUILD_STAGE_VOICE
            ? this.socket.voiceStateUpdate({
                guildId: t,
                channelId: n,
                selfMute: s,
                selfDeaf: i,
                selfVideo: r,
                preferredRegion: a,
                videoStreamParameters: o,
                flags: u,
              })
            : this.socket.voiceStateUpdate({
                guildId: t,
                channelId: n,
                selfMute: s,
                selfDeaf: i,
                selfVideo: r,
                preferredRegion: a,
                flags: u,
              });
        }
      }
    },
    364990: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getIsPaused: function () {
            return i;
          },
          setIsPaused: function () {
            return r;
          },
        });
      let s = !1;
      function i() {
        return s;
      }
      function r(e) {
        s = e;
      }
    },
    511349: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          addPostConnectionCallback: function () {
            return o;
          },
        }),
        n("177593"),
        n("653041");
      var s = n("312916"),
        i = n("706608");
      let r = [];
      function a(e) {
        setImmediate(() => e());
      }
      function o(e) {
        i.default.isConnectedOrOverlay() ? a(e) : r.push(e);
      }
      s.default.subscribe("CONNECTION_OPEN", () => {
        r.forEach(e => a(e)), (r = []);
      });
    },
    16803: function (e, t, n) {
      "use strict";
      function s(e, t) {
        return new WebSocket(e, t);
      }
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
    },
    548339: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return U;
          },
        }),
        n("653041"),
        n("789020");
      var s = n("392711"),
        i = n.n(s);
      n("566899");
      var r = n("661223"),
        a = n("312916"),
        o = n("181123"),
        u = n("714558"),
        d = n("122677"),
        l = n("841869"),
        f = n("187925"),
        _ = n("331258"),
        c = n("167555"),
        g = n("296192"),
        m = n("775822"),
        h = n("319030"),
        E = n("535291"),
        p = n("731865"),
        v = n("361733"),
        y = n("240335"),
        I = n("663241"),
        T = n("871831"),
        S = n("642174"),
        C = n("643847"),
        A = n("416573"),
        N = n("28692"),
        D = n("158528"),
        O = n("107634"),
        R = n("307911");
      let P = new l.default("ConnectionStore"),
        b = new O.default(
          R.socket,
          (e, t) => {
            e = e ?? { type: "CHANNEL_UPDATES", channels: [] };
            let n = (0, m.createChannelRecordFromServer)(t),
              s = p.default.getChannel(t.id),
              i = s?.merge({
                ...n,
                recipients: s.recipients,
                bitrate: n.bitrate ?? s.bitrate,
              });
            return e.channels.push(i ?? n), e;
          },
          e => "CHANNEL_UPDATE" !== e
        ),
        M = new O.default(
          R.socket,
          (e, t) => (
            (e =
              null == e
                ? { type: "SOUNDBOARD_SOUNDS_RECEIVED", updates: [] }
                : e).updates.push({
              guildId: t.guild_id,
              sounds: t.soundboard_sounds.map(e => ({
                name: e.name,
                soundId: e.sound_id,
                emojiName: e.emoji_name,
                emojiId: e.emoji_id,
                userId: e.user_id,
                volume: e.volume,
                available: e.available,
                guildId: t.guild_id,
              })),
            }),
            e
          ),
          e => "SOUNDBOARD_SOUNDS" !== e
        ),
        V = new O.default(
          R.socket,
          (e, t) => (
            (e =
              null == e
                ? { type: "PRESENCE_UPDATES", updates: [] }
                : e).updates.push(t),
            e
          ),
          e => "PRESENCE_UPDATE" !== e
        ),
        L = {};
      function k(e, t) {
        for (let n of e) L[n] = { preload: () => null, dispatch: t };
      }
      function w(e, t, n) {
        for (let s of e) L[s] = { preload: t, dispatch: n };
      }
      function U(e) {
        return L[e];
      }
      function G(e) {
        a.default
          .dispatch(e)
          .catch(t =>
            R.socket.resetSocketOnDispatchError({ error: t, action: e.type })
          );
      }
      function F(e, t, n) {
        let {
            roles: s,
            nick: r,
            avatar: a,
            avatar_decoration_data: o,
            flags: u,
            premium_since: d,
            pending: l,
            joined_at: f,
            communication_disabled_until: _,
            unusual_dm_activity_until: c,
          } = n,
          g = v.default.getMember(e, t.id);
        (!(
          null != g &&
          g.nick === r &&
          g.avatar === a &&
          i().isEqual(g.roles, s) &&
          i().isEqual(g.avatarDecoration, o)
        ) ||
          g.premiumSince !== d ||
          g.isPending !== l ||
          g.joinedAt !== f ||
          g.communicationDisabledUntil !== _ ||
          g.flags !== u ||
          g.unusualDMActivityUntil !== c) &&
          G({
            type: "GUILD_MEMBER_ADD",
            guildId: e,
            user: t,
            roles: s,
            nick: r,
            avatar: a,
            avatarDecoration: o,
            premiumSince: d,
            isPending: l,
            joinedAt: f,
            communicationDisabledUntil: _,
            unusualDMActivityUntil: c,
            flags: u,
          });
      }
      function B(e) {
        let { member: t, mentions: n, author: s, guild_id: i } = e;
        null != t && null != i && F(i, s, t),
          null != n &&
            n.forEach(e => {
              if (null != e.member && null != i) {
                let { member: t } = e;
                delete e.member, F(i, e, t);
              }
            });
      }
      function H(e) {
        return e.map(e => ({
          sessionId: e.session_id,
          lastModified: e.last_modified,
          status: e.status,
          activities: e.activities,
          active: !!e.active,
          clientInfo: e.client_info,
          broadcast: e.broadcast,
        }));
      }
      function x() {
        R.socket.isSessionEstablished() &&
          I.default.getPendingLobbies().forEach(e => {
            R.socket.lobbyConnect(e.id, e.secret);
          });
      }
      function Y(e) {
        let {
          guildId: t,
          user: n,
          status: s,
          activities: i,
          clientStatus: r,
          broadcast: a,
        } = e;
        V.add({
          guildId: t,
          user: n,
          status: s,
          clientStatus: r,
          activities: i,
          broadcast: a,
        });
      }
      w(
        ["INITIAL_GUILD"],
        e =>
          "full" === e.data_mode ? null : p.ChannelLoader.loadGuildIds([e.id]),
        e => {
          c.default.initialGuild.measure(() => {
            r.default.Emitter.batched(() => {
              let t = D.hydrateInitialGuild(e, R.socket.identifyStartTime);
              null != T.default.getCurrentUser() &&
                (G({ type: "GUILD_CREATE", guild: t }),
                G({
                  type: "VOICE_STATE_UPDATES",
                  voiceStates: t.voice_states.map(e => ({
                    userId: e.user_id,
                    guildId: t.id,
                    sessionId: e.session_id,
                    channelId: e.channel_id,
                    mute: e.mute,
                    deaf: e.deaf,
                    selfMute: e.self_mute,
                    selfDeaf: e.self_deaf,
                    selfVideo: e.self_video || !1,
                    suppress: e.suppress,
                    selfStream: e.self_stream || !1,
                    requestToSpeakTimestamp:
                      e.request_to_speak_timestamp ?? null,
                  })),
                }),
                P.log(`Dispatched INITIAL_GUILD ${e.id}`));
            });
          });
        }
      ),
        k(["READY_SUPPLEMENTAL"], e => {
          c.default.readySupplemental.measure(() => {
            r.default.Emitter.batched(() => {
              e = c.default.hydrateReadySupplemental.measure(() =>
                D.hydrateReadySupplementalPayload(e, R.socket.identifyStartTime)
              );
              let t = e =>
                  e.map(e => ({
                    user: e.user,
                    status: e.status,
                    clientStatus: e.client_status,
                    activities: e.activities,
                    broadcast: e.broadcast,
                  })),
                n = e.guilds.filter(e => !0 !== e.unavailable);
              n.forEach(e => {
                e.presences = t(e.presences || []);
              });
              let s = e.presences ? t(e.presences) : [],
                i = (e.lazy_private_channels ?? []).map(e =>
                  (0, m.createChannelRecordFromServer)(e)
                ),
                r = e.game_invites ?? [];
              c.default.dispatchReadySupplemental.measure(() => {
                G({
                  type: "CONNECTION_OPEN_SUPPLEMENTAL",
                  guilds: n,
                  presences: s,
                  lazyPrivateChannels: i,
                  gameInvites: r,
                });
              });
              let a = [];
              n.forEach(e => {
                e.voice_states.forEach(t => {
                  a.push({
                    userId: t.user_id,
                    guildId: e.id,
                    sessionId: t.session_id,
                    channelId: t.channel_id,
                    mute: t.mute,
                    deaf: t.deaf,
                    selfMute: t.self_mute,
                    selfDeaf: t.self_deaf,
                    selfVideo: t.self_video || !1,
                    suppress: t.suppress,
                    selfStream: t.self_stream || !1,
                    requestToSpeakTimestamp:
                      t.request_to_speak_timestamp ?? null,
                  });
                });
              }),
                G({ type: "VOICE_STATE_UPDATES", voiceStates: a, initial: !0 }),
                R.localVoiceState.update(),
                R.localLobbyVoiceStates.update({}, !0);
            });
          }),
            setTimeout(() => G({ type: "POST_CONNECTION_OPEN" }), 2e3);
        }),
        w(
          ["READY"],
          e => {
            let t = D.preloadReadyPayloadData(),
              n = e.guilds
                .filter(
                  e =>
                    !e.unavailable &&
                    "partial" === e.data_mode &&
                    (!!((e.partial_updates.channels ?? []).length > 0) ||
                      !!(
                        (e.partial_updates.deleted_channel_ids ?? []).length > 0
                      ) ||
                      void 0)
                )
                .map(e => e.id);
            return Promise.all([
              t,
              p.ChannelLoader.loadGuildIds(n) ?? Promise.resolve(),
            ]).then(e => {
              let [t] = e;
              return t;
            });
          },
          (e, t, n) => {
            if (e.user.bot) {
              G({ type: "LOGOUT" });
              return;
            }
            c.default.ready.measure(() => {
              r.default.Emitter.batched(() => {
                let t = (e = c.default.hydrateReady.measure(() =>
                    D.hydrateReadyPayloadPrioritized(
                      e,
                      R.socket.identifyStartTime,
                      n
                    )
                  )).private_channels.map(e =>
                    (0, m.createChannelRecordFromServer)(e)
                  ),
                  s = e.guilds
                    .filter(
                      e => !0 === e.unavailable && !0 !== e.geo_restricted
                    )
                    .map(e => e.id),
                  i = e.guilds.filter(e => !0 !== e.unavailable),
                  r = e.guilds.filter(e => !0 === e.geo_restricted);
                i.forEach(e => {
                  e.presences = [];
                });
                let a =
                  null == e.user_settings_proto
                    ? void 0
                    : (0, g.b64ToPreloadedUserSettingsProto)(
                        e.user_settings_proto
                      );
                c.default.dispatchReady.measure(() => {
                  G({
                    type: "CONNECTION_OPEN",
                    sessionId: e.session_id,
                    authSessionIdHash: e.auth_session_id_hash,
                    user: e.user,
                    users: e.users,
                    guilds: i,
                    initialPrivateChannels: t,
                    unavailableGuilds: s,
                    readState: e.read_state,
                    userGuildSettings: e.user_guild_settings,
                    tutorial: e.tutorial,
                    relationships: e.relationships,
                    friendSuggestionCount: e.friend_suggestion_count,
                    presences: e.presences,
                    analyticsToken: e.analytics_token,
                    experiments: e.experiments,
                    connectedAccounts: e.connected_accounts,
                    guildExperiments: e.guild_experiments,
                    requiredAction: e.required_action,
                    consents: e.consents,
                    sessions: H(e.sessions || []),
                    pendingPayments: e.pending_payments,
                    countryCode: e.country_code ?? void 0,
                    guildJoinRequests: e.guild_join_requests || [],
                    userSettingsProto: a,
                    apiCodeVersion: e.api_code_version,
                    auth: e.auth,
                    notificationSettings: {
                      flags: e.notification_settings.flags,
                    },
                    geoRestrictedGuilds: r,
                  });
                }),
                  null != e.auth_token &&
                    G({
                      type: "UPDATE_TOKEN",
                      token: e.auth_token,
                      userId: e.user.id,
                    }),
                  R.localPresenceState.update(),
                  R.localVoiceState.update(),
                  R.localLobbyVoiceStates.update(),
                  x();
              });
            });
          }
        ),
        k(["RESUMED"], () => {
          R.localPresenceState.forceUpdate(),
            R.localVoiceState.forceUpdate(),
            R.localLobbyVoiceStates.forceUpdate(),
            x(),
            G({ type: "CONNECTION_RESUMED" });
        }),
        k(["TYPING_START"], e => {
          null != e.member && F(e.guild_id, e.member.user, e.member),
            G({
              type: "TYPING_START",
              channelId: e.channel_id,
              userId: e.user_id,
            });
        }),
        k(["ACTIVITY_START"], e => {
          G({
            type: "ACTIVITY_START",
            userId: e.user_id,
            activity: e.activity,
          });
        }),
        k(["ACTIVITY_USER_ACTION"], e => {
          G({
            type: "ACTIVITY_USER_ACTION",
            actionType: e.action_type,
            user: e.user,
            applicationId: e.application_id,
            channelId: e.channel_id,
            messageId: e.message_id,
          });
        }),
        w(
          ["MESSAGE_CREATE"],
          e => p.ChannelLoader.loadGuildIds([e.guild_id]),
          e => {
            B(e),
              null != e.author &&
                G({
                  type: "MESSAGE_CREATE",
                  guildId: e.guild_id,
                  channelId: e.channel_id,
                  message: e,
                  optimistic: !1,
                  isPushNotification: !1,
                });
          }
        ),
        w(
          ["MESSAGE_UPDATE"],
          e => p.ChannelLoader.loadGuildIds([e.guild_id]),
          e => {
            B(e),
              G({ type: "MESSAGE_UPDATE", guildId: e.guild_id, message: e });
          }
        ),
        w(
          ["MESSAGE_DELETE"],
          e => p.ChannelLoader.loadGuildIds([e.guild_id]),
          e => {
            G({
              type: "MESSAGE_DELETE",
              guildId: e.guild_id,
              id: e.id,
              channelId: e.channel_id,
            });
          }
        ),
        w(
          ["MESSAGE_DELETE_BULK"],
          e => p.ChannelLoader.loadGuildIds([e.guild_id]),
          e => {
            G({
              type: "MESSAGE_DELETE_BULK",
              guildId: e.guild_id,
              ids: e.ids,
              channelId: e.channel_id,
            });
          }
        ),
        w(
          ["MESSAGE_ACK"],
          e => p.ChannelLoader.loadGuildFromChannelId(e.channel_id),
          e => {
            G({
              type: "MESSAGE_ACK",
              channelId: e.channel_id,
              messageId: e.message_id,
              manual: e.manual,
              newMentionCount: e.mention_count,
              version: e.version,
            });
          }
        ),
        k(["GUILD_FEATURE_ACK"], e => {
          G({
            type: "GUILD_FEATURE_ACK",
            id: e.resource_id,
            ackType: e.ack_type,
            ackedId: e.entity_id,
          });
        }),
        k(["USER_NON_CHANNEL_ACK"], e => {
          G({
            type: "USER_NON_CHANNEL_ACK",
            ackType: e.ack_type,
            ackedId: e.entity_id,
          });
        }),
        w(
          ["CHANNEL_PINS_ACK"],
          e => p.ChannelLoader.loadGuildIds([e.guild_id]),
          e => {
            G({
              type: "CHANNEL_PINS_ACK",
              channelId: e.channel_id,
              timestamp: e.timestamp,
              version: e.version,
            });
          }
        ),
        w(
          ["CHANNEL_PINS_UPDATE"],
          e => p.ChannelLoader.loadGuildIds([e.guild_id]),
          e => {
            G({
              type: "CHANNEL_PINS_UPDATE",
              channelId: e.channel_id,
              lastPinTimestamp: e.last_pin_timestamp,
            });
          }
        ),
        w(
          ["CHANNEL_CREATE", "CHANNEL_DELETE"],
          e => p.ChannelLoader.loadGuildIds([e.guild_id]),
          (e, t) => {
            G({ type: t, channel: (0, m.createChannelRecordFromServer)(e) });
          }
        ),
        k(["VOICE_CHANNEL_STATUS_UPDATE"], (e, t) => {
          G({ type: t, id: e.id, guildId: e.guild_id, status: e.status });
        }),
        k(["CHANNEL_STATUSES"], (e, t) => {
          G({ type: t, guildId: e.guild_id, channels: e.channels });
        }),
        w(
          ["CHANNEL_UPDATE"],
          e => p.ChannelLoader.loadGuildIds([e.guild_id]),
          e => {
            b.add(e);
          }
        ),
        w(
          ["THREAD_CREATE", "THREAD_UPDATE", "THREAD_DELETE"],
          e => p.ChannelLoader.loadGuildIds([e.guild_id]),
          (e, t) => {
            let { newly_created: n, ...s } = e;
            G({
              type: t,
              isNewlyCreated: n,
              channel: (0, m.createChannelRecordFromServer)(s),
            });
          }
        ),
        w(
          ["THREAD_LIST_SYNC"],
          e => p.ChannelLoader.loadGuildIds([e.guild_id]),
          e => {
            G({
              type: "THREAD_LIST_SYNC",
              guildId: e.guild_id,
              threads: e.threads.map(e => {
                let t = p.default.getChannel(e.parent_id);
                return (
                  null != t &&
                    ((e.nsfw = t.nsfw), (e.parentChannelThreadType = t.type)),
                  (0, m.createChannelRecordFromServer)(e)
                );
              }),
              mostRecentMessages: e.most_recent_messages,
              members: e.members ? i().map(e.members, _.default) : void 0,
              channelIds: e.channel_ids,
            });
          }
        ),
        k(["THREAD_MEMBER_UPDATE"], e => {
          G({
            type: "THREAD_MEMBER_UPDATE",
            id: e.id,
            guildId: e.guild_id,
            userId: e.user_id,
            flags: e.flags,
            muted: e.muted,
            muteConfig: e.mute_config,
            joinTimestamp: e.join_timestamp,
          });
        }),
        k(["THREAD_MEMBERS_UPDATE"], e => {
          G({
            type: "THREAD_MEMBERS_UPDATE",
            id: e.id,
            guildId: e.guild_id,
            memberCount: e.member_count,
            addedMembers: e.added_members?.map(t => ({
              id: t.id,
              guildId: e.guild_id,
              userId: t.user_id,
              flags: t.flags,
              joinTimestamp: t.join_timestamp,
            })),
            removedMemberIds: e.removed_member_ids,
            memberIdsPreview: e.member_ids_preview,
          });
        }),
        k(["FORUM_UNREADS"], e => {
          !e.permission_denied &&
            G({
              type: "FORUM_UNREADS",
              channelId: e.channel_id,
              threads: e.threads.map(e => ({
                threadId: e.thread_id,
                missing: e.missing,
                count: e.count,
              })),
            });
        }),
        k(["SOUNDBOARD_SOUNDS"], e => {
          M.add(e);
        }),
        k(["CHANNEL_RECIPIENT_ADD", "CHANNEL_RECIPIENT_REMOVE"], (e, t) => {
          let n = p.default.getBasicChannel(e.channel_id);
          G({
            type: t,
            channelId: e.channel_id,
            user: e.user,
            nick: e.nick,
            isMember: null != n,
          });
        }),
        w(
          ["GUILD_CREATE"],
          e =>
            "full" === e.data_mode
              ? null
              : p.ChannelLoader.loadGuildIds([e.id]),
          e => {
            if (e.unavailable) G({ type: "GUILD_UNAVAILABLE", guildId: e.id });
            else {
              let t = D.hydratePreviouslyUnavailableGuild(e);
              o.default.createGuild(t),
                G({
                  type: "VOICE_STATE_UPDATES",
                  voiceStates: t.voice_states.map(e => ({
                    userId: e.user_id,
                    guildId: t.id,
                    sessionId: e.session_id,
                    channelId: e.channel_id,
                    mute: e.mute,
                    deaf: e.deaf,
                    selfMute: e.self_mute,
                    selfDeaf: e.self_deaf,
                    selfVideo: e.self_video || !1,
                    suppress: e.suppress,
                    selfStream: e.self_stream || !1,
                    requestToSpeakTimestamp:
                      e.request_to_speak_timestamp ?? null,
                  })),
                });
            }
          }
        ),
        k(["GUILD_UPDATE"], e => {
          G({ type: "GUILD_UPDATE", guild: e }),
            e.unavailable && G({ type: "GUILD_UNAVAILABLE", guildId: e.id });
        }),
        k(["GUILD_DELETE"], e => {
          G({ type: "GUILD_DELETE", guild: e }),
            e.geo_restricted
              ? G({
                  type: "GUILD_GEO_RESTRICTED",
                  guildId: e.id,
                  icon: e.icon,
                  name: e.name,
                })
              : e.unavailable &&
                G({ type: "GUILD_UNAVAILABLE", guildId: e.id });
        }),
        k(["GUILD_MEMBERS_CHUNK"], e => {
          r.default.Emitter.batched(() => {
            G({
              type: "GUILD_MEMBERS_CHUNK",
              guildId: e.guild_id,
              members: e.members,
              notFound: e.not_found,
            }),
              null != e.presences &&
                e.presences.forEach(t => {
                  let {
                    user: n,
                    status: s,
                    client_status: i,
                    activities: r,
                    broadcast: a,
                  } = t;
                  return Y({
                    guildId: e.guild_id,
                    user: n,
                    status: s,
                    activities: r,
                    clientStatus: i,
                    broadcast: a,
                  });
                }),
              O.default.flush();
          });
        }),
        k(["THREAD_MEMBER_LIST_UPDATE"], e => {
          r.default.Emitter.batched(() => {
            G({
              type: "THREAD_MEMBER_LIST_UPDATE",
              guildId: e.guild_id,
              threadId: e.thread_id,
              members: e.members,
            }),
              null != e.presences &&
                e.presences.forEach(t => {
                  let {
                    user: n,
                    status: s,
                    client_status: i,
                    activities: r,
                    broadcast: a,
                  } = t;
                  return Y({
                    guildId: e.guild_id,
                    user: n,
                    status: s,
                    activities: r,
                    clientStatus: i,
                    broadcast: a,
                  });
                }),
              O.default.flush();
          });
        }),
        k(
          [
            "GUILD_BAN_ADD",
            "GUILD_BAN_REMOVE",
            "GUILD_MEMBER_ADD",
            "GUILD_MEMBER_UPDATE",
            "GUILD_MEMBER_REMOVE",
          ],
          (e, t) => {
            G({
              type: t,
              guildId: e.guild_id,
              user: e.user,
              avatar: e.avatar,
              avatarDecoration: e.avatar_decoration_data,
              roles: e.roles,
              nick: e.nick,
              premiumSince: e.premium_since,
              isPending: e.pending,
              joinedAt: e.joined_at,
              communicationDisabledUntil: e.communication_disabled_until,
              unusualDMActivityUntil: e.unusual_dm_activity_until,
              flags: e.flags,
            });
          }
        ),
        w(
          ["GUILD_ROLE_CREATE", "GUILD_ROLE_UPDATE"],
          e => p.ChannelLoader.loadGuildIds([e.guild_id]),
          (e, t) => {
            G({ type: t, guildId: e.guild_id, role: e.role });
          }
        ),
        w(
          ["GUILD_ROLE_DELETE"],
          e => p.ChannelLoader.loadGuildIds([e.guild_id]),
          e => {
            G({
              type: "GUILD_ROLE_DELETE",
              guildId: e.guild_id,
              roleId: e.role_id,
              version: e.version,
            });
          }
        ),
        k(["GUILD_EMOJIS_UPDATE"], e => {
          G({
            type: "GUILD_EMOJIS_UPDATE",
            guildId: e.guild_id,
            emojis: e.emojis,
          });
        }),
        k(["GUILD_STICKERS_UPDATE"], e => {
          G({
            type: "GUILD_STICKERS_UPDATE",
            guildId: e.guild_id,
            stickers: e.stickers,
          });
        }),
        k(["GUILD_INTEGRATIONS_UPDATE"], e => {
          G({ type: "GUILD_INTEGRATIONS_UPDATE", guildId: e.guild_id });
        }),
        k(["INTEGRATION_CREATE"], e => {
          G({
            type: "INTEGRATION_CREATE",
            application: e.application,
            guildId: e.guild_id,
          });
        }),
        k(["INTEGRATION_DELETE"], e => {
          G({
            type: "INTEGRATION_DELETE",
            applicationId: e.application_id,
            guildId: e.guild_id,
          });
        }),
        k(["USER_UPDATE"], e => {
          G({ type: "CURRENT_USER_UPDATE", user: e });
        }),
        k(["USER_SETTINGS_PROTO_UPDATE"], e => {
          let t = (0, g.b64ToProtoWithType)(e.settings.type, e.settings.proto);
          if (null != t) {
            if ("string" == typeof t)
              throw (
                (console.error(`Invalid proto: |${t}| |${e.settings.proto}|`),
                console.error({
                  parsed: t,
                  wire: e.settings.proto,
                  type: e.settings.type,
                }),
                Error("UserSettingsProto must not be a string"))
              );
            G({
              type: "USER_SETTINGS_PROTO_UPDATE",
              settings: { proto: t, type: e.settings.type },
              partial: e.partial,
            });
          }
        }),
        k(["USER_GUILD_SETTINGS_UPDATE"], e => {
          G({
            type: "USER_GUILD_SETTINGS_FULL_UPDATE",
            userGuildSettings: [e],
          });
        }),
        k(["USER_CONNECTIONS_UPDATE"], () => {
          G({ type: "USER_CONNECTIONS_UPDATE" });
        }),
        k(["USER_REQUIRED_ACTION_UPDATE"], e => {
          G({
            type: "USER_REQUIRED_ACTION_UPDATE",
            requiredAction: e.required_action,
          });
        }),
        k(["USER_NOTE_UPDATE"], e => {
          G({ type: "USER_NOTE_UPDATE", ...e });
        }),
        k(["RELATIONSHIP_ADD"], e => {
          G({
            type: "RELATIONSHIP_ADD",
            relationship: {
              id: e.id,
              type: e.type,
              user: e.user,
              since: e.since,
              nickname: e.nickname,
            },
            shouldNotify: !0 === e.should_notify,
          });
        }),
        k(["RELATIONSHIP_REMOVE"], e => {
          G({ type: "RELATIONSHIP_REMOVE", relationship: e });
        }),
        k(["RELATIONSHIP_UPDATE"], e => {
          G({ type: "RELATIONSHIP_UPDATE", relationship: e });
        }),
        k(["PRESENCE_UPDATE"], e => {
          Y({
            guildId: e.guild_id,
            user: e.user,
            status: e.status,
            activities: e.activities,
            clientStatus: e.client_status,
            broadcast: e.broadcast,
          });
        }),
        k(["PRESENCES_REPLACE"], e => {
          G({ type: "PRESENCES_REPLACE", presences: e });
        }),
        k(["SESSIONS_REPLACE"], e => {
          G({ type: "SESSIONS_REPLACE", sessions: H(e) });
        }),
        k(["VOICE_STATE_UPDATE"], e => {
          null != e.member && F(e.guild_id, e.member.user, e.member),
            G({
              type: "VOICE_STATE_UPDATES",
              voiceStates: [
                {
                  userId: e.user_id,
                  guildId: e.guild_id,
                  sessionId: e.session_id,
                  channelId: e.channel_id,
                  mute: e.mute,
                  deaf: e.deaf,
                  selfMute: e.self_mute,
                  selfDeaf: e.self_deaf,
                  selfVideo: e.self_video || !1,
                  suppress: e.suppress,
                  selfStream: e.self_stream || !1,
                  requestToSpeakTimestamp: e.request_to_speak_timestamp ?? null,
                  oldChannelId: S.default.getUserVoiceChannelId(
                    e.guild_id,
                    e.user_id
                  ),
                },
              ],
            });
        }),
        k(["LOBBY_VOICE_STATE_UPDATE"], e => {
          G({
            type: "LOBBY_VOICE_STATE_UPDATE",
            userId: e.user_id,
            lobbyId: e.lobby_id,
            sessionId: e.session_id,
            channelId: e.channel_id,
            mute: e.mute,
            deaf: e.deaf,
            selfMute: e.self_mute,
            selfDeaf: e.self_deaf,
          });
        }),
        k(["VOICE_SERVER_UPDATE"], e => {
          G({
            type: "VOICE_SERVER_UPDATE",
            guildId: e.guild_id,
            channelId: e.channel_id,
            endpoint: e.endpoint,
            token: e.token,
          });
        }),
        k(["LOBBY_VOICE_SERVER_UPDATE"], e => {
          G({
            type: "LOBBY_VOICE_SERVER_UPDATE",
            lobbyId: e.lobby_id,
            endpoint: e.endpoint,
            token: e.token,
          });
        }),
        k(["CALL_CREATE"], e => {
          G({
            type: "CALL_CREATE",
            channelId: e.channel_id,
            messageId: e.message_id,
            embeddedActivities: e.embedded_activities,
            region: e.region,
            ringing: e.ringing,
          });
          let t = e.voice_states;
          null != t &&
            G({
              type: "VOICE_STATE_UPDATES",
              voiceStates: t.map(e => ({
                userId: e.user_id,
                guildId: null,
                sessionId: e.session_id,
                channelId: e.channel_id,
                mute: e.mute,
                deaf: e.deaf,
                selfMute: e.self_mute,
                selfDeaf: e.self_deaf,
                selfVideo: e.self_video || !1,
                suppress: e.suppress,
                selfStream: e.self_stream || !1,
                requestToSpeakTimestamp: e.request_to_speak_timestamp ?? null,
              })),
            });
        }),
        k(["CALL_UPDATE"], e => {
          G({
            type: "CALL_UPDATE",
            channelId: e.channel_id,
            messageId: e.message_id,
            region: e.region,
            ringing: e.ringing,
          });
        }),
        k(["CALL_DELETE"], e => {
          G({
            type: "CALL_DELETE",
            channelId: e.channel_id,
            unavailable: e.unavailable,
          });
        }),
        k(["OAUTH2_TOKEN_REVOKE"], e => {
          G({ type: "OAUTH2_TOKEN_REVOKE", accessToken: e.access_token });
        }),
        k(["RECENT_MENTION_DELETE"], e => {
          G({ type: "RECENT_MENTION_DELETE", id: e.message_id });
        }),
        k(["FRIEND_SUGGESTION_CREATE"], e => {
          G({ type: "FRIEND_SUGGESTION_CREATE", suggestion: e });
        }),
        k(["FRIEND_SUGGESTION_DELETE"], e => {
          G({
            type: "FRIEND_SUGGESTION_DELETE",
            suggestedUserId: e.suggested_user_id,
          });
        }),
        k(["WEBHOOKS_UPDATE"], e => {
          G({
            type: "WEBHOOKS_UPDATE",
            guildId: e.guild_id,
            channelId: e.channel_id,
          });
        }),
        k(["MESSAGE_REACTION_ADD", "MESSAGE_REACTION_REMOVE"], (e, t) => {
          G({
            type: t,
            channelId: e.channel_id,
            messageId: e.message_id,
            userId: e.user_id,
            emoji: e.emoji,
            colors: e.burst_colors,
            reactionType: e.type,
          });
        }),
        k(["MESSAGE_POLL_VOTE_ADD", "MESSAGE_POLL_VOTE_REMOVE"], (e, t) => {
          G({
            type:
              "MESSAGE_POLL_VOTE_ADD" === t
                ? "MESSAGE_REACTION_ADD"
                : "MESSAGE_REACTION_REMOVE",
            channelId: e.channel_id,
            messageId: e.message_id,
            userId: e.user_id,
            emoji: { id: e.answer_id, name: "" },
            reactionType: f.ReactionTypes.VOTE,
          });
        }),
        k(["MESSAGE_REACTION_REMOVE_ALL"], e => {
          G({
            type: "MESSAGE_REACTION_REMOVE_ALL",
            channelId: e.channel_id,
            messageId: e.message_id,
          });
        }),
        k(["MESSAGE_REACTION_REMOVE_EMOJI"], e => {
          G({
            type: "MESSAGE_REACTION_REMOVE_EMOJI",
            channelId: e.channel_id,
            messageId: e.message_id,
            emoji: e.emoji,
          });
        }),
        k(["MESSAGE_REACTION_ADD_MANY"], e => {
          G({
            type: "MESSAGE_REACTION_ADD_MANY",
            channelId: e.channel_id,
            messageId: e.message_id,
            reactions: e.reactions,
          });
        }),
        k(["PAYMENT_UPDATE"], e => {
          G({ type: "PAYMENT_UPDATE", payment: e });
        }),
        k(
          ["ENTITLEMENT_CREATE", "ENTITLEMENT_UPDATE", "ENTITLEMENT_DELETE"],
          (e, t) => {
            G({ type: t, entitlement: e });
          }
        ),
        k(["USER_PAYMENT_SOURCES_UPDATE"], () => {
          y.default.hasLayers() &&
            (n("242677").fetchPaymentSources(),
            u.fetchSubscriptionPlansBySKUs(C.default.getFetchedSKUIDs()));
        }),
        k(["USER_SUBSCRIPTIONS_UPDATE"], () => {
          d.fetchCurrentUser(),
            y.default.hasLayers() && n("242677").fetchSubscriptions();
        }),
        k(["USER_PREMIUM_GUILD_SUBSCRIPTION_SLOT_CREATE"], e => {
          G({
            type: "GUILD_BOOST_SLOT_CREATE",
            guildBoostSlot: h.default.createFromServer(
              e,
              A.default.getSubscriptionById(e.subscription_id)
            ),
          });
        }),
        k(["USER_PREMIUM_GUILD_SUBSCRIPTION_SLOT_UPDATE"], e => {
          G({
            type: "GUILD_BOOST_SLOT_UPDATE",
            guildBoostSlot: h.default.createFromServer(
              e,
              A.default.getSubscriptionById(e.subscription_id)
            ),
          });
        }),
        k(["BILLING_POPUP_BRIDGE_CALLBACK"], e => {
          G({
            type: "BILLING_POPUP_BRIDGE_CALLBACK",
            paymentSourceType: e.payment_source_type,
            state: e.state,
            path: e.path,
            query: e.query,
          });
        }),
        k(["USER_PAYMENT_BROWSER_CHECKOUT_DONE"], e => {
          G({ type: "USER_PAYMENT_BROWSER_CHECKOUT_DONE", loadId: e.load_id });
        }),
        k(["USER_PAYMENT_CLIENT_ADD"], e => {
          (0, N.getPurchaseTokenHash)().then(t => {
            let n = e.purchase_token_hash;
            n === t &&
              G({
                type: "USER_PAYMENT_CLIENT_ADD",
                purchaseTokenHash: n,
                expiresAt: e.expires_at,
              });
          });
        }),
        k(["GUILD_MEMBER_LIST_UPDATE"], e => {
          r.default.Emitter.batched(() => {
            let t = t => {
              if (null == t.member) return;
              let { member: n } = t;
              if ((F(e.guild_id, n.user, n), null == n.presence)) return;
              let { presence: s } = n;
              Y({
                guildId: e.guild_id,
                user: s.user,
                status: s.status,
                activities: s.activities,
                clientStatus: s.client_status,
                broadcast: s.broadcast,
              });
            };
            e.ops.forEach(e => {
              let { op: n, items: s, item: i } = e;
              switch (n) {
                case "SYNC":
                  s.forEach(t);
                  break;
                case "UPDATE":
                case "INSERT":
                  t(i);
              }
            }),
              O.default.flush(),
              G({
                type: "GUILD_MEMBER_LIST_UPDATE",
                guildId: e.guild_id,
                id: e.id,
                ops: e.ops,
                groups: e.groups,
                memberCount: e.member_count,
                onlineCount: e.online_count,
              });
          });
        }),
        k(["LOBBY_CREATE"], e => {
          G({ type: "LOBBY_CREATE", lobby: e }),
            e.voice_states.forEach(t => {
              G({
                type: "LOBBY_VOICE_STATE_UPDATE",
                lobbyId: e.id,
                userId: t.user_id,
                sessionId: t.session_id,
                channelId: t.channel_id,
                mute: t.mute,
                deaf: t.deaf,
                selfMute: t.self_mute,
                selfDeaf: t.self_deaf,
              });
            });
        }),
        k(["LOBBY_UPDATE"], e => {
          G({ type: "LOBBY_UPDATE", lobby: e });
        }),
        k(["LOBBY_DELETE"], e => {
          G({ type: "LOBBY_DELETE", lobbyId: e.id, reason: e.reason });
        }),
        k(
          [
            "LOBBY_MEMBER_CONNECT",
            "LOBBY_MEMBER_UPDATE",
            "LOBBY_MEMBER_DISCONNECT",
          ],
          (e, t) => {
            G({ type: t, lobbyId: e.lobby_id, member: e.member });
          }
        ),
        k(["LOBBY_MESSAGE"], e => {
          G({
            type: "LOBBY_MESSAGE",
            lobbyId: e.lobby_id,
            senderId: e.sender_id,
            data: e.data,
          });
        }),
        k(["GIFT_CODE_UPDATE"], e => {
          G({ type: "GIFT_CODE_UPDATE", uses: e.uses, code: e.code });
        }),
        k(["GIFT_CODE_CREATE"], e => {
          G({ type: "GIFT_CODE_CREATE", giftCode: e });
        }),
        k(["USER_ACHIEVEMENT_UPDATE"], e => {
          G({ type: "USER_ACHIEVEMENT_UPDATE", userAchievement: e });
        }),
        k(["LIBRARY_APPLICATION_UPDATE"], e => {
          G({ type: "LIBRARY_APPLICATION_UPDATE", libraryApplication: e });
        }),
        k(["STREAM_CREATE"], e => {
          G({
            type: "STREAM_CREATE",
            streamKey: e.stream_key,
            region: e.region,
            viewerIds: e.viewer_ids,
            rtcServerId: e.rtc_server_id,
            paused: e.paused,
          });
        }),
        k(["STREAM_SERVER_UPDATE"], e => {
          G({
            type: "STREAM_SERVER_UPDATE",
            streamKey: e.stream_key,
            endpoint: e.endpoint,
            token: e.token,
          });
        }),
        k(["STREAM_UPDATE"], e => {
          G({
            type: "STREAM_UPDATE",
            streamKey: e.stream_key,
            region: e.region,
            viewerIds: e.viewer_ids,
            paused: e.paused,
          });
        }),
        k(["STREAM_DELETE"], e => {
          G({
            type: "STREAM_DELETE",
            streamKey: e.stream_key,
            unavailable: e.unavailable,
            reason: e.reason,
          });
        }),
        k(["GENERIC_PUSH_NOTIFICATION_SENT"], e => {
          G({
            type: "GENERIC_PUSH_NOTIFICATION_SENT",
            title: e.title,
            body: e.body,
            trackingType: e.tracking_type,
            icon: e.icon,
            route: e.route,
            tag: e.tag,
          });
        }),
        k(["NOTIFICATION_CENTER_ITEM_CREATE"], e => {
          G({ type: "NOTIFICATION_CENTER_ITEM_CREATE", item: e });
        }),
        k(["NOTIFICATION_CENTER_ITEM_DELETE"], e => {
          G({ type: "NOTIFICATION_CENTER_ITEM_DELETE", id: e.id });
        }),
        k(["NOTIFICATION_CENTER_ITEMS_ACK"], e => {
          G({
            type: "NOTIFICATION_CENTER_ITEMS_ACK",
            ids: [e.id],
            optimistic: !1,
          });
        }),
        k(["NOTIFICATION_CENTER_ITEM_COMPLETED"], e => {
          G({
            type: "NOTIFICATION_CENTER_ITEM_COMPLETED",
            item_enum: e.item_enum,
          });
        }),
        k(["APPLICATION_COMMAND_PERMISSIONS_UPDATE"], (e, t) => {
          G({ type: t, guildId: e.guild_id });
        }),
        k(["GUILD_APPLICATION_COMMAND_INDEX_UPDATE"], e => {
          G({
            type: "GUILD_APPLICATION_COMMAND_INDEX_UPDATE",
            guildId: e.guild_id,
            version: e.version,
          });
        }),
        k(["GUILD_JOIN_REQUEST_CREATE"], e => {
          G({
            type: "GUILD_JOIN_REQUEST_CREATE",
            request: e.request,
            status: e.status,
            guildId: e.guild_id,
          });
        }),
        k(["GUILD_JOIN_REQUEST_UPDATE"], e => {
          G({
            type: "GUILD_JOIN_REQUEST_UPDATE",
            request: e.request,
            status: e.status,
            guildId: e.guild_id,
          });
        }),
        k(["GUILD_JOIN_REQUEST_DELETE"], e => {
          G({
            type: "GUILD_JOIN_REQUEST_DELETE",
            id: e.id,
            userId: e.user_id,
            guildId: e.guild_id,
          });
        }),
        k(["INTERACTION_CREATE"], e => {
          G({
            type: "INTERACTION_CREATE",
            interactionId: e.id,
            nonce: e.nonce,
          });
        }),
        k(["INTERACTION_SUCCESS"], e => {
          G({
            type: "INTERACTION_SUCCESS",
            interactionId: e.id,
            nonce: e.nonce,
          });
        }),
        k(["INTERACTION_FAILURE"], e => {
          G({ type: "INTERACTION_FAILURE", nonce: e.nonce });
        }),
        k(["APPLICATION_COMMAND_AUTOCOMPLETE_RESPONSE"], e => {
          G({
            type: "APPLICATION_COMMAND_AUTOCOMPLETE_RESPONSE",
            choices: e.choices,
            nonce: e.nonce,
          });
        }),
        k(["INTERACTION_MODAL_CREATE"], e => {
          G({
            type: "INTERACTION_MODAL_CREATE",
            id: e.id,
            channelId: e.channel_id,
            customId: e.custom_id,
            application: e.application,
            title: e.title,
            components: e.components,
            nonce: e.nonce,
          });
        }),
        k(["INTERACTION_IFRAME_MODAL_CREATE"], e => {
          G({
            type: "INTERACTION_IFRAME_MODAL_CREATE",
            id: e.id,
            channelId: e.channel_id,
            customId: e.custom_id,
            application: e.application,
            title: e.title,
            iframePath: e.iframe_path,
            modalSize: e.modal_size,
            nonce: e.nonce,
          });
        }),
        k(["STAGE_INSTANCE_CREATE"], e => {
          G({ type: "STAGE_INSTANCE_CREATE", instance: e });
        }),
        k(["STAGE_INSTANCE_UPDATE"], e => {
          G({ type: "STAGE_INSTANCE_UPDATE", instance: e });
        }),
        k(["STAGE_INSTANCE_DELETE"], e => {
          G({ type: "STAGE_INSTANCE_DELETE", instance: e });
        }),
        k(["GUILD_SCHEDULED_EVENT_CREATE"], e => {
          G({ type: "GUILD_SCHEDULED_EVENT_CREATE", guildScheduledEvent: e });
        }),
        k(["GUILD_SCHEDULED_EVENT_UPDATE"], e => {
          G({ type: "GUILD_SCHEDULED_EVENT_UPDATE", guildScheduledEvent: e });
        }),
        k(["GUILD_SCHEDULED_EVENT_DELETE"], e => {
          G({ type: "GUILD_SCHEDULED_EVENT_DELETE", guildScheduledEvent: e });
        }),
        k(["GUILD_SCHEDULED_EVENT_EXCEPTION_CREATE"], e => {
          G({
            type: "GUILD_SCHEDULED_EVENT_EXCEPTION_CREATE",
            eventException: e,
          });
        }),
        k(["GUILD_SCHEDULED_EVENT_EXCEPTION_UPDATE"], e => {
          G({
            type: "GUILD_SCHEDULED_EVENT_EXCEPTION_UPDATE",
            eventException: e,
          });
        }),
        k(["GUILD_SCHEDULED_EVENT_EXCEPTION_DELETE"], e => {
          G({
            type: "GUILD_SCHEDULED_EVENT_EXCEPTION_DELETE",
            eventException: e,
          });
        }),
        k(["GUILD_SCHEDULED_EVENT_EXCEPTIONS_DELETE"], e => {
          G({
            type: "GUILD_SCHEDULED_EVENT_EXCEPTIONS_DELETE",
            eventId: e.event_id,
          });
        }),
        k(["GUILD_SCHEDULED_EVENT_USER_ADD"], e => {
          G({
            type: "GUILD_SCHEDULED_EVENT_USER_ADD",
            userId: e.user_id,
            guildId: e.guild_id,
            guildEventId: e.guild_scheduled_event_id,
            guildEventExceptionId: e.guild_scheduled_event_exception_id,
            response: e.response,
          });
        }),
        k(["GUILD_SCHEDULED_EVENT_USER_REMOVE"], e => {
          G({
            type: "GUILD_SCHEDULED_EVENT_USER_REMOVE",
            userId: e.user_id,
            guildId: e.guild_id,
            guildEventId: e.guild_scheduled_event_id,
            guildEventExceptionId: e.guild_scheduled_event_exception_id,
            response: e.response,
          });
        }),
        k(["GUILD_DIRECTORY_ENTRY_CREATE"], e => {
          G({
            type: "GUILD_DIRECTORY_ENTRY_CREATE",
            channelId: e.directory_channel_id,
            entry: e,
          });
        }),
        k(["GUILD_DIRECTORY_ENTRY_UPDATE"], e => {
          G({
            type: "GUILD_DIRECTORY_ENTRY_UPDATE",
            channelId: e.directory_channel_id,
            entry: e,
          });
        }),
        k(["GUILD_DIRECTORY_ENTRY_DELETE"], e => {
          G({
            type: "GUILD_DIRECTORY_ENTRY_DELETE",
            channelId: e.directory_channel_id,
            guildId: e.entity_id,
          });
        }),
        k(["AUTO_MODERATION_MENTION_RAID_DETECTION"], e => {
          G({
            type: "AUTO_MODERATION_MENTION_RAID_DETECTION",
            guildId: e.guild_id,
            decisionId: e.decision_id,
            suspiciousMentionActivityUntil: e.suspicious_mention_activity_until,
          });
        }),
        k(["VOICE_CHANNEL_EFFECT_SEND"], e => {
          G({
            type: "VOICE_CHANNEL_EFFECT_SEND",
            emoji: e.emoji,
            channelId: e.channel_id,
            userId: e.user_id,
            animationType: e.animation_type,
            animationId: e.animation_id,
            soundId: e.sound_id,
            soundVolume: e.sound_volume,
            points: e.points,
            streamerId: e.streamer_id,
            lineId: e.line_id,
            emojiHose: e.emoji_hose,
          });
        }),
        k(["GUILD_SOUNDBOARD_SOUND_CREATE"], e => {
          G({
            type: "GUILD_SOUNDBOARD_SOUND_CREATE",
            sound: {
              guildId: e.guild_id,
              name: e.name,
              soundId: e.sound_id,
              user: new E.default(e.user),
              userId: e.user_id,
              volume: e.volume,
              emojiId: e.emoji_id,
              emojiName: e.emoji_name,
              available: e.available,
            },
          });
        }),
        k(["GUILD_SOUNDBOARD_SOUND_UPDATE"], e => {
          G({
            type: "GUILD_SOUNDBOARD_SOUND_UPDATE",
            sound: {
              guildId: e.guild_id,
              name: e.name,
              soundId: e.sound_id,
              user: new E.default(e.user),
              userId: e.user_id,
              volume: e.volume,
              emojiId: e.emoji_id,
              emojiName: e.emoji_name,
              available: e.available,
            },
          });
        }),
        k(["GUILD_SOUNDBOARD_SOUND_DELETE"], e => {
          G({
            type: "GUILD_SOUNDBOARD_SOUND_DELETE",
            guildId: e.guild_id,
            soundId: e.sound_id,
          });
        }),
        k(["GUILD_SOUNDBOARD_SOUNDS_UPDATE"], e => {
          G({
            type: "GUILD_SOUNDBOARD_SOUNDS_UPDATE",
            guildId: e.guild_id,
            soundboardSounds: e.soundboard_sounds.map(t => ({
              name: t.name,
              soundId: t.sound_id,
              emojiName: t.emoji_name,
              emojiId: t.emoji_id,
              userId: t.user_id,
              volume: t.volume,
              available: t.available,
              guildId: e.guild_id,
            })),
          });
        }),
        w(
          ["EMBEDDED_ACTIVITY_UPDATE"],
          e => p.ChannelLoader.loadGuildIds([e.guild_id]),
          e => {
            G({
              type: "EMBEDDED_ACTIVITY_INBOUND_UPDATE",
              guildId: e.guild_id,
              channelId: e.channel_id,
              embeddedActivity: e.embedded_activity,
              connections: e.connections,
              updateCode: e.update_code,
            });
          }
        ),
        w(
          ["EMBEDDED_ACTIVITY_UPDATE_V2"],
          e => p.ChannelLoader.loadGuildIds([e.guild_id]),
          e => {
            G({
              type: "EMBEDDED_ACTIVITY_INBOUND_UPDATE_V2",
              activitySessionId: e.activity_session_id,
              applicationId: e.application_id,
              channelId: e.channel_id,
              guildId: e.guild_id,
              instanceId: e.instance_id,
              userIds: e.user_ids,
            });
          }
        ),
        k(["AUTH_SESSION_CHANGE"], e => {
          G({
            type: "AUTH_SESSION_CHANGE",
            authSessionIdHash: e.auth_session_id_hash,
          });
        }),
        k(["USER_CONNECTIONS_LINK_CALLBACK"], e => {
          G({
            type: "USER_CONNECTIONS_LINK_CALLBACK",
            provider: e.provider,
            callbackCode: e.callback_code,
            callbackState: e.callback_state,
          });
        }),
        k(["DELETED_ENTITY_IDS"], e => {
          G({ type: "DELETED_ENTITY_IDS", ...e });
        }),
        k(["CONSOLE_COMMAND_UPDATE"], e => {
          G({
            type: "CONSOLE_COMMAND_UPDATE",
            id: e.id,
            result: e.result,
            error: e.error,
          });
        }),
        w(
          ["PASSIVE_UPDATE_V1"],
          e => p.ChannelLoader.loadGuildIds([e.guild_id]),
          e => {
            G({
              type: "PASSIVE_UPDATE_V1",
              guildId: e.guild_id,
              members: e.members,
              channels: e.channels?.map(e => ({
                id: e.id,
                lastMessageId: e.last_message_id,
                lastPinTimestamp: e.last_pin_timestamp,
              })),
              voiceStates: e.voice_states?.map(e => ({
                channelId: e.channel_id,
                deaf: e.deaf || !1,
                mute: e.mute || !1,
                requestToSpeakTimestamp: e.request_to_speak_timestamp ?? null,
                selfDeaf: e.self_deaf || !1,
                selfMute: e.self_mute || !1,
                selfStream: e.self_stream || !1,
                selfVideo: e.self_video || !1,
                sessionId: e.session_id,
                suppress: e.suppress,
                userId: e.user_id,
              })),
            });
          }
        ),
        k(["PRIVATE_CHANNEL_INTEGRATION_CREATE"], e => {
          G({ type: "PRIVATE_CHANNEL_INTEGRATION_CREATE", integration: e });
        }),
        k(["PRIVATE_CHANNEL_INTEGRATION_UPDATE"], e => {
          G({ type: "PRIVATE_CHANNEL_INTEGRATION_UPDATE", integration: e });
        }),
        k(["PRIVATE_CHANNEL_INTEGRATION_DELETE"], e => {
          G({
            type: "PRIVATE_CHANNEL_INTEGRATION_DELETE",
            channelId: e.channel_id,
            applicationId: e.application_id,
          });
        }),
        k(["CREATOR_MONETIZATION_RESTRICTIONS_UPDATE"], e => {
          G({
            type: "GUILD_ROLE_SUBSCRIPTIONS_FETCH_RESTRICTIONS_SUCCESS",
            guildId: e.guild_id,
            restrictions: e.restrictions,
          });
        }),
        k(["BILLING_REFERRAL_TRIAL_OFFER_UPDATE"], e => {
          G({
            type: "BILLING_REFERRAL_TRIAL_OFFER_UPDATE",
            userTrialOfferId: e.user_trial_offer_id,
            recipientId: e.recipient_id,
          });
        }),
        k(["SPEED_TEST_CREATE"], e => {
          G({
            type: "SPEED_TEST_CREATE",
            streamKey: e.stream_key,
            region: e.region,
            viewerIds: e.viewer_ids,
            rtcServerId: e.rtc_server_id,
            paused: e.paused,
          });
        }),
        k(["SPEED_TEST_SERVER_UPDATE"], e => {
          G({
            type: "SPEED_TEST_SERVER_UPDATE",
            streamKey: e.stream_key,
            endpoint: e.endpoint,
            token: e.token,
          });
        }),
        k(["SPEED_TEST_UPDATE"], e => {
          G({
            type: "SPEED_TEST_UPDATE",
            streamKey: e.stream_key,
            region: e.region,
            viewerIds: e.viewer_ids,
            paused: e.paused,
          });
        }),
        k(["SPEED_TEST_DELETE"], e => {
          G({
            type: "SPEED_TEST_DELETE",
            streamKey: e.stream_key,
            unavailable: e.unavailable,
            reason: e.reason,
          });
        }),
        k(["LAST_MESSAGES"], e => {
          G({
            type: "MESSAGE_PREVIEWS_LOADED",
            guildId: e.guild_id,
            messages: e.messages,
          });
        }),
        k(["AUTHENTICATOR_UPDATE"], e => {
          G({ type: "AUTHENTICATOR_UPDATE", credential: e });
        }),
        k(["AUTHENTICATOR_CREATE"], e => {
          G({ type: "AUTHENTICATOR_CREATE", credential: e });
        }),
        k(["AUTHENTICATOR_DELETE"], e => {
          G({ type: "AUTHENTICATOR_DELETE", credential: e });
        }),
        k(["NOTIFICATION_SETTINGS_UPDATE"], e => {
          G({
            type: "NOTIFICATION_SETTINGS_UPDATE",
            settings: { flags: e.flags },
          });
        }),
        k(["GAME_INVITE_CREATE"], e => {
          G({ type: "GAME_INVITE_CREATE", gameInvite: e });
        }),
        k(["GAME_INVITE_DELETE"], e => {
          G({ type: "GAME_INVITE_DELETE", inviteId: e.invite_id });
        }),
        k(["GAME_INVITE_DELETE_MANY"], e => {
          G({ type: "GAME_INVITE_DELETE_MANY", inviteIds: e.invite_ids });
        }),
        k(["PREMIUM_MARKETING_PREVIEW"], e => {
          G({ type: "PREMIUM_MARKETING_PREVIEW", properties: e.properties });
        }),
        k(["USER_APPLICATION_UPDATE"], e => {
          G({
            type: "USER_APPLICATION_UPDATE",
            applicationId: e.application_id,
          });
        }),
        k(["USER_APPLICATION_REMOVE"], e => {
          G({
            type: "USER_APPLICATION_REMOVE",
            applicationId: e.application_id,
          });
        });
    },
    436708: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          StreamRTCAnalyticsContext: function () {
            return D;
          },
          default: function () {
            return O;
          },
        });
      var s = n("392711"),
        i = n.n(s),
        r = n("325091"),
        a = n("312916"),
        o = n("107208"),
        u = n("536494"),
        d = n("707609"),
        l = n("957390"),
        f = n("638748"),
        _ = n("362939"),
        c = n("262047"),
        g = n("731865"),
        m = n("386130"),
        h = n("278205"),
        E = n("407807"),
        p = n("67121"),
        v = n("857688"),
        y = n("328470"),
        I = n("146142"),
        T = n("188304"),
        S = n("682936"),
        C = n("222934"),
        A = n("467006"),
        N = n("389570");
      class D {
        constructor({
          streamRegion: e,
          streamApplication: t,
          streamSourceType: n,
          actionContext: s,
          numViewers: i,
          isBroadcast: r = !1,
        }) {
          (this.streamRegion = e),
            (this.streamApplication = t),
            (this.streamSourceType = n),
            (this.actionContext = s),
            (this.maxViewers = i),
            (this.isBroadcast = r);
        }
        setActionContext(e) {
          this.actionContext = e;
        }
        trackViewerCount(e) {
          this.maxViewers = Math.max(e, this.maxViewers);
        }
      }
      class O extends o.default {
        constructor({
          sessionId: e,
          streamKey: t,
          serverId: n,
          initialLayout: s,
          analyticsContext: r,
          isStreamer: o,
          parentMediaSessionId: u,
        }) {
          let d = (0, T.decodeStreamKey)(t),
            { guildId: l, channelId: f } = d;
          super({
            userId: c.default.getId(),
            sessionId: e,
            guildId: l,
            channelId: f,
            context: N.MediaEngineContextTypes.STREAM,
            rtcServerId: n,
            parentMediaSessionId: u,
          }),
            (this._streamContext = d),
            (this._streamKey = t),
            (this._isStreamer = o),
            (this._videoStreamStats = new I.default(s, this.isOwner)),
            (this.analyticsContext = r),
            (this._updateVideoStreamId = i().debounce((e, t) => {
              let {
                guildId: n,
                channelId: s,
                ownerId: i,
              } = (0, T.decodeStreamKey)(this._streamKey);
              a.default.wait(() =>
                a.default.dispatch({
                  type: "RTC_CONNECTION_VIDEO",
                  guildId: n,
                  channelId: s,
                  userId: i,
                  streamId: e,
                  rtcServerId: t,
                  context: N.MediaEngineContextTypes.STREAM,
                })
              );
            }, 200)),
            this._videoStreamStats.start(),
            this._initializeEvents();
        }
        get isOwner() {
          let { ownerId: e } = this._streamContext;
          return c.default.getId() === e;
        }
        destroy(e) {
          this._videoStreamStats.stop(),
            this._trackVideoEndStats(e),
            this._updateVideoStreamId.cancel(),
            this._updateVideoStreamId(null, null),
            this._updateVideoStreamId.flush(),
            super.destroy();
        }
        streamUpdate(e) {
          let t = this._videoQuality;
          null != t && (e ? t.pause() : t.resume());
        }
        layoutChange(e) {
          this._videoStreamStats.layoutChange(e);
        }
        getVideoStats() {
          let { ownerId: e } = this._streamContext,
            t = this._videoQuality;
          if (null != t) {
            let {
              duration: n,
              avg_bitrate: s,
              avg_fps: i,
              avg_resolution: r,
            } = this.isOwner
              ? t.getOutboundStats()[0]
              : t.getInboundStats(e) ?? {};
            return {
              duration: n,
              avg_bitrate: s,
              avg_fps: i,
              avg_resolution: r,
            };
          }
          return null;
        }
        getRegion() {
          return this.analyticsContext.streamRegion;
        }
        getMaxViewers() {
          return this.analyticsContext.maxViewers;
        }
        _initializeEvents() {
          let e = !1;
          this.on(u.RTCConnectionEvent.State, (e, t, n) => {
            a.default.wait(() =>
              a.default.dispatch({
                type: "RTC_CONNECTION_STATE",
                state: e,
                ...t,
                ...n,
                streamKey: this._streamKey,
              })
            ),
              e === A.RTCConnectionStates.RTC_CONNECTED &&
                this._connection?.on(
                  r.BaseConnectionEvent.ScreenshareFinish,
                  (e, t, n, s, i, r, a, o, u, d, l, f, _, c) => {
                    let g = this.getMediaSessionId(),
                      m = this.getRTCConnectionId(),
                      h = this.getGoLiveSource();
                    v.getSystemAnalyticsInfo().then(E => {
                      let p = null;
                      if (null != E) {
                        let {
                          cpu_brand: e,
                          cpu_vendor: t,
                          cpu_memory: n,
                          gpu_brand: s,
                          gpu_memory: i,
                        } = E;
                        p = {
                          cpu_brand: e,
                          cpu_vendor: t,
                          cpu_memory: n,
                          gpu_brand: s,
                          gpu_memory: i,
                        };
                      }
                      let v =
                        (e ?? 0) +
                        (t ?? 0) +
                        (n ?? 0) +
                        (s ?? 0) +
                        (i ?? 0) +
                        (r ?? 0) +
                        (o ?? 0) +
                        (c ?? 0) +
                        (_ ?? 0);
                      y.default.track(A.AnalyticEvents.SCREENSHARE_FINISHED, {
                        screenshare_frames: e,
                        videohook_frames: t,
                        hybrid_dxgi_frames: n,
                        hybrid_gdi_frames: s,
                        hybrid_videohook_frames: i,
                        hybrid_graphics_capture_frames: r,
                        hybrid_capture_method_switches: a,
                        quartz_frames: o,
                        screencapturekit_frames: c,
                        go_live_camera_frames: _,
                        total_frames: v,
                        desktop_capturer_type: u,
                        media_session_id: g,
                        rtc_connection_id: m,
                        context: N.MediaEngineContextTypes.STREAM,
                        screens: d,
                        windows: l,
                        activity: f,
                        ...p,
                        ...S.default(h?.desktopSource),
                      });
                    });
                  }
                );
          }),
            this.on(u.RTCConnectionEvent.Video, (t, n, s, i, r) => {
              let a = (0, T.decodeStreamKey)(this._streamKey);
              a.guildId === t &&
                a.channelId === n &&
                a.ownerId === s &&
                (null != this.getMediaSessionId() &&
                  !e &&
                  (this._trackVideoStartStats(), (e = !0)),
                this._updateVideoStreamId(i, r));
            }),
            this.on(
              u.RTCConnectionEvent.VideoSourceQualityChanged,
              (e, t, n, s, i, r) => {
                a.default.wait(() =>
                  a.default.dispatch({
                    type: "MEDIA_ENGINE_VIDEO_SOURCE_QUALITY_CHANGED",
                    guildId: e,
                    channelId: t,
                    senderUserId: n,
                    maxResolution: s,
                    maxFrameRate: i,
                    context: r,
                  })
                );
              }
            );
        }
        _getStreamAnalyticsProperties() {
          let {
              streamRegion: e,
              streamApplication: t,
              streamSourceType: n,
              actionContext: s,
              isBroadcast: i,
            } = this.analyticsContext,
            { ownerId: r, guildId: a } = this._streamContext,
            o = p.default.getRegion(E.default.getHostname()),
            u = _.BroadcastAutoBroadcast.getSetting();
          return {
            channel_id: this.channelId,
            rtc_connection_id: this.getRTCConnectionId(),
            media_session_id: this.getMediaSessionId(),
            parent_media_session_id: this.parentMediaSessionId,
            sender_user_id: r,
            context: N.MediaEngineContextTypes.STREAM,
            guild_id: a,
            stream_region: e,
            stream_source_type: n,
            guild_region: o,
            participant_type: this.isOwner ? "streamer" : "receiver",
            share_application_name: null != t ? t.name : null,
            share_application_id: null != t ? t.id : null,
            share_application_executable: null != t ? t.exe : null,
            video_layout: this._videoStreamStats.getLayout(),
            client_event_source: s,
            is_broadcast: i,
            auto_broadcast_enabled: this.isOwner ? u : null,
          };
        }
        _trackVideoStartStats() {
          let e = this.isOwner ? (0, C.default)() : null;
          y.default.track(A.AnalyticEvents.VIDEO_STREAM_STARTED, {
            ...this._getStreamAnalyticsProperties(),
            ...e,
            connection_type: h.default.getType(),
            effective_connection_speed: h.default.getEffectiveConnectionSpeed(),
            service_provider: h.default.getServiceProvider(),
          });
        }
        _trackVideoEndStats(e) {
          let t = g.default.getChannel(this.channelId),
            n = null != t ? t.type : null,
            { ownerId: s } = this._streamContext,
            i = null,
            r = null,
            a = null,
            o = this._videoQuality;
          null != o &&
            ((i = this.isOwner
              ? o.getOutboundStats()[0]
              : o.getInboundStats(s)),
            (r = o.getNetworkStats()),
            (a = this.isOwner
              ? o.getCodecUsageStats("streamer", this.userId)
              : o.getCodecUsageStats("receiver", s)));
          let u = (0, d.areClipsEnabled)(),
            _ = l.default.getSettings(),
            c = this.isOwner
              ? {
                  clips_enabled: _.clipsEnabled && u,
                  clips_buffer_length: _.clipsLength,
                }
              : {},
            h = this.isOwner
              ? {
                  bandwidth_estimation_experiment:
                    this.getBandwidthEstimationExperiment(),
                }
              : {};
          y.default.track(A.AnalyticEvents.VIDEO_STREAM_ENDED, {
            ...i,
            ...a,
            ...r,
            ...this._videoStreamStats.getStats(),
            ...this._soundshareStats.getStats(),
            ...this._getStreamAnalyticsProperties(),
            ...c,
            ...h,
            channel_type: n,
            reason: e,
            max_viewers: this.analyticsContext.maxViewers,
            hostname: this.hostname,
            hardware_enabled: m.default.getHardwareH264(),
            device_performance_class: this.isOwner
              ? (0, f.getMediaPerformanceClass)()
              : null,
          });
        }
        _getExtraConnectionOptions() {
          return {
            streamUserId: (0, T.decodeStreamKey)(this._streamKey).ownerId,
          };
        }
      }
    },
    146142: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var s = n("435014"),
        i = n("767191"),
        r = n("595407"),
        a = n("467006");
      function o(e) {
        let t =
          arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
        return null != e ? Math.round(e) : t;
      }
      class u {
        constructor(e, t) {
          (this._targetResolution = 0),
            (this._targetFPS = 0),
            (this._streamSettingsChanged = !1),
            (this._lastLayoutChanged = 0),
            (this._layoutChanges = 0),
            (this._incrementLayout = (e, t) => {
              null == this._layoutBuckets[e] && (this._layoutBuckets[e] = 0),
                (this._layoutBuckets[e] += t);
            }),
            (this._sampleStats = () => {
              let { resolution: e, fps: t } = r.default.getState();
              this._streamSettingsChanged =
                e !== this._targetResolution || t !== this._targetFPS;
            }),
            (this._isSender = t),
            (this._statInterval = new i.Interval()),
            (this._lastLayout = e),
            (this._layoutBuckets = {});
        }
        start() {
          let { resolution: e, fps: t } = r.default.getState();
          (this._targetResolution = e),
            (this._targetFPS = t),
            this._statInterval.start(1e3, this._sampleStats),
            (this._lastLayoutChanged = (0, s.now)());
        }
        stop() {
          this._statInterval.stop(),
            (this._streamEnd = (0, s.now)()),
            this._incrementLayout(
              this._lastLayout,
              (this._streamEnd - this._lastLayoutChanged) / 1e3
            );
        }
        layoutChange(e) {
          if (e === this._lastLayout || null != this._streamEnd) return;
          let t = (0, s.now)();
          this._incrementLayout(
            this._lastLayout,
            (t - this._lastLayoutChanged) / 1e3
          ),
            this._layoutChanges++,
            (this._lastLayout = e),
            (this._lastLayoutChanged = t);
        }
        getLayout() {
          return this._lastLayout;
        }
        getStats() {
          let e = {
            num_layout_changes: this._layoutChanges,
            duration_layout_fullscreen: o(
              this._layoutBuckets[a.StreamLayouts.FULL_SCREEN]
            ),
            duration_layout_theatre: o(
              this._layoutBuckets[a.StreamLayouts.THEATRE]
            ),
            duration_layout_pip: o(this._layoutBuckets[a.StreamLayouts.PIP]),
            duration_layout_popout: o(
              this._layoutBuckets[a.StreamLayouts.POPOUT]
            ),
            duration_layout_portrait: o(
              this._layoutBuckets[a.StreamLayouts.PORTRAIT]
            ),
            duration_layout_landscape: o(
              this._layoutBuckets[a.StreamLayouts.LANDSCAPE]
            ),
            duration_layout_minimized: o(
              this._layoutBuckets[a.StreamLayouts.MINIMIZED]
            ),
          };
          return this._isSender
            ? {
                ...e,
                target_fps: this._targetFPS,
                target_resolution_height: this._targetResolution,
                stream_settings_changed: this._streamSettingsChanged,
              }
            : e;
        }
      }
    },
    188699: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          canStreamInChannel: function () {
            return h;
          },
          canWatchStream: function () {
            return p;
          },
          getStreamCTAString: function () {
            return E;
          },
          getStreamEligibleChannels: function () {
            return y;
          },
          useCanWatchStream: function () {
            return v;
          },
        }),
        n("653041");
      var s,
        i,
        r = n("661223"),
        a = n("983325"),
        o = n("775822"),
        u = n("610043"),
        d = n("327271"),
        l = n("197905"),
        f = n("642174"),
        _ = n("557129"),
        c = n("467006"),
        g = n("30175");
      let m = (e, t) =>
        (0, o.isPrivate)(e.type) ||
        t.canBasicChannel(
          c.BasicPermissions.CONNECT | c.BasicPermissions.VIEW_CHANNEL,
          e
        );
      function h(e, t, n) {
        let s =
          !(arguments.length > 3) || void 0 === arguments[3] || arguments[3];
        if (e.isPrivate()) return !0;
        let i = t.getGuild(e.getGuildId()),
          r = i?.maxStageVideoChannelUsers ?? 0;
        return (
          (!e.isGuildStageVoice() || !(r <= 0)) &&
          (!s || !!m(e, n)) &&
          !!n.can(c.Permissions.STREAM, e) &&
          null != i &&
          i.afkChannelId !== e.id &&
          !0
        );
      }
      function E(e) {
        switch (e) {
          case 0:
            return g.default.Messages.CONSOLE_STREAM_UNAVAILABLE;
          case 1:
            return g.default.Messages.UNABLE_TO_JOIN_CHANNEL_FULL_MODAL_HEADER;
          case 2:
            return g.default.Messages.STREAM_NO_PERMISSION_CTA;
          default:
            return g.default.Messages.WATCH_STREAM;
        }
      }
      function p(e, t, n, s, i) {
        let r;
        if (null == e) return [!1, 2];
        let a = t.isInChannel(e.id),
          u = e instanceof o.ChannelRecordBase && (0, _.isChannelFull)(e, t, n),
          d = m(e, s),
          l =
            null != i.getAwaitingRemoteSessionInfo() ||
            null != i.getRemoteSessionId();
        return (
          l ? (r = 0) : d || a ? u && !a && (r = 1) : (r = 2),
          [!__OVERLAY__ && !l && (a || (d && !u)), r]
        );
      }
      function v(e) {
        return (0, r.useStateFromStoresArray)(
          [f.default, d.default, l.default, a.default],
          () => p(e, f.default, d.default, l.default, a.default)
        );
      }
      function y(e, t, n) {
        let s = [];
        for (let { channel: i } of e[u.GUILD_VOCAL_CHANNELS_KEY])
          h(i, t, n) && s.push(i);
        return s;
      }
      ((i = s || (s = {}))[(i.REMOTE_MODE = 0)] = "REMOTE_MODE"),
        (i[(i.CHANNEL_FULL = 1)] = "CHANNEL_FULL"),
        (i[(i.NO_PERMISSION = 2)] = "NO_PERMISSION");
    },
    354831: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getStreamerActivity: function () {
            return u;
          },
          getStreamerApplication: function () {
            return d;
          },
          useGetStreamApplication: function () {
            return f;
          },
        });
      var s = n("661223"),
        i = n("331900"),
        r = n("565639"),
        a = n("467006");
      function o(e) {
        return e.type === a.ActivityTypes.PLAYING;
      }
      function u(e, t) {
        var n;
        return null != e ? ((n = e.ownerId), t.findActivity(n, o)) : null;
      }
      function d(e, t) {
        if (null == e) return null;
        let n = u(e, t);
        return null == n ? null : { id: n.application_id, name: n.name };
      }
      function l(e, t) {
        return e === t || (null != e && null != t && (0, i.default)(e, t));
      }
      function f(e) {
        return (0, s.useStateFromStores)(
          [r.default],
          () => d(e, r.default),
          [e],
          l
        );
      }
    },
    18480: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var s = n("389570");
      function i(e) {
        return e.supportsInApp(s.Features.VIDEO);
      }
    },
    222934: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
      var s = n("514267").getDesktopSourceMetadata;
    },
    84385: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var s = n("553766");
      function i(e) {
        (0, s.transitionToChannel)(e.channelId);
      }
    },
    620619: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          isNotAutomodEmbed: function () {
            return i;
          },
        });
      var s = n("980595");
      let i = e => {
        let { type: t } = e;
        return (
          t !== s.MessageEmbedTypes.AUTO_MODERATION_MESSAGE &&
          t !== s.MessageEmbedTypes.AUTO_MODERATION_NOTIFICATION
        );
      };
    },
    138795: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          GuildFeedRenderSelectorExperiment: function () {
            return g;
          },
          GuildHomeBadgeExperiment: function () {
            return m;
          },
          GuildHomeDeprecationExperiment: function () {
            return E;
          },
          GuildHomeFeedbackExperiment: function () {
            return h;
          },
          canSeeGuildHome: function () {
            return c;
          },
          useGuildHomeExperiment: function () {
            return _;
          },
        });
      var s = n("661223"),
        i = n("987393"),
        r = n("516086"),
        a = n("422557"),
        o = n("655864"),
        u = n("610043"),
        d = n("327271"),
        l = n("467006");
      function f(e, t, n) {
        return (
          t.getChannels(e)[u.GUILD_SELECTABLE_CHANNELS_KEY].filter(t => {
            let { channel: s } = t;
            return !n.isChannelGated(e, s.id);
          }).length > 5
        );
      }
      function _(e) {
        arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
        let t = (0, s.useStateFromStores)(
          [u.default, i.default],
          () => null != e && f(e.id, u.default, i.default)
        );
        return (
          !__OVERLAY__ &&
          !!t &&
          null != e &&
          e.hasFeature(l.GuildFeatures.GUILD_HOME_DEPRECATION_OVERRIDE)
        );
      }
      function c(e) {
        if (
          __OVERLAY__ ||
          e === l.ME ||
          e === l.FAVORITES ||
          ((0, a.isInMainTabsExperiment)() && !(0, o.isOnNewPanels)())
        )
          return !1;
        let t = d.default.getGuild(e);
        return (
          !!(null != t && f(e, u.default, i.default)) &&
          t.hasFeature(l.GuildFeatures.GUILD_HOME_DEPRECATION_OVERRIDE)
        );
      }
      let g = (0, r.createExperiment)({
          kind: "user",
          id: "2022-01_home_feed_toggle",
          label: "Show Guild Feed Sorting Selector",
          defaultConfig: { showSelector: !1 },
          treatments: [
            { id: 1, label: "Yes Selector", config: { showSelector: !0 } },
          ],
        }),
        m = (0, r.createExperiment)({
          kind: "user",
          id: "2022-08_home_badge",
          label: "Show badge on home channel",
          defaultConfig: { showBadge: !1 },
          treatments: [
            { id: 1, label: "show badge", config: { showBadge: !0 } },
          ],
        });
      (0, r.createExperiment)({
        kind: "user",
        id: "2022-08_home_drawer_autoclose",
        label: "Auto close home drawer",
        defaultConfig: { autoCloseDrawer: !1, animation: !1, delay: null },
        treatments: [
          {
            id: 1,
            label: "normal animation",
            config: { autoCloseDrawer: !0, animation: !0, delay: null },
          },
          {
            id: 2,
            label: "no animate",
            config: { autoCloseDrawer: !0, animation: !1, delay: null },
          },
          {
            id: 3,
            label: "150 delayed animation",
            config: { autoCloseDrawer: !0, animation: !0, delay: 150 },
          },
          {
            id: 4,
            label: "250 delayed animation",
            config: { autoCloseDrawer: !0, animation: !0, delay: 250 },
          },
          {
            id: 5,
            label: "500 delayed animation",
            config: { autoCloseDrawer: !0, animation: !0, delay: 500 },
          },
        ],
      }),
        (0, r.createExperiment)({
          kind: "user",
          id: "2022-09_welcome_header",
          label: "Show welcome header for home",
          defaultConfig: { showWelcomeHeader: !1 },
          treatments: [
            {
              id: 1,
              label: "show welcome header",
              config: { showWelcomeHeader: !0 },
            },
          ],
        });
      let h = (0, r.createExperiment)({
          kind: "user",
          id: "2022-12_home_feedback_ux",
          label: "Show post feedback for home",
          defaultConfig: { showFeedback: !1 },
          treatments: [
            { id: 100, label: "show feedback", config: { showFeedback: !0 } },
          ],
        }),
        E = (0, r.createExperiment)({
          kind: "guild",
          id: "2023-03_home_deprecation",
          label: "Home Deprecation",
          defaultConfig: { showDeprecationNotice: !1 },
          treatments: [
            {
              id: 1,
              label: "Show notice",
              config: { showDeprecationNotice: !0 },
            },
          ],
        });
    },
    397282: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        });
      var s = n("454836"),
        i = n("312916"),
        r = n("243393"),
        a = n("911533"),
        o = n("442409"),
        u = n("361733"),
        d = n("869817"),
        l = n("871831"),
        f = n("467006"),
        _ = {
          fetchVerificationForm: async (e, t) => {
            let n = t ?? d.default.getInviteKeyForGuildId(e),
              r = l.default.getCurrentUser(),
              a = !u.default.isMember(e, r?.id);
            try {
              let t = await s.default.get({
                url: f.Endpoints.GUILD_MEMBER_VERIFICATION(e),
                query: {
                  with_guild: a,
                  invite_code:
                    null != n ? (0, o.parseInviteCodeFromInviteKey)(n) : void 0,
                },
                oldFormErrors: !0,
              });
              if (null == t.body) throw t;
              let { body: r } = t;
              return (
                i.default.dispatch({
                  type: "MEMBER_VERIFICATION_FORM_UPDATE",
                  guildId: e,
                  form: {
                    version: r.version,
                    description: r.description,
                    formFields: r.form_fields,
                    guild: r.guild,
                  },
                }),
                r
              );
            } catch (t) {
              i.default.dispatch({
                type: "MEMBER_VERIFICATION_FORM_FETCH_FAIL",
                guildId: e,
              });
            }
          },
          updateVerificationForm: async (e, t) => {
            let { body: n } = await s.default.patch({
              url: f.Endpoints.GUILD_MEMBER_VERIFICATION(e),
              body: { form_fields: t },
              oldFormErrors: !0,
            });
            i.default.dispatch({
              type: "MEMBER_VERIFICATION_FORM_UPDATE",
              guildId: e,
              form: {
                version: n.version,
                description: n.description,
                formFields: n.form_fields,
              },
            });
          },
          updateVerificationFormDescription: async (e, t) => {
            let { body: n } = await s.default.patch({
              url: f.Endpoints.GUILD_MEMBER_VERIFICATION(e),
              body: { description: t },
              oldFormErrors: !0,
            });
            i.default.dispatch({
              type: "MEMBER_VERIFICATION_FORM_UPDATE",
              guildId: e,
              form: {
                version: n.version,
                description: n.description,
                formFields: n.form_fields,
              },
            });
          },
          enableVerificationForm: async (e, t) => {
            await s.default.patch({
              url: f.Endpoints.GUILD_MEMBER_VERIFICATION(e),
              body: { enabled: t },
              oldFormErrors: !0,
            });
          },
          submitVerificationForm: async (e, t) => {
            if (a.default.isFullServerPreview(e)) {
              (0, r.updateImpersonatedData)(e, {
                memberOptions: { isPending: !1 },
              });
              return;
            }
            try {
              let { body: n } = await s.default.put({
                url: f.Endpoints.GUILD_MEMBER_REQUEST_TO_JOIN(e),
                body: { version: t.version, form_fields: t.formFields },
              });
              return (
                i.default.dispatch({
                  type: "USER_GUILD_JOIN_REQUEST_UPDATE",
                  guildId: e,
                  request: n,
                }),
                n
              );
            } catch (e) {
              throw e;
            }
          },
        };
    },
    181657: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          AUTOMATIC_APPROVAL_FORM_FIELDS: function () {
            return r;
          },
          IN_APP_MEMBER_VERIFICATION_MODAL_KEY: function () {
            return E;
          },
          MANUAL_APPROVAL_FORM_FIELDS: function () {
            return a;
          },
          MAX_CHOICE_LENGTH: function () {
            return _;
          },
          MAX_DESCRIPTION_LENGTH: function () {
            return m;
          },
          MAX_FORM_ELEMENTS: function () {
            return o;
          },
          MAX_NUM_CHOICES: function () {
            return f;
          },
          MAX_NUM_RULES: function () {
            return u;
          },
          MAX_PARAGRAPH_RESPONSE_LENGTH: function () {
            return g;
          },
          MAX_QUESTION_LENGTH: function () {
            return l;
          },
          MAX_RULE_LENGTH: function () {
            return d;
          },
          MAX_TEXT_RESPONSE_LENGTH: function () {
            return c;
          },
          MEMBER_VERIFICATION_TYPE: function () {
            return h;
          },
        });
      var s,
        i = n("90698");
      i.VerificationFormFieldTypes.VERIFICATION;
      let r = new Set([i.VerificationFormFieldTypes.TERMS]),
        a = new Set([
          i.VerificationFormFieldTypes.MULTIPLE_CHOICE,
          i.VerificationFormFieldTypes.TEXT_INPUT,
          i.VerificationFormFieldTypes.PARAGRAPH,
        ]),
        o = 5,
        u = 16,
        d = 300,
        l = 300,
        f = 8,
        _ = 150,
        c = 150,
        g = 1e3,
        m = 300,
        h = "Membership Gating",
        E = "in-app-member-verification";
      (s || (s = {})).VERIFICATION_INFO = "VERIFICATION_INFO";
    },
    131227: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          NO_MEMBER_VERIFICATION_FORM: function () {
            return u;
          },
          default: function () {
            return f;
          },
        });
      var s = n("392711"),
        i = n.n(s),
        r = n("661223"),
        a = n("312916"),
        o = n("90698");
      let u = { version: "", description: "", formFields: [] },
        d = {};
      class l extends r.default.Store {
        static #e = (this.displayName = "MemberVerificationFormStore");
        get(e) {
          if (null != e) return d[e];
        }
        getRulesPrompt(e) {
          return i().find(d[e]?.formFields, o.isTermsFormField);
        }
      }
      var f = new l(a.default, {
        INVITE_ACCEPT_SUCCESS: function (e) {
          let { invite: t } = e,
            { member_verification_form: n } = t,
            { guild: s } = t;
          return (
            null != s &&
            null != n &&
            ((d[s.id] = {
              version: n.version,
              description: n.description ?? "",
              formFields: n.form_fields,
              guild: s,
            }),
            !0)
          );
        },
        MEMBER_VERIFICATION_FORM_UPDATE: function (e) {
          let { form: t, guildId: n } = e;
          d[n] = t ?? u;
        },
        MEMBER_VERIFICATION_FORM_FETCH_FAIL: function (e) {
          let { guildId: t } = e;
          d[t] = d[t] ?? u;
        },
        GUILD_DELETE: function (e) {
          let { guild: t } = e;
          delete d[t?.id];
        },
      });
    },
    95995: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          isMemberVerificationManualApproval: function () {
            return r;
          },
          useIsMemberVerificationManualApproval: function () {
            return i;
          },
        });
      let s = (0, n("516086").createExperiment)({
        kind: "guild",
        id: "2021-11_member_verification_manual_approval",
        label: "Member Verification Manual Approval",
        defaultConfig: { manualApprovalEnabled: !1 },
        treatments: [
          {
            id: 1,
            label: "Enable manual approval for membership verification",
            config: { manualApprovalEnabled: !0 },
          },
        ],
      });
      function i(e) {
        return (
          s.trackExposure({ guildId: e, location: "bda51f_1" }),
          s.useExperiment(
            { guildId: e, location: "bda51f_2" },
            { autoTrackExposure: !1 }
          ).manualApprovalEnabled
        );
      }
      function r(e) {
        return s.getCurrentConfig(
          { guildId: e, location: "bda51f_3" },
          { autoTrackExposure: !1 }
        ).manualApprovalEnabled;
      }
    },
    680243: function (e, t, n) {
      "use strict";
      let s;
      n.r(t),
        n.d(t, {
          openMemberVerificationModal: function () {
            return i;
          },
        });
      let i = (s = n("34162").default).openMemberVerificationModal;
      s.closeMemberVerificationModal;
    },
    252567: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          canReviewGuildMemberApplications: function () {
            return _;
          },
          useCanReviewGuildMemberApplications: function () {
            return c;
          },
        });
      var s = n("470079"),
        i = n("661223"),
        r = n("327271"),
        a = n("197905"),
        o = n("397282"),
        u = n("131227"),
        d = n("95995"),
        l = n("90698"),
        f = n("467006");
      function _(e) {
        let t = r.default.getGuild(e);
        return (
          null != t &&
          (0, d.isMemberVerificationManualApproval)(e) &&
          a.default.can(f.Permissions.KICK_MEMBERS, t)
        );
      }
      function c(e) {
        let t = (0, d.useIsMemberVerificationManualApproval)(e),
          n = (0, i.useStateFromStores)([r.default], () =>
            r.default.getGuild(e)
          ),
          _ =
            null != n &&
            t &&
            a.default.can(f.Permissions.KICK_MEMBERS, n) &&
            n.hasVerificationGate(),
          c = (0, i.useStateFromStores)([u.default], () => u.default.get(e), [
            e,
          ]);
        s.useEffect(() => {
          _ && o.default.fetchVerificationForm(e);
        }, [_, e]);
        let g = s.useMemo(
          () => (c?.formFields ?? []).some(e => !(0, l.isTermsFormField)(e)),
          [c?.formFields]
        );
        return _ && g;
      }
    },
    222556: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          shouldShowMembershipVerificationGate: function () {
            return u;
          },
          useShowMemberVerificationGate: function () {
            return d;
          },
        });
      var s = n("661223"),
        i = n("361733"),
        r = n("327271"),
        a = n("200560"),
        o = n("871831");
      function u(e) {
        let [t, n, s, u] =
          arguments.length > 1 && void 0 !== arguments[1]
            ? arguments[1]
            : [r.default, a.default, o.default, i.default];
        if (null == e) return !1;
        let d = t.getGuild(e),
          { notClaimed: l } = n.getCheck(e),
          f = s.getCurrentUser(),
          _ = !1;
        return (
          null != f && (_ = u.getMember(e, f.id)?.isPending ?? !1),
          (_ || l) && !!d?.hasVerificationGate()
        );
      }
      function d(e) {
        return (0, s.useStateFromStores)(
          [r.default, a.default, o.default, i.default],
          () => null != e && u(e, [r.default, a.default, o.default, i.default]),
          [e]
        );
      }
    },
    590202: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          setHasUnsubmittedChanges: function () {
            return u;
          },
          setShowWarning: function () {
            return d;
          },
          useMemberVerificationFormNoticeStore: function () {
            return o;
          },
        });
      var s = n("652874"),
        i = n("845649"),
        r = n("467006");
      let a = Object.freeze({
          hasUnsubmittedChanges: !1,
          shouldShowWarning: !1,
        }),
        o = (0, s.default)(e => a),
        u = e => {
          o.setState({ hasUnsubmittedChanges: e });
        },
        d = e => {
          o.setState({ shouldShowWarning: e }),
            e &&
              i.ComponentDispatch.dispatch(r.ComponentActions.EMPHASIZE_NOTICE);
        };
    },
    34162: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        });
      var s = n("735250");
      n("470079");
      var i = n("910838"),
        r = n("328470"),
        a = n("397282"),
        o = n("590202"),
        u = n("181657"),
        d = n("467006");
      let l = () => {
          r.default.track(d.AnalyticEvents.MODAL_DISMISSED, {
            type: u.MEMBER_VERIFICATION_TYPE,
          });
        },
        f = e => {
          r.default.track(d.AnalyticEvents.OPEN_MODAL, {
            type: u.MEMBER_VERIFICATION_TYPE,
            guild_id: e,
          });
        };
      var _ = {
        openMemberVerificationModal(e, t) {
          f(e);
          let r = async t => {
            await a.default.submitVerificationForm(e, t);
          };
          (0, i.openModalLazy)(
            async () => {
              let { default: t } = await n
                .el("34162@1241:1287")
                .then(n.bind(n, "51687"));
              return n =>
                (0, s.jsx)(t, {
                  ...n,
                  guildId: e,
                  onComplete: r,
                  onClose: function () {
                    let e =
                      arguments.length > 0 &&
                      void 0 !== arguments[0] &&
                      arguments[0];
                    if (!e) {
                      if (
                        o.useMemberVerificationFormNoticeStore.getState()
                          .hasUnsubmittedChanges
                      ) {
                        (0, o.setShowWarning)(!0);
                        return;
                      }
                      l();
                    }
                    n.onClose();
                  },
                });
            },
            {
              modalKey: u.IN_APP_MEMBER_VERIFICATION_MODAL_KEY,
              onCloseRequest: () => {
                l(),
                  o.useMemberVerificationFormNoticeStore.getState()
                    .hasUnsubmittedChanges
                    ? (0, o.setShowWarning)(!0)
                    : (0, i.closeModal)(u.IN_APP_MEMBER_VERIFICATION_MODAL_KEY);
              },
              onCloseCallback: t,
            }
          );
        },
        closeMemberVerificationModal() {
          let e =
            arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
          !e && l(), (0, i.closeModal)(u.IN_APP_MEMBER_VERIFICATION_MODAL_KEY);
        },
      };
    },
    697817: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          canAccessMemberSafetyPage: function () {
            return _;
          },
          canBulkBanUser: function () {
            return p;
          },
          useCanAccessBulkBanningFeature: function () {
            return m;
          },
          useCanAccessInviteCodeFeature: function () {
            return h;
          },
          useCanAccessMemberSafetyPage: function () {
            return g;
          },
          useCanBulkBanUser: function () {
            return E;
          },
        });
      var s = n("768517"),
        i = n("661223"),
        r = n("327271"),
        a = n("197905"),
        o = n("871831"),
        u = n("694574"),
        d = n("244537"),
        l = n("467006");
      let f = function (e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : [r.default, o.default],
            [n, s] = t,
            i = n.getGuild(e);
          return { user: s.getCurrentUser(), guild: i };
        },
        _ = function (e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : [r.default, o.default],
            n = f(e, t);
          return (
            null != n &&
            s.default.hasAny(
              u.default.computePermissions({
                user: n.user,
                context: n.guild,
                checkElevated: !1,
              }),
              d.MemberSafetyPagePermissions
            )
          );
        },
        c = function (e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : [r.default, o.default],
            n = f(e, t);
          return (
            null != n &&
            a.default.can(l.Permissions.MANAGE_GUILD, n.guild) &&
            a.default.can(l.Permissions.BAN_MEMBERS, n.guild)
          );
        };
      function g(e) {
        return (0, i.useStateFromStores)(
          [r.default, o.default],
          () => _(e, [r.default, o.default]),
          [e]
        );
      }
      function m(e) {
        let t = g(e),
          n = (0, i.useStateFromStores)(
            [r.default, o.default],
            () => c(e, [r.default, o.default]),
            [e]
          );
        return t && n;
      }
      function h(e) {
        return (0, i.useStateFromStores)(
          [r.default, a.default],
          () => {
            let t = r.default.getGuild(e);
            return null != t && a.default.can(l.Permissions.MANAGE_GUILD, t);
          },
          [e]
        );
      }
      function E(e, t, n) {
        return (0, i.useStateFromStores)(
          [a.default, r.default],
          () => {
            let s = r.default.getGuild(e);
            return (
              null != s &&
              t &&
              a.default.canManageUser(l.Permissions.BAN_MEMBERS, n, s)
            );
          },
          [t, e, n]
        );
      }
      function p(e, t, n) {
        let s = r.default.getGuild(e);
        return (
          null != s &&
          t &&
          a.default.canManageUser(l.Permissions.BAN_MEMBERS, n, s)
        );
      }
    },
    484244: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("373043"),
        i = n("467006");
      class r {
        getCreateAttachmentURL(e) {
          return i.Endpoints.GUILD_PRODUCT_CREATE_ATTACHMENT_UPLOAD(e);
        }
        getDeleteUploadURL(e) {
          return i.Endpoints.MESSAGE_DELETE_UPLOAD(e);
        }
        getMaxFileSize(e) {
          return s.MAX_ATTACHMENT_UPLOAD_FILESIZE_BYTES;
        }
        getMaxAttachmentsCount() {
          return s.MAX_ATTACHMENT_UPLOAD_COUNT;
        }
        getMaxTotalAttachmentSize() {
          return s.MAX_ATTACHMENT_UPLOAD_TOTAL_FILESIZE_BYTES;
        }
        get shouldReactNativeCompressUploads() {
          return !1;
        }
      }
    },
    373043: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          GUILD_PRODUCT_EDIT_MODAL_KEY: function () {
            return s;
          },
          MAX_ATTACHMENT_UPLOAD_COUNT: function () {
            return a;
          },
          MAX_ATTACHMENT_UPLOAD_FILESIZE_BYTES: function () {
            return i;
          },
          MAX_ATTACHMENT_UPLOAD_TOTAL_FILESIZE_BYTES: function () {
            return r;
          },
          MAX_PUBLISHED_GUILD_PRODUCT_LISTINGS: function () {
            return o;
          },
        });
      let s = "guild-product-edit-modal",
        i = 1073741824,
        r = 1073741824,
        a = 10,
        o = 30;
    },
    895345: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          isGuildEligibleForGuildProducts: function () {
            return a;
          },
          useGuildEligibleForGuildProducts: function () {
            return r;
          },
        });
      var s = n("446833"),
        i = n("467006");
      function r(e, t) {
        let { enabled: n } = s.GuildProductsExperiment.useExperiment({
          guildId: e ?? i.EMPTY_STRING_SNOWFLAKE_ID,
          location: t,
        });
        return n;
      }
      function a(e, t) {
        let { enabled: n } = s.GuildProductsExperiment.getCurrentConfig({
          guildId: e ?? i.EMPTY_STRING_SNOWFLAKE_ID,
          location: t,
        });
        return n;
      }
    },
    446833: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          GuildProductsExperiment: function () {
            return s;
          },
        });
      let s = (0, n("516086").createExperiment)({
        kind: "guild",
        id: "2023-04_server_products",
        label: "Server Products",
        defaultConfig: { enabled: !1 },
        treatments: [
          {
            id: 1,
            label:
              "Enables Server Products (AKA one time purchases for creator guilds)",
            config: { enabled: !0 },
          },
        ],
      });
    },
    486473: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          archiveSubscriptionListing: function () {
            return p;
          },
          createSubscriptionGroupListing: function () {
            return m;
          },
          createSubscriptionListing: function () {
            return I;
          },
          deleteSubscriptionListing: function () {
            return E;
          },
          fetchAllSubscriptionListingsDataForGuild: function () {
            return g;
          },
          fetchMonetizationRestrictions: function () {
            return S;
          },
          fetchSubscriptionListingForPlan: function () {
            return h;
          },
          fetchSubscriptionsSettings: function () {
            return _;
          },
          updateSubscriptionListing: function () {
            return T;
          },
          updateSubscriptionTrial: function () {
            return v;
          },
          updateSubscriptionsSettings: function () {
            return c;
          },
        });
      var s = n("435014"),
        i = n("312916"),
        r = n("242677"),
        a = n("714558"),
        o = n("244180"),
        u = n("328470"),
        d = n("152551"),
        l = n("811661"),
        f = n("467006");
      async function _(e) {
        let t = await l.getGuildRoleSubscriptionsSettings(e);
        i.default.dispatch({
          type: "GUILD_ROLE_SUBSCRIPTIONS_UPDATE_SUBSCRIPTIONS_SETTINGS",
          settings: t,
        });
      }
      async function c(e, t) {
        let n = await l.updateGuildRoleSubscriptionsSettings(e, t);
        i.default.dispatch({
          type: "GUILD_ROLE_SUBSCRIPTIONS_UPDATE_SUBSCRIPTIONS_SETTINGS",
          settings: n,
        });
      }
      async function g(e) {
        let { includeSoftDeleted: t = !0, countryCode: n } =
          arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
        i.default.dispatch({
          type: "GUILD_ROLE_SUBSCRIPTIONS_FETCH_LISTINGS",
          guildId: e,
        });
        try {
          let [s, a, o] = await Promise.all([
            l.getGuildRoleSubscriptionGroupListingsForGuild(e, {
              includeSoftDeleted: t,
              countryCode: n,
            }),
            l.getGuildRoleSubscriptionsSettings(e),
            l.getGuildRoleSubscriptionTrials(e),
            (0, r.fetchSubscriptions)(),
          ]);
          i.default.dispatch({
            type: "GUILD_ROLE_SUBSCRIPTIONS_FETCH_LISTINGS_SUCCESS",
            guildId: e,
            groupListings: s,
            settings: a,
            subscriptionTrials: o,
          });
        } catch (t) {
          i.default.dispatch({
            type: "GUILD_ROLE_SUBSCRIPTIONS_FETCH_LISTINGS_FAILURE",
            guildId: e,
          });
        }
      }
      async function m(e, t) {
        let n = await l.createGuildRoleSubscriptionGroupListing(e, t);
        return (
          i.default.dispatch({
            type: "GUILD_ROLE_SUBSCRIPTIONS_UPDATE_GROUP_LISTING",
            listing: n,
          }),
          n
        );
      }
      async function h(e) {
        i.default.dispatch({
          type: "GUILD_ROLE_SUBSCRIPTIONS_FETCH_LISTING_FOR_PLAN",
          planId: e,
        });
        let t = await l.getGuildRoleSubscriptionGroupForSubscriptionPlan(e);
        for (let n of (i.default.dispatch({
          type: "GUILD_ROLE_SUBSCRIPTIONS_FETCH_LISTING_FOR_PLAN_SUCCESS",
          groupListing: t,
        }),
        t.subscription_listings ?? []))
          n.subscription_plans[0].id === e &&
            (await a.fetchSubscriptionPlansForSKU(n.id, void 0, void 0, !0));
      }
      async function E(e, t, n) {
        await l.deleteGuildRoleSubscriptionListing(e, t, n),
          i.default.dispatch({
            type: "GUILD_ROLE_SUBSCRIPTIONS_DELETE_LISTING",
            listingId: n,
          });
      }
      async function p(e, t, n) {
        let s = await l.archiveGuildRoleSubscriptionListing(e, t, n);
        i.default.dispatch({
          type: "GUILD_ROLE_SUBSCRIPTIONS_UPDATE_LISTING",
          listing: s,
        });
      }
      async function v(e, t, n) {
        let s = await l.updateGuildRoleSubscriptionsTrial(e, t, n);
        i.default.dispatch({
          type: "GUILD_ROLE_SUBSCRIPTIONS_UPDATE_SUBSCRIPTION_TRIAL",
          subscriptionTrial: s,
        });
      }
      async function y(e, t) {
        let n =
            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
          s = await l.getGuildRoleSubscriptionGroupListing(e, t, n);
        return (
          i.default.dispatch({
            type: "GUILD_ROLE_SUBSCRIPTIONS_UPDATE_GROUP_LISTING",
            listing: s,
          }),
          s
        );
      }
      async function I(e) {
        let {
            guildId: t,
            groupListingId: n,
            data: s,
            analyticsContext: r,
            onBeforeDispatchNewListing: a,
          } = e,
          d = await l.createGuildRoleSubscriptionListing(t, n, s);
        return (
          u.default.track(f.AnalyticEvents.ROLE_SUBSCRIPTION_LISTING_CREATED, {
            role_subscription_listing_id: d.id,
            role_subscription_group_listing_id: n,
            template_name: r.templateCategory,
            has_change_from_template: r.hasChangeFromTemplate,
            ...(0, o.collectGuildAnalyticsMetadata)(t),
          }),
          await y(t, n, { includeArchivedListings: !0 }),
          a?.(d),
          i.default.dispatch({
            type: "GUILD_ROLE_SUBSCRIPTIONS_UPDATE_LISTING",
            listing: d,
          }),
          d
        );
      }
      async function T(e) {
        let { guildId: t, listingId: n, groupListingId: s, data: r } = e,
          a = await l.updateGuildRoleSubscriptionListing(t, s, n, r);
        return (
          i.default.dispatch({
            type: "GUILD_ROLE_SUBSCRIPTIONS_UPDATE_LISTING",
            listing: a,
          }),
          await y(t, s, { includeArchivedListings: !0 }),
          a
        );
      }
      async function S(e) {
        let { signal: t } =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
          n = !1;
        for (let r = 0; r < 3; r++)
          try {
            if (t?.aborted) {
              i.default.dispatch({
                type: "GUILD_ROLE_SUBSCRIPTIONS_FETCH_RESTRICTIONS_ABORTED",
                guildId: e,
              });
              return;
            }
            i.default.dispatch({
              type: "GUILD_ROLE_SUBSCRIPTIONS_FETCH_RESTRICTIONS",
              guildId: e,
            });
            let { restrictions: s } = await l.getGuildMonetizationRestrictions(
              e,
              { signal: t }
            );
            i.default.dispatch({
              type: "GUILD_ROLE_SUBSCRIPTIONS_FETCH_RESTRICTIONS_SUCCESS",
              guildId: e,
              restrictions: s ?? [],
            }),
              (n = !0);
            break;
          } catch (e) {
            await (0, s.sleep)((r + 1) * d.default.Millis.SECOND);
          }
        !n &&
          i.default.dispatch({
            type: "GUILD_ROLE_SUBSCRIPTIONS_FETCH_RESTRICTIONS_FAILURE",
            guildId: e,
          });
      }
    },
    811661: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          archiveGuildRoleSubscriptionListing: function () {
            return E;
          },
          createGuildRoleSubscriptionGroupListing: function () {
            return o;
          },
          createGuildRoleSubscriptionListing: function () {
            return u;
          },
          deleteGuildRoleSubscriptionListing: function () {
            return h;
          },
          fetchHighlightedCreatorGuildDetails: function () {
            return T;
          },
          getGuildMonetizationRestrictions: function () {
            return I;
          },
          getGuildRoleSubscriptionGroupForSubscriptionPlan: function () {
            return m;
          },
          getGuildRoleSubscriptionGroupListing: function () {
            return g;
          },
          getGuildRoleSubscriptionGroupListingsForGuild: function () {
            return l;
          },
          getGuildRoleSubscriptionTrialEligibility: function () {
            return y;
          },
          getGuildRoleSubscriptionTrials: function () {
            return p;
          },
          getGuildRoleSubscriptionsSettings: function () {
            return f;
          },
          getPriceTiers: function () {
            return c;
          },
          updateGuildRoleSubscriptionListing: function () {
            return d;
          },
          updateGuildRoleSubscriptionsSettings: function () {
            return _;
          },
          updateGuildRoleSubscriptionsTrial: function () {
            return v;
          },
        });
      var s = n("454836"),
        i = n("253842"),
        r = n("467006"),
        a = n("477815");
      let o = async (e, t) => {
          try {
            return (
              await s.default.post({
                url: r.Endpoints.GUILD_ROLE_SUBSCRIPTION_GROUP_LISTINGS(e),
                body: t,
              })
            ).body;
          } catch (e) {
            throw new i.APIError(e);
          }
        },
        u = async (e, t, n) => {
          let { priceTier: a, ...o } = n;
          try {
            return (
              await s.default.post({
                url: r.Endpoints.GUILD_ROLE_SUBSCRIPTION_LISTINGS(e, t),
                body: { ...o, price_tier: a },
              })
            ).body;
          } catch (e) {
            throw new i.APIError(e);
          }
        },
        d = async (e, t, n, a) => {
          let { priceTier: o, ...u } = a;
          try {
            return (
              await s.default.patch({
                url: r.Endpoints.GUILD_ROLE_SUBSCRIPTION_LISTINGS(e, t, n),
                body: { ...u, price_tier: o },
              })
            ).body;
          } catch (e) {
            throw new i.APIError(e);
          }
        },
        l = async function (e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : { includeSoftDeleted: !1 },
            n = {
              include_soft_deleted: t.includeSoftDeleted,
              country_code: t.countryCode,
            };
          try {
            return (
              await s.default.get({
                url: r.Endpoints.GUILD_ROLE_SUBSCRIPTION_GROUP_LISTINGS(e),
                query: n,
              })
            ).body;
          } catch (e) {
            throw new i.APIError(e);
          }
        },
        f = async e =>
          (
            await s.default.get({
              url: r.Endpoints.GUILD_ROLE_SUBSCRIPTIONS_SETTINGS(e),
            })
          ).body,
        _ = async (e, t) => {
          try {
            return (
              await s.default.patch({
                url: r.Endpoints.GUILD_ROLE_SUBSCRIPTIONS_SETTINGS(e),
                body: t,
              })
            ).body;
          } catch (e) {
            throw new i.APIError(e);
          }
        },
        c = async e => {
          try {
            return (
              await s.default.get({
                url: r.Endpoints.PRICE_TIERS,
                query: {
                  price_tier_type: a.PriceTierTypes.GUILD_ROLE_SUBSCRIPTIONS,
                  guild_id: e,
                },
              })
            ).body;
          } catch (e) {
            throw new i.APIError(e);
          }
        },
        g = async function (e, t) {
          let n =
            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
          try {
            return (
              await s.default.get({
                url: r.Endpoints.GUILD_ROLE_SUBSCRIPTION_GROUP_LISTINGS(e, t),
                query: {
                  include_draft_listings: n.includeDraftListings,
                  include_archived_listings: n.includeArchivedListings,
                },
              })
            ).body;
          } catch (e) {
            throw new i.APIError(e);
          }
        },
        m = async e => {
          try {
            return (
              await s.default.get({
                url: r.Endpoints.SUBSCRIPTION_PLAN_GUILD_ROLE_GROUP_LISTING(e),
              })
            ).body;
          } catch (e) {
            throw new i.APIError(e);
          }
        },
        h = async (e, t, n) => {
          try {
            await s.default.delete({
              url: r.Endpoints.GUILD_ROLE_SUBSCRIPTION_LISTINGS(e, t, n),
            });
          } catch (e) {
            throw new i.APIError(e);
          }
        },
        E = async (e, t, n) => {
          try {
            return (
              await s.default.post({
                url: r.Endpoints.GUILD_ROLE_SUBSCRIPTION_GROUP_LISTING_ARCHIVE(
                  e,
                  t,
                  n
                ),
              })
            ).body;
          } catch (e) {
            throw new i.APIError(e);
          }
        },
        p = async e => {
          try {
            return (
              await s.default.get({
                url: r.Endpoints.GUILD_ROLE_SUBSCRIPTION_TRIALS(e),
              })
            ).body;
          } catch (e) {
            throw new i.APIError(e);
          }
        },
        v = async (e, t, n) => {
          try {
            return (
              await s.default.patch({
                url: r.Endpoints.GUILD_ROLE_SUBSCRIPTION_LISTING_TRIAL(e, t),
                body: n,
              })
            ).body;
          } catch (e) {
            throw new i.APIError(e);
          }
        },
        y = async (e, t, n) => {
          try {
            return (
              await s.default.get({
                url: r.Endpoints.GUILD_ROLE_SUBSCRIPTION_TRIAL_ELIGIBILITY(
                  e,
                  t,
                  n
                ),
              })
            ).body;
          } catch (e) {
            throw new i.APIError(e);
          }
        },
        I = async function (e) {
          let { signal: t } =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          try {
            return (
              await s.default.get({
                url: r.Endpoints.CREATOR_MONETIZATION_RESTRICTIONS(e),
                signal: t,
              })
            ).body;
          } catch (e) {
            throw new i.APIError(e);
          }
        },
        T = async e => {
          try {
            let t = await s.default.get({
              url: r.Endpoints.GUILD_DISCOVERY_SLUG(e),
            });
            return t.body ?? JSON.parse(t.text);
          } catch (e) {
            throw new i.APIError(e);
          }
        };
    },
    440178: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          isPurchasableRoleSubscriptionEmoji: function () {
            return r;
          },
          isRoleSubscriptionEmoji: function () {
            return i;
          },
          isUnusableRoleSubscriptionEmoji: function () {
            return a;
          },
        });
      var s = n("175582");
      function i(e, t) {
        if (e?.roles == null || 0 === e.roles.length || null == t) return !1;
        let n = s.default.getSubscriptionRoles(t);
        return e.roles.some(e => n.has(e));
      }
      function r(e) {
        if (e?.roles == null || 0 === e.roles.length || null == e.guildId)
          return !1;
        let t = s.default.getPurchasableSubscriptionRoles(e.guildId);
        return e.roles.some(e => t.has(e));
      }
      function a(e, t) {
        if (e?.roles == null || 0 === e.roles.length || null == e.guildId)
          return !1;
        if (r(e)) {
          let n = s.default.getUserSubscriptionRoles(e.guildId),
            i = e.roles.some(e => n.has(e)),
            r = t === e.guildId && s.default.getUserIsAdmin(e.guildId);
          if (!(i || r)) return !0;
        }
        return !1;
      }
    },
    175582: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return T;
          },
        });
      var s = n("768517"),
        i = n("661223"),
        r = n("312916"),
        a = n("361733"),
        o = n("327271"),
        u = n("871831"),
        d = n("358312"),
        l = n("467006");
      let f = new Set(),
        _ = new Map(),
        c = new Map(),
        g = new Map(),
        m = new Map(),
        h = null;
      function E(e) {
        let t = u.default.getCurrentUser(),
          n = o.default.getGuild(e);
        if (null == n || null == t) return !1;
        let i = new Set(),
          r = new Set(),
          f = new Set();
        if (
          (m.set(e, n.isOwner(t)),
          n.hasFeature(l.GuildFeatures.ROLE_SUBSCRIPTIONS_ENABLED))
        ) {
          let o = a.default.getMember(e, t.id),
            u = new Set(o?.roles ?? []);
          for (let t in n.roles) {
            var h;
            let a = n.roles[t];
            if (
              ((0, d.isSubscriptionRole)(a) &&
                (i.add(t),
                (0, d.isSubscriptionRoleAvailableForPurchase)(a) &&
                  (r.add(t), u.has(t) && f.add(t))),
              u.has(t) &&
                ((h = a),
                s.default.has(h.permissions, l.Permissions.ADMINISTRATOR)))
            )
              m.set(e, !0);
          }
        }
        return _.set(e, i), g.set(e, f), c.set(e, r), !0;
      }
      function p() {
        _.clear(), g.clear(), c.clear(), m.clear(), (h = null);
      }
      function v(e) {
        let {
          guild: { id: t },
        } = e;
        if (null == h) return !1;
        let n = o.default.getGuild(t);
        if (null == n) return !1;
        let s = n.hasFeature(
          l.GuildFeatures.ROLE_SUBSCRIPTIONS_AVAILABLE_FOR_PURCHASE
        );
        if (s && !h.has(t)) {
          let e = new Set(h);
          return e.add(t), (h = e), !0;
        }
        if (!s && h.has(t)) {
          let e = new Set(h);
          return e.delete(t), (h = e), !0;
        }
        return !1;
      }
      function y(e) {
        let { guildId: t } = e;
        return !!_.has(t) && E(t);
      }
      class I extends i.default.Store {
        static #e = (this.displayName = "SubscriptionRoleStore");
        initialize() {
          this.waitFor(o.default);
        }
        getGuildIdsWithPurchasableRoles() {
          return null == h
            ? (function () {
                let e = o.default.getGuilds(),
                  t = new Set();
                for (let n in e)
                  e[n].hasFeature(
                    l.GuildFeatures.ROLE_SUBSCRIPTIONS_AVAILABLE_FOR_PURCHASE
                  ) && t.add(n);
                return (h = t), t;
              })()
            : h;
        }
        buildRoles(e) {
          !_.has(e) && E(e);
        }
        getSubscriptionRoles(e) {
          return this.buildRoles(e), _.get(e) ?? f;
        }
        getPurchasableSubscriptionRoles(e) {
          return this.buildRoles(e), c.get(e) ?? f;
        }
        getUserSubscriptionRoles(e) {
          return this.buildRoles(e), g.get(e) ?? f;
        }
        getUserIsAdmin(e) {
          return this.buildRoles(e), m.get(e) ?? !1;
        }
      }
      var T = new I(r.default, {
        CONNECTION_OPEN: p,
        LOGOUT: p,
        GUILD_CREATE: v,
        GUILD_DELETE: function (e) {
          let {
            guild: { id: t },
          } = e;
          if (h?.has(t) !== !0) return !1;
          let n = new Set(h);
          n.delete(t), (h = n);
        },
        GUILD_UPDATE: v,
        GUILD_ROLE_CREATE: y,
        GUILD_ROLE_UPDATE: y,
        GUILD_ROLE_DELETE: y,
        GUILD_MEMBER_UPDATE: function (e) {
          let { guildId: t, user: n } = e,
            s = u.default.getCurrentUser();
          return !!(n.id === s?.id && _.has(t)) && E(t);
        },
      });
    },
    644669: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          canUseRoleSubscriptionIAP: function () {
            return u;
          },
        }),
        n("470079"),
        n("203959");
      var s = n("327271"),
        i = n("501769"),
        r = n("776468"),
        a = n("467006");
      let o = [a.GuildFeatures.ROLE_SUBSCRIPTIONS_AVAILABLE_FOR_PURCHASE];
      function u(e) {
        if (!(0, i.isIOS)()) return !1;
        let t = (0, r.getSystemVersion)();
        if (
          null == t ||
          -1 ===
            (function (e, t) {
              let n = e.split(".").map(Number),
                s = t.split(".").map(Number),
                i = Math.max(n.length, s.length);
              for (let e = 0; e < i; e++) {
                let t = n[e] ?? 0,
                  i = s[e] ?? 0;
                if (t < i) return -1;
                if (t > i) return 1;
              }
              return 0;
            })(t, "13.2")
        )
          return !1;
        let n = s.default.getGuild(e);
        return !!(null != n && o.every(e => n.hasFeature(e))) || !1;
      }
    },
    776468: function (e, t, n) {
      "use strict";
      function s() {
        return null;
      }
      n.r(t),
        n.d(t, {
          getSystemVersion: function () {
            return s;
          },
        });
    },
    603310: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          computeHasRoleSubscriptionsInGuild: function () {
            return u;
          },
          default: function () {
            return d;
          },
        });
      var s = n("661223"),
        i = n("262047"),
        r = n("361733"),
        a = n("327271"),
        o = n("467006");
      function u(e) {
        let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : null == e
                ? null
                : r.default.getMember(e, i.default.getId()),
          [n] =
            arguments.length > 2 && void 0 !== arguments[2]
              ? arguments[2]
              : [a.default],
          s = n.getGuild(e);
        if (
          null == s ||
          null == t ||
          !s.hasFeature(o.GuildFeatures.ROLE_SUBSCRIPTIONS_ENABLED)
        )
          return !1;
        for (let e of t.roles) {
          let t = s.getRole(e);
          if (t?.tags?.subscription_listing_id != null) return !0;
        }
        return !1;
      }
      function d(e) {
        let t = (0, s.useStateFromStores)([i.default, r.default], () =>
          null == e ? null : r.default.getMember(e, i.default.getId())
        );
        return (0, s.useStateFromStores)(
          [a.default],
          () => u(e, t, [a.default]),
          [e, t]
        );
      }
    },
    418714: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          areRoleSubscriptionsVisibleInGuild: function () {
            return _;
          },
          useRoleSubscriptionsVisibleInGuild: function () {
            return c;
          },
          useShowRoleSubscriptionsInChannelList: function () {
            return g;
          },
        });
      var s = n("661223"),
        i = n("374713"),
        r = n("91819"),
        a = n("307245"),
        o = n("911533"),
        u = n("327271"),
        d = n("603310"),
        l = n("467006");
      function f(e) {
        let [t, n] =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : [u.default, o.default],
          s = t.getGuild(e);
        if (null == s) return !1;
        let i = (0, r.isCreatorMonetizationEnabledGuild)(s),
          a = s.hasFeature(
            l.GuildFeatures.ROLE_SUBSCRIPTIONS_AVAILABLE_FOR_PURCHASE
          );
        return !!((i && a) || n.isViewingServerShop(e)) || !1;
      }
      function _(e) {
        return !!f(e) || (0, d.computeHasRoleSubscriptionsInGuild)(e);
      }
      function c(e) {
        let t = (0, d.default)(e),
          n = (0, s.useStateFromStores)(
            [u.default, o.default],
            () => f(e, [u.default, o.default]),
            [e]
          ),
          { shouldHideGuildPurchaseEntryPoints: i } = (0,
          a.useShouldHideGuildPurchaseEntryPoints)(e);
        return !i && (n || t);
      }
      function g(e) {
        let t = c(e),
          n = (0, i.useIsEligibleForSubscriptionsInGuildShop)(
            e,
            "useShowRoleSubscriptionsInChannelList"
          );
        return t && !n;
      }
    },
    805426: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          openEndEventModal: function () {
            return l;
          },
          openGuildEventDetails: function () {
            return u;
          },
          transitionToEventDetailsFromInvite: function () {
            return d;
          },
        });
      var s = n("735250");
      n("470079");
      var i = n("910838"),
        r = n("181123"),
        a = n("467006"),
        o = n("348162");
      function u(e) {
        let { eventId: t, parentGuildId: r, recurrenceId: a } = e;
        (0, i.openModalLazy)(async () => {
          let { default: e } = await n
            .el("805426@575:615")
            .then(n.bind(n, "632542"));
          return n =>
            (0, s.jsx)(e, {
              guildScheduledEventId: t,
              parentGuildId: r,
              initialRecurrenceId: a,
              ...n,
            });
        });
      }
      async function d(e, t) {
        let { guild_id: n } = e;
        await r.default.transitionToGuildSync(n, t),
          u({ eventId: e.id, event: e });
      }
      function l(e, t) {
        (0, i.openModalLazy)(
          async () => {
            let { default: t } = await n
              .el("805426@1390:1419")
              .then(n.bind(n, "981418"));
            return n => (0, s.jsx)(t, { ...n, channel: e });
          },
          {
            contextKey:
              t === a.AppContext.POPOUT
                ? o.POPOUT_MODAL_CONTEXT
                : o.DEFAULT_MODAL_CONTEXT,
          }
        );
      }
    },
    62470: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          StaticGuildEventIndexes: function () {
            return _;
          },
          default: function () {
            return V;
          },
          isEventUpcoming: function () {
            return P;
          },
          isGuildEventEnded: function () {
            return b;
          },
          isGuildScheduledEventActive: function () {
            return R;
          },
          scheduledEventSort: function () {
            return c;
          },
        }),
        n("653041");
      var s = n("392711"),
        i = n.n(s),
        r = n("661223"),
        a = n("386695"),
        o = n("312916"),
        u = n("262047"),
        d = n("361733"),
        l = n("84819"),
        f = n("578962");
      let _ = {
        EVENT: "event",
        EVENT_ACTIVE: "active",
        EVENT_UPCOMING: "event-upcoming",
        GUILD_EVENT: e => `${e}-${_.EVENT}`,
        GUILD_EVENT_ACTIVE: e => `${e}-${_.EVENT_ACTIVE}`,
        GUILD_EVENT_UPCOMING: e => `${e}-${_.EVENT_UPCOMING}`,
        CHANNEL_EVENT: e => `${e}-${_.EVENT}`,
        CHANNEL_EVENT_ACTIVE: e => `${e}-${_.EVENT_ACTIVE}`,
        CHANNEL_EVENT_UPCOMING: e => `${e}-${_.EVENT_UPCOMING}`,
      };
      function c(e) {
        let { id: t, scheduled_start_time: n } = e,
          s = R(e) ? "\x00" : "\x01";
        return `${s}-${new Date(n).getTime()}-${t}`;
      }
      let g = new a.default(e => {
          let { guild_id: t, entity_id: n, channel_id: s } = e,
            i = [t];
          return (
            null != n && i.push(n),
            i.push(_.GUILD_EVENT(t)),
            null != s && i.push(_.CHANNEL_EVENT(s)),
            R(e) &&
              (i.push(_.EVENT_ACTIVE),
              i.push(_.GUILD_EVENT_ACTIVE(t)),
              null != s && i.push(_.CHANNEL_EVENT_ACTIVE(s))),
            P(e) &&
              (i.push(_.EVENT_UPCOMING),
              i.push(_.GUILD_EVENT_UPCOMING(t)),
              null != s && i.push(_.CHANNEL_EVENT_UPCOMING(s))),
            i
          );
        }, c),
        m = 0,
        h = [],
        E = "SERIES",
        p = {},
        v = {};
      function y(e) {
        g.set(e.id, e), (m += 1);
      }
      function I(e) {
        let t =
          !(arguments.length > 1) || void 0 === arguments[1] || arguments[1];
        g.delete(e), delete p[e], t && delete v[e], (m += 1);
      }
      function T(e) {
        return e ?? E;
      }
      function S(e) {
        let t =
            !(arguments.length > 1) || void 0 === arguments[1] || arguments[1],
          n =
            !(arguments.length > 2) || void 0 === arguments[2] || arguments[2],
          s = e.guild_scheduled_event_id;
        null == p[s] && (p[s] = {});
        let i = e.guild_scheduled_event_exception_id ?? E;
        null == p[s][i] && (p[s][i] = {}),
          (p[s][i][e.user_id] = e),
          t &&
            (function (e) {
              let t = e.guild_scheduled_event_exception_id ?? E,
                n = v[e.guild_scheduled_event_id]?.[t] ?? 0,
                s =
                  (null != e.guild_scheduled_event_exception_id &&
                    e.response ===
                      f.GuildScheduledEventUserResponses.UNINTERESTED) ||
                  (null == e.guild_scheduled_event_exception_id &&
                    e.response ===
                      f.GuildScheduledEventUserResponses.INTERESTED)
                    ? 1
                    : -1;
              A(
                e.guild_scheduled_event_id,
                e.guild_scheduled_event_exception_id,
                n + s
              );
            })(e),
          n && (m += 1);
      }
      function C(e) {
        let t =
            !(arguments.length > 1) || void 0 === arguments[1] || arguments[1],
          n = e.guild_scheduled_event_exception_id ?? E,
          s = p[e.guild_scheduled_event_id]?.[n]?.[e.user_id] != null,
          i = e.user_id === u.default.getId();
        (s || !i) &&
          (delete p[e.guild_scheduled_event_id]?.[n]?.[e.user_id],
          (function (e) {
            let t = e.guild_scheduled_event_exception_id ?? E,
              n = v[e.guild_scheduled_event_id]?.[t] ?? 0,
              s =
                (null != e.guild_scheduled_event_exception_id &&
                  e.response ===
                    f.GuildScheduledEventUserResponses.UNINTERESTED) ||
                (null == e.guild_scheduled_event_exception_id &&
                  e.response === f.GuildScheduledEventUserResponses.INTERESTED)
                  ? -1
                  : 1;
            A(
              e.guild_scheduled_event_id,
              e.guild_scheduled_event_exception_id,
              n + s
            );
          })(e),
          t && (m += 1));
      }
      function A(e, t, n) {
        let s = t ?? E;
        null == v[e] && (v[e] = {}), (v[e][s] = n);
      }
      function N(e, t) {
        g.values(_.GUILD_EVENT(e)).forEach(e => I(e.id, t));
      }
      function D(e) {
        let { guildScheduledEvent: t } = e;
        return y(t), !0;
      }
      function O(e) {
        let { eventException: t } = e,
          n = g.get(t.event_id);
        if (null == n) return !1;
        let s = n.guild_scheduled_event_exceptions.findIndex(
            e => e.event_exception_id === t.event_exception_id
          ),
          i = [...n.guild_scheduled_event_exceptions];
        return (
          s < 0 ? i.push(t) : (i[s] = t),
          y({ ...n, guild_scheduled_event_exceptions: i }),
          !0
        );
      }
      function R(e) {
        return (
          null != e && (e?.status === f.GuildScheduledEventStatus.ACTIVE ?? !1)
        );
      }
      function P(e) {
        return !f.GuildScheduledEventStatusDone.has(e.status);
      }
      function b(e) {
        return null != e && f.GuildScheduledEventStatusDone.has(e.status);
      }
      class M extends r.default.Store {
        static #e = (this.displayName = "GuildScheduledEventStore");
        getGuildScheduledEvent(e) {
          return null == e ? null : g.get(e) ?? null;
        }
        getGuildEventCountByIndex(e) {
          return g.size(e);
        }
        getGuildScheduledEventsForGuild(e) {
          return null == e ? [] : g.values(e);
        }
        getGuildScheduledEventsByIndex(e) {
          return g.values(e);
        }
        getRsvpVersion() {
          return m;
        }
        getRsvp(e, t, n) {
          if (null == e) return null;
          let s = t ?? E;
          return p[e]?.[s]?.[n];
        }
        isInterestedInEventRecurrence(e, t) {
          let n = u.default.getId(),
            s = this.getRsvp(e, null, n),
            i = this.getRsvp(e, t, n),
            r = s?.response === f.GuildScheduledEventUserResponses.INTERESTED,
            a = i?.response === f.GuildScheduledEventUserResponses.INTERESTED,
            o = i?.response === f.GuildScheduledEventUserResponses.UNINTERESTED;
          return (r && !o) || a;
        }
        getUserCount(e, t) {
          if (null == e) return 0;
          let n = v[e]?.[E] ?? 0;
          return null == t ? n : n - (v[e]?.[t] ?? 0);
        }
        hasUserCount(e, t) {
          let n = t ?? E;
          return v[e]?.[n] != null;
        }
        isActive(e) {
          return null != e && R(g.get(e));
        }
        getActiveEventByChannel(e) {
          if (null != e)
            return this.getGuildScheduledEventsByIndex(
              _.CHANNEL_EVENT_ACTIVE(e)
            )[0];
        }
        getUsersForGuildEvent(e, t) {
          if (null == e) return {};
          let n = t ?? E;
          return p[e]?.[n] ?? {};
        }
      }
      var V = new M(o.default, {
        CONNECTION_OPEN: function (e) {
          let { guilds: t } = e;
          return (
            g.clear(),
            (m = 0),
            (p = {}),
            (v = {}),
            h.forEach(y),
            t.forEach(e => e.guild_scheduled_events.forEach(e => y(e))),
            !0
          );
        },
        GUILD_CREATE: function (e) {
          let { guild: t } = e;
          return N(t.id, !1), t.guild_scheduled_events.forEach(e => y(e)), !0;
        },
        GUILD_DELETE: function (e) {
          let { guild: t } = e;
          return N(t.id, !0), !0;
        },
        FETCH_GUILD_EVENT: function (e) {
          let { guildScheduledEvent: t } = e;
          y(t);
        },
        FETCH_GUILD_EVENTS_FOR_GUILD: function (e) {
          let { guildId: t, guildScheduledEvents: n } = e,
            s = g.values(_.GUILD_EVENT(t), !0).map(e => e.id),
            r = n.map(e => e.id);
          for (let e of (i()
            .difference(s, r)
            .forEach(e => {
              I(e);
            }),
          n))
            y(e);
          return !0;
        },
        GUILD_SCHEDULED_EVENT_CREATE: D,
        GUILD_SCHEDULED_EVENT_UPDATE: D,
        GUILD_SCHEDULED_EVENT_DELETE: function (e) {
          let { guildScheduledEvent: t } = e;
          return I(t.id), !0;
        },
        GUILD_SCHEDULED_EVENT_USER_ADD: function (e) {
          let {
              userId: t,
              guildEventId: n,
              guildId: s,
              guildEventExceptionId: i,
              response: r,
            } = e,
            a = i ?? E,
            o = p[n]?.[a]?.[t];
          null != o && C(o, !1);
          let u = d.default.getMember(s, t);
          return (
            S({
              user_id: t,
              guild_scheduled_event_id: n,
              member: u ?? { guildId: s },
              guild_scheduled_event_exception_id: i,
              response: r,
            }),
            !0
          );
        },
        GUILD_SCHEDULED_EVENT_USER_REMOVE: function (e) {
          let {
            userId: t,
            guildEventId: n,
            guildEventExceptionId: s,
            response: i,
          } = e;
          C({
            user_id: t,
            guild_scheduled_event_id: n,
            guild_scheduled_event_exception_id: s,
            response: i,
          });
        },
        GUILD_SCHEDULED_EVENT_RSVPS_FETCH_SUCESS: function (e) {
          let { guildScheduledEventUsers: t } = e;
          return t.forEach(e => S(e, !1, !1)), (m += 1), !0;
        },
        GUILD_SCHEDULED_EVENT_USERS_FETCH_SUCCESS: function (e) {
          let { guildScheduledEventUsers: t } = e;
          return t.forEach(e => S(e, !1, !1)), (m += 1), !0;
        },
        GUILD_SCHEDULED_EVENT_USER_COUNTS_FETCH_SUCCESS: function (e) {
          let { eventId: t, counts: n } = e;
          A(t, null, n.eventCount),
            l.default.forEachKey(n.recurrenceCounts, e => {
              A(t, e, n.eventCount - n.recurrenceCounts[e]);
            });
        },
        INVITE_RESOLVE_SUCCESS: function (e) {
          let { invite: t } = e,
            n = t.guild_scheduled_event;
          return null != n && (y(n), !0);
        },
        GUILD_SCHEDULED_EVENT_EXCEPTION_CREATE: O,
        GUILD_SCHEDULED_EVENT_EXCEPTION_UPDATE: O,
        GUILD_SCHEDULED_EVENT_EXCEPTION_DELETE: function (e) {
          let { eventException: t } = e,
            n = g.get(t.event_id);
          if (null == n) return !1;
          let s = n.guild_scheduled_event_exceptions.filter(
            e => e.event_exception_id !== t.event_exception_id
          );
          return y({ ...n, guild_scheduled_event_exceptions: s }), !0;
        },
        GUILD_SCHEDULED_EVENT_EXCEPTIONS_DELETE: function (e) {
          let { eventId: t } = e,
            n = g.get(t);
          return (
            null != n && (y({ ...n, guild_scheduled_event_exceptions: [] }), !0)
          );
        },
        LOGOUT: function () {
          return g.clear(), !0;
        },
      });
    },
    558357: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          commandName: function () {
            return i;
          },
          keyPermissions: function () {
            return a;
          },
          toPermissionKey: function () {
            return r;
          },
        });
      var s = n("243770");
      function i(e, t) {
        return e === s.ApplicationCommandType.CHAT ? "/" + t : t;
      }
      function r(e, t) {
        return `${e}:${t}`;
      }
      function a(e) {
        return Object.fromEntries(e.map(e => [r(e.id, e.type), e]));
      }
      n("150117");
    },
    839417: function (e, t, n) {
      "use strict";
      function s(e, t) {
        let n = t?.replace(/-/g, "_")?.toUpperCase();
        if (null != n && n in e) return e[n];
      }
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
    },
    124828: function (e, t, n) {
      "use strict";
      function s(e) {
        if (null == e) return !1;
        for (var t = 0; t < e.length; t++)
          if (e[t].voiceState.selfStream) return !0;
        return !1;
      }
      n.r(t),
        n.d(t, {
          hasStream: function () {
            return s;
          },
        });
    },
    869776: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var s = n("454836"),
        i = n("312916"),
        r = n("328470"),
        a = n("313433"),
        o = n("467006"),
        u = {
          resolveGuildTemplate: function e(t) {
            return i.default.isDispatching()
              ? Promise.resolve().then(() => e(t))
              : (i.default.dispatch({
                  type: "GUILD_TEMPLATE_RESOLVE",
                  code: t,
                }),
                s.default
                  .get({
                    url: o.Endpoints.UNRESOLVED_GUILD_TEMPLATE(t),
                    oldFormErrors: !0,
                  })
                  .then(
                    e => {
                      let n = e.body;
                      return (
                        r.default.track(
                          o.AnalyticEvents.GUILD_TEMPLATE_RESOLVED,
                          {
                            resolved: !0,
                            guild_template_code: t,
                            guild_template_name: n.name,
                            guild_template_description: n.description,
                            guild_template_guild_id: n.source_guild_id,
                          }
                        ),
                        i.default.dispatch({
                          type: "GUILD_TEMPLATE_RESOLVE_SUCCESS",
                          guildTemplate: n,
                          code: t,
                        }),
                        { guildTemplate: (0, a.default)(n), code: t }
                      );
                    },
                    () => (
                      r.default.track(
                        o.AnalyticEvents.GUILD_TEMPLATE_RESOLVED,
                        { resolved: !1, guild_template_code: t }
                      ),
                      i.default.dispatch({
                        type: "GUILD_TEMPLATE_RESOLVE_FAILURE",
                        code: t,
                      }),
                      { guildTemplate: null, code: t }
                    )
                  ));
          },
          loadTemplatesForGuild: e =>
            s.default
              .get({ url: o.Endpoints.GUILD_TEMPLATES(e), oldFormErrors: !0 })
              .then(
                e => (
                  i.default.dispatch({
                    type: "GUILD_TEMPLATE_LOAD_FOR_GUILD_SUCCESS",
                    guildTemplates: e.body,
                  }),
                  e
                )
              ),
          createGuildTemplate: (e, t, n) =>
            s.default
              .post({
                url: o.Endpoints.GUILD_TEMPLATES(e),
                body: { name: t, description: n },
                oldFormErrors: !0,
              })
              .then(e => {
                i.default.dispatch({
                  type: "GUILD_TEMPLATE_CREATE_SUCCESS",
                  guildTemplate: e.body,
                  code: e.body.code,
                });
              }),
          syncGuildTemplate: (e, t) =>
            s.default
              .put({ url: o.Endpoints.GUILD_TEMPLATE(e, t), oldFormErrors: !0 })
              .then(e => {
                i.default.dispatch({
                  type: "GUILD_TEMPLATE_SYNC_SUCCESS",
                  guildTemplate: e.body,
                  code: t,
                });
              }),
          updateGuildTemplate: (e, t, n, r) =>
            s.default
              .patch({
                url: o.Endpoints.GUILD_TEMPLATE(e, t),
                body: { name: n, description: r },
                oldFormErrors: !0,
              })
              .then(e => {
                i.default.dispatch({
                  type: "GUILD_TEMPLATE_SYNC_SUCCESS",
                  guildTemplate: e.body,
                  code: t,
                });
              }),
          deleteGuildTemplate: (e, t) =>
            s.default
              .delete({
                url: o.Endpoints.GUILD_TEMPLATE(e, t),
                oldFormErrors: !0,
              })
              .then(() => {
                i.default.dispatch({
                  type: "GUILD_TEMPLATE_DELETE_SUCCESS",
                  guildId: e,
                  code: t,
                });
              }),
        };
    },
    437148: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var s = n("312916"),
        i = n("197905"),
        r = n("869776"),
        a = n("467006"),
        o = {
          async checkGuildTemplateDirty(e) {
            if (
              !i.default.canWithPartialContext(a.Permissions.MANAGE_GUILD, {
                guildId: e,
              })
            )
              return;
            let t = await r.default.loadTemplatesForGuild(e);
            t.body.length > 0 &&
              s.default.dispatch({
                type: "GUILD_TEMPLATE_DIRTY_TOOLTIP_REFRESH",
                guildTemplate: t.body[0],
              });
          },
          hideGuildTemplateDirtyTooltip(e) {
            s.default.dispatch({
              type: "GUILD_TEMPLATE_DIRTY_TOOLTIP_HIDE",
              guildId: e,
            });
          },
          hideGuildTemplatePromotionTooltip() {
            s.default.dispatch({
              type: "GUILD_TEMPLATE_PROMOTION_TOOLTIP_HIDE",
            });
          },
        };
    },
    846475: function (e, t, n) {
      "use strict";
      var s, i, r, a;
      n.r(t),
        n.d(t, {
          GuildTemplateStates: function () {
            return s;
          },
          InternalTemplateCodes: function () {
            return i;
          },
        }),
        ((r = s || (s = {})).RESOLVING = "RESOLVING"),
        (r.RESOLVED = "RESOLVED"),
        (r.EXPIRED = "EXPIRED"),
        (r.ACCEPTED = "ACCEPTED"),
        (r.ACCEPTING = "ACCEPTING"),
        ((a = i || (i = {})).CLASSROOM = "fVfBazbqjhXg"),
        (a.LOCAL_COMMUNITIES = "64UDvRNCC52Y"),
        (a.CREATORS_HOBBIES = "6exdzMgjZgah"),
        (a.GLOBAL_COMMUNITIES = "4sgbPdCjzAYU"),
        (a.FRIENDS_FAMILY = "hgM48av5Q69A"),
        (a.STUDY_GROUPS = "FbwUwRp4j8Es"),
        (a.CREATE_FROM_SCRATCH = "WYAQmEzjw3Pj"),
        (a.CAMPUS_CLUBS = "Ctg7PUHcQmZu"),
        (a.LEAGUE_CLUBS = "PJ6VvgEJYg45"),
        (a.GITHUB_HACKATHON = "UqzZCTj2zfwy");
    },
    313433: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var s = n("846475");
      function i(e) {
        return {
          code: e.code,
          state: s.GuildTemplateStates.RESOLVED,
          name: e.name,
          description: e.description ?? "",
          creatorId: e.creator_id,
          creator: e.creator,
          createdAt: e.created_at,
          updatedAt: e.updated_at,
          sourceGuildId: e.source_guild_id,
          serializedSourceGuild: e.serialized_source_guild,
          usageCount: e.usage_count,
          isDirty: e.is_dirty,
        };
      }
    },
    786006: function (e, t, n) {
      "use strict";
      let s, i, r;
      n.r(t),
        n.d(t, {
          default: function () {
            return g;
          },
        });
      var a = n("392711"),
        o = n.n(a),
        u = n("661223"),
        d = n("312916"),
        l = n("467006");
      let f = _();
      function _() {
        return { recentCustomStatuses: [], currentDefaultStatus: null };
      }
      class c extends u.default.PersistedStore {
        static #e = (this.displayName = "HangStatusStore");
        static #t = (this.persistKey = "HangStatusStore");
        initialize(e) {
          f = { ..._(), ...(e ?? {}) };
        }
        getState() {
          return f;
        }
        getCurrentHangStatus() {
          return s;
        }
        getCustomHangStatus() {
          return i;
        }
        getRecentCustomStatuses() {
          return f.recentCustomStatuses;
        }
        getCurrentDefaultStatus() {
          return f.currentDefaultStatus;
        }
        getHangStatusActivity() {
          return null == s ? null : r;
        }
      }
      var g = new c(d.default, {
        LOGOUT: function () {
          f = _();
        },
        UPDATE_HANG_STATUS: function (e) {
          let { status: t, saveAsDefault: n } = e;
          (s = t),
            (i = null),
            n &&
              (f.currentDefaultStatus = {
                status: t,
                customHangStatus: i,
                expiresAt: Date.now() + 288e5,
              }),
            (r = {
              type: l.ActivityTypes.HANG_STATUS,
              name: "Hang Status",
              state: s,
            });
        },
        UPDATE_HANG_STATUS_CUSTOM: function (e) {
          let { status: t, emoji: n, saveAsDefault: a } = e;
          (s = l.HangStatusTypes.CUSTOM), (i = { status: t, emoji: n });
          let u = [...f.recentCustomStatuses],
            d = u.findIndex(e => e.status === t && o().isEqual(e.emoji, n));
          -1 !== d ? u.splice(d, 1) : 7 === u.length && u.splice(6, 1),
            (f.recentCustomStatuses = [i, ...u]),
            a &&
              (f.currentDefaultStatus = {
                status: s,
                customHangStatus: i,
                expiresAt: Date.now() + 288e5,
              }),
            (r = {
              type: l.ActivityTypes.HANG_STATUS,
              name: "Hang Status",
              state: s,
              details: t,
              emoji: n,
            });
        },
        CLEAR_HANG_STATUS: function (e) {
          let { saveAsDefault: t } = e;
          (s = null),
            (i = null),
            t &&
              (f.currentDefaultStatus = {
                status: null,
                customHangStatus: null,
                expiresAt: Date.now() + 288e5,
              }),
            (r = null);
        },
      });
    },
    925029: function (e, t, n) {
      "use strict";
      n.r(t), n("312916");
    },
    997419: function (e, t, n) {
      "use strict";
      var s, i;
      n.r(t),
        n.d(t, {
          HotspotLocations: function () {
            return s;
          },
        }),
        ((i = s || (s = {})).REPORT_PROBLEM_POST_STREAM =
          "REPORT_PROBLEM_POST_STREAM"),
        (i.VIDEO_BACKGROUND_FEEDBACK = "VIDEO_BACKGROUND_FEEDBACK"),
        (i.VOICE_CALL_FEEDBACK = "VOICE_CALL_FEEDBACK"),
        (i.GUILD_ANALYTICS_GUILD_SETTINGS_MENU =
          "GUILD_ANALYTICS_GUILD_SETTINGS_MENU"),
        (i.NOW_PLAYING_CONSENT_CARD = "NOW_PLAYING_CONSENT_CARD"),
        (i.IOS_GUILD_NAV_EDUCATION = "IOS_GUILD_NAV_EDUCATION"),
        (i.VOICE_PANEL_INTRODUCTION = "VOICE_PANEL_INTRODUCTION"),
        (i.GUILD_SETTINGS_COMMUNITY_GUILD_UPSELL =
          "GUILD_SETTINGS_COMMUNITY_GUILD_UPSELL"),
        (i.FAVORITE_EMOJI_TOOLTIP = "FAVORITE_EMOJI_TOOLTIP"),
        (i.POST_ACTIVITY_FEEDBACK = "POST_ACTIVITY_FEEDBACK"),
        (i.GUILD_DELETE_FEEDBACK = "GUILD_DELETE_FEEDBACK"),
        (i.GUILD_LEAVE_FEEDBACK = "GUILD_LEAVE_FEEDBACK"),
        (i.APPLICATION_COMMAND_TOOLTIP = "APPLICATION_COMMAND_TOOLTIP"),
        (i.GUILD_CAP_INLINE_UPSELL = "GUILD_CAP_INLINE_UPSELL"),
        (i.STAGE_CHANNEL_UPSELL = "STAGE_CHANNEL_UPSELL"),
        (i.HUB_WAITLIST_UPSELL = "HUB_WAITLIST_UPSELL"),
        (i.HUB_NEW = "HUB_NEW"),
        (i.HUB_SECOND_EMAIL_CONNECTION_UPSELL =
          "HUB_SECOND_EMAIL_CONNECTION_UPSELL"),
        (i.LIVE_STAGE_NOTIFICATION_BADGE = "LIVE_STAGE_NOTIFICATION_BADGE"),
        (i.GUILD_EVENT_UPSELL = "GUILD_EVENT_UPSELL"),
        (i.HUB_LINK_CHANNEL_NOTICE = "HUB_LINK_CHANNEL_NOTICE"),
        (i.PREMIUM_PROGRESS_BAR_GUILD_HEADER_TOOLTIP =
          "PREMIUM_PROGRESS_BAR_GUILD_HEADER_TOOLTIP"),
        (i.ANIMATED_GUILD_BANNER_GUILD_HEADER_TOOLTIP =
          "ANIMATED_GUILD_BANNER_GUILD_HEADER_TOOLTIP"),
        (i.ANIMATED_GUILD_BANNER_SETTINGS_NEW_PILL =
          "ANIMATED_GUILD_BANNER_SETTINGS_NEW_PILL"),
        (i.MULTI_ACCOUNT_TOOLTIP = "MULTI_ACCOUNT_TOOLTIP"),
        (i.HUB_STUDY_ROOM_NOTICE = "HUB_STUDY_ROOM_NOTICE"),
        (i.CHANNEL_BANNER_MEMBER_LIST_NOTICE =
          "CHANNEL_BANNER_MEMBER_LIST_NOTICE"),
        (i.CHANGE_LANGUAGE_MODAL = "CHANGE_LANGUAGE_MODAL"),
        (i.ACTIVITY_BEB_TUTORIAL = "ACTIVITY_BEB_TUTORIAL"),
        (i.APP_DIRECTORY_SETTINGS_NEW_PILL = "APP_DIRECTORY_SETTINGS_NEW_PILL"),
        (i.INVITE_SPLASH_GUILD_HEADER_TOOLTIP =
          "INVITE_SPLASH_GUILD_HEADER_TOOLTIP"),
        (i.ANIMATED_VIDEO_BG_CAPERNITE_DAY_NEW =
          "ANIMATED_VIDEO_BG_CAPERNITE_DAY_NEW"),
        (i.ANIMATED_VIDEO_BG_CAPERNITE_NIGHT_NEW =
          "ANIMATED_VIDEO_BG_CAPERNITE_NIGHT_NEW"),
        (i.ANIMATED_VIDEO_BG_HACKER_DEN_NEW =
          "ANIMATED_VIDEO_BG_HACKER_DEN_NEW"),
        (i.ANIMATED_VIDEO_BG_WUMPICE_NEW = "ANIMATED_VIDEO_BG_WUMPICE_NEW"),
        (i.ANIMATED_VIDEO_BG_CUSTOM_TOOLTIP_NEW =
          "ANIMATED_VIDEO_BG_CUSTOM_TOOLTIP_NEW"),
        (i.ANIMATED_VIDEO_BG_BIRTHDAY_1_NEW =
          "ANIMATED_VIDEO_BG_BIRTHDAY_1_NEW"),
        (i.SOUNDBOARD_WHEEL_EDUCATION_MODAL =
          "SOUNDBOARD_WHEEL_EDUCATION_MODAL"),
        (i.IN_APP_REPORTS_FEEDBACK = "IN_APP_REPORTS_FEEDBACK"),
        (i.CLIPS_CHANNEL_ATTACH_REMINDER = "CLIPS_CHANNEL_ATTACH_REMINDER");
    },
    501541: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("521588"),
        i = n("467006"),
        r = {
          onOpenHubInvite(e) {
            let { guild: t } = e;
            null != t &&
              (0, s.transitionTo)(
                i.Routes.GUILD_MEMBER_VERIFICATION_FOR_HUB(t.id, e.code)
              );
          },
        };
    },
    982313: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getCountryCodeByAlpha2: function () {
            return o;
          },
          getDefaultCountryCode: function () {
            return u;
          },
          getI18NCountryName: function () {
            return l;
          },
        });
      var s = n("512722"),
        i = n.n(s),
        r = n("479800"),
        a = n("30175");
      function o(e) {
        let t = r.default.find(t => t.alpha2 === e);
        if (null != t)
          return { name: t.name, code: t.phoneCountryCode, alpha2: t.alpha2 };
      }
      function u() {
        let e = (function (e) {
          let t = r.default.find(t => t.name === e);
          if (null != t)
            return { name: t.name, code: t.phoneCountryCode, alpha2: t.alpha2 };
        })("United States");
        return i()(e, "Default country code cannot be missing."), e;
      }
      let d = {
        AF: () => a.default.Messages.COUNTRY_NAME_AF,
        AX: () => a.default.Messages.COUNTRY_NAME_AX,
        AL: () => a.default.Messages.COUNTRY_NAME_AL,
        DZ: () => a.default.Messages.COUNTRY_NAME_DZ,
        AS: () => a.default.Messages.COUNTRY_NAME_AS,
        AD: () => a.default.Messages.COUNTRY_NAME_AD,
        AO: () => a.default.Messages.COUNTRY_NAME_AO,
        AI: () => a.default.Messages.COUNTRY_NAME_AI,
        AQ: () => a.default.Messages.COUNTRY_NAME_AQ,
        AG: () => a.default.Messages.COUNTRY_NAME_AG,
        AR: () => a.default.Messages.COUNTRY_NAME_AR,
        AM: () => a.default.Messages.COUNTRY_NAME_AM,
        AW: () => a.default.Messages.COUNTRY_NAME_AW,
        AC: () => a.default.Messages.COUNTRY_NAME_AC,
        AU: () => a.default.Messages.COUNTRY_NAME_AU,
        AT: () => a.default.Messages.COUNTRY_NAME_AT,
        AZ: () => a.default.Messages.COUNTRY_NAME_AZ,
        BS: () => a.default.Messages.COUNTRY_NAME_BS,
        BH: () => a.default.Messages.COUNTRY_NAME_BH,
        BD: () => a.default.Messages.COUNTRY_NAME_BD,
        BB: () => a.default.Messages.COUNTRY_NAME_BB,
        BY: () => a.default.Messages.COUNTRY_NAME_BY,
        BE: () => a.default.Messages.COUNTRY_NAME_BE,
        BZ: () => a.default.Messages.COUNTRY_NAME_BZ,
        BJ: () => a.default.Messages.COUNTRY_NAME_BJ,
        BM: () => a.default.Messages.COUNTRY_NAME_BM,
        BT: () => a.default.Messages.COUNTRY_NAME_BT,
        BO: () => a.default.Messages.COUNTRY_NAME_BO,
        BQ: () => a.default.Messages.COUNTRY_NAME_BQ,
        BA: () => a.default.Messages.COUNTRY_NAME_BA,
        BW: () => a.default.Messages.COUNTRY_NAME_BW,
        BV: () => a.default.Messages.COUNTRY_NAME_BV,
        BR: () => a.default.Messages.COUNTRY_NAME_BR,
        IO: () => a.default.Messages.COUNTRY_NAME_IO,
        BN: () => a.default.Messages.COUNTRY_NAME_BN,
        BG: () => a.default.Messages.COUNTRY_NAME_BG,
        BF: () => a.default.Messages.COUNTRY_NAME_BF,
        BI: () => a.default.Messages.COUNTRY_NAME_BI,
        KH: () => a.default.Messages.COUNTRY_NAME_KH,
        CM: () => a.default.Messages.COUNTRY_NAME_CM,
        CA: () => a.default.Messages.COUNTRY_NAME_CA,
        CV: () => a.default.Messages.COUNTRY_NAME_CV,
        KY: () => a.default.Messages.COUNTRY_NAME_KY,
        CF: () => a.default.Messages.COUNTRY_NAME_CF,
        TD: () => a.default.Messages.COUNTRY_NAME_TD,
        CL: () => a.default.Messages.COUNTRY_NAME_CL,
        CN: () => a.default.Messages.COUNTRY_NAME_CN,
        CX: () => a.default.Messages.COUNTRY_NAME_CX,
        CC: () => a.default.Messages.COUNTRY_NAME_CC,
        CO: () => a.default.Messages.COUNTRY_NAME_CO,
        KM: () => a.default.Messages.COUNTRY_NAME_KM,
        CG: () => a.default.Messages.COUNTRY_NAME_CG,
        CD: () => a.default.Messages.COUNTRY_NAME_CD,
        CK: () => a.default.Messages.COUNTRY_NAME_CK,
        CR: () => a.default.Messages.COUNTRY_NAME_CR,
        CI: () => a.default.Messages.COUNTRY_NAME_CI,
        HR: () => a.default.Messages.COUNTRY_NAME_HR,
        CU: () => a.default.Messages.COUNTRY_NAME_CU,
        CW: () => a.default.Messages.COUNTRY_NAME_CW,
        CY: () => a.default.Messages.COUNTRY_NAME_CY,
        CZ: () => a.default.Messages.COUNTRY_NAME_CZ,
        DK: () => a.default.Messages.COUNTRY_NAME_DK,
        DG: () => a.default.Messages.COUNTRY_NAME_DG,
        DJ: () => a.default.Messages.COUNTRY_NAME_DJ,
        DM: () => a.default.Messages.COUNTRY_NAME_DM,
        DO: () => a.default.Messages.COUNTRY_NAME_DO,
        TP: () => a.default.Messages.COUNTRY_NAME_TP,
        EC: () => a.default.Messages.COUNTRY_NAME_EC,
        EG: () => a.default.Messages.COUNTRY_NAME_EG,
        SV: () => a.default.Messages.COUNTRY_NAME_SV,
        GQ: () => a.default.Messages.COUNTRY_NAME_GQ,
        ER: () => a.default.Messages.COUNTRY_NAME_ER,
        EE: () => a.default.Messages.COUNTRY_NAME_EE,
        ET: () => a.default.Messages.COUNTRY_NAME_ET,
        FK: () => a.default.Messages.COUNTRY_NAME_FK,
        FO: () => a.default.Messages.COUNTRY_NAME_FO,
        FJ: () => a.default.Messages.COUNTRY_NAME_FJ,
        FI: () => a.default.Messages.COUNTRY_NAME_FI,
        FR: () => a.default.Messages.COUNTRY_NAME_FR,
        GF: () => a.default.Messages.COUNTRY_NAME_GF,
        PF: () => a.default.Messages.COUNTRY_NAME_PF,
        TF: () => a.default.Messages.COUNTRY_NAME_TF,
        GA: () => a.default.Messages.COUNTRY_NAME_GA,
        GM: () => a.default.Messages.COUNTRY_NAME_GM,
        GE: () => a.default.Messages.COUNTRY_NAME_GE,
        DE: () => a.default.Messages.COUNTRY_NAME_DE,
        GH: () => a.default.Messages.COUNTRY_NAME_GH,
        GI: () => a.default.Messages.COUNTRY_NAME_GI,
        GR: () => a.default.Messages.COUNTRY_NAME_GR,
        GL: () => a.default.Messages.COUNTRY_NAME_GL,
        GD: () => a.default.Messages.COUNTRY_NAME_GD,
        GP: () => a.default.Messages.COUNTRY_NAME_GP,
        GU: () => a.default.Messages.COUNTRY_NAME_GU,
        GT: () => a.default.Messages.COUNTRY_NAME_GT,
        GG: () => a.default.Messages.COUNTRY_NAME_GG,
        GN: () => a.default.Messages.COUNTRY_NAME_GN,
        GW: () => a.default.Messages.COUNTRY_NAME_GW,
        GY: () => a.default.Messages.COUNTRY_NAME_GY,
        HT: () => a.default.Messages.COUNTRY_NAME_HT,
        HM: () => a.default.Messages.COUNTRY_NAME_HM,
        VA: () => a.default.Messages.COUNTRY_NAME_VA,
        HN: () => a.default.Messages.COUNTRY_NAME_HN,
        HK: () => a.default.Messages.COUNTRY_NAME_HK,
        HU: () => a.default.Messages.COUNTRY_NAME_HU,
        IS: () => a.default.Messages.COUNTRY_NAME_IS,
        IN: () => a.default.Messages.COUNTRY_NAME_IN,
        ID: () => a.default.Messages.COUNTRY_NAME_ID,
        IR: () => a.default.Messages.COUNTRY_NAME_IR,
        IQ: () => a.default.Messages.COUNTRY_NAME_IQ,
        IE: () => a.default.Messages.COUNTRY_NAME_IE,
        IM: () => a.default.Messages.COUNTRY_NAME_IM,
        IL: () => a.default.Messages.COUNTRY_NAME_IL,
        IT: () => a.default.Messages.COUNTRY_NAME_IT,
        JM: () => a.default.Messages.COUNTRY_NAME_JM,
        JP: () => a.default.Messages.COUNTRY_NAME_JP,
        JE: () => a.default.Messages.COUNTRY_NAME_JE,
        JO: () => a.default.Messages.COUNTRY_NAME_JO,
        KZ: () => a.default.Messages.COUNTRY_NAME_KZ,
        KE: () => a.default.Messages.COUNTRY_NAME_KE,
        KI: () => a.default.Messages.COUNTRY_NAME_KI,
        XK: () => a.default.Messages.COUNTRY_NAME_XK,
        KP: () => a.default.Messages.COUNTRY_NAME_KP,
        KR: () => a.default.Messages.COUNTRY_NAME_KR,
        KW: () => a.default.Messages.COUNTRY_NAME_KW,
        KG: () => a.default.Messages.COUNTRY_NAME_KG,
        LA: () => a.default.Messages.COUNTRY_NAME_LA,
        LV: () => a.default.Messages.COUNTRY_NAME_LV,
        LB: () => a.default.Messages.COUNTRY_NAME_LB,
        LS: () => a.default.Messages.COUNTRY_NAME_LS,
        LR: () => a.default.Messages.COUNTRY_NAME_LR,
        LY: () => a.default.Messages.COUNTRY_NAME_LY,
        LI: () => a.default.Messages.COUNTRY_NAME_LI,
        LT: () => a.default.Messages.COUNTRY_NAME_LT,
        LU: () => a.default.Messages.COUNTRY_NAME_LU,
        MO: () => a.default.Messages.COUNTRY_NAME_MO,
        MK: () => a.default.Messages.COUNTRY_NAME_MK,
        MG: () => a.default.Messages.COUNTRY_NAME_MG,
        MW: () => a.default.Messages.COUNTRY_NAME_MW,
        MY: () => a.default.Messages.COUNTRY_NAME_MY,
        MV: () => a.default.Messages.COUNTRY_NAME_MV,
        ML: () => a.default.Messages.COUNTRY_NAME_ML,
        MT: () => a.default.Messages.COUNTRY_NAME_MT,
        MH: () => a.default.Messages.COUNTRY_NAME_MH,
        MQ: () => a.default.Messages.COUNTRY_NAME_MQ,
        MR: () => a.default.Messages.COUNTRY_NAME_MR,
        MU: () => a.default.Messages.COUNTRY_NAME_MU,
        YT: () => a.default.Messages.COUNTRY_NAME_YT,
        MX: () => a.default.Messages.COUNTRY_NAME_MX,
        FM: () => a.default.Messages.COUNTRY_NAME_FM,
        MI: () => a.default.Messages.COUNTRY_NAME_MI,
        MD: () => a.default.Messages.COUNTRY_NAME_MD,
        MC: () => a.default.Messages.COUNTRY_NAME_MC,
        MN: () => a.default.Messages.COUNTRY_NAME_MN,
        ME: () => a.default.Messages.COUNTRY_NAME_ME,
        MS: () => a.default.Messages.COUNTRY_NAME_MS,
        MA: () => a.default.Messages.COUNTRY_NAME_MA,
        MZ: () => a.default.Messages.COUNTRY_NAME_MZ,
        MM: () => a.default.Messages.COUNTRY_NAME_MM,
        NA: () => a.default.Messages.COUNTRY_NAME_NA,
        NR: () => a.default.Messages.COUNTRY_NAME_NR,
        NP: () => a.default.Messages.COUNTRY_NAME_NP,
        NL: () => a.default.Messages.COUNTRY_NAME_NL,
        AN: () => a.default.Messages.COUNTRY_NAME_AN,
        NC: () => a.default.Messages.COUNTRY_NAME_NC,
        NZ: () => a.default.Messages.COUNTRY_NAME_NZ,
        NI: () => a.default.Messages.COUNTRY_NAME_NI,
        NE: () => a.default.Messages.COUNTRY_NAME_NE,
        NG: () => a.default.Messages.COUNTRY_NAME_NG,
        NU: () => a.default.Messages.COUNTRY_NAME_NU,
        NF: () => a.default.Messages.COUNTRY_NAME_NF,
        MP: () => a.default.Messages.COUNTRY_NAME_MP,
        NO: () => a.default.Messages.COUNTRY_NAME_NO,
        OM: () => a.default.Messages.COUNTRY_NAME_OM,
        PK: () => a.default.Messages.COUNTRY_NAME_PK,
        PW: () => a.default.Messages.COUNTRY_NAME_PW,
        PS: () => a.default.Messages.COUNTRY_NAME_PS,
        PA: () => a.default.Messages.COUNTRY_NAME_PA,
        PG: () => a.default.Messages.COUNTRY_NAME_PG,
        PY: () => a.default.Messages.COUNTRY_NAME_PY,
        PE: () => a.default.Messages.COUNTRY_NAME_PE,
        PH: () => a.default.Messages.COUNTRY_NAME_PH,
        PN: () => a.default.Messages.COUNTRY_NAME_PN,
        PL: () => a.default.Messages.COUNTRY_NAME_PL,
        PT: () => a.default.Messages.COUNTRY_NAME_PT,
        PR: () => a.default.Messages.COUNTRY_NAME_PR,
        QA: () => a.default.Messages.COUNTRY_NAME_QA,
        RE: () => a.default.Messages.COUNTRY_NAME_RE,
        RO: () => a.default.Messages.COUNTRY_NAME_RO,
        RU: () => a.default.Messages.COUNTRY_NAME_RU,
        RW: () => a.default.Messages.COUNTRY_NAME_RW,
        BL: () => a.default.Messages.COUNTRY_NAME_BL,
        SH: () => a.default.Messages.COUNTRY_NAME_SH,
        KN: () => a.default.Messages.COUNTRY_NAME_KN,
        LC: () => a.default.Messages.COUNTRY_NAME_LC,
        MF: () => a.default.Messages.COUNTRY_NAME_MF,
        PM: () => a.default.Messages.COUNTRY_NAME_PM,
        VC: () => a.default.Messages.COUNTRY_NAME_VC,
        WS: () => a.default.Messages.COUNTRY_NAME_WS,
        SM: () => a.default.Messages.COUNTRY_NAME_SM,
        ST: () => a.default.Messages.COUNTRY_NAME_ST,
        SA: () => a.default.Messages.COUNTRY_NAME_SA,
        SN: () => a.default.Messages.COUNTRY_NAME_SN,
        RS: () => a.default.Messages.COUNTRY_NAME_RS,
        SC: () => a.default.Messages.COUNTRY_NAME_SC,
        SL: () => a.default.Messages.COUNTRY_NAME_SL,
        SG: () => a.default.Messages.COUNTRY_NAME_SG,
        SX: () => a.default.Messages.COUNTRY_NAME_SX,
        SK: () => a.default.Messages.COUNTRY_NAME_SK,
        SI: () => a.default.Messages.COUNTRY_NAME_SI,
        SB: () => a.default.Messages.COUNTRY_NAME_SB,
        SO: () => a.default.Messages.COUNTRY_NAME_SO,
        ZA: () => a.default.Messages.COUNTRY_NAME_ZA,
        GS: () => a.default.Messages.COUNTRY_NAME_GS,
        SS: () => a.default.Messages.COUNTRY_NAME_SS,
        ES: () => a.default.Messages.COUNTRY_NAME_ES,
        LK: () => a.default.Messages.COUNTRY_NAME_LK,
        SD: () => a.default.Messages.COUNTRY_NAME_SD,
        SR: () => a.default.Messages.COUNTRY_NAME_SR,
        SJ: () => a.default.Messages.COUNTRY_NAME_SJ,
        SZ: () => a.default.Messages.COUNTRY_NAME_SZ,
        SE: () => a.default.Messages.COUNTRY_NAME_SE,
        CH: () => a.default.Messages.COUNTRY_NAME_CH,
        SY: () => a.default.Messages.COUNTRY_NAME_SY,
        TW: () => a.default.Messages.COUNTRY_NAME_TW,
        TJ: () => a.default.Messages.COUNTRY_NAME_TJ,
        TZ: () => a.default.Messages.COUNTRY_NAME_TZ,
        TH: () => a.default.Messages.COUNTRY_NAME_TH,
        TL: () => a.default.Messages.COUNTRY_NAME_TL,
        TG: () => a.default.Messages.COUNTRY_NAME_TG,
        TK: () => a.default.Messages.COUNTRY_NAME_TK,
        TO: () => a.default.Messages.COUNTRY_NAME_TO,
        TT: () => a.default.Messages.COUNTRY_NAME_TT,
        TN: () => a.default.Messages.COUNTRY_NAME_TN,
        TR: () => a.default.Messages.COUNTRY_NAME_TR,
        TM: () => a.default.Messages.COUNTRY_NAME_TM,
        TC: () => a.default.Messages.COUNTRY_NAME_TC,
        TV: () => a.default.Messages.COUNTRY_NAME_TV,
        UG: () => a.default.Messages.COUNTRY_NAME_UG,
        UA: () => a.default.Messages.COUNTRY_NAME_UA,
        AE: () => a.default.Messages.COUNTRY_NAME_AE,
        GB: () => a.default.Messages.COUNTRY_NAME_GB,
        US: () => a.default.Messages.COUNTRY_NAME_US,
        UM: () => a.default.Messages.COUNTRY_NAME_UM,
        UY: () => a.default.Messages.COUNTRY_NAME_UY,
        UZ: () => a.default.Messages.COUNTRY_NAME_UZ,
        VU: () => a.default.Messages.COUNTRY_NAME_VU,
        VE: () => a.default.Messages.COUNTRY_NAME_VE,
        VN: () => a.default.Messages.COUNTRY_NAME_VN,
        VG: () => a.default.Messages.COUNTRY_NAME_VG,
        VI: () => a.default.Messages.COUNTRY_NAME_VI,
        WF: () => a.default.Messages.COUNTRY_NAME_WF,
        EH: () => a.default.Messages.COUNTRY_NAME_EH,
        YE: () => a.default.Messages.COUNTRY_NAME_YE,
        ZM: () => a.default.Messages.COUNTRY_NAME_ZM,
        ZW: () => a.default.Messages.COUNTRY_NAME_ZW,
      };
      function l(e) {
        return d[e]();
      }
    },
    243393: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          startImpersonating: function () {
            return p;
          },
          stopImpersonating: function () {
            return y;
          },
          updateImpersonatedChannels: function () {
            return T;
          },
          updateImpersonatedData: function () {
            return C;
          },
          updateImpersonatedRoles: function () {
            return S;
          },
          updateImpersonating: function () {
            return v;
          },
        });
      var s = n("312916"),
        i = n("244180"),
        r = n("521588"),
        a = n("731865"),
        o = n("610043"),
        u = n("361733"),
        d = n("327271"),
        l = n("197905"),
        f = n("232733"),
        _ = n("301309"),
        c = n("328470"),
        g = n("911533"),
        m = n("725992"),
        h = n("467006"),
        E = n("551835");
      function p(e, t) {
        c.default.track(h.AnalyticEvents.VIEW_AS_ROLES_SELECTED, {
          num_roles: Object.keys(t.roles).length,
          ...(0, i.collectGuildAnalyticsMetadata)(e),
          is_viewing_as_member: t.type === m.ImpersonateType.NEW_MEMBER,
        }),
          s.default.dispatch({
            type: "IMPERSONATE_UPDATE",
            guildId: e,
            data: t,
          }),
          I(e);
      }
      function v(e, t) {
        let n = g.default.getData(e);
        null != n &&
          n.type === t.type &&
          (c.default.track(h.AnalyticEvents.VIEW_AS_ROLES_SELECTED, {
            num_roles: Object.keys(n.roles).length,
            ...(0, i.collectGuildAnalyticsMetadata)(e),
            is_viewing_as_member: n.type === m.ImpersonateType.NEW_MEMBER,
          }),
          s.default.dispatch({
            type: "IMPERSONATE_UPDATE",
            guildId: e,
            data: { ...n, ...t },
          }),
          I(e));
      }
      function y(e) {
        s.default.dispatch({ type: "IMPERSONATE_STOP", guildId: e });
      }
      function I(e) {
        let t = f.default.getChannelId(e),
          n = a.default.getChannel(t);
        if (
          !(null != t && (0, E.isStaticChannelRoute)(t)) &&
          !l.default.can(h.Permissions.VIEW_CHANNEL, n)
        ) {
          let t = o.default.getDefaultChannel(e);
          null != t && (0, r.transitionTo)(h.Routes.CHANNEL(e, t.id));
        }
      }
      function T(e, t, n) {
        let s = new Set(_.default.getOptedInChannels(e));
        t.forEach(e => s.add(e)),
          n.forEach(e => s.delete(e)),
          v(e, { type: m.ImpersonateType.NEW_MEMBER, optInChannels: s });
      }
      function S(e, t) {
        let n = d.default.getGuild(e);
        if (null == n) return;
        !(function (e, t) {
          let n = [
              ...o.default.getSelectableChannelIds(e),
              ...o.default.getVocalChannelIds(e),
            ],
            s = Array.from(t);
          o.default.addConditionalChangeListener(() => {
            let t = u.default.getSelfMember(e);
            if (null == t) return !1;
            if (s.some(e => !t.roles.includes(e))) return !0;
            let i = [
              ...o.default.getSelectableChannelIds(e),
              ...o.default.getVocalChannelIds(e),
            ].filter(e => !n.includes(e));
            return i.length > 0 && T(e, i, []), !1;
          });
        })(e, t);
        let s = {};
        t.forEach(e => (s[e] = n.roles[e])),
          v(e, { type: m.ImpersonateType.NEW_MEMBER, roles: s });
      }
      function C(e, t) {
        v(e, { type: m.ImpersonateType.NEW_MEMBER, ...t });
      }
    },
    859699: function (e, t, n) {
      "use strict";
      var s, i, r, a, o, u, d, l;
      n.r(t),
        n.d(t, {
          InstantInviteModalPages: function () {
            return a;
          },
          InviteTargetTypes: function () {
            return r;
          },
          InviteTypes: function () {
            return i;
          },
        }),
        ((o = s || (s = {})).SENDING = "sending"),
        (o.SENT = "sent"),
        (o.ERROR = "error"),
        ((u = i || (i = {}))[(u.GUILD = 0)] = "GUILD"),
        (u[(u.GROUP_DM = 1)] = "GROUP_DM"),
        (u[(u.FRIEND = 2)] = "FRIEND"),
        ((d = r || (r = {}))[(d.STREAM = 1)] = "STREAM"),
        (d[(d.EMBEDDED_APPLICATION = 2)] = "EMBEDDED_APPLICATION"),
        (d[(d.ROLE_SUBSCRIPTIONS_PURCHASE = 3)] =
          "ROLE_SUBSCRIPTIONS_PURCHASE"),
        ((l = a || (a = {})).MAIN = "main"),
        (l.SETTINGS = "settings"),
        (l.GUEST = "guest");
    },
    442409: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          generateInviteKeyFromExtraData: function () {
            return o;
          },
          generateInviteKeyFromUrlParams: function () {
            return a;
          },
          parseExtraDataFromInviteKey: function () {
            return u;
          },
          parseInviteCodeFromInviteKey: function () {
            return d;
          },
        });
      var s = n("664751"),
        i = n("91866");
      let r = "event";
      function a(e, t) {
        return null == t
          ? e
          : o({
              baseCode: e,
              guildScheduledEventId: (function (e) {
                let t = "?" === e.charAt(0) ? e.substring(1) : e;
                try {
                  let e = s.parse(t);
                  return (0, i.getFirstQueryStringValue)(e[r]);
                } catch (e) {
                  return;
                }
              })(t),
            });
      }
      function o(e) {
        let { baseCode: t, guildScheduledEventId: n } = e;
        return null == n ? t : `${t}?${r}=${n}`;
      }
      function u(e) {
        let [t, n] = e.split("?");
        if (null == n) return { baseCode: t };
        let a = s.parse(n);
        return {
          baseCode: t,
          guildScheduledEventId: (0, i.getFirstQueryStringValue)(a[r]),
        };
      }
      function d(e) {
        let [t] = e.split("?");
        return t;
      }
    },
    173100: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          InviteTypes: function () {
            return r.InviteTypes;
          },
          getInviteType: function () {
            return f;
          },
          isEmbeddedApplicationInvite: function () {
            return l;
          },
          isGuildScheduledEventInviteEmbed: function () {
            return a;
          },
          isRoleSubscriptionInvite: function () {
            return o;
          },
          isStageInviteEmbed: function () {
            return u;
          },
          isStreamInvite: function () {
            return d;
          },
        });
      var s = n("62470"),
        i = n("775822"),
        r = n("859699");
      function a(e) {
        let t = e.guild_scheduled_event;
        return null != t && (0, s.isEventUpcoming)(t);
      }
      function o(e) {
        return (
          e.target_type === r.InviteTargetTypes.ROLE_SUBSCRIPTIONS_PURCHASE
        );
      }
      function u(e) {
        return null != e.channel && null != e.stage_instance;
      }
      function d(e) {
        return (
          e.target_type === r.InviteTargetTypes.STREAM && null != e.target_user
        );
      }
      function l(e) {
        return e.target_type === r.InviteTargetTypes.EMBEDDED_APPLICATION;
      }
      function f(e) {
        var t, n;
        if ("number" == typeof e.type) return e.type;
        if (
          (t = e).type === r.InviteTypes.GROUP_DM ||
          (null != t.channel && (0, i.isMultiUserDM)(t.channel.type))
        )
          return r.InviteTypes.GROUP_DM;
        return (n = e).type === r.InviteTypes.FRIEND ||
          (null == n.guild && null != n.inviter)
          ? r.InviteTypes.FRIEND
          : r.InviteTypes.GUILD;
      }
    },
    626034: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var s = n("682797"),
        i = n("220497"),
        r = n("775822"),
        a = n("262047"),
        o = n("328470"),
        u = n("334990"),
        d = n("442409"),
        l = n("859699"),
        f = n("467006");
      function _(e) {
        let t = null;
        if (null != e && null != e.channel) {
          let n = e.channel;
          t =
            e.target_type === l.InviteTargetTypes.STREAM
              ? f.LoggingInviteTypes.STREAM
              : e.target_type === l.InviteTargetTypes.EMBEDDED_APPLICATION
                ? f.LoggingInviteTypes.APPLICATION
                : (0, r.isMultiUserDM)(n.type)
                  ? f.LoggingInviteTypes.GDM_INVITE
                  : null == n || (0, r.isPrivate)(n.type)
                    ? f.LoggingInviteTypes.FRIEND_INVITE
                    : f.LoggingInviteTypes.SERVER_INVITE;
        }
        return t;
      }
      function c(e, t, n) {
        o.default.track(f.AnalyticEvents.INVITE_OPENED, { invite_code: e });
        let r = (0, d.parseExtraDataFromInviteKey)(e),
          l = {
            ...n,
            with_counts: !0,
            with_expiration: !0,
            guild_scheduled_event_id: r.guildScheduledEventId,
          };
        return u.default
          .get({
            url: f.Endpoints.INVITE(r.baseCode),
            query: l,
            oldFormErrors: !0,
            trackedActionData: {
              event: s.NetworkActionNames.INVITE_RESOLVE,
              properties: e => {
                let s = e.body,
                  o = e.body?.code === f.AbortCodes.USER_BANNED;
                return (0, i.exact)({
                  resolved: e.ok,
                  guild_id: s?.guild?.id,
                  channel_id: s?.channel?.id,
                  channel_type: s?.channel?.type,
                  inviter_id: s?.inviter?.id,
                  code: r.baseCode,
                  input_value: n?.inputValue,
                  location: t,
                  authenticated: a.default.isAuthenticated(),
                  size_total: s?.approximate_member_count,
                  size_online: s?.approximate_presence_count,
                  destination_user_id: s?.target_user?.id,
                  invite_type: _(s),
                  user_banned: o,
                });
              },
            },
          })
          .then(
            s => {
              let i = s.body;
              return (
                null != t &&
                  o.default.track(
                    f.AnalyticEvents.INVITE_RESOLVED,
                    {
                      resolved: !0,
                      guild_id: null != i.guild ? i.guild.id : null,
                      channel_id: null != i.channel ? i.channel.id : null,
                      channel_type: null != i.channel ? i.channel.type : null,
                      inviter_id: i.inviter ? i.inviter.id : null,
                      code: r.baseCode,
                      input_value: n?.inputValue,
                      location: t,
                      authenticated: a.default.isAuthenticated(),
                      size_total: i.approximate_member_count,
                      size_online: i.approximate_presence_count,
                      destination_user_id:
                        null != i.target_user ? i.target_user.id : null,
                      invite_type: _(i),
                    },
                    { flush: !0 }
                  ),
                { invite: i, code: e }
              );
            },
            s => {
              let i =
                null != s.body && s.body.code === f.AbortCodes.USER_BANNED;
              return (
                null != t &&
                  o.default.track(
                    f.AnalyticEvents.INVITE_RESOLVED,
                    {
                      resolved: !1,
                      code: r.baseCode,
                      input_value: n?.inputValue,
                      location: t,
                      authenticated: a.default.isAuthenticated(),
                      user_banned: i,
                      error_code: s.body?.code,
                      error_message: s.body?.message,
                    },
                    { flush: !0 }
                  ),
                { invite: null, code: e, banned: i }
              );
            }
          );
      }
    },
    10050: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("735250");
      n("470079");
      var i = n("974328"),
        r = {
          show(e) {
            (0, i.openModalLazy)(async () => {
              let { default: t } = await n
                .el("10050@257:292")
                .then(n.bind(n, "164553"));
              return n => (0, s.jsx)(t, { ...n, url: e });
            });
          },
        };
    },
    136395: function (e, t, n) {
      "use strict";
      function s(e) {
        return !1;
      }
      n.r(t),
        n.d(t, {
          shouldShowLinkNotDiscordWarning: function () {
            return s;
          },
        });
    },
    586326: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        });
      var s,
        i,
        r = n("328470"),
        a = n("366230"),
        o = n("237837"),
        u = n("341010"),
        d = n("467006");
      ((s = i || (i = {})).MESSAGE = "Discord Message Link"),
        (s.CHANNEL = "Discord Channel Link"),
        (s.SERVER_INVITE = "Discord Server Invite"),
        (s.GIFT = "Discord Gift Link"),
        (s.UNKNOWN = "Unknown");
      let l = [
        e => (o.default.isInvite(e) ? "Discord Server Invite" : null),
        e => {
          let t = a.default.safeParseWithQuery(e);
          if (null == t) return null;
          let n = (0, u.tryParseChannelPath)(t.path);
          return null == n
            ? null
            : f({
                guildId: n.guildId,
                channelId: n.channelId,
                messageId: n.messageId,
              });
        },
      ];
      function f(e) {
        return null != e.guildId && null != e.channelId && null != e.messageId
          ? "Discord Message Link"
          : null != e.guildId && null != e.channelId
            ? "Discord Channel Link"
            : "Unknown";
      }
      var _ = {
        trackDiscordLinkClicked: function (e) {
          r.default.track(d.AnalyticEvents.LINK_CLICKED, {
            is_discord_link: !0,
            discord_link_type: f(e),
          });
        },
        trackLinkClicked: function (e, t) {
          var n, s;
          if (null == e && null == t) return;
          let i = a.default.isDiscordUrl(e, !0) || null != t;
          r.default.track(d.AnalyticEvents.LINK_CLICKED, {
            is_discord_link: i,
            discord_link_type: i
              ? ((n = e),
                null == (s = t) && null == n
                  ? "Unknown"
                  : null == s
                    ? (function (e) {
                        for (let t of l) {
                          let n = t(e);
                          if (null != n) return n;
                        }
                        return "Unknown";
                      })(n)
                    : f(s))
              : null,
          });
        },
        trackAnnouncementMessageLinkClicked: function (e) {
          let {
            messageId: t,
            channelId: n,
            guildId: s,
            sourceChannelId: i,
            sourceGuildId: a,
          } = e;
          r.default.track(d.AnalyticEvents.ANNOUNCEMENT_MESSAGE_LINK_CLICKED, {
            message_id: t,
            channel_id: n,
            guild_id: s,
            source_channel_id: i,
            source_guild_id: a,
          });
        },
      };
    },
    341010: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          CHANNEL_OR_MESSAGES_URL_RE: function () {
            return g;
          },
          MEDIA_POST_URL_RE: function () {
            return m;
          },
          canViewChannel: function () {
            return p;
          },
          isAccessibleChannelPath: function () {
            return v;
          },
          tryParseChannelPath: function () {
            return h;
          },
          tryParseEventDetailsPath: function () {
            return E;
          },
        });
      var s = n("731865"),
        i = n("327271"),
        r = n("197905"),
        a = n("930771"),
        o = n("467006");
      let u = Array.from(n("551835").StaticChannelRoutes)
          .map(e => a.default.escape(e))
          .join("|"),
        d = RegExp(`^/channels/(\\d+|${o.ME})(?:/)?(\\d+|${u})?`),
        l = RegExp(`^/channels/(\\d+|${o.ME})(?:/)(\\d+|${u})(?:/)(\\d+)`),
        f = RegExp(
          "^/channels/(\\d+)(?:/)(\\d+)(?:/threads/)(\\d+)(?:/)(\\d+)"
        ),
        _ = RegExp("^/guild-stages/(\\d+)(?:/)?(\\d+)?"),
        c = RegExp("^/events/(\\d+)(?:/)(\\d+)?((?:/)(\\d+))?"),
        g = RegExp(
          `^https://(?:canary\\.|ptb\\.)?discord.com/channels/(\\d+|${o.ME})(?:/(\\d+|[a-zA-Z-]+))?(?:/(\\d+|[a-zA-Z-]+))?`
        ),
        m = RegExp(
          "^https://(?:canary\\.|ptb\\.)?discord.com/channels/(\\d+)(?:/)(\\d+)(?:/threads/)(\\d+)(?:/)(\\d+)"
        );
      function h(e) {
        if (null == e) return null;
        let t = e.match(l);
        if (null != t && t.length > 3)
          return { guildId: t[1], channelId: t[2], messageId: t[3] };
        let n = e.match(f);
        if (null != n && n.length > 4)
          return {
            guildId: n[1],
            channelId: n[2],
            threadId: n[3],
            messageId: n[4],
          };
        let s = e.match(d);
        if (null != s && s.length > 1)
          return { guildId: s[1], channelId: s[2] ?? void 0 };
        let i = e.match(_);
        return null != i && i.length > 1 ? { guildId: i[1] } : null;
      }
      function E(e) {
        if (null == e) return null;
        let t = e.match(c);
        return null != t && t.length > 1
          ? { guildId: t[1], guildEventId: t[2], recurrenceId: t[3] }
          : null;
      }
      function p(e) {
        return !!e.isPrivate() || r.default.can(o.Permissions.VIEW_CHANNEL, e);
      }
      function v(e) {
        let { guildId: t, channelId: n } = e;
        if (null == i.default.getGuild(t) && t !== o.ME) return !1;
        if (null == n) return !0;
        let r = s.default.getChannel(n);
        return null != r && p(r);
      }
    },
    885068: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return p;
          },
        });
      var s = n("987393"),
        i = n("373969"),
        r = n("138795"),
        a = n("252567"),
        o = n("697817"),
        u = n("347069"),
        d = n("913897"),
        l = n("418714"),
        f = n("987914"),
        _ = n("731865"),
        c = n("327271"),
        g = n("370275"),
        m = n("341010"),
        h = n("467006"),
        E = n("551835");
      async function p(e) {
        let { guildId: t, channelId: n } = e,
          p = c.default.getGuild(t);
        if (null == p && t !== h.ME) return !1;
        if (null == n) return !0;
        if ((0, E.isStaticChannelRoute)(n))
          switch (n) {
            case E.StaticChannelRoute.ROLE_SUBSCRIPTIONS:
              return (0, l.areRoleSubscriptionsVisibleInGuild)(t);
            case E.StaticChannelRoute.GUILD_SHOP:
              return (0, i.isGuildShopVisibleInGuild)(p);
            case E.StaticChannelRoute.MEMBER_APPLICATIONS:
              return (0, a.canReviewGuildMemberApplications)(t);
            case E.StaticChannelRoute.GUILD_HOME:
              return (
                (0, r.canSeeGuildHome)(t) || (0, d.canSeeOnboardingHome)(t)
              );
            case E.StaticChannelRoute.CHANNEL_BROWSER:
              return null != p && p.hasFeature(h.GuildFeatures.COMMUNITY);
            case E.StaticChannelRoute.GUILD_ONBOARDING:
              return u.default.shouldShowOnboarding(t);
            case E.StaticChannelRoute.CUSTOMIZE_COMMUNITY:
              return null != p && p.hasFeature(h.GuildFeatures.COMMUNITY);
            case E.StaticChannelRoute.MEMBER_SAFETY:
              return (0, o.canAccessMemberSafetyPage)(t);
            default:
              (0, g.assertNever)(n);
          }
        let v = _.default.getChannel(n);
        return (
          (null != v ||
            (await f.default.loadThread(n),
            null != (v = _.default.getChannel(n)))) &&
          ((0, m.canViewChannel)(v) || s.default.isChannelGatedAndVisible(t, n))
        );
      }
    },
    817788: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        });
      var s = n("735250");
      n("470079");
      var i = n("910838"),
        r = n("677700"),
        a = n("521588"),
        o = n("497994"),
        u = n("731865"),
        d = n("341010"),
        l = n("885068"),
        f = n("467006");
      async function _(e, t, _) {
        let c = (0, d.tryParseChannelPath)(e);
        if (null != c && !(await (0, l.default)(c))) {
          (0, i.openModalLazy)(async () => {
            let { default: e } = await n
              .el("817788@1392:1436")
              .then(n.bind(n, "862157"));
            return t => (0, s.jsx)(e, { ...t });
          });
          return;
        }
        if (null == c) {
          (0, a.transitionTo)(e);
          return;
        }
        let g = (function (e) {
          if (null == e.channelId) return e;
          let t = u.default.getChannel(e.channelId);
          if (null == t) return e;
          let n = (0, r.getGuildIdForGenericRedirect)(t);
          return { ...e, guildId: n ?? f.ME };
        })(c);
        if (null == g.channelId) {
          (0, o.transitionToGuild)(g.guildId);
          return;
        }
        null != g.threadId
          ? (0, a.transitionTo)(
              f.Routes.CHANNEL_THREAD_VIEW(
                g.guildId,
                g.channelId,
                g.threadId,
                g.messageId
              ),
              t,
              _
            )
          : (0, a.transitionTo)(
              f.Routes.CHANNEL(g.guildId, g.channelId, g.messageId),
              t,
              _
            );
      }
    },
    533549: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          stopLurking: function () {
            return l;
          },
          stopLurkingAll: function () {
            return d;
          },
        });
      var s = n("454836"),
        i = n("312916"),
        r = n("407807"),
        a = n("370275"),
        o = n("172056"),
        u = n("467006");
      async function d(e) {
        let t = o.default.lurkingGuildIds().filter(t => !e.includes(t));
        0 !== t.length &&
          (i.default.dispatch({
            type: "GUILD_STOP_LURKING",
            ignoredGuildIds: e,
          }),
          await Promise.all(
            t.map(async e => {
              let t = o.default.getLurkingSource();
              try {
                await s.default.delete({
                  url: u.Endpoints.GUILD_LEAVE(e),
                  body: { lurking: !0 },
                  oldFormErrors: !0,
                });
              } catch (n) {
                i.default.dispatch({
                  type: "GUILD_STOP_LURKING_FAILURE",
                  lurkingGuildId: e,
                  lurkingSource: t,
                });
              }
            })
          ));
      }
      async function l() {
        let e =
            arguments.length > 0 && void 0 !== arguments[0]
              ? arguments[0]
              : null,
          t = o.default.lurkingGuildIds();
        if (0 === t.length || !(null == e || !t.includes(e))) return;
        let n = [e, r.default.getGuildId()].filter(a.isNotNullish);
        await d(n);
      }
    },
    893687: function (e, t, n) {
      "use strict";
      function s(e) {
        let {} = e;
        return !1;
      }
      function i(e, t) {
        return !1;
      }
      function r(e) {
        return !1;
      }
      function a() {
        return !1;
      }
      function o() {
        return !1;
      }
      function u(e) {
        let {} = e;
        return !1;
      }
      function d(e, t) {
        return !1;
      }
      function l() {
        return !1;
      }
      function f(e) {}
      function _(e) {}
      function c(e) {}
      function g(e) {
        return !1;
      }
      n.r(t),
        n.d(t, {
          coerceChannelRoute: function () {
            return f;
          },
          coerceGuildsRoute: function () {
            return _;
          },
          coerceModalRoute: function () {
            return c;
          },
          navigateToChannel: function () {
            return s;
          },
          navigateToMemberVerification: function () {
            return i;
          },
          navigateToRootTab: function () {
            return r;
          },
          popAllModals: function () {
            return l;
          },
          popModal: function () {
            return d;
          },
          pushModal: function () {
            return u;
          },
          resetToAuthRoute: function () {
            return a;
          },
          resetToPanelsUI: function () {
            return o;
          },
          useIsModalOpen: function () {
            return g;
          },
        });
    },
    889977: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        }),
        n("653041");
      var s = new (class e {
        enqueue(e) {
          this.queue.push(e);
        }
        flush() {
          for (; this.queue.length > 0; ) this.queue.shift()?.();
        }
        constructor() {
          this.queue = [];
        }
      })();
    },
    222974: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return S;
          },
          punycodeLink: function () {
            return T;
          },
        }),
        n("216116"),
        n("78328"),
        n("815648");
      var s = n("392711"),
        i = n.n(s),
        r = n("31775"),
        a = n.n(r);
      n("711739");
      var o = n("302454"),
        u = n.n(o),
        d = n("992545"),
        l = n("370275"),
        f = n("729422"),
        _ = n("654360");
      let c = new (a())({ max: 50 });
      function g(e) {
        let t = c.get(e);
        if (null != t) return t;
        let n = (0, _.sanitizeWhitespace)(e),
          s = (0, _.sanitizeUnicodeConfusables)(n),
          i = { whitespaceSanitized: n, fullySanitized: s };
        return c.set(e, i), i;
      }
      let m = ["http:", "https:", "discord:"],
        h = [
          f.AST_KEY.TEXT,
          f.AST_KEY.UNDERLINE,
          f.AST_KEY.STRONG,
          f.AST_KEY.ITALICS,
          f.AST_KEY.STRIKETHROUGH,
          f.AST_KEY.INLINE_CODE,
          f.AST_KEY.SPOILER,
          f.AST_KEY.LINE_BREAK,
          f.AST_KEY.TIMESTAMP,
        ],
        E = [...h, f.AST_KEY.EMOJI, f.AST_KEY.CUSTOM_EMOJI],
        p = [f.AST_KEY.LIST, f.AST_KEY.HEADING, f.AST_KEY.BLOCK_QUOTE],
        v = [f.AST_KEY.TEXT],
        y = [
          f.AST_KEY.UNDERLINE,
          f.AST_KEY.STRONG,
          f.AST_KEY.ITALICS,
          f.AST_KEY.STRIKETHROUGH,
          f.AST_KEY.INLINE_CODE,
          f.AST_KEY.SPOILER,
          f.AST_KEY.LINE_BREAK,
          f.AST_KEY.TIMESTAMP,
          f.AST_KEY.EMOJI,
          f.AST_KEY.CUSTOM_EMOJI,
          f.AST_KEY.LIST,
          f.AST_KEY.HEADING,
          f.AST_KEY.BLOCK_QUOTE,
        ];
      function I(e, t) {
        let n =
          arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [];
        for (let s of (!Array.isArray(e) && (e = [e]), e)) {
          if (!t.includes(s.type)) return null;
          if (s.type === f.AST_KEY.INLINE_CODE) {
            let e = [...t, ...n];
            if (null == I(s.validationChildContent, e)) return null;
          }
          if (Array.isArray(s.content) && null == I(s.content, t)) return null;
        }
        return e;
      }
      function T(e) {
        try {
          let t = new URL(e),
            n = t.protocol ?? "";
          if (!m.includes(n.toLowerCase()))
            throw Error("Provided protocol is not allowed: " + n);
          if (
            ("http:" === n || "https:" === n) &&
            (null == t.hostname || 0 === t.hostname.length)
          )
            throw Error("no hostname");
          let s = (0, _.safelyMakeUrlHumanReadable)(t);
          (t.username = ""), (t.password = "");
          let i = (0, _.safelyMakeUrlHumanReadable)(t);
          return { target: s, displayTarget: i };
        } catch (e) {
          return null;
        }
      }
      var S = {
        ...u().defaultRules.link,
        match: (e, t, n) =>
          t.allowLinks ? u().defaultRules.link.match(e, t, n) : null,
        parse(e, t, n) {
          let [s, r, a, o] = e,
            _ = () => ({ type: f.AST_KEY.TEXT, content: s }),
            c = g(a),
            m = g(r),
            S = g(null != o ? o : ""),
            C = c.whitespaceSanitized,
            A = m.fullySanitized,
            N = S.fullySanitized,
            D = A.trim();
          if (0 === C.trim().length || 0 === D.length) return _();
          let O = T(u().unescapeUrl(a)),
            R = (0, d.default)(r).length > 0 || (0, d.default)(o).length > 0;
          if (null == O || R) return _();
          let P = { ...n, allowEscape: !1, parseInlineCodeChildContent: !0 },
            b = n.allowEmojiLinks ? E : h,
            M = [...b, ...p],
            V = [...v, ...y],
            L = I(t(A, P), M, [f.AST_KEY.EMOJI]),
            k = I(t(N, P), V);
          if (
            null == L ||
            null == k ||
            0 ===
              (function e(t) {
                let n = "";
                for (let s of t)
                  switch (s.type) {
                    case f.AST_KEY.TEXT:
                    case f.AST_KEY.INLINE_CODE:
                      n += s.content;
                      break;
                    case f.AST_KEY.CUSTOM_EMOJI:
                      n += s.name;
                      break;
                    case f.AST_KEY.EMOJI:
                      n += s.surrogate;
                      break;
                    case f.AST_KEY.LINE_BREAK:
                      n += "\n";
                      break;
                    case f.AST_KEY.STRONG:
                    case f.AST_KEY.ITALICS:
                    case f.AST_KEY.UNDERLINE:
                    case f.AST_KEY.STRIKETHROUGH:
                    case f.AST_KEY.SPOILER:
                      n += e(s.content);
                      break;
                    case f.AST_KEY.TIMESTAMP:
                      n += "<timestamp>";
                      break;
                    case f.AST_KEY.BLOCK_QUOTE:
                    case f.AST_KEY.LIST:
                    case f.AST_KEY.HEADING:
                      n += `<${s.type}Content>`;
                      break;
                    default:
                      (0, l.assertNever)(s.type);
                  }
                return n;
              })(L).trim().length
          )
            return _();
          let w = i().pick(t.rules, b),
            U = u().parserFor(w)(m.whitespaceSanitized, P),
            G = S.whitespaceSanitized,
            { target: F } = O;
          return { content: U, target: F, title: G };
        },
      };
    },
    729422: function (e, t, n) {
      "use strict";
      var s, i;
      n.r(t),
        n.d(t, {
          AST_KEY: function () {
            return s;
          },
        }),
        ((i = s || (s = {})).TEXT = "text"),
        (i.STRIKETHROUGH = "s"),
        (i.UNDERLINE = "u"),
        (i.STRONG = "strong"),
        (i.ITALICS = "em"),
        (i.IMAGE = "image"),
        (i.EMOJI = "emoji"),
        (i.CUSTOM_EMOJI = "customEmoji"),
        (i.LINK = "link"),
        (i.URL = "url"),
        (i.AUTOLINK = "autolink"),
        (i.HIGHLIGHT = "highlight"),
        (i.PARAGRAPH = "paragraph"),
        (i.LINE_BREAK = "br"),
        (i.NEWLINE = "newline"),
        (i.ESCAPE = "escape"),
        (i.SPOILER = "spoiler"),
        (i.BLOCK_QUOTE = "blockQuote"),
        (i.INLINE_CODE = "inlineCode"),
        (i.CODE_BLOCK = "codeBlock"),
        (i.MENTION = "mention"),
        (i.CHANNEL_MENTION = "channelMention"),
        (i.CHANNEL = "channel"),
        (i.GUILD = "guild"),
        (i.ATTACHMENT_LINK = "attachmentLink"),
        (i.SOUNDBOARD = "soundboard"),
        (i.STATIC_ROUTE_LINK = "staticRouteLink"),
        (i.ROLE_MENTION = "roleMention"),
        (i.COMMAND_MENTION = "commandMention"),
        (i.TIMESTAMP = "timestamp"),
        (i.LIST = "list"),
        (i.HEADING = "heading");
    },
    654360: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          safelyMakeUrlHumanReadable: function () {
            return d;
          },
          sanitizeUnicodeConfusables: function () {
            return o;
          },
          sanitizeWhitespace: function () {
            return i;
          },
        });
      let s = RegExp(
        `${/\p{Cf}|\p{Zl}|\p{Zp}|[^\P{Cc}\n]|[^\P{Zs} ]/gu.source}|͏|឴|឵|ᅠ|ㅤ|ﾠ`,
        "gu"
      );
      function i(e) {
        return e.replace(s, "");
      }
      let r = [
        {
          character: "h",
          matcher: a([
            "H",
            "һ",
            "հ",
            "Ꮒ",
            "ℎ",
            "\uD835\uDC21",
            "\uD835\uDC89",
            "\uD835\uDCBD",
            "\uD835\uDCF1",
            "\uD835\uDD25",
            "\uD835\uDD59",
            "\uD835\uDD8D",
            "\uD835\uDDC1",
            "\uD835\uDDF5",
            "\uD835\uDE29",
            "\uD835\uDE5D",
            "\uD835\uDE91",
            "ｈ",
          ]),
        },
        {
          character: "t",
          matcher: a([
            "T",
            "\uD835\uDC2D",
            "\uD835\uDC61",
            "\uD835\uDC95",
            "\uD835\uDCC9",
            "\uD835\uDCFD",
            "\uD835\uDD31",
            "\uD835\uDD65",
            "\uD835\uDD99",
            "\uD835\uDDCD",
            "\uD835\uDE01",
            "\uD835\uDE35",
            "\uD835\uDE69",
            "\uD835\uDE9D",
          ]),
        },
        {
          character: "p",
          matcher: a([
            "P",
            "ρ",
            "ϱ",
            "р",
            "⍴",
            "ⲣ",
            "\uD835\uDC29",
            "\uD835\uDC5D",
            "\uD835\uDC91",
            "\uD835\uDCC5",
            "\uD835\uDCF9",
            "\uD835\uDD2D",
            "\uD835\uDD61",
            "\uD835\uDD95",
            "\uD835\uDDC9",
            "\uD835\uDDFD",
            "\uD835\uDE31",
            "\uD835\uDE65",
            "\uD835\uDE99",
            "\uD835\uDED2",
            "\uD835\uDEE0",
            "\uD835\uDF0C",
            "\uD835\uDF1A",
            "\uD835\uDF46",
            "\uD835\uDF54",
            "\uD835\uDF80",
            "\uD835\uDF8E",
            "\uD835\uDFBA",
            "\uD835\uDFC8",
            "ｐ",
            "ҏ",
          ]),
        },
        {
          character: "s",
          matcher: a([
            "S",
            "ƽ",
            "ѕ",
            "ꜱ",
            "ꮪ",
            "\uD801\uDC48",
            "\uD806\uDCC1",
            "\uD835\uDC2C",
            "\uD835\uDC60",
            "\uD835\uDC94",
            "\uD835\uDCC8",
            "\uD835\uDCFC",
            "\uD835\uDD30",
            "\uD835\uDD64",
            "\uD835\uDD98",
            "\uD835\uDDCC",
            "\uD835\uDE00",
            "\uD835\uDE34",
            "\uD835\uDE68",
            "\uD835\uDE9C",
            "ｓ",
          ]),
        },
        {
          character: ":",
          matcher: a([
            "ː",
            "˸",
            "։",
            "׃",
            "܃",
            "܄",
            "ः",
            "ઃ",
            "᛬",
            "᠃",
            "᠉",
            "⁚",
            "∶",
            "ꓽ",
            "꞉",
            "︰",
            "：",
            ";",
            ";",
          ]),
        },
        {
          character: "/",
          matcher: a([
            "᜵",
            "⁁",
            "⁄",
            "∕",
            "╱",
            "⟋",
            "⧸",
            "Ⳇ",
            "⼃",
            "〳",
            "ノ",
            "㇓",
            "丿",
            "\uD834\uDE3A",
          ]),
        },
      ];
      function a(e) {
        return RegExp(e.join("|"), "gu");
      }
      function o(e) {
        let t = e;
        return (
          r.forEach(e => {
            t = t.replace(e.matcher, e.character);
          }),
          t
        );
      }
      let u = [
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1,
        0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 0, 0, 0, 1, 0,
      ];
      function d(e) {
        let t = (function (e) {
          if ("null" === e.origin && e.pathname.startsWith("//"))
            return e.protocol;
          let t = "";
          return (
            "" !== e.username && (t += e.username),
            "" !== e.password && (t += ":" + e.password),
            "" !== t && (t += "@"),
            `${e.protocol}//${t}${e.host}`
          );
        })(e);
        return (t += l(e.pathname) + l(e.search) + l(e.hash));
      }
      function l(e) {
        let t;
        try {
          t = decodeURIComponent(e);
        } catch {
          return e;
        }
        let n = "",
          s = e,
          i = t;
        for (; s.length > 0; ) {
          var r;
          let e = s.codePointAt(0),
            t = i.codePointAt(0);
          if (e === t) {
            let t = String.fromCodePoint(e);
            (n += t), (s = s.substring(t.length)), (i = i.substring(t.length));
            continue;
          }
          let a = String.fromCodePoint(t),
            o = encodeURIComponent(a),
            d = o === a ? 3 : o.length;
          (n += (
            (r = t) >= 0 && r < 128
              ? 1 !== u[r]
              : 8206 === r ||
                8207 === r ||
                8234 === r ||
                8235 === r ||
                8236 === r ||
                8237 === r ||
                8238 === r ||
                1564 === r ||
                8294 === r ||
                8295 === r ||
                8296 === r ||
                8297 === r ||
                128271 === r ||
                128272 === r ||
                128274 === r ||
                128275 === r ||
                133 === r ||
                160 === r ||
                5760 === r ||
                8192 === r ||
                8193 === r ||
                8194 === r ||
                8195 === r ||
                8196 === r ||
                8197 === r ||
                8198 === r ||
                8199 === r ||
                8200 === r ||
                8201 === r ||
                8202 === r ||
                8232 === r ||
                8233 === r ||
                8239 === r ||
                8287 === r ||
                12288 === r ||
                10240 === r ||
                173 === r ||
                847 === r ||
                (r >= 1536 && r <= 1541) ||
                1757 === r ||
                1807 === r ||
                2274 === r ||
                4447 === r ||
                4448 === r ||
                6068 === r ||
                6069 === r ||
                6155 === r ||
                6156 === r ||
                6157 === r ||
                6158 === r ||
                8203 === r ||
                8204 === r ||
                8205 === r ||
                8288 === r ||
                8289 === r ||
                8290 === r ||
                8291 === r ||
                8292 === r ||
                8293 === r ||
                (r >= 8298 && r <= 8303) ||
                12644 === r ||
                (r >= 65520 && r <= 65528) ||
                (r >= 65024 && r <= 65039) ||
                65279 === r ||
                65440 === r ||
                65529 === r ||
                65530 === r ||
                65531 === r ||
                69821 === r ||
                69837 === r ||
                (r >= 78896 && r <= 78904) ||
                (r >= 113824 && r <= 113827) ||
                (r >= 119155 && r <= 119162) ||
                (r >= 917504 && r <= 921599)
          )
            ? o
            : a),
            (s = s.substring(d)),
            (i = i.substring(a.length));
        }
        return n;
      }
    },
    717510: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("735250");
      n("470079");
      var i = n("974328"),
        r = {
          show(e) {
            let { url: t, trustUrl: r, onConfirm: a, isProtocol: o } = e;
            (0, i.openModalLazy)(async () => {
              let { default: e } = await n
                .el("717510@317:359")
                .then(n.bind(n, "118530"));
              return n =>
                (0, s.jsx)(e, {
                  ...n,
                  url: t,
                  isProtocol: o,
                  trustUrl: r,
                  onConfirm: a,
                });
            });
          },
        };
    },
    854588: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          canUseMediaPostEmbed: function () {
            return g;
          },
          getMediaPostEmbedChannelPath: function () {
            return c;
          },
          getMediaPostEmbedCommonData: function () {
            return _;
          },
        }),
        n("789020");
      var s = n("992545"),
        i = n("341010"),
        r = n("327271"),
        a = n("204606"),
        o = n("107888"),
        u = n("46640"),
        d = n("467006"),
        l = n("80748"),
        f = n("30175");
      function _(e) {
        let {
          mediaPostEmbedData: t,
          guild: n,
          parentChannel: s,
          postThread: i,
          user: r,
          selectedGuildId: d,
          canAccess: _ = !1,
        } = e;
        if (null == t) return null;
        let c = (0, u.getThumbnailImage)(t.thumbnail),
          g = !_ && t.has_media_attachment,
          m = _
            ? f.default.Messages.MEDIA_POST_EMBED_SUBSCRIBED_CTA
            : f.default.Messages.MEDIA_POST_EMBED_SUBSCRIBE_CTA,
          h =
            null != r ? o.default.getName(t.guild_id, t.channel_id, r) : void 0,
          E = r?.getAvatarURL(n?.id, 40);
        (null == E || d !== t.guild_id) &&
          (E = a.default.getGuildIconURL({
            id: t.guild_id,
            icon: t.guild_icon,
            size: 40,
            canAnimate: !1,
          }));
        let p =
            (function (e) {
              if (null == e) return !1;
              let { height: t, width: n } = e;
              return null != t && null != n && t >= n;
            })(t.thumbnail) && !g,
          v =
            t.thumbnail?.filename != null &&
            t.thumbnail?.filename?.startsWith(l.SPOILER_ATTACHMENT_PREFIX);
        return {
          title: t.title ?? "",
          subtitle: t.description,
          ctaText: m,
          coverImage: c,
          coverImageOverlayText: g
            ? f.default.Messages.MEDIA_POST_EMBED_BLURRED_THUMBNAIL_TEXT
            : void 0,
          parentChannelId: t.parent_channel_id,
          threadId: t.channel_id,
          postThread: i,
          messageId: t.message_id,
          canAccess: _,
          guildId: t.guild_id,
          guildName: n?.name ?? t.guild_name,
          authorId: t?.author_id,
          authorName: h,
          channelName: s?.name,
          avatarUrl: E,
          shouldShowBlurredThumbnailImage: g,
          shouldContainMediaWithBackground: p,
          shouldSpoiler: v,
          obscureAwaitingScan: !1,
          flags: t.flags,
          contentScanVersion: t.content_scan_version,
        };
      }
      function c(e) {
        if (null == e) return;
        let t = (0, s.parseURLSafely)(e);
        if (null == t) return;
        let n = (0, s.remainingPathFromDiscordHostMatch)(t);
        if (null != n) return (0, i.tryParseChannelPath)(n);
      }
      function g(e, t) {
        let n = r.default.getGuild(e);
        if (null == n || null == t) return !1;
        let s =
          n.hasFeature(d.GuildFeatures.CREATOR_MONETIZABLE) ||
          n.hasFeature(d.GuildFeatures.CREATOR_MONETIZABLE_PROVISIONAL);
        return !0 === t.isMediaChannel() && s;
      }
    },
    46640: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          MAX_THUMBNAIL_COUNT: function () {
            return i;
          },
          getEmbedPreviewImageUrl: function () {
            return r;
          },
          getThumbnailImage: function () {
            return a;
          },
        });
      var s = n("178046");
      let i = 4;
      function r(e) {
        if (null == e) return;
        let { thumbnail: t, image: n } = e;
        return null != t
          ? t.proxy_url ?? t.url
          : null != n
            ? n.proxy_url ?? n.url
            : void 0;
      }
      function a(e) {
        if (null == e) return;
        let { url: t, proxy_url: n } = e;
        return null != t && null != n
          ? (0, s.isVideoUrl)(t)
            ? `${n}?format=jpeg`
            : n
          : t;
      }
    },
    815235: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return I;
          },
        });
      var s = n("982313"),
        i = n("731865"),
        r = n("12480");
      let a = new Set(),
        o = new Set(),
        u = !1,
        d = null;
      function l(e) {
        return e.isMessageRequest && !e.isSpam;
      }
      function f(e) {
        let t = !1;
        return (
          l(e) && !a.has(e.id) && (a.add(e.id), (t = !0)),
          !l(e) && a.has(e.id) && (a.delete(e.id), (t = !0)),
          !l(e) && o.has(e.id) && (o.delete(e.id), (t = !0)),
          t
        );
      }
      function _(e) {
        null != e &&
          (d =
            (0, s.getCountryCodeByAlpha2)(e) ?? (0, s.getDefaultCountryCode)());
      }
      function c(e) {
        "CONNECTION_OPEN" === e.type && _(e.countryCode),
          a.clear(),
          o.clear(),
          Object.values(i.default.getMutablePrivateChannels()).forEach(e => {
            f(e);
          }),
          (u = !0);
      }
      function g(e) {
        let { channelId: t } = e;
        o.add(t);
      }
      function m(e) {
        let { channel: t } = e;
        return f(t);
      }
      function h(e) {
        let { channels: t } = e;
        for (let e of t) f(e);
      }
      function E(e) {
        let { channel: t } = e;
        return !!a.has(t.id) && (a.delete(t.id), !0);
      }
      function p(e) {
        let { messageRequestChannelIds: t } = e;
        t.forEach(e => a.add(e));
      }
      function v(e) {
        let { countryCode: t } = e;
        _(t);
      }
      class y extends r.default {
        static #e = (this.displayName = "MessageRequestStore");
        static #t = (this.LATEST_SNAPSHOT_VERSION = 1);
        constructor() {
          super({
            CONNECTION_OPEN: c,
            CONNECTION_OPEN_SUPPLEMENTAL: c,
            CACHE_LOADED_LAZY: () => this.loadCache(),
            OVERLAY_INITIALIZE: p,
            CHANNEL_CREATE: m,
            CHANNEL_UPDATES: h,
            CHANNEL_DELETE: E,
            SET_LOCATION_METADATA: v,
            MESSAGE_REQUEST_ACCEPT_OPTIMISTIC: g,
          });
        }
        initialize() {
          this.waitFor(i.default);
        }
        loadCache() {
          let e = this.readSnapshot(y.LATEST_SNAPSHOT_VERSION);
          null != e && (a = new Set(e));
        }
        takeSnapshot() {
          return { version: y.LATEST_SNAPSHOT_VERSION, data: Array.from(a) };
        }
        getMessageRequestChannelIds() {
          return a;
        }
        getMessageRequestsCount() {
          return a.size;
        }
        isMessageRequest(e) {
          return a.has(e);
        }
        isAcceptedOptimistic(e) {
          return o.has(e);
        }
        getUserCountryCode() {
          return d;
        }
        isReady() {
          return u;
        }
      }
      var I = new y();
    },
    467139: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          filterOutMessageRequestsAndSpam: function () {
            return a;
          },
          filterOutMessageRequestsAndSpamById: function () {
            return o;
          },
          isMessageRequestOrSpamRequest: function () {
            return u;
          },
          shouldShowMessageRequests: function () {
            return d;
          },
        });
      var s = n("84819"),
        i = n("815235"),
        r = n("847252");
      function a(e) {
        let [t, n] =
          arguments.length > 1 && void 0 !== arguments[1]
            ? arguments[1]
            : [i.default, r.default];
        return (function (e) {
          return Array.from(e).reduce((e, t) => {
            let [n, s] = t;
            return Object.assign(e, { [n]: s });
          }, {});
        })(
          (function (e) {
            return s.default.keys(e).map(t => [t, e[t]]);
          })(e).filter(e => {
            let [, s] = e;
            return !t.isMessageRequest(s.id) && !n.isSpam(s.id);
          })
        );
      }
      function o(e) {
        let [t, n] =
          arguments.length > 1 && void 0 !== arguments[1]
            ? arguments[1]
            : [i.default, r.default];
        return e.filter(e => !t.isMessageRequest(e) && !n.isSpam(e));
      }
      function u(e) {
        let [t, n] =
          arguments.length > 1 && void 0 !== arguments[1]
            ? arguments[1]
            : [i.default, r.default];
        return t.isMessageRequest(e) || n.isSpam(e);
      }
      function d() {
        let [e, t] =
            arguments.length > 0 && void 0 !== arguments[0]
              ? arguments[0]
              : [i.default, r.default],
          n = t.getSpamChannelsCount(),
          s = e.getMessageRequestsCount();
        return s > 0 || n > 0;
      }
    },
    847252: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        });
      var s = n("731865"),
        i = n("12480");
      let r = new Set(),
        a = new Set(),
        o = !1;
      function u(e) {
        return e.isSpam;
      }
      function d(e) {
        let t = !1;
        if (e.isSpam && !r.has(e.id)) r.add(e.id), (t = !0);
        if (!e.isSpam && r.has(e.id)) r.delete(e.id), (t = !0);
        if (!e.isSpam && a.has(e.id)) a.delete(e.id), (t = !0);
        return t;
      }
      function l() {
        r.clear(),
          a.clear(),
          Object.values(s.default.getMutablePrivateChannels()).forEach(e => {
            d(e);
          }),
          (o = !0);
      }
      function f(e) {
        let { channelId: t } = e;
        a.add(t);
      }
      function _(e) {
        let { channel: t } = e;
        return d(t);
      }
      function c(e) {
        let { channels: t } = e;
        for (let e of t) d(e);
      }
      function g(e) {
        let { channel: t } = e,
          n = !1;
        return r.has(t.id) && (r.delete(t.id), (n = !0)), n;
      }
      class m extends i.default {
        static #e = (this.displayName = "SpamMessageRequestStore");
        static #t = (this.LATEST_SNAPSHOT_VERSION = 1);
        constructor() {
          super({
            CONNECTION_OPEN: l,
            CONNECTION_OPEN_SUPPLEMENTAL: l,
            CACHE_LOADED_LAZY: () => this.loadCache(),
            CHANNEL_CREATE: _,
            CHANNEL_UPDATES: c,
            CHANNEL_DELETE: g,
            MESSAGE_REQUEST_ACCEPT_OPTIMISTIC: f,
          });
        }
        initialize() {
          this.waitFor(s.default);
        }
        loadCache() {
          let e = this.readSnapshot(m.LATEST_SNAPSHOT_VERSION);
          null != e && (r = new Set(e));
        }
        takeSnapshot() {
          return { version: m.LATEST_SNAPSHOT_VERSION, data: Array.from(r) };
        }
        getSpamChannelIds() {
          return r;
        }
        getSpamChannelsCount() {
          return r.size;
        }
        isSpam(e) {
          return r.has(e);
        }
        isAcceptedOptimistic(e) {
          return a.has(e);
        }
        isReady() {
          return o;
        }
      }
      var h = new m();
    },
    98185: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
      var s = (0, n("516086").createExperiment)({
        kind: "user",
        id: "2024-01_chunked_message_attachment_uploads",
        label: "Use chunked uploads for message attachments",
        defaultConfig: { enabled: !1, chunkSize: 0 },
        treatments: [
          {
            id: 1,
            label: "Chunked message attachment uploads",
            config: { enabled: !0, chunkSize: 8388608 },
          },
        ],
      });
    },
    178046: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          isAnimatedImageUrl: function () {
            return u;
          },
          isImageFile: function () {
            return a;
          },
          isVideoFile: function () {
            return f;
          },
          isVideoUrl: function () {
            return l;
          },
        });
      var s = n("501769");
      let i = (e, t) => {
          if (null == e) return !1;
          let [n, s] = e.split(/\?/, 1);
          return t.test(n);
        },
        r = /\.(png|jpe?g|webp|gif|heic|heif|dng)$/i,
        a = e => null != e && r.test(e),
        o = /\.(webp|gif)$/i,
        u = e => i(e, o),
        d = (0, s.isIOS)()
          ? /\.(mp4|mov)$/i
          : ((0, s.isAndroid)(), /\.(mp4|webm|mov)$/i),
        l = e => i(e, d),
        f = e => null != e && d.test(e);
    },
    187925: function (e, t, n) {
      "use strict";
      var s, i;
      n.r(t),
        n.d(t, {
          ReactionTypes: function () {
            return s;
          },
        }),
        ((i = s || (s = {}))[(i.NORMAL = 0)] = "NORMAL"),
        (i[(i.BURST = 1)] = "BURST"),
        (i[(i.VOTE = 2)] = "VOTE");
    },
    822534: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          canEditMessageWithStickers: function () {
            return D;
          },
          createMessageRecord: function () {
            return y;
          },
          updateMessageRecord: function () {
            return T;
          },
          updateServerMessage: function () {
            return I;
          },
        }),
        n("789020");
      var s = n("913527"),
        i = n.n(s),
        r = n("992545");
      n("62577");
      var a = n("465230"),
        o = n("859404"),
        u = n("625945"),
        d = n("403850"),
        l = n("535291"),
        f = n("262047"),
        _ = n("606929"),
        c = n("871831"),
        g = n("923062"),
        m = n("313652");
      n("501769"), n("439823");
      var h = n("653033");
      n("805356");
      var E = n("80748"),
        p = n("467006");
      n("30175");
      let v = new l.default({ id: "???", username: "???" });
      function y(e) {
        var t;
        let { reactions: n, interactionData: s } =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
          i = e.mentions?.map(e => e.id) ?? [],
          o = e.mention_roles ?? [],
          g = e.mention_channels ?? [],
          E = e.message_reference,
          y = new Date(e.timestamp),
          I =
            e.type === p.MessageTypes.THREAD_CREATED
              ? []
              : (0, r.default)(e.content);
        let T =
            null == (t = e).author
              ? v
              : null != t.webhook_id
                ? new l.default(t.author)
                : c.default.getUser(t.author.id) ?? new l.default(t.author),
          D = e?.gift_info,
          O =
            null != e.interaction
              ? u.default.createFromServer(e.interaction)
              : null,
          R =
            e.type === p.MessageTypes.THREAD_STARTER_MESSAGE
              ? e.referenced_message?.author?.id
              : void 0,
          P = e.type === p.MessageTypes.PREMIUM_REFERRAL ? e.content : void 0,
          b = e.content;
        return (
          e.type === p.MessageTypes.PREMIUM_REFERRAL && (b = ""),
          new d.default({
            ...e,
            author: T,
            webhookId: e.webhook_id,
            blocked:
              _.default.isBlocked(T.id) ||
              (null != R && _.default.isBlocked(R)),
            timestamp: y,
            editedTimestamp:
              null != e.edited_timestamp ? new Date(e.edited_timestamp) : null,
            mentionEveryone: e.mention_everyone,
            mentions: i,
            mentionRoles: o,
            mentionChannels: g,
            messageReference: E,
            mentioned: (0, h.isMentioned)({
              userId: f.default.getId(),
              channelId: e.channel_id,
              mentionEveryone: e.mention_everyone ?? !1,
              mentionUsers: i,
              mentionRoles: o,
            }),
            attachments: S(e),
            embeds: A(e),
            codedLinks: I,
            giftCodes: (0, m.isGiftCodeEmbed)(e)
              ? (0, m.findGiftCodes)(e?.embeds[0].url)
              : (0, m.findGiftCodes)(e.content),
            content: b,
            referralTrialOfferId: P,
            call: C(e.call, y),
            reactions: N(n ?? e.reactions, e.poll),
            interaction: O,
            interactionData: s ?? e.interaction_data,
            interactionMetadata: e.interaction_metadata,
            roleSubscriptionData: e.role_subscription_data,
            purchaseNotification: e.purchase_notification,
            poll: null == e.poll ? void 0 : (0, a.default)(e.poll),
            giftInfo: null == D ? void 0 : D,
          })
        );
      }
      function I(e, t) {
        return null != t.edited_timestamp
          ? {
              ...t,
              reactions: e.reactions,
              interaction_data: e.interaction_data,
            }
          : { ...e, ...t };
      }
      function T(e, t) {
        if (null != t.edited_timestamp)
          return y(t, {
            reactions: e.reactions,
            interactionData: e.interactionData,
          });
        let n = e;
        return (
          null != t.call && (n = n.set("call", C(t.call, e.timestamp))),
          null != t.attachments && (n = n.set("attachments", S(t))),
          null != t.content &&
            "" !== t.content &&
            (n = n.set("content", t.content)),
          null != t.embeds && (n = n.set("embeds", A(t))),
          t.pinned !== n.pinned && (n = n.set("pinned", t.pinned)),
          null != n.webhookId &&
            null != t.author &&
            (n = n.set("author", new l.default(t.author))),
          null != t.flags &&
            t.flags !== n.flags &&
            (n = n.set("flags", t.flags)),
          null != t.components && (n = n.set("components", t.components)),
          null != t.role_subscription_data &&
            (n = n.set("roleSubscriptionData", t.role_subscription_data)),
          null != t.reactions &&
            (n = n.set("reactions", N(e.reactions ?? t.reactions))),
          null != t.poll && (n = n.set("poll", (0, a.default)(t.poll))),
          n
        );
      }
      function S(e) {
        return null == e.attachments
          ? []
          : e.attachments.map(e => ({
              ...e,
              spoiler: e.filename.startsWith(E.SPOILER_ATTACHMENT_PREFIX),
            }));
      }
      function C(e, t) {
        if (null != e) {
          let n =
              null != e.ended_timestamp
                ? i()(new Date(e.ended_timestamp))
                : null,
            s = null != n ? i().duration(n.diff(t)) : null;
          return {
            participants: e.participants,
            endedTimestamp: n,
            duration: s,
          };
        }
        return null;
      }
      function A(e) {
        if (null == e.embeds) return [];
        let t = e.embeds.map(t => (0, g.sanitizeEmbed)(e.channel_id, e.id, t));
        return (0, g.mergeEmbedsOnURL)(t);
      }
      function N(e, t) {
        if (null == e && t?.results == null) return [];
        let n = t?.results?.answer_counts.map(e => ({
          count_details: { vote: e.count },
          me_vote: e.me_voted,
          emoji: { id: e.id.toString(), name: "", animated: !1 },
          me: !1,
          me_burst: !1,
          count: e.count,
          burst_count: 0,
        }));
        return [
          ...(e = e?.filter(e => e?.me_vote == null) ?? []),
          ...(n ?? []),
        ].map(e => {
          let t = { ...e };
          return (
            t?.count_details != null &&
              ((t.burst_count = t.count_details.burst ?? 0),
              (t.count = t.count_details.normal ?? 0)),
            t.count < 0 && (t.count = 0),
            t.burst_count < 0 && (t.burst_count = 0),
            t
          );
        });
      }
      let D = e =>
        0 === (0, o.getMessageStickers)(e).length || "" !== e.content;
    },
    263066: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
      var s = n("822534"),
        i = n("167044"),
        r = n("467006");
      function a(e, t) {
        return (
          !(
            null == t ||
            e.author.id !== t ||
            e.state !== r.MessageStates.SENT ||
            (0, i.default)(e) ||
            !(0, s.canEditMessageWithStickers)(e) ||
            e.hasFlag(r.MessageFlags.IS_VOICE_MESSAGE) ||
            null != e.referralTrialOfferId ||
            e.isPoll()
          ) && !0
        );
      }
    },
    653033: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
          isMentioned: function () {
            return u;
          },
          isRawMessageMentioned: function () {
            return o;
          },
        });
      var s = n("731865"),
        i = n("361733"),
        r = n("327271");
      function a(e) {
        let {
          message: t,
          userId: n,
          suppressEveryone: s = !1,
          suppressRoles: i = !1,
        } = e;
        return u({
          userId: n,
          channelId: t.channel_id,
          mentionEveryone: t.mentionEveryone,
          mentionUsers: t.mentions,
          mentionRoles: t.mentionRoles,
          suppressEveryone: s,
          suppressRoles: i,
        });
      }
      function o(e) {
        let {
          rawMessage: t,
          userId: n,
          suppressEveryone: s = !1,
          suppressRoles: i = !1,
        } = e;
        return u({
          userId: n,
          channelId: t.channel_id,
          mentionEveryone: t.mention_everyone ?? !1,
          mentionUsers: t.mentions?.map(e => e.id) ?? [],
          mentionRoles: t.mention_roles ?? [],
          suppressEveryone: s,
          suppressRoles: i,
        });
      }
      function u(e) {
        let {
          userId: t,
          channelId: n,
          mentionEveryone: a,
          mentionUsers: o,
          mentionRoles: u,
          suppressEveryone: d = !1,
          suppressRoles: l = !1,
        } = e;
        if ((a && !d) || o.includes(t)) return !0;
        if (l || null == u || 0 === u.length) return !1;
        let f = s.default.getChannel(n);
        if (null == f) return !1;
        let _ = f.getGuildId();
        if (null == _ || null == r.default.getGuild(_)) return !1;
        let c = i.default.getMember(_, t);
        return null != c && u.some(e => c.roles.includes(e));
      }
    },
    167044: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var s = n("751435");
      function i(e) {
        return !s.MessageTypesSets.USER_MESSAGE.has(e.type);
      }
    },
    805356: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
          getMessageAuthor: function () {
            return g;
          },
          getUserAuthor: function () {
            return h;
          },
          useNullableMessageAuthor: function () {
            return c;
          },
          useNullableUserAuthor: function () {
            return m;
          },
        });
      var s = n("512722"),
        i = n.n(s),
        r = n("661223"),
        a = n("731865"),
        o = n("361733"),
        u = n("327271"),
        d = n("606929"),
        l = n("871831"),
        f = n("439823");
      function _(e) {
        let t = c(e);
        return (
          i()(
            null != t,
            "Result cannot be null because the message is not null"
          ),
          t
        );
      }
      function c(e) {
        let t = (0, r.useStateFromStores)([a.default], () =>
            null == e ? null : a.default.getChannel(e.channel_id)
          ),
          n = e?.author?.id,
          s = t?.guild_id,
          i = (0, r.useStateFromStores)([o.default], () =>
            null == s || null == n ? null : o.default.getMember(s, n)
          ),
          _ = (0, r.useStateFromStores)(
            [l.default],
            () => l.default.getUser(n),
            [n]
          ),
          c = f.default.useName(e?.author.bot ? e?.author : _),
          g = (0, r.useStateFromStores)([u.default], () =>
            u.default.getGuild(s)
          ),
          m = (0, r.useStateFromStores)([d.default], () =>
            null != n && t?.isPrivate() ? d.default.getNickname(n) : null
          );
        return null == e
          ? null
          : E({
              user: e.author,
              channel: t,
              guild: g,
              userName: c,
              member: i,
              friendNickname: m,
            });
      }
      function g(e) {
        let t = a.default.getChannel(e.channel_id);
        return h(e.author, t);
      }
      function m(e, t) {
        let n = e?.id,
          s = t?.guild_id,
          i = (0, r.useStateFromStores)([o.default], () =>
            null == s || null == n ? null : o.default.getMember(s, n)
          ),
          a = (0, r.useStateFromStores)([u.default], () =>
            u.default.getGuild(s)
          ),
          l = (0, r.useStateFromStores)([d.default], () =>
            null != n && t?.isPrivate() ? d.default.getNickname(n) : null
          ),
          _ = f.default.useName(e);
        return E({
          user: e,
          channel: t,
          guild: a,
          member: i,
          userName: _,
          friendNickname: l,
        });
      }
      function h(e, t) {
        let n = e?.id,
          s = t?.guild_id,
          i = u.default.getGuild(s),
          r = null == s || null == n ? null : o.default.getMember(s, n),
          a =
            null != n && null != t && t.isPrivate()
              ? d.default.getNickname(n)
              : null;
        return E({
          user: e,
          channel: t,
          guild: i,
          member: r,
          friendNickname: a,
        });
      }
      function E(e) {
        let {
            user: t,
            channel: n,
            guild: s,
            member: i,
            userName: r,
            friendNickname: a,
          } = e,
          o = null == t ? "???" : r ?? f.default.getName(t);
        return t?.id == null || null == n
          ? { nick: o, colorString: void 0 }
          : s?.id == null
            ? { nick: a ?? o, colorString: void 0 }
            : null == i
              ? { nick: o, colorString: void 0 }
              : {
                  nick: i.nick ?? o,
                  colorString: i.colorString ?? void 0,
                  colorRoleName:
                    null != i.colorRoleId
                      ? s?.roles[i.colorRoleId]?.name
                      : void 0,
                  iconRoleId: i.iconRoleId,
                  guildMemberAvatar: i.avatar,
                };
      }
    },
    904145: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          MIDJOURNEY_BOT_ID: function () {
            return i;
          },
          MIDJOURNEY_GUILD_ID: function () {
            return s;
          },
        });
      let s = "662267976984297473",
        i = "936929561302675456";
    },
    260048: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          isEligibleForMidjourneyOnboarding: function () {
            return i;
          },
        });
      var s = n("942705");
      function i(e) {
        let { enabled: t } = s.MidjourneyOnboardingExperiment.getCurrentConfig({
          location: e,
        });
        return t;
      }
    },
    942705: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          MidjourneyOnboardingExperiment: function () {
            return s;
          },
        });
      let s = (0, n("516086").createExperiment)({
        kind: "user",
        id: "2023-11_midjourney_onboarding",
        label: "Midjourney Onboarding",
        defaultConfig: { enabled: !1 },
        treatments: [
          {
            id: 1,
            label:
              "Enables the accelerated Midjourney Onboarding & Discord experience for the user.",
            config: { enabled: !0 },
          },
        ],
      });
    },
    312616: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          hasRedirectedToGuild: function () {
            return d;
          },
          isEligibleForMidjourneyRedirect: function () {
            return u;
          },
          isMidjourneyOnboardingFlow: function () {
            return o;
          },
        }),
        n("661223");
      var s = n("327271"),
        i = n("632706"),
        r = n("260048"),
        a = n("904145");
      function o(e) {
        let { guildStore: t } =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
          n = t ?? s.default,
          i = n.getGuild(a.MIDJOURNEY_GUILD_ID),
          o =
            i?.joinedAt instanceof Date &&
            Date.now() - i.joinedAt.getTime() <= 36e5;
        return (
          1 === n.getGuildCount() &&
          o &&
          (0, r.isEligibleForMidjourneyOnboarding)(e)
        );
      }
      function u(e) {
        return (
          e.isDM() &&
          1 === e.rawRecipients.length &&
          e.rawRecipients[0].id === a.MIDJOURNEY_BOT_ID &&
          o("app")
        );
      }
      function d(e) {
        return new Promise((t, n) => {
          if (i.default.getGuildId() === e) {
            t();
            return;
          }
          let s = setTimeout(() => {
              a(), n();
            }, 3e3),
            r = () => {
              i.default.getGuildId() === e && (a(), t());
            },
            a = () => {
              i.default.removeChangeListener(r), clearTimeout(s);
            };
          i.default.addChangeListener(r);
        });
      }
    },
    618933: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        }),
        n("653041");
      var s = n("275676"),
        i = n("454836"),
        r = n("501769"),
        a = n("185003"),
        o = n("467006");
      let u = new Set(["darwin", "linux", "win32", "ios", "android"]);
      var d = new (class e {
        constructor() {
          (this._metrics = []),
            (this._intervalId = setInterval(() => {
              this._flush();
            }, 12e4));
        }
        increment(e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
            { name: n, tags: i } = e,
            o = { name: n, tags: (0, a.getGlobalTagsArray)() };
          null != i &&
            i.forEach(e => {
              o.tags.push(e);
            });
          let d = (function () {
            if ((0, r.isWeb)()) return "web";
            {
              let e = (0, r.getPlatformName)();
              return u.has(e) ? e : null;
            }
          })();
          null != d && o.tags.push(`platform:${d}`);
          let l = (function () {
            let e = "{{cf_shim}}RELEASE_CHANNEL{{/cf_shim}}";
            return s.ReleaseChannelsSets.ALL.has(e) ? e : null;
          })();
          null != l && o.tags.push(`release_channel:${l}`),
            this._metrics.push(o),
            (t || this._metrics.length >= 100) && this._flush();
        }
        _flush() {
          if (this._metrics.length > 0) {
            let e = [...this._metrics];
            i.default
              .post({
                url: o.Endpoints.METRICS,
                body: {
                  metrics: e,
                  client_info: {
                    built_at: "1709228937667",
                    build_number: "270980",
                  },
                },
                retries: 1,
              })
              .catch(t => {
                this._metrics.length + e.length < 100 &&
                  (this._metrics = [...this._metrics, ...e]);
              });
          }
          this._metrics = [];
        }
      })();
    },
    34887: function (e, t, n) {
      "use strict";
      function s() {
        return !1;
      }
      function i() {
        return null;
      }
      n.r(t),
        n.d(t, {
          getSignalStrength: function () {
            return i;
          },
          isSlowNetwork: function () {
            return s;
          },
        });
    },
    793266: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          inDesktopNotificationCenterExperiment: function () {
            return a;
          },
          useInDesktopNotificationCenterExperiment: function () {
            return r;
          },
        });
      var s = n("470079");
      let i = (0, n("516086").createExperiment)({
          kind: "user",
          id: "2022-11_desktop_notification_center",
          label: "Desktop notification center",
          defaultConfig: { enabled: !1 },
          treatments: [
            {
              id: 1,
              label: "Notification center desktop enabled",
              config: { enabled: !0 },
            },
          ],
        }),
        r = () => {
          let { enabled: e } = i.useExperiment(
            { location: "b8976e_1" },
            { autoTrackExposure: !1 }
          );
          return (
            s.useEffect(() => {
              i.trackExposure({ location: "b8976e_2" });
            }, []),
            e
          );
        },
        a = () => {
          let { enabled: e } = i.getCurrentConfig(
            { location: "b8976e_3" },
            { autoTrackExposure: !1 }
          );
          return e;
        };
    },
    668332: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return A;
          },
        }),
        n("653041");
      var s = n("661223"),
        i = n("312916"),
        r = n("62470");
      n("422557");
      var a = n("822534"),
        o = n("403850"),
        u = n("327271");
      n("606929");
      var d = n("871831"),
        l = n("84819"),
        f = n("702340");
      n("439823");
      var _ = n("596032"),
        c = n("358958"),
        g = n("467006"),
        m = n("30175");
      let h = {
        loading: !1,
        initialized: !1,
        errored: !1,
        isDataStale: !1,
        notifCenterItems: [],
        staleNotifCenterItems: [],
        notifCenterIds: new Set(),
        notifCenterLocalItems: [],
        paginationHasMore: !0,
        paginationCursor: void 0,
        notifCenterActive: !1,
        notifCenterTabFocused: !1,
      };
      function E(e) {
        return null != e.id && null != e.body && null != e.type;
      }
      function p() {
        h = {
          loading: !1,
          initialized: !1,
          errored: !1,
          isDataStale: !1,
          notifCenterItems: [],
          staleNotifCenterItems: [],
          notifCenterIds: new Set(),
          notifCenterLocalItems: [],
          paginationHasMore: !0,
          paginationCursor: void 0,
          notifCenterActive: !1,
          notifCenterTabFocused: !1,
        };
      }
      function v(e) {
        return {
          ...e,
          kind: "notification-center-item",
          message:
            null != e.message ? (0, a.createMessageRecord)(e.message) : void 0,
        };
      }
      function y(e) {
        let t =
          "NOTIFICATION_CENTER_ITEM_CREATE" === e.type ? v(e.item) : e.item;
        if (!h.initialized || !E(t) || h.notifCenterIds.has(t.id)) return !1;
        h.notifCenterIds.add(t.id),
          (h.notifCenterItems = [t, ...h.notifCenterItems]),
          h.notifCenterItems.sort((e, t) => l.default.compare(t.id, e.id));
      }
      function I(e, t) {
        h.notifCenterItems = h.notifCenterItems
          .map(n => (e.includes(n.id) ? { ...n, acked: t } : n))
          .filter(E);
      }
      function T(e, t, n) {
        return e.type === t && e.other_user?.id === n;
      }
      function S(e) {
        if (!(0, r.isGuildEventEnded)(e)) return;
        let t = t =>
            t.type ===
              _.NotificationCenterItems.GUILD_SCHEDULED_EVENT_STARTED &&
            t.guild_scheduled_event_id === e.id,
          n = e.name,
          s = u.default.getGuild(e.guild_id)?.name;
        h.notifCenterItems = h.notifCenterItems.map(e =>
          t(e)
            ? {
                ...e,
                disable_action: !0,
                body:
                  (0, f.isNullOrEmpty)(s) || (0, f.isNullOrEmpty)(n)
                    ? e.body
                    : m.default.Messages.NOTIFICATION_CENTER_GUILD_SCHEDULED_EVENT_ENDED.format(
                        { event_name: n, guild_name: s }
                      ),
              }
            : e
        );
      }
      class C extends s.default.PersistedStore {
        static #e = (this.displayName = "NotificationCenterItemsStore");
        static #t = (this.persistKey = "NotificationCenterItemsStore_v2");
        initialize(e) {
          if ((this.waitFor(d.default), null != e)) {
            let t = e.notifCenterItems.map(e => ({
              ...e,
              message: null != e.message ? new o.default(e.message) : void 0,
            }));
            t.length > 0 &&
              (h = {
                ...h,
                initialized: !0,
                isDataStale: !0,
                notifCenterItems: [],
                staleNotifCenterItems: t,
              });
          }
        }
        getState() {
          let e = e => ({
            ...e,
            message: null != e.message ? e.message.toJS() : void 0,
          });
          return {
            ...h,
            notifCenterItems: h.notifCenterItems.map(e),
            staleNotifCenterItems: h.staleNotifCenterItems.map(e),
          };
        }
        get loading() {
          return h.loading;
        }
        get initialized() {
          return h.initialized;
        }
        get items() {
          return h.isDataStale ? h.staleNotifCenterItems : h.notifCenterItems;
        }
        get hasMore() {
          return h.paginationHasMore;
        }
        get cursor() {
          return h.paginationCursor;
        }
        get errored() {
          return h.errored;
        }
        get active() {
          return h.notifCenterActive;
        }
        get localItems() {
          return h.notifCenterLocalItems;
        }
        get tabFocused() {
          return h.notifCenterTabFocused;
        }
      }
      var A = new C(i.default, {
        CONNECTION_OPEN: function (e) {
          p(),
            m.default.initialLanguageLoad.then(() => {
              let t = [];
              e.relationships.forEach(e => {
                let { type: n, user: s, since: i } = e;
                if (
                  n !== g.RelationshipTypes.PENDING_INCOMING ||
                  null == s ||
                  null == i
                )
                  return null;
                let r = d.default.getUser(s.id);
                if (null == r) return null;
                let a = (0, c.incomingFriendRequestLocalItem)(r, i);
                t.push(a);
              }),
                e.guilds.forEach(e => {
                  e.guild_scheduled_events.forEach(e => {
                    S(e);
                  });
                }),
                (h.notifCenterLocalItems = t);
            });
        },
        LOGOUT: p,
        NOTIFICATION_CENTER_ITEMS_ACK: function (e) {
          let { ids: t } = e;
          I(t, !0);
        },
        NOTIFICATION_CENTER_ITEMS_ACK_FAILURE: function (e) {
          let { ids: t } = e;
          I(t, !1);
        },
        GUILD_SCHEDULED_EVENT_UPDATE: function (e) {
          let { guildScheduledEvent: t } = e;
          S(t);
        },
        NOTIFICATION_CENTER_ITEM_CREATE: y,
        NOTIFICATION_CENTER_ITEM_DELETE: function (e) {
          let { id: t } = e;
          if (!h.notifCenterIds.has(t)) return !1;
          h.notifCenterIds.delete(t),
            (h.notifCenterItems = h.notifCenterItems.filter(e => e.id !== t));
        },
        NOTIFICATION_CENTER_ITEM_DELETE_FAILURE: y,
        LOAD_NOTIFICATION_CENTER_ITEMS: function () {
          h.loading = !0;
        },
        LOAD_NOTIFICATION_CENTER_ITEMS_FAILURE: function () {
          (h.loading = !1), (h.initialized = !0), (h.errored = !0);
        },
        LOAD_NOTIFICATION_CENTER_ITEMS_SUCCESS: function (e) {
          let { items: t, hasMore: n, cursor: s } = e;
          h.loading &&
            ((h.loading = !1),
            (h.initialized = !0),
            (h.errored = !1),
            (h.isDataStale = !1),
            (null == s || !h.notifCenterIds.has(s)) &&
              ((h.paginationHasMore = t.length > 0 && n),
              (h.paginationCursor = t.length > 0 ? s : void 0)),
            (h.notifCenterItems = [
              ...h.notifCenterItems,
              ...t.map(v).filter(e => !h.notifCenterIds.has(e.id)),
            ]),
            h.notifCenterItems.sort((e, t) => l.default.compare(t.id, e.id)),
            t.forEach(e => h.notifCenterIds.add(e.id)));
        },
        RESET_NOTIFICATION_CENTER: p,
        NOTIFICATION_CENTER_SET_ACTIVE: function (e) {
          let { active: t } = e;
          h.notifCenterActive = t;
        },
        NOTIFICATION_CENTER_TAB_FOCUSED: function (e) {
          let { focused: t } = e;
          h.notifCenterTabFocused = t;
        },
        RELATIONSHIP_ADD: function (e) {
          if (e.relationship.type === g.RelationshipTypes.PENDING_INCOMING) {
            let { user: t, since: n } = e.relationship;
            if (null == n) return null;
            let s = d.default.getUser(t.id);
            if (null == s) return null;
            h.notifCenterLocalItems = [
              ...h.notifCenterLocalItems,
              (0, c.incomingFriendRequestLocalItem)(s, n),
            ];
          }
          e.relationship.type === g.RelationshipTypes.FRIEND &&
            (h.notifCenterLocalItems = h.notifCenterLocalItems.map(t => {
              if (
                T(
                  t,
                  _.NotificationCenterLocalItems.INCOMING_FRIEND_REQUESTS,
                  e.relationship.user.id
                )
              ) {
                let n = d.default.getUser(e.relationship.user.id);
                return {
                  ...t,
                  acked: !0,
                  forceUnacked: !1,
                  local_id: `incoming_friend_requests_accepted_${e.relationship.user.id}_${t.id}`,
                  type: _.NotificationCenterLocalItems
                    .INCOMING_FRIEND_REQUESTS_ACCEPTED,
                  body: m.default.Messages.NOTIFICATION_CENTER_INCOMING_FRIEND_REQUEST_ACCEPTED.format(
                    {
                      username: `**${n?.globalName ?? e.relationship.user.username}**`,
                    }
                  ),
                };
              }
              return t;
            }));
        },
        RELATIONSHIP_REMOVE: function (e) {
          h.notifCenterLocalItems = h.notifCenterLocalItems.filter(
            t =>
              !(
                T(
                  t,
                  _.NotificationCenterLocalItems.INCOMING_FRIEND_REQUESTS,
                  e.relationship.id
                ) ||
                T(
                  t,
                  _.NotificationCenterLocalItems
                    .INCOMING_FRIEND_REQUESTS_ACCEPTED,
                  e.relationship.id
                )
              ) && !0
          );
        },
        NOTIFICATION_CENTER_ITEM_COMPLETED: function (e) {
          let { item_enum: t } = e;
          h.notifCenterItems = h.notifCenterItems
            .map(e =>
              e.item_enum === t ? { ...e, completed: !0, acked: !0 } : e
            )
            .filter(E);
        },
        NOTIFICATION_CENTER_ITEM_UPDATE: function (e) {
          let { item: t } = e;
          h.notifCenterItems = h.notifCenterItems
            .map(e => (e.id === t.id ? t : e))
            .filter(E);
        },
        SET_RECENT_MENTIONS_FILTER: p,
        MOBILE_NATIVE_UPDATE_CHECK_FINISHED: function (e) {
          let { newBuild: t } = e;
          if (null !== t) {
            let e = (0, c.mobileNativeUpdateAvailableLocalItem)(t);
            void 0 ===
              h.notifCenterLocalItems.find(t => t.local_id === e.local_id) &&
              (h.notifCenterLocalItems = [
                ...h.notifCenterLocalItems.filter(t => t.kind !== e.kind),
                e,
              ]);
          }
        },
      });
    },
    596032: function (e, t, n) {
      "use strict";
      var s, i, r, a, o, u, d, l, f, _, c;
      n.r(t),
        n.d(t, {
          ItemEnum: function () {
            return i;
          },
          NotificationCenterActionTypes: function () {
            return r;
          },
          NotificationCenterItems: function () {
            return o;
          },
          NotificationCenterLocalItems: function () {
            return u;
          },
          NotificationCenterTabs: function () {
            return a;
          },
        }),
        ((s || (s = {})).LANDING = "notification_center_landing"),
        ((d = i || (i = {}))[(d.UPDATE_PROFILE = 0)] = "UPDATE_PROFILE"),
        (d[(d.FIND_FRIENDS = 1)] = "FIND_FRIENDS"),
        (d[(d.ADD_FRIEND = 2)] = "ADD_FRIEND"),
        (d[(d.FIRST_MESSAGE = 3)] = "FIRST_MESSAGE"),
        ((l = r || (r = {})).MARK_ALL_READ = "mark_all_read"),
        (l.CLICKED = "clicked"),
        (l.FRIEND_REQUESTS_BUTTON_CLICK = "friend_requests_button_click"),
        (l.ACTION_BUTTON = "action_button"),
        ((f = a || (a = {})).ForYou = "ForYou"),
        (f.Mentions = "Mentions"),
        (f.MessageReminders = "MessageReminders"),
        ((_ = o || (o = {})).GO_LIVE_PUSH = "go_live_push"),
        (_.FRIEND_REQUEST_ACCEPTED = "friend_request_accepted"),
        (_.FRIEND_REQUEST_PENDING = "friend_request_pending"),
        (_.FRIEND_SUGGESTION_CREATED = "friend_suggestion_created"),
        (_.FRIEND_REQUEST_REMINDER = "friend_request_reminder"),
        (_.DM_FRIEND_NUDGE = "dm_friend_nudge"),
        (_.RECENT_MENTION = "recent_mention"),
        (_.REPLY_MENTION = "reply_mention"),
        (_.GUILD_SCHEDULED_EVENT_STARTED = "scheduled_guild_event_started"),
        (_.SYSTEM_DEMO = "system_demo"),
        (_.MISSED_MESSAGES = "missed_messages"),
        (_.TOP_MESSAGES = "top_messages"),
        (_.LIFECYCLE_ITEM = "lifecycle_item"),
        (_.TRENDING_CONTENT = "trending_content"),
        ((c = u || (u = {})).INCOMING_FRIEND_REQUESTS =
          "INCOMING_FRIEND_REQUESTS"),
        (c.INCOMING_FRIEND_REQUESTS_ACCEPTED =
          "INCOMING_FRIEND_REQUESTS_ACCEPTED"),
        (c.FRIEND_REQUESTS_GROUPED = "FRIEND_REQUESTS_GROUPED"),
        (c.MOBILE_NATIVE_UPDATE_AVAILABLE = "MOBILE_NATIVE_UPDATE_AVAILABLE");
    },
    358958: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getRelativeTimestamp: function () {
            return d;
          },
          inNotificationCenterEnabled: function () {
            return g;
          },
          incomingFriendRequestLocalItem: function () {
            return f;
          },
          isMentionItem: function () {
            return c;
          },
          isRemoteAcked: function () {
            return l;
          },
          mobileNativeUpdateAvailableLocalItem: function () {
            return _;
          },
        });
      var s = n("362939"),
        i = n("84819"),
        r = n("793266"),
        a = n("596032"),
        o = n("798236"),
        u = n("30175");
      let d = function (e) {
          let t =
            !(arguments.length > 1) || void 0 === arguments[1] || arguments[1];
          return (0, o.default)({
            since: e,
            getFormatter: t ? o.getAbbreviatedFormatter : o.getFullFormatter,
          });
        },
        l = (e, t) =>
          e.acked ||
          (t !== s.NOTIFICATION_CENTER_ACKED_BEFORE_ID_UNSET &&
            i.default.compare(t, e.id) >= 0);
      function f(e, t) {
        let n = i.default.fromTimestamp(new Date(t).getTime());
        return {
          acked: !1,
          forceUnacked: !0,
          other_user: e,
          kind: "notification-center-item",
          local_id: `incoming_friend_requests_${e.id}_${n}`,
          deeplink: `https://discord.com/users/${e.id}`,
          type: a.NotificationCenterLocalItems.INCOMING_FRIEND_REQUESTS,
          id: n,
          body: u.default.Messages.NOTIFICATION_CENTER_INCOMING_FRIEND_REQUEST.format(
            { username: `**${e.globalName ?? e.username}**` }
          ),
        };
      }
      function _(e) {
        let t = i.default.fromTimestamp(new Date().getTime());
        return {
          acked: !1,
          enableBadge: !0,
          body: `Update to build ${e.build} available!`,
          id: t,
          kind: "notification-center-item",
          local_id: `mobile_update_available_${e.build}`,
          type: a.NotificationCenterLocalItems.MOBILE_NATIVE_UPDATE_AVAILABLE,
          deeplink: e.urls.install.toString(),
        };
      }
      let c = e =>
        e.type === a.NotificationCenterItems.RECENT_MENTION ||
        e.type === a.NotificationCenterItems.REPLY_MENTION;
      function g() {
        return (0, r.inDesktopNotificationCenterExperiment)();
      }
    },
    798236: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
          getAbbreviatedFormatter: function () {
            return l;
          },
          getFullFormatter: function () {
            return f;
          },
        });
      var s = n("913527"),
        i = n.n(s),
        r = n("30175");
      let a = 3600,
        o = 86400,
        u = 2592e3,
        d = 31104e3,
        l = () => ({
          minutes: r.default.Messages.DURATION_MINUTES_SHORT,
          hours: r.default.Messages.DURATION_HOURS_SHORT,
          days: r.default.Messages.DURATION_DAYS_SHORT,
          months: r.default.Messages.DURATION_MONTHS_SHORT,
          years: r.default.Messages.DURATION_YEARS_SHORT,
        }),
        f = () => ({
          minutes: r.default.Messages.DURATION_MINUTES_AGO,
          hours: r.default.Messages.DURATION_HOURS_AGO,
          days: r.default.Messages.DURATION_DAYS_AGO,
          months: r.default.Messages.DURATION_MONTHS_AGO,
          years: r.default.Messages.DURATION_YEARS_AGO,
        });
      function _(e) {
        let { since: t, getFormatter: n } = e;
        return (function (e) {
          let { seconds: t, getFormatter: n } = e,
            s = n(),
            i = "";
          return (i =
            t < 60
              ? s.minutes.format({ minutes: 1 })
              : t < a
                ? s.minutes.format({ minutes: Math.floor(t / 60) })
                : t < o
                  ? s.hours.format({ hours: Math.floor(t / a) })
                  : t < u
                    ? s.days.format({ days: Math.floor(t / o) })
                    : t < d
                      ? s.months.format({ months: Math.floor(t / u) })
                      : s.years.format({ years: Math.floor(t / d) }));
        })({ seconds: i()().diff(i()(t), "s"), getFormatter: n });
      }
    },
    656150: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          Presets: function () {
            return s;
          },
          presetFromSettings: function () {
            return d;
          },
          presetName: function () {
            return l;
          },
        }),
        n("627341");
      var s,
        i,
        r = n("278074"),
        a = n("467006"),
        o = n("587361"),
        u = n("30175");
      function d(e, t) {
        return (0, r.match)([t, e])
          .with(
            [
              a.UserNotificationSettings.ALL_MESSAGES,
              o.UnreadSetting.ALL_MESSAGES,
            ],
            () => "all_messages"
          )
          .with(
            [a.UserNotificationSettings.ONLY_MENTIONS, o.UnreadSetting.UNSET],
            () => "mentions"
          )
          .with(
            [
              a.UserNotificationSettings.ONLY_MENTIONS,
              o.UnreadSetting.ONLY_MENTIONS,
            ],
            () => "mentions"
          )
          .with(
            [a.UserNotificationSettings.NO_MESSAGES, o.UnreadSetting.UNSET],
            () => "nothing"
          )
          .with(
            [
              a.UserNotificationSettings.NO_MESSAGES,
              o.UnreadSetting.ONLY_MENTIONS,
            ],
            () => "nothing"
          )
          .otherwise(() => "custom");
      }
      function l(e) {
        return (0, r.match)(e)
          .with("all_messages", () => u.default.Messages.NOTIFICATION_PRESET_1)
          .with("mentions", () => u.default.Messages.NOTIFICATION_PRESET_2)
          .with("nothing", () => u.default.Messages.NOTIFICATION_PRESET_3)
          .with("custom", () => u.default.Messages.NOTIFICATION_PRESET_CUSTOM)
          .exhaustive();
      }
      ((i = s || (s = {})).ALL_MESSAGES = "all_messages"),
        (i.MENTIONS = "mentions"),
        (i.NOTHING = "nothing"),
        (i.CUSTOM = "custom");
    },
    845532: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          filterScopes: function () {
            return f;
          },
          parseOAuth2AuthorizeProps: function () {
            return _;
          },
        }),
        n("653041");
      var s = n("593473"),
        i = n("736168"),
        r = n("768517"),
        a = n("731865"),
        o = n("632706"),
        u = n("694574"),
        d = n("90732"),
        l = n("477815");
      function f(e) {
        let t = e.filter(e => !d.RemovedScopes.includes(e));
        return (
          t.includes(l.OAuth2Scopes.BOT) &&
            !t.includes(l.OAuth2Scopes.APPLICATIONS_COMMANDS) &&
            t.push(l.OAuth2Scopes.APPLICATIONS_COMMANDS),
          t
        );
      }
      function _(e) {
        let t = (0, s.parse)(e, { arrayFormat: "bracket" }),
          n = u.default.NONE;
        try {
          n = r.default.deserialize(
            null != t.permissions && "" !== t.permissions ? t.permissions : "0"
          );
        } catch (e) {}
        let d = t.channel_id,
          l =
            t.guild_id ??
            a.default.getChannel(d)?.guild_id ??
            o.default.getGuildId() ??
            void 0;
        return {
          clientId: t.client_id ?? "",
          scopes: (t.scope ?? "").split(" ").filter(e => e.length > 0),
          responseType: t.response_type,
          redirectUri: t.redirect_uri,
          codeChallenge: t.code_challenge,
          codeChallengeMethod: t.code_challenge_method,
          state: t.state,
          permissions: n,
          channelId: d,
          guildId: l,
          prompt: t.prompt,
          disableGuildSelect: "true" === t.disable_guild_select,
          userInstall:
            t.integration_type ===
            i.ApplicationIntegrationType.USER_INSTALL.toString(),
        };
      }
    },
    676061: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getApplicationDetailsText: function () {
            return i;
          },
        });
      var s = n("30175");
      function i(e) {
        if (null != e.privacy_policy_url && null != e.terms_of_service_url)
          return s.default.Messages.OAUTH2_DETAILS_PRIVACY_POLICY_WITH_LINKS.format(
            {
              application: e.name,
              privacyPolicyURL: e.privacy_policy_url,
              termsOfServiceURL: e.terms_of_service_url,
            }
          );
        if (null != e.privacy_policy_url)
          return s.default.Messages.OAUTH2_DETAILS_PRIVACY_POLICY_WITH_PRIVACY_POLICY_LINK.format(
            { application: e.name, privacyPolicyURL: e.privacy_policy_url }
          );
        if (null != e.terms_of_service_url)
          return s.default.Messages.OAUTH2_DETAILS_PRIVACY_POLICY_WITH_TERMS_OF_SERVICE_LINK.format(
            { application: e.name, termsOfServiceURL: e.terms_of_service_url }
          );
        return s.default.Messages.OAUTH2_DETAILS_PRIVACY_POLICY.format({
          application: e.name,
        });
      }
    },
    383907: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          acceptWhitelist: function () {
            return u;
          },
          authorize: function () {
            return d;
          },
          fetchAuthorization: function () {
            return l;
          },
          fetchChannels: function () {
            return f;
          },
          finishUserCode: function () {
            return g;
          },
          finishUserCodeTwoWayLinkError: function () {
            return m;
          },
          logoutWithRedirect: function () {
            return _;
          },
          verifyUserCode: function () {
            return c;
          },
        });
      var s = n("736168"),
        i = n("185570"),
        r = n("454836"),
        a = n("720872"),
        o = n("467006");
      function u(e) {
        return r.default.post({
          url: o.Endpoints.OAUTH2_WHITELIST_ACCEPT,
          query: { token: e },
          oldFormErrors: !0,
        });
      }
      async function d(e) {
        let {
          authorize: t,
          clientId: n,
          scopes: i,
          responseType: a,
          redirectUri: u,
          codeChallenge: d,
          codeChallengeMethod: l,
          state: f,
          permissions: _,
          guildId: c,
          channelId: g,
          userInstall: m,
        } = e;
        return (
          await r.default.post({
            url: o.Endpoints.OAUTH2_AUTHORIZE,
            query: {
              client_id: n,
              response_type: a,
              redirect_uri: u,
              code_challenge: d,
              code_challenge_method: l,
              scope: i.join(" "),
              state: f,
            },
            body: {
              guild_id: c,
              webhook_channel_id: null != c && null != g ? g : void 0,
              channel_id: null == c && null != g ? g : void 0,
              permissions: _,
              authorize: t,
              integration_type: m
                ? s.ApplicationIntegrationType.USER_INSTALL
                : s.ApplicationIntegrationType.GUILD_INSTALL,
            },
            oldFormErrors: !0,
          })
        ).body;
      }
      async function l(e) {
        let {
          clientId: t,
          scopes: n,
          responseType: i,
          redirectUri: a,
          codeChallenge: u,
          codeChallengeMethod: d,
          state: l,
          userInstall: f,
        } = e;
        return (
          await r.default.get({
            url: o.Endpoints.OAUTH2_AUTHORIZE,
            query: {
              client_id: t,
              response_type: i,
              redirect_uri: a,
              code_challenge: u,
              code_challenge_method: d,
              scope: n.join(" "),
              state: l,
              integration_type: f
                ? s.ApplicationIntegrationType.USER_INSTALL
                : s.ApplicationIntegrationType.GUILD_INSTALL,
            },
            retries: 3,
            oldFormErrors: !0,
          })
        ).body;
      }
      async function f(e) {
        let { body: t } = await r.default.get({
          url: o.Endpoints.OAUTH2_AUTHORIZE_WEBHOOK_CHANNELS,
          query: { guild_id: e },
          oldFormErrors: !0,
        });
        return t;
      }
      function _(e) {
        a.default.logout((0, i.getLoginPath)(e.pathname + e.search, !1));
      }
      async function c(e) {
        return await r.default.post({
          url: o.Endpoints.OAUTH2_DEVICE_VERIFY,
          body: { user_code: e },
        });
      }
      async function g(e, t) {
        return await r.default.post({
          url: o.Endpoints.OAUTH2_DEVICE_FINISH,
          body: { user_code: e, result: t },
        });
      }
      async function m(e, t, n) {
        return await r.default.post({
          url: o.Endpoints.OAUTH2_DEVICE_FINISH,
          body: {
            user_code: e,
            result: "two_way_link_error",
            error_code: t,
            error_source: n,
          },
        });
      }
    },
    518805: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          convertOAuth2Authorization: function () {
            return i;
          },
        });
      var s = n("768517");
      function i(e) {
        if (null == e.guilds) return e;
        return {
          ...e,
          guilds: e.guilds.map(e => ({
            ...e,
            permissions: s.default.deserialize(e.permissions),
          })),
        };
      }
    },
    983054: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          OrderedPermissions: function () {
            return a;
          },
          containsDisallowedPermission: function () {
            return o;
          },
          getPermissionName: function () {
            return d;
          },
        });
      var s = n("768517"),
        i = n("467006"),
        r = n("30175");
      let a = [
        i.Permissions.ADMINISTRATOR,
        i.Permissions.MANAGE_GUILD,
        i.Permissions.MANAGE_ROLES,
        i.Permissions.MANAGE_CHANNELS,
        i.Permissions.KICK_MEMBERS,
        i.Permissions.BAN_MEMBERS,
        i.Permissions.CREATE_INSTANT_INVITE,
        i.Permissions.MANAGE_NICKNAMES,
        i.Permissions.CHANGE_NICKNAME,
        i.Permissions.MANAGE_GUILD_EXPRESSIONS,
        i.Permissions.CREATE_GUILD_EXPRESSIONS,
        i.Permissions.MANAGE_WEBHOOKS,
        i.Permissions.VIEW_AUDIT_LOG,
        i.Permissions.VIEW_CHANNEL,
        i.Permissions.MANAGE_EVENTS,
        i.Permissions.CREATE_EVENTS,
        i.Permissions.MODERATE_MEMBERS,
        i.Permissions.VIEW_GUILD_ANALYTICS,
        i.Permissions.VIEW_CREATOR_MONETIZATION_ANALYTICS,
        i.Permissions.SEND_MESSAGES,
        i.Permissions.SEND_MESSAGES_IN_THREADS,
        i.Permissions.CREATE_PUBLIC_THREADS,
        i.Permissions.CREATE_PRIVATE_THREADS,
        i.Permissions.SEND_TTS_MESSAGES,
        i.Permissions.MANAGE_MESSAGES,
        i.Permissions.MANAGE_THREADS,
        i.Permissions.EMBED_LINKS,
        i.Permissions.ATTACH_FILES,
        i.Permissions.READ_MESSAGE_HISTORY,
        i.Permissions.MENTION_EVERYONE,
        i.Permissions.ADD_REACTIONS,
        i.Permissions.USE_EXTERNAL_EMOJIS,
        i.Permissions.USE_EXTERNAL_STICKERS,
        i.Permissions.USE_APPLICATION_COMMANDS,
        i.Permissions.SEND_VOICE_MESSAGES,
        i.Permissions.USE_CLYDE_AI,
        i.Permissions.CONNECT,
        i.Permissions.SPEAK,
        i.Permissions.MUTE_MEMBERS,
        i.Permissions.DEAFEN_MEMBERS,
        i.Permissions.MOVE_MEMBERS,
        i.Permissions.USE_VAD,
        i.Permissions.PRIORITY_SPEAKER,
        i.Permissions.REQUEST_TO_SPEAK,
        i.Permissions.STREAM,
        i.Permissions.USE_EMBEDDED_ACTIVITIES,
        i.Permissions.USE_SOUNDBOARD,
        i.Permissions.USE_EXTERNAL_SOUNDS,
        i.Permissions.SET_VOICE_CHANNEL_STATUS,
      ];
      function o(e) {
        return Object.values(i.Permissions).some(
          t => s.default.has(e, t) && !a.includes(t)
        );
      }
      let u = {
        [i.Permissions.ADMINISTRATOR.toString()]: () =>
          r.default.Messages.ADMINISTRATOR,
        [i.Permissions.MANAGE_GUILD.toString()]: () =>
          r.default.Messages.MANAGE_SERVER,
        [i.Permissions.MANAGE_ROLES.toString()]: () =>
          r.default.Messages.MANAGE_ROLES,
        [i.Permissions.MANAGE_CHANNELS.toString()]: () =>
          r.default.Messages.MANAGE_CHANNELS,
        [i.Permissions.KICK_MEMBERS.toString()]: () =>
          r.default.Messages.KICK_MEMBERS,
        [i.Permissions.BAN_MEMBERS.toString()]: () =>
          r.default.Messages.BAN_MEMBERS,
        [i.Permissions.CREATE_INSTANT_INVITE.toString()]: () =>
          r.default.Messages.CREATE_INSTANT_INVITE,
        [i.Permissions.MANAGE_NICKNAMES.toString()]: () =>
          r.default.Messages.MANAGE_NICKNAMES,
        [i.Permissions.CHANGE_NICKNAME.toString()]: () =>
          r.default.Messages.CHANGE_NICKNAME,
        [i.Permissions.MANAGE_GUILD_EXPRESSIONS.toString()]: () =>
          r.default.Messages.MANAGE_EXPRESSIONS,
        [i.Permissions.CREATE_GUILD_EXPRESSIONS.toString()]: () =>
          r.default.Messages.CREATE_EXPRESSIONS,
        [i.Permissions.MANAGE_WEBHOOKS.toString()]: () =>
          r.default.Messages.MANAGE_WEBHOOKS,
        [i.Permissions.VIEW_AUDIT_LOG.toString()]: () =>
          r.default.Messages.VIEW_AUDIT_LOG,
        [i.Permissions.VIEW_CHANNEL.toString()]: () =>
          r.default.Messages.READ_MESSAGES,
        [i.Permissions.SEND_MESSAGES.toString()]: () =>
          r.default.Messages.SEND_MESSAGES,
        [i.Permissions.SEND_TTS_MESSAGES.toString()]: () =>
          r.default.Messages.SEND_TTS_MESSAGES,
        [i.Permissions.MANAGE_MESSAGES.toString()]: () =>
          r.default.Messages.MANAGE_MESSAGES,
        [i.Permissions.EMBED_LINKS.toString()]: () =>
          r.default.Messages.EMBED_LINKS,
        [i.Permissions.ATTACH_FILES.toString()]: () =>
          r.default.Messages.ATTACH_FILES,
        [i.Permissions.READ_MESSAGE_HISTORY.toString()]: () =>
          r.default.Messages.READ_MESSAGE_HISTORY,
        [i.Permissions.MENTION_EVERYONE.toString()]: () =>
          r.default.Messages.MENTION_EVERYONE,
        [i.Permissions.ADD_REACTIONS.toString()]: () =>
          r.default.Messages.ADD_REACTIONS,
        [i.Permissions.USE_EXTERNAL_EMOJIS.toString()]: () =>
          r.default.Messages.USE_EXTERNAL_EMOJIS,
        [i.Permissions.USE_EXTERNAL_STICKERS.toString()]: () =>
          r.default.Messages.USE_EXTERNAL_STICKERS,
        [i.Permissions.USE_APPLICATION_COMMANDS.toString()]: () =>
          r.default.Messages.USE_APPLICATION_COMMANDS,
        [i.Permissions.SEND_VOICE_MESSAGES.toString()]: () =>
          r.default.Messages.SEND_VOICE_MESSAGE,
        [i.Permissions.CONNECT.toString()]: () => r.default.Messages.CONNECT,
        [i.Permissions.SPEAK.toString()]: () => r.default.Messages.SPEAK,
        [i.Permissions.MUTE_MEMBERS.toString()]: () =>
          r.default.Messages.MUTE_MEMBERS,
        [i.Permissions.DEAFEN_MEMBERS.toString()]: () =>
          r.default.Messages.DEAFEN_MEMBERS,
        [i.Permissions.MOVE_MEMBERS.toString()]: () =>
          r.default.Messages.MOVE_MEMBERS,
        [i.Permissions.USE_VAD.toString()]: () => r.default.Messages.USE_VAD,
        [i.Permissions.PRIORITY_SPEAKER.toString()]: () =>
          r.default.Messages.PRIORITY_SPEAKER,
        [i.Permissions.CREATE_PUBLIC_THREADS.toString()]: () =>
          r.default.Messages.CREATE_PUBLIC_THREADS,
        [i.Permissions.CREATE_PRIVATE_THREADS.toString()]: () =>
          r.default.Messages.CREATE_PRIVATE_THREADS,
        [i.Permissions.SEND_MESSAGES_IN_THREADS.toString()]: () =>
          r.default.Messages.SEND_MESSAGES_IN_THREADS,
        [i.Permissions.MANAGE_THREADS.toString()]: () =>
          r.default.Messages.MANAGE_THREADS,
        [i.Permissions.MANAGE_EVENTS.toString()]: () =>
          r.default.Messages.MANAGE_EVENTS,
        [i.Permissions.CREATE_EVENTS.toString()]: () =>
          r.default.Messages.CREATE_EVENTS,
        [i.Permissions.MODERATE_MEMBERS.toString()]: () =>
          r.default.Messages.MODERATE_MEMBERS_PERMISSION_INTERNAL,
        [i.Permissions.REQUEST_TO_SPEAK.toString()]: () =>
          r.default.Messages.REQUEST_TO_SPEAK,
        [i.Permissions.VIEW_GUILD_ANALYTICS.toString()]: () =>
          r.default.Messages.VIEW_GUILD_ANALYTICS,
        [i.Permissions.VIEW_CREATOR_MONETIZATION_ANALYTICS.toString()]: () =>
          r.default.Messages.VIEW_CREATOR_MONETIZATION_ANALYTICS,
        [i.Permissions.STREAM.toString()]: () => r.default.Messages.VIDEO,
        [i.Permissions.USE_EMBEDDED_ACTIVITIES.toString()]: () =>
          r.default.Messages.USE_EMBEDDED_ACTIVITIES,
        [i.Permissions.USE_SOUNDBOARD.toString()]: () =>
          r.default.Messages.USE_SOUNDBOARD,
        [i.Permissions.USE_EXTERNAL_SOUNDS.toString()]: () =>
          r.default.Messages.USE_EXTERNAL_SOUNDS,
        [i.Permissions.USE_CLYDE_AI.toString()]: () =>
          r.default.Messages.ROLE_PERMISSIONS_USE_CLYDE_AI,
        [i.Permissions.SET_VOICE_CHANNEL_STATUS.toString()]: () =>
          r.default.Messages.VOICE_CHANNEL_STATUS_PERMISSION_TITLE,
      };
      function d(e) {
        let t = u[e.toString()];
        if (null == t)
          throw Error(
            `Unknown permission. Did you provide a _single_ bit flag? Perm: ${e}`
          );
        return t();
      }
    },
    90732: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          FAKE_SCOPES: function () {
            return r;
          },
          OrderedAccountScopes: function () {
            return a;
          },
          RemovedScopes: function () {
            return u;
          },
          ValidScopes: function () {
            return o;
          },
          getScopeName: function () {
            return d;
          },
          getSecurityMessage: function () {
            return l;
          },
        });
      var s = n("467006"),
        i = n("30175");
      let r = [
          () => i.default.Messages.OAUTH2_FAKE_SCOPE_1,
          () => i.default.Messages.OAUTH2_FAKE_SCOPE_2,
          () => i.default.Messages.OAUTH2_FAKE_SCOPE_3,
          () => i.default.Messages.OAUTH2_FAKE_SCOPE_4,
          () => i.default.Messages.OAUTH2_FAKE_SCOPE_5,
          () => i.default.Messages.OAUTH2_FAKE_SCOPE_6,
          () => i.default.Messages.OAUTH2_FAKE_SCOPE_7,
          () => i.default.Messages.OAUTH2_FAKE_SCOPE_8,
        ],
        a = [
          s.OAuth2Scopes.BOT,
          s.OAuth2Scopes.IDENTIFY,
          s.OAuth2Scopes.EMAIL,
          s.OAuth2Scopes.CONNECTIONS,
          s.OAuth2Scopes.MESSAGES_READ,
          s.OAuth2Scopes.GUILDS,
          s.OAuth2Scopes.GUILDS_JOIN,
          s.OAuth2Scopes.GUILDS_MEMBERS_READ,
          s.OAuth2Scopes.GDM_JOIN,
          s.OAuth2Scopes.RPC,
          s.OAuth2Scopes.RPC_NOTIFICATIONS_READ,
          s.OAuth2Scopes.RPC_VOICE_READ,
          s.OAuth2Scopes.RPC_VOICE_WRITE,
          s.OAuth2Scopes.RPC_VIDEO_READ,
          s.OAuth2Scopes.RPC_VIDEO_WRITE,
          s.OAuth2Scopes.RPC_SCREENSHARE_READ,
          s.OAuth2Scopes.RPC_SCREENSHARE_WRITE,
          s.OAuth2Scopes.RPC_ACTIVITIES_WRITE,
          s.OAuth2Scopes.APPLICATIONS_BUILDS_UPLOAD,
          s.OAuth2Scopes.APPLICATIONS_BUILDS_READ,
          s.OAuth2Scopes.APPLICATIONS_COMMANDS,
          s.OAuth2Scopes.APPLICATIONS_COMMANDS_UPDATE,
          s.OAuth2Scopes.APPLICATIONS_COMMANDS_PERMISSIONS_UPDATE,
          s.OAuth2Scopes.APPLICATIONS_STORE_UPDATE,
          s.OAuth2Scopes.APPLICATIONS_ENTITLEMENTS,
          s.OAuth2Scopes.ACTIVITIES_READ,
          s.OAuth2Scopes.ACTIVITIES_WRITE,
          s.OAuth2Scopes.RELATIONSHIPS_READ,
          s.OAuth2Scopes.VOICE,
          s.OAuth2Scopes.DM_CHANNELS_READ,
          s.OAuth2Scopes.ROLE_CONNECTIONS_WRITE,
        ],
        o = a.concat([s.OAuth2Scopes.WEBHOOK_INCOMING, s.OAuth2Scopes.BOT]),
        u = ["rpc.api"];
      function d(e, t) {
        switch (e) {
          case s.OAuth2Scopes.IDENTIFY:
            return i.default.Messages.SCOPE_IDENTIFY;
          case s.OAuth2Scopes.EMAIL:
            return i.default.Messages.SCOPE_EMAIL;
          case s.OAuth2Scopes.BOT:
            return i.default.Messages.SCOPE_BOT;
          case s.OAuth2Scopes.CONNECTIONS:
            return i.default.Messages.SCOPE_CONNECTIONS;
          case s.OAuth2Scopes.MESSAGES_READ:
            return i.default.Messages.SCOPE_MESSAGES_READ;
          case s.OAuth2Scopes.GUILDS:
            return i.default.Messages.SCOPE_GUILDS;
          case s.OAuth2Scopes.GUILDS_JOIN:
            return i.default.Messages.SCOPE_GUILDS_JOIN;
          case s.OAuth2Scopes.GUILDS_MEMBERS_READ:
            if (t.includes(s.OAuth2Scopes.VOICE))
              return i.default.Messages.SCOPE_GUILDS_MEMBERS_READ_VOICE;
            return i.default.Messages.SCOPE_GUILDS_MEMBERS_READ;
          case s.OAuth2Scopes.GDM_JOIN:
            return i.default.Messages.SCOPE_GDM_JOIN;
          case s.OAuth2Scopes.RPC:
            return i.default.Messages.SCOPE_RPC;
          case s.OAuth2Scopes.RPC_NOTIFICATIONS_READ:
            return i.default.Messages.SCOPE_RPC_NOTIFICATIONS_READ;
          case s.OAuth2Scopes.RPC_VOICE_WRITE:
            return i.default.Messages.SCOPE_RPC_VOICE_WRITE;
          case s.OAuth2Scopes.RPC_VIDEO_READ:
            return i.default.Messages.SCOPE_RPC_VIDEO_READ;
          case s.OAuth2Scopes.RPC_VIDEO_WRITE:
            return i.default.Messages.SCOPE_RPC_VIDEO_WRITE;
          case s.OAuth2Scopes.RPC_SCREENSHARE_READ:
            return i.default.Messages.SCOPE_RPC_SCREENSHARE_READ;
          case s.OAuth2Scopes.RPC_SCREENSHARE_WRITE:
            return i.default.Messages.SCOPE_RPC_SCREENSHARE_WRITE;
          case s.OAuth2Scopes.RPC_VOICE_READ:
            return i.default.Messages.SCOPE_RPC_VOICE_READ;
          case s.OAuth2Scopes.RPC_ACTIVITIES_WRITE:
            return i.default.Messages.SCOPE_RPC_ACTIVITIES_WRITE;
          case s.OAuth2Scopes.APPLICATIONS_BUILDS_UPLOAD:
            return i.default.Messages.SCOPE_APPLICATIONS_BUILDS_UPLOAD;
          case s.OAuth2Scopes.APPLICATIONS_BUILDS_READ:
            return i.default.Messages.SCOPE_APPLICATIONS_BUILDS_READ;
          case s.OAuth2Scopes.APPLICATIONS_COMMANDS:
            return i.default.Messages.SCOPE_APPLICATIONS_COMMANDS;
          case s.OAuth2Scopes.APPLICATIONS_COMMANDS_UPDATE:
            return i.default.Messages.SCOPE_APPLICATIONS_COMMANDS_UPDATE;
          case s.OAuth2Scopes.APPLICATIONS_COMMANDS_PERMISSIONS_UPDATE:
            return i.default.Messages
              .SCOPE_APPLICATIONS_COMMANDS_PERMISSIONS_UPDATE;
          case s.OAuth2Scopes.APPLICATIONS_STORE_UPDATE:
            return i.default.Messages.SCOPE_APPLICATIONS_STORE_UPDATE;
          case s.OAuth2Scopes.APPLICATIONS_ENTITLEMENTS:
            return i.default.Messages.SCOPE_APPLICATIONS_ENTITLEMENTS;
          case s.OAuth2Scopes.ACTIVITIES_READ:
            return i.default.Messages.SCOPE_ACTIVITIES_READ;
          case s.OAuth2Scopes.ACTIVITIES_WRITE:
            return i.default.Messages.SCOPE_ACTIVITIES_WRITE;
          case s.OAuth2Scopes.RELATIONSHIPS_READ:
            return i.default.Messages.SCOPE_RELATIONSHIPS_READ;
          case s.OAuth2Scopes.VOICE:
            return i.default.Messages.SCOPE_VOICE;
          case s.OAuth2Scopes.DM_CHANNELS_READ:
            return i.default.Messages.SCOPE_DM_CHANNELS_READ;
          case s.OAuth2Scopes.ROLE_CONNECTIONS_WRITE:
            return i.default.Messages.SCOPE_ROLE_CONNECTIONS_WRITE;
          default:
            return e;
        }
      }
      function l(e) {
        return e.includes(s.OAuth2Scopes.MESSAGES_READ)
          ? i.default.Messages.OAUTH2_CAN_READ_NOTICE.format()
          : i.default.Messages.OAUTH2_CANNOT_READ_SEND_NOTICE.format();
      }
    },
    904297: function (e, t, n) {
      "use strict";
      var s, i;
      n.r(t),
        n.d(t, {
          OAuth2Prompts: function () {
            return s;
          },
        }),
        ((i = s || (s = {})).NONE = "none"),
        (i.CONSENT = "consent");
    },
    332093: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return T;
          },
        }),
        n("789020"),
        n("216116"),
        n("78328"),
        n("815648");
      var s = n("735250");
      n("470079");
      var i = n("803997"),
        r = n.n(i),
        a = n("165750"),
        o = n("310929"),
        u = n("8004"),
        d = n("543124"),
        l = n("87645"),
        f = n("187281"),
        _ = n("392867"),
        c = n("629546"),
        g = n("984362"),
        m = n("84819"),
        h = n("676061"),
        E = n("90732"),
        p = n("467006"),
        v = n("477815"),
        y = n("30175"),
        I = n("158148");
      function T(e) {
        let t,
          {
            application: n,
            scopes: i,
            redirectUri: r,
            approximateGuildCount: o,
            isEmbeddedFlow: T,
            embeddedActivityConfig: C,
          } = e,
          A = new Date(m.default.extractTimestamp(n.id)),
          N = (0, E.getSecurityMessage)(i),
          D = (0, g.hasFlag)(n.flags ?? 0, p.ApplicationFlags.EMBEDDED);
        if (null != r && !D && !T) {
          let e = new URL(r);
          t = null != e.host && e.host.length > 0 ? e.origin : e.href;
        }
        return (0, s.jsxs)("div", {
          className: I.applicationDetails,
          children: [
            null != t
              ? (0, s.jsx)(S, {
                  className: I.redirectWarning,
                  icon: l.default,
                  text: y.default.Messages.OAUTH2_DETAILS_REDIRECT.format({
                    origin: t,
                  }),
                })
              : null,
            (0, s.jsx)(S, {
              icon: f.default,
              text: (0, h.getApplicationDetailsText)(n),
            }),
            (0, s.jsx)(S, {
              icon: u.default,
              text: y.default.Messages.OAUTH2_DETAILS_CREATION_DATE.format({
                date: A,
              }),
            }),
            i.includes(v.OAuth2Scopes.BOT) && null != o
              ? (0, s.jsx)(S, {
                  icon: _.default,
                  text: y.default.Messages.OAUTH2_DETAILS_GUILDS.format({
                    guildCount: o,
                  }),
                })
              : null,
            (0, s.jsx)(S, { icon: c.default, text: N }),
            C?.has_csp_exception
              ? (0, s.jsx)(S, {
                  icon: d.default,
                  text: y.default.Messages.OAUTH2_IP_LOCATION_DISCLOSURE,
                })
              : null,
            C?.displays_advertisements
              ? (0, s.jsx)(S, {
                  icon: a.EmbedIcon,
                  text: y.default.Messages.OAUTH2_ADVERTISEMENTS_DISCLOSURE,
                })
              : null,
          ],
        });
      }
      function S(e) {
        let { icon: t, text: n, className: i } = e;
        return (0, s.jsxs)("div", {
          className: r()(I.entry, i),
          children: [
            (0, s.jsx)(t, { className: I.entryIcon }),
            (0, s.jsx)(o.Text, {
              variant: "text-xs/medium",
              color: "text-muted",
              className: I.entryInner,
              children: n,
            }),
          ],
        });
      }
    },
    498202: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          OAuth2Authorize: function () {
            return X;
          },
          OAuth2AuthorizeModal: function () {
            return q;
          },
          OAuth2AuthorizePage: function () {
            return $;
          },
          getOAuth2AuthorizeProps: function () {
            return et;
          },
          openOAuth2Modal: function () {
            return ee;
          },
          openOAuth2ModalWithCreateGuildModal: function () {
            return J;
          },
          useOAuth2AuthorizeForm: function () {
            return Q;
          },
        });
      var s,
        i,
        r,
        a,
        o = n("735250"),
        u = n("470079"),
        d = n("613828"),
        l = n("729594"),
        f = n("768517"),
        _ = n("661223"),
        c = n("255012"),
        g = n("910838"),
        m = n("707158"),
        h = n("886083"),
        E = n("123576"),
        p = n("134223"),
        v = n("244180"),
        y = n("432937"),
        I = n("624945"),
        T = n("581431"),
        S = n("312616"),
        C = n("521588"),
        A = n("535291"),
        N = n("262047"),
        D = n("370275"),
        O = n("694574"),
        R = n("366230"),
        P = n("845532"),
        b = n("383907"),
        M = n("518805"),
        V = n("983054"),
        L = n("90732"),
        k = n("904297"),
        w = n("332093"),
        U = n("77069"),
        G = n("7364"),
        F = n("396502"),
        B = n("299241"),
        H = n("165740"),
        x = n("479496"),
        Y = n("467006"),
        j = n("326130"),
        K = n("30175"),
        W = n("94932");
      let z = "oauth2-authorize-header-id";
      function $() {
        let e = (0, d.useLocation)(),
          t = u.useMemo(
            () => (0, P.parseOAuth2AuthorizeProps)(e.search),
            [e.search]
          );
        return (
          (0, y.default)(),
          (0, o.jsx)(H.OAuth2Page, {
            children: (0, o.jsx)(X, { ...t, showLogout: !0 }),
          })
        );
      }
      function q(e) {
        let { transitionState: t, ...n } = e;
        return (0, o.jsx)(H.OAuth2Modal, {
          transitionState: t,
          "aria-labelledby": z,
          children: (0, o.jsx)(X, { ...n, scrollable: !0 }),
        });
      }
      function X(e) {
        let { scrollable: t, ...n } = e,
          { header: s, body: i, footer: r, nextStep: a, appDetails: u } = Q(n),
          d = (0, o.jsxs)(o.Fragment, {
            children: [
              (0, o.jsxs)("div", {
                className: W.content,
                children: [s, i, null == a ? u : null],
              }),
              r,
            ],
          });
        return t
          ? (0, o.jsx)("div", {
              className: W.authorize,
              children: (0, o.jsx)(m.ScrollerThin, {
                orientation: "auto",
                children: d,
              }),
            })
          : (0, o.jsx)("div", {
              className: W.authorize,
              children: (0, o.jsx)("div", { children: d }),
            });
      }
      function Q(e) {
        let t,
          n,
          s,
          {
            clientId: i,
            scopes: r,
            responseType: a,
            redirectUri: g,
            codeChallenge: m,
            codeChallengeMethod: y,
            state: T,
            guildId: S,
            channelId: H,
            permissions: $,
            prompt: q,
            disableGuildSelect: X,
            showLogout: Q = !1,
            authorization: Z,
            callback: J,
            callbackWithoutPost: ee,
            onClose: et,
            cancelCompletesFlow: en = !0,
            isTrustedName: es = !1,
            isEmbeddedFlow: ei = !1,
            userInstall: er = !1,
          } = e,
          ea = u.useMemo(() => (0, P.filterScopes)(r), [r]),
          eo = (0, d.useLocation)(),
          eu =
            I.default.useExperiment({ location: "auth web" })
              .userAppsTreatment === I.UserAppsTreatment.ALLOWED;
        !eu && (er = !1);
        let [ed, el] = u.useState(0),
          [ef, e_] = u.useState(null),
          [ec, eg] = u.useState(O.default.NONE),
          [em, eh] = u.useState(1),
          [eE, ep] = u.useState(null),
          [ev] = u.useState(L.OrderedAccountScopes.filter(e => ea.includes(e))),
          [ey, eI] = u.useState(S ?? null),
          [eT, eS] = u.useState(H ?? null),
          [eC, eA] = u.useState(!1),
          eN = u.useMemo(
            () => ef?.guilds?.find(e => e.id === ey),
            [ef?.guilds, ey]
          ),
          eD = (0, _.useStateFromStores)([p.default], () =>
            p.default.getCurrentEmbeddedActivity()
          ),
          eO = (0, _.useStateFromStoresObject)(
            [E.default, p.default],
            () => {
              let e;
              let t = E.default.getIsEnabled();
              return (0, D.isNotNullish)(eD) &&
                ((e = p.default
                  .getShelfActivities(eD.guildId)
                  .find(e => e.application_id === eD.applicationId)),
                t &&
                  void 0 === e &&
                  (e = E.default
                    .getDeveloperShelfItems()
                    .find(
                      e => e.id === eD.applicationId
                    )?.embeddedActivityConfig),
                (0, D.isNotNullish)(e))
                ? { ...j.DEFAULT_EMBEDDED_ACTIVITY_CONFIG, ...e }
                : {};
            },
            [eD]
          ),
          eR = Object.keys(eO).length > 0 ? eO : null,
          eP = u.useCallback(
            async e => {
              if (null != ee) {
                ee(e);
                return;
              }
              if (!e && !en) {
                null != J &&
                  (J({ application: ef?.application, guild: eN }), et?.());
                return;
              }
              try {
                eA(!0);
                let t = await (0, b.authorize)({
                  authorize: e,
                  clientId: i,
                  scopes: ea,
                  responseType: a,
                  redirectUri: g,
                  codeChallenge: m,
                  codeChallengeMethod: y,
                  state: T,
                  permissions: f.default.remove($ ?? O.default.NONE, ec),
                  guildId: null == ey || er ? void 0 : ey,
                  channelId: null != eT ? eT : void 0,
                  userInstall: er,
                });
                if (null != J)
                  J({
                    application: ef?.application,
                    location: t.location,
                    guild: eN,
                  }),
                    et?.();
                else if (null != t.location) {
                  let { host: e, path: n } = l.parse(t.location);
                  R.default.isDiscordHostname(e) &&
                  n === Y.Routes.OAUTH2_AUTHORIZED
                    ? (0, C.transitionTo)(Y.Routes.OAUTH2_AUTHORIZED, {
                        state: { application: ef?.application, guild: eN },
                      })
                    : (window.location = t.location);
                } else eA(!1);
              } catch (t) {
                let e = t.body;
                e?.message != null && "" !== e.message
                  ? ep(Error(e.message))
                  : ep(e),
                  eh(1),
                  el(2),
                  eA(!1);
              }
            },
            [
              J,
              ee,
              i,
              m,
              y,
              ec,
              et,
              $,
              g,
              a,
              ea,
              ey,
              eT,
              T,
              en,
              ef?.application,
              eN,
              er,
            ]
          ),
          eb = u.useRef(!1),
          eM = u.useCallback(async () => {
            if (0 === ed) {
              if ((el(1), !N.default.isAuthenticated())) {
                (0, b.logoutWithRedirect)(eo);
                return;
              }
              if (!eb.current) {
                eb.current = !0;
                try {
                  let e =
                    null != Z
                      ? Z
                      : await (0, b.fetchAuthorization)({
                          clientId: i,
                          scopes: ea,
                          responseType: a,
                          redirectUri: g,
                          codeChallenge: m,
                          codeChallengeMethod: y,
                          state: T,
                          userInstall: eu && er,
                        });
                  e_((0, M.convertOAuth2Authorization)(e)),
                    q === k.OAuth2Prompts.NONE && e.authorized ? eP(!0) : el(2),
                    (0, v.trackWithMetadata)(
                      Y.AnalyticEvents.OAUTH2_AUTHORIZE_VIEWED,
                      { application_id: e.application.id }
                    );
                } catch (n) {
                  let { status: e, body: t } = n;
                  if (401 === e) {
                    (0, b.logoutWithRedirect)(eo);
                    return;
                  }
                  ep(
                    Error(
                      null != t.message
                        ? t.message
                        : `${Object.keys(t)[0]}: ${Object.values(t)[0]}`
                    )
                  ),
                    el(2);
                } finally {
                  eb.current = !1;
                }
              }
            }
          }, [Z, i, m, y, ed, eo, q, g, a, ea, eP, T, er, eu]),
          eV = u.useCallback((e, t) => {
            eg(n => (e ? f.default.remove(n, t) : f.default.add(n, t)));
          }, []);
        u.useEffect(() => {
          let e = ea.filter(e => !L.ValidScopes.includes(e));
          0 === ea.length
            ? (ep(Error("No scopes were provided.")), el(2))
            : e.length > 0
              ? (ep(Error(`Invalid scope: ${e[0]}`)), el(2))
              : (0, V.containsDisallowedPermission)($ ?? O.default.NONE)
                ? (ep(Error("Invalid permission(s) provided.")), el(2))
                : eM();
        }, [eM, ea, $]);
        let eL = null != eT ? ef?.channels?.find(e => e.id === eT) : null,
          ek = null != ey ? ef?.guilds?.find(e => e.id === ey) : null;
        if (
          (u.useEffect(() => {
            null != ef &&
              (null != eL ? eI(null) : null == ek && (eI(null), eS(null)));
          }, [ef, ek, eL]),
          eE instanceof Error)
        )
          return { body: (0, o.jsx)(x.OAuth2Error, { message: eE.message }) };
        if (2 !== ed || null == ef) return { body: (0, o.jsx)(h.Spinner, {}) };
        let ew = new A.default(ef.user),
          eU = ef.bot?.approximate_guild_count,
          eG = !1;
        switch (em) {
          case 1:
            let eF = null == eE || eE instanceof Error ? {} : eE,
              eB = ef.guilds?.sort((e, t) =>
                e.name.toLowerCase().localeCompare(t.name.toLowerCase())
              ),
              eH =
                ea.includes(Y.OAuth2Scopes.BOT) ||
                ea.includes(Y.OAuth2Scopes.WEBHOOK_INCOMING) ||
                ea.includes(Y.OAuth2Scopes.APPLICATIONS_COMMANDS);
            (t = (0, o.jsxs)(o.Fragment, {
              children: [
                (0, o.jsx)(U.default, {
                  application: ef.application,
                  accountScopes: ev,
                  errors: eF,
                  isTrustedName: es,
                }),
                null == eL && eH && !er
                  ? (0, o.jsx)(F.GuildSelector, {
                      error: (eF[Y.OAuth2Scopes.BOT] ??
                        eF[Y.OAuth2Scopes.APPLICATIONS_COMMANDS] ??
                        [])[0],
                      selectedGuildId: ey,
                      onGuildChange: e => {
                        eI(e);
                      },
                      guilds: eB ?? [],
                      disabled: "" !== ey && !0 === X,
                    })
                  : null,
                ea.includes(Y.OAuth2Scopes.WEBHOOK_INCOMING)
                  ? (0, o.jsx)(F.WebhookGuildChannelSelector, {
                      error: (eF[Y.OAuth2Scopes.WEBHOOK_INCOMING] ?? [])[0],
                      selectedChannelId: eT,
                      selectedGuildId: ey,
                      onChannelChange: e => eS(e),
                    })
                  : null,
              ],
            })),
              ea.includes(Y.OAuth2Scopes.BOT) &&
                !f.default.equals($, O.default.NONE) &&
                (s = 2);
            let ex =
              null != ek &&
              ea.includes(Y.OAuth2Scopes.WEBHOOK_INCOMING) &&
              null == eT;
            eG = !er && ((eH && null == ek && null == eL) || ex);
            break;
          case 2:
            (t = (0, o.jsx)(G.default, {
              application: ef.application,
              permissions: $ ?? O.default.NONE,
              deniedPermissions: ec,
              onPermissionsChange: eV,
              guild: ek,
            })),
              (n = 1);
        }
        let eY = (0, o.jsx)(w.default, {
            embeddedActivityConfig: eR,
            application: ef.application,
            scopes: ea,
            redirectUri: ef.redirect_uri ?? null,
            approximateGuildCount: void 0 !== eU ? eU : null,
            isEmbeddedFlow: ei,
          }),
          ej = (0, o.jsxs)("div", {
            className: W.footer,
            children: [
              null != n
                ? (0, o.jsx)(c.Button, {
                    look: c.Button.Looks.LINK,
                    color: c.Button.Colors.PRIMARY,
                    onClick: () => eh(n),
                    children: K.default.Messages.BACK,
                  })
                : (0, o.jsx)(c.Button, {
                    look: c.Button.Looks.LINK,
                    color: c.Button.Colors.PRIMARY,
                    onClick: () => eP(!1),
                    children: K.default.Messages.CANCEL,
                  }),
              null != s
                ? (0, o.jsx)(c.Button, {
                    onClick: () => eh(s),
                    disabled: eG,
                    children: K.default.Messages.CONTINUE,
                  })
                : (0, o.jsx)(c.Button, {
                    onClick: () => eP(!0),
                    disabled: eG,
                    submitting: eC,
                    children: K.default.Messages.AUTHORIZE,
                  }),
            ],
          });
        return {
          header: (0, o.jsx)(B.default, {
            id: z,
            user: ew,
            application: ef.application,
            bot: ef.bot,
            accountScopes: ev,
            showLogout: Q || !1,
            location: eo,
            isTrustedName: es,
          }),
          body: t,
          footer: ej,
          nextStep: s,
          appDetails: eY,
          sendAuthorize: eP,
        };
      }
      function Z(e, t) {
        if (null == t.location || (null != e && e(t))) return;
        let { host: n, path: s, query: i } = l.parse(t.location, !0),
          r = R.default.isDiscordHostname(n) || window.location.host === n;
        r && s === Y.Routes.OAUTH2_AUTHORIZED
          ? (0, g.openModal)(e =>
              (0, o.jsx)(H.OAuth2Modal, {
                ...e,
                "aria-labelledby": z,
                children: (0, o.jsx)(x.OAuth2AuthorizedSuccess, {
                  guild: t.guild,
                  application: t.application,
                  onClose: e.onClose,
                }),
              })
            )
          : r && s?.startsWith(Y.Routes.OAUTH2_ERROR)
            ? (0, g.openModal)(e => {
                let t =
                  i.error_description ||
                  i.error ||
                  K.default.Messages.OAUTH2_UNKNOWN_ERROR;
                return (
                  Array.isArray(t) && (t = t[0]),
                  (0, o.jsxs)(H.OAuth2Modal, {
                    ...e,
                    "aria-labelledby": z,
                    children: [
                      (0, o.jsx)(x.OAuth2Error, {
                        message: t,
                        onClose: e.onClose,
                      }),
                      ";",
                    ],
                  })
                );
              })
            : window.open(t.location, "_blank")?.focus();
      }
      function J(e, t) {
        if (
          (0, S.isMidjourneyOnboardingFlow)("create-guild-and-oauth2-modal")
        ) {
          T.default.openCreateGuildModal({
            onSuccess: n => ee({ ...e, guildId: n }, t),
          });
          return;
        }
        ee(e, t);
      }
      function ee(e, t) {
        (0, g.openModal)(
          t =>
            (0, o.jsx)(q, {
              ...t,
              ...e,
              cancelCompletesFlow: !1,
              callback: Z.bind(null, e.callback),
            }),
          { onCloseCallback: t }
        );
      }
      function et(e) {
        let { hostname: t = "", host: n, path: s, query: i } = l.parse(e);
        return null != s &&
          null != i &&
          (R.default.isDiscordHostname(t) || n === window.location.host) &&
          (s.startsWith(`/api${Y.Endpoints.OAUTH2_AUTHORIZE}`) ||
            s.startsWith(Y.Routes.OAUTH2_AUTHORIZE))
          ? (0, P.parseOAuth2AuthorizeProps)(i)
          : null;
      }
      ((s = r || (r = {}))[(s.NOT_LOADED = 0)] = "NOT_LOADED"),
        (s[(s.LOADING = 1)] = "LOADING"),
        (s[(s.LOADED = 2)] = "LOADED"),
        ((i = a || (a = {}))[(i.INSTALL_TYPE = 0)] = "INSTALL_TYPE"),
        (i[(i.AUTHORIZE_SCOPES = 1)] = "AUTHORIZE_SCOPES"),
        (i[(i.AUTHORIZE_BOT_PERMISSIONS = 2)] = "AUTHORIZE_BOT_PERMISSIONS");
    },
    77069: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        });
      var s = n("735250");
      n("470079");
      var i = n("207561"),
        r = n("683150"),
        a = n("310929"),
        o = n("42693"),
        u = n("108679"),
        d = n("90732"),
        l = n("30175"),
        f = n("240423");
      function _(e) {
        let {
            application: t,
            accountScopes: n,
            errors: _,
            isTrustedName: c = !1,
          } = e,
          g = (0, i.useLazyValue)(
            () =>
              d.FAKE_SCOPES[Math.floor(Math.random() * d.FAKE_SCOPES.length)]
          );
        if (0 === n.length) return null;
        let m = n.map(e => {
            let t = (0, d.getScopeName)(e, n),
              [i] = _?.[e] ?? [];
            return (0, s.jsxs)(
              "div",
              {
                className: f.scope,
                children: [
                  (0, s.jsx)("div", {
                    className: f.scopeCheck,
                    children: (0, s.jsx)(o.default, { className: f.icon }),
                  }),
                  (0, s.jsxs)("div", {
                    className: f.scopeInner,
                    children: [
                      (0, s.jsx)(a.Text, {
                        variant: "text-md/medium",
                        children: t,
                      }),
                      null != i
                        ? (0, s.jsx)(a.Text, {
                            variant: "text-xs/normal",
                            color: "text-danger",
                            children: i,
                          })
                        : null,
                    ],
                  }),
                ],
              },
              e
            );
          }),
          h = (0, s.jsxs)("div", {
            className: f.scope,
            children: [
              (0, s.jsx)("div", {
                className: f.scopeTimes,
                children: (0, s.jsx)(u.default, { className: f.icon }),
              }),
              (0, s.jsx)("div", {
                className: f.scopeInner,
                children: (0, s.jsx)(a.Text, {
                  variant: "text-md/normal",
                  className: f.scopeName,
                  children: g(),
                }),
              }),
            ],
          }),
          E = c
            ? l.default.Messages.OAUTH2_SCOPES_LABEL_TRUSTED_NAME
            : l.default.Messages.OAUTH2_SCOPES_LABEL;
        return (0, s.jsxs)("div", {
          className: f.scopes,
          children: [
            (0, s.jsx)(r.Heading, {
              variant: "heading-deprecated-12/semibold",
              className: f.sectionLabel,
              children: E.format({ application: t?.name ?? "" }),
            }),
            m,
            h,
          ],
        });
      }
    },
    7364: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var s = n("735250"),
        i = n("470079"),
        r = n("768517"),
        a = n("900546"),
        o = n("310929"),
        u = n("108679"),
        d = n("694574"),
        l = n("983054"),
        f = n("30175"),
        _ = n("856932");
      function c(e) {
        let {
            application: t,
            permissions: n,
            deniedPermissions: c,
            onPermissionsChange: g,
            guild: m,
          } = e,
          [h, E] = i.useState(d.default.NONE);
        i.useEffect(() => {
          g(!0, n),
            E(r.default.invert(m.permissions)),
            g(!1, r.default.invert(m.permissions));
        }, [m, g, n]);
        let p = l.OrderedPermissions.filter(e => r.default.has(n, e)),
          v = p
            .filter(e => !r.default.has(h, e))
            .map(e => {
              let t = (0, l.getPermissionName)(e),
                n = !r.default.has(c, e);
              return (0, s.jsx)(
                "li",
                {
                  className: _.permission,
                  children: (0, s.jsx)(a.Checkbox, {
                    value: n,
                    onChange: (t, n) => g(n, e),
                    type: a.Checkbox.Types.INVERTED,
                    children: (0, s.jsx)(o.Text, {
                      variant: "text-md/normal",
                      children: t,
                    }),
                  }),
                },
                String(e)
              );
            }),
          y = p
            .filter(e => r.default.has(h, e))
            .map(e => {
              let t = (0, l.getPermissionName)(e);
              return (0, s.jsxs)(
                "li",
                {
                  className: _.permission,
                  children: [
                    (0, s.jsx)("div", {
                      className: _.disabledPermissionIcon,
                      children: (0, s.jsx)(u.default, { className: _.icon }),
                    }),
                    (0, s.jsx)(o.Text, {
                      variant: "text-md/normal",
                      children: t,
                    }),
                  ],
                },
                String(e)
              );
            });
        return (0, s.jsxs)("div", {
          className: _.botPermissions,
          children: [
            (0, s.jsx)(o.Text, {
              variant: "text-sm/medium",
              color: "header-secondary",
              className: _.permissionsLabel,
              children:
                f.default.Messages.OAUTH2_CONFIRM_BOT_PERMISSIONS.format({
                  applicationName: t.name,
                  guildName: m.name,
                }),
            }),
            (0, s.jsx)("ul", { className: _.permissionsList, children: v }),
            y.length > 0
              ? (0, s.jsxs)(s.Fragment, {
                  children: [
                    (0, s.jsx)(o.Text, {
                      variant: "text-sm/medium",
                      color: "header-secondary",
                      className: _.disabledPermissionsLabel,
                      children:
                        f.default.Messages.OAUTH2_DISABLED_PERMISSIONS.format({
                          applicationName: t.name,
                        }),
                    }),
                    (0, s.jsx)("ul", {
                      className: _.permissionsList,
                      children: y,
                    }),
                  ],
                })
              : null,
          ],
        });
      }
    },
    396502: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          GuildSelector: function () {
            return c;
          },
          WebhookGuildChannelSelector: function () {
            return g;
          },
        });
      var s = n("735250"),
        i = n("470079"),
        r = n("768517"),
        a = n("683150"),
        o = n("71027"),
        u = n("310929"),
        d = n("383907"),
        l = n("467006"),
        f = n("30175"),
        _ = n("143610");
      function c(e) {
        let {
            error: t,
            selectedGuildId: n,
            onGuildChange: i,
            guilds: d,
            disabled: c = !1,
          } = e,
          g = d
            .filter(e =>
              r.default.has(e.permissions, l.Permissions.MANAGE_GUILD)
            )
            .map(e => ({ value: e.id, label: e.name }));
        return (0, s.jsxs)("div", {
          className: _.selectorGroup,
          children: [
            (0, s.jsx)(a.Heading, {
              variant: "heading-deprecated-12/semibold",
              className: _.sectionLabel,
              children: f.default.Messages.OAUTH2_ADD_TO_GUILD,
            }),
            null != t && "" !== t
              ? (0, s.jsx)(u.Text, {
                  variant: "text-xs/normal",
                  color: "text-danger",
                  children: t,
                })
              : null,
            (0, s.jsx)(o.SearchableSelect, {
              wrapperClassName: _.wrapper,
              className: _.select,
              maxVisibleItems: 5,
              value: n,
              placeholder: f.default.Messages.OAUTH2_ADD_TO_GUILD_PLACEHOLDER,
              options: g,
              onChange: e => {
                i(e);
              },
              isDisabled: c,
            }),
            (0, s.jsx)(u.Text, {
              variant: "text-xs/medium",
              color: "header-secondary",
              className: _.label,
              children:
                f.default.Messages.OAUTH2_ADD_TO_GUILD_DESCRIPTION.format(),
            }),
          ],
        });
      }
      function g(e) {
        let {
            selectedGuildId: t,
            selectedChannelId: n,
            onChannelChange: r,
            error: l,
          } = e,
          [c, g] = i.useState(null);
        i.useEffect(() => {
          (async function e() {
            null != t && g(await (0, d.fetchChannels)(t));
          })();
        }, [t]),
          i.useEffect(() => {
            null != c &&
              null != n &&
              null == c.find(e => e.id === n) &&
              r(null);
          }, [c, r, n]);
        let m = (c ?? []).map(e => ({ value: e.id, label: e.name }));
        return null == t
          ? null
          : (0, s.jsxs)("div", {
              className: _.selectorGroup,
              children: [
                (0, s.jsx)(a.Heading, {
                  variant: "heading-deprecated-12/semibold",
                  className: _.sectionLabel,
                  children: f.default.Messages.OAUTH2_ADD_WEBHOOK_INCOMING,
                }),
                null != l && "" !== l
                  ? (0, s.jsx)(u.Text, {
                      variant: "text-xs/normal",
                      color: "text-danger",
                      children: l,
                    })
                  : null,
                (0, s.jsx)(o.SearchableSelect, {
                  wrapperClassName: _.wrapper,
                  className: _.select,
                  maxVisibleItems: 5,
                  onChange: e => {
                    r(e);
                  },
                  placeholder:
                    f.default.Messages
                      .SCOPE_WEBHOOK_INCOMING_CHANNEL_PLACEHOLDER,
                  value: n,
                  options: m,
                }),
                (0, s.jsx)(u.Text, {
                  variant: "text-xs/normal",
                  color: "header-secondary",
                  className: _.label,
                  children:
                    f.default.Messages.SCOPE_WEBHOOK_INCOMING_DESCRIPTION,
                }),
              ],
            });
      }
    },
    299241: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return m;
          },
        });
      var s = n("735250");
      n("470079");
      var i = n("484810"),
        r = n("985521"),
        a = n("310929"),
        o = n("355984"),
        u = n("204606"),
        d = n("984362"),
        l = n("383907"),
        f = n("467006"),
        _ = n("974993"),
        c = n("30175"),
        g = n("60425");
      function m(e) {
        let {
            id: t,
            user: n,
            application: m,
            bot: h,
            accountScopes: E,
            showLogout: p,
            location: v,
            isTrustedName: y,
          } = e,
          I = u.default.getApplicationIconURL({ id: m.id, icon: m.icon }),
          T = u.default.getUserAvatarURL(n);
        return (0, s.jsxs)("header", {
          id: t,
          className: g.header,
          children: [
            (0, s.jsxs)("div", {
              className: g.headerIcons,
              children: [
                (0, s.jsx)(i.Avatar, {
                  src: I,
                  size: _.AvatarSizes.SIZE_80,
                  "aria-label": m.name,
                }),
                (0, s.jsxs)("div", {
                  className: g.ellipseGroup,
                  children: [
                    (0, s.jsx)("div", { className: g.ellipse }),
                    (0, s.jsx)("div", { className: g.ellipse }),
                    (0, s.jsx)("div", { className: g.ellipse }),
                  ],
                }),
                (0, s.jsx)(i.Avatar, {
                  src: T,
                  size: _.AvatarSizes.SIZE_80,
                  "aria-label": n.username,
                }),
              ],
            }),
            !y &&
              (0, s.jsx)(a.Text, {
                variant: "text-md/medium",
                color: "header-secondary",
                className: g.label,
                children: c.default.Messages.OAUTH2_THIRD_PARTY_APPLICATION,
              }),
            (0, s.jsxs)(a.Text, {
              variant: "text-lg/bold",
              color: "header-primary",
              children: [
                m.name,
                null != h
                  ? (0, s.jsx)(o.default, {
                      className: g.botTag,
                      verified:
                        null != h.public_flags &&
                        (0, d.hasFlag)(
                          h.public_flags,
                          f.UserFlags.VERIFIED_BOT
                        ),
                    })
                  : null,
              ],
            }),
            E.length > 0
              ? (0, s.jsx)(a.Text, {
                  variant: "text-md/normal",
                  color: "header-secondary",
                  className: g.label,
                  children: c.default.Messages.OAUTH2_REQUESTS_ACCOUNT_ACCESS,
                })
              : (0, s.jsx)(a.Text, {
                  variant: "text-md/normal",
                  color: "header-secondary",
                  className: g.label,
                  children: c.default.Messages.OAUTH2_CONNECT_TO_DISCORD,
                }),
            p
              ? (0, s.jsx)("div", {
                  className: g.currentUser,
                  children: (0, s.jsxs)(a.Text, {
                    variant: "text-sm/normal",
                    color: "text-muted",
                    children: [
                      c.default.Messages.OAUTH2_SIGNED_IN_AS.format({
                        userHook: () =>
                          (0, s.jsxs)(
                            a.Text,
                            {
                              className: g.currentUserTag,
                              variant: "text-sm/normal",
                              children: [
                                n.username,
                                !n.isPomelo() &&
                                  (0, s.jsx)(a.Text, {
                                    className: g.currentUserDiscriminator,
                                    variant: "text-sm/normal",
                                    children: `#${n.discriminator}`,
                                  }),
                              ],
                            },
                            n.id
                          ),
                      }),
                      (0, s.jsx)(r.Clickable, {
                        tag: "a",
                        className: g.logoutLink,
                        onClick: () => (0, l.logoutWithRedirect)(v),
                        children: c.default.Messages.OAUTH2_LOGOUT,
                      }),
                    ],
                  }),
                })
              : null,
          ],
        });
      }
    },
    165740: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          OAuth2Modal: function () {
            return p;
          },
          OAuth2Page: function () {
            return E;
          },
        });
      var s = n("735250"),
        i = n("470079"),
        r = n("803997"),
        a = n.n(r),
        o = n("916615"),
        u = n("974328"),
        d = n("372491"),
        l = n("341443"),
        f = n("979988"),
        _ = n("671008"),
        c = n("467006"),
        g = n("542227"),
        m = n("30175"),
        h = n("65355");
      function E(e) {
        let { children: t, wrapperClassName: n, embedded: r } = e,
          [o, E] = i.useState(g.WaveStates.INITIAL),
          p = i.useCallback(e => {
            E(t => Math.max(t, e));
          }, []);
        return (
          (0, d.usePageTitle)({ location: m.default.Messages.OAUTH2_TITLE }),
          (0, s.jsx)(u.ThemeContextProvider, {
            theme: c.ThemeTypes.DARK,
            children: (0, s.jsx)(l.default, {
              embedded: r,
              className: a()((0, _.getThemeClass)(c.ThemeTypes.DARK), h.wave),
              splash: (0, f.getArtForPath)(),
              waveState: o,
              showLogo: !0,
              updateWaveState: p,
              children: (0, s.jsx)("div", {
                className: a()(h.oauth2Wrapper, n),
                children: t,
              }),
            }),
          })
        );
      }
      function p(e) {
        let { children: t, transitionState: n, ...i } = e;
        return (0, s.jsx)(o.ModalRoot, {
          size: o.ModalSize.DYNAMIC,
          transitionState: n,
          className: h.oauth2Wrapper,
          ...i,
          children: t,
        });
      }
    },
    479496: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          OAuth2AuthorizedPage: function () {
            return N;
          },
          OAuth2AuthorizedSuccess: function () {
            return C;
          },
          OAuth2Error: function () {
            return A;
          },
          OAuth2ErrorPage: function () {
            return D;
          },
          OAuth2Success: function () {
            return S;
          },
          default: function () {
            return T;
          },
        });
      var s = n("735250"),
        i = n("470079"),
        r = n("803997"),
        a = n.n(r),
        o = n("593473"),
        u = n("613828"),
        d = n("729594"),
        l = n("916615"),
        f = n("886083"),
        _ = n("310929"),
        c = n("974328"),
        g = n("372491"),
        m = n("521588"),
        h = n("497994"),
        E = n("328470"),
        p = n("165740"),
        v = n("467006"),
        y = n("30175"),
        I = n("677753");
      function T(e) {
        let {
          message: t,
          footer: n,
          headerClassName: i,
          showsCloseWindowText: r,
          spinner: o,
          onClose: u,
        } = e;
        return (
          (0, g.usePageTitle)({ location: y.default.Messages.OAUTH2_TITLE }),
          (0, s.jsxs)(s.Fragment, {
            children: [
              null != u
                ? (0, s.jsx)(l.ModalCloseButton, {
                    onClick: u,
                    className: I.closeButton,
                  })
                : null,
              (0, s.jsxs)("div", {
                className: I.wrapper,
                children: [
                  o ? (0, s.jsx)(f.Spinner, {}) : null,
                  (0, s.jsx)("div", { className: a()(I.header, i) }),
                  (0, s.jsx)(_.Text, {
                    variant: "text-md/normal",
                    className: I.text,
                    children: t,
                  }),
                  null != n ? n : null,
                  r
                    ? (0, s.jsx)(_.Text, {
                        variant: "text-xs/normal",
                        color: "text-muted",
                        className: I.cta,
                        children: y.default.Messages.OAUTH2_MESSAGE_CTA,
                      })
                    : null,
                ],
              }),
            ],
          })
        );
      }
      function S(e) {
        return (0, s.jsx)(T, { ...e, headerClassName: I.headerSuccess });
      }
      function C(e) {
        let { guild: t, application: n, ...r } = e,
          { onClose: a } = r,
          o = y.default.Messages.AUTHORIZED_SUCCESS,
          u = i.useCallback(() => {
            t?.id != null &&
              ((0, h.transitionToGuild)(t?.id),
              a?.(),
              E.default.track(
                v.AnalyticEvents.OAUTH2_AUTHORIZE_SUCCESS_GO_TO_GUILD_CLICKED,
                { application_id: n?.id, guild_id: t?.id }
              ));
          }, [a, n?.id, t?.id]),
          d = i.useCallback(() => {
            a?.(),
              E.default.track(
                v.AnalyticEvents.OAUTH2_AUTHORIZE_SUCCESS_CLOSE_CLICKED,
                { application_id: n?.id }
              );
          }, [a, n?.id]),
          l = i.useMemo(() => {
            if (null != n)
              return null != t
                ? y.default.Messages.AUTHORIZED_APP_TO_SERVER.format({
                    installedApplicationName: n?.name,
                    guildName: t?.name,
                  })
                : y.default.Messages.AUTHORIZED_APP.format({
                    installedApplicationName: n?.name,
                  });
            return y.default.Messages.AUTHORIZED_GENERIC;
          }, [n, t]),
          f = (0, s.jsxs)(s.Fragment, {
            children: [
              (0, s.jsx)(_.Text, {
                variant: "text-sm/normal",
                className: I.authorizedSuccessSubtext,
                children: l,
              }),
              (null != t || null != a) &&
                (0, s.jsxs)("div", {
                  className: I.buttonsContainer,
                  children: [
                    null != t &&
                      (0, s.jsx)(c.Button, {
                        fullWidth: !0,
                        color: c.Button.Colors.BRAND,
                        onClick: u,
                        className: I.button,
                        children:
                          t?.name.length > 30
                            ? y.default.Messages.OAUTH2_GO_TO_SERVER_DEFAULT_CTA
                            : y.default.Messages.OAUTH2_GO_TO_SERVER_NAME_CTA.format(
                                { guildName: t?.name }
                              ),
                      }),
                    null != a &&
                      (0, s.jsx)(c.Button, {
                        fullWidth: !0,
                        color: c.Button.Colors.PRIMARY,
                        onClick: d,
                        className: I.button,
                        children: y.default.Messages.CLOSE,
                      }),
                  ],
                }),
            ],
          });
        return (
          i.useEffect(() => {
            E.default.track(v.AnalyticEvents.OAUTH2_AUTHORIZE_SUCCESS_VIEWED, {
              application_id: n?.id,
            });
          }, [n?.id]),
          (0, s.jsx)("div", {
            className: I.authorizedSuccessWrapper,
            children: (0, s.jsx)(S, { message: o, footer: f, ...r }),
          })
        );
      }
      function A(e) {
        return (0, s.jsx)(T, { ...e, headerClassName: I.headerFailure });
      }
      function N() {
        let e = (0, u.useLocation)();
        return (0, s.jsx)(p.OAuth2Page, {
          children: (0, s.jsx)(C, {
            guild: e.state?.guild,
            application: e.state?.application,
            showsCloseWindowText: !0,
          }),
        });
      }
      function D(e) {
        let { location: t } = e;
        i.useEffect(() => {
          if (null == t) return;
          let e =
            null != document.referrer && "" !== document.referrer
              ? d.parse(document.referrer)
              : null;
          (null == e ||
            e.host !== window.location.host ||
            e.pathname !== v.Routes.OAUTH2_AUTHORIZE) &&
            (0, m.transitionTo)(v.Routes.INDEX);
        }, [t]);
        let n = null != t ? (0, o.parse)(t.search) : {},
          r =
            n.error_description ??
            n.error ??
            y.default.Messages.OAUTH2_UNKNOWN_ERROR;
        return (0, s.jsx)(p.OAuth2Page, {
          children: (0, s.jsx)(A, { message: r, showsCloseWindowText: !0 }),
        });
      }
    },
    778916: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          isOptInEnabledForGuild: function () {
            return l;
          },
          useOptInEnabledForGuild: function () {
            return d;
          },
          useShouldShowOnboardingAdminUpsellForGuild: function () {
            return f;
          },
        });
      var s = n("661223"),
        i = n("327271"),
        r = n("197905"),
        a = n("301309"),
        o = n("871831"),
        u = n("467006");
      function d(e) {
        let t = (0, s.useStateFromStores)([a.default], () =>
            a.default.isOptInEnabled(e)
          ),
          n = (0, s.useStateFromStores)([i.default], () =>
            i.default.getGuild(e)
          ),
          r = (0, s.useStateFromStores)([o.default], () =>
            o.default.getCurrentUser()
          );
        return (
          null != e &&
          null != n &&
          null != r &&
          (n.hasFeature(u.GuildFeatures.COMMUNITY) || r.isStaff()) &&
          t
        );
      }
      function l(e) {
        let t = i.default.getGuild(e),
          n = o.default.getCurrentUser();
        return (
          null != e &&
          null != t &&
          null != n &&
          (t.hasFeature(u.GuildFeatures.COMMUNITY) || n.isStaff()) &&
          a.default.isOptInEnabled(e)
        );
      }
      function f(e) {
        let t = (0, s.useStateFromStores)([i.default], () =>
            i.default.getGuild(e)
          ),
          { canManageGuild: n, canManageRoles: a } = (0,
          s.useStateFromStoresObject)([r.default], () => ({
            canManageGuild: r.default.can(u.Permissions.MANAGE_GUILD, t),
            canManageRoles: r.default.can(u.Permissions.MANAGE_ROLES, t),
          }));
        if (null == t) return !1;
        let o = t.hasFeature(u.GuildFeatures.GUILD_ONBOARDING_EVER_ENABLED);
        return n && a && !o;
      }
    },
    501509: function (e, t, n) {
      "use strict";
      function s() {
        return !1;
      }
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
    },
    844210: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          reducedPaymentInfoExperiment: function () {
            return i;
          },
        });
      let s = (0, n("516086").createExperiment)({
        id: "2023-06_reduced_payment_method_address_info",
        label: "Reduced Payment Method Address Info",
        kind: "user",
        defaultConfig: { bucket: 0, enabled: !1 },
        treatments: [
          {
            id: 1,
            label: "Simplify address form",
            config: { bucket: 1, enabled: !0 },
          },
          {
            id: 2,
            label: "Partial address in card form",
            config: { bucket: 2, enabled: !0 },
          },
        ],
      });
      function i() {
        let { autoTrackExposure: e } =
          arguments.length > 0 && void 0 !== arguments[0]
            ? arguments[0]
            : { autoTrackExposure: !0 };
        return s.getCurrentConfig(
          { location: "2b69fe_1" },
          { autoTrackExposure: e }
        );
      }
    },
    81147: function (e, t, n) {
      "use strict";
      function s(e) {
        (0, n("170502").default)(e);
      }
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
    },
    170502: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("735250");
      n("470079");
      var i = n("910838");
      function r(e) {
        (0, i.openModalLazy)(async () => {
          let { default: t } = await n
            .el("170502@349:397")
            .then(n.bind(n, "875478"));
          return n => (0, s.jsx)(t, { ...n, incomingRequestCount: e });
        });
      }
    },
    465230: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("913527"),
        i = n.n(s);
      function r(e) {
        return { ...e, expiry: i()(e.expiry) };
      }
    },
    491261: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return R;
          },
        });
      var s = n("512722"),
        i = n.n(s),
        r = n("392711"),
        a = n.n(r),
        o = n("202226"),
        u = n("661223"),
        d = n("312916"),
        l = n("841869"),
        f = n("501769"),
        _ = n("432056"),
        c = n("45245"),
        g = n("467006");
      let m = {},
        h = {},
        E = {},
        p = {},
        v = {},
        y = new Set(),
        I = () => O.emitChange(),
        T = a().debounce(I, 150);
      function S(e) {
        let t = E[e];
        null != t &&
          !t.closed &&
          (m[e] = {
            x: t.screenX,
            y: t.screenY,
            width: t.innerWidth,
            height: t.innerHeight,
            alwaysOnTop: !!f.isPlatformEmbedded && h[e],
          });
      }
      function C(e) {
        let t = E[e];
        null != t &&
          (!t.closed && S(e),
          t.close(),
          !(function (e) {
            let t = E[e];
            i()(null != t, "Popout window was null during unmount"),
              t.removeEventListener("focus", I),
              t.removeEventListener("blur", I),
              t.removeEventListener("resize", T);
            let n = p[e];
            i()(null != n, "Window root was null while unmounting"),
              n.unmount(),
              delete E[e],
              delete h[e],
              delete v[e],
              delete p[e];
          })(e),
          O.emitChange());
      }
      function A(e) {
        let { data: t } = e;
        if (!(t instanceof Object && t.discordPopoutEvent instanceof Object))
          return;
        let n = t.discordPopoutEvent;
        if (null != n.key)
          switch (n.type) {
            case g.PopoutEventTypes.LOADED:
              var s;
              return (
                (s = n.key),
                void (
                  y.has(s) &&
                  (!(function (e) {
                    let t = E[e],
                      n = v[e];
                    if (null == t) {
                      new l.default("PopoutWindowStore").warn(
                        "Failed to open window",
                        e
                      );
                      return;
                    }
                    let s = t.document;
                    (0, c.subscribeDocumentToFullScreenChange)(s, I),
                      t.addEventListener("focus", I),
                      t.addEventListener("blur", I),
                      t.addEventListener("resize", T),
                      !(function (e, t) {
                        let n = t.document,
                          s = document.querySelectorAll(
                            'link[rel="stylesheet"]'
                          ),
                          r = `${window.location.protocol}//${window.location.host}`;
                        for (let e of s) {
                          if (!e.href.startsWith(r)) continue;
                          let t = n.createElement("link");
                          (t.href = e.href),
                            (t.rel = e.rel),
                            (t.integrity = e.integrity),
                            i()(null != n.head, "Document head was null"),
                            n.head.appendChild(t);
                        }
                      })(0, t);
                    let r = (0, o.createRoot)(s.getElementById("app-mount"));
                    i()(null != r, "No render target for popout!"),
                      (p[e] = r),
                      r.render(n(e));
                  })(s),
                  y.delete(s),
                  O.emitChange())
                )
              );
            case g.PopoutEventTypes.UNLOADED:
              return C(n.key);
          }
      }
      function N() {
        for (let e of Object.keys(E)) {
          let t = E[e];
          null != t && t.close();
        }
      }
      class D extends u.default.PersistedStore {
        static #e = (this.displayName = "PopoutWindowStore");
        static #t = (this.persistKey = "PopoutWindowStore");
        initialize(e) {
          window.addEventListener("message", A),
            window.addEventListener("beforeunload", N),
            (m = e ?? {});
        }
        getWindow(e) {
          return E[e];
        }
        getWindowState(e) {
          return m[e];
        }
        getWindowKeys() {
          return Object.keys(E);
        }
        getWindowOpen(e) {
          let t = E[e];
          return null != t && !t.closed;
        }
        getIsAlwaysOnTop(e) {
          return !!h[e];
        }
        getWindowFocused(e) {
          let t = E[e];
          return t?.document?.hasFocus() ?? !1;
        }
        getWindowVisible(e) {
          let t = E[e];
          return t?.document?.visibilityState === "visible";
        }
        getState() {
          return m;
        }
        unmountWindow(e) {
          return C(e);
        }
      }
      let O = new D(d.default, {
        POPOUT_WINDOW_OPEN: function (e) {
          let { key: t, features: n, render: s } = e;
          if (
            f.isPlatformEmbedded &&
            !_.default.supportsFeature(g.NativeFeatures.POPOUT_WINDOWS)
          )
            throw Error(
              "Popout windows not supported on this native module version!"
            );
          let i = E[t];
          if (null != i && !i.closed)
            return f.isPlatformEmbedded ? _.default.focus(t) : i.focus(), !1;
          let {
              defaultWidth: r,
              defaultHeight: a,
              defaultAlwaysOnTop: o = !1,
              ...u
            } = n,
            d = u,
            l = o,
            c = m[t];
          if (null != c) {
            let { width: e, height: t, x: n, y: s, alwaysOnTop: i } = c;
            (l = null != i ? i : o),
              (d = {
                width: null != e && 0 !== e ? e : r,
                height: null != t && 0 !== t ? t : a,
                left: n,
                top: s,
                ...d,
              });
          }
          let p = window.open(
            g.Routes.POPOUT_WINDOW,
            t,
            (function (e) {
              let t = "";
              for (let n of Object.keys(e)) {
                let s = e[n];
                void 0 !== s &&
                  ("boolean" == typeof s && (s = s ? "yes" : "no"),
                  (t += `${n}=${s},`));
              }
              return t;
            })(d)
          );
          (p.windowKey = t),
            p?.focus(),
            (E[t] = p),
            (v[t] = s),
            f.isPlatformEmbedded &&
              (_.default.setAlwaysOnTop(t, l),
              (h[t] = l),
              _.default.isAlwaysOnTop(t).then(e => (h[t] = e))),
            y.add(t);
        },
        POPOUT_WINDOW_CLOSE: function (e) {
          let { key: t } = e,
            n = E[t];
          null != n && !n.closed && (S(t), n.close());
        },
        POPOUT_WINDOW_SET_ALWAYS_ON_TOP: function (e) {
          let { key: t, alwaysOnTop: n } = e;
          f.isPlatformEmbedded &&
            (_.default.setAlwaysOnTop(t, n),
            (h[t] = n),
            _.default.isAlwaysOnTop(t).then(e => (h[t] = e)));
        },
        LOGOUT: N,
      });
      var R = O;
    },
    401388: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          close: function () {
            return o;
          },
          open: function () {
            return r;
          },
          openChannelCallPopout: function () {
            return a;
          },
          setAlwaysOnTop: function () {
            return u;
          },
        });
      var s = n("312916");
      let i = { menubar: !1, toolbar: !1, location: !1, directories: !1 };
      function r(e, t, n) {
        return s.default.dispatch({
          type: "POPOUT_WINDOW_OPEN",
          key: e,
          features: { ...i, ...n },
          render: t,
        });
      }
      function a(e) {
        return s.default.dispatch({
          type: "CHANNEL_CALL_POPOUT_WINDOW_OPEN",
          channel: e,
        });
      }
      function o(e) {
        return s.default.dispatch({ type: "POPOUT_WINDOW_CLOSE", key: e });
      }
      function u(e, t) {
        return s.default.dispatch({
          type: "POPOUT_WINDOW_SET_ALWAYS_ON_TOP",
          alwaysOnTop: t,
          key: e,
        });
      }
    },
    999114: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          DEVICE_PUSH_VOIP_PROVIDER: function () {
            return a;
          },
          getDevicePushProvider: function () {
            return o;
          },
        });
      var s,
        i,
        r = n("501769");
      let a = null;
      function o() {
        return (0, r.isAndroid)(), null;
      }
      ((s = i || (i = {})).REMINDER = "reminder"),
        (s.TOP_MESSAGE_PUSH = "top_messages_push"),
        (s.TRENDING_CONTENT_PUSH = "trending_content_push");
    },
    77579: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("735250");
      n("470079");
      var i = n("910838");
      function r() {
        (0, i.openModalLazy)(async () => {
          let { default: e } = await n
            .el("77579@301:340")
            .then(n.bind(n, "100805"));
          return t => (0, s.jsx)(e, { ...t });
        });
      }
    },
    894302: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          emojiEquals: function () {
            return l;
          },
          getAccessibleEmojiDisplayName: function () {
            return u;
          },
          getBurstAnalyticsSection: function () {
            return f;
          },
          getReactionEmojiName: function () {
            return o;
          },
          shouldApplyReaction: function () {
            return _;
          },
          toReactionEmoji: function () {
            return d;
          },
        });
      var s = n("288990"),
        i = n("262047"),
        r = n("467006"),
        a = n("30175");
      function o(e) {
        return null == e.id
          ? s.default.convertSurrogateToName(e.name)
          : `:${e.name}:`;
      }
      function u(e, t, n, s) {
        let i;
        return (i = s
          ? e
            ? a.default.Messages.SUPER_REACT_REMOVE_WITH_COUNT_A11Y_LABEL
            : a.default.Messages.SUPER_REACT_WITH_COUNT_A11Y_LABEL
          : e
            ? a.default.Messages.REACT_REMOVE_WITH_COUNT_A11Y_LABEL
            : a.default.Messages.REACT_WITH_COUNT_A11Y_LABEL).format({
          reactions: t,
          emojiName: o(n)?.replace(/[:_]/g, " ")?.trim() ?? "",
        });
      }
      function d(e) {
        return {
          id: e.id ?? null,
          name:
            (null != e.id ? e.name : e.optionallyDiverseSequence) ??
            e.name ??
            "",
          animated: !!e.animated,
        };
      }
      function l(e, t) {
        if (null != t.id) {
          let n = null != e.id ? `${e.id}` : e.id;
          return `${t.id}` === n;
        }
        return null == e.id && t.name === e.name;
      }
      function f(e) {
        if (e.isThread()) return r.AnalyticsSections.THREAD_TEXT_AREA;
        if (e.isForumPost()) return r.AnalyticsSections.FORUM_CHANNEL_TEXT_AREA;
        if (e.isGuildVocal()) return r.AnalyticsSections.TEXT_IN_VOICE;
        return r.AnalyticsSections.CHANNEL_TEXT_AREA;
      }
      function _(e) {
        let { userId: t, optimistic: n } = e,
          s = i.default.getId() === t;
        return (!n || !!s) && !0;
      }
    },
    416463: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ReferencedMessageState: function () {
            return s;
          },
          default: function () {
            return O;
          },
        }),
        n("653041");
      var s,
        i,
        r = n("31775"),
        a = n.n(r),
        o = n("661223"),
        u = n("312916"),
        d = n("615538"),
        l = n("919759"),
        f = n("822534"),
        _ = n("731865"),
        c = n("162256"),
        g = n("467006");
      ((i = s || (s = {}))[(i.LOADED = 0)] = "LOADED"),
        (i[(i.NOT_LOADED = 1)] = "NOT_LOADED"),
        (i[(i.DELETED = 2)] = "DELETED");
      let m = Object.freeze({ state: 1 }),
        h = new Set();
      class E {
        handleCacheDisposed(e, t) {
          this._cachedMessageIds.has(e) &&
            ((this._cachedMessageIds = new Set(this._cachedMessageIds)),
            this._cachedMessageIds.delete(e));
        }
        set(e, t) {
          this._cachedMessages.set(e, t),
            !this._cachedMessageIds.has(e) &&
              ((this._cachedMessageIds = new Set(this._cachedMessageIds)),
              this._cachedMessageIds.add(e));
        }
        has(e) {
          return this._cachedMessageIds.has(e);
        }
        get(e) {
          return this._cachedMessages.get(e);
        }
        getCachedMessageIds() {
          return this._cachedMessageIds;
        }
        constructor() {
          (this._cachedMessages = new (a())({
            max: 100,
            dispose: (e, t) => this.handleCacheDisposed(e, t),
          })),
            (this._cachedMessageIds = new Set());
        }
      }
      let p = new (class e {
        has(e, t) {
          return this._channelCaches.get(e)?.has(t) ?? !1;
        }
        get(e, t) {
          return this._channelCaches.get(e)?.get(t);
        }
        set(e, t, n) {
          let s = this._channelCaches.get(e);
          null == s && ((s = new E()), this._channelCaches.set(e, s)),
            s.set(t, n);
        }
        updateExistingMessageIfCached(e) {
          let t = this._channelCaches.get(e.channel_id);
          return (
            !!(null != t && t.has(e.id)) &&
            (t.set(e.id, { state: 0, message: (0, f.createMessageRecord)(e) }),
            !0)
          );
        }
        deleteChannelCache(e) {
          return this._channelCaches.delete(e);
        }
        retainWhere(e) {
          let t = [];
          for (let [n] of this._channelCaches) !e(n) && t.push(n);
          for (let e of t) this.deleteChannelCache(e);
          return t.length;
        }
        getCachedMessageIdsForChannel(e) {
          let t = this._channelCaches.get(e);
          return null == t ? null : t.getCachedMessageIds();
        }
        clear() {
          this._channelCaches.clear();
        }
        constructor() {
          this._channelCaches = new Map();
        }
      })();
      function v(e) {
        let t = !1;
        if (
          (p.updateExistingMessageIfCached(e) && (t = !0),
          g.MessageTypesWithLazyLoadedReferences.has(e.type))
        ) {
          let n = e.message_reference;
          if (null == n) return t;
          let s = n.message_id;
          if (null == s) return t;
          if ("referenced_message" in e) {
            let t = e.referenced_message;
            null != t
              ? (p.set(t.channel_id, t.id, {
                  state: 0,
                  message: (0, f.createMessageRecord)(t),
                }),
                e.type === g.MessageTypes.THREAD_STARTER_MESSAGE && v(t))
              : p.set(e.channel_id, s, { state: 2 });
          } else {
            let e = c.default.getMessage(n.channel_id, s);
            null != e
              ? p.set(n.channel_id, s, { state: 0, message: e })
              : p.set(n.channel_id, s, m);
          }
          t = !0;
        }
        return t;
      }
      function y(e, t) {
        let n = !1;
        for (let s of e) n = !1 !== t(s) || n;
        return n;
      }
      function I(e) {
        let { messages: t } = e;
        return y(t, e => v(e));
      }
      function T(e) {
        let { messages: t } = e;
        return y(t, e => y(e, e => v(e)));
      }
      function S(e) {
        return p.deleteChannelCache(e.channel.id);
      }
      function C(e, t) {
        if (!p.has(e, t)) return !1;
        p.set(e, t, { state: 2 });
      }
      function A() {
        p.clear();
      }
      function N(e) {
        let { firstMessages: t } = e;
        return null != t && y(t, e => v(e));
      }
      class D extends o.default.Store {
        static #e = (this.displayName = "ReferencedMessageStore");
        initialize() {
          this.waitFor(c.default, _.default);
        }
        getMessageByReference(e) {
          let t;
          return null != e && (t = p.get(e.channel_id, e.message_id)), t ?? m;
        }
        getMessage(e, t) {
          return p.get(e, t) ?? m;
        }
        getReplyIdsForChannel(e) {
          let t;
          return null != e && (t = p.getCachedMessageIdsForChannel(e)), t ?? h;
        }
      }
      var O = new D(u.default, {
        CACHE_LOADED: function (e) {
          let { messages: t } = e;
          return y(Object.values(t), e => y(Object.values(e), e => v(e)));
        },
        LOCAL_MESSAGES_LOADED: I,
        LOAD_MESSAGES_SUCCESS: I,
        LOAD_MESSAGES_AROUND_SUCCESS: I,
        SEARCH_FINISH: T,
        MOD_VIEW_SEARCH_FINISH: T,
        GUILD_FEED_FETCH_SUCCESS: function (e) {
          let { data: t } = e;
          return y((0, l.getMessagesFromGuildFeedFetch)(t), e => v(e));
        },
        LOAD_THREADS_SUCCESS: N,
        LOAD_ARCHIVED_THREADS_SUCCESS: N,
        MESSAGE_EXPLICIT_CONTENT_SCAN_TIMEOUT: function (e) {
          let { messageId: t, channelId: n } = e;
          if (!p.has(n, t)) return !1;
          let s = p.get(n, t);
          if (null == s || 0 !== s.state) return !1;
          p.set(n, t, {
            state: 0,
            message: (0, d.handleExplicitMediaScanTimeoutForMessage)(s.message),
          });
        },
        LOAD_FORUM_POSTS: function (e) {
          let { threads: t } = e;
          return y(Object.values(t), e => {
            let { first_message: t } = e;
            return null != t && v(t);
          });
        },
        MESSAGE_CREATE: function (e) {
          let { message: t } = e;
          return !!c.default.getMessages(t.channel_id).ready && v(t);
        },
        MESSAGE_UPDATE: function (e) {
          let { message: t } = e,
            n = t.id,
            s = t.channel_id;
          if (!p.has(s, n)) return !1;
          let i = p.get(s, n);
          if (null == i || 0 !== i.state) return !1;
          p.set(s, n, {
            state: 0,
            message: (0, f.updateMessageRecord)(i.message, t),
          });
        },
        MESSAGE_DELETE: function (e) {
          let { id: t, channelId: n } = e;
          return C(n, t);
        },
        MESSAGE_DELETE_BULK: function (e) {
          let { ids: t, channelId: n } = e;
          return y(t, e => C(n, e));
        },
        CREATE_PENDING_REPLY: function (e) {
          let { message: t } = e;
          p.set(t.channel_id, t.id, { state: 0, message: t });
        },
        CHANNEL_DELETE: S,
        THREAD_DELETE: S,
        GUILD_DELETE: function () {
          if (0 === p.retainWhere(e => null != _.default.getChannel(e)))
            return !1;
        },
        CONNECTION_OPEN: A,
        LOGOUT: A,
      });
    },
    459960: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        }),
        n("653041");
      var s = n("348327"),
        i = n.n(s),
        r = n("661223"),
        a = n("312916");
      let o = [n("960613").default],
        u = [];
      function d() {
        let e = [];
        for (let t of o) {
          let n = t.getActivity();
          null != n && e.push(n);
        }
        return !i()(e, u) && ((u = e), !0);
      }
      class l extends r.default.Store {
        static #e = (this.displayName = "FirstPartyRichPresenceStore");
        initialize() {
          this.syncWith(o, d);
        }
        getActivities() {
          return u;
        }
      }
      var f = new l(a.default);
    },
    553766: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          transitionToChannel: function () {
            return l;
          },
          transitionToMessage: function () {
            return c;
          },
          transitionToThread: function () {
            return f;
          },
          transitionToThreadMessage: function () {
            return _;
          },
        });
      var s = n("512722"),
        i = n.n(s),
        r = n("561427"),
        a = n("677700"),
        o = n("731865"),
        u = n("521588"),
        d = n("467006");
      function l(e, t, n) {
        let s = o.default.getChannel(e);
        if (null == s) return;
        let i = (0, a.getGuildIdForGenericRedirect)(s);
        r.default.preload(s.guild_id, s.id),
          (0, u.transitionTo)(d.Routes.CHANNEL(i, s.id), t, n);
      }
      function f(e, t, n) {
        i()(null != e.parent_id, "Thread must have a parent ID.");
        let s = (0, a.getGuildIdForGenericRedirect)(e);
        (0, u.transitionTo)(d.Routes.CHANNEL(s, e.id), n, t);
      }
      function _(e, t, n, s) {
        i()(null != e.parent_id, "Thread must have a parent ID.");
        let r = (0, a.getGuildIdForGenericRedirect)(e);
        (0, u.transitionTo)(d.Routes.CHANNEL(r, e.id, t), s, n);
      }
      function c(e, t, n, s) {
        let i = o.default.getChannel(e);
        if (null == i) return;
        let r = (0, a.getGuildIdForGenericRedirect)(i);
        (0, u.transitionTo)(d.Routes.CHANNEL(r, i.id, t), n, s);
      }
    },
    416793: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          isCurrentUserTeen: function () {
            return i;
          },
        });
      var s = n("871831");
      let i = () => s.default.getCurrentUser()?.nsfwAllowed === !1;
    },
    605369: function (e, t, n) {
      "use strict";
      var s, i, r, a, o, u;
      n.r(t),
        n.d(t, {
          GuildSidebarType: function () {
            return i;
          },
          SidebarOpenDetailsType: function () {
            return r;
          },
          SidebarType: function () {
            return s;
          },
        }),
        ((a = s || (s = {}))[(a.CREATE_THREAD = 0)] = "CREATE_THREAD"),
        (a[(a.VIEW_THREAD = 1)] = "VIEW_THREAD"),
        (a[(a.VIEW_CHANNEL = 2)] = "VIEW_CHANNEL"),
        (a[(a.VIEW_MESSAGE_REQUEST = 3)] = "VIEW_MESSAGE_REQUEST"),
        ((o = i || (i = {}))[(o.GUILD_MEMBER_MOD_VIEW = 4)] =
          "GUILD_MEMBER_MOD_VIEW"),
        ((u = r || (r = {})).THREAD = "thread"),
        (u.MESSAGE_REQUEST = "message-request"),
        (u.HOME = "home"),
        (u.GUILD_MEMBER_MOD_VIEW = "guild-member-mod-view");
    },
    539947: function (e, t, n) {
      "use strict";
      var s, i;
      n.r(t),
        n.d(t, {
          CUSTOM_CALL_SOUND_GLOBAL_GUILD_ID: function () {
            return f;
          },
          DEFAULT_KEYBIND: function () {
            return d;
          },
          DEFAULT_SOUND_GUILD_ID: function () {
            return o;
          },
          EMPTY_SOUND_LIST: function () {
            return l;
          },
          MAX_LENGTH_SOUND_NAME: function () {
            return r;
          },
          MAX_SOUND_LENGTH_SECONDS: function () {
            return a;
          },
          NUM_FREQUENTLY_USED_SOUNDS: function () {
            return c;
          },
          NUM_RECENTLY_HEARD_SOUNDS: function () {
            return _;
          },
          SoundboardWheelSize: function () {
            return u;
          },
        });
      let r = 32,
        a = 5,
        o = "DEFAULT";
      ((i = s || (s = {}))[(i.SUCCESS = 0)] = "SUCCESS"),
        (i[(i.INTERRUPTED = 1)] = "INTERRUPTED");
      let u = { width: 424, height: 424, padding: 100 },
        d = "ctrl+`",
        l = [],
        f = "0",
        _ = 6,
        c = 6;
    },
    697067: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return P;
          },
        }),
        n("653041");
      var s,
        i,
        r = n("392711"),
        a = n.n(r),
        o = n("661223"),
        u = n("312916"),
        d = n("362939"),
        l = n("991400"),
        f = n("871831"),
        _ = n("328470"),
        c = n("947781"),
        g = n("84819"),
        m = n("539947"),
        h = n("467006"),
        E = n("746835");
      ((i = s || (s = {}))[(i.NOT_FETCHED = 0)] = "NOT_FETCHED"),
        (i[(i.FETCHING = 1)] = "FETCHING"),
        (i[(i.FETCHED = 2)] = "FETCHED");
      let p = new Map(),
        v = new Map(),
        y = new Set(),
        I = 0,
        T = 0,
        S = new Set(),
        C = new Map(),
        A = !1;
      function N(e) {
        let { sound: t } = e,
          n = p.get(t.guildId),
          s = n?.findIndex(e => e.soundId === t.soundId);
        null != n && null != s && -1 !== s
          ? ((n[s] = t), p.set(t.guildId, [...n]))
          : null != n && (n?.push(t), p.set(t.guildId, [...n]));
      }
      let D = a().debounce(e => {
        _.default.track(h.AnalyticEvents.UPDATE_SOUNDBOARD_SETTINGS, {
          volume: Math.round((0, c.amplitudeToPerceptual)(e)),
        }),
          d.SoundboardSettings.updateSetting({ volume: e });
      }, 1e3);
      function O(e) {
        let t = e?.audioContextSettings?.user ?? {};
        for (let [e, n] of Object.entries(t))
          n.soundboardMuted ? y.add(e) : y.delete(e);
        for (let e of y.keys()) null == t[e] && y.delete(e);
      }
      class R extends o.default.Store {
        static #e = (this.displayName = "SoundboardStore");
        initialize() {
          this.waitFor(l.default), O(l.default.settings);
        }
        getOverlaySerializedState() {
          return {
            soundboardSounds: Object.fromEntries(p),
            favoritedSoundIds: Array.from(S),
            localSoundboardMutes: Array.from(y),
          };
        }
        getSounds() {
          return p;
        }
        getSoundsForGuild(e) {
          return p.get(e);
        }
        getSound(e, t) {
          return (p.get(e) ?? []).find(e => e.soundId === t);
        }
        getSoundById(e) {
          return Array.from(p.values())
            .flat()
            .find(t => t.soundId === e);
        }
        isFetchingSounds() {
          return 1 === T;
        }
        isFetchingDefaultSounds() {
          return 1 === I;
        }
        isFetching() {
          return this.isFetchingSounds() || this.isFetchingDefaultSounds();
        }
        shouldFetchDefaultSounds() {
          return 0 === I;
        }
        hasFetchedDefaultSounds() {
          return 2 === I;
        }
        isUserPlayingSounds(e) {
          let t = C.get(e);
          return null != t && t > 0;
        }
        isPlayingSound(e) {
          return null != v.get(e);
        }
        isFavoriteSound(e) {
          return S.has(e);
        }
        getFavorites() {
          return S;
        }
        isLocalSoundboardMuted(e) {
          return y.has(e);
        }
        hasHadOtherUserPlaySoundInSession() {
          return A;
        }
        hasFetchedAllSounds() {
          return 2 === T && 2 === I;
        }
      }
      var P = new R(u.default, {
        LOGOUT: function () {
          p.clear(), v.clear(), C.clear(), (A = !1), (T = 0), (I = 0);
        },
        GUILD_SOUNDBOARD_FETCH: function () {
          T = 1;
        },
        GUILD_SOUNDBOARD_SOUND_CREATE: N,
        GUILD_SOUNDBOARD_SOUND_UPDATE: N,
        GUILD_SOUNDBOARD_SOUND_DELETE: function (e) {
          let { soundId: t, guildId: n } = e,
            s = p.get(n),
            i = s?.findIndex(e => e.soundId === t);
          null != s &&
            null != i &&
            !(i < 0) &&
            (s.splice(i, 1), p.set(n, [...s]));
        },
        GUILD_SOUNDBOARD_SOUND_PLAY_START: function (e) {
          let { soundId: t, userId: n } = e,
            s = (v.get(t) ?? 0) + 1,
            i = (C.get(n) ?? 0) + 1;
          v.set(t, s),
            C.set(n, i),
            n !== f.default.getCurrentUser()?.id && (A = !0);
        },
        GUILD_SOUNDBOARD_SOUND_PLAY_END: function (e) {
          let { soundId: t, userId: n } = e,
            s = (v.get(t) ?? 0) - 1,
            i = (C.get(n) ?? 0) - 1;
          s <= 0 ? v.delete(t) : v.set(t, s),
            i <= 0 ? C.delete(n) : C.set(n, i);
        },
        USER_SOUNDBOARD_SET_VOLUME: function (e) {
          let { volume: t } = e;
          D(t);
        },
        VOICE_CHANNEL_SELECT: function () {
          v.clear(), C.clear();
        },
        USER_SETTINGS_PROTO_UPDATE: function (e) {
          let { settings: t } = e,
            { type: n, proto: s } = t;
          n === E.UserSettingsTypes.FRECENCY_AND_FAVORITES_SETTINGS
            ? (S = new Set(s?.favoriteSoundboardSounds?.soundIds ?? []))
            : n === E.UserSettingsTypes.PRELOADED_USER_SETTINGS && O(s);
        },
        SOUNDBOARD_FETCH_DEFAULT_SOUNDS: function () {
          I = 1;
        },
        SOUNDBOARD_FETCH_DEFAULT_SOUNDS_SUCCESS: function (e) {
          let { soundboardSounds: t } = e;
          p.set(m.DEFAULT_SOUND_GUILD_ID, t), (I = 2);
        },
        SOUNDBOARD_SOUNDS_RECEIVED: function (e) {
          let { updates: t } = e;
          t.forEach(e => {
            let { guildId: t, sounds: n } = e;
            p.set(t, n);
          }),
            (T = 2);
        },
        GUILD_DELETE: function (e) {
          let { guild: t } = e;
          p.delete(t.id);
        },
        AUDIO_TOGGLE_LOCAL_SOUNDBOARD_MUTE: function (e) {
          let { userId: t } = e;
          y.has(t) ? y.delete(t) : y.add(t);
        },
        OVERLAY_INITIALIZE: function (e) {
          let { soundboardStoreState: t } = e;
          (p = new Map(g.default.entries(t.soundboardSounds))),
            (S = new Set(t.favoritedSoundIds)),
            (y = new Set(t.localSoundboardMutes));
        },
        GUILD_SOUNDBOARD_SOUNDS_UPDATE: function (e) {
          let { guildId: t, soundboardSounds: n } = e;
          p.set(t, n);
        },
      });
    },
    202026: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          SpotifyAPI: function () {
            return c;
          },
          fetchIsSpotifyProtocolRegistered: function () {
            return v;
          },
          getAccessToken: function () {
            return g;
          },
          getDevices: function () {
            return h;
          },
          getProfile: function () {
            return m;
          },
          pause: function () {
            return p;
          },
          play: function () {
            return E;
          },
          setActiveDevice: function () {
            return y;
          },
          subscribePlayerStateNotifications: function () {
            return function e(t, n, s) {
              let r =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 2;
              return c
                .put(t, n, {
                  url: l.SpotifyEndpoints.NOTIFICATIONS_PLAYER,
                  query: { connection_id: s },
                })
                .catch(a =>
                  r <= 0
                    ? Promise.reject(a)
                    : (0, i.timeoutPromise)(5e3).then(() => e(t, n, s, r - 1))
                );
            };
          },
        }),
        n("177593");
      var s = n("454836"),
        i = n("767191"),
        r = n("312916"),
        a = n("152551"),
        o = n("827551"),
        u = n("501769"),
        d = n("822532"),
        l = n("161423"),
        f = n("467006");
      function _(e, t, n, s) {
        let r =
          arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 1;
        return e((s = { ...s, headers: { authorization: `Bearer ${n}` } }))
          .then(e => (202 === e.status ? Promise.reject(e) : e))
          .catch(n => {
            let a = !0 !== s.onlyRetryOnAuthorizationErrors && 202 === n.status;
            return (401 === n.status || a) && r > 0
              ? (202 === n.status
                  ? (0, i.timeoutPromise)(5e3)
                  : Promise.resolve()
                )
                  .then(() => g(t))
                  .then(n => {
                    let {
                      body: { access_token: i },
                    } = n;
                    return _(e, t, i, s, r - 1);
                  })
                  .then(e => new Promise(t => setImmediate(() => t(e))))
              : Promise.reject(n);
          });
      }
      let c = {
        get: _.bind(null, s.default.get),
        put: _.bind(null, s.default.put),
      };
      function g(e) {
        return s.default
          .get({
            url: f.Endpoints.CONNECTION_ACCESS_TOKEN(
              f.PlatformTypes.SPOTIFY,
              e
            ),
            oldFormErrors: !0,
          })
          .catch(t => {
            if (401 === t.status)
              r.default.dispatch({
                type: "SPOTIFY_ACCOUNT_ACCESS_TOKEN_REVOKE",
                accountId: e,
              });
            else if (429 === t.status) {
              let n = t.headers["retry-after"] * a.default.Millis.SECOND,
                s = isNaN(n) || 0 === n ? 5e3 : n;
              return (0, i.timeoutPromise)(s).then(() => g(e));
            }
            return Promise.reject(t);
          })
          .then(t => {
            let { access_token: n } = t.body;
            return (
              r.default.dispatch({
                type: "SPOTIFY_ACCOUNT_ACCESS_TOKEN",
                accountId: e,
                accessToken: n,
              }),
              t
            );
          });
      }
      function m(e, t) {
        return c
          .get(e, t, { url: l.SpotifyEndpoints.PROFILE })
          .then(
            t => (
              r.default.dispatch({
                type: "SPOTIFY_PROFILE_UPDATE",
                accountId: e,
                isPremium: "premium" === t.body.product,
              }),
              t
            )
          );
      }
      function h(e, t) {
        return c
          .get(e, t, { url: l.SpotifyEndpoints.PLAYER_DEVICES })
          .then(
            t => (
              t.body &&
                r.default.dispatch({
                  type: "SPOTIFY_SET_DEVICES",
                  accountId: e,
                  devices: t.body.devices,
                }),
              t
            )
          );
      }
      function E(e, t, n, s) {
        let i =
            arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : {},
          a = l.SpotifyEndpoints.PLAYER_OPEN(s, n, !1),
          { deviceId: o, position: u, contextUri: d, repeat: f } = i;
        return c
          .put(e, t, {
            url: l.SpotifyEndpoints.PLAYER_PLAY,
            query: { device_id: o },
            body: {
              context_uri: null != d ? d : void 0,
              uris: null == d ? [a] : void 0,
              offset: null != d ? { uri: a } : void 0,
              position_ms: null != u ? u : 0,
            },
          })
          .then(n =>
            null == f
              ? n
              : c.put(e, t, {
                  url: l.SpotifyEndpoints.PLAYER_REPEAT,
                  query: { device_id: o, state: f ? "context" : "off" },
                })
          )
          .then(
            e => (
              r.default.dispatch({
                type: "SPOTIFY_PLAYER_PLAY",
                id: n,
                position: null != u ? u : 0,
              }),
              e
            )
          );
      }
      function p(e, t) {
        return c
          .put(e, t, { url: l.SpotifyEndpoints.PLAYER_PAUSE })
          .then(e => (r.default.dispatch({ type: "SPOTIFY_PLAYER_PAUSE" }), e));
      }
      function v() {
        !d.default.isProtocolRegistered() &&
          (0, u.isDesktop)() &&
          o.default.isProtocolRegistered(l.SPOTIFY_APP_PROTOCOL).then(e => {
            r.default.dispatch({
              type: "SPOTIFY_SET_PROTOCOL_REGISTERED",
              isRegistered: e,
            });
          });
      }
      function y(e, t) {
        r.default.dispatch({
          type: "SPOTIFY_SET_ACTIVE_DEVICE",
          accountId: e,
          deviceId: t,
        });
      }
    },
    161423: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          SPOTIFY_APP_PROTOCOL: function () {
            return l;
          },
          SPOTIFY_HOSTNAMES: function () {
            return g;
          },
          SPOTIFY_PARTY_PREFIX: function () {
            return f;
          },
          SPOTIFY_PLATFORM_NAME: function () {
            return _;
          },
          SpotifyActionTypes: function () {
            return a;
          },
          SpotifyEndpoints: function () {
            return E;
          },
          SpotifyResourceTypes: function () {
            return r;
          },
          getSpotifyResourceType: function () {
            return p;
          },
          isSpotifyParty: function () {
            return c;
          },
        });
      var s,
        i,
        r,
        a,
        o = n("763301"),
        u = n("501769"),
        d = n("467006");
      let l = "spotify",
        f = "spotify:",
        _ = o.default.get(d.PlatformTypes.SPOTIFY).name;
      function c(e) {
        return null != e && e.startsWith(f);
      }
      ((s = r || (r = {})).TRACK = "track"),
        (s.ARTIST = "artist"),
        (s.ALBUM = "album"),
        (s.PLAYLIST = "playlist"),
        (s.EPISODE = "episode"),
        (s.SHOW = "show"),
        ((i = a || (a = {})).USER_ACTIVITY_PLAY = "user_activity_play"),
        (i.USER_ACTIVITY_SYNC = "user_activity_sync"),
        (i.EMBED_SYNC = "embed_sync");
      let g = ["open.spotify.com", "www.spotify.com"],
        m = "https://api.spotify.com/v1",
        h = e => `?utm_source=discord&utm_medium=${e}`,
        E = Object.freeze({
          PROFILE: `${m}/me`,
          NOTIFICATIONS_PLAYER: `${m}/me/notifications/player`,
          PLAYER: `${m}/me/player`,
          PLAYER_DEVICES: `${m}/me/player/devices`,
          PLAYER_PLAY: `${m}/me/player/play`,
          PLAYER_PAUSE: `${m}/me/player/pause`,
          PLAYER_REPEAT: `${m}/me/player/repeat`,
          WEB_OPEN: function (e, t) {
            let n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : "desktop";
            return `https://open.spotify.com/${encodeURIComponent(e)}/${encodeURIComponent(t)}${h(n)}`;
          },
          EMBED: function (e) {
            let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : "desktop";
            return `https://open.spotify.com/embed${e}${h(t)}`;
          },
          PLAYER_OPEN: function (e, t) {
            let n =
                !(arguments.length > 2) ||
                void 0 === arguments[2] ||
                arguments[2],
              s =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : "desktop";
            return `${l}:${encodeURIComponent(e)}:${encodeURIComponent(t)}${n ? h(s) : ""}`;
          },
          PREMIUM_SITE: `https://www.spotify.com/premium/${h("desktop")}`,
          INSTALL_ATTRIBUTION: e =>
            `https://app.adjust.com/bdyga9?campaign=${e}`,
          APP_STORE: (0, u.isAndroid)()
            ? "https://play.google.com/store/apps/details?id=com.spotify.music&hl=en_US&gl=US"
            : "https://itunes.apple.com/us/app/spotify-music/id324684580?mt=8",
          IOS_APP_STORE:
            "https://itunes.apple.com/us/app/spotify-music/id324684580?mt=8",
        });
      function p(e) {
        if ("string" != typeof e) return null;
        switch (e) {
          case "track":
            return "track";
          case "artist":
            return "artist";
          case "album":
            return "album";
          case "playlist":
            return "playlist";
          case "episode":
            return "episode";
          case "show":
            return "show";
          default:
            return null;
        }
      }
    },
    822532: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var s = n("661223"),
        i = n("312916");
      let r = !1;
      class a extends s.default.Store {
        static #e = (this.displayName = "SpotifyProtocolStore");
        isProtocolRegistered() {
          return r;
        }
      }
      var o = new a(i.default, {
        SPOTIFY_SET_PROTOCOL_REGISTERED: function (e) {
          let { isRegistered: t } = e;
          r = t;
        },
      });
    },
    567927: function (e, t, n) {
      "use strict";
      let s, i, r;
      n.r(t),
        n.d(t, {
          default: function () {
            return eE;
          },
        }),
        n("653041"),
        n("789020");
      var a,
        o,
        u = n("392711"),
        d = n.n(u),
        l = n("743548"),
        f = n("661223"),
        _ = n("331900"),
        c = n("767191"),
        g = n("312916"),
        m = n("925677"),
        h = n("763301"),
        E = n("159110"),
        p = n("841869"),
        v = n("224022"),
        y = n("262047"),
        I = n("53361"),
        T = n("551364"),
        S = n("565639"),
        C = n("24606"),
        A = n("642174"),
        N = n("328470"),
        D = n("799711"),
        O = n("152551"),
        R = n("202026"),
        P = n("161423"),
        b = n("467006");
      let M = h.default.get(b.PlatformTypes.SPOTIFY),
        V = "hm://pusher/v1/connections/",
        L = 30 * O.default.Millis.SECOND,
        k = 30 * O.default.Millis.SECOND,
        w = 5 * O.default.Millis.MINUTE,
        U = 5 * O.default.Millis.SECOND,
        G = 1.5 * O.default.Millis.SECOND,
        F = 1 * O.default.Millis.MINUTE,
        B = 3 * O.default.Millis.SECOND;
      ((o = a || (a = {})).PLAYER_STATE_CHANGED = "PLAYER_STATE_CHANGED"),
        (o.DEVICE_STATE_CHANGED = "DEVICE_STATE_CHANGED");
      let H = { MESSAGE: "message", PING: "ping", PONG: "pong" },
        x = { SINGLE: "single" },
        Y = new p.default("Spotify"),
        j = new c.Timeout(),
        K = new c.Timeout(),
        W = new c.Timeout(),
        z = new c.Timeout(),
        $ = new c.Timeout(),
        q = {},
        X = {},
        Q = {},
        Z = !1,
        J = null;
      function ee() {
        for (let e in q) {
          let t = q[e];
          if (!t.connected || null == X[e]) continue;
          let n = X[e].find(e => e.is_active);
          if (null != n) return { socket: t, device: n };
        }
      }
      function et(e) {
        g.default.dispatch({
          type: "SPOTIFY_PLAYER_STATE",
          accountId: e,
          track: null,
          volumePercent: 0,
          isPlaying: !1,
          repeat: !1,
          position: 0,
          context: null,
        });
      }
      function en(e) {
        return S.default.findActivity(
          e,
          e =>
            null != e.party &&
            null != e.party.id &&
            (0, P.isSpotifyParty)(e.party.id)
        );
      }
      let es = new Set([WebSocket.CONNECTING, WebSocket.OPEN]);
      class ei {
        constructor(e, t) {
          (this._requestedDisconnect = !1),
            (this._requestedConnect = !1),
            (this.handleDeviceStateChange = d().throttle(() => {
              (0, R.getDevices)(this.accountId, this.accessToken),
                eg(this.accountId, this.accessToken);
            }, B)),
            (this.accountId = e),
            (this.accessToken = t),
            (this.pingInterval = new c.Interval()),
            (this.backoff = new l.default(void 0, F)),
            this.connect();
        }
        get connected() {
          return null != this.socket && es.has(this.socket.readyState);
        }
        connect() {
          !this.connected &&
            !this._requestedConnect &&
            (Y.info("WS Connecting"),
            (this._requestedDisconnect = !1),
            (this._requestedConnect = !0),
            eg(this.accountId, this.accessToken)
              .then(() => {
                (this._requestedConnect = !1),
                  (this.socket = new WebSocket(
                    `wss://dealer.spotify.com/?access_token=${this.accessToken}`
                  )),
                  (this.socket.onopen = this.handleOpen.bind(this)),
                  (this.socket.onmessage = this.handleMessage.bind(this)),
                  (this.socket.onclose = this.socket.onerror =
                    this.handleClose.bind(this));
              })
              .catch(e => {
                Y.error(e), (this._requestedConnect = !1), this.handleClose();
              }));
        }
        disconnect() {
          (this._requestedDisconnect = !0), this.backoff.cancel();
          try {
            this.socket?.close();
          } catch (e) {}
        }
        ping() {
          this.connected && this.socket?.send(JSON.stringify({ type: H.PING }));
        }
        handleOpen() {
          Y.info("WS Connected"),
            this.backoff.succeed(),
            this.pingInterval.start(L, () => this.ping()),
            (0, R.getProfile)(this.accountId, this.accessToken),
            (0, R.getDevices)(this.accountId, this.accessToken);
        }
        handleMessage(e) {
          let { data: t } = e;
          if ("string" != typeof t) return;
          let { type: n, uri: s, payloads: i } = JSON.parse(t);
          switch (n) {
            case H.MESSAGE:
              if ("string" == typeof s && s.startsWith(V))
                (this.connectionId = decodeURIComponent(s.split(V)[1])),
                  (0, R.subscribePlayerStateNotifications)(
                    this.accountId,
                    this.accessToken,
                    this.connectionId
                  );
              else if (Array.isArray(i)) {
                for (let { events: e } of i)
                  if (null != e) for (let t of e) this.handleEvent(t);
              }
            case H.PONG:
          }
        }
        handleClose() {
          if ((this.pingInterval.stop(), !this._requestedDisconnect))
            try {
              let e = this.backoff.fail(() => {
                !this._requestedDisconnect && this.connect();
              });
              Y.info(`WS Disconnected. Next retry in ${Math.round(e)}ms`);
            } catch (e) {}
        }
        handleEvent(e) {
          let { type: t, event: n } = e;
          switch (t) {
            case "PLAYER_STATE_CHANGED":
              null != n &&
                null != n.state &&
                ec(this.accountId, this.accessToken, n.state);
              break;
            case "DEVICE_STATE_CHANGED":
              this.handleDeviceStateChange();
          }
        }
      }
      function er(e, t) {
        e in q
          ? ((q[e].accessToken = t),
            Y.info(`Updated account access token: ${e}`))
          : ((q[e] = new ei(e, t)), Y.info(`Added account: ${e}`));
      }
      function ea(e) {
        if (!(e in q)) return;
        q[e].disconnect(), delete q[e];
        let t = Q[e];
        null != t && null != s && t.track.id === s.track.id && (s = null),
          delete Q[e],
          Y.info(`Removed account: ${e}`);
      }
      function eo(e, t) {
        for (let n of X[e]) n.is_active = n.id === t;
      }
      function eu(e, t, n) {
        let s = ee();
        if (null == s) return !1;
        let { socket: r, device: a } = s,
          { sync_id: o, party: u, timestamps: d } = t;
        if (
          null == o ||
          null == u ||
          null == u.id ||
          !(0, P.isSpotifyParty)(u.id)
        )
          return !1;
        let l = null != d && null != d.start ? d.start : Date.now(),
          f = Math.max(0, Date.now() - l),
          _ = !1,
          c = Q[r.accountId];
        null != c && !1 === c.repeat && (_ = null);
        let g = (0, P.getSpotifyResourceType)(t.metadata?.type);
        if (null == g) return;
        (0, R.play)(r.accountId, r.accessToken, o, g, {
          position: +f,
          deviceId: a.id,
          repeat: _,
        }),
          (i = { userId: e, partyId: u.id, trackId: o, startTime: l });
        let m = "presence change";
        n &&
          ((m = "started"),
          N.default.track(b.AnalyticEvents.SPOTIFY_LISTEN_ALONG_STARTED, {
            party_id: u.id,
            other_user_id: e,
          })),
          Y.info(
            `Listen along ${m}: ${r.accountId} to ${e} playing ${o} on ${a.name}`
          );
      }
      function ed() {
        N.default.track(b.AnalyticEvents.SPOTIFY_LISTEN_ALONG_ENDED, {
          party_id: null != i ? i.partyId : null,
          other_user_id: null != i ? i.userId : null,
        });
        let e = null != i ? i.trackId : null;
        (i = null), Y.info("Listen along stopped");
        let t = ee();
        if (null == t) return;
        let { socket: n } = t,
          s = Q[n.accountId];
        null != s &&
          s.track.id === e &&
          (0, R.pause)(n.accountId, n.accessToken);
      }
      function el() {
        let e = Object.keys(q),
          t = I.default.getAccounts().filter(e => {
            let { type: t } = e;
            return t === b.PlatformTypes.SPOTIFY;
          });
        if (null == t) return !1;
        let n = t.map(e => {
          let { id: t } = e;
          return t;
        });
        for (let t of e) !n.includes(t) && ea(t);
        let i = !1;
        for (let n of t)
          if (
            (null != s && s.account.id === n.id && ((s.account = n), (i = !0)),
            !e.includes(n.id))
          ) {
            if (null != n.accessToken) {
              er(n.id, n.accessToken);
              continue;
            }
            (0, R.getAccessToken)(n.id);
          }
        return i;
      }
      function ef() {
        if (null == s) return;
        let e = ee();
        if (null == e) return;
        let { socket: t } = e;
        (Z = !0),
          (0, R.pause)(t.accountId, t.accessToken),
          N.default.track(b.AnalyticEvents.SPOTIFY_AUTO_PAUSED),
          Y.info("Playback auto paused");
      }
      function e_(e) {
        if (e === y.default.getId()) {
          let t = A.default.isCurrentClientInVoiceChannel(),
            n = (0, m.getIsSpeaking)({
              userId: e,
              checkSoundSharing: !0,
              checkSoundboardSounds: !1,
            });
          t && n && null != s
            ? (j.start(k, ef, !1), K.stop())
            : K.start(100, () => j.stop(), !1);
        }
        return !1;
      }
      function ec(e, t, n) {
        let s,
          i,
          {
            device: r,
            progress_ms: a,
            is_playing: o,
            repeat_state: u,
            item: d,
            context: l,
          } = n;
        if (null != d && d.type === P.SpotifyResourceTypes.TRACK) {
          let e = d.id;
          null != d.linked_from &&
            null != d.linked_from.id &&
            (e = d.linked_from.id),
            (s = {
              id: e,
              name: d.name,
              duration: d.duration_ms,
              type: P.SpotifyResourceTypes.TRACK,
              album: {
                id: d.album?.id ?? "",
                name: d.album?.name ?? "",
                image: d.album?.images[0],
              },
              artists: d.artists ?? [],
              isLocal: d.is_local || !1,
            });
        } else
          null != d &&
            d.type === P.SpotifyResourceTypes.EPISODE &&
            (s = {
              id: d.id,
              name: d.name,
              duration: d.duration_ms,
              type: P.SpotifyResourceTypes.EPISODE,
              album: {
                id: d.show?.id ?? "",
                name: d.show?.name ?? "",
                image: d.show?.images[0],
              },
              artists: [],
              isLocal: !1,
            });
        if (
          (null != r && !0 !== r.is_active && (r = { ...r, is_active: !0 }),
          null != l &&
            [
              P.SpotifyResourceTypes.PLAYLIST,
              P.SpotifyResourceTypes.ALBUM,
            ].includes(l.type))
        ) {
          let n = eh.getPlayerState(e);
          i =
            null != n && null != n.context && n.context.uri === l.uri
              ? Promise.resolve(n.context)
              : l.type === P.SpotifyResourceTypes.ALBUM
                ? Promise.resolve(l)
                : R.SpotifyAPI.get(e, t, { url: l.href })
                    .then(e => {
                      let { body: t } = e;
                      return t;
                    })
                    .catch(e => {
                      if (e && 404 === e.status) return null;
                      throw e;
                    });
        } else i = Promise.resolve(void 0);
        return i.then(t => {
          null != t &&
            t.type === P.SpotifyResourceTypes.PLAYLIST &&
            !t.public &&
            (t = null),
            g.default.dispatch({
              type: "SPOTIFY_PLAYER_STATE",
              accountId: e,
              track: s,
              volumePercent: null != r ? r.volume_percent : 0,
              isPlaying: o,
              repeat: "off" !== u,
              position: a,
              context: t,
              device: r,
            });
        });
      }
      function eg(e, t) {
        return R.SpotifyAPI.get(e, t, {
          url: P.SpotifyEndpoints.PLAYER,
          query: {
            additional_types: `${P.SpotifyResourceTypes.TRACK},${P.SpotifyResourceTypes.EPISODE}`,
          },
          onlyRetryOnAuthorizationErrors: !0,
        })
          .then(n => {
            let s = n.body;
            null != s ? ec(e, t, s).then(() => n) : et(e);
          })
          .catch(() => et(e));
      }
      class em extends f.default.Store {
        static #e = (this.displayName = "SpotifyStore");
        initialize() {
          this.waitFor(I.default, C.default),
            this.syncWith([S.default], () =>
              (function () {
                if (null == i || null == ee()) return !1;
                let { userId: e } = i,
                  t = en(e);
                if (null == t)
                  return (
                    W.start(w, () => {
                      null != i && i.userId === e && (0, E.default)();
                    }),
                    !1
                  );
                W.stop();
                let { sync_id: n, timestamps: s, party: r } = t,
                  a = null != n && i.trackId !== n,
                  o = null != s && i.startTime !== s.start;
                return a || o
                  ? eu(e, t, !1)
                  : null != r && r.id !== i.partyId && ((i.partyId = r.id), !0);
              })()
            ),
            (0, R.fetchIsSpotifyProtocolRegistered)();
        }
        hasConnectedAccount() {
          return Object.keys(q).length > 0;
        }
        getActiveSocketAndDevice() {
          return ee();
        }
        getPlayableComputerDevices() {
          let e = [];
          for (let t in q) {
            let n = q[t];
            if (!n.connected || null == X[t]) continue;
            let s = X[t].find(e => !e.is_restricted && "Computer" === e.type);
            null != s && e.push({ socket: n, device: s });
          }
          return e;
        }
        canPlay(e) {
          let { sync_id: t, party: n } = e;
          return (
            null != ee() &&
            null != t &&
            null != n &&
            null != n.id &&
            (0, P.isSpotifyParty)(n.id)
          );
        }
        getSyncingWith() {
          return i;
        }
        wasAutoPaused() {
          return Z;
        }
        getLastPlayedTrackId() {
          return r;
        }
        getTrack() {
          return null != s ? s.track : null;
        }
        getPlayerState(e) {
          return Q[e];
        }
        shouldShowActivity() {
          return null != s && s.account.showActivity && !T.default.isIdle();
        }
        getActivity() {
          let e, t, n;
          if (null == s) return null != i ? en(i.userId) : null;
          let {
              track: {
                artists: r,
                album: a,
                name: o,
                id: u,
                duration: d,
                isLocal: l,
                type: f,
              },
              startTime: _,
              context: c,
            } = s,
            g = r.slice(0, 5);
          r.length > 0 &&
            (e = g
              .map(e => {
                let { name: t } = e;
                return t.replace(/;/g, "");
              })
              .join("; "));
          let m = {},
            h =
              null != a.image
                ? (0, D.getAssetFromImageURL)(
                    b.PlatformTypes.SPOTIFY,
                    a.image.url
                  )
                : null;
          null != a.image && null != h && (m.large_image = h),
            "single" !== a.type && (m.large_text = a.name),
            null != c && (t = c.uri),
            (n =
              null != i && null != i.partyId
                ? i.partyId
                : `${P.SPOTIFY_PARTY_PREFIX}${y.default.getId()}`);
          let E = o.length > 128 ? o.substring(0, 125) + "..." : o,
            p = {
              name: M.name,
              assets: m,
              details: E,
              state: e,
              timestamps: { start: _, end: _ + d },
              party: { id: n },
            };
          return (
            !l &&
              ((p.sync_id = u),
              (p.flags = b.ActivityFlags.PLAY | b.ActivityFlags.SYNC),
              (p.metadata = {
                context_uri: t,
                album_id: a.id,
                artist_ids: g.map(e => {
                  let { id: t } = e;
                  return t;
                }),
                type: f,
              })),
            p
          );
        }
      }
      let eh = new em(g.default, {
        USER_CONNECTIONS_UPDATE: el,
        CONNECTION_OPEN: el,
        SPOTIFY_ACCOUNT_ACCESS_TOKEN: function (e) {
          let { accountId: t, accessToken: n } = e;
          return er(t, n), !1;
        },
        SPOTIFY_ACCOUNT_ACCESS_TOKEN_REVOKE: function (e) {
          let { accountId: t } = e;
          ea(t);
        },
        SPOTIFY_PROFILE_UPDATE: function (e) {
          let { accountId: t, isPremium: n } = e,
            s = q[t];
          if (null == s) return !1;
          (s.isPremium = n),
            Y.info(`Profile updated for ${t}: isPremium = ${n}`);
        },
        SPOTIFY_PLAYER_STATE: function (e) {
          let {
              accountId: t,
              isPlaying: n,
              repeat: r,
              track: a,
              position: o,
              device: u,
              context: l,
            } = e,
            f = !1;
          if (null != u) {
            if (null != X[t]) {
              let e = X[t].find(e => {
                let { id: t } = e;
                return t === u.id;
              });
              null == e
                ? (X[t].push(u), (f = !0))
                : !(0, _.default)(e, u) && (Object.assign(e, u), (f = !0)),
                eo(t, u.id);
            } else (X[t] = [u]), (f = !0);
          }
          n ? J?.start(k, ef) : ((a = null), J?.stop());
          let c = I.default.getAccount(t, b.PlatformTypes.SPOTIFY);
          if (null == c) return f;
          let g = Q[t],
            m =
              null != a
                ? {
                    account: c,
                    track: a,
                    startTime: (function (e, t) {
                      let n = Date.now(),
                        s = null != e ? e.startTime : 0,
                        i = n - t;
                      return Math.abs(i - s) > G ? i : s;
                    })(g, o),
                    context: l,
                    repeat: r,
                  }
                : null,
            h = null != u && null != i && 0 === o && !n;
          !h && (Q[t] = m);
          let p = s;
          if (
            ((s = d()
              .values(Q)
              .find(e => null != e)),
            e_(y.default.getId()),
            null == a || h
              ? z.stop()
              : z.start(a.duration - o + U, () => et(c.id)),
            null != i &&
            ((!n && o > 0) ||
              null == u ||
              (null != m && i.trackId !== m.track.id))
              ? (Y.info(
                  `Listen along active but playback stopped or track changed. Stopping listen along in ${U}ms`
                ),
                $.start(U, () => {
                  Y.info("Stopping listening along"),
                    (0, E.default)(),
                    et(c.id);
                }))
              : $.isStarted() &&
                (Y.info(
                  "Listen along stop cancelled as playback of track resumed"
                ),
                $.stop()),
            p === s ||
              (null == g && null == m) ||
              (null != g &&
                null != m &&
                g.track.id === m.track.id &&
                g.startTime === m.startTime))
          )
            return f;
          null != a &&
            N.default.track(b.AnalyticEvents.ACTIVITY_UPDATED, {
              party_platform: b.PlatformTypes.SPOTIFY,
              track_id: a.id,
              has_images: !0,
            });
        },
        SPOTIFY_PLAYER_PLAY: function (e) {
          let { id: t } = e;
          r = t;
        },
        ACTIVITY_PLAY: function (e) {
          let t,
            { activity: n, metadata: s } = e,
            r = ee();
          if (null == r) return !1;
          let { socket: a, device: o } = r,
            { sync_id: u, party: d } = n;
          return (
            !!(
              null != u &&
              null != d &&
              null != d.id &&
              (0, P.isSpotifyParty)(d.id)
            ) &&
            (null != s && (t = s.context_uri),
            null != i && ed(),
            null != s &&
              void ((0, R.play)(a.accountId, a.accessToken, u, s.type, {
                contextUri: t,
                deviceId: o.id,
              }),
              Y.info(`Play started: ${a.accountId} playing ${u} on ${o.name}`)))
          );
        },
        ACTIVITY_SYNC: function (e) {
          let { activity: t, userId: n } = e;
          return eu(n, t, !0);
        },
        ACTIVITY_SYNC_STOP: ed,
        SPOTIFY_SET_DEVICES: function (e) {
          let { accountId: t, devices: n } = e;
          (X[t] = n), Y.info(`Devices updated for ${t}:`, n);
        },
        SPOTIFY_SET_ACTIVE_DEVICE: function (e) {
          let { accountId: t, deviceId: n } = e;
          eo(t, n);
        },
        SPEAKING: function (e) {
          let { userId: t } = e;
          return e_(t);
        },
        VOICE_STATE_UPDATES: function (e) {
          let { voiceStates: t } = e;
          return t.reduce((e, t) => {
            let { userId: n } = t;
            return e_(n) || e;
          }, !1);
        },
        MEDIA_ENGINE_SET_GO_LIVE_SOURCE: function (e) {
          let { settings: t } = e;
          if (t?.desktopSettings != null) {
            J?.stop();
            let { sourceId: e, sound: n } = t?.desktopSettings;
            null != e &&
            v.default.getObservedAppNameForWindow(e) === M.name &&
            n
              ? (J = new c.Interval()).start(k, ef)
              : (J = null);
          }
        },
      });
      var eE = eh;
    },
    267642: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          navigateToStage: function () {
            return v;
          },
          openEndGuildEventConfirmationModal: function () {
            return g;
          },
          openEndStageModal: function () {
            return E;
          },
          openStageBlockedUsersSheet: function () {
            return h;
          },
          openStageChannelAudienceNoticeModal: function () {
            return m;
          },
          openStageChannelSettings: function () {
            return c;
          },
          shouldShowBlockedUsers: function () {
            return p;
          },
          showChannelChangeConfirmationAlert: function () {
            return y;
          },
        });
      var s = n("735250");
      n("470079");
      var i = n("910838"),
        r = n("553766"),
        a = n("262047"),
        o = n("443966"),
        u = n("120637"),
        d = n("326166"),
        l = n("443034"),
        f = n("467006"),
        _ = n("348162");
      function c(e, t) {
        (0, i.openModalLazy)(
          async () => {
            let { default: t } = await n
              .el("267642@1281:1322")
              .then(n.bind(n, "924930"));
            return n => (0, s.jsx)(t, { ...n, channel: e });
          },
          {
            contextKey:
              t === f.AppContext.POPOUT
                ? _.POPOUT_MODAL_CONTEXT
                : _.DEFAULT_MODAL_CONTEXT,
          }
        );
      }
      function g(e, t) {
        (0, i.openModalLazy)(
          async () => {
            let { default: t } = await n
              .el("267642@2120:2166")
              .then(n.bind(n, "340709"));
            return n => (0, s.jsx)(t, { ...n, channel: e });
          },
          {
            contextKey:
              t === f.AppContext.POPOUT
                ? _.POPOUT_MODAL_CONTEXT
                : _.DEFAULT_MODAL_CONTEXT,
          }
        );
      }
      function m(e) {}
      function h(e, t) {
        (0, i.openModalLazy)(async () => {
          let { default: i } = await n
            .el("267642@2804:2849")
            .then(n.bind(n, "606740"));
          return n => (0, s.jsx)(i, { ...n, channel: e, onAccept: t });
        });
      }
      function E(e, t) {
        (0, i.openModalLazy)(
          async () => {
            let { default: t } = await n
              .el("267642@3278:3307")
              .then(n.bind(n, "380111"));
            return n => (0, s.jsx)(t, { ...n, channel: e });
          },
          {
            contextKey:
              t === f.AppContext.POPOUT
                ? _.POPOUT_MODAL_CONTEXT
                : _.DEFAULT_MODAL_CONTEXT,
          }
        );
      }
      function p(e) {
        let t = a.default.getId(),
          n = (0, l.getStageBlockedUsersCount)(e);
        return !o.default.isModerator(t, e) && n > 0;
      }
      function v(e, t) {
        var l;
        let f =
          !(arguments.length > 2) || void 0 === arguments[2] || arguments[2];
        t !== e.id && (0, d.setIsOnStartStageScreen)(!0),
          (l = e),
          (0, r.transitionToChannel)(l.id),
          t !== e.id &&
            f &&
            !(function (e) {
              let t = a.default.getId(),
                r = o.default.isModerator(t, e.id),
                d = u.default.isLive(e.id);
              r && !d
                ? c(e)
                : r &&
                  d &&
                  (function (e) {
                    (0, i.openModalLazy)(async () => {
                      let { default: t } = await n
                        .el("267642@1744:1790")
                        .then(n.bind(n, "887012"));
                      return n => (0, s.jsx)(t, { ...n, channel: e });
                    });
                  })(e);
            })(e);
      }
      function y(e, t) {
        return (
          (0, i.openModalLazy)(async () => {
            let { default: i } = await n
              .el("267642@5015:5091")
              .then(n.bind(n, "288154"));
            return n => (0, s.jsx)(i, { channel: e, onConfirm: t, ...n });
          }),
          !0
        );
      }
    },
    849922: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          openStageChannelAudienceNoticeModal: function () {
            return i;
          },
        });
      var s = n("267642");
      function i(e) {
        s.openStageChannelAudienceNoticeModal(e);
      }
    },
    620582: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          connectAndOpen: function () {
            return v;
          },
          connectOrLurkStage: function () {
            return E;
          },
          connectToStage: function () {
            return p;
          },
          navigateToStage: function () {
            return y;
          },
        });
      var s = n("181123"),
        i = n("820228"),
        r = n("116395"),
        a = n("130200"),
        o = n("533549"),
        u = n("311545"),
        d = n("731865"),
        l = n("327271"),
        f = n("197905"),
        _ = n("232733"),
        c = n("267642"),
        g = n("341861"),
        m = n("437239"),
        h = n("607991");
      function E(e, t) {
        let n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
        return new Promise(async i => {
          let r = d.default.getChannel(t);
          if (null != r) return p(r, n), i(r);
          await (0, o.stopLurkingAll)([e]),
            await s.default.joinGuild(e, { lurker: !0 }),
            l.default.addConditionalChangeListener(() => {
              let e = d.default.getChannel(t);
              return null == e || (p(e), h.default.initialize(), i(e), !1);
            });
        });
      }
      function p(e) {
        var t, n;
        let s = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
          a = _.default.getVoiceChannelId();
        if (
          !s &&
          ((t = e),
          (n = a),
          !f.default.can(m.JOIN_VOCAL_CHANNEL_PERMISSIONS, t) ||
            (c.shouldShowBlockedUsers(t.id) &&
              n !== t.id &&
              (c.openStageBlockedUsersSheet(t, () => v(t, !0)), 1)))
        )
          return !1;
        if (
          (g.default.initialize(),
          i.default.selectVoiceChannel(e.id),
          (a = _.default.getVoiceChannelId()) !== e.id)
        )
          return !1;
        let o = u.default.getAllApplicationStreamsForChannel(e.id);
        return o.length > 0 && (0, r.watchStream)(o[0], { noFocus: !1 }), !0;
      }
      function v(e) {
        let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
          n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
          s = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],
          i = _.default.getVoiceChannelId();
        if (
          !(
            !s &&
            i !== e.id &&
            (0, a.shouldShowVoiceChannelChangeConfirmation)(e) &&
            c.showChannelChangeConfirmationAlert(e, () => v(e, t, n, !0))
          )
        )
          p(e, t) && y(e, i, n);
      }
      function y(e, t) {
        let n =
          !(arguments.length > 2) || void 0 === arguments[2] || arguments[2];
        c.navigateToStage(e, t, n);
      }
    },
    341861: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        });
      var s = n("986329"),
        i = n("312916"),
        r = n("614019"),
        a = n("262047"),
        o = n("232733"),
        u = n("849922"),
        d = n("443966"),
        l = n("479832");
      class f extends r.default {
        _initialize() {
          i.default.subscribe(
            "VOICE_STATE_UPDATES",
            this.handleVoiceStateUpdates
          );
        }
        _terminate() {
          i.default.unsubscribe(
            "VOICE_STATE_UPDATES",
            this.handleVoiceStateUpdates
          );
        }
        constructor(...e) {
          super(...e),
            (this.handleVoiceStateUpdates = e => {
              let { voiceStates: t } = e;
              t.forEach(e => {
                if (null == e.channelId || e.userId !== a.default.getId())
                  return;
                if (
                  (this.terminate(),
                  s.default.get(l.STAGE_AUDIENCE_NOTICE_SHOWN_STORAGE_KEY, !1))
                )
                  return;
                let t = o.default.getVoiceChannelId();
                if (null != t)
                  e.channelId === t &&
                    d.default.isAudienceMember(e.userId, t) &&
                    (s.default.set(
                      l.STAGE_AUDIENCE_NOTICE_SHOWN_STORAGE_KEY,
                      !0
                    ),
                    u.openStageChannelAudienceNoticeModal(t));
              });
            });
        }
      }
      var _ = new f();
    },
    65435: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return j;
          },
        }),
        n("653041");
      var s = n("348327"),
        i = n.n(s),
        r = n("392711"),
        a = n.n(r),
        o = n("661223"),
        u = n("386695"),
        d = n("312916"),
        l = n("188304"),
        f = n("311545"),
        _ = n("262047"),
        c = n("731865"),
        g = n("327271"),
        m = n("197905"),
        h = n("606929"),
        E = n("24606"),
        p = n("871831"),
        v = n("642174"),
        y = n("769639"),
        I = n("146433"),
        T = n("443966"),
        S = n("120637");
      let C = "NO_GUILD",
        A = new u.default(
          e => [
            (function (e) {
              return e.getGuildId() ?? C;
            })(e),
          ],
          e => e.id
        ),
        N = new Set(),
        D = {};
      function O(e) {
        return A.values(e ?? void 0, !0).map(e => {
          let { id: t } = e;
          return t;
        });
      }
      function R(e) {
        !N.has(e) &&
          (N.add(e),
          a()(c.default.getMutableGuildChannelsForGuild(e))
            .values()
            .forEach(e => {
              M(e) && A.set(e.id, e);
            }));
      }
      function P(e) {
        let t = D[e];
        if (null != t) return t;
        let n = c.default.getChannel(e);
        return null != n && n.isGuildStageVoice()
          ? (R(n.guild_id), M(n))
            ? b(e)
            : null
          : null;
      }
      function b(e) {
        let t = D[e];
        return (
          null == t && ((t = new I.default(e)), (D[e] = t), t.rebuild()), t
        );
      }
      function M(e) {
        return (
          null != e &&
          e.isGuildStageVoice() &&
          y.default.countVoiceStatesForChannel(e.id) > 0
        );
      }
      function V(e) {
        let t =
          arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : O();
        return t.reduce((t, n) => {
          let s = b(n);
          return e(s)
            ? (!(function (e, t) {
                let n = c.default.getChannel(e);
                null != n && n.isGuildStageVoice()
                  ? 0 === t.size()
                    ? k(n.id)
                    : null == A.get(n.id) && A.set(n.id, n)
                  : k(e);
              })(n, s),
              !0)
            : t;
        }, !1);
      }
      function L(e) {
        let t =
          arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : O();
        return V(t => t.updateParticipant(e), t);
      }
      function k(e) {
        return null != e && (delete D[e], A.delete(e), !0);
      }
      function w() {
        N.clear(), A.clear(), (D = {});
      }
      function U(e, t, n) {
        if (null == n || e.has(n)) return;
        let s = c.default.getChannel(n);
        s?.isGuildStageVoice() && (t.add(n), e.add(n));
      }
      function G(e) {
        let { user: t } = e;
        return L(t.id);
      }
      function F(e) {
        let { relationship: t } = e;
        return L(t.id);
      }
      function B(e) {
        let { guild: t } = e;
        !(function (e) {
          for (let t of A.values(e)) A.delete(t.id), delete D[t.id];
          N.delete(e);
        })(t.id);
      }
      function H(e) {
        let { streamKey: t } = e,
          { channelId: n, guildId: s, ownerId: i } = (0, l.decodeStreamKey)(t);
        return !!(null != s && N.has(s)) && L(i, [n]);
      }
      let x = [];
      class Y extends o.default.Store {
        static #e = (this.displayName = "StageChannelParticipantStore");
        initialize() {
          this.waitFor(
            _.default,
            p.default,
            c.default,
            E.default,
            v.default,
            m.default,
            y.default,
            g.default,
            T.default,
            h.default,
            S.default,
            f.default
          );
        }
        getParticipantsVersion(e) {
          return null == e ? -1 : P(e)?.version ?? -1;
        }
        getMutableParticipants(e, t) {
          return null == e ? x : P(e)?.toArray(t) ?? x;
        }
        getMutableRequestToSpeakParticipants(e) {
          return P(e)?.getRequestToSpeakParticipants() ?? x;
        }
        getRequestToSpeakParticipantsVersion(e) {
          return P(e)?.requestToSpeakVersion ?? -1;
        }
        getParticipantCount(e, t) {
          return P(e)?.size(t) ?? 0;
        }
        getChannels(e) {
          return R(e ?? C), A.values(e ?? C);
        }
        getChannelsVersion() {
          return A.version;
        }
        getParticipant(e, t) {
          return P(e)?.getParticipant(t) ?? null;
        }
      }
      var j = new Y(d.default, {
        CONNECTION_OPEN: w,
        OVERLAY_INITIALIZE: w,
        VOICE_STATE_UPDATES: function (e) {
          let { voiceStates: t } = e,
            n = new Set();
          return t.reduce((e, t) => {
            if (null == t.guildId || !N.has(t.guildId)) return e;
            let s = new Set();
            return (U(n, s, t.oldChannelId), U(n, s, t.channelId), 0 === s.size)
              ? e
              : L(t.userId, Array.from(s)) || e;
          }, !1);
        },
        CHANNEL_DELETE: function (e) {
          let {
            channel: { id: t },
          } = e;
          return k(t);
        },
        GUILD_MEMBERS_CHUNK: function (e) {
          let { members: t } = e,
            n = !1;
          for (let e of t) n = L(e.user.id) || n;
          return n;
        },
        USER_UPDATE: G,
        GUILD_MEMBER_REMOVE: G,
        GUILD_MEMBER_UPDATE: G,
        CHANNEL_UPDATES: function (e) {
          let { channels: t } = e,
            n = t.reduce((e, t) => {
              if (!t.isGuildStageVoice() || !N.has(t.guild_id)) return e;
              let n = A.get(t.id);
              return null == n ||
                i()(t.permissionOverwrites, n.permissionOverwrites)
                ? e
                : (e.push(t.id), A.set(t.id, t), e);
            }, []);
          return V(e => e.rebuild(), n), n.length > 0;
        },
        GUILD_ROLE_UPDATE: function (e) {
          let { guildId: t } = e;
          if (N.has(t)) return V(e => e.rebuild(), O(t));
        },
        RTC_CONNECTION_VIDEO: function (e) {
          let { channelId: t, guildId: n, userId: s } = e;
          return !!(null != n && N.has(n)) && L(s, [t]);
        },
        STREAM_CLOSE: H,
        STREAM_DELETE: H,
        RELATIONSHIP_ADD: F,
        RELATIONSHIP_REMOVE: F,
        GUILD_CREATE: B,
        GUILD_DELETE: B,
        PASSIVE_UPDATE_V1: function (e) {
          let t = !1;
          for (let n of O(e.guildId)) t = b(n).rebuild() || t;
          return t;
        },
      });
    },
    146433: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          StageChannelParticipantNamedIndex: function () {
            return s;
          },
          StageChannelParticipantTypes: function () {
            return i;
          },
          default: function () {
            return D;
          },
        }),
        n("653041");
      var s,
        i,
        r,
        a,
        o = n("386695"),
        u = n("643026"),
        d = n("188304"),
        l = n("311545"),
        f = n("731865"),
        _ = n("81470"),
        c = n("361733"),
        g = n("606929"),
        m = n("871831"),
        h = n("642174"),
        E = n("107888"),
        p = n("443966"),
        v = n("120637"),
        y = n("256157"),
        I = n("352292"),
        T = n("467006");
      function S(e) {
        let {
            speaker: t,
            role: n,
            user: s,
            userNick: i,
            connectedOn: r,
            voiceState: a,
            type: o,
          } = e,
          d = a.selfMute ? "\x01" : "\x00",
          l = a.selfVideo ? "\x00" : "\x01",
          f = `${n?.position ?? 999}`.padStart(3, "0");
        return `${t ? "\x00" : "\x01"}${"STREAM" === o ? "\x00" : "\x01"}${d}${l}${f}${r}${(0, u.default)(i, s)}`;
      }
      function C(e) {
        let { user: t, voiceState: n } = e,
          s = n.requestToSpeakTimestamp;
        return null == s ? t.id : `${Date.parse(s)}${t.id}`;
      }
      function A(e) {
        return (
          e === y.RequestToSpeakStates.REQUESTED_TO_SPEAK ||
          e === y.RequestToSpeakStates.REQUESTED_TO_SPEAK_AND_AWAITING_USER_ACK
        );
      }
      function N(e) {
        let { speaker: t, role: n, rtsState: s, blocked: i, isFriend: r } = e,
          a = [];
        return (
          A(s) && a.push("ALL_REQUESTED_TO_SPEAK"),
          s === y.RequestToSpeakStates.REQUESTED_TO_SPEAK &&
            a.push("REQUESTED_TO_SPEAK_ONLY"),
          t
            ? a.push("SPEAKER")
            : (null != n ? a.push(n.id) : a.push("NO_ROLE"),
              a.push("AUDIENCE")),
          i && a.push("BLOCKED"),
          r && a.push("FRIEND"),
          a
        );
      }
      ((r = s || (s = {})).SPEAKER = "SPEAKER"),
        (r.AUDIENCE = "AUDIENCE"),
        (r.NO_ROLE = "NO_ROLE"),
        (r.ALL_REQUESTED_TO_SPEAK = "ALL_REQUESTED_TO_SPEAK"),
        (r.REQUESTED_TO_SPEAK_ONLY = "REQUESTED_TO_SPEAK_ONLY"),
        (r.BLOCKED = "BLOCKED"),
        (r.FRIEND = "FRIEND"),
        (r.SELECTED = "SELECTED"),
        (r.MEDIA = "MEDIA"),
        ((a = i || (i = {})).VOICE = "VOICE"),
        (a.STREAM = "STREAM");
      class D {
        constructor(e) {
          (this.participants = {}),
            (this._participantsIndex = new o.default(N, S)),
            (this._requestToSpeakIndex = new o.default(() => [], C)),
            (this.channelId = e),
            (this.guildId = f.default.getChannel(e)?.getGuildId());
        }
        _getParticipantsForUser(e, t) {
          let n;
          let s = [],
            i = h.default.getVoiceStateForChannel(this.channelId, e);
          if (null == i) return s;
          let r = m.default.getUser(e);
          if (null == r)
            return (
              null != this.guildId &&
                v.default.isPublic(this.channelId) &&
                _.default.requestMember(this.guildId, e),
              s
            );
          let a = null != t ? t[0] : null,
            o = {
              user: r,
              userNick: E.default.getName(this.guildId, this.channelId, r),
              voiceState: i,
              role: (0, I.getHighestHoistedRole)(this.guildId, e),
              speaker: p.default.isSpeaker(e, this.channelId),
              member:
                null != this.guildId
                  ? c.default.getMember(this.guildId, e)
                  : null,
              blocked:
                g.default.getRelationships()[r.id] ===
                T.RelationshipTypes.BLOCKED,
              isFriend: g.default.isFriend(r.id),
              connectedOn: a?.connectedOn ?? Date.now(),
            },
            u = {
              ...o,
              type: "VOICE",
              id: r.id,
              rtsState: (0, y.getAudienceRequestToSpeakState)(i),
            };
          s.push(u);
          let f =
            l.default.getStreamForUser(e, this.guildId) ??
            l.default.getActiveStreamForUser(e, this.guildId);
          if (null != f && f.channelId === this.channelId) {
            let e = (0, d.encodeStreamKey)(f);
            (n = {
              ...o,
              id: e,
              type: "STREAM",
              rtsState: y.RequestToSpeakStates.NONE,
            }),
              s.push(n);
          }
          return s;
        }
        updateParticipant(e) {
          let t = this.participants[e],
            n = this._getParticipantsForUser(e, t);
          return (
            (null != t || 0 !== n.length) &&
            (t?.forEach(e => {
              this._participantsIndex.delete(e.id),
                this._requestToSpeakIndex.delete(e.id);
            }),
            n.forEach(t => {
              this._participantsIndex.set(t.id, t),
                t.id === e && A(t.rtsState)
                  ? this._requestToSpeakIndex.set(e, t)
                  : this._requestToSpeakIndex.delete(e);
            }),
            (this.participants[e] = n),
            !0)
          );
        }
        rebuild() {
          let e = f.default.getChannel(this.channelId);
          if (null == e || !e.isGuildStageVoice()) return !1;
          let t = new Set(
            Object.keys(h.default.getVoiceStatesForChannel(e.id))
          );
          return (
            this._participantsIndex.clear(),
            this._requestToSpeakIndex.clear(),
            (this.participants = {}),
            t.forEach(e => this.updateParticipant(e)),
            !0
          );
        }
        get version() {
          return this._participantsIndex.version;
        }
        size(e) {
          return this._participantsIndex.size(e);
        }
        toArray(e) {
          return this._participantsIndex.values(e, !0);
        }
        getParticipant(e) {
          return this._participantsIndex.get(e) ?? null;
        }
        get requestToSpeakVersion() {
          return this._requestToSpeakIndex.version;
        }
        getRequestToSpeakParticipants() {
          return this._requestToSpeakIndex.values(void 0, !0);
        }
      }
    },
    566761: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          canLurkerListen: function () {
            return E;
          },
          isEmptyOverwrite: function () {
            return g;
          },
          removeModeratorOverwrite: function () {
            return c;
          },
          useCanModerateRequestToSpeak: function () {
            return h;
          },
          useCanUpdateStageChannelModerators: function () {
            return m;
          },
        });
      var s = n("768517"),
        i = n("661223"),
        r = n("172056");
      n("262047");
      var a = n("731865"),
        o = n("327271"),
        u = n("197905"),
        d = n("694574"),
        l = n("437239"),
        f = n("120637"),
        _ = n("467006");
      function c(e, t, n) {
        let i = n?.permissionOverwrites[e];
        return {
          id: e,
          type: t,
          deny: i?.deny ?? d.default.NONE,
          allow: s.default.remove(
            i?.allow ?? d.default.NONE,
            l.MODERATE_STAGE_CHANNEL_PERMISSIONS
          ),
        };
      }
      function g(e) {
        let { allow: t, deny: n } = e;
        return (
          s.default.equals(t, d.default.NONE) &&
          s.default.equals(n, d.default.NONE)
        );
      }
      function m(e) {
        return (0, i.useStateFromStores)(
          [u.default, o.default, a.default],
          () => {
            let t = a.default.getChannel(e),
              n = o.default.getGuild(t?.getGuildId());
            return (
              !!(
                u.default.can(_.Permissions.ADMINISTRATOR, n) ||
                u.default.can(
                  _.Permissions.MANAGE_ROLES,
                  t,
                  void 0,
                  void 0,
                  !0
                ) ||
                u.default.can(l.UPDATE_STAGE_CHANNEL_MODERATOR_PERMISSIONS, t)
              ) || !1
            );
          },
          [e]
        );
      }
      function h(e) {
        return (0, i.useStateFromStores)(
          [a.default, u.default],
          () =>
            null != e &&
            u.default.can(_.Permissions.MUTE_MEMBERS, a.default.getChannel(e)),
          [e]
        );
      }
      function E(e) {
        return (
          !!(
            null != e &&
            e.isGuildStageVoice() &&
            r.default.isLurking(e.guild_id) &&
            f.default.isPublic(e.id)
          ) && u.default.can(l.JOIN_VOCAL_CHANNEL_PERMISSIONS, e)
        );
      }
    },
    284190: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          isStageActivity: function () {
            return _;
          },
          packStageChannelPartyId: function () {
            return l;
          },
          shouldShowActivity: function () {
            return c;
          },
          unpackStageChannelParty: function () {
            return f;
          },
        });
      var s = n("262047"),
        i = n("731865"),
        r = n("327271"),
        a = n("443966"),
        o = n("479832"),
        u = n("467006");
      let d = "stage:";
      function l(e, t) {
        let n = 0,
          i = s.default.getId();
        a.default.isSpeaker(i, e.id) && (n |= 1);
        let o = r.default.getGuild(e.getGuildId());
        null != o &&
          (o.hasFeature(u.GuildFeatures.PARTNERED) && (n |= 2),
          o.hasFeature(u.GuildFeatures.VERIFIED) && (n |= 4));
        let l = n.toString(16);
        return `${d}${e.guild_id}:${e.id}:${l}:${t.id}`;
      }
      function f(e) {
        if (null == e || null == e.party) return;
        let { id: t, size: n } = e.party;
        try {
          if (null == t || !t.startsWith(d)) return;
          let [, e, s, i, r] = t.split(":"),
            a = parseInt(i, 16);
          return {
            guildId: e,
            channelId: s,
            size: n,
            userIsSpeaker: (1 & a) != 0,
            guildIsPartnered: (2 & a) != 0,
            guildIsVerified: (4 & a) != 0,
            stageInstanceId: r,
          };
        } catch (e) {
          return null;
        }
      }
      function _(e) {
        return e?.application_id === o.STAGE_APPLICATION_ID;
      }
      function c(e) {
        let t = f(e);
        if (null == t) return !1;
        let { channelId: n } = t;
        return null != i.default.getChannel(n);
      }
    },
    443966: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return N;
          },
        });
      var s,
        i,
        r = n("392711"),
        a = n.n(r),
        o = n("661223"),
        u = n("312916"),
        d = n("731865"),
        l = n("610043"),
        f = n("361733"),
        _ = n("327271"),
        c = n("871831"),
        g = n("642174"),
        m = n("694574"),
        h = n("437239"),
        E = n("256157");
      ((s = i || (i = {})).SPEAKER = "speaker"), (s.MODERATOR = "moderator");
      let p = {},
        v = { speaker: !1, moderator: !1 };
      function y(e, t) {
        let n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
        null == p[t] && (p[t] = {});
        let s = (function (e, t) {
          var n, s, i;
          let r =
              arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
            a = d.default.getChannel(t),
            o = a?.getGuildId(),
            u = _.default.getGuild(o);
          if (null == u || null == a || !a.isGuildStageVoice()) return v;
          return {
            speaker: (function (e, t) {
              let n = g.default.getVoiceStateForChannel(t, e);
              return (
                (0, E.getAudienceRequestToSpeakState)(n) ===
                E.RequestToSpeakStates.ON_STAGE
              );
            })(e, t),
            moderator: r
              ? ((n = e),
                (s = u),
                (i = a),
                m.default.can({
                  permission: h.MODERATE_STAGE_CHANNEL_PERMISSIONS,
                  user: n,
                  context: s,
                  overwrites: i.permissionOverwrites,
                  roles: s.roles,
                }))
              : null,
          };
        })(e, t, n);
        return (p[t][e] = s), s;
      }
      function I(e, t) {
        if (null == t) return !1;
        let n = d.default.getChannel(t);
        return !!(null != n && n.isGuildStageVoice()) && (delete p[t]?.[e], !0);
      }
      function T(e) {
        let t = l.default
          .getChannels(e)
          [l.GUILD_VOCAL_CHANNELS_KEY].filter(e => {
            let { channel: t } = e;
            return t.isGuildStageVoice();
          });
        for (let { channel: e } of t) delete p[e.id];
        return t.length > 0;
      }
      function S(e) {
        let { guildId: t, user: n } = e;
        return (
          null != n &&
          null != t &&
          (function (e, t) {
            for (let n in p) {
              let s = d.default.getBasicChannel(n);
              if (null != s) s.guild_id === t && delete p[n][e];
            }
            return !0;
          })(n.id, t)
        );
      }
      function C(e) {
        let { guild: t } = e;
        for (let e in p) {
          let n = d.default.getBasicChannel(e);
          (null == n || n.guild_id === t.id) && delete p[e];
        }
      }
      class A extends o.default.Store {
        static #e = (this.displayName = "StageChannelRoleStore");
        initialize() {
          this.waitFor(f.default, d.default, _.default, c.default, g.default);
        }
        isSpeaker(e, t) {
          return this.getPermissionsForUser(e, t).speaker;
        }
        isModerator(e, t) {
          return this.getPermissionsForUser(e, t, !0).moderator ?? !1;
        }
        isAudienceMember(e, t) {
          let n = this.getPermissionsForUser(e, t);
          return !n.speaker && !n.moderator;
        }
        getPermissionsForUser(e, t) {
          let n =
            arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
          if (null == e || null == t) return v;
          let s = p[t]?.[e];
          if (null != s) return n && null == s.moderator ? y(e, t, !0) : s;
          return y(e, t, n);
        }
      }
      var N = new A(u.default, {
        CHANNEL_UPDATES: function (e) {
          let { channels: t } = e;
          for (let e of t) delete p[e.id];
        },
        CONNECTION_OPEN: function () {
          p = {};
        },
        GUILD_MEMBER_REMOVE: S,
        GUILD_MEMBER_UPDATE: S,
        GUILD_ROLE_UPDATE: function (e) {
          let { guildId: t } = e;
          T(t);
        },
        PASSIVE_UPDATE_V1: function (e) {
          let t = T(e.guildId);
          for (let n of e.voiceStates ?? []) t = I(n.userId, n.channelId) || t;
          return t;
        },
        VOICE_STATE_UPDATES: function (e) {
          let { voiceStates: t } = e;
          return (
            !a().isEmpty(p) &&
            t.reduce((e, t) => {
              let { userId: n, channelId: s } = t;
              return I(n, s) || e;
            }, !1)
          );
        },
        GUILD_CREATE: C,
        GUILD_DELETE: C,
      });
    },
    960613: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return T;
          },
        });
      var s = n("348327"),
        i = n.n(s),
        r = n("661223"),
        a = n("312916"),
        o = n("731865"),
        u = n("327271"),
        d = n("407807"),
        l = n("232733"),
        f = n("694574"),
        _ = n("65435"),
        c = n("146433"),
        g = n("284190"),
        m = n("120637"),
        h = n("733980"),
        E = n("479832"),
        p = n("467006");
      let v = null;
      function y() {
        let e = (function () {
          let e = l.default.getVoiceChannelId();
          if (null == e) return null;
          let t = m.default.getStageInstanceByChannel(e);
          if (null == t) return null;
          let n = o.default.getChannel(e);
          if (
            null == n ||
            !f.default.canEveryone(p.Permissions.VIEW_CHANNEL, n)
          )
            return null;
          let s = u.default.getGuild(n.getGuildId());
          if (null == s || !s.hasFeature(p.GuildFeatures.DISCOVERABLE))
            return null;
          let i = (0, g.packStageChannelPartyId)(n, t),
            r = v?.party?.id === i ? v : null,
            a = _.default.getMutableParticipants(
              n.id,
              c.StageChannelParticipantNamedIndex.SPEAKER
            ),
            d = a.filter(
              e => e.type === c.StageChannelParticipantTypes.STREAM
            ).length,
            y = a.length - d,
            I = _.default.getParticipantCount(e) - d,
            T = r?.party?.size != null ? r.party.size[1] : 0;
          return {
            application_id: E.STAGE_APPLICATION_ID,
            name: t.topic ?? n.topic ?? n.name,
            type: (0, h.getStageHasMedia)(n.id)
              ? p.ActivityTypes.WATCHING
              : p.ActivityTypes.LISTENING,
            timestamps: { start: r?.timestamps?.start ?? new Date().getTime() },
            assets: { small_image: s.icon ?? void 0, small_text: s.name },
            party: { id: i, size: [y, Math.max(I, T)] },
          };
        })();
        return !i()(e, v) && ((v = e), !0);
      }
      class I extends r.default.Store {
        static #e = (this.displayName = "StageChannelSelfRichPresenceStore");
        initialize() {
          this.waitFor(o.default, l.default, m.default, d.default);
        }
        getActivity() {
          return v;
        }
      }
      var T = new I(a.default, {
        CONNECTION_OPEN: y,
        STAGE_INSTANCE_CREATE: y,
        STAGE_INSTANCE_UPDATE: y,
        STAGE_INSTANCE_DELETE: y,
        VOICE_CHANNEL_SELECT: y,
        RTC_CONNECTION_STATE: function (e) {
          let { state: t } = e,
            n = v?.party?.size?.[1] ?? 0;
          return t === p.RTCConnectionStates.RTC_CONNECTED && !(n > 0) && y();
        },
        VOICE_STATE_UPDATES: function (e) {
          let { voiceStates: t } = e;
          if (null == v) return;
          let n = (0, g.unpackStageChannelParty)(v);
          null != n && null != t.find(e => e.channelId === n.channelId) && y();
        },
      });
    },
    479832: function (e, t, n) {
      "use strict";
      var s, i, r, a;
      n.r(t),
        n.d(t, {
          MAX_STAGE_TOPIC_LENGTH: function () {
            return o;
          },
          RequestToSpeakPermissionStates: function () {
            return s;
          },
          STAGE_APPLICATION_ID: function () {
            return u;
          },
          STAGE_AUDIENCE_NOTICE_SHOWN_STORAGE_KEY: function () {
            return l;
          },
          STAGE_INVITE_STATE_KEY: function () {
            return d;
          },
          StartStageSteps: function () {
            return i;
          },
        }),
        n("312630"),
        n("467006"),
        n("30175");
      let o = 240,
        u = "834488117758001152",
        d = "stage-invite",
        l = "stage-channel-audience-notice-shown";
      ((r = s || (s = {}))[(r.EVERYONE = 1)] = "EVERYONE"),
        (r[(r.NO_ONE = 2)] = "NO_ONE"),
        (r[(r.ROLES = 3)] = "ROLES"),
        ((a = i || (i = {}))[(a.GUILD_SELECTION = 0)] = "GUILD_SELECTION"),
        (a[(a.STAGE_CHANNEL_SETTINGS = 1)] = "STAGE_CHANNEL_SETTINGS"),
        (a[(a.PUBLIC_STAGE_PREVIEW = 2)] = "PUBLIC_STAGE_PREVIEW");
    },
    607991: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var s = n("312916"),
        i = n("614019"),
        r = n("533549"),
        a = n("731865"),
        o = n("632706"),
        u = n("370275");
      class d extends i.default {
        _initialize() {
          s.default.subscribe(
            "VOICE_CHANNEL_SELECT",
            this.handleVoiceChannelSelect
          ),
            s.default.subscribe("LOGOUT", this.handleLogout);
        }
        _terminate() {
          s.default.unsubscribe(
            "VOICE_CHANNEL_SELECT",
            this.handleVoiceChannelSelect
          ),
            s.default.unsubscribe("LOGOUT", this.handleLogout);
        }
        constructor(...e) {
          super(...e),
            (this.handleVoiceChannelSelect = e => {
              let { channelId: t, guildId: n } = e;
              if (null != t) {
                let e = a.default.getChannel(t);
                if (null == e || e.isGuildStageVoice()) return;
              }
              this.terminate();
              this.handleDisconnectFromStageChannel(
                null == t ? null : n ?? null
              );
            }),
            (this.handleDisconnectFromStageChannel = e => {
              let t = o.default.getGuildId();
              (0, r.stopLurkingAll)([t, e].filter(u.isNotNullish));
            }),
            (this.handleLogout = () => {
              this.terminate(), this.handleDisconnectFromStageChannel(null);
            });
        }
      }
      var l = new d();
    },
    733980: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getStageHasMedia: function () {
            return d;
          },
          isStageVideoEnabled: function () {
            return l;
          },
          useStageHasMedia: function () {
            return u;
          },
        });
      var s = n("661223"),
        i = n("327271"),
        r = n("642174"),
        a = n("65435"),
        o = n("146433");
      function u(e) {
        let t = (function (e) {
          return (0, s.useStateFromStores)(
            [a.default],
            () =>
              null !=
              a.default
                .getMutableParticipants(
                  e,
                  o.StageChannelParticipantNamedIndex.SPEAKER
                )
                .find(e => e.type === o.StageChannelParticipantTypes.STREAM),
            [e]
          );
        })(e);
        return (
          (0, s.useStateFromStores)([r.default], () => r.default.hasVideo(e), [
            e,
          ]) || t
        );
      }
      function d(e) {
        return (
          (function (e) {
            return (
              null !=
              a.default
                .getMutableParticipants(
                  e,
                  o.StageChannelParticipantNamedIndex.SPEAKER
                )
                .find(e => e.type === o.StageChannelParticipantTypes.STREAM)
            );
          })(e) || r.default.hasVideo(e)
        );
      }
      function l(e) {
        let t = i.default.getGuild(e);
        return null != t && (t?.maxStageVideoChannelUsers ?? 0) > 0;
      }
    },
    256157: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          RequestToSpeakStates: function () {
            return i;
          },
          default: function () {
            return u;
          },
          getAudienceRequestToSpeakState: function () {
            return o;
          },
        });
      var s,
        i,
        r = n("661223"),
        a = n("642174");
      function o(e) {
        if (null == e) return 0;
        if (e.suppress && null != e.requestToSpeakTimestamp) return 1;
        if (!e.suppress && null != e.requestToSpeakTimestamp) return 2;
        if (!e.suppress && null == e.requestToSpeakTimestamp) return 3;
        return 0;
      }
      function u(e, t) {
        return (0, r.useStateFromStores)(
          [a.default],
          () =>
            null == e || null == t
              ? 0
              : o(a.default.getVoiceStateForChannel(t, e)),
          [e, t]
        );
      }
      ((s = i || (i = {}))[(s.NONE = 0)] = "NONE"),
        (s[(s.REQUESTED_TO_SPEAK = 1)] = "REQUESTED_TO_SPEAK"),
        (s[(s.REQUESTED_TO_SPEAK_AND_AWAITING_USER_ACK = 2)] =
          "REQUESTED_TO_SPEAK_AND_AWAITING_USER_ACK"),
        (s[(s.ON_STAGE = 3)] = "ON_STAGE");
    },
    352292: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getHighestHoistedRole: function () {
            return a;
          },
        }),
        n("661223");
      var s = n("361733"),
        i = n("327271"),
        r = n("694574");
      let a = function (e, t) {
        let [n, a] =
          arguments.length > 2 && void 0 !== arguments[2]
            ? arguments[2]
            : [i.default, s.default];
        if (null == e || null == t) return null;
        let o = n.getGuild(e);
        if (null == o) return null;
        let u = a.getMember(o.id, t);
        return null == u ? null : r.default.getHighestHoistedRole(o, u);
      };
    },
    326166: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
          setIsOnStartStageScreen: function () {
            return _;
          },
          useUpdateIsOnStartStageScreenEffect: function () {
            return c;
          },
        });
      var s = n("470079"),
        i = n("652874"),
        r = n("661223"),
        a = n("197905"),
        o = n("232733"),
        u = n("437239"),
        d = n("631808");
      let l = (0, i.default)(e => ({ isOnStartStageScreen: !0 }));
      var f = l;
      function _(e) {
        l.setState({ isOnStartStageScreen: e });
      }
      function c(e) {
        let t = (0, r.useStateFromStores)(
            [o.default],
            () => o.default.getVoiceChannelId() === e.id
          ),
          n = (0, r.useStateFromStores)(
            [a.default],
            () => a.default.can(u.MODERATE_STAGE_CHANNEL_PERMISSIONS, e),
            [e]
          ),
          i = (0, d.default)(e.id),
          l = n && !i;
        s.useEffect(() => {
          t ? !l && _(!1) : _(l);
        }, [t, l]);
      }
    },
    443034: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getStageBlockedUsersCount: function () {
            return o;
          },
          useStageBlockedUsers: function () {
            return u;
          },
          useStageBlockedUsersCount: function () {
            return a;
          },
        });
      var s = n("661223"),
        i = n("65435"),
        r = n("146433");
      function a(e) {
        return (0, s.useStateFromStores)(
          [i.default],
          () =>
            null != e
              ? i.default.getParticipantCount(
                  e,
                  r.StageChannelParticipantNamedIndex.BLOCKED
                )
              : 0,
          [e]
        );
      }
      function o(e) {
        return (
          i.default.getParticipantCount(
            e,
            r.StageChannelParticipantNamedIndex.BLOCKED
          ) ?? 0
        );
      }
      function u(e) {
        return (0, s.useStateFromStores)(
          [i.default],
          () =>
            i.default.getMutableParticipants(
              e,
              r.StageChannelParticipantNamedIndex.BLOCKED
            ),
          [e]
        );
      }
    },
    631808: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("661223"),
        i = n("120637");
      function r(e) {
        return (0, s.useStateFromStores)(
          [i.default],
          () => i.default.isLive(e),
          [e]
        );
      }
    },
    918493: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var s = n("704588"),
        i = n("312916"),
        r = n("911388");
      let a = {},
        o = {};
      class u extends s.default.Store {
        static #e = (this.displayName = "StickerMessagePreviewStore");
        getStickerPreview(e, t) {
          return (t === r.DraftType.FirstThreadMessage ? o : a)[e];
        }
      }
      var d = new u(i.default, {
        ADD_STICKER_PREVIEW: function (e) {
          let { channelId: t, sticker: n, draftType: s } = e;
          (s === r.DraftType.FirstThreadMessage ? o : a)[t] = [n];
        },
        CLEAR_STICKER_PREVIEW: function (e) {
          let { channelId: t, draftType: n } = e,
            s = n === r.DraftType.FirstThreadMessage ? o : a;
          null != s[t] && delete s[t];
        },
        LOGOUT: function () {
          (a = {}), (o = {});
        },
      });
    },
    361820: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return L;
          },
        }),
        n("653041");
      var s = n("990835"),
        i = n("661223"),
        r = n("312916"),
        a = n("366598"),
        o = n("763617"),
        u = n("143776"),
        d = n("288990"),
        l = n("172056"),
        f = n("421219"),
        _ = n("979479"),
        c = n("327271"),
        g = n("152551"),
        m = n("822232"),
        h = n("859404");
      let E = 2,
        p = new Map(),
        v = new Map(),
        y = null,
        I = [],
        T = null,
        S = !1,
        C = new Map(),
        A = (e, t) => {
          C = new Map(C.set(e, t));
        },
        N = g.default.Millis.HOUR,
        D = async () => {
          if (0 !== E) return;
          let e = a.default.database();
          if (null == e) return;
          E = 2;
          let t = await (0, o.tryLoadOrResetCacheGatewayAsync)(
            "StickerStore.loadSavedGuildStickers",
            () =>
              s.default.timeAsync(
                "\uD83D\uDCBE",
                "loadSavedGuildStickers",
                () => u.default.getAsync(e)
              )
          );
          null != t &&
            r.default.dispatch({ type: "CACHED_STICKERS_LOADED", stickers: t });
        },
        O = function (e) {
          let t =
              !(arguments.length > 1) ||
              void 0 === arguments[1] ||
              arguments[1],
            n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : null;
          v.set(e.id, e), t && R(e, n);
        },
        R = function (e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : null;
          if (null == y) return;
          let { tags: n } = e,
            s = {
              type: m.StickerMetadataTypes.STICKER_NAME,
              value: e.name.trim().toLocaleLowerCase(),
            };
          if ((0, h.isStandardSticker)(e)) {
            let t = I.find(t => t.id === e.pack_id),
              i = [
                s,
                ...(n ?? "")
                  .split(",")
                  .map(e => ({
                    type: m.StickerMetadataTypes.TAG,
                    value: e.trim().toLocaleLowerCase(),
                  })),
              ];
            null != t &&
              i.push({ type: m.StickerMetadataTypes.PACK_NAME, value: t.name }),
              y.set(e.id, i);
          } else if ((0, h.isGuildSticker)(e) && null != n) {
            let i = d.default.getByName(n),
              r = [
                s,
                {
                  type: m.StickerMetadataTypes.TAG,
                  value: n.trim().toLocaleLowerCase(),
                },
              ];
            if (null != t) {
              let e = (t instanceof (0, f.default) ? t.name : t.properties.name)
                .trim()
                .toLocaleLowerCase();
              null != e &&
                "" !== e &&
                r.push({ type: m.StickerMetadataTypes.GUILD_NAME, value: e });
            }
            if (null == i) {
              y.set(e.id, r);
              return;
            }
            r.push({
              type: m.StickerMetadataTypes.CORRELATED_EMOJI,
              value: i.surrogates,
            }),
              i.forEachDiversity(e =>
                r.push({
                  type: m.StickerMetadataTypes.CORRELATED_EMOJI,
                  value: e.surrogates,
                })
              ),
              y.set(e.id, r);
          }
        },
        P = (e, t, n) => {
          p.set(e.id, e);
          let s = [...I];
          if (t) {
            let t = s.findIndex(t => t.id === e.id);
            -1 !== t ? (s[t] = e) : s.push(e), (I = s);
          }
          (t || n) && e.stickers.forEach(e => O(e));
        },
        b = () => {
          C.forEach((e, t) => {
            let n = c.default.getGuild(t);
            null != n && e.forEach(e => R(e, n));
          }),
            I.forEach(e => {
              e.stickers.forEach(e => R(e));
            });
        };
      function M(e) {
        null != e.stickers &&
          (e.stickers.forEach(t => O(t, !0, e)), A(e.id, e.stickers));
      }
      class V extends i.default.Store {
        static #e = (this.displayName = "StickersStore");
        initialize() {
          this.waitFor(a.default, _.default, c.default);
        }
        get isLoaded() {
          return 0 !== E;
        }
        get loadState() {
          return E;
        }
        get stickerMetadata() {
          return D(), null == y && ((y = new Map()), b()), y;
        }
        get hasLoadedStickerPacks() {
          return null != T && T + N > Date.now();
        }
        get isFetchingStickerPacks() {
          return S;
        }
        getStickerById(e) {
          return !v.has(e) && D(), v.get(e);
        }
        getStickerPack(e) {
          return p.get(e);
        }
        getPremiumPacks() {
          return I;
        }
        isPremiumPack(e) {
          return I.some(t => t.id === e);
        }
        getRawStickersByGuild() {
          return C;
        }
        getAllStickersIterator() {
          return D(), v.values();
        }
        getAllGuildStickers() {
          return D(), C;
        }
        getStickersByGuildId(e) {
          return D(), C.get(e);
        }
      }
      var L = new V(r.default, {
        BACKGROUND_SYNC: () => {
          (y = null), (v = new Map()), (C = new Map()), (E = 0);
        },
        CONNECTION_OPEN: e => {
          let { guilds: t } = e;
          (y = null),
            (v = new Map()),
            (C = new Map()),
            t.forEach(M),
            (E = t.every(e => null != e.stickers) ? 1 : 0);
        },
        GUILD_CREATE: function (e) {
          let { guild: t } = e;
          !l.default.isLurking(t.id) &&
            (M(t),
            1 === E &&
              null == t.stickers &&
              null != t.stickerUpdates &&
              (E = 0));
        },
        GUILD_DELETE: function (e) {
          let { guild: t } = e;
          (C.get(t.id) ?? []).forEach(e => {
            null != y && y.delete(e.id), v.delete(e.id);
          }),
            C.delete(t.id),
            (C = new Map(C));
        },
        LOGOUT: () => {
          (E = 0),
            (I = []),
            v.clear(),
            p.clear(),
            (y = null),
            C.clear(),
            (C = new Map(C)),
            (S = !1),
            (T = null);
        },
        STICKER_PACKS_FETCH_START: () => {
          S = !0;
        },
        STICKER_PACKS_FETCH_SUCCESS: e => {
          let { packs: t } = e;
          t.forEach(e => P(e, !0)), (T = Date.now()), (S = !1);
        },
        STICKER_PACK_FETCH_SUCCESS: e => {
          let { pack: t, ingestStickers: n } = e;
          P(t, !1, n);
        },
        GUILD_STICKERS_FETCH_SUCCESS: e => {
          let { guildId: t, stickers: n } = e;
          n.forEach(e => O(e)), A(t, n);
        },
        GUILD_STICKERS_CREATE_SUCCESS: e => {
          let { guildId: t, sticker: n } = e,
            s = C.get(t) ?? [];
          A(t, [...(s.filter(e => e.id !== n.id) ?? []), n]), O(n);
        },
        STICKER_FETCH_SUCCESS: e => {
          let { sticker: t } = e;
          O(t, !1);
        },
        GUILD_STICKERS_UPDATE: e => {
          let { guildId: t, stickers: n } = e,
            s = e => {
              let t;
              let n = v.get(e.id);
              return (
                null != n &&
                  (0, h.isGuildSticker)(n) &&
                  (t = null != n.user ? n.user : void 0),
                { ...e, user: t }
              );
            };
          (C.get(t) ?? [])
            .filter(e => null == n.find(t => t.id === e.id))
            .forEach(e => {
              v.delete(e.id), null != y && y.delete(e.id);
            });
          let i = n.map(e => s(e));
          i.forEach(e => O(e)), A(t, i);
        },
        CACHED_STICKERS_LOADED: function (e) {
          let { stickers: t } = e;
          for (let [e, n] of t)
            if (_.default.isMember(e) && !C.has(e)) {
              let t = c.default.getGuild(e);
              for (let e of n) O(e, !0, t);
              A(e, n);
            }
        },
      });
    },
    822232: function (e, t, n) {
      "use strict";
      var s, i, r, a, o, u, d, l, f, _, c, g, m, h;
      n.r(t),
        n.d(t, {
          MetaStickerType: function () {
            return i;
          },
          StickerCategoryTypes: function () {
            return o;
          },
          StickerExtensions: function () {
            return r;
          },
          StickerFormat: function () {
            return s;
          },
          StickerGridItemTypes: function () {
            return a;
          },
          StickerMetadataTypes: function () {
            return u;
          },
          StickerSelectLocation: function () {
            return d;
          },
          isAnimatedSticker: function () {
            return E;
          },
          isCustomSticker: function () {
            return p;
          },
        }),
        ((l = s || (s = {}))[(l.PNG = 1)] = "PNG"),
        (l[(l.APNG = 2)] = "APNG"),
        (l[(l.LOTTIE = 3)] = "LOTTIE"),
        (l[(l.GIF = 4)] = "GIF"),
        ((f = i || (i = {}))[(f.STANDARD = 1)] = "STANDARD"),
        (f[(f.GUILD = 2)] = "GUILD"),
        ((_ = r || (r = {})).PNG = "png"),
        (_.APNG = "png"),
        (_.LOTTIE = "json"),
        (_.WEBP = "webp"),
        (_.GIF = "gif");
      let E = e => 1 !== e,
        p = e => 1 !== e;
      ((c = a || (a = {}))[(c.STICKER = 0)] = "STICKER"),
        (c[(c.CREATE_STICKER = 1)] = "CREATE_STICKER"),
        ((g = o || (o = {})).PACK = "PACK"),
        (g.FAVORITE = "FAVORITE"),
        (g.RECENT = "RECENT"),
        (g.SEARCH_RESULTS = "SEARCH_RESULTS"),
        (g.SEARCH_SUGGESTIONS = "SEARCH_SUGGESTIONS"),
        (g.GUILD = "GUILD"),
        (g.EMPTY_GUILD_UPSELL = "EMPTY_GUILD_UPSELL"),
        (g.CREATE_STICKER = "CREATE_STICKER"),
        ((m = u || (u = {}))[(m.STICKER_NAME = 0)] = "STICKER_NAME"),
        (m[(m.TAG = 1)] = "TAG"),
        (m[(m.CORRELATED_EMOJI = 2)] = "CORRELATED_EMOJI"),
        (m[(m.GUILD_NAME = 3)] = "GUILD_NAME"),
        (m[(m.PACK_NAME = 4)] = "PACK_NAME"),
        ((h = d || (d = {}))[(h.STICKER_PICKER = 0)] = "STICKER_PICKER"),
        (h[(h.EXPRESSION_SUGGESTIONS = 1)] = "EXPRESSION_SUGGESTIONS"),
        (h[(h.AUTOCOMPLETE = 2)] = "AUTOCOMPLETE");
    },
    859404: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          createStickerPackCategory: function () {
            return P;
          },
          getFilenameForSticker: function () {
            return A;
          },
          getMessageStickers: function () {
            return k;
          },
          getStickerAssetUrl: function () {
            return N;
          },
          getStickerFormatTypeFromFileType: function () {
            return C;
          },
          getStickerPackBannerAssetUrl: function () {
            return D;
          },
          getStickerPackPreviewSticker: function () {
            return T;
          },
          isAvailableGuildSticker: function () {
            return w;
          },
          isGuildSticker: function () {
            return V;
          },
          isStandardSticker: function () {
            return L;
          },
          isStickerAssetUrl: function () {
            return O;
          },
          isStickerPackAnimated: function () {
            return R;
          },
          shouldAnimateSticker: function () {
            return b;
          },
          shouldAttachSticker: function () {
            return M;
          },
        });
      var s = n("775218"),
        i = n("500833"),
        r = n("327271"),
        a = n("312938"),
        o = n("204606"),
        u = n("501769"),
        d = n("918493"),
        l = n("822232"),
        f = n("891084"),
        _ = n("467006");
      let {
          API_ENDPOINT: c,
          MEDIA_PROXY_ENDPOINT: g,
          PROJECT_ENV: m,
          ASSET_ENDPOINT: h,
          CDN_HOST: E,
        } = window.GLOBAL_ENV,
        p = Object.values(l.StickerExtensions),
        v = decodeURIComponent(
          _.Endpoints.STICKER_ASSET("[\\d]+", `(${p.join("|")})`)
        ),
        y = RegExp(
          `(${location.protocol}${h}|${location.protocol}${g})(${v})`,
          "ig"
        ),
        I = RegExp(`${location.protocol}${c}(${v})`, "ig"),
        T = e => {
          if (null != e.cover_sticker_id) {
            let t = e.stickers.find(t => t.id === e.cover_sticker_id);
            if (null != t) return t;
          }
          return e.stickers[0];
        },
        S = e => {
          switch (e) {
            case l.StickerFormat.PNG:
              return o.SUPPORTS_WEBP
                ? l.StickerExtensions.WEBP
                : l.StickerExtensions.PNG;
            case l.StickerFormat.APNG:
              return l.StickerExtensions.APNG;
            case l.StickerFormat.LOTTIE:
              return l.StickerExtensions.LOTTIE;
            case l.StickerFormat.GIF:
              return l.StickerExtensions.GIF;
            default:
              throw Error(`Unexpected format type: ${e}`);
          }
        },
        C = e => {
          switch (e) {
            case "application/json":
              return l.StickerFormat.LOTTIE;
            case "image/apng":
              return l.StickerFormat.APNG;
            case "image/png":
            case "image/webp":
              return l.StickerFormat.PNG;
            case "image/gif":
              return l.StickerFormat.GIF;
            default:
              throw Error(`Unexpected file type: ${e}`);
          }
        },
        A = e => (null == e ? null : `${e.name}.${S(e.format_type)}`),
        N = function (e) {
          let { isPreview: t = !1, size: n = f.DEFAULT_STICKER_DIMENSIONS } =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          if (null == e.format_type) return null;
          let s = _.Endpoints.STICKER_ASSET(e.id, S(e.format_type));
          if ("development" !== m) {
            if (e.format_type === l.StickerFormat.LOTTIE)
              return `${location.protocol}${h}${s}`;
            let r =
                e.format_type === l.StickerFormat.APNG &&
                t &&
                !(0, u.isAndroid)()
                  ? "&passthrough=false"
                  : "",
              a = Math.min(2, (0, i.getDevicePixelRatio)());
            return `${location.protocol}${g}${s}?size=${(0, i.getBestMediaProxySize)(n * a)}${r}`;
          }
          return `${location.protocol}${c}${s}`;
        },
        D = (e, t) => {
          let n;
          let s = e.banner_asset_id;
          if (null == s) return null;
          let r = o.SUPPORTS_WEBP ? "webp" : "png";
          return (
            (n =
              null != E
                ? `${location.protocol}//${E}/app-assets/${f.STICKER_APPLICATION_ID}/store/${s}.${r}`
                : `${location.protocol}${c}${_.Endpoints.STORE_ASSET(f.STICKER_APPLICATION_ID, s, r)}`),
            null != t && (n += `?size=${(0, i.getBestMediaProxySize)(t)}`),
            n
          );
        },
        O = e => e.match("development" !== m ? y : I),
        R = e =>
          e.stickers.some(e => {
            let { format_type: t } = e;
            return (
              t === l.StickerFormat.APNG ||
              t === l.StickerFormat.LOTTIE ||
              t === l.StickerFormat.GIF
            );
          }),
        P = e => ({
          type: l.StickerCategoryTypes.PACK,
          id: e.id,
          name: e.name,
          stickers: e.stickers,
          previewSticker: T(e),
        }),
        b = (e, t) =>
          e === f.StickerAnimationSettings.ANIMATE_ON_INTERACTION
            ? t
            : e !== f.StickerAnimationSettings.NEVER_ANIMATE,
        M = (e, t, n, i) => {
          if (a.default.getUploadCount(n, i) > 0) return !0;
          let r = d.default.getStickerPreview(n, i);
          if (null != r && r.length > 0) return !0;
          switch (e) {
            case l.StickerSelectLocation.STICKER_PICKER:
              return "" !== t.trim();
            case l.StickerSelectLocation.AUTOCOMPLETE:
            case l.StickerSelectLocation.EXPRESSION_SUGGESTIONS:
              return (0, s.getQueriesFromUserInput)(t).length > 1;
            default:
              return !1;
          }
        },
        V = e => e.type === l.MetaStickerType.GUILD,
        L = e => e.type === l.MetaStickerType.STANDARD,
        k = e =>
          e.stickerItems.length > 0
            ? e.stickerItems
            : e.stickers.length > 0
              ? e.stickers
              : [],
        w = e => {
          if (null === e) return !1;
          let t = e.guild_id;
          return void 0 !== r.default.getGuild(t);
        };
    },
    642700: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("735250");
      n("470079");
      var i = n("910838"),
        r = {
          show(e) {
            (0, i.openModalLazy)(async () => {
              let { default: t } = await n
                .el("642700@288:327")
                .then(n.bind(n, "232665"));
              return n => (0, s.jsx)(t, { ...n, href: e });
            });
          },
        };
    },
    715067: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          isSuspiciousDownload: function () {
            return o;
          },
        });
      var s = n("729594"),
        i = n("821445");
      let r = new Set(i),
        a = {
          "github.com": RegExp("\\/releases\\S*\\/download"),
          "bitbucket.org": RegExp("\\/downloads\\S*\\/[^\\/]*"),
          "gitlab.com": RegExp("\\/downloads\\S*\\/[^\\/]*"),
        };
      function o(e) {
        let { pathname: t, hostname: n } = s.parse(e);
        if (null == n) return null;
        let i = a[n];
        if ((null != i && null != t && !i.test(t)) || null == t) return null;
        let o = t;
        try {
          o = decodeURIComponent(t);
        } catch (e) {}
        let u = o.split("/"),
          d = null,
          l = 0;
        for (let e = u.length - 1; e >= 0; e--) {
          let t = u[e];
          if ("" !== t && "." !== t) {
            if (".." === t) {
              l++;
              continue;
            }
            if (l > e) break;
            d = u[e - l];
            break;
          }
        }
        if (null == d) return null;
        let f = d.split(".");
        if (f.length < 2) return null;
        let _ = f.pop()?.toLowerCase();
        return null != _ && r.has(_) ? _ : null;
      }
    },
    786649: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return X;
          },
        }),
        n("653041");
      var s = n("392711"),
        i = n.n(s),
        r = n("661223"),
        a = n("312916"),
        o = n("775822"),
        u = n("731865"),
        d = n("327271"),
        l = n("417223"),
        f = n("232733"),
        _ = n("84819"),
        c = n("408109"),
        g = n("972942"),
        m = n("652731"),
        h = n("551835");
      let E = {},
        p = {},
        v = {},
        y = {},
        I = {},
        T = {},
        S = null,
        C = {};
      function A() {
        for (let e in ((E = {}),
        (I = {}),
        (p = {}),
        (v = {}),
        (y = {}),
        (S = f.default.getChannelId()),
        C))
          clearTimeout(C[e]);
        (C = {}),
          c.default.forEachGuild(e => {
            D(e);
          }),
          O();
      }
      function N(e) {
        for (let t in (delete E[e],
        delete I[e],
        delete p[e],
        delete v[e],
        delete y[e],
        D(e),
        v[e]))
          P(e, t);
      }
      function D(e) {
        let t = c.default.getThreadsForGuild(e);
        for (let e in t)
          for (let n in t[e]) {
            F(n);
            let e = u.default.getChannel(n);
            if (null == e) continue;
            let t = g.default.joinTimestamp(n);
            if (null != t) {
              let n = { channel: e, joinTimestamp: t.getTime() },
                { isUnread: s, isRelevant: i, isTimedRelevant: r } = U(e);
              B(E, e, n, !1),
                B(I, e, i ? n : null, !1),
                B(p, e, s ? n : null, !1),
                r && G(e, !0);
            } else {
              B(v, e, e, !1);
              let t = l.default.isForumPostUnread(e.id);
              B(y, e, t ? e : null, !1);
            }
          }
      }
      function O() {
        for (let e in ((T = {}), v)) for (let t in v[e]) P(e, t);
      }
      function R(e) {
        let t = u.default.getBasicChannel(e);
        null != t &&
          o.THREADED_CHANNEL_TYPES.has(t.type) &&
          P(t.guild_id, t.id);
      }
      function P(e, t) {
        let n = u.default.getChannel(t);
        if (null == n || !n.isForumLikeChannel()) return;
        if (
          (null == T[e] && (T[e] = {}),
          (T[e][t] = 0),
          null == v[e] || null == v[e][t])
        )
          return;
        let s = d.default.getGuild(e);
        if (null == s) return;
        let i = l.default.getTrackedAckMessageId(t);
        if (null == i) {
          let e = Date.now();
          null != s.joinedAt &&
            (s.joinedAt instanceof Date
              ? (e = s.joinedAt.getTime())
              : "string" == typeof s.joinedAt &&
                (e = new Date(s.joinedAt).getTime())),
            (i = _.default.fromTimestamp(e));
        }
        for (let n in v[e][t])
          t === S
            ? l.default.isNewForumThread(n, t, s) && T[e][t]++
            : _.default.compare(n, i) > 0 &&
              !l.default.hasOpenedThread(n) &&
              T[e][t]++;
      }
      function b(e, t, n) {
        if (null == t) return !1;
        let s = u.default.getChannel(n),
          i = g.default.joinTimestamp(n);
        if (null != s && c.default.isActive(e, t, n)) {
          if (null != i) {
            let e = { channel: s, joinTimestamp: i.getTime() },
              { isUnread: t, isRelevant: n, isTimedRelevant: r } = U(s);
            B(E, s, e, !0),
              B(I, s, n ? e : null, !0),
              B(p, s, t ? e : null, !0),
              B(v, s, null, !0),
              B(y, s, null, !0),
              G(s, r);
          } else {
            let e = l.default.isForumPostUnread(s.id);
            B(E, s, null, !0),
              B(p, s, null, !0),
              B(I, s, null, !0),
              B(v, s, s, !0),
              B(y, s, e ? s : null, !0),
              F(s.id);
          }
          P(e, t);
        } else
          H(E, e, t, n),
            H(I, e, t, n),
            H(p, e, t, n),
            H(v, e, t, n),
            H(y, e, t, n),
            F(n),
            P(e, t);
      }
      function M(e) {
        return b(e.channel.guild_id, e.channel.parent_id, e.channel.id);
      }
      function V(e) {
        let t = u.default.getChannel(e.id);
        return (
          !!(null != t && c.default.isActive(e.guildId, t.parent_id, e.id)) &&
          b(t.guild_id, t.parent_id, t.id)
        );
      }
      function L(e) {
        let t = u.default.getChannel(e.channelId);
        if (null == t) k();
        else {
          let { guild_id: e, parent_id: n } = t;
          if (!o.THREAD_CHANNEL_TYPES.has(t.type))
            return !!(Number(T[e]?.[t.id]) > 0) && (P(e, t.id), !0);
          if (null == n) return !1;
          if (x(E, t)) {
            let { isUnread: s, isRelevant: i, isTimedRelevant: r } = U(t);
            G(t, r);
            let a = x(p, t),
              o = x(I, t);
            if (s === a && i === o) return !1;
            let u = E[e][n][t.id],
              d = s ? u : null,
              l = i ? u : null;
            B(p, t, d, !0), B(I, t, l, !0), P(e, n);
          } else {
            let e = x(y, t),
              n = l.default.isForumPostUnread(t.id);
            if (n === e) return !1;
            B(y, t, n ? t : null, !0);
          }
        }
      }
      function k() {
        for (let e in ((p = {}), (I = {}), E))
          for (let t in E[e])
            for (let n in E[e][t]) {
              let s = E[e][t][n],
                {
                  isUnread: i,
                  isRelevant: r,
                  isTimedRelevant: a,
                } = U(s.channel);
              i && B(p, s.channel, s, !1),
                r && B(I, s.channel, s, !1),
                G(s.channel, a);
            }
        for (let e in ((y = {}), v))
          for (let t in v[e])
            for (let n in v[e][t]) {
              let s = v[e][t][n];
              l.default.isForumPostUnread(n) && B(y, s, s, !1);
            }
        O();
      }
      function w() {
        let e = S;
        if ((S = f.default.getChannelId()) === e) return !1;
        R(e), R(S);
      }
      function U(e) {
        let t = l.default.getMentionCount(e.id) > 0,
          n = l.default.hasUnread(e.id) && (!g.default.isMuted(e.id) || t),
          s = e.hasFlag(h.ChannelFlags.PINNED),
          i = e.isActiveThread(),
          r = i && (0, m.default)(e) > Date.now();
        return {
          isUnread: (i || s) && n,
          isRelevant: r || s || n,
          isTimedRelevant: r,
        };
      }
      function G(e, t) {
        F(e.id),
          t &&
            (function (e) {
              C[e.id] = setTimeout(
                () => {
                  let t = u.default.getChannel(e.id);
                  null != t &&
                    a.default.dispatch({ type: "THREAD_UPDATE", channel: t });
                },
                (0, m.default)(e) - Date.now() + 1
              );
            })(e);
      }
      function F(e) {
        e in C && (clearTimeout(C[e]), delete C[e]);
      }
      function B(e, t, n, s) {
        let { guild_id: r, parent_id: a, id: o } = t;
        null != r &&
          null != a &&
          null != o &&
          (!(r in e) && (e[r] = {}),
          !(a in e[r]) && (e[r][a] = {}),
          s && (e[r] = { ...e[r], [a]: { ...e[r][a] } }),
          null === n
            ? (delete e[r][a][o], i().isEmpty(e[r][a]) && delete e[r][a])
            : (e[r][a][o] = n));
      }
      function H(e, t, n, s) {
        if (null != t && null != n && null != s)
          Y(e, t, n, s) &&
            ((e[t] = { ...e[t], [n]: { ...e[t][n] } }),
            delete e[t][n][s],
            i().isEmpty(e[t][n]) && delete e[t][n]);
      }
      function x(e, t) {
        return Y(e, t.guild_id, t.parent_id, t.id);
      }
      function Y(e, t, n, s) {
        return t in e && n in e[t] && s in e[t][n];
      }
      let j = {},
        K = {},
        W = {},
        z = {},
        $ = {};
      class q extends r.default.Store {
        static #e = (this.displayName = "ActiveJoinedThreadsStore");
        initialize() {
          this.waitFor(c.default, u.default, g.default, l.default),
            this.syncWith([f.default], w);
        }
        hasActiveJoinedUnreadThreads(e, t) {
          return e in p && t in p[e];
        }
        getActiveUnjoinedThreadsForParent(e, t) {
          return e in v ? v[e][t] ?? z : z;
        }
        getActiveJoinedThreadsForParent(e, t) {
          return e in E ? E[e][t] ?? W : W;
        }
        getActiveJoinedThreadsForGuild(e) {
          return E[e] ?? j;
        }
        getActiveJoinedUnreadThreadsForGuild(e) {
          return p[e] ?? j;
        }
        getActiveJoinedUnreadThreadsForParent(e, t) {
          return this.getActiveJoinedUnreadThreadsForGuild(e)[t] ?? W;
        }
        getActiveJoinedRelevantThreadsForGuild(e) {
          return I[e] ?? j;
        }
        getActiveJoinedRelevantThreadsForParent(e, t) {
          return this.getActiveJoinedRelevantThreadsForGuild(e)[t] ?? W;
        }
        getActiveUnjoinedThreadsForGuild(e) {
          return v[e] ?? K;
        }
        getActiveUnjoinedUnreadThreadsForGuild(e) {
          return y[e] ?? j;
        }
        getActiveUnjoinedUnreadThreadsForParent(e, t) {
          return this.getActiveUnjoinedUnreadThreadsForGuild(e)[t] ?? W;
        }
        getNewThreadCountsForGuild(e) {
          return T[e] ?? $;
        }
        computeAllActiveJoinedThreads(e) {
          let t = [];
          for (let n in E)
            if (n === e || null == e)
              for (let e in E[n])
                for (let s in E[n][e]) t.push(E[n][e][s].channel);
          return t;
        }
        getNewThreadCount(e, t) {
          return T[e]?.[t] ?? 0;
        }
        getActiveThreadCount(e, t) {
          let n = i().size(E[e]?.[t] ?? {});
          return n + i().size(v[e]?.[t] ?? {});
        }
      }
      var X = new q(a.default, {
        CONNECTION_OPEN: A,
        OVERLAY_INITIALIZE: A,
        THREAD_LIST_SYNC: function (e) {
          let { guildId: t } = e;
          return N(t);
        },
        LOAD_THREADS_SUCCESS: A,
        LOAD_ARCHIVED_THREADS_SUCCESS: A,
        SEARCH_FINISH: A,
        MOD_VIEW_SEARCH_FINISH: A,
        GUILD_CREATE: function (e) {
          let { guild: t } = e;
          return N(t.id);
        },
        GUILD_DELETE: A,
        CURRENT_USER_UPDATE: A,
        THREAD_CREATE: M,
        THREAD_UPDATE: M,
        THREAD_DELETE: M,
        CHANNEL_UPDATES: function (e) {
          let { channels: t } = e;
          for (let e of t)
            if (
              e.isNSFW() !==
              (function (e, t) {
                if (null == t) return !1;
                let n = E[e],
                  s = null == n ? null : n[t];
                if (null != s) {
                  for (let e in s) if (s[e].channel.isNSFW()) return !0;
                }
                let i = v[e],
                  r = null == i ? null : i[t];
                if (null != r) {
                  for (let e in r) if (r[e].isNSFW()) return !0;
                }
                return !1;
              })(e.guild_id, e.parent_id)
            ) {
              A();
              return;
            }
          return !1;
        },
        CHANNEL_DELETE: function (e) {
          let { channel: t } = e,
            n = !1;
          return (
            null != t.guild_id &&
              null != t.parent_id &&
              (t.guild_id in E &&
                t.parent_id in E[t.guild_id] &&
                (delete E[t.guild_id][t.parent_id], (n = !0)),
              t.guild_id in p &&
                t.parent_id in p[t.guild_id] &&
                (delete p[t.guild_id][t.parent_id], (n = !0)),
              t.guild_id in I &&
                t.parent_id in I[t.guild_id] &&
                (_.default.keys(I[t.guild_id][t.parent_id]).forEach(F),
                delete I[t.guild_id][t.parent_id],
                (n = !0)),
              t.guild_id in v &&
                t.parent_id in v[t.guild_id] &&
                (delete v[t.guild_id][t.parent_id], (n = !0)),
              t.guild_id in y &&
                t.parent_id in y[t.guild_id] &&
                (delete y[t.guild_id][t.parent_id], (n = !0)),
              n && P(t.guild_id, t.parent_id)),
            n
          );
        },
        THREAD_MEMBER_UPDATE: V,
        THREAD_MEMBERS_UPDATE: V,
        LOAD_MESSAGES_SUCCESS: L,
        MESSAGE_CREATE: L,
        MESSAGE_DELETE: L,
        MESSAGE_DELETE_BULK: L,
        MESSAGE_ACK: L,
        CHANNEL_ACK: L,
        CHANNEL_LOCAL_ACK: L,
        CHANNEL_SELECT: function (e) {
          L(e), w();
        },
        PASSIVE_UPDATE_V1: function (e) {
          null != e.channels && k();
        },
        WINDOW_FOCUS: k,
        UPDATE_CHANNEL_DIMENSIONS: k,
        DRAWER_OPEN: k,
        DRAWER_CLOSE: k,
        BULK_ACK: k,
      });
    },
    408109: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return y;
          },
        });
      var s = n("392711"),
        i = n.n(s),
        r = n("661223"),
        a = n("312916"),
        o = n("775822"),
        u = n("731865"),
        d = n("84819");
      let l = {},
        f = new Set();
      function _(e) {
        return { id: e.id, parentId: e.parent_id };
      }
      function c(e) {
        e in l && delete l[e];
      }
      function g(e) {
        null != e.threads &&
          e.threads.length > 0 &&
          ((l[e.id] = {}),
          e.threads
            .filter(e => o.ALL_CHANNEL_TYPES.has(e.type))
            .forEach(t => m(e.id, t))),
          e.hasThreadsSubscription && f.add(e.id);
      }
      function m(e, t) {
        let n = l[e],
          s = t.parent_id;
        !(s in n) && (n[s] = {}), (l[e][s][t.id] = _(t));
      }
      function h(e) {
        let { channel: t } = e;
        if (!o.ALL_CHANNEL_TYPES.has(t.type)) return !1;
        if (t.threadMetadata?.archived === !0) return E(t);
        {
          let e = l[t.guild_id] ?? {};
          l[t.guild_id] = {
            ...e,
            [t.parent_id]: { ...e[t.parent_id], [t.id]: _(t) },
          };
        }
      }
      function E(e) {
        let { guild_id: t, parent_id: n, id: s } = e;
        if (
          null == t ||
          null == n ||
          !(t in l) ||
          !(n in l[t]) ||
          !(s in l[t][n])
        )
          return !1;
        (l[t] = { ...l[t], [n]: { ...l[t][n] } }),
          delete l[t][n][s],
          i().isEmpty(l[t][n]) && delete l[t][n];
      }
      let p = {};
      class v extends r.default.Store {
        static #e = (this.displayName = "ActiveThreadsStore");
        initialize() {
          this.waitFor(u.default);
        }
        isActive(e, t, n) {
          return null != e && null != this.getThreadsForParent(e, t)[n];
        }
        getThreadsForGuild(e) {
          return l[e] ?? p;
        }
        getThreadsForParent(e, t) {
          return this.getThreadsForGuild(e)[t] ?? p;
        }
        hasThreadsForChannel(e, t) {
          return !i().isEmpty(this.getThreadsForParent(e, t));
        }
        forEachGuild(e) {
          d.default.keys(l).forEach(t => {
            e(t, l[t]);
          });
        }
        hasLoaded(e) {
          return f.has(e);
        }
      }
      var y = new v(a.default, {
        CONNECTION_OPEN: function (e) {
          (l = {}),
            f.clear(),
            e.guilds.forEach(e => {
              g(e);
            });
        },
        OVERLAY_INITIALIZE: function (e) {
          let { channels: t } = e;
          (l = {}),
            i()(t)
              .filter(e => o.THREAD_CHANNEL_TYPES.has(e.type))
              .groupBy("guild_id")
              .forEach((e, t) => {
                (l[t] = {}), e.forEach(e => m(t, e));
              });
        },
        GUILD_CREATE: function (e) {
          let { guild: t } = e;
          c(t.id), g(t);
        },
        GUILD_DELETE: function (e) {
          let { guild: t } = e;
          c(t.id);
        },
        THREAD_CREATE: h,
        THREAD_UPDATE: h,
        THREAD_LIST_SYNC: function (e) {
          let { guildId: t, threads: n, channelIds: s } = e;
          for (let e in (null == s && f.add(t), (l[t] = { ...l[t] }), l[t]))
            l[t][e] = { ...l[t][e] };
          n.forEach(e => m(t, e));
        },
        THREAD_DELETE: function (e) {
          let { channel: t } = e;
          return E(t);
        },
        CHANNEL_DELETE: function (e) {
          let { channel: t } = e;
          if (null == t.guild_id || !(t.guild_id in l)) return !1;
          (l[t.guild_id] = { ...l[t.guild_id] }), delete l[t.guild_id][t.id];
        },
      });
    },
    987914: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return m;
          },
        });
      var s = n("266067"),
        i = n("454836"),
        r = n("312916"),
        a = n("706608"),
        o = n("775822"),
        u = n("731865"),
        d = n("232733"),
        l = n("467006"),
        f = n("551835");
      let _ = {},
        c = !1;
      function g(e) {
        if (
          null == e ||
          e === f.FAKE_PLACEHOLDER_PRIVATE_CHANNEL_ID ||
          (0, f.isStaticChannelRoute)(e) ||
          null != u.default.getChannel(e)
        )
          return Promise.resolve();
        if (
          (c ||
            ((c = !0),
            r.default.subscribe("CONNECTION_OPEN", () => {
              _ = {};
              let e = d.default.getChannelId(),
                t = u.default.getChannel(e);
              null != e && null == t && g(e);
            })),
          !a.default.isConnected())
        )
          return Promise.resolve();
        let t = _[e];
        if (null != t)
          return "LOADING" === t.type ? t.promise : Promise.resolve();
        let n = (0, s.matchPath)(location.pathname, {
            path: l.Routes.CHANNEL(":guildId", ":channelId", ":messageId"),
            exact: !0,
          }),
          m = i.default
            .get(l.Endpoints.CHANNEL(e))
            .then(t => {
              let { body: s } = t;
              (_[e] = { type: "LOADED" }),
                o.THREAD_CHANNEL_TYPES.has(s.type) &&
                  r.default.dispatch({
                    type: "THREAD_CREATE",
                    channel: (0, o.createChannelRecordFromServer)(s),
                    messageId: n?.params?.messageId,
                  });
            })
            .catch(() => {
              (_[e] = { type: "NOT_FOUND" }),
                r.default.dispatch({
                  type: "CHANNEL_DELETE",
                  channel: {
                    id: e,
                    guild_id: n?.params?.guildId,
                    parent_id: void 0,
                  },
                });
            });
        return (_[e] = { type: "LOADING", promise: m }), m;
      }
      var m = { loadThread: g };
    },
    331258: function (e, t, n) {
      "use strict";
      function s(e) {
        return {
          id: e.id,
          userId: e.user_id,
          flags: e.flags,
          muted: e.muted,
          muteConfig: e.mute_config,
          joinTimestamp: e.join_timestamp,
        };
      }
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        }),
        n("789020");
    },
    652731: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
      var s = n("417223"),
        i = n("152551"),
        r = n("84819");
      function a(e) {
        if (null == e.threadMetadata) return 0;
        let t = e.threadMetadata.autoArchiveDuration * i.default.Millis.MINUTE;
        return (
          (function (e) {
            if (null == e.threadMetadata) return 0;
            let t = s.default.lastMessageId(e.id) ?? e.id,
              n = r.default.extractTimestamp(t);
            return Math.max(
              n,
              null != e.threadMetadata.archiveTimestamp
                ? new Date(e.threadMetadata.archiveTimestamp).getTime()
                : 0
            );
          })(e) + t
        );
      }
    },
    167555: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        });
      var s = n("990835"),
        i = n("815635");
      let r = () => {};
      n.g.__timingFunction = () => performance.now();
      let a =
        null == n.g.__getTotalRequireTime
          ? () => 0
          : () => n.g.__getTotalRequireTime();
      function o(e, t) {
        if (0 === t || null == t) return null;
        let n = t - e;
        return n < 0 || n > 1e6 ? null : n;
      }
      class u {
        constructor(e, t) {
          (this.emoji = e),
            (this.name = t),
            (this.start_ = 0),
            (this.startNumImports = 0),
            (this.startImportTime = 0),
            (this.end_ = 0),
            (this.endNumImports = 0),
            (this.endImportTime = 0);
        }
        get start() {
          return this.start_;
        }
        get end() {
          return this.end_;
        }
        hasStart() {
          return this.start_ > 0;
        }
        hasData() {
          return this.end_ > 0;
        }
        recordStart() {
          0 === this.start_ && this.recordStart_(),
            s.default.mark(this.emoji, `Start ${this.name}`),
            r();
        }
        recordStart_() {
          (this.start_ = Date.now()),
            (this.startNumImports = i.size()),
            (this.startImportTime = a());
        }
        recordEnd() {
          0 === this.end_ && 0 !== this.start_
            ? (this.recordEnd_(),
              s.default.mark(
                this.emoji,
                `Finish ${this.name}`,
                this.end_ - this.start_
              ))
            : s.default.mark(this.emoji, `Finish ${this.name}`),
            r();
        }
        recordEnd_() {
          (this.end_ = Date.now()),
            (this.endNumImports = i.size()),
            (this.endImportTime = a());
        }
        set(e, t) {
          0 === this.start_ &&
            ((this.start_ = e),
            (this.end_ = e + t),
            (this.endNumImports = i.size()),
            (this.endImportTime = a())),
            s.default.mark(this.emoji, this.name, t),
            r();
        }
        serializeStart(e) {
          return o(e, this.start_);
        }
        serializeEnd(e) {
          return o(e, this.end_);
        }
        measure(e) {
          if (this.start_ > 0) return s.default.time(this.emoji, this.name, e);
          this.recordStart_();
          let t = s.default.time(this.emoji, this.name, e);
          return this.recordEnd_(), r(), t;
        }
        async measureAsync(e) {
          if (this.start_ > 0)
            return s.default.timeAsync(this.emoji, this.name, e);
          this.recordStart_();
          let t = await s.default.timeAsync(this.emoji, this.name, e);
          return this.recordEnd_(), r(), t;
        }
        async measureAsyncWithoutNesting(e) {
          if (this.start_ > 0)
            return s.default.timeAsync(this.emoji, this.name, e);
          this.recordStart_();
          let t = Date.now();
          s.default.mark(this.emoji, `Start ${this.name}`);
          let n = await e();
          return (
            s.default.mark(this.emoji, `Finish ${this.name}`, Date.now() - t),
            this.recordEnd_(),
            r(),
            n
          );
        }
      }
      class d {
        constructor(e, t, n = !1) {
          (this.emoji = e),
            (this.name = t),
            (this.onlyOnce = n),
            (this.time_ = 0),
            (this.numImports = null),
            (this.importTime = 0);
        }
        get time() {
          return this.time_;
        }
        record() {
          0 === this.time_
            ? ((this.time_ = Date.now()),
              (this.numImports = i.size()),
              (this.importTime = a()),
              s.default.mark(this.emoji, this.name))
            : !this.onlyOnce && s.default.mark(this.emoji, this.name),
            r();
        }
        hasData() {
          return this.time_ > 0;
        }
        serialize(e) {
          return o(e, this.time_);
        }
      }
      class l {
        get time() {
          return this.time_;
        }
        record() {
          0 === this.time_ && (this.time_ = a());
        }
        constructor() {
          this.time_ = 0;
        }
      }
      class f {
        constructor() {
          (this.loadIndex = new u("❗", "Load index.tsx")),
            (this.loadFastConnectNativeModule = new u(
              "\uD83D\uDCBE",
              "Load fast_connect native module"
            )),
            (this.beginFastConnect = new u(
              "\uD83C\uDF10",
              "Fast Connect IDENTIFY"
            )),
            (this.loadImports = new u("\uD83C\uDFC3", "Load Imports")),
            (this.init = new u("\uD83C\uDFC3", "Initial Initialization")),
            (this.loadStorage = new u("\uD83D\uDCBE", "Load Storage")),
            (this.parseStorage = new u("\uD83D\uDCBE", "Parse Storage")),
            (this.loadMiniCache = new u("\uD83D\uDCBE", "Load Mini Cache")),
            (this.fetchInitialGuildCache = new u(
              "\uD83D\uDCBE",
              "Fetch Initial Guild Cache"
            )),
            (this.loadCachedMessages = new u(
              "\uD83D\uDCBE",
              "Load Cached Messages"
            )),
            (this.renderApp = new d("\uD83C\uDFA8", "First React Render")),
            (this.renderAppEffect = new d(
              "\uD83C\uDFA8",
              "First React Render useEffect"
            )),
            (this.renderMessages = new d(
              "\uD83C\uDFA8",
              "React Render Messages",
              !0
            )),
            (this.renderMessagesWithCache = new d(
              "\uD83C\uDFA8",
              "React Render Cached Messages",
              !0
            )),
            (this.firstRowGenerator = new u(
              "\uD83C\uDFA8",
              "RowGenerator.generate()"
            )),
            (this.renderLatestMessages = new d(
              "\uD83C\uDFA8",
              "React Render Latest Messages"
            )),
            (this.initialGuild = new u("\uD83C\uDF10", "Initial Guild")),
            (this.loadLazyCache = new u("\uD83D\uDCBE", "Load Lazy Cache")),
            (this.fetchLazyCache = new u("\uD83D\uDCBE", "Fetch Lazy Cache")),
            (this.parseLazyCache = new u("\uD83D\uDCBE", "Parse Lazy Cache")),
            (this.fetchStaleChannels = new u(
              "\uD83D\uDCBE",
              "Fetch Stale Channels"
            )),
            (this.deserializeCache = new u(
              "\uD83D\uDCBE",
              "Deserialize Cache"
            )),
            (this.dispatchLazyCache = new u(
              "\uD83D\uDCBE",
              "Dispatch Lazy Cache"
            )),
            (this.parseReady = new u("\uD83C\uDF10", "Parse READY")),
            (this.ready = new u("\uD83C\uDF10", "READY")),
            (this.hydrateReady = new u("\uD83C\uDF10", "Hydrate READY")),
            (this.dispatchReady = new u("\uD83C\uDF10", "Dispatch READY")),
            (this.parseReadySupplemental = new u(
              "\uD83C\uDF10",
              "Parse READY Supplemental"
            )),
            (this.readySupplemental = new u(
              "\uD83C\uDF10",
              "READY Supplemental"
            )),
            (this.hydrateReadySupplemental = new u(
              "\uD83C\uDF10",
              "Hydrate READY Supplemental"
            )),
            (this.dispatchReadySupplemental = new u(
              "\uD83C\uDF10",
              "Dispatch READY Supplemental"
            )),
            (this.fetchMessages = new u("\uD83C\uDF10", "Fetch messages")),
            (this.dispatchMessages = new u(
              "\uD83C\uDF10",
              "Dispatch messages"
            )),
            (this.imports = {
              polyfillsEnd: new l(),
              sentryEnd: new l(),
              appStateChangeStart: new l(),
              appStateChangeEnd: new l(),
              loadMiniCacheStart: new l(),
              loadStorageStart: new l(),
              loadStorageEnd: new l(),
            });
        }
      }
      var _ = new (class e extends f {
        setTTICallback(e) {
          r = () => {
            !0 === e() && (r = () => !1);
          };
        }
        setCacheInfo(e) {
          this.cacheInfo = e;
        }
        setInterstitial(e) {
          (this.interstitial = e), r();
        }
        addLocalMessages(e, t) {
          for (
            this.cachedChannelCounts.set(e, t);
            this.cachedChannelCounts.size > 100;

          ) {
            let e = this.cachedChannelCounts.keys();
            this.cachedChannelCounts.delete(e.next().value);
          }
        }
        attachReadyPayloadProperties(e) {
          this.readyProperties = e;
        }
        appStateChanged(e) {
          "active" === e &&
            (null == this.firstAppActiveTime &&
              (this.firstAppActiveTime = Date.now()),
            (this.wasEverActive = !0)),
            null == this.readyProperties.num_guilds &&
              (this.didBackgroundApp = this.didBackgroundApp || "active" !== e);
        }
        recordRender(e, t) {
          this.renderMessages.record(),
            (t || e > 0) && this.renderMessagesWithCache.record(),
            t && this.renderLatestMessages.record();
        }
        recordMessageRender(e, t, s, i) {
          let { default: r } = n("84819");
          if (!this.renderLatestMessages.hasData()) {
            if (
              (this.renderMessages.record(),
              t.length > 0 && this.renderMessagesWithCache.record(),
              s)
            ) {
              if (
                (this.renderLatestMessages.record(),
                null == this.cachedChannelId)
              ) {
                this.messageCacheMissingReason = "no-cache";
                return;
              }
              if (this.cachedChannelId !== e) {
                this.messageCacheMissingReason = "channel-changed";
                return;
              }
              if (
                null == this.cachedMessageIds ||
                0 === this.cachedMessageIds.length
              ) {
                this.messageCacheMissingReason = "no-cache";
                return;
              }
              if (0 === t.length) {
                this.messageCacheMissingReason = "channel-empty";
                return;
              }
              if (e === this.cachedChannelId) {
                let n = this.cachedMessageIds.sort(r.compare).reverse()[0],
                  s = t.sort(r.compare).reverse()[0];
                this.messageCacheAgeSeconds = Math.floor(
                  (r.extractTimestamp(s) - r.extractTimestamp(n)) / 1e3
                );
                let a = t.filter(e =>
                  this.cachedMessageIds?.includes(e)
                ).length;
                (this.messageCacheCount =
                  this.cachedChannelCounts.get(e) ?? null),
                  (this.messageCacheHavingCount = a),
                  (this.messageCacheMissingCount = t.length - a),
                  (this.messageRenderFullCount = t.length),
                  (this.messageRenderCachedCount =
                    this.cachedMessageIds.length),
                  (this.messageRenderHasMoreAfter = i);
              }
            } else
              (null == this.cachedChannelId || e === this.cachedChannelId) &&
                ((this.cachedChannelId = e),
                (this.cachedMessageIds = t),
                t.length > 0 && (this.messageCacheMissingReason = null));
          }
        }
        getStartTime(e) {
          return this.extraProperties.headless_task_ran &&
            null != this.firstAppActiveTime
            ? this.firstAppActiveTime
            : null == e || e <= 0
              ? this.loadIndex.start
              : e;
        }
        processNativeLogs(e, t) {
          let n = this.getStartTime(t);
          for (let t of e)
            switch (t.label) {
              case "Finish MainApplication.initialize()":
                this.extraProperties.time_main_application_initialize_end = o(
                  n,
                  t.timestamp
                );
                break;
              case "GET_REACT_INSTANCE_MANAGER_START":
                this.extraProperties.time_get_react_instance_manager_start = o(
                  n,
                  t.timestamp
                );
                break;
              case "GET_REACT_INSTANCE_MANAGER_END":
                this.extraProperties.time_get_react_instance_manager_end = o(
                  n,
                  t.timestamp
                );
                break;
              case "PROCESS_PACKAGES_START":
                this.extraProperties.time_process_packages_start = o(
                  n,
                  t.timestamp
                );
                break;
              case "PROCESS_PACKAGES_END":
                this.extraProperties.time_process_packages_end = o(
                  n,
                  t.timestamp
                );
                break;
              case "CREATE_CATALYST_INSTANCE_START":
                this.extraProperties.time_create_catalyst_instance_start = o(
                  n,
                  t.timestamp
                );
                break;
              case "CREATE_CATALYST_INSTANCE_END":
                this.extraProperties.time_create_catalyst_instance_end = o(
                  n,
                  t.timestamp
                );
                break;
              case "CREATE_UI_MANAGER_MODULE_START":
                this.extraProperties.time_create_ui_manager_module_start = o(
                  n,
                  t.timestamp
                );
                break;
              case "CREATE_UI_MANAGER_MODULE_END":
                this.extraProperties.time_create_ui_manager_module_end = o(
                  n,
                  t.timestamp
                );
                break;
              case "REACT_BRIDGE_LOADING_START":
                this.extraProperties.time_react_bridge_loading_start = o(
                  n,
                  t.timestamp
                );
                break;
              case "REACT_BRIDGE_LOADING_END":
                this.extraProperties.time_react_bridge_loading_end = o(
                  n,
                  t.timestamp
                );
                break;
              case "CacheStorage Init Start":
                this.extraProperties.time_init_native_storage_start = o(
                  n,
                  t.timestamp
                );
                break;
              case "CacheStorage Init End":
                this.extraProperties.time_init_native_storage_end = o(
                  n,
                  t.timestamp
                );
                break;
              case "ChatModule.updateRows() Start":
                if (
                  null !=
                  this.extraProperties.time_first_native_message_render_start
                )
                  continue;
                this.extraProperties.time_first_native_message_render_start = o(
                  n,
                  t.timestamp
                );
                break;
              case "ChatModule.updateRows() Finish":
                if (
                  null !=
                  this.extraProperties.time_first_native_message_render_end
                )
                  continue;
                this.extraProperties.time_first_native_message_render_end = o(
                  n,
                  t.timestamp
                );
            }
        }
        serializeTTITracker(e) {
          let t = this.getStartTime(e),
            i = n("392711")(s.default.logGroups["0"].logs)
              .filter(e => e.log.startsWith("Require "))
              .map(e => e.delta ?? 0)
              .sum();
          return {
            ...this.extraProperties,
            time_load_index_start: this.loadIndex.serializeStart(t),
            time_load_index_end: this.loadIndex.serializeEnd(t),
            time_begin_fast_connect_start:
              this.beginFastConnect.serializeStart(t),
            time_begin_fast_connect_end: this.beginFastConnect.serializeEnd(t),
            time_load_imports_start: this.loadImports.serializeStart(t),
            time_load_imports_end: this.loadImports.serializeEnd(t),
            time_init_start: this.init.serializeStart(t),
            time_init_end: this.init.serializeEnd(t),
            time_load_storage_start: this.loadStorage.serializeStart(t),
            time_load_storage_end: this.loadStorage.serializeEnd(t),
            time_parse_storage_start: this.parseStorage.serializeStart(t),
            time_parse_storage_end: this.parseStorage.serializeEnd(t),
            time_load_mini_cache_start: this.loadMiniCache.serializeStart(t),
            time_load_mini_cache_end: this.loadMiniCache.serializeEnd(t),
            time_fetch_initial_guild_start:
              this.fetchInitialGuildCache.serializeStart(t),
            time_fetch_initial_guild_end:
              this.fetchInitialGuildCache.serializeEnd(t),
            time_load_cached_messages_start:
              this.loadCachedMessages.serializeStart(t),
            time_load_cached_messages_end:
              this.loadCachedMessages.serializeEnd(t),
            time_render_app_start: this.renderApp.serialize(t),
            time_render_app_effect_start: this.renderAppEffect.serialize(t),
            time_render_messages_end: this.renderMessages.serialize(t),
            time_render_messages_with_cache_end:
              this.renderMessagesWithCache.serialize(t),
            time_render_latest_messages_end:
              this.renderLatestMessages.serialize(t),
            time_first_row_generator_start:
              this.firstRowGenerator.serializeStart(t),
            time_first_row_generator_end:
              this.firstRowGenerator.serializeEnd(t),
            time_initial_guild_start: this.initialGuild.serializeStart(t),
            time_initial_guild_end: this.initialGuild.serializeEnd(t),
            time_load_lazy_cache_start: this.loadLazyCache.serializeStart(t),
            time_load_lazy_cache_end: this.loadLazyCache.serializeEnd(t),
            time_fetch_lazy_cache_start: this.fetchLazyCache.serializeStart(t),
            time_fetch_lazy_cache_end: this.fetchLazyCache.serializeEnd(t),
            time_parse_lazy_cache_start: this.parseLazyCache.serializeStart(t),
            time_parse_lazy_cache_end: this.parseLazyCache.serializeEnd(t),
            time_fetch_stale_channels_start:
              this.fetchStaleChannels.serializeStart(t),
            time_fetch_stale_channels_end:
              this.fetchStaleChannels.serializeEnd(t),
            time_deserialize_cache_start:
              this.deserializeCache.serializeStart(t),
            time_deserialize_cache_end: this.deserializeCache.serializeEnd(t),
            time_dispatch_lazy_cache_start:
              this.dispatchLazyCache.serializeStart(t),
            time_dispatch_lazy_cache_end:
              this.dispatchLazyCache.serializeEnd(t),
            time_parse_ready_start: this.parseReady.serializeStart(t),
            time_parse_ready_end: this.parseReady.serializeEnd(t),
            time_ready_start: this.ready.serializeStart(t),
            time_ready_end: this.ready.serializeEnd(t),
            time_hydrate_ready_start: this.hydrateReady.serializeStart(t),
            time_hydrate_ready_end: this.hydrateReady.serializeEnd(t),
            time_dispatch_ready_start: this.dispatchReady.serializeStart(t),
            time_dispatch_ready_end: this.dispatchReady.serializeEnd(t),
            time_parse_ready_supplemental_start:
              this.parseReadySupplemental.serializeStart(t),
            time_parse_ready_supplemental_end:
              this.parseReadySupplemental.serializeEnd(t),
            time_ready_supplemental_start:
              this.readySupplemental.serializeStart(t),
            time_ready_supplemental_end: this.readySupplemental.serializeEnd(t),
            time_hydrate_ready_supplemental_start:
              this.hydrateReadySupplemental.serializeStart(t),
            time_hydrate_ready_supplemental_end:
              this.hydrateReadySupplemental.serializeEnd(t),
            time_dispatch_ready_supplemental_start:
              this.dispatchReadySupplemental.serializeStart(t),
            time_dispatch_ready_supplemental_end:
              this.dispatchReadySupplemental.serializeEnd(t),
            time_fetch_messages_start: this.fetchMessages.serializeStart(t),
            time_fetch_messages_end: this.fetchMessages.serializeEnd(t),
            time_dispatch_messages_start:
              this.dispatchMessages.serializeStart(t),
            time_dispatch_messages_end: this.dispatchMessages.serializeEnd(t),
            time_load_fast_connect_native_module_start:
              this.loadFastConnectNativeModule.serializeStart(t),
            time_load_fast_connect_native_module_end:
              this.loadFastConnectNativeModule.serializeEnd(t),
            identify_total_server_duration_ms:
              this.readyProperties.identify_total_server_duration_ms,
            identify_api_duration_ms:
              this.readyProperties.identify_api_duration_ms,
            identify_guilds_duration_ms:
              this.readyProperties.identify_guilds_duration_ms,
            ready_compressed_byte_size:
              this.readyProperties.compressed_byte_size,
            ready_uncompressed_byte_size:
              this.readyProperties.uncompressed_byte_size,
            identify_compressed_byte_size:
              this.readyProperties.identify_compressed_byte_size,
            identify_uncompressed_byte_size:
              this.readyProperties.identify_uncompressed_byte_size,
            ready_compression_algorithm:
              this.readyProperties.compression_algorithm,
            ready_packing_algorithm: this.readyProperties.packing_algorithm,
            ready_unpack_duration_ms: this.readyProperties.unpack_duration_ms,
            is_reconnect: this.readyProperties.is_reconnect,
            is_fast_connect: this.readyProperties.is_fast_connect,
            did_force_clear_guild_hashes:
              this.readyProperties.did_force_clear_guild_hashes,
            num_guilds: this.readyProperties.num_guilds,
            num_changed_guild_channels: this.readyProperties.num_guild_channels,
            ready_presences_size: this.readyProperties.presences_size,
            ready_users_size: this.readyProperties.users_size,
            ready_read_states_size: this.readyProperties.read_states_size,
            ready_private_channels_size:
              this.readyProperties.private_channels_size,
            ready_user_guild_settings_size:
              this.readyProperties.user_guild_settings_size,
            ready_relationships_size: this.readyProperties.relationships_size,
            ready_experiments_size: this.readyProperties.experiments_size,
            ready_user_settings_size: this.readyProperties.user_settings_size,
            ready_remaining_data_size: this.readyProperties.remaining_data_size,
            ready_guild_channels_size: this.readyProperties.guild_channels_size,
            ready_guild_members_size: this.readyProperties.guild_members_size,
            ready_guild_presences_size:
              this.readyProperties.guild_presences_size,
            ready_guild_roles_size: this.readyProperties.guild_roles_size,
            ready_guild_emojis_size: this.readyProperties.guild_emojis_size,
            ready_guild_remaining_data_size:
              this.readyProperties.guild_remaining_data_size,
            ready_guild_threads_size: this.readyProperties.guild_threads_size,
            ready_guild_stickers_size: this.readyProperties.guild_stickers_size,
            ready_guild_events_size: this.readyProperties.guild_events_size,
            ready_guild_features_size: this.readyProperties.guild_features_size,
            ready_size_metrics_duration_ms:
              this.readyProperties.size_metrics_duration_ms,
            had_cache_at_startup: this.readyProperties.had_cache_at_startup,
            used_cache_at_startup: this.readyProperties.used_cache_at_startup,
            was_authenticated: this.wasAuthenticated,
            did_background_app: this.didBackgroundApp,
            interstitial: this.interstitial,
            message_cache_missing_reason: this.messageCacheMissingReason,
            message_cache_age_seconds: this.messageCacheAgeSeconds,
            message_cache_count: this.messageCacheCount,
            message_cache_having_count: this.messageCacheHavingCount,
            message_cache_missing_count: this.messageCacheMissingCount,
            message_render_full_count: this.messageRenderFullCount,
            message_render_cached_count: this.messageRenderCachedCount,
            message_render_has_more_after: this.messageRenderHasMoreAfter,
            duration_major_js_imports:
              this.loadImports.end - this.loadIndex.start + i,
            cache_num_guilds: this.cacheInfo?.guilds,
            cache_num_private_channels: this.cacheInfo?.privateChannels,
            cache_num_basic_channels: this.cacheInfo?.basicChannels,
            cache_num_basic_channels_stale: this.cacheInfo?.basicChannelsStale,
            cache_num_full_channels: this.cacheInfo?.fullChannels,
            cache_num_full_channel_guilds: this.cacheInfo?.fullChannelGuilds,
            num_imports_at_load_index_end: this.loadIndex.endNumImports,
            num_imports_at_init_end: this.init.endNumImports,
            num_imports_at_load_mini_cache_end:
              this.loadMiniCache.endNumImports,
            num_imports_at_render_app_start: this.renderApp.numImports,
            num_imports_at_render_app_effect_start:
              this.renderAppEffect.numImports,
            num_imports_at_render_messages_end: this.renderMessages.numImports,
            num_imports_at_render_messages_with_cache_end:
              this.renderMessagesWithCache.numImports,
            num_imports_at_render_latest_messages_end:
              this.renderLatestMessages.numImports,
            num_imports_at_load_lazy_cache_start:
              this.loadLazyCache.startNumImports,
            num_imports_at_load_lazy_cache_end:
              this.loadLazyCache.endNumImports,
            num_imports_at_ready_start: this.ready.startNumImports,
            num_imports_at_ready_end: this.ready.endNumImports,
            num_imports_at_ready_supplemental_start:
              this.readySupplemental.startNumImports,
            num_imports_at_ready_supplemental_end:
              this.readySupplemental.endNumImports,
            duration_imports_at_load_index_start: Math.ceil(
              this.loadIndex.startImportTime
            ),
            duration_imports_at_load_index_end: Math.ceil(
              this.loadIndex.endImportTime
            ),
            duration_imports_at_init_end: Math.ceil(this.init.endImportTime),
            duration_imports_at_load_mini_cache_end: Math.ceil(
              this.loadMiniCache.endImportTime
            ),
            duration_imports_at_render_app_start: Math.ceil(
              this.renderApp.importTime
            ),
            duration_imports_at_render_app_effect_start: Math.ceil(
              this.renderAppEffect.importTime
            ),
            duration_imports_at_render_messages_end: Math.ceil(
              this.renderMessages.importTime
            ),
            duration_imports_at_render_messages_with_cache_end: Math.ceil(
              this.renderMessagesWithCache.importTime
            ),
            duration_imports_at_render_latest_messages_end: Math.ceil(
              this.renderLatestMessages.importTime
            ),
            duration_imports_at_load_lazy_cache_start: Math.ceil(
              this.loadLazyCache.startImportTime
            ),
            duration_imports_at_load_lazy_cache_end: Math.ceil(
              this.loadLazyCache.endImportTime
            ),
            duration_imports_at_ready_start: Math.ceil(
              this.ready.startImportTime
            ),
            duration_imports_at_ready_end: Math.ceil(this.ready.endImportTime),
            duration_imports_at_ready_supplemental_start: Math.ceil(
              this.readySupplemental.startImportTime
            ),
            duration_imports_at_ready_supplemental_end: Math.ceil(
              this.readySupplemental.endImportTime
            ),
            duration_imports_at_polyfills_end: Math.ceil(
              this.imports.polyfillsEnd.time
            ),
            duration_imports_at_sentry_end: Math.ceil(
              this.imports.sentryEnd.time
            ),
            duration_imports_at_fast_connect_start: Math.ceil(
              this.beginFastConnect.startImportTime
            ),
            duration_imports_at_fast_connect_end: Math.ceil(
              this.beginFastConnect.endImportTime
            ),
            duration_imports_at_app_state_change_start: Math.ceil(
              this.imports.appStateChangeStart.time
            ),
            duration_imports_at_app_state_change_end: Math.ceil(
              this.imports.appStateChangeEnd.time
            ),
            duration_imports_at_load_mini_cache_start: Math.ceil(
              this.imports.loadMiniCacheStart.time
            ),
            duration_imports_at_load_storage_start: Math.ceil(
              this.imports.loadStorageStart.time
            ),
            duration_imports_at_load_storage_end: Math.ceil(
              this.imports.loadStorageEnd.time
            ),
          };
        }
        constructor(...e) {
          super(...e),
            (this.readyProperties = {}),
            (this.didBackgroundApp = !1),
            (this.wasEverActive = !1),
            (this.wasAuthenticated = !1),
            (this.interstitial = null),
            (this.cachedChannelCounts = new Map()),
            (this.cachedChannelId = null),
            (this.cachedMessageIds = null),
            (this.messageCacheMissingReason = "never-loaded"),
            (this.messageCacheAgeSeconds = null),
            (this.messageCacheCount = null),
            (this.messageCacheHavingCount = null),
            (this.messageCacheMissingCount = null),
            (this.messageRenderFullCount = null),
            (this.messageRenderCachedCount = null),
            (this.messageRenderHasMoreAfter = null),
            (this.firstAppActiveTime = null),
            (this.cacheInfo = null),
            (this.extraProperties = {});
        }
      })();
    },
    964154: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          isLimitedAccessErrorCode: function () {
            return i;
          },
        });
      var s = n("467006");
      function i(e, t) {
        return (
          e >= 400 &&
          e < 500 &&
          null != t &&
          t >= s.AbortCodes.USER_LIMITED_ACCESS_DEFAULT &&
          t <= s.AbortCodes.USER_LIMITED_ACCESS_MAX
        );
      }
    },
    618493: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          coerceAudioContextForProto: function () {
            return u;
          },
          snapVolumeToDefault: function () {
            return o;
          },
        });
      var s = n("536751"),
        i = n("325091"),
        r = n("947781"),
        a = n("746835");
      function o(e, t) {
        let n =
          t === i.MediaEngineContextTypes.STREAM
            ? s.AudioSettingsDefaultVolumes.STREAM
            : s.AudioSettingsDefaultVolumes.USER;
        return 1 >
          Math.abs(
            (0, r.amplitudeToPerceptual)(n) - (0, r.amplitudeToPerceptual)(e)
          )
          ? n
          : e;
      }
      function u(e) {
        switch (e) {
          case i.MediaEngineContextTypes.DEFAULT:
            return a.ProtoAudioSettingsContextTypes.USER;
          case i.MediaEngineContextTypes.STREAM:
            return a.ProtoAudioSettingsContextTypes.STREAM;
          default:
            return;
        }
      }
    },
    62755: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
      var s = n("312916"),
        i = n("939591"),
        r = n("467006");
      function a() {
        let e =
            arguments.length > 0 && void 0 !== arguments[0]
              ? arguments[0]
              : null,
          t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : null,
          n =
            arguments.length > 2 && void 0 !== arguments[2]
              ? arguments[2]
              : { openWithoutBackstack: !1 };
        s.default.dispatch({
          type: "USER_SETTINGS_MODAL_OPEN",
          section: e,
          subsection: t,
          ...n,
        }),
          (0, i.pushLayer)(r.Layers.USER_SETTINGS);
      }
    },
    48495: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
      var s = n("593473"),
        i = n("467006");
      let r = /-/g;
      function a(e) {
        let [, , t, n] = e.split("/"),
          a = t?.toUpperCase().replace(r, "_"),
          o = n?.toUpperCase().replace(r, "_");
        if (
          i.UserSettingsSections.hasOwnProperty(a) &&
          (null == o || "" === o || i.UserSettingsSections.hasOwnProperty(o))
        ) {
          let { source: e } = (0, s.parse)(location.search);
          return {
            source: e,
            section: i.UserSettingsSections[a],
            subsection: o,
          };
        }
        return null;
      }
    },
    106786: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          showModal: function () {
            return r;
          },
        });
      var s = n("735250");
      n("470079");
      var i = n("974328");
      function r(e) {
        (0, i.openModalLazy)(async () => {
          let { default: t } = await n
            .el("106786@263:295")
            .then(n.bind(n, "736052"));
          return n => (0, s.jsx)(t, { analyticsLocation: e, ...n });
        });
      }
    },
    894716: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          showModal: function () {
            return r;
          },
        });
      var s = n("735250");
      n("470079");
      var i = n("974328");
      function r(e, t) {
        (0, i.openModalLazy)(async () => {
          let { default: i } = await n
            .el("894716@277:309")
            .then(n.bind(n, "707602"));
          return n =>
            (0, s.jsx)(i, { analyticsLocation: e, platformType: t, ...n });
        });
      }
    },
    776053: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          showModal: function () {
            return r;
          },
        });
      var s = n("735250");
      n("470079");
      var i = n("974328");
      function r(e) {
        (0, i.openModalLazy)(async () => {
          let { default: t } = await n
            .el("776053@256:281")
            .then(n.bind(n, "896631"));
          return n => (0, s.jsx)(t, { analyticsLocation: e, ...n });
        });
      }
    },
    601915: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getLastUsedVideoBackgroundOption: function () {
            return a;
          },
        }),
        n("470079"),
        n("661223");
      var s = n("991400");
      n("871831");
      var i = n("488867"),
        r = n("516997");
      function a(e) {
        let t = s.default.settings;
        return (function (e, t) {
          let n = (0, r.getVideoBackgroundOptionFromProto)(e, t.id);
          return (0, r.isCustomBackgroundOption)(n) &&
            !i.default.canUseCustomBackgrounds(t)
            ? null
            : "number" != typeof n || (0, r.isDefaultBackgroundOption)(n)
              ? n
              : null;
        })(t.voiceAndVideo?.videoBackgroundFilterDesktop, e);
      }
    },
    896952: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          applyMediaFilterSettings: function () {
            return h;
          },
          deleteVideoFilterAsset: function () {
            return g;
          },
          errorApplyingMediaFilterSettings: function () {
            return p;
          },
          fetchVideoFilterAssets: function () {
            return _;
          },
          saveLastUsedBackgroundOption: function () {
            return m;
          },
          startApplyMediaFilterSettings: function () {
            return E;
          },
          uploadVideoFilterAsset: function () {
            return c;
          },
        });
      var s = n("454836"),
        i = n("312916"),
        r = n("259537"),
        a = n("386130"),
        o = n("871831"),
        u = n("601915"),
        d = n("516997"),
        l = n("467745"),
        f = n("467006");
      async function _() {
        let e = await s.default.get(f.Endpoints.VIDEO_FILTER_ASSETS);
        return (
          i.default.dispatch({
            type: "VIDEO_FILTER_ASSETS_FETCH_SUCCESS",
            assets: e.body,
          }),
          e
        );
      }
      async function c(e, t, n) {
        try {
          let r = await s.default.post({
            url: f.Endpoints.VIDEO_FILTER_ASSETS,
            body: { type: t, asset: e, last_used: n?.toISOString() },
          });
          return (
            i.default.dispatch({
              type: "VIDEO_FILTER_ASSET_UPLOAD_SUCCESS",
              videoFilterAsset: r.body,
            }),
            r.body
          );
        } catch (e) {
          throw new l.default(e);
        }
      }
      async function g(e) {
        await s.default.delete(f.Endpoints.VIDEO_FILTER_ASSET(e.id));
        let t = (0, u.getLastUsedVideoBackgroundOption)(
          o.default.getCurrentUser()
        );
        (0, d.isCustomBackgroundOption)(t) && t.id === e.id && m(null),
          i.default.dispatch({
            type: "VIDEO_FILTER_ASSET_DELETE_SUCCESS",
            videoFilterAsset: e,
          });
      }
      async function m(e) {
        if (
          (await r.PreloadedUserSettingsActionCreators.updateAsync(
            "voiceAndVideo",
            t => {
              t.videoBackgroundFilterDesktop = (0,
              d.getVideoBackgroundProtoFromOption)(e);
            },
            r.UserSettingsDelay.FREQUENT_USER_ACTION
          ),
          (0, d.isCustomBackgroundOption)(e))
        ) {
          let t = await s.default.post(
            f.Endpoints.VIDEO_FILTER_ASSET_LAST_USED(e.id)
          );
          i.default.dispatch({
            type: "VIDEO_SAVE_LAST_USED_BACKGROUND_OPTION",
            backgroundOption: t.body,
          });
        } else
          i.default.dispatch({
            type: "VIDEO_SAVE_LAST_USED_BACKGROUND_OPTION",
            backgroundOption: e,
          });
      }
      function h(e) {
        a.default.isSupported() &&
          i.default.dispatch({
            type: "MEDIA_ENGINE_APPLY_MEDIA_FILTER_SETTINGS",
            settings: e,
          });
      }
      function E() {
        a.default.isSupported() &&
          i.default.dispatch({
            type: "MEDIA_ENGINE_APPLY_MEDIA_FILTER_SETTINGS_START",
          });
      }
      function p() {
        i.default.dispatch({
          type: "MEDIA_ENGINE_APPLY_MEDIA_FILTER_SETTINGS_ERROR",
        });
      }
    },
    442802: function (e, t, n) {
      "use strict";
      var s, i, r, a;
      n.r(t),
        n.d(t, {
          ANIMATED_DEFAULT_VIDEO_BACKGROUNDS: function () {
            return o;
          },
          BACKGROUND_REPLACEMENT_SIZE: function () {
            return l;
          },
          BLUR_BACKGROUND_OPTION: function () {
            return d;
          },
          DEFAULT_VIDEO_BACKGROUND_SORT: function () {
            return u;
          },
          DefaultVideoBackground: function () {
            return i;
          },
          MAX_BACKGROUND_IMAGE_UPLOAD_FILESIZE_BYTES: function () {
            return f;
          },
          VideoFilterType: function () {
            return s;
          },
        }),
        ((r = s || (s = {}))[(r.BACKGROUND = 0)] = "BACKGROUND"),
        ((a = i || (i = {}))[(a.OPTION_1 = 0)] = "OPTION_1"),
        (a[(a.OPTION_2 = 1)] = "OPTION_2"),
        (a[(a.OPTION_3 = 2)] = "OPTION_3"),
        (a[(a.OPTION_4 = 3)] = "OPTION_4"),
        (a[(a.OPTION_7 = 7)] = "OPTION_7"),
        (a[(a.OPTION_8 = 8)] = "OPTION_8"),
        (a[(a.OPTION_9 = 9)] = "OPTION_9"),
        (a[(a.OPTION_10 = 10)] = "OPTION_10");
      let o = [7, 8, 9, 10],
        u = [7, 8, 9, 10, 0, 1, 2, 3].reduce(
          (e, t, n) => ({ ...e, [t]: n }),
          {}
        ),
        d = "blur",
        l = { width: 1280, height: 720 },
        f = 10485760;
    },
    336937: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return p;
          },
        });
      var s = n("661223"),
        i = n("325091"),
        r = n("312916"),
        a = n("991400"),
        o = n("386130"),
        u = n("232733"),
        d = n("871831"),
        l = n("516997");
      let f = !1,
        _ = null,
        c = !1,
        g = {};
      function m(e) {
        let t = d.default.getCurrentUser();
        if (null == t) return !1;
        let n =
          e ??
          (0, l.getVideoBackgroundOptionFromProto)(
            a.default.settings.voiceAndVideo?.videoBackgroundFilterDesktop,
            t.id
          );
        return (
          null != u.default.getVoiceChannelId() &&
          o.default.isVideoEnabled() &&
          null != n
        );
      }
      function h() {
        _ !== u.default.getVoiceChannelId() && (c = !1),
          m() && (c = !0),
          (_ = u.default.getVoiceChannelId());
      }
      class E extends s.default.Store {
        static #e = (this.displayName = "VideoBackgroundStore");
        initialize() {
          this.waitFor(a.default, u.default, o.default),
            this.syncWith([u.default, o.default], h);
        }
        get videoFilterAssets() {
          return g;
        }
        get hasBeenApplied() {
          return f;
        }
        get hasUsedBackgroundInCall() {
          return c;
        }
      }
      var p = new E(r.default, {
        VIDEO_FILTER_ASSETS_FETCH_SUCCESS: function (e) {
          let { assets: t } = e;
          g = t.reduce((e, t) => ({ ...e, [t.id]: t }), {});
        },
        VIDEO_FILTER_ASSET_UPLOAD_SUCCESS: function (e) {
          let { videoFilterAsset: t } = e;
          g = { ...g, [t.id]: t };
        },
        VIDEO_FILTER_ASSET_DELETE_SUCCESS: function (e) {
          let { videoFilterAsset: t } = e;
          (g = { ...g }), delete g[t.id];
        },
        VIDEO_SAVE_LAST_USED_BACKGROUND_OPTION: function (e) {
          let { backgroundOption: t } = e;
          m(t) && (c = !0);
        },
        MEDIA_ENGINE_APPLY_MEDIA_FILTER_SETTINGS: function (e) {
          let { settings: t } = e;
          i.FilterSettingsKey.CAMERA_BACKGROUND_LIVE in t && (f = !0);
        },
      });
    },
    516997: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getEffectAnalyticsType: function () {
            return c;
          },
          getEffectDetailAnalyticsName: function () {
            return g;
          },
          getVideoBackgroundOptionFromProto: function () {
            return v;
          },
          getVideoBackgroundProtoFromOption: function () {
            return p;
          },
          isCustomBackgroundOption: function () {
            return l;
          },
          isDefaultBackgroundOption: function () {
            return f;
          },
          trackBackgroundOptionAdded: function () {
            return h;
          },
          trackBackgroundOptionDeleted: function () {
            return E;
          },
          trackBackgroundOptionUpdated: function () {
            return m;
          },
        });
      var s = n("244180"),
        i = n("731865"),
        r = n("407807"),
        a = n("328470"),
        o = n("204606"),
        u = n("442802"),
        d = n("467006");
      function l(e) {
        return (
          null != e &&
          "object" == typeof e &&
          "id" in e &&
          e.type === u.VideoFilterType.BACKGROUND
        );
      }
      function f(e) {
        return "number" == typeof e && e in u.DefaultVideoBackground;
      }
      function _(e) {
        return f(e)
          ? u.ANIMATED_DEFAULT_VIDEO_BACKGROUNDS.includes(e)
          : !!l(e) &&
              ((0, o.isAnimatedIconHash)(e.asset) ||
                (0, o.isVideoAssetHash)(e.asset));
      }
      function c(e) {
        return null != e ? "Video Background" : "None";
      }
      function g(e) {
        if (null == e) return "None";
        if (l(e)) return "Custom";
        if ("blur" === e) return "Blur";
        else
          return `Preset - ${(function (e) {
            switch (e) {
              case u.DefaultVideoBackground.OPTION_1:
                return "Cybercity";
              case u.DefaultVideoBackground.OPTION_2:
                return "Discord the Movie";
              case u.DefaultVideoBackground.OPTION_3:
                return "Wumpus Vacation";
              case u.DefaultVideoBackground.OPTION_4:
                return "Vaporwave";
              case u.DefaultVideoBackground.OPTION_7:
                return "Capernite Day";
              case u.DefaultVideoBackground.OPTION_8:
                return "Capernite Night";
              case u.DefaultVideoBackground.OPTION_9:
                return "Hacker Den";
              case u.DefaultVideoBackground.OPTION_10:
                return "Wumpice";
            }
          })(e)}`;
      }
      function m(e, t, n) {
        let o = r.default.getGuildId(),
          u = r.default.getChannelId(),
          l = i.default.getChannel(u),
          f = (0, s.getVoiceStateMetadata)(o, u, !0);
        a.default.track(d.AnalyticEvents.VIDEO_EFFECT_UPDATED, {
          location: t,
          effect_type: c(e),
          effect_detail: g(e),
          effect_state: n,
          channel_id: u,
          channel_type: l?.type,
          guild_id: o,
          voice_state_count: f.voice_state_count,
          video_stream_count: f.video_stream_count,
          media_session_id: r.default.getMediaSessionId(),
          rtc_connection_id: r.default.getRTCConnectionId(),
          is_animated: _(e),
        });
      }
      function h(e, t, n) {
        a.default.track(d.AnalyticEvents.VIDEO_BACKGROUND_ADDED, {
          is_animated: _(e),
          is_video: t,
          is_from_tenor: n,
        });
      }
      function E(e) {
        a.default.track(d.AnalyticEvents.VIDEO_BACKGROUND_DELETED, {
          is_animated: _(e),
        });
      }
      function p(e) {
        if (null == e) return { oneofKind: void 0 };
        if (l(e))
          return {
            oneofKind: "customAsset",
            customAsset: { id: e.id, assetHash: e.asset },
          };
        if ("blur" === e) return { oneofKind: "blur", blur: { useBlur: !0 } };
        else return { oneofKind: "presetOption", presetOption: e };
      }
      function v(e, t) {
        if (null == e || void 0 === e.oneofKind) return null;
        switch (e.oneofKind) {
          case "customAsset":
            return {
              type: u.VideoFilterType.BACKGROUND,
              id: e.customAsset.id,
              user_id: t,
              asset: e.customAsset.assetHash,
            };
          case "blur":
            return e.blur.useBlur ? "blur" : null;
          case "presetOption":
            return e.presetOption;
        }
      }
    },
    467745: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var s,
        i,
        r = n("454836"),
        a = n("30175");
      ((s || (s = {})).ASSET_SIZE = "BINARY_TYPE_MAX_SIZE"),
        ((i || (i = {})).ASSET = "asset");
      class o extends r.default.V8APIError {
        constructor(e, t) {
          super(e, t, a.default.Messages.VIDEO_BACKGROUND_ERROR_UPLOAD);
          let n = this.getFieldErrors("asset");
          null != n &&
            n[0]?.code === "BINARY_TYPE_MAX_SIZE" &&
            (this.message =
              a.default.Messages.VIDEO_BACKGROUND_ERROR_UPLOAD_FILE_SIZE);
        }
      }
      var u = o;
    },
    867580: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          applyBackgroundOptionLive: function () {
            return v;
          },
          applyBackgroundOptionPreview: function () {
            return y;
          },
          applyInitialVideoBackgroundOption: function () {
            return I;
          },
        }),
        n("268111"),
        n("941497"),
        n("744285"),
        n("492257"),
        n("873817");
      var s = n("512722"),
        i = n.n(s),
        r = n("325091"),
        a = n("871831"),
        o = n("204606"),
        u = n("601915"),
        d = n("896952"),
        l = n("336937"),
        f = n("516997"),
        _ = n("154565"),
        c = n("42715"),
        g = n("442802"),
        m = n("467006");
      async function h(e) {
        let t = await fetch(e),
          n = await t.blob();
        return new Uint8ClampedArray(await n.arrayBuffer());
      }
      function E(e, t, n, s, i) {
        (0, d.applyMediaFilterSettings)({
          [e]: { graph: n, target: t, image: s, blob: i },
        });
      }
      async function p(e, t, n) {
        let s,
          a = !1;
        if (null == n) return E(e, t, r.FilterSettingsGraph.NONE);
        if (n === g.BLUR_BACKGROUND_OPTION)
          return E(e, t, r.FilterSettingsGraph.BACKGROUND_BLUR);
        if ("string" == typeof n || "number" == typeof n) {
          let e = (0, _.default)()[n];
          (a = e.isVideo ?? !1), (s = e.source);
        } else {
          let e = n.asset;
          (a = (0, o.isAnimatedIconHash)(e) || (0, o.isVideoAssetHash)(e)),
            (s = (0, o.getVideoFilterAssetURL)({
              userId: n.user_id,
              assetId: n.id,
              assetHash: e,
              size: g.BACKGROUND_REPLACEMENT_SIZE.width,
            }));
        }
        if (null != s)
          try {
            var u;
            let n = a
                ? void 0
                : await ((u = s),
                  new Promise((e, t) => {
                    let n = new Image();
                    (n.crossOrigin = "anonymous"),
                      (n.onload = () => {
                        let t = document.createElement("canvas");
                        (t.width = g.BACKGROUND_REPLACEMENT_SIZE.width),
                          (t.height = g.BACKGROUND_REPLACEMENT_SIZE.height);
                        let s = t.getContext("2d");
                        i()(null != s, "Canvas context is missing");
                        let r = n.height / n.width,
                          a = g.BACKGROUND_REPLACEMENT_SIZE.height,
                          o = g.BACKGROUND_REPLACEMENT_SIZE.height / r,
                          u = (t.width - o) / 2,
                          d = (t.height - a) / 2;
                        s.drawImage(n, u, d, o, a);
                        let l = s.getImageData(0, 0, t.width, t.height);
                        e({
                          data: l.data,
                          width: l.width,
                          height: l.height,
                          pixelFormat: "rgba",
                        });
                      }),
                      (n.onerror = e => t(e)),
                      (n.src = u);
                  })),
              o = a ? await h(s) : void 0;
            E(e, t, r.FilterSettingsGraph.BACKGROUND_REPLACEMENT, n, o);
          } catch (e) {
            (0, d.errorApplyingMediaFilterSettings)();
          }
      }
      async function v(e, t) {
        let { track: n = !0, location: s } = t;
        await p(
          r.FilterSettingsKey.CAMERA_BACKGROUND_LIVE,
          { type: r.FilterTargetType.INPUT_DEVICE },
          e
        ),
          n && (0, f.trackBackgroundOptionUpdated)(e, s, "Enabled");
      }
      async function y(e, t, n) {
        let { track: s = !0, location: i } = n;
        (0, d.startApplyMediaFilterSettings)(),
          await p(
            r.FilterSettingsKey.CAMERA_BACKGROUND_PREVIEW,
            { type: r.FilterTargetType.STREAM, streamId: t },
            e
          ),
          s && (0, f.trackBackgroundOptionUpdated)(e, i, "Preview");
      }
      function I() {
        let e = a.default.getCurrentUser();
        if (null == e) return;
        let t = (0, u.getLastUsedVideoBackgroundOption)(e);
        (0, c.default)() &&
          !l.default.hasBeenApplied &&
          null != t &&
          v(t, { track: !1 }).catch(m.NOOP);
      }
    },
    154565: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return g;
          },
        });
      var s = n("442802"),
        i = n("997419"),
        r = n("30175"),
        a = n("671231"),
        o = n("647248"),
        u = n("912855"),
        d = n("320236"),
        l = n("502058"),
        f = n("794951"),
        _ = n("655142"),
        c = n("166453"),
        g = () => ({
          [s.DefaultVideoBackground.OPTION_1]: {
            id: s.DefaultVideoBackground.OPTION_1,
            source: u,
            name: r.default.Messages.VIDEO_BACKGROUND_DEFAULT_BACKGROUND_NAME_1,
          },
          [s.DefaultVideoBackground.OPTION_2]: {
            id: s.DefaultVideoBackground.OPTION_2,
            source: l,
            name: r.default.Messages.VIDEO_BACKGROUND_DEFAULT_BACKGROUND_NAME_2,
          },
          [s.DefaultVideoBackground.OPTION_3]: {
            id: s.DefaultVideoBackground.OPTION_3,
            source: f,
            name: r.default.Messages.VIDEO_BACKGROUND_DEFAULT_BACKGROUND_NAME_3,
          },
          [s.DefaultVideoBackground.OPTION_4]: {
            id: s.DefaultVideoBackground.OPTION_4,
            source: _,
            name: r.default.Messages.VIDEO_BACKGROUND_DEFAULT_BACKGROUND_NAME_4,
          },
          [s.DefaultVideoBackground.OPTION_7]: {
            id: s.DefaultVideoBackground.OPTION_7,
            source: a,
            name: r.default.Messages.VIDEO_BACKGROUND_DEFAULT_BACKGROUND_NAME_7,
            isVideo: !0,
            hotspotLocation:
              i.HotspotLocations.ANIMATED_VIDEO_BG_CAPERNITE_DAY_NEW,
          },
          [s.DefaultVideoBackground.OPTION_8]: {
            id: s.DefaultVideoBackground.OPTION_8,
            source: o,
            name: r.default.Messages.VIDEO_BACKGROUND_DEFAULT_BACKGROUND_NAME_8,
            isVideo: !0,
            hotspotLocation:
              i.HotspotLocations.ANIMATED_VIDEO_BG_CAPERNITE_NIGHT_NEW,
          },
          [s.DefaultVideoBackground.OPTION_9]: {
            id: s.DefaultVideoBackground.OPTION_9,
            source: d,
            name: r.default.Messages.VIDEO_BACKGROUND_DEFAULT_BACKGROUND_NAME_9,
            isVideo: !0,
            hotspotLocation:
              i.HotspotLocations.ANIMATED_VIDEO_BG_HACKER_DEN_NEW,
          },
          [s.DefaultVideoBackground.OPTION_10]: {
            id: s.DefaultVideoBackground.OPTION_10,
            source: c,
            name: r.default.Messages
              .VIDEO_BACKGROUND_DEFAULT_BACKGROUND_NAME_10,
            isVideo: !0,
            hotspotLocation: i.HotspotLocations.ANIMATED_VIDEO_BG_WUMPICE_NEW,
          },
        });
    },
    42715: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("386130"),
        i = n("389570");
      function r() {
        var e;
        let t =
          arguments.length > 0 && void 0 !== arguments[0]
            ? arguments[0]
            : s.default;
        return (
          (e = t).supports(i.Features.MEDIAPIPE) &&
          Object.values(e.getVideoDevices()).length > 0
        );
      }
    },
    273647: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return m;
          },
        });
      var s = n("312916"),
        i = n("244180"),
        r = n("601915"),
        a = n("336937"),
        o = n("516997"),
        u = n("731865"),
        d = n("386130"),
        l = n("407807"),
        f = n("232733"),
        _ = n("871831");
      let c = (e, t) => ({
          channel_id: e.id,
          channel_type: e.type,
          guild_id: e.getGuildId(),
          rtc_connection_id: l.default.getRTCConnectionId(),
          duration: l.default.getDuration(),
          media_session_id: l.default.getMediaSessionId(),
          ...(0, i.getVoiceStateMetadata)(
            l.default.getGuildId(),
            l.default.getChannelId(),
            t
          ),
        }),
        g = () => {
          let e = (0, r.getLastUsedVideoBackgroundOption)(
            _.default.getCurrentUser()
          );
          return {
            video_device_name:
              d.default.getVideoDevices()[d.default.getVideoDeviceId()]?.name,
            video_hardware_scaling_enabled: d.default.getHardwareH264(),
            video_effect_type: (0, o.getEffectAnalyticsType)(e),
            video_effect_detail: (0, o.getEffectDetailAnalyticsName)(e),
          };
        };
      function m(e, t, n, i) {
        let r = f.default.getVoiceChannelId(),
          o = u.default.getChannel(r);
        if (null == t && null != r && null != o) {
          let t = c(o, i);
          if ((e(), a.default.hasUsedBackgroundInCall)) {
            let e = { ...t, ...g() };
            s.default.dispatch({
              type: "VIDEO_BACKGROUND_SHOW_FEEDBACK",
              analyticsData: e,
            });
          } else
            s.default.dispatch({
              type: "VOICE_CHANNEL_SHOW_FEEDBACK",
              analyticsData: t,
            });
        } else e();
      }
    },
    497683: function (e, t, n) {
      "use strict";
      function s(e) {
        return !1;
      }
      n.r(t),
        n.d(t, {
          isOldVoiceUIEnabled: function () {
            return s;
          },
        });
    },
    182012: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var s = n("885714");
      class i extends s.default {
        constructor(e) {
          super(),
            (this.id = e.id),
            (this.type = e.type),
            (this.name = e.name),
            (this.revoked = e.revoked || !1),
            (this.integrations = e.integrations || []),
            (this.visibility = e.visibility || 0),
            (this.friendSync = e.friend_sync || !1),
            (this.showActivity = e.show_activity || !1),
            (this.verified = e.verified || !1),
            (this.accessToken = e.access_token || null),
            (this.twoWayLink = e.two_way_link || !1),
            (this.metadata = e.metadata || null),
            (this.metadataVisibility = e.metadata_visibility || 0);
        }
        toString() {
          return this.name;
        }
      }
    },
    319030: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("885714");
      class i extends s.default {
        static createFromServer(e, t) {
          return new i({
            id: e.id,
            subscriptionId: e.subscription_id,
            premiumGuildSubscription:
              null != e.premium_guild_subscription
                ? {
                    id: e.premium_guild_subscription.id,
                    guildId: e.premium_guild_subscription.guild_id,
                  }
                : null,
            canceled: e.canceled,
            cooldownEndsAt: e.cooldown_ends_at,
            subscription: t,
          });
        }
        isOnCooldown() {
          return (
            null != this.cooldownEndsAt &&
            new Date(this.cooldownEndsAt).getTime() >= Date.now()
          );
        }
        isAvailable() {
          return null == this.premiumGuildSubscription && !this.isOnCooldown();
        }
        constructor(e) {
          super(),
            (this.id = e.id),
            (this.subscriptionId = e.subscriptionId),
            (this.premiumGuildSubscription = e.premiumGuildSubscription),
            (this.canceled = e.canceled),
            (this.cooldownEndsAt = e.cooldownEndsAt),
            (this.subscription = e.subscription);
        }
      }
      var r = i;
    },
    625945: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("885714"),
        i = n("535291");
      class r extends s.default {
        static createFromServer(e) {
          return new r({ ...e, user: new i.default(e.user) });
        }
        constructor(e) {
          super(),
            (this.id = e.id),
            (this.name = e.name),
            (this.type = e.type),
            (this.user = e.user),
            (this.displayName = e.name_localized ?? e.name);
        }
      }
    },
    621893: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        }),
        n("789020");
      var s = n("913527"),
        i = n.n(s),
        r = n("885714");
      class a extends r.default {
        constructor(e) {
          super(),
            (this.code = e.code || ""),
            (this.temporary = e.temporary || !1),
            (this.revoked = e.revoked || !1),
            (this.uses = e.uses || 0),
            (this.maxUses = e.maxUses || 0),
            (this.maxAge = e.maxAge || 0),
            (this.createdAt = e.createdAt || new Date()),
            (this.channel = e.channel),
            (this.guild = e.guild),
            (this.inviter = e.inviter || null),
            (this.targetType = e.targetType || null),
            (this.targetUser = e.targetUser || null),
            (this.targetApplication = e.targetApplication || null),
            (this.type = e.type || null),
            (this.flags = e.flags || 0);
        }
        static createFromServer(e) {
          return new a({
            ...e,
            maxUses: e.max_uses,
            maxAge: e.max_age,
            createdAt: i()(e.created_at ?? void 0),
            targetType: e.target_type,
            targetUser: e.target_user,
            targetApplication: e.target_application,
          });
        }
        isExpired() {
          let e = this.maxAge;
          return (
            !!(
              e > 0 &&
              i()(this.createdAt).add(e, "seconds").isBefore(Date.now())
            ) || !1
          );
        }
        getExpiresAt() {
          return this.maxAge > 0
            ? i()(this.createdAt).add(this.maxAge, "seconds").toDate()
            : 1 / 0;
        }
        toString() {
          return this.code;
        }
      }
    },
    980677: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var s = n("885714");
      class i extends s.default {
        constructor(e) {
          super(), (this.id = e.id || ""), (this.widgets = e.widgets || []);
        }
      }
    },
    403850: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        }),
        n("789020"),
        n("653041");
      var s = n("885714"),
        i = n("62577"),
        r = n("187925"),
        a = n("894302"),
        o = n("984362"),
        u = n("501769"),
        d = n("467006");
      class l extends s.default {
        constructor(e) {
          super(),
            (this.id = e.id),
            (this.type = e.type || d.MessageTypes.DEFAULT),
            (this.channel_id = e.channel_id),
            (this.author = e.author),
            (this.content = e.content || ""),
            (this.customRenderedContent = e.customRenderedContent),
            (this.attachments = e.attachments || []),
            (this.embeds = e.embeds || []),
            (this.mentions = e.mentions || []),
            (this.mentionRoles = e.mentionRoles || []),
            (this.mentionChannels = e.mentionChannels || []),
            (this.mentioned = e.mentioned || !1),
            (this.pinned = e.pinned || !1),
            (this.mentionEveryone = e.mentionEveryone || !1),
            (this.tts = e.tts || !1),
            (this.codedLinks = e.codedLinks || []),
            (this.giftCodes = e.giftCodes || []),
            (this.timestamp = e.timestamp || new Date()),
            (this.editedTimestamp = e.editedTimestamp || null),
            (this.state = e.state || d.MessageStates.SENT),
            (this.nonce = e.nonce || null),
            (this.blocked = e.blocked || !1),
            (this.call = e.call || null),
            (this.bot = e.bot || !1),
            (this.webhookId = e.webhookId || null),
            (this.reactions = e.reactions || []),
            (this.applicationId = e.application_id || e.applicationId || null),
            (this.application = e.application || null),
            (this.activity = e.activity || null),
            (this.activityInstance =
              e.activity_instance || e.activityInstance || null),
            (this.messageReference = e.messageReference || null),
            (this.flags = e.flags || 0),
            (this.isSearchHit = e.hit || e.isSearchHit || !1),
            (this.stickers = e.stickers || []),
            (this.stickerItems = e.sticker_items ?? e.stickerItems ?? []),
            (this.components = e.components),
            (this.loggingName = e.loggingName || null),
            (this.colorString = e.colorString),
            (this.nick = e.nick),
            (this.interaction = e.interaction || null),
            (this.interactionData = e.interactionData || null),
            (this.interactionMetadata = e.interactionMetadata || null),
            (this.interactionError = e.interactionError || null),
            (this.roleSubscriptionData = e.roleSubscriptionData),
            (this.purchaseNotification = e.purchaseNotification),
            (this.poll = e.poll),
            (this.referralTrialOfferId = e.referralTrialOfferId || null),
            (this.giftInfo = e.gift_info ?? e.giftInfo);
        }
        isEdited() {
          return null != this.editedTimestamp;
        }
        getChannelId() {
          return this.channel_id;
        }
        getReaction(e) {
          return this.reactions.find(t => (0, a.emojiEquals)(t.emoji, e));
        }
        userHasReactedWithEmoji(e, t) {
          return this.reactions.some(n => {
            if ((0, a.emojiEquals)(n.emoji, e))
              return (t && n.me) || (!t && n.me_burst);
          });
        }
        addReaction(e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
            n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : [],
            s =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : r.ReactionTypes.NORMAL,
            o = -1,
            d = this.reactions.map((d, l) => {
              if ((0, a.emojiEquals)(d.emoji, e)) {
                if (((o = l), s === r.ReactionTypes.BURST)) {
                  if (t && d.me) return d;
                  let e = t && d.me_burst ? d.burst_count : d.burst_count + 1,
                    s =
                      null != d.burst_colors && d.burst_colors.length > 0
                        ? d.burst_colors
                        : n;
                  d = {
                    ...d,
                    me_burst: !!t || d.me_burst,
                    burst_count: e,
                    count_details: { ...d.count_details, burst: e },
                    burst_colors: s,
                    themedBurstColors: (0,
                    i.buildPlatformedThemedEmojiColorPalette)({
                      colors: s,
                      shouldProcessMobileColors: (0, u.isIOS)(),
                    }),
                  };
                } else if (s === r.ReactionTypes.VOTE) {
                  let e = d.count_details?.vote ?? 0,
                    n = t && d.me_vote ? e : e + 1;
                  d = {
                    ...d,
                    count_details: { ...d.count_details, vote: n },
                    me_vote: !!t || d.me_vote,
                  };
                } else {
                  if (t && d.me_burst) return d;
                  let e = t && d.me ? d.count : d.count + 1;
                  d = {
                    ...d,
                    count: e,
                    count_details: { ...d.count_details, normal: e },
                    me: !!t || d.me,
                  };
                }
              }
              return d;
            });
          return (
            -1 === o &&
              (s === r.ReactionTypes.BURST
                ? d.push({
                    emoji: e,
                    me: !1,
                    me_burst: t,
                    count: 0,
                    count_details: { burst: 1, normal: 0 },
                    burst_count: 1,
                    burst_colors: n,
                    themedBurstColors: (0,
                    i.buildPlatformedThemedEmojiColorPalette)({
                      colors: n ?? [],
                      shouldProcessMobileColors: (0, u.isIOS)(),
                    }),
                  })
                : s === r.ReactionTypes.VOTE
                  ? d.push({
                      emoji: e,
                      me: !1,
                      me_burst: !1,
                      me_vote: t,
                      count: 0,
                      count_details: { burst: 0, normal: 0, vote: 1 },
                      burst_count: 0,
                      burst_colors: [],
                    })
                  : d.push({
                      emoji: e,
                      me: t,
                      me_burst: !1,
                      count: 1,
                      count_details: { burst: 0, normal: 1 },
                      burst_count: 0,
                      burst_colors: [],
                    })),
            this.set("reactions", d)
          );
        }
        addReactionBatch(e, t) {
          return e.reduce((e, n) => {
            let { users: s, emoji: i } = n;
            return s.reduce((e, n) => e.addReaction(i, n === t), e);
          }, this);
        }
        removeReaction(e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
            n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : r.ReactionTypes.NORMAL,
            s = -1,
            i = this.reactions.map((i, o) => {
              if ((0, a.emojiEquals)(i.emoji, e)) {
                if (n === r.ReactionTypes.BURST) {
                  let e = t && !i.me_burst ? i.burst_count : i.burst_count - 1;
                  i = {
                    ...i,
                    burst_count: e,
                    me_burst: !t && i.me_burst,
                    count_details: { ...i.count_details, burst: e },
                  };
                } else if (n === r.ReactionTypes.VOTE) {
                  let e = i.count_details?.vote ?? 0,
                    n = t && !i.me_vote ? e : e - 1;
                  i = {
                    ...i,
                    count_details: { ...i.count_details, vote: n },
                    me_vote: !t && i.me_vote,
                  };
                } else {
                  let e = t && !i.me ? i.count : i.count - 1;
                  i = {
                    ...i,
                    count: e,
                    me: !t && i.me,
                    count_details: { ...i.count_details, normal: e },
                  };
                }
                s = o;
              }
              return i;
            }),
            { count: o, burst_count: u, count_details: d } = i[s] ?? {},
            l = d?.normal ?? 0,
            f = d?.burst ?? 0,
            _ = d?.vote ?? 0;
          return (
            -1 !== s &&
              o <= 0 &&
              u <= 0 &&
              l <= 0 &&
              f <= 0 &&
              _ <= 0 &&
              i.splice(s, 1),
            this.set("reactions", i)
          );
        }
        removeReactionsForEmoji(e) {
          return this.set(
            "reactions",
            this.reactions.filter(t => !(0, a.emojiEquals)(t.emoji, e))
          );
        }
        isSystemDM() {
          return this.author.isSystemUser();
        }
        hasFlag(e) {
          return (0, o.hasFlag)(this.flags, e);
        }
        isCommandType() {
          return (
            this.type === d.MessageTypes.CHAT_INPUT_COMMAND ||
            this.type === d.MessageTypes.CONTEXT_MENU_COMMAND
          );
        }
        isPoll() {
          return null != this.poll;
        }
        toJS() {
          return {
            ...this,
            webkhook_id: this.webhookId,
            edited_timestamp: this.editedTimestamp,
            mention_everyone: this.mentionEveryone,
          };
        }
        isFirstMessageInForumPost(e) {
          return this.id === this.channel_id && e.isForumPost();
        }
      }
      var f = l;
    },
    182409: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var s = n("885714");
      class i extends s.default {
        constructor(e) {
          super(),
            (this.id = e.id || ""),
            (this.layoutId = e.layoutId || ""),
            (this.type = e.type),
            (this.anchor = { left: 0, top: 0, ...e.anchor }),
            (this.size = { width: 0, height: 0, ...e.size }),
            (this.pinned = !!e.pinned),
            (this.zIndex = e.zIndex || 0),
            (this.meta = { ...e.meta });
        }
      }
    },
    595407: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        });
      var s = n("661223"),
        i = n("312916"),
        r = n("315308"),
        a = n("389570");
      let o = r.ApplicationStreamPresets.PRESET_VIDEO,
        u = r.ApplicationStreamResolutions.RESOLUTION_720,
        d = r.ApplicationStreamFPS.FPS_30,
        l = !0;
      class f extends s.default.PersistedStore {
        static #e = (this.displayName = "ApplicationStreamingSettingsStore");
        static #t = (this.persistKey = "ApplicationStreamingSettingStore");
        initialize(e) {
          null != e &&
            ((o = e.preset ?? r.ApplicationStreamPresets.PRESET_VIDEO),
            (u = e.resolution),
            (d = e.fps),
            (l = e.soundshareEnabled ?? !0));
        }
        getState() {
          return { preset: o, resolution: u, fps: d, soundshareEnabled: l };
        }
      }
      var _ = new f(i.default, {
        MEDIA_ENGINE_SET_GO_LIVE_SOURCE: function (e) {
          let { settings: t } = e;
          if (t?.context === a.MediaEngineContextTypes.STREAM) {
            if (
              t?.qualityOptions == null ||
              t?.qualityOptions.resolution == null ||
              t?.qualityOptions.frameRate == null
            )
              return !1;
            (u = t.qualityOptions.resolution), (d = t.qualityOptions.frameRate);
          }
        },
        STREAM_UPDATE_SETTINGS: function (e) {
          let {
              preset: t,
              resolution: n,
              frameRate: s,
              soundshareEnabled: i,
            } = e,
            r = !1;
          return (
            null != t && ((o = t), (r = !0)),
            null != n && ((u = n), (r = !0)),
            null != s && ((d = s), (r = !0)),
            null != i && ((l = i), (r = !0)),
            r
          );
        },
      });
    },
    311545: function (e, t, n) {
      "use strict";
      let s, i, r, a;
      n.r(t),
        n.d(t, {
          default: function () {
            return k;
          },
        }),
        n("653041");
      var o = n("661223"),
        u = n("312916"),
        d = n("983325"),
        l = n("224022"),
        f = n("188304"),
        _ = n("188699"),
        c = n("18480"),
        g = n("673396"),
        m = n("262047"),
        h = n("731865"),
        E = n("327271"),
        p = n("386130"),
        v = n("197905"),
        y = n("407807"),
        I = n("232733"),
        T = n("642174"),
        S = n("467006"),
        C = n("833337");
      let A = null,
        N = {},
        D = null;
      function O() {
        (s = new Map()), (i = {}), (r = {}), (a = {}), (N = {});
      }
      O();
      function R(e) {
        s.delete(e);
      }
      function P() {
        let e = [];
        for (let t in i) {
          let n = i[t];
          for (let s in n) e.push(i[t][s]);
        }
        return e;
      }
      function b(e) {
        let { streamKey: t, region: n, viewerIds: i, paused: a } = e;
        s.set(t, {
          ...(0, f.decodeStreamKey)(t),
          state: a
            ? S.ApplicationStreamStates.PAUSED
            : S.ApplicationStreamStates.ACTIVE,
        }),
          (r[t] = { streamKey: t, region: n, viewerIds: i });
      }
      function M(e, t) {
        let n = h.default.getBasicChannel(t);
        return (
          e === C.StreamTypes.CALL ||
          (null != n &&
            v.default.canBasicChannel(S.BasicPermissions.VIEW_CHANNEL, n))
        );
      }
      function V(e) {
        if (M(e.streamType, e.channelId)) return !0;
        let t = h.default.getBasicChannel(e.channelId);
        return (
          null != t &&
          (0, _.canWatchStream)(
            t,
            T.default,
            E.default,
            v.default,
            d.default
          )[0]
        );
      }
      class L extends o.default.Store {
        static #e = (this.displayName = "ApplicationStreamingStore");
        initialize() {
          this.syncWith([v.default], () => !0),
            this.waitFor(l.default, v.default);
        }
        isSelfStreamHidden(e) {
          return N[e] ?? !1;
        }
        getLastActiveStream() {
          return (0, c.default)(p.default)
            ? Array.from(s.values()).pop() ?? null
            : null;
        }
        getAllActiveStreams() {
          return (0, c.default)(p.default) ? Array.from(s.values()) : [];
        }
        getAllActiveStreamsForChannel(e) {
          return (0, c.default)(p.default)
            ? Array.from(s.values()).filter(t => t.channelId === e)
            : [];
        }
        getActiveStreamForStreamKey(e) {
          return (0, c.default)(p.default) ? s.get(e) ?? null : null;
        }
        getActiveStreamForApplicationStream(e) {
          if (!(0, c.default)(p.default) || null == e) return null;
          let t = (0, f.encodeStreamKey)(e);
          return this.getActiveStreamForStreamKey(t) ?? null;
        }
        getCurrentUserActiveStream() {
          let e = I.default.getVoiceChannelId(),
            t = h.default.getChannel(e);
          return null == t
            ? null
            : this.getActiveStreamForUser(m.default.getId(), t.getGuildId());
        }
        getActiveStreamForUser(e, t) {
          let n = this.getStreamForUser(e, t);
          return null != n
            ? this.getActiveStreamForApplicationStream(n)
            : this.getAllActiveStreams().find(t => t.ownerId === e) ?? null;
        }
        getStreamerActiveStreamMetadata() {
          let e = I.default.getVoiceChannelId(),
            t = h.default.getChannel(e);
          if (null == t) return null;
          let n = this.getActiveStreamForUser(
            m.default.getId(),
            t.getGuildId()
          );
          return null == n ? null : a[(0, f.encodeStreamKey)(n)] ?? null;
        }
        getStreamerActiveStreamMetadataForStream(e) {
          return a[e] ?? null;
        }
        getAnyStreamForUser(e) {
          if (!(0, c.default)(p.default)) return null;
          let t = i[e];
          return null == t ? null : Object.values(t).find(e => V(e)) ?? null;
        }
        getStreamForUser(e, t) {
          if (!(0, c.default)(p.default)) return null;
          let n = i[e]?.[t ?? S.NULL_STRING_GUILD_ID];
          return null != n && V(n) ? n : null;
        }
        getRTCStream(e) {
          return (0, c.default)(p.default) ? r[e] ?? null : null;
        }
        getAllApplicationStreams() {
          return (0, c.default)(p.default)
            ? P().filter(e => null != e && M(e.streamType, e.channelId))
            : [];
        }
        getAllApplicationStreamsForChannel(e) {
          return (0, c.default)(p.default)
            ? P().filter(
                t =>
                  null != t && t.channelId === e && M(t.streamType, t.channelId)
              )
            : [];
        }
        getViewerIds(e) {
          if (!(0, c.default)(p.default)) return [];
          let t = null,
            n =
              null != (t = "string" == typeof e ? e : (0, f.encodeStreamKey)(e))
                ? r[t]
                : null;
          return null != n ? n.viewerIds : [];
        }
        getCurrentAppIntent() {
          return D;
        }
        getState() {
          return (0, c.default)(p.default)
            ? {
                activeStreams: Array.from(s.entries()),
                streamsByUserAndGuild: i,
                rtcStreams: r,
                streamerActiveStreamMetadatas: a,
              }
            : {
                activeStreams: [],
                streamsByUserAndGuild: {},
                rtcStreams: {},
                streamerActiveStreamMetadatas: {},
              };
        }
      }
      var k = new L(u.default, {
        OVERLAY_INITIALIZE: function (e) {
          let { applicationStreamState: t } = e;
          (i = t.streamsByUserAndGuild),
            (s = new Map(t.activeStreams)),
            (r = t.rtcStreams),
            (a = t.streamerActiveStreamMetadatas);
        },
        VOICE_STATE_UPDATES: function (e) {
          let { voiceStates: t } = e;
          return t.reduce((e, t) => {
            let {
              userId: n,
              guildId: s,
              channelId: r,
              sessionId: a,
              selfStream: o,
            } = t;
            if (o && null != r) {
              var u;
              return (
                null ==
                  i[
                    (u = {
                      streamType:
                        null != s ? C.StreamTypes.GUILD : C.StreamTypes.CALL,
                      ownerId: n,
                      guildId: s,
                      channelId: r,
                    }).ownerId
                  ] && (i[u.ownerId] = {}),
                (i[u.ownerId][u.guildId ?? S.NULL_STRING_GUILD_ID] = u),
                !0
              );
            }
            {
              let t = m.default.getSessionId();
              return n === m.default.getId() &&
                a !== t &&
                null != y.default.getChannelId()
                ? e
                : (function (e, t) {
                    let n = t ?? S.NULL_STRING_GUILD_ID;
                    return i[e]?.[n] != null && (delete i[e][n], !0);
                  })(n, s) || e;
            }
          }, !1);
        },
        STREAM_WATCH: function (e) {
          let { streamKey: t } = e,
            n = (0, f.decodeStreamKey)(t);
          s.delete(t),
            s.set(t, { ...n, state: S.ApplicationStreamStates.CONNECTING }),
            n.ownerId === m.default.getId() && (N[n.channelId] = !1);
        },
        STREAM_START: function (e) {
          let {
              streamType: t,
              guildId: n,
              channelId: i,
              pid: r,
              sourceName: o,
              sourceId: u,
            } = e,
            d = (0, f.encodeStreamKey)({
              streamType: t,
              guildId: n,
              channelId: i,
              ownerId: m.default.getId(),
            }),
            _ =
              (null != r
                ? l.default.getGameForPID(r)
                : null != u
                  ? l.default
                      .getRunningGames()
                      .find(e => (0, g.default)(u, e.windowHandle))
                  : null) ?? null;
          (a[d] = { id: _?.id, pid: r, sourceName: o }),
            s.delete(d),
            s.set(d, {
              streamType: t,
              guildId: n,
              channelId: i,
              ownerId: m.default.getId(),
              state: S.ApplicationStreamStates.CONNECTING,
            });
        },
        STREAM_STOP: function (e) {
          let { streamKey: t } = e;
          a[t] = null;
        },
        STREAM_CREATE: b,
        STREAM_UPDATE: b,
        STREAM_TIMED_OUT: function (e) {
          let { streamKey: t } = e,
            n = s.get(t);
          if (null == n) return !1;
          s.set(t, { ...n, state: S.ApplicationStreamStates.FAILED });
        },
        STREAM_DELETE: function (e) {
          let { streamKey: t, unavailable: i, reason: a } = e;
          delete r[t];
          let o = s.get(t);
          if (null == o) return !1;
          let u = S.ApplicationStreamStates.ENDED;
          if (i) u = S.ApplicationStreamStates.RECONNECTING;
          else if (a === S.ApplicationStreamDeleteReasons.UNAUTHORIZED)
            u = S.ApplicationStreamStates.FAILED;
          else if (
            a === S.ApplicationStreamDeleteReasons.SAFETY_GUILD_RATE_LIMITED
          ) {
            let { guildId: e } = (0, f.decodeStreamKey)(t);
            n
              .el("311545@7035:7110")
              .then(n.bind(n, "645311"))
              .then(t => {
                let { default: n } = t;
                n(e);
              }),
              (u = S.ApplicationStreamStates.ENDED);
          }
          s.set(t, { ...o, state: u }),
            u === S.ApplicationStreamStates.ENDED && A !== t && R(t);
        },
        STREAM_CLOSE: function (e) {
          let { streamKey: t } = e;
          R(t);
        },
        STREAM_UPDATE_SELF_HIDDEN: function (e) {
          let { channelId: t, selfStreamHidden: n } = e;
          (0, f.isStreamKey)(A) &&
            A?.includes(m.default.getId()) &&
            !1 === N[t] &&
            !0 === n &&
            (A = null),
            (N[t] = n);
        },
        SET_STREAM_APP_INTENT: function (e) {
          let { intent: t } = e;
          D = t;
        },
        RTC_CONNECTION_STATE: function (e) {
          let { streamKey: t, state: n } = e;
          if (null == t) return !1;
          let i = s.get(t);
          if (null == i || i.state === S.ApplicationStreamStates.ENDED)
            return !1;
          let r = i.state;
          switch (n) {
            case S.RTCConnectionStates.DISCONNECTED:
              r = S.ApplicationStreamStates.RECONNECTING;
              break;
            case S.RTCConnectionStates.RTC_CONNECTED:
              r = S.ApplicationStreamStates.ACTIVE;
          }
          if (r === i.state) return !1;
          s.set(t, { ...i, state: r });
        },
        CHANNEL_RTC_SELECT_PARTICIPANT: function (e) {
          let { id: t, channelId: n } = e;
          if (
            ((A = t),
            Array.from(s.values()).forEach(e => {
              (0, f.encodeStreamKey)(e) !== A &&
                e.state === S.ApplicationStreamStates.ENDED &&
                R((0, f.encodeStreamKey)(e));
            }),
            null != t)
          )
            (0, f.isStreamKey)(t) &&
              t.includes(m.default.getId()) &&
              (N[n] = !1);
        },
        CONNECTION_OPEN: O,
        CONNECTION_CLOSED: O,
        LOGOUT: O,
      });
    },
    249877: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        });
      var s = n("392711"),
        i = n.n(s),
        r = n("661223"),
        a = n("454836"),
        o = n("312916"),
        u = n("731865"),
        d = n("232733"),
        l = n("632706"),
        f = n("467006");
      let _ = {},
        c = {};
      function g() {
        let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
          t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : d.default.getChannelId(),
          n = u.default.getChannel(t);
        return (
          null != n &&
          null == n.getGuildId() &&
          null != t &&
          (null == _[t] || !!e) &&
          ((_[t] = _[t] ?? { channelId: t, ringing: [] }),
          o.default.dispatch({ type: "CALL_CONNECT", channelId: t }),
          !0)
        );
      }
      class m extends r.default.Store {
        static #e = (this.displayName = "CallStore");
        initialize() {
          this.waitFor(l.default, d.default);
        }
        getCall(e) {
          return _[e];
        }
        getCalls() {
          return Object.values(_);
        }
        getMessageId(e) {
          let t = this.getCall(e);
          return null != t ? t.messageId : null;
        }
        isCallActive(e, t) {
          let n = _[e];
          return (
            null != n &&
            !n.unavailable &&
            (null != t ? n.messageId === t : null != n.region)
          );
        }
        isCallUnavailable(e) {
          let t = _[e];
          return null != t && t.unavailable;
        }
        getInternalState() {
          return { calls: _, enqueuedRings: c };
        }
      }
      var h = new m(o.default, {
        CONNECTION_OPEN: function () {
          return g(!0);
        },
        CONNECTION_CLOSED: function () {
          (_ = {}), (c = {});
        },
        OVERLAY_INITIALIZE: function (e) {
          let { callStoreInternalState: t } = e;
          (_ = { ...t.calls }), (c = { ...t.enqueuedRings });
        },
        CONNECTION_RESUMED: function () {
          return g(!0);
        },
        CHANNEL_SELECT: function (e) {
          let { channelId: t } = e;
          return g(!1, t);
        },
        CHANNEL_DELETE: function (e) {
          let { channel: t } = e;
          if ((null != c[t.id] && delete c[t.id], null == _[t.id])) return !1;
          delete _[t.id];
        },
        CALL_CREATE: function (e) {
          let { channelId: t, messageId: n, region: s, ringing: i } = e;
          if (
            ((_[t] = {
              channelId: t,
              messageId: n,
              region: s,
              ringing: i,
              unavailable: !1,
              regionUpdated: !1,
            }),
            null != c[t])
          ) {
            let e = c[t];
            delete c[t],
              1 !== e.indexOf("all") && (e = null),
              a.default.post({
                url: f.Endpoints.CALL_RING(t),
                body: { recipients: e },
                oldFormErrors: !0,
              });
          }
        },
        CALL_UPDATE: function (e) {
          let { channelId: t, messageId: n, region: s, ringing: i } = e,
            r = _[t],
            a = null != r && (r.regionUpdated || r.region !== s);
          _[t] = {
            ..._[t],
            messageId: n,
            region: s,
            ringing: i,
            regionUpdated: a,
          };
        },
        CALL_DELETE: function (e) {
          let { channelId: t, unavailable: n } = e,
            s = _[t];
          !0 === n && null != s
            ? (_[t] = { ...s, unavailable: n })
            : (_[t] = {
                channelId: t,
                ringing: [],
                messageId: null,
                region: null,
                regionUpdated: !1,
                unavailable: n,
              }),
            null != c[t] && delete c[t];
        },
        CALL_ENQUEUE_RING: function (e) {
          let { channelId: t, recipients: n } = e;
          c[t] = i().union(c[t] ?? [], n ?? ["all"]);
        },
        VOICE_CHANNEL_SELECT: function (e) {
          let { channelId: t } = e;
          null == t && (c = {});
        },
      });
    },
    475232: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          MESSAGE_REQUESTS_BASE_CHANNEL_ID: function () {
            return p;
          },
          default: function () {
            return b;
          },
          isViewChannelSidebar: function () {
            return N;
          },
        });
      var s = n("996855"),
        i = n("661223"),
        r = n("312916"),
        a = n("605369"),
        o = n("845649"),
        u = n("84819"),
        d = n("731865"),
        l = n("197905"),
        f = n("995441"),
        _ = n("232733"),
        c = n("632706"),
        g = n("871831"),
        m = n("467006"),
        h = n("551835"),
        E = n("477815");
      let p = "message_requests",
        v = !1,
        y = !1,
        I = !0,
        T = !1,
        S = {},
        C = {};
      function A(e) {
        if (null == e) return null;
        if ((0, h.isStaticChannelRoute)(e)) {
          let t = c.default.getGuildId();
          return null == t ? null : (0, h.buildGuildStaticChannelId)(e, t);
        }
        return e;
      }
      function N(e) {
        return [
          a.SidebarType.VIEW_CHANNEL,
          a.SidebarType.VIEW_THREAD,
          a.SidebarType.VIEW_MESSAGE_REQUEST,
        ].includes(e.type);
      }
      function D(e) {
        let t = !1;
        T && ((T = !1), (t = !0));
        let n = A(_.default.getChannelId());
        return null != n && n in S && (delete S[n], (t = !0)), t && e ? e : !e;
      }
      function O() {
        let e = !1;
        for (let t in S) {
          let n = S[t];
          if (
            n.type === a.SidebarType.VIEW_THREAD ||
            n.type === a.SidebarType.VIEW_CHANNEL
          ) {
            let s = d.default.getChannel(n.channelId);
            (null == s || !l.default.can(E.Permissions.VIEW_CHANNEL, s)) &&
              (delete S[t], (e = !0));
          }
        }
        return e;
      }
      function R() {
        if (T === f.default.isActive()) return !1;
        T = f.default.isActive();
      }
      class P extends i.default.PersistedStore {
        static #e = (this.displayName = "ChannelSectionStore");
        static #t = (this.persistKey = "ChannelSectionStore2");
        initialize(e) {
          null != e &&
            ((v = e.isMembersOpen ?? !1),
            (y = e.isSummariesOpen ?? !1),
            (I = e.isProfileOpen ?? !0),
            (S = e.sidebars ?? {}),
            (C = e.guildSidebars ?? {})),
            this.syncWith([f.default], R),
            this.syncWith([l.default], O);
        }
        getState() {
          return {
            isMembersOpen: v,
            isSummariesOpen: y,
            isProfileOpen: I,
            sidebars: S,
            guildSidebars: C,
          };
        }
        getSection(e, t) {
          if (T) return m.ChannelSections.SEARCH;
          let n = A(e);
          return null != n && null != S[n]
            ? m.ChannelSections.SIDEBAR_CHAT
            : t && I
              ? m.ChannelSections.PROFILE
              : y
                ? m.ChannelSections.SUMMARIES
                : v
                  ? m.ChannelSections.MEMBERS
                  : m.ChannelSections.NONE;
        }
        getSidebarState(e) {
          let t = A(e);
          return null == t ? void 0 : S[t];
        }
        getGuildSidebarState(e) {
          return null == e ? void 0 : C[e];
        }
        getCurrentSidebarChannelId(e) {
          let t = A(e);
          if (null == t || T) return null;
          let n = S[t];
          return null == n
            ? null
            : n.type === a.SidebarType.VIEW_THREAD ||
                n.type === a.SidebarType.VIEW_CHANNEL
              ? n.channelId
              : null;
        }
        getCurrentSidebarMessageId(e) {
          let t = A(e);
          if (null == t || T) return null;
          let n = S[t];
          return null == n
            ? null
            : n.type === a.SidebarType.VIEW_THREAD ||
                n.type === a.SidebarType.VIEW_CHANNEL
              ? n.details?.initialMessageId
              : null;
        }
      }
      var b = new P(r.default, {
        CHANNEL_TOGGLE_MEMBERS_SECTION: function () {
          y && (y = D(y)), (v = D(v));
        },
        PROFILE_PANEL_TOGGLE_SECTION: function () {
          !I &&
            o.ComponentDispatch.dispatch(
              m.ComponentActions.SEARCH_RESULTS_CLOSE
            ),
            (I = D(I));
        },
        CHANNEL_TOGGLE_SUMMARIES_SECTION: function () {
          v && (v = D(v)), (y = D(y));
        },
        SIDEBAR_VIEW_CHANNEL: function (e) {
          let {
            sidebarType: t,
            baseChannelId: n,
            channelId: s,
            details: i,
          } = e;
          T = !1;
          let r = A(n);
          return (
            null != r && ((S[r] = { type: t, channelId: s, details: i }), !0)
          );
        },
        SIDEBAR_VIEW_GUILD: function (e) {
          let { sidebarType: t, guildId: n, baseChannelId: s, details: i } = e;
          T = !1;
          let r = A(s);
          return (
            null != r &&
            ((C[n] = { type: t, baseChannelId: r, guildId: n, details: i }), !0)
          );
        },
        SIDEBAR_CREATE_THREAD: function (e) {
          let { parentChannelId: t, parentMessageId: n, location: s } = e;
          T = !1;
          let i = A(t);
          null != i &&
            (S[i] = {
              type: a.SidebarType.CREATE_THREAD,
              parentChannelId: t,
              parentMessageId: n,
              location: s,
            });
        },
        SIDEBAR_CLOSE: function (e) {
          let { baseChannelId: t } = e,
            n = A(t);
          null != n && delete S[n];
        },
        SIDEBAR_CLOSE_GUILD: function (e) {
          let { guildId: t } = e;
          return null != C[t] && (delete C[t], !0);
        },
        CHANNEL_DELETE: function (e) {
          let { channel: t } = e;
          if (t.id in S) return delete S[t.id], !0;
          let n = !1;
          for (let e in S) {
            let s = S[e];
            null != s &&
              s.type === a.SidebarType.VIEW_CHANNEL &&
              s.channelId === t.id &&
              (delete S[e], (n = !0));
          }
          return n;
        },
        CHANNEL_SELECT: function () {
          s.isMobile && v && ((v = !1), (y = !1));
        },
        THREAD_CREATE: function (e) {
          let { channel: t } = e;
          if (t.ownerId === g.default.getCurrentUser()?.id) return !1;
          let n = S[t.parent_id];
          null != n &&
            n.type === a.SidebarType.CREATE_THREAD &&
            n.parentMessageId === u.default.castChannelIdAsMessageId(t.id) &&
            (S[t.parent_id] = {
              type: a.SidebarType.VIEW_THREAD,
              channelId: t.id,
            });
        },
        THREAD_DELETE: function (e) {
          let { channel: t } = e,
            n = S[t.parent_id];
          if (
            null == n ||
            n.type !== a.SidebarType.VIEW_THREAD ||
            n.channelId !== t.id
          )
            return !1;
          delete S[t.parent_id];
        },
      });
    },
    53361: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return v;
          },
        });
      var s = n("661223"),
        i = n("312916"),
        r = n("379756"),
        a = n("763301"),
        o = n("182012"),
        u = n("421219"),
        d = n("467006");
      let l = new Set([d.PlatformTypes.CONTACTS]),
        f = !0,
        _ = [],
        c = [],
        g = {},
        m = {},
        h = {},
        E = e => {
          (_ = e.filter(e => !l.has(e.type) && a.default.isSupported(e.type))),
            (c = e.filter(e => l.has(e.type))),
            (f = !1);
        };
      class p extends s.default.Store {
        static #e = (this.displayName = "ConnectedAccountsStore");
        isJoining(e) {
          return g[e] || !1;
        }
        joinErrorMessage(e) {
          return h[e];
        }
        isFetching() {
          return f;
        }
        getAccounts() {
          return _;
        }
        getLocalAccounts() {
          return c;
        }
        getAccount(e, t) {
          return _.find(n => (null == e || n.id === e) && n.type === t);
        }
        getLocalAccount(e) {
          return c.find(t => t.type === e);
        }
        isSuggestedAccountType(e) {
          return m[e] || !1;
        }
      }
      var v = new p(i.default, {
        CONNECTION_OPEN: function (e) {
          E(e.connectedAccounts.map(e => new o.default(e)));
        },
        USER_CONNECTIONS_UPDATE: function (e) {
          e.local && null != e.accounts
            ? E(
                e.accounts.map(
                  e =>
                    new o.default({
                      ...e,
                      integrations: e.integrations.map(e => ({
                        ...e,
                        guild: new u.default(e.guild),
                      })),
                    })
                )
              )
            : r.default.fetch();
        },
        USER_CONNECTIONS_INTEGRATION_JOINING: function (e) {
          g[e.integrationId] = e.joining;
        },
        USER_CONNECTION_UPDATE: function (e) {
          let { platformType: t, id: n, revoked: s, accessToken: i } = e,
            r = _.find(e => e.id === n && e.type === t);
          if (null == r) return !1;
          null != s && (r.revoked = s), null != i && (r.accessToken = i);
        },
        USER_CONNECTIONS_INTEGRATION_JOINING_ERROR: function (e) {
          h[e.integrationId] = void 0 !== e.error ? e.error : "";
        },
      });
    },
    662378: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var s = n("661223"),
        i = n("312916");
      let r = !1,
        a = !1,
        o = {},
        u = null;
      class d extends s.default.Store {
        static #e = (this.displayName = "ConsentStore");
        hasConsented(e) {
          return null != o[e] && o[e].consented;
        }
        get fetchedConsents() {
          return r;
        }
        get receivedConsentsInConnectionOpen() {
          return a;
        }
        getAuthenticationConsentRequired() {
          return u;
        }
      }
      var l = new d(i.default, {
        CONNECTION_OPEN: function (e) {
          let { consents: t } = e;
          null != t && ((o = { ...o, ...t }), (a = !0));
        },
        UPDATE_CONSENTS: function (e) {
          let { consents: t } = e;
          (o = { ...t }), (r = !0);
        },
        SET_CONSENT_REQUIRED: function (e) {
          u = e.consentRequired;
        },
        LOGOUT: function () {
          u = null;
        },
      });
    },
    500709: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        });
      var s = n("661223"),
        i = n("331900"),
        r = n("312916");
      let a = {},
        o = {},
        u = { scrollTop: 0 };
      function d(e) {
        return { guildId: e, scrollTop: null, scrollTo: null };
      }
      function l(e) {
        if (null != a[e]) {
          let { scrollTop: t, scrollHeight: n, offsetHeight: s } = a[e];
          return t === n - s;
        }
        return !0;
      }
      class f extends s.default.Store {
        static #e = (this.displayName = "DimensionStore");
        percentageScrolled(e) {
          if (null != a[e]) {
            let { scrollTop: t, scrollHeight: n } = a[e];
            return t / n;
          }
          return 1;
        }
        getChannelDimensions(e) {
          return a[e];
        }
        getGuildDimensions(e) {
          return o[e] ?? d(e);
        }
        getGuildListDimensions() {
          return u;
        }
        isAtBottom(e) {
          return l(e);
        }
      }
      var _ = new f(r.default, {
        UPDATE_CHANNEL_DIMENSIONS: function (e) {
          let {
              channelId: t,
              scrollTop: n,
              scrollHeight: s,
              offsetHeight: r,
            } = e,
            o = a[t];
          if (null == n || null == s || null == r) {
            if (null == o) return !1;
            delete a[t];
          } else {
            let e = {
              channelId: t,
              scrollTop: n,
              scrollHeight: s,
              offsetHeight: r,
            };
            if (null != o && (0, i.default)(o, e)) return !1;
            a[t] = e;
          }
        },
        UPDATE_CHANNEL_LIST_DIMENSIONS: function (e) {
          let { guildId: t, scrollTop: n, scrollTo: s } = e;
          null == o[t] && (o[t] = d(t)), void 0 !== n && (o[t].scrollTop = n);
          let i = !1;
          return (
            void 0 !== s && ((i = o[t].scrollTo !== s), (o[t].scrollTo = s)),
            null != s || i
          );
        },
        UPDATE_GUILD_LIST_DIMENSIONS: function (e) {
          let { scrollTop: t } = e;
          u.scrollTop = t;
        },
        CALL_CREATE: function (e) {
          let { channelId: t } = e;
          l(t) && delete a[t];
        },
      });
    },
    911388: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          DraftType: function () {
            return i;
          },
          default: function () {
            return T;
          },
        });
      var s,
        i,
        r = n("392711"),
        a = n.n(r),
        o = n("661223"),
        u = n("312916"),
        d = n("370275"),
        l = n("84819"),
        f = n("262047"),
        _ = n("731865"),
        c = n("917175");
      let g = n("467006").MAX_MESSAGE_LENGTH_PREMIUM + 500;
      ((s = i || (i = {}))[(s.ChannelMessage = 0)] = "ChannelMessage"),
        (s[(s.ThreadSettings = 1)] = "ThreadSettings"),
        (s[(s.FirstThreadMessage = 2)] = "FirstThreadMessage"),
        (s[(s.ApplicationLauncherCommand = 3)] = "ApplicationLauncherCommand"),
        (s[(s.Poll = 4)] = "Poll"),
        (s[(s.SlashCommand = 5)] = "SlashCommand");
      let m = {};
      function h(e) {
        let t = m[e];
        return null == t && (t = m[e] = {}), t;
      }
      function E(e) {
        let { type: t, channelId: n, draft: s, draftType: i } = e,
          r = _.default.getChannel(n);
        s === r?.template && (s = "");
        let a = f.default.getId();
        if (null != a && null != s && "" !== s) {
          var o;
          let e = h(a),
            t = e[n];
          if (
            (null == t && (t = e[n] = {}),
            (o = s).length > g && (o = o.substr(0, g)),
            (s = o) === t[i]?.draft)
          )
            return !1;
          t[i] = { timestamp: Date.now(), draft: s };
        } else p(n, i);
        return "DRAFT_SAVE" === t;
      }
      function p(e, t) {
        let n =
          arguments.length > 2 && void 0 !== arguments[2]
            ? arguments[2]
            : f.default.getId();
        if (null == n) return !1;
        let s = h(n),
          i = s[e];
        if (null == i) return !1;
        delete i[t], a().isEmpty(i) && delete s[e];
      }
      function v() {
        let e = f.default.getId();
        if (null == e || c.default.totalUnavailableGuilds > 0) return;
        let t = h(e);
        for (let e in t) null == _.default.getChannel(e) && delete t[e];
      }
      function y(e) {
        let {
            channel: { id: t },
          } = e,
          n = f.default.getId();
        if (null == n) return !1;
        let s = h(n);
        return delete s[t], !1;
      }
      class I extends o.default.PersistedStore {
        static #e = (this.displayName = "DraftStore");
        static #t = (this.persistKey = "DraftStore");
        static #n = (this.migrations = [
          e => {
            if (null == e) return {};
            for (let t in e) "timestamp" in e[t] && (e[t] = { 0: e[t] });
            return e;
          },
          e => {
            let t = f.default.getId();
            if (null == e || null == t) return {};
            let n = {},
              s = (n[t] = {});
            for (let t in e) s[t] = e[t];
            return n;
          },
        ]);
        initialize(e) {
          (m = e ?? {}),
            !(function () {
              for (let [e, t] of l.default.entries(m))
                for (let [n, s] of l.default.entries(t)) {
                  let t = s[0];
                  null != t &&
                    ("" === t.draft || "" === t.draft.trim()) &&
                    p(n, 0, e);
                }
            })(),
            this.waitFor(f.default, _.default, c.default);
        }
        getState() {
          return m;
        }
        getThreadDraftWithParentMessageId(e) {
          let t = f.default.getId();
          if (null == t) return;
          let n = h(t),
            s = l.default.keys(n).find(t => {
              let n = this.getThreadSettings(t);
              return n?.parentMessageId === e;
            });
          return null != s ? this.getThreadSettings(s) : void 0;
        }
        getRecentlyEditedDrafts(e) {
          let t = f.default.getId();
          if (null == t) return [];
          let n = h(t);
          return a()(n)
            .mapValues(t => t?.[e])
            .pickBy(d.isNotNullish)
            .toPairs()
            .map(e => {
              let [t, { timestamp: n, draft: s }] = e;
              return { channelId: t, timestamp: n, draft: s };
            })
            .sortBy(e => {
              let { timestamp: t } = e;
              return -t;
            })
            .value();
        }
        getDraft(e, t) {
          let n = f.default.getId();
          if (null == n) return "";
          let s = h(n)[e];
          if (null != s) {
            let e = s[t];
            if (null != e) return e.draft;
          }
          return "";
        }
        getThreadSettings(e) {
          let t = f.default.getId();
          if (null == t) return null;
          let n = h(t)[e];
          return null == n ? null : n[1];
        }
      }
      var T = new I(u.default, {
        CONNECTION_OPEN: function () {
          let e = f.default.getId();
          return !(e in m) && (m[e] = {}), v(), !1;
        },
        LOGOUT: function (e) {
          !e.isSwitchingAccount && (m = {});
        },
        MULTI_ACCOUNT_REMOVE_ACCOUNT: function (e) {
          e.userId in m && delete m[e.userId];
        },
        GUILD_DELETE: function () {
          return v(), !1;
        },
        CHANNEL_DELETE: y,
        THREAD_DELETE: y,
        THREAD_CREATE: function (e) {
          let { channel: t } = e,
            n = f.default.getId();
          if (null == n || t.ownerId === n) return !1;
          let s = h(n),
            i = s[t.parent_id];
          if (null == i) return !1;
          let r = i[1];
          if (null == r) return !1;
          if (r.parentMessageId !== l.default.castChannelIdAsMessageId(t.id))
            return !1;
          {
            let e = s[t.parent_id];
            if (null == e) return !1;
            let n = e[2]?.draft ?? "";
            "" !== n && (s[t.id] = { 0: { timestamp: Date.now(), draft: n } }),
              p(t.parent_id, 1),
              p(t.parent_id, 2);
          }
        },
        DRAFT_SAVE: E,
        DRAFT_CHANGE: E,
        DRAFT_CLEAR: function (e) {
          let { channelId: t, draftType: n } = e;
          return p(t, n);
        },
        THREAD_SETTINGS_DRAFT_CHANGE: function (e) {
          let { channelId: t, draft: n } = e,
            s = f.default.getId();
          if (null == s) return;
          let i = h(s),
            r = i[t];
          null == r && (r = i[t] = {}),
            (r[1] = {
              timestamp: Date.now(),
              ...r[1],
              ...n,
              parentChannelId: t,
            });
        },
      });
    },
    487488: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var s = n("661223"),
        i = n("312916"),
        r = n("991400");
      let a = new Set();
      class o extends s.default.PersistedStore {
        static #e = (this.displayName = "ExpandedGuildFolderStore");
        static #t = (this.persistKey = "ExpandedGuildFolderStore");
        initialize(e) {
          null != e && (a = new Set(e.expandedFolders)),
            this.waitFor(r.default);
        }
        getState() {
          return { expandedFolders: Array.from(a) };
        }
        getExpandedFolders() {
          return a;
        }
        isFolderExpanded(e) {
          return a.has(e);
        }
      }
      var u = new o(i.default, {
        TOGGLE_GUILD_FOLDER_EXPAND: function (e) {
          let { folderId: t } = e;
          (a = new Set(a)).has(t) ? a.delete(t) : a.add(t);
        },
        SET_GUILD_FOLDER_EXPANDED: function (e) {
          let { folderId: t, expanded: n } = e;
          (a = new Set(a)), n ? a.add(t) : a.has(t) && a.delete(t);
        },
        USER_SETTINGS_PROTO_UPDATE: function () {
          let e = r.default.getGuildFolders();
          if (null == e) return !1;
          let t = !1;
          for (let n of a)
            !e.some(e => e.folderId === n) &&
              ((a = new Set(a)).delete(n), (t = !0));
          return t;
        },
        GUILD_FOLDER_COLLAPSE: function () {
          if (0 === a.size) return !1;
          a = new Set();
        },
      });
    },
    16410: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return R;
          },
        }),
        n("653041");
      var s = n("348327"),
        i = n.n(s),
        r = n("661223"),
        a = n("454836"),
        o = n("312916"),
        u = n("379756"),
        d = n("763301"),
        l = n("799711"),
        f = n("152551"),
        _ = n("53361"),
        c = n("532858"),
        g = n("467006");
      let m = 1 * f.default.Millis.MINUTE,
        h = e => `https://youtube.com/watch?v=${e}`,
        E = 5 * f.default.Millis.MINUTE,
        p = /live_user_(.*)-\{width\}/,
        v = null,
        y = 0,
        I = null,
        T = new Set(),
        S = {};
      function C(e, t, n) {
        return a.default.get({
          url: `https://api.twitch.tv/helix${e}`,
          query: t,
          headers: {
            "Client-ID": "33kozedd0zs6fbauka98psnc7zwom2s",
            Authorization: `Bearer ${n}`,
          },
        });
      }
      async function A(e, t) {
        let n = S[e];
        if (null != n) return n;
        let {
            body: { data: s },
          } = await C("/games", { id: e }, t),
          i = s[0].name;
        return (S[e] = i), i;
      }
      let N = new (class e {
        constructor() {
          this._started = !1;
        }
        start() {
          !this._started &&
            ((this._started = !0),
            _.default.isFetching() ? u.default.fetch() : this._check());
        }
        stop() {
          (this._started = !1),
            (I = null),
            (y = 0),
            null != this._nextCheck && clearTimeout(this._nextCheck),
            o.default.dispatch({ type: "STREAMING_UPDATE", stream: null });
        }
        async _checkTwitch(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : null;
          if (e.revoked || null == (t = t ?? e.accessToken)) return null;
          try {
            var n;
            let {
                body: { data: s },
              } = await C("/streams", { user_id: e.id, first: 1 }, t),
              i = s[0];
            if (null == i || "live" !== i.type) throw Error("no stream");
            let { thumbnail_url: r, game_id: a, title: o } = i,
              u = {
                large_image:
                  null != r
                    ? (0, l.getAssetFromImageURL)(g.PlatformTypes.TWITCH, r) ??
                      void 0
                    : void 0,
              },
              f = await A(a, t),
              _ = d.default.get(g.PlatformTypes.TWITCH);
            let c = ((n = r), p.exec(n)?.[1] ?? e.name);
            return {
              url: _.getPlatformUserUrl?.({ id: e.id, name: c }),
              name: _.name,
              assets: u,
              details: o,
              state: f,
            };
          } catch (n) {
            if (401 === n.status && null == t)
              return u.default
                .refreshAccessToken(e.type, e.id)
                .then(t => this._checkTwitch(e, t))
                .catch(() => null);
            return null;
          }
        }
        async _checkYouTube(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : null;
          if (((I = null), e.revoked || T.has(e.id))) return null;
          try {
            let {
              body: { items: n },
            } = await a.default.get({
              url: "https://www.googleapis.com/youtube/v3/liveBroadcasts",
              query: {
                part: "id,snippet",
                broadcastStatus: "active",
                broadcastType: "all",
              },
              headers: {
                Authorization: `Bearer ${null != t ? t : e.accessToken}`,
              },
              oldFormErrors: !0,
            });
            if (n.length < 1) throw Error("no stream");
            let {
                id: s,
                snippet: { title: i, thumbnails: r },
              } = n[0],
              o = {
                large_image:
                  (0, l.getAssetFromImageURL)(
                    g.PlatformTypes.YOUTUBE,
                    r.high.url
                  ) ?? void 0,
              };
            return (I = {
              url: h(s),
              name: d.default.get(g.PlatformTypes.YOUTUBE).name,
              details: i,
              assets: o,
            });
          } catch (n) {
            if (401 === n.status && null == t)
              return u.default
                .refreshAccessToken(e.type, e.id)
                .then(t => this._checkYouTube(e, t))
                .catch(() => null);
            return 403 === n.status && T.add(e.id), null;
          }
        }
        _check() {
          if (!this._started) return;
          let e = _.default.getAccounts();
          if (null == e) return;
          null != this._nextCheck && clearTimeout(this._nextCheck);
          let t = [g.PlatformTypes.TWITCH],
            n = Date.now();
          y <= n && (t.push(g.PlatformTypes.YOUTUBE), (y = n + E)),
            Promise.allSettled(
              e
                .filter(e => t.includes(e.type))
                .map(e =>
                  e.type === g.PlatformTypes.TWITCH
                    ? this._checkTwitch(e)
                    : this._checkYouTube(e)
                )
            ).then(e => {
              if (this._started) {
                let t = e.find(
                  e => "fulfilled" === e.status && null != e.value
                )?.value;
                null == t && null != I && (t = I),
                  o.default.dispatch({ type: "STREAMING_UPDATE", stream: t });
              }
              this._scheduleCheck();
            });
        }
        _scheduleCheck() {
          this._started &&
            (this._nextCheck = setTimeout(() => this._check(), m));
        }
      })();
      function D() {
        c.default.enabled ? N.start() : N.stop();
      }
      class O extends r.default.Store {
        static #e = (this.displayName = "ExternalStreamingStore");
        initialize() {
          D(), this.waitFor(_.default), this.syncWith([c.default], D);
        }
        getStream() {
          return v;
        }
      }
      var R = new O(o.default, {
        STREAMING_UPDATE: function (e) {
          if (i()(e.stream, v)) return !1;
          v = e.stream ?? null;
        },
        USER_CONNECTIONS_UPDATE: () => N._check(),
      });
    },
    81470: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return p;
          },
        });
      var s = n("392711"),
        i = n.n(s),
        r = n("661223"),
        a = n("312916"),
        o = n("220868"),
        u = n("919759"),
        d = n("731865"),
        l = n("361733");
      let f = new o.default(l.default.isMember, (e, t) => {
        a.default.dispatch({
          type: "GUILD_MEMBERS_REQUEST",
          guildIds: [e],
          userIds: t,
        });
      });
      function _() {
        f.reset();
      }
      function c(e, t) {
        return f.request(e, t), !1;
      }
      function g(e, t) {
        return (
          t.forEach(t => {
            let { author: n, mentions: s } = t;
            null != n && c(e, n.id), s?.forEach(t => c(e, t.id));
          }),
          !1
        );
      }
      function m(e) {
        let { channelId: t, messages: n } = e,
          s = d.default.getChannel(t);
        return null != s && null != s.guild_id && g(s.guild_id, n);
      }
      function h(e) {
        let { guildId: t, messages: n } = e;
        return null != t && g(t, i().flatten(n));
      }
      class E extends r.default.Store {
        static #e = (this.displayName = "GuildMemberRequesterStore");
        initialize() {
          this.waitFor(d.default, l.default);
        }
        requestMember(e, t) {
          c(e, t);
        }
      }
      var p = new E(a.default, {
        CONNECTION_CLOSED: _,
        CONNECTION_OPEN: _,
        CONNECTION_RESUMED: function () {
          return f.requestUnacknowledged(), !1;
        },
        GUILD_MEMBERS_CHUNK: function (e) {
          let { guildId: t, members: n, notFound: s } = e;
          return (
            n.forEach(e => {
              f.acknowledge(t, e.user.id);
            }),
            null != s && s.forEach(e => f.acknowledge(t, e)),
            !1
          );
        },
        SEARCH_FINISH: h,
        MOD_VIEW_SEARCH_FINISH: h,
        LOCAL_MESSAGES_LOADED: m,
        LOAD_MESSAGES_SUCCESS: m,
        LOAD_MESSAGES_AROUND_SUCCESS: m,
        LOAD_PINNED_MESSAGES_SUCCESS: m,
        LOAD_RECENT_MENTIONS_SUCCESS: m,
        GUILD_FEED_FETCH_SUCCESS: function (e) {
          let { guildId: t, data: n } = e;
          return g(t, (0, u.getMessagesFromGuildFeedFetch)(n));
        },
      });
    },
    371728: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var s = n("661223"),
        i = n("986329"),
        r = n("312916");
      let a = "GuildNSFWAgreeStore",
        o = {};
      class u extends s.default.Store {
        static #e = (this.displayName = "GuildNSFWAgreeStore");
        initialize() {
          o = i.default.get(a) ?? o;
        }
        didAgree(e) {
          return null != e && (o[e] || !1);
        }
      }
      var d = new u(r.default, {
        GUILD_NSFW_AGREE: function (e) {
          let { guildId: t } = e;
          (o[t] = !0), i.default.set(a, o);
        },
      });
    },
    795273: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return em;
          },
        }),
        n("789020");
      var s = n("392711"),
        i = n.n(s);
      n("422557"), n("668332");
      var r = n("778916"),
        a = n("786649"),
        o = n("972942"),
        u = n("941237"),
        d = n("775822"),
        l = n("84819"),
        f = n("262047"),
        _ = n("731865"),
        c = n("327271"),
        g = n("197905"),
        m = n("417223"),
        h = n("232733"),
        E = n("12480"),
        p = n("301309"),
        v = n("871831"),
        y = n("467006"),
        I = n("551835"),
        T = n("587361");
      let S = y.NULL_STRING_GUILD_ID,
        C = {},
        A = new Set(),
        N = 0;
      function D(e) {
        let t = C[e ?? S];
        return {
          unread: !1,
          unreadByType: {},
          unreadChannelId: null,
          mentionCount: 0,
          mentionCounts: {},
          ncMentionCount: 0,
          sentinel: t?.sentinel ?? 0,
        };
      }
      function O(e) {
        return (C[e ?? S] = C[e ?? S] ?? D(e));
      }
      function R(e) {
        let t = O(e);
        t.sentinel++, N++;
      }
      function P(e, t, n) {
        return (
          null != e.guild_id &&
          n &&
          !(
            (0, d.isThread)(e.type) ||
            p.default.isChannelRecordOrParentOptedIn(e)
          ) &&
          0 === t
        );
      }
      function b(e) {
        let t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
          n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
        return (
          !(
            null == e ||
            (e.isGuildVocal() && 0 === t) ||
            e.hasFlag(I.ChannelFlags.IS_GUILD_RESOURCE_CHANNEL) ||
            ((0 === t || n) &&
              (e.isThread()
                ? o.default.isMuted(e.id) ||
                  p.default.isGuildOrCategoryOrChannelMuted(
                    e.guild_id,
                    e.parent_id
                  )
                : p.default.isGuildOrCategoryOrChannelMuted(
                    e.guild_id,
                    e.id
                  ))) ||
            (!e.isPrivate() &&
              (P(e, t, (0, r.isOptInEnabledForGuild)(e.guild_id)) ||
                !g.default.can(e.accessPermissions, e)))
          ) &&
          (t > 0 ||
            p.default.resolveUnreadSetting(e) === T.UnreadSetting.ALL_MESSAGES)
        );
      }
      function M(e) {
        switch (e) {
          case S:
          case null:
          case void 0:
            return null;
          default:
            return e;
        }
      }
      function V(e, t) {
        let n = m.default.hasUnread(e, t);
        if (t === T.ReadStateTypes.GUILD_EVENT)
          return (
            !(
              p.default.isMuted(e) || p.default.isMuteScheduledEventsEnabled(e)
            ) && n
          );
        return n;
      }
      function L(e, t) {
        let n = D(e);
        return (
          (n.mentionCounts = { ...t.mentionCounts }),
          (n.unreadByType = { ...t.unreadByType }),
          n
        );
      }
      function k(e) {
        return (e.unread = Object.values(e.unreadByType).some(e => e)), e;
      }
      function w(e, t) {}
      function U(e, t, n) {
        if (
          (k(t),
          (t.mentionCount = i()(t.mentionCounts).values().sum()),
          t.unread !== n.unread || t.mentionCount !== n.mentionCount)
        )
          return (
            (C[e ?? S] = t),
            null != e && (t.unread ? A.add(e) : A.delete(e)),
            N++,
            R(e ?? S),
            !0
          );
        return !1;
      }
      function G(e, t) {
        let n = M(e),
          s = O(n),
          i = L(n, s),
          r = !1;
        if (
          (t.forEach(e => {
            let t = _.default.getChannel(e);
            if (null == t) {
              delete i.mentionCounts[e];
              return;
            }
            if (t.getGuildId() !== n) return;
            let s = m.default.getMentionCount(e);
            null !== n &&
              !r &&
              m.default.hasUnread(t.id) &&
              b(t, s, !0) &&
              ((r = !0), (i.unreadChannelId = t.id)),
              s > 0 && b(t, s)
                ? (i.mentionCounts[t.id] = s)
                : delete i.mentionCounts[t.id];
          }),
          (i.unreadByType[T.ReadStateTypes.CHANNEL] = r),
          i.unreadByType[T.ReadStateTypes.CHANNEL] !==
            s.unreadByType[T.ReadStateTypes.CHANNEL] &&
            !i.unreadByType[T.ReadStateTypes.CHANNEL])
        ) {
          let e = _.default.getChannel(s.unreadChannelId);
          if (
            !(
              null != e &&
              !t.includes(e.id) &&
              m.default.hasUnread(e.id) &&
              b(e)
            )
          )
            return B(n);
          null != n && A.add(n),
            (i.unreadByType[T.ReadStateTypes.CHANNEL] = !0);
        }
        return U(n, i, s);
      }
      function F(e, t) {
        if (null == e) return;
        let n = O(e),
          s = L(e, n);
        return (
          (s.unreadByType[T.ReadStateTypes.GUILD_EVENT] = V(e, t)), U(e, s, n)
        );
      }
      function B(e, t) {
        let n = M(e),
          s = D(n);
        if (null == n) {
          let e = _.default.getMutablePrivateChannels();
          for (let t in e) {
            let n = e[t],
              i = m.default.getMentionCount(t);
            i > 0 &&
              b(n, i) &&
              ((s.mentionCount += i), (s.mentionCounts[n.id] = i));
          }
        } else {
          let e = p.default.isMuted(n);
          if (e && !1 === t) return !1;
          let i = p.default.getMutedChannels(n),
            u = p.default.getChannelOverrides(n),
            l = (0, r.isOptInEnabledForGuild)(n),
            f = _.default.getMutableBasicGuildChannelsForGuild(n);
          for (let t in f) {
            let n = f[t],
              r = e || i.has(t) || (null != n.parent_id && i.has(n.parent_id)),
              a = s.unreadByType[T.ReadStateTypes.CHANNEL],
              { mentionCount: o, unread: _ } =
                m.default.getGuildChannelUnreadState(n, l, u, r, a),
              c = o > 0;
            if (!c && r) continue;
            let h = !a && (!r || c) && _;
            (h || c) &&
              (function (e, t, n) {
                if (
                  ((0, d.isGuildVocalChannelType)(e.type) && 0 === t) ||
                  !g.default.canBasicChannel(
                    (0, d.getBasicAccessPermissions)(e.type),
                    e
                  ) ||
                  P(e, t, n)
                )
                  return !1;
                return (
                  !(
                    "flags" in e &&
                    e.hasFlag(I.ChannelFlags.IS_GUILD_RESOURCE_CHANNEL)
                  ) &&
                  (t > 0 ||
                    p.default.resolveUnreadSetting(e) ===
                      T.UnreadSetting.ALL_MESSAGES)
                );
              })(n, o, l) &&
              (h &&
                ((s.unreadByType[T.ReadStateTypes.CHANNEL] = !0),
                (s.unreadChannelId = t)),
              c && ((s.mentionCount += o), (s.mentionCounts[n.id] = o)));
          }
          let c = a.default.getActiveJoinedThreadsForGuild(n);
          for (let t in c)
            for (let n in c[t]) {
              !s.unreadByType[T.ReadStateTypes.CHANNEL] &&
                m.default.hasUnread(n) &&
                !o.default.isMuted(n) &&
                !e &&
                ((s.unreadByType[T.ReadStateTypes.CHANNEL] = !0),
                (s.unreadChannelId = n));
              let t = m.default.getMentionCount(n);
              t > 0 && ((s.mentionCount += t), (s.mentionCounts[n] = t));
            }
          !s.unreadByType[T.ReadStateTypes.GUILD_EVENT] &&
            V(n, T.ReadStateTypes.GUILD_EVENT) &&
            (s.unreadByType[T.ReadStateTypes.GUILD_EVENT] = !0);
        }
        k(s);
        let i = O(n);
        if (s.unread !== i.unread || s.mentionCount !== i.mentionCount)
          return (
            (C[n ?? S] = s),
            null != n && (s.unread ? A.add(n) : A.delete(n)),
            N++,
            R(n ?? S),
            !0
          );
        return !1;
      }
      function H(e) {
        let { guilds: t } = e;
        (C = {}), (N = 0), (A = new Set()), B(null);
        let { length: n } = t;
        for (let e = 0; e < n; e++) {
          let n = t[e];
          null != n && B(n.id);
        }
      }
      function x(e) {
        let { guilds: t, readState: n } = e;
        (C = {}), (N = 0), (A = new Set());
        let s = n.entries.length < 500,
          i = new Set();
        for (let e of (s &&
          n.entries.forEach(e => {
            null != e.mention_count &&
              e.mention_count > 0 &&
              (null == e.read_state_type ||
              e.read_state_type === T.ReadStateTypes.CHANNEL
                ? i.add(_.default.getChannel(e.id)?.guild_id)
                : i.add(e.id));
          }),
        B(null),
        t))
          B(e.id, s ? i.has(e.id) : void 0);
      }
      function Y() {
        for (let e of ((C = {}),
        (A = new Set()),
        B(null),
        Object.values(c.default.getGuildIds())))
          B(e);
      }
      function j(e) {
        let { guild: t } = e;
        return B(t.id);
      }
      function K(e) {
        let { guild: t } = e;
        return null != C[t.id] && (delete C[t.id], A.delete(t.id), N++, !0);
      }
      function W(e) {
        let {
          channel: { id: t, guild_id: n },
        } = e;
        return G(n, [t]);
      }
      function z() {
        let e = _.default.getChannel(h.default.getChannelId());
        return null != e && G(e.getGuildId(), [e.id]);
      }
      function $(e) {
        let { user: t, guildId: n } = e;
        return t.id === f.default.getId() && B(n);
      }
      function q(e) {
        let { channelId: t } = e,
          n = _.default.getChannel(t);
        return null != n && G(n.getGuildId(), [n.id]);
      }
      function X(e) {
        let { channelId: t } = e,
          n = _.default.getChannel(t);
        if (null == n) return !1;
        if (null != n.guild_id) {
          let e = O(n.guild_id);
          if (
            ((n.isThread()
              ? !o.default.hasJoined(n.id) || o.default.isMuted(n.id)
              : p.default.isGuildOrCategoryOrChannelMuted(n.guild_id, n.id)) ||
              e.unreadByType[T.ReadStateTypes.CHANNEL]) &&
            0 === m.default.getMentionCount(t)
          )
            return !1;
        }
        return G(n.getGuildId(), [n.id]);
      }
      function Q(e) {
        let { channelId: t, guildId: n } = e;
        return n !== y.FAVORITES && null != t && G(n, [t]);
      }
      function Z(e) {
        let { channel: t } = e;
        return G(t.getGuildId(), [t.id]);
      }
      function J(e) {
        let { channels: t } = e;
        return i()(t)
          .groupBy(e => e.getGuildId())
          .reduce(
            (e, t, n) =>
              G(
                n,
                t.map(e => e.id)
              ) || e,
            !1
          );
      }
      function ee(e) {
        let { channels: t } = e;
        return i()(t)
          .map(e => {
            let { channelId: t } = e;
            return t;
          })
          .filter(e => null != _.default.getChannel(e))
          .groupBy(e => _.default.getChannel(e)?.getGuildId())
          .reduce((e, t, n) => G(n, t) || e, !1);
      }
      function et(e) {
        let { channel: t } = e;
        return G(t.getGuildId(), [t.id, t.parent_id]);
      }
      function en(e) {
        let { guildScheduledEvent: t } = e;
        return F(t.guild_id, T.ReadStateTypes.GUILD_EVENT);
      }
      function es(e) {
        let { guildScheduledEvent: t } = e;
        return F(t.guild_id, T.ReadStateTypes.GUILD_EVENT);
      }
      function ei(e) {
        let { id: t, ackType: n } = e;
        return F(t, n);
      }
      function er(e) {
        let { id: t, guildId: n } = e;
        return G(n, [t]);
      }
      function ea(e) {
        return (
          (0, u.doesThreadMembersActionAffectMe)(e) && G(e.guildId, [e.id])
        );
      }
      function eo(e) {
        let { threads: t, guildId: n } = e;
        return G(
          n,
          t.filter(e => o.default.hasJoined(e.id)).map(e => e.id)
        );
      }
      function eu(e) {
        return (
          null != e.channels &&
          G(
            e.guildId,
            e.channels.map(e => e.id)
          )
        );
      }
      function ed(e) {
        let { guildId: t } = e;
        return B(t);
      }
      function el(e) {
        let { guildId: t } = e;
        return B(t);
      }
      function ef(e) {
        let { userGuildSettings: t } = e,
          n = new Set(t.map(e => e.guild_id ?? S));
        return l.default.keys(C).reduce((e, t) => (n.has(t) && B(t)) || e, !1);
      }
      function e_() {
        for (let e in C) C[e].ncMentionCount = 0;
      }
      function ec(e) {
        let { guildId: t } = e;
        return B(t);
      }
      class eg extends E.default {
        static #e = (this.displayName = "GuildReadStateStore");
        static #t = (this.LATEST_SNAPSHOT_VERSION = 1);
        constructor() {
          super({
            CONNECTION_OPEN: x,
            OVERLAY_INITIALIZE: H,
            CACHE_LOADED_LAZY: () => this.loadCache(),
            GUILD_CREATE: j,
            GUILD_DELETE: K,
            MESSAGE_CREATE: X,
            MESSAGE_ACK: q,
            BULK_ACK: ee,
            UPDATE_CHANNEL_DIMENSIONS: q,
            CHANNEL_SELECT: Q,
            CHANNEL_DELETE: W,
            WINDOW_FOCUS: z,
            GUILD_ACK: ed,
            GUILD_ROLE_CREATE: el,
            GUILD_ROLE_DELETE: el,
            GUILD_ROLE_UPDATE: el,
            CHANNEL_CREATE: Z,
            CHANNEL_UPDATES: J,
            THREAD_CREATE: et,
            THREAD_UPDATE: et,
            THREAD_DELETE: et,
            THREAD_LIST_SYNC: eo,
            THREAD_MEMBER_UPDATE: er,
            THREAD_MEMBERS_UPDATE: ea,
            PASSIVE_UPDATE_V1: eu,
            GUILD_MEMBER_UPDATE: $,
            USER_GUILD_SETTINGS_FULL_UPDATE: ef,
            USER_GUILD_SETTINGS_CHANNEL_UPDATE: ec,
            USER_GUILD_SETTINGS_CHANNEL_UPDATE_BULK: ec,
            USER_GUILD_SETTINGS_GUILD_UPDATE: ec,
            USER_GUILD_SETTINGS_GUILD_AND_CHANNELS_UPDATE: ec,
            GUILD_FEATURE_ACK: ei,
            GUILD_SCHEDULED_EVENT_CREATE: en,
            GUILD_SCHEDULED_EVENT_UPDATE: en,
            GUILD_SCHEDULED_EVENT_DELETE: es,
            CHANNEL_RTC_UPDATE_CHAT_OPEN: q,
            LOAD_MESSAGES_SUCCESS: q,
            CHANNEL_ACK: q,
            CHANNEL_LOCAL_ACK: q,
            NOTIFICATION_SETTINGS_UPDATE: Y,
            RECOMPUTE_READ_STATES: Y,
            VOICE_CHANNEL_SELECT: q,
            ENABLE_AUTOMATIC_ACK: q,
            RESORT_THREADS: q,
            NOTIFICATION_CENTER_CLEAR_GUILD_MENTIONS: e_,
            TRY_ACK: q,
          });
        }
        initialize() {
          this.waitFor(
            _.default,
            h.default,
            m.default,
            g.default,
            f.default,
            v.default,
            p.default,
            a.default,
            o.default
          );
        }
        loadCache() {
          let e = this.readSnapshot(eg.LATEST_SNAPSHOT_VERSION);
          null != e && ((C = e.guilds), (A = new Set(e.unreadGuilds)));
        }
        takeSnapshot() {
          return {
            version: eg.LATEST_SNAPSHOT_VERSION,
            data: { guilds: C, unreadGuilds: Array.from(A) },
          };
        }
        hasAnyUnread() {
          return A.size > 0;
        }
        getStoreChangeSentinel() {
          return N;
        }
        getMutableUnreadGuilds() {
          return A;
        }
        getMutableGuildStates() {
          return C;
        }
        hasUnread(e) {
          return A.has(e);
        }
        getMentionCount(e) {
          return O(e).mentionCount;
        }
        getMutableGuildReadState(e) {
          return O(e);
        }
        getGuildHasUnreadIgnoreMuted(e) {
          let t = _.default.getMutableGuildChannelsForGuild(e);
          for (let e in t) {
            let n = t[e];
            if (null != n) {
              if (
                (!n.isGuildVocal() || 0 !== m.default.getMentionCount(e)) &&
                g.default.can(n.accessPermissions, n) &&
                m.default.hasUnread(e)
              )
                return !0;
            }
          }
          let n = a.default.getActiveJoinedThreadsForGuild(e);
          for (let e in n) {
            let t = _.default.getChannel(e);
            if (null != t && b(t)) {
              for (let t in n[e]) if (m.default.hasUnread(t)) return !0;
            }
          }
          return !!m.default.hasUnread(e, T.ReadStateTypes.GUILD_EVENT) || !1;
        }
        getTotalMentionCount(e) {
          let t = 0;
          for (let n in C) {
            let s = C[n];
            (!0 !== e || n !== S) && (t += s.mentionCount);
          }
          return t;
        }
        getTotalNotificationsMentionCount(e) {
          let t = 0;
          for (let n in C) {
            let s = C[n];
            (!0 !== e || n !== S) && (t += s.ncMentionCount);
          }
          return t;
        }
        getPrivateChannelMentionCount() {
          let e = C[S];
          return e?.mentionCount ?? 0;
        }
        getMentionCountForChannels(e, t) {
          let n = 0,
            s = C[e];
          return null == s
            ? 0
            : (t.forEach(e => {
                let t = s.mentionCounts[e];
                n += t ?? 0;
              }),
              n);
        }
        getGuildChangeSentinel(e) {
          return O(e).sentinel;
        }
      }
      var em = new eg();
    },
    200560: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return v;
          },
        }),
        n("789020"),
        n("653041");
      var s = n("661223"),
        i = n("312916"),
        r = n("984362"),
        a = n("84819"),
        o = n("361733"),
        u = n("327271"),
        d = n("871831"),
        l = n("467006"),
        f = n("551748");
      let _ = {
          notClaimed: !1,
          notEmailVerified: !1,
          notPhoneVerified: !1,
          newAccount: !1,
          newMember: !1,
          canChat: !0,
        },
        c = new Set(),
        g = {};
      function m(e) {
        let t;
        h(e), c.add(e);
        let n = u.default.getGuild(e),
          s = d.default.getCurrentUser();
        if (
          null == n ||
          n.verificationLevel === l.VerificationLevels.NONE ||
          null == s ||
          n.isOwner(s) ||
          s.isPhoneVerified()
        )
          return;
        let a = o.default.getMember(n.id, s.id);
        if (null != a) {
          if (
            (0, r.hasFlag)(
              a.flags ?? 0,
              f.GuildMemberFlags.BYPASSES_VERIFICATION
            )
          )
            return;
          let e = new Set();
          for (let t of a.roles) {
            let s = n.getRole(t);
            null != s && !s.managed && e.add(t);
          }
          let t = new Date("2022-12-02 00:00:00"),
            s = null == a.joinedAt || new Date(a.joinedAt) < t;
          if (
            !(
              n.hasFeature(l.GuildFeatures.GUILD_ONBOARDING_EVER_ENABLED) && !s
            ) &&
            e.size > 0
          )
            return;
        }
        let _ =
            +s.createdAt +
            6e4 * l.VerificationCriteria.ACCOUNT_AGE -
            Date.now(),
          m =
            +n.joinedAt + 6e4 * l.VerificationCriteria.MEMBER_AGE - Date.now(),
          E = n.verificationLevel >= l.VerificationLevels.LOW && !s.isClaimed(),
          p = !1,
          v = !1,
          y = !1,
          I = !1;
        !s.isPhoneVerified() &&
          !s.isStaff() &&
          ((p = n.verificationLevel >= l.VerificationLevels.LOW && !s.verified),
          (v = n.verificationLevel >= l.VerificationLevels.VERY_HIGH),
          (y = n.verificationLevel >= l.VerificationLevels.MEDIUM && _ > 0),
          (I = n.verificationLevel >= l.VerificationLevels.HIGH && m > 0));
        let T = [];
        I && T.push(m),
          y && T.push(_),
          T.length > 0 &&
            (t = setTimeout(
              () =>
                i.default.dispatch({
                  type: "GUILD_VERIFICATION_CHECK",
                  guildId: e,
                }),
              Math.max(...T)
            )),
          (g[e] = {
            notClaimed: E,
            notEmailVerified: p,
            notPhoneVerified: v,
            newAccount: y,
            newMember: I,
            canChat: !(E || p || v || y || I),
            accountDeadline: new Date(Date.now() + _),
            memberDeadline: new Date(Date.now() + m),
            timeoutRef: t,
          });
      }
      function h(e) {
        let t = g[e];
        null != t && clearTimeout(t.timeoutRef), delete g[e];
      }
      function E(e) {
        c.delete(e.guild.id), m(e.guild.id);
      }
      class p extends s.default.Store {
        static #e = (this.displayName = "GuildVerificationStore");
        initialize() {
          this.waitFor(u.default, d.default);
        }
        getCheck(e) {
          return !c.has(e) && m(e), g[e] ?? _;
        }
        canChatInGuild(e) {
          return this.getCheck(e).canChat;
        }
      }
      var v = new p(i.default, {
        CONNECTION_OPEN: function () {
          for (let e in (c.clear(), g)) h(e);
        },
        CONNECTION_CLOSED: function () {
          a.default.keys(g).forEach(h);
        },
        CURRENT_USER_UPDATE: function () {
          c.clear();
        },
        GUILD_CREATE: E,
        GUILD_UPDATE: E,
        GUILD_DELETE: function (e) {
          let { guild: t } = e;
          h(t.id);
        },
        GUILD_MEMBER_UPDATE: function (e) {
          let { guildId: t, user: n } = e;
          if (n.id !== d.default.getCurrentUser()?.id) return !1;
          c.delete(t);
        },
        GUILD_VERIFICATION_CHECK: function (e) {
          let { guildId: t } = e;
          m(t);
        },
      });
    },
    551364: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return S;
          },
        });
      var s = n("661223"),
        i = n("312916"),
        r = n("820228"),
        a = n("99588"),
        o = n("362939"),
        u = n("152551"),
        d = n("501769"),
        l = n("262047"),
        f = n("467006"),
        _ = n("389570");
      let c = Date.now(),
        g = !1,
        m = !1,
        h = !1,
        E = !1,
        p = !1;
      function v() {
        return h || E || ((0, d.isAndroid)() && p);
      }
      function y() {
        Date.now() - c > f.IDLE_DURATION || v()
          ? g || i.default.dispatch({ type: "IDLE", idle: !0, idleSince: c })
          : g && i.default.dispatch({ type: "IDLE", idle: !1 }),
          Date.now() - c >
            Math.min(
              o.AfkTimeout.getSetting() * u.default.Millis.SECOND,
              f.IDLE_DURATION
            ) || v()
            ? m || i.default.dispatch({ type: "AFK", afk: !0 })
            : m && i.default.dispatch({ type: "AFK", afk: !1 });
      }
      !__OVERLAY__ &&
        (d.isPlatformEmbedded && a.default?.remotePowerMonitor != null
          ? (!(function e() {
              let t = t => {
                (c = Math.max(Date.now() - t, c)),
                  y(),
                  setTimeout(e, 10 * u.default.Millis.SECOND);
              };
              if (a.default?.remotePowerMonitor?.getSystemIdleTimeMs != null) {
                let e = a.default.remotePowerMonitor.getSystemIdleTimeMs();
                e instanceof Promise ? e.then(t) : t(e);
              }
            })(),
            a.default.remotePowerMonitor.on("resume", () => {
              (h = !1), I({});
            }),
            a.default.remotePowerMonitor.on("suspend", () => {
              (h = !0), I({}), r.default.disconnect();
            }),
            a.default.remotePowerMonitor.on("lock-screen", () => {
              (E = !0), I({});
            }),
            a.default.remotePowerMonitor.on("unlock-screen", () => {
              (E = !1), I({});
            }))
          : setInterval(y, 0.25 * f.IDLE_DURATION));
      function I(e) {
        let { timestamp: t, type: n } = e,
          s = "OVERLAY_SET_NOT_IDLE" === n && null != t;
        return (
          (!s || !(t <= c)) &&
          ((c = s ? t : Date.now()),
          __OVERLAY__
            ? i.default.dispatch({ type: "OVERLAY_SET_NOT_IDLE", timestamp: c })
            : y(),
          !1)
        );
      }
      class T extends s.default.Store {
        static #e = (this.displayName = "IdleStore");
        isIdle() {
          return g;
        }
        isAFK() {
          return m;
        }
        getIdleSince() {
          return g ? c : null;
        }
      }
      var S = new T(i.default, {
        IDLE: function (e) {
          g = e.idle;
        },
        AFK: function (e) {
          m = e.afk;
        },
        SPEAKING: function (e) {
          let { userId: t, speakingFlags: n } = e;
          return (
            n !== _.SpeakingFlags.NONE && t === l.default.getId() && I({}), !1
          );
        },
        APP_STATE_UPDATE: function (e) {
          let { state: t } = e;
          return (p = t === f.AppStates.BACKGROUND), (c = Date.now()), y(), !1;
        },
        OVERLAY_SET_NOT_IDLE: I,
        CHANNEL_SELECT: I,
        VOICE_CHANNEL_SELECT: I,
        WINDOW_FOCUS: I,
        OVERLAY_INITIALIZE: I,
        OVERLAY_SET_INPUT_LOCKED: I,
        USER_SETTINGS_PROTO_UPDATE: I,
      });
    },
    145083: function (e, t, n) {
      "use strict";
      let s;
      n.r(t),
        n.d(t, {
          default: function () {
            return T;
          },
        });
      var i = n("569048"),
        r = n.n(i),
        a = n("167006"),
        o = n.n(a),
        u = n("989872"),
        d = n.n(u),
        l = n("661223"),
        f = n("312916"),
        _ = n("621893"),
        c = n("859699");
      let g = {},
        m = {},
        h = {},
        E = {},
        p = !1,
        v = !1,
        y = !1;
      class I extends l.default.Store {
        static #e = (this.displayName = "InstantInviteStore");
        getInvite(e) {
          let {
            targetType: t,
            targetUserId: n,
            targetApplicationId: s,
          } = arguments.length > 1 && void 0 !== arguments[1]
            ? arguments[1]
            : {};
          return t === c.InviteTargetTypes.STREAM && null != n
            ? m[e]?.[n]
            : t === c.InviteTargetTypes.EMBEDDED_APPLICATION && null != s
              ? h[e]?.[s]
              : g[e];
        }
        getFriendInvite() {
          return s;
        }
        getFriendInvitesFetching() {
          return p;
        }
        canRevokeFriendInvite() {
          return null != s && !v && !y;
        }
      }
      var T = new I(f.default, {
        CONNECTION_OPEN: function () {
          (g = {}),
            (m = {}),
            (h = {}),
            (E = {}),
            (s = null),
            (v = !1),
            (y = !1),
            (p = !1);
        },
        CHANNEL_DELETE: function (e) {
          let { channel: t } = e;
          delete g[t.id], delete m[t.id], delete h[t.id];
        },
        FRIEND_INVITE_CREATE_SUCCESS: function (e) {
          (E[e.invite.code] = _.default.createFromServer(e.invite)),
            (s = r()(o()(d()(Object.values(E), "createdAt"))) ?? null),
            (y = !1);
        },
        FRIEND_INVITE_CREATE_FAILURE: function () {
          y = !1;
        },
        FRIEND_INVITE_REVOKE_SUCCESS: function (e) {
          null != e.invites &&
            e.invites.forEach(e => {
              null != E[e.code] && delete E[e.code];
            }),
            (s = r()(o()(d()(Object.values(E), "createdAt"))) ?? null),
            (v = !1);
        },
        INSTANT_INVITE_CREATE_SUCCESS: function (e) {
          let { channelId: t, invite: n } = e,
            s = _.default.createFromServer(n);
          s.targetType === c.InviteTargetTypes.STREAM && null != s.targetUser
            ? (null == m[t] && (m[t] = {}), (m[t][String(s.targetUser.id)] = s))
            : s.targetType === c.InviteTargetTypes.EMBEDDED_APPLICATION &&
                null != s.targetApplication
              ? (null == h[t] && (h[t] = {}),
                (h[t][s.targetApplication.id] = s))
              : (g[t] = s);
        },
        INSTANT_INVITE_CREATE_FAILURE: function (e) {
          let { channelId: t } = e;
          g[t] = null;
        },
        INSTANT_INVITE_REVOKE_SUCCESS: function (e) {
          let { channelId: t } = e;
          g[t] = null;
        },
        FRIEND_INVITE_REVOKE_REQUEST: function () {
          v = !0;
        },
        FRIEND_INVITE_CREATE_REQUEST: function () {
          y = !0;
        },
        FRIEND_INVITES_FETCH_REQUEST: function () {
          p = !0;
        },
        FRIEND_INVITES_FETCH_RESPONSE: function (e) {
          (E = {}),
            e.invites.forEach(e => {
              E[e.code] = _.default.createFromServer(e);
            }),
            (s = r()(o()(d()(Object.values(E), "createdAt"))) ?? null),
            (p = !1);
        },
        INSTANT_INVITE_CLEAR: function (e) {
          delete g[e.channelId];
        },
      });
    },
    869817: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        }),
        n("789020");
      var s = n("661223"),
        i = n("312916"),
        r = n("442409"),
        a = n("467006");
      let o = {},
        u = {},
        d = {};
      function l(e, t) {
        e = e ?? "";
        let n = (0, r.parseExtraDataFromInviteKey)(e),
          s = o[e],
          i =
            null != s
              ? { state: a.InviteStates.RESOLVING, ...s }
              : { state: a.InviteStates.RESOLVING, code: n.baseCode };
        t(i),
          (o = { ...o, [e]: i }),
          i.guild?.id != null && (d = { ...d, [i.guild.id]: e });
      }
      function f(e) {
        return l(e.code, t => {
          t.state =
            "banned" in e && e.banned
              ? a.InviteStates.BANNED
              : a.InviteStates.EXPIRED;
        });
      }
      class _ extends s.default.Store {
        static #e = (this.displayName = "InviteStore");
        getInvite(e) {
          return o[e];
        }
        getInviteError(e) {
          return u[e];
        }
        getInvites() {
          return o;
        }
        getInviteKeyForGuildId(e) {
          return d[e];
        }
      }
      var c = new _(i.default, {
        INVITE_RESOLVE: function (e) {
          let { code: t } = e,
            n = (0, r.parseExtraDataFromInviteKey)(t);
          o = {
            ...o,
            [t]: { code: n.baseCode, state: a.InviteStates.RESOLVING },
          };
        },
        INVITE_RESOLVE_SUCCESS: function (e) {
          return l(e.code, t => {
            (t.state = a.InviteStates.RESOLVED),
              (t.guild = e.invite.guild),
              (t.channel = e.invite.channel),
              (t.inviter = e.invite.inviter),
              (t.approximate_member_count =
                e.invite.approximate_member_count ?? null),
              (t.approximate_presence_count =
                e.invite.approximate_presence_count ?? null),
              (t.target_type = e.invite.target_type),
              (t.target_user = e.invite.target_user),
              (t.target_application = e.invite.target_application),
              (t.expires_at = e.invite.expires_at),
              (t.stage_instance = e.invite.stage_instance),
              (t.friends_count = e.invite.friends_count),
              (t.is_contact = e.invite.is_contact),
              (t.guild_scheduled_event = e.invite.guild_scheduled_event),
              (t.type = e.invite.type),
              (t.flags = e.invite.flags);
          });
        },
        INVITE_RESOLVE_FAILURE: f,
        INSTANT_INVITE_REVOKE_SUCCESS: f,
        FRIEND_INVITE_CREATE_SUCCESS: function (e) {
          return l(e.invite.code, t => {
            (t.state = a.InviteStates.RESOLVED), (t.inviter = e.invite.inviter);
          });
        },
        FRIEND_INVITE_REVOKE_SUCCESS: function (e) {
          e.invites.forEach(e =>
            l(e.code, e => {
              e.state = a.InviteStates.EXPIRED;
            })
          );
        },
        INSTANT_INVITE_CREATE_SUCCESS: function (e) {
          return l(e.invite.code, t => {
            (t.state = a.InviteStates.RESOLVED),
              (t.guild = e.invite.guild),
              (t.channel = e.invite.channel),
              (t.inviter = e.invite.inviter),
              (t.approximate_member_count =
                e.invite.approximate_member_count ?? null),
              (t.approximate_presence_count =
                e.invite.approximate_presence_count ?? null),
              (t.target_type = e.invite.target_type),
              (t.target_user = e.invite.target_user),
              (t.target_application = e.invite.target_application),
              (t.stage_instance = e.invite.stage_instance),
              (t.guild_scheduled_event = e.invite.guild_scheduled_event),
              (t.type = e.invite.type);
          });
        },
        INVITE_ACCEPT: function (e) {
          return l(e.code, e => {
            e.state = a.InviteStates.ACCEPTING;
          });
        },
        INVITE_ACCEPT_SUCCESS: function (e) {
          return l(e.code, t => {
            (t.state = a.InviteStates.ACCEPTED),
              (t.guild = e.invite.guild),
              (t.new_member = e.invite.new_member),
              (t.channel = { ...t.channel, ...e.invite.channel });
          });
        },
        INVITE_ACCEPT_FAILURE: function (e) {
          return (
            (u[e.code] = e.error),
            l(e.code, e => {
              e.state = a.InviteStates.ERROR;
            })
          );
        },
        INVITE_APP_OPENING: function (e) {
          return l(e.code, e => {
            e.state = a.InviteStates.APP_OPENING;
          });
        },
        INVITE_APP_OPENED: function (e) {
          return l(e.code, e => {
            e.state = a.InviteStates.APP_OPENED;
          });
        },
        INVITE_APP_NOT_OPENED: function (e) {
          return l(e.code, e => {
            e.state = a.InviteStates.APP_NOT_OPENED;
          });
        },
      });
    },
    240335: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var s = n("661223"),
        i = n("312916");
      let r = [];
      function a() {
        r = [];
      }
      class o extends s.default.Store {
        static #e = (this.displayName = "LayerStore");
        hasLayers() {
          return r.length > 0;
        }
        getLayers() {
          return r;
        }
      }
      var u = new o(i.default, {
        LAYER_PUSH: function (e) {
          let { component: t } = e;
          if (r.indexOf(t) >= 0) return !1;
          r = [...r, t];
        },
        LAYER_POP: function () {
          if (0 === r.length) return !1;
          r = r.slice(0, -1);
        },
        LAYER_POP_ALL: a,
        LOGOUT: a,
        NOTIFICATION_CLICK: a,
      });
    },
    416620: function (e, t, n) {
      "use strict";
      let s, i;
      n.r(t),
        n.d(t, {
          default: function () {
            return T;
          },
        }),
        n("653041");
      var r,
        a,
        o = n("392711"),
        u = n.n(o),
        d = n("153832"),
        l = n("661223"),
        f = n("986329"),
        _ = n("312916"),
        c = n("980677"),
        g = n("182409"),
        m = n("916372"),
        h = n("467006");
      ((a = r || (r = {})).REQUIRED = "REQUIRED"),
        (a.OPTIONAL = "OPTIONAL"),
        (a.OPTIONAL_DEFAULT = "OPTIONAL_DEFAULT");
      let E = "migrated",
        p = {
          [h.OverlayWidgets.GUILDS]: {
            minSize: { width: 312, height: 300 },
            resizeX: !1,
            resizeY: !0,
            dragAnywhere: !1,
            layoutPolicy: "OPTIONAL",
            defaultSettings: {
              anchor: { left: 0.175, top: 0.15, bottom: null, right: null },
              size: { width: "auto", height: 0.65 },
              pinned: !1,
            },
          },
          [h.OverlayWidgets.TEXT]: {
            minSize: { width: 430, height: 300 },
            resizeX: !0,
            resizeY: !0,
            dragAnywhere: !1,
            layoutPolicy: "OPTIONAL",
            defaultSettings: {
              anchor: { left: 0.26, top: 0.15, bottom: null, right: null },
              size: { width: 0.565, height: 0.65 },
              pinned: !0,
            },
          },
          [h.OverlayWidgets.VOICE]: {
            minSize: { width: 272, height: 100 },
            resizeX: !1,
            resizeY: !1,
            dragAnywhere: !0,
            layoutPolicy: "REQUIRED",
            defaultSettings: {
              anchor: { left: 0.011, top: 0.011, bottom: null, right: null },
              size: { width: "auto", height: "auto" },
              pinned: !0,
            },
          },
          [h.OverlayWidgets.GUILDS_TEXT]: {
            minSize: { height: 300, width: 610 },
            resizeX: !0,
            resizeY: !0,
            dragAnywhere: !1,
            layoutPolicy: "OPTIONAL_DEFAULT",
            defaultSettings: {
              anchor: { left: 0.15, top: 0.15, bottom: null, right: null },
              size: { width: 0.7, height: 0.65 },
              pinned: !1,
            },
          },
          [h.OverlayWidgets.LOBBY_VOICE]: {
            minSize: { width: 272, height: 100 },
            resizeX: !1,
            resizeY: !1,
            dragAnywhere: !0,
            layoutPolicy: "REQUIRED",
            defaultSettings: {
              anchor: { left: null, top: 0.011, bottom: null, right: 0.011 },
              size: { width: "auto", height: "auto" },
              pinned: !0,
            },
          },
        };
      function v(e, t) {
        let n = i[e];
        if (null == n) return !1;
        let r = s[n.layoutId];
        return null != r && t(n, r);
      }
      function y(e) {
        return p[e]?.defaultSettings;
      }
      class I extends l.default.PersistedStore {
        static #e = (this.displayName = "LayoutStore");
        static #t = (this.persistKey = "LayoutStore");
        static #n = (this.migrations = [
          () => {
            let {
              pinnedWidgets: e,
              positions: t,
              sizes: n,
              v: s,
            } = { ...f.default.get("OverlayStore") };
            if (5 === s && e) {
              let s = [],
                i = e.map(e => {
                  let i = null != t ? t[e] : null,
                    r = null != n ? n[e] : null,
                    a = {
                      id: e,
                      layoutId: E,
                      type: e,
                      anchor: i || {
                        top: -1,
                        left: -1,
                        bottom: null,
                        right: null,
                      },
                      size: r || { width: -1, height: -1 },
                      pinned: !0,
                      zIndex: 0,
                    };
                  return s.push([a.id, a]), a.id;
                });
              return { layouts: [[E, { id: E, widgets: i }]], widgets: s };
            }
            return { layouts: [], widgets: [] };
          },
          e => {
            let { layouts: t, widgets: n } = e,
              s = new Set(Object.keys(h.OverlayWidgets)),
              i = Array.from(n).filter(e => {
                let [t] = e;
                return !s.has(t);
              }),
              r = Array.from(t).filter(e => {
                let [t] = e;
                return t !== E;
              });
            return (
              r.forEach(e => {
                let [t, n] = e,
                  s = null,
                  r = null;
                if (
                  (n.widgets.find(e => {
                    let n = i.find(n => {
                      let [s, i] = n;
                      return s === e && i.layoutId === t;
                    });
                    return (
                      null != n &&
                      (null == r &&
                        n[1].type === h.OverlayWidgets.VOICE &&
                        (r = n[0]),
                      null == s &&
                        n[1].type === h.OverlayWidgets.TEXT &&
                        (s = n[1].pinned),
                      (null != s && null != r) || void 0)
                    );
                  }),
                  s || null == r)
                )
                  return;
                let a = (0, d.v4)();
                (n.widgets = [r, a]),
                  i.push([
                    a,
                    {
                      ...y(h.OverlayWidgets.GUILDS_TEXT),
                      type: h.OverlayWidgets.GUILDS_TEXT,
                      id: a,
                      layoutId: t,
                      zIndex: 2,
                    },
                  ]);
              }),
              { widgets: i, layouts: r }
            );
          },
          e => {
            let { layouts: t, widgets: n } = e,
              s = t.reduce((e, t) => {
                let [n, s] = t;
                return (e[n] = s), e;
              }, {});
            return {
              layouts: s,
              widgets: n.reduce((e, t) => {
                let [n, s] = t;
                return (e[n] = s), e;
              }, {}),
            };
          },
        ]);
        initialize(e) {
          null != e && null != e.layouts && null != e.widgets
            ? ((s = (function (e) {
                let t = {};
                return (
                  u().forEach(e, (e, n) => {
                    t[n] = new c.default(e);
                  }),
                  t
                );
              })(e.layouts)),
              (i = (function (e) {
                let t = {};
                return (
                  u().forEach(e, (e, n) => {
                    t[n] = new g.default(e);
                  }),
                  t
                );
              })(e.widgets)))
            : ((s = {}), (i = {}));
          let t = !1,
            n = [];
          u().forEach(p, (e, t) => {
            "REQUIRED" === e.layoutPolicy && n.push(t);
          }),
            u().forEach(s, (e, r) => {
              let a = this.getWidgetsForLayout(r),
                o = !1;
              for (let e of n) {
                let n = a.find(t => t.type === e);
                if (null != n) continue;
                o = t = !0;
                let s = (0, d.v4)();
                (n = new g.default({
                  ...this.getWidgetDefaultSettings(e),
                  type: e,
                  id: s,
                  layoutId: r,
                  zIndex: a.length,
                })),
                  a.push(n),
                  (i = { ...i, [s]: n });
              }
              o &&
                ((e = e.set(
                  "widgets",
                  a.map(e => {
                    let { id: t } = e;
                    return t;
                  })
                )),
                (s = { ...s, [r]: e }));
            }),
            u().forEach(i, (e, n) => {
              let r = s[e.layoutId];
              (null == r || 0 > r.widgets.indexOf(n)) &&
                ((i = { ...i }), delete i[n], (t = !0));
            }),
            t && (this.persist(), this.emitChange());
        }
        getState() {
          return { layouts: s, widgets: i };
        }
        getLayouts() {
          return s;
        }
        getLayout(e) {
          return s[e];
        }
        getAllWidgets() {
          return i;
        }
        getWidget(e) {
          return i[e];
        }
        getWidgetsForLayout(e) {
          let t = this.getLayout(e);
          return null == t
            ? []
            : t.widgets.reduce((e, t) => {
                let n = this.getWidget(t);
                return null != n && e.push(n), e;
              }, []);
        }
        getWidgetConfig(e) {
          return p[e];
        }
        getWidgetDefaultSettings(e) {
          return y(e);
        }
        getWidgetType(e) {
          let t = i[e];
          return null != t ? t.type : "";
        }
        getRegisteredWidgets() {
          return p;
        }
        getDefaultLayout(e) {
          let t = [];
          return (
            u().forEach(this.getRegisteredWidgets(), (n, s) => {
              switch (n.layoutPolicy) {
                case "REQUIRED":
                case "OPTIONAL_DEFAULT":
                  t.push({
                    ...n.defaultSettings,
                    type: s,
                    id: (0, d.v4)(),
                    layoutId: e,
                  });
              }
            }),
            t
          );
        }
      }
      var T = new I(_.default, {
        LAYOUT_CREATE: function (e) {
          let { layoutId: t, widgets: n, defaultResolution: r } = e;
          if (null != s[t]) return !1;
          let a = [];
          n.forEach((e, t) => {
            let n = (function (e) {
                let t = s[E];
                if (null != t)
                  for (let n of t.widgets) {
                    let t = i[n];
                    if (null != t && t.type === e) return t;
                  }
                return null;
              })(e.type),
              o = { ...e, zIndex: t };
            "" === o.id && (o.id = (0, d.v4)()),
              null != n &&
                ((o.pinned = n.pinned),
                -1 !== n.anchor.left &&
                  (o.anchor = (0, m.getAnchorPercentageFromLayoutSize)(
                    n.anchor,
                    r
                  )),
                -1 !== n.size.width &&
                  (o.size = (0, m.getSizePercentageFromSize)(n.size, r))),
              (i = { ...i, [o.id]: new g.default(o) }),
              a.push(o.id);
          }),
            (s = { ...s, [t]: new c.default({ id: t, widgets: a }) });
        },
        LAYOUT_SET_PINNED: function (e) {
          let { widgetId: t } = e;
          return v(t, (e, t) => {
            (function (e) {
              i = { ...i, [e.id]: e.set("pinned", !e.pinned) };
            })(e);
          });
        },
        LAYOUT_UPDATE_WIDGET: function (e) {
          let { widgetId: t, anchor: n, size: s } = e;
          return v(t, (e, t) =>
            (function (e, t, n) {
              i = { ...i, [e.id]: e.merge({ anchor: t, size: n }) };
            })(e, n, s)
          );
        },
        LAYOUT_SET_TOP_WIDGET: function (e) {
          let { widgetId: t } = e;
          return v(t, (e, t) =>
            (function (e, t) {
              let n = (function (e) {
                let t = [];
                return (
                  e.widgets.forEach(e => {
                    let n = i[e];
                    null != n && t.push(n);
                  }),
                  t
                );
              })(e);
              n.sort((e, t) => e.zIndex - t.zIndex);
              let s = n.findIndex(e => e.id === t);
              if (s === n.length - 1) return !1;
              n.push(n.splice(s, 1)[0]);
              for (let e = 0; e < n.length; e++)
                (function (e, t) {
                  i = { ...i, [e.id]: e.set("zIndex", t) };
                })(n[e], e);
              return !0;
            })(t, e.id)
          );
        },
        LAYOUT_DELETE_WIDGET: function (e) {
          let { widgetId: t } = e;
          (i = { ...i }),
            delete i[t],
            u().forEach(s, (e, n) => {
              if (n === E) return;
              let i = e.widgets.indexOf(t);
              if (i >= 0) {
                let t = [...e.widgets];
                t.splice(i, 1), (s = { ...s, [n]: e.set("widgets", t) });
              }
            });
        },
        LAYOUT_DELETE_ALL_WIDGETS: function (e) {
          let { layoutId: t } = e,
            n = s[t];
          if (null == n) return !1;
          n.widgets.forEach(e => {
            (i = { ...i }), delete i[e];
          }),
            (s = { ...s, [n.id]: n.set("widgets", []) });
        },
        LAYOUT_CREATE_WIDGETS: function (e) {
          let { widgetConfigs: t } = e;
          t.forEach(e => {
            let t = new g.default(e),
              n = s[t.layoutId];
            if (null == n)
              throw Error("LayoutStore - handleAddWidget: Invalid layoutId");
            (t = t.set("zIndex", n.widgets.length)), (i = { ...i, [t.id]: t });
            let r = [...n.widgets, t.id];
            s = { ...s, [n.id]: n.set("widgets", r) };
          });
        },
      });
    },
    663241: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          LobbyError: function () {
            return u;
          },
          default: function () {
            return g;
          },
        }),
        n("653041");
      var s = n("392711"),
        i = n.n(s),
        r = n("661223"),
        a = n("312916"),
        o = n("467006");
      class u {
        constructor(e) {
          this.code = e;
        }
      }
      let d = {},
        l = {};
      function f(e, t) {
        if (null == l[e]) return null;
        let { socketId: n, timeout: s, resolve: i, reject: r } = l[e];
        return (
          delete l[e],
          null != s && clearTimeout(s),
          null != i && null != r && t(i, r),
          n
        );
      }
      function _(e) {
        let {
            lobbyId: t,
            member: { user: n, metadata: s },
          } = e,
          i = d[t];
        if (null == i) return !1;
        let r = i.members.find(e => e.user.id === n.id);
        null != r
          ? ((r.user = n), (r.metadata = s))
          : i.members.push({ user: n, metadata: s });
      }
      class c extends r.default.Store {
        static #e = (this.displayName = "LobbyStore");
        getLobbies() {
          return d;
        }
        getLobbiesWithVoice() {
          return i().filter(d, e => e.voice);
        }
        getLobby(e) {
          return d[e];
        }
        getPendingLobbies() {
          return i().map(l, (e, t) => {
            let { secret: n } = e;
            return { id: t, secret: n };
          });
        }
      }
      var g = new c(a.default, {
        CONNECTION_OPEN: function () {
          d = {};
        },
        OVERLAY_INITIALIZE: function (e) {
          d = e.lobbies;
        },
        LOBBY_CONNECT: function (e) {
          let {
            socketId: t,
            lobbyId: n,
            lobbySecret: s,
            resolve: i,
            reject: r,
          } = e;
          if (null != l[n] || null != d[n]) {
            null != r && r(new u(o.LobbyErrors.ALREADY_CONNECTING));
            return;
          }
          l[n] = {
            socketId: t,
            secret: s,
            resolve: i,
            reject: r,
            timeout: __OVERLAY__
              ? null
              : setTimeout(() => {
                  a.default.dispatch({
                    type: "LOBBY_DELETE",
                    lobbyId: n,
                    reason: o.LobbyErrors.SERVICE_UNAVAILABLE,
                  });
                }, 15e3),
          };
        },
        LOBBY_DISCONNECT: function (e) {
          let { lobbyId: t } = e;
          f(t, (e, t) => t(new u(o.LobbyErrors.NO_ERROR)));
        },
        LOBBY_CREATE: function (e) {
          let { lobby: t } = e,
            n = f(t.id, e => e(t));
          null != n && (d[t.id] = { socketId: n, voice: !1, ...d[t.id], ...t });
        },
        LOBBY_UPDATE: function (e) {
          let { lobby: t } = e,
            n = d[t.id];
          null != n && (d[t.id] = { ...n, ...t });
        },
        LOBBY_DELETE: function (e) {
          let { lobbyId: t, reason: n } = e;
          delete d[t], f(t, (e, t) => t(new u(n)));
        },
        LOBBY_MEMBER_CONNECT: _,
        LOBBY_MEMBER_UPDATE: _,
        LOBBY_MEMBER_DISCONNECT: function (e) {
          let {
              lobbyId: t,
              member: { user: n },
            } = e,
            s = d[t];
          if (null == s) return !1;
          s.members = s.members.filter(e => e.user.id !== n.id);
        },
        LOBBY_VOICE_CONNECT: function (e) {
          let { lobbyId: t } = e,
            n = d[t];
          if (null == n) return !1;
          n.voice = !0;
        },
        LOBBY_VOICE_DISCONNECT: function (e) {
          let { lobbyId: t } = e,
            n = d[t];
          if (null == n) return !1;
          n.voice = !1;
        },
        RPC_APP_DISCONNECTED: function (e) {
          let { socketId: t } = e;
          i().forEach(d, e => {
            e.socketId === t &&
              a.default.dispatch({ type: "LOBBY_DISCONNECT", lobbyId: e.id });
          });
        },
      });
    },
    952862: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return N;
          },
        }),
        n("653041");
      var s = n("348327"),
        i = n.n(s),
        r = n("392711"),
        a = n.n(r),
        o = n("661223"),
        u = n("312916"),
        d = n("134223"),
        l = n("148934"),
        f = n("746509"),
        _ = n("224022"),
        c = n("786006"),
        g = n("459960"),
        m = n("567927"),
        h = n("362939"),
        E = n("991400"),
        p = n("311545"),
        v = n("16410"),
        y = n("467006"),
        I = n("30175");
      let T = [],
        S = {};
      function C() {
        let e = [],
          t = h.CustomStatusSetting.getSetting();
        null != t &&
          ("0" === t.expiresAtMs ||
            new Date(Number(t.expiresAtMs)).getTime() - new Date().getTime() >
              0) &&
          e.push((0, f.default)(t));
        let n = g.default.getActivities();
        e.push(...n);
        let s = v.default.getStream();
        null != s && e.push({ type: y.ActivityTypes.STREAMING, ...s });
        let r = new Set(),
          o = new Set();
        a().forEach(S, t => {
          null != t.application_id &&
            (r.add(t.name), o.add(t.application_id), e.push(t));
        }),
          d.default.getSelfEmbeddedActivities().forEach(t => {
            let { applicationId: n } = t;
            if (o.has(n)) return;
            let s = l.default.getApplication(n)?.name;
            e.push({
              type: y.ActivityTypes.PLAYING,
              name:
                s ?? I.default.Messages.EMBEDDED_ACTIVITIES_LAUNCHING_ACTIVITY,
              application_id: n,
              flags: y.ActivityFlags.EMBEDDED,
            });
          });
        let u = _.default.getVisibleGame(),
          E = null != u && null != u.name && r.has(u.name),
          C = null != u && u.isLauncher,
          A = p.default.getCurrentUserActiveStream();
        null != u &&
          null != u.name &&
          !(E || (C && !(null != A))) &&
          e.push({
            type: y.ActivityTypes.PLAYING,
            name: u.name,
            application_id: u.id,
            timestamps: { start: u.start },
          });
        let N = m.default.getActivity();
        null != N && e.push({ type: y.ActivityTypes.LISTENING, ...N });
        let D = c.default.getCurrentHangStatus();
        if (null != D) {
          let t = c.default.getCustomHangStatus();
          e.push({
            type: y.ActivityTypes.HANG_STATUS,
            name: "Hang Status",
            state: D,
            details: t?.status,
            emoji: t?.emoji,
          });
        }
        !i()(T, e) && (T = e);
      }
      class A extends o.default.Store {
        static #e = (this.displayName = "LocalActivityStore");
        initialize() {
          this.waitFor(
            _.default,
            d.default,
            v.default,
            p.default,
            m.default,
            E.default,
            c.default
          ),
            this.syncWith([g.default, c.default], () => C());
        }
        getActivities() {
          return T;
        }
        getPrimaryActivity() {
          return T[0];
        }
        getApplicationActivity(e) {
          return this.findActivity(t => t.application_id === e);
        }
        getCustomStatusActivity() {
          return this.findActivity(
            e => e.type === y.ActivityTypes.CUSTOM_STATUS
          );
        }
        findActivity(e) {
          return T.find(e);
        }
        getApplicationActivities() {
          return S;
        }
      }
      var N = new A(u.default, {
        OVERLAY_INITIALIZE: function (e) {
          let { localActivities: t } = e;
          (S = { ...t }), C();
        },
        START_SESSION: function () {
          (S = {}), C();
        },
        LOCAL_ACTIVITY_UPDATE: function (e) {
          let { socketId: t, activity: n } = e;
          if (i()(S[t], n)) return !1;
          null != n ? (S[t] = n) : delete S[t], C();
        },
        RPC_APP_DISCONNECTED: function (e) {
          let { socketId: t } = e;
          delete S[t], C();
        },
        RUNNING_GAMES_CHANGE: C,
        LIBRARY_APPLICATION_FLAGS_UPDATE_SUCCESS: C,
        SPOTIFY_PLAYER_STATE: C,
        SPOTIFY_PLAYER_PLAY: C,
        STREAMING_UPDATE: C,
        USER_CONNECTIONS_UPDATE: C,
        STREAM_START: C,
        STREAM_STOP: C,
        USER_SETTINGS_PROTO_UPDATE: C,
        EMBEDDED_ACTIVITY_OPEN: C,
        EMBEDDED_ACTIVITY_CLOSE: C,
        UPDATE_HANG_STATUS: C,
      });
    },
    187080: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        });
      var s = n("661223"),
        i = n("986329"),
        r = n("312916"),
        a = n("366230"),
        o = n("958124"),
        u = n("161423");
      let d = "MaskedLinkStore",
        l = new Set(),
        f = new Set(),
        _ = window.GLOBAL_ENV.MEDIA_PROXY_ENDPOINT?.replace("//", "");
      function c(e) {
        let t = (0, o.getHostname)(e);
        switch (t) {
          case window.GLOBAL_ENV.CDN_HOST:
          case window.GLOBAL_ENV.INVITE_HOST:
          case window.GLOBAL_ENV.GIFT_CODE_HOST:
          case window.GLOBAL_ENV.GUILD_TEMPLATE_HOST:
          case _:
          case location.hostname:
            return !0;
          default:
            return (
              u.SPOTIFY_HOSTNAMES.includes(t) ||
              a.default.isDiscordHostname(t) ||
              l.has(t)
            );
        }
      }
      function g(e) {
        let t = (0, o.getProtocol)(e);
        return f.has(t);
      }
      class m extends s.default.Store {
        static #e = (this.displayName = "MaskedLinkStore");
        initialize() {
          let e = i.default.get(d) ?? {};
          if (Array.isArray(e))
            (l = new Set(null != e ? Array.from(e) : null)), (f = new Set());
          else {
            let { trustedDomains: t, trustedProtocols: n } = e;
            (l = new Set(null != t ? Array.from(t) : null)),
              (f = new Set(null != n ? Array.from(n) : null));
          }
        }
        isTrustedDomain(e) {
          return c(e);
        }
        isTrustedProtocol(e) {
          return g(e);
        }
      }
      var h = new m(r.default, {
        MASKED_LINK_ADD_TRUSTED_DOMAIN: function (e) {
          let { url: t } = e;
          if (c(t)) return !1;
          l.add((0, o.getHostname)(t)),
            i.default.set(d, { trustedDomains: l, trustedProtocols: f });
        },
        MASKED_LINK_ADD_TRUSTED_PROTOCOL: function (e) {
          let { url: t } = e;
          if (g(t)) return !1;
          f.add((0, o.getProtocol)(t)),
            i.default.set(d, { trustedDomains: l, trustedProtocols: f });
        },
      });
    },
    958124: function (e, t, n) {
      "use strict";
      function s(e) {
        let t = document.createElement("a");
        return (t.href = e), t.hostname;
      }
      function i(e) {
        let t = document.createElement("a");
        return (t.href = e), t.protocol;
      }
      n.r(t),
        n.d(t, {
          getHostname: function () {
            return s;
          },
          getProtocol: function () {
            return i;
          },
        });
    },
    162256: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return B;
          },
        }),
        n("789020"),
        n("653041"),
        n("177593");
      var s = n("392711"),
        i = n.n(s),
        r = n("661223"),
        a = n("312916"),
        o = n("237091"),
        u = n("53575"),
        d = n("841869"),
        l = n("615538"),
        f = n("620619"),
        _ = n("911533"),
        c = n("822534"),
        g = n("263066");
      n("805356");
      var m = n("894302"),
        h = n("703229"),
        E = n("984362"),
        p = n("84819"),
        v = n("262047"),
        y = n("731865"),
        I = n("500709"),
        T = n("610043"),
        S = n("361733"),
        C = n("327271"),
        A = n("197905"),
        N = n("606929"),
        D = n("232733"),
        O = n("632706"),
        R = n("871831"),
        P = n("467006");
      let b = new Set(),
        M = new d.default("MessageStore");
      function V() {
        o.default.forEach(e => {
          o.default.commit(e.mutate({ ready: !1, loadingMore: !1 }));
        }),
          b.clear();
      }
      function L() {
        o.default.forEach(e => {
          let { channelId: t } = e;
          null == y.default.getChannel(t) && o.default.clear(t);
        });
      }
      function k() {
        o.default.forEach(e => {
          o.default.commit(
            e.reset(
              e.map(e => e.set("blocked", N.default.isBlocked(e.author.id)))
            )
          );
        });
      }
      function w(e) {}
      function U(e) {
        let {
            type: t,
            channelId: n,
            messageId: s,
            userId: i,
            emoji: r,
            reactionType: a,
          } = e,
          u = o.default.get(n);
        if (null == u || !(0, m.shouldApplyReaction)(e)) return !1;
        let d = v.default.getId() === i;
        (u = u.update(s, n =>
          "MESSAGE_REACTION_ADD" === t
            ? n.addReaction(r, d, e.colors, a)
            : n.removeReaction(r, d, a)
        )),
          o.default.commit(u);
      }
      function G(e) {
        let { type: t, messageData: n } = e,
          { message: s } = n,
          i = (0, u.getFailedMessageId)(n),
          r = s.channelId,
          a = o.default.getOrCreate(r);
        if (!a.has(i)) return !1;
        (a = a.update(
          i,
          e => (
            e.embeds?.filter(f.isNotAutomodEmbed).length > 0 &&
              (e = e.set("embeds", [])),
            "MESSAGE_SEND_FAILED_AUTOMOD" === t &&
              (e = e.set(
                "flags",
                (0, E.addFlag)(e.flags, P.MessageFlags.EPHEMERAL)
              )),
            e
          )
        )),
          o.default.commit(a);
      }
      class F extends r.default.Store {
        static #e = (this.displayName = "MessageStore");
        initialize() {
          this.waitFor(
            R.default,
            y.default,
            I.default,
            S.default,
            h.default,
            D.default,
            O.default,
            C.default,
            N.default,
            T.default
          ),
            this.syncWith([_.default], () => {});
        }
        getMessages(e) {
          if (_.default.hasViewingRoles()) {
            let t = y.default.getChannel(e),
              n = t?.getGuildId();
            if (
              _.default.isViewingRoles(n) &&
              !A.default.can(P.Permissions.VIEW_CHANNEL, t)
            )
              return new o.default(e);
          }
          return o.default.getOrCreate(e);
        }
        getMessage(e, t) {
          return o.default.getOrCreate(e).get(t);
        }
        getLastEditableMessage(e) {
          let t = R.default.getCurrentUser();
          return i()(this.getMessages(e).toArray())
            .reverse()
            .find(e => (0, g.default)(e, t?.id));
        }
        getLastCommandMessage(e) {
          let t = R.default.getCurrentUser();
          return this.getMessages(e)
            .toArray()
            .reverse()
            .find(
              e => null != e.interaction && e.interaction.user.id === t?.id
            );
        }
        getLastMessage(e) {
          return i()(this.getMessages(e).toArray()).reverse().get(0);
        }
        getLastNonCurrentUserMessage(e) {
          let t = R.default.getCurrentUser();
          return i()(this.getMessages(e).toArray())
            .reverse()
            .find(e => e.author.id !== t?.id);
        }
        jumpedMessageId(e) {
          let t = o.default.get(e);
          return t?.jumpTargetId;
        }
        focusedMessageId(e) {
          let t = o.default.get(e);
          return t?.focusTargetId;
        }
        hasPresent(e) {
          let t = o.default.get(e);
          return null != t && t.ready && t.hasPresent();
        }
        isReady(e) {
          return o.default.getOrCreate(e).ready;
        }
        whenReady(e, t) {
          this.addConditionalChangeListener(() => {
            if (this.isReady(e)) return setImmediate(t), !1;
          });
        }
        isLoadingMessages(e) {
          return o.default.getOrCreate(e).loadingMore;
        }
        hasCurrentUserSentMessage(e) {
          let t = R.default.getCurrentUser();
          return (
            null != this.getMessages(e).findNewest(e => e.author.id === t?.id)
          );
        }
      }
      var B = new F(a.default, {
        BACKGROUND_SYNC_CHANNEL_MESSAGES: function (e) {
          let { changesByChannelId: t } = e;
          for (let e in t) {
            let n = o.default.get(e);
            if (null != n) {
              n.cached;
              n.mergeDelta(
                t[e].new_messages,
                t[e].modified_messages,
                t[e].deleted_message_ids
              );
            }
          }
        },
        CONNECTION_OPEN: V,
        OVERLAY_INITIALIZE: V,
        CACHE_LOADED: function (e) {
          for (let [t, n] of p.default.entries(e.messages)) {
            let e = o.default.getOrCreate(t).addCachedMessages(n, !0);
            o.default.commit(e);
          }
        },
        LOAD_MESSAGES: function () {
          return !0;
        },
        LOAD_MESSAGES_SUCCESS: function (e) {
          let {
              channelId: t,
              isBefore: n,
              isAfter: s,
              jump: i,
              hasMoreBefore: r,
              hasMoreAfter: a,
              messages: u,
              isStale: d,
              truncate: l,
            } = e,
            f = o.default.getOrCreate(t);
          (f = f.loadComplete({
            newMessages: u,
            isBefore: n,
            isAfter: s,
            jump: i,
            hasMoreBefore: r,
            hasMoreAfter: a,
            cached: d,
            hasFetched: !0,
          })),
            null != l && (n || s) && (!n || !s) && (f = f.truncate(n, s)),
            o.default.commit(f);
        },
        LOAD_MESSAGES_FAILURE: function (e) {
          let { channelId: t } = e,
            n = o.default.getOrCreate(t);
          o.default.commit(n.mutate({ loadingMore: !1, error: !0 }));
        },
        LOAD_MESSAGES_SUCCESS_CACHED: function (e) {
          let {
              channelId: t,
              jump: n,
              focus: s,
              before: i,
              after: r,
              limit: a,
              truncate: u,
            } = e,
            d = o.default.getOrCreate(t);
          n?.present
            ? (d = d.jumpToPresent(a))
            : s?.messageId != null
              ? (d = d.focusOnMessage(s.messageId))
              : n?.messageId != null
                ? (d = d.jumpToMessage(
                    n.messageId,
                    n.flash,
                    n.offset,
                    n.returnMessageId,
                    n.jumpType
                  ))
                : (null != i || null != r) &&
                  (d = d.loadFromCache(null != i, a)),
            null != u &&
              (null != i || null != r) &&
              (null == i || null == r) &&
              (d = d.truncate(null != i, null != r)),
            o.default.commit(d);
        },
        LOCAL_MESSAGES_LOADED: function (e) {
          let t = o.default.getOrCreate(e.channelId);
          (t.cached || !t.ready) &&
            o.default.commit(t.addCachedMessages(e.messages, e.stale));
        },
        LOAD_MESSAGE_INTERACTION_DATA_SUCCESS: function (e) {
          let t = e.messageId,
            n = e.channelId,
            s = o.default.get(n);
          if (null == s || !s.has(t)) return !1;
          (s = s.update(t, t => t.set("interactionData", e.interactionData))),
            o.default.commit(s);
        },
        TRUNCATE_MESSAGES: function (e) {
          let { channelId: t, truncateBottom: n, truncateTop: s } = e;
          M.log(`Truncating messages for ${t} bottom:${n} top:${s}`);
          let i = o.default.getOrCreate(t);
          (i = i.truncate(n, s)), o.default.commit(i);
        },
        CLEAR_MESSAGES: function (e) {
          let { channelId: t } = e;
          M.log(`Clearing messages for ${t}`), o.default.clear(t), b.clear();
        },
        MESSAGE_CREATE: function (e) {
          let { channelId: t, message: n, isPushNotification: s } = e,
            i = o.default.getOrCreate(t);
          if (s) {
            M.log(
              "Inserting message tapped on from a push notification",
              n.id,
              n.channel_id
            ),
              o.default.commit(i.receivePushNotification(n));
            return;
          }
          if (!i.ready) return !1;
          null != n.nonce &&
            n.state !== P.MessageStates.SENDING &&
            b.has(n.nonce) &&
            ((i = i.remove(n.nonce)), b.delete(n.nonce)),
            (i = i.receiveMessage(n, I.default.isAtBottom(t))),
            o.default.commit(i);
        },
        MESSAGE_SEND_FAILED: function (e) {
          let { channelId: t, messageId: n, reason: s } = e,
            i = o.default.getOrCreate(t);
          if (null == i || !i.has(n)) return !1;
          let r = i.get(n, !0);
          (i =
            r?.isPoll() === !0
              ? i.remove(n)
              : i.update(
                  n,
                  e => (
                    (e = e.set(
                      "state",
                      P.MessageStates.SEND_FAILED
                    )).isCommandType() &&
                      (e = (e = e.set("interactionError", s ?? "")).set(
                        "flags",
                        (0, E.addFlag)(e.flags, P.MessageFlags.EPHEMERAL)
                      )),
                    e
                  )
                )),
            o.default.commit(i);
        },
        MESSAGE_SEND_FAILED_AUTOMOD: G,
        MESSAGE_EDIT_FAILED_AUTOMOD: G,
        MESSAGE_UPDATE: function (e) {
          let t = e.message.id,
            n = e.message.channel_id,
            s = o.default.getOrCreate(n);
          if (null == s || !s.has(t)) return !1;
          (s = s.update(t, t => (0, c.updateMessageRecord)(t, e.message))),
            o.default.commit(s);
        },
        MESSAGE_EXPLICIT_CONTENT_SCAN_TIMEOUT: function (e) {
          let { messageId: t, channelId: n } = e,
            s = o.default.get(n);
          if (null == s || !s.has(t)) return !1;
          (s = s.update(t, l.handleExplicitMediaScanTimeoutForMessage)),
            o.default.commit(s);
        },
        MESSAGE_DELETE: function (e) {
          let { id: t, channelId: n } = e,
            s = o.default.getOrCreate(n);
          if (null == s || !s.has(t)) return !1;
          if (s.revealedMessageId === t) {
            let e = s.getAfter(t);
            s =
              null != e && e.blocked
                ? s.mutate({ revealedMessageId: e.id })
                : s.mutate({ revealedMessageId: null });
          }
          (s = s.remove(t)), o.default.commit(s), b.delete(t);
        },
        MESSAGE_DELETE_BULK: function (e) {
          let { ids: t, channelId: n } = e,
            s = o.default.getOrCreate(n);
          if (null == s) return !1;
          let r = s.removeMany(t);
          if (s === r) return !1;
          if (
            null != r.revealedMessageId &&
            i().some(t, e => r.revealedMessageId === e)
          ) {
            let e = r.getAfter(r.revealedMessageId);
            r =
              null != e && e.blocked
                ? r.mutate({ revealedMessageId: e.id })
                : r.mutate({ revealedMessageId: null });
          }
          o.default.commit(r),
            t.forEach(e => {
              b.delete(e);
            });
        },
        MESSAGE_REVEAL: function (e) {
          let { channelId: t, messageId: n } = e,
            s = o.default.getOrCreate(t);
          o.default.commit(s.mutate({ revealedMessageId: n }));
        },
        THREAD_CREATE_LOCAL: function (e) {
          let { channelId: t } = e,
            n = o.default.getOrCreate(t);
          (n = n.loadComplete({
            newMessages: [],
            hasMoreAfter: !1,
            hasMoreBefore: !1,
          })),
            o.default.commit(n);
        },
        CHANNEL_DELETE: L,
        THREAD_DELETE: L,
        GUILD_DELETE: L,
        RELATIONSHIP_ADD: k,
        RELATIONSHIP_REMOVE: k,
        GUILD_MEMBERS_CHUNK: w,
        THREAD_MEMBER_LIST_UPDATE: w,
        MESSAGE_REACTION_ADD: U,
        MESSAGE_REACTION_ADD_MANY: function (e) {
          let { channelId: t, messageId: n, reactions: s } = e,
            i = o.default.get(t);
          if (null == i) return !1;
          (i = i.update(n, e =>
            e.addReactionBatch(s, R.default.getCurrentUser()?.id)
          )),
            o.default.commit(i);
        },
        MESSAGE_REACTION_REMOVE: U,
        MESSAGE_REACTION_REMOVE_ALL: function (e) {
          let { channelId: t, messageId: n } = e,
            s = o.default.get(t);
          if (null == s) return !1;
          (s = s.update(n, e => e.set("reactions", []))), o.default.commit(s);
        },
        MESSAGE_REACTION_REMOVE_EMOJI: function (e) {
          let { channelId: t, messageId: n, emoji: s } = e,
            i = o.default.get(t);
          if (null == i) return !1;
          (i = i.update(n, e => e.removeReactionsForEmoji(s))),
            o.default.commit(i);
        },
        LOGOUT: function () {
          o.default.forEach(e => {
            o.default.clear(e.channelId);
          }),
            b.clear();
        },
        UPLOAD_START: function (e) {
          let { message: t } = e;
          null != t.nonce && b.add(t.nonce);
        },
        UPLOAD_FAIL: function (e) {
          let { channelId: t, messageRecord: n } = e,
            s = n?.nonce;
          if (null != s && b.has(s)) {
            let e = o.default.getOrCreate(t),
              n = e.get(s);
            if (null == n) return;
            (e = (e = e.remove(s)).merge([n])),
              b.delete(s),
              o.default.commit(e);
          }
        },
      });
    },
    174511: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        });
      var s = n("661223"),
        i = n("312916"),
        r = n("253842");
      let a = null,
        o = null,
        u = null;
      function d(e) {
        let { error: t } = e;
        a = t;
      }
      function l() {
        a = null;
      }
      class f extends s.default.Store {
        static #e = (this.displayName = "PremiumPaymentModalStore");
        get paymentError() {
          return a;
        }
        getGiftCode(e) {
          return e === u ? o : null;
        }
      }
      var _ = new f(i.default, {
        PREMIUM_PAYMENT_SUBSCRIBE_FAIL: d,
        PREMIUM_PAYMENT_UPDATE_FAIL: d,
        PREMIUM_PAYMENT_SUBSCRIBE_SUCCESS: function () {
          l();
        },
        PREMIUM_PAYMENT_UPDATE_SUCCESS: l,
        PREMIUM_PAYMENT_ERROR_CLEAR: l,
        BRAINTREE_TOKENIZE_PAYPAL_FAIL: function (e) {
          let { message: t, code: n } = e;
          a = new r.BillingError(t, n);
        },
        BRAINTREE_TOKENIZE_VENMO_FAIL: function (e) {
          let { message: t, code: n } = e;
          a = new r.BillingError(t, n);
        },
        SKU_PURCHASE_SUCCESS: function (e) {
          (o = e.giftCode), (u = e.skuId);
        },
        SKU_PURCHASE_FAIL: function (e) {
          a = e.error;
        },
        SKU_PURCHASE_AWAIT_CONFIRMATION: function (e) {
          e.isGift && (u = e.skuId);
        },
        GIFT_CODE_CREATE: function (e) {
          let { giftCode: t } = e;
          if (0 !== t.uses || t.sku_id !== u) return !1;
          o = t.code;
        },
      });
    },
    565639: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return M;
          },
        }),
        n("653041");
      var s = n("348327"),
        i = n.n(s),
        r = n("392711"),
        a = n.n(r),
        o = n("661223"),
        u = n("312916"),
        d = n("70484"),
        l = n("786006"),
        f = n("84819"),
        _ = n("262047"),
        c = n("871831"),
        g = n("467006");
      let m = Object.freeze([]),
        h = {},
        E = {},
        p = {},
        v = {},
        y = {};
      function I(e, t) {
        let n = h[e];
        return null != n ? n[t] : null;
      }
      let T = e => {
          switch (e.type) {
            case g.ActivityTypes.CUSTOM_STATUS:
              return 4;
            case g.ActivityTypes.COMPETING:
              return 3;
            case g.ActivityTypes.STREAMING:
              return 2;
            case g.ActivityTypes.PLAYING:
              return 1;
            default:
              return 0;
          }
        },
        S = e => ((0, d.default)(e) ? 1 : 0);
      function C(e, t) {
        var n, s, i;
        return (
          (n = e),
          T(t) - T(n) ||
            ((s = e), S(t) - S(s)) ||
            ((i = e), (t.created_at ?? 0) - (i.created_at ?? 0))
        );
      }
      function A(e) {
        if ((delete E[e], delete p[e], delete v[e], null == h[e])) return;
        let [t] = a().sortBy(h[e], e => -e.timestamp);
        t.status !== g.StatusTypes.OFFLINE
          ? ((E[e] = t.status),
            (p[e] = t.activities),
            null != t.clientStatus && (v[e] = t.clientStatus))
          : a().every(h[e], e => e.status === g.StatusTypes.OFFLINE) &&
            delete h[e];
      }
      function N(e) {
        let t = h[e];
        if (null == t) return;
        let n = a().maxBy(Object.values(t), e => e.timestamp);
        n.status !== g.StatusTypes.OFFLINE &&
          ((E[e] = n.status),
          (p[e] = n.activities),
          null != n.clientStatus && (v[e] = n.clientStatus));
      }
      function D(e) {
        let {
          guildId: t,
          userId: n,
          status: s,
          clientStatus: r,
          activities: a,
        } = e;
        if (n === _.default.getId()) return !1;
        let o = h[n];
        if (null == o) {
          if (s === g.StatusTypes.OFFLINE) return !1;
          o = h[n] = {};
        }
        if (s === g.StatusTypes.OFFLINE)
          o[t] = {
            status: s,
            clientStatus: r,
            activities: m,
            timestamp: Date.now(),
          };
        else {
          let e = a.length > 1 ? [...a].sort(C) : a,
            n = o[t];
          (a = null != n && i()(n.activities, e) ? n.activities : e),
            (o[t] = {
              status: s,
              clientStatus: r,
              activities: a,
              timestamp: Date.now(),
            });
        }
        return delete y[n], A(n), !0;
      }
      function O(e) {
        let {
          guildId: t,
          userId: n,
          status: s,
          clientStatus: i,
          activities: r,
          timestamp: a,
        } = e;
        if (n === _.default.getId()) return;
        let o = h[n];
        if (null == o) {
          if (s === g.StatusTypes.OFFLINE) return;
          o = h[n] = {};
        }
        if (s === g.StatusTypes.OFFLINE)
          o[t] = {
            status: s,
            clientStatus: i,
            activities: m,
            timestamp: Date.now(),
          };
        else {
          let e = r.length > 1 ? [...r].sort(C) : r;
          o[t] = { status: s, clientStatus: i, activities: e, timestamp: a };
        }
      }
      function R(e, t) {
        if (t === _.default.getId()) return !1;
        let n = h[t];
        if (null == n || null == n[e]) return !1;
        delete n[e], 0 === Object.keys(n).length && delete h[t], A(t);
      }
      function P(e) {
        for (let t of f.default.keys(h)) R(e, t);
      }
      class b extends o.default.Store {
        static #e = (this.displayName = "PresenceStore");
        initialize() {
          this.waitFor(_.default, l.default);
        }
        setCurrentUserOnConnectionOpen(e, t) {
          (E[_.default.getId()] = e), (p[_.default.getId()] = t);
        }
        getStatus(e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : null,
            n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : g.StatusTypes.OFFLINE,
            s = c.default.getUser(e);
          if (
            (null != s &&
              s.hasFlag(g.UserFlags.BOT_HTTP_INTERACTIONS) &&
              (n = g.StatusTypes.UNKNOWN),
            s?.isClyde())
          )
            return g.StatusTypes.ONLINE;
          if (null == t) return E[e] ?? n;
          let i = I(e, t);
          return i?.status ?? n;
        }
        getActivities(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : null;
          if (null == t) return p[e] ?? m;
          let n = I(e, t);
          return null == n || null == n.activities ? m : n.activities;
        }
        getPrimaryActivity(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : null;
          return this.getActivities(e, t).filter(
            e => e.type !== g.ActivityTypes.HANG_STATUS
          )[0];
        }
        getAllApplicationActivities(e) {
          let t = [];
          for (let n of f.default.keys(p))
            for (let s of p[n])
              s.application_id === e && t.push({ userId: n, activity: s });
          return t;
        }
        getApplicationActivity(e, t) {
          let n =
            arguments.length > 2 && void 0 !== arguments[2]
              ? arguments[2]
              : null;
          return this.findActivity(e, e => e.application_id === t, n);
        }
        findActivity(e, t) {
          let n =
            arguments.length > 2 && void 0 !== arguments[2]
              ? arguments[2]
              : null;
          return this.getActivities(e, n).find(t);
        }
        getActivityMetadata(e) {
          return y[e];
        }
        getUserIds() {
          return f.default.keys(p);
        }
        isMobileOnline(e) {
          let t = v[e];
          return (
            null != t &&
            t[g.ClientTypes.MOBILE] === g.StatusTypes.ONLINE &&
            t[g.ClientTypes.DESKTOP] !== g.StatusTypes.ONLINE
          );
        }
        getClientStatus(e) {
          return v[e];
        }
        getState() {
          return {
            presencesForGuilds: h,
            statuses: E,
            activities: p,
            activityMetadata: y,
            clientStatuses: v,
          };
        }
      }
      var M = new b(u.default, {
        CONNECTION_OPEN: function () {
          return !0;
        },
        CONNECTION_OPEN_SUPPLEMENTAL: function (e) {
          let { guilds: t, presences: n } = e,
            s = _.default.getId();
          (h = {}),
            (y = {}),
            (E = { [s]: E[s] }),
            (p = { [s]: p[s] }),
            (v = { [s]: {} });
          let i = new Set(),
            r = Date.now();
          t.forEach(e => {
            e.presences.forEach(t => {
              let { user: n, status: s, clientStatus: a, activities: o } = t;
              O({
                guildId: e.id,
                userId: n.id,
                status: s,
                clientStatus: a,
                activities: o,
                timestamp: r,
              }),
                i.add(n.id);
            });
          }),
            n.forEach(e => {
              let { user: t, status: n, clientStatus: s, activities: a } = e;
              null != t &&
                (O({
                  guildId: g.ME,
                  userId: t.id,
                  status: n,
                  clientStatus: s,
                  activities: a,
                  timestamp: r,
                }),
                i.add(t.id));
            }),
            i.delete(s),
            i.forEach(N);
        },
        OVERLAY_INITIALIZE: function (e) {
          let { presences: t } = e;
          (h = t.presencesForGuilds),
            (E = t.statuses),
            (p = t.activities),
            (y = t.activityMetadata);
        },
        GUILD_CREATE: function (e) {
          let { guild: t } = e;
          t.presences.forEach(e => {
            let { user: n, status: s, clientStatus: i, activities: r } = e;
            D({
              guildId: t.id,
              userId: n.id,
              status: s,
              clientStatus: i,
              activities: r,
            });
          });
        },
        GUILD_DELETE: function (e) {
          let { guild: t } = e;
          P(t.id);
        },
        GUILD_MEMBER_REMOVE: function (e) {
          let { guildId: t, user: n } = e;
          return R(t, n.id);
        },
        PRESENCE_UPDATES: function (e) {
          let { updates: t } = e;
          return t
            .map(e => {
              let {
                guildId: t,
                user: n,
                status: s,
                clientStatus: i,
                activities: r,
              } = e;
              return D({
                guildId: t ?? g.ME,
                userId: n.id,
                status: s,
                clientStatus: i,
                activities: r,
              });
            })
            .some(e => e);
        },
        PRESENCES_REPLACE: function (e) {
          let { presences: t } = e;
          P(g.ME),
            t.forEach(e => {
              let { user: t, status: n, clientStatus: s, activities: i } = e;
              null != t &&
                D({
                  guildId: g.ME,
                  userId: t.id,
                  status: n,
                  clientStatus: s,
                  activities: i,
                });
            });
        },
        ACTIVITY_METADATA_UPDATE: function (e) {
          let { userId: t, metadata: n } = e;
          return (y[t] = n), !1;
        },
        THREAD_MEMBER_LIST_UPDATE: function (e) {
          let { guildId: t, members: n } = e;
          n.forEach(e => {
            null != e.presence &&
              D({
                guildId: t,
                userId: e.user_id,
                status: e.presence.status,
                clientStatus: e.presence.clientStatus,
                activities: e.presence.activities,
              });
          });
        },
        THREAD_MEMBERS_UPDATE: function (e) {
          let { guildId: t, addedMembers: n } = e;
          n?.forEach(e => {
            null != e.presence &&
              D({
                guildId: t,
                userId: e.userId,
                status: e.presence.status,
                clientStatus: e.presence.clientStatus,
                activities: e.presence.activities,
              });
          });
        },
        SELF_PRESENCE_STORE_UPDATE: function (e) {
          let t = _.default.getId();
          if (E[t] === e.status && p[t] === e.activities) return !1;
          (E[t] = e.status), (p[t] = e.activities), delete y[t];
        },
      });
    },
    417223: function (e, t, n) {
      "use strict";
      let s;
      n.r(t),
        n.d(t, {
          default: function () {
            return eQ;
          },
          shouldBadgeMessage: function () {
            return eS;
          },
        }),
        n("653041"),
        n("789020");
      var i,
        r,
        a = n("512722"),
        o = n.n(a),
        u = n("913527"),
        d = n.n(u),
        l = n("661223"),
        f = n("454836"),
        _ = n("767191"),
        c = n("220497"),
        g = n("312916"),
        m = n("134223"),
        h = n("901365"),
        E = n("987393"),
        p = n("841869"),
        v = n("62470"),
        y = n("422557"),
        I = n("815235"),
        T = n("467139"),
        S = n("847252"),
        C = n("653033"),
        A = n("668332"),
        N = n("358958"),
        D = n("778916"),
        O = n("501509"),
        R = n("408109"),
        P = n("972942"),
        b = n("941237"),
        M = n("991400"),
        V = n("775822"),
        L = n("77615"),
        k = n("152551"),
        w = n("984362"),
        U = n("370275"),
        G = n("151254"),
        F = n("84819"),
        B = n("262047"),
        H = n("475232"),
        x = n("731865"),
        Y = n("500709"),
        j = n("261281"),
        K = n("917175"),
        W = n("327271"),
        z = n("551364"),
        $ = n("162256"),
        q = n("197905"),
        X = n("606929"),
        Q = n("232733"),
        Z = n("301309"),
        J = n("871831"),
        ee = n("470526"),
        et = n("467006"),
        en = n("985924"),
        es = n("551835"),
        ei = n("578962"),
        er = n("587361");
      let ea = new p.default("ReadStateStore");
      __OVERLAY__ && (s = n("875572").default);
      let eo =
          et.BasicPermissions.VIEW_CHANNEL |
          et.BasicPermissions.READ_MESSAGE_HISTORY,
        eu = null,
        ed = null,
        el = null,
        ef = !1,
        e_ = [],
        ec = !1,
        eg = null,
        em = {},
        eh = 30 * k.default.Millis.DAY;
      function eE() {
        return F.default.fromTimestamp(Date.now() - eh);
      }
      let ep = 0,
        ev = 0,
        ey = null;
      function eI() {
        (ep = Date.now() - 7 * k.default.Millis.DAY),
          (ev = Date.now() - 3 * k.default.Millis.DAY),
          clearTimeout(ey),
          (ey = setTimeout(() => {
            g.default.dispatch({ type: "DECAY_READ_STATES" });
          }, 1 * k.default.Millis.HOUR));
      }
      function eT(e) {
        if (null == e) return 0;
        let t = Date.parse(e);
        return isNaN(t) ? 0 : t;
      }
      function eS(e, t) {
        let n = x.default.getChannel(e.channel_id);
        return (
          !(null == n || X.default.isBlocked(e.author.id)) &&
          (!!(
            (0, C.default)({
              message: e,
              userId: t.id,
              suppressEveryone: Z.default.isSuppressEveryoneEnabled(n.guild_id),
              suppressRoles: Z.default.isSuppressRolesEnabled(n.guild_id),
            }) || eC(n)
          ) ||
            !1)
        );
      }
      function eC(e) {
        return (
          null != e &&
          e.isPrivate() &&
          !Z.default.isGuildOrCategoryOrChannelMuted(e.guild_id, e.id)
        );
      }
      async function eA(e) {
        if (0 === e_.length) {
          (ec = !1), e?.();
          return;
        }
        ec = !0;
        let t = e_.splice(0, 100);
        await eN(() =>
          f.default.post({
            url: et.Endpoints.BULK_ACK,
            body: { read_states: t },
            oldFormErrors: !0,
          })
        ),
          await (0, _.timeoutPromise)(1e3),
          eA(e);
      }
      async function eN(e) {
        let t = B.default.getId();
        for (let n = 0; n < 3; n++)
          try {
            return await e();
          } catch (e) {
            if (
              (ea.error("", e),
              n + 1 < 3 &&
                (await (0, _.timeoutPromise)((n + 1) * 2e3),
                await G.default.awaitOnline(),
                t !== B.default.getId()))
            )
              return Promise.reject(Error("User changed."));
          }
      }
      function eD(e) {
        if (e.type !== er.ReadStateTypes.CHANNEL) return !1;
        let t = x.default.getChannel(e.channelId),
          n = null != t && t.isForumPost();
        if (
          (null != m.default.getConnectedActivityChannelId() &&
            m.default.getActivityPanelMode() === en.ActivityPanelModes.PANEL &&
            m.default.getFocusedLayout() ===
              en.FocusedActivityLayouts.NO_CHAT) ||
          z.default.isIdle() ||
          !e.canTrackUnreads()
        )
          return !1;
        if (t?.isForumLikeChannel() !== !0) {
          let t = em[e.channelId],
            n = null != t && ee.default.isFocused(t),
            i =
              null != s &&
              s.isInstanceFocused() &&
              s.isPinned(et.OverlayWidgets.TEXT);
          if (!n && !i) return !1;
        }
        if (n && !e._persisted) return !0;
        if (
          !e.hasUnreadOrMentions() ||
          t?.isForumLikeChannel() === !0 ||
          (!(n && !e._isJoinedThread) && !Y.default.isAtBottom(e.channelId))
        )
          return !1;
        let i = h.default.getLayout(e.channelId),
          r = h.default.getChatOpen(e.channelId);
        if (
          (!r &&
            (i === et.ChannelLayouts.NO_CHAT ||
              i === et.ChannelLayouts.FULL_SCREEN)) ||
          null == em[e.channelId]
        )
          return !1;
        let a = $.default.getMessages(e.channelId);
        return (
          !(
            null == a ||
            !a.ready ||
            a.loadingMore ||
            ((0, O.default)() && !r)
          ) && !0
        );
      }
      ((r = i || (i = {}))[(r.IS_GUILD_CHANNEL = 1)] = "IS_GUILD_CHANNEL"),
        (r[(r.IS_THREAD = 2)] = "IS_THREAD");
      class eO {
        static #e = (this._guildReadStateSentinels = {});
        static #t = (this._readStates = {});
        static #n = (this._mentionChannels = new Set());
        static forEach(e) {
          for (let t of Object.keys(eO._readStates)) {
            let n = eO._readStates[parseInt(t)] ?? {};
            for (let t of Object.keys(n)) if (!1 === e(n[t])) break;
          }
        }
        static get(e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : er.ReadStateTypes.CHANNEL,
            n = eO._readStates[t]?.[e];
          return (
            null == n &&
              ((n = new eO(e, t)),
              null == eO._readStates[t] && (eO._readStates[t] = {}),
              (eO._readStates[t][e] = n)),
            n
          );
        }
        static getGuildSentinels(e) {
          return (
            null == this._guildReadStateSentinels[e] &&
              (this._guildReadStateSentinels[e] = { unreadsSentinel: 0 }),
            this._guildReadStateSentinels[e]
          );
        }
        static resetGuildSentinels() {
          this._guildReadStateSentinels = {};
        }
        static getIfExists(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : er.ReadStateTypes.CHANNEL;
          return eO._readStates[t]?.[e];
        }
        static getMentionChannelIds() {
          let e = [];
          for (let t of eO._mentionChannels) {
            let n = eO.getIfExists(t);
            null != n && n.canHaveMentions()
              ? e.push(t)
              : eO._mentionChannels.delete(t);
          }
          return e;
        }
        static getValue(e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : er.ReadStateTypes.CHANNEL,
            n = arguments.length > 2 ? arguments[2] : void 0,
            s = arguments.length > 3 ? arguments[3] : void 0,
            i = eO._readStates[t]?.[e];
          return null == i ? s : n(i);
        }
        static clear(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : er.ReadStateTypes.CHANNEL;
          return (
            eO._readStates[t]?.[e] != null &&
            (delete eO._readStates[t][e], eO._mentionChannels.delete(e), !0)
          );
        }
        static clearAll() {
          (eO._readStates = {}), eO._mentionChannels.clear();
        }
        constructor(e, t = er.ReadStateTypes.CHANNEL) {
          (this.type = er.ReadStateTypes.CHANNEL),
            (this.outgoingAckTimer = null),
            (this.ackMessageIdAtChannelSelect = null),
            (this.ackedWhileCached = void 0),
            (this.channelId = e),
            (this.type = t),
            (this._guildId = null),
            (this._isThread = !1),
            (this._isActiveThread = !1),
            (this._isJoinedThread = !1),
            (this._isResourceChannel = !1),
            (this._persisted = !1),
            (this.loadedMessages = !1),
            (this._lastMessageId = null),
            (this._lastMessageTimestamp = 0),
            (this._ackMessageId = null),
            (this._ackMessageTimestamp = 0),
            (this.isManualAck = !1),
            (this.ackPinTimestamp = 0),
            (this.lastPinTimestamp = 0),
            (this._oldestUnreadMessageId = null),
            (this.oldestUnreadMessageIdStale = !1),
            (this.estimated = !1),
            (this._unreadCount = 0),
            (this._mentionCount = 0),
            (this.outgoingAck = null);
        }
        serialize(e) {
          let {
            channelId: t,
            type: n,
            _guildId: s,
            _isThread: i,
            _isActiveThread: r,
            _isJoinedThread: a,
            _persisted: o,
            loadedMessages: u,
            _lastMessageId: d,
            _lastMessageTimestamp: l,
            _ackMessageId: f,
            _ackMessageTimestamp: _,
            ackPinTimestamp: c,
            isManualAck: g,
            lastPinTimestamp: m,
            _oldestUnreadMessageId: h,
            oldestUnreadMessageIdStale: E,
            estimated: p,
            _mentionCount: v,
            flags: y,
            lastViewed: I,
          } = this;
          if (e)
            return {
              channelId: t,
              type: n,
              _guildId: s,
              _isThread: i,
              _isActiveThread: r,
              _isJoinedThread: a,
              _persisted: o,
              loadedMessages: u,
              _lastMessageId: d,
              _lastMessageTimestamp: l,
              _ackMessageId: f,
              _ackMessageTimestamp: _,
              ackPinTimestamp: c,
              isManualAck: g,
              lastPinTimestamp: m,
              _oldestUnreadMessageId: h,
              oldestUnreadMessageIdStale: E,
              estimated: p,
              _mentionCount: v,
              flags: y,
              lastViewed: I,
            };
          let T = {
            channelId: t,
            type: n,
            _guildId: s,
            _persisted: o,
            _lastMessageId: d,
            _lastMessageTimestamp: l,
            _ackMessageId: f,
            _ackMessageTimestamp: _,
            ackPinTimestamp: c,
            lastPinTimestamp: m,
            _mentionCount: v,
            flags: y,
          };
          return (
            null != I && I > 0 && (T.lastViewed = I),
            i &&
              ((T._isThread = i),
              (T._isActiveThread = r),
              (T._isJoinedThread = a)),
            T
          );
        }
        deserializeForOverlay(e) {
          let {
            channelId: t,
            type: n,
            _guildId: s,
            _isThread: i,
            _isActiveJoinedThread: r,
            _isActiveThread: a,
            _isJoinedThread: o,
            _persisted: u,
            loadedMessages: d,
            _lastMessageId: l,
            _lastMessageTimestamp: f,
            _ackMessageId: _,
            _ackMessageTimestamp: c,
            ackPinTimestamp: g,
            isManualAck: m,
            lastPinTimestamp: h,
            _oldestUnreadMessageId: E,
            oldestUnreadMessageIdStale: p,
            estimated: v,
            _unreadCount: y,
            _mentionCount: I,
            flags: T,
            lastViewed: S,
          } = e;
          (this.channelId = t),
            (this.type = n ?? er.ReadStateTypes.CHANNEL),
            (this._guildId = s),
            (this._isThread = i ?? !1),
            null != r
              ? ((this._isActiveThread = r), (this._isJoinedThread = r))
              : ((this._isActiveThread = a ?? !1),
                (this._isJoinedThread = o ?? !1)),
            (this._persisted = !1 !== u),
            (this.loadedMessages = d ?? !1),
            (this._lastMessageId = l),
            (this._lastMessageTimestamp = f),
            (this._ackMessageId = _),
            (this._ackMessageTimestamp = c),
            (this.ackPinTimestamp = g),
            (this.isManualAck = m ?? !1),
            (this.lastPinTimestamp = h),
            (this._oldestUnreadMessageId = E),
            (this.oldestUnreadMessageIdStale = p ?? !1),
            (this.estimated = v ?? !1),
            (this._unreadCount = y ?? 0),
            (this._mentionCount = I),
            (this.flags = T),
            (this.lastViewed = S),
            eO._mentionChannels.delete(this.channelId),
            this._mentionCount > 0 &&
              this.canHaveMentions() &&
              eO._mentionChannels.add(this.channelId);
        }
        incrementGuildUnreadsSentinel() {
          null != this._guildId &&
            eO.getGuildSentinels(this._guildId).unreadsSentinel++;
        }
        get oldestUnreadMessageId() {
          return this._oldestUnreadMessageId;
        }
        set oldestUnreadMessageId(e) {
          (this._oldestUnreadMessageId = e),
            (this.oldestUnreadMessageIdStale = !1);
        }
        get lastMessageId() {
          return this._lastMessageId;
        }
        set lastMessageId(e) {
          (this._lastMessageId = e),
            (this._lastMessageTimestamp =
              null != e ? F.default.extractTimestamp(e) : 0);
        }
        get lastMessageTimestamp() {
          return this._lastMessageTimestamp;
        }
        get ackMessageId() {
          return this._ackMessageId;
        }
        set ackMessageId(e) {
          (this._ackMessageId = e),
            (this._ackMessageTimestamp =
              null != e ? F.default.extractTimestamp(e) : 0);
        }
        get unreadCount() {
          return this._unreadCount ?? 0;
        }
        set unreadCount(e) {
          (void 0 === this._unreadCount ||
            0 === this._unreadCount ||
            0 === e) &&
            this.incrementGuildUnreadsSentinel(),
            (this._unreadCount = e);
        }
        get mentionCount() {
          return this._mentionCount;
        }
        set mentionCount(e) {
          (0 === this._mentionCount || 0 === e) &&
            this._mentionCount !== e &&
            this.incrementGuildUnreadsSentinel(),
            (this._mentionCount = e),
            eO._mentionChannels.delete(this.channelId),
            this._mentionCount > 0 &&
              this.canHaveMentions() &&
              eO._mentionChannels.add(this.channelId);
        }
        guessAckMessageId() {
          let e = $.default.getMessages(this.channelId);
          if (null != this.ackMessageId || !this.isPrivate() || e.hasMoreAfter)
            return this.ackMessageId;
          if (!this.hasMentions()) return this.lastMessageId;
          let t = null,
            n = this.mentionCount,
            s = J.default.getCurrentUser();
          return (
            e.forEach(
              e => {
                if (n > 0 && e.author.id !== s?.id) --n;
                else if (0 === n) return (t = e.id), !1;
              },
              this,
              !0
            ),
            t
          );
        }
        get guildId() {
          if (null != this._guildId) return this._guildId;
          let e = x.default.getChannel(this.channelId);
          return (this._guildId = null != e ? e.getGuildId() : null);
        }
        isPrivate() {
          if (this.type !== er.ReadStateTypes.CHANNEL) return !1;
          let e = x.default.getChannel(this.channelId);
          return null != e && e.isPrivate();
        }
        rebuildChannelState(e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
            n = arguments.length > 2 ? arguments[2] : void 0;
          if (
            ((this.ackMessageId =
              e ?? this._ackMessageId ?? this.guessAckMessageId()),
            (this.isManualAck = null != e),
            (this.oldestUnreadMessageId = null),
            (this.estimated = !1),
            (this.unreadCount = 0),
            t && (this.mentionCount = 0),
            this.hasUnread())
          ) {
            let e = J.default.getCurrentUser(),
              n = this.getAckTimestamp(),
              s = !1,
              i = !1,
              r = null,
              a = $.default.getMessages(this.channelId);
            a.forAll(a => {
              s
                ? (this.oldestUnreadMessageId =
                    this._oldestUnreadMessageId ?? a.id)
                : (s = a.id === this._ackMessageId),
                F.default.extractTimestamp(a.id) > n
                  ? (this.unreadCount++,
                    t && eS(a, e) && this.mentionCount++,
                    (r = r ?? a.id))
                  : (i = !0);
            }),
              (this.estimated =
                !a.hasPresent() ||
                (!(s || i) && a.length === this.unreadCount)),
              (this.oldestUnreadMessageId = this._oldestUnreadMessageId ?? r);
          }
          null != n && (this.mentionCount = n);
        }
        handleGuildEventRemoval(e, t) {
          if (F.default.compare(this.ackMessageId, t) >= 0) return;
          let n = v.default.getGuildScheduledEventsForGuild(e),
            s = this.getAckTimestamp();
          if (isNaN(s)) return;
          let i = this._ackMessageId ?? F.default.fromTimestamp(s),
            r = null,
            a = 0;
          n.forEach(e => {
            (0, v.isEventUpcoming)(e) &&
              (F.default.compare(e.id, r) > 0 && (r = e.id),
              F.default.compare(e.id, i) > 0 && a++);
          }),
            (this.lastMessageId = r),
            (this.mentionCount = a);
        }
        canTrackUnreads() {
          if (this.type !== er.ReadStateTypes.CHANNEL) return !0;
          if (
            (this._isThread && !this._isActiveThread) ||
            this._isResourceChannel
          )
            return !1;
          let e = x.default.getBasicChannel(this.channelId);
          return (
            null != e &&
            ("basicPermissions" in e
              ? L.default.has(
                  e.basicPermissions,
                  et.BasicPermissions.VIEW_CHANNEL
                )
              : !E.default.isChannelGated(this.guildId, this.channelId) ||
                q.default.can(et.Permissions.VIEW_CHANNEL, e))
          );
        }
        canBeUnread() {
          return (
            !(
              (this._isThread && !this._isJoinedThread) ||
              (0, T.isMessageRequestOrSpamRequest)(this.channelId, [
                I.default,
                S.default,
              ]) ||
              (!this._isThread &&
                (0, D.isOptInEnabledForGuild)(this._guildId) &&
                (this._lastMessageTimestamp < ep ||
                  (!Z.default.isChannelOrParentOptedIn(
                    this._guildId,
                    this.channelId
                  ) &&
                    !this.hasRecentlyVisitedAndRead() &&
                    !this.hasMentions())))
            ) && this.canTrackUnreads()
          );
        }
        canHaveMentions() {
          return (
            !(
              0 === this.mentionCount ||
              (this._isThread && !this._isJoinedThread) ||
              (0, T.isMessageRequestOrSpamRequest)(this.channelId, [
                I.default,
                S.default,
              ]) ||
              ((0, D.isOptInEnabledForGuild)(this._guildId) &&
                this._lastMessageTimestamp < ep)
            ) && this.canTrackUnreads()
          );
        }
        getGuildChannelUnreadState(e, t, n, s, i) {
          if (
            t &&
            (this._lastMessageTimestamp < ep ||
              (!Z.default.isChannelRecordOrParentOptedIn(e) &&
                !this.hasRecentlyVisitedAndRead() &&
                this.mentionCount <= 0))
          )
            return { mentionCount: 0, unread: !1 };
          if ("basicPermissions" in e) {
            if (
              !L.default.has(
                e.basicPermissions,
                et.BasicPermissions.VIEW_CHANNEL
              )
            )
              return { mentionCount: 0, unread: !1 };
          } else if (
            E.default.isChannelGated(this.guildId, this.channelId) &&
            !q.default.can(et.Permissions.VIEW_CHANNEL, e)
          )
            return { mentionCount: 0, unread: !1 };
          return s || i
            ? { mentionCount: this.mentionCount, unread: !1 }
            : {
                mentionCount: this.mentionCount,
                unread: this.getAckTimestamp() < this._lastMessageTimestamp,
              };
        }
        hasUnread() {
          return this.getAckTimestamp() < this._lastMessageTimestamp;
        }
        hasRecentlyVisitedAndRead() {
          return (
            this._lastMessageTimestamp > 0 &&
            null != this._ackMessageId &&
            this.getAckTimestamp() > ev &&
            M.default.getGuildRecentsDismissedAt(this._guildId) <
              this.getAckTimestamp()
          );
        }
        isForumPostUnread() {
          return !!this._isActiveThread && this.hasUnread();
        }
        hasMentions() {
          return this.getMentionCount() > 0;
        }
        getMentionCount() {
          return this.mentionCount;
        }
        hasUnreadOrMentions() {
          return this.hasMentions() || this.hasUnread();
        }
        ackPins() {
          let e =
            arguments.length > 0 && void 0 !== arguments[0]
              ? arguments[0]
              : null;
          if (
            this.type !== er.ReadStateTypes.CHANNEL ||
            !this.canTrackUnreads()
          )
            return !1;
          if (null == e) {
            if (this.lastPinTimestamp === this.ackPinTimestamp) return !1;
            (this._persisted = !0),
              eN(() =>
                f.default.post({
                  url: et.Endpoints.PINS_ACK(this.channelId),
                  oldFormErrors: !0,
                })
              );
          }
          let t = eT(e);
          return (
            (this.ackPinTimestamp = 0 !== t ? t : this.lastPinTimestamp), !0
          );
        }
        ack(e) {
          let {
            messageId: t,
            local: n = !1,
            immediate: s = !1,
            force: i = !1,
            isExplicitUserAction: r = !1,
            location: a = { section: et.AnalyticsSections.CHANNEL },
            trackAnalytics: o = !0,
          } = e;
          if (!this._shouldAck(i, n, r) || (!i && !this.canTrackUnreads()))
            return !1;
          let u = this.hasMentions();
          return (
            (this.estimated = !1),
            (this.snapshot = this.takeSnapshot()),
            (this.unreadCount = 0),
            (this.mentionCount = 0),
            (null != t || null != (t = this.lastMessageId)) &&
              ((this.ackMessageId = t),
              (this.isManualAck = !1),
              (this._persisted = !0),
              ef && (this.ackedWhileCached = !0),
              (function (e) {
                if (null == e) return;
                let t = eO.get(e);
                if (t.type !== er.ReadStateTypes.CHANNEL) return;
                let n = x.default.getChannel(t.channelId);
                if (null == n || !n.isForumPost() || null == n.parent_id)
                  return;
                let s = n.parent_id,
                  i = eO.get(s);
                R.default.hasLoaded(n.guild_id) &&
                  F.default
                    .keys(R.default.getThreadsForParent(n.guild_id, s))
                    .every(
                      e =>
                        eX.hasOpenedThread(e) ||
                        0 > F.default.compare(e, i.ackMessageId)
                    ) &&
                  i.ack({});
              })(this.channelId),
              n
                ? (this.oldestUnreadMessageId = null)
                : (null == this.outgoingAck &&
                    (this.outgoingAckTimer = setTimeout(
                      () => {
                        this.type === er.ReadStateTypes.CHANNEL
                          ? this._ack(a, o)
                          : this._nonChannelAck(),
                          (this.outgoingAck = null),
                          (this.outgoingAckTimer = null);
                      },
                      u || s ? 0 : 3e3
                    )),
                  (this.outgoingAck = t)),
              !0)
          );
        }
        takeSnapshot() {
          let { default: e } = n("795273"),
            t = this.guildId;
          return {
            unread: this.hasUnread(),
            mentionCount: this.mentionCount,
            guildUnread: null == t ? null : e.hasUnread(t),
            guildMentionCount: null == t ? null : e.getMentionCount(t),
            takenAt: Date.now(),
          };
        }
        clearOutgoingAck() {
          (this.outgoingAck = null),
            null != this.outgoingAckTimer &&
              (clearTimeout(this.outgoingAckTimer),
              (this.outgoingAckTimer = null));
        }
        _shouldAck(e, t, n) {
          return (
            !!e ||
            !!n ||
            !!t ||
            !!(
              !this.isManualAck &&
              (this.type !== er.ReadStateTypes.CHANNEL ||
                this.loadedMessages ||
                x.default.getChannel(this.channelId)?.isForumLikeChannel())
            ) ||
            !1
          );
        }
        _ack(e, t) {
          let { outgoingAck: s } = this;
          if (null == s) return;
          let i = B.default.getId(),
            r = el;
          this._persisted = !0;
          let a = this.recalculateFlags(),
            o = a === this.flags ? void 0 : a;
          eN(() =>
            f.default.post({
              url: et.Endpoints.MESSAGE_ACK(this.channelId, s),
              body: { token: el, last_viewed: this.lastViewed, flags: o },
              oldFormErrors: !0,
            })
          ).then(e => {
            null != e &&
              (el === r && i === B.default.getId() && (el = e.body.token),
              g.default.dispatch({ type: "MESSAGE_ACKED" }),
              t &&
                n
                  .el("417223@43617:43668")
                  .then(n.bind(n, "670899"))
                  .then(e => {
                    let { default: t } = e;
                    t(this.channelId);
                  }));
          });
        }
        recalculateFlags() {
          if (this.type !== er.ReadStateTypes.CHANNEL) return;
          let e = x.default.getChannel(this.channelId);
          if (null != e) return e.isThread() ? 2 : null != e.guild_id ? 1 : 0;
        }
        _nonChannelAck() {
          let e;
          let { outgoingAck: t, channelId: n, type: s } = this;
          if (null != t) {
            switch (s) {
              case er.ReadStateTypes.GUILD_HOME:
              case er.ReadStateTypes.GUILD_EVENT:
              case er.ReadStateTypes.GUILD_ONBOARDING_QUESTION:
                e = et.Endpoints.GUILD_FEATURE_ACK(n, t, s);
                break;
              case er.ReadStateTypes.NOTIFICATION_CENTER:
                e = et.Endpoints.USER_NON_CHANNEL_ACK(t, s);
                break;
              default:
                return;
            }
            (this._persisted = !0),
              eN(() => f.default.post({ url: e, body: {}, oldFormErrors: !0 }));
          }
        }
        delete() {
          let e =
              !(arguments.length > 0) ||
              void 0 === arguments[0] ||
              arguments[0],
            t = x.default.getBasicChannel(this.channelId);
          ea.log("Deleting ReadState", this.channelId, this.type, {
            remote: e,
            persisted: this._persisted,
            channelMissing: null == t,
            isOld: eL(this, eE()),
            validType: null != t && V.ALL_CHANNEL_TYPES.has(t.type),
            readableType: null != t && (0, V.isReadableType)(t.type),
            oldThreadCutoff: eE(),
            mentionCount: this.mentionCount,
            channelId: this.channelId,
            ackMessageId: this._ackMessageId,
            lastMessageId: this._lastMessageId,
          }),
            e &&
              this._persisted &&
              f.default.delete({
                url: et.Endpoints.CHANNEL_ACK(this.channelId),
                body: { version: 2, read_state_type: this.type },
                oldFormErrors: !0,
              }),
            delete eO._readStates[this.type]?.[this.channelId],
            eO._mentionChannels.delete(this.channelId);
        }
        shouldDeleteReadState(e) {
          if (0 !== K.default.totalUnavailableGuilds) return !1;
          if (null != this.type && this.type !== er.ReadStateTypes.CHANNEL)
            return !(function (e) {
              switch (e.type) {
                case er.ReadStateTypes.GUILD_HOME:
                case er.ReadStateTypes.GUILD_EVENT:
                case er.ReadStateTypes.GUILD_ONBOARDING_QUESTION:
                  return null != W.default.getGuild(e.channelId);
                case er.ReadStateTypes.NOTIFICATION_CENTER:
                  return (
                    F.default.castUserIdAsReadStateChannelId(
                      J.default.getCurrentUser()?.id
                    ) === e.channelId
                  );
                default:
                  return !0;
              }
            })(this);
          let t = x.default.getBasicChannel(this.channelId);
          if (null == t) return !!eL(this, e) || !1;
          return (
            !!V.ALL_CHANNEL_TYPES.has(t.type) &&
            (!(0, V.isReadableType)(t.type) ||
              (!(0, V.isPrivate)(t.type) &&
                (!!(
                  V.THREAD_CHANNEL_TYPES.has(t.type) &&
                  (function (e, t, n) {
                    let s = e.guildId;
                    return (
                      !(
                        null != s &&
                        R.default.isActive(s, t.parent_id, e.channelId)
                      ) && eL(e, n)
                    );
                  })(this, t, e)
                ) ||
                  (!!(this.mentionCount > 0) &&
                    !q.default.canBasicChannel(eo, t)) ||
                  !1)))
          );
        }
        getAckTimestamp() {
          let e, t;
          if (0 !== this._ackMessageTimestamp) return this._ackMessageTimestamp;
          if (this._isThread)
            return (
              (this._ackMessageTimestamp = eM(this.guildId, this.channelId)),
              (this._ackMessageId = F.default.fromTimestamp(
                this._ackMessageTimestamp
              )),
              this._ackMessageTimestamp
            );
          if (
            this.type === er.ReadStateTypes.GUILD_EVENT ||
            this.type === er.ReadStateTypes.GUILD_ONBOARDING_QUESTION
          )
            e = W.default.getGuild(this.channelId);
          else if ((0, es.isStaticChannelRoute)(this.channelId))
            e = W.default.getGuild(this.guildId);
          else {
            let t = x.default.getChannel(this.channelId);
            if (null != t) {
              let n = t.getGuildId();
              e = W.default.getGuild(n);
            }
          }
          return (
            (t =
              null != e ? eV(e) : F.default.extractTimestamp(this.channelId)),
            (this._ackMessageTimestamp = t),
            t
          );
        }
        get oldestUnreadTimestamp() {
          return null != this.oldestUnreadMessageId
            ? F.default.extractTimestamp(this.oldestUnreadMessageId)
            : 0;
        }
        syncThreadSettings() {
          this._isThread = !0;
          let e = x.default.getChannel(this.channelId);
          if (null == e)
            return (
              ea.warn(
                `syncThreadSettings called with channel not in memory ${this.channelId}`
              ),
              !1
            );
          let t = this.guildId,
            n = null != t && R.default.isActive(t, e.parent_id, this.channelId),
            s = P.default.hasJoined(this.channelId);
          return (
            (this._isActiveThread !== n || this._isJoinedThread !== s) &&
            ((this._isActiveThread = n), (this._isJoinedThread = s), !0)
          );
        }
        recordLastViewedTime() {
          let e = Math.ceil(
            (Date.now() - F.DISCORD_EPOCH) / k.default.Millis.DAY
          );
          e !== this.lastViewed &&
            ((this.lastViewed = e),
            this.canTrackUnreads() &&
              !this.hasUnread() &&
              this.ack({ force: !0, trackAnalytics: !1 }));
        }
      }
      function eR(e) {
        e.forEach(e => {
          if ((0, V.isReadableType)(e.type)) {
            let t = eO.get(e.id);
            (t._guildId = e.guild_id),
              (t.lastMessageId = e.lastMessageId),
              (t.lastPinTimestamp = eT(e.lastPinTimestamp)),
              (t._isResourceChannel = e.hasFlag(
                es.ChannelFlags.IS_GUILD_RESOURCE_CHANNEL
              )),
              V.THREAD_CHANNEL_TYPES.has(e.type) && t.syncThreadSettings();
          }
        });
      }
      function eP(e) {
        e.forEach(e => {
          if ((0, V.isReadableType)(e.type)) {
            let t = eO.get(e.id);
            (t.lastMessageId = e.last_message_id),
              (t.lastPinTimestamp = eT(e.last_pin_timestamp)),
              (t._isResourceChannel = (0, w.hasFlag)(
                e.flags ?? 0,
                es.ChannelFlags.IS_GUILD_RESOURCE_CHANNEL
              )),
              V.THREAD_CHANNEL_TYPES.has(e.type) && t.syncThreadSettings();
          }
        });
      }
      function eb(e) {
        (function (e) {
          e.threads?.forEach(t => {
            if (!V.ALL_CHANNEL_TYPES.has(t.type)) return;
            let n = eO.get(t.id);
            (n.lastMessageId = t.lastMessageId),
              (n.lastPinTimestamp = eT(t.lastPinTimestamp)),
              (n._isThread = !0),
              (n._isActiveThread = !0),
              (n._isJoinedThread = null != t.member),
              null == n.ackMessageId &&
                (n.ackMessageId = F.default.fromTimestamp(eM(e.id, t.id))),
              null == n.ackPinTimestamp && (n.ackPinTimestamp = eM(e.id, t.id));
          });
        })(e),
          (function (e) {
            if (
              e.guild_scheduled_events?.length === 0 &&
              null == eO.getIfExists(e.id, er.ReadStateTypes.GUILD_EVENT)
            )
              return;
            let t = eO.get(e.id, er.ReadStateTypes.GUILD_EVENT);
            t._guildId = e.id;
            let n = 0,
              s = null,
              i =
                t._ackMessageId ?? F.default.fromTimestamp(t.getAckTimestamp());
            e.guild_scheduled_events.forEach(e => {
              F.default.compare(e.id, s) > 0 && (s = e.id),
                F.default.compare(e.id, i) > 0 && n++;
            }),
              (t.lastMessageId = s),
              (t.mentionCount = n);
          })(e),
          (function (e) {
            eO.get(e.id, er.ReadStateTypes.GUILD_HOME).lastMessageId =
              F.default.fromTimestamp(
                d()(Date.now()).subtract(24, "h").valueOf()
              );
          })(e),
          (function (e) {
            let t = e.properties.latest_onboarding_question_id;
            if (null == t) return;
            let n = eO.get(e.id, er.ReadStateTypes.GUILD_ONBOARDING_QUESTION);
            (n._guildId = e.id), (n.lastMessageId = t);
          })(e);
      }
      function eM(e, t) {
        let n = x.default.getChannel(t),
          s = W.default.getGuild(e ?? n?.guild_id),
          i = n?.isForumPost() ? 0 : eV(s),
          r = (P.default.joinTimestamp(t)?.getTime() ?? 0) - 5e3,
          a = n?.threadMetadata?.archiveTimestamp,
          o = Math.max(r, null != a ? new Date(a).getTime() - 1 : 0);
        return (
          o <= 0 && (o = F.default.extractTimestamp(t) - 1),
          isNaN(i) ? o : Math.max(i, o)
        );
      }
      function eV(e) {
        if (null != e && null != e.joinedAt) {
          if (e.joinedAt instanceof Date) return e.joinedAt.getTime();
          if ("string" == typeof e.joinedAt)
            return new Date(e.joinedAt).getTime();
          else if ("number" == typeof e.joinedAt && !isNaN(e.joinedAt))
            return e.joinedAt;
        }
        return Date.now();
      }
      function eL(e, t) {
        return (
          !!(e.mentionCount > 0) ||
          (!(
            F.default.compare(e.channelId, t) > 0 ||
            (null != e._ackMessageId &&
              F.default.compare(e._ackMessageId, t) > 0) ||
            (null != e._lastMessageId &&
              F.default.compare(e._lastMessageId, t) > 0)
          ) &&
            !0)
        );
      }
      function ek(e) {
        if (null != e) {
          let t = eO.get(e);
          if (eD(t)) return t.ack({});
        }
        return !1;
      }
      function ew() {
        null != eg && clearTimeout(eg);
      }
      function eU(e) {
        if (
          (null != e.channelUpdates && eR(e.channelUpdates?.writes),
          null != e.channelTimestampUpdates)
        )
          for (let t of e.channelTimestampUpdates) {
            let e = eO.get(t.id);
            null != t.last_message_id && (e.lastMessageId = t.last_message_id),
              null != t.last_pin_timestamp &&
                (e.lastPinTimestamp = eT(t.last_pin_timestamp));
          }
      }
      function eG(e) {
        let { channelId: t } = e;
        eO.get(t).rebuildChannelState();
      }
      function eF(e) {
        let { threads: t } = e;
        eP(t);
      }
      function eB(e) {
        let { messages: t, threads: n } = e;
        for (let e of t)
          eP(
            e
              .map(e => {
                let { thread: t } = e;
                return t;
              })
              .filter(U.isNotNullish)
          );
        eP(n);
      }
      function eH(e) {
        let t = J.default.getCurrentUser();
        return null != e.creator_id && null != t && e.creator_id === t.id;
      }
      function ex(e) {
        let { channel: t } = e;
        return eO.clear(t.id);
      }
      function eY() {
        let e = H.default.getCurrentSidebarChannelId(eu),
          t = !1;
        return ed !== e ? ((t = eK(ed)), (ed = e)) : (t = ek(e) || t), t;
      }
      function ej(e) {
        if (null != e) eO.get(e).isManualAck = !1;
      }
      function eK(e) {
        if (null == e) return !1;
        let t = eO.get(e);
        return !t.hasUnread() && ((t.oldestUnreadMessageId = null), !0);
      }
      function eW(e) {
        let { channelId: t, messageId: n, manual: s, newMentionCount: i } = e,
          r = eO.get(t);
        return s
          ? (r.rebuildChannelState(n, !0, i), !0)
          : n !== r._ackMessageId && r.ack({ messageId: n, local: !0 });
      }
      function ez(e) {
        let { id: t, ackType: n, ackedId: s, local: i } = e;
        return e$(t, n, s, i);
      }
      function e$(e, t, n, s) {
        let i = eO.get(e, t);
        return (
          n !== i.ackMessageId &&
          i.lastMessageId !== i.ackMessageId &&
          (null != i.lastMessageId || 0 !== i.mentionCount) &&
          ((n =
            n ??
            i.lastMessageId ??
            F.default.fromTimestamp(i.getAckTimestamp())),
          i.ack({ messageId: n, local: s ?? !0 }))
        );
      }
      class eq extends l.default.Store {
        static #e = (this.displayName = "ReadStateStore");
        initialize() {
          this.waitFor(
            Y.default,
            J.default,
            W.default,
            K.default,
            x.default,
            Q.default,
            $.default,
            q.default,
            h.default,
            R.default,
            P.default,
            H.default,
            v.default,
            j.default,
            E.default,
            Z.default,
            ee.default,
            A.default,
            I.default,
            M.default,
            S.default
          ),
            this.syncWith([H.default], eY);
        }
        getReadStatesByChannel() {
          return eO._readStates[er.ReadStateTypes.CHANNEL] ?? {};
        }
        getForDebugging(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : er.ReadStateTypes.CHANNEL;
          return eO.getIfExists(e, t);
        }
        getNotifCenterReadState(e) {
          return eO._readStates[er.ReadStateTypes.NOTIFICATION_CENTER]?.[e];
        }
        hasUnread(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : er.ReadStateTypes.CHANNEL;
          return eO.getValue(e, t, e => e.canBeUnread() && e.hasUnread(), !1);
        }
        hasTrackedUnread(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : er.ReadStateTypes.CHANNEL;
          return eO.getValue(
            e,
            t,
            e => e.canTrackUnreads() && e.hasUnread(),
            !1
          );
        }
        isForumPostUnread(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : er.ReadStateTypes.CHANNEL;
          return eO.getValue(e, t, e => e.isForumPostUnread(), !1);
        }
        getUnreadCount(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : er.ReadStateTypes.CHANNEL;
          return eO.getValue(
            e,
            t,
            e => (e.canBeUnread() ? e.unreadCount : 0),
            0
          );
        }
        getMentionCount(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : er.ReadStateTypes.CHANNEL;
          return eO.getValue(
            e,
            t,
            e => (e.canHaveMentions() ? e.getMentionCount() : 0),
            0
          );
        }
        getGuildChannelUnreadState(e, t, n, s, i) {
          return eO.getValue(
            e.id,
            er.ReadStateTypes.CHANNEL,
            r => r.getGuildChannelUnreadState(e, t, n, s, i),
            { mentionCount: 0, unread: !1 }
          );
        }
        hasRecentlyVisitedAndRead(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : er.ReadStateTypes.CHANNEL;
          return eO.getValue(e, t, e => e.hasRecentlyVisitedAndRead(), !1);
        }
        ackMessageId(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : er.ReadStateTypes.CHANNEL;
          return eO.getValue(
            e,
            t,
            e => (e.canBeUnread() ? e.ackMessageId : null),
            null
          );
        }
        getTrackedAckMessageId(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : er.ReadStateTypes.CHANNEL;
          return eO.getValue(
            e,
            t,
            e => (e.canTrackUnreads() ? e._ackMessageId : null),
            null
          );
        }
        lastMessageId(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : er.ReadStateTypes.CHANNEL;
          return eO.getValue(e, t, e => e.lastMessageId, null);
        }
        lastMessageTimestamp(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : er.ReadStateTypes.CHANNEL;
          return eO.getValue(e, t, e => e.lastMessageTimestamp, 0);
        }
        lastPinTimestamp(e) {
          return eO.getValue(
            e,
            er.ReadStateTypes.CHANNEL,
            e => e.lastPinTimestamp,
            null
          );
        }
        getOldestUnreadMessageId(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : er.ReadStateTypes.CHANNEL;
          return eO.getValue(
            e,
            t,
            e => (e.canTrackUnreads() ? e.oldestUnreadMessageId : null),
            null
          );
        }
        getOldestUnreadTimestamp(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : er.ReadStateTypes.CHANNEL;
          return eO.getValue(
            e,
            t,
            e => (e.canTrackUnreads() ? e.oldestUnreadTimestamp : 0),
            0
          );
        }
        isEstimated(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : er.ReadStateTypes.CHANNEL;
          return eO.getValue(e, t, e => e.estimated, !1);
        }
        hasOpenedThread(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : er.ReadStateTypes.CHANNEL;
          return eO.getValue(e, t, e => e._persisted, !1);
        }
        hasUnreadPins(e) {
          return eO.getValue(
            e,
            er.ReadStateTypes.CHANNEL,
            e => e.canBeUnread() && e.lastPinTimestamp > e.ackPinTimestamp,
            !1
          );
        }
        isNewForumThread(e, t, n) {
          let s = eO.get(t);
          if (
            !0 === eO.get(e)._persisted ||
            null == s.ackMessageIdAtChannelSelect ||
            0 >= F.default.compare(e, s.ackMessageIdAtChannelSelect)
          )
            return !1;
          let i = eV(n);
          return F.default.extractTimestamp(e) > i;
        }
        getAllReadStates(e) {
          let t = [];
          return (
            eO.forEach(n => {
              switch (n.type) {
                case er.ReadStateTypes.GUILD_HOME:
                case er.ReadStateTypes.GUILD_EVENT:
                case er.ReadStateTypes.GUILD_ONBOARDING_QUESTION:
                  null != W.default.getGuild(n.channelId) &&
                    t.push(n.serialize(e));
                  break;
                case er.ReadStateTypes.NOTIFICATION_CENTER:
                  F.default.castUserIdAsReadStateChannelId(
                    J.default.getCurrentUser()?.id
                  ) === n.channelId && t.push(n.serialize(e));
                  break;
                default:
                  t.push(n.serialize(e));
              }
            }),
            t
          );
        }
        getGuildUnreadsSentinel(e) {
          return eO.getGuildSentinels(e).unreadsSentinel;
        }
        getMentionChannelIds() {
          return eO.getMentionChannelIds();
        }
        getSnapshot(e, t) {
          let n = eO.get(e);
          return null == n.snapshot || Date.now() - n.snapshot.takenAt > t
            ? n.takeSnapshot()
            : n.snapshot;
        }
      }
      let eX = new eq(g.default, {
        BACKGROUND_SYNC_CHANNEL_MESSAGES: function (e) {
          let { changesByChannelId: t } = e;
          for (let e in t) {
            let n = t[e],
              s = eO.getIfExists(e);
            if (null != s)
              for (let e of [n.new_messages?.[0]]
                .concat(n.modified_messages ?? [])
                .filter(U.isNotNullish))
                1 === F.default.compare(e.id, s.lastMessageId) &&
                  (s.lastMessageId = e.id);
          }
        },
        CONNECTION_OPEN: function (e) {
          let {
            guilds: t,
            relationships: n,
            initialPrivateChannels: s,
            readState: i,
          } = e;
          eI(),
            (el = null),
            !ef && !i.partial && eO.clearAll(),
            (ef = !1),
            i.entries.forEach(e => {
              let t = e.read_state_type ?? er.ReadStateTypes.CHANNEL;
              if (t !== er.ReadStateTypes.CHANNEL) {
                var n;
                e = {
                  id: (n = e).id,
                  read_state_type: n.read_state_type,
                  mention_count: n.badge_count,
                  last_message_id: n.last_acked_id,
                };
              }
              let s = eO.get(e.id, t);
              (s._persisted = !0),
                (s._mentionCount = e.mention_count ?? 0),
                (s.flags = e.flags),
                (s.lastViewed = e.last_viewed);
              let i = x.default.getBasicChannel(e.id);
              null != i &&
              (0, V.isThread)(i.type) &&
              (null == e.last_message_id || 0 === e.last_message_id)
                ? (s.ackMessageId = F.default.fromTimestamp(
                    eM(i.guild_id, i.id)
                  ))
                : s.ackedWhileCached
                  ? -1 ===
                      F.default.compare(s.ackMessageId, e.last_message_id) &&
                    (s.ackMessageId = e.last_message_id)
                  : (s.ackMessageId = e.last_message_id),
                (s.ackedWhileCached = void 0),
                (s.ackPinTimestamp = eT(e.last_pin_timestamp)),
                eO._mentionChannels.delete(s.channelId),
                s._mentionCount > 0 &&
                  s.canHaveMentions() &&
                  eO._mentionChannels.add(s.channelId);
            }),
            eO.resetGuildSentinels();
          let r = J.default.getCurrentUser()?.id;
          for (let e of (null != r &&
            (eO.get(r, er.ReadStateTypes.NOTIFICATION_CENTER).lastMessageId =
              F.default.fromTimestamp(Date.now())),
          (function (e) {
            let t = J.default.getCurrentUser();
            if (!(0, N.inNotificationCenterEnabled)() || null == t) return 0;
            let n = eO.get(t.id, er.ReadStateTypes.NOTIFICATION_CENTER);
            e.forEach(e => {
              if (
                null == e.since ||
                e.type !== et.RelationshipTypes.PENDING_INCOMING
              )
                return;
              let t = new Date(e.since).getTime();
              (null != n.ackMessageId
                ? F.default.extractTimestamp(n.ackMessageId)
                : 0) < t &&
                (n.mentionCount++,
                (n.lastMessageId = F.default.fromTimestamp(t)));
            });
          })(n),
          eR(s),
          t))
            eR(e.channels ?? []), eU(e), eb(e);
          ew(),
            (eg = setTimeout(
              () =>
                (function (e) {
                  let t = eE();
                  for (let n of e) {
                    let e = n.read_state_type ?? er.ReadStateTypes.CHANNEL,
                      s = eO.get(n.id, e);
                    s.shouldDeleteReadState(t) && s.delete();
                  }
                })(i.entries),
              10 * k.default.Millis.SECOND
            ));
        },
        CONNECTION_OPEN_SUPPLEMENTAL: function (e) {
          let { lazyPrivateChannels: t } = e;
          eR(t);
        },
        LOGOUT: ew,
        OVERLAY_INITIALIZE: function (e) {
          let { readStates: t, selectedChannelId: n } = e;
          eI(),
            (el = null),
            (eu = n),
            (ed = H.default.getCurrentSidebarChannelId(eu)),
            eO.clearAll(),
            t.forEach(e => {
              let t = eO.get(e.channelId);
              t.deserializeForOverlay(e),
                t.type === er.ReadStateTypes.CHANNEL && t.rebuildChannelState();
            });
        },
        CACHE_LOADED: function (e) {
          let { readStates: t } = e;
          (ef = !0),
            eI(),
            t.forEach(e => {
              let t = e.type ?? er.ReadStateTypes.CHANNEL;
              (e.type = t),
                null == eO._readStates[t] && (eO._readStates[t] = {}),
                (eO._readStates[t][e.channelId] = (0, c.dangerouslyCast)(
                  e,
                  eO
                ));
            });
        },
        GUILD_CREATE: function (e) {
          let { guild: t } = e,
            n = eE();
          eO.forEach(e => {
            e.guildId === t.id && e.shouldDeleteReadState(n) && e.delete(!1);
          }),
            eR(t.channels ?? []),
            eU(t),
            eb(t);
        },
        LOAD_MESSAGES_SUCCESS: function (e) {
          let { channelId: t, isAfter: n, messages: s } = e,
            i = eO.get(t);
          i.loadedMessages = !0;
          let r = $.default.getMessages(t);
          null != r &&
            (s.length > 0 &&
            1 === F.default.compare(s[0].id, i.ackMessageId) &&
            0 === i.unreadCount
              ? i.rebuildChannelState()
              : r.hasPresent() || r.jumpTargetId === i.ackMessageId
                ? i.rebuildChannelState()
                : n &&
                  null != i.ackMessageId &&
                  r.has(i.ackMessageId, !0) &&
                  ((i.unreadCount += s.length),
                  null == i.oldestUnreadMessageId && i.rebuildChannelState())),
            eP(s.map(e => e.thread).filter(U.isNotNullish));
        },
        MESSAGE_CREATE: function (e) {
          let t,
            n,
            { channelId: i, message: r, isPushNotification: a } = e,
            o = eO.get(i);
          o.lastMessageId = r.id;
          let u = J.default.getCurrentUser(),
            d = x.default.getBasicChannel(i);
          if (null != r.author && null != u && r.author.id === u.id)
            return (
              null != o.outgoingAck && o.clearOutgoingAck(),
              eW({ channelId: i, messageId: r.id, manual: !1 })
            );
          let l = (0, y.getRootNavigationRefIfInExperiment)();
          if (l?.isReady() === !0) {
            let e = l.getCurrentRoute();
            h.default.getChatOpen(o.channelId)
              ? (t = o.channelId)
              : e?.name === "channel"
                ? (t = e.params.channelId)
                : e?.name === "guilds" && (t = e.params?.channelId);
          } else
            null == l &&
              ((t = Q.default.getChannelId()),
              (n = H.default.getCurrentSidebarChannelId(t)));
          let f = t === i || n === i;
          if (
            (f && eD(o) && !a) ||
            (null != s &&
              s.isInstanceFocused() &&
              f &&
              s.isInstanceUILocked() &&
              s.isPinned(et.OverlayWidgets.TEXT))
          )
            return o.ack({ messageId: r.id });
          (null == o.oldestUnreadMessageId || o.oldestUnreadMessageIdStale) &&
            (o.oldestUnreadMessageId = r.id),
            o.unreadCount++,
            !(
              (null != r.author && X.default.isBlocked(r.author.id)) ||
              (r.type === et.MessageTypes.RECIPIENT_REMOVE &&
                d?.type === et.ChannelTypes.GROUP_DM)
            ) &&
              (function (e, t, n) {
                if (
                  null != t &&
                  (0, C.isRawMessageMentioned)({
                    rawMessage: e,
                    userId: t.id,
                    suppressEveryone: Z.default.isSuppressEveryoneEnabled(
                      n.guildId
                    ),
                    suppressRoles: Z.default.isSuppressRolesEnabled(n.guildId),
                  })
                )
                  return !0;
                let s = x.default.getChannel(e.channel_id);
                return (
                  !!eC(s) ||
                  (!!Z.default.mentionOnAllMessages &&
                    null != s &&
                    !s.isVocal() &&
                    !Z.default.isChannelMuted(s.guild_id, s.id) &&
                    Z.default.resolvedMessageNotifications(s) ===
                      et.UserNotificationSettings.ALL_MESSAGES) ||
                  !1
                );
              })(r, u, o) &&
              o.mentionCount++;
        },
        MESSAGE_DELETE: eG,
        MESSAGE_DELETE_BULK: eG,
        MESSAGE_ACK: eW,
        CHANNEL_ACK: function (e) {
          let {
              channelId: t,
              messageId: n,
              immediate: s = !1,
              force: i = !1,
              context: r,
              location: a,
            } = e,
            o = eO.get(t),
            u = o.ack({
              messageId: n,
              local: r !== et.CURRENT_APP_CONTEXT,
              immediate: s,
              force: i,
              isExplicitUserAction: !0,
              location: a,
            });
          return null != n ? (o.rebuildChannelState(), !0) : u;
        },
        CHANNEL_LOCAL_ACK: function (e) {
          let { channelId: t } = e;
          return eO
            .get(t)
            .ack({
              messageId: void 0,
              local: !0,
              immediate: void 0,
              force: void 0,
              isExplicitUserAction: !0,
            });
        },
        CHANNEL_PINS_ACK: function (e) {
          let { channelId: t, timestamp: n } = e;
          return eO.get(t).ackPins(n);
        },
        CHANNEL_PINS_UPDATE: function (e) {
          let { channelId: t, lastPinTimestamp: n } = e,
            s = eO.get(t),
            i = eT(n);
          return s.lastPinTimestamp !== i && ((s.lastPinTimestamp = i), !0);
        },
        CHANNEL_SELECT: function (e) {
          let { channelId: t } = e,
            n = H.default.getCurrentSidebarChannelId(t),
            s = x.default.getChannel(t);
          if (null != s) {
            let e = eO.get(s.id);
            (e.ackMessageIdAtChannelSelect =
              e.ackMessageId ?? F.default.fromTimestamp(e.getAckTimestamp())),
              e.recordLastViewedTime();
          }
          ej(eu), ej(ed);
          let i = !1;
          return (
            eu !== t && ((i = eK(eu) || i), (i = eK(ed) || i)),
            (eu === t ||
              (s?.type != null &&
                et.ChannelTypesSets.GUILD_THREADS_ONLY.has(s.type))) &&
              (i = ek(t) || i),
            eu === t && (i = ek(n) || i),
            (eu = t),
            (ed = n),
            i
          );
        },
        VOICE_CHANNEL_SELECT: function (e) {
          let { channelId: t } = e;
          if (null == t) return;
          let n = eO.get(t);
          if (!n.hasMentions())
            return (
              (n.oldestUnreadMessageId = null),
              n.ack({ isExplicitUserAction: !0 })
            );
        },
        CHANNEL_CREATE: function (e) {
          let { channel: t } = e;
          if (!(0, V.isReadableType)(t.type)) return !1;
          let n = eO.get(t.id);
          (n.lastMessageId = t.lastMessageId),
            (n.lastPinTimestamp = eT(t.lastPinTimestamp));
        },
        THREAD_CREATE: function (e) {
          let { channel: t } = e;
          (function (e) {
            if (!V.ALL_CHANNEL_TYPES.has(e.type)) return 0;
            let t = eO.get(e.id);
            (t.lastMessageId = e.lastMessageId),
              (t.lastPinTimestamp = eT(e.lastPinTimestamp)),
              t.syncThreadSettings(),
              e.ownerId === B.default.getId() && (t.loadedMessages = !0);
          })(t),
            (function (e) {
              let t = e.parent_id;
              eO.get(t).lastMessageId = e.id;
              let n = J.default.getCurrentUser();
              if (e.ownerId === n?.id)
                (eO.get(e.id)._persisted = !0),
                  eW({ channelId: t, messageId: e.id, manual: !1 });
            })(t);
        },
        THREAD_UPDATE: function (e) {
          let { channel: t } = e;
          return (
            !!V.ALL_CHANNEL_TYPES.has(t.type) &&
            eO.get(t.id).syncThreadSettings()
          );
        },
        THREAD_LIST_SYNC: function (e) {
          let { threads: t } = e;
          t.forEach(e => {
            if (!V.ALL_CHANNEL_TYPES.has(e.type)) return;
            let t = eO.get(e.id);
            if (
              ((t.lastMessageId = e.lastMessageId),
              (t.lastPinTimestamp = eT(e.lastPinTimestamp)),
              (t._isThread = !0),
              (t._isActiveThread = !0),
              (t._isJoinedThread = P.default.hasJoined(e.id)),
              e.isForumPost())
            ) {
              let t = eO.get(e.parent_id);
              0 > F.default.compare(t.lastMessageId, e.id) &&
                (t.lastMessageId = e.id);
            }
          });
        },
        LOAD_THREADS_SUCCESS: eF,
        LOAD_ARCHIVED_THREADS_SUCCESS: eF,
        SEARCH_FINISH: eB,
        MOD_VIEW_SEARCH_FINISH: eB,
        THREAD_MEMBER_UPDATE: function (e) {
          let { id: t } = e;
          return eO.get(t).syncThreadSettings();
        },
        THREAD_MEMBERS_UPDATE: function (e) {
          return (
            (0, b.doesThreadMembersActionAffectMe)(e) &&
            eO.get(e.id).syncThreadSettings()
          );
        },
        CHANNEL_DELETE: ex,
        THREAD_DELETE: ex,
        WINDOW_FOCUS: function (e) {
          let t = !1;
          for (let [n, s] of F.default.entries(em))
            s === e.windowId &&
              (t =
                (function (e, t) {
                  if (null == e) return !1;
                  let n = eO.get(e);
                  return (
                    !t && !n.hasUnread() && (n.oldestUnreadMessageIdStale = !0),
                    ek(e)
                  );
                })(n, e.focused) || t);
          return t;
        },
        UPDATE_CHANNEL_DIMENSIONS: function (e) {
          let { channelId: t } = e;
          return ek(t);
        },
        CURRENT_USER_UPDATE: function () {
          el = null;
        },
        DRAWER_OPEN: function () {
          if (null != eu) {
            let e = eO.get(eu);
            !e.hasUnread() && (e.oldestUnreadMessageIdStale = !0);
          }
          return !1;
        },
        DRAWER_CLOSE: function () {
          return ek(eu);
        },
        BULK_ACK: function (e) {
          var t, n, s;
          let { channels: i, context: r, onFinished: a } = e;
          (t = i.filter(
            e =>
              null != e.messageId && eX.hasUnread(e.channelId, e.readStateType)
          )),
            (n = r),
            (s = a),
            t.forEach(e => {
              let { channelId: t, messageId: n, readStateType: s } = e;
              eO.get(t, s).ack({
                messageId: n,
                local: !0,
                immediate: void 0,
                force: void 0,
                isExplicitUserAction: !0,
              });
            }),
            n !== et.CURRENT_APP_CONTEXT ||
              (e_.push(
                ...t.map(e => ({
                  channel_id: e.channelId,
                  message_id: e.messageId,
                  read_state_type: e.readStateType,
                }))
              ),
              ec || eA(s));
        },
        ENABLE_AUTOMATIC_ACK: function (e) {
          let { channelId: t, windowId: n } = e;
          return (
            em[t] !== n &&
            (o()(
              void 0 === em[t],
              "handleEnableAutomaticAck: channel already visible in another window"
            ),
            (em[t] = n),
            ek(t))
          );
        },
        DISABLE_AUTOMATIC_ACK: function (e) {
          let { channelId: t } = e;
          return (em[t] = void 0), !1;
        },
        GUILD_FEATURE_ACK: ez,
        GUILD_SCHEDULED_EVENT_CREATE: function (e) {
          let { guildScheduledEvent: t } = e,
            n = t.guild_id,
            s = eO.get(t.guild_id, er.ReadStateTypes.GUILD_EVENT);
          if (((s.lastMessageId = t.id), eH(t))) {
            ez({
              type: "GUILD_FEATURE_ACK",
              id: n,
              ackType: er.ReadStateTypes.GUILD_EVENT,
              ackedId: t.id,
              local: !1,
            });
            return;
          }
          !Z.default.isMuteScheduledEventsEnabled(n) && s.mentionCount++;
        },
        GUILD_SCHEDULED_EVENT_UPDATE: function (e) {
          let { guildScheduledEvent: t } = e,
            n = t.guild_id;
          if (
            eH(t) ||
            ![
              ei.GuildScheduledEventStatus.CANCELED,
              ei.GuildScheduledEventStatus.COMPLETED,
            ].includes(t.status)
          )
            return !1;
          eO.get(n, er.ReadStateTypes.GUILD_EVENT).handleGuildEventRemoval(
            n,
            t.id
          );
        },
        GUILD_SCHEDULED_EVENT_DELETE: function (e) {
          let { guildScheduledEvent: t } = e,
            n = t.guild_id;
          if (eH(t)) return !1;
          eO.get(
            t.guild_id,
            er.ReadStateTypes.GUILD_EVENT
          ).handleGuildEventRemoval(n, t.id);
        },
        GUILD_DELETE: function (e) {
          let { guild: t } = e;
          return eO.clear(t.id, er.ReadStateTypes.GUILD_EVENT);
        },
        GUILD_UPDATE: function (e) {
          let { guild: t } = e,
            n = t.latest_onboarding_question_id;
          if (null == n) return;
          let s = eO.get(t.id, er.ReadStateTypes.GUILD_ONBOARDING_QUESTION);
          (s._guildId = t.id), (s.lastMessageId = n);
        },
        RESORT_THREADS: function (e) {
          let { channelId: t } = e;
          return ek(t);
        },
        CHANNEL_RTC_UPDATE_CHAT_OPEN: function (e) {
          let { channelId: t, chatOpen: n } = e;
        },
        DECAY_READ_STATES: eI,
        NOTIFICATION_CENTER_ITEM_CREATE: function (e) {
          let { item: t } = e;
          if (!(0, N.inNotificationCenterEnabled)()) return !1;
          let n = J.default.getCurrentUser()?.id;
          if (null == n) return !1;
          let s = eO.get(n, er.ReadStateTypes.NOTIFICATION_CENTER);
          s.lastMessageId = t.id;
          if ((0, A.default.active)) {
            e$(n, er.ReadStateTypes.NOTIFICATION_CENTER, t.id, !1);
            return;
          }
          s.mentionCount++;
        },
        RELATIONSHIP_ADD: function (e) {
          let t = J.default.getCurrentUser();
          if (
            !(0, N.inNotificationCenterEnabled)() ||
            null == t ||
            null == e.relationship.since ||
            (e.relationship.type !== et.RelationshipTypes.PENDING_INCOMING &&
              e.relationship.type !== et.RelationshipTypes.FRIEND)
          )
            return !1;
          let n = eO.get(t.id, er.ReadStateTypes.NOTIFICATION_CENTER),
            s = e.relationship.type === et.RelationshipTypes.FRIEND,
            i = s
              ? new Date(Date.now()).getTime()
              : new Date(e.relationship.since).getTime(),
            r =
              null != n.ackMessageId
                ? F.default.extractTimestamp(n.ackMessageId)
                : 0;
          r < i &&
            ((n.lastMessageId = F.default.fromTimestamp(i)),
            (0, A.default.active)
              ? e$(t.id, er.ReadStateTypes.NOTIFICATION_CENTER, void 0, !1)
              : s
                ? n.mentionCount--
                : n.mentionCount++);
        },
        RELATIONSHIP_REMOVE: function (e) {
          let t = J.default.getCurrentUser();
          if (
            !(0, N.inNotificationCenterEnabled)() ||
            null == t ||
            null == e.relationship.since ||
            e.relationship.type !== et.RelationshipTypes.PENDING_INCOMING
          )
            return !1;
          let n = eO.get(t.id, er.ReadStateTypes.NOTIFICATION_CENTER),
            s = new Date(e.relationship.since).getTime();
          (null != n.ackMessageId
            ? F.default.extractTimestamp(n.ackMessageId)
            : 0) <= s && (n.mentionCount = Math.max(0, n.mentionCount - 1));
        },
        NOTIFICATION_CENTER_ITEMS_ACK: function (e) {
          let { ids: t, optimistic: n } = e;
          if (n || !(0, N.inNotificationCenterEnabled)() || A.default.active)
            return !1;
          let s = J.default.getCurrentUser()?.id;
          if (null == s) return !1;
          let i = eO.get(s, er.ReadStateTypes.NOTIFICATION_CENTER);
          t.forEach(e => {
            0 > F.default.compare(i.ackMessageId, e) &&
              (i.mentionCount = Math.max(i.mentionCount - 1, 0));
          });
        },
        USER_NON_CHANNEL_ACK: function (e) {
          let { ackType: t, ackedId: n, local: s } = e,
            i = J.default.getCurrentUser()?.id;
          return null != i && e$(i, t, n, s);
        },
        PASSIVE_UPDATE_V1: function (e) {
          let t = !1;
          for (let n of e.channels ?? []) {
            let e = eO.get(n.id),
              s = eT(n.lastPinTimestamp);
            (e.lastMessageId !== n.lastMessageId || e.lastPinTimestamp !== s) &&
              ((t = !0),
              (e.lastMessageId = n.lastMessageId),
              (e.lastPinTimestamp = s));
          }
          return t;
        },
        CLEAR_OLDEST_UNREAD_MESSAGE: function (e) {
          let { channelId: t } = e;
          return eK(t);
        },
        TRY_ACK: function (e) {
          let { channelId: t } = e;
          return ek(t);
        },
      });
      var eQ = eX;
    },
    995441: function (e, t, n) {
      "use strict";
      let s;
      n.r(t),
        n.d(t, {
          default: function () {
            return D;
          },
        }),
        n("733860");
      var i = n("392711"),
        r = n.n(i),
        a = n("661223"),
        o = n("986329"),
        u = n("312916"),
        d = n("857211"),
        l = n("331258"),
        f = n("731865"),
        _ = n("327271"),
        c = n("467006");
      let g = {},
        m = !1;
      function h(e) {
        return (
          null == g[e] &&
            (g[e] = {
              searchId: e,
              searchType: E(e),
              isIndexing: !1,
              isHistoricalIndexing: !1,
              isSearching: !1,
              analyticsId: null,
              editorState: null,
              offset: 0,
              query: null,
              hasError: !1,
              searchFetcher: null,
              rawResults: null,
              totalResults: 0,
              documentsIndexed: 0,
              resultsBlocked: 0,
              showBlockedResults: !1,
              showNoResultsAlt: !1,
            }),
          g[e]
        );
      }
      function E(e) {
        return e === c.SearchTypes.DMS
          ? c.SearchTypes.DMS
          : e === c.FAVORITES
            ? c.SearchTypes.FAVORITES
            : null != _.default.getGuild(e)
              ? c.SearchTypes.GUILD
              : null != f.default.getChannel(e)
                ? c.SearchTypes.CHANNEL
                : null;
      }
      function p(e, t) {
        let n =
          arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
        if (null == e) return n;
        let s = g[e];
        return null == s ? n : t(s);
      }
      let v = "SearchStore",
        y = !1,
        I = {},
        T = null;
      function S(e) {
        let { searchId: t, query: n } = e;
        if ("string" != typeof n || "" === (n = n.trim())) return;
        let s = (I[t] = I[t] ?? []),
          i = s.indexOf(n);
        -1 !== i
          ? (s.splice(i, 1), s.unshift(n))
          : null != s[0] && "" !== s[0] && n.startsWith(s[0])
            ? (s[0] = n)
            : i < 0 && s.unshift(n),
          s.length > 5 && s.splice(5, s.length),
          o.default.set(v, { history: I });
      }
      function C(e) {
        let { searchId: t } = e,
          n = g[t];
        if (null == n) return !1;
        null != n.searchFetcher && n.searchFetcher.cancel(), delete g[t];
      }
      function A(e) {
        if (e === T) return !1;
        null != e && null == g[e] && h(e), (T = e);
      }
      class N extends a.default.Store {
        static #e = (this.displayName = "SearchStore");
        initialize() {
          this.waitFor(_.default, f.default);
          let e = o.default.get(v);
          if (e?.history != null) {
            var t;
            Object.keys((t = e.history)).forEach(e => {
              Array.isArray(t[e]) &&
                (t[e] = t[e].filter(e => "string" == typeof e && e.trim())),
                (!Array.isArray(t[e]) || 0 === t[e].length) && delete t[e];
            }),
              (I = t);
          }
          y = !!o.default.get("tokenized");
        }
        isOpen() {
          return m;
        }
        getCurrentSearchModalType() {
          return s;
        }
        getCurrentSearchId() {
          return T;
        }
        isActive() {
          let e =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : T;
          return (
            null != e &&
            (this.isIndexing(e) || this.isSearching(e) || this.hasResults(e))
          );
        }
        isTokenized() {
          return y;
        }
        getSearchType(e) {
          return p(e ?? T, e => e.searchType);
        }
        getRawResults(e) {
          return p(e, e => e.rawResults);
        }
        hasResults(e) {
          return null != p(e, e => e.rawResults);
        }
        isIndexing(e) {
          return p(e, e => e.isIndexing) || !1;
        }
        isHistoricalIndexing(e) {
          return p(e, e => e.isHistoricalIndexing) || !1;
        }
        isSearching(e) {
          return p(e, e => e.isSearching) || !1;
        }
        getAnalyticsId(e) {
          return p(e, e => e.analyticsId);
        }
        getResultsBlocked(e) {
          return p(e, e => e.resultsBlocked);
        }
        getDocumentsIndexedCount(e) {
          return p(e, e => e.documentsIndexed);
        }
        getSearchFetcher(e) {
          return p(e, e => e.searchFetcher);
        }
        getTotalResults(e) {
          return p(e, e => e.totalResults) ?? 0;
        }
        getEditorState(e) {
          return p(e, e => e.editorState);
        }
        getHistory(e) {
          return I[e];
        }
        getOffset(e) {
          return p(e, e => e.offset) ?? 0;
        }
        getQuery(e) {
          return p(e, e => e.query);
        }
        hasError(e) {
          return p(e, e => e.hasError) ?? !1;
        }
        shouldShowBlockedResults(e) {
          return p(e, e => e.showBlockedResults, !1) ?? !1;
        }
        shouldShowNoResultsAlt(e) {
          return p(e, e => e.showNoResultsAlt, !1) ?? !1;
        }
        getResultsState(e) {
          return {
            isSearching: this.isSearching(e),
            isIndexing: this.isIndexing(e),
            isHistoricalIndexing: this.isHistoricalIndexing(e),
            documentsIndexed: this.getDocumentsIndexedCount(e),
            offset: this.getOffset(e),
            totalResults: this.getTotalResults(e),
            hasError: this.hasError(e),
            showBlockedResults: this.shouldShowBlockedResults(e),
            showNoResultsAlt: this.shouldShowNoResultsAlt(e),
          };
        }
      }
      var D = new N(u.default, {
        SEARCH_START: function (e) {
          let { queryString: t, searchId: n, query: s } = e,
            i = h(n);
          null != i.searchFetcher &&
            (i.searchFetcher.cancel(), (i.searchFetcher = null));
          let a = i.searchType,
            o = new d.default(n, a, s);
          (i.searchFetcher = o),
            (i.isSearching = !0),
            (i.rawResults = null),
            (i.analyticsId = null),
            (i.query = r().omit(s, "type")),
            (i.offset = s.offset ?? 0),
            (i.showBlockedResults = !1),
            S({ type: "SEARCH_ADD_HISTORY", searchId: n, query: t });
          let _ =
            n === c.FAVORITES
              ? f.default.getChannel(n)?.guild_id
              : a === c.SearchTypes.GUILD
                ? n
                : null;
          o.fetch(
            e => {
              u.default.dispatch({
                type: "SEARCH_FINISH",
                searchId: n,
                guildId: _,
                analyticsId: e.body.analytics_id,
                totalResults: e.body.total_results,
                messages: e.body.messages,
                threads: e.body.threads ?? [],
                members: (e.body.members ?? []).map(e => (0, l.default)(e)),
                hasError: !1,
                doingHistoricalIndex: e.body.doing_deep_historical_index,
                documentsIndexed: e.body.documents_indexed,
              });
            },
            () => {
              u.default.dispatch({ type: "SEARCH_INDEXING", searchId: n });
            },
            () => {
              u.default.dispatch({
                type: "SEARCH_FINISH",
                searchId: n,
                guildId: _,
                messages: [],
                threads: [],
                members: [],
                totalResults: 0,
                analyticsId: null,
                hasError: !0,
                doingHistoricalIndex: !1,
                documentsIndexed: 0,
              });
            }
          );
        },
        SEARCH_INDEXING: function (e) {
          let { searchId: t } = e,
            n = h(t);
          (n.isIndexing = !0),
            (n.isHistoricalIndexing = !0),
            (n.isSearching = !1);
        },
        SEARCH_FINISH: function (e) {
          let { searchId: t } = e,
            n = h(t);
          (n.isSearching = !1),
            (n.isIndexing = !1),
            (n.isHistoricalIndexing = e.doingHistoricalIndex || !1),
            (n.searchFetcher = null),
            (n.totalResults = e.totalResults),
            (n.hasError = e.hasError),
            (n.analyticsId = e.analyticsId),
            (n.documentsIndexed =
              null != e.documentsIndexed ? e.documentsIndexed : 0),
            (n.showNoResultsAlt = 0.05 > Math.random()),
            (n.rawResults = e.messages),
            null == n.query && (n.hasError = !0);
        },
        SEARCH_EDITOR_STATE_CLEAR: C,
        SEARCH_ENSURE_SEARCH_STATE: function (e) {
          let { searchId: t } = e;
          null != t && h(t);
        },
        SEARCH_EDITOR_STATE_CHANGE: function (e) {
          let { searchId: t, editorState: n } = e;
          h(t).editorState = n;
        },
        SEARCH_SET_SHOW_BLOCKED_RESULTS: function (e) {
          let { searchId: t, showBlocked: n } = e;
          h(t).showBlockedResults = n;
        },
        SEARCH_SCREEN_OPEN: function (e) {
          let { searchId: t } = e;
          A(t);
        },
        CHANNEL_SELECT: function (e) {
          let { guildId: t, channelId: n } = e;
          A(t ?? n);
        },
        CHANNEL_TOGGLE_MEMBERS_SECTION: function () {
          return null != T && C({ searchId: T });
        },
        SEARCH_CLEAR_HISTORY: function (e) {
          let { searchId: t } = e;
          null == t
            ? (o.default.remove(v), (I = {}))
            : (delete I[t], o.default.set(v, { history: I }));
        },
        SEARCH_REMOVE_HISTORY: function (e) {
          let { searchId: t, query: n } = e;
          null != I[t] &&
            ((I[t] = I[t].filter(e => e !== n)),
            o.default.set(v, { history: I }));
        },
        SEARCH_ADD_HISTORY: S,
        LOGOUT: function () {
          o.default.remove(v), (I = {});
        },
        CONNECTION_OPEN: function () {
          Object.keys(g).forEach(e => {
            null != g[e] && (g[e].searchType = E(e));
          });
        },
        SEARCH_MODAL_OPEN: function (e) {
          let { searchId: t, searchType: n } = e;
          null != t && (T = t), (m = !0), (s = n);
        },
        SEARCH_MODAL_CLOSE: function () {
          (m = !1), (s = void 0);
        },
      });
    },
    145080: function (e, t, n) {
      "use strict";
      let s, i;
      n.r(t),
        n.d(t, {
          default: function () {
            return H;
          },
        });
      var r = n("348327"),
        a = n.n(r),
        o = n("392711"),
        u = n.n(o),
        d = n("661223"),
        l = n("312916"),
        f = n("774445"),
        _ = n("199643"),
        c = n("567927"),
        g = n("362939"),
        m = n("991400"),
        h = n("775822"),
        E = n("585741"),
        p = n("262047"),
        v = n("919866"),
        y = n("551364"),
        I = n("599027"),
        T = n("952862"),
        S = n("565639"),
        C = n("706319"),
        A = n("467006");
      let N = !1,
        D = A.StatusTypes.ONLINE,
        O = A.StatusTypes.UNKNOWN,
        R = 0,
        P = [],
        b = !1,
        M = !0,
        V = Object.freeze([]),
        L = [];
      function k(e) {
        return (0, E.shouldShareApplicationActivity)(e, I.default);
      }
      function w(e) {
        switch (e.type) {
          case A.ActivityTypes.LISTENING:
            if ((0, f.default)(e)) return c.default.shouldShowActivity();
            if (null != e.application_id) return k(e.application_id);
            return !1;
          case A.ActivityTypes.PLAYING:
            return null != e.application_id
              ? k(e.application_id)
              : (function (e) {
                  let t = v.default.getGameByName(e);
                  return null != t ? k(t.id) : g.ShowCurrentGame.getSetting();
                })(e.name);
          case A.ActivityTypes.STREAMING:
          case A.ActivityTypes.WATCHING:
          default:
            return null == e.application_id || k(e.application_id);
        }
      }
      function U() {
        (R = y.default.getIdleSince() ?? 0),
          (b = y.default.isAFK()),
          M
            ? ((D = O), G())
            : (D = N ? A.StatusTypes.INVISIBLE : g.StatusSetting.getSetting()),
          D === A.StatusTypes.ONLINE && R > 0 && (D = A.StatusTypes.IDLE);
        let e = !1,
          t =
            M || D === A.StatusTypes.INVISIBLE
              ? []
              : T.default.getActivities().filter(w);
        !a()(P, t) && ((P = t), (e = !0));
        let n = C.default.getRemoteActivities();
        if ((V !== n && ((V = n), (e = !0)), e)) {
          let e = P.find(e => e.type === A.ActivityTypes.CUSTOM_STATUS);
          L =
            P.filter(e => e.type !== A.ActivityTypes.CUSTOM_STATUS).length > 0
              ? P
              : null != e
                ? [
                    e,
                    ...u()(V)
                      .filter(e => e.type !== A.ActivityTypes.CUSTOM_STATUS)
                      .uniqBy(e => `${e.type}:${e.application_id}:${e.name}`)
                      .value(),
                  ]
                : u().uniqBy(V, e => `${e.type}:${e.application_id}:${e.name}`);
        }
      }
      function G() {
        (s = void 0), (i = void 0);
      }
      function F() {
        (M = !1),
          (O = A.StatusTypes.UNKNOWN),
          U(),
          S.default.setCurrentUserOnConnectionOpen(D, L);
      }
      class B extends d.default.Store {
        static #e = (this.displayName = "SelfPresenceStore");
        initialize() {
          this.waitFor(
            y.default,
            m.default,
            T.default,
            C.default,
            I.default,
            v.default
          ),
            this.syncWith([T.default], U);
        }
        getLocalPresence() {
          return { status: D, since: R, activities: P, afk: b, broadcast: i };
        }
        getStatus() {
          return D;
        }
        getActivities() {
          let e =
            !(arguments.length > 0) || void 0 === arguments[0] || arguments[0];
          return e ? L : P;
        }
        getPrimaryActivity() {
          let e =
            !(arguments.length > 0) || void 0 === arguments[0] || arguments[0];
          return e ? L[0] : P[0];
        }
        getApplicationActivity(e) {
          let t =
            !(arguments.length > 1) || void 0 === arguments[1] || arguments[1];
          return this.findActivity(t => t.application_id === e, t);
        }
        findActivity(e) {
          let t =
            !(arguments.length > 1) || void 0 === arguments[1] || arguments[1];
          return this.getActivities(t).find(e);
        }
        getBroadcast() {
          return s;
        }
      }
      var H = new B(l.default, {
        START_SESSION: U,
        CONNECTION_OPEN: function () {
          F();
        },
        CONNECTION_OPEN_SUPPLEMENTAL: F,
        OVERLAY_INITIALIZE: F,
        CONNECTION_CLOSED: U,
        IDLE: U,
        AFK: U,
        RUNNING_GAMES_CHANGE: U,
        STREAMING_UPDATE: U,
        USER_SETTINGS_PROTO_UPDATE: U,
        LOCAL_ACTIVITY_UPDATE: U,
        SPOTIFY_PLAYER_STATE: U,
        SPOTIFY_PLAYER_PLAY: U,
        USER_CONNECTIONS_UPDATE: U,
        SESSIONS_REPLACE: U,
        RPC_APP_DISCONNECTED: U,
        LIBRARY_FETCH_SUCCESS: U,
        LIBRARY_APPLICATION_FLAGS_UPDATE_SUCCESS: U,
        LOGOUT: function () {
          (M = !0), (O = D), U();
        },
        EMBEDDED_ACTIVITY_CLOSE: U,
        EMBEDDED_ACTIVITY_OPEN: U,
        FORCE_INVISIBLE: function (e) {
          return (N = e.invisible), U();
        },
        WINDOW_FOCUS: function () {
          return (N = !1), U();
        },
        BROADCAST_START: function (e) {
          (s = e.broadcast), (i = (0, _.broadcastToServer)(e.broadcast));
        },
        BROADCAST_STOP: G,
        CHANNEL_DELETE: function (e) {
          let { channel: t } = e;
          t instanceof h.ChannelRecordBase &&
            t?.isBroadcastChannel() &&
            t?.ownerId === p.default.getId() &&
            ((s = void 0), (i = void 0));
        },
      });
    },
    24606: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return I;
          },
        }),
        n("789020");
      var s = n("661223"),
        i = n("312916"),
        r = n("694574"),
        a = n("731865"),
        o = n("386130"),
        u = n("407807"),
        d = n("232733"),
        l = n("467006"),
        f = n("389570");
      let _ = new Map(),
        c = null,
        g = null,
        m = null;
      function h(e, t) {
        let n = _.get(e);
        if (null == n) return !1;
        let s = n.delete(t);
        return 0 === n.size && _.delete(e), s;
      }
      function E(e, t, n) {
        return ((_.get(e)?.get(t)?.flags ?? f.SpeakingFlags.NONE) & n) === n;
      }
      function p(e, t) {
        let n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
          s = _.get(e);
        if (null == s) return !1;
        for (let [e, { flags: i }] of s)
          if ((!n || e !== c) && (i & t) === t) return !0;
        return !1;
      }
      function v(e) {
        let { user: t, sessionId: n } = e;
        (c = t.id), (g = n), (m = null);
      }
      class y extends s.default.Store {
        static #e = (this.displayName = "SpeakingStore");
        initialize() {
          this.mustEmitChanges(
            e =>
              "CONNECTION_OPEN" !== e.type && "VOICE_STATE_UPDATES" !== e.type
          ),
            this.waitFor(u.default);
        }
        getSpeakingDuration(e, t) {
          let n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : f.MediaEngineContextTypes.DEFAULT,
            s = _.get(n)?.get(e)?.since;
          return null != s ? t - s : 0;
        }
        getSpeakers() {
          let e =
            arguments.length > 0 && void 0 !== arguments[0]
              ? arguments[0]
              : f.MediaEngineContextTypes.DEFAULT;
          return Array.from(_.get(e)?.keys() ?? []).filter(t =>
            E(e, t, f.SpeakingFlags.VOICE)
          );
        }
        isSpeaking(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : f.MediaEngineContextTypes.DEFAULT;
          return E(t, e, f.SpeakingFlags.VOICE);
        }
        isPrioritySpeaker(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : f.MediaEngineContextTypes.DEFAULT;
          return E(t, e, f.SpeakingFlags.PRIORITY);
        }
        isSoundSharing(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : f.MediaEngineContextTypes.DEFAULT;
          return E(t, e, f.SpeakingFlags.SOUNDSHARE);
        }
        isAnyoneElseSpeaking() {
          let e =
            arguments.length > 0 && void 0 !== arguments[0]
              ? arguments[0]
              : f.MediaEngineContextTypes.DEFAULT;
          return p(e, f.SpeakingFlags.VOICE, !0);
        }
        isCurrentUserSpeaking() {
          let e =
            arguments.length > 0 && void 0 !== arguments[0]
              ? arguments[0]
              : f.MediaEngineContextTypes.DEFAULT;
          return null != c && this.isSpeaking(c, e);
        }
        isAnyonePrioritySpeaking() {
          let e =
            arguments.length > 0 && void 0 !== arguments[0]
              ? arguments[0]
              : f.MediaEngineContextTypes.DEFAULT;
          return p(e, f.SpeakingFlags.VOICE | f.SpeakingFlags.PRIORITY);
        }
        isCurrentUserPrioritySpeaking() {
          let e =
            arguments.length > 0 && void 0 !== arguments[0]
              ? arguments[0]
              : f.MediaEngineContextTypes.DEFAULT;
          return (
            null != c && this.isPrioritySpeaker(c, e) && this.isSpeaking(c, e)
          );
        }
      }
      var I = new y(i.default, {
        CONNECTION_OPEN: v,
        OVERLAY_INITIALIZE: v,
        SPEAKING: function (e) {
          let { context: t, userId: n, speakingFlags: s } = e;
          if ((s & f.SpeakingFlags.PRIORITY) === f.SpeakingFlags.PRIORITY) {
            let e = a.default.getChannel(d.default.getVoiceChannelId());
            null != e &&
            r.default.can({
              permission: l.Permissions.PRIORITY_SPEAKER,
              user: n,
              context: e,
            })
              ? o.default.setCanHavePriority(n, !0)
              : (o.default.setCanHavePriority(n, !1),
                (s &= ~f.SpeakingFlags.PRIORITY));
          }
          return (function (e, t, n) {
            let s = (function () {
                let e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : f.MediaEngineContextTypes.DEFAULT,
                  t = _.get(e);
                return null == t && ((t = new Map()), _.set(e, t)), t;
              })(e),
              i = s.get(t),
              r = i?.flags ?? 0;
            if (0 === r && 0 === n) return !1;
            if (0 === n) s.delete(t), 0 === s.size && _.delete(e);
            else {
              let e = i?.since ?? null,
                a = (r & f.SpeakingFlags.VOICE) === f.SpeakingFlags.VOICE,
                o = (n & f.SpeakingFlags.VOICE) === f.SpeakingFlags.VOICE;
              a !== o && (e = o ? Date.now() : null),
                s.set(t, { flags: n, since: e });
            }
            return !0;
          })(t, n, s);
        },
        VOICE_STATE_UPDATES: function (e) {
          let { voiceStates: t } = e;
          return t.reduce((e, t) => {
            let { userId: n, channelId: s, sessionId: i } = t,
              r = !1,
              a = m;
            return (
              n === c && i === g && (m = s ?? null),
              a !== m && (r = _.delete(f.MediaEngineContextTypes.DEFAULT) || r),
              null == s
                ? (r =
                    n === c && i === g
                      ? _.delete(f.MediaEngineContextTypes.DEFAULT) || r
                      : h(f.MediaEngineContextTypes.DEFAULT, n) || r)
                : n === c && i !== g
                  ? (r = _.delete(f.MediaEngineContextTypes.DEFAULT) || r)
                  : n !== c &&
                    s !== u.default.getChannelId() &&
                    (r = h(f.MediaEngineContextTypes.DEFAULT, n) || r),
              r || e
            );
          }, !1);
        },
        LOBBY_VOICE_STATE_UPDATE: function (e) {},
      });
    },
    69046: function (e, t, n) {
      "use strict";
      let s, i;
      n.r(t),
        n.d(t, {
          default: function () {
            return U;
          },
        }),
        n("653041");
      var r = n("512722"),
        a = n.n(r),
        o = n("392711"),
        u = n.n(o),
        d = n("661223"),
        l = n("325091"),
        f = n("312916"),
        _ = n("224022"),
        c = n("436708"),
        g = n("188304"),
        m = n("354831"),
        h = n("18480"),
        E = n("501769"),
        p = n("311545"),
        v = n("262047"),
        y = n("731865"),
        I = n("386130"),
        T = n("565639"),
        S = n("407807"),
        C = n("467006"),
        A = n("389570");
      let N = {},
        D = {},
        O = {},
        R = {},
        P = C.StreamLayouts.THEATRE,
        b = {},
        M = [];
      function V() {
        u().forEach(b, (e, t) => {
          e.destroy(e.isOwner ? "sender-disconnect" : "receiver-disconnect"),
            delete b[t];
        });
      }
      function L(e) {
        e.filter(e => {
          let { connection: t } = e;
          return t.context === A.MediaEngineContextTypes.STREAM;
        }).forEach(e => {
          let { stats: t } = e;
          f.default.dispatch({ type: "STREAM_STATS_UPDATE", stats: t });
        });
      }
      function k() {
        return !0;
      }
      class w extends d.default.Store {
        static #e = (this.displayName = "StreamRTCConnectionStore");
        getActiveStreamKey() {
          return (0, h.default)(I.default) ? i : null;
        }
        getAllActiveStreamKeys() {
          return Object.keys(b);
        }
        getRTCConnection(e) {
          return b[e];
        }
        getStatsHistory(e, t, n) {
          if (!(0, h.default)(I.default) || null == t) return null;
          if (n) {
            let n = p.default.getActiveStreamForUser(t, e);
            if (null == n || 0 === p.default.getViewerIds(n).length)
              return null;
          }
          return M.map(e =>
            n
              ? (function (e) {
                  let t = e.find(e => "video" === e.type);
                  return null != t && "video" === t.type
                    ? {
                        type: "streamer",
                        packetsSentOrReceived: t.packetsSent ?? 0,
                        packetsLost: t.packetsLost ?? 0,
                        frameRate: t.frameRateEncode ?? 0,
                        resolution: t.resolution?.height ?? 0,
                        bitrate: 0,
                      }
                    : null;
                })(e.rtp.outbound)
              : (function (e) {
                  if (null == e) return null;
                  let t = e.find(e => "video" === e.type);
                  return null != t && "video" === t.type
                    ? {
                        type: "spectator",
                        packetsSentOrReceived: t.packetsReceived ?? 0,
                        packetsLost: t.packetsLost ?? 0,
                        frameRate: t.frameRateDecode ?? 0,
                        bitrate: t.bitrate ?? 0,
                        resolution: t.resolution?.height ?? 0,
                      }
                    : null;
                })(e.rtp.inbound[t])
          );
        }
        getQuality() {
          if (!(0, h.default)(I.default)) return C.RTCConnectionQuality.UNKNOWN;
          let e = this.getActiveStreamKey(),
            t = null != e ? b[e] : null;
          return null != t ? t.quality : C.RTCConnectionQuality.UNKNOWN;
        }
        getMediaSessionId(e) {
          if (null == e) return null;
          let t = b[e];
          if (null != t) return null != t ? t.getMediaSessionId() : null;
        }
        getRtcConnectionId(e) {
          if (null == e) return null;
          let t = b[e];
          if (null != t) return null != t ? t.getRTCConnectionId() : null;
        }
        getVideoStats(e) {
          if (null == e) return null;
          let t = b[e];
          return null != t ? t.getVideoStats() : null;
        }
        getHostname(e) {
          if (null == e) return "";
          let t = b[e];
          return null != t ? (null != t.hostname ? t.hostname : "") : "";
        }
        getRegion(e) {
          if (null == e) return null;
          let t = b[e];
          return null != t ? t.getRegion() : null;
        }
        getMaxViewers(e) {
          if (null == e) return null;
          let t = b[e];
          return null != t ? t.getMaxViewers() : null;
        }
        getStreamSourceId(e) {
          return R[e];
        }
      }
      var U = new w(
        f.default,
        !I.default.isSupported() || __OVERLAY__
          ? {}
          : {
              CONNECTION_OPEN: function (e) {
                (s = e.sessionId), (i = null), V();
              },
              CONNECTION_CLOSED: function () {
                (s = null), (i = null), V();
              },
              RTC_CONNECTION_STATE: k,
              RTC_CONNECTION_PING: k,
              RTC_CONNECTION_LOSS_RATE: k,
              RTC_CONNECTION_UPDATE_ID: function (e) {
                return u().some(b, t => t === e.connection);
              },
              STREAM_START: function (e) {
                let {
                    streamType: t,
                    guildId: n,
                    channelId: s,
                    appContext: i,
                    pid: r,
                    sourceId: a,
                  } = e,
                  o = (0, g.encodeStreamKey)({
                    streamType: t,
                    guildId: n,
                    channelId: s,
                    ownerId: v.default.getId(),
                  });
                if (
                  ((N[o] = i),
                  u().forEach(b, e => {
                    let { analyticsContext: t } = e;
                    t.setActionContext(i);
                  }),
                  (R[o] = a),
                  (O[o] = r),
                  null != r)
                ) {
                  let e = _.default.getGameForPID(r);
                  null != e &&
                    (D[o] = { name: e.name, id: e.id, exe: e.exeName });
                }
              },
              STREAM_STOP: function (e) {
                let { appContext: t, streamKey: n } = e;
                (N[n] = t),
                  u().forEach(b, e => {
                    let { analyticsContext: n } = e;
                    n.setActionContext(t);
                  }),
                  (R[n] = null),
                  (O[n] = null);
              },
              STREAM_CREATE: function (e) {
                let {
                  streamKey: t,
                  rtcServerId: n,
                  region: r,
                  viewerIds: o,
                } = e;
                i = t;
                let u = b[t];
                if (null == u && null != n) {
                  var d, f, _;
                  null == O[t] && (D[t] = null);
                  let e = (0, g.decodeStreamKey)(t);
                  null == D[t] &&
                    null == R[t] &&
                    (D[t] = (0, m.getStreamerApplication)(e, T.default));
                  let i = y.default.getChannel(e.channelId),
                    l = null != i && i.isBroadcastChannel(),
                    h = new c.StreamRTCAnalyticsContext({
                      streamRegion: r,
                      streamApplication: D[t],
                      streamSourceType: (function (e) {
                        if (null == e) return "unknown";
                        if (
                          E.isPlatformEmbedded ||
                          platform?.name === "Chrome"
                        ) {
                          if (e.startsWith("web-contents-media-stream:"))
                            return "tab";
                          if (e.startsWith("window:")) return "window";
                          else if (e.startsWith("screen:")) return "screen";
                        } else if (platform?.name === "Firefox")
                          return "" !== e ? "window" : "screen";
                        else if (platform?.name === "Safari") return "window";
                        return "unknown";
                      })(R[t]),
                      actionContext: N[t],
                      numViewers: null != o ? o.length : 0,
                      isBroadcast: l,
                    });
                  (d = t),
                    (f = n),
                    (_ = h),
                    a()(null != s, "Creating RTCConnection without session."),
                    (u = new c.default({
                      sessionId: s,
                      streamKey: d,
                      serverId: f,
                      initialLayout: P,
                      analyticsContext: _,
                      isStreamer: null != D[d],
                      parentMediaSessionId: S.default.getMediaSessionId(),
                    })),
                    (b[t] = u);
                }
                (M = []),
                  I.default
                    .getMediaEngine()
                    .on(l.MediaEngineEvent.ConnectionStats, L);
              },
              STREAM_SERVER_UPDATE: function (e) {
                let t = b[e.streamKey];
                if (null == t) return !1;
                t.connect(e.endpoint, e.token);
              },
              STREAM_UPDATE: function (e) {
                let { streamKey: t, viewerIds: n, paused: s } = e,
                  i = b[t];
                if (null == i) return !1;
                null != n && i.analyticsContext.trackViewerCount(n.length),
                  i.streamUpdate(s);
              },
              STREAM_DELETE: function (e) {
                let { streamKey: t } = e,
                  n = b[t];
                if (null == n) return !1;
                t === i &&
                  ((i = null),
                  I.default
                    .getMediaEngine()
                    .off(l.MediaEngineEvent.ConnectionStats, L)),
                  n.destroy("stream-end"),
                  delete b[t];
              },
              STREAM_STATS_UPDATE: function (e) {
                let { stats: t } = e;
                if (null == t) return !1;
                M.push(t), M.length > 30 && M.shift();
              },
              STREAM_LAYOUT_UPDATE: function (e) {
                let { layout: t } = e;
                (P = t), Object.values(b).forEach(e => e.layoutChange(t));
              },
            }
      );
    },
    857688: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getSystemAnalyticsInfo: function () {
            return g;
          },
        });
      var s = n("661223"),
        i = n("312916"),
        r = n("328470"),
        a = n("501769"),
        o = n("432056"),
        u = n("261281");
      let d = { hashes: {} };
      async function l() {
        if (!a.isPlatformEmbedded || !(0, a.isWindows)()) return [];
        await o.default.ensureModule("discord_media");
        let e = o.default.requireModule("discord_media");
        return (await e.getSystemAnalyticsBlob()) || [];
      }
      async function f() {
        try {
          let e = (await l()).filter(e => d.hashes[e.name] !== e.hash);
          for (let { name: t, hash: n, data: s } of e)
            r.default.track(t, s),
              ((d = { hashes: { ...d.hashes } }).hashes[t] = n);
          e.length > 0 && c.emitChange();
        } catch (e) {}
      }
      class _ extends s.default.PersistedStore {
        static #e = (this.displayName = "SystemAnalyticsStore");
        static #t = (this.persistKey = "SystemAnalyticsStore");
        initialize(e) {
          (d = null != e && "object" == typeof e.hashes ? e : { hashes: {} }),
            this.waitFor(u.default);
        }
        getState() {
          return d;
        }
        async info() {
          try {
            let e = (await l()).find(e => "hardware_detected" === e.name);
            if (null == e) return null;
            return e.data;
          } catch (e) {}
        }
      }
      let c = new _(i.default, {
        START_SESSION: function () {
          return f(), !1;
        },
      });
      function g() {
        return c.info();
      }
    },
    312938: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return v;
          },
        }),
        n("653041");
      var s = n("392711"),
        i = n.n(s),
        r = n("661223"),
        a = n("312916"),
        o = n("992888"),
        u = n("194794"),
        d = n("83939"),
        l = n("911388"),
        f = n("467006"),
        _ = n("30175");
      let c = new Map(),
        g = [];
      function m(e, t) {
        return h(e)?.get(t) ?? g;
      }
      function h(e) {
        return c.get(e) ?? new Map();
      }
      function E(e, t, n) {
        let s = h(e);
        s.set(t, n), c.set(e, s);
      }
      class p extends r.default.Store {
        static #e = (this.displayName = "UploadAttachmentStore");
        getFirstUpload(e, t) {
          let n = m(e, t);
          return n.length > 0 ? n[0] : null;
        }
        hasAdditionalUploads(e, t) {
          return (m(e, t).length ?? 0) > 1;
        }
        getUploads(e, t) {
          return m(e, t);
        }
        getUploadCount(e, t) {
          return m(e, t).length ?? 0;
        }
        getUpload(e, t, n) {
          return m(e, n).find(e => e.id === t);
        }
        findUpload(e, t, n) {
          return m(e, t).find(n);
        }
      }
      var v = new p(a.default, {
        UPLOAD_ATTACHMENT_POP_FILE: function (e) {
          let { channelId: t } = e,
            n = [...m(t, l.DraftType.ChannelMessage)];
          n.shift(), E(t, l.DraftType.ChannelMessage, n);
        },
        UPLOAD_ATTACHMENT_ADD_FILES: e => {
          let {
              files: t,
              channelId: n,
              showLargeMessageDialog: s,
              draftType: r,
            } = e,
            a = [...m(n, r)];
          if (
            a.length + t.length > f.MAX_UPLOAD_COUNT &&
            r !== l.DraftType.SlashCommand &&
            r !== l.DraftType.ApplicationLauncherCommand
          ) {
            o.default.show({
              title: _.default.Messages.ATTACHMENT_TOO_MANY_ERROR_TITLE,
              body: _.default.Messages.ATTACHMENT_TOO_MANY_ERROR_MESSAGE.format(
                { limit: f.MAX_UPLOAD_COUNT }
              ),
            });
            return;
          }
          i().forEach(t, e => {
            let t = new u.CloudUpload(e, n, s, a.length);
            t.upload(), a.push(t);
          }),
            E(n, r, a);
        },
        UPLOAD_ATTACHMENT_UPDATE_FILE: function (e) {
          let {
              channelId: t,
              id: n,
              filename: s,
              description: i,
              spoiler: r,
              thumbnail: a,
              draftType: o,
            } = e,
            u = [...m(t, o)].map(
              e => (
                e.id === n &&
                  (void 0 !== s && (e.filename = s),
                  void 0 !== r && (e.spoiler = r),
                  void 0 !== i && (e.description = i),
                  void 0 !== a && (e.isThumbnail = a)),
                e
              )
            );
          E(t, o, u);
        },
        UPLOAD_ATTACHMENT_REMOVE_FILE: function (e) {
          let { channelId: t, id: n, draftType: s } = e,
            i = [...m(t, s)],
            r = i.findIndex(e =>
              (0, d.doesImageMatchUpload)({ uri: n, filename: n }, e)
            );
          r > -1 && (i.splice(r, 1)[0].cancel(), E(t, s, i));
        },
        UPLOAD_ATTACHMENT_REMOVE_FILES: function (e) {
          let { channelId: t, attachmentIds: n, draftType: s } = e,
            i = [...m(t, s)];
          n.forEach(e => {
            let t = i.findIndex(t => e === t.id);
            t > -1 && i.splice(t, 1)[0].cancel();
          }),
            E(t, s, i);
        },
        UPLOAD_ATTACHMENT_CLEAR_ALL_FILES: function (e) {
          let { channelId: t, draftType: n } = e;
          E(t, n, []);
        },
        UPLOAD_ATTACHMENT_SET_UPLOADS: function (e) {
          let { channelId: t, uploads: n, draftType: s } = e;
          E(t, s, n);
        },
        UPLOAD_ATTACHMENT_SET_FILE: function (e) {
          let { channelId: t, id: n, file: s, draftType: i } = e,
            r = [...m(t, i)].filter(e => e.id !== n),
            a = new u.CloudUpload(s, t);
          a.upload(), r.push(a), E(t, i, r);
        },
        SIDEBAR_CLOSE: function (e) {
          let { baseChannelId: t } = e;
          E(t, l.DraftType.FirstThreadMessage, []);
        },
      });
    },
    207958: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return R;
          },
        });
      var s = n("392711"),
        i = n.n(s),
        r = n("661223"),
        a = n("312916"),
        o = n("871831"),
        u = n("467006");
      let d = u.FormStates.CLOSED,
        l = null,
        f = null,
        _ = {},
        c = {},
        g = {},
        m = null,
        h = null,
        E = !1,
        p = !1,
        v = null,
        y = null,
        I = null,
        T = [],
        S = null,
        C = null;
      function A(e) {
        let t = o.default.getCurrentUser();
        if (null == t) return N();
        (f = e.section ?? f),
          (S = e.section ?? f),
          null != e.subsection && null != f && (_[f] = e.subsection),
          null != e.scrollPosition && null != f && (c[f] = e.scrollPosition),
          (p = !!e.openWithoutBackstack),
          (d = u.FormStates.OPEN),
          (g = {}),
          (h = {
            ...(m = {
              [u.UserSettingsSections.ACCOUNT]: {
                userId: t.id,
                username: t.username,
                discriminator: t.discriminator,
                email: t.email,
                avatar: t.avatar,
                password: "",
                newPassword: null,
                claimed: t.isClaimed(),
              },
            }),
          }),
          (y = e.onClose ?? null),
          (I = e.analyticsLocation ?? null),
          (T = e.analyticsLocations ?? []),
          (C = e.impressionSource ?? null);
      }
      function N() {
        (d = u.FormStates.CLOSED),
          (E = !1),
          (m = null),
          (S = null),
          (h = null),
          (l = null),
          (f = null),
          (_ = {}),
          (c = {}),
          (y = null),
          (I = null),
          (T = []),
          (C = null);
      }
      function D() {
        (d = u.FormStates.OPEN), (g = {});
      }
      class O extends r.default.Store {
        static #e = (this.displayName = "UserSettingsModalStore");
        initialize() {
          this.waitFor(o.default);
        }
        hasChanges() {
          return (
            null != h &&
            null != m &&
            (!!this.isOpen() || v === u.DrawerTabTypes.USER_SETTINGS) &&
            !i().isEqual(h, m)
          );
        }
        isOpen() {
          return E;
        }
        getPreviousSection() {
          return l;
        }
        getSection() {
          return f;
        }
        getSubsection() {
          return null != f ? _[f] : null;
        }
        getScrollPosition() {
          return null != f ? c[f] : null;
        }
        shouldOpenWithoutBackstack() {
          return p;
        }
        getProps() {
          return {
            submitting: d === u.FormStates.SUBMITTING,
            section: f,
            subsection: null != f ? _[f] : null,
            scrollPosition: null != f ? c[f] : null,
            settings: h,
            errors: g,
            hasChanges: this.hasChanges(),
            openWithoutBackstack: p,
            analyticsLocation: I,
            analyticsLocations: T,
            initialSection: S,
            impressionSource: C,
          };
        }
        get onClose() {
          return y;
        }
      }
      var R = new O(a.default, {
        USER_SETTINGS_MODAL_OPEN: function (e) {
          (E = !0), A(e);
        },
        USER_SETTINGS_MODAL_INIT: A,
        USER_SETTINGS_MODAL_CLOSE: N,
        LOGOUT: N,
        USER_SETTINGS_MODAL_SUBMIT: function () {
          d = u.FormStates.SUBMITTING;
        },
        USER_SETTINGS_MODAL_SUBMIT_FAILURE: function (e) {
          if (d !== u.FormStates.SUBMITTING) return !1;
          (d = u.FormStates.OPEN),
            (f = u.UserSettingsSections.ACCOUNT),
            (g = e.errors ?? {});
        },
        USER_SETTINGS_MODAL_SET_SECTION: function (e) {
          (l = f),
            (f = e.section),
            (I = null),
            (T = e.analyticsLocations ?? []),
            null != e.subsection && (_[f] = e.subsection);
        },
        USER_SETTINGS_MODAL_CLEAR_SUBSECTION: function (e) {
          let { forSection: t } = e;
          null != t ? delete _[t] : null != f && delete _[f];
        },
        USER_SETTINGS_MODAL_CLEAR_SCROLL_POSITION: function (e) {
          let { forSection: t } = e;
          null != t ? delete c[t] : null != f && delete c[f];
        },
        USER_SETTINGS_MODAL_UPDATE_ACCOUNT: function (e) {
          let { settings: t } = e;
          null == h && (h = {});
          let n = h[u.UserSettingsSections.ACCOUNT];
          h[u.UserSettingsSections.ACCOUNT] = { ...n, ...t };
        },
        USER_SETTINGS_MODAL_SUBMIT_COMPLETE: D,
        USER_SETTINGS_MODAL_RESET: function () {
          let e = o.default.getCurrentUser();
          D(),
            null != e &&
              (h = {
                ...(m = {
                  [u.UserSettingsSections.ACCOUNT]: {
                    userId: e.id,
                    username: e.username,
                    discriminator: e.discriminator,
                    email: e.email,
                    avatar: e.avatar,
                    password: "",
                    newPassword: null,
                    claimed: e.isClaimed(),
                  },
                }),
              });
        },
        DRAWER_SELECT_TAB: function (e) {
          return (
            (v = e.tab),
            null == f &&
              v === u.DrawerTabTypes.USER_SETTINGS &&
              A({
                type: "USER_SETTINGS_MODAL_INIT",
                section: null,
                subsection: null,
                scrollPosition: null,
                openWithoutBackstack: !1,
              })
          );
        },
      });
    },
    693873: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        });
      var s = n("661223"),
        i = n("312916"),
        r = n("467006"),
        a = n("389570");
      let o = null,
        u = null,
        d = {};
      function l(e, t) {
        let n =
            arguments.length > 2 && void 0 !== arguments[2]
              ? arguments[2]
              : null,
          s = d[e];
        if (null == s) return;
        let i = s[t ?? r.NULL_STRING_GUILD_ID];
        if (null != i) {
          for (let e of Object.values(a.MediaEngineContextTypes))
            (n === e || null == n) && delete i[e];
          d[e][t ?? r.NULL_STRING_GUILD_ID] = i;
        }
      }
      class f extends s.default.Store {
        static #e = (this.displayName = "VideoStreamStore");
        getStreamId(e, t) {
          let n =
            arguments.length > 2 && void 0 !== arguments[2]
              ? arguments[2]
              : a.MediaEngineContextTypes.DEFAULT;
          return d[e]?.[t ?? r.NULL_STRING_GUILD_ID]?.[n]?.streamId;
        }
        getUserStreamData(e, t) {
          let n =
            arguments.length > 2 && void 0 !== arguments[2]
              ? arguments[2]
              : a.MediaEngineContextTypes.DEFAULT;
          return d[e]?.[t ?? r.NULL_STRING_GUILD_ID]?.[n];
        }
      }
      var _ = new f(i.default, {
        CONNECTION_OPEN: function (e) {
          let { user: t, sessionId: n } = e;
          (o = t.id), (u = n);
        },
        OVERLAY_INITIALIZE: function (e) {
          let { user: t, sessionId: n } = e;
          (o = t.id), (u = n);
        },
        RTC_CONNECTION_VIDEO: function (e) {
          let { userId: t, guildId: n, streamId: s, context: i } = e;
          null != s
            ? !(function (e, t, n, s) {
                !(e in d) && (d[e] = {});
                let i = d[e][t ?? r.NULL_STRING_GUILD_ID] ?? {};
                d[e][t ?? r.NULL_STRING_GUILD_ID] = {
                  ...i,
                  [s]: { streamId: n },
                };
              })(t, n, s, i)
            : l(t, n, i);
        },
        VOICE_STATE_UPDATES: function (e) {
          let { voiceStates: t } = e;
          return t.reduce((e, t) => {
            let { userId: n, sessionId: s, channelId: i, guildId: a } = t;
            if (null == i && n === o) {
              if (s !== u) return e;
              d = {};
            } else {
              if (null != i || d[n]?.[a ?? r.NULL_STRING_GUILD_ID] == null)
                return e;
              l(n, a);
            }
            return !0;
          }, !1);
        },
      });
    },
    243084: function (e, t, n) {
      "use strict";
      let s, i, r;
      n.r(t),
        n.d(t, {
          default: function () {
            return v;
          },
        }),
        n("177593");
      var a = n("661223"),
        o = n("312916"),
        u = n("288004"),
        d = n("362939"),
        l = n("991400"),
        f = n("599027");
      let _ = { applicationId: null, originURL: null },
        c = _,
        g = new Set(),
        m = !1;
      function h() {
        r = null;
      }
      function E() {
        (s = null),
          (i = null),
          (g = new Set()),
          (c.applicationId = null),
          (c.originURL = null),
          h();
      }
      class p extends a.default.PersistedStore {
        static #e = (this.displayName = "TestModeStore");
        static #t = (this.persistKey = "TestModeStore");
        initialize(e) {
          (s = (c = { ...(e ?? _) }).applicationId),
            (i = c.originURL),
            this.waitFor(l.default, u.default),
            this.syncWith([l.default, u.default], () => !0),
            f.default.whenInitialized(() => {
              m = !0;
            });
        }
        inTestModeForApplication(e) {
          return s === e;
        }
        inTestModeForEmbeddedApplication(e) {
          return s === e && null != i;
        }
        shouldDisplayTestMode(e) {
          return (
            d.DeveloperMode.getSetting() && this.inTestModeForApplication(e)
          );
        }
        getState() {
          return c;
        }
        get isTestMode() {
          return null != s;
        }
        get isFetchingAuthorization() {
          return g.size > 0;
        }
        get testModeEmbeddedApplicationId() {
          return null != i ? s : null;
        }
        get testModeApplicationId() {
          return s;
        }
        get testModeOriginURL() {
          return i;
        }
        get error() {
          return r;
        }
        whenInitialized(e) {
          this.addConditionalChangeListener(() => {
            if (m) return setImmediate(e), !1;
          });
        }
      }
      var v = new p(o.default, {
        DEVELOPER_TEST_MODE_AUTHORIZATION_START: function (e) {
          let { applicationId: t } = e;
          g.add(t), (r = null);
        },
        DEVELOPER_TEST_MODE_AUTHORIZATION_SUCCESS: function (e) {
          let { applicationId: t, originURL: n } = e;
          (s = t),
            (i = n),
            g.delete(t),
            (r = null),
            (c.applicationId = t),
            (c.originURL = n);
        },
        DEVELOPER_TEST_MODE_AUTHORIZATION_FAIL: function (e) {
          let { applicationId: t, error: n } = e;
          g.delete(t), (r = n);
        },
        OVERLAY_INITIALIZE: function (e) {
          let { testModeApplicationId: t } = e;
          s = t;
        },
        DEVELOPER_TEST_MODE_RESET_ERROR: h,
        LOGOUT: E,
        DEVELOPER_TEST_MODE_RESET: E,
      });
    },
    415218: function (e, t, n) {
      "use strict";
      let s;
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var i = n("661223"),
        r = n("312916"),
        a = n("224022"),
        o = n("919866");
      class u extends i.default.Store {
        static #e = (this.displayName = "OverlayRunningGameStore");
        getGameForPID(e) {
          if (__OVERLAY__ || null == e) return null;
          let t = a.default.getGameForPID(e)?.name;
          return o.default.getGameByName(t);
        }
        getGame() {
          return __OVERLAY__ ? s : null;
        }
      }
      var d = new u(r.default, {
        OVERLAY_INITIALIZE: function (e) {
          s = e.currentGame;
        },
        OVERLAY_SET_ASSOCIATED_GAME: function (e) {
          s = e.associatedGame;
        },
      });
    },
    875572: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return B;
          },
        });
      var s = n("661223"),
        i = n("986329"),
        r = n("312916"),
        a = n("152103"),
        o = n("118938"),
        u = n("296192"),
        d = n("775822"),
        l = n("262047"),
        f = n("731865"),
        _ = n("610043"),
        c = n("416620"),
        g = n("632706"),
        m = n("501769"),
        h = n("432056"),
        E = n("884173"),
        p = n("470526"),
        v = n("467006"),
        y = n("500924");
      let I = Object.freeze({
          selectedGuildId: null,
          selectedChannelId: null,
          displayUserMode: v.OverlayDisplayUsers.ALWAYS,
          displayNameMode: v.OverlayDisplayNames.ALWAYS,
          avatarSizeMode: v.OverlayAvatarSizes.LARGE,
          notificationPositionMode: v.OverlayNotificationPositions.TOP_LEFT,
          textChatNotifications: v.OverlayNotificationTextChatTypes.ENABLED,
          disableExternalLinkAlert: !1,
          disablePinTutorial: !1,
          showKeybindIndicators: !0,
          textWidgetOpacity: y.OpacityBounds.LOWER,
        }),
        T = null,
        S = {},
        C = null,
        A = new Set(),
        N = !1,
        D = null,
        O = !1,
        R = !1,
        P = new Set(),
        b = !1;
      function M(e) {
        let t = S[e];
        return null == t && (t = S[e] = { ...I }), t;
      }
      let V = { ...I },
        L = new Set([
          "AUDIO_SET_INPUT_DEVICE",
          "AUDIO_SET_INPUT_VOLUME",
          "AUDIO_SET_LOCAL_VIDEO_DISABLED",
          "AUDIO_SET_LOCAL_VOLUME",
          "AUDIO_SET_MODE",
          "AUDIO_SET_NOISE_CANCELLATION",
          "AUDIO_SET_NOISE_SUPPRESSION",
          "AUDIO_SET_OUTPUT_DEVICE",
          "AUDIO_SET_OUTPUT_VOLUME",
          "AUDIO_TOGGLE_LOCAL_MUTE",
          "AUDIO_TOGGLE_SELF_DEAF",
          "AUDIO_TOGGLE_SELF_MUTE",
          "BILLING_SUBSCRIPTION_UPDATE_SUCCESS",
          "CATEGORY_COLLAPSE",
          "CATEGORY_EXPAND",
          "CHANNEL_ACK",
          "CHANNEL_PRELOAD",
          "GIFT_CODE_REDEEM",
          "GIFT_CODE_REDEEM_FAILURE",
          "GIFT_CODE_REDEEM_SUCCESS",
          "HOTSPOT_HIDE",
          "INVITE_MODAL_CLOSE",
          "LAYOUT_CREATE",
          "LAYOUT_CREATE_WIDGETS",
          "LAYOUT_DELETE_ALL_WIDGETS",
          "LAYOUT_DELETE_WIDGET",
          "LAYOUT_SET_PINNED",
          "LAYOUT_SET_TOP_WIDGET",
          "LAYOUT_UPDATE_WIDGET",
          "LOAD_MESSAGES",
          "LOAD_MESSAGES_FAILURE",
          "LOAD_MESSAGES_SUCCESS",
          "MEDIA_ENGINE_SET_GO_LIVE_SOURCE",
          "OVERLAY_ACTIVATE_REGION",
          "OVERLAY_DEACTIVATE_ALL_REGIONS",
          "OVERLAY_MESSAGE_EVENT_ACTION",
          "OVERLAY_SET_AVATAR_SIZE_MODE",
          "OVERLAY_SET_CLICK_ZONES",
          "OVERLAY_SET_DISPLAY_NAME_MODE",
          "OVERLAY_SET_DISPLAY_USER_MODE",
          "OVERLAY_SET_INPUT_LOCKED",
          "OVERLAY_SET_NOTIFICATION_POSITION_MODE",
          "OVERLAY_SET_TEXT_CHAT_NOTIFICATION_MODE",
          "OVERLAY_SET_SHOW_KEYBIND_INDICATORS",
          "OVERLAY_SET_TEXT_WIDGET_OPACITY",
          "OVERLAY_SET_UI_LOCKED",
          "OVERLAY_NOTIFY_READY_TO_SHOW",
          "PREMIUM_PAYMENT_ERROR_CLEAR",
          "PREMIUM_PAYMENT_MODAL_CLOSE",
          "PREMIUM_PAYMENT_MODAL_OPEN",
          "PREMIUM_PAYMENT_SUBSCRIBE_FAIL",
          "PREMIUM_PAYMENT_SUBSCRIBE_SUCCESS",
          "PREMIUM_PAYMENT_UPDATE_FAIL",
          "PREMIUM_PAYMENT_UPDATE_SUCCESS",
          "PREMIUM_REQUIRED_MODAL_CLOSE",
          "PREMIUM_REQUIRED_MODAL_OPEN",
          "PURCHASE_CONFIRMATION_MODAL_CLOSE",
          "PURCHASE_CONFIRMATION_MODAL_OPEN",
          "SKU_PURCHASE_CLEAR_ERROR",
          "SKU_PURCHASE_FAIL",
          "SKU_PURCHASE_MODAL_CLOSE",
          "SKU_PURCHASE_MODAL_OPEN",
          "SKU_PURCHASE_PREVIEW_FETCH_SUCCESS",
          "SKU_PURCHASE_SHOW_CONFIRMATION_STEP",
          "SKU_PURCHASE_START",
          "SKU_PURCHASE_SUCCESS",
          "STREAM_CLOSE",
          "STREAM_START",
          "VOICE_CHANNEL_SELECT",
          "USER_SETTINGS_PROTO_ENQUEUE_UPDATE",
          "USER_SETTINGS_PROTO_LOAD_IF_NECESSARY",
        ]),
        k = new Set([
          ...L.values(),
          "ACTIVITY_INVITE_MODAL_CLOSE",
          "CALL_DELETE",
          "CHANNEL_COLLAPSE",
          "CHANNEL_SELECT",
          "GUILD_SOUNDBOARD_SOUND_PLAY_LOCALLY",
          "OVERLAY_CALL_PRIVATE_CHANNEL",
          "OVERLAY_JOIN_GAME",
          "OVERLAY_NOTIFICATION_EVENT",
          "OVERLAY_SELECT_CALL",
          "OVERLAY_SET_NOT_IDLE",
          "OVERLAY_SOUNDBOARD_SOUNDS_FETCH_REQUEST",
          "OVERLAY_WIDGET_CHANGED",
          "SOUNDBOARD_SET_OVERLAY_ENABLED",
          "STREAM_STOP",
        ]);
      function w() {
        if (!__OVERLAY__) return !1;
        let e = T === (0, E.getPID)(),
          t = A.has((0, E.getPID)()) || P.size > 0;
        e && t ? (0, a.focus)(window, !0) : (0, a.focus)(window, !1);
      }
      function U() {
        if (T !== (0, E.getPID)()) return !1;
        P.clear();
      }
      function G(e) {
        let t = (0, E.getPID)();
        if (null == e.pid || e.pid === t)
          switch (e.type) {
            case v.OverlayEventTypes.STORAGE_SYNC:
              s.default.PersistedStore.initializeAll(e.states);
              break;
            case v.OverlayEventTypes.DISPATCH:
              null != e.payloads &&
                ((O = !0),
                e.payloads.forEach(e =>
                  (function (e) {
                    var t;
                    if (
                      "OVERLAY_INITIALIZE" === e.type &&
                      ((null == (t = e).version && 1 === E.OVERLAY_VERSION) ||
                        t.version === E.OVERLAY_VERSION ||
                        (r.default.dispatch({
                          type: "OVERLAY_INCOMPATIBLE_APP",
                        }),
                        (0, o.disconnect)(),
                        0))
                    )
                      R = !0;
                    if (R)
                      switch (e.type) {
                        case "CHANNEL_CREATE":
                        case "THREAD_CREATE":
                        case "THREAD_UPDATE":
                        case "CHANNEL_DELETE":
                        case "THREAD_DELETE":
                          let n = (0, d.createChannelRecord)(e.channel);
                          if (!d.ALL_CHANNEL_TYPES.has(n.type)) break;
                          r.default.dispatch({ type: e.type, channel: n });
                          break;
                        case "CHANNEL_UPDATES":
                          r.default.dispatch({
                            type: e.type,
                            channels: e.channels.map(e =>
                              (0, d.createChannelRecord)(e)
                            ),
                          });
                          break;
                        case "CONNECTION_OPEN_SUPPLEMENTAL":
                          (e.lazyPrivateChannels = (
                            e.lazyPrivateChannels ?? []
                          ).map(e => (0, d.createChannelRecord)(e))),
                            r.default.dispatch(e);
                          break;
                        case "THREAD_LIST_SYNC":
                          r.default.dispatch({
                            ...e,
                            threads: e.threads.map(e =>
                              (0, d.createChannelRecord)(e)
                            ),
                          });
                          break;
                        case "GUILD_CREATE":
                          let s = e => (0, d.createChannelRecord)(e),
                            i = e.guild;
                          (i.channels = i.channels?.map(s) ?? null),
                            (i.threads = i.threads?.map(s)),
                            null != i.channelUpdates &&
                              (i.channelUpdates.writes =
                                i.channelUpdates.writes?.map(s)),
                            r.default.dispatch({
                              type: "GUILD_CREATE",
                              guild: i,
                            });
                          break;
                        case "USER_SETTINGS_PROTO_UPDATE":
                          r.default.dispatch({
                            ...e,
                            settings: {
                              proto: (0, u.b64ToProtoWithType)(
                                e.settings.type,
                                e.settings.proto
                              ),
                              type: e.settings.type,
                            },
                          });
                          break;
                        default:
                          r.default.dispatch(e);
                      }
                  })(e)
                ),
                (O = !1));
          }
      }
      class F extends s.default.PersistedStore {
        static #e = (this.displayName = "OverlayStore");
        static #t = (this.persistKey = "OverlayStoreV2");
        static #n = (this.migrations = [
          () => {
            let {
              pinnedWidgets: e,
              positions: t,
              sizes: n,
              v: s,
              ...r
            } = { ...i.default.get("OverlayStore") };
            return { ...I, ...(5 === s ? r : null) };
          },
          e => {
            let t = l.default.getId();
            return null == e || null == t ? {} : { [t]: { ...e } };
          },
        ]);
        initialize(e) {
          if (
            (this.waitFor(l.default),
            this.syncWith([l.default], () => {
              let e = l.default.getId();
              V = null != e ? M(e) : { ...I };
            }),
            __OVERLAY__ &&
              (m.isPlatformEmbedded &&
                h.default.requireModule("discord_overlay2"),
              A.delete((0, E.getPID)())),
            null != e)
          ) {
            S = e;
            let t = l.default.getId();
            null != t &&
              (null == (V = M(t)).textChatNotifications &&
                (V.textChatNotifications = I.textChatNotifications),
              null == V.textWidgetOpacity &&
                (V.textWidgetOpacity = I.textWidgetOpacity));
          }
        }
        getState() {
          return S;
        }
        isUILocked(e) {
          return !A.has(e);
        }
        isInstanceUILocked() {
          if (!__OVERLAY__)
            throw Error(
              "OverlayStore: App instance should never call .isInstanceUILocked()"
            );
          return !A.has((0, E.getPID)());
        }
        isInstanceFocused() {
          if (!__OVERLAY__)
            throw Error(
              "OverlayStore: App instance should never call .isInstanceFocused()"
            );
          return T === (0, E.getPID)();
        }
        isFocused(e) {
          return T === e;
        }
        isPinned(e) {
          let t = c.default.getLayout(E.OVERLAY_LAYOUT_ID);
          return (
            null != t &&
            null !=
              t.widgets.find(t => {
                let n = c.default.getWidget(t);
                return (null != n && n.type === e && !!n.pinned) || !1;
              })
          );
        }
        getSelectedGuildId() {
          return V.selectedGuildId;
        }
        getSelectedChannelId() {
          return V.selectedChannelId;
        }
        getSelectedCallId() {
          return C;
        }
        getDisplayUserMode() {
          return V.displayUserMode;
        }
        getDisplayNameMode() {
          return V.displayNameMode;
        }
        getAvatarSizeMode() {
          return V.avatarSizeMode;
        }
        getNotificationPositionMode() {
          return V.notificationPositionMode;
        }
        getTextChatNotificationMode() {
          return V.notificationPositionMode ===
            v.OverlayNotificationPositions.DISABLED
            ? v.OverlayNotificationTextChatTypes.DISABLED
            : V.textChatNotifications;
        }
        get showKeybindIndicators() {
          return null == V.showKeybindIndicators || V.showKeybindIndicators;
        }
        getDisableExternalLinkAlert() {
          return V.disableExternalLinkAlert;
        }
        getFocusedPID() {
          return T;
        }
        get initialized() {
          return R;
        }
        get incompatibleApp() {
          return N;
        }
        getActiveRegions() {
          return P;
        }
        getTextWidgetOpacity() {
          return V.textWidgetOpacity;
        }
        isPreviewingInGame() {
          return b;
        }
      }
      var B = new F(r.default, {
        LOGOUT: function (e) {
          !e.isSwitchingAccount && (S = {});
        },
        MULTI_ACCOUNT_REMOVE_ACCOUNT: function (e) {
          e.userId in S && delete S[e.userId];
        },
        CONNECTION_CLOSED: function () {
          A.clear();
        },
        OVERLAY_START_SESSION: function () {
          r.default.addInterceptor(e => {
            if (O || !k.has(e.type)) return !1;
            if ("CHANNEL_SELECT" === e.type) {
              let { guildId: t, channelId: n } = e;
              return (
                null != n &&
                ((0, o.send)({
                  type: v.OverlayEventTypes.DISPATCH,
                  pid: (0, E.getPID)(),
                  token: (0, E.getRPCAuthToken)(),
                  payloads: [
                    {
                      type: "CHANNEL_PRELOAD",
                      guildId: t === v.ME ? null : t,
                      channelId: n,
                      context: v.CURRENT_APP_CONTEXT,
                    },
                    {
                      type: "OVERLAY_SELECT_CHANNEL",
                      guildId: t,
                      channelId: n,
                    },
                  ],
                }),
                !1)
              );
            }
            return (
              (0, o.send)({
                type: v.OverlayEventTypes.DISPATCH,
                pid: (0, E.getPID)(),
                token: (0, E.getRPCAuthToken)(),
                payloads: [e],
              }),
              !L.has(e.type)
            );
          }),
            (0, o.setReceiveEventHandler)(G, (0, E.getRPCAuthToken)()),
            (0, o.connect)(),
            (0, o.send)({
              type: v.OverlayEventTypes.CONNECT,
              pid: (0, E.getPID)(),
              token: (0, E.getRPCAuthToken)(),
            });
        },
        OVERLAY_INITIALIZE: function (e) {
          let { focusedPID: t } = e;
          T = t;
        },
        OVERLAY_READY: function () {
          let e = V.selectedGuildId,
            t = V.selectedChannelId;
          if (
            (null != e &&
              (!_.default.hasChannels(e) ||
                (null != t && !_.default.hasSelectableChannel(e, t))) &&
              ((e = null), (t = null)),
            null != t &&
              null == f.default.getChannel(t) &&
              ((e = null), (t = null)),
            null == e && null == t && (e = g.default.getGuildId()),
            null != e && null == t)
          ) {
            let n = _.default.getDefaultChannel(e);
            null != n && (t = n.id);
          }
          (V.selectedGuildId = e), (V.selectedChannelId = t);
        },
        OVERLAY_FOCUSED: function (e) {
          let { pid: t } = e;
          (T = t), w();
        },
        OVERLAY_SELECT_CHANNEL: function (e) {
          let { guildId: t, channelId: n } = e;
          (V.selectedGuildId = t), (V.selectedChannelId = n);
        },
        OVERLAY_SELECT_CALL: function (e) {
          let { callId: t } = e;
          C = t;
        },
        CALL_DELETE: function () {
          C = null;
        },
        LAYOUT_CREATE: function () {},
        OVERLAY_SET_DISPLAY_NAME_MODE: function (e) {
          let { mode: t } = e;
          V.displayNameMode = t;
        },
        OVERLAY_SET_DISPLAY_USER_MODE: function (e) {
          let { mode: t } = e;
          V.displayUserMode = t;
        },
        OVERLAY_SET_AVATAR_SIZE_MODE: function (e) {
          let { mode: t } = e;
          V.avatarSizeMode = t;
        },
        OVERLAY_SET_NOTIFICATION_POSITION_MODE: function (e) {
          let { mode: t } = e;
          V.notificationPositionMode = t;
        },
        OVERLAY_SET_TEXT_CHAT_NOTIFICATION_MODE: function (e) {
          let { mode: t } = e;
          V.textChatNotifications = t;
        },
        OVERLAY_SET_SHOW_KEYBIND_INDICATORS: function (e) {
          let { shouldShow: t } = e;
          V.showKeybindIndicators = t;
        },
        OVERLAY_SET_TEXT_WIDGET_OPACITY: function (e) {
          let { opacity: t } = e,
            n = V.textWidgetOpacity !== t;
          return (V.textWidgetOpacity = t), n;
        },
        OVERLAY_DISABLE_EXTERNAL_LINK_ALERT: function () {
          V.disableExternalLinkAlert = !0;
        },
        OVERLAY_INCOMPATIBLE_APP: function () {
          N = !0;
        },
        OVERLAY_SET_UI_LOCKED: function (e) {
          let { locked: t, pid: n } = e;
          t ? A.delete(n) : A.add(n), U(), w(), (b = !1);
        },
        OVERLAY_ACTIVATE_REGION: function (e) {
          let { region: t } = e;
          if (T !== (0, E.getPID)() || P.has(t)) return !1;
          P.add(t);
        },
        OVERLAY_DEACTIVATE_ALL_REGIONS: U,
        OVERLAY_SET_PREVIEW_IN_GAME_MODE: function (e) {
          b = e.isPreviewingInGame;
        },
        WINDOW_RESIZED: function () {
          if (__OVERLAY__) {
            let e = p.default.windowSize();
            !(0, E.validResolution)(e) && (b = !1);
          }
        },
        OVERLAY_SET_ASSOCIATED_GAME: function (e) {
          A.delete(e.previousAssociatedGamePID);
        },
      });
    },
    470526: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        });
      var s = n("512722"),
        i = n.n(s),
        r = n("661223"),
        a = n("312916"),
        o = n("40093");
      let u = new Map();
      function d(e) {
        let t = u.get(e);
        return null == t
          ? (console.warn("Window state not initialized", e),
            {
              isElementFullscreen: !1,
              focused: !1,
              windowSize: { width: 0, height: 0 },
              visible: !1,
            })
          : t;
      }
      class l extends r.default.Store {
        static #e = (this.displayName = "WindowStore");
        isFocused() {
          let e =
            arguments.length > 0 && void 0 !== arguments[0]
              ? arguments[0]
              : (0, o.getMainWindowId)();
          return d(e).focused;
        }
        isVisible() {
          let e =
            arguments.length > 0 && void 0 !== arguments[0]
              ? arguments[0]
              : (0, o.getMainWindowId)();
          return d(e).visible;
        }
        getFocusedWindowId() {
          let e = null;
          return (
            u.forEach((t, n) => {
              t.focused && (e = n);
            }),
            e
          );
        }
        isElementFullScreen() {
          let e =
            arguments.length > 0 && void 0 !== arguments[0]
              ? arguments[0]
              : (0, o.getMainWindowId)();
          return d(e).isElementFullscreen;
        }
        windowSize() {
          let e =
            arguments.length > 0 && void 0 !== arguments[0]
              ? arguments[0]
              : (0, o.getMainWindowId)();
          return d(e).windowSize;
        }
      }
      let f = new l(a.default, {
        WINDOW_INIT: function (e) {
          i()(!u.has(e.windowId), "Window initialized multiple times");
          let {
            width: t,
            height: n,
            isElementFullscreen: s,
            focused: r,
            visible: a,
          } = e;
          return (
            u.set(e.windowId, {
              windowSize: { width: t, height: n },
              isElementFullscreen: s,
              focused: r,
              visible: a,
            }),
            !0
          );
        },
        WINDOW_FULLSCREEN_CHANGE: function (e) {
          let t = d(e.windowId);
          return (
            t.isElementFullscreen !== e.isElementFullscreen &&
            (u.set(e.windowId, {
              ...t,
              isElementFullscreen: e.isElementFullscreen,
            }),
            !0)
          );
        },
        WINDOW_FOCUS: function (e) {
          let t = d(e.windowId);
          return (
            t.focused !== e.focused &&
            (u.set(e.windowId, { ...t, focused: e.focused }), !0)
          );
        },
        WINDOW_RESIZED: function (e) {
          let t = d(e.windowId);
          return (
            (t.windowSize.width !== e.width ||
              t.windowSize.height !== e.height) &&
            (u.set(e.windowId, {
              ...t,
              windowSize: { width: e.width, height: e.height },
            }),
            !0)
          );
        },
        WINDOW_UNLOAD: function (e) {
          return u.delete(e.windowId), !0;
        },
        WINDOW_VISIBILITY_CHANGE: function (e) {
          let t = d(e.windowId);
          return (
            t.visible !== e.visible &&
            (u.set(e.windowId, { ...t, visible: e.visible }), !0)
          );
        },
      });
      n.el("470526@3923:3958")
        .then(n.bind(n, "328470"))
        .then(e => {
          let { addExtraAnalyticsDecorator: t } = e;
          t(e => {
            e.client_app_state = f.isFocused() ? "focused" : "unfocused";
          });
        });
      var _ = f;
    },
    355984: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var s = n("735250");
      n("470079");
      var i = n("803997"),
        r = n.n(i),
        a = n("54691"),
        o = n("691699"),
        u = n("982699"),
        d = n("579896"),
        l = n("30175"),
        f = n("157526");
      let _ = e => {
        let t,
          {
            invertColor: n = !1,
            type: i = d.BotTagTypes.BOT,
            className: _,
            verified: c,
            hideIcon: g = !1,
            useRemSizes: m = !1,
            children: h = [],
          } = e,
          E = null,
          p = l.default.Messages.VERIFIED_BOT_TOOLTIP,
          { enabled: v } = o.AppLauncherOnboardingExperiment.useExperiment(
            { location: "Bot Tag" },
            { autoTrackExposure: !1 }
          );
        switch (i) {
          case d.BotTagTypes.SYSTEM_DM:
          case d.BotTagTypes.OFFICIAL:
            (c = !0),
              (p = l.default.Messages.DISCORD_SYSTEM_MESSAGE_BOT_TAG_TOOLTIP),
              (E = l.default.Messages.SYSTEM_DM_TAG_SYSTEM);
            break;
          case d.BotTagTypes.SERVER:
            E = l.default.Messages.BOT_TAG_SERVER;
            break;
          case d.BotTagTypes.ORIGINAL_POSTER:
            E = l.default.Messages.BOT_TAG_FORUM_ORIGINAL_POSTER;
            break;
          case d.BotTagTypes.STAFF_ONLY_DM:
            E = l.default.Messages.STAFF_BADGE_TOOLTIP;
            break;
          case d.BotTagTypes.AI:
            (c = !0),
              (p = l.default.Messages.AI_GENERATED_TOOLTIP),
              (E = l.default.Messages.AI_TAG);
            break;
          case d.BotTagTypes.REMIX:
            (c = !1), (E = l.default.Messages.REMIXING_TAG);
            break;
          case d.BotTagTypes.BOT:
          default:
            E = v ? l.default.Messages.APP_TAG : l.default.Messages.BOT_TAG_BOT;
        }
        let y = i === d.BotTagTypes.ORIGINAL_POSTER,
          I = i === d.BotTagTypes.REMIX,
          T = null;
        c &&
          (T = (0, s.jsx)(a.Tooltip, {
            text: p,
            align: "center",
            position: "top",
            children: e =>
              (0, s.jsx)(u.default, { ...e, className: f.botTagVerified }),
          })),
          (t =
            i === d.BotTagTypes.AI
              ? f.botTagAI
              : n
                ? f.botTagInvert
                : f.botTagRegular);
        let S = e =>
          (0, s.jsxs)("span", {
            ...e,
            className: r()(_, t, m ? f.rem : f.px, {
              [f.botTagOP]: y,
              [f.botTagRemix]: I,
            }),
            children: [
              g ? null : T,
              h,
              (0, s.jsx)("span", { className: f.botText, children: E }),
            ],
          });
        switch (i) {
          case d.BotTagTypes.REMIX:
            return (0, s.jsx)(a.Tooltip, {
              text: l.default.Messages.REMIXING_DOWNLOAD_APP,
              position: "top",
              children: e => S(e),
            });
          case d.BotTagTypes.ORIGINAL_POSTER:
            return (0, s.jsx)(a.Tooltip, {
              text: l.default.Messages.BOT_TAG_FORUM_ORIGINAL_POSTER_TOOLTIP,
              position: "top",
              children: e => S(e),
            });
          default:
            return S();
        }
      };
      _.Types = d.BotTagTypes;
      var c = _;
    },
    61244: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var s = n("735250"),
        i = n("470079"),
        r = n("803997"),
        a = n.n(r),
        o = n("216769");
      let u = e =>
        new Promise((t, n) => {
          null == e && n(Error("No image src passed"));
          let s = new Image();
          (s.src = e), (s.onload = () => t(s)), (s.onerror = e => n(e));
        });
      class d extends i.PureComponent {
        static #e = (this.defaultProps = { width: 0, height: 0, alt: "" });
        constructor(e) {
          super(e),
            (this.unmounting = !1),
            (this.state = { loaded: !1 }),
            this.initialize();
        }
        componentDidUpdate(e) {
          e.src !== this.props.src &&
            this.setState({ loaded: !1 }, () => this.initialize());
        }
        initialize() {
          u(this.props.src).then(() => {
            !this.unmounting && this.setState({ loaded: !0 });
          });
        }
        componentWillUnmount() {
          this.unmounting = !0;
        }
        render() {
          let {
              className: e,
              src: t,
              alt: n,
              width: i,
              height: r,
              onLoad: u,
              style: d,
              imageClassName: l,
            } = this.props,
            { loaded: f } = this.state;
          return (0, s.jsx)("div", {
            className: e,
            style: { ...d, width: i, height: r },
            children: (0, s.jsx)("img", {
              className: a()(o.image, l, { [o.loaded]: f }),
              width: i,
              height: r,
              src: t,
              alt: n,
              onLoad: u,
            }),
          });
        }
      }
      var l = d;
    },
    674227: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        });
      var s = n("735250"),
        i = n("470079"),
        r = n("803997"),
        a = n.n(r),
        o = n("414112"),
        u = n("974328"),
        d = n("467006"),
        l = n("77");
      class f extends i.Component {
        static #e = (this.contextType = u.AccessibilityPreferencesContext);
        componentDidMount() {
          this.props.show && this.animate(1);
        }
        componentDidUpdate(e) {
          e.show !== this.props.show && this.animate(this.props.show ? 1 : 0);
        }
        getAnimatedStyle() {
          let { anim: e } = this,
            { reducedMotion: t } = this.context;
          return {
            opacity: e,
            transform: t.enabled
              ? void 0
              : [
                  {
                    translateY: e.interpolate({
                      inputRange: [0, 1],
                      outputRange: ["-100px", "0px"],
                    }),
                  },
                  { translateZ: 0 },
                ],
          };
        }
        render() {
          return (0, s.jsx)(o.default.a, {
            href: d.Routes.INDEX,
            target: "_blank",
            rel: "noopener",
            className: a()(l.logo, this.props.className),
            style: this.getAnimatedStyle(),
          });
        }
        constructor(...e) {
          super(...e),
            (this.anim = new o.default.Value(0)),
            (this.animate = e => {
              o.default
                .spring(this.anim, { toValue: e, friction: 10, tension: 100 })
                .start();
            });
        }
      }
    },
    327249: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return I;
          },
        });
      var s = n("735250"),
        i = n("470079"),
        r = n("803997"),
        a = n.n(r),
        o = n("600186"),
        u = n("849557"),
        d = n("974328"),
        l = n("845649"),
        f = n("702340"),
        _ = n("473974"),
        c = n("187460"),
        g = n("73764"),
        m = n("542227"),
        h = n("467006"),
        E = n("712862");
      let p = (0, f.cssValueToNumber)(
          u.default.WAVE_SPLASH_RESPONSIVE_WIDTH_MOBILE
        ),
        v = 1 / 120;
      class y extends i.Component {
        constructor(e) {
          super(e),
            (this.width = 0),
            (this.height = 0),
            (this.children = []),
            (this.ratio = 0),
            (this._lastTick = 0),
            (this._isPlaying = !1),
            (this._reqAnimId = null),
            (this.setCanvas = e => {
              if (null == e) return;
              (this.canvas = e),
                (this.canvasContext = this.canvas.getContext("2d"));
              let t = window.devicePixelRatio ?? 1,
                n =
                  this.canvasContext.webkitBackingStorePixelRatio ||
                  this.canvasContext.mozBackingStorePixelRatio ||
                  this.canvasContext.msBackingStorePixelRatio ||
                  this.canvasContext.oBackingStorePixelRatio ||
                  this.canvasContext.backingStorePixelRatio ||
                  1;
              (this.ratio = t / n), this.resizeCanvas();
            }),
            (this.resizeCanvas = () => {
              (this.width = window.innerWidth),
                (this.height = window.innerHeight);
              let {
                canvas: e,
                canvasContext: t,
                width: n,
                height: s,
                ratio: i,
              } = this;
              null != e &&
                null != t &&
                ((e.width = n * i),
                (e.height = s * i),
                (e.style.width = n + "px"),
                (e.style.height = s + "px"),
                t.scale(i, i)),
                n <= p ? this.pause() : this.play(),
                this.wave.resizeWave(),
                this.renderAnimation();
            }),
            (this.handleVisibilityChange = () => {
              document.hidden ? this.delayedPause() : this.play();
            }),
            (this.play = () => {
              clearTimeout(this._pauseTimeout),
                !this._isPlaying && ((this._isPlaying = !0), this.run());
            }),
            (this.pause = () => {
              clearTimeout(this._pauseTimeout),
                (this._isPlaying = !1),
                null != this._reqAnimId &&
                  window.cancelAnimationFrame(this._reqAnimId),
                (this._reqAnimId = null),
                this.advanceTransitionalState();
            }),
            (this.delayedPause = () => {
              clearTimeout(this._pauseTimeout),
                (this._pauseTimeout = setTimeout(this.pause, 4e3));
            }),
            (this.updateWaveState = e => {
              let { updateWaveState: t } = this.props;
              t(e);
            }),
            (this.handleWaveEmphasize = () => {
              this.wave.emphasize();
            }),
            (this.run = () => {
              if (!this._isPlaying) return;
              if (0 === this._lastTick) {
                (this._lastTick = Date.now()),
                  (this._reqAnimId = requestAnimationFrame(this.run));
                return;
              }
              let e = Date.now(),
                t = Math.min((e - this._lastTick) / 1e3, 8 * v);
              for (; t > 0; ) {
                let e = t < v ? t : v;
                this.updateAnimation(e), (t -= e);
              }
              this.renderAnimation(),
                (this._lastTick = e),
                (this._reqAnimId = requestAnimationFrame(this.run));
            }),
            (this.wave = new g.default(this.updateWaveState)),
            (this.children = [new _.default(), new c.default(), this.wave]);
        }
        static #e = (this.defaultProps = { embedded: !1 });
        componentDidMount() {
          this.initialize();
        }
        componentDidUpdate(e) {
          let { waveState: t } = this.props;
          t === m.WaveStates.FILLING && t !== e.waveState && this.waveFill();
        }
        componentWillUnmount() {
          this.terminate();
        }
        initialize() {
          this.children.forEach(e => e.initialize()),
            this.bindEvents(),
            this.resizeCanvas(),
            document.hidden && this.delayedPause();
        }
        terminate() {
          this.pause(),
            this.unbindEvents(),
            this.children.forEach(e => e.terminate());
        }
        bindEvents() {
          window.addEventListener("resize", this.resizeCanvas, !1),
            window.addEventListener("blur", this.delayedPause, !1),
            window.addEventListener("focus", this.play, !1),
            document.addEventListener(
              "visibilitychange",
              this.handleVisibilityChange,
              !1
            ),
            l.ComponentDispatch.subscribe(
              h.ComponentActions.WAVE_EMPHASIZE,
              this.handleWaveEmphasize
            );
        }
        unbindEvents() {
          window.removeEventListener("resize", this.resizeCanvas, !1),
            window.removeEventListener("blur", this.delayedPause, !1),
            window.removeEventListener("focus", this.play, !1),
            document.removeEventListener(
              "visibilitychange",
              this.handleVisibilityChange,
              !1
            ),
            l.ComponentDispatch.unsubscribe(
              h.ComponentActions.WAVE_EMPHASIZE,
              this.handleWaveEmphasize
            );
        }
        advanceTransitionalState() {
          let { waveState: e } = this.props;
          (e === m.WaveStates.INITIAL || e === m.WaveStates.FILLING) &&
            this.updateWaveState(e + 1);
        }
        waveFill() {
          this._isPlaying
            ? this.children.forEach(e => e.fill())
            : this.updateWaveState(m.WaveStates.FILLED);
        }
        updateAnimation(e) {
          this.children.forEach(t => t.update(e));
        }
        renderAnimation() {
          let { canvasFillStyle: e } = this.props,
            { canvasContext: t } = this;
          null != t &&
            ((t.fillStyle = e),
            t.fillRect(0, 0, this.width, this.height),
            this.children.forEach(e => e.render(t)));
        }
        render() {
          let { waveState: e, hideFallback: t, embedded: n } = this.props;
          return (0, s.jsx)(d.AccessibilityPreferencesContext.Consumer, {
            children: i => {
              let { reducedMotion: r } = i;
              return r.enabled
                ? (0, s.jsx)("div", {
                    className: a()(E.fallbackImage, {
                      [E.embedded]: n,
                      [E.visible]: !t && e >= m.WaveStates.ENTERED,
                    }),
                  })
                : (0, s.jsx)("canvas", {
                    className: a()(E.canvas, { [E.embedded]: n }),
                    ref: this.setCanvas,
                  });
            },
          });
        }
      }
      var I = e => {
        let t = (0, d.useToken)(o.default.unsafe_rawColors.PRIMARY_630).hex();
        return (0, s.jsx)(y, { canvasFillStyle: t, ...e });
      };
    },
    341443: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          Splash: function () {
            return h;
          },
          default: function () {
            return p;
          },
        });
      var s = n("735250"),
        i = n("470079"),
        r = n("803997"),
        a = n.n(r),
        o = n("849557"),
        u = n("61244"),
        d = n("702340"),
        l = n("674227"),
        f = n("327249"),
        _ = n("542227"),
        c = n("477314");
      let g = (0, d.cssValueToNumber)(
        o.default.WAVE_SPLASH_RESPONSIVE_WIDTH_MOBILE
      );
      function m(e, t) {
        let { innerWidth: n, innerHeight: s } = window;
        if (0 === e || 0 === t) return null;
        let i = t / e,
          r = n,
          a = Math.round(n * i);
        return (
          a < s && ((a = s), (r = Math.round(s * (i = e / t)))),
          { naturalWidth: e, naturalHeight: t, width: r, height: a }
        );
      }
      function h(e) {
        let { splash: t, children: n } = e,
          [{ width: r, height: o }, d] = i.useState({
            width: 0,
            height: 0,
            naturalHeight: 0,
            naturalWidth: 0,
          });
        return (
          i.useEffect(() => {
            function e() {
              d(e => {
                let { naturalWidth: t, naturalHeight: n } = e;
                return m(t, n) ?? e;
              });
            }
            return (
              window.addEventListener("resize", e),
              () => window.removeEventListener("reslize", e)
            );
          }, []),
          (0, s.jsxs)(s.Fragment, {
            children: [
              (0, s.jsx)(u.default, {
                className: a()(c.rightSplit),
                onLoad: function (e) {
                  let { currentTarget: t } = e,
                    { naturalWidth: n, naturalHeight: s } = t,
                    i = m(n, s);
                  null != i && d(i);
                },
                src: t,
                width: r,
                height: o,
              }),
              (0, s.jsx)("div", {
                className: a()(c.leftSplit, { [c.nonEmbeddedLeftSplit]: !0 }),
                children: n,
              }),
            ],
          })
        );
      }
      class E extends i.PureComponent {
        static #e = (this.defaultProps = { embedded: !1 });
        componentWillUnmount() {
          window.removeEventListener("resize", this.handleResize);
        }
        calculateShowWaveAnimation() {
          return window.innerWidth > g;
        }
        renderSplashArt() {
          let { splash: e, embedded: t } = this.props,
            { width: n, height: i } = this.state;
          return null != e
            ? (0, s.jsx)(u.default, {
                className: a()(c.rightSplit, { [c.embedded]: t }),
                src: e,
                width: n,
                height: i,
                onLoad: this.handleLoad,
              })
            : null;
        }
        renderWave() {
          let { waveState: e, updateWaveState: t, embedded: n } = this.props,
            { showWaveAnimation: i, splashLoaded: r } = this.state;
          return i
            ? (0, s.jsx)(f.default, {
                embedded: n,
                waveState: e,
                updateWaveState: t,
                hideFallback: !r,
              })
            : (0, s.jsx)("div", { className: c.mobileWave });
        }
        renderContent() {
          let {
              children: e,
              waveState: t,
              showLogo: n,
              logoClassName: r,
              embedded: o,
            } = this.props,
            { showWaveAnimation: u } = this.state;
          return (0, s.jsxs)(i.Fragment, {
            children: [
              this.renderWave(),
              (0, s.jsxs)("div", {
                className: a()(c.leftSplit, { [c.nonEmbeddedLeftSplit]: o }),
                children: [
                  n
                    ? (0, s.jsx)(l.default, {
                        show:
                          !u ||
                          (t === _.WaveStates.ENTERED &&
                            t !== _.WaveStates.FILLING),
                        className: a()(c.logo, r),
                      })
                    : null,
                  e,
                ],
              }),
            ],
          });
        }
        render() {
          let { className: e } = this.props;
          return (0, s.jsxs)("div", {
            className: a()(e, c.wrapper),
            children: [this.renderSplashArt(), this.renderContent()],
          });
        }
        constructor(...e) {
          super(...e),
            (this.state = {
              naturalWidth: 0,
              naturalHeight: 0,
              width: 0,
              height: 0,
              showWaveAnimation: this.calculateShowWaveAnimation(),
              splashLoaded: !1,
            }),
            (this.handleResize = () => {
              let { naturalWidth: e, naturalHeight: t } = this.state,
                n = m(e, t),
                s = this.calculateShowWaveAnimation();
              null != n
                ? this.setState({ ...n, showWaveAnimation: s })
                : this.setState({ showWaveAnimation: s });
            }),
            (this.handleLoad = e => {
              let { currentTarget: t } = e,
                { naturalWidth: n, naturalHeight: s } = t,
                i = m(n, s);
              null != i && this.setState(i),
                this.setState({ splashLoaded: !0 }),
                window.removeEventListener("resize", this.handleResize),
                window.addEventListener("resize", this.handleResize);
            });
        }
      }
      var p = E;
    },
    473974: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("552243"),
        i = n("482682"),
        r = class e {
          initialize() {
            (this.img = new Image()),
              (this.img.onload = () => {
                this.loaded = !0;
              }),
              (this.img.src = i),
              this.bind();
          }
          bind() {
            window.addEventListener("mousemove", this.handleMouseMove, !1);
          }
          unbind() {
            window.removeEventListener("mousemove", this.handleMouseMove, !1);
          }
          terminate() {
            (this.img = null),
              (this.loaded = !1),
              (this.isFilled = !1),
              (this.alpha = 0),
              this.unbind();
          }
          update(e) {
            this.loaded &&
              (!this.isFilled && this.alpha < 1
                ? (this.alpha = Math.min(1, this.alpha + e))
                : this.isFilled &&
                  this.alpha > 0 &&
                  (this.alpha = Math.max(0, this.alpha - 3 * e)),
              (this.velX +=
                (0, s.applySpringForce)(
                  this.targetX,
                  this.x,
                  this.velX,
                  this.spring
                ) * e),
              (this.velY +=
                (0, s.applySpringForce)(
                  this.targetY,
                  this.y,
                  this.velY,
                  this.spring
                ) * e),
              (this.x += this.velX * e),
              (this.y += this.velY * e));
          }
          render(e) {
            let { img: t } = this;
            this.loaded &&
              null != t &&
              (e.save(),
              (e.globalCompositeOperation = "source-atop"),
              (e.globalAlpha = this.alpha),
              e.drawImage(t, this.x + 20, this.y + 20),
              e.restore());
          }
          fill() {
            this.isFilled = !0;
          }
          constructor() {
            (this.img = null),
              (this.loaded = !1),
              (this.isFilled = !1),
              (this.alpha = 0),
              (this.mx = 0),
              (this.my = 0),
              (this.x = 0),
              (this.y = 0),
              (this.velX = 0),
              (this.velY = 0),
              (this.targetX = 40),
              (this.targetY = 40),
              (this.spring = { friction: 60, tension: 100 }),
              (this.handleMouseMove = e => {
                let { clientX: t, clientY: n } = e;
                (this.targetX = (t / window.innerWidth) * 20 + 20),
                  (this.targetY = (n / window.innerWidth) * 20 + 20);
              });
          }
        };
    },
    693057: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
      var s = n("552243"),
        i = n("542227");
      let r = ["#7d8187", "#18191c", "#8fa2df", "#4f545c"];
      var a = class e {
        checkBounds() {
          this.x > this.offscreenX
            ? (this.x = -this.size)
            : this.y > this.offscreenY
              ? (this.y = -this.size)
              : this.x < -this.size
                ? (this.x = this.offscreenX)
                : this.y < -this.size && (this.y = this.offscreenY);
        }
        update(e, t) {
          this.checkBounds(),
            (this.y += t * this.positionMultiplier),
            (this.x += e * this.positionMultiplier);
        }
        render(e, t) {
          e.beginPath(),
            (e.globalAlpha = (t * this.depth) / 4),
            e.arc(this.x, this.y, this.size, 0, i.TWO_PI, !0),
            (e.fillStyle = this.color),
            e.fill(),
            (e.globalAlpha = 1);
        }
        constructor() {
          (this.size = (0, s.randomNumber)(2, 3)),
            (this.depth = (0, s.randomNumber)(1, 4)),
            (this.positionMultiplier = this.depth / 4),
            (this.color = r[4 - this.depth]),
            (this.offscreenX = i.MAX_RADIUS + this.size),
            (this.offscreenY = i.MAX_RADIUS + this.size),
            (this.x = (0, s.randomNumber)(-this.size, this.offscreenX)),
            (this.y = (0, s.randomNumber)(-this.size, this.offscreenY));
        }
      };
    },
    187460: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        }),
        n("653041");
      var s = n("693057"),
        i = n("441786"),
        r = class e {
          initialize() {
            (this.particles = []),
              this.wind.initialize(),
              (this.loadInTimer = setTimeout(() => {
                for (let e = 0; e < 75; e++)
                  this.particles.push(new s.default());
              }, 250));
          }
          terminate() {
            (this.particles = []),
              this.wind.terminate(),
              null != this.loadInTimer && clearTimeout(this.loadInTimer);
          }
          update(e) {
            0 !== this.particles.length &&
              (!this.isFilled && this.alpha < 1
                ? (this.alpha = Math.min(1, this.alpha + e))
                : this.isFilled &&
                  this.alpha > 0 &&
                  (this.alpha = Math.max(0, this.alpha - 3 * e)),
              this.wind.update(),
              this.particles.forEach(t =>
                t.update(
                  10 * this.wind.forceX * e,
                  10 * Math.min(this.wind.forceY, -0.001) * e + -0.1
                )
              ));
          }
          render(e) {
            0 !== this.particles.length &&
              (e.save(),
              (e.globalCompositeOperation = "source-atop"),
              this.particles.forEach(t => t.render(e, this.alpha)),
              e.restore());
          }
          fill() {
            this.isFilled = !0;
          }
          constructor() {
            (this.particles = []),
              (this.wind = new i.default()),
              (this.alpha = 0),
              (this.isFilled = !1),
              (this.loadInTimer = null);
          }
        };
    },
    348052: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
      var s = n("552243"),
        i = n("542227");
      let r = -2.15;
      var a = class e {
        constructor(e) {
          (this.x = -40),
            (this.y = -40),
            (this.targetX = 0),
            (this.targetY = 0),
            (this.oscillate = !0),
            (this.velX = 0),
            (this.velY = 0),
            (this.angle = 0),
            (this.speedUp = 1.5),
            (this.waveRange = 60),
            (this.spring = { friction: 15, tension: i.POINT_TENSION_DEFAULT }),
            (this.index = e),
            (this.spring.tension =
              i.POINT_TENSION_DEFAULT * Math.max(0.1, e / 7) +
              i.POINT_TENSION_DEFAULT),
            (this.count = r * e);
        }
        updateStatic() {
          (this.targetX =
            this.targetX + 30 * Math.cos(this.angle) * Math.sin(this.count)),
            (this.targetY =
              this.targetY + 30 * Math.sin(this.angle) * Math.sin(this.count)),
            (this.x = this.targetX),
            (this.y = this.targetY);
        }
        update(e) {
          let t, n;
          if (
            (this.speedUp > 0
              ? ((this.speedUp = Math.max(0, this.speedUp - e)),
                (this.count += e * (10 * Math.min(this.speedUp, 1) + 0.4)))
              : (this.count += 0.4 * e),
            (t = (0, s.applySpringForce)(
              this.targetX,
              this.x,
              this.velX,
              this.spring
            )),
            (n = (0, s.applySpringForce)(
              this.targetY,
              this.y,
              this.velY,
              this.spring
            )),
            (this.velX += t * e),
            (this.velY += n * e),
            this.oscillate)
          ) {
            let i =
                this.targetX +
                this.waveRange * Math.cos(this.angle) * Math.sin(this.count),
              r =
                this.targetY +
                this.waveRange * Math.sin(this.angle) * Math.sin(this.count);
            (t = (0, s.applySpringForce)(i, this.x, this.velX, this.spring)),
              (n = (0, s.applySpringForce)(r, this.y, this.velY, this.spring)),
              (this.velX += t * e),
              (this.velY += n * e);
          }
          (this.x += this.velX * e), (this.y += this.velY * e);
        }
        render(e) {
          (e.fillStyle = "#fff"), e.fillRect(this.x, this.y, 4, 4);
        }
      };
    },
    552243: function (e, t, n) {
      "use strict";
      function s(e, t) {
        return Math.floor(Math.random() * (t - e + 1) + e);
      }
      function i(e, t, n, s) {
        return s.tension * (e - t) - s.friction * n;
      }
      n.r(t),
        n.d(t, {
          applySpringForce: function () {
            return i;
          },
          randomNumber: function () {
            return s;
          },
        });
    },
    73764: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return m;
          },
        }),
        n("653041");
      var s = n("954955"),
        i = n.n(s),
        r = n("849557"),
        a = n("702340"),
        o = n("348052"),
        u = n("552243"),
        d = n("542227");
      let l = 7.5,
        f = (0, a.cssValueToNumber)(
          r.default.WAVE_SPLASH_RESPONSIVE_WIDTH_MOBILE
        ),
        _ = 1 / 60;
      function c(e, t, n, s) {
        return (n / s) * t + e;
      }
      function g() {
        return Math.min(
          Math.max(
            Math.min(0.8 * window.innerWidth, 0.8 * window.innerHeight),
            d.MIN_RADIUS
          ),
          d.MAX_RADIUS
        );
      }
      var m = class e {
        constructor(e) {
          (this.points = []),
            (this.hasEntered = !1),
            (this.isFilling = !1),
            (this._resizeWave = () => {
              let e = g();
              this.points.forEach((t, n) => {
                let s = -40 + e * Math.cos(d.TWO_PI * ((n / 15) * 0.25 + 0)),
                  i = -40 + e * Math.sin(d.TWO_PI * ((n / 15) * 0.25 + 0));
                0 !== n
                  ? (i += (0, u.randomNumber)(0, 30) - 15)
                  : (s += (0, u.randomNumber)(0, 30) - 15),
                  (t.targetX = s),
                  (t.targetY = i),
                  (t.angle = Math.atan2(i, s));
              });
            }),
            (this.resizeWave = i()(this._resizeWave, 200)),
            (this.updateWaveState = e),
            (this.hasEntered = !1);
          for (let e = 0; e <= 15; e++)
            this.points.push(
              new o.default(Math.floor(l - Math.floor(Math.abs(e - l))))
            );
        }
        initialize() {
          this._resizeWave();
        }
        emphasize() {
          this.points.forEach(e => (e.speedUp = 1));
        }
        terminate() {
          this.points = [];
        }
        update(e) {
          0 !== this.points.length &&
            (this.points.forEach(t => t.update(Math.min(e, _))),
            !this.hasEntered &&
              this.points[0].x > f &&
              ((this.hasEntered = !0),
              this.updateWaveState(d.WaveStates.ENTERED)),
            this.isFilling &&
              this.points[0].x > this.points[0].targetX &&
              ((this.isFilling = !1),
              this.updateWaveState(d.WaveStates.FILLED)));
        }
        render(e) {
          if (0 === this.points.length) return;
          let [t, ...n] = this.points;
          e.save(),
            e.beginPath(),
            e.moveTo(t.x, t.y),
            n.forEach((t, s) => {
              if (null == n[s + 1]) e.quadraticCurveTo(t.x, t.y, t.x, t.y);
              else {
                let i = (t.x + n[s + 1].x) / 2,
                  r = (t.y + n[s + 1].y) / 2;
                e.quadraticCurveTo(t.x, t.y, i, r);
              }
            }),
            e.lineTo(0, 0),
            e.closePath(),
            (e.fillStyle = "#000"),
            (e.globalCompositeOperation = "destination-in"),
            e.fill(),
            e.restore();
        }
        fill() {
          let e =
              Math.sqrt(
                window.innerWidth * window.innerWidth +
                  window.innerHeight * window.innerHeight
              ) + 100,
            t = g() - 140,
            n = (e, t, n, s) => {
              (e.targetX =
                -40 + t * Math.cos(d.TWO_PI * ((n / 15) * 0.25 + 0))),
                (e.targetY =
                  -40 + t * Math.sin(d.TWO_PI * ((n / 15) * 0.25 + 0))),
                s &&
                  ((e.targetX += (0, u.randomNumber)(0, 30) - 15),
                  (e.targetY += (0, u.randomNumber)(0, 30) - 15),
                  (e.speedUp = 3),
                  (e.spring.tension =
                    d.POINT_TENSION_DEFAULT * Math.random() * 0.5 +
                    d.POINT_TENSION_DEFAULT));
            };
          this.points.forEach((e, s) => n(e, t, s, !0)),
            setTimeout(() => {
              this.points.forEach((t, s) => {
                n(t, e, s, !1);
                let i = 1 - t.index / 7.5;
                (t.spring.friction +=
                  t.spring.friction + t.spring.friction * i),
                  (t.spring.tension =
                    0.7 * d.POINT_TENSION_DEFAULT + 80 * Math.random()),
                  (t.waveRange = 2 * t.waveRange);
              }),
                (this.isFilling = !0),
                this.updateWaveState(d.WaveStates.FILLING);
            }, 250);
        }
      };
    },
    542227: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          MAX_RADIUS: function () {
            return i;
          },
          MIN_RADIUS: function () {
            return s;
          },
          POINT_TENSION_DEFAULT: function () {
            return a;
          },
          TWO_PI: function () {
            return r;
          },
          WaveStates: function () {
            return o;
          },
        });
      let s = 780,
        i = 1e3,
        r = 2 * Math.PI,
        a = 150,
        o = { INITIAL: 0, ENTERED: 1, FILLING: 2, FILLED: 3 };
    },
    441786: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      function s(e, t) {
        return Math.max(Math.min((e - t) / 30, 1), -1);
      }
      var i = class e {
        initialize() {
          window.addEventListener("mousemove", this.handleMouseMove);
        }
        terminate() {
          window.removeEventListener("mousemove", this.handleMouseMove);
        }
        update() {
          this.x !== this.px &&
            this.y !== this.py &&
            ((this.forceX += s(this.x, this.px)),
            (this.forceY += s(this.y, this.py)),
            (this.px = this.x),
            (this.py = this.y)),
            0 !== this.forceX && (this.forceX = this.forceX * this.resistance),
            0 !== this.forceY && (this.forceY = this.forceY * this.resistance);
        }
        render() {}
        constructor() {
          (this.resistance = 0.98),
            (this.px = 0),
            (this.py = 0),
            (this.x = 0),
            (this.y = 0),
            (this.forceX = 0),
            (this.forceY = 0),
            (this.handleMouseMove = e => {
              let { clientX: t, clientY: n } = e;
              (this.x = t), (this.y = n);
            });
        }
      };
    },
    8004: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var s = n("735250");
      n("470079");
      var i = n("336328"),
        r = n("981956"),
        a = n("262113"),
        o = (0, i.replaceIcon)(
          function (e) {
            let {
              width: t = 16,
              height: n = 16,
              color: i = "currentColor",
              foreground: r,
              ...o
            } = e;
            return (0, s.jsx)("svg", {
              ...(0, a.default)(o),
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              children: (0, s.jsx)("path", {
                d: "M12 2C6.4764 2 2 6.4764 2 12C2 17.5236 6.4764 22 12 22C17.5236 22 22 17.5236 22 12C22 6.4764 17.5236 2 12 2ZM12 5.6C12.4422 5.6 12.8 5.95781 12.8 6.4V11.5376L16.5625 13.7126C16.9453 13.9329 17.0703 14.4173 16.85 14.8001C16.6297 15.183 16.1453 15.3079 15.7625 15.0876L11.6873 12.7376C11.656 12.7251 11.6279 12.7048 11.5998 12.6876C11.3607 12.5486 11.1998 12.2954 11.1998 12.0001V6.4001C11.1998 5.9579 11.5578 5.6 12 5.6Z",
                fill: i,
                className: r,
              }),
            });
          },
          r.ClockIcon,
          void 0,
          { size: 16 }
        );
    },
    543124: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var s = n("735250");
      n("470079");
      var i = n("336328"),
        r = n("797217"),
        a = n("262113"),
        o = (0, i.replaceIcon)(
          function (e) {
            let {
              width: t = 24,
              height: n = 24,
              color: i = "currentColor",
              foreground: r,
              ...o
            } = e;
            return (0, s.jsx)("svg", {
              ...(0, a.default)(o),
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              children: (0, s.jsx)("path", {
                fill: i,
                className: r,
                fillRule: "evenodd",
                d: "M16.4770909,19 C18.0152727,16.936 18.9381818,14.531 19.1323636,12 L21.7527273,12 C21.3829091,15.056 19.3363636,17.65 16.4770909,19 Z M2.24618182,12 L4.86654545,12 C5.06072727,14.531 5.98363636,16.936 7.52181818,19 C4.66254545,17.65 2.616,15.056 2.24618182,12 Z M7.52181818,3 C5.98254545,5.064 5.06072727,7.469 4.86654545,10 L2.24618182,10 C2.616,6.944 4.66254545,4.35 7.52181818,3 Z M13.0909091,10 L13.0909091,2.369 C15.3294545,4.416 16.6930909,7.111 16.9505455,10 L13.0909091,10 Z M13.0909091,19.631 L13.0909091,12 L16.9505455,12 C16.6930909,14.889 15.3294545,17.584 13.0909091,19.631 Z M10.9090909,12 L10.9090909,19.631 C8.66945455,17.584 7.30581818,14.889 7.04836364,12 L10.9090909,12 Z M10.9090909,10 L7.04836364,10 C7.30581818,7.111 8.66945455,4.416 10.9090909,2.369 L10.9090909,10 Z M19.1323636,10 C18.9381818,7.469 18.0163636,5.064 16.4770909,3 C19.3363636,4.35 21.3829091,6.944 21.7527273,10 L19.1323636,10 Z M0,11 C0,17.075 5.37163636,22 12,22 C18.6272727,22 24,17.075 24,11 C24,4.925 18.6272727,0 12,0 C5.37163636,0 0,4.925 0,11 Z",
                transform: "translate(0 1)",
              }),
            });
          },
          r.GlobeEarthIcon,
          void 0,
          { size: 24 }
        );
    },
    87645: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var s = n("735250");
      n("470079");
      var i = n("336328"),
        r = n("210624"),
        a = n("262113"),
        o = (0, i.replaceIcon)(
          function (e) {
            let {
              width: t = 24,
              height: n = 24,
              color: i = "currentColor",
              foreground: r,
              ...o
            } = e;
            return (0, s.jsx)("svg", {
              ...(0, a.default)(o),
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              children: (0, s.jsxs)("g", {
                fill: "none",
                fillRule: "evenodd",
                children: [
                  (0, s.jsx)("path", {
                    className: r,
                    fill: i,
                    d: "M10.59 13.41c.41.39.41 1.03 0 1.42-.39.39-1.03.39-1.42 0a5.003 5.003 0 0 1 0-7.07l3.54-3.54a5.003 5.003 0 0 1 7.07 0 5.003 5.003 0 0 1 0 7.07l-1.49 1.49c.01-.82-.12-1.64-.4-2.42l.47-.48a2.982 2.982 0 0 0 0-4.24 2.982 2.982 0 0 0-4.24 0l-3.53 3.53a2.982 2.982 0 0 0 0 4.24zm2.82-4.24c.39-.39 1.03-.39 1.42 0a5.003 5.003 0 0 1 0 7.07l-3.54 3.54a5.003 5.003 0 0 1-7.07 0 5.003 5.003 0 0 1 0-7.07l1.49-1.49c-.01.82.12 1.64.4 2.43l-.47.47a2.982 2.982 0 0 0 0 4.24 2.982 2.982 0 0 0 4.24 0l3.53-3.53a2.982 2.982 0 0 0 0-4.24.973.973 0 0 1 0-1.42z",
                  }),
                  (0, s.jsx)("rect", { width: "24", height: "24" }),
                ],
              }),
            });
          },
          r.LinkIcon,
          void 0,
          { size: 24 }
        );
    },
    187281: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var s = n("735250");
      n("470079");
      var i = n("336328"),
        r = n("703666"),
        a = n("262113"),
        o = (0, i.replaceIcon)(
          function (e) {
            let {
              width: t = 24,
              height: n = 24,
              color: i = "currentColor",
              className: r,
              foreground: o,
              ...u
            } = e;
            return (0, s.jsx)("svg", {
              width: t,
              height: n,
              className: r,
              viewBox: "0 0 24 24",
              ...(0, a.default)(u),
              children: (0, s.jsx)("path", {
                className: o,
                fill: i,
                d: "M17 11V7C17 4.243 14.756 2 12 2C9.242 2 7 4.243 7 7V11C5.897 11 5 11.896 5 13V20C5 21.103 5.897 22 7 22H17C18.103 22 19 21.103 19 20V13C19 11.896 18.103 11 17 11ZM12 18C11.172 18 10.5 17.328 10.5 16.5C10.5 15.672 11.172 15 12 15C12.828 15 13.5 15.672 13.5 16.5C13.5 17.328 12.828 18 12 18ZM15 11H9V7C9 5.346 10.346 4 12 4C13.654 4 15 5.346 15 7V11Z",
                "aria-hidden": !0,
              }),
            });
          },
          r.LockIcon,
          void 0,
          { size: 24 }
        );
    },
    392867: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var s = n("735250");
      n("470079");
      var i = n("336328"),
        r = n("465744"),
        a = n("262113"),
        o = (0, i.replaceIcon)(
          function (e) {
            let {
              width: t = 16,
              height: n = 16,
              color: i = "currentColor",
              foreground: r,
              ...o
            } = e;
            return (0, s.jsx)("svg", {
              ...(0, a.default)(o),
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              children: (0, s.jsx)("path", {
                className: r,
                fill: i,
                d: "M12 2C14.761 2 17 4.238 17 7V9H7V7C7 4.238 9.238 2 12 2ZM10.5 5.5C10.5 6.329 11.172 7 12 7C12.828 7 13.5 6.329 13.5 5.5C13.5 4.671 12.828 4 12 4C11.172 4 10.5 4.671 10.5 5.5ZM23 22H17L19 19V12H17V18C17 18.553 16.552 19 16 19H14L15 22H9L10 19H8C7.448 19 7 18.553 7 18V12H5V19L7 22H1L3 19V12C3 10.896 3.897 10 5 10H19C20.103 10 21 10.896 21 12V19L23 22ZM13 14C13 14.553 13.448 15 14 15C14.552 15 15 14.553 15 14C15 13.447 14.552 13 14 13C13.448 13 13 13.447 13 14Z",
              }),
            });
          },
          r.RobotIcon,
          void 0,
          { size: 16 }
        );
    },
    629546: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var s = n("735250");
      n("470079");
      var i = n("336328"),
        r = n("57365"),
        a = n("262113"),
        o = (0, i.replaceIcon)(
          function (e) {
            let {
              width: t = 18,
              height: n = 18,
              color: i = "currentColor",
              foreground: r,
              ...o
            } = e;
            return (0, s.jsx)("svg", {
              ...(0, a.default)(o),
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              children: (0, s.jsx)("path", {
                className: r,
                fill: i,
                d: "M19 6.00001C15.56 6.00001 12.826 2.43501 12.799 2.39801C12.421 1.89801 11.579 1.89801 11.201 2.39801C11.174 2.43501 8.44 6.00001 5 6.00001C4.447 6.00001 4 6.44801 4 7.00001V14C4 17.807 10.764 21.478 11.534 21.884C11.68 21.961 11.84 21.998 12 21.998C12.16 21.998 12.32 21.96 12.466 21.884C13.236 21.478 20 17.807 20 14V7.00001C20 6.44801 19.553 6.00001 19 6.00001ZM15 16L12 14L9 16L10 13L8 11H11L12 8.00001L13 11H16L14 13L15 16Z",
              }),
            });
          },
          r.ShieldIcon,
          void 0,
          { size: 18 }
        );
    },
    982699: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var s = n("735250");
      n("470079");
      var i = n("336328"),
        r = n("195893"),
        a = n("262113"),
        o = (0, i.replaceIcon)(
          function (e) {
            let {
              width: t = 16,
              height: n = 16,
              color: i = "currentColor",
              ...r
            } = e;
            return (0, s.jsx)("svg", {
              ...(0, a.default)(r),
              width: t,
              height: n,
              viewBox: "0 0 16 15.2",
              children: (0, s.jsx)("path", {
                d: "M7.4,11.17,4,8.62,5,7.26l2,1.53L10.64,4l1.36,1Z",
                fill: i,
              }),
            });
          },
          r.CheckmarkSmallIcon,
          void 0,
          { size: 16 }
        );
    },
    799711: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          fetchAssetIds: function () {
            return A;
          },
          getAssetFromImageURL: function () {
            return v;
          },
          getAssetIds: function () {
            return N;
          },
          getAssetImage: function () {
            return y;
          },
          getAssets: function () {
            return I;
          },
        }),
        n("216116"),
        n("78328"),
        n("815648");
      var s = n("512722"),
        i = n.n(s),
        r = n("454836"),
        a = n("312916"),
        o = n("780535"),
        u = n("841869"),
        d = n("500833"),
        l = n("467006");
      let f = "https://i.scdn.co/image/",
        _ = (e, t, n) =>
          `https://static-cdn.jtvnw.net/previews-ttv/live_user_${e}-${t}x${n}.jpg`,
        c =
          /https:\/\/static-cdn\.jtvnw\.net\/previews-ttv\/live_user_(.+)-\{width\}x\{height\}.jpg/,
        g = e => `https://i.ytimg.com/vi/${e}/hqdefault_live.jpg`,
        m =
          /https:\/\/i\.ytimg\.com\/vi\/([a-zA-Z0-9_-]+)\/hqdefault_live\.jpg/,
        h = {
          [l.PlatformTypes.SPOTIFY]: {
            deserialize: e => `${f}${encodeURIComponent(e)}`,
            serialize: e => e.split(f)[1],
          },
          [l.PlatformTypes.TWITCH]: {
            deserialize: (e, t) => _(encodeURIComponent(e), t[0], t[1]),
            serialize: e => {
              let t = e.match(c);
              return null != t ? t[1] : null;
            },
          },
          [l.PlatformTypes.YOUTUBE]: {
            deserialize: e => g(encodeURIComponent(e)),
            serialize: e => {
              let t = e.match(m);
              return null != t ? t[1] : null;
            },
          },
          mp: {
            deserialize: e => (
              i()(
                null != window.GLOBAL_ENV.MEDIA_PROXY_ENDPOINT,
                "MEDIA_PROXY_ENDPOINT not configured"
              ),
              new URL(
                e,
                location.protocol + window.GLOBAL_ENV.MEDIA_PROXY_ENDPOINT
              ).toString()
            ),
            serialize: e => e,
          },
        },
        E = {};
      async function p(e) {
        let { body: t } = await r.default.get({
          url: l.Endpoints.APPLICATION_ASSETS(e),
          oldFormErrors: !0,
        });
        return (
          a.default.dispatch({
            type: "APPLICATION_ASSETS_UPDATE",
            applicationId: e,
            assets: t,
          }),
          o.default.getApplicationAssets(e)
        );
      }
      function v(e, t) {
        let n = h[e].serialize(t);
        return n ? `${e}:${n.toString()}` : null;
      }
      function y(e, t, n) {
        if (null != t && t.includes(":")) {
          let [e, s] = t.split(":");
          if (e === l.PlatformTypes.TWITCH) {
            if (null == n || "number" == typeof n) {
              new u.default("ApplicationAssetUtils").warn(
                "getAssetImage: size must === [number, number] for Twitch"
              );
              return;
            }
            return h[l.PlatformTypes.TWITCH].deserialize(s, n);
          }
          return Object.prototype.hasOwnProperty.call(h, e)
            ? h[e].deserialize(s)
            : void 0;
        }
        if (null == e || null == t) return;
        let s =
          "number" == typeof n
            ? `?size=${(0, d.getBestMediaProxySize)(n)}`
            : "";
        return null != window.GLOBAL_ENV.CDN_HOST
          ? `${location.protocol}//${window.GLOBAL_ENV.CDN_HOST}/app-assets/${e}/${t}.png${s}`
          : `${r.default.getAPIBaseURL()}/applications/${e}/app-assets/${t}.png${s}`;
      }
      async function I(e) {
        let t = await (function (e) {
          var t;
          let n = o.default.getApplicationAssets(e);
          return null == n || ((t = n.lastUpdated), Date.now() - t > 36e5)
            ? p(e)
            : Promise.resolve(n);
        })(e);
        return t?.assets;
      }
      async function T(e, t) {
        let n = t.filter(
          e =>
            null != e &&
            !Object.prototype.hasOwnProperty.call(E, e) &&
            null == E[e]
        );
        if (0 === n.length) return;
        let { body: s } = await r.default.post({
          url: l.Endpoints.APPLICATION_EXTERNAL_ASSETS(e),
          body: { urls: n },
          oldFormErrors: !0,
        });
        for (let { url: e, external_asset_path: t } of s) E[e] = t;
      }
      function S(e, t) {
        let n = 0;
        if (
          e.filter(e => e?.startsWith("http:") || e?.startsWith("https:"))
            .length > 0
        )
          for (let s = 0; s < e.length; s++) {
            let i = e[s];
            if (null == i) continue;
            let r = Object.prototype.hasOwnProperty.call(E, i) ? E[i] : void 0;
            null != r && ((t[s] = v("mp", r)), n++);
          }
        return n === e.length;
      }
      function C(e, t, n, s) {
        let i = !1;
        for (let r = 0; r < e.length; r++) {
          let a = e[r];
          if (null == a || null != t[r]) continue;
          let o = Object.prototype.hasOwnProperty.call(n, a) && n[a];
          if (!o) {
            if (null == s || s <= 0) {
              t[r] = null;
              continue;
            }
            i = !0;
          }
          t[r] = o.id;
        }
        return i;
      }
      async function A(e, t) {
        let n =
          arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
        a.default.dispatch({
          type: "APPLICATION_ASSETS_FETCH",
          applicationId: e,
        });
        let s = [],
          i = t.filter(e => e?.startsWith("http:") || e?.startsWith("https:"));
        return (i.length > 0 && (await T(e, i)), S(t, s))
          ? (a.default.dispatch({
              type: "APPLICATION_ASSETS_FETCH_SUCCESS",
              applicationId: e,
            }),
            s)
          : C(t, s, await I(e), n)
            ? p(e).then(() => A(e, t, n - 1))
            : (a.default.dispatch({
                type: "APPLICATION_ASSETS_FETCH_SUCCESS",
                applicationId: e,
              }),
              s);
      }
      function N(e, t) {
        let n = [];
        if (S(t, n)) return n;
        let s = o.default.getApplicationAssets(e);
        return null == s ? n : (C(t, n, s), n);
      }
    },
    305980: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          cancelGetAttachmentFile: function () {
            return u;
          },
          getAttachmentFile: function () {
            return o;
          },
        });
      var s = n("512722"),
        i = n.n(s),
        r = n("789883"),
        a = n("980227");
      function o(e, t) {
        i()(
          e.item.platform === r.UploadPlatform.WEB,
          "Upload must be in the Web format"
        );
        let n = (0, a.getAttachmentPayload)(e, t);
        return Promise.resolve({ file: e.item.file, name: n.filename ?? "" });
      }
      async function u(e) {}
    },
    557129: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          channelTypeString: function () {
            return M;
          },
          computeSummarizedVoiceUsers: function () {
            return b;
          },
          getBitrateLimit: function () {
            return P;
          },
          getChannelLinkToCopy: function () {
            return w;
          },
          getChannelPermalink: function () {
            return k;
          },
          getMentionIconType: function () {
            return V;
          },
          isChannelFull: function () {
            return R;
          },
          permissionOverwriteForRole: function () {
            return D;
          },
          permissionOverwriteForUser: function () {
            return N;
          },
          permissionOverwritesForAnnouncement: function () {
            return O;
          },
          permissionOverwritesForRoles: function () {
            return A;
          },
          previousTextChannelRouteForGuild: function () {
            return L;
          },
          sanitizeGuildTextChannelName: function () {
            return r.default;
          },
        }),
        n("653041");
      var s = n("768517"),
        i = n("243770"),
        r = n("714381"),
        a = n("124828"),
        o = n("854588"),
        u = n("256157"),
        d = n("775822"),
        l = n("731865"),
        f = n("610043"),
        _ = n("197905"),
        c = n("232733"),
        g = n("769639"),
        m = n("694574"),
        h = n("84819"),
        E = n("467006"),
        p = n("171168"),
        v = n("30175");
      let {
        GUILD_VOICE: y,
        GUILD_CATEGORY: I,
        GUILD_STAGE_VOICE: T,
      } = E.ChannelTypes;
      function S(e, t) {
        return e === t || e === I;
      }
      function C(e, t, n) {
        let i = m.default.NONE;
        return (
          ((0, d.isGuildSelectableChannelType)(t) || t === I) &&
            (i = s.default.add(i, E.Permissions.VIEW_CHANNEL)),
          (S(t, y) || S(t, T)) &&
            ((i = s.default.add(i, E.Permissions.VIEW_CHANNEL)),
            (i = s.default.add(i, E.Permissions.CONNECT))),
          { id: e, type: n, deny: m.default.NONE, allow: i }
        );
      }
      function A(e, t, n) {
        let r = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],
          a = [];
        if (n.length > 0 || r) {
          var o, u, l;
          let n;
          a.push(
            ((o = e),
            (u = t),
            (l = i.PermissionOverwriteType.ROLE),
            (n = m.default.NONE),
            ((0, d.isGuildSelectableChannelType)(u) || u === I) &&
              (n = s.default.add(n, E.Permissions.VIEW_CHANNEL)),
            S(u, y) &&
              ((n = s.default.add(n, E.Permissions.VIEW_CHANNEL)),
              (n = s.default.add(n, E.Permissions.CONNECT))),
            { id: o, type: l, allow: m.default.NONE, deny: n })
          );
        }
        return (
          n.forEach(e => {
            a.push(C(e, t, i.PermissionOverwriteType.ROLE));
          }),
          a
        );
      }
      function N(e, t) {
        return C(e, t, i.PermissionOverwriteType.MEMBER);
      }
      function D(e, t) {
        return C(e, t, i.PermissionOverwriteType.ROLE);
      }
      function O(e) {
        return [
          {
            id: e,
            type: i.PermissionOverwriteType.ROLE,
            deny: E.Permissions.SEND_MESSAGES,
            allow: m.default.NONE,
          },
        ];
      }
      function R(e, t, n) {
        let s = e.getGuildId(),
          i = n.getGuild(s),
          r = i?.maxVideoChannelUsers ?? -1,
          o = i?.maxStageVideoChannelUsers ?? -1,
          u = g.default.countVoiceStatesForChannel(e.id),
          d = g.default.getVoiceStatesForChannel(e),
          l =
            _.default.can(E.Permissions.MOVE_MEMBERS, e) &&
            _.default.can(E.Permissions.CONNECT, e),
          f = !1;
        f =
          e.type === T
            ? null != s &&
              (t.hasVideo(e.id) || (0, a.hasStream)(d)) &&
              o > 0 &&
              u >= o
            : null != s && t.hasVideo(e.id) && r > 0 && u >= r + (l ? 1 : 0);
        let c = e.userLimit > 0 && u >= e.userLimit;
        return f || (c && !l);
      }
      function P(e, t) {
        return t.isGuildStageVoice()
          ? E.BITRATE_DEFAULT
          : null == e
            ? E.BITRATE_MAX
            : Math.max(
                e.hasFeature(E.GuildFeatures.VIP_REGIONS)
                  ? p.BoostedGuildFeatures[E.BoostedGuildTiers.TIER_3].limits
                      .bitrate
                  : E.BITRATE_MAX,
                p.BoostedGuildFeatures[e.premiumTier].limits.bitrate
              );
      }
      function b(e) {
        let {
          channels: t,
          selectedChannelId: n,
          selectedVoiceChannelId: s,
          voiceStates: i,
        } = e;
        return (function (e) {
          let {
              channels: t,
              selectedChannelId: n,
              selectedVoiceChannelId: s,
              voiceStates: i,
            } = e,
            r = [];
          return (
            t.forEach(e => {
              if (e.id === s || e.id === n) return;
              let t = i[e.id];
              null != t &&
                (e.isGuildStageVoice()
                  ? t.forEach(e => {
                      (0, u.getAudienceRequestToSpeakState)(e.voiceState) ===
                        u.RequestToSpeakStates.ON_STAGE && r.push(e);
                    })
                  : t.forEach(e => r.push(e)));
            }),
            r
          );
        })({
          channels: t,
          selectedChannelId: n,
          selectedVoiceChannelId: s,
          voiceStates: i,
        }).map(e => e.user);
      }
      function M(e) {
        let { type: t } = e;
        switch (t) {
          case E.ChannelTypes.DM:
            return v.default.Messages.DM;
          case E.ChannelTypes.GROUP_DM:
            return v.default.Messages.GROUP_DM;
          case E.ChannelTypes.GUILD_TEXT:
            return v.default.Messages.TEXT_CHANNEL;
          case E.ChannelTypes.GUILD_FORUM:
            return v.default.Messages.FORUM_CHANNEL;
          case E.ChannelTypes.GUILD_MEDIA:
            return v.default.Messages.MEDIA_CHANNEL;
          case E.ChannelTypes.GUILD_VOICE:
            return v.default.Messages.VOICE_CHANNEL;
          case E.ChannelTypes.GUILD_STAGE_VOICE:
            return v.default.Messages.STAGE_CHANNEL;
          case E.ChannelTypes.GUILD_ANNOUNCEMENT:
            return v.default.Messages.NEWS_CHANNEL;
          case E.ChannelTypes.GUILD_STORE:
            return v.default.Messages.STORE_CHANNEL;
          case E.ChannelTypes.GUILD_CATEGORY:
            return v.default.Messages.CATEGORY;
          default:
            return null;
        }
      }
      function V(e) {
        if (null == e) return "text";
        let t = e.isMediaChannel();
        if (e.type === E.ChannelTypes.GUILD_VOICE)
          return _.default.can(E.Permissions.CONNECT, e)
            ? "voice"
            : "voice-locked";
        if (e.type === E.ChannelTypes.GUILD_STAGE_VOICE)
          return _.default.can(E.Permissions.CONNECT, e)
            ? "stage"
            : "stage-locked";
        if (d.THREAD_CHANNEL_TYPES.has(e.type))
          return e.isForumPost() ? "post" : "thread";
        else if (e.type === E.ChannelTypes.GUILD_FORUM)
          return t ? "media" : "forum";
        else if (e.type === E.ChannelTypes.GUILD_MEDIA) return "media";
        else if (d.TEXT_CHANNEL_TYPES.has(e.type)) return "text";
      }
      function L(e) {
        let t;
        let n = l.default.getChannel(c.default.getLastSelectedChannelId());
        if (
          null != n &&
          n.getGuildId() === e &&
          n.type === E.ChannelTypes.GUILD_TEXT
        )
          t = n.id;
        else {
          let n = f.default.getDefaultChannel(e);
          t = null != n ? n.id : null;
        }
        return E.Routes.CHANNEL(e, t);
      }
      function k(e, t, n, s) {
        let i = null == s ? "" : `?summaryId=${s}`;
        return `${location.protocol}//${location.host}${E.Routes.CHANNEL(e, t, n)}${i}`;
      }
      function w(e, t, n, s) {
        let i;
        let r = e.getGuildId(),
          a = (0, o.canUseMediaPostEmbed)(r, t);
        if (null != t && a) {
          var u, d, l, f;
          (u = r),
            (d = t.id),
            (l = e.id),
            (f = h.default.castChannelIdAsMessageId(e.id)),
            (i =
              null == u || null == d || null == l
                ? k(u, d, f)
                : `${location.protocol}//${location.host}${E.Routes.CHANNEL_THREAD_VIEW(u, d, l, f)}`);
        } else i = s ?? k(r, e.id, n);
        return i;
      }
    },
    490884: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      let s = /^#[0-9a-f]{3,8}$/i,
        i = /^((?:rgb|hsl)a?)\s*\(([^)]*)\)/i;
      class r {
        constructor(e, t, n, s) {
          (this.red = e), (this.green = t), (this.blue = n), (this.alpha = s);
        }
        toHexString() {
          var e = Math.round(this.red).toString(16),
            t = Math.round(this.green).toString(16),
            n = Math.round(this.blue).toString(16);
          return (
            "#" +
            (this.red > 15.5 ? e : "0" + e) +
            (this.green > 15.5 ? t : "0" + t) +
            (this.blue > 15.5 ? n : "0" + n)
          );
        }
        static parseString(e) {
          return null != e.match(i)
            ? this.parseColorFnString(e)
            : null != e.match(s)
              ? this.parseHexString(e)
              : void 0;
        }
        static parseRgbString(e) {
          return "transparent" === e
            ? new r(0, 0, 0, 0)
            : this.parseColorFnString(e);
        }
        static parseHexString(e) {
          if (!(null == e.match(s) || [6, 8].includes(e.length))) {
            if ((e = e.replace("#", "")).length < 6) {
              let [t, n, s, i] = e;
              (e = t + t + n + n + s + s), null != i && (e += i + i);
            }
            var t = e.match(/.{1,2}/g);
            if (null != t)
              return new r(
                parseInt(t[0], 16),
                parseInt(t[1], 16),
                parseInt(t[2], 16),
                null != t[3] ? parseInt(t[3], 16) / 255 : 1
              );
          }
        }
        static parseColorFnString(e) {
          let [, t, n] = e.match(i) ?? [];
          if (null == t || null == n) return;
          let s = n
            .split(/\s*[,/\s]\s*/)
            .map(e => e.replace(",", "").trim())
            .filter(e => "" !== e)
            .map((e, n) =>
              (function (e, t, n) {
                if (/%$/.test(t))
                  return 3 === n
                    ? parseFloat(t) / 100
                    : (255 * parseFloat(t)) / 100;
                if ("h" === e[n]) {
                  if (/turn$/.test(t)) return 360 * parseFloat(t);
                  if (/rad$/.test(t)) return 57.3 * parseFloat(t);
                }
                return parseFloat(t);
              })(t, e, n)
            );
          if ("hsl" === t.substr(0, 3)) {
            let e = (function (e) {
              let t,
                { hue: n, saturation: s, lightness: i, alpha: r } = e,
                a = (1 - Math.abs(2 * (i /= 255) - 1)) * (s /= 255),
                o = a * (1 - Math.abs(((n / 60) % 2) - 1)),
                u = i - a / 2,
                d = (t =
                  n < 60
                    ? [a, o, 0]
                    : n < 120
                      ? [o, a, 0]
                      : n < 180
                        ? [0, a, o]
                        : n < 240
                          ? [0, o, a]
                          : n < 300
                            ? [o, 0, a]
                            : [a, 0, o]).map(e => Math.round((e + u) * 255));
              return { red: d[0], green: d[1], blue: d[2], alpha: r };
            })({ hue: s[0], saturation: s[1], lightness: s[2], alpha: s[3] });
            return new r(e.red, e.green, e.blue, e.alpha);
          }
          return new r(s[0], s[1], s[2], "number" == typeof s[3] ? s[3] : 1);
        }
        toHSL() {
          return (function (e) {
            let { red: t, green: n, blue: s, alpha: i } = e,
              r = t / 255,
              a = n / 255,
              o = s / 255,
              u = Math.max(r, a, o),
              d = Math.min(r, a, o),
              l = u - d,
              f = (u + d) / 2,
              _ = l > 0 ? l / (1 - Math.abs(2 * f - 1)) : 0;
            if (0 === l)
              return { hue: 0, saturation: _, lightness: f, alpha: i };
            let c = 0;
            switch (u) {
              case r:
                c = ((a - o) / l) % 6;
                break;
              case a:
                c = (o - r) / l + 2;
                break;
              case o:
                c = (a - o) / l + 4;
            }
            return { hue: 60 * c, saturation: _, lightness: f, alpha: i };
          })({
            red: this.red,
            green: this.green,
            blue: this.blue,
            alpha: this.alpha,
          });
        }
        getRelativeLuminance() {
          var e = this.red / 255,
            t = this.green / 255,
            n = this.blue / 255;
          return (
            0.2126 *
              (e <= 0.03928 ? e / 12.92 : Math.pow((e + 0.055) / 1.055, 2.4)) +
            0.7152 *
              (t <= 0.03928 ? t / 12.92 : Math.pow((t + 0.055) / 1.055, 2.4)) +
            0.0722 *
              (n <= 0.03928 ? n / 12.92 : Math.pow((n + 0.055) / 1.055, 2.4))
          );
        }
      }
    },
    567746: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          findColorByHsv: function () {
            return E;
          },
          getAccessibleColor: function () {
            return h;
          },
          getColorLightnessAdjusted: function () {
            return m;
          },
          getComplimentaryPaletteForColor: function () {
            return l;
          },
          getSaturatedColorHex: function () {
            return v;
          },
          hexOpacityToRgba: function () {
            return u;
          },
          hexToRgb: function () {
            return o;
          },
          hexWithOpacity: function () {
            return a;
          },
          interpolateColor: function () {
            return y;
          },
          rawRgbToHsl: function () {
            return c;
          },
          rgbToHex: function () {
            return d;
          },
        }),
        n("653041");
      var s = n("148817");
      n("841869");
      var i = n("490884"),
        r = n("30175");
      function a(e, t) {
        let n;
        let s = e;
        9 === e.length
          ? ((s = e.slice(0, 7)),
            (n = Math.round((parseInt(e.slice(7, 9), 16) / 255) * t * 255)))
          : (n = Math.round(255 * t));
        let i = n.toString(16).toUpperCase().padStart(2, "0");
        return `${s}${i}`.padEnd(9, "0");
      }
      function o(e) {
        "#" === e[0] && (e = e.slice(1));
        let t = parseInt(e, 16);
        return { r: (t >> 16) & 255, g: (t >> 8) & 255, b: 255 & t };
      }
      function u(e, t) {
        let { r: n, g: s, b: i } = o(e);
        return `rgba(${n}, ${s}, ${i}, ${t})`;
      }
      function d(e, t, n) {
        return (
          "#" + (16777216 + (e << 16) + (t << 8) + n).toString(16).slice(1)
        );
      }
      function l(e) {
        let t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 3,
          n = [],
          {
            h: s,
            s: i,
            l: r,
          } = (function (e, t, n) {
            let s = Math.min((e /= 255), (t /= 255), (n /= 255)),
              i = Math.max(e, t, n),
              r = i - s,
              a = 0,
              o = 0,
              u = 0;
            return (
              (a = Math.round(
                60 *
                  (a =
                    0 === r
                      ? 0
                      : i === e
                        ? ((t - n) / r) % 6
                        : i === t
                          ? (n - e) / r + 2
                          : (e - t) / r + 4)
              )) < 0 && (a += 360),
              (u = (i + s) / 2),
              (o = +(
                100 * (o = 0 === r ? 0 : r / (1 - Math.abs(2 * u - 1)))
              ).toFixed(1)),
              { h: a, s: o, l: (u = +(100 * u).toFixed(1)) }
            );
          })(e[0], e[1], e[2]),
          a = s,
          u = i,
          d = r;
        u < 30 && (u += 30), d > 80 && (d -= 40), d < 20 && (d += 15);
        let l = 360 / (t + 1);
        for (; n.length < t; ) {
          (a -= l) < 0 && (a += 360);
          let {
            r: e,
            g: t,
            b: s,
          } = o(
            (function (e, t, n) {
              let s = (t * Math.min((n /= 100), 1 - n)) / 100,
                i = t => {
                  let i = (t + e / 30) % 12;
                  return Math.round(
                    255 * (n - s * Math.max(Math.min(i - 3, 9 - i, 1), -1))
                  )
                    .toString(16)
                    .padStart(2, "0");
                };
              return `#${i(0)}${i(8)}${i(4)}`;
            })(a, u, d)
          );
          n.push([e, t, s]);
        }
        return n;
      }
      function f(e) {
        let { red: t, green: n, blue: s } = e,
          i = [t, n, s].map(e =>
            (e /= 255) <= 0.03928
              ? e / 12.92
              : Math.pow((e + 0.055) / 1.055, 2.4)
          );
        return 0.2126 * i[0] + 0.7152 * i[1] + 0.0722 * i[2];
      }
      function _(e) {
        let t = e[0],
          n = e[1],
          s = f(t),
          i = f(n);
        return (Math.max(s, i) + 0.05) / (Math.min(s, i) + 0.05);
      }
      function c(e, t, n) {
        let s, i;
        let r = Math.max((e /= 255), (t /= 255), (n /= 255)),
          a = Math.min(e, t, n),
          o = (r + a) / 2;
        if (r === a) s = i = 0;
        else {
          let u = r - a;
          switch (((i = o > 0.5 ? u / (2 - r - a) : u / (r + a)), r)) {
            case e:
              s = (t - n) / u + (t < n ? 6 : 0);
              break;
            case t:
              s = (n - e) / u + 2;
              break;
            case n:
              s = (e - t) / u + 4;
          }
          null == s ? (s = 0) : (s /= 6);
        }
        return { hue: 360 * s, saturation: i, lightness: o, alpha: 1 };
      }
      function g(e, t, n) {
        let s, r, a;
        if (((e /= 360), 0 === t)) s = r = a = n;
        else {
          let i = function (e, t, n) {
              return (n < 0 && (n += 1), n > 1 && (n -= 1), n < 1 / 6)
                ? e + (t - e) * 6 * n
                : n < 0.5
                  ? t
                  : n < 2 / 3
                    ? e + (t - e) * (2 / 3 - n) * 6
                    : e;
            },
            o = n < 0.5 ? n * (1 + t) : n + t - n * t,
            u = 2 * n - o;
          (s = i(u, o, e + 1 / 3)), (r = i(u, o, e)), (a = i(u, o, e - 1 / 3));
        }
        return new i.default(
          Math.round(255 * s),
          Math.round(255 * r),
          Math.round(255 * a),
          1
        );
      }
      function m(e, t) {
        let n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
          s = c(e.red, e.green, e.blue);
        return (
          n
            ? (s.lightness = s.lightness + t > 1 ? 0.9 : s.lightness + t)
            : (s.lightness = s.lightness - t < 0 ? 0.1 : s.lightness - t),
          g(s.hue, s.saturation, s.lightness)
        );
      }
      function h(e) {
        let { colors: t, ratio: n = 5, saturationFactor: i = 1 } = e;
        if (t.length < 2) return;
        let r = t[0],
          a = t[1];
        if (null == a || null == r) return;
        let o = (0, s.hex2int)(a.toHexString()),
          u = (0, s.getDarkness)(o) > 0.5,
          d = _([r, a]),
          l = c(r.red, r.green, r.blue);
        for (l.saturation *= i; d < n && null != l; ) {
          if (u) {
            if (l.lightness < 0.95) l.lightness += 0.05;
            else break;
          } else if (l.lightness > 0.05) l.lightness -= 0.05;
          else break;
          d = _([g(l.hue, l.saturation, l.lightness), t[1]]);
        }
        return g(l.hue, l.saturation, l.lightness);
      }
      function E(e) {
        return e
          .slice(0, 3)
          .map(e => ({
            hex: e,
            hsv: (function (e) {
              let t, n, s, i, r;
              var a = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);
              if (null == a) return null;
              var o = parseInt(a[1], 16),
                u = parseInt(a[2], 16),
                d = parseInt(a[3], 16);
              let l = o / 255,
                f = u / 255,
                _ = d / 255,
                c = Math.max(l, f, _),
                g = c - Math.min(l, f, _),
                m = e => Math.round(100 * e) / 100;
              if (0 === g) i = r = 0;
              else
                (r = g / c),
                  (t = (c - l) / 6 / g + 0.5),
                  (n = (c - f) / 6 / g + 0.5),
                  (s = (c - _) / 6 / g + 0.5),
                  (i =
                    l === c
                      ? s - n
                      : f === c
                        ? 1 / 3 + t - s
                        : _ === c
                          ? 2 / 3 + n - t
                          : 0) < 0
                    ? (i += 1)
                    : i > 1 && (i -= 1);
              return { h: Math.round(360 * i), s: m(100 * r), v: m(100 * c) };
            })(e) ?? { h: 0, s: 0, v: 0 },
          }))
          .sort(p)[0].hex;
      }
      function p(e, t) {
        let n = e.hsv,
          s = t.hsv;
        return s.s + s.v - (n.s + n.v);
      }
      function v(e) {
        let { colorRGB: t, saturationFactor: n = 1 } = e;
        if (null == t) return t;
        let s = c(t.red, t.green, t.blue);
        return null == s
          ? t?.toHexString()
          : g(s.hue, s.saturation * n, s.lightness)?.toHexString();
      }
      function y(e, t, n) {
        let s = parseInt(e.substring(1, 3), 16),
          i = parseInt(e.substring(3, 5), 16),
          r = parseInt(e.substring(5, 7), 16),
          a = parseInt(t.substring(1, 3), 16),
          o = parseInt(t.substring(3, 5), 16),
          u = parseInt(t.substring(5, 7), 16),
          d = Math.round(s + (a - s) * n)
            .toString(16)
            .padStart(2, "0"),
          l = Math.round(i + (o - i) * n)
            .toString(16)
            .padStart(2, "0"),
          f = Math.round(r + (u - r) * n)
            .toString(16)
            .padStart(2, "0");
        return `#${d}${l}${f}`;
      }
    },
    923062: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getMaxEmbedMediaSize: function () {
            return T;
          },
          isEmbedInline: function () {
            return y;
          },
          isServerShopArticleEmbed: function () {
            return I;
          },
          mergeEmbedsOnURL: function () {
            return v;
          },
          sanitizeEmbed: function () {
            return p;
          },
        }),
        n("789020"),
        n("653041");
      var s = n("392711"),
        i = n.n(s),
        r = n("913527"),
        a = n.n(r),
        o = n("148817"),
        u = n("84819"),
        d = n("467006");
      let l = /sketchfab/i,
        f = /^https:\/\/sketchfab\.com/i,
        _ =
          /youtube|steam|imgur|vimeo|sketchfab|soundcloud|streamable|twitch|vid\.me|twitter/i,
        c =
          /^https?:\/\/(?:canary\.|ptb\.|www\.)?discord(?:app)?\.com\/channels\/([0-9]+)\/shop$/,
        g =
          /^https?:\/\/(?:canary\.|ptb\.|www\.)?discord(?:app)?\.com\/channels\/([0-9]+)\/shop\/([0-9]+)$/,
        m = new Set([
          d.MessageEmbedTypes.AUTO_MODERATION_MESSAGE,
          d.MessageEmbedTypes.AUTO_MODERATION_NOTIFICATION,
          d.MessageEmbedTypes.RICH,
          d.MessageEmbedTypes.SAFETY_POLICY_NOTICE,
          d.MessageEmbedTypes.SAFETY_SYSTEM_NOTIFICATION,
          d.MessageEmbedTypes.VOICE_CHANNEL,
        ]);
      function h(e) {
        let { width: t, height: n } = e;
        return t > 0 && n > 0;
      }
      function E(e) {
        let {
          url: t,
          proxy_url: n,
          width: s,
          height: i,
          placeholder: r,
          placeholder_version: a,
        } = e;
        return {
          url: t,
          proxyURL: n,
          width: s,
          height: i,
          placeholder: r,
          placeholderVersion: a,
        };
      }
      function p(e, t, n) {
        let s = {
          id: i().uniqueId("embed_"),
          url: n.url,
          type: n.type,
          rawTitle: n.title,
          rawDescription: n.description,
          referenceId: n.reference_id,
          flags: n.flags,
          contentScanVersion: n.content_scan_version,
        };
        if (
          (null != n.footer &&
            (s.footer = {
              text: n.footer.text,
              iconURL: n.footer.icon_url,
              iconProxyURL: n.footer.proxy_icon_url,
            }),
          null != n.author &&
            null != n.author.name &&
            (s.author = {
              name: n.author.name,
              url: n.author.url,
              iconURL: n.author.icon_url,
              iconProxyURL: n.author.proxy_icon_url,
            }),
          null != n.provider &&
            null != n.provider.name &&
            (s.provider = { name: n.provider.name, url: n.provider.url }),
          null != n.timestamp && (s.timestamp = a()(new Date(n.timestamp))),
          null != n.color && (s.color = (0, o.int2hsl)(n.color, !0)),
          null != n.thumbnail && h(n.thumbnail))
        )
          switch (s.type) {
            case d.MessageEmbedTypes.ARTICLE:
            case d.MessageEmbedTypes.IMAGE:
              s.image = E(n.thumbnail);
              break;
            default:
              s.thumbnail = E(n.thumbnail);
          }
        if (
          (null != n.image && h(n.image) && (s.image = E(n.image)),
          null != n.video &&
            (null == s.thumbnail &&
              null != n.video.proxy_url &&
              h(n.video) &&
              (s.thumbnail = {
                width: n.video.width,
                height: n.video.height,
                url: `${n.video.proxy_url}?format=jpeg`,
              }),
            null != s.thumbnail &&
              h(n.video) &&
              (function (e, t, n) {
                if ((null != t && l.test(t.name)) || f.test(n.url)) return !1;
                let s = null != n.proxy_url || /^https:/i.test(n.url);
                return (
                  null != e &&
                    1492472454139 > u.default.extractTimestamp(e) &&
                    (s = s && null != t && _.test(t.name)),
                  s
                );
              })(t, n.provider, n.video) &&
              (s.video = E(n.video))),
          m.has(s.type))
        ) {
          let e = n.fields ?? [];
          s.fields = e.map(e => {
            let { name: t, value: n, inline: s } = e;
            return { rawName: t, rawValue: n, inline: s };
          });
        } else s.fields = [];
        return s;
      }
      function v(e) {
        let t = new Map(),
          n = [];
        return (
          e.forEach(e => {
            if (null == e.url) {
              n.push(e);
              return;
            }
            let s = t.get(e.url);
            if (null == s) {
              n.push(e), t.set(e.url, e);
              return;
            }
            null != e.image &&
              (null == s.images &&
                ((s.images = []), null != s.image && s.images.push(s.image)),
              s.images.push(e.image));
          }),
          n
        );
      }
      function y(e) {
        let { image: t, video: n, type: s, author: i, rawTitle: r } = e;
        return (
          (null != t || null != n) &&
          (s === d.MessageEmbedTypes.GIFV ||
            (s !== d.MessageEmbedTypes.RICH && null == i && null == r))
        );
      }
      function I(e) {
        return (
          e.type === d.MessageEmbedTypes.ARTICLE &&
          null != e.url &&
          (g.test(e.url) || c.test(e.url))
        );
      }
      function T(e, t, n) {
        return null != t && null != n
          ? { maxMediaWidth: t, maxMediaHeight: n }
          : e.provider?.name === "TikTok"
            ? { maxMediaWidth: 400, maxMediaHeight: 450 }
            : { maxMediaWidth: 400, maxMediaHeight: 300 };
      }
    },
    659300: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          countEmoji: function () {
            return I;
          },
          default: function () {
            return T;
          },
          getEmojiColors: function () {
            return S;
          },
          getEmojiUrl: function () {
            return C;
          },
        }),
        n("653041");
      var s = n("682379"),
        i = n("679024"),
        r = n("440178"),
        a = n("775822"),
        o = n("197905"),
        u = n("871831"),
        d = n("204606"),
        l = n("134562"),
        f = n("495366"),
        _ = n("488867"),
        c = n("467006"),
        g = n("308439");
      let m = new Set([
          g.EmojiDisabledReasons.PREMIUM_LOCKED,
          g.EmojiDisabledReasons.ROLE_SUBSCRIPTION_LOCKED,
        ]),
        h = new Set([
          g.EmojiDisabledReasons.PREMIUM_LOCKED,
          g.EmojiDisabledReasons.GUILD_SUBSCRIPTION_UNAVAILABLE,
          g.EmojiDisabledReasons.ROLE_SUBSCRIPTION_LOCKED,
          g.EmojiDisabledReasons.ROLE_SUBSCRIPTION_UNAVAILABLE,
        ]),
        E = new Set([
          g.EmojiDisabledReasons.DISALLOW_EXTERNAL,
          g.EmojiDisabledReasons.GUILD_SUBSCRIPTION_UNAVAILABLE,
          g.EmojiDisabledReasons.ONLY_GUILD_EMOJIS_ALLOWED,
        ]);
      function p(e) {
        if (e.type === i.EmojiTypes.GUILD) return !0;
        return null != e.guildId;
      }
      function v(e, t) {
        return null != e && null != t && (!p(e) || t === e.guildId);
      }
      function y(e) {
        let {
          emoji: t,
          channel: n,
          intention: i,
          forceIncludeExternalGuilds: d,
        } = e;
        if (i === g.EmojiIntention.COMMUNITY_CONTENT_ONLY && null == t.guildId)
          return g.EmojiDisabledReasons.ONLY_GUILD_EMOJIS_ALLOWED;
        if (!p(t)) return null;
        let l = e.guildId ?? n?.getGuildId(),
          f = null != n && (0, a.isGuildTextChannelType)(n.type),
          m = null != n && (0, a.isGuildVocalChannelType)(n.type),
          h = v(t, l),
          E = o.default.can(c.Permissions.USE_EXTERNAL_EMOJIS, n);
        if (
          i === g.EmojiIntention.COMMUNITY_CONTENT ||
          i === g.EmojiIntention.COMMUNITY_CONTENT_ONLY
        )
          return h && t.available
            ? null
            : g.EmojiDisabledReasons.DISALLOW_EXTERNAL;
        if (
          (!(0, g.isExternalEmojiAllowedForIntention)(i) && !v(t, l) && !d) ||
          ((f || m) && !h && !E)
        )
          return g.EmojiDisabledReasons.DISALLOW_EXTERNAL;
        if (!t.available)
          return g.EmojiDisabledReasons.GUILD_SUBSCRIPTION_UNAVAILABLE;
        let y = u.default.getCurrentUser();
        if (!_.default.canUseEmojisEverywhere(y) && !h) {
          if (i === g.EmojiIntention.STATUS)
            return g.EmojiDisabledReasons.PREMIUM_LOCKED;
          if (!t.managed) return g.EmojiDisabledReasons.PREMIUM_LOCKED;
        }
        if ((0, r.isUnusableRoleSubscriptionEmoji)(t, l ?? void 0))
          return (0, s.shouldHideGuildPurchaseEntryPoints)(t.guildId)
            ? g.EmojiDisabledReasons.ROLE_SUBSCRIPTION_UNAVAILABLE
            : g.EmojiDisabledReasons.ROLE_SUBSCRIPTION_LOCKED;
        return !t.animated ||
          _.default.canUseAnimatedEmojis(y) ||
          (0, r.isPurchasableRoleSubscriptionEmoji)(t)
          ? null
          : g.EmojiDisabledReasons.PREMIUM_LOCKED;
      }
      function I(e, t) {
        let n = 0,
          s = 0,
          r = 0,
          a = 0,
          o = 0,
          u = 0;
        return (
          e.forEach(e => {
            null != e.id
              ? (e.type === i.EmojiTypes.GUILD &&
                  (e.guildId === t
                    ? e.managed
                      ? a++
                      : s++
                    : e.managed
                      ? o++
                      : r++),
                e.animated && u++)
              : n++;
          }),
          {
            unicode: n,
            custom: s,
            customExternal: r,
            managed: a,
            managedExternal: o,
            animated: u,
          }
        );
      }
      var T = {
        sanitizeEmojiName(e) {
          for (
            e = e.replace(g.EMOJI_RE, "").slice(0, g.EMOJI_MAX_LENGTH);
            e.length < 2;

          )
            e += "_";
          return e;
        },
        filterUnsupportedEmojis: l.default.filterUnsupportedEmojis,
        getURL: l.default.getURL,
        isInternalEmojiForGuildId: v,
        getEmojiUnavailableReason: y,
        isCustomEmoji: p,
        isEmojiFiltered(e) {
          let { emoji: t, channel: n, intention: s, guildId: i } = e,
            r = y({ emoji: t, channel: n, intention: s, guildId: i });
          return E.has(r);
        },
        isEmojiPremiumLocked(e) {
          let { emoji: t, channel: n, intention: s, guildId: i } = e,
            r = y({ emoji: t, channel: n, guildId: i, intention: s });
          return m.has(r);
        },
        isEmojiCategoryNitroLocked(e) {
          let { categoryEmojis: t, channel: n, intention: s } = e,
            i = t.reduce((e, t) => {
              let i = y({ emoji: t, channel: n, intention: s });
              return (
                (i === g.EmojiDisabledReasons.PREMIUM_LOCKED ||
                  i ===
                    g.EmojiDisabledReasons.GUILD_SUBSCRIPTION_UNAVAILABLE) &&
                  e.push(i),
                e
              );
            }, []);
          return (
            i.some(e => e === g.EmojiDisabledReasons.PREMIUM_LOCKED) &&
            i.length === t.length
          );
        },
        isEmojiFilteredOrLocked(e) {
          let { emoji: t, channel: n, intention: s } = e;
          return (
            this.isEmojiFiltered({ emoji: t, channel: n, intention: s }) ||
            this.isEmojiPremiumLocked({ emoji: t, channel: n, intention: s })
          );
        },
        isEmojiDisabled(e) {
          let { emoji: t, channel: n, intention: s } = e,
            i = y({ emoji: t, channel: n, intention: s });
          return h.has(i);
        },
        isFileTooBig: e => e.size > 2097152,
        isDataTooBig: e => (0, f.dataUriFileSize)(e) > g.EMOJI_MAX_FILESIZE,
      };
      async function S(e) {
        return await l.default.getEmojiColors(e);
      }
      function C(e) {
        let t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 32,
          { id: n, name: s, animated: i } = e;
        return null != n
          ? d.default.getEmojiURL({ id: n, size: t, animated: i ?? !1 })
          : l.default.getURL(s);
      }
    },
    134562: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        });
      var s = n("946188"),
        i = n("204606"),
        r = n("567746"),
        a = n("495366"),
        o = n("287972");
      let u = new Set(["™", "™️", "\xa9", "\xa9️", "\xae", "\xae️"]);
      function d(e) {
        if (u.has(e)) return "";
        try {
          let t = 0 > e.indexOf("‍") ? e.replace("️", "") : e;
          return n("964191")(
            `@discordapp/twemoji/dist/svg/${s.default.convert.toCodePoint(t)}.svg`.replace(
              "@discordapp/twemoji/dist/svg/",
              "./"
            )
          );
        } catch (t) {
          return console.warn(t, "no emoji for", e), "";
        }
      }
      async function l(e) {
        let t;
        let { id: n, name: s } = e;
        t =
          null != n
            ? i.default.getEmojiURL({ id: n, size: 32, animated: !1 })
            : d(s);
        let o = await (0, a.getPaletteForAvatar)(t);
        return o?.map(e => {
          let [t, n, s] = e;
          return r.rgbToHex(t, n, s);
        });
      }
      var f = {
        getURL: o.default.makeMemoizer(d),
        filterUnsupportedEmojis: function (e) {
          return e;
        },
        applyPlatformToThemedEmojiColorPalette: function (e) {
          let { palette: t, shouldProcessMobileColors: n = !1 } = e;
          return t;
        },
        getEmojiColors: l,
        triggerFullscreenAnimation: function (e) {
          let { channelId: t, messageId: n, emoji: s } = e;
        },
      };
    },
    25318: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          humanizeAbortCode: function () {
            return f;
          },
          validateDiscordTag: function () {
            return l;
          },
        });
      var s = n("328470"),
        i = n("237837"),
        r = n("467006"),
        a = n("30175");
      let o = /^\d+$/,
        u = /^(.+?@.+?\..+?|.+?#\d{4})$/,
        d = /^[a-zA-Z0-9_\\.]+$/;
      function l(e) {
        return d.test(e) || (e.includes("#") && u.test(e))
          ? null
          : ((function (e) {
              let [t, n] = e.split("#");
              s.default.track(r.AnalyticEvents.FRIEND_REQUEST_FAILED, {
                reason: "Invalid Username",
                query: e,
                discrim_len: (n ?? "").length,
                username_len: t.length,
                is_email_like: i.default.isEmail(e),
                is_invite_like: i.default.isInvite(e),
                is_num_only: o.test(e),
              });
            })(e),
            a.default.Messages.POMELO_ADD_FRIEND_ERROR);
      }
      function f(e, t) {
        switch (e) {
          case r.AbortCodes.RELATIONSHIP_INCOMING_DISABLED:
            return a.default.Messages.ADD_FRIEND_ERROR_INVALID_DISCORD_TAG.format(
              { discordTag: t }
            );
          case r.AbortCodes.TOO_MANY_FRIENDS:
            return a.default.Messages.ADD_FRIEND_ERROR_TOO_MANY_FRIENDS;
          case r.AbortCodes.RELATIONSHIP_ALREADY_FRIENDS:
            return a.default.Messages.ADD_FRIEND_ERROR_ALREADY_FRIENDS;
          case r.AbortCodes.USER_QUARANTINED:
          case r.AbortCodes.USER_FRIEND_REQUEST_LIMITED_ACCESS:
            return a.default.Messages.LIMITED_ACCESS_INFO_MODAL_HEADING;
          case r.AbortCodes.TOO_MANY_BLOCKED_USERS:
            return a.default.Messages.BLOCK_USER_ERROR_TOO_MANY_BLOCKED_USERS;
          case r.AbortCodes.RELATIONSHIP_INCOMING_BLOCKED:
          case r.AbortCodes.RELATIONSHIP_INVALID_SELF:
          case r.AbortCodes.RELATIONSHIP_INVALUD_USER_BOT:
          case r.AbortCodes.RELATIONSHIP_INVALID_DISCORD_TAG:
          default:
            return a.default.Messages.POMELO_ADD_FRIEND_ERROR;
        }
      }
    },
    313652: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          GiftExperience: function () {
            return s;
          },
          findGiftCodes: function () {
            return G;
          },
          firstLibraryApplicationForGiftCode: function () {
            return z;
          },
          getBodyText: function () {
            return K;
          },
          getButtonText: function () {
            return j;
          },
          getErrorMessage: function () {
            return W;
          },
          getGiftCodeURL: function () {
            return F;
          },
          getGiftExperience: function () {
            return M;
          },
          getHeaderText: function () {
            return Y;
          },
          getStep: function () {
            return x;
          },
          isGiftCodeEmbed: function () {
            return U;
          },
          makeComboId: function () {
            return L;
          },
          parseComboId: function () {
            return k;
          },
          processGiftCodeInput: function () {
            return $;
          },
          resolveGiftCode: function () {
            return B;
          },
          shouldShowCustomGiftExperience: function () {
            return V;
          },
          trackGiftCodeCopy: function () {
            return H;
          },
          useGetGiftCode: function () {
            return q;
          },
        }),
        n("627341");
      var s,
        i,
        r = n("278074"),
        a = n("996855"),
        o = n("661223"),
        u = n("421752"),
        d = n("786617"),
        l = n("174511"),
        f = n("871831"),
        _ = n("328470"),
        c = n("370275"),
        g = n("501769"),
        m = n("488867"),
        h = n("930771"),
        E = n("413775"),
        p = n("467006"),
        v = n("171168"),
        y = n("30175");
      let I = h.default.escape(window.GLOBAL_ENV.GIFT_CODE_HOST),
        T = [
          I,
          ...["discordapp.com/gifts", "discord.com/gifts"].map(e =>
            h.default.escape(e)
          ),
        ].join("|"),
        S = RegExp(`(?: |^|https?://)(?:${T})/([a-z0-9-]+)`, "gi"),
        C = [
          ...["discord.com/billing/promotions", "promos.discord.gg"].map(e =>
            h.default.escape(e)
          ),
        ].join("|"),
        A = RegExp(`(?: |^|https?://)(?:${C})/([a-z0-9-]+)`, "gi"),
        N = (e, t) =>
          Array(t)
            .fill(void 0)
            .map(
              () =>
                `[abcdefghjkmnpqrstuvwxyzABCDEFGHJKMNPQRSTUVWXYZ23456789]{${e}}`
            )
            .join("-?"),
        D = N(4, 4),
        O = N(4, 6),
        R = N(5, 3),
        P = [D, O, R, "[a-zA-Z]{4}-?[0-9a-zA-Z]{4}-?[a-zA-Z]{4}"].join("|"),
        b = RegExp(`^(WUMP-?)?(${P})$`);
      ((i = s || (s = {}))[(i.DEFAULT = 0)] = "DEFAULT"),
        (i[(i.CUSTOM_STYLE = 1)] = "CUSTOM_STYLE"),
        (i[(i.CUSTOM_MESSAGE_EMOJI_SOUNDBOARD = 2)] =
          "CUSTOM_MESSAGE_EMOJI_SOUNDBOARD");
      let M = (e, t) => (a.isMobile || a.isTablet ? 0 : null != e || t ? 2 : 1),
        V = e => 0 !== M(e);
      function L(e) {
        let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : null,
          n = arguments.length > 2 ? arguments[2] : void 0;
        return `${e}:${t ?? ""}:${n ?? ""}`;
      }
      function k(e) {
        let [t, n, s] = e.split(":");
        return {
          skuId: t,
          subscriptionPlanId: "" === n ? null : n,
          giftStyle: "" !== s && null != s ? Number.parseInt(s) : void 0,
        };
      }
      function w(e) {
        return e.replace(/[^A-Za-z0-9]/g, "");
      }
      let U = e =>
          e?.type === p.MessageTypes.CUSTOM_GIFT &&
          e?.embeds.length === 1 &&
          e?.embeds[0].type === p.MessageEmbedTypes.GIFT,
        G = e => {
          let t;
          if (null == e) return [];
          let n = new Set();
          for (; null != (t = S.exec(e)) && n.size < 3; ) n.add(w(t[1]));
          for (; null != (t = A.exec(e)) && n.size < 3; ) n.add(w(t[1]));
          return Array.from(n);
        };
      function F() {
        let e,
          t =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "",
          n = window.GLOBAL_ENV.GIFT_CODE_HOST;
        return (
          null == n || (0, g.isAndroid)()
            ? ((n = location.host), (e = `/gifts/${t}`))
            : (e = `/${t}`),
          `${location.protocol}//${n}${e}`
        );
      }
      async function B(e) {
        let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
          n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
        try {
          let s = (
            await (0, E.httpGetWithCountryCodeQuery)({
              url: p.Endpoints.GIFT_CODE_RESOLVE(e),
              query: { with_application: t, with_subscription_plan: n },
              oldFormErrors: !0,
            })
          ).body;
          return (
            _.default.track(
              p.AnalyticEvents.GIFT_CODE_RESOLVED,
              {
                resolved: !0,
                gift_code: s.code,
                gift_code_max_uses: s.max_uses,
                sku_id: s.store_listing.sku.id,
                sku_type: s.store_listing.sku.type,
                application_id: s.store_listing.sku.application_id,
                store_title: s.store_listing.sku.name,
              },
              { flush: !0 }
            ),
            s
          );
        } catch (t) {
          throw (
            (_.default.track(p.AnalyticEvents.GIFT_CODE_RESOLVED, {
              resolved: !1,
              gift_code: e,
            }),
            new u.default(t))
          );
        }
      }
      function H(e, t) {
        _.default.track(p.AnalyticEvents.GIFT_CODE_COPIED, {
          ...(0, d.default)(t, !1, !1),
          ...e.analyticsData,
        });
      }
      function x(e, t, n, s, i, r, a) {
        return null == n && (s || i || null == e)
          ? !a || r || s || i
            ? s && (t.isSubscription || null != e)
              ? p.GiftCodeModalStates.SUCCESS
              : p.GiftCodeModalStates.CONFIRM
            : p.GiftCodeModalStates.OPEN
          : p.GiftCodeModalStates.ERROR;
      }
      function Y(e, t, n) {
        switch (e) {
          case p.GiftCodeModalStates.ERROR:
            return y.default.Messages.GIFT_CONFIRMATION_HEADER_FAIL;
          case p.GiftCodeModalStates.SUCCESS:
            return t.isSubscription
              ? y.default.Messages.GIFT_CONFIRMATION_HEADER_SUCCESS_NITRO.format(
                  { skuName: n.name }
                )
              : y.default.Messages.GIFT_CONFIRMATION_HEADER_SUCCESS;
          case p.GiftCodeModalStates.CONFIRM:
          default:
            return t.isSubscription
              ? y.default.Messages.GIFT_CONFIRMATION_HEADER_CONFIRM_NITRO.format(
                  { skuName: n.name }
                )
              : y.default.Messages.GIFT_CONFIRMATION_HEADER_CONFIRM;
        }
      }
      function j(e, t, n) {
        switch (e) {
          case p.GiftCodeModalStates.ERROR:
            return y.default.Messages.GIFT_CONFIRMATION_BUTTON_FAIL;
          case p.GiftCodeModalStates.SUCCESS:
            if (__OVERLAY__)
              return y.default.Messages.GIFT_CONFIRMATION_BUTTON_NOICE;
            if (t.isSubscription)
              return y.default.Messages
                .GIFT_CONFIRMATION_BUTTON_SUBSCRIPTION_SUCCESS;
            return y.default.Messages.GIFT_CONFIRMATION_BUTTON_GO_TO_LIBRARY;
          case p.GiftCodeModalStates.OPEN:
            return y.default.Messages.GIFT_OPEN_PROMPT;
          case p.GiftCodeModalStates.CONFIRM:
          default:
            if (null != n && n) return y.default.Messages.GIFT_CODE_AUTH_ACCEPT;
            if (null != t.giftStyle)
              return t.isClaimed
                ? y.default.Messages.GIFT_CONFIRMATION_BUTTON_CONFIRM
                : y.default.Messages.GIFT_CONFIRMATION_BUTTON_CONFIRM_MOBILE;
            return t.isSubscription
              ? y.default.Messages.GIFT_CONFIRMATION_BUTTON_CONFIRM_SUBSCRIPTION
              : y.default.Messages.GIFT_CONFIRMATION_BUTTON_CONFIRM;
        }
      }
      function K(e) {
        let {
          step: t,
          sku: n,
          libraryApplication: s,
          error: i,
          accepted: a,
          accepting: o,
          onGoToLibrary: u,
          subscriptionPlan: d = null,
        } = e;
        switch (t) {
          case p.GiftCodeModalStates.ERROR:
            return W(s, i, a, o, u);
          case p.GiftCodeModalStates.SUCCESS:
            if (null != d) {
              var l;
              return (
                (l = d),
                (0, r.match)(l)
                  .with(
                    {
                      interval: v.SubscriptionIntervalTypes.MONTH,
                      premiumSubscriptionType: v.PremiumTypes.TIER_2,
                    },
                    () =>
                      y.default.Messages.PREMIUM_FEATURES_TIER_2.format({
                        timeInterval:
                          y.default.Messages
                            .PREMIUM_SUBSCRIPTION_INTERVAL_MONTH,
                      })
                  )
                  .with(
                    {
                      interval: v.SubscriptionIntervalTypes.YEAR,
                      premiumSubscriptionType: v.PremiumTypes.TIER_2,
                    },
                    () =>
                      y.default.Messages.PREMIUM_FEATURES_TIER_2.format({
                        timeInterval:
                          y.default.Messages.PREMIUM_SUBSCRIPTION_INTERVAL_YEAR,
                      })
                  )
                  .with(
                    {
                      interval: v.SubscriptionIntervalTypes.MONTH,
                      premiumSubscriptionType: v.PremiumTypes.TIER_1,
                    },
                    () =>
                      y.default.Messages.GIFT_CONFIRMATION_BODY_SUCCESS_PREMIUM_TIER_1_MONTHLY.format(
                        { intervalCount: l.intervalCount }
                      )
                  )
                  .with(
                    {
                      interval: v.SubscriptionIntervalTypes.YEAR,
                      premiumSubscriptionType: v.PremiumTypes.TIER_1,
                    },
                    () =>
                      y.default.Messages.GIFT_CONFIRMATION_BODY_SUCCESS_PREMIUM_TIER_1_YEARLY.format(
                        { intervalCount: l.intervalCount }
                      )
                  )
                  .otherwise(
                    () =>
                      y.default.Messages.GIFT_CONFIRMATION_BODY_SUCCESS_GENERIC
                  )
              );
            }
            return y.default.Messages.GIFT_CONFIRMATION_BODY_SUCCESS.format({
              skuName: n.name,
            });
          case p.GiftCodeModalStates.CONFIRM:
          default:
            if (null != d)
              return (
                d.interval === v.SubscriptionIntervalTypes.MONTH
                  ? y.default.Messages
                      .GIFT_CONFIRMATION_BODY_SUBSCRIPTION_MONTHLY_CONFIRM
                  : y.default.Messages
                      .GIFT_CONFIRMATION_BODY_SUBSCRIPTION_YEARLY_CONFIRM
              ).format({ skuName: n.name, intervalCount: d.intervalCount });
            return y.default.Messages.GIFT_CONFIRMATION_BODY_CONFIRM.format({
              skuName: n.name,
            });
        }
      }
      function W(e, t, n, s, i) {
        let r = y.default.Messages.GIFT_CONFIRMATION_BODY_OWNED.format({
          onGoToLibrary: i,
        });
        return null != (n || s ? void 0 : e)
          ? r
          : null == t
            ? null
            : (function (e, t) {
                switch (e.code) {
                  case p.AbortCodes.INVALID_GIFT_SELF_REDEMPTION:
                    return y.default.Messages
                      .GIFT_CONFIRMATION_BODY_SELF_GIFT_NO_PAYMENT;
                  case p.AbortCodes.INVALID_GIFT_REDEMPTION_EXHAUSTED:
                    return y.default.Messages.GIFT_CONFIRMATION_BODY_CLAIMED;
                  case p.AbortCodes.INVALID_GIFT_REDEMPTION_OWNED:
                    return y.default.Messages.GIFT_ERROR_OWNED;
                  case p.AbortCodes.UNKNOWN_GIFT_CODE:
                    return y.default.Messages.GIFT_CONFIRMATION_BODY_INVALID;
                  case p.AbortCodes
                    .INVALID_GIFT_REDEMPTION_SUBSCRIPTION_INCOMPATIBLE:
                    return y.default.Messages.GIFT_EMBED_BODY_SUBSCRIPTION_MISMATCH.format(
                      {
                        planName: (0, m.isPremiumExactly)(
                          t,
                          v.PremiumTypes.TIER_2
                        )
                          ? y.default.Messages.PREMIUM_TIER_2
                          : y.default.Messages.PREMIUM_TIER_1,
                      }
                    );
                  case p.AbortCodes
                    .INVALID_GIFT_REDEMPTION_SUBSCRIPTION_MANAGED:
                    return y.default.Messages
                      .GIFT_CONFIRMATION_BODY_ERROR_SUBSCRIPTION_MANAGED;
                  case p.AbortCodes.INVALID_GIFT_REDEMPTION_INVOICE_OPEN:
                    return y.default.Messages
                      .GIFT_CONFIRMATION_BODY_ERROR_INVOICE_OPEN;
                  case p.AbortCodes.INVALID_GIFT_REDEMPTION_FRAUD_REJECTED:
                    return y.default.Messages.GIFT_CODE_SMITE_REJECT_HELP_TEXT;
                  case p.AbortCodes.BILLING_NON_REFUNDABLE_PAYMENT_SOURCE:
                    return y.default.Messages.GIFT_CODE_PAYMENT_SOURCE_INVALID;
                  default:
                    return y.default.Messages
                      .GIFT_CONFIRMATION_BODY_UNKNOWN_ERROR;
                }
              })(t, f.default.getCurrentUser());
      }
      function z(e, t, n) {
        let s = t.applicationId,
          i = e.length > 0 ? e : [s],
          r = i
            .map(e => n.getLibraryApplication(s, e, !0))
            .filter(c.isNotNullish);
        return r.length === i.length ? r[0] : null;
      }
      function $(e) {
        let t = e.trim().split("/").pop().match(b);
        if (null == t) return null;
        let [n, s, i] = t;
        return null == i ? null : i.replace(/-/g, "");
      }
      let q = (e, t) =>
        (0, o.useStateFromStores)([l.default], () => {
          if (null == e || !t) return null;
          let n = l.default.getGiftCode(e);
          return null == n || "" === n ? null : n;
        });
    },
    495366: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          dataUriFileSize: function () {
            return v;
          },
          dataUrlToBlob: function () {
            return I;
          },
          dataUrlToFile: function () {
            return y;
          },
          fit: function () {
            return d;
          },
          getCoverRatio: function () {
            return _;
          },
          getPalette: function () {
            return m;
          },
          getPaletteForAvatar: function () {
            return h;
          },
          getRatio: function () {
            return f;
          },
          isPNGAnimated: function () {
            return T;
          },
          makeCssUrlString: function () {
            return c;
          },
          readFileAsBase64: function () {
            return p;
          },
          zoomFit: function () {
            return l;
          },
        }),
        n("653041"),
        n("642549"),
        n("268111"),
        n("941497"),
        n("744285"),
        n("492257"),
        n("873817");
      var s = n("512722"),
        i = n.n(s),
        r = n("392711"),
        a = n.n(r),
        o = n("950200"),
        u = n.n(o);
      function d(e) {
        let {
          width: t,
          height: n,
          maxWidth: s,
          maxHeight: i,
          minWidth: r = 0,
          minHeight: a = 0,
        } = e;
        if (t !== s || n !== i) {
          let e = t > s ? s / t : 1;
          t = Math.max(Math.round(t * e), r);
          let o = (n = Math.max(Math.round(n * e), a)) > i ? i / n : 1;
          (t = Math.max(Math.round(t * o), r)),
            (n = Math.max(Math.round(n * o), a));
        }
        return { width: t, height: n };
      }
      function l(e, t) {
        let n = Math.min(Math.round(0.65 * window.innerHeight), 2e3);
        return d({
          width: e,
          height: t,
          maxWidth: Math.min(Math.round(0.75 * window.innerWidth), 2e3),
          maxHeight: n,
        });
      }
      function f(e) {
        let { width: t, height: n, maxWidth: s, maxHeight: i } = e,
          r = 1;
        t > s && (r = s / t), (t = Math.round(t * r));
        let a = 1;
        return (n = Math.round(n * r)) > i && (a = i / n), Math.min(r * a, 1);
      }
      function _(e) {
        let { width: t, height: n, maxWidth: s, maxHeight: i } = e;
        return t === n ? 1 : Math.min(Math.max(s / t, i / n), 1);
      }
      function c(e) {
        return null == e || "" === e ? "none" : `url(${e})`;
      }
      let g = [[0, 0, 0]];
      function m(e, t, n) {
        let s = document.createElement("canvas"),
          i = s.getContext("2d");
        if (null == i) return g;
        let r = (s.width = 0 === e.width ? 128 : e.width),
          a = (s.height = 0 === e.height ? 128 : e.height);
        i.drawImage(e, 0, 0, r, a);
        let o = (function (e, t, n) {
            let s = [];
            for (let i = 0, r, a, o, u, d; i < t; i += n)
              (a = e[(r = 4 * i) + 0]),
                (o = e[r + 1]),
                (u = e[r + 2]),
                (void 0 === (d = e[r + 3]) || d >= 125) &&
                  !(a > 250 && o > 250 && u > 250) &&
                  s.push([a, o, u]);
            return s;
          })(i.getImageData(0, 0, r, a).data, r * a, n),
          d = u()(o, t);
        return "boolean" == typeof d ? g : d.palette();
      }
      let h = e => ("number" == typeof e ? null : E(e)),
        E = a().memoize(
          e =>
            new Promise((t, n) => {
              let s = new Image();
              (s.crossOrigin = "Anonymous"),
                (s.onerror = e => {
                  n(e), (s.onerror = s.onload = null), (s = null);
                }),
                (s.onload = () => {
                  t(m(s, 5, 10)), (s.onerror = s.onload = null), (s = null);
                }),
                (s.src = e);
            })
        );
      function p(e) {
        return new Promise((t, n) => {
          let s = new FileReader();
          s.readAsDataURL(e),
            (s.onload = () => {
              i()("string" == typeof s.result, "Result must be a string"),
                t(s.result);
            }),
            (s.onerror = e => n(e));
        });
      }
      function v(e) {
        let t = e.split(";base64,");
        return (
          i()(2 === t.length, "Input data is not a valid image."),
          atob(t[1]).length
        );
      }
      async function y(e, t, n) {
        let s = I(e),
          i = await s.arrayBuffer();
        return new File([i], t, { type: n });
      }
      function I(e) {
        let t;
        t =
          e.split(",")[0].indexOf("base64") >= 0
            ? atob(e.split(",")[1])
            : btoa(e.split(",")[1]);
        let n = e.split(",")[0].split(":")[1].split(";")[0],
          s = new Uint8Array(t.length);
        for (var i = 0; i < t.length; i++) s[i] = t.charCodeAt(i);
        return new Blob([s], { type: n });
      }
      async function T(e) {
        if ("image/png" !== e.type?.split(";")[0])
          throw Error("File is not a PNG");
        let t = await e.text(),
          n = t.indexOf("IDAT");
        return (!!(n > 0) && -1 !== t.substring(0, n).indexOf("acTL")) || !1;
      }
    },
    781024: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          resolveThunk: function () {
            return r;
          },
        });
      var s = n("392711"),
        i = n.n(s);
      let r = e => ("function" == typeof e ? e() : e);
      i().curry((e, t, n) => (r(t) ? e(n) : n({})));
    },
    916372: function (e, t, n) {
      "use strict";
      function s(e) {
        return Math.max(Math.min(e, 1), 0);
      }
      function i(e, t) {
        let { top: n, bottom: i, left: r, right: a } = e;
        return {
          top: null != n ? Math.floor(s(n) * t.height) : null,
          left: null != r ? Math.floor(s(r) * t.width) : null,
          bottom: null != i ? Math.floor(s(i) * t.height) : null,
          right: null != a ? Math.floor(s(a) * t.width) : null,
        };
      }
      function r(e, t) {
        let { width: n, height: i } = e;
        return {
          width: "auto" === n ? n : Math.floor(s(n) * t.width),
          height: "auto" === i ? i : Math.floor(s(i) * t.height),
        };
      }
      function a(e, t) {
        let { top: n, bottom: i, left: r, right: a } = e;
        return {
          top: null != n ? s(n / t.height) : null,
          left: null != r ? s(r / t.width) : null,
          bottom: null != i ? s(i / t.height) : null,
          right: null != a ? s(a / t.width) : null,
        };
      }
      function o(e, t) {
        let { width: n, height: s } = e;
        return {
          width: "auto" === n ? n : n / t.width,
          height: "auto" === s ? s : s / t.height,
        };
      }
      function u(e, t, n, s, i) {
        let { top: r, bottom: a, left: o, right: u } = e;
        if (
          (null == r && null == a
            ? ((r = 0), (a = n - i))
            : null == r && null != a
              ? (r = n - (a + i))
              : null != r && (a = n - (r + i)),
          null == o && null == u
            ? ((o = 0), (u = t - s))
            : null == o && null != u
              ? (o = t - (u + s))
              : null == u && null != o && (u = t - (o + s)),
          null == r || null == a || null == o || null == u)
        )
          throw Error(
            "Logically this can never happen based on our if/else statements"
          );
        return { top: r, left: o, bottom: a, right: u };
      }
      function d(e) {
        let { top: t, left: n, bottom: s, right: i } = e;
        return (
          0 === t || t <= s ? (s = null) : (t = null),
          0 === n || n <= i ? (i = null) : (n = null),
          { top: t, left: n, bottom: s, right: i }
        );
      }
      function l(e) {
        let { top: t, left: n, bottom: s, right: i } = e;
        return (
          s < 0 && ((t += s), (s = 0)),
          t < 0 && ((s += t), (t = 0)),
          i < 0 && ((n += i), (i = 0)),
          n < 0 && ((i += n), (n = 0)),
          { top: t, left: n, bottom: s, right: i }
        );
      }
      function f(e, t, n) {
        e = i(e, n);
        let { width: s, height: a } = r(t, n);
        return (
          (s = "string" == typeof s ? 0 : s),
          (a = "string" == typeof a ? 0 : a),
          u(e, n.width, n.height, s, a)
        );
      }
      function _(e, t, n) {
        let { top: s, left: i } = e,
          { x: r, y: f } =
            arguments.length > 3 && void 0 !== arguments[3]
              ? arguments[3]
              : { x: 0, y: 0 },
          { width: _, height: c } = t;
        return [
          a(
            d(
              l(
                u(
                  { top: s + f, left: i + r, bottom: null, right: null },
                  n.width,
                  n.height,
                  "number" == typeof _ ? _ : 0,
                  "number" == typeof c ? c : 0
                )
              )
            ),
            n
          ),
          o(t, n),
        ];
      }
      function c(e, t, n) {
        let { top: s, right: i } = e,
          { x: r, y: f } =
            arguments.length > 3 && void 0 !== arguments[3]
              ? arguments[3]
              : { x: 0, y: 0 },
          { width: _, height: c } = t;
        return [
          a(
            d(
              l(
                u(
                  { top: s + f, left: null, bottom: null, right: i - r },
                  n.width,
                  n.height,
                  "number" == typeof _ ? _ : 0,
                  "number" == typeof c ? c : 0
                )
              )
            ),
            n
          ),
          o(t, n),
        ];
      }
      n.r(t),
        n.d(t, {
          fitFullCoordsToContainer: function () {
            return l;
          },
          getAnchorCoordsFromFullCoords: function () {
            return d;
          },
          getAnchorCoordsFromLayoutSize: function () {
            return i;
          },
          getAnchorPercentageFromLayoutSize: function () {
            return a;
          },
          getFullCoordsFromAnchorCoords: function () {
            return u;
          },
          getFullCoordsFromLayoutSize: function () {
            return f;
          },
          getLeftWidgetSpecs: function () {
            return _;
          },
          getRightWidgetSpecs: function () {
            return c;
          },
          getSizeFromLayoutSize: function () {
            return r;
          },
          getSizePercentageFromSize: function () {
            return o;
          },
        });
    },
    567713: function (e, t, n) {
      "use strict";
      let s, i;
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var r = n("871831"),
        a = n("781024");
      let o = () => {
        throw Error("updateModal has not been implemented.");
      };
      {
        let e = n("267458");
        (s = e.showModal),
          (o = e.updateModalProps),
          (i = n("910838").closeModal);
      }
      function u(e) {
        let {
          promiseFn: t,
          resolve: n,
          reject: r,
          modalProps: a = {},
          hooks: { onEarlyClose: u } = {},
        } = e;
        if (null == s) {
          u?.();
          return;
        }
        let l = s(g, f, a);
        function f() {
          u?.();
        }
        function _(e) {
          i(l), n(e);
        }
        function c(e) {
          i(l), r(e);
        }
        function g(e) {
          return (
            o(l, g, f, { ...a, isLoading: !0 }),
            d({
              promiseFn: t,
              resolve: _,
              reject: c,
              code: e,
              mfaCodeHandler: m,
              isModalOpen: !0,
            })
          );
        }
        function m(e) {
          let { res: t } = e;
          o(l, g, f, { ...a, error: t.body.message });
        }
      }
      function d(e) {
        let {
          promiseFn: t,
          resolve: n,
          reject: s,
          code: i,
          mfaCodeHandler: r = u,
          isModalOpen: a = !1,
          ...o
        } = e;
        return t(null != i ? { code: i } : {}).then(n, e => {
          var i, u;
          if (
            ((i = e),
            (u = a),
            (i.body && 60008 === i.body.code) || (u && 429 === i.status))
          )
            return r({ promiseFn: t, resolve: n, reject: s, res: e, ...o });
          s(e);
        });
      }
      function l(e, t) {
        let {
          checkEnabled: n = r.default.getCurrentUser()?.mfaEnabled ?? !1,
          ...s
        } = t ?? {};
        return new Promise((t, i) => {
          ((0, a.resolveThunk)(n) ? u : d)({
            promiseFn: e,
            resolve: t,
            reject: i,
            ...s,
          });
        });
      }
    },
    600306: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          handleClick: function () {
            return O;
          },
          isLinkTrusted: function () {
            return D;
          },
        });
      var s = n("302454"),
        i = n.n(s),
        r = n("992888"),
        a = n("981122"),
        o = n("560858"),
        u = n("926210"),
        d = n("105023"),
        l = n("10050"),
        f = n("136395"),
        _ = n("586326"),
        c = n("222974"),
        g = n("717510"),
        m = n("642700"),
        h = n("715067"),
        E = n("731865"),
        p = n("327271"),
        v = n("187080"),
        y = n("958124"),
        I = n("162256"),
        T = n("606929"),
        S = n("232733"),
        C = n("328470"),
        A = n("467006"),
        N = n("30175");
      function D(e, t) {
        let n = E.default.getChannel(S.default.getChannelId());
        return (
          !!(
            null == n ||
            n.type !== A.ChannelTypes.DM ||
            T.default.isFriend(n.getRecipientId() ?? "")
          ) && e === t
        );
      }
      function O(e, t) {
        let s =
            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [],
          {
            trusted: T,
            onClick: D,
            onConfirm: O,
            shouldConfirm: R,
            messageId: P,
            channelId: b,
          } = e,
          M = i().sanitizeUrl(e.href);
        if (null == M) {
          null != t && t.preventDefault(),
            r.default.show({
              title: N.default.Messages.HOLD_UP,
              body: N.default.Messages.MALFORMED_LINK_BODY.format({
                url: e.href,
              }),
              isDismissable: !0,
            });
          return;
        }
        let V = null,
          L = !1,
          k = P,
          w = b,
          U = null;
        if (null != P && null != b) {
          let e = I.default.getMessage(b, P),
            t = E.default.getBasicChannel(b);
          V = t?.guild_id ?? null;
          let n = p.default.getGuild(V),
            s =
              e?.messageReference?.guild_id != null &&
              e?.webhookId != null &&
              e?.hasFlag(A.MessageFlags.IS_CROSSPOST) &&
              null != V;
          s && e?.messageReference?.guild_id != null
            ? ((k = e.messageReference.message_id),
              (w = e.messageReference.channel_id),
              (U = e.messageReference.guild_id))
            : (U = V);
          let i =
              t?.type === A.ChannelTypes.GUILD_ANNOUNCEMENT &&
              n?.hasFeature(A.GuildFeatures.COMMUNITY) === !0,
            r = e?.hasFlag(A.MessageFlags.EPHEMERAL) === !0;
          L = null != e && !r && (s || i);
        }
        let G = E.default.getChannel(S.default.getChannelId()),
          F = p.default.getGuild(G?.getGuildId());
        if (
          (null != G &&
            null != F &&
            F.hasFeature(A.GuildFeatures.DISCOVERABLE) &&
            C.default.track(A.AnalyticEvents.URL_CLICKED, {
              url_domain: (0, y.getHostname)(M),
              guild_id: F.id,
              channel_id: G.id,
            }),
          _.default.trackLinkClicked(M),
          null != D)
        ) {
          if (D(t)) return;
        } else {
          let { default: e } = n("233760"),
            i = e(M, { skipExtensionCheck: void 0, analyticsLocations: s });
          if (null != i && i(t)) return;
        }
        let B = () => {
          if (
            (L &&
              _.default.trackAnnouncementMessageLinkClicked({
                messageId: k,
                channelId: b,
                guildId: V,
                sourceChannelId: w,
                sourceGuildId: U,
              }),
            null != O)
          ) {
            O();
            return;
          }
          (0, o.default)(M);
        };
        if (null !== d.default.isBlockedDomain(M)) {
          t?.preventDefault(), u.default.show(M);
          return;
        }
        if (null != (0, h.isSuspiciousDownload)(M)) {
          t?.preventDefault(), m.default.show(M);
          return;
        }
        if ((0, f.shouldShowLinkNotDiscordWarning)(M)) {
          t?.preventDefault(), l.default.show(M);
          return;
        }
        let H = "function" == typeof T ? T() : T,
          x = (0, y.getProtocol)(M),
          Y = !("http:" === x || "https:" === x);
        if (
          (!Y && (H || v.default.isTrustedDomain(M))) ||
          (Y && v.default.isTrustedProtocol(M))
        ) {
          null == t || (null != R && R)
            ? B()
            : L &&
              _.default.trackAnnouncementMessageLinkClicked({
                messageId: k,
                channelId: b,
                guildId: V,
                sourceChannelId: w,
                sourceGuildId: U,
              });
          return;
        }
        if ((null != t && t.preventDefault(), Y))
          g.default.show({
            url: M,
            trustUrl: a.trustProtocol,
            onConfirm: B,
            isProtocol: !0,
          });
        else {
          let e = (0, c.punycodeLink)(M),
            t = null != e ? e.displayTarget : M;
          g.default.show({
            url: t,
            trustUrl: a.trustDomain,
            onConfirm: B,
            isProtocol: !1,
          });
        }
      }
    },
    287972: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
      var s = {
        makeMemoizer: function (e) {
          let t = new Map();
          return n => {
            let s = t.get(n);
            return void 0 === s && ((s = e(n)), t.set(n, s)), s;
          };
        },
      };
    },
    107888: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
          getNickname: function () {
            return d;
          },
          useName: function () {
            return f;
          },
        });
      var s = n("661223"),
        i = n("731865"),
        r = n("361733"),
        a = n("606929"),
        o = n("439823"),
        u = n("30175");
      function d(e, t, n) {
        if (null == n) return null;
        if (null != e) return r.default.getNick(e, n.id);
        if (null != t) {
          let e = i.default.getChannel(t);
          if (e?.isPrivate()) return a.default.getNickname(n.id);
        }
        return null;
      }
      function l(e, t, n) {
        return null == n
          ? u.default.Messages.UNKNOWN_USER
          : d(e, t, n) ?? o.default.getName(n);
      }
      function f(e, t, n) {
        return (0, s.useStateFromStores)(
          [r.default, i.default, a.default],
          () => l(e, t, n)
        );
      }
      var _ = { getNickname: d, getName: l, useName: f };
    },
    947781: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          amplitudeToPerceptual: function () {
            return i;
          },
          perceptualToAmplitude: function () {
            return s;
          },
        });
      function s(e) {
        let t,
          n =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : 100;
        return 0 === e
          ? 0
          : ((t = e > n ? ((e - n) / n) * 6 : (e / n) * 50 - 50),
            n * Math.pow(10, t / 20));
      }
      function i(e) {
        let t,
          n =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : 100;
        if (0 === e) return 0;
        let s = 20 * Math.log10(e / n);
        return n * (t = s > 0 ? s / 6 + 1 : (50 + s) / 50);
      }
    },
    28692: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getPurchaseToken: function () {
            return u;
          },
          getPurchaseTokenHash: function () {
            return d;
          },
        }),
        n("268111"),
        n("941497"),
        n("744285"),
        n("492257"),
        n("873817"),
        n("642549");
      var s = n("153832"),
        i = n("986329"),
        r = n("152551");
      let a = "purchase_token",
        o = 60 * r.default.Millis.DAY;
      function u() {
        let e = i.default.get(a);
        if (null != e && e.expires >= Date.now()) return e.purchaseToken;
        let t = (0, s.v4)();
        return (
          i.default.set(a, { purchaseToken: t, expires: Date.now() + o }), t
        );
      }
      async function d() {
        let e = new Uint8Array(
            u()
              .split("")
              .map(e => e.charCodeAt(0))
          ),
          t = await window.crypto.subtle.digest({ name: "SHA-256" }, e);
        return btoa(String.fromCharCode(...new Uint8Array(t)));
      }
    },
    91866: function (e, t, n) {
      "use strict";
      function s(e) {
        return Array.isArray(e) ? e[0] : e;
      }
      n.r(t),
        n.d(t, {
          getFirstQueryStringValue: function () {
            return s;
          },
        });
    },
    374126: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        }),
        n("653041"),
        n("177593"),
        n("733860");
      var s = n("427786"),
        i = n.n(s);
      let r = new (n("841869").default)("Queue");
      class a {
        constructor(e = r, t = 100) {
          (this.logger = e),
            (this.defaultRetryAfter = t),
            (this.queue = new (i())()),
            (this.timeout = null),
            (this.draining = !1);
        }
        enqueue(e, t, n) {
          this.queue.push({ message: e, success: t, logId: n }),
            this._drainIfNecessary();
        }
        get length() {
          return this.queue.length;
        }
        _drainIfNecessary() {
          if (
            null !== this.timeout ||
            0 === this.queue.length ||
            !0 === this.draining
          )
            return;
          this.draining = !0;
          let e = this.queue.shift(),
            { message: t, success: n, logId: s } = e;
          this.logger.log(
            `Draining message from queue LogId:${s} QueueLength: ${this.queue.length}`
          ),
            this.drain(t, (t, i) => {
              if (
                (this.logger.log(
                  `Finished draining message from queue LogId:${s} QueueLength: ${this.queue.length}`
                ),
                (this.draining = !1),
                null == t)
              ) {
                setImmediate(() => this._drainIfNecessary());
                try {
                  n(i);
                } catch (e) {
                  this.logger.error("", e);
                }
              } else {
                let n = t.retryAfter ?? this.defaultRetryAfter;
                this.logger.info(
                  `Rate limited. Delaying draining of queue for ${n} ms. LogId:${s} QueueLength: ${this.queue.length}`
                ),
                  (this.timeout = setTimeout(() => {
                    this.queue.unshift(e),
                      (this.timeout = null),
                      this._drainIfNecessary();
                  }, n));
              }
            });
        }
      }
    },
    158528: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          hydrateInitialGuild: function () {
            return O;
          },
          hydratePreviouslyUnavailableGuild: function () {
            return M;
          },
          hydrateReadyPayloadPrioritized: function () {
            return N;
          },
          hydrateReadySupplementalPayload: function () {
            return C;
          },
          preloadReadyPayloadData: function () {
            return A;
          },
        }),
        n("653041");
      var s = n("512722"),
        i = n.n(s),
        r = n("392711"),
        a = n.n(r),
        o = n("366598"),
        u = n("275468"),
        d = n("517761"),
        l = n("277169"),
        f = n("632511"),
        _ = n("600119"),
        c = n("841869"),
        g = n("353118"),
        m = n("361820"),
        h = n("775822"),
        E = n("327271"),
        p = n("417223"),
        v = n("14375");
      let y = new c.default("ReadyPayloadUtils"),
        I = {},
        T = null,
        S = {};
      function C(e, t) {
        let { guilds: n, merged_members: s, merged_presences: i, ...r } = e,
          a = R(S, i?.friends),
          o =
            n?.map((e, t) => {
              let n = R(S, i?.guilds[t]),
                r = R(S, s?.[t]);
              return {
                ...e,
                unavailable: void 0 === e.voice_states,
                presences: n,
                members: r,
              };
            }) ?? [],
          u = D(t, n, e => ({
            id: e.id,
            members: e.members,
            presences: e.presences,
            embedded_activities: e.embedded_activities,
            voice_states: e.voice_states,
            unavailable: !1,
          }));
        return (
          null != u && o.push(u), (S = {}), { ...r, presences: a, guilds: o }
        );
      }
      function A() {
        let e = o.default.database(),
          t = (0, _.isCacheEnabled)()
            ? u.default.getCommittedVersions()
            : Promise.resolve({}),
          n = (0, _.isCacheEnabled)()
            ? l.default.getGuildIds()
            : Promise.resolve(new Set());
        return Promise.all([
          t,
          n,
          null != e ? d.default.okAsync(e) : Promise.resolve(!1),
        ]).then(e => {
          let [t, n, s] = e;
          return { guildVersions: t, guildChannels: n, databaseOk: s };
        });
      }
      function N(e, t, n) {
        let {
          users: s,
          relationships: r,
          private_channels: u,
          merged_members: d,
          guilds: l,
          ..._
        } = e;
        (function (e) {
          null != o.default.database() &&
            !1 === e.databaseOk &&
            f.default.replaceDisableAllDatabases(
              "ReadyPayloadUtils: database was not ok"
            ),
            (I = {});
          let t = Object.values(E.default.getGuilds()),
            n = g.default.getGuilds(),
            s = m.default.getRawStickersByGuild(),
            i = p.default.getReadStatesByChannel();
          for (let r of t)
            r.id in e.guildVersions &&
              e.guildChannels.has(r.id) &&
              (I[r.id] = {
                properties: v.toServer(r),
                roles: r.roles,
                emojis: n[r.id]?.rawEmojis ?? null,
                stickers: s.get(r.id) ?? null,
                readStates: i,
              });
        })(n);
        let c = R((S = a().keyBy(s, e => e.id)), r);
        u?.forEach(e => {
          let t = e.recipient_ids;
          null != t &&
            (e.recipients = t.map(
              e => (
                i()(null != S[e], "Missing user in compressed ready payload"),
                S[e]
              )
            )),
            delete e.recipient_ids;
        });
        let h =
            l?.map((e, t) =>
              !0 === e.unavailable ? e : ((e.members = R(S, d?.[t])), b(e))
            ) ?? [],
          y = D(t, l, e => b(e));
        return (
          null != y && h.push(y),
          {
            ..._,
            users: s,
            presences: [],
            relationships: c,
            guilds: h,
            private_channels: u ?? [],
          }
        );
      }
      function D(e, t, n) {
        return null == T ||
          T.identifyTime !== e ||
          (null != t && t.some(e => e.id === T.guild.id))
          ? null
          : n(T.guild);
      }
      function O(e, t) {
        let n = E.default.getGuild(e.id),
          s = M(
            e,
            null == n
              ? void 0
              : {
                  properties: v.toServer(n),
                  roles: n.roles,
                  emojis: g.default.getGuilds()[n.id]?.rawEmojis ?? null,
                  stickers: m.default.getRawStickersByGuild().get(n.id) ?? null,
                  readStates: {},
                }
          );
        return (T = { guild: e, identifyTime: t }), s;
      }
      function R(e, t) {
        let n = [];
        return (
          t?.forEach(t => {
            if (null == t) return;
            let s = t.user_id;
            null != s &&
              (i()(
                null != e[s],
                `Missing user[${s}] in compressed ready payload`
              ),
              (t.user = e[s])),
              delete t.user_id,
              n.push(t);
          }),
          n
        );
      }
      function P(e) {
        let t = I[e];
        return delete I[e], t;
      }
      function b(e) {
        let t = P(e.id);
        if ("partial" !== e.data_mode)
          return {
            id: e.id,
            dataMode: e.data_mode,
            emojis: e.emojis,
            guild_scheduled_events: e.guild_scheduled_events,
            joined_at: e.joined_at,
            lastMessages: e.last_messages,
            member_count: e.member_count,
            members: e.members,
            premium_subscription_count: e.premium_subscription_count,
            properties: e.properties,
            roles: e.roles,
            stage_instances: e.stage_instances,
            stickers: e.stickers,
            threads:
              e.threads?.map(t => h.createChannelRecordFromServer(t, e.id)) ??
              [],
            threadMessages: V(e.threads),
            channels: e.channels.map(
              t => (
                (t.guild_id = e.id),
                (0, h.createChannelRecordFromServer)(t, e.id)
              )
            ),
            version: e.version,
            hasThreadsSubscription: e.has_threads_subscription,
          };
        if (null == t)
          throw (
            (y.log(
              `no cache entry for partial guild (guild: ${e.id}, type: ready)`
            ),
            Error(
              "Guild data was missing from store, but hash was still available."
            ))
          );
        return {
          id: e.id,
          dataMode: e.data_mode,
          channels: null,
          channelUpdates: {
            writes:
              e.partial_updates.channels?.map(t =>
                h.createChannelRecordFromServer(t, e.id)
              ) ?? [],
            deletes: e.partial_updates.deleted_channel_ids ?? [],
          },
          channelTimestampUpdates: e.channel_updates,
          emojis:
            null == t.emojis
              ? null
              : L(
                  t.emojis,
                  e.partial_updates.emojis,
                  e.partial_updates.deleted_emoji_ids
                ),
          emojiUpdates: {
            writes: e.partial_updates.emojis ?? [],
            deletes: e.partial_updates.deleted_emoji_ids ?? [],
          },
          guild_scheduled_events: e.guild_scheduled_events,
          joined_at: e.joined_at,
          lastMessages: e.last_messages,
          member_count: e.member_count,
          members: e.members,
          premium_subscription_count: e.premium_subscription_count,
          properties: e.properties ?? t.properties,
          roles: v.filterRoleDeletes(
            e.id,
            t.roles,
            e.partial_updates.roles,
            e.partial_updates.deleted_role_ids
          ),
          stage_instances: e.stage_instances,
          stickers:
            null == t.stickers
              ? null
              : L(
                  t.stickers,
                  e.partial_updates.stickers,
                  e.partial_updates.deleted_sticker_ids
                ),
          stickerUpdates: {
            writes: e.partial_updates.stickers ?? [],
            deletes: e.partial_updates.deleted_sticker_ids ?? [],
          },
          unableToSyncDeletes: e.unable_to_sync_deletes,
          threads:
            e.threads?.map(t => h.createChannelRecordFromServer(t, e.id)) ?? [],
          threadMessages: V(e.threads),
          version: e.version,
          hasThreadsSubscription: e.has_threads_subscription,
        };
      }
      function M(e, t) {
        if ((null == t && (t = P(e.id)), "partial" !== e.data_mode))
          return {
            id: e.id,
            emojis: e.emojis,
            guild_scheduled_events: e.guild_scheduled_events,
            joined_at: e.joined_at,
            lastMessages: e.last_messages,
            member_count: e.member_count,
            members: e.members,
            premium_subscription_count: e.premium_subscription_count,
            properties: e.properties,
            roles: e.roles,
            stage_instances: e.stage_instances,
            stickers: e.stickers,
            threads:
              e.threads?.map(t => h.createChannelRecordFromServer(t, e.id)) ??
              [],
            threadMessages: V(e.threads),
            channels: e.channels.map(
              t => (
                (t.guild_id = e.id),
                (0, h.createChannelRecordFromServer)(t, e.id)
              )
            ),
            presences: e.presences,
            embedded_activities: e.embedded_activities,
            voice_states: e.voice_states,
            version: e.version,
            hasThreadsSubscription: e.has_threads_subscription,
          };
        if (null == t)
          throw (
            (y.log(
              `no cache entry for partial guild (guild: ${e.id}, type: post_ready)`
            ),
            Error(
              "Guild data was missing from store, but hash was still available."
            ))
          );
        return {
          id: e.id,
          channels: null,
          channelUpdates: {
            writes:
              e.partial_updates.channels?.map(t =>
                h.createChannelRecordFromServer(t, e.id)
              ) ?? [],
            deletes: e.partial_updates.deleted_channel_ids ?? [],
          },
          channelTimestampUpdates: e.channel_updates,
          embedded_activities: e.embedded_activities,
          emojis:
            null == t.emojis
              ? null
              : L(
                  t.emojis,
                  e.partial_updates.emojis,
                  e.partial_updates.deleted_emoji_ids
                ),
          emojiUpdates: {
            writes: e.partial_updates.emojis ?? [],
            deletes: e.partial_updates.deleted_emoji_ids ?? [],
          },
          guild_scheduled_events: e.guild_scheduled_events,
          joined_at: e.joined_at,
          lastMessages: e.last_messages,
          member_count: e.member_count,
          members: e.members,
          premium_subscription_count: e.premium_subscription_count,
          presences: e.presences,
          properties: e.properties ?? t.properties,
          roles: v.filterRoleDeletes(
            e.id,
            t.roles,
            e.partial_updates.roles,
            e.partial_updates.deleted_role_ids
          ),
          stage_instances: e.stage_instances,
          stickers:
            null == t.stickers
              ? null
              : L(
                  t.stickers,
                  e.partial_updates.stickers,
                  e.partial_updates.deleted_sticker_ids
                ),
          stickerUpdates: {
            writes: e.partial_updates.stickers ?? [],
            deletes: e.partial_updates.deleted_sticker_ids ?? [],
          },
          unableToSyncDeletes: e.unable_to_sync_deletes,
          threads:
            e.threads?.map(t => h.createChannelRecordFromServer(t, e.id)) ?? [],
          threadMessages: V(e.threads),
          voice_states: e.voice_states,
          version: e.version,
          hasThreadsSubscription: e.has_threads_subscription,
        };
      }
      function V(e) {
        let t = [];
        if (null != e)
          for (let n of e)
            null != n.most_recent_message && t.push(n.most_recent_message);
        return t;
      }
      function L(e, t, n) {
        t = t ?? [];
        let s = new Set((n ?? []).concat(t.map(e => e.id)));
        return e.filter(e => !s.has(e.id)).concat(t);
      }
    },
    930771: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
      var s = { escape: e => e.replace(/[-[\]/{}()*+?.\\^$|]/g, "\\$&") };
    },
    892027: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          insert: function () {
            return s;
          },
        });
      function s(e, t, n) {
        let s = (function (e, t, n) {
          let s = 0,
            i = e.length;
          for (; s < i; ) {
            let r = (s + i) >>> 1;
            0 > n(e[r], t) ? (s = r + 1) : (i = r);
          }
          return s;
        })(e, t, n);
        e.splice(s, 0, t);
      }
    },
    413775: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getApplicationStoreListingLocation: function () {
            return A;
          },
          getAssetURL: function () {
            return N;
          },
          getNonSocialRecommendationReasons: function () {
            return L;
          },
          getPrimarySKUForApplication: function () {
            return P;
          },
          getSocialRecommendationReasons: function () {
            return M;
          },
          getStoreListingLocation: function () {
            return C;
          },
          httpGetWithCountryCodeQuery: function () {
            return D;
          },
          nativePlatformTypeToSKUOperatingSystem: function () {
            return O;
          },
          skuOperatingSystemToText: function () {
            return R;
          },
        }),
        n("653041"),
        n("789020");
      var s = n("392711"),
        i = n.n(s),
        r = n("913527"),
        a = n.n(r),
        o = n("991637"),
        u = n.n(o),
        d = n("996855"),
        l = n("454836"),
        f = n("242677"),
        _ = n("500833"),
        c = n("579914"),
        g = n("381965"),
        m = n("416573"),
        h = n("640972"),
        E = n("984362"),
        p = n("370275"),
        v = n("501769"),
        y = n("84819"),
        I = n("467006"),
        T = n("30175");
      u().shim();
      let S = !d.isMobile && !d.isTablet && -1 !== (0, h.getChromeVersion)();
      function C(e, t) {
        let {
            analyticsSource: n,
            analyticsProperties: s,
            storeListingId: i,
            slug: r,
            channelId: a,
            guildId: o,
          } = t,
          u = {
            state: { analyticsSource: n, analyticsProperties: s },
            search: null != i ? `?store_listing_id=${i}` : "",
          };
        return {
          pathname:
            null != a && null != o
              ? I.Routes.CHANNEL(o, a, e)
              : I.Routes.APPLICATION_STORE_LISTING_SKU(e, r),
          ...u,
        };
      }
      function A(e, t) {
        let { analyticsSource: n, analyticsProperties: s, slug: i } = t;
        return {
          pathname: I.Routes.APPLICATION_STORE_LISTING_APPLICATION(e, i),
          state: { analyticsSource: n, analyticsProperties: s },
        };
      }
      function N(e, t, n, s) {
        let i;
        let r = window.GLOBAL_ENV.CDN_HOST;
        if (null == s)
          switch (t.mimeType || t.mime_type) {
            case "video/quicktime":
            case "video/mp4":
              s = "mp4";
              break;
            case "image/gif":
              s = "gif";
              break;
            default:
              s = "webp";
          }
        "webp" === s && !S && (s = "png");
        let a = "string" == typeof t ? t : t.id,
          o = "https:";
        return (
          (i =
            null != r
              ? `${o}//${r}/app-assets/${e}/store/${a}.${s}`
              : `${o}${window.GLOBAL_ENV.API_ENDPOINT}${I.Endpoints.STORE_ASSET(e, a, s)}`),
          null != n &&
            (i += `?size=${(0, _.getBestMediaProxySize)(n * (0, _.getDevicePixelRatio)())}`),
          i
        );
      }
      async function D(e) {
        let t =
          !(arguments.length > 1) || void 0 === arguments[1] || arguments[1];
        if (t) {
          let e = [];
          !g.default.hasFetchedPaymentSources &&
            e.push(
              c.default.paymentSourcesFetchRequest ??
                (0, f.fetchPaymentSources)()
            ),
            !c.default.ipCountryCodeLoaded &&
              e.push((0, f.fetchIpCountryCode)()),
            e.push(
              new Promise(async e => {
                if (m.default.hasFetchedSubscriptions()) e();
                else if (c.default.isSubscriptionFetching) {
                  let t = () => {
                    c.default.isSubscriptionFetching ? setTimeout(t, 50) : e();
                  };
                  t();
                } else await (0, f.fetchSubscriptions)(), e();
              })
            ),
            await Promise.allSettled(e);
        }
        let n = g.default.getDefaultBillingCountryCode(),
          s = g.default.defaultPaymentSource?.id ?? null,
          i = m.default.getPremiumTypeSubscription();
        null != i && null != i.paymentSourceId && (s = i.paymentSourceId),
          null === n && (n = c.default.ipCountryCode ?? null);
        let r = {};
        if (
          (null != n && (r.country_code = n),
          null != s && (r.payment_source_id = s),
          null != n || null != s)
        ) {
          if (
            ("string" == typeof e && (e = { url: e, oldFormErrors: !0 }),
            "string" == typeof e.query)
          )
            throw Error("string query not supported");
          e.query = { ...r, ...e.query };
        }
        return l.default.get(e);
      }
      function O(e) {
        switch (e) {
          case v.PlatformTypes.WINDOWS:
            return I.OperatingSystems.WINDOWS;
          case v.PlatformTypes.OSX:
            return I.OperatingSystems.MACOS;
          case v.PlatformTypes.LINUX:
            return I.OperatingSystems.LINUX;
          default:
            return null;
        }
      }
      function R(e) {
        switch (e) {
          case I.OperatingSystems.WINDOWS:
            return T.default.Messages.WINDOWS;
          case I.OperatingSystems.MACOS:
            return T.default.Messages.MACOS;
          case I.OperatingSystems.LINUX:
            return T.default.Messages.LINUX;
        }
        throw Error(`Unknown operating system value: ${e}`);
      }
      function P(e, t, n) {
        let s = t.getApplication(e);
        return null == s || null == s.primarySkuId
          ? null
          : n.get(s.primarySkuId);
      }
      let b = [];
      function M(e, t, n, s, r) {
        let a = t.get(e);
        if (null == a) return b;
        let o = a.applicationId,
          u = [],
          d = [],
          l = (function (e, t, n) {
            let s = n.getNowPlaying(e) ?? {},
              i = y.default
                .keys(s)
                .map(e => {
                  let n = t.getUser(e);
                  return null == n
                    ? null
                    : { user: n, startTime: s[n.id].startedPlaying };
                })
                .filter(p.isNotNullish)
                .sort((e, t) => t.startTime - e.startTime);
            return 0 === i.length
              ? null
              : { type: I.StoreRecommendationTypes.NOW_PLAYING, userInfo: i };
          })(o, n, s);
        null != l &&
          (u.push(l),
          (d = l.userInfo.map(e => {
            let { user: t } = e;
            return t.id;
          })));
        let f = r.getStatisticsForApplication(o);
        if (null != f) {
          let e = f.map(e => e.user_id);
          if (i().difference(e, d).length > 0) {
            let e = (function (e, t, n) {
              let s = n.getStatisticsForApplication(e);
              if (null == s) return null;
              let i = s
                .map(e => {
                  let n = t.getUser(e.user_id);
                  return null == n
                    ? null
                    : { user: n, endTime: Date.parse(e.last_played_at) };
                })
                .filter(p.isNotNullish)
                .sort((e, t) => t.endTime - e.endTime);
              return 0 === i.length
                ? null
                : { type: I.StoreRecommendationTypes.EVER_PLAYED, userInfo: i };
            })(o, n, r);
            null != e && u.push(e);
          }
        }
        return u;
      }
      let V = [];
      function L(e, t, n) {
        let s = t.get(e),
          i = n.getForSKU(e);
        if (null == s || null == i) return V;
        let r = [];
        (0, E.hasFlag)(s.flags, I.SKUFlags.HAS_FREE_PREMIUM_CONTENT) &&
          r.push({ type: I.StoreRecommendationTypes.HAS_FREE_PREMIUM_CONTENT });
        let o = s.releaseDate;
        return (
          null != o &&
            3 > a()().diff(o, "months") &&
            (s.accessType === I.SKUAccessTypes.EARLY_ACCESS
              ? r.push({
                  type: I.StoreRecommendationTypes.EARLY_ACCESS,
                  releaseDate: o,
                })
              : r.push({
                  type: I.StoreRecommendationTypes.RECENT_RELEASE_DATE,
                  releaseDate: o,
                })),
          null != i.flavorText &&
            r.push({
              type: I.StoreRecommendationTypes.FLAVOR_TEXT,
              flavorText: i.flavorText,
            }),
          r
        );
      }
    },
    483650: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getFPSText: function () {
            return h;
          },
          getMaxQuality: function () {
            return E;
          },
          getResolutionText: function () {
            return m;
          },
          isPremiumFPS: function () {
            return c;
          },
          isPremiumResolution: function () {
            return _;
          },
          trackStreamSettingsUpdate: function () {
            return p;
          },
        });
      var s = n("327271"),
        i = n("407807"),
        r = n("871831"),
        a = n("328470"),
        o = n("467006"),
        u = n("315308"),
        d = n("171168"),
        l = n("389570"),
        f = n("30175");
      function _(e) {
        if (null == e) return;
        let t =
            e.maxResolution.type === l.ResolutionTypes.SOURCE
              ? u.ApplicationStreamResolutions.RESOLUTION_SOURCE
              : e.maxResolution.height,
          n = (0, u.getApplicationResolution)(t);
        return (
          (0, u.getApplicationFramerate)(e.maxFrameRate) !==
            u.ApplicationStreamFPS.FPS_5 &&
          null ==
            u.ApplicationStreamSettingRequirements.find(
              e =>
                e.resolution === n &&
                e.fps !== u.ApplicationStreamFPS.FPS_5 &&
                !g(e)
            )
        );
      }
      function c(e) {
        if (null == e) return;
        let t = (0, u.getApplicationFramerate)(e.maxFrameRate);
        return (
          null ==
          u.ApplicationStreamSettingRequirements.find(e => e.fps === t && !g(e))
        );
      }
      function g(e) {
        return null != e.quality || null != e.guildPremiumTier;
      }
      function m(e) {
        return e.type === l.ResolutionTypes.SOURCE
          ? f.default.Messages.SCREENSHARE_SOURCE
          : f.default.Messages.SCREENSHARE_RESOLUTION_ABBREVIATED.format({
              resolution: e.height,
            });
      }
      function h(e) {
        return f.default.Messages.SCREENSHARE_FPS_ABBREVIATED.format({
          fps: e,
        });
      }
      function E(e) {
        return null == e.maxResolution || null == e.maxFrameRate
          ? null
          : { maxFrameRate: e.maxFrameRate, maxResolution: e.maxResolution };
      }
      function p(e, t, n) {
        var l, f, _;
        let c =
            ((l = e),
            (f = t),
            (_ = n),
            u.ApplicationStreamSettingRequirements.find(
              e =>
                (null == e.preset || e.preset === l) &&
                e.resolution === f &&
                e.fps === _
            )),
          g = r.default.getCurrentUser(),
          m = i.default.getGuildId(),
          h = null != m ? s.default.getGuild(m) : null;
        a.default.track(o.AnalyticEvents.STREAM_SETTINGS_UPDATE, {
          user_premium_tier: g?.premiumType,
          guild_premium_tier: h?.premiumTier,
          stream_quality_user_premium_tier:
            c?.quality != null
              ? d.StreamQualitiesToPremiumType[c.quality]
              : null,
          stream_quality_guild_premium_tier: c?.guildPremiumTier,
          stream_quality_preset: e,
          stream_quality_resolution: t,
          stream_quality_frame_rate: n,
        });
      }
    },
    5336: function (e, t, n) {
      "use strict";
      let s;
      n.r(t),
        n.d(t, {
          authenticatePaymentIntentForPaymentId: function () {
            return c;
          },
          getStripe: function () {
            return f;
          },
          parseStripePaymentMethod: function () {
            return _;
          },
          validateExpiry: function () {
            return l;
          },
        });
      var i,
        r,
        a = n("713845"),
        o = n("454836"),
        u = n("467006");
      ((i = r || (r = {})).REQUIRES_PAYMENT_METHOD = "requires_payment_method"),
        (i.REQUIRES_CONFIRMATION = "requires_confirmation"),
        (i.REQUIRES_ACTION = "requires_action"),
        (i.PROCESSING = "processing"),
        (i.CANCELED = "canceled"),
        (i.SUCCEEDED = "succeeded");
      let d = e => {
          let t = t =>
              `You passed an invalid expiration date ${e}${t ?? ""}Please pass a string containing a numeric month and year such as \`01-17\` or \`2015 / 05\``,
            n = e.split(/[.\-/\s]+/g);
          2 !== n.length && t();
          let s = n.map(e => {
              let s = parseInt(e);
              return (
                isNaN(s) && t(`${n} is not a number.`),
                s < 1 && t(`${s} is less than one.`),
                s
              );
            }),
            [i, r] = s[0] > 12 ? [s[1], s[0]] : [s[0], s[1]];
          return (
            i > 12 && t(`Month must be a number 1-12, not ${i}.`),
            r < 100 && (r += 2e3),
            [i, r]
          );
        },
        l = e => {
          let t, n;
          try {
            [t, n] = d(e);
          } catch (e) {
            return !1;
          }
          let s = new Date(n, t),
            i = new Date();
          return (
            s.setMonth(s.getMonth() - 1), s.setMonth(s.getMonth() + 1, 1), s > i
          );
        };
      function f() {
        return null != s
          ? Promise.resolve(s)
          : (0, a.loadStripe)(u.PaymentSettings.STRIPE.KEY).then(
              e => ((s = e), e)
            );
      }
      function _(e) {
        let { billing_details: t } = e,
          n = t.address ?? {},
          s = {
            name: t.name ?? "",
            line1: n.line1 ?? "",
            line2: n.line2 ?? "",
            city: n.city ?? "",
            state: n.state ?? "",
            country: n.country ?? "",
            postalCode: n.postal_code ?? "",
          };
        return { token: e.id, billingAddressInfo: s };
      }
      async function c(e) {
        try {
          let { stripe_payment_intent_client_secret: t } = (
              await o.default.get({
                url: u.Endpoints.BILLING_STRIPE_PAYMENT_INTENTS(e),
                oldFormErrors: !0,
              })
            ).body,
            n = await f();
          if (null == n) return { error: "unable to load stripe" };
          let { error: s, paymentIntent: i } = await n.retrievePaymentIntent(t);
          if (null != s) return { error: s.message };
          if (null == i) return { error: "payment intent does not exist" };
          let r = {};
          switch (
            ("requires_payment_method" === i.status &&
              null != i.last_payment_error &&
              null != i.last_payment_error.payment_method &&
              (r.payment_method = i.last_payment_error.payment_method.id),
            i.status)
          ) {
            case "requires_payment_method":
            case "requires_confirmation":
            case "requires_action":
              let { error: a } = await n.confirmCardPayment(t, r);
              if (null != a) return { error: a.message };
              return {};
            case "succeeded":
            case "processing":
              return {};
            default:
              return { error: `Invalid Payment Intent status: ${i.status}` };
          }
        } catch (e) {
          return { error: e.message };
        }
      }
    },
    334990: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
      var s = n("454836"),
        i = n("328470");
      function r(e, t, n) {
        let { trackedActionData: s, ...r } = t,
          a = { url: r.url, request_method: n };
        return new Promise((t, n) => {
          e(r)
            .then(e => {
              let n = s.properties;
              "function" == typeof s.properties && (n = s.properties(e)),
                (0, i.trackNetworkAction)(s.event, {
                  status_code: e.status,
                  ...a,
                  ...n,
                }),
                t(e);
            })
            .catch(e => {
              let t = s.properties;
              "function" == typeof s.properties && (t = s.properties(e)),
                (0, i.trackNetworkAction)(s.event, {
                  status_code: e.status,
                  error_code: e.body?.code,
                  error_message: e.body?.message,
                  ...a,
                  ...t,
                }),
                n(e);
            });
        });
      }
      var a = {
        get: function (e) {
          return r(s.default.get, e, "get");
        },
        post: function (e) {
          return r(s.default.post, e, "post");
        },
        put: function (e) {
          return r(s.default.put, e, "put");
        },
        patch: function (e) {
          return r(s.default.patch, e, "patch");
        },
        delete: function (e) {
          return r(s.default.delete, e, "del");
        },
      };
    },
    237837: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      let s =
          /^([\w-+]+(?:\.[\w-+]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,63}(?:\.[a-z]{2})?)$/i,
        i =
          /^((https:\/\/)?(discord\.gg\/)|(discord\.com\/)(invite\/)?)?[A-Za-z0-9]{8,8}$/,
        r = /^(\+\d{1,2}\s)?\(?\d{3}\)?[\s.-]?\d{3}[\s.-]?\d{4}$/,
        a = /^(.*)#[0-9]{1,5}$/,
        o = [
          "@",
          "#",
          ":",
          "```",
          "discord",
          "hypesquad",
          "system message",
          "system mesage",
          "sustem message",
          "sustem mesage",
        ],
        u = ["discordtag", "everyone", "here", "discord nitro", "discord"];
      var d = {
        isEmail: function (e) {
          return s.test(e);
        },
        isInvite: function (e) {
          return i.test(e);
        },
        isPhoneNumber: function (e) {
          return r.test(e);
        },
        isUserTagLike: function (e) {
          let t = a.exec(e);
          if (null != t && t.length > 1) {
            let e = t[1],
              n = o.some(t => e.includes(t)),
              s = u.includes(e);
            return !n && !s;
          }
          return !1;
        },
      };
    },
    94097: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var s = n("329420"),
        i = n("467006");
      function r(e, t, n) {
        let r =
          arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null;
        return {
          key: t.key ?? r ?? "modal",
          modal: e,
          animation:
            t.animation ??
            (s.default.useReducedMotion
              ? i.ModalAnimation.FADE
              : i.ModalAnimation.SLIDE_UP),
          shouldPersistUnderModals: t.shouldPersistUnderModals ?? !1,
          props: n,
          backdropStyle: t.backdropStyle ?? null,
          backdropInstant: t.backdropInstant ?? !1,
          disableAnimation: t.disableAnimation ?? !1,
          closable: "boolean" != typeof t.closable || t.closable,
          label: t.label ?? "",
          callbacks: {},
        };
      }
    },
    45245: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          FULLSCREEN_CHANGE_EVENT: function () {
            return u;
          },
          exitFullScreen: function () {
            return a;
          },
          getFullScreenNode: function () {
            return i;
          },
          isFullScreen: function () {
            return o;
          },
          requestFullScreen: function () {
            return r;
          },
          subscribeDocumentToFullScreenChange: function () {
            return d;
          },
        });
      var s = n("841869");
      function i() {
        for (var e = arguments.length, t = Array(e), n = 0; n < e; n++)
          t[n] = arguments[n];
        return t.find(
          e =>
            null != e &&
            (function (e) {
              return (
                null != e.requestFullscreen ||
                null != e.webkitRequestFullscreen ||
                e.webkitSupportsFullscreen ||
                null != e.mozRequestFullScreen ||
                null != e.msRequestFullscreen
              );
            })(e)
        );
      }
      function r(e) {
        "function" == typeof e.requestFullscreen
          ? e.requestFullscreen()
          : "function" == typeof e.webkitRequestFullscreen
            ? e.webkitRequestFullscreen()
            : "function" == typeof e.webkitEnterFullscreen
              ? e.webkitEnterFullscreen()
              : "function" == typeof e.mozRequestFullScreen
                ? e.mozRequestFullScreen()
                : "function" == typeof e.msRequestFullscreen
                  ? e.msRequestFullscreen()
                  : new s.default("FullScreenUtils").warn(
                      "Fullscreen API is not supported."
                    );
      }
      function a(e, t) {
        let n = null != t ? t : document;
        o(null, n) &&
          ("function" == typeof n.exitFullscreen
            ? n.exitFullscreen()
            : "function" == typeof n.webkitExitFullscreen
              ? n.webkitExitFullscreen()
              : "function" == typeof e.webkitExitFullscreen
                ? e.webkitExitFullscreen()
                : "function" == typeof n.mozCancelFullScreen
                  ? n.mozCancelFullScreen()
                  : "function" == typeof n.msExitFullscreen
                    ? n.msExitFullscreen()
                    : new s.default("FullScreenUtils").warn(
                        "Fullscreen API is not supported."
                      ));
      }
      function o(e, t) {
        let n = null != t ? t : document;
        return !!(
          null != n.fullscreenElement ||
          null != n.mozFullScreenElement ||
          null != n.webkitFullscreenElement ||
          null != n.msFullscreenElement ||
          (null != e && e.webkitDisplayingFullscreen)
        );
      }
      let u = (() => {
        if ("undefined" != typeof document) {
          let e = document.createElement("video");
          if ("function" == typeof e.requestFullscreen);
          else if ("function" == typeof e.webkitRequestFullscreen)
            return "webkitfullscreenchange";
          else if ("function" == typeof e.webkitEnterFullscreen)
            return "webkitendfullscreen";
          else if ("function" == typeof e.mozRequestFullScreen)
            return "mozfullscreenchange";
          else if ("function" == typeof e.msRequestFullscreen)
            return "msfullscreenchange";
        } else
          console.warn(
            "FullScreenUtils has been imported in a non-web environment"
          );
        return "fullscreenchange";
      })();
      function d(e, t) {
        return (
          e.addEventListener(u, t),
          e.addEventListener("webkitfullscreenchange", t),
          () => {
            e.removeEventListener(u, t),
              e.removeEventListener("webkitfullscreenchange", t);
          }
        );
      }
    },
    267458: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          showModal: function () {
            return o;
          },
          updateModalProps: function () {
            return u;
          },
        });
      var s = n("735250");
      n("470079");
      var i = n("910838"),
        r = n("831085");
      let a = (e, t, n) =>
        function (i) {
          return (0, s.jsx)(r.default, {
            handleSubmit: e,
            handleEarlyClose: t,
            ...n,
            ...i,
          });
        };
      function o(e, t, n) {
        return (0, i.openModal)(a(e, t, n), { onCloseCallback: t });
      }
      function u(e, t, n, s) {
        return (0, i.updateModal)(e, a(t, n, s));
      }
    },
    896820: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var s = n("525654"),
        i = n.n(s),
        r = n("444675");
      function a(e, t) {
        if (!e.startsWith("discord:"))
          return (location.href = e), r.nextTick(() => t(!0));
        let { body: n } = document;
        if (null == n) return r.nextTick(() => t(!1));
        let s = document.createElement("iframe");
        n.appendChild(s);
        try {
          null != s.contentWindow && (s.contentWindow.location.href = e),
            r.nextTick(() => t(!0));
        } catch (e) {
          "NS_ERROR_UNKNOWN_PROTOCOL" === e.name && r.nextTick(() => t(!1));
        }
        window.setTimeout(() => {
          (s?.parentElement ?? null) !== null && n.removeChild(s);
        }, 1e3);
      }
      function o(e, t) {
        let n = !1;
        function s() {
          n = !0;
        }
        window.addEventListener("blur", s),
          (location.href = e),
          setTimeout(() => {
            window.removeEventListener("blur", s), t(n);
          }, 1e3);
      }
      function u(e, t) {
        t(!1);
      }
      function d(e, t) {
        (location.href = e), r.nextTick(() => t(!0));
      }
      var l = {
        launch: (function () {
          if (i().os?.family === "Android" || i().os?.family === "iOS")
            return d;
          if ("Gecko" === i().layout) return a;
          if (
            null != i().ua &&
            -1 !== i().ua.indexOf("Valve Steam GameOverlay")
          )
            return u;
          return o;
        })(),
      };
    },
    875650: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          CheckmarkSmallIcon: function () {
            return a;
          },
        });
      var s = n("735250");
      n("470079");
      var i = n("600186"),
        r = n("11768");
      let a = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: a = i.default.colors.INTERACTIVE_NORMAL,
          colorClass: o = "",
          ...u
        } = e;
        return (0, s.jsx)("svg", {
          ...(0, r.default)(u),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: (0, s.jsx)("path", {
            fill: "string" == typeof a ? a : a.css,
            fillRule: "evenodd",
            d: "M18.7 7.3a1 1 0 0 1 0 1.4l-8 8a1 1 0 0 1-1.4 0l-4-4a1 1 0 1 1 1.4-1.4l3.3 3.29 7.3-7.3a1 1 0 0 1 1.4 0Z",
            clipRule: "evenodd",
            className: o,
          }),
        });
      };
    },
    18854: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ClockIcon: function () {
            return a;
          },
        });
      var s = n("735250");
      n("470079");
      var i = n("600186"),
        r = n("11768");
      let a = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: a = i.default.colors.INTERACTIVE_NORMAL,
          colorClass: o = "",
          ...u
        } = e;
        return (0, s.jsx)("svg", {
          ...(0, r.default)(u),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: (0, s.jsx)("path", {
            fill: "string" == typeof a ? a : a.css,
            fillRule: "evenodd",
            d: "M12 23a11 11 0 1 0 0-22 11 11 0 0 0 0 22Zm1-18a1 1 0 1 0-2 0v7c0 .27.1.52.3.7l3 3a1 1 0 0 0 1.4-1.4L13 11.58V5Z",
            clipRule: "evenodd",
            className: o,
          }),
        });
      };
    },
    369368: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          EmbedIcon: function () {
            return a;
          },
        });
      var s = n("735250");
      n("470079");
      var i = n("600186"),
        r = n("11768");
      let a = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: a = i.default.colors.INTERACTIVE_NORMAL,
          colorClass: o = "",
          ...u
        } = e;
        return (0, s.jsxs)("svg", {
          ...(0, r.default)(u),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: [
            (0, s.jsx)("path", {
              fill: "string" == typeof a ? a : a.css,
              d: "M9.5 11.87a1 1 0 0 1 1.55-.83l3.2 2.13a1 1 0 0 1 0 1.66l-3.2 2.13a1 1 0 0 1-1.55-.83v-4.26Z",
              className: o,
            }),
            (0, s.jsx)("path", {
              fill: "string" == typeof a ? a : a.css,
              fillRule: "evenodd",
              d: "M5 2a3 3 0 0 0-3 3v14a3 3 0 0 0 3 3h14a3 3 0 0 0 3-3V5a3 3 0 0 0-3-3H5Zm2 7a2 2 0 0 0-2 2v6c0 1.1.9 2 2 2h10a2 2 0 0 0 2-2v-6a2 2 0 0 0-2-2H7ZM5 6a1 1 0 0 1 1-1h6a1 1 0 1 1 0 2H6a1 1 0 0 1-1-1Z",
              clipRule: "evenodd",
              className: o,
            }),
          ],
        });
      };
    },
    479896: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          GlobeEarthIcon: function () {
            return a;
          },
        });
      var s = n("735250");
      n("470079");
      var i = n("600186"),
        r = n("11768");
      let a = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: a = i.default.colors.INTERACTIVE_NORMAL,
          colorClass: o = "",
          ...u
        } = e;
        return (0, s.jsx)("svg", {
          ...(0, r.default)(u),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: (0, s.jsx)("path", {
            fill: "string" == typeof a ? a : a.css,
            fillRule: "evenodd",
            d: "M23 12a11 11 0 1 1-22 0 11 11 0 0 1 22 0Zm-4.16 5.85A9 9 0 0 0 15 3.52V4a3 3 0 0 1-3 3h-.77c-.13 0-.23.1-.23.23A2.77 2.77 0 0 1 8.23 10c-.13 0-.23.1-.23.23v1.52c0 .14.11.25.25.25H13a3 3 0 0 1 3 3v.77c0 .13.1.23.23.23 1.2 0 2.23.77 2.61 1.85ZM3.18 10.18A9 9 0 0 0 11 20.94v-2.7c0-.14-.1-.24-.23-.24h-.65A2.12 2.12 0 0 1 8 15.88c0-.56-.22-1.1-.62-1.5l-4.2-4.2Z",
            clipRule: "evenodd",
            className: o,
          }),
        });
      };
    },
    944449: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          LinkIcon: function () {
            return a;
          },
        });
      var s = n("735250");
      n("470079");
      var i = n("600186"),
        r = n("11768");
      let a = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: a = i.default.colors.INTERACTIVE_NORMAL,
          colorClass: o = "",
          ...u
        } = e;
        return (0, s.jsxs)("svg", {
          ...(0, r.default)(u),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: [
            (0, s.jsx)("path", {
              fill: "string" == typeof a ? a : a.css,
              d: "M16.3 14.7a1 1 0 0 1 0-1.4l2.5-2.5a3.95 3.95 0 1 0-5.6-5.6l-2.5 2.5a1 1 0 1 1-1.4-1.4l2.5-2.5a5.95 5.95 0 1 1 8.4 8.4l-2.5 2.5a1 1 0 0 1-1.4 0ZM7.7 9.3a1 1 0 0 1 0 1.4l-2.5 2.5a3.95 3.95 0 0 0 5.6 5.6l2.5-2.5a1 1 0 1 1 1.4 1.4l-2.5 2.5a5.95 5.95 0 0 1-8.4-8.4l2.5-2.5a1 1 0 0 1 1.4 0Z",
              className: o,
            }),
            (0, s.jsx)("path", {
              fill: "string" == typeof a ? a : a.css,
              d: "M14.7 10.7a1 1 0 1 0-1.4-1.4l-4 4a1 1 0 0 0 1.4 1.4l4-4Z",
              className: o,
            }),
          ],
        });
      };
    },
    597484: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          LockIcon: function () {
            return a;
          },
        });
      var s = n("735250");
      n("470079");
      var i = n("600186"),
        r = n("11768");
      let a = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: a = i.default.colors.INTERACTIVE_NORMAL,
          colorClass: o = "",
          ...u
        } = e;
        return (0, s.jsx)("svg", {
          ...(0, r.default)(u),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: (0, s.jsx)("path", {
            fill: "string" == typeof a ? a : a.css,
            fillRule: "evenodd",
            d: "M6 9h1V6a5 5 0 0 1 10 0v3h1a3 3 0 0 1 3 3v8a3 3 0 0 1-3 3H6a3 3 0 0 1-3-3v-8a3 3 0 0 1 3-3Zm9-3v3H9V6a3 3 0 1 1 6 0Zm-1 8a2 2 0 0 1-1 1.73V18a1 1 0 1 1-2 0v-2.27A2 2 0 1 1 14 14Z",
            clipRule: "evenodd",
            className: o,
          }),
        });
      };
    },
    157130: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          RobotIcon: function () {
            return a;
          },
        });
      var s = n("735250");
      n("470079");
      var i = n("600186"),
        r = n("11768");
      let a = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: a = i.default.colors.INTERACTIVE_NORMAL,
          colorClass: o = "",
          ...u
        } = e;
        return (0, s.jsxs)("svg", {
          ...(0, r.default)(u),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: [
            (0, s.jsx)("path", {
              fill: "string" == typeof a ? a : a.css,
              d: "M7.89 13.46a1 1 0 0 1-1.78-.9L7 13l-.9-.45.01-.01.01-.02a2.42 2.42 0 0 1 .14-.23c.1-.14.23-.31.4-.5.37-.36.98-.79 1.84-.79.86 0 1.47.43 1.83.8a3.28 3.28 0 0 1 .55.72v.02h.01v.01L10 13l.9-.45a1 1 0 0 1-1.79.9 1.28 1.28 0 0 0-.19-.25c-.14-.13-.28-.2-.42-.2-.14 0-.28.07-.42.2a1.28 1.28 0 0 0-.19.25ZM13.55 13.9a1 1 0 0 0 1.34-.44c0-.02.02-.04.04-.06.03-.05.08-.13.15-.2.14-.13.28-.2.42-.2.14 0 .28.07.42.2a1.28 1.28 0 0 1 .19.25 1 1 0 0 0 1.78-.9L17 13l.9-.45-.01-.01-.01-.02a2.57 2.57 0 0 0-.14-.23 3.28 3.28 0 0 0-.4-.5c-.37-.36-.98-.79-1.84-.79-.86 0-1.47.43-1.83.8a3.28 3.28 0 0 0-.55.72v.02h-.01v.01L14 13l-.9-.45a1 1 0 0 0 .45 1.34Z",
              className: o,
            }),
            (0, s.jsx)("path", {
              fill: "string" == typeof a ? a : a.css,
              fillRule: "evenodd",
              d: "M12 21c5.52 0 10-1.86 10-6 0-5.59-2.8-10.07-4.26-11.67a1 1 0 1 0-1.48 1.34 14.8 14.8 0 0 1 2.35 3.86A10.23 10.23 0 0 0 12 6C9.47 6 7.15 7.02 5.4 8.53a14.8 14.8 0 0 1 2.34-3.86 1 1 0 0 0-1.48-1.34A18.65 18.65 0 0 0 2 15c0 4.14 4.48 6 10 6Zm0-12c3.87 0 7 2 7 4.2S15.87 17 12 17s-7-1.6-7-3.8C5 11 8.13 9 12 9Z",
              clipRule: "evenodd",
              className: o,
            }),
          ],
        });
      };
    },
    362273: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ShieldIcon: function () {
            return a;
          },
        });
      var s = n("735250");
      n("470079");
      var i = n("600186"),
        r = n("11768");
      let a = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: a = i.default.colors.INTERACTIVE_NORMAL,
          colorClass: o = "",
          ...u
        } = e;
        return (0, s.jsx)("svg", {
          ...(0, r.default)(u),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: (0, s.jsx)("path", {
            fill: "string" == typeof a ? a : a.css,
            fillRule: "evenodd",
            d: "M4.27 5.22A2.66 2.66 0 0 0 3 7.5v2.3c0 5.6 3.3 10.68 8.42 12.95.37.17.79.17 1.16 0A14.18 14.18 0 0 0 21 9.78V7.5c0-.93-.48-1.78-1.27-2.27l-6.17-3.76a3 3 0 0 0-3.12 0L4.27 5.22ZM6 7.68l6-3.66V12H6.22C6.08 11.28 6 10.54 6 9.78v-2.1Zm6 12.01V12h5.78A11.19 11.19 0 0 1 12 19.7Z",
            clipRule: "evenodd",
            className: o,
          }),
        });
      };
    },
    534577: function (e, t, n) {
      "use strict";
      function s(e) {
        return `${location.protocol}//${window.GLOBAL_ENV.INVITE_HOST}/${e}`;
      }
      function i(e) {
        return `${location.protocol}//${window.GLOBAL_ENV.GUILD_TEMPLATE_HOST}/${e}`;
      }
      function r() {
        return `${location.protocol}//${window.GLOBAL_ENV.WEBAPP_ENDPOINT}/channels/@me`;
      }
      n.r(t),
        n.d(t, {
          getDefaultDynamicLinkTemplate: function () {
            return r;
          },
          getGuildTemplateDynamicLinkTemplate: function () {
            return i;
          },
          getInviteDynamicLinkTemplate: function () {
            return s;
          },
        });
    },
    127770: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
          generateAttemptId: function () {
            return u;
          },
          parseDynamicLink: function () {
            return d;
          },
        }),
        n("216116"),
        n("78328"),
        n("815648");
      var s = n("264344"),
        i = n.n(s),
        r = n("153832"),
        a = n("484207");
      let o = "https://discordapp.page.link";
      function u() {
        return (0, r.v4)();
      }
      function d(e) {
        if (!e.startsWith(o)) return null;
        try {
          let t = new URL(e).searchParams,
            n = t.get("link");
          if (null == n) return null;
          let s = decodeURIComponent(n),
            i = new URL(s).searchParams,
            r = { utmSource: t.get("utm_source") ?? void 0 };
          for (let [e, t] of i.entries()) r[e] = t;
          return r;
        } catch {
          return null;
        }
      }
      function l(e, t) {
        let {
            utmSource: n,
            androidFallbackLink: s,
            iosFallbackLink: r,
            ...u
          } = t,
          d = new URL(e);
        for (let e in u) {
          let t = u[e];
          null != t && d.searchParams.set(e, t);
        }
        let l = encodeURIComponent(d.toString()),
          f = encodeURIComponent((0, a.default)()),
          _ = !(function () {
            let e = RegExp("(WebView|(iPhone|iPod|iPad)(?!.*Safari/))", "ig"),
              t = i()?.ua?.match(e) != null,
              n = i()?.name === "Safari" && !t;
            return i()?.os?.family !== "iOS" || n;
          })()
            ? 0
            : 1,
          c = null != s ? encodeURIComponent(s) : null,
          g = null != r ? encodeURIComponent(r) : null,
          m = `${o}/?link=${l}&utm_source=${n}&apn=com.discord&isi=985746746&ibi=com.hammerandchisel.discord&sd=${f}&efr=${_}`;
        return (
          null != c && (m += `&afl=${c}`), null != g && (m += `&ifl=${g}`), m
        );
      }
    },
    484207: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      let s = () => "";
      var i = (s = n("102940").default);
    },
    102940: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var s = n("57180");
      function i() {
        return s.default.Messages.DynamicLinks.IOS_APP_PREVIEW_DESCRIPTION;
      }
    },
    479800: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
      var s = [
        {
          name: "Afghanistan",
          alpha2: "AF",
          phoneCountryCode: "+93",
          phoneCountryCodes: ["+93"],
        },
        {
          name: "Aland Islands",
          alpha2: "AX",
          phoneCountryCode: "+358",
          phoneCountryCodes: ["+358"],
        },
        {
          name: "Albania",
          alpha2: "AL",
          phoneCountryCode: "+355",
          phoneCountryCodes: ["+355"],
        },
        {
          name: "Algeria",
          alpha2: "DZ",
          phoneCountryCode: "+213",
          phoneCountryCodes: ["+213"],
        },
        {
          name: "American Samoa",
          alpha2: "AS",
          phoneCountryCode: "+1 684",
          phoneCountryCodes: ["+1 684"],
        },
        {
          name: "Andorra",
          alpha2: "AD",
          phoneCountryCode: "+376",
          phoneCountryCodes: ["+376"],
        },
        {
          name: "Angola",
          alpha2: "AO",
          phoneCountryCode: "+244",
          phoneCountryCodes: ["+244"],
        },
        {
          name: "Anguilla",
          alpha2: "AI",
          phoneCountryCode: "+1 264",
          phoneCountryCodes: ["+1 264"],
        },
        {
          name: "Antarctica",
          alpha2: "AQ",
          phoneCountryCode: "+672",
          phoneCountryCodes: ["+672"],
        },
        {
          name: "Antigua and Barbuda",
          alpha2: "AG",
          phoneCountryCode: "+1 268",
          phoneCountryCodes: ["+1 268"],
        },
        {
          name: "Argentina",
          alpha2: "AR",
          phoneCountryCode: "+54",
          phoneCountryCodes: ["+54"],
          localeForICU: "es-AR",
          currencyCode: "ars",
        },
        {
          name: "Armenia",
          alpha2: "AM",
          phoneCountryCode: "+374",
          phoneCountryCodes: ["+374"],
        },
        {
          name: "Aruba",
          alpha2: "AW",
          phoneCountryCode: "+297",
          phoneCountryCodes: ["+297"],
        },
        {
          name: "Ascension",
          alpha2: "AC",
          phoneCountryCode: "+247",
          phoneCountryCodes: ["+247"],
        },
        {
          name: "Australia",
          alpha2: "AU",
          phoneCountryCode: "+61",
          phoneCountryCodes: ["+61"],
          localeForICU: "en-AU",
          currencyCode: "aud",
        },
        {
          name: "Austria",
          alpha2: "AT",
          phoneCountryCode: "+43",
          phoneCountryCodes: ["+43"],
        },
        {
          name: "Azerbaijan",
          alpha2: "AZ",
          phoneCountryCode: "+994",
          phoneCountryCodes: ["+994"],
        },
        {
          name: "Bahamas",
          alpha2: "BS",
          phoneCountryCode: "+1 242",
          phoneCountryCodes: ["+1 242"],
        },
        {
          name: "Bahrain",
          alpha2: "BH",
          phoneCountryCode: "+973",
          phoneCountryCodes: ["+973"],
        },
        {
          name: "Bangladesh",
          alpha2: "BD",
          phoneCountryCode: "+880",
          phoneCountryCodes: ["+880"],
        },
        {
          name: "Barbados",
          alpha2: "BB",
          phoneCountryCode: "+1 246",
          phoneCountryCodes: ["+1 246"],
        },
        {
          name: "Belarus",
          alpha2: "BY",
          phoneCountryCode: "+375",
          phoneCountryCodes: ["+375"],
        },
        {
          name: "Belgium",
          alpha2: "BE",
          phoneCountryCode: "+32",
          phoneCountryCodes: ["+32"],
        },
        {
          name: "Belize",
          alpha2: "BZ",
          phoneCountryCode: "+501",
          phoneCountryCodes: ["+501"],
        },
        {
          name: "Benin",
          alpha2: "BJ",
          phoneCountryCode: "+229",
          phoneCountryCodes: ["+229"],
        },
        {
          name: "Bermuda",
          alpha2: "BM",
          phoneCountryCode: "+1 441",
          phoneCountryCodes: ["+1 441"],
        },
        {
          name: "Bhutan",
          alpha2: "BT",
          phoneCountryCode: "+975",
          phoneCountryCodes: ["+975"],
        },
        {
          name: "Bolivia, Plurinational State of",
          alpha2: "BO",
          phoneCountryCode: "+591",
          phoneCountryCodes: ["+591"],
        },
        {
          name: "Bonaire, Sint Eustatius and Saba",
          alpha2: "BQ",
          phoneCountryCode: "+599",
          phoneCountryCodes: ["+599"],
        },
        {
          name: "Bosnia and Herzegovina",
          alpha2: "BA",
          phoneCountryCode: "+387",
          phoneCountryCodes: ["+387"],
        },
        {
          name: "Botswana",
          alpha2: "BW",
          phoneCountryCode: "+267",
          phoneCountryCodes: ["+267"],
        },
        {
          name: "Bouvet Island",
          alpha2: "BV",
          phoneCountryCode: "+55",
          phoneCountryCodes: ["+55"],
        },
        {
          name: "Brazil",
          alpha2: "BR",
          phoneCountryCode: "+55",
          phoneCountryCodes: ["+55"],
        },
        {
          name: "British Indian Ocean Territory",
          alpha2: "IO",
          phoneCountryCode: "+246",
          phoneCountryCodes: ["+246"],
        },
        {
          name: "Brunei Darussalam",
          alpha2: "BN",
          phoneCountryCode: "+673",
          phoneCountryCodes: ["+673"],
        },
        {
          name: "Bulgaria",
          alpha2: "BG",
          phoneCountryCode: "+359",
          phoneCountryCodes: ["+359"],
        },
        {
          name: "Burkina Faso",
          alpha2: "BF",
          phoneCountryCode: "+226",
          phoneCountryCodes: ["+226"],
        },
        {
          name: "Burundi",
          alpha2: "BI",
          phoneCountryCode: "+257",
          phoneCountryCodes: ["+257"],
        },
        {
          name: "Cambodia",
          alpha2: "KH",
          phoneCountryCode: "+855",
          phoneCountryCodes: ["+855"],
        },
        {
          name: "Cameroon",
          alpha2: "CM",
          phoneCountryCode: "+237",
          phoneCountryCodes: ["+237"],
        },
        {
          name: "Canada",
          alpha2: "CA",
          phoneCountryCode: "+1",
          phoneCountryCodes: ["+1"],
        },
        {
          name: "Cape Verde",
          alpha2: "CV",
          phoneCountryCode: "+238",
          phoneCountryCodes: ["+238"],
        },
        {
          name: "Cayman Islands",
          alpha2: "KY",
          phoneCountryCode: "+1 345",
          phoneCountryCodes: ["+1 345"],
        },
        {
          name: "Central African Republic",
          alpha2: "CF",
          phoneCountryCode: "+236",
          phoneCountryCodes: ["+236"],
        },
        {
          name: "Chad",
          alpha2: "TD",
          phoneCountryCode: "+235",
          phoneCountryCodes: ["+235"],
        },
        {
          name: "Chile",
          alpha2: "CL",
          phoneCountryCode: "+56",
          phoneCountryCodes: ["+56"],
          localeForICU: "es-CL",
          currencyCode: "clp",
        },
        {
          name: "China",
          alpha2: "CN",
          phoneCountryCode: "+86",
          phoneCountryCodes: ["+86"],
        },
        {
          name: "Christmas Island",
          alpha2: "CX",
          phoneCountryCode: "+61",
          phoneCountryCodes: ["+61"],
        },
        {
          name: "Cocos (Keeling) Islands",
          alpha2: "CC",
          phoneCountryCode: "+61",
          phoneCountryCodes: ["+61"],
        },
        {
          name: "Colombia",
          alpha2: "CO",
          phoneCountryCode: "+57",
          phoneCountryCodes: ["+57"],
          localeForICU: "es-CO",
          currencyCode: "cop",
        },
        {
          name: "Comoros",
          alpha2: "KM",
          phoneCountryCode: "+269",
          phoneCountryCodes: ["+269"],
        },
        {
          name: "Congo",
          alpha2: "CG",
          phoneCountryCode: "+242",
          phoneCountryCodes: ["+242"],
        },
        {
          name: "Congo, The Democratic Republic of the",
          alpha2: "CD",
          phoneCountryCode: "+243",
          phoneCountryCodes: ["+243"],
        },
        {
          name: "Cook Islands",
          alpha2: "CK",
          phoneCountryCode: "+682",
          phoneCountryCodes: ["+682"],
        },
        {
          name: "Costa Rica",
          alpha2: "CR",
          phoneCountryCode: "+506",
          phoneCountryCodes: ["+506"],
        },
        {
          name: "Cote d'Ivoire",
          alpha2: "CI",
          phoneCountryCode: "+225",
          phoneCountryCodes: ["+225"],
        },
        {
          name: "Croatia",
          alpha2: "HR",
          phoneCountryCode: "+385",
          phoneCountryCodes: ["+385"],
        },
        {
          name: "Cuba",
          alpha2: "CU",
          phoneCountryCode: "+53",
          phoneCountryCodes: ["+53"],
        },
        {
          name: "Curacao",
          alpha2: "CW",
          phoneCountryCode: "+599",
          phoneCountryCodes: ["+599"],
        },
        {
          name: "Cyprus",
          alpha2: "CY",
          phoneCountryCode: "+357",
          phoneCountryCodes: ["+357"],
        },
        {
          name: "Czech Republic",
          alpha2: "CZ",
          phoneCountryCode: "+420",
          phoneCountryCodes: ["+420"],
        },
        {
          name: "Denmark",
          alpha2: "DK",
          phoneCountryCode: "+45",
          phoneCountryCodes: ["+45"],
        },
        {
          name: "Diego Garcia",
          alpha2: "DG",
          phoneCountryCode: "+246",
          phoneCountryCodes: ["+246"],
        },
        {
          name: "Djibouti",
          alpha2: "DJ",
          phoneCountryCode: "+253",
          phoneCountryCodes: ["+253"],
        },
        {
          name: "Dominica",
          alpha2: "DM",
          phoneCountryCode: "+1 767",
          phoneCountryCodes: ["+1 767"],
        },
        {
          name: "Dominican Republic",
          alpha2: "DO",
          phoneCountryCode: "+1 809",
          phoneCountryCodes: ["+1 809", "+1 829", "+1 849"],
        },
        {
          name: "East Timor",
          alpha2: "TP",
          phoneCountryCode: "+670",
          phoneCountryCodes: ["+670"],
        },
        {
          name: "Ecuador",
          alpha2: "EC",
          phoneCountryCode: "+593",
          phoneCountryCodes: ["+593"],
        },
        {
          name: "Egypt",
          alpha2: "EG",
          phoneCountryCode: "+20",
          phoneCountryCodes: ["+20"],
        },
        {
          name: "El Salvador",
          alpha2: "SV",
          phoneCountryCode: "+503",
          phoneCountryCodes: ["+503"],
        },
        {
          name: "Equatorial Guinea",
          alpha2: "GQ",
          phoneCountryCode: "+240",
          phoneCountryCodes: ["+240"],
        },
        {
          name: "Eritrea",
          alpha2: "ER",
          phoneCountryCode: "+291",
          phoneCountryCodes: ["+291"],
        },
        {
          name: "Estonia",
          alpha2: "EE",
          phoneCountryCode: "+372",
          phoneCountryCodes: ["+372"],
        },
        {
          name: "Ethiopia",
          alpha2: "ET",
          phoneCountryCode: "+251",
          phoneCountryCodes: ["+251"],
        },
        {
          name: "Falkland Islands (Malvinas)",
          alpha2: "FK",
          phoneCountryCode: "+500",
          phoneCountryCodes: ["+500"],
        },
        {
          name: "Faroe Islands",
          alpha2: "FO",
          phoneCountryCode: "+298",
          phoneCountryCodes: ["+298"],
        },
        {
          name: "Fiji",
          alpha2: "FJ",
          phoneCountryCode: "+679",
          phoneCountryCodes: ["+679"],
        },
        {
          name: "Finland",
          alpha2: "FI",
          phoneCountryCode: "+358",
          phoneCountryCodes: ["+358"],
        },
        {
          name: "France",
          alpha2: "FR",
          phoneCountryCode: "+33",
          phoneCountryCodes: ["+33"],
        },
        {
          name: "French Guiana",
          alpha2: "GF",
          phoneCountryCode: "+594",
          phoneCountryCodes: ["+594"],
        },
        {
          name: "French Polynesia",
          alpha2: "PF",
          phoneCountryCode: "+689",
          phoneCountryCodes: ["+689"],
        },
        {
          name: "French Southern Territories",
          alpha2: "TF",
          phoneCountryCode: "+262",
          phoneCountryCodes: ["+262"],
        },
        {
          name: "Gabon",
          alpha2: "GA",
          phoneCountryCode: "+241",
          phoneCountryCodes: ["+241"],
        },
        {
          name: "Gambia",
          alpha2: "GM",
          phoneCountryCode: "+220",
          phoneCountryCodes: ["+220"],
        },
        {
          name: "Georgia",
          alpha2: "GE",
          phoneCountryCode: "+995",
          phoneCountryCodes: ["+995"],
        },
        {
          name: "Germany",
          alpha2: "DE",
          phoneCountryCode: "+49",
          phoneCountryCodes: ["+49"],
        },
        {
          name: "Ghana",
          alpha2: "GH",
          phoneCountryCode: "+233",
          phoneCountryCodes: ["+233"],
        },
        {
          name: "Gibraltar",
          alpha2: "GI",
          phoneCountryCode: "+350",
          phoneCountryCodes: ["+350"],
        },
        {
          name: "Greece",
          alpha2: "GR",
          phoneCountryCode: "+30",
          phoneCountryCodes: ["+30"],
        },
        {
          name: "Greenland",
          alpha2: "GL",
          phoneCountryCode: "+299",
          phoneCountryCodes: ["+299"],
        },
        {
          name: "Grenada",
          alpha2: "GD",
          phoneCountryCode: "+1 473",
          phoneCountryCodes: ["+1 473"],
        },
        {
          name: "Guadeloupe",
          alpha2: "GP",
          phoneCountryCode: "+590",
          phoneCountryCodes: ["+590"],
        },
        {
          name: "Guam",
          alpha2: "GU",
          phoneCountryCode: "+1 671",
          phoneCountryCodes: ["+1 671"],
        },
        {
          name: "Guatemala",
          alpha2: "GT",
          phoneCountryCode: "+502",
          phoneCountryCodes: ["+502"],
        },
        {
          name: "Guernsey",
          alpha2: "GG",
          phoneCountryCode: "+44",
          phoneCountryCodes: ["+44"],
        },
        {
          name: "Guinea",
          alpha2: "GN",
          phoneCountryCode: "+224",
          phoneCountryCodes: ["+224"],
        },
        {
          name: "Guinea-Bissau",
          alpha2: "GW",
          phoneCountryCode: "+245",
          phoneCountryCodes: ["+245"],
        },
        {
          name: "Guyana",
          alpha2: "GY",
          phoneCountryCode: "+592",
          phoneCountryCodes: ["+592"],
        },
        {
          name: "Haiti",
          alpha2: "HT",
          phoneCountryCode: "+509",
          phoneCountryCodes: ["+509"],
        },
        {
          name: "Heard Island and McDonald Islands",
          alpha2: "HM",
          phoneCountryCode: "+672",
          phoneCountryCodes: ["+672"],
        },
        {
          name: "Holy See (Vatican City State)",
          alpha2: "VA",
          phoneCountryCode: "+39",
          phoneCountryCodes: ["+39"],
        },
        {
          name: "Honduras",
          alpha2: "HN",
          phoneCountryCode: "+504",
          phoneCountryCodes: ["+504"],
        },
        {
          name: "Hong Kong",
          alpha2: "HK",
          phoneCountryCode: "+852",
          phoneCountryCodes: ["+852"],
        },
        {
          name: "Hungary",
          alpha2: "HU",
          phoneCountryCode: "+36",
          phoneCountryCodes: ["+36"],
        },
        {
          name: "Iceland",
          alpha2: "IS",
          phoneCountryCode: "+354",
          phoneCountryCodes: ["+354"],
        },
        {
          name: "India",
          alpha2: "IN",
          phoneCountryCode: "+91",
          phoneCountryCodes: ["+91"],
        },
        {
          name: "Indonesia",
          alpha2: "ID",
          phoneCountryCode: "+62",
          phoneCountryCodes: ["+62"],
          localeForICU: "id",
          currencyCode: "idr",
        },
        {
          name: "Iran, Islamic Republic of",
          alpha2: "IR",
          phoneCountryCode: "+98",
          phoneCountryCodes: ["+98"],
        },
        {
          name: "Iraq",
          alpha2: "IQ",
          phoneCountryCode: "+964",
          phoneCountryCodes: ["+964"],
        },
        {
          name: "Ireland",
          alpha2: "IE",
          phoneCountryCode: "+353",
          phoneCountryCodes: ["+353"],
        },
        {
          name: "Isle of Man",
          alpha2: "IM",
          phoneCountryCode: "+44",
          phoneCountryCodes: ["+44"],
        },
        {
          name: "Israel",
          alpha2: "IL",
          phoneCountryCode: "+972",
          phoneCountryCodes: ["+972"],
        },
        {
          name: "Italy",
          alpha2: "IT",
          phoneCountryCode: "+39",
          phoneCountryCodes: ["+39"],
        },
        {
          name: "Jamaica",
          alpha2: "JM",
          phoneCountryCode: "+1 876",
          phoneCountryCodes: ["+1 876"],
        },
        {
          name: "Japan",
          alpha2: "JP",
          phoneCountryCode: "+81",
          phoneCountryCodes: ["+81"],
          localeForICU: "jp",
          currencyCode: "jpy",
        },
        {
          name: "Jersey",
          alpha2: "JE",
          phoneCountryCode: "+44",
          phoneCountryCodes: ["+44"],
        },
        {
          name: "Jordan",
          alpha2: "JO",
          phoneCountryCode: "+962",
          phoneCountryCodes: ["+962"],
        },
        {
          name: "Kazakhstan",
          alpha2: "KZ",
          phoneCountryCode: "+7",
          phoneCountryCodes: ["+7"],
        },
        {
          name: "Kenya",
          alpha2: "KE",
          phoneCountryCode: "+254",
          phoneCountryCodes: ["+254"],
        },
        {
          name: "Kiribati",
          alpha2: "KI",
          phoneCountryCode: "+686",
          phoneCountryCodes: ["+686"],
        },
        {
          name: "Kosovo",
          alpha2: "XK",
          phoneCountryCode: "+383",
          phoneCountryCodes: ["+383"],
        },
        {
          name: "Korea, Democratic People's Republic of",
          alpha2: "KP",
          phoneCountryCode: "+850",
          phoneCountryCodes: ["+850"],
        },
        {
          name: "Korea, Republic of",
          alpha2: "KR",
          phoneCountryCode: "+82",
          phoneCountryCodes: ["+82"],
        },
        {
          name: "Kuwait",
          alpha2: "KW",
          phoneCountryCode: "+965",
          phoneCountryCodes: ["+965"],
        },
        {
          name: "Kyrgyzstan",
          alpha2: "KG",
          phoneCountryCode: "+996",
          phoneCountryCodes: ["+996"],
        },
        {
          name: "Lao People's Democratic Republic",
          alpha2: "LA",
          phoneCountryCode: "+856",
          phoneCountryCodes: ["+856"],
        },
        {
          name: "Latvia",
          alpha2: "LV",
          phoneCountryCode: "+371",
          phoneCountryCodes: ["+371"],
        },
        {
          name: "Lebanon",
          alpha2: "LB",
          phoneCountryCode: "+961",
          phoneCountryCodes: ["+961"],
        },
        {
          name: "Lesotho",
          alpha2: "LS",
          phoneCountryCode: "+266",
          phoneCountryCodes: ["+266"],
        },
        {
          name: "Liberia",
          alpha2: "LR",
          phoneCountryCode: "+231",
          phoneCountryCodes: ["+231"],
        },
        {
          name: "Libya",
          alpha2: "LY",
          phoneCountryCode: "+218",
          phoneCountryCodes: ["+218"],
        },
        {
          name: "Liechtenstein",
          alpha2: "LI",
          phoneCountryCode: "+423",
          phoneCountryCodes: ["+423"],
        },
        {
          name: "Lithuania",
          alpha2: "LT",
          phoneCountryCode: "+370",
          phoneCountryCodes: ["+370"],
        },
        {
          name: "Luxembourg",
          alpha2: "LU",
          phoneCountryCode: "+352",
          phoneCountryCodes: ["+352"],
        },
        {
          name: "Macao",
          alpha2: "MO",
          phoneCountryCode: "+853",
          phoneCountryCodes: ["+853"],
        },
        {
          name: "Macedonia, Republic of",
          alpha2: "MK",
          phoneCountryCode: "+389",
          phoneCountryCodes: ["+389"],
        },
        {
          name: "Madagascar",
          alpha2: "MG",
          phoneCountryCode: "+261",
          phoneCountryCodes: ["+261"],
        },
        {
          name: "Malawi",
          alpha2: "MW",
          phoneCountryCode: "+265",
          phoneCountryCodes: ["+265"],
        },
        {
          name: "Malaysia",
          alpha2: "MY",
          phoneCountryCode: "+60",
          phoneCountryCodes: ["+60"],
          localeForICU: "ms",
          currencyCode: "myr",
        },
        {
          name: "Maldives",
          alpha2: "MV",
          phoneCountryCode: "+960",
          phoneCountryCodes: ["+960"],
        },
        {
          name: "Mali",
          alpha2: "ML",
          phoneCountryCode: "+223",
          phoneCountryCodes: ["+223"],
        },
        {
          name: "Malta",
          alpha2: "MT",
          phoneCountryCode: "+356",
          phoneCountryCodes: ["+356"],
        },
        {
          name: "Marshall Islands",
          alpha2: "MH",
          phoneCountryCode: "+692",
          phoneCountryCodes: ["+692"],
        },
        {
          name: "Martinique",
          alpha2: "MQ",
          phoneCountryCode: "+596",
          phoneCountryCodes: ["+596"],
        },
        {
          name: "Mauritania",
          alpha2: "MR",
          phoneCountryCode: "+222",
          phoneCountryCodes: ["+222"],
        },
        {
          name: "Mauritius",
          alpha2: "MU",
          phoneCountryCode: "+230",
          phoneCountryCodes: ["+230"],
        },
        {
          name: "Mayotte",
          alpha2: "YT",
          phoneCountryCode: "+262",
          phoneCountryCodes: ["+262"],
        },
        {
          name: "Mexico",
          alpha2: "MX",
          phoneCountryCode: "+52",
          phoneCountryCodes: ["+52"],
        },
        {
          name: "Micronesia, Federated States of",
          alpha2: "FM",
          phoneCountryCode: "+691",
          phoneCountryCodes: ["+691"],
        },
        {
          name: "Midway Island",
          alpha2: "MI",
          phoneCountryCode: "+1 808",
          phoneCountryCodes: ["+1 808"],
        },
        {
          name: "Moldova, Republic of",
          alpha2: "MD",
          phoneCountryCode: "+373",
          phoneCountryCodes: ["+373"],
        },
        {
          name: "Monaco",
          alpha2: "MC",
          phoneCountryCode: "+377",
          phoneCountryCodes: ["+377"],
        },
        {
          name: "Mongolia",
          alpha2: "MN",
          phoneCountryCode: "+976",
          phoneCountryCodes: ["+976"],
        },
        {
          name: "Montenegro",
          alpha2: "ME",
          phoneCountryCode: "+382",
          phoneCountryCodes: ["+382"],
        },
        {
          name: "Montserrat",
          alpha2: "MS",
          phoneCountryCode: "+1664",
          phoneCountryCodes: ["+1664"],
        },
        {
          name: "Morocco",
          alpha2: "MA",
          phoneCountryCode: "+212",
          phoneCountryCodes: ["+212"],
        },
        {
          name: "Mozambique",
          alpha2: "MZ",
          phoneCountryCode: "+258",
          phoneCountryCodes: ["+258"],
        },
        {
          name: "Myanmar",
          alpha2: "MM",
          phoneCountryCode: "+95",
          phoneCountryCodes: ["+95"],
        },
        {
          name: "Namibia",
          alpha2: "NA",
          phoneCountryCode: "+264",
          phoneCountryCodes: ["+264"],
        },
        {
          name: "Nauru",
          alpha2: "NR",
          phoneCountryCode: "+674",
          phoneCountryCodes: ["+674"],
        },
        {
          name: "Nepal",
          alpha2: "NP",
          phoneCountryCode: "+977",
          phoneCountryCodes: ["+977"],
        },
        {
          name: "Netherlands",
          alpha2: "NL",
          phoneCountryCode: "+31",
          phoneCountryCodes: ["+31"],
        },
        {
          name: "Netherlands Antilles",
          alpha2: "AN",
          phoneCountryCode: "+599",
          phoneCountryCodes: ["+599"],
        },
        {
          name: "New Caledonia",
          alpha2: "NC",
          phoneCountryCode: "+687",
          phoneCountryCodes: ["+687"],
        },
        {
          name: "New Zealand",
          alpha2: "NZ",
          phoneCountryCode: "+64",
          phoneCountryCodes: ["+64"],
        },
        {
          name: "Nicaragua",
          alpha2: "NI",
          phoneCountryCode: "+505",
          phoneCountryCodes: ["+505"],
        },
        {
          name: "Niger",
          alpha2: "NE",
          phoneCountryCode: "+227",
          phoneCountryCodes: ["+227"],
        },
        {
          name: "Nigeria",
          alpha2: "NG",
          phoneCountryCode: "+234",
          phoneCountryCodes: ["+234"],
        },
        {
          name: "Niue",
          alpha2: "NU",
          phoneCountryCode: "+683",
          phoneCountryCodes: ["+683"],
        },
        {
          name: "Norfolk Island",
          alpha2: "NF",
          phoneCountryCode: "+672",
          phoneCountryCodes: ["+672"],
        },
        {
          name: "Northern Mariana Islands",
          alpha2: "MP",
          phoneCountryCode: "+1 670",
          phoneCountryCodes: ["+1 670"],
        },
        {
          name: "Norway",
          alpha2: "NO",
          phoneCountryCode: "+47",
          phoneCountryCodes: ["+47"],
        },
        {
          name: "Oman",
          alpha2: "OM",
          phoneCountryCode: "+968",
          phoneCountryCodes: ["+968"],
        },
        {
          name: "Pakistan",
          alpha2: "PK",
          phoneCountryCode: "+92",
          phoneCountryCodes: ["+92"],
        },
        {
          name: "Palau",
          alpha2: "PW",
          phoneCountryCode: "+680",
          phoneCountryCodes: ["+680"],
        },
        {
          name: "Palestine, State of",
          alpha2: "PS",
          phoneCountryCode: "+970",
          phoneCountryCodes: ["+970"],
        },
        {
          name: "Panama",
          alpha2: "PA",
          phoneCountryCode: "+507",
          phoneCountryCodes: ["+507"],
        },
        {
          name: "Papua New Guinea",
          alpha2: "PG",
          phoneCountryCode: "+675",
          phoneCountryCodes: ["+675"],
        },
        {
          name: "Paraguay",
          alpha2: "PY",
          phoneCountryCode: "+595",
          phoneCountryCodes: ["+595"],
        },
        {
          name: "Peru",
          alpha2: "PE",
          phoneCountryCode: "+51",
          phoneCountryCodes: ["+51"],
          localeForICU: "es-PE",
          currencyCode: "pen",
        },
        {
          name: "Philippines",
          alpha2: "PH",
          phoneCountryCode: "+63",
          phoneCountryCodes: ["+63"],
          localeForICU: "en-PH",
          currencyCode: "php",
        },
        {
          name: "Pitcairn",
          alpha2: "PN",
          phoneCountryCode: "+64",
          phoneCountryCodes: ["+64"],
        },
        {
          name: "Poland",
          alpha2: "PL",
          phoneCountryCode: "+48",
          phoneCountryCodes: ["+48"],
        },
        {
          name: "Portugal",
          alpha2: "PT",
          phoneCountryCode: "+351",
          phoneCountryCodes: ["+351"],
        },
        {
          name: "Puerto Rico",
          alpha2: "PR",
          phoneCountryCode: "+1 787",
          phoneCountryCodes: ["+1 787"],
        },
        {
          name: "Qatar",
          alpha2: "QA",
          phoneCountryCode: "+974",
          phoneCountryCodes: ["+974"],
        },
        {
          name: "Reunion",
          alpha2: "RE",
          phoneCountryCode: "+262",
          phoneCountryCodes: ["+262"],
        },
        {
          name: "Romania",
          alpha2: "RO",
          phoneCountryCode: "+40",
          phoneCountryCodes: ["+40"],
        },
        {
          name: "Russian Federation",
          alpha2: "RU",
          phoneCountryCode: "+7",
          phoneCountryCodes: ["+7"],
        },
        {
          name: "Rwanda",
          alpha2: "RW",
          phoneCountryCode: "+250",
          phoneCountryCodes: ["+250"],
        },
        {
          name: "Saint Barth\xe9lemy",
          alpha2: "BL",
          phoneCountryCode: "+590",
          phoneCountryCodes: ["+590"],
        },
        {
          name: "Saint Helena, Ascension and Tristan da Cunha",
          alpha2: "SH",
          phoneCountryCode: "+290",
          phoneCountryCodes: ["+290"],
        },
        {
          name: "Saint Kitts and Nevis",
          alpha2: "KN",
          phoneCountryCode: "+1 869",
          phoneCountryCodes: ["+1 869"],
        },
        {
          name: "Saint Lucia",
          alpha2: "LC",
          phoneCountryCode: "+1 758",
          phoneCountryCodes: ["+1 758"],
        },
        {
          name: "Saint Martin (French part)",
          alpha2: "MF",
          phoneCountryCode: "+590",
          phoneCountryCodes: ["+590"],
        },
        {
          name: "Saint Pierre and Miquelon",
          alpha2: "PM",
          phoneCountryCode: "+508",
          phoneCountryCodes: ["+508"],
        },
        {
          name: "Saint Vincent and the Grenadines",
          alpha2: "VC",
          phoneCountryCode: "+1 784",
          phoneCountryCodes: ["+1 784"],
        },
        {
          name: "Samoa",
          alpha2: "WS",
          phoneCountryCode: "+685",
          phoneCountryCodes: ["+685"],
        },
        {
          name: "San Marino",
          alpha2: "SM",
          phoneCountryCode: "+378",
          phoneCountryCodes: ["+378"],
        },
        {
          name: "Sao Tome and Principe",
          alpha2: "ST",
          phoneCountryCode: "+239",
          phoneCountryCodes: ["+239"],
        },
        {
          name: "Saudi Arabia",
          alpha2: "SA",
          phoneCountryCode: "+966",
          phoneCountryCodes: ["+966"],
        },
        {
          name: "Senegal",
          alpha2: "SN",
          phoneCountryCode: "+221",
          phoneCountryCodes: ["+221"],
        },
        {
          name: "Serbia",
          alpha2: "RS",
          phoneCountryCode: "+381",
          phoneCountryCodes: ["+381"],
        },
        {
          name: "Seychelles",
          alpha2: "SC",
          phoneCountryCode: "+248",
          phoneCountryCodes: ["+248"],
        },
        {
          name: "Sierra Leone",
          alpha2: "SL",
          phoneCountryCode: "+232",
          phoneCountryCodes: ["+232"],
        },
        {
          name: "Singapore",
          alpha2: "SG",
          phoneCountryCode: "+65",
          phoneCountryCodes: ["+65"],
        },
        {
          name: "Sint Maarten (Dutch part)",
          alpha2: "SX",
          phoneCountryCode: "+1 721",
          phoneCountryCodes: ["+1 721"],
        },
        {
          name: "Slovakia",
          alpha2: "SK",
          phoneCountryCode: "+421",
          phoneCountryCodes: ["+421"],
        },
        {
          name: "Slovenia",
          alpha2: "SI",
          phoneCountryCode: "+386",
          phoneCountryCodes: ["+386"],
        },
        {
          name: "Solomon Islands",
          alpha2: "SB",
          phoneCountryCode: "+677",
          phoneCountryCodes: ["+677"],
        },
        {
          name: "Somalia",
          alpha2: "SO",
          phoneCountryCode: "+252",
          phoneCountryCodes: ["+252"],
        },
        {
          name: "South Africa",
          alpha2: "ZA",
          phoneCountryCode: "+27",
          phoneCountryCodes: ["+27"],
        },
        {
          name: "South Georgia and the South Sandwich Islands",
          alpha2: "GS",
          phoneCountryCode: "+500",
          phoneCountryCodes: ["+500"],
        },
        {
          name: "South Sudan",
          alpha2: "SS",
          phoneCountryCode: "+211",
          phoneCountryCodes: ["+211"],
        },
        {
          name: "Spain",
          alpha2: "ES",
          phoneCountryCode: "+34",
          phoneCountryCodes: ["+34"],
        },
        {
          name: "Sri Lanka",
          alpha2: "LK",
          phoneCountryCode: "+94",
          phoneCountryCodes: ["+94"],
        },
        {
          name: "Sudan",
          alpha2: "SD",
          phoneCountryCode: "+249",
          phoneCountryCodes: ["+249"],
        },
        {
          name: "Suriname",
          alpha2: "SR",
          phoneCountryCode: "+597",
          phoneCountryCodes: ["+597"],
        },
        {
          name: "Svalbard and Jan Mayen",
          alpha2: "SJ",
          phoneCountryCode: "+47",
          phoneCountryCodes: ["+47"],
        },
        {
          name: "Swaziland",
          alpha2: "SZ",
          phoneCountryCode: "+268",
          phoneCountryCodes: ["+268"],
        },
        {
          name: "Sweden",
          alpha2: "SE",
          phoneCountryCode: "+46",
          phoneCountryCodes: ["+46"],
        },
        {
          name: "Switzerland",
          alpha2: "CH",
          phoneCountryCode: "+41",
          phoneCountryCodes: ["+41"],
        },
        {
          name: "Syrian Arab Republic",
          alpha2: "SY",
          phoneCountryCode: "+963",
          phoneCountryCodes: ["+963"],
        },
        {
          name: "Taiwan",
          alpha2: "TW",
          phoneCountryCode: "+886",
          phoneCountryCodes: ["+886"],
        },
        {
          name: "Tajikistan",
          alpha2: "TJ",
          phoneCountryCode: "+992",
          phoneCountryCodes: ["+992"],
        },
        {
          name: "Tanzania, United Republic of",
          alpha2: "TZ",
          phoneCountryCode: "+255",
          phoneCountryCodes: ["+255"],
        },
        {
          name: "Thailand",
          alpha2: "TH",
          phoneCountryCode: "+66",
          phoneCountryCodes: ["+66"],
          localeForICU: "th",
          currencyCode: "thb",
        },
        {
          name: "Timor-Leste",
          alpha2: "TL",
          phoneCountryCode: "+670",
          phoneCountryCodes: ["+670"],
        },
        {
          name: "Togo",
          alpha2: "TG",
          phoneCountryCode: "+228",
          phoneCountryCodes: ["+228"],
        },
        {
          name: "Tokelau",
          alpha2: "TK",
          phoneCountryCode: "+690",
          phoneCountryCodes: ["+690"],
        },
        {
          name: "Tonga",
          alpha2: "TO",
          phoneCountryCode: "+676",
          phoneCountryCodes: ["+676"],
        },
        {
          name: "Trinidad and Tobago",
          alpha2: "TT",
          phoneCountryCode: "+1 868",
          phoneCountryCodes: ["+1 868"],
        },
        {
          name: "Tunisia",
          alpha2: "TN",
          phoneCountryCode: "+216",
          phoneCountryCodes: ["+216"],
        },
        {
          name: "Turkey",
          alpha2: "TR",
          phoneCountryCode: "+90",
          phoneCountryCodes: ["+90"],
        },
        {
          name: "Turkmenistan",
          alpha2: "TM",
          phoneCountryCode: "+993",
          phoneCountryCodes: ["+993"],
        },
        {
          name: "Turks and Caicos Islands",
          alpha2: "TC",
          phoneCountryCode: "+1 649",
          phoneCountryCodes: ["+1 649"],
        },
        {
          name: "Tuvalu",
          alpha2: "TV",
          phoneCountryCode: "+688",
          phoneCountryCodes: ["+688"],
        },
        {
          name: "Uganda",
          alpha2: "UG",
          phoneCountryCode: "+256",
          phoneCountryCodes: ["+256"],
        },
        {
          name: "Ukraine",
          alpha2: "UA",
          phoneCountryCode: "+380",
          phoneCountryCodes: ["+380"],
        },
        {
          name: "United Arab Emirates",
          alpha2: "AE",
          phoneCountryCode: "+971",
          phoneCountryCodes: ["+971"],
        },
        {
          name: "United Kingdom",
          alpha2: "GB",
          phoneCountryCode: "+44",
          phoneCountryCodes: ["+44"],
        },
        {
          name: "United States",
          alpha2: "US",
          phoneCountryCode: "+1",
          phoneCountryCodes: ["+1"],
        },
        {
          name: "United States Minor Outlying Islands",
          alpha2: "UM",
          phoneCountryCode: "+1",
          phoneCountryCodes: ["+1"],
        },
        {
          name: "Uruguay",
          alpha2: "UY",
          phoneCountryCode: "+598",
          phoneCountryCodes: ["+598"],
        },
        {
          name: "Uzbekistan",
          alpha2: "UZ",
          phoneCountryCode: "+998",
          phoneCountryCodes: ["+998"],
        },
        {
          name: "Vanuatu",
          alpha2: "VU",
          phoneCountryCode: "+678",
          phoneCountryCodes: ["+678"],
        },
        {
          name: "Venezuela, Bolivarian Republic of",
          alpha2: "VE",
          phoneCountryCode: "+58",
          phoneCountryCodes: ["+58"],
        },
        {
          name: "Vietnam",
          alpha2: "VN",
          phoneCountryCode: "+84",
          phoneCountryCodes: ["+84"],
          localeForICU: "vi",
          currencyCode: "vnd",
        },
        {
          name: "Virgin Islands, British",
          alpha2: "VG",
          phoneCountryCode: "+1 284",
          phoneCountryCodes: ["+1 284"],
        },
        {
          name: "Virgin Islands, U.S.",
          alpha2: "VI",
          phoneCountryCode: "+1 340",
          phoneCountryCodes: ["+1 340"],
        },
        {
          name: "Wallis and Futuna",
          alpha2: "WF",
          phoneCountryCode: "+681",
          phoneCountryCodes: ["+681"],
        },
        {
          name: "Western Sahara",
          alpha2: "EH",
          phoneCountryCode: "+212",
          phoneCountryCodes: ["+212"],
        },
        {
          name: "Yemen",
          alpha2: "YE",
          phoneCountryCode: "+967",
          phoneCountryCodes: ["+967"],
        },
        {
          name: "Zambia",
          alpha2: "ZM",
          phoneCountryCode: "+260",
          phoneCountryCodes: ["+260"],
        },
        {
          name: "Zimbabwe",
          alpha2: "ZW",
          phoneCountryCode: "+263",
          phoneCountryCodes: ["+263"],
        },
      ];
    },
    736168: function (e, t, n) {
      "use strict";
      var s, i;
      n.r(t),
        n.d(t, {
          ApplicationIntegrationType: function () {
            return s;
          },
        }),
        ((i = s || (s = {}))[(i.GUILD_INSTALL = 0)] = "GUILD_INSTALL"),
        (i[(i.USER_INSTALL = 1)] = "USER_INSTALL");
    },
    536751: function (e, t, n) {
      "use strict";
      var s, i;
      n.r(t),
        n.d(t, {
          AudioSettingsDefaultVolumes: function () {
            return s;
          },
        }),
        ((i = s || (s = {}))[(i.USER = 100)] = "USER"),
        (i[(i.STREAM = 18)] = "STREAM");
    },
    328779: function (e, t, n) {
      "use strict";
      var s;
      n.r(t),
        n.d(t, {
          ConsoleCommands: function () {
            return s;
          },
        }),
        ((s || (s = {})).CONNECT_VOICE = "connect_voice");
    },
    7768: function (e, t, n) {
      "use strict";
      var s, i;
      n.r(t),
        n.d(t, {
          ConsoleHandoffType: function () {
            return s;
          },
        }),
        ((i = s || (s = {})).TRANSFER_EXISTING_CALL = "TRANSFER_EXISTING_CALL"),
        (i.CREATE_NEW_CALL = "CREATE_NEW_CALL");
    },
    120739: function (e, t, n) {
      "use strict";
      var s, i;
      n.r(t),
        n.d(t, {
          MetricEvents: function () {
            return s;
          },
        }),
        ((i = s || (s = {})).APP_CRASHED = "app_crashed"),
        (i.SOCKET_CRASHED = "socket_crashed"),
        (i.MESSAGE_REQUEST_VIEW = "message_request_view"),
        (i.SPAM_MESSAGE_REQUEST_VIEW = "spam_message_request_view"),
        (i.SPAM_MESSAGE_REQUEST_ERROR_VIEW = "spam_message_request_error_view"),
        (i.FAMILY_CENTER_VIEW = "family_center_view"),
        (i.SAFETY_HUB_VIEW = "safety_hub_view"),
        (i.APPEAL_INGESTION_VIEW = "appeal_ingestion_view"),
        (i.MESSAGE_REQUEST_COUNT_DRIFT = "message_request_count_drift"),
        (i.FORUM_CHANNEL_GRID_AUTO_ENABLED = "forum_channel_grid_auto_enabled"),
        (i.REMIX_FONT_LOADING_ERROR = "remix_font_loading_error"),
        (i.AFK_NOT_IDLE = "afk_not_idle"),
        (i.CAPTCHA_EVENT = "captcha_event"),
        (i.SAFETY_WARNING_VIEW = "safety_warning_view"),
        (i.SAFETY_WARNING_MODAL_VIEW = "safety_warning_modal_view"),
        (i.EXPLICIT_MEDIA_SCAN_CLIENT_TIMED_OUT =
          "explicit_media_scan_client_timed_out"),
        (i.EXPLICIT_MEDIA_SCAN_CLIENT_TIMING =
          "explicit_media_scan_client_timing"),
        (i.EXPLICIT_MEDIA_SENDER_FP_BUTTON_VIEW =
          "explicit_media_sender_fp_button_view"),
        (i.OTA_CHECK_ATTEMPT = "OtaCheckAttempt"),
        (i.OTA_ASSET_DOWNLOAD_ATTEMPT = "OtaAssetDownloadAttempt"),
        (i.OTA_UPDATE_CHECK = "ota_update_check"),
        (i.OTA_ASSET_DOWNLOAD = "ota_asset_download"),
        (i.DEBUG_OTA_200_TIMEOUT = "debug_ota_200_timeout");
    },
    275676: function (e, t, n) {
      "use strict";
      var s, i;
      n.r(t),
        n.d(t, {
          ReleaseChannelsSets: function () {
            return r;
          },
        }),
        ((i = s || (s = {})).STABLE = "stable"),
        (i.BETA = "beta"),
        (i.ALPHA = "alpha"),
        (i.PTB = "ptb"),
        (i.CANARY = "canary"),
        (i.STAGING = "staging"),
        (i.DEVELOPMENT = "development");
      let r = {
        ALL: new Set([
          "alpha",
          "beta",
          "canary",
          "development",
          "ptb",
          "stable",
          "staging",
        ]),
      };
    },
    566899: function (e, t, n) {
      "use strict";
      n.r(t), n("990835");
    },
  },
]);
//# sourceMappingURL=26934.756e165f1e3a9059227b.js.map
