(this.webpackChunkdiscord_app = this.webpackChunkdiscord_app || []).push([
  ["33270"],
  {
    318548: function (e, t, n) {
      "use strict";
      e.exports = n.p + "3b7d1f84725ab9a0d71c.svg";
    },
    630159: function (e, t, n) {
      "use strict";
      e.exports = n.p + "d2664a9b4f46d06c7ca4.svg";
    },
    608128: function (e, t, n) {
      "use strict";
      e.exports = n.p + "4c091df98c5a5cbfd323.svg";
    },
    914143: function (e, t, n) {
      "use strict";
      e.exports = n.p + "b3dd9b1e282fff30af5b.svg";
    },
    933150: function (e, t, n) {
      "use strict";
      e.exports = n.p + "c91026f0b84bc1380e52.svg";
    },
    829361: function (e, t, n) {
      "use strict";
      e.exports = n.p + "532f1d4582d881960783.svg";
    },
    289309: function (e, t, n) {
      "use strict";
      e.exports = n.p + "ee4637f8627629dd0da5.svg";
    },
    197040: function (e, t, n) {
      "use strict";
      e.exports = n.p + "bca918618b884a382ab5.svg";
    },
    1547: function (e, t, n) {
      "use strict";
      e.exports = n.p + "5741692705ba077f4190.svg";
    },
    819444: function (e, t, n) {
      "use strict";
      e.exports = n.p + "24aa06be5457e66bdd64.svg";
    },
    681224: function (e, t, n) {
      "use strict";
      e.exports = n.p + "0629e34902ae58f8e4ca.svg";
    },
    855143: function (e, t, n) {
      "use strict";
      e.exports = n.p + "01864c39871ce619d855.svg";
    },
    934516: function (e, t, n) {
      "use strict";
      e.exports = n.p + "a72746e7108167af95c8.svg";
    },
    855237: function (e, t, n) {
      "use strict";
      e.exports = n.p + "a0f644c8dab01cdcb21e.svg";
    },
    292379: function (e, t, n) {
      "use strict";
      e.exports = n.p + "bc17dea6307567a5a828.svg";
    },
    649592: function (e, t, n) {
      "use strict";
      e.exports = n.p + "b59cc79bee3b08e25893.svg";
    },
    37476: function (e, t, n) {
      "use strict";
      e.exports = n.p + "7e133d43fb9e0c982693.svg";
    },
    992739: function (e, t, n) {
      "use strict";
      e.exports = n.p + "32fda287bbd217f60166.svg";
    },
    306910: function (e, t, n) {
      "use strict";
      e.exports = n.p + "9401bdbd066bbc6bb35e.svg";
    },
    396609: function (e, t, n) {
      "use strict";
      e.exports = n.p + "ca840e392fe5c8c84693.svg";
    },
    617059: function (e, t, n) {
      "use strict";
      e.exports = n.p + "8ec619e29a44a057e4b5.svg";
    },
    557659: function (e, t, n) {
      "use strict";
      e.exports = n.p + "7e0036fd6cea3d4fa30e.svg";
    },
    121432: function (e, t, n) {
      "use strict";
      e.exports = n.p + "21351b92881882ca8597.svg";
    },
    367574: function (e, t, n) {
      "use strict";
      e.exports = n.p + "148fd8378ac32a66783c.svg";
    },
    398586: function (e, t, n) {
      "use strict";
      e.exports = n.p + "7e724c5bbf29dd3598ea.svg";
    },
    723030: function (e, t, n) {
      "use strict";
      e.exports = n.p + "8f8162ee689b2d85996c.svg";
    },
    754771: function (e, t, n) {
      "use strict";
      e.exports = n.p + "cc543f407b1696f1e82f.svg";
    },
    321221: function (e, t, n) {
      "use strict";
      e.exports = n.p + "9e9722bd5c8ec20fd746.svg";
    },
    744725: function (e, t, n) {
      "use strict";
      e.exports = n.p + "4ee80a24b008ebfdc4a0.svg";
    },
    229483: function (e, t, n) {
      "use strict";
      e.exports = n.p + "e9802d8cbd4efea22c7f.svg";
    },
    505766: function (e, t, n) {
      "use strict";
      e.exports = n.p + "cf0a3491ccd8d75e5468.svg";
    },
    577151: function (e, t, n) {
      "use strict";
      e.exports = n.p + "5a3b92133c4628808365.png";
    },
    66453: function (e, t, n) {
      "use strict";
      e.exports = n.p + "cbd858b47004ef0de565.png";
    },
    476742: function (e, t, n) {
      "use strict";
      e.exports = n.p + "82012659f3d934de21a4.png";
    },
    906897: function (e, t, n) {
      "use strict";
      e.exports = n.p + "896c671f42f403930aa1.svg";
    },
    479999: function (e, t, n) {
      "use strict";
      e.exports = n.p + "f5fcce7c509fcb9e2e7f.svg";
    },
    183127: function (e, t, n) {
      "use strict";
      e.exports = n.p + "fcf4c0943984017de6b7.svg";
    },
    892839: function (e, t, n) {
      "use strict";
      e.exports = n.p + "d53b136d76b927267b3e.svg";
    },
    65016: function (e, t, n) {
      "use strict";
      e.exports = n.p + "acff4170e5aef6d0b8ab.png";
    },
    270111: function (e, t, n) {
      "use strict";
      e.exports = n.p + "8b02d737af060c3da754.svg";
    },
    158463: function (e, t, n) {
      "use strict";
      e.exports = n.p + "9cae5cbf245ad4d26386.svg";
    },
    12469: function (e, t, n) {
      "use strict";
      e.exports = n.p + "32c31659fb057a7437a7.svg";
    },
    936775: function (e, t, n) {
      "use strict";
      e.exports = n.p + "b7204ec85b295bf8c39f.svg";
    },
    288562: function (e, t, n) {
      "use strict";
      e.exports = n.p + "0a46a4a99b961a8a0006.png";
    },
    553274: function (e, t, n) {
      "use strict";
      e.exports = n.p + "a745c1f1e7f49df66b21.svg";
    },
    824489: function (e, t, n) {
      "use strict";
      e.exports = n.p + "5e7aa4b4bc9cc22cf93e.svg";
    },
    152985: function (e, t, n) {
      "use strict";
      e.exports = n.p + "440d8145b3dff23399e7.svg";
    },
    963301: function (e, t, n) {
      "use strict";
      e.exports = n.p + "056efbeaaaa0b3c20b39.svg";
    },
    358616: function (e, t, n) {
      "use strict";
      e.exports = n.p + "223e044de8442138ab49.svg";
    },
    215529: function (e, t, n) {
      "use strict";
      e.exports = n.p + "f54b8f205be130d3839a.svg";
    },
    392963: function (e, t, n) {
      "use strict";
      e.exports = n.p + "19e7daca48265059a2bd.svg";
    },
    871859: function (e, t, n) {
      "use strict";
      e.exports = n.p + "47f29fcff307e852553b.svg";
    },
    371997: function (e, t, n) {
      "use strict";
      e.exports = n.p + "452cd32e3c30e1c83f90.svg";
    },
    240542: function (e, t, n) {
      "use strict";
      e.exports = n.p + "0e1dac3ff58e6cd29e54.gif";
    },
    776432: function (e, t, n) {
      "use strict";
      e.exports = n.p + "27e9eb71cd459e52fe5e.png";
    },
    546643: function (e, t, n) {
      "use strict";
      e.exports = n.p + "35330ac2e488f0dd7d6f.png";
    },
    25629: function (e, t, n) {
      "use strict";
      e.exports = n.p + "e279224b03a3fcfe70b8.png";
    },
    275974: function (e, t, n) {
      "use strict";
      e.exports = n.p + "c88c7ab4d8dbc0e7a4dd.svg";
    },
    939488: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          setHomeLink: function () {
            return s;
          },
        });
      var a = n("913144");
      function s(e) {
        a.default.dispatch({ type: "APP_VIEW_SET_HOME_LINK", link: e });
      }
    },
    17434: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          setCertifiedDevices: function () {
            return s;
          },
        });
      var a = n("913144");
      function s(e, t) {
        a.default.dispatch({
          type: "CERTIFIED_DEVICES_SET",
          applicationId: e,
          devices: t,
        });
      }
    },
    363025: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          hidePremiumGuildGracePeriodNotice: function () {
            return s;
          },
          hideEnablePublicGuildUpsellNotice: function () {
            return l;
          },
          hideMaxMemberCountChannelNotice: function () {
            return i;
          },
        });
      var a = n("913144");
      function s(e) {
        a.default.dispatch({
          type: "BOOSTED_GUILD_GRACE_PERIOD_NOTICE_DISMISS",
          guildId: e,
        });
      }
      function l(e) {
        a.default.dispatch({
          type: "PUBLIC_UPSELL_NOTICE_DISMISS",
          guildId: e,
        });
      }
      function i(e) {
        a.default.dispatch({
          type: "MAX_MEMBER_COUNT_NOTICE_DISMISS",
          guildId: e,
        });
      }
    },
    629803: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          fetchConsents: function () {
            return u;
          },
          setConsents: function () {
            return d;
          },
        }),
        n("70102");
      var a = n("872717"),
        s = n("913144"),
        l = n("49111"),
        i = n("782340");
      function r(e) {
        return (
          null != e &&
            null != e.body &&
            s.default.dispatch({
              type: "UPDATE_CONSENTS",
              consents: { ...e.body },
            }),
          e.body
        );
      }
      function o(e) {
        let t;
        throw Error(
          (t =
            e.status >= 500 && e.status <= 599
              ? i.default.Messages.DATA_PRIVACY_UPDATE_CONSENTS_FAILED
              : null != e && null != e.body && null != e.body.message
                ? e.body.message
                : i.default.Messages.DATA_PRIVACY_UPDATE_CONSENTS_FAILED)
        );
      }
      function u() {
        return a.default
          .get({ url: l.Endpoints.SETTINGS_CONSENT, oldFormErrors: !0 })
          .then(r, e => Promise.reject(Error(e.body.message)));
      }
      function d(e, t) {
        return a.default
          .post({
            url: l.Endpoints.SETTINGS_CONSENT,
            body: { grant: e, revoke: t },
            oldFormErrors: !0,
          })
          .then(r, o);
      }
    },
    711115: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          uninstallBranchPrompt: function () {
            return r;
          },
        });
      var a = n("77078"),
        s = n("299285"),
        l = n("605250"),
        i = n("190017");
      function r(e, t, r) {
        !(function (e, t) {
          let i = s.default.getApplication(e);
          if (null == i) {
            new (0, l.default)("DispatchUninstallActionCreators").log(
              "Application not found for game ".concat(e)
            );
            return;
          }
          (0, a.openModalLazy)(async () => {
            let { default: e } = await n.el("857727").then(n.bind(n, "857727"));
            return n => e({ game: i, onConfirmUninstall: t, ...n });
          });
        })(e, () => (0, i.uninstallApplication)(e, t, r));
      }
    },
    259083: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          sortList: function () {
            return s;
          },
          updateLibraryFilter: function () {
            return l;
          },
          updateActiveRowKey: function () {
            return i;
          },
        });
      var a = n("913144");
      function s(e, t) {
        a.default.dispatch({
          type: "LIBRARY_TABLE_SORT_UPDATE",
          key: e,
          direction: t,
        });
      }
      function l(e) {
        a.default.dispatch({
          type: "LIBRARY_APPLICATION_FILTER_UPDATE",
          query: e,
        });
      }
      function i(e) {
        let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
        a.default.dispatch({
          type: "LIBRARY_TABLE_ACTIVE_ROW_ID_UPDATE",
          key: e,
          isKeyboardEvent: t,
        });
      }
    },
    680762: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          fetchGuildAffinities: function () {
            return i;
          },
        });
      var a = n("872717"),
        s = n("913144"),
        l = n("49111");
      let i = () =>
        a.default
          .get({ url: l.Endpoints.GUILD_AFFINITIES, oldFormErrors: !0 })
          .then(
            e => {
              let {
                body: { guild_affinities: t },
              } = e;
              s.default.dispatch({
                type: "LOAD_GUILD_AFFINITIES_SUCCESS",
                guildAffinities: t,
              });
            },
            () => {
              s.default.dispatch({ type: "LOAD_GUILD_AFFINITIES_FAILURE" });
            }
          );
    },
    228157: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
      var a = n("913144"),
        s = {
          move(e, t) {
            a.default.dispatch({ type: "INCOMING_CALL_MOVE", x: e, y: t });
          },
        };
    },
    641608: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          addInstallLocation: function () {
            return l;
          },
          removeInstallLocation: function () {
            return i;
          },
          updateInstallLocation: function () {
            return r;
          },
          fetchMetadata: function () {
            return o;
          },
        }),
        n("222007");
      var a = n("913144"),
        s = n("152723");
      function l(e) {
        s.default.queryDirectory(e, (t, n) => {
          null == t &&
            null != n &&
            a.default.dispatch({
              type: "INSTALLATION_LOCATION_ADD",
              path: e,
              metadata: n,
            });
        });
      }
      function i(e) {
        a.default.dispatch({ type: "INSTALLATION_LOCATION_REMOVE", path: e });
      }
      function r(e, t) {
        let { label: n, isDefault: s } = t;
        a.default.dispatch({
          type: "INSTALLATION_LOCATION_UPDATE",
          path: e,
          label: n,
          isDefault: s,
        });
      }
      function o(e) {
        let t = {},
          n = 0;
        for (let l of e)
          null != l &&
            "string" == typeof l &&
            s.default.queryDirectory(l, (s, i) => {
              ++n,
                null == s && null != i && (t[l] = i),
                n === e.length &&
                  a.default.dispatch({
                    type: "INSTALLATION_LOCATION_FETCH_METADATA",
                    metadataPayload: t,
                  });
            });
      }
    },
    444949: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          fetchActivityStatistics: function () {
            return u;
          },
        });
      var a = n("872717"),
        s = n("913144"),
        l = n("251013"),
        i = n("718517"),
        r = n("49111");
      let o = 6 * i.default.Millis.HOUR;
      async function u() {
        let e = l.default.lastFetched;
        if (!(null != e && Date.now() - e < o))
          try {
            let e = await a.default.get({
              url: r.Endpoints.USER_ACTIVITY_STATISTICS,
              oldFormErrors: !0,
            });
            s.default.dispatch({
              type: "USER_ACTIVITY_STATISTICS_FETCH_SUCCESS",
              statistics: e.body,
            });
          } catch (e) {
            return e;
          }
      }
    },
    297726: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          connect: function () {
            return i;
          },
          disconnect: function () {
            return r;
          },
          createLobby: function () {
            return o;
          },
          updateLobby: function () {
            return u;
          },
          updateLobbyMember: function () {
            return d;
          },
          deleteLobby: function () {
            return c;
          },
          send: function () {
            return f;
          },
          search: function () {
            return E;
          },
          voiceConnect: function () {
            return h;
          },
          voiceDisconnect: function () {
            return _;
          },
        });
      var a = n("872717"),
        s = n("913144"),
        l = n("49111");
      function i(e, t, n) {
        return new Promise((a, l) => {
          s.default.dispatch({
            type: "LOBBY_CONNECT",
            socketId: e,
            lobbyId: t,
            lobbySecret: n,
            resolve: a,
            reject: l,
          });
        });
      }
      function r(e) {
        s.default.dispatch({ type: "LOBBY_DISCONNECT", lobbyId: e });
      }
      function o(e, t, n) {
        return a.default
          .post({
            url: l.Endpoints.LOBBIES,
            body: { application_id: t, ...n },
            retries: 1,
            oldFormErrors: !0,
          })
          .then(t => {
            let { body: n } = t;
            return i(e, n.id, n.secret);
          });
      }
      function u(e, t) {
        return a.default
          .patch({
            url: l.Endpoints.LOBBY(e),
            body: { ...t },
            retries: 1,
            oldFormErrors: !0,
          })
          .then(l.NOOP);
      }
      function d(e, t, n) {
        return a.default
          .patch({
            url: l.Endpoints.LOBBY_MEMBER(e, t),
            body: { ...n },
            retries: 1,
            oldFormErrors: !0,
          })
          .then(l.NOOP);
      }
      function c(e) {
        return a.default
          .delete({
            url: l.Endpoints.LOBBY(e),
            body: {},
            retries: 1,
            oldFormErrors: !0,
          })
          .then(l.NOOP);
      }
      function f(e, t) {
        return a.default
          .post({
            url: l.Endpoints.LOBBY_SEND(e),
            body: { data: t },
            oldFormErrors: !0,
          })
          .then(l.NOOP);
      }
      function E(e) {
        return a.default
          .post({ url: l.Endpoints.LOBBY_SEARCH, body: e, oldFormErrors: !0 })
          .then(e => {
            let { body: t } = e;
            return t;
          });
      }
      function h(e) {
        s.default.dispatch({ type: "LOBBY_VOICE_CONNECT", lobbyId: e });
      }
      function _(e) {
        s.default.dispatch({ type: "LOBBY_VOICE_DISCONNECT", lobbyId: e });
      }
    },
    831314: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var a = n("872717"),
        s = n("271938"),
        l = n("49111"),
        i = {
          setUserAchievement(e, t, n) {
            let i = s.default.getId();
            return a.default.put({
              url: l.Endpoints.USER_ACHIEVEMENTS_FOR_USER(i, e, t),
              body: { percent_complete: n },
              oldFormErrors: !0,
            });
          },
          fetchForApplication: e =>
            a.default
              .get({
                url: l.Endpoints.USER_ACHIEVEMENTS(e),
                retries: 1,
                oldFormErrors: !0,
              })
              .then(e => {
                let { body: t } = e;
                return t;
              }),
        };
    },
    777273: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          fetchUserAffinities: function () {
            return r;
          },
        });
      var a = n("872717"),
        s = n("913144"),
        l = n("843823"),
        i = n("49111");
      function r() {
        let e =
          !(arguments.length > 0) || void 0 === arguments[0] || arguments[0];
        return l.default.needsRefresh()
          ? (s.default.dispatch({ type: "LOAD_USER_AFFINITIES" }),
            a.default
              .get({
                url: i.Endpoints.USER_AFFINITIES,
                retries: e ? 3 : 0,
                oldFormErrors: !0,
              })
              .then(
                e => {
                  let { body: t } = e;
                  s.default.dispatch({
                    type: "LOAD_USER_AFFINITIES_SUCCESS",
                    affinities: t,
                  });
                },
                () => {
                  s.default.dispatch({ type: "LOAD_USER_AFFINITIES_FAILURE" });
                }
              ))
          : Promise.resolve();
      }
    },
    139245: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          markView: function () {
            return s;
          },
        });
      var a = n("913144");
      function s(e) {
        a.default.dispatch({ type: "VIEW_HISTORY_MARK_VIEW", key: e });
      }
    },
    245489: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return A;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("627445"),
        o = n.n(r),
        u = n("77078"),
        d = n("736964"),
        c = n("476765"),
        f = n("284609"),
        E = n("49111"),
        h = n("894282"),
        _ = n("782340"),
        C = n("812830"),
        I = n("890957");
      let S = { canSend: !1, hint: null, success: null, error: null },
        m = (0, c.uid)(),
        p = "".concat(m, "-decription"),
        T = "".concat(m, "-error");
      function g(e, t) {
        switch (t.type) {
          case "RESET":
            return S;
          case "SUCCESS":
            return { ...S, success: t.text };
          case "HINT":
            return { ...S, canSend: !0, hint: t.text };
          case "ERROR":
            return { ...e, canSend: !0, error: t.text };
        }
      }
      function A() {
        let e = s.createRef(),
          t = s.createRef(),
          [n, l] = s.useReducer(g, S),
          { canSend: r, hint: c, success: A, error: N } = n;
        return (
          s.useEffect(() => {
            null != A &&
              (o(null != e.current, "Input is submitting when not mounted"),
              (e.current.value = ""),
              e.current.focus());
          }, [A, e]),
          (0, a.jsxs)("form", {
            onSubmit: t => {
              t.preventDefault(),
                o(null != e.current, "Input is submitted when not mounted");
              let n = e.current.value.trim();
              !n.includes("#") && n.startsWith("@") && (n = n.substring(1));
              let a = (0, f.validateDiscordTag)(n);
              if (null != a) {
                l({ type: "ERROR", text: a });
                return;
              }
              d.default
                .sendRequest({
                  discordTag: n,
                  context: { location: "Add Friend" },
                })
                .then(
                  () =>
                    l({
                      type: "SUCCESS",
                      text: _.default.Messages.ADD_FRIEND_SUCCESS.format({
                        discordTag: n,
                      }),
                    }),
                  e => {
                    var t;
                    return l({
                      type: "ERROR",
                      text: (0, f.humanizeAbortCode)(
                        null === (t = e.body) || void 0 === t ? void 0 : t.code,
                        n
                      ),
                    });
                  }
                );
            },
            autoComplete: "off",
            children: [
              (0, a.jsx)(u.FormText, {
                id: p,
                type: u.FormText.Types.DESCRIPTION,
                children: _.default.Messages.POMELO_ADD_FRIEND_DESCRIPTION,
              }),
              (0, a.jsx)(u.FocusRing, {
                focusTarget: e,
                ringTarget: t,
                ringClassName: C.ring,
                children: (0, a.jsxs)("div", {
                  ref: t,
                  className: i(C.addFriendInputWrapper, {
                    [C.success]: A,
                    [C.error]: N,
                  }),
                  children: [
                    (0, a.jsx)(u.TextInput, {
                      id: m,
                      inputRef: e,
                      className: C.addFriendInput,
                      inputClassName: C.input,
                      onKeyPress: t => {
                        let n = t.currentTarget.value;
                        if (
                          t.key !== h.KeyboardEventKey.Enter &&
                          n.includes("#")
                        ) {
                          o(
                            null != e.current,
                            "Input is handling keypress when not mounted"
                          );
                          let a = n.indexOf("#"),
                            s = e.current.selectionStart,
                            l =
                              t.key === h.KeyboardEventKey.Backspace ||
                              t.key === h.KeyboardEventKey.ArrowRight ||
                              t.key === h.KeyboardEventKey.ArrowLeft,
                            i = t.which >= 48 && t.which <= 57;
                          null != s && s > a && /^(.+?#\d{4})$/.test(n) && !l
                            ? t.preventDefault()
                            : null != s &&
                              s > a &&
                              !i &&
                              !l &&
                              t.preventDefault();
                        }
                      },
                      onChange: e => {
                        if (e.length <= 0) {
                          l({ type: "RESET" });
                          return;
                        }
                        let t = "",
                          [, n] = e.split("#");
                        null != n &&
                          (t =
                            e +
                            E.PLACEHOLDER_TAG.slice(
                              null != n ? n.length + 1 : 0
                            )),
                          l({ type: "HINT", text: t });
                      },
                      maxLength: 37,
                      autoFocus: !0,
                      autoComplete: "off",
                      name: "add-friend",
                      "data-lpignore": !0,
                      placeholder:
                        _.default.Messages.POMELO_ADD_FRIEND_DESCRIPTION,
                      "aria-label":
                        _.default.Messages.POMELO_ADD_FRIEND_DESCRIPTION,
                      "aria-invalid": null != N || void 0,
                      "aria-describedby": null != N ? T : p,
                    }),
                    null != c &&
                      (0, a.jsx)("div", {
                        className: C.addFriendHint,
                        "aria-hidden": !0,
                        children: c,
                      }),
                    (0, a.jsx)(u.Button, {
                      size: u.Button.Sizes.SMALL,
                      disabled: !r,
                      type: "submit",
                      children: _.default.Messages.ADD_FRIEND_BUTTON,
                    }),
                  ],
                }),
              }),
              null != N &&
                (0, a.jsx)(u.FormText, {
                  role: "alert",
                  id: T,
                  type: u.FormText.Types.ERROR,
                  className: I.marginTop8,
                  children: N,
                }),
              null != A &&
                (0, a.jsx)(u.FormText, {
                  role: "status",
                  type: u.FormText.Types.SUCCESS,
                  className: I.marginTop8,
                  children: A,
                }),
            ],
          })
        );
      }
    },
    252917: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return eH;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("803182"),
        o = n("90915"),
        u = n("759843"),
        d = n("868233"),
        c = n("394846"),
        f = n("446674"),
        E = n("77078"),
        h = n("241845"),
        _ = n("939443"),
        C = n("597590"),
        I = n("987697"),
        S = n("464682"),
        m = n("73749"),
        p = n("191145"),
        T = n("533466"),
        g = n("837844"),
        A = n("171984"),
        N = n("551254"),
        R = n("893399"),
        O = n("353681"),
        v = n("256430"),
        L = n("390236"),
        M = n("546102"),
        P = n("380710"),
        D = n("889145"),
        y = n("993057"),
        x = n("118971"),
        b = n("696336"),
        U = n("273457"),
        G = n("38654"),
        j = n("507950"),
        w = n("598156"),
        k = n("397039"),
        F = n("628805"),
        B = n("755729"),
        H = n("934743"),
        V = n("2190"),
        Y = n("566396"),
        W = n("618489"),
        K = n("209688"),
        z = n("747223"),
        q = n("94425"),
        Q = n("393027"),
        Z = n("1501"),
        X = n("161778"),
        J = n("42203"),
        $ = n("26989"),
        ee = n("305961"),
        et = n("18494"),
        en = n("600133"),
        ea = n("449008"),
        es = n("299039"),
        el = n("439932"),
        ei = n("315977"),
        er = n("911120"),
        eo = n("455555"),
        eu = n("229644"),
        ed = n("901582"),
        ec = n("758997"),
        ef = n("474557"),
        eE = n("49111"),
        eh = n("724210"),
        e_ = n("653138"),
        eC = n("782340"),
        eI = n("160619");
      let eS = () =>
          (0, a.jsx)("div", {
            className: eI.loader,
            children: (0, a.jsx)(E.Spinner, {}),
          }),
        em = (0, d.makeLazy)({
          createPromise: () => n.el("144588").then(n.bind(n, "144588")),
          webpackId: "144588",
          name: "GuildShopPage",
          renderLoader: eS,
        }),
        ep = (0, d.makeLazy)({
          createPromise: () => n.el("597235").then(n.bind(n, "597235")),
          webpackId: "597235",
          name: "GuildMemberApplicationReview",
          renderLoader: eS,
        }),
        eT = (0, d.makeLazy)({
          createPromise: () => n.el("144295").then(n.bind(n, "144295")),
          webpackId: "144295",
          name: "GuildHomePage",
          renderLoader: eS,
        }),
        eg = (0, d.makeLazy)({
          createPromise: () => n.el("112265").then(n.bind(n, "112265")),
          webpackId: "112265",
          name: "MemberSafetyPage",
          renderLoader: eS,
        }),
        eA = (0, d.makeLazy)({
          createPromise: () => n.el("534702").then(n.bind(n, "534702")),
          webpackId: "534702",
          name: "ChannelsAndRolesPage",
          renderLoader: eS,
        }),
        eN = (0, d.makeLazy)({
          createPromise: () => n.el("413896").then(n.bind(n, "413896")),
          webpackId: "413896",
          name: "GuildOnboardingPage",
          renderLoader: eS,
        }),
        eR = e => {
          let { match: t } = e,
            n = (0, f.useStateFromStores)([J.default, et.default], () => {
              let e = et.default.getChannelId();
              return J.default.getChannel(e);
            }),
            { guildId: s, channelId: l, messageId: i } = t.params,
            r = (0, f.useStateFromStores)([ee.default], () =>
              ee.default.getGuild(s)
            ),
            o = (0, f.useStateFromStores)([$.default], () =>
              null == s ? null : $.default.getSelfMember(s)
            ),
            u = (0, f.useStateFromStores)([G.default], () => {
              if (null == s) return;
              let e = G.default.getData(s);
              if (
                (null == e ? void 0 : e.type) === j.ImpersonateType.SERVER_SHOP
              )
                switch (e.initialTab) {
                  case "role_subscriptions":
                    return R.GuildShopTab.GUILD_ROLE_SUBSCRIPTIONS;
                  case "guild_products":
                    return R.GuildShopTab.GUILD_PRODUCTS;
                  default:
                    return;
                }
            }),
            d = (0, N.isEligibleForSubscriptionsInGuildShop)(
              s,
              "channel_renderer"
            );
          if (null != s && null != l && (0, eh.isStaticChannelRoute)(l))
            switch (l) {
              case eh.StaticChannelRoute.ROLE_SUBSCRIPTIONS:
                return d
                  ? (0, a.jsx)(em, {
                      guildId: s,
                      initialTab: R.GuildShopTab.GUILD_ROLE_SUBSCRIPTIONS,
                    })
                  : (0, a.jsx)(y.default, { guildId: s });
              case eh.StaticChannelRoute.GUILD_SHOP:
                return (0, a.jsx)(em, {
                  guildId: s,
                  productId: i,
                  initialTab: u,
                });
              case eh.StaticChannelRoute.MEMBER_APPLICATIONS:
                return (0, a.jsx)(ep, { guildId: s });
              case eh.StaticChannelRoute.GUILD_HOME:
                return (0, a.jsx)(eT, { guildId: s });
              case eh.StaticChannelRoute.CHANNEL_BROWSER:
                return (0, a.jsx)(eA, {
                  guildId: s,
                  selectedSection: e_.GuildOnboardingTab.BROWSE,
                });
              case eh.StaticChannelRoute.GUILD_ONBOARDING:
                return (0, a.jsx)(eN, { guildId: s });
              case eh.StaticChannelRoute.CUSTOMIZE_COMMUNITY:
                return (0, a.jsx)(eA, {
                  guildId: s,
                  selectedSection: e_.GuildOnboardingTab.CUSTOMIZE,
                });
              case eh.StaticChannelRoute.MEMBER_SAFETY:
                return (0, a.jsx)(eg, { guildId: s });
              default:
                (0, ea.assertNever)(l);
            }
          if ((0, P.isBlockedByOnboarding)(r, o))
            return (0, a.jsx)(D.default, { guildId: s, channelId: l });
          if ((null == n ? void 0 : n.type) === eE.ChannelTypes.GUILD_STORE) {
            let e = es.default.cast(t.params.messageId);
            return (0, a.jsx)(ei.default, { channel: n, inputSkuId: e }, n.id);
          }
          return (0, a.jsx)(T.default, {});
        },
        eO = s.memo(function () {
          let { guildId: e, channelId: t } = (0, Q.default)(),
            n = (0, f.useStateFromStores)([et.default], () =>
              null != t ? t : et.default.getChannelId(e)
            );
          return (function () {
            return window.location.pathname.startsWith(
              eE.Routes.GUILD_DISCOVERY
            );
          })()
            ? (0, a.jsx)(v.default, {})
            : null != e
              ? (0, a.jsx)(x.default, { selectedChannelId: n, guildId: e }, e)
              : (0, a.jsx)(eu.default, {});
        });
      function ev(e) {
        let t = (0, Q.default)(e => {
          let { guildId: t } = e;
          return t;
        });
        return (0, a.jsx)(H.default, { ...e, guildId: t });
      }
      let eL = e => (0, a.jsx)(eR, { ...e }),
        eM = e => {
          let t = null != e && e.length > 0 && e.startsWith("?"),
            n = t ? e.split("?")[1] : null;
          return (0, a.jsx)(O.default, { searchRoute: n });
        },
        eP = e => {
          let { match: t } = e;
          return null != t.params.guildId
            ? (0, a.jsx)(M.default, {
                guildId: t.params.guildId,
                inviteCode: t.params.inviteCode,
              })
            : null;
        },
        eD = e => {
          let { match: t } = e;
          return null != t.params.guildId
            ? (0, a.jsx)(U.default, {
                guildId: t.params.guildId,
                inviteCode: t.params.inviteCode,
              })
            : null;
        },
        ey = () => (0, a.jsx)(ec.default, {}),
        ex = () => (0, a.jsx)(ef.default, {}),
        eb = function () {
          let e =
            arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
          return function (t) {
            return (0, a.jsx)(A.default, { isFullScreen: e, ...t });
          };
        },
        eU = e => (0, a.jsx)(S.default, { ...e }),
        eG = () => (0, a.jsx)(I.default, {}),
        ej = () => (0, a.jsx)(z.default, {}),
        ew = () => (0, a.jsx)(w.default, {}),
        ek = () => (0, a.jsx)(K.default, {}),
        eF = e => {
          let { match: t } = e,
            n = t.params.feature;
          switch (n) {
            case "addFriends":
              return (0, a.jsx)(z.default, {
                initialSection: eE.FriendsSections.ADD_FRIEND,
              });
            case "pendingFriends":
              return (0, a.jsx)(z.default, {
                initialSection: eE.FriendsSections.PENDING,
              });
            case "sessionManagement":
              return (0, a.jsx)(o.Redirect, {
                to: eE.Routes.SETTINGS("sessions"),
              });
            case "connections":
              return (0, a.jsx)(o.Redirect, {
                to: {
                  pathname: eE.Routes.SETTINGS("connections"),
                  search: e.location.search,
                },
              });
            case "family-center":
              return (0, a.jsx)(o.Redirect, { to: eE.Routes.FAMILY_CENTER });
            case "account-standing":
              return (0, a.jsx)(o.Redirect, {
                to: eE.Routes.SETTINGS(
                  "privacy-and-safety",
                  "account-standing"
                ),
              });
            default:
              return (0, a.jsx)(o.Redirect, { to: eE.Routes.ME });
          }
        };
      function eB(e) {
        let { hasNotice: t, sidebarTheme: n, hideSidebar: s } = e;
        (0, _.useNullExperiment)(!0);
        let l = "app view user trigger debugging";
        h.UserTriggerAAExperiment.useExperiment(
          { location: l },
          { autoTrackExposure: !1 }
        ),
          h.UserTriggerAAExperiment.trackExposure({ location: l });
        let r = (0, f.useStateFromStores)([p.default], () =>
          p.default.isFullscreenInContext()
        );
        return s
          ? null
          : (0, a.jsxs)("div", {
              className: i(eI.sidebar, (0, el.getThemeClass)(n), {
                [eI.hasNotice]: t,
                [eI.fullWidth]: c.isMobile,
                [eI.hidden]: r,
              }),
              children: [
                (0, a.jsx)(eO, {}),
                (0, a.jsxs)("section", {
                  className: eI.panels,
                  "aria-label": eC.default.Messages.ACCOUNT_A11Y_LABEL,
                  children: [
                    (0, a.jsx)(q.default, {}),
                    (0, a.jsx)(Y.default, {}),
                    (0, a.jsx)(ed.default, {
                      section: eE.AnalyticsSections.ACTIVITY_PANEL,
                      children: (0, a.jsx)(ev, { className: eI.activityPanel }),
                    }),
                    (0, a.jsx)(ed.default, {
                      section: eE.AnalyticsSections.RTC_CONNECTION_PANEL,
                      children: (0, a.jsx)(W.default, {}),
                    }),
                    (0, a.jsx)(V.default, {}),
                    (0, a.jsx)(ed.default, {
                      section: eE.AnalyticsSections.ACCOUNT_PANEL,
                      children: (0, a.jsx)(B.default, {}),
                    }),
                  ],
                }),
                (0, a.jsx)(er.default, {}),
              ],
            });
      }
      function eH() {
        var e;
        let t = (0, f.useStateFromStores)([en.default], () =>
            en.default.hasNotice()
          ),
          n = (0, f.useStateFromStores)([X.default], () =>
            X.default.darkSidebar ? eE.ThemeTypes.DARK : void 0
          ),
          l = (function () {
            let [e, t] = s.useState(() =>
              window.location.pathname.startsWith(
                eE.Routes.GUILD_MEMBER_VERIFICATION("")
              )
            );
            return (
              s.useEffect(
                () =>
                  Z.default.addRouteChangeListener(e => {
                    t(
                      e.pathname.startsWith(
                        eE.Routes.GUILD_MEMBER_VERIFICATION("")
                      )
                    );
                  }),
                []
              ),
              e
            );
          })(),
          i = (function () {
            let [e, t] = s.useState(() =>
              window.location.pathname.startsWith(
                eE.Routes.GUILD_MEMBER_VERIFICATION_FOR_HUB("")
              )
            );
            return (
              s.useEffect(
                () =>
                  Z.default.addRouteChangeListener(e => {
                    t(
                      e.pathname.startsWith(
                        eE.Routes.GUILD_MEMBER_VERIFICATION_FOR_HUB("")
                      )
                    );
                  }),
                []
              ),
              e
            );
          })(),
          d = (function () {
            var e;
            let t = (0, o.useLocation)();
            return (
              (null ===
                (e = (0, r.matchPath)(
                  t.pathname,
                  eE.Routes.GUILD_BOOSTING_MARKETING(":guildId")
                )) || void 0 === e
                ? void 0
                : e.isExact) === !0
            );
          })(),
          E = (function () {
            var e;
            let t = (0, o.useLocation)();
            return (
              (null ===
                (e = (0, r.matchPath)(
                  t.pathname,
                  eE.Routes.COLLECTIBLES_SHOP_FULLSCREEN
                )) || void 0 === e
                ? void 0
                : e.isExact) === !0
            );
          })(),
          h = (0, f.useStateFromStores)([F.default], () =>
            F.default.getIsOpen()
          ),
          _ = (0, o.useRouteMatch)([
            eE.Routes.CHANNEL(eE.ME, ":channelId"),
            eE.Routes.CHANNEL(":guildId", ":channelId?", ":messageId?"),
          ]),
          I =
            (null == _
              ? void 0
              : null === (e = _.params) || void 0 === e
                ? void 0
                : e.channelId) === eh.StaticChannelRoute.GUILD_ONBOARDING,
          S = s.useCallback(() => k.default.openSidebar(), []);
        return (0, a.jsx)(a.Fragment, {
          children: (0, a.jsxs)("div", {
            className: eI.container,
            children: [
              h &&
                !E &&
                (0, a.jsx)(b.default, {
                  className: eI.guilds,
                  themeOverride: n,
                }),
              (0, a.jsx)(L.default.Provider, {
                value:
                  (null == _ ? void 0 : _.params.guildId) === eE.ME
                    ? void 0
                    : null == _
                      ? void 0
                      : _.params.guildId,
                children: (0, a.jsxs)("div", {
                  className: eI.base,
                  children: [
                    c.isMobile ? null : (0, a.jsx)(eo.default, {}),
                    (0, a.jsxs)("div", {
                      className: eI.content,
                      children: [
                        (0, a.jsx)(g.default, {}),
                        (0, a.jsx)(eB, {
                          hasNotice: t,
                          sidebarTheme: n,
                          hideSidebar: l || i || d || E || I || !h,
                        }),
                        (0, a.jsx)(C.default.Provider, {
                          value: S,
                          children: (0, a.jsxs)(o.Switch, {
                            children: [
                              (0, a.jsx)(m.default, {
                                path: eE.Routes.ACTIVITY,
                                disableTrack: !0,
                                children: (0, a.jsx)(o.Redirect, {
                                  to: eE.Routes.ME,
                                }),
                              }),
                              (0, a.jsx)(m.default, {
                                path: eE.Routes.ACTIVITIES_HAPPENING_NOW,
                                render: eG,
                                impressionName: u.ImpressionNames.ACTIVITIES,
                              }),
                              (0, a.jsx)(m.default, {
                                path: eE.Routes.ACTIVITY_DETAILS(
                                  ":applicationId"
                                ),
                                render: eU,
                                impressionName:
                                  u.ImpressionNames.ACTIVITY_DETAILS,
                                impressionProperties: e => {
                                  let { computedMatch: t } = e;
                                  return {
                                    application_id: t.params.applicationId,
                                  };
                                },
                              }),
                              (0, a.jsx)(m.default, {
                                path: eE.Routes.ACTIVITIES,
                                render: eG,
                                impressionName: u.ImpressionNames.ACTIVITIES,
                              }),
                              (0, a.jsx)(m.default, {
                                path: eE.Routes.APPLICATION_LIBRARY,
                                render: ey,
                                impressionName:
                                  u.ImpressionNames.APPLICATION_LIBRARY,
                                disableTrack: !0,
                              }),
                              (0, a.jsx)(m.default, {
                                path: eE.Routes.APPLICATION_STORE,
                                render: ex,
                                impressionName:
                                  u.ImpressionNames.APPLICATION_STORE,
                                disableTrack: !0,
                              }),
                              (0, a.jsx)(m.default, {
                                path: eE.Routes.COLLECTIBLES_SHOP_FULLSCREEN,
                                render: eb(!0),
                                disableTrack: !0,
                              }),
                              (0, a.jsx)(m.default, {
                                path: eE.Routes.COLLECTIBLES_SHOP,
                                render: eb(!1),
                                disableTrack: !0,
                              }),
                              (0, a.jsx)(m.default, {
                                path: eE.Routes.COLLECTIBLES_SHOP_PRODUCT_DETAIL(
                                  ":skuId"
                                ),
                                render: eb(!1),
                                disableTrack: !0,
                              }),
                              (0, a.jsx)(m.default, {
                                path: eE.Routes.MESSAGE_REQUESTS,
                                render: ew,
                                disableTrack: !0,
                              }),
                              (0, a.jsx)(m.default, {
                                path: eE.Routes.FAMILY_CENTER,
                                render: ek,
                                disableTrack: !0,
                              }),
                              (0, a.jsx)(m.default, {
                                path: eE.Routes.ME,
                                exact: !0,
                                render: ej,
                                impressionName: u.ImpressionNames.FRIENDS,
                                disableTrack: !0,
                              }),
                              (0, a.jsx)(m.default, {
                                path: [
                                  eE.Routes.CHANNEL_THREAD_VIEW(
                                    ":guildId",
                                    ":channelId",
                                    ":threadId",
                                    ":messageId?"
                                  ),
                                  eE.Routes.CHANNEL(eE.ME, ":channelId"),
                                  eE.Routes.CHANNEL(
                                    ":guildId",
                                    ":channelId?",
                                    ":messageId?"
                                  ),
                                ],
                                render: eL,
                                impressionName: u.ImpressionNames.GUILD_CHANNEL,
                                disableTrack: !0,
                              }),
                              (0, a.jsx)(m.default, {
                                path: eE.Routes.GUILD_DISCOVERY,
                                render: e => {
                                  let { location: t } = e;
                                  return eM(t.search);
                                },
                                impressionName:
                                  u.ImpressionNames.GUILD_DISCOVERY,
                                disableTrack: !0,
                              }),
                              (0, a.jsx)(m.default, {
                                path: eE.Routes.GUILD_MEMBER_VERIFICATION(
                                  ":guildId",
                                  ":inviteCode?"
                                ),
                                render: eP,
                                impressionName:
                                  u.ImpressionNames.GUILD_MEMBER_VERIFICATION,
                                disableTrack: !0,
                              }),
                              (0, a.jsx)(m.default, {
                                path: eE.Routes.GUILD_MEMBER_VERIFICATION_FOR_HUB(
                                  ":guildId",
                                  ":inviteCode?"
                                ),
                                render: eD,
                                impressionName:
                                  u.ImpressionNames.HUB_EMAIL_SIGNUP,
                                impressionProperties: e => {
                                  let { computedMatch: t } = e;
                                  return {
                                    has_invite: void 0 !== t.params.inviteCode,
                                  };
                                },
                              }),
                              (0, a.jsx)(m.default, {
                                path: eE.Routes.FEATURE(":feature"),
                                exact: !0,
                                render: eF,
                                disableTrack: !0,
                              }),
                            ],
                          }),
                        }),
                      ],
                    }),
                  ],
                }),
              }),
            ],
          }),
        });
      }
    },
    315977: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return I;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("90915"),
        i = n("446674"),
        r = n("450911"),
        o = n("737960"),
        u = n("970366"),
        d = n("2105"),
        c = n("901582"),
        f = n("294135"),
        E = n("404247"),
        h = n("49111"),
        _ = n("504659");
      class C extends s.Component {
        componentDidMount() {
          this.fetchStoreListing(),
            (0, u.trackAppUIViewed)("channel_store_listing");
        }
        render() {
          return null != this.props.skuId
            ? (0, a.jsx)(c.default, {
                page: h.AnalyticsPages.CHANNEL_STORE_LISTING,
                root: !0,
                children: (0, a.jsx)("div", {
                  className: _.applicationStore,
                  children: (0, a.jsx)(l.Route, {
                    path: "*",
                    render: this.renderApplicationListing,
                  }),
                }),
              })
            : null;
        }
        constructor(...e) {
          super(...e),
            (this.fetchStoreListing = e => {
              let { channel: t, inputSkuId: n } = this.props;
              return null != e
                ? r.default.fetchChannelStoreListing(t.id, e)
                : null != n
                  ? r.default.fetchChannelStoreListing(t.id, n)
                  : r.default.fetchChannelStoreListing(t.id);
            }),
            (this.renderApplicationListing = e => {
              let { location: t } = e,
                { channel: n, skuId: s, width: l } = this.props;
              return (0, a.jsx)(f.default, {
                channel: n,
                inputSkuId: s,
                fetchStoreListing: this.fetchStoreListing,
                location: t,
                pageSize: (0, E.getPageSize)(l),
              });
            });
        }
      }
      var I = (0, o.default)(
        i.default.connectStores([d.default], e => {
          let { channel: t, inputSkuId: n } = e;
          return { skuId: null != n ? n : d.default.getSkuIdForChannel(t.id) };
        })(C)
      );
    },
    911120: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return I;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("446674"),
        o = n("95410"),
        u = n("77078"),
        d = n("489740"),
        c = n("355025"),
        f = n("945330"),
        E = n("50647"),
        h = n("782340"),
        _ = n("531639");
      let C = "isHideDevBanner";
      var I = () => {
        var e;
        let [t, n] = (0, s.useState)(
            (null === (e = o.default.get(C, "false")) || void 0 === e
              ? void 0
              : e.toString()) === "true"
          ),
          l = (0, r.useStateFromStores)([d.default], () => {
            var e;
            return (0, c.probablyHasBuildOverride)()
              ? null === (e = d.default.getCurrentBuildOverride().overrides) ||
                void 0 === e
                ? void 0
                : e.discord_web
              : null;
          });
        if (t) return null;
        let I = () => {
            o.default.set(C, !0), n(!0);
          },
          S = () =>
            (0, a.jsx)(u.Clickable, {
              onClick: I,
              className: _.closeButton,
              "aria-label": h.default.Messages.DISMISS,
              children: (0, a.jsx)(f.default, { className: _.closeIcon }),
            });
        if (null != l)
          return (0, a.jsxs)("div", {
            className: i(_.devBanner, _.buildOverride),
            children: [
              (0, a.jsx)(E.default, { className: _.icon }),
              h.default.Messages.BUILD_OVERRIDE,
              (0, a.jsx)(S, {}),
            ],
          });
        let m = window.GLOBAL_ENV.RELEASE_CHANNEL;
        return "staging" === m
          ? (0, a.jsxs)("div", {
              className: i(_.devBanner, _.staging),
              children: [
                (0, a.jsx)(E.default, { className: _.icon }),
                h.default.Messages.DEV_NOTICE_STAGING.format({
                  buildNumber: "275139",
                }),
                (0, a.jsx)(S, {}),
              ],
            })
          : null;
      };
    },
    32296: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          NotchBackground: function () {
            return h.NotchBackground;
          },
          default: function () {
            return p;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("917351"),
        i = n.n(l),
        r = n("446674"),
        o = n("773364"),
        u = n("862337"),
        d = n("77078"),
        c = n("629109"),
        f = n("42887"),
        E = n("945956"),
        h = n("230962"),
        _ = n("599110"),
        C = n("49111"),
        I = n("782340"),
        S = n("22940");
      class m extends s.PureComponent {
        componentDidMount() {
          this._initTimeout.start(1e3, this.setupVoiceActivity);
        }
        componentWillUnmount() {
          this._initTimeout.stop(),
            this._silenceTimeout.stop(),
            this._micTestStop(),
            f.default
              .getMediaEngine()
              .removeListener(
                o.MediaEngineEvent.VoiceActivity,
                this.handleVoiceActivity
              );
        }
        _micTestStart() {
          let {
              isVoiceConnected: e,
              inputDeviceName: t,
              inputVolume: n,
              outputDeviceName: a,
              outputVolume: s,
              inputMode: l,
              vadAutoThreshold: i,
              vadThreshold: r,
              location: o,
              isDeafened: u,
            } = this.props,
            d = !1;
          e && !u && (c.default.toggleSelfDeaf(), (d = !0)),
            c.default.setLoopback(!0),
            (this._micTestStartTime = Date.now()),
            this.setState({
              isMicTesting: !0,
              isDetectingInput: !0,
              didDeafenUser: d,
            }),
            _.default.track(C.AnalyticEvents.MIC_TESTING_STARTED, {
              input_device_name: t,
              input_device_volume: n,
              output_device_name: a,
              output_device_volume: s,
              input_mode: l,
              input_sensitivity_is_automatic: i,
              input_sensitivity_threshold: Math.round(r),
              location: o,
            });
        }
        _micTestStop() {
          let { didDeafenUser: e, isMicTesting: t } = this.state,
            { isVoiceConnected: n, isDeafened: a } = this.props;
          if (!!t)
            n && a && e && c.default.toggleSelfDeaf(),
              c.default.setLoopback(!1),
              this.setState({ isMicTesting: !1, didDeafenUser: !1 }),
              null != this._micTestStartTime &&
                _.default.track(C.AnalyticEvents.MIC_TESTING_STOPPED, {
                  testing_duration: Math.round(
                    (Date.now() - this._micTestStartTime) / 1e3
                  ),
                });
        }
        renderCaption() {
          let { captionVoice: e, captionNoVoice: t } = this.props,
            { isMicTesting: n, isDetectingInput: s } = this.state;
          return (0, a.jsx)(d.FormText, {
            className: S.micTestCaption,
            type: d.FormText.Types.DESCRIPTION,
            children: n ? (s ? e : t) : null,
          });
        }
        render() {
          let {
              isVoiceConnected: e,
              title: t,
              description: n,
              notchBackground: s,
              buttonTest: l,
              buttonStop: i,
              buttonClassName: r,
              buttonColor: o,
              isDeafened: u,
            } = this.props,
            { isMicTesting: c, volume: f } = this.state,
            E =
              e && !c
                ? I.default.Messages.MIC_TEST_VOICE_CHANNEL_WARNING
                : null;
          return (
            c && e && !u && this._micTestStop(),
            (0, a.jsxs)("div", {
              className: S.container,
              children: [
                (0, a.jsx)(d.FormTitle, {
                  tag: d.FormTitleTags.H5,
                  className: S.title,
                  children: t,
                }),
                null != n &&
                  (0, a.jsx)(d.FormText, {
                    type: d.FormText.Types.DESCRIPTION,
                    className: S.description,
                    children: n,
                  }),
                (0, a.jsxs)("div", {
                  className: S.micTest,
                  children: [
                    (0, a.jsx)(d.Tooltip, {
                      text: E,
                      children: e => {
                        let { onMouseEnter: t, onMouseLeave: n } = e;
                        return (0, a.jsx)(d.Button, {
                          grow: !1,
                          onClick: this.handleToggleMicTest,
                          onMouseEnter: t,
                          onMouseLeave: n,
                          size: d.Button.Sizes.SMALL,
                          className: r,
                          color: o,
                          children: c ? i : l,
                        });
                      },
                    }),
                    (0, a.jsx)(h.default, {
                      progress: c ? f + 100 : 0,
                      notchBackground: s,
                    }),
                    this.renderCaption(),
                  ],
                }),
              ],
            })
          );
        }
        constructor(...e) {
          super(...e),
            (this._initTimeout = new u.Timeout()),
            (this._silenceTimeout = new u.Timeout()),
            (this._messageTimeout = new u.Timeout()),
            (this.state = {
              volume: -100,
              isMicTesting: !1,
              isDetectingInput: !0,
              didDeafenUser: !1,
            }),
            (this.setupVoiceActivity = () => {
              f.default
                .getMediaEngine()
                .on(o.MediaEngineEvent.VoiceActivity, this.handleVoiceActivity);
            }),
            (this.handleVoiceActivity = e => {
              let { isMicTesting: t } = this.state;
              if (t && e <= -100) {
                !this._silenceTimeout.isStarted() &&
                  this._silenceTimeout.start(2e3, () => {
                    this.setState({ isDetectingInput: !1 });
                  }),
                  this.setState({ volume: -100 });
                return;
              }
              this._silenceTimeout.stop(),
                this.setState({ volume: e, isDetectingInput: !0 });
            }),
            (this.handleToggleMicTest = () => {
              this.state.isMicTesting
                ? this._micTestStop()
                : this._micTestStart();
            });
        }
      }
      var p = r.default.connectStores([E.default, f.default], () => {
        let e = f.default.getInputDeviceId(),
          t = f.default.getInputDevices(),
          n = i.find(t, t => {
            let { id: n } = t;
            return n === e;
          }),
          a = f.default.getOutputDeviceId(),
          s = f.default.getOutputDevices(),
          l = i.find(s, e => {
            let { id: t } = e;
            return t === a;
          }),
          r = f.default.getModeOptions();
        return {
          isVoiceConnected: E.default.isConnected(),
          inputVolume: f.default.getInputVolume(),
          outputVolume: f.default.getOutputVolume(),
          inputMode: f.default.getMode(),
          vadThreshold: r.threshold,
          isDeafened: f.default.isSelfDeaf(),
          vadAutoThreshold: r.autoThreshold,
          inputDeviceName: null != n ? n.name : "",
          outputDeviceName: null != l ? l.name : "",
        };
      })(m);
    },
    229644: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return eN;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("16470"),
        o = n("974667"),
        u = n("394846"),
        d = n("446674"),
        c = n("151426"),
        f = n("551042"),
        E = n("77078"),
        h = n("450911"),
        _ = n("955153"),
        C = n("503525"),
        I = n("716241"),
        S = n("9759"),
        m = n("754493"),
        p = n("813531"),
        T = n("720694"),
        g = n("20606"),
        A = n("384997"),
        N = n("785770"),
        R = n("260488"),
        O = n("639547"),
        v = n("775032"),
        L = n("25132"),
        M = n("300962"),
        P = n("154889"),
        D = n("917247"),
        y = n("801388"),
        x = n("359499"),
        b = n("770469"),
        U = n("641078"),
        G = n("773367"),
        j = n("266782"),
        w = n("367226"),
        k = n("104589"),
        F = n("393027"),
        B = n("12896"),
        H = n("161778"),
        V = n("845579"),
        Y = n("686470"),
        W = n("27618"),
        K = n("697218"),
        z = n("160299"),
        q = n("521012"),
        Q = n("791823"),
        Z = n("552712"),
        X = n("330338"),
        J = n("311450"),
        $ = n("774223"),
        ee = n("880013"),
        et = n("556081"),
        en = n("216422"),
        ea = n("155207"),
        es = n("564875"),
        el = n("956089"),
        ei = n("719923"),
        er = n("882941"),
        eo = n("570687"),
        eu = n("631316"),
        ed = n("524110"),
        ec = n("49111"),
        ef = n("782340"),
        eE = n("62599");
      let eh = e => {
          let { selected: t, ...n } = e,
            s = (0, o.useListItem)("friends"),
            l = (0, d.useStateFromStores)([W.default], () =>
              W.default.getPendingCount()
            ),
            i = (0, p.default)(),
            { canViewBroadcasts: r } = S.default.useExperiment({
              location: "friends_tab_no_track",
            }),
            u = (0, m.default)();
          return (0, a.jsxs)(eo.LinkButton, {
            selected: t,
            route: ec.Routes.FRIENDS,
            icon: es.default,
            text: ef.default.Messages.FRIENDS,
            onClick: () => {
              I.default.trackWithMetadata(
                ec.AnalyticEvents.BROADCAST_LIST_VISITED,
                {
                  num_active_broadcasts: i.length,
                  friends_tab_clicked: !0,
                  is_broadcasting: u,
                }
              );
            },
            ...n,
            ...s,
            children: [
              i.length > 0 &&
                r &&
                (0, a.jsx)(el.TextBadge, {
                  color: g.default.BG_BRAND,
                  text: (0, a.jsxs)("div", {
                    className: eE.broadcastingBadge,
                    children: [
                      (0, a.jsx)($.default, { className: eE.broadcastingIcon }),
                      (0, a.jsx)(E.Text, {
                        variant: "text-xs/semibold",
                        color: "always-white",
                        children: i.length.toLocaleString(),
                      }),
                    ],
                  }),
                }),
              l > 0 ? (0, a.jsx)(el.NumberBadge, { count: l }) : null,
            ],
          });
        },
        e_ = e => {
          let { selected: t, hideGameUpdateProgressIndicator: n, ...s } = e,
            l = (0, o.useListItem)("library");
          return (0, a.jsx)(eo.LinkButton, {
            selected: t,
            route: ec.Routes.APPLICATION_LIBRARY,
            icon: ee.default,
            text: ef.default.Messages.LIBRARY,
            ...s,
            ...l,
            children: (0, a.jsx)(ed.default, {
              className: i(eE.downloadProgressCircle, {
                [eE.hideGameUpdateProgressIndicator]: n,
              }),
            }),
          });
        },
        eC = e => {
          let t,
            n,
            { selected: s, route: l, locationState: i, ...r } = e,
            u = (0, d.useStateFromStores)([K.default], () =>
              K.default.getCurrentUser()
            ),
            c = (0, d.useStateFromStores)([q.default], () =>
              q.default.getPremiumTypeSubscription()
            ),
            f = (0, o.useListItem)("nitro"),
            E = (0, D.usePremiumTrialOffer)(),
            h = (0, P.usePremiumDiscountOffer)(),
            _ = (0, d.useStateFromStores)(
              [z.default],
              () => z.default.isLocalizedPromoEnabled
            ),
            C = _ && null == E,
            I = (0, U.useIsEligibleForBogoPromotion)(),
            S = (0, w.default)(),
            m = (0, x.useShouldShowTenureRewardBadge)(),
            { enabled: p } = (0, M.default)(),
            T =
              s ||
              null != E ||
              null != h ||
              I ||
              S ||
              m ||
              (null != u && Date.now() - u.createdAt.getTime() > 2592e6) ||
              (0, ei.hasPremiumSubscriptionToDisplay)(u, c);
          return T && (!p || s)
            ? (I
                ? (n = (0, a.jsx)(y.default, { isNitroTab: !0 }))
                : m
                  ? (n = (0, a.jsx)(j.default, {
                      copy: ef.default.Messages.REDEEM,
                    }))
                  : S
                    ? (n = (0, a.jsx)(j.default, {}))
                    : null != h
                      ? (n = (0, a.jsx)(G.PremiumDiscountOfferTabBadge, {
                          userDiscount: h,
                          isTabSelected: s,
                          includesAmountOff: !1,
                        }))
                      : null != E
                        ? (n = (0, a.jsx)(G.PremiumTrialOfferTabBadge, {
                            trialOffer: E,
                            isTabSelected: s,
                          }))
                        : C &&
                          ((n = (0, a.jsx)(b.LocalizedPricingBadgeIcon, {
                            entryPoint: b.BadgeEntryPoint.PrivateMessages,
                          })),
                          !s && (t = eE.localizedPricingBadge)),
              (0, a.jsx)(eo.LinkButton, {
                selected: s,
                route: l,
                icon: en.default,
                text: ef.default.Messages.PREMIUM,
                locationState: i,
                ...r,
                ...f,
                className: t,
                children: n,
              }))
            : null;
        },
        eI = e => {
          let { selected: t, route: n, locationState: s, ...l } = e,
            r = (0, o.useListItem)("activities"),
            u = (0, d.useStateFromStores)(
              [H.default],
              () => H.default.getState().theme
            ),
            c = (0, C.useActivitiesWhatsNewCount)();
          return (0, a.jsx)(eo.LinkButton, {
            selected: t,
            route: n,
            icon: J.default,
            iconClassName: i(eE.activitiesBirthdayIcon, {
              [eE.activitiesBirthdayIconLight]: "light" === u,
            }),
            text: ef.default.Messages.EMBEDDED_ACTIVITIES_ACTIVITY_TAB_TITLE,
            locationState: s,
            ...l,
            ...r,
            children: c > 0 ? (0, a.jsx)(el.NumberBadge, { count: c }) : null,
          });
        },
        eS = e => {
          let { selected: t } = e,
            n = (0, R.useMessageRequestsCount)(),
            s = (0, o.useListItem)("messageRequests"),
            { channelId: l } = (0, N.useMessageRequestSidebarState)(),
            i = (0, O.useShouldShowMessageRequestsRow)();
          if (!i) return null;
          let r = null == l ? void 0 : () => h.default.preload(ec.ME, l);
          return (0, a.jsx)(eo.LinkButton, {
            selected: t,
            route: ec.Routes.MESSAGE_REQUESTS,
            icon: et.default,
            text: ef.default.Messages.MESSAGE_REQUESTS,
            onClick: r,
            ...s,
            children: n > 0 ? (0, a.jsx)(el.NumberBadge, { count: n }) : null,
          });
        },
        em = e => {
          let { selected: t } = e,
            n = ef.default.Messages.FAMILY_CENTER_SIDEBAR_TITLE,
            l = (0, o.useListItem)("family-center"),
            i = V.FamilyCenterEnabled.useSetting(),
            r = (0, v.default)(),
            [u, d] = s.useState(!0);
          return i && r
            ? (0, a.jsx)(eo.LinkButton, {
                selected: t,
                route: ec.Routes.FAMILY_CENTER,
                icon: ea.default,
                text: n,
                onMouseEnter: () => {
                  d(!0);
                },
                onMouseLeave: () => {
                  d(!1);
                },
                interactiveClassName: eE.familyCenterLinkButton,
                ...l,
                children: (0, a.jsx)(ep, { isParentHovered: u }),
              })
            : null;
        },
        ep = e => {
          let { isParentHovered: t } = e,
            s = (0, L.usePendingRequestCount)();
          return t
            ? (0, a.jsx)(eo.CloseButton, {
                onClick: () => {
                  (0, f.openModalLazy)(async () => {
                    let { default: e } = await n
                      .el("6674")
                      .then(n.bind(n, "6674"));
                    return t => (0, a.jsx)(e, { ...t });
                  });
                },
                "aria-label": ef.default.Messages.CLOSE,
              })
            : s > 0
              ? (0, a.jsx)("div", {
                  className: eE.familyCenterPendingBadge,
                  children: (0, a.jsx)(el.NumberBadge, { count: s }),
                })
              : (0, a.jsx)(A.default, {
                  contentTypes: [c.DismissibleContent.FAMILY_CENTER_NEW_BADGE],
                  children: e => {
                    let { visibleContent: t } = e;
                    return t === c.DismissibleContent.FAMILY_CENTER_NEW_BADGE
                      ? (0, a.jsx)(el.TextBadge, {
                          text: ef.default.Messages.NEW,
                          color: g.default.BG_BRAND,
                        })
                      : null;
                  },
                });
        },
        eT = () => (0, k.show)("DM_SEARCH");
      function eg(e) {
        switch (e) {
          case ec.Routes.APPLICATION_LIBRARY:
            return ec.AnalyticsPages.LIBRARY;
          case ec.Routes.FRIENDS:
            return ec.AnalyticsPages.FRIENDS_LIST;
          case ec.Routes.COLLECTIBLES_SHOP:
            return ec.AnalyticsPages.COLLECTIBLES_SHOP;
        }
        if (e.startsWith(ec.Routes.APPLICATION_STORE))
          return e === ec.Routes.APPLICATION_STORE
            ? ec.AnalyticsPages.STORE_DIRECTORY_HOME
            : e.startsWith(ec.Routes.APPLICATION_STORE)
              ? ec.AnalyticsPages.STORE_DIRECTORY_BROWSE
              : ec.AnalyticsPages.STORE_LISTING;
        return ec.AnalyticsPages.DM_CHANNEL;
      }
      let eA = e => {
        let {
            showLibrary: t,
            hasLibraryApplication: n,
            homeLink: s,
            storeLink: l,
            premiumTabSelected: o,
          } = e,
          [d, c] = (0, F.default)(e => {
            let { channelId: t, path: n } = e;
            return [t, n];
          }, r.default),
          { enabled: f } = _.BirthdayActivitiesExperiment.useExperiment(
            { location: "a718d6_2" },
            { autoTrackExposure: !0 }
          );
        return (0, a.jsxs)("nav", {
          className: eE.privateChannels,
          "aria-label": ef.default.Messages.PRIVATE_CHANNELS_A11Y_LABEL,
          children: [
            (0, a.jsx)(B.default, {
              tutorialId: "direct-messages",
              position: "right",
              offsetX: -52,
              children: (0, a.jsx)("div", {
                className: i(eE.searchBar, {
                  [eE.themedHeaderMobile]: u.isMobile,
                }),
                children: (0, a.jsx)("button", {
                  type: "button",
                  className: i(eE.searchBarComponent, {
                    [eE.themedSearchBarMobile]: u.isMobile,
                  }),
                  onClick: eT,
                  children: ef.default.Messages.DM_SEARCH_PLACEHOLDER,
                }),
              }),
            }),
            (0, a.jsxs)(eu.default, {
              ...e,
              version: c,
              selectedChannelId: d,
              showDMHeader: !0,
              children: [
                (0, a.jsx)(
                  eh,
                  {
                    selected:
                      null != c
                        ? c === ec.Routes.FRIENDS
                        : s === ec.Routes.FRIENDS,
                  },
                  "friends"
                ),
                n && t
                  ? (0, a.jsx)(
                      e_,
                      {
                        selected:
                          null == c
                            ? null != s &&
                              s.startsWith(ec.Routes.APPLICATION_LIBRARY)
                            : c.startsWith(ec.Routes.APPLICATION_LIBRARY),
                        hideGameUpdateProgressIndicator:
                          s === ec.Routes.APPLICATION_LIBRARY,
                      },
                      "library"
                    )
                  : null,
                (0, a.jsx)(
                  eC,
                  {
                    selected:
                      null == c ? o : c.startsWith(ec.Routes.APPLICATION_STORE),
                    route:
                      null == l ||
                      location.pathname.startsWith(ec.Routes.ACTIVITIES) ||
                      location.pathname.startsWith(ec.Routes.APPLICATION_STORE)
                        ? ec.Routes.APPLICATION_STORE
                        : l,
                    locationState: {
                      analyticsSource: {
                        page: eg(s),
                        section: ec.AnalyticsSections.NAVIGATION,
                        object: ec.AnalyticsObjects.NAVIGATION_LINK,
                      },
                    },
                  },
                  "premium"
                ),
                f
                  ? (0, a.jsx)(
                      eI,
                      {
                        selected:
                          (null != c && c.startsWith(ec.Routes.ACTIVITIES)) ||
                          (null != s && s.startsWith(ec.Routes.ACTIVITIES)),
                        route: ec.Routes.ACTIVITIES,
                        locationState: {
                          analyticsSource: {
                            page: eg(s),
                            section: ec.AnalyticsSections.NAVIGATION,
                            object: ec.AnalyticsObjects.NAVIGATION_LINK,
                          },
                        },
                      },
                      "activities"
                    )
                  : null,
                (0, a.jsx)(
                  eS,
                  {
                    selected:
                      null == c
                        ? null != s && s.startsWith(ec.Routes.MESSAGE_REQUESTS)
                        : c === ec.Routes.MESSAGE_REQUESTS,
                  },
                  "message-requests"
                ),
                (0, a.jsx)(
                  T.CollectiblesShopButton,
                  {
                    selected:
                      c === ec.Routes.COLLECTIBLES_SHOP ||
                      (null == s
                        ? void 0
                        : s.startsWith(ec.Routes.COLLECTIBLES_SHOP)),
                    locationState: {
                      analyticsSource: {
                        page: eg(s),
                        section: ec.AnalyticsSections.NAVIGATION,
                        object: ec.AnalyticsObjects.NAVIGATION_LINK,
                      },
                    },
                  },
                  "discord-shop"
                ),
                (0, a.jsx)(
                  em,
                  {
                    selected:
                      (null != s && s.startsWith(ec.Routes.FAMILY_CENTER)) ||
                      (null != c && c.startsWith(ec.Routes.FAMILY_CENTER)),
                  },
                  "family-center"
                ),
              ],
            }),
          ],
        });
      };
      function eN() {
        let e = (0, d.useStateFromStores)([X.default], () =>
            X.default.getHomeLink()
          ),
          t = (0, d.useStateFromStores)(
            [Z.default],
            () => {
              if (e === ec.Routes.APPLICATION_STORE) return !0;
              let t = (0, er.getSKUIdFromURL)(e);
              if (null != t) {
                var n, a;
                return (
                  null !==
                    (a =
                      null === (n = Z.default.get(t)) || void 0 === n
                        ? void 0
                        : n.premium) &&
                  void 0 !== a &&
                  a
                );
              }
              return !1;
            },
            [e]
          ),
          n = !V.DisableGamesTab.useSetting(),
          { theme: s } = (0, d.useStateFromStoresObject)([H.default], () => ({
            theme: H.default.theme,
          })),
          l = (0, d.useStateFromStores)([Y.default], () =>
            Y.default.hasLibraryApplication()
          ),
          i = (0, d.useStateFromStores)([Q.default], () =>
            Q.default.getCurrentPath()
          );
        return (0, a.jsx)(eA, {
          theme: s,
          showLibrary: n,
          hasLibraryApplication: l,
          storeLink: i,
          homeLink: e,
          premiumTabSelected: t,
        });
      }
    },
    146350: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return L;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("446674"),
        o = n("669491"),
        u = n("77078"),
        d = n("86621"),
        c = n("775377"),
        f = n("583232"),
        E = n("891964"),
        h = n("644091"),
        _ = n("845579"),
        C = n("52028"),
        I = n("381546"),
        S = n("304121"),
        m = n("599110"),
        p = n("158998"),
        T = n("49111"),
        g = n("782340"),
        A = n("502587");
      function N(e) {
        let { status: t, description: n, focused: s } = e;
        return (0, a.jsxs)("div", {
          className: A.statusItem,
          children: [
            (0, a.jsx)(u.Status, {
              status: t,
              className: A.icon,
              size: 10,
              color: s ? "currentColor" : void 0,
            }),
            (0, a.jsx)("div", {
              className: A.status,
              children: (0, p.humanizeStatus)(t),
            }),
            null != n &&
              (0, a.jsx)("div", { className: A.description, children: n }),
          ],
        });
      }
      function R(e) {
        let { customStatus: t } = e,
          n = e => {
            e.stopPropagation(), _.CustomStatusSetting.updateSetting(void 0);
          };
        return null != t
          ? (0, a.jsx)("div", {
              "aria-label":
                g.default.Messages.CUSTOM_STATUS_EDIT_CUSTOM_STATUS_PLACEHOLDER,
              children: (0, a.jsx)(c.default, {
                className:
                  null != t.emoji
                    ? A.customStatusWithEmoji
                    : A.customStatusItem,
                activity: t,
                emojiClassName: A.customEmoji,
                textClassName: A.customText,
                placeholderText:
                  g.default.Messages
                    .CUSTOM_STATUS_EDIT_CUSTOM_STATUS_PLACEHOLDER,
                children: (0, a.jsx)(u.Tooltip, {
                  text: g.default.Messages.CUSTOM_STATUS_CLEAR_CUSTOM_STATUS,
                  children: e =>
                    (0, a.jsx)(u.Button, {
                      ...e,
                      className: A.clearStatusButton,
                      onClick: n,
                      look: u.Button.Looks.BLANK,
                      size: u.Button.Sizes.NONE,
                      tabIndex: -1,
                      "aria-hidden": !0,
                      children: (0, a.jsx)(I.default, {
                        className: A.clearStatusIcon,
                      }),
                    }),
                }),
              }),
            })
          : (0, a.jsxs)("div", {
              className: i(A.statusItem, A.customStatusContentIcon),
              "aria-label": g.default.Messages.CUSTOM_STATUS_SET_CUSTOM_STATUS,
              children: [
                (0, a.jsx)("div", { className: A.customEmojiPlaceholder }),
                (0, a.jsx)("div", {
                  className: A.status,
                  children: g.default.Messages.CUSTOM_STATUS_SET_CUSTOM_STATUS,
                }),
              ],
            });
      }
      function O(e) {
        let { focused: t } = e;
        return (0, a.jsxs)("div", {
          className: i(
            A.statusItem,
            A.statusItemNoPadding,
            A.customStatusContentIcon,
            A.switchAccountsItem
          ),
          "aria-label": g.default.Messages.SWITCH_ACCOUNTS_MENU_ITEM_TITLE,
          children: [
            (0, a.jsx)(S.default, {
              width: 18,
              height: 18,
              className: A.switchAccountsIcon,
              color: t
                ? o.default.unsafe_rawColors.WHITE_500.css
                : "currentColor",
            }),
            (0, a.jsx)("div", {
              className: A.status,
              children: g.default.Messages.SWITCH_ACCOUNTS_MENU_ITEM_TITLE,
            }),
          ],
        });
      }
      let v = e => {
        let {
            customStatus: t,
            onClose: l,
            analyticsContext: i,
            onSelect: r,
          } = e,
          o = (0, h.useMultiAccountMenuItems)();
        s.useEffect(() => {
          m.default.track(T.AnalyticEvents.OPEN_POPOUT, {
            type: "User Status Menu",
            has_custom_status: null != t,
            location: i.location,
          });
        }, []);
        let d = e => {
          (0, f.default)(e, void 0, { location: i.location });
        };
        return (0, a.jsxs)(u.Menu, {
          navId: "status-picker",
          variant: "fixed",
          "aria-label": g.default.Messages.SET_STATUS,
          onClose: l,
          onSelect: r,
          children: [
            (0, a.jsx)(u.MenuItem, {
              id: "online",
              keepItemStyles: !0,
              render: e => {
                let { isFocused: t } = e;
                return (0, a.jsx)(N, {
                  status: u.StatusTypes.ONLINE,
                  focused: t,
                });
              },
              action: () => d(u.StatusTypes.ONLINE),
            }),
            (0, a.jsx)(u.MenuSeparator, {}),
            (0, a.jsx)(u.MenuItem, {
              id: "idle",
              keepItemStyles: !0,
              render: e => {
                let { isFocused: t } = e;
                return (0, a.jsx)(N, {
                  status: u.StatusTypes.IDLE,
                  focused: t,
                });
              },
              action: () => d(u.StatusTypes.IDLE),
            }),
            (0, a.jsx)(u.MenuItem, {
              id: "dnd",
              keepItemStyles: !0,
              render: e => {
                let { isFocused: t } = e;
                return (0, a.jsx)(N, {
                  status: u.StatusTypes.DND,
                  description: g.default.Messages.STATUS_DND_HELP,
                  focused: t,
                });
              },
              action: () => d(u.StatusTypes.DND),
            }),
            (0, a.jsx)(u.MenuItem, {
              id: "invisible",
              keepItemStyles: !0,
              render: e => {
                let { isFocused: t } = e;
                return (0, a.jsx)(N, {
                  status: u.StatusTypes.INVISIBLE,
                  description: g.default.Messages.STATUS_INVISIBLE_HELPER,
                  focused: t,
                });
              },
              action: () => d(u.StatusTypes.INVISIBLE),
            }),
            (0, a.jsx)(u.MenuSeparator, {}),
            (0, a.jsx)(u.MenuItem, {
              id: "custom-status",
              keepItemStyles: !0,
              render: () => (0, a.jsx)(R, { customStatus: t }),
              action: () => {
                (0, u.openModalLazy)(async () => {
                  let { default: e } = await n
                    .el("711438")
                    .then(n.bind(n, "711438"));
                  return t =>
                    (0, a.jsx)(e, { ...t, sourceAnalyticsContext: i });
                });
              },
            }),
            (0, a.jsx)(u.MenuSeparator, {}),
            (0, a.jsx)(
              u.MenuItem,
              {
                id: "switch-account",
                action: E.default,
                label: e => {
                  let { isFocused: t } = e;
                  return (0, a.jsx)(O, { focused: t });
                },
                children: o,
              },
              "switch-account"
            ),
          ],
        });
      };
      var L = (0, d.default)(e => {
        let t = (0, r.useStateFromStores)([C.default], () =>
            C.default.getCustomStatusActivity()
          ),
          n = _.StatusSetting.useSetting();
        return (0, a.jsx)(v, { ...e, customStatus: t, status: n });
      });
    },
    779020: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return ti;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("730290"),
        i = n("803182"),
        r = n("90915"),
        o = n("446674"),
        u = n("77078"),
        d = n("437822"),
        c = n("711115"),
        f = n("851387"),
        E = n("987317"),
        h = n("70614"),
        _ = n("79112"),
        C = n("206230"),
        I = n("951212"),
        S = n("827792"),
        m = n("670984"),
        p = n("141962"),
        T = n("581516"),
        g = n("182537"),
        A = n("943183"),
        N = n("271081"),
        R = n("298557"),
        O = n("176162"),
        v = n("590157"),
        L = n("734592"),
        M = n("156565"),
        P = n("366410"),
        D = n("927175"),
        y = n("957328"),
        x = n("616265"),
        b = n("72860"),
        U = n("697316"),
        G = n("587233"),
        j = n("683716"),
        w = n("34226"),
        k = n("132943"),
        F = n("319769"),
        B = n("506377"),
        H = n("318915"),
        V = n("619443"),
        Y = n("263901"),
        W = n("643130"),
        K = n("802896"),
        z = n("374021"),
        q = n("592407"),
        Q = n("468560"),
        Z = n("73968"),
        X = n("236199"),
        J = n("353983"),
        $ = n("940035"),
        ee = n("831773"),
        et = n("397039"),
        en = n("628805"),
        ea = n("165926"),
        es = n("946522"),
        el = n("880185"),
        ei = n("624043"),
        er = n("263065"),
        eo = n("204025"),
        eu = n("684641"),
        ed = n("176372"),
        ec = n("929479"),
        ef = n("630140"),
        eE = n("91990"),
        eh = n("359477"),
        e_ = n("1501"),
        eC = n("838857"),
        eI = n("393414"),
        eS = n("828309"),
        em = n("29322"),
        ep = n("208021"),
        eT = n("582713"),
        eg = n("949000"),
        eA = n("987285"),
        eN = n("686551"),
        eR = n("793237"),
        eO = n("120252"),
        ev = n("481395"),
        eL = n("401642"),
        eM = n("542789"),
        eP = n("84124"),
        eD = n("392011"),
        ey = n("777523"),
        ex = n("470885"),
        eb = n("868558"),
        eU = n("271938"),
        eG = n("982108"),
        ej = n("42203"),
        ew = n("476108"),
        ek = n("305961"),
        eF = n("778588"),
        eB = n("686470"),
        eH = n("18494"),
        eV = n("162771"),
        eY = n("167726"),
        eW = n("552067"),
        eK = n("866681"),
        ez = n("428773"),
        eq = n("535974"),
        eQ = n("43093"),
        eZ = n("773336"),
        eX = n("50885"),
        eJ = n("780009"),
        e$ = n("49111"),
        e0 = n("750947"),
        e1 = n("724210"),
        e2 = n("56235");
      n("72177"),
        n("392453"),
        n("366679"),
        n("848872"),
        n("189857"),
        n("144747"),
        n("698041"),
        n("552712"),
        n("367530"),
        n("429464"),
        n("205817"),
        n("767960"),
        n("26092"),
        n("790618"),
        n("424562"),
        n("900938"),
        n("492114"),
        n("161810"),
        n("901998"),
        n("684442"),
        n("799286"),
        n("470055"),
        n("140596");
      let e4 = !1;
      (0, A.initSessionHeartbeatScheduler)(),
        o.default.initialize(),
        eS.default.loadServer(),
        eZ.isPlatformEmbedded &&
          (eX.default.on("USER_SETTINGS_OPEN", () => {
            !eF.default.getLayers().includes(e$.Layers.USER_SETTINGS) &&
              _.default.open(e$.UserSettingsSections.ACCOUNT);
          }),
          eX.default.on("LAUNCH_APPLICATION", (e, t) => {
            let n = eB.default.getActiveLibraryApplication(t);
            eJ.playApplication(t, n, {
              analyticsParams: {
                location: {
                  page: e$.AnalyticsPages.DIRECT,
                  object: e$.AnalyticsObjects.WEB_URL,
                },
              },
            });
          }));
      let e9 = o.default.connectStores(
          [V.default, ew.default, eU.default],
          () => ({
            isConnected: V.default.isConnected(),
            defaultRoute: ew.default.defaultRoute,
            defaultRouteFallback: ew.default.fallbackRoute,
            token: eU.default.getToken(),
          })
        )(
          class extends s.Component {
            componentDidMount() {
              let { match: e } = this.props;
              null != e &&
                null != e.params.inviteCode &&
                (0, K.doGuildOnboardingForPostAuthInvite)({
                  code: e.params.inviteCode,
                });
            }
            render() {
              let {
                isConnected: e,
                defaultRoute: t,
                token: n,
                defaultRouteFallback: s,
              } = this.props;
              if (null == n)
                return (0, a.jsx)(r.Redirect, {
                  to: e$.Routes.DEFAULT_LOGGED_OUT,
                });
              if (e) {
                let e = ta(t);
                return null == e ||
                  ((e.params.guildId === e$.ME ||
                    null != ek.default.getGuild(e.params.guildId)) &&
                    null != ej.default.getChannel(e.params.channelId))
                  ? (0, a.jsx)(r.Redirect, { to: t })
                  : (0, a.jsx)(r.Redirect, { to: s });
              }
              return null;
            }
          }
        ),
        e7 = (0, v.makeAuthenticated)(M.default, null, { passProps: !1 }),
        e8 = (0, v.makeAuthenticated)(function () {
          return (0, a.jsx)(N.default, {});
        }),
        e3 = (0, v.makeAuthenticated)(function (e) {
          let { match: t } = e,
            { applicationId: n, section: s } = t.params,
            l = (0, Q.default)(e0.ApplicationDirectoryProfileSections, s);
          return (0, a.jsx)(R.default, { applicationId: n, initialSection: l });
        }),
        e6 = (0, v.makeAuthenticated)(function () {
          return (0, a.jsx)(O.default, {});
        }),
        e5 = [
          e$.Routes.GUILD_BOOSTING_MARKETING(":guildId"),
          ...Array.from(e1.StaticChannelRoutes).map(e =>
            e$.Routes.CHANNEL(":guildId", e)
          ),
        ];
      function te(e) {
        let {
          guildId: t,
          channelId: n = null,
          messageId: a = null,
          threadId: s = null,
        } = e.params;
        return {
          guildId: null != t ? t : e$.ME,
          channelId: n,
          messageId: a,
          threadId: s,
        };
      }
      let tt = [
          {
            path: [e$.Routes.APPLICATION_DIRECTORY_SEARCH],
            render: e6,
            isSessionRequired: !0,
          },
          {
            path: [
              e$.Routes.APPLICATION_DIRECTORY_PROFILE(
                ":applicationId",
                ":section?"
              ),
            ],
            render: e3,
            isSessionRequired: !0,
          },
          {
            path: [e$.Routes.APPLICATION_DIRECTORY],
            render: e8,
            isSessionRequired: !0,
          },
        ],
        tn = [
          {
            path: [
              e$.Routes.APP_WITH_INVITE_AND_GUILD_ONBOARDING(":inviteCode"),
            ],
            render(e) {
              let { match: t } = e;
              return (0, a.jsx)(e9, { match: t });
            },
            isSessionRequired: !0,
          },
          {
            path: [e$.Routes.APP],
            render: () => (0, a.jsx)(e9, {}),
            isSessionRequired: !0,
          },
          {
            path: [e$.Routes.USERS(":id")],
            render: function (e) {
              let { match: t, location: n } = e,
                { friend_token: s } = (0, l.parse)(n.search),
                { id: i } = t.params;
              return (
                (0, Y.addPostConnectionCallback)(() =>
                  (0, eL.openUserProfileModal)({
                    userId: i,
                    guildId: e$.ME,
                    friendToken: s,
                    analyticsLocation: {
                      section: e$.AnalyticsSections.DIRECT_ROUTE_ACCESS,
                    },
                  })
                ),
                (0, a.jsx)(r.Redirect, { to: ew.default.defaultRoute })
              );
            },
          },
          {
            path: [e$.Routes.APPLICATION_LIBRARY_ACTION(":gameId", ":action")],
            render: function (e) {
              let { match: t } = e,
                { gameId: n, action: s } = t.params;
              return (
                eq.default.whenInitialized(() => {
                  eB.default.whenInitialized(() => {
                    switch (s) {
                      case "launch": {
                        let e = eB.default.getActiveLibraryApplication(n);
                        if (null == e) return;
                        eJ.playApplication(e.id, e, {
                          analyticsParams: {
                            location: {
                              page: e$.AnalyticsPages.DIRECT,
                              object: e$.AnalyticsObjects.WEB_URL,
                            },
                          },
                        });
                        break;
                      }
                      case "test-mode":
                        eY.default.whenInitialized(() =>
                          h.authorizeAndSetTestModeApplication(n)
                        );
                        break;
                      case "uninstall": {
                        let e = eB.default.getActiveLibraryApplication(n);
                        if (null == e) return;
                        (0, c.uninstallBranchPrompt)(
                          e.id,
                          e.branchId,
                          e$.AnalyticsLocations.URI_SCHEME
                        );
                      }
                    }
                  });
                }),
                (0, a.jsx)(r.Redirect, { to: e$.Routes.APPLICATION_LIBRARY })
              );
            },
          },
          {
            path: [e$.Routes.GUILD_CREATE],
            render: function () {
              return (
                (0, Y.addPostConnectionCallback)(() =>
                  x.default.openCreateGuildModal({ location: "External link" })
                ),
                (0, a.jsx)(r.Redirect, { to: ew.default.defaultRoute })
              );
            },
          },
          {
            path: [e$.Routes.PICK_GUILD_SETTINGS(":section?", ":subsection?")],
            render: function (e) {
              let { match: t } = e,
                { section: n, subsection: s } = t.params,
                i = (0, l.parse)(location.search),
                o = i.feature;
              return (
                (0, Y.addPostConnectionCallback)(() =>
                  Z.openGuildSettingsPickerModal({
                    section: (0, Q.default)(e$.GuildSettingsSections, n),
                    subsection: (0, Q.default)(e$.GuildSettingsSubsections, s),
                    feature: o,
                  })
                ),
                (0, a.jsx)(r.Redirect, { to: ew.default.defaultRoute })
              );
            },
            isSessionRequired: !0,
          },
          {
            path: [e$.Routes.SETTINGS(":section", ":subsection?")],
            render: function (e) {
              let { location: t } = e,
                n = (0, ey.default)(t.pathname);
              return (
                null != n &&
                  (0, Y.addPostConnectionCallback)(() =>
                    _.default.open(n.section, n.subsection, {
                      openWithoutBackstack: !1,
                      impressionSource: n.source,
                    })
                  ),
                (0, a.jsx)(r.Redirect, { to: ew.default.defaultRoute })
              );
            },
            isSessionRequired: !0,
          },
          {
            path: [e$.Routes.USER_GUILD_NOTIFICATION_SETTINGS(":guildId")],
            render: function (e) {
              let { match: t } = e,
                { guildId: s } = t.params;
              return (
                (0, Y.addPostConnectionCallback)(() => {
                  (0, u.openModalLazy)(async () => {
                    let { default: e } = await n
                      .el("747593")
                      .then(n.bind(n, "747593"));
                    return t => (0, a.jsx)(e, { ...t, guildId: s });
                  });
                }),
                (0, a.jsx)(r.Redirect, { to: e$.Routes.CHANNEL(s) })
              );
            },
            isSessionRequired: !0,
          },
          {
            path: [e$.Routes.APPLICATION_LIBRARY_INVENTORY],
            render: function () {
              return (
                (0, Y.addPostConnectionCallback)(() =>
                  _.default.open(e$.UserSettingsSections.INVENTORY)
                ),
                (0, a.jsx)(r.Redirect, { to: ew.default.defaultRoute })
              );
            },
            isSessionRequired: !0,
          },
          {
            path: [e$.Routes.WELCOME(":guildId?", ":channelId?")],
            render: function (e) {
              let { match: t } = e,
                { guildId: n, channelId: s } = t.params;
              (0, ea.setNewUser)(e2.NewUserTypes.MARKETING_UNCLAIMED);
              let l = e$.Routes.CHANNEL(n, s);
              return (0, a.jsx)(r.Redirect, { to: l });
            },
            isSessionRequired: !0,
          },
          {
            path: [e$.Routes.GUILD_EVENT_DETAILS(":guildId?", ":guildEventId")],
            render: function (e) {
              let { match: t } = e,
                { guildId: n, guildEventId: s } = t.params;
              return (
                (0, Y.addPostConnectionCallback)(() => {
                  (0, z.openGuildEventDetails)({ eventId: s });
                }),
                (0, a.jsx)(r.Redirect, { to: e$.Routes.CHANNEL(n) })
              );
            },
            isSessionRequired: !0,
          },
          {
            path: [
              e$.Routes.GUILD_SETTINGS(":guildId", ":section?", ":subsection?"),
            ],
            render: function (e) {
              let { match: t } = e,
                { guildId: n, section: s, subsection: l } = t.params;
              return (
                (0, Y.addPostConnectionCallback)(() => {
                  q.default.open(
                    n,
                    (0, Q.default)(e$.GuildSettingsSections, s),
                    void 0,
                    (0, Q.default)(e$.GuildSettingsSubsections, l)
                  );
                }),
                (0, a.jsx)(r.Redirect, { to: e$.Routes.CHANNEL(n) })
              );
            },
            isSessionRequired: !0,
            isChatRoute: !0,
          },
          {
            path: [
              e$.Routes.CHANNEL_THREAD_VIEW(
                ":guildId",
                ":channelId",
                ":threadId",
                ":messageId?"
              ),
              e$.Routes.CHANNEL(":guildId", ":channelId?", ":messageId?"),
              e$.Routes.ACTIVITY,
              e$.Routes.ACTIVITIES,
              e$.Routes.ACTIVITIES_HAPPENING_NOW,
              e$.Routes.ACTIVITY_DETAILS(":applicationId"),
              e$.Routes.APPLICATION_LIBRARY,
              e$.Routes.APPLICATION_STORE,
              e$.Routes.MESSAGE_REQUESTS,
              e$.Routes.COLLECTIBLES_SHOP,
              e$.Routes.COLLECTIBLES_SHOP_FULLSCREEN,
              e$.Routes.COLLECTIBLES_SHOP_PRODUCT_DETAIL(":skuId"),
              e$.Routes.GUILD_DISCOVERY,
              e$.Routes.GUILD_MEMBER_VERIFICATION(":guildId", ":inviteCode?"),
              e$.Routes.GUILD_MEMBER_VERIFICATION_FOR_HUB(
                ":guildId",
                ":inviteCode?"
              ),
              e$.Routes.GUILD_BOOSTING_MARKETING(":guildId"),
              e$.Routes.FEATURE(":feature"),
              e$.Routes.FAMILY_CENTER,
            ],
            render: e7,
            isSessionRequired: !0,
            isChatRoute: !0,
          },
          ...tt,
        ];
      function ta(e) {
        for (let { path: t, isChatRoute: n } of tn) {
          if (!n) continue;
          let a = (0, i.matchPath)(e, { path: t });
          if (null != a) return a;
        }
        return null;
      }
      function ts(e) {
        let { channelId: t, guildId: n, pathname: a } = e;
        if (!V.default.isConnected()) return;
        let { location: s } = (0, eI.getHistory)();
        s.pathname === a &&
          (null == ej.default.getChannel(t)
            ? (0, eI.replaceWith)(e$.Routes.CHANNEL(n))
            : (0, eI.replaceWith)(a));
      }
      class tl extends s.PureComponent {
        componentDidMount() {
          P.default.initialize(),
            eX.default.setZoomFactor(C.default.zoom),
            eS.default.init(),
            L.default.initialize(),
            eu.default.initialize(),
            k.default.initialize(),
            eb.default.initialize(),
            F.default.initialize(),
            ec.default.initialize(),
            $.default.initialize(),
            I.default.init(),
            H.default.init(),
            B.default.init(),
            es.default.initialize(),
            g.default.initialize(),
            j.default.initialize(),
            ef.default.initialize(),
            T.default.initialize(),
            ex.default.initialize(),
            eo.default.initialize(),
            p.default.initialize(),
            W.default.init(),
            X.default.init(),
            ez.default.init(),
            eQ.default.init(),
            m.default.initialize(),
            ev.default.init(),
            eK.default.init(),
            eW.default.init(),
            eP.default.init(),
            eA.default.initialize(),
            eN.default.initialize(),
            eM.default.initialize(),
            eD.default.init(),
            G.default.initialize(),
            S.default.initialize(),
            em.default.initialize(),
            eg.default.initialize(),
            ei.default.initialize(),
            el.default.initialize(),
            er.default.initialize(),
            D.default.initialize(),
            eE.default.initialize(),
            J.default.init({
              hasModalOpen: u.hasAnyModalOpen,
              openModal: () =>
                (0, u.openModalLazy)(async () => {
                  let { default: e } = await n
                    .el("927475")
                    .then(n.bind(n, "927475"));
                  return t => (0, a.jsx)(e, { ...t });
                }),
            }),
            U.default.init(),
            ee.default.initialize(),
            eh.default.initialize(),
            ed.default.initialize(),
            b.default.initialize(),
            (this.rewriterUnlisten = e_.default.addRouteRewriter(
              this.ensureChannelMatchesGuild
            )),
            (this.historyUnlisten = e_.default.addRouteChangeListener(
              this.handleHistoryChange
            ));
        }
        componentWillUnmount() {
          P.default.terminate(),
            eb.default.terminate(),
            ec.default.terminate(),
            eu.default.terminate(),
            L.default.terminate(),
            T.default.terminate(),
            ex.default.terminate(),
            p.default.terminate(),
            ef.default.terminate(),
            eo.default.terminate(),
            eM.default.terminate(),
            m.default.terminate(),
            G.default.terminate(),
            ee.default.terminate(),
            S.default.terminate(),
            eh.default.terminate(),
            em.default.terminate(),
            eg.default.terminate(),
            ei.default.terminate(),
            el.default.terminate(),
            er.default.terminate(),
            D.default.terminate(),
            ed.default.terminate(),
            b.default.terminate(),
            w.default.terminate(),
            this.historyUnlisten(),
            this.rewriterUnlisten();
        }
        handleHistoryChange(e) {
          let { pathname: t, search: n } = e;
          !(function (e) {
            if (V.default.isConnected() || V.default.isTryingToConnect())
              return;
            let t = eU.default.getToken();
            if (null == t) return;
            let n = (function (e) {
              for (let { path: t, isSessionRequired: n } of tn) {
                if (!n) continue;
                let a = (0, i.matchPath)(e, { path: t });
                if (null != a) return a;
              }
              return null;
            })(e);
            null != n && d.default.startSession(t);
          })(t),
            !(function (e, t) {
              let n = ta(e);
              if (null == n) return;
              let {
                  guildId: a,
                  channelId: s,
                  messageId: r,
                  threadId: o,
                } = te(n),
                u = (0, eC.isValidGuildId)(a),
                d = (0, eC.isValidChannelId)(s),
                c = (0, eC.isValidChannelId)(o),
                h = eV.default.getGuildId(),
                _ = h !== a;
              if ((u && _ && f.default.selectGuild(a), u && d)) {
                let n = eH.default.getChannelId(h),
                  i = n !== s;
                if (!e4 || _ || i || null != r) {
                  (e4 = !0),
                    E.default.selectChannel({
                      guildId: a,
                      channelId: s,
                      messageId: r,
                    });
                  let { summaryId: e } = (0, l.parse)(t);
                  null != e && eR.default.setSelectedSummary(s, e);
                }
                if (null != o && c) {
                  let e = eG.default.getCurrentSidebarChannelId(n),
                    t = e !== o,
                    l = null != eG.default.getGuildSidebarState(a);
                  if (null != s && null != o && t) {
                    if (l) (0, eI.replaceWith)(e$.Routes.CHANNEL(a, o, r));
                    else {
                      let e = { type: eT.SidebarOpenDetailsType.THREAD };
                      null != r && (e.initialMessageId = r),
                        ep.default.openThreadAsSidebar({
                          guildId: a,
                          baseChannelId: s,
                          channelId: o,
                          details: e,
                        });
                    }
                  }
                } else null != s && !i && ep.default.closeChannelSidebar(s);
                let u = en.default.getIsOpen();
                if (s === e1.StaticChannelRoute.ROLE_SUBSCRIPTIONS)
                  et.default.closeSidebar();
                else if (_ && u) {
                  let t = null == h && a === e$.ME,
                    n = e === e$.Routes.GUILD_DISCOVERY;
                  t || n ? et.default.closeSidebar() : et.default.openSidebar();
                } else ((i && u) || (!_ && !i)) && et.default.closeSidebar();
              } else {
                var C;
                if (
                  ((C = e),
                  !e5.some(e => {
                    var t;
                    return (
                      (null === (t = (0, i.matchPath)(C, e)) || void 0 === t
                        ? void 0
                        : t.isExact) === !0
                    );
                  }))
                )
                  (0, eI.replaceWith)(ew.default.fallbackRoute);
              }
            })(t, n);
        }
        ensureChannelMatchesGuild(e) {
          if (!V.default.isConnected()) return null;
          let { pathname: t } = e,
            n = ta(t);
          if (null == n) return null;
          let { guildId: a, channelId: s, threadId: l } = te(n),
            i = (0, eC.isValidGuildId)(a) && a !== e$.ME && a !== e$.FAVORITES,
            r =
              null != s &&
              (0, eC.isValidChannelId)(s) &&
              !(0, e1.isStaticChannelRoute)(s);
          if (r && i) {
            let n = ej.default.getChannel(s);
            if (null == n)
              eO.default
                .loadThread(s)
                .then(() => ts({ channelId: s, guildId: a, pathname: t }));
            else if (n.guild_id !== a)
              return { path: e$.Routes.CHANNEL(a), state: e.state };
            if (null != l) {
              let n =
                (0, eC.isValidChannelId)(l) && !(0, e1.isStaticChannelRoute)(s);
              if (!n) return null;
              let i = ej.default.getChannel(l);
              if (null == i)
                eO.default
                  .loadThread(l)
                  .then(() => ts({ channelId: l, guildId: a, pathname: t }));
              else if ((null == i ? void 0 : i.parent_id) !== s)
                return (
                  ep.default.closeChannelSidebar(s),
                  { path: e$.Routes.CHANNEL(a, s), state: e.state }
                );
            }
          }
          return null;
        }
        render() {
          return (0, a.jsxs)(s.Fragment, {
            children: [
              (0, a.jsxs)(r.Switch, {
                children: [
                  (0, a.jsx)(r.Redirect, {
                    exact: !0,
                    from: "/channels",
                    to: "/",
                  }),
                  tn.map(e => {
                    let { path: t, render: n } = e;
                    return (0, a.jsx)(r.Route, { path: t, render: n }, t[0]);
                  }),
                  (0, a.jsx)(r.Redirect, { to: "/" }),
                ],
              }),
              (0, a.jsx)(y.default, {}),
            ],
          });
        }
        constructor(...e) {
          super(...e),
            (this.historyUnlisten = () => {}),
            (this.rewriterUnlisten = () => {});
        }
      }
      var ti = tl;
    },
    543155: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        }),
        n("70102"),
        n("222007");
      var a,
        s,
        l,
        i,
        r,
        o,
        u = n("37983"),
        d = n("884691"),
        c = n("49111");
      let f = (e, t) => {
        let { x: n, y: a } = e,
          { x: s, y: l } = t;
        return Math.pow(n - s, 2) + Math.pow(a - l, 2);
      };
      function E(e, t, n, a, s) {
        let { top: l, bottom: i, left: r, right: o } = e;
        if (
          (null == l && null == i
            ? ((l = 0), (i = n - s))
            : null == l && null != i
              ? (l = n - (i + s))
              : null != l && (i = n - (l + s)),
          null == r && null == o
            ? ((r = 0), (o = t - a))
            : null == r && null != o
              ? (r = t - (o + a))
              : null == o && null != r && (o = t - (r + a)),
          null == l || null == i || null == r || null == o)
        )
          throw Error(
            "Logically this can never happen based on our if/else statements"
          );
        return { top: l, left: r, bottom: i, right: o };
      }
      ((r = s || (s = {}))[(r.DISABLED = 0)] = "DISABLED"),
        (r[(r.DEFAULT = 1)] = "DEFAULT"),
        (r[(r.OFFSET = 2)] = "OFFSET"),
        ((o = l || (l = {})).TOP = "TOP"),
        (o.BOTTOM = "BOTTOM"),
        (o.RIGHT = "RIGHT"),
        (o.LEFT = "LEFT");
      function h(e) {
        return [
          null == e.bottom ? "TOP" : "BOTTOM",
          null == e.right ? "LEFT" : "RIGHT",
        ];
      }
      function _(e) {
        let { top: t, left: n, bottom: a, right: s } = e;
        return (
          0 === t || t <= a ? (a = null) : (t = null),
          0 === n || n <= s ? (s = null) : (n = null),
          { top: t, left: n, bottom: a, right: s }
        );
      }
      function C(e) {
        let { top: t, left: n, bottom: a, right: s } = e;
        return (
          a < 0 && ((t += a), (a = 0)),
          t < 0 && ((a += t), (t = 0)),
          s < 0 && ((n += s), (s = 0)),
          n < 0 && ((s += n), (n = 0)),
          { top: t, left: n, bottom: a, right: s }
        );
      }
      function I(e) {
        return null != e ? "".concat(e, "px") : "auto";
      }
      ((a = class extends d.PureComponent {
        componentDidMount() {
          this.checkBounds(), this.setDOMPositions(this.position);
        }
        componentDidUpdate(e, t) {
          let {
              state: {
                verticalOrientation: n,
                horizontalOrientation: a,
                atTopEdge: s,
              },
              props: { maxX: l, maxY: i, onRelocated: r, snapOrientation: o },
            } = this,
            u =
              e.maxX !== l ||
              e.maxY !== i ||
              e.onRelocated !== r ||
              e.snapOrientation !== o ||
              t.verticalOrientation !== n ||
              t.horizontalOrientation !== a ||
              t.atTopEdge !== s;
          u && this.checkBounds();
        }
        componentWillUnmount() {
          window.removeEventListener("mousemove", this.handleMouseMove),
            window.removeEventListener("mouseup", this.handleMouseUp);
        }
        setDOMPositions(e) {
          let { top: t, left: n, bottom: a, right: s } = e,
            {
              draggableRef: { current: l },
            } = this;
          (this.position = { top: t, left: n, bottom: a, right: s }),
            null != l &&
              ((l.style.top = I(t)),
              (l.style.bottom = I(a)),
              (l.style.left = I(n)),
              (l.style.right = I(s)));
        }
        render() {
          let { children: e, className: t } = this.props,
            {
              dragging: n,
              verticalOrientation: a,
              horizontalOrientation: s,
              atTopEdge: l,
            } = this.state,
            { top: i, left: r, right: o, bottom: c } = this.position;
          return (0, u.jsx)("div", {
            ref: this.draggableRef,
            className: t,
            onMouseDown: this.handleMouseDown,
            style: {
              pointerEvents: n ? "none" : "auto",
              position: "absolute",
              top: i,
              left: r,
              bottom: c,
              right: o,
            },
            children: d.cloneElement(d.Children.only(e), {
              flipped: "RIGHT" === s,
              verticalFlipped: "BOTTOM" === a,
              checkBounds: this.checkBounds,
              atTopEdge: l,
            }),
          });
        }
        constructor(e) {
          super(e),
            (this.draggableRef = d.createRef()),
            (this._dragStart = { x: 0, y: 0 }),
            (this.handleMouseDown = e => {
              let { top: t, left: n, bottom: a, right: s } = this.position,
                { dragAnywhere: l, selector: i, maxX: r, maxY: o } = this.props,
                { target: u } = e,
                { current: d } = this.draggableRef;
              if (
                null != d &&
                e.button === c.MouseButtons.PRIMARY &&
                (l ||
                  (null != u && null != i && "" !== i && null != u.closest(i)))
              ) {
                let l = E(
                    { top: t, left: n, bottom: a, right: s },
                    r,
                    o,
                    d.clientWidth,
                    d.clientHeight
                  ),
                  { x: i, y: u } = (function (e) {
                    let { top: t, left: n } = e;
                    return { x: n, y: t };
                  })(l);
                (this._dragStart = { x: e.clientX, y: e.clientY }),
                  (this._offsetX = e.clientX - i),
                  (this._offsetY = e.clientY - u),
                  window.addEventListener("mousemove", this.handleMouseMove),
                  window.addEventListener("mouseup", this.handleMouseUp);
              }
            }),
            (this.handleMouseMove = e => {
              e.preventDefault();
              let { clientX: t, clientY: n } = e,
                { current: a } = this.draggableRef,
                {
                  maxX: s,
                  maxY: l,
                  flipVertical: i,
                  flipHorizontal: r,
                  onDragStart: o,
                  onDrag: u,
                  onFlip: d,
                  snapOrientation: c,
                } = this.props,
                {
                  dragging: I,
                  dragging: S,
                  verticalOrientation: m,
                  horizontalOrientation: p,
                } = this.state,
                T = !1;
              if (null == a || (!I && 9 > f(this._dragStart, { x: t, y: n })))
                return;
              I = !0;
              let { clientWidth: g, clientHeight: A } = a,
                N = n - this._offsetY,
                R = t - this._offsetX,
                O = C(E({ top: N, left: R }, s, l, g, A));
              if (c) {
                O = _(O);
                let e = h(O);
                (m = e[0]), (p = e[1]);
              } else O = { top: O.top, left: O.left };
              2 === r &&
                p !== this.state.horizontalOrientation &&
                ((this._offsetX = g - this._offsetX), (T = !0)),
                2 === i &&
                  m !== this.state.verticalOrientation &&
                  ((this._offsetY = A - this._offsetY), (T = !0)),
                this.setDOMPositions(O),
                !S && (null == o || o(O, a)),
                null == u || u(O, a),
                T && (null == d || d([m, p])),
                this.setState({
                  dragging: I,
                  verticalOrientation: m,
                  horizontalOrientation: p,
                  atTopEdge: 0 === O.top,
                });
            }),
            (this.handleMouseUp = () => {
              window.removeEventListener("mousemove", this.handleMouseMove),
                window.removeEventListener("mouseup", this.handleMouseUp),
                this.state.dragging &&
                  this.setState({ dragging: !1 }, () => {
                    let { onDragEnd: e } = this.props,
                      { current: t } = this.draggableRef;
                    null != t && null != e && e(this.position, t);
                  });
            }),
            (this._checkBoundsRAF = null),
            (this.checkBounds = () => {
              null != this._checkBoundsRAF &&
                cancelAnimationFrame(this._checkBoundsRAF),
                (this._checkBoundsRAF = requestAnimationFrame(
                  this._performCheckBounds
                ));
            }),
            (this._performCheckBounds = () => {
              let e;
              let {
                  position: t,
                  state: n,
                  draggableRef: { current: a },
                  props: {
                    maxX: s,
                    maxY: l,
                    onRelocated: i,
                    snapOrientation: r,
                  },
                } = this,
                { verticalOrientation: o, horizontalOrientation: u } =
                  this.state;
              if (null == a) return;
              let { clientHeight: d, clientWidth: c } = a,
                f = E(t, s, l, c, d);
              if (((f = C(f)), r)) {
                e = _(f);
                let t = h(e);
                (o = t[0]), (u = t[1]);
              } else
                e = { top: f.top, left: f.left, right: null, bottom: null };
              if (
                t.left === e.left &&
                t.right === e.right &&
                t.top === e.top &&
                t.bottom === e.bottom
              )
                return;
              null == i || i(e, a), this.setDOMPositions(e);
              let I = 0 === e.top;
              (o !== n.verticalOrientation ||
                u !== n.horizontalOrientation ||
                I !== n.atTopEdge) &&
                this.setState({
                  verticalOrientation: o,
                  horizontalOrientation: u,
                  atTopEdge: I,
                });
            });
          let [t, n] = h(e.initialPosition);
          (this.position = (function (e) {
            let { top: t, left: n, bottom: a, right: s } = e;
            return (
              null == n && null == s && (n = 0),
              null != n && null != s && (s = null),
              null == t && null == a && (t = 0),
              null != t && null != a && (a = null),
              { top: t, left: n, bottom: a, right: s }
            );
          })(e.initialPosition)),
            (this.state = {
              dragging: !1,
              verticalOrientation: t,
              horizontalOrientation: n,
              atTopEdge: 0 === this.position.top,
            });
        }
      }).FlipTypes = s),
        (a.defaultProps = {
          snapOrientation: !1,
          maxX: 0,
          maxY: 0,
          flipVertical: 0,
          flipHorizontal: 0,
          dragAnywhere: !1,
        }),
        (i = a);
    },
    875358: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return T;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("446674"),
        o = n("77078"),
        u = n("913144"),
        d = n("259083"),
        c = n("778588"),
        f = n("577427"),
        E = n("946749"),
        h = n("810567"),
        _ = n("791776"),
        C = n("780009"),
        I = n("49111"),
        S = n("782340"),
        m = n("960245");
      class p extends s.Component {
        componentDidMount() {
          document.addEventListener("keydown", this.handleKeyDown);
        }
        componentWillUnmount() {
          u.default.wait(() => d.updateActiveRowKey(null)),
            document.removeEventListener("keydown", this.handleKeyDown);
        }
        reset() {
          d.updateActiveRowKey(null), d.updateLibraryFilter("");
        }
        focusInput() {
          let { searchBarRef: e } = this;
          null != e && e.focus();
        }
        updateActiveRow(e) {
          let { applicationViewItems: t, activeRowKey: n } = this.props,
            a = t.findIndex(e => e.key === n),
            s = 0;
          a >= 0 && (s = (a + e) % t.length) < 0 && (s = t.length - 1);
          let l = t[s];
          d.updateActiveRowKey(null != l ? l.key : null, !0);
        }
        render() {
          let { filterQuery: e } = this.props,
            { focused: t } = this.state;
          return (0, a.jsx)("div", {
            className: i({ [m.libraryFilter]: !0, [m.focused]: t }),
            children: (0, a.jsx)(h.default, {
              className: m.searchBar,
              ref: this.setRef,
              onChange: d.updateLibraryFilter,
              onFocus: () => this.setState({ focused: !0 }),
              onBlur: () => this.setState({ focused: !1 }),
              name: "filter",
              onClear: () => {
                this.reset(), this.focusInput();
              },
              maxLength: 100,
              query: e,
              placeholder:
                S.default.Messages.APPLICATION_LIBRARY_FILTER_PLACEHOLDER,
            }),
          });
        }
        constructor(...e) {
          super(...e),
            (this.searchBarRef = null),
            (this.state = { focused: !1 }),
            (this.setRef = e => {
              this.searchBarRef = e;
            }),
            (this.handleKeyDown = e => {
              var t;
              let {
                  activeRowKey: n,
                  hasModalOpen: a,
                  applicationViewItems: s,
                } = this.props,
                { searchBarRef: l } = this;
              if (a || e.ctrlKey || e.altKey || e.metaKey || null == l) return;
              let i =
                null === (t = (0, _.eventOwnerDocument)(e)) || void 0 === t
                  ? void 0
                  : t.activeElement;
              if (!(i !== l.inputRef.current && (0, _.isInputLikeElement)(i)))
                switch (e.which) {
                  case I.KeyboardKeys.ESCAPE:
                    e.target !== l.inputRef.current
                      ? this.reset()
                      : null != l.inputRef.current && l.blur();
                    break;
                  case I.KeyboardKeys.ENTER:
                    if (null != n) {
                      e.preventDefault();
                      let t = s.find(e => e.key === n);
                      if (null == t) return;
                      let a = t.libraryApplication;
                      C.performDefaultLibraryApplicationAction(a, {
                        analyticsParams: {
                          source: I.AnalyticsLocations.APPLICATION_LIBRARY,
                          location: {
                            page: I.AnalyticsPages.LIBRARY,
                            section:
                              I.AnalyticsSections.LIBRARY_APPLICATION_LIST,
                            object: I.AnalyticsObjects.BUTTON_CTA,
                          },
                        },
                      });
                    }
                    break;
                  case I.KeyboardKeys.ARROW_DOWN:
                  case I.KeyboardKeys.ARROW_UP:
                    e.preventDefault(),
                      e.stopPropagation(),
                      this.updateActiveRow(
                        e.which === I.KeyboardKeys.ARROW_DOWN ? 1 : -1
                      );
                    break;
                  default:
                    null != l.inputRef.current &&
                      e.target !== l.inputRef.current &&
                      l.focus();
                }
            });
        }
      }
      function T() {
        let e = (0, r.useStateFromStores)([c.default], () =>
            c.default.hasLayers()
          ),
          t = (0, o.useModalsStore)(o.hasAnyModalOpenSelector);
        return (0, a.jsx)(p, {
          activeRowKey: (0, r.useStateFromStores)(
            [E.default],
            () => E.default.activeRowKey
          ),
          hasModalOpen: t || e,
          filterQuery: (0, r.useStateFromStores)(
            [f.default],
            () => f.default.applicationFilterQuery
          ),
          applicationViewItems: (0, r.useStateFromStores)(
            [f.default],
            () => f.default.sortedFilteredLibraryApplicationViewItems
          ),
        });
      }
    },
    737295: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("77078"),
        i = n("539938"),
        r = n("393414"),
        o = n("880013"),
        u = n("599110"),
        d = n("602043"),
        c = n("49111"),
        f = n("782340"),
        E = n("178216");
      let h = (0, d.isSupportedPlatform)() || !1;
      var _ = s.memo(function (e) {
        let { currentRoute: t, renderToolbar: n } = e,
          d = s.useContext(u.AnalyticsContext),
          _ = h || t === c.Routes.APPLICATION_LIBRARY_SETTINGS;
        return (0, a.jsxs)(i.default, {
          className: E.libraryHeader,
          toolbar: null == n ? void 0 : n(),
          children: [
            (0, a.jsx)(i.default.Icon, { icon: o.default, "aria-hidden": !0 }),
            (0, a.jsx)(i.default.Title, {
              children: f.default.Messages.LIBRARY,
            }),
            (0, a.jsx)(i.default.Divider, {}),
            (0, a.jsxs)(l.TabBar, {
              type: "top-pill",
              selectedItem: t,
              onItemSelect: function (e) {
                e !== t &&
                  (0, r.transitionTo)(e, {
                    state: {
                      analyticsSource: {
                        ...d.location,
                        section: c.AnalyticsSections.TABS,
                        object: c.AnalyticsObjects.NAVIGATION_LINK,
                      },
                    },
                  });
              },
              children: [
                (0, a.jsx)(l.TabBar.Item, {
                  id: c.Routes.APPLICATION_LIBRARY,
                  children: f.default.Messages.APPLICATION_LIBRARY_MY_GAMES,
                }),
                _
                  ? (0, a.jsx)(l.TabBar.Item, {
                      id: c.Routes.APPLICATION_LIBRARY_SETTINGS,
                      children: f.default.Messages.SETTINGS,
                    })
                  : null,
              ],
            }),
          ],
        });
      });
    },
    758997: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return C;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("90915"),
        i = n("901582"),
        r = n("73749"),
        o = n("69927"),
        u = n("970366"),
        d = n("661804"),
        c = n("928056"),
        f = n("49111"),
        E = n("782340"),
        h = n("252212");
      function _() {
        return (0, a.jsxs)(l.Switch, {
          children: [
            (0, a.jsx)(r.default, {
              path: f.Routes.APPLICATION_LIBRARY_SETTINGS,
              exact: !0,
              children: (0, a.jsxs)(i.default, {
                page: f.AnalyticsPages.LIBRARY_SETTINGS,
                root: !0,
                children: [
                  (0, a.jsx)(o.AppPageTitle, {
                    subsection: E.default.Messages.SETTINGS,
                  }),
                  (0, a.jsx)(c.default, {}),
                ],
              }),
            }),
            (0, a.jsx)(r.default, {
              path: f.Routes.APPLICATION_LIBRARY,
              children: (0, a.jsxs)(i.default, {
                page: f.AnalyticsPages.LIBRARY,
                root: !0,
                children: [
                  (0, a.jsx)(o.AppPageTitle, {
                    subsection: E.default.Messages.APPLICATION_LIBRARY_MY_GAMES,
                  }),
                  (0, a.jsx)(d.default, {}),
                ],
              }),
            }),
          ],
        });
      }
      var C = s.memo(function () {
        return (
          s.useEffect(() => {
            (0, u.trackAppUIViewed)("application_library");
          }, []),
          (0, a.jsxs)("div", {
            className: h.container,
            children: [
              (0, a.jsx)(o.AppPageTitle, {
                location: E.default.Messages.LIBRARY,
              }),
              (0, a.jsx)(_, {}),
            ],
          })
        );
      });
    },
    950395: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return S;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("446674"),
        i = n("862337"),
        r = n("77078"),
        o = n("148813"),
        u = n("530311"),
        d = n("858722"),
        c = n("220978"),
        f = n("581454"),
        E = n("49111"),
        h = n("782340");
      let _ = new Set([
          E.CloudSyncStateTypes.PUSHING,
          E.CloudSyncStateTypes.PULLING,
        ]),
        C = Object.freeze({
          [E.CloudSyncStateTypes.DONE]: u.default,
          [E.CloudSyncStateTypes.PLANNING]: u.default,
          [E.CloudSyncStateTypes.PREPARING]: u.default,
          [E.CloudSyncStateTypes.PUSHING]: f.default,
          [E.CloudSyncStateTypes.PULLING]: c.default,
          [E.CloudSyncStateTypes.CONFLICT]: u.default,
          [E.CloudSyncStateTypes.ERROR]: u.default,
        });
      class I extends s.PureComponent {
        componentDidMount() {
          this.getIsRecentlySynced() && this.setRecentlySyncedTimeout();
        }
        componentDidUpdate(e) {
          null != this.props.cloudSyncState &&
            this.props.cloudSyncState.type === E.CloudSyncStateTypes.DONE &&
            null != this.props.cloudSyncState.timestamp &&
            (null == e.cloudSyncState || null == e.cloudSyncState.timestamp) &&
            this.setRecentlySyncedTimeout();
        }
        componentWillUnmount() {
          this._doneTimer.stop();
        }
        setRecentlySyncedTimeout() {
          this._doneTimer.start(2e3, () => this.forceUpdate());
        }
        getIsRecentlySynced() {
          let { cloudSyncState: e } = this.props;
          if (null != e && e.type === E.CloudSyncStateTypes.DONE) {
            let t = e.timestamp;
            return null != t && Date.now() - t <= 2e3;
          }
          return !1;
        }
        getStop(e, t) {
          if (t) return 1;
          if (
            e.type === E.CloudSyncStateTypes.PUSHING ||
            e.type === E.CloudSyncStateTypes.PULLING
          ) {
            let { progress: t, total: n } = e;
            return t / n;
          }
          return 0;
        }
        getTooltip(e, t) {
          switch (e.type) {
            case E.CloudSyncStateTypes.DONE:
              if (t) return h.default.Messages.CLOUD_SYNC_ICON_TOOLTIP_DONE;
              return h.default.Messages.CLOUD_SYNC_ICON_TOOLTIP_SUPPORTED;
            case E.CloudSyncStateTypes.CONFLICT:
            case E.CloudSyncStateTypes.ERROR:
              return h.default.Messages.CLOUD_SYNC_ICON_TOOLTIP_SUPPORTED;
            case E.CloudSyncStateTypes.PLANNING:
              return h.default.Messages.CLOUD_SYNC_ICON_TOOLTIP_PLANNING;
            case E.CloudSyncStateTypes.PREPARING:
              return h.default.Messages.CLOUD_SYNC_ICON_TOOLTIP_PREPARING;
            case E.CloudSyncStateTypes.PUSHING:
              return h.default.Messages.CLOUD_SYNC_ICON_TOOLTIP_PUSHING;
            case E.CloudSyncStateTypes.PULLING:
              return h.default.Messages.CLOUD_SYNC_ICON_TOOLTIP_PULLING;
            default:
              return null;
          }
        }
        render() {
          let {
              cloudSyncState: e,
              libraryApplication: t,
              className: n,
            } = this.props,
            s = null == e ? { type: E.CloudSyncStateTypes.DONE } : e,
            l = this.getIsRecentlySynced(),
            i = {};
          (_.has(s.type) || l) &&
            (i.gradientConfig = {
              id: t.id,
              startColor: "rgba(199, 208, 240, 1)",
              stopColor: "rgba(114, 137, 218, 1)",
              stop: this.getStop(s, l),
            });
          let o = l ? d.default : C[s.type];
          return (0, a.jsx)(r.Tooltip, {
            text: this.getTooltip(s, l),
            children: e => (0, a.jsx)(o, { className: n, ...i, ...e }),
          });
        }
        constructor(...e) {
          super(...e), (this._doneTimer = new i.Timeout());
        }
      }
      var S = l.default.connectStores([o.default], e => {
        let { libraryApplication: t } = e;
        return { cloudSyncState: o.default.getState(t.id, t.branchId) };
      })(I);
    },
    762448: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return p;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("446674"),
        i = n("77078"),
        r = n("641608"),
        o = n("98328"),
        u = n("149851"),
        d = n("145131"),
        c = n("398288"),
        f = n("993105"),
        E = n("773336"),
        h = n("50885"),
        _ = n("782340"),
        C = n("378716"),
        I = n("890957");
      class S extends s.PureComponent {
        renderDiskUsageCircle() {
          let { metadata: e } = this.props;
          return null != e && null != e.availableKB && null != e.totalKB
            ? (0, a.jsx)(u.default, {
                total: e.totalKB,
                used: e.totalKB - e.availableKB,
              })
            : null;
        }
        renderViewing() {
          let e, t;
          let {
            path: n,
            label: s,
            editingPath: l,
            isDefault: r,
            metadata: u,
          } = this.props;
          return (
            null != u &&
              ((e =
                null != u.availableKB
                  ? (0, f.formatSize)(u.availableKB, { useKibibytes: !0 })
                  : null),
              (t =
                null != u.totalKB
                  ? (0, f.formatSize)(u.totalKB, { useKibibytes: !0 })
                  : null)),
            (0, a.jsxs)(d.default, {
              className: C.installationPath,
              align: d.default.Align.CENTER,
              children: [
                this.renderDiskUsageCircle(),
                (0, a.jsxs)(d.default, {
                  direction: d.default.Direction.VERTICAL,
                  className: C.descriptionWrapper,
                  children: [
                    (0, a.jsxs)(d.default, {
                      align: d.default.Align.CENTER,
                      children: [
                        (0, a.jsx)(i.Heading, {
                          className: C.rowTitle,
                          variant: "heading-md/semibold",
                          children:
                            null != s ? s : o.default.getLabelFromPath(n),
                        }),
                        r
                          ? (0, a.jsx)("span", {
                              className: C.defaultIndicator,
                              children: _.default.Messages.DEFAULT,
                            })
                          : null,
                      ],
                    }),
                    null != u && null != e && null != t
                      ? (0, a.jsx)(c.default, {
                          className: C.rowBody,
                          hoverText:
                            _.default.Messages.USER_SETTINGS_GAMES_INSTALL_LOCATION_SPACE.format(
                              { available: e, total: t }
                            ),
                          children: n,
                        })
                      : (0, a.jsx)(i.Text, {
                          className: C.rowBody,
                          variant: "text-xs/normal",
                          children: n,
                        }),
                  ],
                }),
                (0, a.jsx)(i.Button, {
                  size: i.Button.Sizes.SMALL,
                  disabled: null != l,
                  color: i.Button.Colors.PRIMARY,
                  onClick: this.handleStartEditing,
                  children: _.default.Messages.EDIT,
                }),
              ],
            })
          );
        }
        renderEditing() {
          let { path: e, hasGamesInstalledInPath: t } = this.props,
            { label: n, isDefault: s } = this.state;
          return (0, a.jsx)(i.Card, {
            editable: !0,
            className: C.installationPathEditing,
            children: (0, a.jsxs)(d.default, {
              children: [
                this.renderDiskUsageCircle(),
                (0, a.jsxs)(d.default.Child, {
                  children: [
                    (0, a.jsx)(i.FormItem, {
                      title:
                        _.default.Messages
                          .USER_SETTINGS_GAMES_INSTALL_LOCATION_NAME,
                      children: (0, a.jsx)(i.TextInput, {
                        value: n,
                        placeholder: o.default.getLabelFromPath(e),
                        onChange: this.handleLabelChange,
                      }),
                    }),
                    (0, a.jsx)(i.FormItem, {
                      title:
                        _.default.Messages.USER_SETTINGS_GAMES_INSTALL_LOCATION,
                      className: I.marginTop20,
                      children: (0, a.jsx)(i.TextInput, {
                        disabled: !0,
                        value: e,
                      }),
                    }),
                    (0, a.jsx)(i.Checkbox, {
                      type: i.Checkbox.Types.INVERTED,
                      value: null != s ? s : this.props.isDefault,
                      disabled: this.props.isDefault,
                      className: C.defaultLocationCheckbox,
                      onChange: this.handleToggleDefault,
                      children:
                        _.default.Messages
                          .USER_SETTINGS_GAMES_INSTALL_LOCATION_MAKE_DEFAULT,
                    }),
                    (0, a.jsx)(i.FormDivider, { className: C.separator }),
                    (0, a.jsxs)(d.default, {
                      children: [
                        (0, a.jsx)(i.Button, {
                          disabled: t || this.props.isDefault,
                          size: i.Button.Sizes.SMALL,
                          color: i.Button.Colors.RED,
                          look: i.Button.Looks.OUTLINED,
                          onClick: this.handleRemoveLocation,
                          children:
                            _.default.Messages
                              .USER_SETTINGS_GAMES_INSTALL_LOCATION_REMOVE,
                        }),
                        (0, a.jsxs)(d.default, {
                          justify: d.default.Justify.END,
                          children: [
                            (0, a.jsx)(i.Button, {
                              size: i.Button.Sizes.SMALL,
                              color: i.Button.Colors.PRIMARY,
                              look: i.Button.Looks.LINK,
                              onClick: this.handleStopEditing,
                              children: _.default.Messages.CANCEL,
                            }),
                            (0, a.jsx)(i.Button, {
                              disabled:
                                e === this.props.path &&
                                n === this.props.label &&
                                s === this.props.isDefault,
                              size: i.Button.Sizes.SMALL,
                              color: i.Button.Colors.GREEN,
                              onClick: this.handleSaveChanges,
                              children: _.default.Messages.SAVE,
                            }),
                          ],
                        }),
                      ],
                    }),
                  ],
                }),
              ],
            }),
          });
        }
        render() {
          return this.props.editingPath === this.props.path
            ? this.renderEditing()
            : this.renderViewing();
        }
        constructor(...e) {
          super(...e),
            (this.state = { label: void 0, isDefault: null }),
            (this.handleStartEditing = () => {
              let {
                path: e,
                label: t,
                isDefault: n,
                onToggleEditing: a,
              } = this.props;
              a(e), this.setState({ label: t, isDefault: n });
            }),
            (this.handleStopEditing = () => {
              let { onToggleEditing: e } = this.props;
              e(null), this.setState({ label: void 0, isDefault: null });
            }),
            (this.handleRemoveLocation = () => {
              (0, i.openModal)(e =>
                (0, a.jsx)(i.ConfirmModal, {
                  ...e,
                  header:
                    _.default.Messages
                      .USER_SETTINGS_GAMES_INSTALL_LOCATION_REMOVE,
                  confirmText:
                    _.default.Messages
                      .USER_SETTINGS_GAMES_INSTALL_LOCATION_REMOVE,
                  cancelText: _.default.Messages.CANCEL,
                  onConfirm: () => {
                    this.handleStopEditing(),
                      (0, r.removeInstallLocation)(this.props.path);
                  },
                  children: (0, a.jsx)(i.Text, {
                    variant: "text-md/normal",
                    children:
                      _.default.Messages
                        .USER_SETTINGS_GAMES_REMOVE_LOCATION_BODY,
                  }),
                })
              );
            }),
            (this.handleSaveChanges = () => {
              (0, r.updateInstallLocation)(this.props.path, {
                label:
                  null != this.state.label
                    ? this.state.label
                    : this.props.label,
                isDefault:
                  null != this.state.isDefault
                    ? this.state.isDefault
                    : this.props.isDefault,
              }),
                this.handleStopEditing();
            }),
            (this.handleLabelChange = e => {
              this.setState({ label: e });
            }),
            (this.handleToggleDefault = () => {
              this.setState({ isDefault: !this.state.isDefault });
            });
        }
      }
      class m extends s.PureComponent {
        componentDidMount() {
          (0, r.fetchMetadata)(
            this.props.installationPaths.map(e => {
              let { path: t } = e;
              return t;
            })
          );
        }
        render() {
          let {
              installationPaths: e,
              installationPathsMetadata: t,
              defaultInstallationPath: n,
            } = this.props,
            { editingPath: s } = this.state;
          return (0, a.jsxs)(i.FormSection, {
            className: C.wrapper,
            title: _.default.Messages.USER_SETTINGS_GAMES_INSTALL_LOCATIONS,
            children: [
              e.map(e => {
                let { path: l, label: i } = e;
                return (0, a.jsx)(
                  S,
                  {
                    path: l,
                    label: i,
                    metadata: t[l],
                    isDefault: n === l,
                    editingPath: s,
                    hasGamesInstalledInPath:
                      o.default.hasGamesInstalledInPath(l),
                    onToggleEditing: this.handleToggleEditing,
                  },
                  l
                );
              }),
              (0, a.jsx)("div", {
                className: C.buttonRowWrapper,
                children: (0, a.jsx)(i.Button, {
                  disabled: !E.isPlatformEmbedded,
                  onClick: this.handleAddInstallationLocation,
                  size: i.Button.Sizes.SMALL,
                  children:
                    _.default.Messages.USER_SETTINGS_GAMES_INSTALL_LOCATION_ADD,
                }),
              }),
            ],
          });
        }
        constructor(...e) {
          super(...e),
            (this.state = { editingPath: null }),
            (this.handleAddInstallationLocation = () => {
              h.default.showOpenDialog(["openDirectory"]).then(e => {
                null != e &&
                  0 !== e.length &&
                  null != e[0] &&
                  "undefined" !== e[0] &&
                  (0, r.addInstallLocation)(e[0]);
              });
            }),
            (this.handleToggleEditing = e => {
              this.setState({ editingPath: e });
            });
        }
      }
      var p = l.default.connectStores([o.default], () => ({
        installationPaths: o.default.installationPaths,
        installationPathsMetadata: o.default.installationPathsMetadata,
        defaultInstallationPath: o.default.defaultInstallationPath,
      }))(m);
    },
    661804: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        }),
        n("222007");
      var a,
        s = n("37983"),
        l = n("884691"),
        i = n("414456"),
        r = n.n(i),
        o = n("77078"),
        u = n("913144"),
        d = n("939488"),
        c = n("157552"),
        f = n("444949"),
        E = n("901582"),
        h = n("778043"),
        _ = n("875358"),
        C = n("737295"),
        I = n("153034"),
        S = n("129215"),
        m = n("49111"),
        p = n("492249"),
        T = n("424902");
      a = class extends l.PureComponent {
        componentDidMount() {
          d.setHomeLink(m.Routes.APPLICATION_LIBRARY),
            (0, h.deepLinkRouteIfLanded)(p.RPCDeepLinks.LIBRARY),
            u.default.wait(() => (0, c.fetchBranches)()),
            (0, f.fetchActivityStatistics)(),
            null != this._scrollToOnMount &&
              null != this._scrollerRef.current &&
              this.scrollToRow(this._scrollToOnMount, this._scrollToPadding);
        }
        renderToolbar() {
          return (0, s.jsx)(_.default, {});
        }
        render() {
          let { includeUpdatesInScroller: e } = this.state,
            t = (0, s.jsx)("div", {
              children: (0, s.jsx)(E.default, {
                section: m.AnalyticsSections.LIBRARY_INSTALL_MODULE,
                children: (0, s.jsx)(S.default, {
                  onHeightTallerThanHalfViewportChange:
                    this.handleHeightTallerThanHalfViewportChange,
                }),
              }),
            });
          return (0, s.jsxs)(l.Fragment, {
            children: [
              (0, s.jsx)(C.default, {
                currentRoute: m.Routes.APPLICATION_LIBRARY,
                renderToolbar: this.renderToolbar,
              }),
              e ? null : t,
              (0, s.jsxs)(o.AdvancedScrollerAuto, {
                className: r(T.container, T.scroller),
                ref: this._scrollerRef,
                children: [
                  e ? t : null,
                  (0, s.jsx)(E.default, {
                    section: m.AnalyticsSections.LIBRARY_APPLICATION_LIST,
                    children: (0, s.jsx)(I.default, {
                      stickyHeader: !e,
                      scrollToRow: this.scrollToRow,
                    }),
                  }),
                ],
              }),
            ],
          });
        }
        constructor(...e) {
          super(...e),
            (this._scrollerRef = l.createRef()),
            (this._scrollToPadding = 0),
            (this.state = { includeUpdatesInScroller: !1 }),
            (this.handleHeightTallerThanHalfViewportChange = e => {
              this.setState({ includeUpdatesInScroller: e });
            }),
            (this.scrollToRow = (e, t) => {
              let n = this._scrollerRef.current;
              null != n
                ? (e.focus(),
                  n.scrollIntoViewRect({ start: t, end: t }),
                  (this._scrollToOnMount = null))
                : ((this._scrollToOnMount = e), (this._scrollToPadding = t));
            });
        }
      };
    },
    928056: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return g;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("446674"),
        i = n("77078"),
        r = n("438931"),
        o = n("845579"),
        u = n("577427"),
        d = n("145131"),
        c = n("945330"),
        f = n("599110"),
        E = n("568734"),
        h = n("602043"),
        _ = n("737295"),
        C = n("762448"),
        I = n("49111"),
        S = n("782340"),
        m = n("72711");
      function p(e) {
        let { applicationViewItems: t, restoreApplication: n } = e;
        if (0 === t.length) return null;
        let s = t.map(e => {
          let t = e.libraryApplication.getDistributor();
          return (0, a.jsxs)(
            "div",
            {
              className: m.hiddenLibraryApplication,
              children: [
                (0, a.jsxs)(d.default, {
                  direction: d.default.Direction.VERTICAL,
                  className: m.hiddenLibraryApplicationContent,
                  children: [
                    (0, a.jsx)("div", {
                      className: m.applicationName,
                      children: e.libraryApplication.getBranchedName(
                        e.application
                      ),
                    }),
                    null != t
                      ? (0, a.jsx)("div", {
                          className: m.applicationSubText,
                          children: I.DistributorNames[t],
                        })
                      : null,
                  ],
                }),
                (0, a.jsx)(i.Clickable, {
                  className: m.restoreButton,
                  onClick: () => n(e.libraryApplication),
                  children: (0, a.jsx)(c.default, { className: m.restoreIcon }),
                }),
              ],
            },
            e.key
          );
        });
        return (0, a.jsxs)(i.FormSection, {
          className: m.hiddenLibraryApplications,
          children: [
            (0, a.jsx)(i.FormTitle, {
              className: m.hiddenLibraryApplicationsTitle,
              children:
                S.default.Messages
                  .SETTINGS_GAMES_HIDDEN_LIBRARY_APPLICATIONS_LABEL,
            }),
            s,
          ],
        });
      }
      class T extends s.PureComponent {
        handleToggleShortcutDesktop(e) {
          o.InstallShortcutDesktop.updateSetting(e);
        }
        handleToggleShortcutStartMenu(e) {
          o.InstallShortcutStartMenu.updateSetting(e);
        }
        trackRestoreApplication(e, t) {
          f.default.track(I.AnalyticEvents.APPLICATION_SETTINGS_UPDATED, {
            hidden_enabled: t,
            ...e.getAnalyticsData(),
          });
        }
        renderBody() {
          let {
            hiddenLibraryApplicationViewItems: e,
            installShortcutDesktop: t,
            installShortcutStartMenu: n,
          } = this.props;
          return (0, a.jsxs)("div", {
            className: m.body,
            children: [
              (0, h.isSupportedPlatform)()
                ? (0, a.jsxs)(s.Fragment, {
                    children: [
                      (0, a.jsx)(i.FormSwitch, {
                        value: t,
                        onChange: this.handleToggleShortcutDesktop,
                        note: S.default.Messages
                          .USER_SETTINGS_GAMES_SHORTCUTS_DESKTOP_NOTE,
                        children:
                          S.default.Messages
                            .USER_SETTINGS_GAMES_SHORTCUTS_DESKTOP,
                      }),
                      (0, a.jsx)(i.FormSwitch, {
                        value: n,
                        onChange: this.handleToggleShortcutStartMenu,
                        note: S.default.Messages
                          .USER_SETTINGS_GAMES_SHORTCUTS_START_MENU_NOTE,
                        children:
                          S.default.Messages
                            .USER_SETTINGS_GAMES_SHORTCUTS_START_MENU,
                      }),
                      (0, a.jsx)(C.default, {}),
                    ],
                  })
                : null,
              (0, a.jsx)(p, {
                restoreApplication: this.handleRestoreHiddenLibraryApplication,
                applicationViewItems: e,
              }),
            ],
          });
        }
        render() {
          return (0, a.jsxs)(a.Fragment, {
            children: [
              (0, a.jsx)(_.default, {
                currentRoute: I.Routes.APPLICATION_LIBRARY_SETTINGS,
              }),
              (0, a.jsx)(i.ScrollerAuto, {
                className: m.scroller,
                children: this.renderBody(),
              }),
            ],
          });
        }
        constructor(...e) {
          super(...e),
            (this.handleRestoreHiddenLibraryApplication = e => {
              let t = E.toggleFlag(
                e.getFlags(),
                I.LibraryApplicationFlags.HIDDEN
              );
              r.updateFlags(e.id, e.branchId, t),
                this.trackRestoreApplication(
                  e,
                  E.hasFlag(t, I.LibraryApplicationFlags.HIDDEN)
                );
            });
        }
      }
      function g() {
        let e = {
          installShortcutDesktop: o.InstallShortcutDesktop.useSetting(),
          installShortcutStartMenu: o.InstallShortcutStartMenu.useSetting(),
          hiddenLibraryApplicationViewItems: (0, l.useStateFromStores)(
            [u.default],
            () => u.default.hiddenLibraryApplicationViewItems
          ),
        };
        return (0, a.jsx)(T, { ...e });
      }
    },
    153034: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return F;
          },
        }),
        n("70102"),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("90915"),
        o = n("446674"),
        u = n("862337"),
        d = n("769846"),
        c = n("77078"),
        f = n("913144"),
        E = n("272030"),
        h = n("259083"),
        _ = n("790219"),
        C = n("827825"),
        I = n("577427"),
        S = n("946749"),
        m = n("145131"),
        p = n("953109"),
        T = n("280174"),
        g = n("158352"),
        A = n("867544"),
        N = n("216422"),
        R = n("688342"),
        O = n("599110"),
        v = n("964889"),
        L = n("159885"),
        M = n("950395"),
        P = n("49111"),
        D = n("782340"),
        y = n("393918");
      let x = (0, L.cssValueToNumber)(d.default.GAME_LIST_ROW_MIN_HEIGHT),
        b = (0, L.cssValueToNumber)(
          d.default.GAME_LIST_LINKED_TO_GLOW_DURATION
        ),
        U = Object.freeze({
          [P.GameTableListKeys.PLATFORM]: "Platform",
          [P.GameTableListKeys.LAST_PLAYED]: "Last Played",
          [P.GameTableListKeys.NAME]: "Name",
        }),
        G = e => {
          let { flag: t, icon: n, item: s, tooltip: l } = e,
            r = s.libraryApplication.hasFlag(t);
          return (0, a.jsx)(c.Tooltip, {
            text: l,
            children: e =>
              (0, a.jsx)(n, {
                className: i(y.settingIcon, { [y.hidden]: !r }),
                ...e,
              }),
          });
        },
        j = [
          {
            key: P.GameTableListKeys.NAME,
            renderHeader: () =>
              D.default.Messages.GAME_LIBRARY_LIST_HEADER_NAME,
            sort: !0,
            cellClassName: y.nameCell,
            bodyCellClassName: y.nameBodyCell,
            render: e =>
              (0, a.jsxs)(m.default, {
                align: m.default.Align.CENTER,
                children: [
                  (0, a.jsx)(p.default, {
                    game: e.application,
                    size: p.default.Sizes.SMALL,
                    className: y.gameIcon,
                  }),
                  (0, a.jsxs)("div", {
                    className: y.nameCellInfo,
                    children: [
                      (0, a.jsx)("div", {
                        className: y.nameCellText,
                        children: e.libraryApplication.getBranchedName(
                          e.application
                        ),
                      }),
                      e.libraryApplication.hasFlag(
                        P.LibraryApplicationFlags.PREMIUM
                      )
                        ? (0, a.jsx)(c.Tooltip, {
                            text: D.default.Messages.PREMIUM_GAME,
                            children: e =>
                              (0, a.jsx)(N.default, {
                                className: y.nitroIcon,
                                ...e,
                              }),
                          })
                        : null,
                    ],
                  }),
                ],
              }),
          },
          {
            key: P.GameTableListKeys.PLATFORM,
            renderHeader: () =>
              D.default.Messages.GAME_LIBRARY_LIST_HEADER_PLATFORM,
            sort: !0,
            cellClassName: y.platformCell,
            bodyCellClassName: y.textCell,
            render(e) {
              let t = e.libraryApplication.getDistributor();
              return (0, a.jsx)(m.default, {
                align: m.default.Align.CENTER,
                children:
                  null != t
                    ? P.DistributorNames[t]
                    : D.default.Messages.GAME_LIBRARY_NOT_APPLICABLE,
              });
            },
          },
          {
            key: P.GameTableListKeys.LAST_PLAYED,
            renderHeader: () =>
              D.default.Messages.GAME_LIBRARY_LIST_HEADER_LAST_PLAYED,
            sort: !0,
            cellClassName: y.lastPlayedCell,
            bodyCellClassName: y.textCell,
            render(e) {
              let t;
              return (
                (t = e.isRunning
                  ? D.default.Messages.GAME_LIBRARY_LAST_PLAYED_PLAYING_NOW
                  : e.isNew
                    ? D.default.Messages.GAME_LIBRARY_NEW
                    : 0 !== e.lastPlayed
                      ? (0, a.jsx)(T.default, {
                          end: e.lastPlayed,
                          location:
                            T.default.Locations.GAME_LIBRARY_LAST_PLAYED,
                        })
                      : D.default.Messages.GAME_LIBRARY_LAST_PLAYED_NONE),
                (0, a.jsx)(m.default, {
                  align: m.default.Align.CENTER,
                  className: i({ [y.lastPlayedCellNew]: e.isNew }),
                  children: t,
                })
              );
            },
          },
          {
            key: P.GameTableListKeys.ACTIONS,
            renderHeader: () => null,
            cellClassName: y.actionsCell,
            render(e, t, n) {
              var l, r;
              if (null == t) throw Error("No cell props defined.");
              let o = e.key === t.activeRowKey;
              return (0, a.jsxs)(s.Fragment, {
                children: [
                  (0, a.jsxs)("div", {
                    className: y.settingIcons,
                    children: [
                      (0, a.jsx)(G, {
                        flag: P.LibraryApplicationFlags.PRIVATE,
                        item: e,
                        icon: A.default,
                        tooltip:
                          D.default.Messages.GAME_LIBRARY_PRIVATE_TOOLTIP,
                      }),
                      (0, a.jsx)(G, {
                        flag: P.LibraryApplicationFlags.OVERLAY_DISABLED,
                        item: e,
                        icon: R.default,
                        tooltip:
                          D.default.Messages
                            .GAME_LIBRARY_OVERLAY_DISABLED_TOOLTIP,
                      }),
                      (0, a.jsx)(M.default, {
                        className: i(y.settingIcon, {
                          [y.hidden]: !e.supportsCloudSync,
                        }),
                        libraryApplication: e.libraryApplication,
                      }),
                    ],
                  }),
                  (0, v.isUserEntitledToLibraryApplication)(
                    e.libraryApplication
                  )
                    ? (0, a.jsx)(C.default, {
                        analyticsListSort:
                          ((l = t.sortKey),
                          (r = t.sortDirection),
                          ""
                            .concat(U[l], " ")
                            .concat(
                              r === P.TableSortDirections.ASCENDING
                                ? "ASC"
                                : "DESC"
                            )),
                        analyticsListIndex: n,
                        source: P.AnalyticsLocations.APPLICATION_LIBRARY,
                        libraryApplication: e.libraryApplication,
                        color: o
                          ? c.Button.Colors.GREEN
                          : c.Button.Colors.PRIMARY,
                        isPlayShiny:
                          o &&
                          e.defaultAction === P.LibraryApplicationActions.PLAY,
                        size: y.actionButtonSize,
                        hideProgress: null != e.defaultAction,
                        onDropdownOpen: () => null != t && t.setActiveRowKey(e),
                        onDropdownClose: () =>
                          null != t && t.clearActiveRowKey(),
                      })
                    : (0, a.jsx)(_.default, {
                        skuId: e.libraryApplication.sku.id,
                        applicationId: e.application.id,
                        color: o
                          ? c.Button.Colors.GREEN
                          : c.Button.Colors.PRIMARY,
                        customDisabledColor: c.Button.Colors.PRIMARY,
                        size: y.actionButtonSize,
                      }),
                ],
              });
            },
          },
        ],
        w = e => {
          let {
              item: t,
              activeRowKey: n,
              highlightedApplicationKey: s,
              onMouseEnter: l,
              onMouseLeave: r,
              onContextMenu: o,
              setRef: u,
              ...d
            } = e,
            c = t.key === n,
            f = t.key === s;
          return (0, a.jsx)("div", {
            className: i({
              [y.rowWrapperActive]: c && !f,
              [y.rowWrapperGlow]: f,
              [y.rowWrapper]: !c && !f,
              [y.rowWrapperDim]: !c && !t.isLaunchable,
            }),
            ref: e => u(e, t.key),
            onMouseEnter: () => l(t),
            onMouseLeave: r,
            onContextMenu: e => o(e, t),
            children: (0, a.jsx)("div", { ...d }),
          });
        };
      class k extends s.PureComponent {
        componentDidMount() {
          let { fetched: e } = this.props;
          e && (this.handleHighlightedApplicationKey(), this.trackViewed());
        }
        componentWillUnmount() {
          this._didUnmount = !0;
        }
        componentDidUpdate(e) {
          !e.fetched &&
            this.props.fetched &&
            (this.handleHighlightedApplicationKey(), this.trackViewed());
          let t = this.props.activeRowKey;
          if (
            null != t &&
            e.activeRowKey !== t &&
            this.props.isNavigatingByKeyboard
          ) {
            let e = this._rowRefs[t];
            null != e &&
              (f.default.wait(E.closeContextMenu),
              this.props.scrollToRow(e, x));
          }
        }
        handleHighlightedApplicationKey() {
          let { highlightedApplicationKey: e } = this.state;
          if (null != e && null != this._rowRefs[e]) {
            this.props.scrollToRow(this._rowRefs[e], x);
            let t = new u.Timeout();
            t.start(b, () => {
              !this._didUnmount &&
                this.setState({ highlightedApplicationKey: null });
            });
          }
        }
        trackViewed() {
          let e = {
              num_applications_total: 0,
              num_applications_discord: 0,
              num_applications_steam: 0,
              num_applications_battlenet: 0,
              num_applications_twitch: 0,
              num_applications_uplay: 0,
              num_applications_origin: 0,
              num_applications_gog: 0,
              num_applications_epic: 0,
            },
            { analyticsContext: t, applicationViewItems: n } = this.props;
          for (let t of n) {
            switch (t.libraryApplication.getDistributor()) {
              case P.Distributors.DISCORD:
                e.num_applications_discord++;
                break;
              case P.Distributors.STEAM:
                e.num_applications_steam++;
                break;
              case P.Distributors.BATTLENET:
                e.num_applications_battlenet++;
                break;
              case P.Distributors.TWITCH:
                e.num_applications_twitch++;
                break;
              case P.Distributors.UPLAY:
                e.num_applications_uplay++;
                break;
              case P.Distributors.ORIGIN:
                e.num_applications_origin++;
                break;
              case P.Distributors.GOG:
                e.num_applications_gog++;
                break;
              case P.Distributors.EPIC:
                e.num_applications_epic++;
            }
            e.num_applications_total++;
          }
          O.default.track(P.AnalyticEvents.LIBRARY_VIEWED, {
            ...e,
            load_id: t.loadId,
          });
        }
        handleSort(e, t) {
          h.sortList(e, t);
        }
        renderImportHelp() {
          let e;
          let { applicationViewItems: t, filterQuery: n } = this.props,
            s = t.length > 0;
          return s
            ? null
            : ((e =
                "" !== n
                  ? D.default.Messages.APPLICATION_LIBRARY_EMPTY_SEARCH_DESCRIPTION.format(
                      { query: n }
                    )
                  : D.default.Messages
                      .APPLICATION_LIBRARY_EMPTY_STATE_DESCRIPTION_NO_IMPORT),
              (0, a.jsxs)("div", {
                className: s ? y.emptyStateSmall : y.emptyStateLarge,
                children: [
                  (0, a.jsx)("div", { className: y.emptyWumpus }),
                  (0, a.jsx)(m.default, {
                    grow: 0,
                    shrink: s ? 1 : 0,
                    direction: m.default.Direction.VERTICAL,
                    children: (0, a.jsxs)("div", {
                      className: y.emptyStateText,
                      children: [
                        (0, a.jsx)("div", {
                          className: y.emptyStateHeader,
                          children:
                            D.default.Messages
                              .APPLICATION_LIBRARY_EMPTY_STATE_HEADER,
                        }),
                        (0, a.jsx)("div", {
                          className: y.emptyStateDescription,
                          children: e,
                        }),
                      ],
                    }),
                  }),
                ],
              }));
        }
        render() {
          let {
              sortKey: e,
              sortDirection: t,
              applicationViewItems: n,
              activeRowKey: l,
              stickyHeader: i,
            } = this.props,
            { overflowMenuRowKey: r, highlightedApplicationKey: o } =
              this.state;
          return (0, a.jsxs)(s.Fragment, {
            children: [
              n.length > 0
                ? (0, a.jsx)(g.default, {
                    columns: j,
                    data: n,
                    sortData: !1,
                    rowComponent: w,
                    className: y.table,
                    headerClassName: i ? y.stickyHeader : y.header,
                    headerCellClassName: y.headerCell,
                    sortedHeaderCellClassName: y.headerCellSorted,
                    bodyCellClassName: y.bodyCell,
                    rowClassName: y.row,
                    sortKey: e,
                    sortDirection: t,
                    stickyHeader: i,
                    rowProps: {
                      activeRowKey: null != r ? r : l,
                      highlightedApplicationKey: o,
                      onMouseEnter: this.handleRowMouseEnter,
                      onMouseLeave: this.handleRowMouseLeave,
                      onContextMenu: this.handleApplicationContextMenu,
                      setRef: this.setRowRef,
                    },
                    cellProps: {
                      activeRowKey: null != r ? r : l,
                      onContextMenu: this.handleApplicationContextMenu,
                      setActiveRowKey: this.setActiveRowKey,
                      clearActiveRowKey: this.clearActiveRowKey,
                      sortKey: e,
                      sortDirection: t,
                    },
                    onSort: this.handleSort,
                  })
                : null,
              this.renderImportHelp(),
            ],
          });
        }
        constructor(...e) {
          super(...e),
            (this._didUnmount = !1),
            (this._rowRefs = {}),
            (this.state = {
              overflowMenuRowKey: null,
              highlightedApplicationKey:
                null != this.props.location.state
                  ? this.props.location.state.applicationId
                  : null,
            }),
            (this.setActiveRowKey = e => {
              this.setState({ overflowMenuRowKey: e.key });
            }),
            (this.clearActiveRowKey = () => {
              !this._didUnmount && this.setState({ overflowMenuRowKey: null });
            }),
            (this.handleRowMouseEnter = e => {
              !this.props.isNavigatingByKeyboard && h.updateActiveRowKey(e.key);
            }),
            (this.handleRowMouseLeave = () => {
              !this.props.isNavigatingByKeyboard && h.updateActiveRowKey(null);
            }),
            (this.setRowRef = (e, t) => {
              this._rowRefs[t] = e;
            }),
            (this.handleApplicationContextMenu = (e, t) => {
              this.setActiveRowKey(t);
              let { analyticsContext: s } = this.props;
              (0, E.openContextMenuLazy)(
                e,
                async () => {
                  let { default: e } = await n
                    .el("975419")
                    .then(n.bind(n, "975419"));
                  return n =>
                    (0, a.jsx)(e, {
                      ...n,
                      applicationId: t.libraryApplication.id,
                      branchId: t.libraryApplication.branchId,
                      analyticsContext: s,
                    });
                },
                { onClose: this.clearActiveRowKey }
              );
            });
        }
      }
      function F(e) {
        let t = s.useContext(O.AnalyticsContext),
          n = (0, r.useLocation)(),
          {
            applicationViewItems: l,
            filterQuery: i,
            fetched: u,
          } = (0, o.useStateFromStoresObject)([I.default], () => ({
            applicationViewItems:
              I.default.sortedFilteredLibraryApplicationViewItems,
            filterQuery: I.default.applicationFilterQuery,
            fetched: I.default.hasFetchedApplications,
          })),
          {
            sortKey: d,
            sortDirection: c,
            activeRowKey: f,
            isNavigatingByKeyboard: E,
          } = (0, o.useStateFromStoresObject)([S.default], () => ({
            sortKey: S.default.sortKey,
            sortDirection: S.default.sortDirection,
            activeRowKey: S.default.activeRowKey,
            isNavigatingByKeyboard: S.default.isNavigatingByKeyboard,
          }));
        return (0, a.jsx)(k, {
          ...e,
          analyticsContext: t,
          location: n,
          applicationViewItems: l,
          filterQuery: i,
          fetched: u,
          sortKey: d,
          sortDirection: c,
          activeRowKey: f,
          isNavigatingByKeyboard: E,
        });
      }
      k.defaultProps = { stickyHeader: !1 };
    },
    449427: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("414456"),
        l = n.n(s),
        i = n("449918"),
        r = n("145131"),
        o = n("833923"),
        u = n("318042"),
        d = n("782340"),
        c = n("563936"),
        f = function (e) {
          var t;
          let {
              title: n,
              className: s,
              color: f,
              animate: E,
              gradientStopColor: h,
              getHistoricalTotalBytes: _,
            } = e,
            C = (0, i.useColorValue)(f).hex,
            I =
              null === (t = (0, i.useColorValue)(h)) || void 0 === t
                ? void 0
                : t.hex;
          return (0, a.jsx)(u.default, {
            getHistoricalTotalBytes: _,
            children: (e, t, i) => {
              var u;
              return (0, a.jsx)("div", {
                className: l(c.monitor, s),
                children: (0, a.jsxs)(r.default, {
                  align: r.default.Align.CENTER,
                  children: [
                    (0, a.jsxs)(r.default, {
                      className: c.text,
                      direction: r.default.Direction.VERTICAL,
                      children: [
                        (0, a.jsx)("div", { className: c.title, children: n }),
                        (0, a.jsx)("div", {
                          className: c.rate,
                          children:
                            (u = (e[e.length - 1] / t) * 1e3) > 1e3
                              ? d.default.Messages.FILE_RATE_MB.format({
                                  size: Math.round(u / 1e3),
                                })
                              : d.default.Messages.FILE_RATE_KB.format({
                                  size: Math.round(u),
                                }),
                        }),
                      ],
                    }),
                    (0, a.jsx)("div", {
                      className: c.overflowContainer,
                      children: (0, a.jsx)(o.default, {
                        data: e,
                        maxValue: Math.max(Math.max.apply(null, e), 1e3),
                        className: c.sparkChart,
                        updateInterval: t,
                        color: C,
                        gradientStopColor: I,
                        numUpdatesToShow: i,
                        animate: E,
                        pixelWidth: 600,
                        pixelHeight: 48,
                        lineWidth: 4,
                      }),
                    }),
                  ],
                }),
              });
            },
          });
        };
    },
    129215: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return ea;
          },
        }),
        n("70102"),
        n("222007"),
        n("808653"),
        n("424973");
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("917351"),
        o = n.n(r),
        u = n("446674"),
        d = n("669491"),
        c = n("819855"),
        f = n("77078"),
        E = n("913144"),
        h = n("272030"),
        _ = n("190017"),
        C = n("827825"),
        I = n("86621"),
        S = n("737960"),
        m = n("299285"),
        p = n("449918"),
        T = n("161778"),
        g = n("686470"),
        A = n("535974"),
        N = n("352326"),
        R = n("471671"),
        O = n("145131"),
        v = n("953109"),
        L = n("280174"),
        M = n("158352"),
        P = n("546671"),
        D = n("945330"),
        y = n("830837"),
        x = n("132755"),
        b = n("993105"),
        U = n("964889"),
        G = n("318042"),
        j = n("449427"),
        w = n("49111"),
        k = n("782340"),
        F = n("844602");
      let B = e => {
          let { className: t, children: n, onContextMenu: s, item: l } = e;
          return (0, a.jsx)("div", {
            className: t,
            onContextMenu: e => s(e, l),
            children: n,
          });
        },
        H = [
          d.default.unsafe_rawColors.BLUE_345.css,
          d.default.colors.INTERACTIVE_NORMAL.css,
        ],
        V = e => {
          let { tooltip: t, onClick: n, icon: s } = e;
          return (0, a.jsx)(f.Tooltip, {
            text: t,
            children: e => {
              let { onMouseEnter: l, onMouseLeave: i } = e;
              return (0, a.jsx)(f.Button, {
                "aria-label": t,
                className: F.actionButton,
                innerClassName: F.actionButtonContents,
                color: f.Button.Colors.PRIMARY,
                size: f.Button.Sizes.ICON,
                onClick: n,
                onMouseEnter: l,
                onMouseLeave: i,
                children: (0, a.jsx)(s, { className: F.actionIcon }),
              });
            },
          });
        };
      function Y(e, t) {
        switch (t) {
          case w.DispatchApplicationStages.POST_INSTALL_SCRIPTS:
          case w.DispatchApplicationStages.PLANNING:
          case w.DispatchApplicationStages.FINALIZING:
          case w.DispatchApplicationStages.ALLOCATING_DISK:
            return "".concat(e);
          default:
            return (0, b.formatSize)(e, { useKibibytes: !0 });
        }
      }
      let W = {
        [w.LocalDispatchApplicationStates.INSTALLING]: {
          [L.TimeUnits.NONE]: (e, t, n, a) =>
            k.default.Messages.GAME_LIBRARY_UPDATES_INSTALLING.format({
              percent: e,
              progress: t,
              total: n,
            }),
          [L.TimeUnits.SECONDS]: (e, t, n, a) =>
            k.default.Messages.GAME_LIBRARY_UPDATES_INSTALLING_SECONDS.format({
              percent: e,
              progress: t,
              total: n,
              timeRemaining: a,
            }),
          [L.TimeUnits.MINUTES]: (e, t, n, a) =>
            k.default.Messages.GAME_LIBRARY_UPDATES_INSTALLING_MINUTES.format({
              percent: e,
              progress: t,
              total: n,
              timeRemaining: a,
            }),
          [L.TimeUnits.HOURS]: (e, t, n, a) =>
            k.default.Messages.GAME_LIBRARY_UPDATES_INSTALLING_HOURS.format({
              percent: e,
              progress: t,
              total: n,
              timeRemaining: a,
            }),
        },
        [w.LocalDispatchApplicationStates.UPDATING]: {
          [L.TimeUnits.NONE]: (e, t, n, a) =>
            k.default.Messages.GAME_LIBRARY_UPDATES_UPDATING.format({
              percent: e,
              progress: t,
              total: n,
            }),
          [L.TimeUnits.SECONDS]: (e, t, n, a) =>
            k.default.Messages.GAME_LIBRARY_UPDATES_UPDATING_UPDATING_SECONDS.format(
              { percent: e, progress: t, total: n, timeRemaining: a }
            ),
          [L.TimeUnits.MINUTES]: (e, t, n, a) =>
            k.default.Messages.GAME_LIBRARY_UPDATES_UPDATING_UPDATING_MINUTES.format(
              { percent: e, progress: t, total: n, timeRemaining: a }
            ),
          [L.TimeUnits.HOURS]: (e, t, n, a) =>
            k.default.Messages.GAME_LIBRARY_UPDATES_UPDATING_UPDATING_HOURS.format(
              { percent: e, progress: t, total: n, timeRemaining: a }
            ),
        },
        [w.LocalDispatchApplicationStates.REPAIRING]: {
          [L.TimeUnits.NONE]: (e, t, n, a) =>
            k.default.Messages.GAME_LIBRARY_UPDATES_INSTALLING.format({
              percent: e,
              progress: t,
              total: n,
            }),
          [L.TimeUnits.SECONDS]: (e, t, n, a) =>
            k.default.Messages.GAME_LIBRARY_UPDATES_INSTALLING_SECONDS.format({
              percent: e,
              progress: t,
              total: n,
              timeRemaining: a,
            }),
          [L.TimeUnits.MINUTES]: (e, t, n, a) =>
            k.default.Messages.GAME_LIBRARY_UPDATES_INSTALLING_MINUTES.format({
              percent: e,
              progress: t,
              total: n,
              timeRemaining: a,
            }),
          [L.TimeUnits.HOURS]: (e, t, n, a) =>
            k.default.Messages.GAME_LIBRARY_UPDATES_INSTALLING_HOURS.format({
              percent: e,
              progress: t,
              total: n,
              timeRemaining: a,
            }),
        },
      };
      function K(e, t, n, a, s) {
        let l = W[t],
          i = null != l ? Object.keys(l) : [],
          { unit: r, time: o } = (0, L.getTimeAndUnit)(
            null != e ? e / 60 : null,
            i
          );
        if (null != l && null != r) {
          let e = l[r];
          return null != e ? e(n, a, s, o) : null;
        }
        return null;
      }
      function z(e) {
        let {
            type: t,
            stage: n,
            percent: a,
            progress: s,
            total: l,
            secondsRemaining: i,
          } = e,
          r = Y(l, n),
          o = Y(s, n);
        switch (n) {
          case w.DispatchApplicationStages.QUEUED:
            if (0 === s)
              return k.default.Messages
                .GAME_LIBRARY_UPDATES_PROGRESS_WAITING_FOR_ANOTHER_NO_TRANSITION;
            return k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_WAITING_FOR_ANOTHER.format(
              { percent: a, progress: o, total: r }
            );
          case w.DispatchApplicationStages.PLANNING:
            return k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_PLANNING.format(
              { percent: a }
            );
          case w.DispatchApplicationStages.ALLOCATING_DISK:
            return k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_ALLOCATING_DISK.format(
              { percent: a }
            );
          case w.DispatchApplicationStages.PATCHING:
            return K(i, t, a, o, r);
          case w.DispatchApplicationStages.FINALIZING:
            return k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_FINALIZING.format(
              { percent: a }
            );
          case w.DispatchApplicationStages.PAUSING:
            return k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_PAUSING.format(
              { percent: a, progress: o, total: r }
            );
          case w.DispatchApplicationStages.VERIFYING:
            return k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_VERIFYING.format(
              { percent: a, progress: o, total: r }
            );
          case w.DispatchApplicationStages.POST_INSTALL_SCRIPTS:
            return k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_POST_INSTALL_SCRIPTS.format(
              { percent: a, progress: o, total: r }
            );
          case w.DispatchApplicationStages.REPAIRING:
            if (t === w.LocalDispatchApplicationStates.REPAIRING)
              return K(i, t, a, o, r);
            return k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_REPAIRING.format(
              { percent: a, progress: o, total: r }
            );
        }
        throw Error("Invalid Dispatch stage");
      }
      let q = { NAME: "name", PROGRESS: "progress", ACTIONS: "actions" };
      class Q extends s.PureComponent {
        get isFocused() {
          let { cellProps: e } = this.props;
          return null != e && e.isFocused;
        }
        renderBody(e) {
          let {
            percent: t,
            foregroundColor: n,
            foregroundGradientColor: s,
            message: l,
          } = e;
          return (0, a.jsxs)(O.default, {
            direction: O.default.Direction.VERTICAL,
            children: [
              (0, a.jsx)(f.Progress, {
                percent: t,
                size: f.Progress.Sizes.SMALL,
                foregroundColor: (0, p.getColor)(n),
                foregroundGradientColor:
                  null != s
                    ? [(0, p.getColor)(s[0]), (0, p.getColor)(s[1])]
                    : void 0,
                animate: this.isFocused,
              }),
              (0, a.jsx)("div", {
                className: F.progressCellText,
                children: null != l ? l : "",
              }),
            ],
          });
        }
        renderStackedProgress(e) {
          let { percents: t, message: n } = e;
          return (0, a.jsxs)(O.default, {
            direction: O.default.Direction.VERTICAL,
            children: [
              (0, a.jsx)(f.StackedProgress, {
                percents: t,
                size: f.Progress.Sizes.SMALL,
                foregroundColors: H,
                animate: this.isFocused,
              }),
              (0, a.jsx)("div", {
                className: F.progressCellText,
                children: null != n ? n : "",
              }),
            ],
          });
        }
        renderFinished() {
          let { item: e } = this.props;
          return this.renderBody({
            message:
              k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_FINISHED.format({
                remove: () => _.removeFinished(e.applicationId, e.branchId),
              }),
            foregroundColor: (0, c.isThemeLight)(e.theme)
              ? w.Color.PRIMARY_300
              : w.Color.PRIMARY_500,
            percent: 100,
          });
        }
        renderQueued() {
          let e, t;
          let {
            item: { state: n, theme: a },
          } = this.props;
          if (null != n) {
            let { progress: a, total: s, stage: l } = n;
            if (null != a && null != s) {
              let n = Y(s, l),
                i = Y(a, l);
              t = U.calculateProgressPercentage(a, s);
              let r = Math.floor(t);
              e =
                l === w.DispatchApplicationStages.PAUSING
                  ? k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_PAUSING.format(
                      { percent: r, progress: i, total: n }
                    )
                  : k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_QUEUED.format(
                      { percent: r, progress: i, total: n }
                    );
            }
          }
          return (
            (null == t || null == e) &&
              ((t = 0),
              (e =
                k.default.Messages
                  .GAME_LIBRARY_UPDATES_PROGRESS_QUEUED_NO_TRANSITION)),
            this.renderBody({
              percent: t,
              foregroundColor: (0, c.isThemeLight)(a)
                ? w.Color.PRIMARY_300
                : w.Color.PRIMARY_500,
              message: e,
            })
          );
        }
        renderPaused() {
          let {
            item: { state: e, theme: t },
          } = this.props;
          if (null == e) return null;
          let { progress: n, total: a } = e;
          if (null == n || null == a) return null;
          let s = U.calculateProgressPercentage(n, a),
            l =
              0 === n && 1 === a
                ? k.default.Messages
                    .GAME_LIBRARY_UPDATES_PROGRESS_PAUSED_NO_TRANSITION
                : k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_PAUSED.format(
                    {
                      percent: Math.floor(s),
                      progress: (0, b.formatSize)(n),
                      total: (0, b.formatSize)(a),
                    }
                  );
          return this.renderBody({
            message: l,
            foregroundColor: (0, c.isThemeLight)(t)
              ? w.Color.PRIMARY_300
              : w.Color.PRIMARY_500,
            percent: s,
          });
        }
        renderProgressPatching() {
          return (0, a.jsx)(G.default, {
            getHistoricalTotalBytes: A.default.getHistoricalTotalBytesWritten,
            updateInterval: 5e3,
            children: this.renderProgressPatchingBody,
          });
        }
        renderProgressDefault() {
          let { state: e } = this.props.item;
          if (null == e) return null;
          let { total: t, progress: n, stage: a, type: s } = e;
          if (null == t || null == n || null == a) return null;
          let l = U.calculateProgressPercentage(n, t),
            i = Math.floor(l);
          return this.renderBody({
            percent: l,
            message: z({
              type: s,
              stage: a,
              percent: i,
              progress: n,
              total: t,
            }),
            foregroundColor: w.Color.BLUE_345,
          });
        }
        renderProgress() {
          let { state: e } = this.props.item,
            t = null != e ? e.stage : null;
          switch (t) {
            case w.DispatchApplicationStages.PATCHING:
            case w.DispatchApplicationStages.REPAIRING:
              return this.renderProgressPatching();
            default:
              return this.renderProgressDefault();
          }
        }
        render() {
          let { item: e, cellProps: t } = this.props;
          if (e.finished) return this.renderFinished();
          if (e.index > 0) return this.renderQueued();
          if (
            null != e.state &&
            (e.state.type === w.LocalDispatchApplicationStates.UPDATING ||
              e.state.type === w.LocalDispatchApplicationStates.REPAIRING ||
              e.state.type === w.LocalDispatchApplicationStates.INSTALLING)
          )
            return null != t && t.paused
              ? this.renderPaused()
              : this.renderProgress();
          return null;
        }
        constructor(...e) {
          super(...e),
            (this.renderProgressPatchingBody = (e, t) => {
              let {
                item: { state: n },
              } = this.props;
              if (null == n) return null;
              let {
                stage: a,
                progress: s,
                total: l,
                type: i,
                readerProgress: r,
              } = n;
              if (null == s || null == l || null == a) return null;
              let o = U.calculateProgressPercentage(s, l),
                u = U.calculateProgressPercentage(null != r ? r : 0, l),
                d = (e[e.length - 1] / t) * 1e3,
                c = l - s,
                f = z({
                  type: i,
                  stage: a,
                  percent: Math.floor(o),
                  progress: s,
                  total: l,
                  secondsRemaining: 0 !== d ? Math.max(1, c / d) : null,
                });
              return this.renderStackedProgress({
                percents: [o, u],
                message: f,
              });
            });
        }
      }
      let Z = () =>
          (0, a.jsx)(V, {
            icon: x.default,
            tooltip: k.default.Messages.GAME_LIBRARY_UPDATES_ACTION_RESUME,
            onClick: () => _.resume(),
          }),
        X = () =>
          (0, a.jsx)(V, {
            icon: y.default,
            tooltip: k.default.Messages.GAME_LIBRARY_UPDATES_ACTION_PAUSE,
            onClick: () => _.pause(),
          }),
        J = e => {
          let { item: t } = e;
          return (0, a.jsx)(V, {
            icon: P.default,
            tooltip: k.default.Messages.GAME_LIBRARY_UPDATES_ACTION_MOVE_UP,
            onClick: () => _.moveUp(t.applicationId, t.branchId),
          });
        },
        $ = e => {
          let { item: t } = e;
          return (0, a.jsx)(V, {
            icon: D.default,
            tooltip: k.default.Messages.GAME_LIBRARY_UPDATES_ACTION_REMOVE,
            onClick: () => _.cancel(t.applicationId, t.branchId),
          });
        },
        ee = [
          {
            key: q.NAME,
            cellClassName: F.nameCell,
            render: e =>
              (0, a.jsxs)(O.default, {
                align: O.default.Align.CENTER,
                children: [
                  (0, a.jsx)(v.default, {
                    game: e.application,
                    className: F.gameIcon,
                    size: v.default.Sizes.SMALL,
                  }),
                  (0, a.jsx)("div", {
                    className: F.nameCellText,
                    children: e.application.name,
                  }),
                ],
              }),
          },
          {
            key: q.PROGRESS,
            cellClassName: F.progressCell,
            headerCellClassName: F.progressCellHeader,
            bodyCellClassName: F.progressCellBody,
            render: (e, t) => (0, a.jsx)(Q, { item: e, cellProps: t }),
          },
          {
            key: q.ACTIONS,
            cellClassName: F.actionsCell,
            render(e, t) {
              let n, s;
              return (
                e.finished
                  ? (n =
                      null != e.libraryApplication
                        ? (0, a.jsx)(C.default, {
                            libraryApplication: e.libraryApplication,
                            size: f.Button.Sizes.SMALL,
                            className: F.gameActionButton,
                            source:
                              w.AnalyticsLocations.APPLICATION_LIBRARY_UPDATES,
                          })
                        : null)
                  : null != e.state
                    ? e.state.type !==
                        w.LocalDispatchApplicationStates.UP_TO_DATE &&
                      ((n =
                        e.index > 0
                          ? (0, a.jsx)(J, { item: e })
                          : null != t && t.paused
                            ? (0, a.jsx)(Z, {})
                            : (0, a.jsx)(X, { item: e })),
                      (s = (0, a.jsx)($, { item: e })))
                    : (s = (0, a.jsx)($, { item: e })),
                (0, a.jsxs)(O.default, {
                  justify: O.default.Justify.END,
                  children: [n, s],
                })
              );
            },
          },
        ];
      class et extends s.PureComponent {
        componentDidMount() {
          window.addEventListener("resize", this.throttledUpdateHeight);
        }
        componentDidUpdate(e) {
          this.props.height !== e.height && this.throttledUpdateHeight();
        }
        componentWillUnmount() {
          let { applications: e } = this.props;
          e.forEach(e => {
            e.finished &&
              E.default.wait(() => {
                _.removeFinished(e.applicationId, e.branchId);
              });
          }),
            window.removeEventListener("resize", this.throttledUpdateHeight),
            (this.isUnmounted = !0);
        }
        render() {
          let {
            applications: e,
            paused: t,
            isFocused: s,
            theme: l,
            analyticsContext: r,
          } = this.props;
          return 0 === e.length
            ? null
            : (0, a.jsxs)("div", {
                className: F.gameUpdates,
                children: [
                  (0, a.jsxs)("div", {
                    className: F.headerRow,
                    children: [
                      (0, a.jsx)(j.default, {
                        className: i(F.headerCell, F.networkProgress),
                        title:
                          k.default.Messages
                            .GAME_LIBRARY_UPDATES_HEADER_NETWORK,
                        getHistoricalTotalBytes:
                          A.default.getHistoricalTotalBytesDownloaded,
                        color: w.Color.GREEN_360,
                        animate: s,
                      }),
                      (0, a.jsx)(j.default, {
                        className: i(F.headerCell, F.diskProgress),
                        title:
                          k.default.Messages.GAME_LIBRARY_UPDATES_HEADER_DISK,
                        getHistoricalTotalBytes:
                          A.default.getHistoricalTotalBytesWritten,
                        color: w.Color.BLUE_345,
                        animate: s,
                      }),
                    ],
                  }),
                  (0, a.jsx)(M.default, {
                    hasHeader: !1,
                    columns: ee,
                    data: e,
                    className: F.table,
                    rowClassName: F.row,
                    rowComponent: B,
                    cellProps: { paused: t, isFocused: s, theme: l },
                    rowProps: {
                      onContextMenu: (e, t) => {
                        var s, l, i;
                        return (
                          (s = e),
                          (l = t),
                          (i = r),
                          void h.openContextMenuLazy(s, async () => {
                            let { default: e } = await n
                              .el("975419")
                              .then(n.bind(n, "975419"));
                            return t =>
                              (0, a.jsx)(e, {
                                ...t,
                                applicationId: l.applicationId,
                                branchId: l.branchId,
                                analyticsContext: i,
                              });
                          })
                        );
                      },
                    },
                    bodyCellClassName: F.cell,
                  }),
                ],
              });
        }
        constructor(...e) {
          super(...e),
            (this.isUnmounted = !1),
            (this.isTallerThanHalfViewport = !1),
            (this.throttledUpdateHeight = o.throttle(() => {
              if (this.isUnmounted) return;
              let { height: e, onHeightTallerThanHalfViewportChange: t } =
                  this.props,
                n = e > window.innerHeight / 2;
              this.isTallerThanHalfViewport !== n &&
                ((this.isTallerThanHalfViewport = n), t(n));
            }, 1e3));
        }
      }
      function en(e, t, n, a) {
        return e.reduce((e, s, l) => {
          let { applicationId: i, branchId: r } = s,
            o = n.getApplication(i),
            u = a.getState(i, r);
          return (
            null != o &&
              e.push({
                key: "".concat(i, ":").concat(r),
                applicationId: i,
                branchId: r,
                state: u,
                application: o,
                libraryApplication: g.default.getLibraryApplication(i, r),
                finished: t,
                index: l,
              }),
            e
          );
        }, []);
      }
      var ea = (0, S.default)(
        u.default.connectStores(
          [m.default, A.default, N.default, T.default, R.default],
          () => {
            let e = en(N.default.activeItems, !1, m.default, A.default),
              t = en(N.default.finishedItems, !0, m.default, A.default);
            return {
              applications: [...e, ...t],
              paused: N.default.paused,
              isFocused: R.default.isFocused(),
              theme: T.default.theme,
            };
          }
        )((0, I.default)(et))
      );
    },
    630273: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("77078"),
        i = n("272030"),
        r = n("145079"),
        o = n("145131"),
        u = n("361724");
      class d extends s.PureComponent {
        handleContextMenu(e, t) {
          (0, i.openContextMenuLazy)(e, async () => {
            let { default: e } = await n.el("406784").then(n.bind(n, "406784"));
            return n => (0, a.jsx)(e, { ...n, user: t });
          });
        }
        renderUser(e) {
          return null == e
            ? null
            : (0, a.jsxs)(
                o.default,
                {
                  className: u.user,
                  align: o.default.Align.CENTER,
                  onContextMenu: t => {
                    null != e && this.handleContextMenu(t, e);
                  },
                  children: [
                    (0, a.jsx)(l.Avatar, {
                      src: e.getAvatarURL(void 0, 24),
                      "aria-label": e.username,
                      size: l.AvatarSizes.SIZE_24,
                      className: u.avatar,
                    }),
                    (0, a.jsx)(r.default, {
                      user: e,
                      className: u.tag,
                      usernameClass: u.username,
                      discriminatorClass: u.discriminator,
                    }),
                  ],
                },
                e.id
              );
        }
        render() {
          let { party: e, header: t } = this.props,
            n = e.map(e => this.renderUser(e));
          return (0, a.jsxs)("div", {
            className: u.userList,
            children: [
              (0, a.jsx)("div", { className: u.header, children: t }),
              (0, a.jsx)(l.ScrollerThin, {
                className: u.content,
                fade: !0,
                children: n,
              }),
            ],
          });
        }
      }
      var c = d;
    },
    945183: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return w;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("917351"),
        i = n.n(l),
        r = n("446674"),
        o = n("191225"),
        u = n("76393"),
        d = n("374014"),
        c = n("32346"),
        f = n("808422"),
        E = n("233069"),
        h = n("373469"),
        _ = n("271938"),
        C = n("42203"),
        I = n("305961"),
        S = n("42887"),
        m = n("385649"),
        p = n("945956"),
        T = n("18494"),
        g = n("280168"),
        A = n("800762"),
        N = n("316133"),
        R = n("449008"),
        O = n("709681"),
        v = n("49111");
      function L(e, t, n, a) {
        s.useEffect(() => {
          let s = t(),
            l = new r.BatchedStoreListener(e, () => {
              let e = t(),
                l = n(s, e);
              null != l &&
                !m.default.isSoundDisabled(l) &&
                (0, O.playSound)(l, null != a ? a : 0.4),
                (s = e);
            });
          return l.attach("useSound"), () => l.detach();
        });
      }
      function M() {
        return (
          L(
            [S.default, T.default],
            () => ({
              inVoiceChannel: null != T.default.getVoiceChannelId(),
              selfMute: S.default.isSelfMute(),
              selfDeaf: S.default.isSelfDeaf(),
              audioPermissionReady: S.default.isNativeAudioPermissionReady(),
            }),
            (e, t) => {
              let {
                inVoiceChannel: n,
                selfMute: a,
                selfDeaf: s,
                audioPermissionReady: l,
              } = t;
              return e.selfDeaf !== s
                ? s
                  ? "deafen"
                  : "undeafen"
                : l
                  ? (n || e.audioPermissionReady) && e.selfMute !== a
                    ? a
                      ? "mute"
                      : "unmute"
                    : void 0
                  : void 0;
            }
          ),
          null
        );
      }
      function P() {
        return (
          L(
            [C.default, p.default, T.default, u.default],
            () => {
              let e = C.default.getChannel(T.default.getVoiceChannelId()),
                t = null == e ? void 0 : e.type,
                n = null == e ? void 0 : e.getGuildId(),
                a = p.default.getWasEverRtcConnected(),
                s = p.default.getState();
              return {
                channelType: t,
                guildId: n,
                connected: s === v.RTCConnectionStates.RTC_CONNECTED,
                connectHasStarted:
                  (!a && s !== v.RTCConnectionStates.DISCONNECTED) ||
                  s === v.RTCConnectionStates.RTC_CONNECTED,
                awaitingRemote:
                  null != u.default.getAwaitingRemoteSessionInfo(),
                connectedRemote: null != u.default.getRemoteSessionId(),
              };
            },
            (e, t) => {
              let {
                  channelType: n,
                  connected: a,
                  connectHasStarted: s,
                  awaitingRemote: l,
                  connectedRemote: i,
                } = t,
                r = e.channelType,
                o = e.connectedRemote,
                u = e.connected,
                d = e.connectHasStarted;
              if ((!d && s) || (i && !o)) {
                if (null != n && E.SILENT_JOIN_LEAVE_CHANNEL_TYPES.has(n))
                  return;
                return "user_join";
              }
              if (u && !a) {
                if (
                  l ||
                  i ||
                  (null != r && E.SILENT_JOIN_LEAVE_CHANNEL_TYPES.has(r))
                )
                  return;
                return "disconnect";
              }
            }
          ),
          null
        );
      }
      function D() {
        return (
          L(
            [g.default],
            () => g.default.isCurrentUserSpeaking(),
            (e, t) => {
              if (e !== t) {
                let e = S.default.isSelfMute(),
                  n = S.default.getMode();
                if (n === v.InputModes.PUSH_TO_TALK && !e)
                  return t ? "ptt_start" : "ptt_stop";
              }
            }
          ),
          null
        );
      }
      function y() {
        return (
          L(
            [S.default],
            () => S.default.isSelfMutedTemporarily(),
            (e, t) => {
              if (e !== t) {
                let e = S.default.isSelfMute(),
                  n = S.default.getMode();
                if (n === v.InputModes.VOICE_ACTIVITY && !e)
                  return t ? "ptt_stop" : "ptt_start";
              }
            }
          ),
          null
        );
      }
      function x() {
        return (
          L(
            [A.default],
            () => A.default.userHasBeenMovedVersion,
            (e, t) => {
              if (e !== t) return "user_moved";
            }
          ),
          null
        );
      }
      function b() {
        return (
          L(
            [T.default, A.default],
            () => {
              let e = T.default.getVoiceChannelId();
              if (null == e) return f.RequestToSpeakStates.NONE;
              let t = A.default.getVoiceStateForChannel(e);
              return (0, f.getAudienceRequestToSpeakState)(t);
            },
            (e, t) => {
              if (
                e !== t &&
                t ===
                  f.RequestToSpeakStates
                    .REQUESTED_TO_SPEAK_AND_AWAITING_USER_ACK
              )
                return "reconnect";
            }
          ),
          null
        );
      }
      function U() {
        return (
          L(
            [T.default, h.default, _.default, A.default, C.default],
            () => {
              let e, t;
              let n = T.default.getVoiceChannelId(),
                a = _.default.getId();
              let s = [],
                l = null,
                i = 0,
                r = h.default.getAllActiveStreams();
              if (null != n) {
                let a = C.default.getChannel(n);
                null != a &&
                  ((e = a.type),
                  (t =
                    N.default.countVoiceStatesForChannel(a.id) -
                    (A.default.isInChannel(a.id) ? 1 : 0)),
                  (s = h.default
                    .getAllApplicationStreamsForChannel(a.id)
                    .map(e => e.ownerId)));
              }
              let o = null;
              return (
                (null ==
                (o =
                  1 === r.length
                    ? r[0]
                    : h.default.getCurrentUserActiveStream())
                  ? void 0
                  : o.state) === v.ApplicationStreamStates.CONNECTING &&
                  (o = null),
                null != o &&
                  ((l = (0, d.encodeStreamKey)(o)),
                  (i = h.default.getViewerIds(l).filter(e => e !== a).length)),
                {
                  channelType: e,
                  voiceChannelId: n,
                  voiceChannelUserCount: t,
                  streamingUserIds: s,
                  singleActiveStreamKey: l,
                  singleActiveStreamViewerCount: i,
                  currentUserId: a,
                  allActiveStreams: r,
                }
              );
            },
            (e, t) => {
              let {
                channelType: n,
                voiceChannelId: a,
                voiceChannelUserCount: s,
                streamingUserIds: l,
                singleActiveStreamKey: i,
                singleActiveStreamViewerCount: r,
                currentUserId: o,
              } = t;
              if (
                e.voiceChannelId !== a ||
                null == a ||
                (function (e) {
                  let t = C.default.getChannel(e);
                  if (null == t) return !1;
                  let n = t.getGuildId();
                  if (null == n) return !1;
                  let a = I.default.getGuild(n);
                  return null != a && a.afkChannelId === t.id;
                })(a) ||
                (null != n && E.SILENT_JOIN_LEAVE_CHANNEL_TYPES.has(n))
              )
                return;
              let u = null != i && e.singleActiveStreamKey === i,
                d = l.some(t => !e.streamingUserIds.includes(t)),
                c = e.allActiveStreams.map(e => e.ownerId),
                f = e.streamingUserIds.some(
                  e => !l.includes(e) && (e === o || c.includes(e))
                );
              if (d) return "stream_started";
              if (f) return "stream_ended";
              if (
                e.singleActiveStreamViewerCount <= 25 &&
                u &&
                r > e.singleActiveStreamViewerCount
              )
                return "stream_user_joined";
              else if (
                null != e.voiceChannelUserCount &&
                null != s &&
                e.voiceChannelUserCount <= 25 &&
                s > e.voiceChannelUserCount
              )
                return "user_join";
              else if (
                null != e.voiceChannelUserCount &&
                null != s &&
                e.voiceChannelUserCount <= 25 &&
                s < e.voiceChannelUserCount
              )
                return "user_leave";
              else if (
                e.singleActiveStreamViewerCount <= 25 &&
                u &&
                r < e.singleActiveStreamViewerCount
              )
                return "stream_user_left";
            }
          ),
          null
        );
      }
      function G() {
        return (
          L(
            [T.default, o.default, _.default],
            () => {
              let e = T.default.getVoiceChannelId(),
                t = _.default.getId(),
                n = (0, R.isNotNullish)(e)
                  ? o.default.getEmbeddedActivitiesForChannel(e)
                  : o.NO_ACTIVITIES;
              return {
                voiceChannelId: e,
                currentUserId: t,
                channelActivities: n,
              };
            },
            (e, t) => {
              let n,
                {
                  voiceChannelId: a,
                  currentUserId: s,
                  channelActivities: l,
                } = t;
              if (null == a) return;
              e.channelActivities.length < l.length && (n = "activity_launch");
              let i = e.channelActivities.find(e => e.userIds.has(s)),
                r = l.find(e => e.userIds.has(s));
              return (
                void 0 === r && (0, R.isNotNullish)(i) && (n = "activity_end"),
                void 0 === i &&
                  (0, R.isNotNullish)(r) &&
                  r.userIds.size > 1 &&
                  (n = "activity_user_join"),
                (0, R.isNotNullish)(r) &&
                  (0, R.isNotNullish)(i) &&
                  (r.userIds.size > i.userIds.size &&
                    (n = "activity_user_join"),
                  r.userIds.size < i.userIds.size &&
                    (n = "activity_user_left")),
                n
              );
            }
          ),
          null
        );
      }
      function j() {
        return (
          L(
            [c.default, T.default],
            () => ({
              hangStatus: c.default.getCurrentHangStatus(),
              customHangStatus: c.default.getCustomHangStatus(),
              inVoice: null != T.default.getVoiceChannelId(),
            }),
            (e, t) => {
              var n, a;
              let { hangStatus: s, customHangStatus: l } = t;
              if (
                e.inVoice &&
                ((null != s && s !== e.hangStatus) ||
                  (null != l &&
                    (l.status !==
                      (null === (n = e.customHangStatus) || void 0 === n
                        ? void 0
                        : n.status) ||
                      !i.isEqual(
                        l.emoji,
                        null === (a = e.customHangStatus) || void 0 === a
                          ? void 0
                          : a.emoji
                      ))))
              )
                return "hang_status_select";
            },
            0.15
          ),
          null
        );
      }
      function w() {
        return (0, a.jsxs)(a.Fragment, {
          children: [
            (0, a.jsx)(M, {}),
            (0, a.jsx)(P, {}),
            (0, a.jsx)(D, {}),
            (0, a.jsx)(y, {}),
            (0, a.jsx)(x, {}),
            (0, a.jsx)(U, {}),
            (0, a.jsx)(b, {}),
            (0, a.jsx)(G, {}),
            (0, a.jsx)(j, {}),
          ],
        });
      }
    },
    31: function (e, t, n) {
      "use strict";
      n.r(t);
      var a = n("353908");
      n.es(a, t);
    },
    225288: function (e, t, n) {
      "use strict";
      n.r(t);
      var a = n("718729");
      n.es(a, t);
    },
    91297: function (e, t, n) {
      "use strict";
      n.r(t);
      var a = n("179367");
      n.es(a, t);
    },
    696526: function (e, t, n) {
      "use strict";
      n.r(t);
      var a = n("921590");
      n.es(a, t);
    },
    422244: function (e, t, n) {
      "use strict";
      n.r(t);
      var a = n("696597");
      n.es(a, t);
    },
    902515: function (e, t, n) {
      "use strict";
      n.r(t);
      var a = n("437736");
      n.es(a, t);
    },
    215118: function (e, t, n) {
      "use strict";
      n.r(t);
      var a = n("569969");
      n.es(a, t);
    },
    409186: function (e, t, n) {
      "use strict";
      n.r(t);
      var a = n("90769");
      n.es(a, t);
    },
    402309: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useIsMassMentionsDefaultDisabledExperiment: function () {
            return o;
          },
          useCanCurrentUserViewDisableUnsafeGuildSettingsNotice: function () {
            return u;
          },
        });
      var a = n("446674"),
        s = n("862205"),
        l = n("957255"),
        i = n("49111");
      let r = (0, s.createExperiment)({
        kind: "guild",
        id: "2022-11_default_disable_mass_mention",
        label: "Disable mass mentions for communities by default",
        defaultConfig: { enabled: !1 },
        treatments: [{ id: 1, label: "Enabled", config: { enabled: !0 } }],
      });
      function o(e) {
        return r.useExperiment(
          { guildId: e, location: "dd4beb_1" },
          { autoTrackExposure: !0 }
        );
      }
      function u(e) {
        var t;
        let n = (0, a.useStateFromStores)([l.default], () =>
            l.default.can(i.Permissions.MANAGE_GUILD, e)
          ),
          { enabled: s } = r.useExperiment(
            {
              guildId:
                null !== (t = null == e ? void 0 : e.id) && void 0 !== t
                  ? t
                  : i.EMPTY_STRING_SNOWFLAKE_ID,
              location: "dd4beb_3",
            },
            { autoTrackExposure: !0 }
          );
        if (null == e) return !1;
        let o = e.hasFeature(i.GuildFeatures.COMMUNITY);
        return n && o && s;
      }
    },
    241845: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          UserTriggerAAExperiment: function () {
            return l;
          },
          useGlobalTriggerDebugging: function () {
            return r;
          },
        });
      var a = n("862205"),
        s = n("565034");
      let l = (0, a.createExperiment)({
          kind: "user",
          id: s.userTriggerExperimentId,
          label: "Trigger Debugging User AA Experiment",
          defaultConfig: { inUse: !1 },
          treatments: [{ id: 1, label: "On", config: { inUse: !0 } }],
        }),
        i = (0, a.createExperiment)({
          kind: "guild",
          id: s.guildTriggerExperimentId,
          label: "Trigger Debugging Guild AA Experiment",
          defaultConfig: { inUse: !1 },
          treatments: [{ id: 1, label: "On", config: { inUse: !0 } }],
        }),
        r = e => {
          let t = "guild trigger debug",
            n = "user trigger debug";
          i.useExperiment(
            { location: t, guildId: e },
            { autoTrackExposure: !1 }
          ),
            i.trackExposure({ location: t, guildId: e }),
            l.useExperiment({ location: n }, { autoTrackExposure: !1 }),
            l.trackExposure({ location: n });
        };
    },
    939443: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useNullExperiment: function () {
            return l;
          },
        });
      var a = n("862205");
      let s = (0, a.createExperiment)({
        kind: "user",
        id: "2023-04_null_experiment",
        label: "Null Experiment",
        defaultConfig: { inUse: !1 },
        treatments: [{ id: 1, label: "On", config: { inUse: !0 } }],
      });
      function l() {
        let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
        return s.useExperiment(
          { location: "a9e81b_1" },
          { autoTrackExposure: e }
        );
      }
    },
    607742: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useIsSafetyConsumerEducationAAEnabled: function () {
            return l;
          },
        });
      var a = n("862205");
      let s = (0, a.createExperiment)({
        kind: "user",
        id: "2023-03_mute_block_aa",
        label: "Safety Consumer Education Block/Mute - A/A",
        defaultConfig: { bucket: 0, enabled: !1 },
        treatments: [
          { id: 1, label: "Mute", config: { bucket: 1, enabled: !0 } },
          { id: 2, label: "Block", config: { bucket: 2, enabled: !0 } },
        ],
      });
      function l() {
        return s.useExperiment(
          { location: "34e1bc_1" },
          { autoTrackExposure: !0 }
        ).enabled;
      }
    },
    415929: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useIsSafetyConsumerEducationBlockMuteEnabled: function () {
            return l;
          },
          useIsSafetyConsumerEducationBlockMuteBucket: function () {
            return i;
          },
        });
      var a = n("862205");
      let s = (0, a.createExperiment)({
        kind: "user",
        id: "2023-01_consumer_education_launch",
        label: "Safety Consumer Education Launch - Block/Mute",
        defaultConfig: { bucket: 0, enabled: !1 },
        treatments: [
          { id: 1, label: "Mute", config: { bucket: 1, enabled: !0 } },
          { id: 2, label: "Block", config: { bucket: 2, enabled: !0 } },
        ],
      });
      function l() {
        return s.useExperiment(
          { location: "b85a21_1" },
          { autoTrackExposure: !0 }
        ).enabled;
      }
      function i() {
        return s.useExperiment(
          { location: "b85a21_2" },
          { autoTrackExposure: !1 }
        ).bucket;
      }
    },
    127205: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useIsSafetyConsumerEducationReportingEnabled: function () {
            return l;
          },
        });
      var a = n("862205");
      let s = (0, a.createExperiment)({
        kind: "user",
        id: "2023-04_consumer_education_launch__reporting",
        label: "Consumer Education Launch - Reporting",
        defaultConfig: { bucket: 0, enabled: !1 },
        treatments: [
          { id: 1, label: "Reporting", config: { bucket: 1, enabled: !0 } },
        ],
      });
      function l() {
        return s.useExperiment(
          { location: "183c74_1" },
          { autoTrackExposure: !0 }
        ).enabled;
      }
    },
    687531: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useIsDmSpamFilterCoachmarkEnabled: function () {
            return l;
          },
        });
      var a = n("862205");
      let s = (0, a.createExperiment)({
        kind: "user",
        id: "2023-04_dm_spam_filter_coachmark",
        label: "Safety DM Spam Filter Coachmark rollout",
        defaultConfig: { enabled: !1 },
        treatments: [{ id: 1, label: "Enabled", config: { enabled: !0 } }],
      });
      function l() {
        return s.useExperiment(
          { location: "acbeda_1" },
          { autoTrackExposure: !1 }
        ).enabled;
      }
    },
    74456: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useIsRejectAllMessageRequestsEnabled: function () {
            return l;
          },
        });
      var a = n("862205");
      let s = (0, a.createExperiment)({
        kind: "user",
        id: "2023-01_clear_all_message_requests",
        label: "Safety Experience Reject All Message Requests",
        defaultConfig: { enabled: !1 },
        treatments: [{ id: 1, label: "Enabled", config: { enabled: !0 } }],
      });
      function l() {
        return s.useExperiment(
          { location: "c10bec_1" },
          { autoTrackExposure: !0 }
        ).enabled;
      }
    },
    533280: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          supported: function () {
            return s;
          },
          createUtterance: function () {
            return l;
          },
          speakUtterance: function () {
            return i;
          },
          cancelAll: function () {
            return r;
          },
        }),
        n("781738");
      var a = n("981957");
      let s = null != window.speechSynthesis;
      function l(e, t) {
        let n = e.replace(/(https?:\/\/[^\s]+)/g, e => {
          let t = e.match(/^https?:\/\/(?:www\.)?([^/?#]+)(?:[/?#]|$)/i);
          return null != t ? t[1] : "";
        });
        null != t &&
          n.length > t &&
          (n = (n = n.substring(0, t)).substring(
            0,
            Math.min(n.length, n.lastIndexOf(" "))
          ));
        let s = new SpeechSynthesisUtterance(n);
        return (s.rate = a.default.speechRate), s;
      }
      function i(e, t) {
        s && ((e.voice = t), speechSynthesis.speak(e));
      }
      function r() {
        s && speechSynthesis.cancel();
      }
    },
    992204: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        }),
        n("222007");
      var a = n("446674"),
        s = n("913144"),
        l = n("954016");
      let i = new Set(),
        r = new Set([l.WhatsNewSection.DISCORD_TURNS_8]);
      class o extends a.default.PersistedStore {
        initialize(e) {
          null != e &&
            (Array.isArray(e.acknowledged) && (i = new Set(e.acknowledged)),
            Array.isArray(e.opened) && (r = new Set(e.opened)));
        }
        getState() {
          return { acknowledged: i, opened: r };
        }
        getOpened() {
          return r;
        }
        getAcknowledged() {
          return i;
        }
        isOpened(e) {
          return r.has(e);
        }
        isAcknowledged(e) {
          return i.has(e);
        }
      }
      (o.displayName = "ActivitiesWhatsNewStore"),
        (o.persistKey = "ActivitiesWhatsNewStore");
      var u = new o(s.default, {
        ACTIVITIES_WHATS_NEW_ACKNOWLEDGE_SECTION: function (e) {
          let { section: t } = e;
          i.add(t);
        },
        ACTIVITIES_WHATS_NEW_MARK_OPENED_SECTION: function (e) {
          let { section: t } = e;
          r.add(t);
        },
      });
    },
    334788: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ExperimentBirthdayActivitiesGdmTile: function () {
            return s;
          },
        });
      var a = n("862205");
      let s = (0, a.createExperiment)({
        kind: "user",
        id: "2023-04_birthday_activities_whats_new_gdm_tile",
        label: "Birthday Activities Whats New GDM Tile",
        defaultConfig: { enabled: !1 },
        treatments: [
          { id: 1, label: "Enable GDM tile", config: { enabled: !0 } },
        ],
      });
    },
    891654: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ExperimentBirthdayActivitiesJamspaceTile: function () {
            return s;
          },
        });
      var a = n("862205");
      let s = (0, a.createExperiment)({
        kind: "user",
        id: "2023-04_birthday_activities_jamspace_tile",
        label: "Birthday Activities Whats New Jamspace Tile",
        defaultConfig: { enabled: !1 },
        treatments: [
          { id: 1, label: "Enable Jamspace tile", config: { enabled: !0 } },
        ],
      });
    },
    885412: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ExperimentBirthdayActivitiesPokerTile: function () {
            return s;
          },
        });
      var a = n("862205");
      let s = (0, a.createExperiment)({
        kind: "user",
        id: "2023-05_birthday_activities_poker",
        label: "Birthday Activities Poker Tile",
        defaultConfig: { enabled: !1 },
        treatments: [
          { id: 1, label: "Enable Poker tile", config: { enabled: !0 } },
        ],
      });
    },
    629388: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ExperimentBirthdayActivitiesPuttPartyTile: function () {
            return s;
          },
        });
      var a = n("862205");
      let s = (0, a.createExperiment)({
        kind: "user",
        id: "2023-04_birthday_activities_putt_party_tile",
        label: "Birthday Activities Whats New Putt Party Tile",
        defaultConfig: { enabled: !1 },
        treatments: [
          { id: 1, label: "Enable Putt Party tile", config: { enabled: !0 } },
        ],
      });
    },
    499031: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var a,
        s,
        l,
        i,
        r = n("773336");
      function o(e) {
        if ((0, r.isIOS)()) return e;
        if (!(0, r.isAndroid)()) return -1;
        switch (e) {
          case 0:
            return 0;
          case 1:
          case 2:
            return 1;
          case 3:
            return 2;
          case 4:
          case 5:
          case 6:
            return 3;
          default:
            return -1;
        }
      }
      ((a = l || (l = {}))[(a.UNHANDLED = -1)] = "UNHANDLED"),
        (a[(a.NOMINAL = 0)] = "NOMINAL"),
        (a[(a.FAIR = 1)] = "FAIR"),
        (a[(a.SERIOUS = 2)] = "SERIOUS"),
        (a[(a.CRITICAL = 3)] = "CRITICAL"),
        ((s = i || (i = {}))[(s.NONE = 0)] = "NONE"),
        (s[(s.LIGHT = 1)] = "LIGHT"),
        (s[(s.MODERATE = 2)] = "MODERATE"),
        (s[(s.SEVERE = 3)] = "SEVERE"),
        (s[(s.CRITICAL = 4)] = "CRITICAL"),
        (s[(s.EMERGENCY = 5)] = "EMERGENCY"),
        (s[(s.SHUTDOWN = 6)] = "SHUTDOWN");
    },
    503525: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useActivitiesWhatsNewCount: function () {
            return d;
          },
          getActivitiesWhatsNewCount: function () {
            return c;
          },
        });
      var a = n("446674"),
        s = n("992204"),
        l = n("334788"),
        i = n("891654"),
        r = n("885412"),
        o = n("629388"),
        u = n("954016");
      function d() {
        return (0, a.useStateFromStores)([s.default], () => c(s.default));
      }
      function c(e) {
        let t = 0,
          n = e.getAcknowledged();
        return (
          l.ExperimentBirthdayActivitiesGdmTile.getCurrentConfig({
            location: "1d9280_2",
          }).enabled &&
            !n.has(u.WhatsNewSection.GDM_ACTIVITIES) &&
            t++,
          o.ExperimentBirthdayActivitiesPuttPartyTile.getCurrentConfig({
            location: "1d9280_3",
          }).enabled &&
            !n.has(u.WhatsNewSection.PUTT_PARTY) &&
            t++,
          i.ExperimentBirthdayActivitiesJamspaceTile.getCurrentConfig({
            location: "1d9280_4",
          }).enabled &&
            !n.has(u.WhatsNewSection.JAMSPACE) &&
            t++,
          r.ExperimentBirthdayActivitiesPokerTile.getCurrentConfig({
            location: "1d9280_5",
          }).enabled &&
            !n.has(u.WhatsNewSection.POKER) &&
            t++,
          !n.has(u.WhatsNewSection.DISCORD_TURNS_8) && t <= 0 && t++,
          t
        );
      }
    },
    299803: function (e, t, n) {
      "use strict";
      function a(e, t) {
        return (
          null != e.application_id &&
          null == t.getApplicationActivity(e.application_id, !1)
        );
      }
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
    },
    984497: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ACTIVITY_ENCOURAGES_HW_ACCELERATION: function () {
            return h;
          },
          default: function () {
            return _;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("77078"),
        i = n("452804"),
        r = n("442939"),
        o = n("145131"),
        u = n("599110"),
        d = n("50885"),
        c = n("49111"),
        f = n("782340"),
        E = n("757836");
      let h = "Activity Encourages Hardware Acceleration";
      function _(e) {
        var t;
        let { applicationId: n, ..._ } = e,
          [C, I] = s.useState(!1),
          [S] = (0, r.default)([n]),
          m =
            null !== (t = null == S ? void 0 : S.name) && void 0 !== t
              ? t
              : "This Activity";
        s.useEffect(() => {
          u.default.track(c.AnalyticEvents.OPEN_MODAL, { type: h });
        }, []);
        let p = () => {
          let e = "temporary";
          C &&
            ((e = "permanent"),
            i.default.updatedUnsyncedSettings({
              disableActivityHardwareAccelerationPrompt: !0,
            })),
            u.default.track(c.AnalyticEvents.MODAL_DISMISSED, {
              type: h,
              dismiss_type: e,
            }),
            _.onClose();
        };
        return (0, a.jsxs)(l.ModalRoot, {
          className: E.root,
          "aria-label":
            f.default.Messages.ACTIVITY_HARDWARE_ACCELERATION_BETTER_TITLE,
          ..._,
          children: [
            (0, a.jsxs)(l.ModalHeader, {
              separator: !1,
              children: [
                (0, a.jsx)(l.Text, {
                  className: E.header,
                  variant: "text-lg/normal",
                  children:
                    f.default.Messages
                      .ACTIVITY_HARDWARE_ACCELERATION_BETTER_TITLE,
                }),
                (0, a.jsx)(l.ModalCloseButton, {
                  onClick: p,
                  className: E.closeButton,
                }),
              ],
            }),
            (0, a.jsx)(l.ModalContent, {
              className: E.content,
              children: (0, a.jsx)(l.Text, {
                variant: "text-md/normal",
                className: E.ratingBody,
                children:
                  f.default.Messages.ACTIVITY_HARDWARE_ACCELERATION_BETTER_BODY.format(
                    { applicationName: m }
                  ),
              }),
            }),
            (0, a.jsxs)(l.ModalFooter, {
              className: E.footer,
              direction: o.default.Direction.HORIZONTAL,
              children: [
                (0, a.jsx)(l.Checkbox, {
                  type: l.Checkbox.Types.INVERTED,
                  size: 18,
                  value: C,
                  onChange: () => I(!C),
                  children: (0, a.jsx)(l.Text, {
                    variant: "text-sm/normal",
                    children: f.default.Messages.DONT_SHOW_AGAIN,
                  }),
                }),
                (0, a.jsx)(l.Button, {
                  color: l.Button.Colors.PRIMARY,
                  onClick: p,
                  children:
                    f.default.Messages.ACTIVITY_HARDWARE_ACCELERATION_NO_THANKS,
                }),
                (0, a.jsx)(l.Button, {
                  color: l.Button.Colors.BRAND,
                  onClick: () => {
                    u.default.track(
                      c.AnalyticEvents.ACTIVITY_ENABLE_HARDWARE_ACCELERATION,
                      { application_id: n }
                    ),
                      d.default.setEnableHardwareAcceleration(!0);
                  },
                  children:
                    f.default.Messages
                      .ACTIVITY_HARDWARE_ACCELERATION_TURN_IT_ON,
                }),
              ],
            }),
          ],
        });
      }
    },
    987697: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
      var a = (0, n("269936").makeLazy)({
        createPromise: () => n.el("321927").then(n.bind(n, "321927")),
        webpackId: "321927",
      });
    },
    464682: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
      var a = (0, n("269936").makeLazy)({
        createPromise: () => n.el("577766").then(n.bind(n, "577766")),
        webpackId: "577766",
      });
    },
    581516: function (e, t, n) {
      "use strict";
      let a;
      n.r(t),
        n.d(t, {
          default: function () {
            return g;
          },
        });
      var s = n("913144"),
        l = n("600965"),
        i = n("316272"),
        r = n("292687"),
        o = n("42203"),
        u = n("778588"),
        d = n("449501"),
        c = n("945956"),
        f = n("18494"),
        E = n("162771"),
        h = n("800762"),
        _ = n("191225"),
        C = n("420444"),
        I = n("320817"),
        S = n("49111");
      function m() {
        let e = c.default.getChannelId(),
          t = _.default.getConnectedActivityChannelId(),
          n = _.default.getSelfEmbeddedActivityForChannel(
            null != t ? t : S.EMPTY_STRING_SNOWFLAKE_ID
          ),
          i = o.default.getChannel(e),
          r = o.default.getChannel(t),
          u = null == t || ((null == e || null == i) && (0, C.default)(t));
        if (u || null == t || null == r || null == n)
          return (function () {
            let e = a;
            null != e &&
              d.default.isOpen(e) &&
              (s.default.wait(() => l.close(e)), (a = null));
          })();
        {
          let e = (0, I.default)(t, n.applicationId);
          return (function (e, t) {
            if (d.default.isOpen(t)) return !1;
            s.default.wait(() =>
              l.open(t, S.PictureInPictureComponents.EMBED_IFRAME, {
                channel: e,
              })
            ),
              (a = t);
          })(r, e);
        }
      }
      function p() {
        let e = u.default.hasLayers(),
          t = r.default.getWindowOpen(S.PopoutWindowKeys.CHANNEL_CALL_POPOUT);
        return e && !t
          ? (function () {
              let e = a;
              null != e &&
                d.default.isOpen(e) &&
                s.default.wait(() => l.hide(e));
            })()
          : (function () {
              let e = a;
              null != e &&
                d.default.isOpen(e) &&
                s.default.wait(() => l.show(e));
            })();
      }
      class T extends i.default {
        _initialize() {
          f.default.addChangeListener(m),
            E.default.addChangeListener(m),
            c.default.addChangeListener(m),
            h.default.addChangeListener(m),
            r.default.addChangeListener(m),
            _.default.addChangeListener(m),
            u.default.addChangeListener(p);
        }
        _terminate() {
          f.default.removeChangeListener(m),
            E.default.removeChangeListener(m),
            c.default.removeChangeListener(m),
            h.default.removeChangeListener(m),
            r.default.removeChangeListener(m),
            _.default.removeChangeListener(m),
            u.default.removeChangeListener(p);
        }
      }
      var g = new T();
    },
    159997: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        }),
        n("702976");
      var a = n("292687"),
        s = n("568734"),
        l = n("420444"),
        i = n("49111");
      function r(e, t) {
        var n;
        let r = (0, s.hasFlag)(
            null !== (n = e.flags) && void 0 !== n ? n : 0,
            i.ApplicationFlags.EMBEDDED
          ),
          o = a.default.getWindowOpen(i.PopoutWindowKeys.CHANNEL_CALL_POPOUT);
        return r && o && (0, l.default)(t);
      }
    },
    321836: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("77078"),
        l = n("168973"),
        i = n("599110"),
        r = n("773336"),
        o = n("50885"),
        u = n("984497"),
        d = n("49111");
      let c = "activity-hardware-acceleration-modal";
      function f(e) {
        let t = !l.default.disableActivityHardwareAccelerationPrompt;
        t &&
          r.isPlatformEmbedded &&
          !o.default.getEnableHardwareAcceleration() &&
          (0, s.openModalLazy)(
            async () => {
              let { default: t } = await n
                .el("984497")
                .then(n.bind(n, "984497"));
              return n => (0, a.jsx)(t, { applicationId: e, ...n });
            },
            {
              modalKey: c,
              onCloseRequest: () => {
                i.default.track(d.AnalyticEvents.MODAL_DISMISSED, {
                  type: u.ACTIVITY_ENCOURAGES_HW_ACCELERATION,
                }),
                  (0, s.closeModal)(c);
              },
            }
          );
      }
    },
    587984: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          openActivityShareMomentModal: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("77078"),
        l = n("870346"),
        i = n("49111");
      function r(e) {
        let { applicationId: t, channelId: r, mediaUrl: o } = e,
          u = l.default.getWindowOpen(i.PopoutWindowKeys.CHANNEL_CALL_POPOUT),
          d = u ? s.POPOUT_MODAL_CONTEXT : s.DEFAULT_MODAL_CONTEXT;
        (0, s.openModalLazy)(
          async () => {
            let { default: e } = await n.el("611598").then(n.bind(n, "611598"));
            return n =>
              (0, a.jsx)(e, {
                applicationId: t,
                channelId: r,
                mediaUrl: o,
                ...n,
              });
          },
          { modalKey: "activity-share-moment-modal", contextKey: d }
        );
      }
    },
    669499: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          openAgeGateModal: function () {
            return r;
          },
          closeAgeGateModal: function () {
            return o;
          },
          openSuccessAgeGateModal: function () {
            return u;
          },
          openFailureAgeGateModal: function () {
            return d;
          },
        });
      var a = n("913144");
      n("437822"), n("393414");
      var s = n("599110"),
        l = n("586391"),
        i = n("49111");
      function r(e) {
        s.default.track(i.AnalyticEvents.OPEN_MODAL, {
          type: "Enter Your Birthday",
          source: { section: e },
        }),
          a.default.dispatch({ type: "AGE_GATE_MODAL_OPEN", source: e });
      }
      function o(e) {
        a.default.wait(() =>
          a.default.dispatch({ type: "AGE_GATE_MODAL_CLOSE" })
        ),
          void 0 !== e &&
            s.default.track(i.AnalyticEvents.AGE_GATE_ACTION, {
              source: e,
              action: l.AgeGateAnalyticAction.AGE_GATE_CLOSE,
            });
      }
      function u(e) {
        a.default.wait(() => {
          a.default.dispatch({ type: "AGE_GATE_SUCCESS_MODAL_OPEN" });
        }),
          s.default.track(i.AnalyticEvents.AGE_GATE_ACTION, {
            source: e,
            action: l.AgeGateAnalyticAction.AGE_GATE_SUCCESS,
          });
      }
      function d(e, t) {
        a.default.wait(() => {
          a.default.dispatch({
            type: "AGE_GATE_FAILURE_MODAL_OPEN",
            underageMessage: t,
          });
        }),
          s.default.track(i.AnalyticEvents.AGE_GATE_ACTION, {
            source: e,
            action: l.AgeGateAnalyticAction.AGE_GATE_FAILURE,
          });
      }
    },
    19009: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          userNeedsAgeGate: function () {
            return i;
          },
        });
      var a = n("697218"),
        s = n("299039");
      let l = new Date("06/16/2020");
      function i() {
        let e = a.default.getCurrentUser();
        return (
          null != e &&
          s.default.extractTimestamp(e.id) > l.getTime() &&
          !e.isClaimed() &&
          null == e.nsfwAllowed
        );
      }
    },
    182537: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return S;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("77078"),
        l = n("913144"),
        i = n("316272"),
        r = n("42203"),
        o = n("18494"),
        u = n("162771"),
        d = n("697218"),
        c = n("669499"),
        f = n("37016"),
        E = n("58069"),
        h = n("586391"),
        _ = n("49111");
      function C(e, t) {
        var n;
        if (null == e) return;
        let a = d.default.getCurrentUser(),
          s =
            null === (n = r.default.getChannel(t)) || void 0 === n
              ? void 0
              : n.isNSFW();
        s &&
          null != a &&
          null == a.nsfwAllowed &&
          (0, c.openAgeGateModal)(h.AgeGateSource.NSFW_CHANNEL);
      }
      class I extends i.default {
        _initialize() {
          l.default.subscribe("CONNECTION_OPEN", this.handleConnectionOpen),
            l.default.subscribe("CHANNEL_SELECT", this.handleChannelSelect),
            l.default.subscribe(
              "AGE_GATE_MODAL_OPEN",
              this.handleAgeGateModalOpen
            ),
            l.default.subscribe(
              "AGE_GATE_MODAL_CLOSE",
              this.handleAgeGateModalClose
            ),
            l.default.subscribe(
              "AGE_GATE_SUCCESS_MODAL_OPEN",
              this.handleAgeGateSuccess
            ),
            l.default.subscribe(
              "AGE_GATE_FAILURE_MODAL_OPEN",
              this.handleAgeGateFailure
            );
        }
        _terminate() {
          l.default.unsubscribe("CONNECTION_OPEN", this.handleConnectionOpen),
            l.default.unsubscribe("CHANNEL_SELECT", this.handleChannelSelect),
            l.default.unsubscribe(
              "AGE_GATE_MODAL_OPEN",
              this.handleAgeGateModalOpen
            ),
            l.default.unsubscribe(
              "AGE_GATE_MODAL_CLOSE",
              this.handleAgeGateModalClose
            ),
            l.default.unsubscribe(
              "AGE_GATE_SUCCESS_MODAL_OPEN",
              this.handleAgeGateSuccess
            ),
            l.default.unsubscribe(
              "AGE_GATE_FAILURE_MODAL_OPEN",
              this.handleAgeGateFailure
            );
        }
        handleChannelSelect(e) {
          let { guildId: t, channelId: n } = e;
          C(t, n);
        }
        handleConnectionOpen() {
          let e = u.default.getGuildId(),
            t = o.default.getChannelId();
          C(e, t);
        }
        handleAgeGateModalOpen(e) {
          let { source: t } = e;
          (0, s.openModalLazy)(
            async () => {
              let { default: e } = await n
                .el("673187")
                .then(n.bind(n, "673187"));
              return n => (0, a.jsx)(e, { source: t, ...n });
            },
            {
              modalKey: h.EXISTING_USER_AGE_GATE_MODAL_KEY,
              onCloseRequest: _.NOOP,
            }
          );
        }
        handleAgeGateSuccess() {
          (0, s.updateModal)(h.EXISTING_USER_AGE_GATE_MODAL_KEY, e =>
            (0, a.jsx)(E.default, { ...e })
          );
        }
        handleAgeGateFailure(e) {
          let { underageMessage: t } = e;
          (0, s.updateModal)(h.EXISTING_USER_AGE_GATE_MODAL_KEY, e =>
            (0, a.jsx)(f.default, { underageMessage: t, ...e })
          );
        }
        handleAgeGateModalClose() {
          (0, s.closeModal)(h.EXISTING_USER_AGE_GATE_MODAL_KEY);
        }
      }
      var S = new I();
    },
    37016: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("759843"),
        l = n("77078"),
        i = n("393414"),
        r = n("476765"),
        o = n("701909"),
        u = n("669499"),
        d = n("49111"),
        c = n("782340"),
        f = n("950258");
      function E() {
        (0, u.closeAgeGateModal)(), (0, i.transitionTo)(d.Routes.LOGIN);
      }
      function h(e) {
        let { underageMessage: t, transitionState: i } = e,
          u = (0, r.useUID)();
        return (0, a.jsxs)(l.ModalRoot, {
          transitionState: i,
          size: l.ModalSize.SMALL,
          "aria-labelledby": u,
          impression: {
            impressionName: s.ImpressionNames.USER_AGE_GATE_UNDERAGE,
            impressionProperties: { existing_user: !0 },
          },
          children: [
            (0, a.jsx)(l.ModalContent, {
              children: (0, a.jsxs)("div", {
                className: f.container,
                children: [
                  (0, a.jsx)("img", {
                    alt: "",
                    src: n("803452"),
                    className: f.img,
                  }),
                  (0, a.jsx)(l.Heading, {
                    variant: "heading-xl/semibold",
                    className: f.title,
                    id: u,
                    children:
                      c.default.Messages.AGE_GATE_UNDERAGE_EXISTING_HEADER,
                  }),
                  (0, a.jsx)(l.Text, {
                    color: "header-secondary",
                    className: f.subtitle,
                    variant: "text-sm/normal",
                    children: c.default.Messages.AGE_GATE_UNDERAGE_BODY.format({
                      underageMessage:
                        null != t
                          ? t
                          : c.default.Messages
                              .AGE_GATE_UNDERAGE_BODY_DEFAULT_REG_MESSAGE,
                      helpURL: o.default.getArticleURL(
                        d.HelpdeskArticles.AGE_GATE
                      ),
                    }),
                  }),
                  (0, a.jsx)(l.Text, {
                    color: "header-secondary",
                    className: f.subtitle,
                    variant: "text-sm/normal",
                    children:
                      c.default.Messages.AGE_GATE_UNDERAGE_EXISTING_BODY_DELETION_WITH_DAYS.format(
                        { days: 30 }
                      ),
                  }),
                ],
              }),
            }),
            (0, a.jsx)(l.ModalFooter, {
              children: (0, a.jsx)(l.Button, {
                size: l.ButtonSizes.SMALL,
                fullWidth: !0,
                onClick: E,
                children: c.default.Messages.AGE_GATE_UNDERAGE_BACK_TO_LOGIN,
              }),
            }),
          ],
        });
      }
    },
    58069: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("759843"),
        l = n("77078"),
        i = n("476765"),
        r = n("669499"),
        o = n("782340"),
        u = n("212428");
      function d(e) {
        let { transitionState: t } = e,
          d = (0, i.useUID)();
        return (0, a.jsxs)(l.ModalRoot, {
          transitionState: t,
          size: l.ModalSize.SMALL,
          "aria-labelledby": d,
          impression: {
            impressionName: s.ImpressionNames.USER_AGE_GATE,
            impressionProperties: { existing_user: !0 },
          },
          children: [
            (0, a.jsx)(l.ModalContent, {
              children: (0, a.jsxs)("div", {
                className: u.container,
                children: [
                  (0, a.jsx)("img", {
                    alt: "",
                    src: n("318548"),
                    className: u.img,
                  }),
                  (0, a.jsx)(l.Heading, {
                    variant: "heading-xl/semibold",
                    className: u.title,
                    id: d,
                    children: o.default.Messages.AGE_GATE_AGE_VERIFIED,
                  }),
                  (0, a.jsx)(l.Text, {
                    color: "header-secondary",
                    className: u.subtitle,
                    variant: "text-sm/normal",
                    children: o.default.Messages.AGE_GATE_AGE_VERIFIED_BODY,
                  }),
                ],
              }),
            }),
            (0, a.jsx)(l.ModalFooter, {
              children: (0, a.jsx)(l.Button, {
                size: l.ButtonSizes.SMALL,
                fullWidth: !0,
                onClick: function () {
                  (0, r.closeAgeGateModal)();
                },
                autoFocus: !0,
                children: o.default.Messages.CLOSE,
              }),
            }),
          ],
        });
      }
    },
    943183: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          initSessionHeartbeatScheduler: function () {
            return O;
          },
        }),
        n("70102");
      var a = n("95410"),
        s = n("913144"),
        l = n("918105"),
        i = n("963990"),
        r = n("161454"),
        o = n("945956"),
        u = n("599110"),
        d = n("718517"),
        c = n("872507"),
        f = n("286235"),
        E = n("371160"),
        h = n("49111");
      let _ = "LATEST_HEARTBEAST_EVENT_TIMESTAMP",
        C = null,
        I = null,
        S = null,
        m = !1;
      async function p() {
        if (m) return;
        (m = !0),
          (0, E.setSessionExtendingEnabled)(!0),
          f.default.addBreadcrumb({ message: "Start Analytics Heartbeat" });
        let e = await a.default.getAfterRefresh(_).then(E.timestampOrZero);
        if (!m) return;
        let t = Date.now(),
          n = 15 * d.default.Millis.MINUTE + e - t;
        n > d.default.Millis.HOUR &&
          f.default.addBreadcrumb({
            message:
              "Received invalid Date.now() when generating a heartbeat. Date.now() = "
                .concat(t, ", timeUntilNextHeartbeat = ")
                .concat(n, ", latestHeartbeatEventTimestamp = ")
                .concat(e),
          }),
          e > t && (n = 0),
          f.default.addBreadcrumb({
            message:
              "Received Last Heartbeat Event Timestamp. Time Until Next Heartbeat: ".concat(
                n / 1e3,
                " seconds. Scheduling Heartbeat"
              ),
          }),
          T(!1),
          (I = setTimeout(
            () => {
              g(),
                (C = setInterval(() => {
                  g();
                }, 15 * d.default.Millis.MINUTE));
            },
            Math.max(n, 0)
          ));
      }
      function T() {
        let e =
          !(arguments.length > 0) || void 0 === arguments[0] || arguments[0];
        null != I && (clearTimeout(I), (I = null)),
          null != C && (clearInterval(C), (C = null)),
          null != S && e && (clearTimeout(S), (S = null));
      }
      async function g() {
        let e = Date.now(),
          t = await (0, E.getSession)(),
          n = Date.now();
        if (null == t) {
          f.default.captureException(
            Error(
              "Null session when tracking session heartbeat. Waited ".concat(
                n - e,
                "ms"
              )
            )
          );
          return;
        }
        if (!m) {
          f.default.captureException(
            Error(
              "Heartbeat scheduler not started when tracking session heartbeat."
            )
          ),
            T();
          return;
        }
        f.default.addBreadcrumb({
          message: "Tracking Heartbeat",
          data: { initialized: t.initialized },
        });
        let s = {
            client_heartbeat_initialization_timestamp: t.initialized,
            client_heartbeat_version: 17,
          },
          o = c.default.getMemoryUsageElectronRenderer();
        null != o && (s.client_heartbeat_renderer_memory = o);
        let d = c.default.getMemoryUsageElectronRendererUsedHeapSize();
        null != d && (s.client_heartbeat_renderer_memory_used_heap = d);
        {
          let e = r.default.getCurrentGameForAnalytics();
          null != e &&
            ((s.client_heartbeat_current_game_id = e.id),
            (s.client_heartbeat_current_game_name = e.name),
            (s.client_heartbeat_current_game_executable = (0,
            i.removeExecutablePathPrefix)(e.exePath)),
            (s.client_heartbeat_current_game_distributor = e.distributor));
        }
        u.default.track(h.AnalyticEvents.CLIENT_HEARTBEAT, s),
          a.default.set(_, Date.now().toString()),
          (0, l.drainClickstream)();
      }
      let A = null,
        N = !0;
      function R() {
        if (
          N ||
          (null != A &&
            A !== h.RTCConnectionStates.DISCONNECTED &&
            A !== h.RTCConnectionStates.RTC_DISCONNECTED)
        )
          try {
            p();
          } catch (e) {
            f.default.captureException(e);
          }
        else
          !m ||
            ((m = !1),
            f.default.addBreadcrumb({
              message: "Stopping Analytics Heartbeat",
            }),
            (0, E.setSessionExtendingEnabled)(!1),
            T(),
            (0, l.drainClickstream)());
      }
      function O() {
        f.default.addBreadcrumb({
          message: "Initializing SessionHeartbeatScheduler",
        }),
          o.default.addChangeListener(L),
          s.default.subscribe("WINDOW_FOCUS", M),
          s.default.subscribe("APP_STATE_UPDATE", P),
          s.default.subscribe("LOGIN_SUCCESS", v),
          R();
      }
      function v() {
        g();
      }
      function L() {
        let e = o.default.getState();
        A !== e && ((A = e), R());
      }
      function M(e) {
        let { focused: t } = e;
        (N = t), R();
      }
      function P(e) {
        let { state: t } = e;
        (N = t === h.AppStates.ACTIVE), R();
      }
    },
    382483: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
      var a = n("920872").default;
    },
    920872: function (e, t, n) {
      "use strict";
      function a() {
        return {};
      }
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
    },
    759370: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return C;
          },
        }),
        n("222007"),
        n("424973");
      var a = n("70754"),
        s = n("605250"),
        l = n("619443"),
        i = n("233069"),
        r = n("271938"),
        o = n("42203"),
        u = n("305961"),
        d = n("957255"),
        c = n("845078"),
        f = n("802493"),
        E = n("846527");
      let h = new s.default("GuildBasicChannels");
      function _(e, t) {
        return (
          null == e ||
          e.type !== t.type ||
          e.parent_id !== t.parent_id ||
          d.default.computeBasicPermissions(e) !==
            d.default.computeBasicPermissions(t)
        );
      }
      var C = new (class e {
        async getAsync(e) {
          let t = performance.now(),
            [n, a] = await Promise.all([
              f.default.basicChannels(e).getKvEntries(),
              f.default.syncedBasicChannels(e).getKvEntries(),
            ]),
            s = performance.now() - t,
            [l, i] = (function (e) {
              let t = [],
                n = [];
              for (let [a, s] of e) (s ? t : n).push(a);
              return [t, n];
            })(a),
            r = new Set(l);
          return (
            (this.synced = r),
            h.verbose(
              "loaded in "
                .concat(s, "ms (guilds: ")
                .concat(n.length, ", synced: ")
                .concat(r.size, " unsynced: ")
                .concat(i.length, ")")
            ),
            {
              all: n,
              stale: i,
              channels: n.filter(e => {
                let [t, n] = e;
                return r.has(t);
              }),
            }
          );
        }
        handleChannelCreate(e, t) {
          null != e.channel.guild_id && this.unsync(e.channel.guild_id, t);
        }
        handleChannelDelete(e, t) {
          null != e.channel.guild_id && this.unsync(e.channel.guild_id, t);
        }
        handleChannelUpdates(e, t) {
          for (let n of e.channels.filter(e => null != e.guild_id)) {
            let e = o.default.getBasicChannel(n.id);
            _(e, n) && this.unsync(n.guild_id, t);
          }
        }
        handleBackgroundSync(e, t) {
          for (let l of e.guilds)
            switch (l.data_mode) {
              case "unavailable":
                break;
              case "partial":
                var n, a, s;
                let e = e => (0, i.createChannelRecordFromServer)(e, l.id);
                this.onGuildUpdate(
                  l.id,
                  null !==
                    (a =
                      null === (n = l.partial_updates.channels) || void 0 === n
                        ? void 0
                        : n.map(e)) && void 0 !== a
                    ? a
                    : [],
                  null !== (s = l.partial_updates.deleted_channel_ids) &&
                    void 0 !== s
                    ? s
                    : [],
                  t
                );
                break;
              default:
                this.onGuildSync(l.id, t);
            }
        }
        handleConnectionOpen(e, t) {
          for (let n of e.guilds) this.handleOneGuildCreate(n, t);
        }
        async handlePostConnectionOpen() {
          let e = l.default.lastTimeConnectedChanged(),
            t = f.default.database();
          if (null == this.synced || null == t || !(0, a.isCacheEnabled)())
            return;
          let n = u.default.getGuildIds(),
            s = n.filter(e => !this.synced.has(e));
          for (let a of (h.verbose(
            "scheduling basic_channel optimstic writes (guilds: ".concat(
              s.length,
              ")"
            )
          ),
          n)) {
            if (
              null == this.synced ||
              t !== f.default.database() ||
              e !== l.default.lastTimeConnectedChanged()
            )
              break;
            if (!this.synced.has(a)) {
              h.verbose(
                "optimstically writing basic_channels (guild: ".concat(a, ")")
              );
              try {
                await o.ChannelLoader.loadGuildIds([a]),
                  await t.transaction(
                    e => this.syncOne(a, e),
                    "handlePostConnectionOpen"
                  );
              } catch (e) {
                h.warn("couldn't optimstically write basic_channel:", e);
                return;
              }
              await new Promise(e => setTimeout(e, 1e3));
            }
          }
        }
        handleGuildCreate(e, t) {
          this.handleOneGuildCreate(e.guild, t);
        }
        handleOneGuildCreate(e, t) {
          null != e.channelUpdates
            ? this.onGuildUpdate(
                e.id,
                e.channelUpdates.writes,
                e.channelUpdates.deletes,
                t
              )
            : this.onGuildSync(e.id, t);
        }
        handleGuildUpdate(e, t) {
          this.unsync(e.guild.id, t);
        }
        handleGuildDelete(e, t) {
          !0 !== e.guild.unavailable && this.delete(e.guild.id, t);
        }
        handleGuildRoleUpdate(e, t) {
          let n = e.role,
            a = u.default.getRole(e.guildId, n.id);
          (null == a || n.permissions !== a.permissions) &&
            this.unsync(e.guildId, t);
        }
        handleGuildMemberUpdate(e, t) {
          e.user.id === r.default.getId() && this.unsync(e.guildId, t);
        }
        handleWriteCaches(e, t) {
          this.sync(t);
        }
        resetInMemoryState() {
          this.synced = null;
        }
        onGuildUpdate(e, t, n, a) {
          (n.length > 0 ||
            t.some(e => _(o.default.getBasicChannel(e.id), e))) &&
            this.unsync(e, a);
        }
        onGuildSync(e, t) {
          this.unsync(e, t);
        }
        delete(e, t) {
          this.unsync(e, t),
            f.default.basicChannelsTransaction(t).delete(e),
            f.default.syncedBasicChannelsTransaction(t).delete(e);
        }
        unsync(e, t) {
          var n;
          null === (n = this.synced) || void 0 === n || n.delete(e),
            f.default.basicChannelsTransaction(t).delete(e),
            f.default.syncedBasicChannelsTransaction(t).put(e, !1),
            E.default.invalidate(e);
        }
        sync(e) {
          h.verbose("Starting to write all basic channels");
          let t = performance.now(),
            n = { written: 0, skipped: 0 };
          for (let t of u.default.getGuildIds())
            this.syncOne(t, e) ? n.written++ : n.skipped++;
          let a = performance.now() - t;
          h.verbose(
            ""
              .concat(n.written, " basic_channel guilds submitted (took: ")
              .concat(a, "ms, skipped: ")
              .concat(n.skipped, " guilds)")
          );
        }
        syncOne(e, t) {
          var n, a;
          return (
            !(
              null == u.default.getGuild(e) ||
              (null === (n = this.synced) || void 0 === n ? void 0 : n.has(e))
            ) &&
            (null === (a = this.synced) || void 0 === a || a.add(e),
            f.default.basicChannelsTransaction(t).put(
              e,
              (function (e) {
                let t = o.default.getMutableGuildChannelsForGuild(e);
                return Object.values(t).map(e => ({
                  id: e.id,
                  type: e.type,
                  guild_id: e.guild_id,
                  parent_id: e.parent_id,
                  basicPermissions: c.default.asBasicFlag(
                    d.default.computePermissions(e)
                  ),
                }));
              })(e)
            ),
            f.default.syncedBasicChannelsTransaction(t).put(e, !0),
            !0)
          );
        }
        constructor() {
          (this.synced = null),
            (this.actions = {
              BACKGROUND_SYNC: (e, t) => this.handleBackgroundSync(e, t),
              CHANNEL_CREATE: (e, t) => this.handleChannelCreate(e, t),
              CHANNEL_DELETE: (e, t) => this.handleChannelDelete(e, t),
              CHANNEL_UPDATES: (e, t) => this.handleChannelUpdates(e, t),
              CONNECTION_OPEN: (e, t) => this.handleConnectionOpen(e, t),
              GUILD_CREATE: (e, t) => this.handleGuildCreate(e, t),
              GUILD_DELETE: (e, t) => this.handleGuildDelete(e, t),
              GUILD_MEMBER_UPDATE: (e, t) => this.handleGuildMemberUpdate(e, t),
              GUILD_ROLE_UPDATE: (e, t) => this.handleGuildRoleUpdate(e, t),
              GUILD_UPDATE: (e, t) => this.handleGuildUpdate(e, t),
              POST_CONNECTION_OPEN: () => this.handlePostConnectionOpen(),
              WRITE_CACHES: (e, t) => this.handleWriteCaches(e, t),
            });
        }
      })();
    },
    29328: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        }),
        n("222007");
      var a = n("605250"),
        s = n("271938"),
        l = n("305961"),
        i = n("665618"),
        r = n("605136"),
        o = n("802493");
      let u = new a.default("Guilds");
      var d = new (class e {
        async getAsync(e) {
          let t = performance.now(),
            n = await o.default.guilds(e).getMany(),
            a = performance.now();
          return (
            u.verbose(
              "loaded in ".concat(a - t, "ms (guilds: ").concat(n.length, ")")
            ),
            n
          );
        }
        async getOneAsync(e, t) {
          return await o.default.guilds(e).get(t);
        }
        handleBackgroundSync(e, t) {
          for (let n of e.guilds) {
            if ("unavailable" === n.data_mode) return;
            let e = l.default.getGuild(n.id);
            if (null != e) {
              let a = l.default.getRoles(n.id);
              this.put(
                i.attachRoles(
                  i.fromBackgroundSync(n, e),
                  "partial" === n.data_mode
                    ? i.filterRoleDeletes(
                        n.id,
                        a,
                        n.partial_updates.roles,
                        n.partial_updates.deleted_role_ids
                      )
                    : (0, r.sortServerRoles)(n.id, n.roles)
                ),
                t
              );
            }
          }
        }
        handleConnectionOpen(e, t) {
          for (let n of (this.clear(t), e.guilds)) this.putOne(n, t);
        }
        handleGuildCreate(e, t) {
          this.putOne(e.guild, t);
        }
        handleGuildUpdate(e, t) {
          let n = l.default.getGuild(e.guild.id),
            a = i.fromServerUpdate(e.guild, n);
          this.put(
            i.attachRoles(a, (0, r.sortServerRoles)(e.guild.id, e.guild.roles)),
            t
          );
        }
        handleGuildDelete(e, t) {
          this.delete(e.guild.id, t);
        }
        handleGuildRoleChange(e, t) {
          let n = l.default.getGuild(e.guildId),
            a = l.default.getRoles(e.guildId);
          null != n && this.put(i.attachRoles(n, a), t);
        }
        handleGuildRoleDelete(e, t) {
          let n = l.default.getGuild(e.guildId),
            a = l.default.getRoles(e.guildId);
          null != n && this.put(i.attachRoles(n, a), t);
        }
        handleGuildMemberAdd(e, t) {
          if (null != e.joinedAt && e.user.id === s.default.getId()) {
            let n = l.default.getGuild(e.guildId);
            null != n &&
              this.put(
                i.attachRoles(
                  n.updateJoinedAt(e.joinedAt),
                  l.default.getRoles(n.id)
                ),
                t
              );
          }
        }
        resetInMemoryState() {}
        putOne(e, t) {
          let n = l.default.getGuild(e.id),
            a = i.attachRoles(
              i.fromServer(e, n),
              e.roles instanceof Array
                ? (0, r.sortServerRoles)(e.id, e.roles)
                : e.roles
            );
          this.put(a, t);
        }
        put(e, t) {
          o.default.guildsTransaction(t).put(e);
        }
        delete(e, t) {
          o.default.guildsTransaction(t).delete(e);
        }
        clear(e) {
          o.default.guildsTransaction(e).delete();
        }
        constructor() {
          this.actions = {
            BACKGROUND_SYNC: (e, t) => this.handleBackgroundSync(e, t),
            CONNECTION_OPEN: (e, t) => this.handleConnectionOpen(e, t),
            GUILD_CREATE: (e, t) => this.handleGuildCreate(e, t),
            GUILD_DELETE: (e, t) => this.handleGuildDelete(e, t),
            GUILD_MEMBER_ADD: (e, t) => this.handleGuildMemberAdd(e, t),
            GUILD_ROLE_CREATE: (e, t) => this.handleGuildRoleChange(e, t),
            GUILD_ROLE_DELETE: (e, t) => this.handleGuildRoleDelete(e, t),
            GUILD_ROLE_UPDATE: (e, t) => this.handleGuildRoleChange(e, t),
            GUILD_UPDATE: (e, t) => this.handleGuildUpdate(e, t),
          };
        }
      })();
    },
    131552: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        }),
        n("222007");
      var a = n("917351"),
        s = n.n(a),
        l = n("605250"),
        i = n("42203"),
        r = n("660478"),
        o = n("299039"),
        u = n("802493");
      let d = new l.default("ReadStates");
      var c = new (class e {
        async getAll(e) {
          let t = performance.now(),
            n = await u.default.readStates(e).getMany(),
            a = performance.now();
          return (
            d.log(
              "asynchronously loaded in "
                .concat(a - t, "ms (readStates: ")
                .concat(n.length, ")")
            ),
            n
          );
        }
        resetInMemoryState() {
          this.readStateVersion = null;
        }
        handleConnectionOpen(e) {
          this.readStateVersion = e.readState.version;
        }
        handleReadStateAction(e) {
          null != this.readStateVersion &&
            (null != e.version
              ? (this.readStateVersion = e.version)
              : d.log("Received null read states version", e));
        }
        handleWriteCaches(e, t) {
          let n = r.default.getAllReadStates(!1);
          if (t) {
            var a;
            if (null == this.readStateVersion) return;
            let t = "0",
              l = "0",
              r = Object.keys(i.default.getMutablePrivateChannels()),
              d = new Set(r);
            for (let e of ((l =
              null !==
                (a = s(r).sort(o.default.compare).reverse().value()[0]) &&
              void 0 !== a
                ? a
                : "0"),
            n))
              null != e._lastMessageId &&
                (1 === o.default.compare(e._lastMessageId, t) &&
                  (t = e._lastMessageId),
                d.has(e.channelId) &&
                  1 === o.default.compare(e._lastMessageId, l) &&
                  (l = e._lastMessageId));
            u.default.nonGuildVersionsTransaction(e).putAll([
              { id: "highest_last_message_id", versionString: t },
              { id: "private_channels_version", versionString: l },
              { id: "read_state_version", version: this.readStateVersion },
            ]);
          }
          let l = u.default.readStatesTransaction(e);
          l.delete(),
            n.forEach(e =>
              l.put("".concat(e.type, "-").concat(e.channelId), e)
            );
        }
        constructor() {
          (this.readStateVersion = null),
            (this.actions = {
              CONNECTION_OPEN: e => this.handleConnectionOpen(e),
              CHANNEL_PINS_ACK: e => this.handleReadStateAction(e),
              MESSAGE_ACK: e => this.handleReadStateAction(e),
              BACKGROUND_SYNC_FINISHED: (e, t) => {
                !e.messagesOnly && this.handleWriteCaches(t, !1);
              },
              WRITE_CACHES: (e, t) => this.handleWriteCaches(t, !0),
            });
        }
      })();
    },
    994746: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        }),
        n("222007");
      var a = n("917351"),
        s = n.n(a),
        l = n("605250"),
        i = n("282109"),
        r = n("802493");
      let o = new l.default("ReadStates");
      var u = new (class e {
        async getAll(e) {
          let t = performance.now(),
            n = await r.default.userGuildSettings(e).getMany(),
            a = performance.now();
          return (
            o.log(
              "asynchronously loaded in "
                .concat(a - t, "ms (userGuildSettings: ")
                .concat(n.length, ")")
            ),
            n
          );
        }
        resetInMemoryState() {}
        handleConnectionOpen(e, t) {
          !e.userGuildSettings.partial &&
            r.default.userGuildSettingsTransaction(t).delete(),
            this.write(
              e.userGuildSettings.entries,
              e.userGuildSettings.version,
              t
            );
        }
        handleUserGuildSettingsUpdate(e, t) {
          let n = s.max(
            e.userGuildSettings.map(e => {
              var t;
              return null !== (t = e.version) && void 0 !== t ? t : -1;
            })
          );
          null != n && this.write(e.userGuildSettings, n, t);
        }
        write(e, t, n) {
          let a = r.default.userGuildSettingsTransaction(n);
          for (let t of e) {
            var s;
            let e = {
              ...(0, i.getGuildDefaults)(t.guild_id),
              ...t,
              channel_overrides: (0, i.convertChannelOverridesToMap)(
                t.channel_overrides
              ),
            };
            a.put(
              null !== (s = t.guild_id) && void 0 !== s ? s : "dm-sentinel",
              e
            );
          }
          r.default
            .nonGuildVersionsTransaction(n)
            .put({ id: "user_guild_settings_version", version: t });
        }
        constructor() {
          this.actions = {
            CONNECTION_OPEN: (e, t) => this.handleConnectionOpen(e, t),
            USER_GUILD_SETTINGS_FULL_UPDATE: (e, t) =>
              this.handleUserGuildSettingsUpdate(e, t),
          };
        }
      })();
    },
    353026: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        }),
        n("222007");
      var a = n("917351"),
        s = n.n(a),
        l = n("605250"),
        i = n("374363"),
        r = n("271938"),
        o = n("802493"),
        u = n("723939");
      let d = new l.default("UserSettingsProto");
      var c = new (class e {
        async getAll(e) {
          let t = performance.now(),
            n = await o.default.userSettings(e).getMany(),
            a = performance.now();
          d.verbose(
            "loaded in ".concat(a - t, "ms (settings: ").concat(n.length, ")")
          );
          let s = {};
          for (let e of n) s[e.id] = e.value;
          return s;
        }
        resetInMemoryState() {}
        constructor() {
          (this.actions = {
            CONNECTION_OPEN: () => this.throttledOnChange(),
            USER_SETTINGS_PROTO_UPDATE: () => this.throttledOnChange(),
            USER_SETTINGS_PROTO_ENQUEUE_UPDATE: () => this.throttledOnChange(),
            USER_SETTINGS_PROTO_UPDATE_EDIT_INFO: () =>
              this.throttledOnChange(),
          }),
            (this.handleUserSettingsProtoChange = () => {
              let e = r.default.getId(),
                t = u.default.database(e);
              null == t ||
                t.transaction(e => {
                  var t, n;
                  let a = i.default.computeState(),
                    s = o.default.userSettingsTransaction(e);
                  for (let e in a) s.put({ id: Number(e), value: a[e] });
                  let l =
                    null !==
                      (n =
                        null === (t = i.default.settings.versions) ||
                        void 0 === t
                          ? void 0
                          : t.dataVersion) && void 0 !== n
                      ? n
                      : -1;
                  o.default
                    .nonGuildVersionsTransaction(e)
                    .put({ id: "user_settings_version", version: l });
                }, "handleUserSettingsProtoChange");
            }),
            (this.throttledOnChange = s.debounce(
              this.handleUserSettingsProtoChange,
              0
            ));
        }
      })();
    },
    799286: function (e, t, n) {
      "use strict";
      n.r(t),
        n("794897"),
        n("203288"),
        n("789563"),
        n("178406"),
        n("123561"),
        n("288518"),
        n("486503"),
        n("822825"),
        n("256572"),
        n("713135"),
        n("915639"),
        n("161778"),
        n("374363"),
        n("42203"),
        n("760190"),
        n("245997"),
        n("923959"),
        n("26989"),
        n("778689"),
        n("952451"),
        n("305961"),
        n("377253"),
        n("957255"),
        n("660478"),
        n("677099"),
        n("282109"),
        n("697218"),
        n("607620"),
        n("287850");
    },
    684442: function (e, t, n) {
      "use strict";
      n.r(t),
        n("218484"),
        n("191225"),
        n("794897"),
        n("846527"),
        n("8001"),
        n("426969"),
        n("246598"),
        n("988721"),
        n("383018"),
        n("299285"),
        n("56676"),
        n("194051"),
        n("809310"),
        n("191145"),
        n("207273"),
        n("203288"),
        n("878550"),
        n("265596"),
        n("670535"),
        n("385976"),
        n("802461"),
        n("789563"),
        n("574933"),
        n("817892"),
        n("670902"),
        n("430475"),
        n("324261"),
        n("419501"),
        n("994810"),
        n("449004"),
        n("954732"),
        n("263901"),
        n("54346"),
        n("619259"),
        n("558130"),
        n("887446"),
        n("720102"),
        n("982527"),
        n("178406"),
        n("863636"),
        n("471706"),
        n("565559"),
        n("665274"),
        n("648825"),
        n("256941"),
        n("398604"),
        n("123561"),
        n("267567"),
        n("921387"),
        n("275318"),
        n("94372"),
        n("83722"),
        n("288518"),
        n("486503"),
        n("770032"),
        n("136511"),
        n("404931"),
        n("637929"),
        n("25033"),
        n("400205"),
        n("140596"),
        n("116460"),
        n("138217"),
        n("685841"),
        n("256572"),
        n("764828"),
        n("662285"),
        n("488464"),
        n("325861"),
        n("77173"),
        n("834052"),
        n("364685"),
        n("347738"),
        n("401690"),
        n("689275"),
        n("821343"),
        n("755624"),
        n("593752"),
        n("800843"),
        n("610730"),
        n("612246"),
        n("521128"),
        n("915639"),
        n("161778"),
        n("374363"),
        n("453515"),
        n("407117"),
        n("410348"),
        n("373469"),
        n("271938"),
        n("950104"),
        n("870691"),
        n("935692"),
        n("19766"),
        n("508229"),
        n("2105"),
        n("42203"),
        n("816092"),
        n("47319"),
        n("350522"),
        n("368694"),
        n("313915"),
        n("474643"),
        n("760190"),
        n("925758"),
        n("55411"),
        n("555826"),
        n("341542"),
        n("245997"),
        n("923959"),
        n("525065"),
        n("124948"),
        n("26989"),
        n("778689"),
        n("952451"),
        n("305961"),
        n("10802"),
        n("88093"),
        n("353802"),
        n("330154"),
        n("216391"),
        n("260320"),
        n("169602"),
        n("42887"),
        n("486996"),
        n("377253"),
        n("555179"),
        n("1017"),
        n("130473"),
        n("957255"),
        n("669280"),
        n("824563"),
        n("336376"),
        n("501090"),
        n("945956"),
        n("660478"),
        n("27618"),
        n("744983"),
        n("18494"),
        n("162771"),
        n("101125"),
        n("235660"),
        n("677099"),
        n("280168"),
        n("168851"),
        n("205817"),
        n("381684"),
        n("191542"),
        n("462495"),
        n("282109"),
        n("330387"),
        n("697218"),
        n("555035"),
        n("800762"),
        n("160299"),
        n("572182"),
        n("150057"),
        n("607620"),
        n("677225"),
        n("287850"),
        n("316133"),
        n("545429"),
        n("535974"),
        n("352326"),
        n("227602"),
        n("189857"),
        n("860957"),
        n("901165");
    },
    209535: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getRedirectPath: function () {
            return o;
          },
          default: function () {
            return u;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("803182"),
        l = n("447669"),
        i = n("49111"),
        r = n("492397");
      function o() {
        let e = location.pathname + location.search,
          t = r.CONFERENCE_MODE_ENABLED
            ? i.Routes.REGISTER
            : (0, l.getLoginPath)(e, !1);
        return t;
      }
      var u = function () {
        return (0, a.jsx)(s.Redirect, { to: o() });
      };
    },
    590157: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          makeAuthenticated: function () {
            return o;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("271938"),
        l = n("831588"),
        i = n("209535"),
        r = n("49111");
      function o(e, t) {
        var n, o;
        let u =
          arguments.length > 2 && void 0 !== arguments[2]
            ? arguments[2]
            : { passProps: !0 };
        function d(n) {
          if (
            !(0, l.isAuthenticated)() &&
            s.default.getLoginStatus() !== r.LoginStates.LOGGING_IN &&
            s.default.allowLogoutRedirect()
          )
            return null != t
              ? (0, a.jsx)(t, { renderRedirect: (0, a.jsx)(i.default, {}) })
              : (0, a.jsx)(i.default, {});
          return (0, a.jsx)(e, { ...(u.passProps ? n : null) });
        }
        return (
          (d.displayName = "Authenticated(".concat(
            null !==
              (o = null !== (n = e.displayName) && void 0 !== n ? n : e.name) &&
              void 0 !== o
              ? o
              : "<Unknown>",
            ")"
          )),
          d
        );
      }
    },
    897263: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var a = n("315102"),
        s = n("606292"),
        l = (e, t, n) =>
          (0, a.getAvatarDecorationURL)({
            avatarDecoration: { asset: e },
            size: (0, s.getDecorationSizeForAvatarSize)(t),
            canAnimate: n,
          });
    },
    882278: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var a = n("884691"),
        s = n("446674"),
        l = n("42203"),
        i = n("697218"),
        r = n("194051"),
        o = n("754493");
      function u(e) {
        var t;
        let n = (0, s.useStateFromStores)([i.default], () =>
            i.default.getCurrentUser()
          ),
          u = (0, s.useStateFromStores)([l.default], () =>
            l.default.getChannel(e)
          ),
          d = (0, s.useStateFromStores)([r.default], () =>
            null != e ? r.default.getBroadcastByChannel(e) : null
          ),
          c = (0, o.default)(),
          f = a.useMemo(() => {
            var e, t;
            return null !==
              (t =
                null == u
                  ? void 0
                  : null === (e = u.recipients) || void 0 === e
                    ? void 0
                    : e
                        .map(e => i.default.getUser(e))
                        .filter(
                          e =>
                            null != e &&
                            e.id !== (null == d ? void 0 : d.userId)
                        )) && void 0 !== t
              ? t
              : [];
          }, [
            null == d ? void 0 : d.userId,
            null == u ? void 0 : u.recipients,
          ]);
        return null == n
          ? []
          : c
            ? f
            : null !==
                  (t =
                    f.length > 0
                      ? [n].concat(f)
                      : null == d
                        ? void 0
                        : d.viewers) && void 0 !== t
              ? t
              : [];
      }
    },
    484140: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return P;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("446674"),
        i = n("669491"),
        r = n("77078"),
        o = n("987317"),
        u = n("990766"),
        d = n("716241"),
        c = n("442939"),
        f = n("673527"),
        E = n("410348"),
        h = n("271938"),
        _ = n("18494"),
        C = n("697218"),
        I = n("953109"),
        S = n("277174"),
        m = n("368121"),
        p = n("811305"),
        T = n("158998"),
        g = n("882278"),
        A = n("754493"),
        N = n("813531"),
        R = n("49111"),
        O = n("706530"),
        v = n("782340"),
        L = n("770970");
      function M(e) {
        let { users: t } = e;
        return (0, a.jsxs)("div", {
          className: L.viewers,
          children: [
            (0, a.jsx)(m.default, {
              width: 16,
              height: 16,
              color: i.default.colors.HEADER_PRIMARY.css,
            }),
            (0, a.jsx)(p.default, {
              showUserPopout: !0,
              useFallbackUserForPopout: !0,
              users: t,
              max: 6,
              size: p.Sizes.SIZE_24,
            }),
          ],
        });
      }
      function P(e) {
        var t;
        let { broadcast: n } = e,
          { userId: i, applicationId: m, channelId: p, streamKey: P } = n,
          [D, y] = s.useState(!1),
          x = (0, l.useStateFromStores)([C.default], () =>
            C.default.getUser(i)
          ),
          [b] = (0, c.default)([m]),
          U =
            null !== (t = T.default.getGlobalName(x)) && void 0 !== t
              ? t
              : T.default.getUserTag(x),
          G = (0, N.default)(),
          j = (0, l.useStateFromStores)([E.default], () =>
            E.default.getPreviewURL(null, p, i)
          ),
          w = (0, l.useStateFromStores)([_.default], () =>
            _.default.getVoiceChannelId()
          ),
          k = (0, A.default)(),
          F = (0, g.default)(p);
        if (
          (s.useEffect(() => {
            D && w === p && y(!1);
          }, [w, D, p]),
          null == x || null == U)
        )
          return null;
        let {
          buttonColor: B,
          buttonCTA: H,
          disabled: V,
        } = (function (e, t) {
          let n = h.default.getId(),
            a = t.some(e => e.id === n) || e === n,
            s = t.length >= R.MAX_GROUP_DM_BROADCAST_PARTICIPANTS;
          return {
            buttonColor: s ? r.ButtonColors.RED : r.ButtonColors.GREEN,
            buttonCTA: s
              ? v.default.Messages.BROADCAST_FULL
              : a
                ? v.default.Messages.VIEW_BROADCAST
                : v.default.Messages.JOIN_BROADCAST,
            disabled: s,
          };
        })(i, F);
        return (0, a.jsxs)("div", {
          className: L.container,
          children: [
            (0, a.jsx)(r.Avatar, {
              size: r.AvatarSizes.SIZE_32,
              src: x.getAvatarURL(null, 32),
              "aria-label": U,
            }),
            (0, a.jsxs)("div", {
              className: L.details,
              children: [
                (0, a.jsx)(r.Text, {
                  variant: "text-md/semibold",
                  children: U,
                }),
                (0, a.jsx)(r.Text, {
                  variant: "text-sm/medium",
                  color: "header-secondary",
                  children:
                    null != b
                      ? v.default.Messages.STREAMING.format({ name: b.name })
                      : v.default.Messages.STREAMING_A_GAME,
                }),
                (0, a.jsxs)("div", {
                  className: L.activity,
                  children: [
                    F.length > 0 && (0, a.jsx)(M, { users: F }),
                    (0, a.jsxs)(r.Button, {
                      onClick: () => {
                        if (w === p) {
                          o.default.selectPrivateChannel(p);
                          return;
                        }
                        y(!0),
                          (0, u.joinPrivateChannelAndWatchStream)(p, P),
                          d.default.trackWithMetadata(
                            R.AnalyticEvents.BROADCAST_VIEWED,
                            {
                              num_active_broadcasts: G.length,
                              broadcast_position:
                                G.findIndex(e => e.userId === i) + 1,
                              is_broadcasting: k,
                              broadcast_channel_id: p,
                            }
                          );
                      },
                      color: B,
                      size: r.ButtonSizes.SMALL,
                      className: L.button,
                      disabled: V,
                      innerClassName: L.innerButton,
                      children: [
                        (0, a.jsx)(S.default, { width: 16, height: 16 }),
                        H,
                      ],
                    }),
                  ],
                }),
              ],
            }),
            null != j
              ? (0, a.jsx)(f.default, {
                  className: L.stream,
                  stream: {
                    streamType: O.StreamTypes.CALL,
                    ownerId: i,
                    channelId: p,
                  },
                })
              : (0, a.jsx)(I.default, {
                  game: b,
                  size: I.default.Sizes.LARGE,
                  className: L.gameIcon,
                }),
          ],
        });
      }
    },
    347272: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("669491"),
        l = n("77078"),
        i = n("774223"),
        r = n("9759"),
        o = n("813531"),
        u = n("484140"),
        d = n("395635"),
        c = n("782340"),
        f = n("115263");
      function E() {
        let { canViewBroadcasts: e } = r.default.useExperiment(
            { location: "broadcast_list_no_track" },
            { autoTrackExposure: !1 }
          ),
          t = (0, o.default)();
        return 0 === t.length
          ? null
          : (r.default.trackExposure({ location: "broadcast_list" }), e)
            ? (0, a.jsxs)("div", {
                className: f.container,
                children: [
                  (0, a.jsx)("div", {
                    className: f.header,
                    children: (0, a.jsxs)("div", {
                      className: f.inline,
                      children: [
                        (0, a.jsx)(i.default, {
                          color: s.default.colors.HEADER_PRIMARY.css,
                          height: 20,
                          width: 20,
                        }),
                        (0, a.jsx)(l.Heading, {
                          variant: "heading-md/semibold",
                          children: c.default.Messages.LIVE_BROADCASTS,
                        }),
                        (0, a.jsx)(d.default, {}),
                        (0, a.jsxs)(l.Heading, {
                          variant: "heading-md/semibold",
                          children: ["— ", t.length.toLocaleString()],
                        }),
                      ],
                    }),
                  }),
                  t.map(e => (0, a.jsx)(u.default, { broadcast: e }, e.userId)),
                ],
              })
            : null;
      }
    },
    809310: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ENABLE_CACHE_STORE: function () {
            return D;
          },
        }),
        n("222007"),
        n("808653");
      var a = n("102053");
      n("576863");
      var s = n("316693"),
        l = n("446674"),
        i = n("95410"),
        r = n("913144"),
        o = n("595525"),
        u = n("759370"),
        d = n("29328"),
        c = n("849365"),
        f = n("219788"),
        E = n("11275"),
        h = n("131552"),
        _ = n("994746"),
        C = n("353026"),
        I = n("860255"),
        S = n("723939"),
        m = n("605250"),
        p = n("619443"),
        T = n("410912"),
        g = n("271938"),
        A = n("18494"),
        N = n("162771"),
        R = n("831588"),
        O = n("969388"),
        v = n("1544"),
        L = n("619317"),
        M = n("49111");
      let P = new m.default("CacheStore"),
        D = !1,
        y = !1,
        x = "initializing",
        b = 0,
        U = !1,
        G = !1,
        j = !1;
      function w(e) {
        P.log("Clearing cache store"),
          (b = Date.now()),
          i.default.remove(M.CACHE_STORE_KEY),
          i.default.remove(M.CACHE_STORE_LAZY_KEY),
          i.default.remove(M.CACHE_STORE_CHANNELS_LAZY_KEY),
          (x = "no-cache"),
          "CLEAR_CACHES" === e.type &&
            e.preventWritingCachesAgainThisSession &&
            (y = !0);
      }
      async function k(e, t, n) {
        let a = performance.now();
        if (null == e || null == n)
          return (
            P.verbose(
              "skipped loaded messages (channel: "
                .concat(n, ", database: ")
                .concat(e, ").")
            ),
            [
              performance.now() - a,
              {
                guildId: null,
                channelId: null,
                users: [],
                members: [],
                messages: [],
              },
            ]
          );
        {
          let s = await f.default.startupLoad(
            e,
            t,
            n,
            M.MAX_MESSAGES_PER_CHANNEL
          );
          P.verbose(
            "loaded "
              .concat(s.messages.length, " messages (guild: ")
              .concat(t, ", channel: ")
              .concat(n, ").")
          );
          let l = {
            guildId: t,
            channelId: n,
            users: s.users,
            members: s.members,
            messages: s.messages,
          };
          return [performance.now() - a, l];
        }
      }
      async function F(e, t, n) {
        var s, i, o, u, d;
        P.verbose("loading early cache");
        let c = p.default.getSocket();
        c.connect();
        let f =
            null !== (s = N.default.getGuildId()) && void 0 !== s ? s : null,
          E =
            null !== (i = A.default.getChannelId()) && void 0 !== i ? i : null,
          S = performance.now(),
          m = T.default.loadCachedMessages.measureAsyncWithoutNesting(() =>
            k(e, f, E)
          ),
          g = T.default.fetchInitialGuildCache.measureAsync(() => B(e, n)),
          R =
            null != e
              ? a.default.timeAsync(
                  "\uD83D\uDCBE",
                  "cache: private_channels",
                  () => I.default.getAsync(e, null)
                )
              : Promise.resolve([]),
          O =
            null == e
              ? Promise.resolve({})
              : a.default.timeAsync(
                  "\uD83D\uDCBE",
                  "cache: user_settings",
                  () => C.default.getAll(e)
                ),
          v =
            null == e
              ? Promise.resolve([])
              : a.default.timeAsync("\uD83D\uDCBE", "cache: read_states", () =>
                  h.default.getAll(e)
                ),
          M =
            null == e
              ? Promise.resolve([])
              : a.default.timeAsync(
                  "\uD83D\uDCBE",
                  "cache: user_guild_settings",
                  () => _.default.getAll(e)
                ),
          [[D, y], x, b, U, G, j] = await Promise.all([m, g, R, O, v, M]),
          w = performance.now() - S;
        if (
          (P.verbose(
            "cache loaded in "
              .concat(w, "ms (channel_history ")
              .concat(D, "ms)")
          ),
          null == y)
        )
          return (
            (0, L.default)("database:history_cache_null"),
            P.verbose("finished without dispatching CACHE_LOADED"),
            [!1, null, 0]
          );
        {
          let s = Object.fromEntries(y.members.map(e => [e.userId, e])),
            i = null != x.guild && null != x.channels,
            h = null !== (u = x.guild) && void 0 !== u ? u : null;
          return (
            l.default.Emitter.batched(() => {
              a.default.time("\uD83D\uDCBE", "Dispatch Mini Cache", () => {
                var e;
                return r.default.dispatch({
                  type: "CACHE_LOADED",
                  guilds: null != h ? [h] : [],
                  channels: [
                    ...b,
                    ...(null !== (e = x.channels) && void 0 !== e ? e : []),
                  ],
                  users: [...y.users],
                  messages:
                    null == y.channelId ? {} : { [y.channelId]: y.messages },
                  guildMembers: null == y.guildId ? {} : { [y.guildId]: s },
                  userSettings: U,
                  userGuildSettings: j,
                  readStates: G,
                });
              }),
                a.default.time(
                  "\uD83D\uDCBE",
                  "socket.processFirstQueuedDispatch()",
                  () =>
                    c.dispatcher.processFirstQueuedDispatch(
                      new Set(["INITIAL_GUILD"])
                    )
                );
            }),
            P.verbose(
              "early_cache_summary: (\n        ok: true\n        meta:\n          auth_user_id: "
                .concat(t, "\n          selected_guild: ")
                .concat(f, "\n          selected_channel: ")
                .concat(E, "\n          navigation_state: ")
                .concat(JSON.stringify(n), "\n          database: ")
                .concat(null != e, "\n            name: ")
                .concat(
                  null == e ? void 0 : e.name,
                  "\n        data:\n          database:\n            private_channels: "
                )
                .concat(
                  b.length,
                  "\n            channel_history:\n              guild: "
                )
                .concat(y.guildId, "\n              channel: ")
                .concat(y.channelId, "\n              messages: ")
                .concat(y.messages.length, "\n                members: ")
                .concat(y.members.length, "\n                users: ")
                .concat(
                  y.users.length,
                  "\n            initial_guild:\n              id: "
                )
                .concat(null == h ? void 0 : h.id, "\n              channels: ")
                .concat(
                  null === (o = x.channels) || void 0 === o ? void 0 : o.length,
                  "\n            user_settings: "
                )
                .concat(Object.keys(U).length, "\n            read_states: ")
                .concat(G.length, "\n            user_guild_settings: ")
                .concat(j.length, "\n      )")
            ),
            P.verbose("finished dispatching CACHE_LOADED"),
            [
              !0,
              i && null !== (d = null == h ? void 0 : h.id) && void 0 !== d
                ? d
                : null,
              b.length,
            ]
          );
        }
      }
      async function B(e, t) {
        let n = await E.default.getCommittedVersions(),
          a = n.initial_guild_id;
        if (
          (null == a && "guild-channels" === t.page && (a = t.guildId),
          null == e || null == a)
        )
          return (
            P.verbose(
              "skipped loading initial guild (guild: "
                .concat(a, ", database: ")
                .concat(e, ")")
            ),
            Promise.resolve({ guild: null, channels: null })
          );
        let s = a,
          [l, i] = await Promise.all([
            (0, o.tryLoadAsync)(() => d.default.getOneAsync(e, s)),
            (0, o.tryLoadAsync)(() => I.default.getAsync(e, s)),
          ]);
        return { guild: l, channels: i };
      }
      async function H(e, t, n, l) {
        P.verbose("loading late lazy cache");
        let [i, f, E] = await T.default.fetchLazyCache.measureAsync(() =>
            Promise.all([
              (0, o.tryLoadAsync)(() =>
                null != e
                  ? a.default.timeAsync(
                      "\uD83D\uDCBE",
                      "cache: cache_version",
                      () => c.default.okAsync(e)
                    )
                  : Promise.resolve(!0)
              ),
              (0, o.tryLoadAsync)(() =>
                null != e
                  ? a.default.timeAsync("\uD83D\uDCBE", "cache: guilds", () =>
                      d.default.getAsync(e)
                    )
                  : Promise.resolve([])
              ),
              (0, o.tryLoadAsync)(() =>
                null != e
                  ? a.default.timeAsync(
                      "\uD83D\uDCBE",
                      "cache: basic_channels",
                      () => u.default.getAsync(e)
                    )
                  : Promise.resolve({ all: [], stale: [], channels: [] })
              ),
            ])
          ),
          h = await T.default.fetchStaleChannels.measureAsync(() =>
            null != e && null != E && E.stale.length > 0
              ? (0, o.tryLoadAsync)(() => {
                  var t, n;
                  return (
                    (t = e),
                    (n = E.stale),
                    P.verbose(
                      "loading stale guild channels (count: "
                        .concat(n.length, ", ids: ")
                        .concat(n.join(", "), ")")
                    ),
                    Promise.all(
                      n.map(e => I.default.getAsync(t, e).then(t => [e, t]))
                    )
                  );
                })
              : Promise.resolve([])
          );
        await new Promise(e => setTimeout(e, 0)),
          T.default.loadLazyCache.recordStart();
        let _ = p.default.getSocket();
        V(() => {
          let a = performance.now();
          if (!1 === i) {
            (0, L.default)("database:not_ok"),
              r.default.dispatch({
                type: "CLEAR_CACHES",
                reason: "database:not_ok",
              }),
              r.default.dispatch({ type: "CACHE_LOADED_LAZY_NO_CACHE" });
            return;
          }
          if (null == f || null == E || null == h) {
            (0, L.default)("database:load_failed"),
              P.log(
                "couldn't load database item (\n          database: "
                  .concat(null != e, "\n          basic_channels: ")
                  .concat(null != E, "\n          guild_channels: ")
                  .concat(null != h, "\n          guilds: ")
                  .concat(null != f, "\n        )")
              ),
              r.default.dispatch({
                type: "CLEAR_CACHES",
                reason: "database:load_failed",
              }),
              r.default.dispatch({ type: "CACHE_LOADED_LAZY_NO_CACHE" });
            return;
          }
          if (null == i && (f.length > 0 || E.all.length > 0)) {
            (0, L.default)("database:versionless"),
              P.log("kv_cache was not ok (null version with values)"),
              r.default.dispatch({
                type: "CLEAR_CACHES",
                reason: "database:versionless",
              }),
              r.default.dispatch({ type: "CACHE_LOADED_LAZY_NO_CACHE" });
            return;
          }
          if (G) {
            (0, L.default)("already_connected"),
              P.log("Skipping lazy cache; already connected."),
              r.default.dispatch({ type: "CACHE_LOADED_LAZY_NO_CACHE" });
            return;
          }
          _.addAnalytics({ hadCacheAtStartup: !0 });
          let o = {
            type: "CACHE_LOADED_LAZY",
            guilds: f,
            guildChannels: h,
            basicGuildChannels: E.channels,
            initialGuildId: n,
          };
          T.default.deserializeCache.measure(() =>
            (function (e) {
              if (null != e.guilds) {
                for (let { roles: t } of e.guilds)
                  if (null != t)
                    for (let e in t) {
                      let n = t[e];
                      n.permissions = s.default.deserialize(n.permissions);
                    }
              }
              null != e.channels && (0, v.default)(e.channels),
                null != e.privateChannels && (0, v.default)(e.privateChannels),
                null != e.guildChannels &&
                  (0, v.deserializeChannelEntries)(e.guildChannels);
            })(o)
          ),
            T.default.dispatchLazyCache.measure(() => r.default.dispatch(o)),
            P.verbose(
              "late lazy cache loaded (ok: true, took: ".concat(
                performance.now() - a,
                "ms)"
              )
            ),
            _.addAnalytics({ usedCacheAtStartup: !0 });
          let u = h.reduce((e, t) => {
              let [n, a] = t;
              return e + a.length;
            }, 0),
            d = h.length,
            c = E.all.reduce((e, t) => {
              let [n, a] = t;
              return e + a.length;
            }, 0),
            C = E.channels.reduce((e, t) => {
              let [n, a] = t;
              return e + a.length;
            }, 0),
            I = c - C,
            S = 0 === E.stale.length ? "" : " \xb7 ".concat(E.stale.join(", "));
          P.verbose(
            "lazy_cache_summary: (\n        ok: true\n        meta:\n          auth_user_id: "
              .concat(t, "\n          initial_guild: ")
              .concat(n, "\n          database: ")
              .concat(null != e, "\n            ok: ")
              .concat(i, "\n            name: ")
              .concat(
                null == e ? void 0 : e.name,
                "\n        data:\n          database:\n            guilds: "
              )
              .concat(
                f.length,
                "\n            basic_channels:\n              total: "
              )
              .concat(c, " (")
              .concat(E.channels.length, " guilds)\n              stale: ")
              .concat(I, " (")
              .concat(E.stale.length, " guilds")
              .concat(S, ")\n              unstale: ")
              .concat(
                C,
                "\n            full_channels (guilds_with_stale_basic_channels):\n              total: "
              )
              .concat(u, " (")
              .concat(h.length, " guilds)\n      )")
          ),
            T.default.setCacheInfo({
              guilds: f.length,
              privateChannels: l,
              basicChannels: c,
              basicChannelsStale: I,
              fullChannels: u,
              fullChannelGuilds: d,
            });
        });
      }
      function V(e) {
        let t = p.default.getSocket(),
          n = !1;
        l.default.Emitter.batched(() => {
          try {
            if ((e(), !t.dispatcher.hasStuffToDispatchNow())) {
              P.verbose("Unpausing Dispatch Queue"),
                t.dispatcher.unpauseDispatchQueue();
              return;
            }
            (n = !0),
              T.default.loadLazyCache.recordEnd(),
              P.verbose("Processing First Queued Dispatch"),
              t.dispatcher.processFirstQueuedDispatch(
                new Set(["READY", "INITIAL_GUILD"])
              ),
              setTimeout(() => {
                P.verbose("Unpausing Dispatch Queue"),
                  t.dispatcher.unpauseDispatchQueue();
              }, 100);
          } catch (e) {
            P.warn("Lazy cache has encountered error", e),
              r.default.dispatch({
                type: "RESET_SOCKET",
                args: { error: e, action: "LazyCache" },
              });
          }
        }),
          !n && T.default.loadLazyCache.recordEnd();
      }
      class Y extends l.default.Store {
        initialize() {
          if (!D) {
            let e = p.default.getSocket();
            e.dispatcher.unpauseDispatchQueue();
          }
        }
        hasCache() {
          return !D || U;
        }
        getLazyCacheStatus() {
          return D ? x : "no-cache";
        }
        get lastWriteTime() {
          return b;
        }
        canWriteCaches(e) {
          return (0, R.isAuthenticated)()
            ? y
              ? (P.log("Not writing cache because caches cleared"), !1)
              : !!e ||
                !!j ||
                (P.log("Not writing cache because never connected"), !1)
            : (P.log("Not writing cache because not authenticated"), !1);
        }
        async loadCacheAsync(e, t) {
          let n = (0, O.callOnce)(t);
          if ("initializing" !== x) {
            (0, L.default)("cache:lazy_cache_not_initializing"),
              n(),
              setTimeout(() => {
                var e, t;
                return null === (t = p.default.getSocket()) || void 0 === t
                  ? void 0
                  : null === (e = t.dispatcher) || void 0 === e
                    ? void 0
                    : e.unpauseDispatchQueue();
              }, 0);
            return;
          }
          try {
            let t = g.default.getId(),
              a = S.default.carefullyOpenDatabase(t),
              [s, l, i] = await T.default.loadMiniCache.measureAsync(() =>
                F(a, t, e)
              );
            s
              ? (n(), await H(a, t, l, i))
              : (n(),
                await (V(() =>
                  r.default.dispatch({ type: "CACHE_LOADED_LAZY_NO_CACHE" })
                ),
                Promise.resolve()));
          } catch (e) {
            P.error(
              "clearing cache. exception encountered while loading cache.",
              e,
              e.stack
            ),
              (0, L.default)("cache:exception"),
              n(),
              r.default.dispatch({
                type: "RESET_SOCKET",
                args: { error: e, action: "loadCacheAsync" },
              });
          }
        }
      }
      (Y.displayName = "CacheStore"),
        new Y(
          r.default,
          D
            ? {
                CONNECTION_OPEN: function () {
                  return (G = !0), (j = !0), !1;
                },
                LOGOUT: w,
                CONNECTION_CLOSED: function () {
                  return (G = !1), (j = !0), !1;
                },
                CACHE_LOADED: function () {
                  U = !0;
                },
                CACHE_LOADED_LAZY: function () {
                  (U = !0), (x = "cache-loaded");
                },
                CACHE_LOADED_LAZY_NO_CACHE: function () {
                  x = "no-cache";
                },
                CLEAR_CACHES: w,
                WRITE_CACHES: function () {
                  P.verbose("Writing cache now"),
                    (b = Date.now()),
                    (U = !0),
                    i.default.remove(M.CACHE_STORE_KEY),
                    i.default.remove(M.CACHE_STORE_CHANNELS_LAZY_KEY),
                    i.default.remove(M.CACHE_STORE_LAZY_KEY);
                },
              }
            : {}
        );
    },
    619317: function (e, t, n) {
      "use strict";
      function a(e) {}
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
    },
    842272: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
      var a = n("782340");
      function s(e, t, n) {
        return n
          ? a.default.Messages.CONSOLE_CONNECTING_DISABLED
          : t
            ? a.default.Messages.SERVER_DEAFENED_DIALOG_TITLE
            : e
              ? a.default.Messages.UNDEAFEN
              : a.default.Messages.DEAFEN;
      }
    },
    734592: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return I;
          },
        }),
        n("222007");
      var a = n("913144"),
        s = n("629109"),
        l = n("316272"),
        i = n("161454"),
        r = n("292687"),
        o = n("42887"),
        u = n("471671"),
        d = n("49111"),
        c = n("353927");
      let f = new Set(),
        E = new Set(),
        h = null;
      function _() {
        for (let e of f)
          s.default.setDisableLocalVideo(
            e,
            d.VideoToggleState.MANUAL_ENABLED,
            c.MediaEngineContextTypes.DEFAULT,
            !1
          );
        E.clear(), f.clear();
      }
      class C extends l.default {
        _initialize() {
          a.default.subscribe("RTC_CONNECTION_VIDEO", this.handleIncomingVideo),
            a.default.subscribe(
              "AUDIO_SET_LOCAL_VIDEO_DISABLED",
              this.handleManualLocalVideoToggle
            ),
            a.default.subscribe(
              "WINDOW_VISIBILITY_CHANGE",
              this.handleWindowVisibilityChange
            ),
            a.default.subscribe(
              "VOICE_CHANNEL_SELECT",
              this.handleVoiceChannelSelect
            ),
            r.default.addChangeListener(this.handlePopoutChange);
        }
        _terminate() {
          a.default.unsubscribe(
            "RTC_CONNECTION_VIDEO",
            this.handleIncomingVideo
          ),
            a.default.unsubscribe(
              "AUDIO_SET_LOCAL_VIDEO_DISABLED",
              this.handleManualLocalVideoToggle
            ),
            a.default.unsubscribe(
              "WINDOW_VISIBILITY_CHANGE",
              this.handleWindowVisibilityChange
            ),
            a.default.unsubscribe(
              "VOICE_CHANNEL_SELECT",
              this.handleVoiceChannelSelect
            ),
            r.default.removeChangeListener(this.handlePopoutChange),
            _(),
            (h = null);
        }
        handleIncomingVideo(e) {
          let { userId: t, context: n, streamId: a } = e;
          if (n !== c.MediaEngineContextTypes.DEFAULT || null == a) return;
          let l = null != i.default.getVisibleGame(),
            h = u.default.isVisible(),
            _ = r.default.getWindowVisible(
              d.PopoutWindowKeys.CHANNEL_CALL_POPOUT
            ),
            C = o.default.isLocalVideoDisabled(t, n),
            I = E.has(t);
          l &&
            !h &&
            !_ &&
            !C &&
            !I &&
            (f.add(t),
            s.default.setDisableLocalVideo(
              t,
              d.VideoToggleState.DISABLED,
              n,
              !1
            ));
        }
        handleManualLocalVideoToggle(e) {
          let { userId: t, persist: n } = e;
          n && (E.add(t), f.delete(t));
        }
        constructor(...e) {
          super(...e),
            (this.handleWindowVisibilityChange = e => {
              let { visible: t } = e;
              t && _();
            }),
            (this.handleVoiceChannelSelect = e => {
              let { channelId: t } = e;
              t !== h && (_(), (h = t));
            }),
            (this.handlePopoutChange = () => {
              r.default.getWindowVisible(
                d.PopoutWindowKeys.CHANNEL_CALL_POPOUT
              ) && _();
            });
        }
      }
      var I = new C();
    },
    278572: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return Y;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("907002"),
        o = n("446674"),
        u = n("77078"),
        d = n("561288"),
        c = n("228157"),
        f = n("987317"),
        E = n("543155"),
        h = n("843962"),
        _ = n("679653"),
        C = n("393414"),
        I = n("659558"),
        S = n("439141"),
        m = n("648911"),
        p = n("999180"),
        T = n("289180"),
        g = n("19065"),
        A = n("981913"),
        N = n("742683"),
        R = n("116439"),
        O = n("42887"),
        v = n("697218"),
        L = n("471671"),
        M = n("945330"),
        P = n("823050"),
        D = n("439932"),
        y = n("191145"),
        x = n("458685"),
        b = n("49111"),
        U = n("353927"),
        G = n("782340"),
        j = n("675434"),
        w = n("678016");
      let k = { width: 232, height: 315 },
        F = { width: 232, height: 267 },
        B = { width: 475, height: 267 };
      function H(e) {
        let { header: t } = e,
          n = O.default.getCameraComponent(),
          l = (0, o.useStateFromStores)([O.default], () =>
            O.default.getVideoDeviceId()
          ),
          i = (0, m.default)();
        return (
          s.useEffect(() => {
            let e = v.default.getCurrentUser();
            if (i && null != e) {
              let t = (0, I.getLastUsedVideoBackgroundOption)(e);
              (0, S.applyBackgroundOptionPreview)(t, l, { track: !1 }).catch(
                b.NOOP
              );
            }
          }, [i, l]),
          (0, a.jsxs)("div", {
            className: j.previewRoot,
            children: [
              (0, a.jsx)(u.Spinner, {}),
              (0, a.jsx)("div", {
                className: j.preview,
                children: (0, a.jsx)(n, {
                  disabled: !1,
                  deviceId: l,
                  width: B.width,
                  height: B.height,
                }),
              }),
              (0, a.jsx)("div", {
                className: j.previewChannelHeader,
                children: t,
              }),
            ],
          })
        );
      }
      function V(e) {
        let { canVideo: t, channel: n, numVideoDevices: s } = e,
          { cameraUnavailable: l, enabled: r } = (0, p.default)(),
          o = (0, T.default)(n);
        return (0, a.jsxs)("div", {
          className: j.actions,
          children: [
            (0, a.jsx)(A.CenterControlButton, {
              iconComponent: M.default,
              color: "red",
              className: j.actionButton,
              label: G.default.Messages.DISMISS,
              onClick: () => d.default.stopRinging(n.id),
            }),
            t &&
              (0, a.jsx)(u.Popout, {
                renderPopout: e => {
                  let { closePopout: t } = e;
                  return (0, a.jsx)(x.default, { onClose: t });
                },
                position: "top",
                align: "center",
                animation: u.Popout.Animation.FADE,
                children: (e, t) => {
                  let { onClick: i } = e,
                    { isShown: u } = t;
                  return (0, a.jsx)(R.default, {
                    join: !0,
                    enabled: r,
                    color: "green",
                    centerButton: !0,
                    hasPermission: o,
                    cameraUnavailable: l,
                    channel: n,
                    onPopoutClick: s > 1 ? i : null,
                    className: j.actionButton,
                    popoutOpen: u,
                    onCameraUnavailable: g.default,
                    onChange: () => {
                      f.default.selectVoiceChannel(n.id, !0),
                        (0, C.transitionToGuild)(b.ME, n.id);
                    },
                  });
                },
              }),
            (0, a.jsx)(N.default, {
              channel: n,
              color: "green",
              centerButton: !0,
              className: i(j.actionButton, j.last),
            }),
          ],
        });
      }
      function Y(e) {
        let { animatedStyle: t, y: n, x: l, channel: f } = e,
          [C, I] = s.useState(!1),
          S = (0, h.getChannelIconURL)(f),
          m = (0, _.default)(f),
          [p, T] = (0, o.useStateFromStoresArray)([O.default], () => [
            O.default.supports(U.Features.VIDEO),
            Object.keys(O.default.getVideoDevices()).length,
          ]),
          g = (0, o.useStateFromStores)([L.default], () =>
            L.default.isFocused()
          ),
          A = (0, o.useStateFromStores)([y.default], () =>
            y.default.getMode(f.id)
          ),
          N = s.useCallback(e => {
            null != e.top && null != e.left && c.default.move(e.left, e.top);
          }, []),
          R = (0, r.useSpring)({
            value: C ? 1 : 0,
            config: { ...r.config.stiff, clamp: !0 },
          });
        s.useEffect(() => {
          let e = e => {
            e.keyCode === b.KeyboardKeys.ESCAPE && d.default.stopRinging(f.id);
          };
          return (
            window.addEventListener("keydown", e),
            () => window.removeEventListener("keydown", e)
          );
        }, [f]);
        let v = A === b.ChannelModes.VIDEO && p && T > 0,
          M = (0, a.jsxs)(a.Fragment, {
            children: [
              (0, a.jsx)(P.default, {
                className: j.icon,
                ringing: g,
                src: null != S ? S : "",
                ringingType: P.default.RingingType.INCOMING,
                size: C ? u.AvatarSizes.SIZE_40 : u.AvatarSizes.SIZE_80,
              }),
              (0, a.jsxs)("div", {
                className: j.titleGroup,
                children: [
                  (0, a.jsx)(u.Text, {
                    className: j.title,
                    color: "header-primary",
                    variant: C ? "text-md/semibold" : "text-lg/semibold",
                    children: m,
                  }),
                  (0, a.jsx)(u.Text, {
                    color: "header-secondary",
                    className: j.subtitle,
                    variant: C ? "text-sm/normal" : "text-md/normal",
                    children:
                      A === b.ChannelModes.VOICE
                        ? G.default.Messages.INCOMING_CALL_ELLIPSIS
                        : G.default.Messages.INCOMING_VIDEO_CALL_ELLIPSIS,
                  }),
                ],
              }),
            ],
          }),
          x = v ? k : F;
        return (0, a.jsx)(E.default, {
          className: j.wrapper,
          selector: ".".concat(j.root),
          initialPosition: { left: l, top: n },
          maxX: window.innerWidth,
          maxY: window.innerHeight,
          onDragEnd: N,
          dragAnywhere: !0,
          children: (0, a.jsx)(a.Fragment, {
            children: (0, a.jsxs)(r.animated.div, {
              className: i(
                j.root,
                w.elevationHigh,
                { [j.previewCamera]: C },
                C ? (0, D.getThemeClass)("dark") : null
              ),
              style: {
                ...t,
                width: R.value.interpolate([0, 1], [x.width, B.width]),
                minHeight: R.value.interpolate([0, 1], [x.height, B.height]),
                translateX: R.value.interpolate(
                  [0, 1],
                  [0, (-1 * Math.abs(B.width - x.width)) / 2]
                ),
              },
              children: [
                C
                  ? (0, a.jsx)(H, { header: M })
                  : (0, a.jsx)("div", {
                      className: j.mainChannelInfo,
                      children: M,
                    }),
                (0, a.jsx)(V, { canVideo: v, channel: f, numVideoDevices: T }),
                v && !C
                  ? (0, a.jsx)(u.Button, {
                      size: u.Button.Sizes.SMALL,
                      fullWidth: !0,
                      look: u.Button.Looks.LINK,
                      color: u.Button.Colors.PRIMARY,
                      className: j.previewButton,
                      onClick: () => I(!0),
                      children: G.default.Messages.INCOMING_CALL_PREVIEW_CAMERA,
                    })
                  : null,
              ],
            }),
          }),
        });
      }
    },
    959646: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("77078"),
        l = n("629109"),
        i = n("135230"),
        r = n("782340");
      function o(e) {
        if (e) {
          (0, s.openModal)(e =>
            (0, a.jsx)(i.default, {
              ...e,
              title: r.default.Messages.SERVER_DEAFENED_DIALOG_TITLE,
              body: r.default.Messages.SERVER_DEAFENED_DIALOG_BODY,
            })
          );
          return;
        }
        l.default.toggleSelfDeaf();
      }
    },
    516899: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var a = n("884691"),
        s = n("776156");
      function l(e) {
        a.useEffect(() => {
          if (null != e)
            return (
              s.default.lockChangeLog(e),
              () => {
                s.default.unlockChangeLog(e);
              }
            );
        }, [e]);
      }
    },
    442174: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return N;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("446674"),
        i = n("77078"),
        r = n("850391"),
        o = n("557809"),
        u = n("288518"),
        d = n("486503"),
        c = n("803524"),
        f = n("7643"),
        E = n("949067"),
        h = n("144491"),
        _ = n("208021"),
        C = n("982108"),
        I = n("945330"),
        S = n("664336"),
        m = n("679653"),
        p = n("176347"),
        T = n("782340"),
        g = n("264594"),
        A = n("867453");
      function N(e) {
        let { channel: t, baseChannelId: n } = e,
          N = (0, m.default)(t),
          R = (0, c.useListHasSingleMessageRequest)(),
          O = (0, c.useListHasSingleSpamMessageRequest)(),
          v = (0, l.useStateFromStores)([u.default], () =>
            u.default.isMessageRequest(t.id)
          ),
          L = (0, l.useStateFromStores)([d.default], () =>
            d.default.isSpam(t.id)
          ),
          M = (0, E.useLongestChannelMessageBeforeReply)(
            t.id,
            t.getRecipientId()
          ),
          P = s.useCallback(() => {
            _.default.closeChannelSidebar(C.MESSAGE_REQUESTS_BASE_CHANNEL_ID),
              v && R && (0, h.transitionToChannel)(t.id),
              L && O && (0, h.transitionToChannel)(t.id);
          }, [t.id, L, O, v, R]),
          D = s.useCallback(() => {
            (0, i.showToast)(
              (0, i.createToast)(
                T.default.Messages.MESSAGE_REQUESTS_SPAM_ERROR_ALERT_TITLE,
                i.ToastType.FAILURE
              )
            );
          }, []),
          { markAsNotSpam: y } = (0, f.useMessageRequestActions)({
            onAcceptSuccess: P,
            onError: D,
          });
        if (null == t || !t.isDM()) return null;
        let x = [
          (0, a.jsx)(
            S.default.Icon,
            {
              icon: I.default,
              tooltip: T.default.Messages.CLOSE,
              onClick: () => _.default.closeChannelSidebar(n),
            },
            "close"
          ),
        ];
        return (0, a.jsxs)(a.Fragment, {
          children: [
            (0, a.jsx)(S.default, {
              toolbar: x,
              "aria-label": T.default.Messages.CHANNEL_HEADER_BAR_A11Y_LABEL,
              children: (0, o.renderTitle)({
                channel: t,
                channelName: N,
                inSidebar: !0,
              }),
            }),
            L &&
              (0, a.jsxs)("div", {
                className: A.hamBanner,
                children: [
                  (0, a.jsx)(i.Text, {
                    className: A.hamBannerText,
                    variant: "text-sm/normal",
                    children:
                      T.default.Messages
                        .MESSAGE_REQUESTS_CHANNEL_SIDEBAR_HAM_HEADER,
                  }),
                  (0, a.jsx)(i.Button, {
                    className: A.hamBannerButton,
                    size: i.ButtonSizes.SMALL,
                    onClick: () => y(t, M),
                    children:
                      T.default.Messages
                        .MESSAGE_REQUESTS_CHANNEL_SIDEBAR_HAM_BUTTON,
                  }),
                ],
              }),
            (0, a.jsx)("div", {
              className: g.chat,
              children: (0, a.jsx)(
                p.default,
                {
                  channel: t,
                  guild: null,
                  chatInputType: r.ChatInputTypes.SIDEBAR,
                },
                t.id
              ),
            }),
          ],
        });
      }
    },
    837844: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("65597"),
        o = n("384997"),
        u = n("162771"),
        d = n("120363"),
        c = n("994428"),
        f = n("13972");
      let E = s.memo(function (e) {
        var t, n, l;
        let { state: r, markAsDismissed: o } = e,
          { name: u, guildId: d, boundingRect: c } = r,
          E = s.useMemo(() => {
            var e, t, n;
            return (e = 0), (t = 0), (n = 0), null;
          }, [u, d, o]);
        if (null == E) return null;
        return (0, a.jsx)("div", {
          className: i(f.upsell, !(null != (t = c) && !(t.y < 0)) && f.hidden),
          style:
            ((n = 0),
            null == (l = c) ? {} : { top: l.top, left: l.right - l.x }),
          children: E,
        });
      });
      function h() {
        let e = (0, r.default)([u.default], () => u.default.getGuildId()),
          t = (0, d.useChannelListUpsells)(e),
          [n, s] = (0, o.useSelectedDismissibleContent)(
            Object.values(t)
              .filter(e => {
                let { disabled: t } = e;
                return !t;
              })
              .map(e => {
                let { name: t } = e;
                return t;
              }),
            c.DismissibleContentGroupName.SIDEBAR
          );
        if (null == n) return null;
        let l = t[n];
        return null == l
          ? null
          : (0, a.jsx)("div", {
              className: f.container,
              children: (0, a.jsx)(E, { state: l, markAsDismissed: s }),
            });
      }
    },
    478761: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useChannelNoticeRedesignExperiment: function () {
            return l;
          },
        });
      var a = n("862205");
      let s = (0, a.createExperiment)({
        kind: "user",
        id: "2022-12_channel_notice_redesign",
        label: "Channel Notice Redesign",
        defaultConfig: {
          showRedesignedChannelNotice: !1,
          showRedesignedLiveChannelNotice: !1,
        },
        treatments: [
          {
            id: 1,
            label: "Show Redesigned Channel Notices",
            config: {
              showRedesignedChannelNotice: !0,
              showRedesignedLiveChannelNotice: !1,
            },
          },
          {
            id: 2,
            label: "Show Redesigned Stage/Event Notices",
            config: {
              showRedesignedChannelNotice: !1,
              showRedesignedLiveChannelNotice: !0,
            },
          },
          {
            id: 3,
            label: "Show Redesigned Channel Notices & Stage/Event Notices",
            config: {
              showRedesignedChannelNotice: !0,
              showRedesignedLiveChannelNotice: !0,
            },
          },
        ],
      });
      function l() {
        let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
          {
            showRedesignedChannelNotice: t,
            showRedesignedLiveChannelNotice: n,
          } = s.useExperiment(
            { location: "c0d6eb_1" },
            { autoTrackExposure: e }
          );
        return {
          showRedesignedChannelNotice: t,
          showRedesignedLiveChannelNotice: n,
        };
      }
    },
    164586: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return C;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("917351"),
        o = n("77078"),
        u = n("716241"),
        d = n("945330"),
        c = n("599110"),
        f = n("49111"),
        E = n("782340"),
        h = n("231663");
      let _ = (0, r.debounce)(u.default.trackWithMetadata, 500);
      var C = function (e) {
        let {
          guild: t,
          title: n,
          message: l,
          image: r,
          type: C,
          imageStyles: I,
          imageMarginX: S,
          imageMarginTop: m,
          trackingSource: p,
          undismissable: T,
          onDismissed: g,
          onClick: A,
          cta: N,
          ctaColor: R,
          centerText: O,
        } = e;
        s.useEffect(() => {
          _(f.AnalyticEvents.CHANNEL_NOTICE_VIEWED, {
            notice_type: C,
            guild_id: t.id,
          });
        }, [t.id, C]);
        let v = null;
        "function" == typeof N
          ? (v = N())
          : null != N &&
            (v = (0, a.jsx)(o.Button, {
              className: h.button,
              size: o.Button.Sizes.SMALL,
              onClick: () => {
                null != C &&
                  c.default.track(f.AnalyticEvents.CHANNEL_NOTICE_CTA_CLICKED, {
                    source: p,
                    guild_id: t.id,
                    notice_type: C,
                  }),
                  null == A || A();
              },
              fullWidth: !0,
              color: R,
              children: N,
            }));
        let L = null;
        "function" == typeof n
          ? (L = n())
          : null != n &&
            (L = (0, a.jsx)(o.Text, {
              variant: "text-md/medium",
              color: "header-primary",
              className: i(
                h.title,
                { [h.noImageTitle]: null == r },
                { [h.center]: O }
              ),
              children: n,
            }));
        let M = null != S ? "".concat(S, "px") : "16px";
        return (0, a.jsxs)("div", {
          className: h.container,
          children: [
            !0 === T
              ? null
              : (0, a.jsx)(o.Clickable, {
                  onClick: () => {
                    u.default.trackWithMetadata(
                      f.AnalyticEvents.CHANNEL_NOTICE_CLOSED,
                      { notice_type: C }
                    ),
                      null == g || g();
                  },
                  className: h.close,
                  "aria-label": E.default.Messages.DISMISS,
                  children: (0, a.jsx)(d.default, { className: h.closeIcon }),
                }),
            null != r &&
              (0, a.jsx)("div", {
                className: h.imageContainer,
                style: {
                  marginTop: "".concat(m, "px"),
                  marginLeft: M,
                  marginRight: M,
                },
                children: (0, a.jsx)("img", {
                  className: h.image,
                  style: I,
                  src: r,
                  alt: "",
                }),
              }),
            (0, a.jsxs)("div", {
              className: h.message,
              children: [
                L,
                (0, a.jsx)(o.Text, {
                  className: i({ [h.center]: O }),
                  variant: "text-sm/normal",
                  color: "text-muted",
                  children: l,
                }),
                v,
              ],
            }),
          ],
        });
      };
    },
    640322: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return P;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("446674"),
        i = n("151426"),
        r = n("95410"),
        o = n("55058"),
        u = n("384997"),
        d = n("48821"),
        c = n("388437"),
        f = n("667048"),
        E = n("153014"),
        h = n("79176"),
        _ = n("986321"),
        C = n("519440"),
        I = n("600177"),
        S = n("947337"),
        m = n("197881"),
        p = n("401774"),
        T = n("607894"),
        g = n("746504"),
        A = n("107153"),
        N = n("32505"),
        R = n("731681"),
        O = n("427474"),
        v = n("994428");
      function L(e) {
        e.stopPropagation();
      }
      function M(e) {
        var t;
        let { guild: n } = e,
          [d, E] = s.useState(
            null !== (t = r.default.get(O.LAST_HIDDEN_CHANNEL_NOTICE)) &&
              void 0 !== t
              ? t
              : 0
          ),
          _ = e => {
            r.default.set(O.LAST_HIDDEN_CHANNEL_NOTICE, e), E(e);
          },
          C = (0, l.useStateFromStoresArray)(O.CHANNEL_NOTICE_STORES, () =>
            O.CHANNEL_NOTICES.filter(e => {
              let { store: t } = e;
              return null == t ? void 0 : t.channelNoticePredicate(n, d);
            }).map(e => e.dismissibleContentType)
          );
        return (0, a.jsx)(u.default, {
          contentTypes: C,
          groupName: v.DismissibleContentGroupName.CHANNEL_NOTICES,
          children: e => {
            let { visibleContent: t, markAsDismissed: s } = e,
              l = () => {
                _(Date.now()), s(v.ContentDismissActionType.UNKNOWN);
              },
              r = (() => {
                switch (t) {
                  case i.DismissibleContent.CHANNEL_NOTICE_HUBLINK:
                    return (0, a.jsx)(h.default, {
                      guild: n,
                      markAsDismissed: l,
                    });
                  case i.DismissibleContent.CHANNEL_NOTICE_INVITE:
                    return (0, a.jsx)(g.default, {
                      guild: n,
                      markAsDismissed: l,
                    });
                  case i.DismissibleContent
                    .CHANNEL_NOTICE_PREMIUM_GUILD_SUBSCRIPTION:
                    return (0, a.jsx)(f.default, {
                      guild: n,
                      markAsDismissed: l,
                    });
                  case i.DismissibleContent.CHANNEL_NOTICE_QUICKSWITCHER:
                    return (0, a.jsx)(N.default, {
                      guild: n,
                      markAsDismissed: l,
                    });
                  case i.DismissibleContent.CHANNEL_NOTICE_GUILD_BANNER:
                    return (0, a.jsx)(c.default, {
                      guild: n,
                      markAsDismissed: l,
                    });
                  case i.DismissibleContent
                    .GUILD_ONBOARDING_UPSELL_CHANNEL_NOTICE:
                    return (0, a.jsx)(T.default, {
                      guild: n,
                      markAsDismissed: l,
                    });
                  case i.DismissibleContent.LINKED_ROLE_ADMIN_GUILD:
                    return (0, a.jsx)(o.default, {
                      guild: n,
                      markAsDismissed: () =>
                        s(v.ContentDismissActionType.UNKNOWN),
                    });
                  default:
                    return null;
                }
              })();
            return null == r
              ? null
              : (0, a.jsx)("div", { onContextMenu: L, children: r });
          },
        });
      }
      var P = e => {
        let { guild: t } = e,
          n = (0, R.default)(t);
        switch (n) {
          case R.ConnectedChannelNotices.ENABLE_PUBLIC_GUILD:
            return (0, a.jsx)(S.default, { guild: t });
          case R.ConnectedChannelNotices.APPLIED_GUILD_BOOST_GRACE_PERIOD:
            return (0, a.jsx)(d.default, { guild: t });
          case R.ConnectedChannelNotices.MAX_MEMBER_COUNT:
            return (0, a.jsx)(A.default, { guild: t });
          case R.ConnectedChannelNotices.GUILD_LIVE_CHANNEL:
            return (0, a.jsx)(E.default, { guild: t });
          case R.ConnectedChannelNotices.GUILD_MFA_WARNING:
            return (0, a.jsx)(p.default, { guild: t });
          case R.ConnectedChannelNotices.COMMANDS_MIGRATION:
            return (0, a.jsx)(C.default, { guild: t });
          case R.ConnectedChannelNotices.APPLICATION_SUBSCRIPTION_EXPIRATION:
            return (0, a.jsx)(I.default, { guild: t });
          case R.ConnectedChannelNotices.HUB_STUDY_ROOM:
            return (0, a.jsx)(_.default, { guild: t });
        }
        return m.ProcessArgs.isDisallowPopupsSet()
          ? null
          : (0, a.jsx)(M, { guild: e.guild });
      };
    },
    427474: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          LAST_HIDDEN_CHANNEL_NOTICE: function () {
            return f;
          },
          CHANNEL_NOTICES: function () {
            return E;
          },
          CHANNEL_NOTICE_STORES: function () {
            return h;
          },
        });
      var a = n("151426"),
        s = n("116460"),
        l = n("779671"),
        i = n("8452"),
        r = n("433973"),
        o = n("150057"),
        u = n("141162"),
        d = n("449008"),
        c = n("49111");
      let f = "lastHiddenChannelNotice",
        E = [
          {
            type: c.ChannelNoticeTypes.GUILD_BOOSTING,
            store: i.default,
            dismissibleContentType:
              a.DismissibleContent.CHANNEL_NOTICE_PREMIUM_GUILD_SUBSCRIPTION,
          },
          {
            type: c.ChannelNoticeTypes.GUILD_BANNER,
            store: l.default,
            dismissibleContentType:
              a.DismissibleContent.CHANNEL_NOTICE_GUILD_BANNER,
          },
          {
            type: c.ChannelNoticeTypes.INVITE,
            store: u.default,
            dismissibleContentType: a.DismissibleContent.CHANNEL_NOTICE_INVITE,
          },
          {
            type: c.ChannelNoticeTypes.HUB_LINK,
            store: o.default,
            dismissibleContentType: a.DismissibleContent.CHANNEL_NOTICE_HUBLINK,
          },
          {
            type: c.ChannelNoticeTypes.QUICKSWITCHER,
            store: s.default,
            dismissibleContentType:
              a.DismissibleContent.CHANNEL_NOTICE_QUICKSWITCHER,
          },
          {
            type: c.ChannelNoticeTypes.GUILD_ONBOARDING_UPSELL,
            store: r.default,
            dismissibleContentType:
              a.DismissibleContent.GUILD_ONBOARDING_UPSELL_CHANNEL_NOTICE,
          },
          {
            type: c.ChannelNoticeTypes.LINKED_ROLES_ADMIN,
            dismissibleContentType:
              a.DismissibleContent.LINKED_ROLE_ADMIN_GUILD,
          },
        ],
        h = E.map(e => e.store).filter(d.isNotNullish);
    },
    401774: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("79112"),
        i = n("963662"),
        r = n("49111"),
        o = n("782340"),
        u = n("37476");
      class d extends s.PureComponent {
        render() {
          return (0, a.jsx)(i.default, {
            guild: this.props.guild,
            onClick: () => l.default.open(r.UserSettingsSections.ACCOUNT),
            message:
              o.default.Messages.TWO_FA_GUILD_MFA_WARNING_MESSAGE_WITH_SPACING.format(),
            cta: o.default.Messages.TWO_FA_GUILD_MFA_WARNING_RESOLVE_BUTTON,
            trackingSource: r.ChannelNoticeCtaSources.GUILD_MFA_WARNING,
            type: r.ChannelNoticeTypes.MFA_WARNING,
            image: u,
            imageMarginX: 54,
            undismissable: !0,
          });
        }
      }
      var c = d;
    },
    607894: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("151426"),
        i = n("10641"),
        r = n("179803"),
        o = n("592407"),
        u = n("599110"),
        d = n("164586"),
        c = n("49111"),
        f = n("994428"),
        E = n("782340"),
        h = e => {
          let { guild: t, markAsDismissed: n } = e;
          s.useEffect(() => {
            (0, i.requestMarkDismissibleContentAsShown)(
              l.DismissibleContent.GUILD_ONBOARDING_UPSELL_CHANNEL_NOTICE
            );
          }, []);
          let h = s.useCallback(() => {
              o.default.open(t.id, c.GuildSettingsSections.ONBOARDING),
                u.default.track(c.AnalyticEvents.UPSELL_CLICKED, {
                  type: l.DismissibleContent[
                    l.DismissibleContent.GUILD_ONBOARDING_UPSELL_CHANNEL_NOTICE
                  ],
                  action: "primary",
                }),
                (0, i.markDismissibleContentAsDismissed)(
                  l.DismissibleContent.GUILD_ONBOARDING_UPSELL_CHANNEL_NOTICE,
                  { dismissAction: f.ContentDismissActionType.PRIMARY }
                ),
                (0, r.dismissedGuildOnboardingUpsell)(
                  t.id,
                  l.DismissibleContent.GUILD_ONBOARDING_UPSELL_CHANNEL_NOTICE
                );
            }, [t.id]),
            _ = s.useCallback(() => {
              u.default.track(c.AnalyticEvents.UPSELL_CLICKED, {
                type: l.DismissibleContent[
                  l.DismissibleContent.GUILD_ONBOARDING_UPSELL_CHANNEL_NOTICE
                ],
                action: "dismiss",
              }),
                n(f.ContentDismissActionType.UNKNOWN),
                (0, r.dismissedGuildOnboardingUpsell)(
                  t.id,
                  l.DismissibleContent.GUILD_ONBOARDING_UPSELL_CHANNEL_NOTICE
                );
            }, [t.id, n]);
          return (0, a.jsx)(d.default, {
            guild: t,
            onDismissed: _,
            onClick: h,
            title: E.default.Messages.GUILD_ONBOARDING_CHANNEL_NOTICE_TITLE,
            message: E.default.Messages.GUILD_ONBOARDING_CHANNEL_NOTICE_MESSAGE,
            cta: E.default.Messages.CHECK_IT_OUT,
            trackingSource:
              c.ChannelNoticeCtaSources.GUILD_ONBOARDING_UPSELL_NOTICE,
            type: c.ChannelNoticeTypes.GUILD_ONBOARDING_UPSELL,
          });
        };
    },
    746504: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("77078"),
        i = n("819689"),
        r = n("18494"),
        o = n("963662"),
        u = n("49111"),
        d = n("994428"),
        c = n("782340"),
        f = n("292379");
      class E extends s.PureComponent {
        render() {
          let e = ""
            .concat(c.default.Messages.INVITE_NOTICE_MESSAGE, "\n")
            .concat(c.default.Messages.INVITE_NOTICE_MESSAGE_PART_2);
          return (0, a.jsx)(o.default, {
            guild: this.props.guild,
            onDismissed: this.handleClose,
            onClick: this.handleInvite,
            message: e,
            cta: c.default.Messages.INVITE_PEOPLE,
            trackingSource: u.ChannelNoticeCtaSources.INVITE_NOTICE,
            type: u.ChannelNoticeTypes.INVITE,
            image: f,
            imageMarginX: 46,
          });
        }
        constructor(...e) {
          super(...e),
            (this.handleInvite = () => {
              let { guild: e } = this.props;
              (0, l.openModalLazy)(async () => {
                let { default: t } = await n
                  .el("310688")
                  .then(n.bind(n, "310688"));
                return n =>
                  (0, a.jsx)(t, {
                    ...n,
                    guild: e,
                    source: u.InstantInviteSources.INVITE_NOTICE,
                  });
              });
            }),
            (this.handleClose = () => {
              let e = r.default.getChannelId();
              this.props.markAsDismissed(d.ContentDismissActionType.UNKNOWN),
                null != e &&
                  i.default.sendBotMessage(
                    e,
                    c.default.Messages.HOW_TO_INVITE_OTHERS.format({
                      invitePeople: c.default.Messages.INVITE_PEOPLE,
                    })
                  );
            });
        }
      }
      var h = E;
    },
    810467: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return V;
          },
        }),
        n("222007");
      var a,
        s,
        l = n("37983"),
        i = n("884691"),
        r = n("414456"),
        o = n.n(r),
        u = n("446674"),
        d = n("669491"),
        c = n("77078"),
        f = n("327037"),
        E = n("419830"),
        h = n("374021"),
        _ = n("398604"),
        C = n("395869"),
        I = n("824650"),
        S = n("1339"),
        m = n("593897"),
        p = n("534222"),
        T = n("841363"),
        g = n("822516"),
        A = n("393414"),
        N = n("716214"),
        R = n("488464"),
        O = n("998716"),
        v = n("834052"),
        L = n("160870"),
        M = n("506885"),
        P = n("981601"),
        D = n("957255"),
        y = n("697218"),
        x = n("945330"),
        b = n("272339"),
        U = n("89684"),
        G = n("718550"),
        j = n("228427"),
        w = n("290581"),
        k = n("49111"),
        F = n("745049"),
        B = n("782340"),
        H = n("231663");
      ((s = a || (a = {}))[(s.STAGE = 0)] = "STAGE"),
        (s[(s.EVENT_EXTERNAL = 1)] = "EVENT_EXTERNAL"),
        (s[(s.EVENT_VOICE = 2)] = "EVENT_VOICE"),
        (s[(s.STUDY_ROOM = 3)] = "STUDY_ROOM");
      function V(e) {
        let { guild: t, isStudyRoomNotice: n = !1 } = e,
          a = (0, m.useActiveEventOrStageInstanceChannel)(t.id),
          s = (0, p.useGuildActiveEvent)(t.id),
          r = (0, u.useStateFromStores)(
            [v.default],
            () =>
              v.default.getStageInstanceByChannel(null == a ? void 0 : a.id),
            [a]
          ),
          { isStageNoticeHidden: V, isEventNoticeHidden: Y } = (0,
          u.useStateFromStoresObject)(
            [I.default],
            () => ({
              isStageNoticeHidden: I.default.isLiveChannelNoticeHidden({
                stageId: null == r ? void 0 : r.id,
              }),
              isEventNoticeHidden: I.default.isLiveChannelNoticeHidden({
                eventId: null == s ? void 0 : s.id,
              }),
            }),
            [r, s]
          ),
          W = null == a ? void 0 : a.id,
          K = (0, u.useStateFromStoresArray)(
            [R.default],
            () => [
              ...new Set(
                R.default
                  .getMutableParticipants(
                    W,
                    O.StageChannelParticipantNamedIndex.SPEAKER
                  )
                  .map(e => e.user)
              ),
            ],
            [W]
          ),
          z = (0, u.useStateFromStores)(
            [R.default],
            () =>
              null != W
                ? R.default.getParticipantCount(
                    W,
                    O.StageChannelParticipantNamedIndex.AUDIENCE
                  )
                : 0,
            [W]
          ),
          q = (0, u.useStateFromStores)([D.default], () =>
            D.default.can(k.Permissions.CONNECT, a)
          ),
          Q = (0, L.default)(null == a ? void 0 : a.id),
          Z = null == s ? void 0 : s.creator_id,
          X = (0, u.useStateFromStores)(
            [y.default],
            () => y.default.getUser(Z),
            [Z]
          );
        i.useEffect(() => {
          null != Z && (0, f.getUser)(Z);
        }, [Z]);
        let {
          noticeType: J,
          title: $,
          location: ee,
          locationIcon: et,
          canListenIn: en,
          buttonText: ea,
          users: es,
          overflowUsers: el,
          onClose: ei,
        } = i.useMemo(
          () =>
            (function (e) {
              let {
                  guildEvent: t,
                  stageInstance: n,
                  activeChannel: a,
                  canConnect: s,
                  myRole: i,
                  eventCreator: r,
                  speakers: o,
                  listenerCount: u,
                  isEventNoticeHidden: d,
                  isStageNoticeHidden: f,
                  isStudyRoomNotice: h,
                } = e,
                I = null != n && null != a && !f,
                m = null != t ? (0, g.getNextRecurrenceIdInEvent)(t) : null;
              if (h && null != a) {
                let e = (0, E.getChannelIconComponent)(a);
                return {
                  noticeType: 3,
                  title: "\uD83D\uDCDA☕ ".concat(a.name),
                  location:
                    B.default.Messages.HUB_STUDY_ROOM_VOICE_CHANNEL_TOOLTIP,
                  locationIcon:
                    null != e
                      ? (0, l.jsx)(e, {
                          width: 16,
                          height: 16,
                          className: H.locationIcon,
                        })
                      : null,
                  canListenIn: s,
                  buttonText:
                    B.default.Messages.HUB_STUDY_ROOM_NOTICE_VOICE_CTA,
                  users: [],
                  overflowUsers: null,
                };
              }
              if (null == t || d) {
                if (I) {
                  let e = B.default.Messages.STAGE_CHANNEL_JOIN_BUTTON;
                  return (
                    (null == i ? void 0 : i.speaker)
                      ? (e =
                          B.default.Messages
                            .STAGE_CHANNEL_JOINED_SPEAKER_BUTTON)
                      : null != i &&
                        (e =
                          B.default.Messages
                            .STAGE_CHANNEL_JOINED_AUDIENCE_BUTTON),
                    {
                      noticeType: 0,
                      title: n.topic,
                      location: a.name,
                      locationIcon: (0, l.jsx)(j.default, {
                        width: 16,
                        height: 16,
                        className: H.locationIcon,
                      }),
                      canListenIn: s,
                      buttonText: e,
                      onClose: () =>
                        (0, C.hideLiveChannelNotice)({
                          stageId: null == n ? void 0 : n.id,
                        }),
                      users: o.length > 5 ? o.slice(0, 5) : o,
                      overflowUsers:
                        u < 1
                          ? null
                          : (0, l.jsxs)("div", {
                              className: H.pill,
                              children: [
                                (0, l.jsx)(b.default, {
                                  width: 12,
                                  height: 12,
                                  className: H.pillIcon,
                                }),
                                (0, l.jsx)(c.Text, {
                                  variant: "text-xs/medium",
                                  color: "header-secondary",
                                  className: H.pillLabel,
                                  children: u,
                                }),
                              ],
                            }),
                    }
                  );
                }
              } else {
                if (
                  t.entity_type ===
                    F.GuildScheduledEventEntityTypes.STAGE_INSTANCE &&
                  I
                ) {
                  let e = B.default.Messages.STAGE_CHANNEL_JOIN_BUTTON;
                  return (
                    (null == i ? void 0 : i.speaker)
                      ? (e =
                          B.default.Messages
                            .STAGE_CHANNEL_JOINED_SPEAKER_BUTTON)
                      : null != i &&
                        (e =
                          B.default.Messages
                            .STAGE_CHANNEL_JOINED_AUDIENCE_BUTTON),
                    {
                      noticeType: 0,
                      title: n.topic,
                      location: a.name,
                      locationIcon: (0, l.jsx)(j.default, {
                        width: 16,
                        height: 16,
                        className: H.locationIcon,
                      }),
                      canListenIn: s,
                      buttonText: e,
                      onClose: () =>
                        (0, C.hideLiveChannelNotice)({
                          stageId: null == n ? void 0 : n.id,
                        }),
                      users: o.length > 5 ? o.slice(0, 5) : o,
                      overflowUsers:
                        u < 1
                          ? null
                          : (0, l.jsxs)("div", {
                              className: H.pill,
                              children: [
                                (0, l.jsx)(b.default, {
                                  width: 12,
                                  height: 12,
                                  className: H.pillIcon,
                                }),
                                (0, l.jsx)(c.Text, {
                                  variant: "text-xs/medium",
                                  color: "header-secondary",
                                  className: H.pillLabel,
                                  children: u,
                                }),
                              ],
                            }),
                    }
                  );
                }
                if (
                  t.entity_type === F.GuildScheduledEventEntityTypes.EXTERNAL
                ) {
                  let e = (0, T.getLocationFromEvent)(t);
                  if (null == e) return { noticeType: null };
                  let n = _.default.getUserCount(t.id, m);
                  return {
                    noticeType: 1,
                    title: t.name,
                    location: (0, S.guildEventDetailsParser)(e, !0),
                    locationIcon: (0, l.jsx)(G.default, {
                      width: 16,
                      height: 16,
                      className: H.locationIcon,
                    }),
                    canListenIn: !1,
                    buttonText:
                      B.default.Messages.GUILD_EVENT_DETAILS_INFO_TAB_TITLE,
                    onClose: () =>
                      (0, C.hideLiveChannelNotice)({
                        eventId: null == t ? void 0 : t.id,
                      }),
                    users: null == r ? [] : [r],
                    overflowUsers:
                      n < 1
                        ? null
                        : (0, l.jsxs)("div", {
                            className: H.pill,
                            children: [
                              (0, l.jsx)(w.default, {
                                width: 12,
                                height: 12,
                                className: H.pillIcon,
                              }),
                              (0, l.jsx)(c.Text, {
                                variant: "text-xs/medium",
                                color: "header-secondary",
                                className: H.pillLabel,
                                children: n,
                              }),
                            ],
                          }),
                  };
                } else if (
                  t.entity_type === F.GuildScheduledEventEntityTypes.VOICE &&
                  null != a
                ) {
                  let e = (0, E.getChannelIconComponent)(a),
                    n = _.default.getUserCount(t.id, m);
                  return {
                    noticeType: 2,
                    title: t.name,
                    location: a.name,
                    locationIcon:
                      null != e
                        ? (0, l.jsx)(e, {
                            width: 16,
                            height: 16,
                            className: H.locationIcon,
                          })
                        : null,
                    canListenIn: s,
                    buttonText: B.default.Messages.GUILD_EVENT_JOIN,
                    onClose: () =>
                      (0, C.hideLiveChannelNotice)({
                        eventId: null == t ? void 0 : t.id,
                      }),
                    users: null == r ? [] : [r],
                    overflowUsers:
                      n < 1
                        ? null
                        : (0, l.jsxs)("div", {
                            className: H.pill,
                            children: [
                              (0, l.jsx)(w.default, {
                                width: 12,
                                height: 12,
                                className: H.pillIcon,
                              }),
                              (0, l.jsx)(c.Text, {
                                variant: "text-xs/medium",
                                color: "header-secondary",
                                className: H.pillLabel,
                                children: n,
                              }),
                            ],
                          }),
                  };
                }
              }
              return { noticeType: null };
            })({
              guildEvent: s,
              stageInstance: r,
              activeChannel: a,
              canConnect: q,
              myRole: Q,
              eventCreator: X,
              speakers: K,
              listenerCount: z,
              isEventNoticeHidden: Y,
              isStageNoticeHidden: V,
              isStudyRoomNotice: n,
            }),
          [s, r, a, q, Q, X, K, z, Y, V, n]
        );
        return null == J
          ? null
          : (0, l.jsxs)("div", {
              className: H.container,
              children: [
                null != ei
                  ? (0, l.jsx)(c.Clickable, {
                      onClick: ei,
                      className: H.close,
                      "aria-label": B.default.Messages.DISMISS,
                      children: (0, l.jsx)(x.default, {
                        className: H.closeIcon,
                      }),
                    })
                  : null,
                (0, l.jsxs)("div", {
                  className: H.header,
                  children: [
                    (0, l.jsx)(U.default, {
                      color: d.default.unsafe_rawColors.GREEN_230.css,
                      width: 16,
                      height: 16,
                    }),
                    (0, l.jsx)(c.Text, {
                      variant: "text-xs/semibold",
                      color: "text-positive",
                      children: B.default.Messages.LIVE,
                    }),
                  ],
                }),
                (es.length > 0 || null != el) &&
                  (0, l.jsxs)("div", {
                    className: H.participants,
                    children: [
                      es.map(e =>
                        (0, l.jsx)(
                          c.Popout,
                          {
                            preload: () =>
                              (0, M.default)(e.id, e.getAvatarURL(t.id, 80), {
                                guildId: t.id,
                              }),
                            renderPopout: t =>
                              (0, l.jsx)(P.default, { ...t, userId: e.id }),
                            position: "right",
                            children: n =>
                              (0, l.jsx)(c.Avatar, {
                                ...n,
                                src: e.getAvatarURL(t.id, 24),
                                "aria-label": e.username,
                                size: c.AvatarSizes.SIZE_24,
                                className: H.avatar,
                              }),
                          },
                          e.id
                        )
                      ),
                      el,
                    ],
                  }),
                (0, l.jsx)(c.Text, {
                  variant: "text-md/medium",
                  color: "header-primary",
                  className: o(H.title, H.live),
                  children: $,
                }),
                (0, l.jsxs)("div", {
                  className: H.locationContainer,
                  children: [
                    et,
                    (0, l.jsx)(c.Text, {
                      variant: "text-xs/normal",
                      color: "text-muted",
                      className: H.location,
                      children: ee,
                    }),
                  ],
                }),
                en || 1 === J
                  ? (0, l.jsx)(c.Button, {
                      size: c.Button.Sizes.SMALL,
                      color: c.Button.Colors.GREEN,
                      onClick: () => {
                        if (en)
                          null != a &&
                            null != a.getGuildId() &&
                            ((0, N.connectAndOpen)(a),
                            (0, A.transitionToGuild)(a.getGuildId(), a.id));
                        else {
                          if (null == s) return;
                          (0, h.openGuildEventDetails)({ eventId: s.id });
                        }
                      },
                      className: H.button,
                      fullWidth: !0,
                      children: ea,
                    })
                  : null,
              ],
            });
      }
    },
    107153: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("363025"),
        i = n("701909"),
        r = n("963662"),
        o = n("49111"),
        u = n("782340"),
        d = n("649592"),
        c = e => {
          let { guild: t } = e,
            n = s.useCallback(() => {
              (0, l.hideMaxMemberCountChannelNotice)(t.id);
            }, [t.id]);
          return (0, a.jsx)(r.default, {
            guild: t,
            onDismissed: n,
            message:
              u.default.Messages.NOTICE_CHANNEL_MAX_MEMBERS_CAP_REACHED_MESSAGE.format(
                {
                  maxMemberCount: t.maxMembers,
                  maxMembersUrl: i.default.getArticleURL(
                    o.HelpdeskArticles.MAX_MEMBERS
                  ),
                }
              ),
            type: o.ChannelNoticeTypes.MAX_MEMBER_COUNT,
            image: d,
            imageMarginX: 61,
          });
        };
    },
    963662: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return S;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("917351"),
        i = n.n(l),
        r = n("77078"),
        o = n("716241"),
        u = n("945330"),
        d = n("599110"),
        c = n("478761"),
        f = n("164586"),
        E = n("49111"),
        h = n("782340"),
        _ = n("64187");
      let C = i.debounce(o.default.trackWithMetadata, 500),
        I = e => {
          let {
            guild: t,
            title: n,
            message: l,
            image: i,
            type: c,
            imageMarginX: f,
            imageMarginTop: I,
            trackingSource: S,
            undismissable: m,
            onDismissed: p,
            onClick: T,
            cta: g,
            ctaColor: A,
          } = e;
          s.useEffect(() => {
            C(E.AnalyticEvents.CHANNEL_NOTICE_VIEWED, {
              notice_type: c,
              guild_id: t.id,
            });
          }, [t.id, c]);
          let N = null;
          "function" == typeof g
            ? (N = g())
            : null != g &&
              (N = (0, a.jsx)(r.Button, {
                className: _.btn,
                size: r.Button.Sizes.SMALL,
                onClick: () => {
                  null != c &&
                    d.default.track(
                      E.AnalyticEvents.CHANNEL_NOTICE_CTA_CLICKED,
                      { source: S, guild_id: t.id, notice_type: c }
                    ),
                    null == T || T();
                },
                fullWidth: !0,
                color: A,
                children: g,
              }));
          let R = null != f ? "".concat(f, "px") : "16px";
          return (0, a.jsxs)("div", {
            className: _.channelNotice,
            children: [
              !0 === m
                ? null
                : (0, a.jsx)(r.Clickable, {
                    onClick: () => {
                      o.default.trackWithMetadata(
                        E.AnalyticEvents.CHANNEL_NOTICE_CLOSED,
                        { notice_type: c }
                      ),
                        null == p || p();
                    },
                    className: _.close,
                    "aria-label": h.default.Messages.DISMISS,
                    children: (0, a.jsx)(u.default, { className: _.closeIcon }),
                  }),
              (0, a.jsx)("div", {
                className: _.imageContainer,
                style: {
                  marginTop: "".concat(I, "px"),
                  marginLeft: R,
                  marginRight: R,
                },
                children: (0, a.jsx)("img", {
                  className: _.image,
                  src: i,
                  alt: "",
                }),
              }),
              (0, a.jsxs)("div", {
                className: _.message,
                children: [
                  null != n
                    ? (0, a.jsx)(r.Heading, {
                        variant: "heading-md/semibold",
                        className: _.title,
                        children: n,
                      })
                    : null,
                  (0, a.jsx)(r.Text, {
                    variant: "text-sm/normal",
                    children: l,
                  }),
                  N,
                ],
              }),
            ],
          });
        };
      var S = function (e) {
        let { showRedesignedChannelNotice: t } = (0,
        c.useChannelNoticeRedesignExperiment)(!0);
        return t ? (0, a.jsx)(f.default, { ...e }) : (0, a.jsx)(I, { ...e });
      };
    },
    32505: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("77078"),
        l = n("242149"),
        i = n("104589"),
        r = n("963662"),
        o = n("49111"),
        u = n("994428"),
        d = n("782340"),
        c = n("398586"),
        f = e => {
          let t = l.QUICKSWITCHER_SHOW.binds[0]
            .split("+")
            .map(e => (null != s.PRETTY_KEYS[e] ? (0, s.PRETTY_KEYS)[e]() : e))
            .join(" + ")
            .toUpperCase();
          return (0, a.jsx)(r.default, {
            guild: e.guild,
            onDismissed: () =>
              e.markAsDismissed(u.ContentDismissActionType.UNKNOWN),
            onClick: () => (0, i.show)("CHANNEL_NOTICE"),
            message: d.default.Messages.QUICKSWITCHER_NOTICE,
            cta: t,
            trackingSource: o.ChannelNoticeCtaSources.QUICK_SWITCHER_NOTICE,
            type: o.ChannelNoticeTypes.QUICKSWITCHER,
            image: c,
            imageMarginX: 50,
          });
        };
    },
    731681: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ConnectedChannelNotices: function () {
            return s;
          },
          default: function () {
            return N;
          },
        });
      var a,
        s,
        l = n("884691"),
        i = n("446674"),
        r = n("583367"),
        o = n("933326"),
        u = n("73675"),
        d = n("568500"),
        c = n("534222"),
        f = n("341563"),
        E = n("702411"),
        h = n("991254"),
        _ = n("226511"),
        C = n("735201"),
        I = n("957255"),
        S = n("833781"),
        m = n("572182"),
        p = n("201952"),
        T = n("718517"),
        g = n("427459"),
        A = n("49111");
      function N(e) {
        var t;
        let n =
            null !== (t = null == e ? void 0 : e.id) && void 0 !== t
              ? t
              : A.EMPTY_STRING_SNOWFLAKE_ID,
          { lastFetchedAt: a } = (0, i.useStateFromStoresObject)(
            [C.default],
            () => ({
              appliedGuildBoosts: C.default.getAppliedGuildBoostsForGuild(n),
              lastFetchedAt: C.default.getLastFetchedAtForGuild(n),
            })
          ),
          { lastDismissedGracePeriod: s, isGracePeriodVisible: N } = (0,
          i.useStateFromStoresObject)([S.default], () => ({
            lastDismissedGracePeriod:
              S.default.getLastDismissedGracePeriodForGuild(n),
            isGracePeriodVisible: S.default.isVisible(n),
          })),
          R = (0, i.useStateFromStores)([_.default], () =>
            _.default.isVisible(e)
          ),
          O = (0, i.useStateFromStores)([p.default], () =>
            p.default.isVisible(e)
          ),
          v = (0, i.useStateFromStores)([I.default], () =>
            I.default.can(A.Permissions.ADMINISTRATOR, e)
          ),
          L =
            null != s &&
            Date.now() - s <= A.GRACE_PERIOD_CHANNEL_NOTICE_SHOW_DELAY,
          M = null != e ? e.premiumSubscriberCount : 0,
          P =
            (0, g.getGuildTierFromAppliedBoostCount)(M, n) !==
            A.BoostedGuildTiers.NONE,
          D = null != a && Date.now() - a <= 432e5,
          y = !D && !L && v && P,
          x = (0, d.useGuildHasLiveChannelNotice)(n),
          b = (0, i.useStateFromStores)([m.default], () =>
            m.default.isVisible(e)
          ),
          U = E.default.useShouldShowChannelNotice(n),
          G = (0, h.useUnseenEndedApplicationSubscriptionEntitlements)(e),
          { enableStudyGroup: j } = (0, f.useHubStudyGroupExperiment)(e),
          w = G.length > 0,
          k = j && !(null == e ? void 0 : e.hasFeature(A.GuildFeatures.HUB)),
          { canSeeUpcomingEventsNotices: F } = u.default.useExperiment(
            { guildId: n, location: "useVisibleConnectedNotice" },
            { autoTrackExposure: !1 }
          ),
          B = (0, c.useGuildUpcomingEventsNotice)(n);
        if (
          (l.useEffect(() => {
            o.default.getGuildEventsForCurrentUser(n);
          }, [n]),
          l.useEffect(() => {
            let e = -1;
            return (
              y &&
                (e = window.setTimeout(
                  () => {
                    null != n && (0, r.fetchAppliedGuildBoostsForGuild)(n);
                  },
                  30 * Math.random() * T.default.Millis.SECOND
                )),
              () => {
                window.clearTimeout(e);
              }
            );
          }, [n, y]),
          R)
        )
          return 0;
        if (N) return 1;
        if (O) return 2;
        else if (x || (F && null != B)) return 3;
        else if (b) return 4;
        else if (U) return 5;
        else if (w) return 6;
        else if (k) return 7;
        return null;
      }
      ((a = s || (s = {}))[(a.ENABLE_PUBLIC_GUILD = 0)] =
        "ENABLE_PUBLIC_GUILD"),
        (a[(a.APPLIED_GUILD_BOOST_GRACE_PERIOD = 1)] =
          "APPLIED_GUILD_BOOST_GRACE_PERIOD"),
        (a[(a.MAX_MEMBER_COUNT = 2)] = "MAX_MEMBER_COUNT"),
        (a[(a.GUILD_LIVE_CHANNEL = 3)] = "GUILD_LIVE_CHANNEL"),
        (a[(a.GUILD_MFA_WARNING = 4)] = "GUILD_MFA_WARNING"),
        (a[(a.COMMANDS_MIGRATION = 5)] = "COMMANDS_MIGRATION"),
        (a[(a.APPLICATION_SUBSCRIPTION_EXPIRATION = 6)] =
          "APPLICATION_SUBSCRIPTION_EXPIRATION"),
        (a[(a.HUB_STUDY_ROOM = 7)] = "HUB_STUDY_ROOM");
    },
    156565: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return A;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("627445"),
        i = n.n(l),
        r = n("77078"),
        o = n("252917"),
        u = n("945183"),
        d = n("493765"),
        c = n("485328"),
        f = n("206230"),
        E = n("105437"),
        h = n("126090"),
        _ = n("53889"),
        C = n("471671"),
        I = n("659500"),
        S = n("214875"),
        m = n("223415"),
        p = n("399174"),
        T = n("49111"),
        g = n("793932"),
        A = s.memo(function () {
          let e = s.useRef(null),
            t = s.useCallback(t => {
              let { duration: n, intensity: a } = t;
              if (f.default.useReducedMotion || !C.default.isFocused()) return;
              let { current: s } = e;
              i(null != s, "Shakeable is shaken when not mounted"),
                s.shake(n, a);
            }, []);
          return (
            s.useEffect(
              () => (
                c.default.setLayout(d.default),
                c.default.enable(),
                () => c.default.disable()
              ),
              []
            ),
            s.useEffect(
              () => (
                I.ComponentDispatch.subscribe(T.ComponentActions.SHAKE_APP, t),
                () => {
                  I.ComponentDispatch.unsubscribe(
                    T.ComponentActions.SHAKE_APP,
                    t
                  );
                }
              ),
              [t]
            ),
            (0, E.default)(),
            (0, a.jsxs)(r.Shakeable, {
              ref: e,
              className: g.app,
              children: [
                (0, a.jsx)(p.default, {
                  className: g.layers,
                  children: (0, a.jsx)(o.default, {}),
                }),
                (0, a.jsx)(h.default, {}),
                (0, a.jsx)(u.default, {}),
                (0, a.jsx)(S.default, {}),
                (0, a.jsx)(_.default, {}),
                (0, a.jsx)(r.DnDKeyboardHelpBar, {}),
                (0, a.jsx)(m.default, {}),
              ],
            })
          );
        });
    },
    214875: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return q;
          },
        }),
        n("702976"),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("446674"),
        i = n("823411"),
        r = n("115718"),
        o = n("575365"),
        u = n("716241"),
        d = n("382483"),
        c = n("701916"),
        f = n("918105"),
        E = n("939398"),
        h = n("815553"),
        _ = n("191145"),
        C = n("605250"),
        I = n("963990"),
        S = n("161454"),
        m = n("619443"),
        p = n("963103"),
        T = n("398604"),
        g = n("123561"),
        A = n("288518"),
        N = n("834052"),
        R = n("845579"),
        O = n("42203"),
        v = n("546463"),
        L = n("26989"),
        M = n("305961"),
        P = n("42887"),
        D = n("377253"),
        y = n("945956"),
        x = n("18494"),
        b = n("162771"),
        U = n("101125"),
        G = n("282109"),
        j = n("697218"),
        w = n("330338"),
        k = n("545429"),
        F = n("860957"),
        B = n("599110"),
        H = n("568734"),
        V = n("449008"),
        Y = n("50885"),
        W = n("49111"),
        K = n("6791");
      class z extends s.PureComponent {
        componentDidMount() {
          let {
            selectedChannelId: e,
            connected: t,
            isNSFWChannel: n,
            isTextInVoice: a,
          } = this.props;
          t &&
            null != e &&
            ((0, u.trackWithMetadata)(W.AnalyticEvents.CHANNEL_OPENED, {
              ...(0, u.getChannelOpenedMetadata)(e),
            }),
            (0, f.trackClickstream)(
              W.AnalyticEvents.CHANNEL_OPENED_CLICKSTREAM,
              { channelId: e }
            ),
            a &&
              (0, u.trackWithMetadata)(W.AnalyticEvents.TEXT_IN_VOICE_OPENED, {
                channel_is_nsfw: n,
              }));
        }
        componentDidUpdate(e) {
          var t, n, a;
          let {
            voiceChannelId: s,
            voiceChannelGuildId: l,
            voiceChannelType: o,
            voiceChannelBitrate: m,
            videoEnabled: p,
            isScreenSharing: A,
            runningGame: L,
            runningGamePid: P,
            selectedChannelId: x,
            selectedGuildId: j,
            connected: w,
            homeLink: k,
            friendsTabSection: z,
            isNSFWChannel: q,
            isMemberPending: Q,
            hasPreviewEnabled: Z,
            postableChannelCount: X,
            isTextInVoice: J,
            numMessageRequests: $,
          } = this.props;
          if (e.voiceChannelId !== s && null != e.voiceChannelId) {
            let t = S.default.getCurrentGameForAnalytics(),
              n = null != t ? t.name : "",
              a = N.default.getStageInstanceByChannel(e.voiceChannelId),
              s = T.default.getActiveEventByChannel(e.voiceChannelId);
            B.default.track(W.AnalyticEvents.LEAVE_VOICE_CHANNEL, {
              channel_id: e.voiceChannelId,
              channel_type: e.voiceChannelType,
              channel_bitrate: e.voiceChannelBitrate,
              guild_id: e.voiceChannelGuildId,
              rtc_connection_id: y.default.getRTCConnectionId(),
              game_name: n,
              duration: y.default.getDuration(),
              game_platform: this.props.gamePlatform,
              game_id: this.props.gameId,
              media_session_id: y.default.getMediaSessionId(),
              stage_instance_id: null == a ? void 0 : a.id,
              guild_scheduled_event_id: null == s ? void 0 : s.id,
              ...(0, u.getVoiceStateMetadata)(
                e.voiceChannelGuildId,
                e.voiceChannelId,
                e.videoEnabled
              ),
              ...y.default.getVoiceStateStats(),
              ..._.default.getSelectedParticipantStats(e.voiceChannelId),
            });
          }
          if (e.voiceChannelId !== s && null != s) {
            let e = S.default.getCurrentGameForAnalytics(),
              t = null != e ? e.name : "",
              n = N.default.getStageInstanceByChannel(s),
              a = T.default.getActiveEventByChannel(s);
            (0, u.trackWithMetadata)(W.AnalyticEvents.CHANNEL_OPENED, {
              ...(0, u.getChannelOpenedMetadata)(s),
            }),
              (0, f.trackClickstream)(
                W.AnalyticEvents.CHANNEL_OPENED_CLICKSTREAM,
                { channelId: s }
              ),
              B.default.track(W.AnalyticEvents.JOIN_VOICE_CHANNEL, {
                channel_id: s,
                channel_type: o,
                channel_bitrate: m,
                guild_id: l,
                game_name: t,
                game_platform: this.props.gamePlatform,
                game_id: this.props.gameId,
                stage_instance_id: null == n ? void 0 : n.id,
                guild_scheduled_event_id: null == a ? void 0 : a.id,
                ...(0, u.getCustomStatusMetadata)(l, s),
                ...(0, u.getVoiceStateMetadata)(l, s, p),
              });
          }
          if (e.runningGame !== L && null != L && !L.isLauncher) {
            let e = v.default.getGameByName(L.name),
              t = S.default.getOverrideForGame(L),
              n = M.default.getGuildIds(),
              a = R.ActivityRestrictedGuilds.getSetting(),
              s = n.filter(e => !a.includes(e)).slice(0, 200),
              l = null;
            l =
              null != t
                ? "custom_override"
                : null != e
                  ? "verified_game"
                  : "launcher";
            let o = (0, S.getOverlayGameStatus)(L);
            if (
              (setTimeout(() => {
                var t;
                let n = Y.default.GetWindowFullscreenTypeByPid(
                  L.pid,
                  L.name,
                  L.fullscreenType
                );
                B.default.track(W.AnalyticEvents.LAUNCH_GAME, {
                  game: L.name,
                  game_id: null == e ? null : e.id,
                  verified: null != e,
                  elevated: L.elevated,
                  is_launcher:
                    null !== (t = null == L ? void 0 : L.isLauncher) &&
                    void 0 !== t &&
                    t,
                  game_platform: W.ActivityGamePlatforms.DESKTOP,
                  detection_method: l,
                  distributor: L.distributor,
                  is_overlay_enabled: F.default.enabled,
                  is_overlay_game_enabled: o.enabled,
                  is_overlay_game_source: o.source,
                  fullscreen_type: r.RunningProcessFullscreenType[n],
                  overlay_method: K.OverlayMethod[o.overlayMethod],
                  activity_status_enabled: R.ShowCurrentGame.getSetting(),
                  activity_status_shared_guilds: s,
                  current_user_status: U.default.getStatus(),
                  game_detection_enabled: (0, S.isDetectionEnabled)(L),
                  executable_path: (0, I.removeExecutablePathPrefix)(L.exePath),
                });
              }, 1e4),
              null != L.name && null != P && v.default.shouldReport(L.name))
            ) {
              let e = L.name;
              i.default
                .identifyGame(P, e)
                .then(e => i.default.reportUnverifiedGame(e))
                .catch(e =>
                  new (0, C.default)("AutoAnalytics").error(
                    "Cannot identify game",
                    e
                  )
                );
            }
          }
          if ((e.videoEnabled !== p || e.isScreenSharing !== A) && null != s) {
            let e = "none",
              t = [A ? "screen" : null, p ? "camera" : null].filter(
                V.isNotNullish
              ),
              n = null;
            A
              ? ((e = "screen"), (n = (0, E.getDesktopSourceMetadata)()))
              : p && (e = "camera"),
              B.default.track(W.AnalyticEvents.VIDEO_INPUT_TOGGLED, {
                video_input_type: e,
                video_toggle_source: __OVERLAY__ ? "overlay" : "app",
                enabled_inputs: t,
                preview_enabled: R.AlwaysPreviewVideo.getSetting(),
                ...n,
                ...this.getGameMetadata(),
                ...(0, u.collectVoiceAnalyticsMetadata)(s),
              });
          }
          if (
            w &&
            null != j &&
            (j !== e.selectedGuildId ||
              !e.connected ||
              (Q && !e.isMemberPending))
          ) {
            let e = {
              ...(Q ? { is_pending: Q, preview_enabled: Z } : {}),
              postable_channels: X,
              premium_progress_bar_enabled:
                null !==
                  (n =
                    null === (t = M.default.getGuild(b.default.getGuildId())) ||
                    void 0 === t
                      ? void 0
                      : t.premiumProgressBarEnabled) &&
                void 0 !== n &&
                n,
              viewing_all_channels: !G.default.isOptInEnabled(j),
              num_recent_channels: g.default.recentsChannelCount(j),
            };
            (0, u.trackWithMetadata)(W.AnalyticEvents.GUILD_VIEWED, e);
          } else
            w &&
            null == j &&
            k === W.Routes.FRIENDS &&
            (!e.connected || z !== e.friendsTabSection || k !== e.homeLink)
              ? B.default.track(W.AnalyticEvents.FRIENDS_LIST_VIEWED, {
                  tab_opened: z,
                  ...(0, d.default)(),
                  ...(0, h.getNowPlayingAnalytics)(),
                })
              : w &&
                null == j &&
                k === W.Routes.MESSAGE_REQUESTS &&
                (!e.connected || k !== e.homeLink) &&
                !this.isMessageRequestsInitialized &&
                ((this.isMessageRequestsInitialized = !0),
                B.default.track(W.AnalyticEvents.MESSAGE_REQUESTS_INITIALIZED, {
                  num_message_requests: $,
                }));
          if (
            w &&
            null != x &&
            (!e.connected ||
              x !== e.selectedChannelId ||
              j !== e.selectedGuildId)
          ) {
            let t = e.selectedChannelId,
              n = O.default.getChannel(t),
              s = M.default.getGuild(null == n ? void 0 : n.getGuildId());
            if (
              null != t &&
              null != n &&
              null != s &&
              s.publicUpdatesChannelId === t
            ) {
              let e = D.default.getMessages(t),
                l = e.toArray().reverse(),
                i = l.find(e => {
                  var t;
                  return (
                    (0, H.hasFlag)(e.flags, W.MessageFlags.IS_CROSSPOST) &&
                    (null === (t = e.messageReference) || void 0 === t
                      ? void 0
                      : t.guild_id) === "667560445975986187"
                  );
                });
              B.default.track(W.AnalyticEvents.ACK_COMMUNITY_MESSAGES, {
                last_message_id: null == i ? void 0 : i.id,
                last_message_reference_message_id:
                  null == i
                    ? void 0
                    : null === (a = i.messageReference) || void 0 === a
                      ? void 0
                      : a.message_id,
                messages_loaded: e.hasFetched,
                ...(0, u.collectChannelAnalyticsMetadata)(n),
                ...(0, u.collectGuildAnalyticsMetadata)(s.id),
              });
            }
            let l = (0, c.collectThreadMetadata)(O.default.getChannel(x), !0);
            (0, u.trackWithMetadata)(W.AnalyticEvents.CHANNEL_OPENED, {
              ...l,
              ...(0, u.getChannelOpenedMetadata)(x),
            }),
              (0, f.trackClickstream)(
                W.AnalyticEvents.CHANNEL_OPENED_CLICKSTREAM,
                { channelId: x }
              ),
              J &&
                (0, u.trackWithMetadata)(
                  W.AnalyticEvents.TEXT_IN_VOICE_OPENED,
                  { channel_is_nsfw: q }
                );
          }
        }
        getGameMetadata() {
          return {
            game_platform: this.props.gamePlatform,
            game_name: this.props.gameName,
            game_exe_name: this.props.gameExeName,
            game_id: this.props.gameId,
          };
        }
        render() {
          return null;
        }
        constructor(...e) {
          super(...e), (this.isMessageRequestsInitialized = !1);
        }
      }
      function q() {
        let [e, t] = (0, l.useStateFromStoresArray)(
            [x.default],
            () => [x.default.getVoiceChannelId(), x.default.getChannelId()],
            []
          ),
          n = (0, l.useStateFromStores)(
            [O.default],
            () => O.default.getChannel(t),
            [t]
          ),
          s = (0, l.useStateFromStores)(
            [_.default],
            () =>
              (null == n ? void 0 : n.id) != null &&
              _.default.getChatOpen(n.id),
            [n]
          ),
          i = null == n ? void 0 : n.nsfw,
          r = (0, l.useStateFromStores)(
            [O.default],
            () => O.default.getChannel(e),
            [e]
          ),
          u = (0, l.useStateFromStores)(
            [b.default],
            () => b.default.getGuildId(),
            []
          ),
          d = (0, l.useStateFromStores)(
            [M.default],
            () => M.default.getGuild(u),
            [u]
          ),
          c = (0, l.useStateFromStores)(
            [j.default],
            () => j.default.getCurrentUser(),
            []
          ),
          f = (0, l.useStateFromStores)(
            [L.default],
            () => {
              var e, t;
              return (
                null != c &&
                null != u &&
                null !==
                  (t =
                    null === (e = L.default.getMember(u, c.id)) || void 0 === e
                      ? void 0
                      : e.isPending) &&
                void 0 !== t &&
                t
              );
            },
            [c, u]
          ),
          E = (0, l.useStateFromStores)(
            [k.default],
            () => k.default.getState().section,
            []
          ),
          h = (0, l.useStateFromStores)(
            [w.default],
            () => w.default.getHomeLink(),
            []
          ),
          C = (0, l.useStateFromStores)(
            [m.default],
            () => m.default.isConnected(),
            []
          ),
          [I, T] = (0, l.useStateFromStoresArray)(
            [P.default],
            () => [P.default.isVideoEnabled(), P.default.isScreenSharing()],
            []
          ),
          g = (0, l.useStateFromStores)(
            [U.default],
            () => U.default.getPrimaryActivity(),
            []
          ),
          N = (0, l.useStateFromStores)(
            [S.default],
            () => S.default.getCurrentGameForAnalytics(),
            []
          ),
          R = (0, p.default)(u),
          v = (0, l.useStateFromStores)(
            [A.default],
            () => A.default.getMessageRequestsCount(),
            []
          ),
          D = {
            selectedChannelId: t,
            isNSFWChannel: i,
            selectedGuildId: u,
            friendsTabSection: E,
            homeLink: h,
            connected: C,
            videoEnabled: I,
            isScreenSharing: T,
            voiceChannelId: null == r ? void 0 : r.id,
            voiceChannelGuildId: null == r ? void 0 : r.getGuildId(),
            voiceChannelType: null == r ? void 0 : r.type,
            voiceChannelBitrate: null == r ? void 0 : r.bitrate,
            runningGame: N,
            runningGamePid: null != N ? N.pid : null,
            gamePlatform: (0, o.default)(g),
            gameName: null != g ? g.name : null,
            gameId: null != g ? g.application_id : null,
            gameExeName: null != N ? N.exeName : null,
            hasPreviewEnabled:
              null == d
                ? void 0
                : d.features.has(W.GuildFeatures.PREVIEW_ENABLED),
            isMemberPending: f,
            postableChannelCount: R,
            isTextInVoice: s,
            numMessageRequests: v,
          };
        return (0, a.jsx)(z, { ...D });
      }
    },
    223415: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return g;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("917351"),
        i = n.n(l),
        r = n("775560"),
        o = n("907002"),
        u = n("446674"),
        d = n("278572"),
        c = n("684581"),
        f = n("488284"),
        E = n("870696"),
        h = n("385649"),
        _ = n("18494"),
        C = n("102985"),
        I = n("31957"),
        S = n("709681"),
        m = n("157246");
      let p = { transform: "scale(0.7)", opacity: 0 },
        T = { transform: "scale(1)", opacity: 1 };
      var g = () => {
        let e = (0, u.useStateFromStores)([_.default], () =>
            _.default.getChannelId()
          ),
          t = (0, u.useStateFromStoresArray)([I.default], () =>
            I.default.getIncomingCalls().filter(t => {
              let { channel: n } = t;
              return e !== n.id;
            })
          ),
          n = (0, u.useStateFromStores)([I.default], () =>
            I.default.hasIncomingCalls()
          ),
          l = (0, u.useStateFromStores)([h.default], () =>
            h.default.isSoundDisabled("call_ringing")
          ),
          g = f.default.useIsRingtoneEligible(),
          A = f.default.useIsRingtoneDisabled(),
          N = (0, u.useStateFromStores)(
            [C.default],
            () => C.default.disableSounds
          ),
          R = (0, u.useStateFromStores)([E.default], () =>
            E.default.getSoundpack()
          ),
          O = s.useRef(!1),
          v = (0, r.useStableMemo)(() => {
            let e = "call_ringing";
            if (g && !A) return (0, S.createSound)(c.default.ringtone, e);
            if (R === m.Soundpacks.CLASSIC) {
              let t =
                500 === i.random(1, 1e3) ? "call_ringing_beat" : "call_ringing";
              return (0, S.createSound)(t, e);
            }
            return (0, S.createSoundForPack)("call_ringing", R);
          }, [R, A, g]);
        s.useEffect(
          () => () => {
            v.stop();
          },
          [v]
        ),
          s.useEffect(() => {
            if (N || l) {
              O.current && (v.stop(), (O.current = !1));
              return;
            }
            n && !O.current
              ? (v.loop(), (O.current = !0))
              : !n && O.current && (v.stop(), (O.current = !1));
          }, [l, N, n, v]);
        let L = (0, o.useTransition)(t, {
          keys: e => {
            var t;
            return null === (t = e.channel) || void 0 === t ? void 0 : t.id;
          },
          enter: { from: p, to: T },
          leave: p,
          config: { mass: 1, tension: 500, friction: 18, clamp: !0 },
        });
        return L((e, t) => (0, a.jsx)(d.default, { ...t, animatedStyle: e }));
      };
    },
    399174: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return x;
          },
        }),
        n("424973");
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("458960"),
        o = n("446674"),
        u = n("266491"),
        d = n("77078"),
        c = n("54239"),
        f = n("454286"),
        E = n("485328"),
        h = n("269936"),
        _ = n("161778"),
        C = n("778588"),
        I = n("708169"),
        S = n("659500"),
        m = n("439932"),
        p = n("49111"),
        T = n("332630");
      let g = (0, h.makeLazy)({
          createPromise: () => n.el("420610").then(n.bind(n, "420610")),
          webpackId: "420610",
          name: "UserSettings",
        }),
        A = (0, h.makeLazy)({
          createPromise: () => n.el("995865").then(n.bind(n, "995865")),
          webpackId: "995865",
          name: "ChannelSettings",
        }),
        N = (0, h.makeLazy)({
          createPromise: () => n.el("258556").then(n.bind(n, "258556")),
          webpackId: "258556",
          name: "CollectiblesShop",
        }),
        R = (0, h.makeLazy)({
          createPromise: () => n.el("725621").then(n.bind(n, "725621")),
          webpackId: "725621",
          name: "GuildSettings",
        }),
        O = {
          [p.Layers.USER_SETTINGS]: () => (0, a.jsx)(g, {}),
          [p.Layers.CHANNEL_SETTINGS]: () => (0, a.jsx)(A, {}),
          [p.Layers.GUILD_SETTINGS]: () => (0, a.jsx)(R, {}),
          [p.Layers.COLLECTIBLES_SHOP]: () => (0, a.jsx)(N, {}),
        },
        v = "SHOWN",
        L = "HIDDEN",
        M = { friction: 10, tension: 100 };
      function P() {
        return (
          s.useEffect(
            () => (
              E.default.enable(),
              E.default.enableTemp(f.SETTINGS_LAYERS_LAYOUT),
              () => E.default.disableTemp()
            ),
            []
          ),
          null
        );
      }
      class D extends s.PureComponent {
        static getDerivedStateFromProps(e, t) {
          return e.mode !== t.mode ? { animating: !0, mode: e.mode } : null;
        }
        componentDidUpdate(e) {
          let { mode: t } = this.props,
            { mode: n } = e;
          if (t !== n) {
            if (t === v && n === L) return this.animateIn();
            if (t === L && n === v) return this.animateUnder();
          }
        }
        componentWillEnter(e) {
          let { opacity: t, scale: n } = this.state;
          n.setValue(1.1),
            t.setValue(0),
            e(),
            this.setState({ animating: !0 }, () => this.animateIn());
        }
        componentWillLeave(e) {
          this.setState({ animating: !0 }, () => this.animateOut(e));
        }
        animateIn(e) {
          o.default.Emitter.pause(500);
          let { opacity: t, scale: n } = this.state;
          r.default
            .parallel([
              r.default.spring(t, { toValue: 1, ...M }),
              r.default.spring(n, { toValue: 1, ...M }),
            ])
            .start(() => this.animateComplete(e));
        }
        animateOut(e) {
          o.default.Emitter.pause(500);
          let { opacity: t, scale: n } = this.state;
          S.ComponentDispatch.dispatch(p.ComponentActions.LAYER_POP_START),
            r.default
              .parallel([
                r.default.spring(t, { toValue: 0, ...M }),
                r.default.spring(n, { toValue: 1.1, ...M }),
              ])
              .start(() => {
                e(),
                  S.ComponentDispatch.dispatch(
                    p.ComponentActions.LAYER_POP_COMPLETE
                  );
              });
        }
        animateUnder() {
          o.default.Emitter.pause(500);
          let { opacity: e, scale: t } = this.state;
          r.default
            .parallel([
              r.default.spring(e, { toValue: 0, ...M }),
              r.default.spring(t, { toValue: 0.93, ...M }),
            ])
            .start(() => this.animateComplete());
        }
        animateComplete(e) {
          this.setState({ animating: !1 }, e);
        }
        render() {
          let { animating: e } = this.state,
            { mode: t, children: n, baseLayer: s, ...l } = this.props,
            o = e || t === L ? this.getAnimatedStyle() : null,
            u = (0, a.jsx)(r.default.div, {
              ref: e =>
                (this.containerRef.current = null != e ? e.refs.node : void 0),
              "aria-hidden": t === L,
              className: i(T.layer, {
                [T.baseLayer]: s,
                [T.animating]: e,
                "stop-animations": t === L,
              }),
              style: o,
              ...l,
              children: n,
            });
          return s
            ? u
            : (0, a.jsx)(d.FocusLock, {
                containerRef: this.containerRef,
                children: u,
              });
        }
        getAnimatedStyle() {
          let { opacity: e, scale: t } = this.state,
            { reducedMotion: n } = this.context;
          return {
            opacity: e,
            transform: n.enabled ? void 0 : [{ scale: t }, { translateZ: 0 }],
          };
        }
        constructor(e) {
          super(e), (this.containerRef = s.createRef());
          let t = 1,
            n = 1;
          e.mode === L && ((t = 0.93), (n = 0)),
            (this.state = {
              animating: !1,
              scale: new r.default.Value(t),
              opacity: new r.default.Value(n),
              mode: e.mode,
            });
        }
      }
      (D.defaultProps = { baseLayer: !1 }),
        (D.contextType = d.AccessibilityPreferencesContext);
      class y extends s.PureComponent {
        componentDidMount() {
          S.ComponentDispatch.subscribe(
            p.ComponentActions.LAYER_POP_ESCAPE_KEY,
            c.popLayer
          );
        }
        componentWillUnmount() {
          S.ComponentDispatch.unsubscribe(
            p.ComponentActions.LAYER_POP_ESCAPE_KEY,
            c.popLayer
          );
        }
        renderLayers() {
          let { children: e, layers: t, hasFullScreenLayer: n } = this.props,
            { length: s } = t,
            l = [];
          return (
            l.push(
              (0, a.jsx)(
                D,
                { mode: 0 !== s || n ? L : v, baseLayer: !0, children: e },
                "layer-base"
              )
            ),
            t.forEach((e, t) => l.push(this.renderComponent(e, t, s))),
            l
          );
        }
        renderComponent(e, t, n) {
          let s;
          return (
            (s = "string" == typeof e ? O[e]() : (0, a.jsx)(e, {})),
            (0, a.jsxs)(
              D,
              { mode: t === n - 1 ? v : L, children: [(0, a.jsx)(P, {}), s] },
              "layer-".concat(t)
            )
          );
        }
        renderArtisanalHack() {
          return (0, a.jsx)("div", {
            className: i(T.bg, (0, m.getThemeClass)(this.props.sidebarTheme)),
          });
        }
        render() {
          return (0, a.jsxs)(a.Fragment, {
            children: [
              this.renderArtisanalHack(),
              (0, a.jsx)(u.default, {
                component: "div",
                className: i(T.layers, this.props.className),
                children: this.renderLayers(),
              }),
            ],
          });
        }
      }
      function x(e) {
        let t = (0, o.useStateFromStores)(
            [_.default],
            () => _.default.darkSidebar
          )
            ? p.ThemeTypes.DARK
            : void 0,
          n = (0, o.useStateFromStores)([C.default], () =>
            C.default.getLayers()
          ),
          s = (0, I.useFullScreenLayerStore)(
            e => e.fullScreenLayers.length > 0
          );
        return (0, a.jsx)(y, {
          ...e,
          sidebarTheme: t,
          layers: n,
          hasFullScreenLayer: s,
        });
      }
    },
    366410: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        }),
        n("222007");
      var a = n("316272"),
        s = n("737292"),
        l = n("161778"),
        i = n("845579"),
        r = n("374363"),
        o = n("32531"),
        u = n("253539"),
        d = n("941719");
      class c extends a.default {
        _initialize() {
          r.default.addChangeListener(this._updateClientTheme),
            l.default.addChangeListener(this._updateClientTheme);
        }
        _terminate() {
          r.default.removeChangeListener(this._updateClientTheme),
            l.default.removeChangeListener(this._updateClientTheme);
        }
        constructor(...e) {
          super(...e),
            (this._updateBackgroundGradientPresetId = e => {
              if (this._currentBackgroundGradientPresetId !== e) {
                if (null == e) {
                  (0, o.resetBackgroundGradientPreset)(),
                    (this._currentBackgroundGradientPresetId = void 0);
                  return;
                }
                (0, o.updateBackgroundGradientPreset)(e),
                  (this._currentBackgroundGradientPresetId = e);
              }
            }),
            (this._updateClientTheme = () => {
              var e, t, n;
              let a = s.default.shouldSync("appearance")
                ? i.ClientThemeSettings.getSetting().backgroundGradientPresetId
                : null === (t = s.default.getAppearanceSettings()) ||
                    void 0 === t
                  ? void 0
                  : null === (e = t.clientThemeSettings) || void 0 === e
                    ? void 0
                    : e.backgroundGradientPresetId;
              if (
                null != a &&
                (null === (n = d.BACKGROUND_GRADIENT_PRESETS_MAP[a]) ||
                void 0 === n
                  ? void 0
                  : n.theme) !== l.default.theme
              ) {
                let e = d.BACKGROUND_GRADIENT_PRESETS_MAP[a];
                if (
                  !(0, u.areThemesEqualForGradientThemes)(
                    e.theme,
                    l.default.theme
                  )
                ) {
                  this._updateBackgroundGradientPresetId(void 0);
                  return;
                }
              }
              this._updateBackgroundGradientPresetId(a);
            });
        }
      }
      var f = new c();
    },
    947783: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return A;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("414456"),
        l = n.n(s),
        i = n("446674"),
        r = n("77078"),
        o = n("79112"),
        u = n("227602"),
        d = n("945330"),
        c = n("364719"),
        f = n("701909"),
        E = n("13798"),
        h = n("386045"),
        _ = n("803725"),
        C = n("80028"),
        I = n("49111"),
        S = n("782340"),
        m = n("292271");
      function p(e) {
        o.default.open(I.UserSettingsSections.CLIPS),
          (0, _.dismissClipsUserEducation)(e);
      }
      function T() {
        let e = (0, i.useStateFromStores)([u.default], () =>
          u.default.getKeybindForAction(I.GlobalKeybindActions.SAVE_CLIP)
        );
        if (null == e)
          return (0, a.jsx)(a.Fragment, {
            children:
              S.default.Messages.CLIPS_USER_EDUCATION_ENABLED_BODY_NO_KEYBIND,
          });
        let t = E.toString(e.shortcut, !0);
        return (0, a.jsx)(a.Fragment, {
          children: S.default.Messages.CLIPS_USER_EDUCATION_ENABLED_BODY.format(
            {
              keybind: t,
              keybindHook: () =>
                (0, a.jsx)("span", {
                  className: m.keyCombo,
                  children: (0, a.jsx)(r.KeyCombo, { shortcut: t }),
                }),
            }
          ),
        });
      }
      let g = {
        [C.ClipsUserEducationType.Error]: {
          textColor: "text-primary",
          buttonLook: r.Button.Looks.FILLED,
          buttonColor: r.Button.Colors.PRIMARY,
          bodyCopy: () =>
            (0, a.jsxs)(a.Fragment, {
              children: [
                (0, a.jsx)(c.default, { className: m.errorWarningIcon }),
                S.default.Messages.CLIPS_USER_EDUCATION_ERROR_BODY,
              ],
            }),
          buttonCopy: () => S.default.Messages.CLIPS_USER_EDUCATION_LEARN_MORE,
          ctaOnClick: () => {
            window.open(
              f.default.getArticleURL(I.HelpdeskArticles.CLIPS),
              "_blank"
            );
          },
          containerClass: m.container,
        },
        [C.ClipsUserEducationType.Disabled]: {
          textColor: "text-primary",
          buttonLook: r.Button.Looks.FILLED,
          buttonColor: r.Button.Colors.BRAND,
          bodyCopy: () => S.default.Messages.CLIPS_USER_EDUCATION_DISABLED_BODY,
          buttonCopy: () =>
            S.default.Messages.CLIPS_USER_EDUCATION_MANAGE_CLIPS_SETTINGS,
          ctaOnClick: () => p(C.ClipsUserEducationType.Disabled),
          containerClass: m.container,
        },
        [C.ClipsUserEducationType.Enabled]: {
          textColor: "always-white",
          buttonLook: r.Button.Looks.INVERTED,
          buttonColor: r.Button.Colors.BRAND,
          bodyCopy: () => (0, a.jsx)(T, {}),
          buttonCopy: () =>
            S.default.Messages.CLIPS_USER_EDUCATION_MANAGE_CLIPS_SETTINGS,
          ctaOnClick: () => p(C.ClipsUserEducationType.Enabled),
          containerClass: l(m.container, m.containerEnabled),
        },
      };
      function A() {
        var e;
        let { decoupledClipsEnabled: t, clipsError: n } = (0,
        i.useStateFromStoresObject)([h.default], () => ({
          decoupledClipsEnabled: h.default.getSettings().decoupledClipsEnabled,
          clipsError: h.default.getLastClipsError(),
        }));
        let s =
            ((e = t),
            null != n
              ? C.ClipsUserEducationType.Error
              : e
                ? C.ClipsUserEducationType.Enabled
                : C.ClipsUserEducationType.Disabled),
          {
            bodyCopy: l,
            buttonCopy: o,
            ctaOnClick: u,
            textColor: c,
            buttonColor: f,
            buttonLook: E,
            containerClass: I,
          } = g[s];
        return (0, a.jsxs)("div", {
          className: I,
          children: [
            (0, a.jsx)(r.Text, {
              color: c,
              variant: "text-sm/medium",
              children: l(),
            }),
            (0, a.jsx)(r.Button, {
              onClick: () => (0, _.dismissClipsUserEducation)(s),
              size: r.Button.Sizes.NONE,
              look: r.Button.Looks.BLANK,
              className: m.buttonClose,
              children: (0, a.jsx)(d.default, {
                className: m.dismissIcon,
                width: 16,
                height: 16,
              }),
            }),
            (0, a.jsx)(r.Button, {
              onClick: u,
              className: m.buttonCTA,
              color: f,
              look: E,
              fullWidth: !0,
              size: r.Button.Sizes.SMALL,
              children: o(),
            }),
          ],
        });
      }
    },
    303791: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
        });
      var a = n("446674"),
        s = n("161454"),
        l = n("584687"),
        i = n("350522"),
        r = n("42887"),
        o = n("56947"),
        u = n("386045"),
        d = n("18346"),
        c = n("80028"),
        f = n("49111");
      function E(e) {
        let t = (0, o.useShouldSeeClipsPremiumEarlyAccessAnnouncementCoachmark)(
            { autoTrackExposure: !0 }
          ),
          { enableDecoupledGameClipping: n } = l.default.useExperiment(
            { location: "useShouldDisplayClipsGuildSidebarEducation" },
            { autoTrackExposure: !1 }
          );
        return (0, a.useStateFromStores)(
          [u.default, s.default, i.default, r.default],
          () => {
            if (!(0, d.default)(r.default) || !t || !n) return !1;
            if (null != u.default.getLastClipsError()) return !0;
            if (
              !i.default.hasConsented(f.Consents.PERSONALIZATION) ||
              null == s.default.getVisibleGame()
            )
              return !1;
            let {
              clipsEducationState: {
                dismissedAt: a,
                numberOfGamesLaunchedSinceDismissal: l,
                numberOfTimesDismissed: E,
              },
              hasTakenDecoupledClip: h,
              clipsSettings: { clipsEnabled: _ },
            } = u.default.getState();
            if (null === a) return !0;
            let C = null != e && (0, o.isUserPremiumTypeForClipsEarlyAccess)(e);
            if (!C) return !1;
            let I = Date.now() - a > c.CLIPS_EDUCATION_COOLDOWN,
              S = l >= c.CLIPS_EDUCATION_GAME_LAUNCH_THRESHOLD,
              m = _
                ? c.CLIPS_EDUCATION_MAX_DISMISSALS_ENABLED
                : c.CLIPS_EDUCATION_MAX_DISMISSALS_DISABLED;
            return I && S && E < m && !h;
          }
        );
      }
    },
    543557: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var a = n("862205"),
        s = n("819852");
      let l = (0, a.createExperiment)({
        kind: "user",
        id: "2024-02_collectibles_shop_elements_marketing",
        label: "Collectibles Shop Marketing Experiment - Elements",
        defaultConfig: {
          marketingEnabled: !1,
          variant: s.CollectiblesMarketingVariant.NONE,
        },
        treatments: [
          {
            id: 1,
            label: "Enables the plain variant of Elements marketing toolip",
            config: {
              marketingEnabled: !0,
              variant: s.CollectiblesMarketingVariant.TOOLTIP,
            },
          },
          {
            id: 2,
            label: "Enables the coachtip variant of Elements marketing toolip",
            config: {
              marketingEnabled: !0,
              variant: s.CollectiblesMarketingVariant.COACHTIP,
            },
          },
        ],
      });
      var i = e => {
        let { location: t } = e;
        return l.useExperiment({ location: t });
      };
    },
    801894: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var a = n("862205");
      let s = (0, a.createExperiment)({
        kind: "user",
        id: "2024-01_shop_lunar_new_year_drop_upsell",
        label: "Shop Lunar New Year In App Marketing Experiment",
        defaultConfig: { newBadgeEnabled: !1 },
        treatments: [
          {
            id: 1,
            label: "Enables New Badge",
            config: { newBadgeEnabled: !0 },
          },
        ],
      });
      var l = e => {
        let { location: t } = e;
        return s.useExperiment({ location: t });
      };
    },
    819852: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          CollectiblesMarketingVariant: function () {
            return s;
          },
          CollectiblesDCToDisplayOptions: function () {
            return u;
          },
        });
      var a,
        s,
        l = n("151426"),
        i = n("782340"),
        r = n("577151"),
        o = n("66453");
      ((a = s || (s = {}))[(a.NONE = 0)] = "NONE"),
        (a[(a.TOOLTIP = 1)] = "TOOLTIP"),
        (a[(a.COACHTIP = 2)] = "COACHTIP");
      let u = {
        [l.DismissibleContent.COLLECTIBLES_SHOP_LUNARNEWYEAR_NEW_BADGE]: {
          type: 1,
          title: () =>
            i.default.Messages.COLLECTIBLES_LUNAR_NEW_YEAR_TOOLTIP_TEXT,
          emojiName: "dragon",
        },
        [l.DismissibleContent.COLLECTIBLES_SHOP_ELEMENTS_TOOLTIP]: {
          type: 1,
          title: () => i.default.Messages.COLLECTIBLES_ELEMENTS_TOOLTIP_TITLE,
          emojiName: "fire",
        },
        [l.DismissibleContent.COLLECTIBLES_SHOP_ELEMENTS_COACHTIP]: {
          type: 2,
          title: () => i.default.Messages.COLLECTIBLES_ELEMENTS_COACHTIP_TITLE,
          body: () =>
            i.default.Messages.COLLECTIBLES_ELEMENTS_COACHTIP_DISCRIPTION,
          imageSrc: r,
          assetIds: [
            "a_a065206df7b011a5510e4e5bca7d49be",
            "a_554b7c34f7b6c709f19535aacb128e7b",
            "a_250640ab00a8837a1d56f35879138177",
            "a_fa014594d4b2b4249e1098c0adc85b47",
          ],
        },
        [l.DismissibleContent.COLLECTIBLES_SHOP_ANIME_V2_COACHTIP]: {
          type: 2,
          title: () => i.default.Messages.COLLECTIBLES_ANIME_V2_COACHTIP_TITLE,
          body: () =>
            i.default.Messages.COLLECTIBLES_ANIME_V2_COACHTIP_DISCRIPTION,
          imageSrc: o,
          assetIds: [
            "a_c3cffc19e9784f7d0b005eecdf1b566e",
            "a_f3af281c65cf0cf590e9e1f59e9c6cf6",
            "a_51d3bb502109eec26c76386ec980bc8b",
          ],
        },
      };
    },
    476863: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var a = n("862205");
      let s = (0, a.createExperiment)({
        kind: "user",
        id: "2024-02_collectibles_anime_v2_marketing",
        label: "Anime V2 marketing Experiment",
        defaultConfig: { coachtipEnabled: !1 },
        treatments: [
          { id: 1, label: "Enables coachtip", config: { coachtipEnabled: !0 } },
        ],
      });
      var l = e => {
        let { location: t } = e;
        return s.useExperiment({ location: t });
      };
    },
    720694: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          CollectiblesShopButton: function () {
            return M;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("974667"),
        i = n("446674"),
        r = n("77078"),
        o = n("430568"),
        u = n("570687"),
        d = n("206230"),
        c = n("812204"),
        f = n("685665"),
        E = n("897263"),
        h = n("20606"),
        _ = n("867805"),
        C = n("743826"),
        I = n("956089"),
        S = n("21526"),
        m = n("833514"),
        p = n("819852"),
        T = n("49111"),
        g = n("782340"),
        A = n("100172");
      let N = e => {
          let { color: t } = e;
          return (0, a.jsx)(I.TextBadge, {
            color: null != t ? t : h.default.STATUS_DANGER_BACKGROUND,
            text: g.default.Messages.NEW,
          });
        },
        R = e => {
          let {
              selected: t,
              locationState: n,
              onMouseEnter: s,
              onButtonClick: i,
              children: r,
              ...o
            } = e,
            d = (0, l.useListItem)("shop"),
            E = c.default.HOME_PAGE_SHOP_TAB,
            { analyticsLocations: h } = (0, f.default)(E);
          return (0, a.jsx)(u.LinkButton, {
            selected: t,
            route: T.Routes.COLLECTIBLES_SHOP,
            icon: C.default,
            text: g.default.Messages.COLLECTIBLES_SHOP,
            locationState: n,
            ...d,
            ...o,
            onMouseEnter: s,
            onClick: () => {
              (0, S.openCollectiblesShop)({
                openInLayer: !1,
                analyticsSource: E,
                analyticsLocations: h,
              }),
                null == i || i();
            },
            children: r,
          });
        },
        O = s.memo(function (e) {
          let { displayOptions: t, assetId: n } = e,
            s = (0, i.useStateFromStores)(
              [d.default],
              () => d.default.useReducedMotion
            ),
            l =
              null != n ? (0, E.default)(n, r.AvatarSizes.SIZE_80, !s) : void 0;
          return (0, a.jsxs)("div", {
            className: A.shopMarketingTooltipContent,
            children: [
              (0, a.jsx)("div", {
                className: A.avatarContainer,
                children: (0, a.jsx)(r.Avatar, {
                  className: A.avatar,
                  src: t.imageSrc,
                  avatarDecoration: l,
                  size: r.AvatarSizes.SIZE_80,
                  "aria-hidden": !0,
                }),
              }),
              (0, a.jsxs)("div", {
                className: A.shopMarketingTooltipText,
                children: [
                  (0, a.jsx)(r.Heading, {
                    variant: "heading-sm/bold",
                    children: t.title(),
                  }),
                  null != t.body &&
                    (0, a.jsx)(r.Text, {
                      variant: "text-xs/normal",
                      className: A.marketingBadgeTooltipContent,
                      children: t.body(),
                    }),
                ],
              }),
            ],
          });
        }),
        v = e => {
          let {
              selected: t,
              locationState: n,
              onButtonClick: l,
              displayOptions: i,
            } = e,
            [o, u] = s.useState(0),
            d = () => {
              u((o + 1) % i.assetIds.length);
            };
          return (0, a.jsx)(r.Tooltip, {
            text: (0, a.jsx)(O, { displayOptions: i, assetId: i.assetIds[o] }),
            tooltipClassName: A.marketingBadgeTooltip,
            position: "right",
            delay: 100,
            allowOverflow: !0,
            hideOnClick: !1,
            "aria-label": i.title(),
            children: e =>
              (0, a.jsx)(R, {
                selected: t,
                locationState: n,
                ...e,
                onMouseEnter: () => {
                  var t;
                  d(),
                    null === (t = e.onMouseEnter) || void 0 === t || t.call(e);
                },
                onButtonClick: l,
                children: (0, a.jsx)(N, { color: i.badgeColor }),
              }),
          });
        },
        L = e => {
          let {
              selected: t,
              locationState: n,
              onButtonClick: l,
              displayOptions: i,
            } = e,
            u = s.useMemo(() => {
              var e;
              let t =
                null != i.emojiName
                  ? null === (e = _.default.getByName(i.emojiName)) ||
                    void 0 === e
                    ? void 0
                    : e.surrogates
                  : null;
              return (0, a.jsxs)(r.Text, {
                variant: "text-sm/medium",
                className: A.marketingBadgeTooltipContent,
                children: [
                  null != t && (0, a.jsx)(o.default, { emojiName: t }),
                  i.title(),
                ],
              });
            }, [i]);
          return (0, a.jsx)(r.Tooltip, {
            text: u,
            tooltipClassName: A.marketingBadgeTooltip,
            position: "right",
            delay: 100,
            hideOnClick: !1,
            "aria-label": i.title(),
            children: e =>
              (0, a.jsx)(R, {
                selected: t,
                locationState: n,
                ...e,
                onButtonClick: l,
                children: (0, a.jsx)(N, { color: i.badgeColor }),
              }),
          });
        },
        M = e => {
          let { selected: t, locationState: n } = e,
            {
              collectiblesShopTabNewBadgeDisplayOptions: s,
              dismissCollectiblesShopTabNewBadge: l,
            } = (0, m.default)();
          if (null != s)
            switch (s.type) {
              case p.CollectiblesMarketingVariant.TOOLTIP:
                return (0, a.jsx)(L, {
                  selected: t,
                  locationState: n,
                  onButtonClick: l,
                  displayOptions: s,
                });
              case p.CollectiblesMarketingVariant.COACHTIP:
                return (0, a.jsx)(v, {
                  selected: t,
                  locationState: n,
                  onButtonClick: l,
                  displayOptions: s,
                });
            }
          return (0, a.jsx)(R, { selected: t, locationState: n });
        };
    },
    171984: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
      var a = (0, n("269936").makeLazy)({
        createPromise: () => n.el("258556").then(n.bind(n, "258556")),
        webpackId: "258556",
      });
    },
    833514: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        }),
        n("222007");
      var a = n("884691"),
        s = n("446674"),
        l = n("151426"),
        i = n("384997"),
        r = n("697218"),
        o = n("158998"),
        u = n("543557"),
        d = n("801894"),
        c = n("476863"),
        f = n("819852"),
        E = n("994428"),
        h = () => {
          let e = (0, s.useStateFromStores)([r.default], () =>
              r.default.getCurrentUser()
            ),
            { coachtipEnabled: t } = (0, c.default)({
              location: "useCollectiblesShopTabNewBadge",
            }),
            { marketingEnabled: n, variant: h } = (0, u.default)({
              location: "useCollectiblesShopTabNewBadge",
            }),
            { newBadgeEnabled: _ } = (0, d.default)({
              location: "useCollectiblesShopTabNewBadge",
            }),
            C = a.useMemo(() => {
              if ((0, o.ageEligibleForPremiumUpsell)(e)) {
                if (t)
                  return [
                    l.DismissibleContent.COLLECTIBLES_SHOP_ANIME_V2_COACHTIP,
                  ];
                if (n)
                  switch (h) {
                    case f.CollectiblesMarketingVariant.TOOLTIP:
                      return [
                        l.DismissibleContent.COLLECTIBLES_SHOP_ELEMENTS_TOOLTIP,
                      ];
                    case f.CollectiblesMarketingVariant.COACHTIP:
                      return [
                        l.DismissibleContent
                          .COLLECTIBLES_SHOP_ELEMENTS_COACHTIP,
                      ];
                  }
                else if (_)
                  return [
                    l.DismissibleContent
                      .COLLECTIBLES_SHOP_LUNARNEWYEAR_NEW_BADGE,
                  ];
              }
              return [];
            }, [_, n, h, e, t]),
            [I, S] = (0, i.useSelectedDismissibleContent)(C, void 0, !0),
            m = null != I ? f.CollectiblesDCToDisplayOptions[I] : null;
          return {
            collectiblesShopTabNewBadgeDisplayOptions: m,
            dismissCollectiblesShopTabNewBadge: () => {
              null != m && S(E.ContentDismissActionType.AUTO);
            },
          };
        };
    },
    927175: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("77078"),
        l = n("913144"),
        i = n("316272");
      let r = "CONNECTIONS_GRID_MODAL_KEY";
      class o extends i.default {
        _initialize() {
          l.default.subscribe("CONNECTIONS_GRID_MODAL_SHOW", this.handleShow),
            l.default.subscribe("CONNECTIONS_GRID_MODAL_HIDE", this.handleHide);
        }
        _terminate() {
          l.default.unsubscribe("CONNECTIONS_GRID_MODAL_SHOW", this.handleShow),
            l.default.unsubscribe(
              "CONNECTIONS_GRID_MODAL_HIDE",
              this.handleHide
            );
        }
        handleShow(e) {
          let {
            onComplete: t,
            excludedPlatformTypes: l,
            integrations: i,
            onCompleteApplication: o,
          } = e;
          !(0, s.hasModalOpen)(r) &&
            (0, s.openModalLazy)(async () => {
              let { default: e } = await n
                .el("121942")
                .then(n.bind(n, "121942"));
              return n =>
                (0, a.jsx)(e, {
                  onComplete: t,
                  excludedPlatformTypes: l,
                  integrations: i,
                  onCompleteApplication: o,
                  ...n,
                });
            });
        }
        handleHide() {
          (0, s.closeModal)(r);
        }
      }
      var u = new o();
    },
    55058: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("963662"),
        l = n("701909"),
        i = n("49111"),
        r = n("994428"),
        o = n("782340"),
        u = n("476742");
      function d(e) {
        let { guild: t, markAsDismissed: n } = e;
        return (0, a.jsx)(s.default, {
          image: u,
          guild: t,
          onDismissed: () => n(r.ContentDismissActionType.UNKNOWN),
          onClick: () => {
            open(
              l.default.getArticleURL(i.HelpdeskArticles.CONNECTION_DETAILS)
            ),
              n(r.ContentDismissActionType.UNKNOWN);
          },
          title: o.default.Messages.LINKED_ROLES_ADMIN_NUX_TITLE,
          message: o.default.Messages.LINKED_ROLES_ADMIN_NUX_CONTENT,
          cta: o.default.Messages.LEARN_MORE,
          trackingSource: i.ChannelNoticeCtaSources.LINKED_ROLES_ADMIN_NUX,
          type: i.ChannelNoticeTypes.LINKED_ROLES_ADMIN,
        });
      }
    },
    105437: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return p;
          },
        }),
        n("222007");
      var a = n("884691"),
        s = n("386411"),
        l = n.n(s),
        i = n("597755"),
        r = n.n(i),
        o = n("446674"),
        u = n("952451"),
        d = n("385649"),
        c = n("27618"),
        f = n("31957"),
        E = n("773336"),
        h = n("50885"),
        _ = n("69927"),
        C = n("49111"),
        I = n("782340");
      let S = new Set(["Blink", "Gecko", "WebKit"]),
        m = C.NOOP;
      if (E.isPlatformEmbedded) m = e => h.default.setBadge(e);
      else if (S.has(r.layout)) {
        let e = new l({ animation: "none" });
        m = t => {
          try {
            (0, _.setPageTitleNotificationCount)(t),
              e.badge(-1 === t ? "•" : t);
          } catch (e) {}
        };
      }
      function p() {
        let e = (0, o.useStateFromStores)([f.default], () =>
            f.default.hasIncomingCalls()
          ),
          t = (0, o.useStateFromStores)(
            [u.default, c.default, d.default],
            () => {
              let e = u.default.getTotalMentionCount(),
                t = c.default.getPendingCount(),
                n = u.default.hasAnyUnread(),
                a = d.default.getDisableUnreadBadge(),
                s = e + t;
              return 0 === s && n && !a && (s = -1), s;
            }
          );
        a.useEffect(() => {
          if (!e) return;
          let t = h.default.bounceDock("critical"),
            n = (0, _.flashPageTitle)({
              messages: [I.default.Messages.INCOMING_CALL],
              count: 50,
            });
          return () => {
            null == t || t(), n();
          };
        }, [e]),
          a.useEffect(() => {
            m(t);
          }, [t]),
          a.useEffect(() => () => m(0), []);
      }
    },
    126090: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return T;
          },
        }),
        n("222007");
      var a,
        s,
        l = n("884691"),
        i = n("446674"),
        r = n("629109"),
        o = n("79112"),
        u = n("952451"),
        d = n("42887"),
        c = n("385649"),
        f = n("945956"),
        E = n("27618"),
        h = n("280168"),
        _ = n("773336"),
        C = n("50885"),
        I = n("49111");
      ((s = a || (a = {})).DEFAULT = "DEFAULT"),
        (s.UNREAD = "UNREAD"),
        (s.CONNECTED = "CONNECTED"),
        (s.SPEAKING = "SPEAKING"),
        (s.MUTED = "MUTED"),
        (s.DEAFENED = "DEAFENED");
      let S = (0, _.isMac)() ? null : "DEFAULT";
      class m extends l.PureComponent {
        componentDidMount() {
          C.default.setSystemTrayIcon(this.getIcon());
        }
        componentDidUpdate() {
          C.default.setSystemTrayIcon(this.getIcon());
        }
        componentWillUnmount() {
          C.default.setSystemTrayIcon(S);
        }
        render() {
          return null;
        }
        constructor(...e) {
          super(...e),
            (this.getIcon = () => {
              let {
                  deafened: e,
                  muted: t,
                  speaking: n,
                  connected: a,
                  unread: s,
                } = this.props,
                l = S;
              return (0, _.isMac)() && !a
                ? l
                : (0, _.isLinux)() || !a
                  ? (s && (l = "UNREAD"), l)
                  : (l = e
                      ? "DEAFENED"
                      : t
                        ? "MUTED"
                        : n
                          ? "SPEAKING"
                          : "CONNECTED");
            });
        }
      }
      let p = () => null;
      _.isPlatformEmbedded &&
        (C.default.on("SYSTEM_TRAY_TOGGLE_MUTE", () =>
          r.default.toggleSelfMute()
        ),
        C.default.on("SYSTEM_TRAY_TOGGLE_DEAFEN", () =>
          r.default.toggleSelfDeaf()
        ),
        C.default.on("SYSTEM_TRAY_OPEN_VOICE_SETTINGS", () => {
          o.default.open(I.UserSettingsSections.VOICE);
        }),
        (p = i.default.connectStores(
          [f.default, d.default, h.default, u.default, E.default, c.default],
          () => {
            let e = u.default.getTotalMentionCount(),
              t = u.default.hasAnyUnread(),
              n = E.default.getPendingCount(),
              a = c.default.getDisableUnreadBadge();
            return {
              connected: f.default.isConnected(),
              speaking: h.default.isCurrentUserSpeaking(),
              muted:
                d.default.isSelfMute() || d.default.isSelfMutedTemporarily(),
              deafened: d.default.isSelfDeaf(),
              unread: !a && !!(t || e + n > 0),
            };
          }
        )(m)));
      var T = p;
    },
    957328: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return P;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("917351"),
        o = n.n(r),
        u = n("458960"),
        d = n("446674"),
        c = n("95410"),
        f = n("77078"),
        E = n("167359"),
        h = n("206230"),
        _ = n("619443"),
        C = n("488284"),
        I = n("870696"),
        S = n("168851"),
        m = n("50647"),
        p = n("15435"),
        T = n("637888"),
        g = n("718517"),
        A = n("773336"),
        N = n("709681"),
        R = n("50885"),
        O = n("49111"),
        v = n("782340"),
        L = n("782260");
      class M extends s.PureComponent {
        createSound() {
          let { soundpack: e } = this.props,
            t = (0, N.createSoundForPack)("discodo", e);
          return (t.volume = 1), t;
        }
        componentDidMount() {
          this.setProblemsTimeout();
        }
        componentDidUpdate(e, t) {
          let { ready: n, hide: a, problems: s, opacity: l } = this.state,
            { connected: i, soundpack: r, reducedMotion: o } = this.props,
            d = i && n && !a && !s;
          if (
            (e.soundpack !== r && (this._connectedSound = this.createSound()),
            e.connected !== i || d)
          ) {
            if (i && null != this.videoRef) {
              let e = Math.max(
                Math.ceil(
                  (this.videoRef.duration - this.videoRef.currentTime) *
                    g.default.Millis.SECOND
                ),
                600
              );
              clearTimeout(this._noProblemsTimeout),
                c.default.get(O.DISCODO_STORAGE_KEY) &&
                  this._connectedSound.play(),
                o
                  ? this.setState({ problems: !1, hide: i })
                  : (this._noProblemsTimeout = setTimeout(() => {
                      this.setState({ problems: !1, hide: i });
                    }, e));
            } else this.setState({ problems: !1, hide: i });
          } else
            t.hide !== a
              ? (a ? this.clearProblemsTimeout() : this.setProblemsTimeout(),
                this.setState({ shouldRender: !0 }),
                u.default
                  .timing(l, { toValue: a ? 0 : 1, duration: 200 })
                  .start(() => this.setState({ shouldRender: !a })))
              : t.problems !== s && s && E.default.checkIncidents();
        }
        componentWillUnmount() {
          this.clearProblemsTimeout(), clearTimeout(this._noProblemsTimeout);
        }
        render() {
          let { connected: e, incident: t } = this.props;
          if (!this.state.shouldRender) return null;
          {
            let n = this._loadingText,
              s = null;
            return (
              null != this._eventLoadingText && (n = this._eventLoadingText),
              null != t && ((n = t.name), (s = t.incident_updates[0].body)),
              (0, a.jsxs)(u.default.div, {
                className: L.container,
                style: { opacity: this.state.opacity },
                children: [
                  (0, a.jsxs)("div", {
                    className: L.content,
                    children: [
                      (0, a.jsx)(T.default, {
                        autoPlay: !0,
                        loop: !e,
                        setRef: this.setVideoRef,
                        onReady: this.handleReady,
                        className: this.state.ready ? L.ready : "",
                      }),
                      (0, a.jsxs)("div", {
                        className: L.text,
                        children: [
                          null != t
                            ? null
                            : (0, a.jsx)("div", {
                                className: L.tipTitle,
                                children:
                                  v.default.Messages.LOADING_DID_YOU_KNOW,
                              }),
                          (0, a.jsx)("div", {
                            className: null != t ? L.title : L.tip,
                            children: n,
                          }),
                          (0, a.jsx)("div", { className: L.body, children: s }),
                        ],
                      }),
                    ],
                  }),
                  (0, a.jsxs)("div", {
                    className: i(L.problems, {
                      [L.slideIn]: this.state.problems,
                    }),
                    children: [
                      (0, a.jsx)("div", {
                        className: L.problemsText,
                        children: v.default.Messages.CONNECTING_PROBLEMS_CTA,
                      }),
                      (0, a.jsxs)("div", {
                        children: [
                          (0, a.jsxs)(f.Anchor, {
                            className: L.twitterLink,
                            href: O.Links.TWITTER_SUPPORT,
                            target: "_blank",
                            children: [
                              (0, a.jsx)(p.default, { className: L.icon }),
                              v.default.Messages.TWEET_US,
                            ],
                          }),
                          (0, a.jsxs)(f.Anchor, {
                            className: L.statusLink,
                            href: O.Links.STATUS,
                            target: "_blank",
                            children: [
                              (0, a.jsx)(m.default, { className: L.icon }),
                              v.default.Messages.SERVER_STATUS,
                            ],
                          }),
                        ],
                      }),
                    ],
                  }),
                ],
              })
            );
          }
        }
        constructor(e) {
          super(e),
            (this.videoRef = null),
            (this._noProblemsTimeout = null),
            (this._problemsTimeout = null),
            (this._connectedSound = this.createSound()),
            (this._loadingText = (function () {
              let e = [
                v.default.Messages.ACCESSIBILITY_LOADING_TIP_1,
                v.default.Messages.ACCESSIBILITY_LOADING_TIP_2,
                v.default.Messages.ACCESSIBILITY_LOADING_TIP_3,
                v.default.Messages.ACCESSIBILITY_LOADING_TIP_4,
                v.default.Messages.ACCESSIBILITY_LOADING_TIP_5,
                v.default.Messages.ACCESSIBILITY_LOADING_TIP_6.format({
                  tabHook: (e, t) =>
                    (0, a.jsx)(
                      f.KeyCombo,
                      { shortcut: "tab", className: L.keybind },
                      t
                    ),
                }),
                v.default.Messages.ACCESSIBILITY_LOADING_TIP_7,
                v.default.Messages.ACCESSIBILITY_LOADING_TIP_8,
                v.default.Messages.ACCESSIBILITY_LOADING_TIP_9,
                v.default.Messages.ACCESSIBILITY_LOADING_TIP_10.format({
                  F6Hook: (e, t) =>
                    (0, a.jsx)(
                      f.KeyCombo,
                      { shortcut: "f6", className: L.keybind },
                      t
                    ),
                  tabHook: (e, t) =>
                    (0, a.jsx)(
                      f.KeyCombo,
                      { shortcut: "tab", className: L.keybind },
                      t
                    ),
                }),
                v.default.Messages.LOADING_LINE_1,
                v.default.Messages.LOADING_LINE_2,
                v.default.Messages.LOADING_LINE_4,
                v.default.Messages.LOADING_LINE_5,
                v.default.Messages.LOADING_LINE_6,
                v.default.Messages.LOADING_LINE_7,
                v.default.Messages.LOADING_LINE_8,
                v.default.Messages.LOADING_LINE_9,
                v.default.Messages.LOADING_LINE_10,
                v.default.Messages.LOADING_LINE_11,
                v.default.Messages.LOADING_LINE_12,
                v.default.Messages.LOADING_LINE_13,
                v.default.Messages.LOADING_LINE_14,
                v.default.Messages.LOADING_LINE_15,
                v.default.Messages.LOADING_TIP_1,
                v.default.Messages.LOADING_TIP_2,
                v.default.Messages.LOADING_TIP_3,
                v.default.Messages.LOADING_TIP_4,
                v.default.Messages.LOADING_TIP_5,
                v.default.Messages.LOADING_TIP_6,
                v.default.Messages.LOADING_TIP_7,
                v.default.Messages.LOADING_TIP_8,
                v.default.Messages.LOADING_TIP_9,
                v.default.Messages.LOADING_TIP_10,
                v.default.Messages.LOADING_TIP_11,
                v.default.Messages.LOADING_TIP_12,
                v.default.Messages.LOADING_TIP_13,
                v.default.Messages.LOADING_TIP_14,
                v.default.Messages.LOADING_TIP_15,
                v.default.Messages.LOADING_TIP_16,
                v.default.Messages.LOADING_TIP_17,
                v.default.Messages.LOADING_TIP_18,
                v.default.Messages.LOADING_TIP_19,
                v.default.Messages.LOADING_TIP_20,
                v.default.Messages.LOADING_TIP_21,
                v.default.Messages.LOADING_TIP_22,
                v.default.Messages.LOADING_TIP_23,
                v.default.Messages.LOADING_TIP_24,
                v.default.Messages.LOADING_TIP_25,
                v.default.Messages.LOADING_TIP_26,
                v.default.Messages.LOADING_TIP_27.format({ asterisks: "**" }),
                v.default.Messages.LOADING_KEYBIND_TIP_1.format({
                  quickSwitcherHook: (e, t) =>
                    (0, a.jsx)(
                      f.KeyCombo,
                      { shortcut: "mod+k", className: L.keybind },
                      t
                    ),
                }),
                v.default.Messages.LOADING_KEYBIND_TIP_2.format({
                  markUnreadHook: (e, t) =>
                    (0, a.jsx)(
                      f.KeyCombo,
                      { shortcut: "alt+click", className: L.keybind },
                      t
                    ),
                }),
                v.default.Messages.LOADING_KEYBIND_TIP_3.format({
                  markServerUnreadHook: (e, t) =>
                    (0, a.jsx)(
                      f.KeyCombo,
                      { shortcut: "shift+esc", className: L.keybind },
                      t
                    ),
                }),
                v.default.Messages.LOADING_KEYBIND_TIP_4.format({
                  navigateUnreadHook: (e, t) =>
                    (0, a.jsx)(
                      f.KeyCombo,
                      { shortcut: "shift+alt+up", className: L.keybind },
                      t
                    ),
                  downHook: (e, t) =>
                    (0, a.jsx)(
                      f.KeyCombo,
                      { shortcut: "down", className: L.keybind },
                      t
                    ),
                }),
                v.default.Messages.LOADING_KEYBIND_TIP_5.format({
                  keyboardShortcutsHook: (e, t) =>
                    (0, a.jsx)(
                      f.KeyCombo,
                      { shortcut: "mod+/", className: L.keybind },
                      t
                    ),
                }),
                v.default.Messages.LOADING_KEYBIND_TIP_6.format({
                  messageNewlineHook: (e, t) =>
                    (0, a.jsx)(
                      f.KeyCombo,
                      { shortcut: "shift+return", className: L.keybind },
                      t
                    ),
                }),
                v.default.Messages.LOADING_KEYBIND_TIP_7.format({
                  shiftHook: (e, t) =>
                    (0, a.jsx)(
                      f.KeyCombo,
                      { shortcut: "shift", className: L.keybind },
                      t
                    ),
                }),
                v.default.Messages.LOADING_KEYBIND_TIP_8.format({
                  upHook: (e, t) =>
                    (0, a.jsx)(
                      f.KeyCombo,
                      { shortcut: "up", className: L.keybind },
                      t
                    ),
                }),
              ];
              return e[o.random(e.length - 1)];
            })()),
            (this._eventLoadingText = (function () {
              let e = C.default.getLoadingTips();
              if (null != e && e.length > 0) return e[o.random(e.length - 1)];
            })()),
            (this.handleReady = () => {
              this.setState({ ready: !0 }),
                (0, A.isDesktop)() &&
                  (R.default.send("UPDATED_QUOTES", [
                    "Hold Tight — Loading Discord",
                  ]),
                  R.default.send("UPDATE_OPEN_ON_STARTUP"));
            }),
            (this.setVideoRef = e => {
              this.videoRef = e;
            }),
            (this.setProblemsTimeout = () => {
              null == this._problemsTimeout &&
                (this._problemsTimeout = setTimeout(
                  () => this.setState({ problems: !0 }),
                  1e4
                ));
            }),
            (this.clearProblemsTimeout = () => {
              clearTimeout(this._problemsTimeout),
                (this._problemsTimeout = null);
            });
          let { connected: t } = e;
          (this.state = {
            ready: t,
            hide: t,
            problems: !1,
            shouldRender: !t,
            opacity: new u.default.Value(t ? 0 : 1),
          }),
            (this._connectedSound.volume = 1);
        }
      }
      var P = d.default.connectStores(
        [_.default, S.default, I.default, h.default],
        () => ({
          isTryingToConnect: _.default.isTryingToConnect(),
          connected: _.default.isConnected(),
          incident: S.default.getIncident(),
          soundpack: I.default.getSoundpack(),
          reducedMotion: h.default.useReducedMotion,
        })
      )(e => {
        let {
          isTryingToConnect: t,
          connected: n,
          incident: s,
          soundpack: l,
          reducedMotion: i,
        } = e;
        return t
          ? (0, a.jsx)(M, {
              reducedMotion: i,
              soundpack: l,
              connected: n,
              incident: s,
            })
          : null;
      });
    },
    657199: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          handleInaccessiblePage: function () {
            return d;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("77078"),
        l = n("393414"),
        i = n("476108"),
        r = n("923959"),
        o = n("18494"),
        u = n("49111");
      function d(e, t) {
        if (
          ((0, s.openModalLazy)(async () => {
            let { default: e } = await n.el("332579").then(n.bind(n, "332579"));
            return t => (0, a.jsx)(e, { ...t });
          }),
          o.default.getChannelId(e) === t)
        ) {
          var d;
          (0, l.replaceWith)(
            u.Routes.CHANNEL(
              e,
              null === (d = r.default.getDefaultChannel(e)) || void 0 === d
                ? void 0
                : d.id
            )
          );
        } else (0, l.replaceWith)(i.default.defaultRoute);
      }
    },
    72860: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        }),
        n("222007");
      var a = n("913144"),
        s = n("316272"),
        l = n("305961"),
        i = n("697218"),
        r = n("773336"),
        o = n("197509"),
        u = n("49111");
      class d extends s.default {
        _initialize() {
          a.default.subscribe("CONNECTION_OPEN", this.maybeFetchEligiblity);
        }
        _terminate() {
          a.default.unsubscribe("CONNECTION_OPEN", this.maybeFetchEligiblity);
        }
        constructor(...e) {
          super(...e),
            (this.maybeFetchEligiblity = async () => {
              if ((0, r.isDesktop)() || (0, r.isWeb)()) {
                let e = Object.values(l.default.getGuilds()),
                  t = i.default.getCurrentUser(),
                  n = e.filter(
                    e =>
                      e.isOwner(t) &&
                      !e.hasFeature(
                        u.GuildFeatures
                          .ROLE_SUBSCRIPTIONS_AVAILABLE_FOR_PURCHASE
                      ) &&
                      !e.hasFeature(
                        u.GuildFeatures.CREATOR_MONETIZABLE_RESTRICTED
                      ) &&
                      !e.hasFeature(
                        u.GuildFeatures.CREATOR_MONETIZABLE_DISABLED
                      ) &&
                      (e.hasFeature(u.GuildFeatures.CREATOR_MONETIZABLE) ||
                        e.hasFeature(
                          u.GuildFeatures.CREATOR_MONETIZABLE_PROVISIONAL
                        ))
                  );
                n.length > 0 &&
                  (await (0, o.fetchCreatorMonetizationNagActivateEligibility)(
                    n.map(e => e.id)
                  ));
              }
            });
        }
      }
      var c = new d();
    },
    413524: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          STATUS_MAX_LENGTH: function () {
            return s;
          },
          ClearAfterValues: function () {
            return l;
          },
        });
      let a = 36e5,
        s = 128,
        l = Object.freeze({
          MINUTES_30: 18e5,
          HOURS_1: 1 * a,
          HOURS_4: 4 * a,
          TODAY: "TODAY",
        });
    },
    921917: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var a = n("866227"),
        s = n.n(a),
        l = n("845579"),
        i = n("599110"),
        r = n("712246"),
        o = n("49111");
      function u(e, t, n, a) {
        let u = e.trim();
        if (u.length > 0 || null != t) {
          var d;
          l.CustomStatusSetting.updateSetting({
            text: u.length > 0 ? u : "",
            expiresAtMs:
              null != n
                ? String(
                    s()
                      .add((0, r.default)(n), "ms")
                      .toDate()
                      .getTime()
                  )
                : "0",
            emojiId: null != t && null != t.id ? t.id : "0",
            emojiName: null != t ? t.name : "",
          }),
            i.default.track(o.AnalyticEvents.CUSTOM_STATUS_UPDATED, {
              location: null != a ? a.location : null,
              emoji_type:
                null == (d = t) ? null : null != d.id ? "custom" : "unicode",
              text_len: u.length,
              clear_after: null != n ? "".concat(n) : null,
            });
        } else l.CustomStatusSetting.updateSetting(void 0);
      }
    },
    712246: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var a = n("627445"),
        s = n.n(a),
        l = n("413524");
      function i(e) {
        if (e !== l.ClearAfterValues.TODAY)
          return (
            s("number" == typeof e, "Invalid custom status clear timeout"), e
          );
        {
          let e = new Date(),
            t = new Date(e.getFullYear(), e.getMonth(), e.getDate() + 1);
          return t.getTime() - e.getTime();
        }
      }
    },
    106803: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useCustomStatusMenuItem: function () {
            return E;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("414456"),
        l = n.n(s),
        i = n("77078"),
        r = n("943722"),
        o = n("997289"),
        u = n("845579"),
        d = n("381546"),
        c = n("782340"),
        f = n("416476");
      function E(e, t) {
        let s = (0, o.useAnalyticsContext)();
        function E(e) {
          e.stopPropagation(), u.CustomStatusSetting.updateSetting(void 0);
        }
        function h() {
          (0, i.openModalLazy)(async () => {
            let { default: e } = await n.el("711438").then(n.bind(n, "711438"));
            return t => (0, a.jsx)(e, { sourceAnalyticsContext: s, ...t });
          });
        }
        if (null != e) {
          let n =
            null != e.emoji
              ? t => {
                  let { className: n } = t;
                  return (0, a.jsx)(r.ActivityEmoji, {
                    className: n,
                    emoji: e.emoji,
                    animate: !0,
                    hideTooltip: !0,
                  });
                }
              : void 0;
          return (0, a.jsx)(i.MenuItem, {
            id: "edit-custom-status",
            label:
              c.default.Messages.CUSTOM_STATUS_EDIT_CUSTOM_STATUS_PLACEHOLDER,
            icon: n,
            focusedClassName: t,
            showIconFirst: !0,
            hint: e =>
              (0, a.jsx)(i.Clickable, {
                ...e,
                onClick: E,
                tabIndex: -1,
                children: (0, a.jsx)(d.default, { width: 18, height: 18 }),
              }),
            action: h,
          });
        }
        return (0, a.jsx)(i.MenuItem, {
          id: "set-custom-status",
          focusedClassName: t,
          label: c.default.Messages.CUSTOM_STATUS_SET_CUSTOM_STATUS_CTA,
          icon: e =>
            (0, a.jsx)("div", { className: l(f.customEmojiPlaceholder, e) }),
          action: h,
          showIconFirst: !0,
        });
      }
    },
    142813: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          searchQueryContainsBannedWord: function () {
            return s;
          },
        }),
        n("813006");
      var a = n("843455");
      let s = function () {
        let e =
          arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
        return e
          .split(" ")
          .some(e => a.DiscoveryBannedSearchWords.includes(e.toLowerCase()));
      };
    },
    378662: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          DiscoveryInAppReportingExperiment: function () {
            return i;
          },
          useCanSeeDiscoveryContextMenu: function () {
            return r;
          },
        });
      var a = n("884691"),
        s = n("862205"),
        l = n("845579");
      let i = (0, s.createExperiment)({
        kind: "user",
        id: "2022-01_discovery_iar",
        label: "Ability to report servers in Server Discovery",
        defaultConfig: { canSeeInAppReportingButtons: !1 },
        treatments: [
          {
            id: 1,
            label: "Show IAR buttons in Server Discovery",
            config: { canSeeInAppReportingButtons: !0 },
          },
        ],
      });
      function r() {
        let { canSeeInAppReportingButtons: e } = i.useExperiment(
            { location: "7a11e2_1" },
            { autoTrackExposure: !1 }
          ),
          t = l.DeveloperMode.useSetting();
        return (
          a.useEffect(() => {
            i.trackExposure({ location: "7a11e2_2" });
          }, []),
          e || t
        );
      }
    },
    574921: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          DiscoveryTagsExperiment: function () {
            return s;
          },
        });
      var a = n("862205");
      let s = (0, a.createExperiment)({
        kind: "user",
        id: "2021-11_discovery_tags",
        label: "Discovery Tags",
        defaultConfig: {
          shouldDisplayTags: !1,
          shouldDisplayRecommendedSearchTags: !1,
        },
        treatments: [
          {
            id: 1,
            label: "Show keyword tags on home and search result pages",
            config: {
              shouldDisplayTags: !0,
              shouldDisplayRecommendedSearchTags: !1,
            },
          },
          {
            id: 2,
            label:
              "Show keyword tags on home and search result pages and under the search bar",
            config: {
              shouldDisplayTags: !0,
              shouldDisplayRecommendedSearchTags: !0,
            },
          },
        ],
      });
    },
    649725: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return I;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("316887"),
        l = n("627490"),
        i = n("447853"),
        r = n("517425"),
        o = n("709071"),
        u = n("228427"),
        d = n("855670"),
        c = n("11056"),
        f = n("449008"),
        E = n("447621"),
        h = n("791666");
      let _ = e => {
          switch (e) {
            case E.CategoryIcons.Activity:
              return (0, a.jsx)(s.default, {});
            case E.CategoryIcons.Discover:
              return (0, a.jsx)(l.default, {});
            case E.CategoryIcons.Education:
              return (0, a.jsx)(i.default, {});
            case E.CategoryIcons.Music:
              return (0, a.jsx)(r.default, {});
            case E.CategoryIcons.Science:
              return (0, a.jsx)(o.default, {});
            case E.CategoryIcons.Stage:
              return (0, a.jsx)(u.default, { height: 22, width: 22 });
            case E.CategoryIcons.Television:
              return (0, a.jsx)(d.default, {});
            default:
              (0, f.assertNever)(e);
          }
        },
        C = e => {
          let {
            categories: t,
            currentCategoryId: n,
            handleCategorySelect: s,
            shouldDisplaySelectedCategory: l = !0,
          } = e;
          return (0, a.jsx)(a.Fragment, {
            children: t.map(e =>
              (0, a.jsx)(
                c.default,
                {
                  avatar: _(e.icon),
                  name: e.name,
                  focusProps: { offset: { right: 4, top: 1, bottom: 1 } },
                  onClick: () => s(e.categoryId),
                  wrapContent: !0,
                  selected: l && e.categoryId === n,
                  className: h.categoryItem,
                  selectedClassName: h.selectedCategoryItem,
                  innerClassName: h.itemInner,
                },
                e.categoryId
              )
            ),
          });
        };
      C.Icons = E.CategoryIcons;
      var I = C;
    },
    866487: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          DiscoverySidebarHeader: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("77078"),
        l = n("591634");
      function i(e) {
        let { text: t } = e;
        return (0, a.jsx)(s.Heading, {
          variant: "heading-xl/semibold",
          className: l.discoverHeader,
          children: t,
        });
      }
    },
    276580: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return C;
          },
        }),
        n("424973");
      var a = n("37983"),
        s = n("884691"),
        l = n("77078"),
        i = n("913144"),
        r = n("685665"),
        o = n("141254"),
        u = n("116616"),
        d = n("465126"),
        c = n("738169"),
        f = n("49111"),
        E = n("303436");
      let h = [
          [1696, 20],
          [1432, 16],
          [1168, 12],
          [0, 8],
        ],
        _ = [
          [1696, 30],
          [1432, 24],
          [1168, 18],
          [0, 12],
        ];
      var C = e => {
        let t,
          {
            title: n,
            subtitle: C,
            guildsData: I,
            analyticsContext: S,
            theme: m,
            onViewGuild: p,
            fetchGuilds: T,
            onGuildCardSeen: g,
            currentCategoryId: A,
            loadId: N,
            onTagClick: R,
            showMoreCards: O = !1,
          } = e;
        s.useEffect(() => {
          i.default.wait(() => T());
        }, [A]);
        let v = (0, c.default)(O ? _ : h),
          { analyticsLocations: L } = (0, r.default)();
        if (null == I) return null;
        let { guilds: M, loading: P } = I,
          D = null == M || 0 === M.length;
        if (!P && D) return null;
        let y = async e => {
          if ((0, o.isAtGuildCapAndNonPremium)())
            (0, u.default)({
              analyticsSource: { page: f.AnalyticsPages.GUILD_DISCOVERY },
              analyticsLocation: {
                page: f.AnalyticsPages.GUILD_DISCOVERY,
                section: f.AnalyticsSections.GUILD_CAP_UPSELL_MODAL,
              },
              analyticsLocations: L,
            });
          else {
            let t = M.findIndex(t => t.id === e);
            await p(e, t, S, N);
          }
        };
        if (P || null == M) {
          let e = [];
          for (let t = 0; t < v; t++)
            e.push((0, a.jsx)(d.default.Placeholder, {}, t));
          t = e;
        } else
          t = M.slice(0, v).map(e =>
            (0, a.jsx)(
              d.default,
              {
                className: E.guildCard,
                guild: e,
                onView: y,
                theme: m,
                onGuildCardSeen: g,
                onTagClick: R,
              },
              e.id
            )
          );
        return (0, a.jsx)("section", {
          className: E.guildListSection,
          children: (0, a.jsxs)(l.HeadingLevel, {
            component: (0, a.jsx)(l.Heading, {
              className: E.title,
              variant: "heading-lg/semibold",
              children: n,
            }),
            children: [
              null != C &&
                (0, a.jsx)(l.Text, {
                  className: E.subtitle,
                  variant: "text-sm/normal",
                  color: "header-secondary",
                  children: C,
                }),
              (0, a.jsx)("div", { className: E.guildList, children: t }),
            ],
          }),
        });
      };
    },
    586086: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          MAX_GUILDS_PER_PAGE: function () {
            return T;
          },
          default: function () {
            return R;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("917351"),
        i = n.n(l),
        r = n("522632"),
        o = n("446674"),
        u = n("77078"),
        d = n("340626"),
        c = n("393414"),
        f = n("926787"),
        E = n("246053"),
        h = n("794818"),
        _ = n("961098"),
        C = n("338638"),
        I = n("719369"),
        S = n("447621"),
        m = n("782340"),
        p = n("319688");
      let T = 12,
        g = () => {
          let e = (0, c.getHistory)(),
            t = e.location.search,
            n = null != t && t.length > 0 && t.startsWith("?");
          return n ? r.parse(t) : {};
        },
        A = e => {
          let { categoryId: t, categoryName: n, onClick: s } = e,
            l = t === S.DISCOVERY_ALL_CATEGORIES_ID,
            i = l
              ? m.default.Messages.GUILD_DISCOVERY_SEARCH_EMPTY_HEADER
              : m.default.Messages.GUILD_DISCOVERY_SEARCH_EMPTY_CATEGORY_HEADER.format(
                  { categoryName: n }
                ),
            r = l
              ? m.default.Messages.GUILD_DISCOVERY_SEARCH_EMPTY_BODY
              : m.default.Messages.GUILD_DISCOVERY_SEARCH_EMPTY_CATEGORY_BODY.format(
                  { onClick: s }
                );
          return (0, a.jsxs)("div", {
            className: p.emptyContainer,
            children: [
              (0, a.jsx)("div", { className: p.emptyImage }),
              (0, a.jsx)(u.Heading, {
                variant: "heading-xl/semibold",
                className: p.emptyHeader,
                children: i,
              }),
              (0, a.jsx)(u.Text, {
                variant: "text-md/normal",
                color: "header-secondary",
                children: r,
              }),
            ],
          });
        },
        N = () =>
          (0, a.jsxs)("div", {
            className: p.emptyContainer,
            children: [
              (0, a.jsx)("div", { className: p.errorImage }),
              (0, a.jsx)(u.Text, {
                variant: "text-md/normal",
                color: "header-secondary",
                className: p.emptyHeader,
                children: m.default.Messages.GUILD_DISCOVERY_SEARCH_ERROR,
              }),
            ],
          });
      var R = e => {
        let {
            loadId: t,
            searchResults: n,
            mostRecentQuery: l,
            defaultLanguage: r,
            availableLanguages: c,
            isFetchingSearch: R,
            scroller: O,
            loadingGuildId: v,
            theme: L,
            currentCategoryId: M,
            currentCategoryName: P,
            onViewGuild: D,
            onGuildCardSeen: y,
            placeholder: x,
            onTagClick: b,
          } = e,
          U = i.uniqueId("GuildDiscovery"),
          { guilds: G, loading: j, total: w } = n,
          [k, F] = s.useState(!1),
          { tag: B } = g(),
          [H, V] = s.useState(B),
          Y = (0, o.useStateFromStores)([f.default], () =>
            f.default.hasSearchError()
          ),
          W = (e, t, n) => {
            d.doAlgoliaSearch(l, {
              categoryId: n ? S.DISCOVERY_ALL_CATEGORIES_ID : M,
              preferredLocale: r.code,
              offset: e,
              length: t,
              filters: { approximate_member_count: h.MINIMUM_MEMBER_COUNT },
            }),
              F(!1);
          },
          K = () => {
            null == O || O.scrollTo({ to: 0 });
          };
        s.useEffect(() => {
          let { offset: e, tag: t } = g(),
            n = null != e ? Math.floor(parseInt(e, 10) / T) + 1 : 1;
          V(!!t), 1 === n && F(!0);
        }, [l]);
        let z =
          M === S.DISCOVERY_ALL_CATEGORIES_ID
            ? m.default.Messages.GUILD_DISCOVERY_SEARCH_RESULTS_HEADER.format({
                count: null != w ? w.toLocaleString() : "0",
                query: l,
              })
            : m.default.Messages.GUILD_DISCOVERY_SEARCH_RESULTS_CATEGORY_HEADER.format(
                {
                  count: null != w ? w.toLocaleString() : "0",
                  query: l,
                  category: P,
                }
              );
        return (0, a.jsxs)("div", {
          className: p.container,
          children: [
            (0, a.jsxs)("div", {
              className: p.searchHeader,
              children: [
                (0, a.jsx)(u.Clickable, {
                  onClick: () => {
                    d.clearSearch(), h.trackSearchClosed(t);
                  },
                  className: p.arrow,
                  "aria-label": m.default.Messages.BACK,
                  children: (0, a.jsx)(E.default, {
                    direction: E.default.Directions.LEFT,
                  }),
                }),
                (0, a.jsx)(u.Heading, {
                  variant: "heading-xl/semibold",
                  className: p.header,
                  children: z,
                }),
              ],
            }),
            (0, a.jsx)(C.default, {
              loadId: t,
              searchResults: n,
              mostRecentQuery: l,
              isFetchingSearch: R,
              defaultLanguage: r,
              placeholder: x,
              availableLanguages: c,
              isSearchPage: !0,
              currentCategoryId: M,
              isTagSearch: H,
            }),
            Y
              ? (0, a.jsx)(N, {})
              : w <= 0
                ? (0, a.jsx)(A, {
                    categoryId: M,
                    categoryName: P,
                    onClick: () => {
                      d.selectCategory(S.DISCOVERY_ALL_CATEGORIES_ID),
                        W(0, T, !0);
                    },
                  })
                : (0, a.jsx)("div", {
                    className: p.results,
                    children: (0, a.jsx)(_.default, {
                      pageSize: T,
                      totalCount: w,
                      resetCurrentPage: k,
                      onPageChange: e => {
                        let t = (e - 1) * T;
                        W(t, T), K();
                      },
                      children: e => {
                        let { controller: t } = e;
                        return (0, a.jsxs)("section", {
                          "aria-labelledby": U,
                          children: [
                            (0, a.jsx)(I.default, {
                              guilds: G,
                              loading: j,
                              loadingPlaceholderCount: T,
                              onViewGuild: D,
                              loadingGuildId: v,
                              theme: L,
                              analyticsContext: h.AnalyticsContexts.SEARCH,
                              onGuildCardSeen: y,
                              onTagClick: b,
                            }),
                            t,
                          ],
                        });
                      },
                    }),
                  }),
          ],
        });
      };
    },
    353681: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return z;
          },
        }),
        n("881410"),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("917351"),
        o = n.n(r),
        u = n("522632"),
        d = n("458960"),
        c = n("394846"),
        f = n("446674"),
        E = n("77078"),
        h = n("913144"),
        _ = n("340626"),
        C = n("444949"),
        I = n("139245"),
        S = n("69927"),
        m = n("444497"),
        p = n("349682"),
        T = n("393414"),
        g = n("970366"),
        A = n("915639"),
        N = n("161778"),
        R = n("350522"),
        O = n("926787"),
        v = n("305961"),
        L = n("251013"),
        M = n("664336"),
        P = n("794818"),
        D = n("574921"),
        y = n("197231"),
        x = n("283167"),
        b = n("868246"),
        U = n("276580"),
        G = n("586086"),
        j = n("338638"),
        w = n("311092"),
        k = n("447621"),
        F = n("49111"),
        B = n("782340"),
        H = n("343691"),
        V = n("479999"),
        Y = n("183127");
      class W extends s.PureComponent {
        componentDidMount() {
          var e, t, n;
          let {
            isFetching: a,
            guilds: { gamesYouPlay: s, featured: l },
            searchRoute: i,
            currentHomepageCategoryId: r,
            mostRecentQuery: o,
          } = this.props;
          if (
            ((0, C.fetchActivityStatistics)(),
            (0, x.maybeFetchGuildDiscoveryCategories)(),
            null == O.default.getSearchIndex() && (0, _.createAlgoliaIndex)(),
            h.default.wait(() => {
              (0, I.markView)(F.ViewHistoryKeys.SERVER_DISCOVERY_BADGE);
            }),
            !a &&
              0 === o.length &&
              P.trackDiscoveryViewed({
                loadId: this.loadId,
                gamesYouPlayGuilds: s.guilds,
                allGuilds: l.guilds,
                categoryId: r,
              }),
            null != i)
          ) {
            let {
              query: e,
              offset: t,
              limit: n,
              preferredLocale: a,
              categoryId: s,
            } = u.parse(i);
            (0, _.doAlgoliaSearch)(e, {
              categoryId: parseInt(s, 10),
              preferredLocale: a,
              offset: parseInt(t, 10),
              filters: { approximate_member_count: P.MINIMUM_MEMBER_COUNT },
              length: parseInt(n, 10),
            });
          } else
            null != r &&
              r !== k.DISCOVERY_ALL_CATEGORIES_ID &&
              h.default.wait(() => (0, _.selectCategory)(r));
          let d = (0, T.getHistory)().location,
            c =
              null !==
                (t =
                  null === (e = d.state) || void 0 === e
                    ? void 0
                    : e.scrollTop) && void 0 !== t
                ? t
                : 0;
          c > 0 &&
            (null === (n = this._scroller.current) ||
              void 0 === n ||
              n.scrollTo({ to: c })),
            (0, g.trackAppUIViewed)("guild_discovery");
        }
        componentDidUpdate(e) {
          let {
            guilds: { gamesYouPlay: t, featured: n },
            isFetching: a,
            mostRecentQuery: s,
            currentHomepageCategoryId: l,
            currentCategoryId: i,
          } = this.props;
          if (
            (e.isFetching &&
              !a &&
              P.trackDiscoveryViewed({
                loadId: this.loadId,
                gamesYouPlayGuilds: t.guilds,
                allGuilds: n.guilds,
                categoryId: l,
              }),
            e.currentCategoryId !== i)
          ) {
            var r;
            null === (r = this._scroller.current) ||
              void 0 === r ||
              r.scrollTo({ to: 0 });
          }
          e.currentCategoryId !== i &&
            P.trackDiscoveryExited(this.loadId, Array.from(this._guildIdsSeen)),
            e.mostRecentQuery.length > 0 &&
              s.length < 1 &&
              l !== i &&
              (0, _.selectCategory)(l);
        }
        componentWillUnmount() {
          let {
            currentCategoryId: e,
            recommendationsLoadId: t,
            recommendationsGuilds: n,
          } = this.props;
          e === k.DISCOVERY_ALL_CATEGORIES_ID
            ? null != n &&
              null != t &&
              P.trackDiscoveryExited(
                t,
                this.getOrderedGuildIdsSeen(n.map(e => e.id)),
                "Game Recommendations"
              )
            : P.trackDiscoveryExited(
                this.loadId,
                Array.from(this._guildIdsSeen)
              );
        }
        getOrderedGuildIdsSeen(e) {
          return e.filter(e => this._guildIdsSeen.has(e));
        }
        renderGamesYouPlay() {
          let {
              guilds: e,
              mightHaveGamesYouPlay: t,
              theme: n,
              userGuilds: s,
            } = this.props,
            l = Object.keys(s),
            i = e[F.GuildDiscoverySections.GAMES_YOU_PLAY];
          i.guilds = i.guilds.filter(e => !l.includes(e.id));
          let { loadingGuildId: r } = this.state;
          return t
            ? (0, a.jsx)(U.default, {
                loadId: this.loadId,
                title: B.default.Messages.GUILD_DISCOVERY_HEADER_GAMES_YOU_PLAY,
                guildsData: i,
                loadingGuildId: r,
                analyticsContext: P.AnalyticsContexts.RECOMMENDED,
                onViewGuild: this.handleViewGuild,
                onGuildCardSeen: this.handleGuildCardSeen,
                fetchGuilds: _.fetchGamesYouPlayGuilds,
                theme: n,
              })
            : null;
        }
        renderSearchBar() {
          var e, t;
          let {
            mostRecentQuery: n,
            guilds: { search: s },
            defaultLanguage: l,
            isFetchingSearch: i,
            currentCategoryId: r,
            categories: o,
            currentCategoryName: u,
          } = this.props;
          D.DiscoveryTagsExperiment.trackExposure({ location: "54961b_1" });
          let { shouldDisplayRecommendedSearchTags: d } =
              D.DiscoveryTagsExperiment.getCurrentConfig(
                { location: "54961b_2" },
                { autoTrackExposure: !1 }
              ),
            c = d
              ? r === k.DISCOVERY_ALL_CATEGORIES_ID
                ? B.default.Messages.GUILD_DISCOVERY_SEARCH_PLACEHOLDER_TAGS
                : B.default.Messages.GUILD_DISCOVERY_CATEGORY_SEARCH_PLACEHOLDER_TAGS.format(
                    { categoryName: u }
                  )
              : r === k.DISCOVERY_ALL_CATEGORIES_ID
                ? B.default.Messages.GUILD_DISCOVERY_SEARCH_PLACEHOLDER
                : B.default.Messages.GUILD_DISCOVERY_CATEGORY_SEARCH_PLACEHOLDER.format(
                    { categoryName: u }
                  ),
            f =
              null !==
                (t = null === (e = s[n]) || void 0 === e ? void 0 : e[r]) &&
              void 0 !== t
                ? t
                : O.EMPTY_DISCOVERABLE_GUILDS_SECTION;
          return (0, a.jsx)(j.default, {
            loadId: this.loadId,
            searchResults: f,
            mostRecentQuery: n,
            isFetchingSearch: i,
            defaultLanguage: l,
            placeholder: c,
            currentCategoryId: r,
            categories: o,
          });
        }
        renderSearchResults() {
          var e, t;
          let {
              mostRecentQuery: n,
              guilds: { search: s },
              availableLanguages: l,
              defaultLanguage: i,
              isFetchingSearch: r,
              theme: o,
              currentCategoryId: u,
              currentCategoryName: d,
            } = this.props,
            { loadingGuildId: c } = this.state,
            f =
              u === k.DISCOVERY_ALL_CATEGORIES_ID
                ? B.default.Messages.GUILD_DISCOVERY_SEARCH_PLACEHOLDER
                : B.default.Messages.GUILD_DISCOVERY_CATEGORY_SEARCH_PLACEHOLDER.format(
                    { categoryName: d }
                  ),
            E =
              null !==
                (t = null === (e = s[n]) || void 0 === e ? void 0 : e[u]) &&
              void 0 !== t
                ? t
                : O.EMPTY_DISCOVERABLE_GUILDS_SECTION;
          return (0, a.jsx)(G.default, {
            loadId: this.loadId,
            availableLanguages: l,
            defaultLanguage: i,
            placeholder: f,
            isFetchingSearch: r,
            searchResults: E,
            mostRecentQuery: n,
            loadingGuildId: c,
            currentCategoryId: u,
            currentCategoryName: d,
            scroller: this._scroller.current,
            theme: o,
            onViewGuild: this.handleViewGuild,
            onGuildCardSeen: this.handleGuildCardSeen,
            onTagClick: (e, t) =>
              this.handleTagSearch(e, t, P.AnalyticsContexts.SEARCH),
          });
        }
        renderRecommendedGuildsSection() {
          let { guilds: e, theme: t } = this.props,
            { loadingGuildId: n } = this.state;
          return (0, a.jsx)(U.default, {
            loadId: this.loadId,
            title: B.default.Messages.GUILD_DISCOVERY_FEATURED_HEADER,
            guildsData: e.featured,
            analyticsContext: P.AnalyticsContexts.POPULAR,
            onViewGuild: this.handleViewGuild,
            onGuildCardSeen: this.handleGuildCardSeen,
            fetchGuilds: () => (0, _.fetchFeaturedOrPopularGuilds)(0, 30),
            loadingGuildId: n,
            theme: t,
            onTagClick: (e, t) =>
              this.handleTagSearch(e, t, P.AnalyticsContexts.POPULAR),
          });
        }
        renderPopularGuildsSection() {
          let { guilds: e, theme: t, currentCategoryId: n } = this.props,
            { loadingGuildId: s } = this.state;
          return (0, a.jsx)(U.default, {
            loadId: this.loadId,
            title: B.default.Messages.GUILD_DISCOVERY_POPULAR_HEADER,
            guildsData: e[n],
            loadingGuildId: s,
            analyticsContext: P.AnalyticsContexts.POPULAR,
            onViewGuild: this.handleViewGuild,
            onGuildCardSeen: this.handleGuildCardSeen,
            fetchGuilds: () => (0, _.fetchPopularGuildsForCategory)(n),
            currentCategoryId: n,
            theme: t,
            onTagClick: (e, t) =>
              this.handleTagSearch(e, t, P.AnalyticsContexts.POPULAR),
          });
        }
        render() {
          var e, t;
          let {
              currentCategoryName: n,
              mostRecentQuery: l,
              currentCategoryId: r,
              guilds: u,
            } = this.props,
            d = l.length > 0;
          D.DiscoveryTagsExperiment.trackExposure({ location: "54961b_3" });
          let { shouldDisplayRecommendedSearchTags: f } =
              D.DiscoveryTagsExperiment.getCurrentConfig(
                { location: "54961b_4" },
                { autoTrackExposure: !1 }
              ),
            h =
              r === k.DISCOVERY_ALL_CATEGORIES_ID
                ? null === (e = u[F.GuildDiscoverySections.FEATURED]) ||
                  void 0 === e
                  ? void 0
                  : e.guilds
                : null === (t = u[r]) || void 0 === t
                  ? void 0
                  : t.guilds;
          if (r === k.DISCORD_HUB_ID)
            return (0, a.jsx)(p.default, { loadId: this.loadId });
          let _ =
            r === k.DISCOVERY_ALL_CATEGORIES_ID
              ? B.default.Messages.GUILD_DISCOVERY_HOME_TITLE
              : B.default.Messages.GUILD_DISCOVERY_CATEGORY_TITLE.format({
                  categoryName: n,
                });
          return (0, a.jsxs)("div", {
            className: H.pageWrapper,
            children: [
              (0, a.jsx)(S.AppPageTitle, {
                subsection: d ? l : void 0,
                location: _,
              }),
              (0, a.jsx)("div", {
                className: i(H.dragRegion, H.pageHeaderDrag, {
                  [H.searchPageDrag]: d,
                }),
              }),
              c.isMobile &&
                (0, a.jsx)(M.default, { children: (0, a.jsx)(s.Fragment, {}) }),
              (0, a.jsx)(E.AdvancedScrollerAuto, {
                className: H.scroller,
                ref: this._scroller,
                onScroll: this.handleScroll,
                children: (0, a.jsx)("div", {
                  className: i(H.viewWrapper, { [H.searchPage]: d }),
                  children: d
                    ? this.renderSearchResults()
                    : (0, a.jsxs)(E.HeadingLevel, {
                        forceLevel: 1,
                        component: (0, a.jsxs)("div", {
                          className: H.searchHeader,
                          children: [
                            (0, a.jsx)("img", {
                              alt: "",
                              className: H.headerImage,
                              src: Y,
                            }),
                            (0, a.jsx)("div", {
                              className: H.headerContentWrapper,
                              children: (0, a.jsxs)("div", {
                                className: H.headerContent,
                                children: [
                                  (0, a.jsx)(E.Heading, {
                                    variant: "heading-xl/semibold",
                                    className: H.searchTitle,
                                    children:
                                      r === k.DISCOVERY_ALL_CATEGORIES_ID
                                        ? B.default.Messages
                                            .GUILD_DISCOVERY_HOME_TITLE
                                        : B.default.Messages.GUILD_DISCOVERY_CATEGORY_TITLE.format(
                                            { categoryName: n }
                                          ),
                                  }),
                                  (0, a.jsx)(E.Text, {
                                    variant: "text-md/normal",
                                    className: H.searchSubtitle,
                                    children:
                                      r === k.DISCOVERY_ALL_CATEGORIES_ID &&
                                      B.default.Messages
                                        .GUILD_DISCOVERY_HOME_SUBTITLE,
                                  }),
                                  this.renderSearchBar(),
                                  f &&
                                    (0, a.jsx)(w.DiscoveryTags, {
                                      hideOverflow: !0,
                                      section: P.AnalyticsContexts.HEADER,
                                      className: H.headerTagContainer,
                                      discoveryTagStyle:
                                        w.DiscoveryTagStyle.LIGHT,
                                      onTagClick: e =>
                                        this.handleTagSearch(
                                          e,
                                          void 0,
                                          P.AnalyticsContexts.HEADER
                                        ),
                                      tags: o
                                        .chain(h)
                                        .flatMap(e => e.keywords)
                                        .compact()
                                        .uniq()
                                        .sampleSize(10)
                                        .value(),
                                    }),
                                ],
                              }),
                            }),
                          ],
                        }),
                        children: [
                          (0, a.jsx)("div", {
                            className: H.featuredBody,
                            children:
                              r === k.DISCOVERY_ALL_CATEGORIES_ID
                                ? this.renderRecommendedGuildsSection()
                                : this.renderPopularGuildsSection(),
                          }),
                          (0, a.jsxs)("div", {
                            className: H.footer,
                            children: [
                              (0, a.jsx)("img", {
                                alt: "",
                                src: V,
                                className: H.footerImage,
                              }),
                              (0, a.jsx)(E.Heading, {
                                variant: "heading-md/semibold",
                                children:
                                  B.default.Messages
                                    .GUILD_DISCOVERY_CATEGORY_FOOTER_TITLE,
                              }),
                              (0, a.jsx)(E.Button, {
                                look: E.Button.Looks.LINK,
                                color: E.Button.Colors.LINK,
                                size: E.Button.Sizes.MIN,
                                onClick: this.scrollToTop,
                                children:
                                  B.default.Messages
                                    .GUILD_DISCOVERY_FOOTER_BODY,
                              }),
                            ],
                          }),
                        ],
                      }),
                }),
              }),
            ],
          });
        }
        constructor(...e) {
          super(...e),
            (this._scroller = s.createRef()),
            (this._guildIdsSeen = new Set()),
            (this.loadId = (0, y.makeAnalyticsID)()),
            (this.state = {
              animatedValue: new d.default.Value(0),
              loadingGuildId: null,
            }),
            (this.scrollToTop = () => {
              null != this._scroller.current &&
                this._scroller.current.scrollTo({ to: 0 });
            }),
            (this.handleScroll = () => {
              var e, t;
              let { animatedValue: n } = this.state,
                a =
                  null !==
                    (t =
                      null === (e = this._scroller.current) || void 0 === e
                        ? void 0
                        : e.getScrollerState().scrollTop) && void 0 !== t
                    ? t
                    : 0;
              n.setValue(Math.min(1, a / 200));
            }),
            (this.handleViewGuild = async (e, t, n, a) => {
              var s, l;
              let { currentCategoryId: i } = this.props,
                { loadingGuildId: r } = this.state;
              if (e === r) return;
              let o =
                  null !==
                    (l =
                      null === (s = this._scroller.current) || void 0 === s
                        ? void 0
                        : s.getScrollerState().scrollTop) && void 0 !== l
                    ? l
                    : 0,
                { location: u } = (0, T.getHistory)();
              (0, T.replaceWith)({ ...u, state: o }),
                this.setState({ loadingGuildId: e });
              let d = i !== k.DISCOVERY_ALL_CATEGORIES_ID ? i : null;
              try {
                await P.viewGuild({
                  loadId: null != a ? a : this.loadId,
                  guildId: e,
                  index: t,
                  analyticsContext: n,
                  categoryId: d,
                });
              } catch (e) {
                this.setState({ loadingGuildId: null });
              }
            }),
            (this.handleGuildCardSeen = e => {
              this._guildIdsSeen.add(e);
            }),
            (this.handleTagSearch = (e, t, n) => {
              let { currentCategoryId: a, defaultLanguage: s } = this.props;
              if (null == a) return;
              let l = { approximate_member_count: P.MINIMUM_MEMBER_COUNT };
              (0, _.getSearchResultsCount)(e, l),
                (0, _.doAlgoliaSearch)(e, {
                  filters: l,
                  categoryId: a,
                  preferredLocale: s.code,
                  offset: 0,
                  length: G.MAX_GUILDS_PER_PAGE,
                  tag: !0,
                }),
                P.trackTagSearchStarted(this.loadId, a, n, t),
                this.scrollToTop();
            });
        }
      }
      let K = f.default.connectStores(
        [
          N.default,
          A.default,
          L.default,
          R.default,
          O.default,
          b.default,
          v.default,
        ],
        () => {
          var e;
          let t = k.LANGUAGE_OPTIONS,
            n = A.default.locale,
            a =
              null !== (e = o.find(t, { code: n })) && void 0 !== e ? e : t[0],
            s = L.default.applicationStatistics,
            l = Object.keys(s),
            i =
              R.default.hasConsented(F.Consents.PERSONALIZATION) &&
              l.length > 0,
            r = O.default.getCurrentCategoryId(),
            u = O.default.getCurrentHomepageCategoryId();
          return {
            isFetching: O.default.isFetching(),
            isFetchingSearch: O.default.isFetchingSearch(),
            guilds: O.default.getDiscoverableGuilds(),
            mostRecentQuery: O.default.getMostRecentQuery(),
            currentCategoryId: r,
            currentHomepageCategoryId: u,
            currentCategoryName: b.default.getCategoryName(r),
            categories: b.default.getDiscoveryCategories(),
            userGuilds: v.default.getGuilds(),
            theme: N.default.theme,
            mightHaveGamesYouPlay: i,
            availableLanguages: t,
            defaultLanguage: a,
          };
        }
      )(W);
      function z(e) {
        let {
          fetching: t,
          loadId: n,
          recommendedGuilds: s,
        } = (0, f.useStateFromStoresObject)([m.default], () => ({
          recommendedGuilds: m.default.getRecommendedGuilds(),
          loadId: m.default.getLoadId(),
          fetching: m.default.isFetching(),
        }));
        return (0, a.jsx)(K, {
          ...e,
          fetchingRecommendations: t,
          usingGameRecommendations: !1,
          recommendationsGuilds: s,
          recommendationsLoadId: n,
        });
      }
    },
    256430: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return C;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("446674"),
        l = n("77078"),
        i = n("340626"),
        r = n("40546"),
        o = n("397039"),
        u = n("926787"),
        d = n("868246"),
        c = n("649725"),
        f = n("866487"),
        E = n("447621"),
        h = n("782340");
      let _ = e => {
        switch (e) {
          case 1:
            return E.CategoryIcons.Activity;
          case 2:
            return E.CategoryIcons.Music;
          case 3:
            return E.CategoryIcons.Television;
          case 5:
            return E.CategoryIcons.Science;
          case 6:
            return E.CategoryIcons.Education;
          default:
            return E.CategoryIcons.Discover;
        }
      };
      var C = () => {
        let { currentCategoryId: e, isViewingSearchResults: t } = (0,
          s.useStateFromStoresObject)([u.default], () => ({
            currentCategoryId: u.default.getCurrentCategoryId(),
            isViewingSearchResults: u.default.getMostRecentQuery().length > 0,
          })),
          n = (0, s.useStateFromStores)(
            [d.default],
            () => d.default.getDiscoveryCategories(),
            [],
            d.areDiscoveryCategoriesEqual
          ),
          E =
            null == n ? void 0 : n.map(e => ({ ...e, icon: _(e.categoryId) })),
          C = e => {
            (0, i.selectCategory)(e, !0),
              o.default.closeSidebar(),
              t && (0, i.clearSearch)();
          };
        return (0, a.jsxs)(l.Scroller, {
          children: [
            (0, a.jsx)(f.DiscoverySidebarHeader, {
              text: h.default.Messages.DISCOVER,
            }),
            (0, a.jsx)(c.default, {
              categories: E,
              handleCategorySelect: C,
              currentCategoryId: e,
              shouldDisplaySelectedCategory: !t,
            }),
            (0, a.jsx)(r.default, {
              handleCategorySelect: C,
              currentCategoryId: e,
              shouldDisplaySelectedCategory: !t,
            }),
          ],
        });
      };
    },
    392533: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
          GuildDiscoveryMenuPopout: function () {
            return C;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("446674"),
        l = n("77078"),
        i = n("272030"),
        r = n("861370"),
        o = n("377114"),
        u = n("305961"),
        d = n("957255"),
        c = n("907566"),
        f = n("378662"),
        E = n("49111"),
        h = n("782340");
      function _(e) {
        let {
            guild: t,
            shiftId: n,
            onSelect: _,
            closePopout: C,
            "aria-label": I,
          } = e,
          S = (0, r.default)({
            id: t.id,
            label: h.default.Messages.COPY_ID_GUILD,
            shiftId: n,
            onSuccess: C,
          }),
          m = (0, s.useStateFromStores)(
            [u.default],
            () => u.default.getGuild(t.id),
            [t.id]
          ),
          p = (0, s.useStateFromStores)([d.default], () =>
            d.default.can(E.Permissions.ADMINISTRATOR, m)
          ),
          { canSeeInAppReportingButtons: T } =
            f.DiscoveryInAppReportingExperiment.useExperiment(
              { location: "0e35b9_1" },
              { autoTrackExposure: !1 }
            ),
          g = () => {
            (0, i.closeContextMenu)(), null == C || C();
          };
        return (0, a.jsxs)(l.Menu, {
          onSelect: _,
          navId: "guild-discovery-context-menu",
          "aria-label":
            null != I ? I : h.default.Messages.GENERIC_ACTIONS_MENU_LABEL,
          onClose: i.closeContextMenu,
          children: [
            (0, a.jsx)(l.MenuGroup, {
              children:
                !p && T
                  ? (0, a.jsx)(l.MenuItem, {
                      id: "report-guild-discovery-listing",
                      label: h.default.Messages.REPORT_SERVER_NO_NAME,
                      action: () => {
                        (0, o.showReportModalForDiscoverableGuild)(t), g();
                      },
                      icon: c.default,
                      color: "danger",
                    })
                  : null,
            }),
            (0, a.jsx)(l.MenuGroup, { children: S }),
          ],
        });
      }
      let C = e => {
        let { guild: t, children: n, onRequestOpen: s, onRequestClose: i } = e;
        return (0, a.jsx)(l.Popout, {
          onRequestOpen: s,
          onRequestClose: i,
          animation: l.Popout.Animation.NONE,
          position: "bottom",
          spacing: 4,
          align: "right",
          renderPopout: e => {
            let { closePopout: n } = e;
            return (0, a.jsx)(_, { guild: t, closePopout: n });
          },
          children: n,
        });
      };
    },
    593094: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("592407"),
        l = n("5667"),
        i = n("49111"),
        r = n("782340"),
        o = n("169824"),
        u = n("892839");
      function d(e) {
        let { guild: t, markAsDismissed: n } = e;
        return (0, a.jsx)(l.default, {
          header: r.default.Messages.DISCOVERY_LANDING_PAGE_UPSELL_TITLE,
          content: r.default.Messages.DISCOVERY_LANDING_PAGE_UPSELL_DESCRIPTION,
          asset: (0, a.jsx)("div", {
            className: o.image,
            children: (0, a.jsx)("img", { alt: "", src: u }),
          }),
          buttonCTA:
            r.default.Messages.DISCOVERY_LANDING_PAGE_UPSELL_BUTTON_ACCEPT,
          onClick: e => {
            var n;
            (n = t),
              s.default.open(
                n.id,
                i.GuildSettingsSections.DISCOVERY_LANDING_PAGE
              );
          },
          secondaryButtonCTA:
            r.default.Messages.DISCOVERY_LANDING_PAGE_UPSELL_BUTTON_DISMISS,
          onSecondaryClick: () => {},
          markAsDismissed: n,
        });
      }
    },
    961098: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("522632"),
        i = n("77078"),
        r = n("393414");
      class o extends s.PureComponent {
        componentDidUpdate(e) {
          let { resetCurrentPage: t } = this.props;
          !e.resetCurrentPage && t && this.setState({ currentPage: 1 });
        }
        render() {
          let {
              totalCount: e,
              pageSize: t,
              maxVisiblePages: n,
              children: s,
            } = this.props,
            { currentPage: l } = this.state,
            r = (0, a.jsx)(i.Paginator, {
              totalCount: e,
              pageSize: t,
              currentPage: l,
              maxVisiblePages: n,
              onPageChange: this.handlePageChange,
            });
          return s({ controller: r });
        }
        constructor(e) {
          super(e),
            (this.handlePageChange = e => {
              let { onPageChange: t } = this.props;
              this.setState({ currentPage: e }), null != t && t(e);
            });
          let t = (0, r.getHistory)(),
            n = t.location.search,
            a = null != n && n.length > 0 && n.startsWith("?"),
            { offset: s } = a ? l.parse(n) : {},
            i = null != s ? Math.floor(parseInt(s, 10) / e.pageSize) + 1 : 1;
          this.state = { currentPage: i };
        }
      }
      var u = o;
    },
    338638: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return v;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("917351"),
        o = n.n(r),
        u = n("446674"),
        d = n("77078"),
        c = n("340626"),
        f = n("926787"),
        E = n("466857"),
        h = n("599110"),
        _ = n("659500"),
        C = n("794818"),
        I = n("142813"),
        S = n("197231"),
        m = n("868246"),
        p = n("447621"),
        T = n("49111"),
        g = n("782340"),
        A = n("646662");
      let N = o.throttle(C.trackSearchResultsViewed, 1e3, {
          leading: !1,
          trailing: !0,
        }),
        R = e => {
          let {
            isSelected: t,
            onCategoryChange: n,
            categoryId: s,
            name: l,
            count: r,
          } = e;
          return (0, a.jsx)(d.Clickable, {
            onClick: () => n(s),
            className: i(A.categoryPill, { [A.selected]: t }),
            children: (0, a.jsx)(d.Text, {
              className: A.categoryLabel,
              variant: "text-sm/normal",
              children: null != r ? "".concat(l, " (").concat(r, ")") : l,
            }),
          });
        };
      class O extends s.PureComponent {
        componentDidMount() {
          let {
              loadId: e,
              searchResults: t,
              currentCategoryId: n,
            } = this.props,
            { searchId: a, query: s, isHandlingTagSearch: l } = this.state,
            i = this.context;
          if (
            (null == f.default.getSearchIndex() && c.createAlgoliaIndex(),
            _.ComponentDispatch.subscribe(
              T.ComponentActions.GLOBAL_CLIPBOARD_PASTE,
              this.focusInput
            ),
            _.ComponentDispatch.subscribe(
              T.ComponentActions.TEXTAREA_FOCUS,
              this.focusInput
            ),
            s.length > 0)
          ) {
            let r = n !== p.DISCOVERY_ALL_CATEGORIES_ID ? n : null;
            N({
              loadId: e,
              searchId: a,
              query: s,
              guildResults: t.guilds,
              analyticsContext: i,
              categoryId: r,
              isTagSearch: l,
            });
          }
        }
        componentDidUpdate(e, t) {
          let {
              loadId: n,
              isFetchingSearch: a,
              searchResults: s,
              currentCategoryId: l,
              mostRecentQuery: i,
            } = this.props,
            {
              isSearching: r,
              searchId: o,
              query: u,
              isHandlingTagSearch: d,
            } = this.state,
            c = this.context,
            f = e.isFetchingSearch && !a,
            E = l !== p.DISCOVERY_ALL_CATEGORIES_ID ? l : null;
          (r || d) &&
            f &&
            (N({
              loadId: n,
              searchId: o,
              query: u,
              guildResults: s.guilds,
              analyticsContext: c,
              categoryId: E,
              isTagSearch: d,
            }),
            this.setState({ isHandlingTagSearch: !1 })),
            !t.isSearching && r && C.trackSearchStarted(n, E, c),
            e.mostRecentQuery !== i &&
              this.setState({
                query: i,
                searchId: (0, S.makeAnalyticsID)(),
                isHandlingTagSearch: !0,
              });
        }
        componentWillUnmount() {
          _.ComponentDispatch.unsubscribe(
            T.ComponentActions.GLOBAL_CLIPBOARD_PASTE,
            this.focusInput
          ),
            _.ComponentDispatch.unsubscribe(
              T.ComponentActions.TEXTAREA_FOCUS,
              this.focusInput
            );
        }
        renderSearchOptions() {
          var e;
          let { availableLanguages: t } = this.props,
            { selectedLanguage: n } = this.state;
          if (null == t) return null;
          let s = t.map(e => {
            let { name: t } = e;
            return { label: t, value: t };
          });
          return (0, a.jsx)(d.SingleSelect, {
            className: A.languageSelector,
            options: s,
            value:
              null !== (e = null == n ? void 0 : n.name) && void 0 !== e
                ? e
                : "",
            onChange: this.handleLanguageChange,
            maxVisibleItems: 6,
          });
        }
        renderCategories() {
          let { currentCategoryId: e, countsByCategory: t } = this.props;
          return (0, a.jsx)("div", {
            className: A.categories,
            children:
              null == t
                ? void 0
                : t.map(t => {
                    let [n, s] = t;
                    return (0, a.jsx)(
                      R,
                      {
                        categoryId: n,
                        name:
                          n === p.DISCOVERY_ALL_CATEGORIES_ID
                            ? g.default.Messages
                                .GUILD_DISCOVERY_ALL_CATEGORY_FILTER
                            : m.default.getCategoryName(n),
                        onCategoryChange: this.handleCategoryChange,
                        isSelected: e === n,
                        count: s,
                      },
                      n
                    );
                  }),
          });
        }
        render() {
          let { query: e, inputFocused: t } = this.state,
            { placeholder: n, isSearchPage: s } = this.props;
          return (0, a.jsxs)(a.Fragment, {
            children: [
              (0, a.jsxs)("div", {
                className: i(A.container, { [A.searchPage]: s }),
                children: [
                  (0, a.jsx)("div", {
                    className: A.search,
                    children: (0, a.jsx)(E.default, {
                      ref: this._searchRef,
                      searchTerm: e,
                      className: s ? void 0 : A.searchBox,
                      inputClassName: s ? void 0 : A.searchBoxInput,
                      closeIconClassName: s ? void 0 : A.closeIcon,
                      searchIconClassName: s ? void 0 : A.searchIcon,
                      label: g.default.Messages.GUILD_DISCOVERY_SEARCH_LABEL,
                      placeholder: n,
                      onChange: this.handleQueryChanged,
                      onClear: this.handleQueryCleared,
                      onFocus: this.handleFocus,
                      onBlur: this.handleSearchBlurred,
                      onKeyPress: this.handleSearchKeyPress,
                      autoFocus: !s,
                      cta:
                        t && null != e && e.length > 1
                          ? g.default.Messages.GUILD_DISCOVERY_SEARCH_ENTER_CTA
                          : null,
                    }),
                  }),
                  s ? this.renderSearchOptions() : null,
                ],
              }),
              s ? this.renderCategories() : null,
            ],
          });
        }
        constructor(e) {
          super(e),
            (this._searchRef = s.createRef()),
            (this.canSearch = e =>
              e.trim().length >= 2 && !(0, I.searchQueryContainsBannedWord)(e)),
            (this.doSearch = (e, t, n, a) => {
              var s;
              let { defaultLanguage: l, currentCategoryId: i } = this.props,
                { query: r, selectedLanguage: o } = this.state,
                u = { approximate_member_count: C.MINIMUM_MEMBER_COUNT };
              a && c.getSearchResultsCount(r, u),
                this.setState({
                  searchId: (0, S.makeAnalyticsID)(),
                  queryHasChanged: !1,
                  isSearching: !0,
                }),
                c.doAlgoliaSearch(r, {
                  categoryId: null == n ? i : n,
                  preferredLocale:
                    null !== (s = null == o ? void 0 : o.code) && void 0 !== s
                      ? s
                      : l.code,
                  offset: e,
                  length: t,
                  filters: u,
                });
            }),
            (this.handleSearchBlurred = e => {
              let { onSearchBlur: t } = this.props;
              this.setState({ inputFocused: !1 }), null == t || t();
            }),
            (this.handleSearchKeyPress = e => {
              let { query: t, queryHasChanged: n } = this.state,
                { loadId: a, currentCategoryId: s } = this.props,
                l = s !== p.DISCOVERY_ALL_CATEGORIES_ID ? s : null;
              this.canSearch(t) && n && e.charCode === T.KeyboardKeys.ENTER
                ? (C.trackSearchStarted(a, l), this.doSearch(0, 12, void 0, !0))
                : 0 === t.length &&
                  e.charCode === T.KeyboardKeys.ENTER &&
                  this.setState({ isSearching: !1 });
            }),
            (this.handleQueryChanged = e => {
              this.setState({ query: e, queryHasChanged: !0 });
            }),
            (this.handleQueryCleared = () => {
              this.setState({
                query: "",
                queryHasChanged: !0,
                isSearching: !1,
              });
            }),
            (this.handleLanguageChange = e => {
              let { mostRecentQuery: t, availableLanguages: n } = this.props,
                a = null == n ? void 0 : n.find(t => t.name === e);
              this.setState({ selectedLanguage: a }, () => {
                this.canSearch(t) && this.doSearch(0, 12);
              });
            }),
            (this.handleCategoryChange = e => {
              let { mostRecentQuery: t } = this.props;
              c.selectCategory(e), this.canSearch(t) && this.doSearch(0, 12, e);
            }),
            (this.handleFocus = () => {
              let { onSearchFocus: e } = this.props;
              this.setState({ inputFocused: !0 }), null == e || e();
            }),
            (this.focusInput = () => {
              var e;
              null === (e = this._searchRef.current) ||
                void 0 === e ||
                e.focus();
            }),
            (this.state = {
              searchId: (0, S.makeAnalyticsID)(),
              query: e.isSearchPage ? e.mostRecentQuery : "",
              queryHasChanged: !1,
              isSearching: !1,
              selectedLanguage: e.defaultLanguage,
              inputFocused: !1,
              isHandlingTagSearch: e.isTagSearch || !1,
            });
        }
      }
      function v(e) {
        let t = (0, u.useStateFromStores)(
            [m.default],
            () => m.default.getDiscoveryCategories(),
            [],
            m.areDiscoveryCategoriesEqual
          ),
          n = (0, u.useStateFromStores)([f.default], () =>
            f.default.getTopCategoryCounts(e.mostRecentQuery)
          );
        return (0, a.jsx)(O, { ...e, categories: t, countsByCategory: n });
      }
      O.contextType = h.AnalyticsContext;
    },
    311092: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          DiscoveryTagStyle: function () {
            return C;
          },
          DiscoveryTags: function () {
            return I;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("77078"),
        o = n("731898"),
        u = n("599110"),
        d = n("49111"),
        c = n("579344");
      let f = [
          "egirl",
          "egirls",
          "waifu",
          "dating",
          "nsfw",
          "sex",
          "playboy",
          "stupid",
          "harem",
          "playgirl",
          "shitcoin",
          "shitpost",
          "porno",
          "nudes",
          "sexy",
          "horny",
          "fart",
          "tits",
          "balls",
          "cum",
        ],
        E = e => {
          let { text: t, onClick: n, className: s, hide: l } = e;
          return (0, a.jsx)("li", {
            className: i(c.tag, s, { [c.hide]: l }),
            children: (0, a.jsx)(r.Clickable, {
              className: c.tagText,
              onClick: e => {
                e.stopPropagation(), e.preventDefault(), n(e);
              },
              children: t,
            }),
          });
        },
        h = e => {
          let { tags: t, onTagClick: n, guildId: l, section: i } = e;
          return (
            s.useEffect(() => {
              u.default.track(d.AnalyticEvents.OPEN_POPOUT, {
                type: "Discovery Tags Overflow",
                guild_id: l,
                location: {
                  page: d.AnalyticsPages.GUILD_DISCOVERY,
                  section: i,
                },
              });
            }, [l, i]),
            (0, a.jsx)(r.Dialog, {
              className: c.overflowTagsPopout,
              children: (0, a.jsx)("ul", {
                children: t.map(e =>
                  (0, a.jsx)(
                    E,
                    { onClick: () => n(e), className: c.tagAlt, text: e },
                    e
                  )
                ),
              }),
            })
          );
        },
        _ = e => {
          let { className: t, count: n } = e;
          return (0, a.jsx)(r.Popout, {
            renderPopout: () => (0, a.jsx)(h, { ...e }),
            position: "right",
            align: "top",
            closeOnScroll: !0,
            children: e =>
              (0, a.jsx)(E, { className: t, ...e, text: "+".concat(n) }),
          });
        },
        C = { DEFAULT: c.tagDefault, LIGHT: c.tagLight, ALT: c.tagAlt },
        I = e => {
          let {
              tags: t,
              onTagClick: n,
              className: l,
              discoveryTagStyle: r = C.DEFAULT,
              hideOverflow: u = !1,
              guildId: d,
              section: h,
            } = e,
            { ref: I, width: S } = (0, o.default)(),
            [m, p] = s.useState(null),
            T = t.filter(e => !f.includes(e.toLowerCase()));
          return (
            s.useLayoutEffect(() => {
              if (null == I.current || null == S || 0 === S) return;
              let e = 0,
                t = 0,
                n = S - 40 - 4;
              for (let a = 0; a < T.length; a++) {
                let s = I.current.children[a],
                  l = s.clientWidth;
                if (((t += l + 4), a === T.length - 1 ? t > n + 40 : t > n))
                  break;
                e++;
              }
              p(t => (e <= T.length ? e : t));
            }, [S, I, T]),
            (0, a.jsxs)("ul", {
              ref: I,
              className: i(c.tagContainer, l, { [c.invisible]: null == m }),
              children: [
                T.map((e, t) =>
                  (0, a.jsx)(
                    E,
                    {
                      className: r,
                      onClick: () => n(e),
                      hide: null != m && t >= m,
                      text: e,
                    },
                    e
                  )
                ),
                !u &&
                  null != m &&
                  m < T.length &&
                  (0, a.jsx)(_, {
                    className: r,
                    onTagClick: n,
                    tags: T.slice(m),
                    count: T.length - m,
                    guildId: d,
                    section: h,
                  }),
              ],
            })
          );
        };
    },
    951169: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("77078"),
        i = n("75766"),
        r = n("994428"),
        o = n("782340"),
        u = n("706366");
      function d(e) {
        let {
          onClick: t,
          onSecondaryClick: n,
          onComponentMount: d,
          markAsDismissed: c,
        } = e;
        s.useEffect(() => {
          null == d || d();
        }, [d]);
        let f = s.useCallback(
            e => {
              t(e), null == c || c(r.ContentDismissActionType.PRIMARY);
            },
            [t, c]
          ),
          E = s.useCallback(() => {
            null == n || n(),
              null == c || c(r.ContentDismissActionType.SECONDARY);
          }, [n, c]);
        return (0, a.jsxs)("div", {
          className: u.tooltipWrapper,
          children: [
            (0, a.jsx)(l.Heading, {
              className: u.tooltipHeader,
              variant: "heading-md/semibold",
              children: o.default.Messages.SERVER_DISCOVERY_TOOLTIP_TITLE,
            }),
            (0, a.jsx)(l.Text, {
              className: u.tooltipText,
              variant: "text-sm/normal",
              children:
                o.default.Messages.SERVER_DISCOVERY_TOOLTIP_DESCRIPTION.format({
                  count: i.LOWERED_MINIMUM_SIZE,
                }),
            }),
            (0, a.jsxs)("div", {
              className: u.buttonsContainer,
              children: [
                (0, a.jsx)(l.Button, {
                  fullWidth: !0,
                  size: l.Button.Sizes.SMALL,
                  color: l.Button.Colors.BRAND,
                  onClick: f,
                  children: o.default.Messages.LEARN_MORE,
                }),
                (0, a.jsx)(l.Button, {
                  fullWidth: !0,
                  size: l.Button.Sizes.SMALL,
                  look: l.Button.Looks.BLANK,
                  onClick: E,
                  children: o.default.Messages.NO_THANKS,
                }),
              ],
            }),
          ],
        });
      }
    },
    719369: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        }),
        n("424973"),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("907002"),
        i = n("948062"),
        r = n("343691");
      class o extends s.PureComponent {
        renderPlaceholders() {
          let { loadingPlaceholderCount: e } = this.props,
            t = [];
          for (let n = 0; n < e; n++)
            t.push((0, a.jsx)(i.DiscoverSearchResultPlaceholder, {}, n));
          return t;
        }
        render() {
          let { guilds: e, loading: t } = this.props;
          return (0, a.jsx)(l.Spring, {
            from: { opacity: t ? 0 : 1 },
            to: { opacity: 1 },
            delay: 100,
            children: n =>
              (0, a.jsx)(l.animated.div, {
                className: r.guildList,
                style: n,
                children:
                  t || null == e
                    ? this.renderPlaceholders()
                    : e.map(this.renderGuild),
              }),
          });
        }
        constructor(...e) {
          super(...e),
            (this.handleViewGuild = async e => {
              let {
                  guilds: t,
                  analyticsContext: n,
                  onViewGuild: a,
                } = this.props,
                s = t.findIndex(t => t.id === e);
              await a(e, s, n);
            }),
            (this.renderGuild = (e, t) => {
              let { theme: n, onTagClick: s } = this.props;
              return (0, a.jsx)(
                i.default,
                {
                  guild: e,
                  theme: n,
                  onView: this.handleViewGuild,
                  onTagClick: s,
                },
                t
              );
            });
        }
      }
      o.defaultProps = { loadingPlaceholderCount: 12 };
      var u = o;
    },
    948062: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          DiscoverSearchResultPlaceholder: function () {
            return O;
          },
          default: function () {
            return v;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("77078"),
        o = n("272030"),
        u = n("685665"),
        d = n("407063"),
        c = n("141254"),
        f = n("116616"),
        E = n("580357"),
        h = n("587974"),
        _ = n("315102"),
        C = n("794818"),
        I = n("378662"),
        S = n("574921"),
        m = n("311092"),
        p = n("613088"),
        T = n("49111"),
        g = n("782340"),
        A = n("198112"),
        N = n("68422"),
        R = n("578817");
      let O = () => (0, a.jsx)("div", { className: A.placeholder });
      var v = e => {
        var t;
        let { guild: l, theme: O, onView: v, onTagClick: L } = e,
          {
            id: M,
            discoverySplash: P,
            icon: D,
            name: y,
            description: x,
            presenceCount: b,
            memberCount: U,
            keywords: G,
          } = l,
          [j, w] = s.useState(!1),
          [k, F] = s.useState(!1),
          { analyticsLocations: B } = (0, u.default)(),
          H = _.default.getGuildDiscoverySplashURL({
            id: M,
            splash: P,
            size: 240 * (0, d.getDevicePixelRatio)(),
          }),
          V =
            null != H
              ? H
              : (function (e) {
                  switch (e) {
                    case T.ThemeTypes.DARK:
                      return N;
                    case T.ThemeTypes.LIGHT:
                      return R;
                  }
                })(O),
          Y =
            null !==
              (t = _.default.getGuildIconURL({ id: M, icon: D, size: 32 })) &&
            void 0 !== t
              ? t
              : void 0,
          W = async e => {
            let { className: t } = e.target;
            if (!t.includes("Menu")) {
              if ((0, c.isAtGuildCapAndNonPremium)()) {
                (0, f.default)({
                  analyticsSource: { page: T.AnalyticsPages.GUILD_DISCOVERY },
                  analyticsLocation: {
                    page: T.AnalyticsPages.GUILD_DISCOVERY,
                    section: T.AnalyticsSections.GUILD_CAP_UPSELL_MODAL,
                  },
                  analyticsLocations: B,
                });
                return;
              }
              F(!0);
              try {
                null != v && (await v(l.id));
              } finally {
                F(!1);
              }
            }
          };
        s.useEffect(() =>
          S.DiscoveryTagsExperiment.trackExposure({ location: "4302e4_1" })
        );
        let { shouldDisplayTags: K } = S.DiscoveryTagsExperiment.useExperiment(
            { location: "4302e4_2" },
            { autoTrackExposure: !1 }
          ),
          z = (0, I.useCanSeeDiscoveryContextMenu)();
        return (0, a.jsxs)(a.Fragment, {
          children: [
            (0, a.jsxs)("div", {
              className: A.card,
              children: [
                k
                  ? (0, a.jsx)(r.Spinner, {
                      type: r.Spinner.Type.PULSING_ELLIPSIS,
                      className: A.spinner,
                    })
                  : null,
                (0, a.jsxs)(r.Clickable, {
                  className: i(A.container, {
                    [A.hover]: j,
                    [A.submitting]: k,
                  }),
                  onClick: W,
                  onContextMenu: e => {
                    (0, o.openContextMenuLazy)(e, async () => {
                      let { default: e } = await n
                        .el("392533")
                        .then(n.bind(n, "392533"));
                      return t => (0, a.jsx)(e, { ...t, guild: l });
                    });
                  },
                  onMouseEnter: () => w(!0),
                  onMouseLeave: () => w(!1),
                  children: [
                    (0, a.jsx)("div", {
                      className: i(A.splashContainer, {
                        [A.splashContainerWithTags]: K,
                      }),
                      children: (0, a.jsx)("img", {
                        src: V,
                        alt: "",
                        className: A.splashImage,
                        width: 240,
                      }),
                    }),
                    (0, a.jsxs)("div", {
                      className: i(A.content, { [A.contentWithTags]: K }),
                      children: [
                        (0, a.jsxs)("div", {
                          className: A.header,
                          children: [
                            (0, a.jsx)(h.default, {
                              mask: h.default.Masks.SQUIRCLE,
                              width: 32,
                              height: 32,
                              children: (0, a.jsx)("img", {
                                src: Y,
                                alt: "",
                                className: A.avatar,
                              }),
                            }),
                            (0, a.jsxs)("div", {
                              className: A.headerName,
                              children: [
                                (0, a.jsx)("div", {
                                  children: (0, a.jsx)(E.default, {
                                    guild: l,
                                    className: A.guildBadge,
                                    size: 16,
                                  }),
                                }),
                                (0, a.jsx)(r.Heading, {
                                  variant: "heading-md/semibold",
                                  className: A.headerTitle,
                                  children: y,
                                }),
                              ],
                            }),
                          ],
                        }),
                        (0, a.jsx)(r.Text, {
                          className: A.description,
                          variant: "text-sm/normal",
                          children: x,
                        }),
                        K &&
                          null != G &&
                          null != L &&
                          (0, a.jsx)(m.DiscoveryTags, {
                            guildId: l.id,
                            discoveryTagStyle: m.DiscoveryTagStyle.ALT,
                            onTagClick: e => L(e, l.id),
                            tags: G,
                            section: C.AnalyticsContexts.SEARCH,
                          }),
                        (0, a.jsxs)("div", {
                          className: A.memberInfo,
                          children: [
                            null != b &&
                              (0, a.jsx)("div", {
                                className: A.memberCount,
                                children: (0, a.jsx)(r.Text, {
                                  variant: "text-xs/normal",
                                  color: "header-secondary",
                                  children:
                                    g.default.Messages.INSTANT_INVITE_GUILD_MEMBERS_ONLINE.format(
                                      { membersOnline: b }
                                    ),
                                }),
                              }),
                            null != U &&
                              (0, a.jsxs)(a.Fragment, {
                                children: [
                                  (0, a.jsx)("div", {
                                    className: A.dotSeparator,
                                  }),
                                  (0, a.jsx)("div", {
                                    className: A.memberCount,
                                    children: (0, a.jsx)(r.Text, {
                                      variant: "text-xs/normal",
                                      color: "header-secondary",
                                      children:
                                        g.default.Messages.INSTANT_INVITE_GUILD_MEMBERS_TOTAL.format(
                                          { count: U }
                                        ),
                                    }),
                                  }),
                                ],
                              }),
                          ],
                        }),
                      ],
                    }),
                    z
                      ? (0, a.jsx)("div", {
                          className: A.actionButtons,
                          children: (0, a.jsx)(p.default, { guild: l }),
                        })
                      : null,
                  ],
                }),
              ],
            }),
            (0, a.jsx)("hr", { className: A.separator }),
          ],
        });
      };
    },
    613088: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("77078"),
        o = n("433487"),
        u = n("149279"),
        d = n("392533"),
        c = n("782340"),
        f = n("663670"),
        E = function (e) {
          let { guild: t } = e,
            [n, l] = s.useState(!1),
            E = s.useCallback(() => l(!0), [l]),
            h = s.useCallback(() => l(!0), [l]);
          return (0, a.jsx)("div", {
            className: i(f.actionButtonsContainer, { [f.forceButtonsShow]: n }),
            children: (0, a.jsx)(u.default, {
              children: (0, a.jsx)(d.GuildDiscoveryMenuPopout, {
                onRequestOpen: E,
                onRequestClose: h,
                guild: t,
                children: e => {
                  let { onClick: t, ...n } = e;
                  return (0, a.jsx)(r.Tooltip, {
                    text: c.default.Messages.MORE,
                    hideOnClick: !0,
                    children: e => {
                      let { onClick: s, ...l } = e;
                      return (0, a.jsx)(u.Button, {
                        ...n,
                        ...l,
                        onClick: e => {
                          e.stopPropagation(), null == s || s(), t(e);
                        },
                        "aria-label": c.default.Messages.MORE,
                        children: (0, a.jsx)(o.default, {
                          className: f.overflowIcon,
                        }),
                      });
                    },
                  });
                },
              }),
            }),
          });
        };
    },
    738169: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        }),
        n("222007");
      var a = n("884691");
      function s(e) {
        let [t, n] = a.useState(0),
          s = a.useCallback(() => {
            let t = window.innerWidth;
            for (let a of e) {
              let [e, s] = a;
              if (t >= e) {
                n(s);
                return;
              }
            }
          }, [e]);
        return (
          a.useEffect(() => {
            s();
          }, [s]),
          a.useEffect(
            () => (
              window.addEventListener("resize", s),
              () => {
                window.removeEventListener("resize", s);
              }
            )
          ),
          t
        );
      }
    },
    697316: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var a = n("913144"),
        s = n("862853"),
        l = {
          init() {
            a.default.subscribe("CONNECTION_OPEN", () => {
              (0, s.reset)();
            }),
              a.default.subscribe("LOGOUT", () => {
                (0, s.reset)();
              });
          },
        };
    },
    473503: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("759843"),
        l = n("77078"),
        i = n("79112"),
        r = n("945330"),
        o = n("376152"),
        u = n("243632"),
        d = n("49111"),
        c = n("994428"),
        f = n("782340"),
        E = n("474309");
      let h = (e, t) => ({
        header: f.default.Messages.DROP_ENROLLMENT_CTA_TOOLTIP_HEADER.format({
          gameName: e.title,
        }),
        body: e.messages.enrollmentTooltip(t),
        imgSrc: e.assets.tooltipSrc,
        imgStyle: E.defaultDropImage,
      });
      function _(e) {
        let { markAsDismissed: t, partnerGame: n } = e;
        (0, u.useTrackDropsImpression)(
          n,
          s.ImpressionTypes.POPOUT,
          s.ImpressionNames.DROPS_QUEST_ENROLLMENT
        );
        let _ = (0, u.useDropsExperiment)(n);
        if (null == _) return null;
        let {
            header: C,
            body: I,
            imgSrc: S,
            imgStyle: m,
          } = h(_.drop, _.config.streamLengthRequirement),
          p = () => {
            t(c.ContentDismissActionType.DISMISS);
          };
        return (0, a.jsxs)("div", {
          className: E.container,
          children: [
            (0, a.jsx)("img", { src: S, alt: "", className: m }),
            (0, a.jsx)(l.Clickable, {
              className: E.buttonClose,
              "aria-label": f.default.Messages.CLOSE,
              onClick: p,
              children: (0, a.jsx)(r.default, {
                width: 16,
                height: 16,
                className: E.closeIcon,
              }),
            }),
            (0, a.jsx)(l.Heading, {
              className: E.title,
              variant: "heading-md/extrabold",
              children: C,
            }),
            (0, a.jsx)(l.Text, {
              variant: "text-sm/medium",
              className: E.subTitle,
              children: I,
            }),
            _.config.autoEnrollment
              ? (0, a.jsx)(l.Button, {
                  look: l.Button.Looks.INVERTED,
                  fullWidth: !0,
                  onClick: () => {
                    i.default.open(d.UserSettingsSections.INVENTORY),
                      t(c.ContentDismissActionType.PRIMARY);
                  },
                  children: f.default.Messages.LEARN_MORE,
                })
              : (0, a.jsx)(l.Button, {
                  innerClassName: E.button,
                  look: l.Button.Looks.INVERTED,
                  fullWidth: !0,
                  onClick: () => {
                    (0, o.enrollDropsUser)(_.drop.dropsQuestId),
                      i.default.open(d.UserSettingsSections.INVENTORY),
                      t(c.ContentDismissActionType.PRIMARY);
                  },
                  children:
                    f.default.Messages.DROPS_ELIGIBILITY_ENROLLMENT_PRIMARY_CTA,
                }),
            (0, a.jsx)(l.Button, {
              className: E.linkButtonContainer,
              innerClassName: E.linkButton,
              onClick: p,
              look: l.Button.Looks.LINK,
              fullWidth: !0,
              color: l.Button.Colors.WHITE,
              children: f.default.Messages.NOT_NOW,
            }),
            (0, a.jsx)("div", { className: E.pointer }),
          ],
        });
      }
    },
    257426: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("759843"),
        l = n("77078"),
        i = n("79112"),
        r = n("945330"),
        o = n("243632"),
        u = n("49111"),
        d = n("994428"),
        c = n("782340"),
        f = n("169489");
      let E = (e, t) => ({
        body: e.messages.completionTooltip(t),
        imgSrc: e.assets.tooltipSrc,
        imgStyle: f.defaultDropImage,
      });
      function h(e) {
        let { markAsDismissed: t, partnerGame: n } = e;
        (0, o.useTrackDropsImpression)(
          n,
          s.ImpressionTypes.POPOUT,
          s.ImpressionNames.DROPS_QUEST_COMPLETION
        );
        let h = (0, o.useDropsExperiment)(n);
        if (null == h) return null;
        let {
            body: _,
            imgSrc: C,
            imgStyle: I,
          } = E(h.drop, h.config.streamLengthRequirement),
          S = () => {
            t(d.ContentDismissActionType.DISMISS);
          };
        return (0, a.jsxs)("div", {
          className: f.container,
          children: [
            (0, a.jsx)("img", { src: C, alt: "", className: I }),
            (0, a.jsx)(l.Clickable, {
              className: f.buttonClose,
              "aria-label": c.default.Messages.CLOSE,
              onClick: S,
              children: (0, a.jsx)(r.default, {
                width: 16,
                height: 16,
                className: f.closeIcon,
              }),
            }),
            (0, a.jsx)(l.Heading, {
              className: f.title,
              variant: "heading-md/extrabold",
              children:
                c.default.Messages.DROPS_QUEST_COMPLETION_TOOLTIP_HEADER,
            }),
            (0, a.jsx)(l.Text, {
              variant: "text-sm/medium",
              className: f.subTitle,
              children: _,
            }),
            (0, a.jsx)(l.Button, {
              look: l.Button.Looks.INVERTED,
              fullWidth: !0,
              onClick: () => {
                i.default.open(u.UserSettingsSections.INVENTORY),
                  t(d.ContentDismissActionType.PRIMARY);
              },
              children: c.default.Messages.REDEEM,
            }),
            (0, a.jsx)(l.Button, {
              className: f.linkButtonContainer,
              innerClassName: f.linkButton,
              onClick: S,
              look: l.Button.Looks.LINK,
              fullWidth: !0,
              color: l.Button.Colors.WHITE,
              children: c.default.Messages.NOT_NOW,
            }),
            (0, a.jsx)("div", { className: f.pointer }),
          ],
        });
      }
    },
    587233: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var a = n("913144"),
        s = n("316272"),
        l = n("200008");
      function i(e) {
        let {
          channel: { id: t },
        } = e;
        (0, l.removeFavoriteChannel)(t);
      }
      class r extends s.default {
        _initialize() {
          a.default.subscribe("CHANNEL_DELETE", i);
        }
        _terminate() {
          a.default.unsubscribe("CHANNEL_DELETE", i);
        }
      }
      var o = new r();
    },
    683716: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return I;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("151426"),
        l = n("77078"),
        i = n("913144"),
        r = n("316272"),
        o = n("10641"),
        u = n("525065"),
        d = n("305961"),
        c = n("957255"),
        f = n("867965"),
        E = n("49111"),
        h = n("994428");
      let _ = e => {
        var t;
        let n = d.default.getGuild(e),
          a = !!(null == n ? void 0 : n.hasFeature(E.GuildFeatures.COMMUNITY)),
          l = c.default.can(E.Permissions.MANAGE_CHANNELS, n),
          i = (0, o.isDismissibleContentDismissed)(
            s.DismissibleContent.FORUM_CHANNEL_UPSELL_MODAL
          ),
          r =
            null !== (t = u.default.getMemberCount(e)) && void 0 !== t ? t : 0;
        return a && l && !i && r >= 200;
      };
      class C extends r.default {
        _initialize() {
          i.default.subscribe("CHANNEL_SELECT", this.handleChannelSelect);
        }
        _terminate() {
          i.default.unsubscribe("CHANNEL_SELECT", this.handleChannelSelect);
        }
        handleChannelSelect(e) {
          let { guildId: t } = e;
          if (null == t) return;
          let i = _(t);
          if (!i) return;
          (0, f.trackForumUpsellModalViewed)(),
            (0, o.requestMarkDismissibleContentAsShown)(
              s.DismissibleContent.FORUM_CHANNEL_UPSELL_MODAL
            );
          let r = function () {
            let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : h.ContentDismissActionType.DISMISS;
            (0, o.markDismissibleContentAsDismissed)(
              s.DismissibleContent.FORUM_CHANNEL_UPSELL_MODAL,
              { dismissAction: e }
            );
          };
          (0, l.openModalLazy)(
            async () => {
              let { default: e } = await n
                .el("135430")
                .then(n.bind(n, "135430"));
              return n =>
                (0, a.jsx)(e, {
                  ...n,
                  onClose: e => {
                    r(e), n.onClose();
                  },
                  guildId: t,
                  shouldUpsellCreation: !0,
                });
            },
            {
              onCloseCallback: () =>
                (0, o.markDismissibleContentAsDismissed)(
                  s.DismissibleContent.FORUM_CHANNEL_UPSELL_MODAL,
                  { dismissAction: h.ContentDismissActionType.DISMISS }
                ),
              onCloseRequest: E.NOOP_NULL,
            }
          );
        }
      }
      var I = new C();
    },
    258516: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          isInFriendSuggestionSeenStateExperiment: function () {
            return l;
          },
        }),
        n("222007"),
        n("65597");
      var a = n("862205");
      n("47319"), n("697218"), n("49111");
      (0, a.createExperiment)({
        kind: "user",
        id: "2023-10_friend_finder_launch",
        label: "Friend Finder Launch Experiment",
        defaultConfig: { enabled: !1 },
        treatments: [
          { id: 1, label: "Enable Friend Finder", config: { enabled: !0 } },
        ],
      }),
        (0, a.createExperiment)({
          kind: "user",
          id: "2023-03_friend_finder",
          label: "Friend Finder User Experiment",
          defaultConfig: { enabled: !1 },
          treatments: [
            { id: 1, label: "Enable Friend Finder", config: { enabled: !0 } },
          ],
        }),
        (0, a.createExperiment)({
          kind: "user",
          id: "2023-10_friend_finder_virginia",
          label: "Friend Finder User Experiment for Virginia",
          defaultConfig: { enabled: !1 },
          treatments: [
            {
              id: 1,
              label: "Enable Friend Finder in Virginia",
              config: { enabled: !0 },
            },
          ],
        }),
        (0, a.createExperiment)({
          kind: "user",
          id: "2023-03_friend_finder_employees",
          label: "Friend Finder Employees User Experiment",
          defaultConfig: { enabled: !1 },
          treatments: [
            { id: 1, label: "Enable Friend Finder", config: { enabled: !0 } },
          ],
        }),
        (0, a.createExperiment)({
          kind: "user",
          id: "2023-06_guild_contact_invite_imessage_overlay",
          label: "Friend Finder guild contact invite imessage overlay",
          defaultConfig: { enabled: !1 },
          treatments: [
            {
              id: 1,
              label: "Enable iMessage Overlay",
              config: { enabled: !0 },
            },
          ],
        }),
        (0, a.createExperiment)({
          kind: "user",
          id: "2023-10_username_lookup_killswitch",
          label: "Friend Finder Username Lookup Killswitch",
          defaultConfig: { enabled: !1 },
          treatments: [
            {
              id: 1,
              label: "Enable the Username Lookup",
              config: { enabled: !0 },
            },
          ],
        }),
        (0, a.createExperiment)({
          kind: "user",
          id: "2023-11_friend_finder_sync",
          label: "Friend Finder Sync",
          defaultConfig: { enabled: !1 },
          treatments: [
            {
              id: 1,
              label: "Enable Friend Finder Sync",
              config: { enabled: !0 },
            },
          ],
        });
      let s = (0, a.createExperiment)({
        kind: "user",
        id: "2023-12_friend_suggestion_seen_state",
        label: "Friend Suggestions Seen State",
        defaultConfig: { enabled: !1 },
        treatments: [
          {
            id: 1,
            label: "Enable Friend Suggestion Seen State",
            config: { enabled: !0 },
          },
        ],
      });
      function l(e) {
        let { enabled: t } = s.getCurrentConfig(
          { location: null != e ? e : "friend_suggestions" },
          { autoTrackExposure: !0 }
        );
        return t;
      }
    },
    390790: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("872717"),
        s = n("913144"),
        l = n("258516"),
        i = n("49111"),
        r = {
          async fetch() {
            try {
              let e = await a.default.get({
                url: i.Endpoints.FRIEND_SUGGESTIONS,
              });
              s.default.dispatch({
                type: "LOAD_FRIEND_SUGGESTIONS_SUCCESS",
                suggestions: e.body,
              });
            } catch (e) {
              s.default.dispatch({ type: "LOAD_FRIEND_SUGGESTIONS_FAILURE" });
            }
          },
          ignore(e) {
            a.default.delete(i.Endpoints.FRIEND_SUGGESTION(e));
          },
          async viewSuggestions(e) {
            if ((0, l.isInFriendSuggestionSeenStateExperiment)())
              try {
                await a.default.post({
                  url: i.Endpoints.FRIEND_FINDER_VIEWED_SUGGESTIONS,
                  body: { viewed_user_ids: e },
                  retries: 1,
                }),
                  s.default.dispatch({
                    type: "VIEWED_FRIEND_SUGGESTIONS_SUCCESS",
                    userIds: e,
                  });
              } catch (e) {
                s.default.dispatch({
                  type: "VIEWED_FRIEND_SUGGESTIONS_FAILURE",
                });
              }
          },
        };
    },
    449004: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return m;
          },
        }),
        n("222007"),
        n("808653");
      var a = n("917351"),
        s = n.n(a),
        l = n("446674"),
        i = n("913144"),
        r = n("258516"),
        o = n("766274"),
        u = n("697218"),
        d = n("390790");
      let c = {},
        f = 0,
        E = !1,
        h = !1,
        _ = new Set(),
        C = new Set();
      function I(e, t) {
        var n;
        let a =
          null != e.contact_names && e.contact_names.length >= 2
            ? e.contact_names.slice(0, 2)
            : [];
        return {
          key: e.suggested_user.id,
          name:
            null === (n = s.first(e.reasons)) || void 0 === n ? void 0 : n.name,
          user: new o.default(e.suggested_user),
          mutualFriendsCount: e.mutual_friends_count,
          contactNames: a,
          isUnseen: !t && !e.is_viewed,
        };
      }
      (0, a.debounce)(e => d.default.viewSuggestions(e), 15e3);
      class S extends l.default.Store {
        initialize() {
          this.waitFor(u.default);
        }
        getSuggestionCount() {
          return f;
        }
        getSuggestions() {
          return Object.entries(c).map(e => {
            let [t, n] = e;
            return n;
          });
        }
        getSuggestion(e) {
          return c[e];
        }
      }
      S.displayName = "FriendSuggestionStore";
      var m = new S(i.default, {
        CONNECTION_OPEN: function (e) {
          (c = {}),
            (f = e.friendSuggestionCount) > 0 &&
              ((h = !0), E || !h || ((E = !0), (h = !1), d.default.fetch()));
        },
        FRIEND_SUGGESTION_CREATE: function (e) {
          let t = I(e.suggestion);
          if (null != c[t.key]) return !1;
          f++, (c = { ...c, [t.key]: t });
        },
        FRIEND_SUGGESTION_DELETE: function (e) {
          (f = Math.max(0, --f)), delete c[e.suggestedUserId];
        },
        LOAD_FRIEND_SUGGESTIONS_SUCCESS: function (e) {
          (E = !1),
            (c = (function (e) {
              let t =
                  e.reduce((e, t) => e + (t.is_viewed ? 0 : 1), 0) === e.length,
                n = !(0, r.isInFriendSuggestionSeenStateExperiment)() || t;
              return s
                .chain(e)
                .map(e => I(e, n))
                .keyBy(e => e.key)
                .value();
            })(e.suggestions)),
            (f = s.keys(c).length);
        },
        LOAD_FRIEND_SUGGESTIONS_FAILURE: function () {
          (E = !1), (c = {});
        },
        VIEWED_FRIEND_SUGGESTIONS_SUCCESS: function (e) {
          e.userIds.forEach(e => {
            _.add(e), C.delete(e);
          });
        },
      });
    },
    167715: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return C;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("414456"),
        l = n.n(s),
        i = n("446674"),
        r = n("77078"),
        o = n("235660"),
        u = n("998564"),
        d = n("420145"),
        c = n("209969"),
        f = n("171644"),
        E = n("782340"),
        h = n("891097");
      function _(e) {
        let { platform: t } = e;
        return t === f.GameConsoleTypes.XBOX
          ? (0, a.jsx)(d.default, { className: h.icon })
          : t === f.GameConsoleTypes.PLAYSTATION
            ? (0, a.jsx)(u.default, { className: h.icon })
            : null;
      }
      function C(e) {
        let { voiceState: t, awaitingRemoteSessionInfo: n } = e,
          s = null != n ? (0, c.coercePlatformTypeToConsoleType)(n.type) : null,
          u = (0, i.useStateFromStores)([o.default], () => {
            var e, n;
            return null ===
              (e = o.default.getSessionById(
                null !== (n = null == t ? void 0 : t.sessionId) && void 0 !== n
                  ? n
                  : ""
              )) || void 0 === e
              ? void 0
              : e.clientInfo.os;
          }),
          d = null != s ? s : u;
        if (null == d || !f.GAME_CONSOLE_SESSIONS.has(d)) return null;
        let C = null != n,
          I = C
            ? d === f.GameConsoleTypes.XBOX
              ? E.default.Messages.XBOX_TRANSFERRING_ELLIPSIS
              : E.default.Messages.PLAYSTATION_TRANSFERRING_ELLIPSIS
            : d === f.GameConsoleTypes.XBOX
              ? E.default.Messages.XBOX_REMOTE_CONNECTED.format()
              : E.default.Messages.PLAYSTATION_REMOTE_CONNECTED.format();
        return (0, a.jsxs)("div", {
          className: l(h.root, C ? h.connecting : h.connected),
          children: [
            (0, a.jsx)(_, { platform: d }),
            (0, a.jsx)(r.Text, {
              color: C ? "header-primary" : "always-white",
              variant: "text-xs/medium",
              children: I,
            }),
          ],
        });
      }
    },
    132943: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        }),
        n("222007");
      var a = n("913144"),
        s = n("823411"),
        l = n("605250"),
        i = n("546463");
      let r = {};
      function o(e) {
        let { name: t, hash: n, missingData: a } = e;
        for (let e of (i.default.markGameReported(t), a))
          if ("icon" === e) {
            let e = r[t];
            null != e && s.default.uploadIcon(t, n, e);
            return;
          } else
            new (0, l.default)("GameStoreIconManager").log(
              "Could not find missing data key: ".concat(e)
            );
      }
      function u(e) {
        let { gameName: t, icon: n } = e;
        r[t] = n;
      }
      var d = {
        initialize() {
          a.default.subscribe("UNVERIFIED_GAME_UPDATE", o),
            a.default.subscribe("GAME_ICON_UPDATE", u);
        },
      };
    },
    319769: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var a = n("913144"),
        s = n("299285"),
        l = n("269180"),
        i = n("860285");
      function r(e) {
        let { gameId: t } = e;
        !(function (e) {
          let t;
          let n = i.default.launchableGames[e],
            r = s.default.getApplication(e);
          (t =
            null != r
              ? l.default.isLaunchable(r)
              : l.default.isGameLaunchable(e)).then(t => {
            t !== n &&
              a.default.dispatch({
                type: "GAME_LAUNCHABLE_UPDATE",
                gameId: e,
                isLaunchable: t,
              });
          });
        })(t);
      }
      var o = {
        initialize() {
          a.default.subscribe("CHECK_LAUNCHABLE_GAME", r);
        },
      };
    },
    506377: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var a = n("70614"),
        s = n("686470"),
        l = n("167726"),
        i = {
          init() {
            s.default.whenInitialized(() => {
              null != l.default.testModeApplicationId &&
                (0, a.authorizeAndSetTestModeApplication)(
                  l.default.testModeApplicationId,
                  l.default.testModeOriginURL
                );
            });
          },
        };
    },
    318915: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        }),
        n("70102");
      var a = n("913144"),
        s = n("190017"),
        l = n("271938"),
        i = n("602043");
      function r() {
        if (!(0, i.isSupportedPlatform)()) return;
        let e = l.default.getToken(),
          t = l.default.getId();
        if (null == e) throw Error("missing user token");
        s.init(e, t);
      }
      function o() {
        s.destroy();
      }
      var u = {
        init() {
          a.default.subscribe("CONNECTION_OPEN", r),
            a.default.subscribe("LOGOUT", o);
        },
      };
    },
    288207: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        }),
        n("222007");
      let a = new Set(["nvidia"]);
      function s(e) {
        for (let t of Object.keys(e)) {
          let n = e[t];
          if (null != n && null == n.error && a.has(t)) return !0;
        }
        return !1;
      }
    },
    439792: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        }),
        n("222007");
      var a = n("570277"),
        s = n.n(a),
        l = n("773336");
      let i = {
        [l.PlatformTypes.WINDOWS]: { nvidia: "<=537.58.0 || >=546.31" },
      };
      function r(e) {
        let t = i[(0, l.getPlatform)()];
        if (null == t) return !1;
        for (let n of Object.keys(e)) {
          let a = e[n],
            l = t[n];
          if (null == a || null == l || null != a.error) continue;
          let i = (function (e) {
            var t, n;
            return ""
              .concat(null !== (t = e.major) && void 0 !== t ? t : 0, ".")
              .concat(null !== (n = e.minor) && void 0 !== n ? n : 0, ".0");
          })(a);
          if (!s.satisfies(i, l)) return !0;
        }
        return !1;
      }
    },
    709496: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        }),
        n("222007");
      var a = n("570277"),
        s = n.n(a),
        l = n("773336");
      let i = { [l.PlatformTypes.WINDOWS]: { nvidia: ">=397.93.0" } };
      function r(e) {
        let t = i[(0, l.getPlatform)()];
        if (null == t) return !1;
        for (let n of Object.keys(e)) {
          let a = e[n],
            l = t[n];
          if (null == a || null == l || null != a.error) continue;
          let i = (function (e) {
            var t, n;
            return ""
              .concat(null !== (t = e.major) && void 0 !== t ? t : 0, ".")
              .concat(null !== (n = e.minor) && void 0 !== n ? n : 0, ".0");
          })(a);
          if (!s.satisfies(i, l)) return !0;
        }
        return !1;
      }
    },
    767960: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        });
      var a = n("446674"),
        s = n("913144"),
        l = n("773336"),
        i = n("50885"),
        r = n("288207"),
        o = n("439792"),
        u = n("709496");
      let d = !1,
        c = !0,
        f = !1;
      class E extends a.default.Store {
        initialize() {
          !(!l.isPlatformEmbedded || __OVERLAY__) &&
            i.default.getGPUDriverVersions().then(e => {
              (d = (0, u.default)(e)),
                (c = (0, r.default)(e)),
                (f = (0, o.default)(e)),
                this.emitChange();
            });
        }
        get GPUDriversOutdated() {
          return d;
        }
        get canUseHardwareAcceleration() {
          return c;
        }
        get problematicGPUDriver() {
          return f;
        }
        getState() {
          return {
            GPUDriversOutdated: d,
            canUseHardwareAcceleration: c,
            problematicGPUDriver: f,
          };
        }
      }
      E.displayName = "StreamingCapabilitiesStore";
      var h = new E(s.default, {
        OVERLAY_INITIALIZE: function (e) {
          let { streamingCapabilitiesStoreState: t } = e;
          (d = t.GPUDriversOutdated), (c = t.canUseHardwareAcceleration);
        },
      });
    },
    712258: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        });
      var a = n("990766"),
        s = n("161454"),
        l = n("373469"),
        i = n("42203"),
        r = n("305961"),
        o = n("42887"),
        u = n("957255"),
        d = n("18494"),
        c = n("703370"),
        f = n("223913"),
        E = n("479788"),
        h = n("375202");
      function _() {
        let e =
          !(arguments.length > 0) || void 0 === arguments[0] || arguments[0];
        if (
          !(0, E.default)(o.default) ||
          null != l.default.getCurrentUserActiveStream()
        )
          return !1;
        let t = (0, h.default)(s.default, c.default);
        if (null == t || (t.isLauncher && !e)) return !1;
        let n = d.default.getVoiceChannelId(),
          _ = i.default.getChannel(n);
        if (null == _) return !1;
        let C = _.getGuildId();
        return (
          !!(0, f.canStreamInChannel)(_, r.default, u.default, !1) &&
          ((0, a.startStream)(C, _.id, { pid: t.pid }), !0)
        );
      }
    },
    145067: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          showGuildHeaderPopout: function () {
            return i;
          },
          useGuildHeaderPopoutStore: function () {
            return r;
          },
        });
      var a = n("308503");
      let s = Object.freeze({ isPopoutOpen: !1 }),
        l = (0, a.default)(e => s),
        i = e => {
          l.setState(() => ({ isPopoutOpen: e }));
        },
        r = l;
    },
    963103: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var a = n("316693"),
        s = n("446674"),
        l = n("923959"),
        i = n("957255"),
        r = n("49111");
      function o(e) {
        let t = (0, s.useStateFromStores)(
          [l.default],
          () => {
            var t;
            return null !==
              (t = l.default.getChannels(e)[l.GUILD_SELECTABLE_CHANNELS_KEY]) &&
              void 0 !== t
              ? t
              : [];
          },
          [e]
        );
        if (0 === t.length) return 0;
        let n = t.filter(e => {
          let { channel: t } = e;
          return i.default.can(
            a.default.combine(
              r.Permissions.SEND_MESSAGES,
              r.Permissions.VIEW_CHANNEL
            ),
            t
          );
        });
        return n.length;
      }
    },
    48821: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("446674"),
        l = n("77078"),
        i = n("363025"),
        r = n("963662"),
        o = n("592407"),
        u = n("735201"),
        d = n("427459"),
        c = n("49111"),
        f = n("782340"),
        E = n("557659"),
        h = e => {
          let { guild: t } = e,
            n = t.id,
            h = (0, s.useStateFromStores)([u.default], () =>
              u.default.getAppliedGuildBoostsForGuild(t.id)
            );
          return null == h ||
            0 >= (0, d.appliedGuildBoostsRequiredForPerks)(h, n)
            ? null
            : (0, a.jsx)(r.default, {
                guild: t,
                onDismissed: () => {
                  (0, i.hidePremiumGuildGracePeriodNotice)(n);
                },
                onClick: () => {
                  o.default.open(n, c.GuildSettingsSections.GUILD_PREMIUM);
                },
                message: f.default.Messages.PREMIUM_GUILD_GRACE_PERIOD_NOTICE,
                trackingSource: c.ChannelNoticeCtaSources.GRACE_PERIOD_NOTICE,
                type: c.ChannelNoticeTypes.GUILD_BOOSTING_GRACE_PERIOD,
                image: E,
                cta: f.default.Messages
                  .PREMIUM_GUILD_GRACE_PERIOD_NOTICE_BUTTON,
                ctaColor: l.ButtonColors.PRIMARY,
              });
        };
    },
    388437: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("812204"),
        l = n("685665"),
        i = n("963662"),
        r = n("379532"),
        o = n("427459"),
        u = n("49111"),
        d = n("994428"),
        c = n("944305"),
        f = n("782340"),
        E = n("65016");
      function h(e) {
        let { guild: t, markAsDismissed: n } = e,
          h = (0, o.getNumberOfAppliedBoostsNeededForTier)(
            t,
            u.BoostedGuildTiers.TIER_2
          ),
          { analyticsLocations: _ } = (0, l.default)(
            s.default.GUILD_BANNER_NOTICE
          );
        return (0, a.jsx)(i.default, {
          guild: t,
          onDismissed: () => n(d.ContentDismissActionType.UNKNOWN),
          cta: f.default.Messages.GUILD_BANNER_NOTICE_CTA,
          message: f.default.Messages.GUILD_BANNER_NOTICE.format({
            boostsNeeded: h,
          }),
          type: u.ChannelNoticeTypes.GUILD_BANNER,
          image: E,
          onClick: () =>
            (0, r.default)({
              analyticsLocations: _,
              analyticsSourceLocation: {
                section: u.AnalyticsSections.CHANNEL_NOTICE,
                object: u.AnalyticsObjects.SERVER_BANNER_TOOLTIP,
              },
              guild: t,
              perks: (0, c.guildBannerUpsellPerks)(),
            }),
          imageMarginTop: 15,
          imageMarginX: 22,
        });
      }
    },
    667048: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("446674"),
        i = n("963662"),
        r = n("95039"),
        o = n("525065"),
        u = n("49111"),
        d = n("994428"),
        c = n("782340"),
        f = n("367574");
      class E extends s.PureComponent {
        render() {
          let { guild: e, memberCount: t, markAsDismissed: n } = this.props;
          return (0, a.jsx)(i.default, {
            guild: e,
            onDismissed: () => n(d.ContentDismissActionType.UNKNOWN),
            onClick: this.handleButtonClick,
            message:
              null == t || t < 30
                ? c.default.Messages
                    .PREMIUM_GUILD_SUBSCRIPTION_NOTICE_SMALL_GUILD
                : c.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_NOTICE,
            cta: c.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_NOTICE_BUTTON,
            trackingSource: u.ChannelNoticeCtaSources.GUILD_SUBSCRIPTION_NOTICE,
            type: u.ChannelNoticeTypes.GUILD_BOOSTING,
            image: f,
            imageMarginX: 26,
          });
        }
        constructor(...e) {
          super(...e),
            (this.handleButtonClick = () => {
              let { guild: e } = this.props;
              (0, r.openGuildBoostingMarketingModal)({
                guildId: e.id,
                location: {
                  section: u.AnalyticsSections.CHANNEL_NOTICE,
                  object: u.AnalyticsObjects.SERVER_STATUS_CTA,
                },
              });
            });
        }
      }
      var h = l.default.connectStores([o.default], e => {
        let { guild: t } = e;
        return { memberCount: o.default.getMemberCount(t.id) };
      })(E);
    },
    580362: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useIsContentDismissed: function () {
            return E;
          },
          markContentAsDismissed: function () {
            return h;
          },
        });
      var a = n("446674"),
        s = n("151426"),
        l = n("872173"),
        i = n("374363"),
        r = n("599110"),
        o = n("674268"),
        u = n("49111"),
        d = n("994428"),
        c = n("397336");
      function f(e, t) {
        let n = i.default.getDismissedGuildContent(t);
        return null != n && (0, o.hasBit)(n, e);
      }
      function E(e, t) {
        return (0, a.useStateFromStores)([i.default], () => f(e, t));
      }
      function h(e, t, n, a) {
        (0, l.updateUserGuildSettings)(
          t,
          n => {
            if (f(e, t)) return !1;
            n.dismissedGuildContent = (0, o.addBit)(n.dismissedGuildContent, e);
          },
          c.UserSettingsDelay.INFREQUENT_USER_ACTION
        ),
          n &&
            r.default.track(u.AnalyticEvents.DISMISSIBLE_CONTENT_DISMISSED, {
              type: s.DismissibleGuildContent[e],
              guild_id: t,
              action: null != a ? a : d.ContentDismissActionType.UNKNOWN,
            });
      }
    },
    754707: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("151426"),
        i = n("77078"),
        r = n("402309"),
        o = n("599110"),
        u = n("991170"),
        d = n("580362"),
        c = n("49111"),
        f = n("994428"),
        E = n("695838"),
        h = n("69741");
      function _(e) {
        var t;
        let _ = (0, r.useCanCurrentUserViewDisableUnsafeGuildSettingsNotice)(e),
          C = h.MODERATOR_PERMISSIONS.some(
            t =>
              (null == e ? void 0 : e.id) !== E.FAVORITES_RAW_GUILD_ID &&
              u.default.canEveryone(t, e)
          ),
          I =
            (null == e ? void 0 : e.defaultMessageNotifications) ===
            c.UserNotificationSettings.ALL_MESSAGES,
          S = (0, d.useIsContentDismissed)(
            l.DismissibleGuildContent
              .DISABLE_UNSAFE_COMMUNITY_PERMISSIONS_NOTICE,
            null !== (t = null == e ? void 0 : e.id) && void 0 !== t
              ? t
              : c.EMPTY_STRING_SNOWFLAKE_ID
          ),
          m = _ && (C || I) && !S,
          p = s.useCallback(() => {
            var t;
            (0, d.markContentAsDismissed)(
              l.DismissibleGuildContent
                .DISABLE_UNSAFE_COMMUNITY_PERMISSIONS_NOTICE,
              null !== (t = null == e ? void 0 : e.id) && void 0 !== t
                ? t
                : c.EMPTY_STRING_SNOWFLAKE_ID,
              !0,
              f.ContentDismissActionType.DISMISS
            );
          }, [e]),
          T = s.useRef(!1);
        s.useEffect(() => {
          if (m && !T.current) {
            var t;
            (0, i.openModalLazy)(
              async () => {
                let { default: t } = await n
                  .el("675454")
                  .then(n.bind(n, "675454"));
                return n =>
                  (0, a.jsx)(t, {
                    guild: e,
                    canEveryoneModerate: C,
                    isDefaultNotificationsAllMessages: I,
                    ...n,
                  });
              },
              { onCloseCallback: p }
            ),
              o.default.track(c.AnalyticEvents.DISMISSIBLE_CONTENT_SHOWN, {
                type: l.DismissibleGuildContent[
                  l.DismissibleGuildContent
                    .DISABLE_UNSAFE_COMMUNITY_PERMISSIONS_NOTICE
                ],
                guild_id:
                  null !== (t = null == e ? void 0 : e.id) && void 0 !== t
                    ? t
                    : c.EMPTY_STRING_SNOWFLAKE_ID,
              }),
              (T.current = !0);
          }
        }, [C, e, p, I, m]);
      }
    },
    720102: function (e, t, n) {
      "use strict";
      n.r(t);
      var a = n("446674"),
        s = n("913144"),
        l = n("162771"),
        i = n("599110"),
        r = n("49111");
      let o = {};
      function u(e) {
        var t;
        if (null == e || e === r.ME || e === r.FAVORITES) return !1;
        let n = null !== (t = o[e]) && void 0 !== t ? t : 0;
        if (Date.now() <= n + 288e5) return !1;
        (o[e] = Date.now()),
          i.default.track(r.AnalyticEvents.HIGHLIGHTS_TEST_LOADED, {
            guild_id: e,
          });
      }
      class d extends a.default.PersistedStore {
        initialize(e) {
          this.waitFor(l.default),
            null != e && (o = e.lastHighlightsLoadMillis);
        }
        getState() {
          return { lastHighlightsLoadMillis: o };
        }
      }
      (d.displayName = "HighlightsTestStore"),
        (d.persistKey = "HighlightsTestStore"),
        new d(s.default, {
          CONNECTION_OPEN: function () {
            let e = l.default.getGuildId();
            return u(e);
          },
          CHANNEL_SELECT: function (e) {
            let { guildId: t } = e;
            return u(t);
          },
        });
    },
    444752: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("77078"),
        l = n("476263"),
        i = n("782340"),
        r = n("874426"),
        o = n("270111"),
        u = e => {
          let {
            headerId: t,
            reapplyText: n,
            onReapply: u,
            confirmText: d,
            onConfirm: c,
            rejectionReason: f = null,
            guild: E = null,
          } = e;
          return (0, a.jsxs)("div", {
            className: r.confirmation,
            children: [
              (0, a.jsxs)("div", {
                className: r.confirmationContent,
                children: [
                  null !== E
                    ? (0, a.jsx)(l.default, {
                        size: l.default.Sizes.LARGER,
                        guild: E,
                        className: r.guildIcon,
                      })
                    : (0, a.jsx)("img", {
                        alt: i.default.Messages
                          .MEMBER_VERIFICATION_APPLICATION_REJECTED_ICON,
                        src: o,
                        className: r.verificationStateIcon,
                      }),
                  (0, a.jsx)(s.Heading, {
                    id: t,
                    variant: "heading-xl/semibold",
                    className: r.header,
                    children:
                      (null == E ? void 0 : E.name) != null
                        ? i.default.Messages.MEMBER_VERIFICATION_APPLICATION_REJECTED_TITLE_WITH_GUILD_NAME.format(
                            { guildName: E.name }
                          )
                        : i.default.Messages
                            .MEMBER_VERIFICATION_APPLICATION_REJECTED_TITLE,
                  }),
                  null != f && "" !== f
                    ? (0, a.jsx)(a.Fragment, {
                        children: (0, a.jsxs)(s.Text, {
                          variant: "text-sm/normal",
                          children: [
                            (0, a.jsx)("span", {
                              className: r.rejectionReasonLabel,
                              children:
                                i.default.Messages
                                  .MEMBER_VERIFICATION_APPLICATION_REJECTED_REASON,
                            }),
                            (0, a.jsx)("span", {
                              className: r.rejectionReason,
                              children: f,
                            }),
                          ],
                        }),
                      })
                    : null,
                ],
              }),
              (0, a.jsxs)("div", {
                className: r.confirmationButtonRow,
                children: [
                  (0, a.jsx)(s.Button, {
                    onClick: u,
                    color: s.Button.Colors.PRIMARY,
                    className: r.confirmationButton,
                    children: n,
                  }),
                  (0, a.jsx)(s.Button, {
                    onClick: c,
                    color: s.Button.Colors.PRIMARY,
                    className: r.confirmationButton,
                    children: d,
                  }),
                ],
              }),
            ],
          });
        };
    },
    437942: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("77078"),
        l = n("476263"),
        i = n("782340"),
        r = n("874426"),
        o = n("158463"),
        u = e => {
          let { onCancel: t, onLeave: n, guild: u = null } = e;
          return (0, a.jsxs)("div", {
            className: r.confirmation,
            children: [
              (0, a.jsxs)("div", {
                className: r.confirmationContent,
                children: [
                  null !== u
                    ? (0, a.jsx)(l.default, {
                        size: l.default.Sizes.LARGER,
                        guild: u,
                        className: r.guildIcon,
                      })
                    : (0, a.jsx)("img", {
                        alt: i.default.Messages
                          .MEMBER_VERIFICATION_PENDING_APPLICATION_ICON,
                        src: o,
                        className: r.verificationStateIcon,
                      }),
                  (0, a.jsx)(s.Heading, {
                    variant: "heading-xl/semibold",
                    className: r.header,
                    children:
                      (null == u ? void 0 : u.name) != null
                        ? i.default.Messages.MEMBER_VERIFICATION_APPLICATION_CONFIRMATION_TITLE_WITH_GUILD_NAME.format(
                            { guildName: u.name }
                          )
                        : i.default.Messages
                            .MEMBER_VERIFICATION_APPLICATION_CONFIRMATION_TITLE,
                  }),
                  (0, a.jsx)(s.Text, {
                    variant: "text-sm/normal",
                    color: "header-secondary",
                    children:
                      i.default.Messages
                        .MEMBER_VERIFICATION_APPLICATION_CONFIRMATION_SUBTITLE,
                  }),
                ],
              }),
              (0, a.jsxs)("div", {
                className: r.confirmationButtonColumn,
                children: [
                  (0, a.jsx)(s.Button, {
                    onClick: t,
                    look: s.Button.Looks.LINK,
                    color: s.Button.Colors.LINK,
                    size: s.Button.Sizes.SMALL,
                    children:
                      i.default.Messages.MEMBER_VERIFICATION_CANCEL_APPLICATION,
                  }),
                  (0, a.jsx)(s.Button, {
                    onClick: n,
                    look: s.Button.Looks.LINK,
                    color: s.Button.Colors.LINK,
                    size: s.Button.Sizes.SMALL,
                    children:
                      i.default.Messages
                        .MEMBER_VERIFICATION_PENDING_APPLICATION_MODAL_WITHDRAW_AND_LEAVE,
                  }),
                ],
              }),
            ],
          });
        };
    },
    546102: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return N;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("446674"),
        i = n("77078"),
        r = n("393414"),
        o = n("305961"),
        u = n("554054"),
        d = n("831588"),
        c = n("315102"),
        f = n("549103"),
        E = n("50926"),
        h = n("526253"),
        _ = n("567054"),
        C = n("982527"),
        I = n("444752"),
        S = n("437942"),
        m = n("267235"),
        p = n("49111"),
        T = n("289382"),
        g = n("782340"),
        A = n("176967"),
        N = e => {
          var t;
          let { guildId: n, inviteCode: N } = e,
            [R, O] = s.useState(T.WaveStates.INITIAL),
            v = (0, l.useStateFromStores)([h.default], () => h.default.get(n)),
            L = (0, l.useStateFromStores)([C.default], () =>
              C.default.getRequest(n)
            ),
            M = (0, l.useStateFromStores)([o.default], () =>
              o.default.getGuild(n)
            ),
            { hasFetchedRequestToJoinGuilds: P, guildPreviewDisabled: D } = (0,
            l.useStateFromStoresObject)([C.default], () => ({
              hasFetchedRequestToJoinGuilds:
                C.default.hasFetchedRequestToJoinGuilds,
              guildPreviewDisabled: C.default.getJoinRequestGuild(n),
            }));
          s.useEffect(() => {
            null != M && (0, r.transitionTo)(p.Routes.CHANNEL(n));
          }, [M, n]),
            s.useEffect(() => {
              !P && f.default.fetchRequestToJoinGuilds();
            }, [P]);
          let y = s.useCallback(e => {
              O(t => Math.max(t, e));
            }, []),
            x = (e, t) => () => {
              (0, i.openModal)(n =>
                (0, a.jsx)(i.ConfirmModal, {
                  header:
                    g.default.Messages.MEMBER_VERIFICATION_CONFIRM_LEAVE_TITLE,
                  cancelText: g.default.Messages.NEVERMIND,
                  onConfirm: t,
                  confirmText: g.default.Messages.YES_TEXT,
                  confirmButtonColor: i.Button.Colors.RED,
                  ...n,
                  children: (0, a.jsx)(i.Text, {
                    variant: "text-sm/normal",
                    color: "header-secondary",
                    children: e,
                  }),
                })
              );
            },
            b = async e => {
              await E.default.submitVerificationForm(n, e);
            },
            U = () => {
              f.default.resetGuildJoinRequest(n);
            },
            G = x(
              g.default.Messages.LEAVE_SERVER_BODY.format({
                name: null == M ? void 0 : M.toString(),
              }),
              () => {
                O(Math.max(R, T.WaveStates.FILLING)),
                  f.default.removeGuildJoinRequest(n),
                  (0, r.transitionTo)(p.Routes.ME);
              }
            ),
            j =
              (null == v
                ? void 0
                : null === (t = v.guild) || void 0 === t
                  ? void 0
                  : t.splash) != null
                ? c.default.getGuildSplashURL({
                    id: v.guild.id,
                    splash: v.guild.splash,
                  })
                : (0, d.getArtForPath)();
          return (0, a.jsx)("div", {
            className: A.page,
            children: (0, a.jsxs)(u.default, {
              embedded: !0,
              splash: j,
              waveState: R,
              showLogo: !1,
              updateWaveState: y,
              children: [
                (0, a.jsx)("div", { className: A.dragRegion }),
                (0, a.jsx)("div", {
                  className: A.contentWrapper,
                  children: (() => {
                    switch (null == L ? void 0 : L.applicationStatus) {
                      case _.GuildJoinRequestApplicationStatuses.SUBMITTED:
                        return (0, a.jsx)(S.default, {
                          onCancel: x(
                            g.default.Messages
                              .MEMBER_VERIFICATION_CANCEL_PENDING_APPLICATION_MODAL_TITLE,
                            U
                          ),
                          onLeave: G,
                          guild: D,
                        });
                      case _.GuildJoinRequestApplicationStatuses.REJECTED:
                        return (0, a.jsx)(I.default, {
                          reapplyText:
                            g.default.Messages
                              .MEMBER_VERIFICATION_APPLICATION_REAPPLY,
                          onReapply: U,
                          confirmText: g.default.Messages.LEAVE_SERVER,
                          onConfirm: G,
                          rejectionReason:
                            null == L ? void 0 : L.rejectionReason,
                          guild: D,
                        });
                      default:
                        return (0, a.jsx)(m.default, {
                          guildId: n,
                          inviteCode: N,
                          onComplete: b,
                        });
                    }
                  })(),
                }),
              ],
            }),
          });
        };
    },
    802896: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          doGuildOnboardingForPostAuthInvite: function () {
            return i;
          },
        });
      var a = n("970728"),
        s = n("487946"),
        l = n("305961");
      async function i(e) {
        let { code: t } = e,
          i = await (0, s.default)(t),
          r = i.invite;
        if (null == r || null == r.guild) return;
        if (
          (await (function () {
            return new Promise(e => {
              l.default.addConditionalChangeListener(
                () => !l.default.isLoaded() || (e(), !1)
              );
            });
          })(),
          null == l.default.getGuild(r.guild.id))
        )
          return;
        let { default: o } = await n.el("937692").then(n.bind(n, "937692"));
        await o({ guildId: r.guild.id }), a.default.transitionToInvite(r);
      }
    },
    889145: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("77078"),
        i = n("685829"),
        r = n("937692"),
        o = n("782340"),
        u = n("884682");
      function d(e) {
        let { guildId: t, channelId: n } = e,
          d = s.useCallback(() => {
            null != t &&
              null != n &&
              ((0, i.startOnboarding)(t),
              (0, r.default)({ guildId: t, returnChannelId: n }));
          }, [t, n]);
        return (0, a.jsx)("div", {
          className: u.container,
          children: (0, a.jsxs)("div", {
            className: u.explainerContainer,
            children: [
              (0, a.jsx)(l.Text, {
                variant: "text-md/normal",
                children: o.default.Messages.ONBOARDING_ERROR_PAGE_TEXT,
              }),
              (0, a.jsx)(l.Button, {
                onClick: d,
                children: (0, a.jsx)(l.Text, {
                  variant: "text-md/medium",
                  children: o.default.Messages.START_ONBOARDING,
                }),
              }),
            ],
          }),
        });
      }
    },
    665274: function (e, t, n) {
      "use strict";
      n.r(t), n("222007"), n("424973");
      var a = n("446674"),
        s = n("913144"),
        l = n("271938"),
        i = n("42203"),
        r = n("305961"),
        o = n("299039"),
        u = n("188631");
      let d = {};
      function c(e, t) {
        let n = d[e];
        return !(null == n || n.has(t)) && ((d[e] = new Set(n.add(t))), !0);
      }
      class f extends a.default.PersistedStore {
        initialize(e) {
          this.waitFor(l.default, r.default),
            (d = {}),
            null != e &&
              o.default.keys(e).forEach(t => {
                let n = e[t];
                null != n &&
                  "function" == typeof n[Symbol.iterator] &&
                  (d[t] = new Set(n));
              });
        }
        getProgress(e) {
          return d[e];
        }
        hasProgress(e) {
          let t = d[e];
          return null != t && !t.has(u.Steps.DISMISSED);
        }
        getState() {
          return d;
        }
      }
      (f.displayName = "GuildProgressStore"),
        (f.persistKey = "GuildProgressStore"),
        new f(s.default, {
          CONNECTION_OPEN: function () {
            let e = [];
            o.default.keys(d).forEach(t => {
              d[t].has(u.Steps.COMPLETED) && e.push(t);
            }),
              e.forEach(e => c(e, u.Steps.DISMISSED));
          },
          GUILD_PROGRESS_INITIALIZE: function (e) {
            let { guildId: t } = e;
            null == d[t] && (d[t] = new Set()),
              !d[t].has(u.Steps.COMPLETED) && d[t].delete(u.Steps.DISMISSED);
          },
          GUILD_PROGRESS_COMPLETED_SEEN: function (e) {
            let { guildId: t } = e;
            if (null == d[t]) return !1;
            d[t] = new Set(d[t].add(u.Steps.COMPLETED));
          },
          GUILD_PROGRESS_DISMISS: function (e) {
            let { guildId: t } = e;
            return c(t, u.Steps.DISMISSED);
          },
          GUILD_CREATE: function (e) {
            let {
                guild: { id: t, member_count: n },
              } = e,
              a = r.default.getGuild(t);
            if (null == a) return !1;
            a.ownerId === l.default.getId() &&
              null != d[a.id] &&
              (null != a.icon && d[a.id].add(u.Steps.AVATAR),
              n > 1 && d[a.id].add(u.Steps.INVITE));
          },
          CHANNEL_CREATE: function (e) {
            let { channel: t } = e;
            return (
              null != t &&
              null != t.guild_id &&
              null != d[t.guild_id] &&
              c(t.guild_id, u.Steps.CHANNEL)
            );
          },
          CHANNEL_UPDATES: function (e) {
            let { channels: t } = e,
              n = !1;
            for (let e of t)
              null != e &&
                null != e.guild_id &&
                null != d[e.guild_id] &&
                !1 !== c(e.guild_id, u.Steps.CHANNEL) &&
                (n = !0);
            return n;
          },
          GUILD_SETTINGS_SUBMIT_SUCCESS: function (e) {
            let { guild: t } = e;
            return (
              null != t &&
              null != t.id &&
              null != d[t.id] &&
              null != t.icon &&
              c(t.id, u.Steps.AVATAR)
            );
          },
          MESSAGE_CREATE: function (e) {
            var t;
            let { channelId: n, message: a } = e,
              s = i.default.getChannel(n);
            return (
              (null === (t = a.author) || void 0 === t ? void 0 : t.id) ===
                l.default.getId() &&
              null != s &&
              null != d[s.guild_id] &&
              c(s.guild_id, u.Steps.MESSAGE)
            );
          },
          GUILD_MEMBER_LIST_UPDATE: function (e) {
            let { guildId: t, memberCount: n } = e;
            return null != d[t] && !!(n > 1) && c(t, u.Steps.INVITE);
          },
        });
    },
    93877: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var a = n("446674"),
        s = n("305961"),
        l = n("858560"),
        i = n("808388"),
        r = n("65722"),
        o = n("49111");
      function u(e) {
        let t = (0, a.useStateFromStores)([s.default], () =>
            s.default.getGuild(e)
          ),
          n = (0, i.useGuildEligibleForTierTemplates)(e),
          u = (0, i.useUserEligibleForTierTemplates)(),
          d =
            (null == t
              ? void 0
              : t.hasFeature(o.GuildFeatures.ROLE_SUBSCRIPTIONS_ENABLED)) ===
              !0 &&
            (null == t
              ? void 0
              : t.hasFeature(
                  o.GuildFeatures.ROLE_SUBSCRIPTIONS_AVAILABLE_FOR_PURCHASE
                )) === !1,
          c = (0, r.canManageGuildRoleSubscriptions)(t);
        return (
          d &&
            u &&
            c &&
            l.GuildRoleSubscriptionsTierTemplatesExperiment.trackExposure({
              guildId: e,
              location: "ca30d9_1",
            }),
          d && u && c && n
        );
      }
    },
    167790: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var a = n("446674"),
        s = n("7331"),
        l = n("305961"),
        i = n("697218"),
        r = n("49111");
      function o(e) {
        var t;
        let n = (0, a.useStateFromStores)([l.default], () =>
            l.default.getGuild(e)
          ),
          o = (0, a.useStateFromStores)([i.default], () =>
            i.default.getCurrentUser()
          ),
          u = (null == n ? void 0 : n.ownerId) === (null == o ? void 0 : o.id),
          d = (0, s.useIsUserInCreatorMonetizationEligibleCountry)();
        return (
          u &&
          null !==
            (t =
              null == n ? void 0 : n.hasFeature(r.GuildFeatures.COMMUNITY)) &&
          void 0 !== t &&
          t &&
          d &&
          !(
            (null == n
              ? void 0
              : n.hasFeature(r.GuildFeatures.CREATOR_MONETIZABLE)) ||
            (null == n
              ? void 0
              : n.hasFeature(
                  r.GuildFeatures.CREATOR_MONETIZABLE_PROVISIONAL
                )) ||
            (null == n
              ? void 0
              : n.hasFeature(r.GuildFeatures.CREATOR_MONETIZABLE_DISABLED))
          )
        );
      }
    },
    755574: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("414456"),
        l = n.n(s),
        i = n("77078"),
        r = n("191814"),
        o = n("423487"),
        u = n("700934");
      function d(e) {
        let {
          message: t,
          error: n,
          onClick: s,
          submitting: d,
          className: c,
          ctaMessage: f,
        } = e;
        return (0, a.jsxs)("div", {
          className: l(u.container, c),
          children: [
            (0, a.jsxs)("div", {
              className: u.textContainer,
              children: [
                (0, a.jsx)(o.default, { className: u.warningIcon }),
                (0, a.jsx)(r.default, { size: 10, horizontal: !0 }),
                (0, a.jsxs)("div", {
                  children: [
                    (0, a.jsx)(r.default, { size: 1 }),
                    (0, a.jsx)(i.Text, {
                      className: u.info,
                      variant: "text-sm/normal",
                      children: t,
                    }),
                    null != n &&
                      (0, a.jsx)(i.Text, {
                        className: l(u.info, u.error),
                        variant: "text-sm/normal",
                        children: n,
                      }),
                  ],
                }),
              ],
            }),
            (0, a.jsx)(r.default, { size: 16, horizontal: !0 }),
            (0, a.jsx)(i.Button, {
              className: u.undoButton,
              color: i.Button.Colors.LINK,
              look: i.Button.Looks.LINK,
              size: i.Button.Sizes.ICON,
              onClick: s,
              submitting: d,
              children: f,
            }),
          ],
        });
      }
    },
    526843: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("759843"),
        l = n("65597"),
        i = n("428958"),
        r = n("592407"),
        o = n("5667"),
        u = n("305961"),
        d = n("697218"),
        c = n("49111"),
        f = n("782340"),
        E = n("919876"),
        h = n("936775");
      function _(e) {
        let { guildId: t, markAsDismissed: n } = e,
          _ = (0, l.default)([u.default, d.default], () => {
            let e = d.default.getCurrentUser(),
              n = u.default.getGuild(t);
            return (null == n ? void 0 : n.isOwner(e)) === !0;
          });
        return (
          (0, i.default)({
            type: s.ImpressionTypes.POPOUT,
            name: s.ImpressionNames
              .ENABLE_CREATOR_MONETIZATION_GUILD_HEADER_UPSELL,
            properties: { guild_id: t, is_owner: _ },
          }),
          (0, a.jsx)("div", {
            className: E.container,
            children: (0, a.jsx)(o.default, {
              header: f.default.Messages.GUILD_ROLE_SUBSCRIPTION_UPSELL_HEADER,
              content: f.default.Messages.GUILD_ROLE_SUBSCRIPTION_UPSELL_BODY,
              asset: (0, a.jsx)("div", {
                className: E.image,
                children: (0, a.jsx)("img", {
                  alt: f.default.Messages
                    .GUILD_ROLE_SUBSCRIPTION_UPSELL_IMG_ALT,
                  src: h,
                  className: E.image,
                }),
              }),
              buttonCTA: f.default.Messages.GUILD_ROLE_SUBSCRIPTIONS_UPSELL_CTA,
              onClick: () => {
                r.default.open(t, c.GuildSettingsSections.ROLE_SUBSCRIPTIONS);
              },
              secondaryButtonCTA: f.default.Messages.DISMISS,
              markAsDismissed: n,
            }),
          })
        );
      }
    },
    442619: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("592407"),
        l = n("5667"),
        i = n("58608"),
        r = n("49111"),
        o = n("782340"),
        u = n("559645");
      function d(e) {
        let { guildId: t, markAsDismissed: n } = e;
        return (0, a.jsx)("div", {
          className: u.container,
          children: (0, a.jsx)(l.default, {
            header:
              o.default.Messages
                .GUILD_ROLE_SUBSCRIPTION_TIER_TEMPLATE_UPSELL_TITLE,
            content:
              o.default.Messages
                .GUILD_ROLE_SUBSCRIPTION_TIER_TEMPLATE_UPSELL_BODY,
            asset: (0, a.jsx)(i.default, {
              className: u.video,
              src: "https://cdn.discordapp.com/assets/server-subscription-tier-template/upsell.mov",
              autoPlay: !0,
              loop: !0,
            }),
            buttonCTA:
              o.default.Messages
                .GUILD_ROLE_SUBSCRIPTION_TIER_TEMPLATE_UPSELL_CTA,
            onClick: () => {
              s.default.open(
                t,
                r.GuildSettingsSections.ROLE_SUBSCRIPTIONS,
                void 0,
                r.GuildSettingsSubsections.ROLE_SUBSCRIPTION_TIER_TEMPLATE
              );
            },
            secondaryButtonCTA: o.default.Messages.DISMISS,
            markAsDismissed: n,
          }),
        });
      }
    },
    430780: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("866227"),
        i = n.n(l),
        r = n("850068"),
        o = n("812204"),
        u = n("685665"),
        d = n("837008"),
        c = n("755574"),
        f = n("782340");
      let E = e => {
        let [t, n] = s.useState(!1),
          [a, l] = s.useState(null),
          i = async t => {
            n(!0), l(null);
            try {
              await (0, r.deleteRenewalMutation)(t, e);
            } catch (e) {
              l(e);
            } finally {
              n(!1);
            }
          };
        return { resetRenewalMutation: i, submitting: t, error: a };
      };
      function h(e) {
        let { groupListingId: t, subscription: n, className: l } = e,
          { analyticsLocations: r } = (0, u.default)(
            o.default.PENDING_PLAN_CHANGE_NOTICE
          ),
          { resetRenewalMutation: h, submitting: _, error: C } = E(r),
          I = (0, d.useSubscriptionListingsForGroup)(t, {
            includeSoftDeleted: !0,
          }),
          { currentListing: S, nextListing: m } = s.useMemo(() => {
            if ((null == n ? void 0 : n.renewalMutations) == null)
              return { currentListing: void 0, nextListing: void 0 };
            let e = n.items[0].planId,
              t = n.renewalMutations.items[0].planId,
              a = I.find(t => t.subscription_plans[0].id === e),
              s = I.find(e => e.subscription_plans[0].id === t);
            return { currentListing: a, nextListing: s };
          }, [n, I]);
        if (null == n || null == S || null == m) return null;
        let p = i(n.currentPeriodEnd).format("MMM DD, YYYY");
        return (0, a.jsx)(c.default, {
          message:
            f.default.Messages.GUILD_ROLE_CANCEL_SUBSCRIPTION_DELETE_MUTATION_DESCRIPTION.format(
              { currentListing: S.name, nextListing: m.name, changeDate: p }
            ),
          error: null == C ? void 0 : C.message,
          onClick: () => h(n),
          submitting: _,
          ctaMessage:
            f.default.Messages
              .GUILD_ROLE_CANCEL_SUBSCRIPTION_DELETE_MUTATION_CTA,
          className: l,
        });
      }
    },
    904698: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("79112"),
        l = n("191814"),
        i = n("755574"),
        r = n("49111"),
        o = n("397336"),
        u = n("782340");
      function d(e) {
        let { subscription: t } = e;
        return null == t
          ? null
          : t.status === r.SubscriptionStatusTypes.PAST_DUE
            ? (0, a.jsxs)(a.Fragment, {
                children: [
                  (0, a.jsx)(l.default, { size: 16 }),
                  (0, a.jsx)(i.default, {
                    message:
                      u.default.Messages
                        .GUILD_ROLE_SUBSCRIPTION_USER_SUBSCRIPTION_PAST_DUE_WARNING,
                    ctaMessage:
                      u.default.Messages
                        .GUILD_ROLE_SUBSCRIPTION_USER_SUBSCRIPTION_PAST_DUE_CTA,
                    onClick: () => {
                      s.default.open(
                        r.UserSettingsSections.SUBSCRIPTIONS,
                        o.ROLE_SUBSCRIPTION_SUBSECTION
                      );
                    },
                  }),
                ],
              })
            : null;
      }
    },
    967251: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return I;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("77078"),
        l = n("837008"),
        i = n("167109"),
        r = n("176687"),
        o = n("847426"),
        u = n("430780"),
        d = n("904698"),
        c = n("900076"),
        f = n("108314"),
        E = n("337239"),
        h = n("49111"),
        _ = n("782340"),
        C = n("767588"),
        I = e => {
          var t, n;
          let { guild: I } = e,
            S = (0, l.useGroupListingsForGuild)(I.id)[0];
          (0, o.default)({
            guildId: I.id,
            groupListingId: null == S ? void 0 : S.id,
            location: h.AnalyticsLocations.ROLE_SUBSCRIPTIONS_TAB,
            relevantSubscriptionListingIds:
              null == S ? void 0 : S.subscription_listings_ids,
          });
          let { activeSubscription: m } = (0, r.default)(
              null == S ? void 0 : S.id
            ),
            p = (0, l.useSubscriptionsSettings)(I.id),
            T = null == p ? void 0 : p.description,
            { editStateIds: g } = i.useEditStateIds(
              null !== (t = null == S ? void 0 : S.id) && void 0 !== t
                ? t
                : null,
              I.id
            );
          return (0, a.jsxs)(a.Fragment, {
            children: [
              (0, a.jsxs)(E.default, {
                title:
                  _.default.Messages.GUILD_ROLE_SUBSCRIPTION_PURCHASE_PAGE_GROUP_CTA.format(
                    { serverName: I.toString() }
                  ),
                description: null != T ? T : null,
                coverImageAsset:
                  null !== (n = null == p ? void 0 : p.cover_image_asset) &&
                  void 0 !== n
                    ? n
                    : null,
                guild: I,
                children: [
                  null != S
                    ? (0, a.jsx)(u.default, {
                        className: C.pendingPlanChangeNotice,
                        groupListingId: S.id,
                        subscription: m,
                      })
                    : null,
                  (0, a.jsx)(d.default, { subscription: m }),
                ],
              }),
              (0, a.jsx)(s.HeadingLevel, {
                children: (0, a.jsx)(c.default, {
                  guildId: I.id,
                  children: g.map(e => {
                    var t;
                    return (0, a.jsx)(
                      f.default,
                      {
                        guildId: I.id,
                        groupListingId:
                          null !== (t = null == S ? void 0 : S.id) &&
                          void 0 !== t
                            ? t
                            : "",
                        listingId: e,
                        analyticsLocation:
                          h.AnalyticsLocations.ROLE_SUBSCRIPTIONS_TAB,
                      },
                      e
                    );
                  }),
                }),
              }),
            ],
          });
        };
    },
    663831: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          GuildRoleSubscriptionsOverviewErrorType: function () {
            return s;
          },
          GuildRoleSubscriptionsOverviewErrorPage: function () {
            return f;
          },
        });
      var a,
        s,
        l = n("37983");
      n("884691");
      var i = n("759843"),
        r = n("77078"),
        o = n("428958"),
        u = n("782340"),
        d = n("956064"),
        c = n("12469");
      ((a = s || (s = {})).GUILD_NOT_ELIGIBLE = "guild_not_eligible"),
        (a.NOT_GUILD_MEMBER = "not_guild_member");
      let f = e => {
        let { errorType: t } = e;
        return (
          (0, o.default)({
            type: i.ImpressionTypes.PAGE,
            name: i.ImpressionNames.ROLE_SUBSCRIPTION_LISTING_UPSELL_ERROR_PAGE,
            properties: { error_page_type: t },
          }),
          (0, l.jsx)("div", {
            className: d.errorPageContainer,
            children: (0, l.jsxs)("div", {
              className: d.errorPageContent,
              children: [
                (0, l.jsx)("img", {
                  src: c,
                  alt: "",
                  className: d.errorPageIllo,
                }),
                (0, l.jsx)(r.Heading, {
                  variant: "heading-xl/extrabold",
                  className: d.errorPageTitle,
                  children:
                    "guild_not_eligible" === t
                      ? u.default.Messages
                          .GUILD_ROLE_SUBSCRIPTION_PURCHASE_ERROR_PAGE_GUILD_NOT_ELIGIBLE_TITLE
                      : u.default.Messages
                          .GUILD_ROLE_SUBSCRIPTION_PURCHASE_ERROR_PAGE_NOT_GUILD_MEMBER_TITLE,
                }),
                (0, l.jsx)(r.Text, {
                  variant: "text-md/normal",
                  className: d.errorPagSubtitle,
                  children:
                    "guild_not_eligible" === t
                      ? u.default.Messages
                          .GUILD_ROLE_SUBSCRIPTION_PURCHASE_ERROR_PAGE_GUILD_NOT_ELIGIBLE_SUBTITLE
                      : u.default.Messages
                          .GUILD_ROLE_SUBSCRIPTION_PURCHASE_ERROR_PAGE_NOT_GUILD_MEMBER_SUBTITLE,
                }),
              ],
            }),
          })
        );
      };
    },
    993057: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return M;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("394846"),
        i = n("446674"),
        r = n("77078"),
        o = n("850068"),
        u = n("516899"),
        d = n("69927"),
        c = n("657199"),
        f = n("250666"),
        E = n("465869"),
        h = n("619443"),
        _ = n("539938"),
        C = n("305961"),
        I = n("160299"),
        S = n("257869"),
        m = n("638779"),
        p = n("459736"),
        T = n("967251"),
        g = n("663831"),
        A = n("170185"),
        N = n("277860"),
        R = n("724210"),
        O = n("782340"),
        v = n("763437");
      function L(e) {
        let { guildId: t } = e,
          n = (0, i.useStateFromStores)(
            [C.default],
            () => C.default.getGuild(t),
            [t]
          ),
          L = (0, i.useStateFromStores)([h.default], () =>
            h.default.isConnected()
          ),
          M = (0, f.default)(t),
          P = (0, m.default)(t),
          D = (0, i.useStateFromStores)(
            [I.default],
            () => I.default.isSubscriptionFetching
          ),
          y = (0, S.useGroupListingsFetchContext)(),
          { shouldHideGuildPurchaseEntryPoints: x, restrictionsLoading: b } =
            (0, E.useShouldHideGuildPurchaseEntryPoints)(t),
          U = null == n || !y || D || b;
        (0, d.usePageTitle)({
          subsection: O.default.Messages.GUILD_ROLE_SUBSCRIPTIONS_TITLE,
          location: null == n ? void 0 : n.name,
        }),
          (0, u.default)(l.isMobile ? "role-subscriptions-overview" : void 0);
        let G = L && (null == n || !(M || P) || (x && !b));
        if (
          (s.useEffect(() => {
            o.fetchSubscriptions();
          }, []),
          s.useEffect(() => {
            G &&
              !l.isMobile &&
              (0, c.handleInaccessiblePage)(
                t,
                R.StaticChannelRoute.ROLE_SUBSCRIPTIONS
              );
          }, [t, G]),
          l.isMobile && G)
        ) {
          let e =
            null == n
              ? g.GuildRoleSubscriptionsOverviewErrorType.NOT_GUILD_MEMBER
              : g.GuildRoleSubscriptionsOverviewErrorType.GUILD_NOT_ELIGIBLE;
          return (0, a.jsx)(g.GuildRoleSubscriptionsOverviewErrorPage, {
            errorType: e,
          });
        }
        return (0, a.jsxs)("div", {
          className: v.container,
          children: [
            (0, a.jsxs)(_.default, {
              toolbar: (0, a.jsx)(s.Fragment, {}),
              className: v.headerBar,
              children: [
                (0, a.jsx)(_.default.Icon, {
                  icon: p.default,
                  "aria-hidden": !0,
                }),
                (0, a.jsx)(_.default.Title, {
                  children: O.default.Messages.GUILD_ROLE_SUBSCRIPTIONS_TITLE,
                }),
              ],
            }),
            (0, a.jsx)("div", { id: N.OVERVIEW_NOTICE_ROOT }),
            (0, a.jsx)("div", {
              className: v.content,
              children: M
                ? (0, a.jsx)(r.ScrollerNone, {
                    className: v.scroller,
                    children: (0, a.jsx)("div", {
                      className: v.scrollerContent,
                      children: U
                        ? (0, a.jsx)(r.Spinner, {})
                        : (0, a.jsx)(T.default, { guild: n }),
                    }),
                  })
                : (0, a.jsx)(A.default, {}),
            }),
          ],
        });
      }
      function M(e) {
        let { guildId: t } = e;
        return (0, a.jsx)(S.GroupListingsFetchContextProvider, {
          guildId: t,
          refetchOnMount: !0,
          children: (0, a.jsx)(L, { guildId: t }),
        });
      }
    },
    170185: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("77078"),
        l = n("191814"),
        i = n("782340"),
        r = n("821836"),
        o = n("936775");
      function u() {
        return (0, a.jsx)("div", {
          className: r.container,
          children: (0, a.jsxs)("div", {
            className: r.content,
            children: [
              (0, a.jsx)("img", {
                src: o,
                alt: i.default.Messages
                  .CREATOR_MONETIZATION_NOTICE_ILLO_A11Y_LABEL,
              }),
              (0, a.jsx)(l.default, { size: 12 }),
              (0, a.jsx)(s.Heading, {
                className: r.header,
                variant: "heading-lg/semibold",
                children:
                  i.default.Messages.CREATOR_MONETIZATION_DISABLED_NOTICE_TITLE,
              }),
              (0, a.jsx)(l.default, { size: 8 }),
              (0, a.jsx)(s.Text, {
                color: "header-secondary",
                variant: "text-sm/normal",
                children:
                  i.default.Messages
                    .CREATOR_MONETIZATION_DISABLED_NOTICE_DESCRIPTION,
              }),
            ],
          }),
        });
      }
    },
    277860: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          OVERVIEW_NOTICE_ROOT: function () {
            return a;
          },
        });
      let a = "guild-role-subscription-overview-notice";
    },
    337239: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        }),
        n("222007");
      var a = n("37983");
      n("884691");
      var s = n("77078"),
        l = n("845579"),
        i = n("476263"),
        r = n("866190"),
        o = n("132349"),
        u = n("724386");
      function d(e) {
        let {
            coverImageAsset: t,
            title: n,
            guild: d,
            description: c,
            children: f,
          } = e,
          E = l.GifAutoPlay.useSetting(),
          h = (0, r.useIsWindowFocused)(),
          [_, C] = (0, o.default)(t, h && E);
        return (0, a.jsxs)("div", {
          className: u.container,
          children: [
            (0, a.jsx)("div", {
              ref: _,
              className: u.coverImageContainer,
              children:
                null != C &&
                (0, a.jsx)("img", { src: C, alt: "", className: u.coverImage }),
            }),
            (0, a.jsx)("div", {
              className: u.guildIconContainer,
              children: (0, a.jsx)(i.default, {
                guild: d,
                size: i.default.Sizes.XLARGE,
              }),
            }),
            (0, a.jsx)(s.Heading, {
              variant: "heading-xl/semibold",
              className: u.ctaTitle,
              children: n,
            }),
            (0, a.jsx)(s.Text, {
              className: u.ctaSubtitle,
              variant: "text-md/normal",
              color: "header-secondary",
              children: c,
            }),
            f,
          ],
        });
      }
    },
    395869: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          hideLiveChannelNotice: function () {
            return s;
          },
          hideUpcomingEventNotice: function () {
            return l;
          },
          markUpcomingEventNoticeAsSeen: function () {
            return i;
          },
        });
      var a = n("913144");
      function s(e) {
        let { eventId: t, stageId: n } = e;
        (null != t || null != n) &&
          a.default.dispatch({
            type: "LIVE_CHANNEL_NOTICE_HIDE",
            eventId: t,
            stageId: n,
          });
      }
      function l(e) {
        a.default.dispatch({
          type: "UPCOMING_GUILD_EVENT_NOTICE_HIDE",
          eventId: e,
        });
      }
      function i(e) {
        a.default.dispatch({
          type: "UPCOMING_GUILD_EVENT_NOTICE_SEEN",
          guildEventId: e,
        });
      }
    },
    824650: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        }),
        n("424973");
      var a = n("446674"),
        s = n("913144"),
        l = n("745049");
      let i = { hiddenEventsAndStages: [] };
      class r extends a.default.PersistedStore {
        initialize(e) {
          null != e && null != e.hiddenEventsAndStages && (i = e);
        }
        isLiveChannelNoticeHidden(e) {
          let { eventId: t, stageId: n } = e;
          return (
            !!(
              null != n && i.hiddenEventsAndStages.includes("stage-".concat(n))
            ) ||
            (null != t && i.hiddenEventsAndStages.includes("event-".concat(t)))
          );
        }
        getState() {
          return i;
        }
      }
      (r.displayName = "LiveChannelNoticesStore"),
        (r.persistKey = "liveChannelNotices_v2");
      var o = new r(s.default, {
        LIVE_CHANNEL_NOTICE_HIDE: function (e) {
          let { eventId: t, stageId: n } = e;
          null != t
            ? i.hiddenEventsAndStages.push("event-".concat(t))
            : null != n && i.hiddenEventsAndStages.push("stage-".concat(n));
        },
        GUILD_SCHEDULED_EVENT_UPDATE: function (e) {
          let { guildScheduledEvent: t } = e,
            n = "event-".concat(t.id);
          i.hiddenEventsAndStages.includes(n) &&
            (t.status === l.GuildScheduledEventStatus.CANCELED ||
              t.status === l.GuildScheduledEventStatus.COMPLETED) &&
            (i.hiddenEventsAndStages = i.hiddenEventsAndStages.filter(
              e => e !== n
            ));
        },
        GUILD_SCHEDULED_EVENT_DELETE: function (e) {
          let { guildScheduledEvent: t } = e,
            n = "event-".concat(t.id);
          i.hiddenEventsAndStages.includes(n) &&
            (i.hiddenEventsAndStages = i.hiddenEventsAndStages.filter(
              e => e !== n
            ));
        },
        STAGE_INSTANCE_DELETE: function (e) {
          let { instance: t } = e,
            n = "stage-".concat(t.id);
          i.hiddenEventsAndStages.includes(n) &&
            (i.hiddenEventsAndStages = i.hiddenEventsAndStages.filter(
              e => e !== n
            ));
        },
      });
    },
    73675: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var a = n("862205");
      let s = (0, a.createExperiment)({
        kind: "guild",
        id: "2023-09_upcoming_guild_events_notice",
        label:
          "Shows additional notices in the channel list for upcoming events",
        defaultConfig: { canSeeUpcomingEventsNotices: !1 },
        treatments: [
          {
            id: 1,
            label: "Guild members can see upcoming events notices",
            config: { canSeeUpcomingEventsNotices: !0 },
          },
        ],
      });
      var l = s;
    },
    593897: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useActiveEventOrStageInstanceChannel: function () {
            return i;
          },
        });
      var a = n("170183"),
        s = n("42203"),
        l = n("534222");
      function i(e) {
        var t;
        let n = (0, l.useFirstActiveEventChannel)(e),
          i = (0, a.default)(e),
          r = s.default.getChannel(
            null === (t = i[0]) || void 0 === t ? void 0 : t.id
          );
        return null != n ? n : r;
      }
    },
    568500: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useGuildHasLiveChannelNotice: function () {
            return u;
          },
        });
      var a = n("446674"),
        s = n("834052"),
        l = n("170183"),
        i = n("42203"),
        r = n("824650"),
        o = n("534222");
      function u(e) {
        var t;
        let n = (0, l.default)(e),
          u = i.default.getChannel(
            null === (t = n[0]) || void 0 === t ? void 0 : t.id
          ),
          d = (0, a.useStateFromStores)(
            [s.default],
            () =>
              s.default.getStageInstanceByChannel(null == u ? void 0 : u.id),
            [u]
          ),
          c = (0, o.useGuildActiveEvent)(e),
          { isStageNoticeHidden: f, isEventNoticeHidden: E } = (0,
          a.useStateFromStoresObject)(
            [r.default],
            () => ({
              isStageNoticeHidden: r.default.isLiveChannelNoticeHidden({
                stageId: null == d ? void 0 : d.id,
              }),
              isEventNoticeHidden: r.default.isLiveChannelNoticeHidden({
                eventId: null == c ? void 0 : c.id,
              }),
            }),
            [d, c]
          );
        if (null != c) return null != d ? !f : !E;
        return null != d && !f;
      }
    },
    153014: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          GuildNoticeBody: function () {
            return q;
          },
          VoiceChannelType: function () {
            return a;
          },
          LiveVoiceOrStageChannelNotice: function () {
            return en;
          },
          default: function () {
            return ea;
          },
        }),
        n("222007");
      var a,
        s,
        l = n("37983"),
        i = n("884691"),
        r = n("446674"),
        o = n("77078"),
        u = n("419830"),
        d = n("478761"),
        c = n("810467"),
        f = n("393414"),
        E = n("716214"),
        h = n("488464"),
        _ = n("998716"),
        C = n("230324"),
        I = n("834052"),
        S = n("160870"),
        m = n("957255"),
        p = n("316133"),
        T = n("660279"),
        g = n("943232"),
        A = n("36694"),
        N = n("945330"),
        R = n("272339"),
        O = n("718550"),
        v = n("228427"),
        L = n("811305"),
        M = n("599110"),
        P = n("449008"),
        D = n("374021"),
        y = n("398604"),
        x = n("395869"),
        b = n("824650"),
        U = n("431934"),
        G = n("73675"),
        j = n("1339"),
        w = n("593897"),
        k = n("466148"),
        F = n("534222"),
        B = n("841363"),
        H = n("822516"),
        V = n("936965"),
        Y = n("745049"),
        W = n("49111"),
        K = n("782340"),
        z = n("704993");
      let q = i.memo(function (e) {
        let {
            heading: t,
            location: n,
            locationIcon: a,
            details: s,
            detailsIcon: i,
            topic: r,
            onClickCloseIcon: u,
            onClickTopicText: d,
            children: c,
          } = e,
          f = (0, l.jsx)(o.Text, {
            color: "header-primary",
            variant: "text-md/semibold",
            className: z.eventName,
            children: r,
          });
        return (0, l.jsxs)("div", {
          className: z.channelNotice,
          children: [
            (0, l.jsxs)("div", {
              className: z.textBlock,
              children: [
                (0, l.jsx)("div", { className: z.liveIndicator }),
                (0, l.jsx)(o.Text, {
                  color: "text-positive",
                  variant: "text-xs/bold",
                  className: z.liveNowText,
                  children: t,
                }),
                null != u &&
                  (0, l.jsx)(o.Clickable, {
                    onClick: u,
                    className: z.closeIcon,
                    "aria-label": K.default.Messages.CLOSE,
                    children: (0, l.jsx)(N.default, { height: 16, width: 16 }),
                  }),
              ],
            }),
            null == d
              ? f
              : (0, l.jsx)(o.Button, {
                  size: o.Button.Sizes.MIN,
                  look: o.Button.Looks.LINK,
                  color: o.Button.Colors.PRIMARY,
                  onClick: d,
                  children: f,
                }),
            (0, l.jsxs)("div", {
              className: z.textBlock,
              children: [
                a,
                (0, l.jsx)(o.Text, {
                  color: "header-secondary",
                  variant: "text-xs/normal",
                  className: z.channelName,
                  children: n,
                }),
                null != s &&
                  null != i &&
                  (0, l.jsxs)(l.Fragment, {
                    children: [
                      (0, l.jsx)(o.Text, {
                        className: z.dotDivider,
                        color: "header-secondary",
                        variant: "text-xs/normal",
                        children: "•",
                      }),
                      i,
                      (0, l.jsx)(o.Text, {
                        color: "header-secondary",
                        variant: "text-xs/normal",
                        children: s,
                      }),
                    ],
                  }),
              ],
            }),
            c,
          ],
        });
      });
      function Q(e) {
        let { guildEvent: t, channel: n } = e,
          a = (0, r.useStateFromStoresArray)(
            [p.default],
            () =>
              p.default.getVoiceStatesForChannel(n).map(e => {
                let { user: t } = e;
                return t;
              }),
            [n]
          ),
          s = (0, u.getChannelIconComponent)(n);
        return (0, l.jsx)(q, {
          onClickCloseIcon: () =>
            (0, x.hideLiveChannelNotice)({
              eventId: null == t ? void 0 : t.id,
            }),
          heading: K.default.Messages.STAGE_CHANNEL_LIVE_NOW,
          topic: t.name,
          location: n.name,
          locationIcon:
            null != s
              ? (0, l.jsx)(s, { width: 16, height: 16, className: z.stageIcon })
              : null,
          children: (0, l.jsx)(en, { channel: n, speakers: a, voiceType: 1 }),
        });
      }
      function Z(e) {
        let { guildEvent: t, noticeType: n } = e,
          a = (0, H.getNextRecurrenceIdInEvent)(t),
          s = (0, r.useStateFromStores)(
            [y.default],
            () => y.default.isInterestedInEventRecurrence(t.id, a),
            [t.id, a]
          ),
          i = (0, r.useStateFromStores)(
            [U.default],
            () => U.default.getUpcomingNoticeSeenTime(t.id),
            [t.id]
          );
        return (
          !s && null == i && (0, x.markUpcomingEventNoticeAsSeen)(t.id),
          (0, l.jsxs)(o.Button, {
            fullWidth: !0,
            className: z.joinButton,
            innerClassName: z.rsvpButton,
            onClick: function () {
              (0, V.default)(t.id, null, t.guild_id, () =>
                setTimeout(() => (0, x.hideUpcomingEventNotice)(t.id), 1e3)
              ),
                M.default.track(W.AnalyticEvents.CHANNEL_NOTICE_CTA_CLICKED, {
                  guild_id: t.guild_id,
                  notice_type: n,
                });
            },
            look: s ? o.Button.Looks.OUTLINED : o.Button.Looks.FILLED,
            color: s ? o.Button.Colors.TRANSPARENT : o.Button.Colors.GREEN,
            size: o.Button.Sizes.SMALL,
            children: [
              s
                ? (0, l.jsx)(A.default, {
                    width: 16,
                    height: 16,
                    className: z.buttonIcon,
                  })
                : (0, l.jsx)(T.default, {
                    width: 16,
                    height: 16,
                    className: z.buttonIcon,
                  }),
              K.default.Messages.INDICATE_RSVP,
            ],
          })
        );
      }
      function X(e) {
        var t;
        let { guildEvent: n, noticeType: a } = e,
          s = (0, B.getLocationFromEvent)(n),
          r = null != s ? (0, j.guildEventDetailsParser)(s, !0) : null,
          d = (0, B.getChannelFromEvent)(n),
          c = (0, u.getChannelIconComponent)(d),
          { startTime: f, endTime: E } = (0, k.default)(n.id),
          {
            startDateTimeString: h,
            upcomingEvent: _,
            diffMinutes: C,
          } = (0, H.getEventTimeData)(
            f.toISOString(),
            null == E ? void 0 : E.toISOString()
          ),
          I = _
            ? C > 0
              ? K.default.Messages.STARTING_IN_MINUTES.format({ minutes: C })
              : K.default.Messages.STARTING_SOON
            : K.default.Messages.STARTING_ON_DATE.format({ date: h });
        return (
          i.useEffect(() => {
            M.default.track(W.AnalyticEvents.CHANNEL_NOTICE_VIEWED, {
              notice_type: a,
              guild_id: n.guild_id,
            });
          }, [n, a]),
          (0, l.jsxs)("div", {
            className: z.channelNotice,
            children: [
              (0, l.jsxs)("div", {
                className: z.textBlock,
                children: [
                  (0, l.jsx)(o.Clickable, {
                    onClick: () =>
                      (0, D.openGuildEventDetails)({ eventId: n.id }),
                    className: z.eventNameClickable,
                    children: (0, l.jsx)(o.Text, {
                      color: "header-primary",
                      variant: "text-md/semibold",
                      className: z.eventName,
                      children: n.name,
                    }),
                  }),
                  (0, l.jsx)(o.Clickable, {
                    onClick: () => {
                      M.default.track(W.AnalyticEvents.CHANNEL_NOTICE_CLOSED, {
                        notice_type: a,
                        guild_id: n.guild_id,
                      }),
                        (0, x.hideUpcomingEventNotice)(n.id);
                    },
                    className: z.closeIcon,
                    "aria-label": K.default.Messages.CLOSE,
                    children: (0, l.jsx)(N.default, { height: 16, width: 16 }),
                  }),
                ],
              }),
              (0, l.jsxs)("div", {
                className: z.textBlock,
                children: [
                  (0, l.jsx)(g.default, {
                    className: z.stageIcon,
                    width: 16,
                    height: 16,
                  }),
                  (0, l.jsx)(o.Text, {
                    color: "header-secondary",
                    variant: "text-xs/normal",
                    className: z.startTime,
                    children: I,
                  }),
                ],
              }),
              (0, l.jsxs)("div", {
                className: z.textBlock,
                children: [
                  null != c
                    ? (0, l.jsx)(c, {
                        width: 16,
                        height: 16,
                        className: z.stageIcon,
                      })
                    : (0, l.jsx)(O.default, {
                        width: 16,
                        height: 16,
                        className: z.stageIcon,
                      }),
                  (0, l.jsx)(o.Text, {
                    color: "header-secondary",
                    variant: "text-xs/normal",
                    className: z.channelName,
                    children:
                      null !== (t = null == d ? void 0 : d.name) && void 0 !== t
                        ? t
                        : r,
                  }),
                ],
              }),
              (0, l.jsx)(Z, { guildEvent: n, noticeType: a }),
            ],
          })
        );
      }
      function J(e) {
        let { guildEvent: t } = e,
          n = (0, B.getLocationFromEvent)(t);
        return null == n
          ? null
          : (0, l.jsx)(q, {
              onClickCloseIcon: () =>
                (0, x.hideLiveChannelNotice)({
                  eventId: null == t ? void 0 : t.id,
                }),
              heading: K.default.Messages.HAPPENING_NOW,
              topic: t.name,
              location: (0, j.guildEventDetailsParser)(n, !0),
              locationIcon: (0, l.jsx)(O.default, {
                width: 16,
                height: 16,
                className: z.stageIcon,
              }),
              children: (0, l.jsx)($, { guildEvent: t }),
            });
      }
      function $(e) {
        let { guildEvent: t } = e,
          n = i.useCallback(() => {
            (0, D.openGuildEventDetails)({ eventId: t.id });
          }, [t]);
        return (0, l.jsx)(o.Button, {
          fullWidth: !0,
          className: z.joinButton,
          onClick: n,
          color: o.Button.Colors.GREEN,
          size: o.Button.Sizes.SMALL,
          children: K.default.Messages.SEE_DETAIL,
        });
      }
      function ee(e) {
        let { channel: t, label: n } = e;
        return (0, l.jsx)(o.Button, {
          fullWidth: !0,
          className: z.joinButton,
          onClick: () => {
            null != t &&
              null != t.getGuildId() &&
              ((0, E.connectAndOpen)(t),
              (0, f.transitionToGuild)(t.getGuildId(), t.id));
          },
          color: o.Button.Colors.GREEN,
          size: o.Button.Sizes.SMALL,
          children: n,
        });
      }
      function et(e) {
        let { stageInstance: t, channel: n } = e,
          a = (0, r.useStateFromStoresArray)(
            [h.default],
            () => [
              ...new Set(
                h.default
                  .getMutableParticipants(
                    n.id,
                    _.StageChannelParticipantNamedIndex.SPEAKER
                  )
                  .map(e => e.user)
              ),
            ],
            [n.id]
          ),
          s = (0, r.useStateFromStores)(
            [h.default],
            () =>
              h.default.getParticipantCount(
                n.id,
                _.StageChannelParticipantNamedIndex.AUDIENCE
              ),
            [n.id]
          ),
          i = K.default.Messages.LISTENING_COUNT.format({
            count: "".concat(s),
          });
        return (0, l.jsx)(q, {
          onClickCloseIcon: () =>
            (0, x.hideLiveChannelNotice)({
              stageId: null == t ? void 0 : t.id,
            }),
          heading: K.default.Messages.STAGE_CHANNEL_LIVE_NOW,
          location: n.name,
          details: i,
          detailsIcon: (0, l.jsx)(R.default, {
            width: 14,
            height: 14,
            className: z.stageIcon,
          }),
          locationIcon: (0, l.jsx)(v.default, {
            width: 16,
            height: 16,
            className: z.stageIcon,
          }),
          topic: t.topic,
          children: (0, l.jsx)(en, { channel: n, speakers: a, voiceType: 2 }),
        });
      }
      function en(e) {
        let { channel: t, speakers: n, voiceType: a } = e,
          s = t.getGuildId(),
          u = i.useMemo(() => n.slice(0, 3), [n]),
          d = (0, r.useStateFromStores)([m.default], () =>
            m.default.can(W.Permissions.CONNECT, t)
          ),
          c = (0, S.default)(t.id),
          f = K.default.Messages.JOIN;
        switch (a) {
          case 1:
            f = K.default.Messages.JOIN;
            break;
          case 2:
            (f = K.default.Messages.STAGE_CHANNEL_JOIN_BUTTON),
              (null == c ? void 0 : c.speaker)
                ? (f = K.default.Messages.STAGE_CHANNEL_JOINED_SPEAKER_BUTTON)
                : null != c &&
                  (f = K.default.Messages.STAGE_CHANNEL_JOINED_AUDIENCE_BUTTON);
            break;
          case 3:
            f = K.default.Messages.HUB_STUDY_ROOM_NOTICE_VOICE_CTA;
            break;
          default:
            (0, P.assertNever)(a);
        }
        return null == s
          ? null
          : (0, l.jsxs)(l.Fragment, {
              children: [
                u.length > 0
                  ? (0, l.jsxs)("div", {
                      className: z.textBlock,
                      children: [
                        (0, l.jsx)(L.default, {
                          guildId: s,
                          users: u,
                          showUserPopout: !0,
                          size: L.Sizes.SIZE_16,
                        }),
                        (0, l.jsx)(o.Text, {
                          color: "header-secondary",
                          variant: "text-xs/normal",
                          className: z.userNames,
                          children: (0, C.summarizeUsernamesParticipating)(
                            s,
                            u,
                            null == t ? void 0 : t.id,
                            n.length
                          ),
                        }),
                      ],
                    })
                  : null,
                d && null == c && (0, l.jsx)(ee, { channel: t, label: f }),
              ],
            });
      }
      ((s = a || (a = {}))[(s.VOICE = 1)] = "VOICE"),
        (s[(s.STAGE = 2)] = "STAGE"),
        (s[(s.STUDY_ROOM = 3)] = "STUDY_ROOM");
      var ea = i.memo(function (e) {
        let { guild: t } = e,
          { showRedesignedLiveChannelNotice: n } = (0,
          d.useChannelNoticeRedesignExperiment)(!0),
          a = (0, w.useActiveEventOrStageInstanceChannel)(t.id),
          s = (0, F.useGuildActiveEvent)(t.id),
          i = (0, F.useGuildUpcomingEventsNotice)(t.id),
          { canSeeUpcomingEventsNotices: o } = G.default.useExperiment(
            { guildId: t.id, location: "Guild Channel Notice" },
            { autoTrackExposure: !1 }
          ),
          u = (0, r.useStateFromStores)(
            [I.default],
            () =>
              I.default.getStageInstanceByChannel(null == a ? void 0 : a.id),
            [a]
          ),
          { isStageNoticeHidden: f, isEventNoticeHidden: E } = (0,
          r.useStateFromStoresObject)(
            [b.default],
            () => ({
              isStageNoticeHidden: b.default.isLiveChannelNoticeHidden({
                stageId: null == u ? void 0 : u.id,
              }),
              isEventNoticeHidden: b.default.isLiveChannelNoticeHidden({
                eventId: null == s ? void 0 : s.id,
              }),
            }),
            [u, s]
          ),
          h = null,
          _ = null != u && null != a && !f;
        if (n) return (0, l.jsx)(c.default, { guild: t });
        null == s || E
          ? _ && (h = (0, l.jsx)(et, { stageInstance: u, channel: a }))
          : s.entity_type === Y.GuildScheduledEventEntityTypes.STAGE_INSTANCE &&
              _
            ? (h = (0, l.jsx)(et, { stageInstance: u, channel: a }))
            : s.entity_type === Y.GuildScheduledEventEntityTypes.EXTERNAL
              ? (h = (0, l.jsx)(J, { guildEvent: s }))
              : s.entity_type === Y.GuildScheduledEventEntityTypes.VOICE &&
                null != a &&
                (h = (0, l.jsx)(Q, { guildEvent: s, channel: a }));
        let C =
          t.hasFeature(W.GuildFeatures.COMMUNITY) ||
          t.hasFeature(W.GuildFeatures.HUB);
        if (null == h && null != i && !C) {
          let { upcomingEvent: e, noticeType: n } = i;
          G.default.trackExposure({
            guildId: t.id,
            location: "Guild Live Channel Notice",
          }),
            (h = o ? (0, l.jsx)(X, { guildEvent: e, noticeType: n }) : null);
        }
        return h;
      });
    },
    73968: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          openGuildSettingsPickerModal: function () {
            return l;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("77078");
      function l(e) {
        (0, s.openModalLazy)(
          async () => {
            let { default: t } = await n.el("945216").then(n.bind(n, "945216"));
            return n => (0, a.jsx)(t, { ...n, ...e });
          },
          { modalKey: "Guild Settings Picker Modal" }
        );
      }
    },
    951568: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          TutorialType: function () {
            return s;
          },
          EmbeddedActivityTutorial: function () {
            return A;
          },
        });
      var a,
        s,
        l = n("37983"),
        i = n("884691"),
        r = n("446674"),
        o = n("77078"),
        u = n("244201"),
        d = n("550766"),
        c = n("478272"),
        f = n("812204"),
        E = n("685665"),
        h = n("42203"),
        _ = n("58608"),
        C = n("599110"),
        I = n("49111"),
        S = n("994428"),
        m = n("782340"),
        p = n("45266");
      ((a = s || (s = {})).BOOSTING = "BOOSTING"),
        (a.NITRO = "NITRO"),
        (a.BASH_OUT = "BASH_OUT"),
        (a.GAME_NIGHT = "GAME_NIGHT");
      let T =
          "https://cdn.discordapp.com/attachments/860252504826445825/1029516100356018217/Activities_NUX_GL_1.mp4",
        g =
          "https://cdn.discordapp.com/attachments/887469171804356628/916446867586416660/activities-video-poster-512.png",
        A = e => {
          let { channelId: t, markAsDismissed: n, tutorialType: a } = e,
            {
              analyticsLocation: s,
              analyticsType: A,
              ctaText: N,
              dismissText: R,
              description: O,
              learnMore: v,
              title: L,
              videoPosterUrl: M,
              videoUrl: P,
              ctaOnClick: D,
            } = (function (e) {
              switch (e) {
                case "BOOSTING":
                  return {
                    analyticsLocation: f.default.ACTIVITY_COACH_MARK_BOOSTING,
                    analyticsType: "embedded_activity_discovery_tutorial",
                    description:
                      m.default.Messages
                        .EMBEDDED_ACTIVITY_NOTICE_WTP_DESCRIPTION,
                    learnMore: !0,
                    title: m.default.Messages.EMBEDDED_ACTIVITY_NOTICE_TITLE,
                    videoPosterUrl: g,
                    videoUrl: T,
                    ctaText: m.default.Messages.EMBEDDED_ACTIVITIES_TRY_IT_OUT,
                    dismissText: m.default.Messages.DISMISS,
                  };
                case "NITRO":
                  return {
                    analyticsLocation: f.default.ACTIVITY_COACH_MARK_NITRO,
                    analyticsType: "embedded_activity_nitro_discovery_tutorial",
                    description:
                      m.default.Messages
                        .EMBEDDED_ACTIVITY_NOTICE_NITRO_DESCRIPTION,
                    learnMore: !0,
                    title:
                      m.default.Messages.EMBEDDED_ACTIVITY_NOTICE_NITRO_TITLE,
                    videoPosterUrl: g,
                    videoUrl: T,
                    ctaText: m.default.Messages.EMBEDDED_ACTIVITIES_TRY_IT_OUT,
                    dismissText: m.default.Messages.DISMISS,
                  };
                case "BASH_OUT":
                  return {
                    analyticsLocation: f.default.ACTIVITY_COACH_MARK_BASH_OUT,
                    analyticsType: "embedded_activity_bash_out_tutorial",
                    description:
                      m.default.Messages
                        .EMBEDDED_ACTIVITY_NOTICE_BASH_OUT_DESCRIPTION,
                    learnMore: !1,
                    title: m.default.Messages.EMBEDDED_ACTIVITIES_AVAILABLE_NOW,
                    videoPosterUrl:
                      "https://cdn.discordapp.com/attachments/860252504826445825/1037963592227635230/bash_out.jpg",
                    videoUrl:
                      "https://cdn.discordapp.com/attachments/860252504826445825/1037967755955146762/bash_out.mp4",
                    ctaText: m.default.Messages.PLAY,
                    dismissText: m.default.Messages.DISMISS,
                  };
                case "GAME_NIGHT":
                  return {
                    analyticsLocation:
                      f.default.ACTIVITIES_COACH_MARK_GAME_NIGHT,
                    analyticsType: "embedded_activity_game_night_tutorial",
                    description:
                      m.default.Messages.EMBEDDED_ACTIVITIES_GAME_NIGHT_BODY,
                    learnMore: !1,
                    title:
                      m.default.Messages.EMBEDDED_ACTIVITIES_GAME_NIGHT_HEADING,
                    videoPosterUrl:
                      "https://cdn.discordapp.com/attachments/860252504826445825/1093287297950175272/game_night_desktop.jpg",
                    videoUrl:
                      "https://cdn.discordapp.com/attachments/860252504826445825/1093286971708813382/game_night_desktop.mp4",
                    ctaText: m.default.Messages.PLAY_NOW,
                    dismissText: m.default.Messages.MAYBE_LATER,
                  };
                default:
                  return {
                    analyticsLocation: f.default.ACTIVITY_COACH_MARK_NITRO,
                    analyticsType: "",
                    description: "",
                    learnMore: !1,
                    title: "",
                    videoPosterUrl: "",
                    videoUrl: "",
                    ctaText: "",
                    dismissText: "",
                  };
              }
            })(a),
            { analyticsLocations: y, AnalyticsLocationProvider: x } = (0,
            E.default)(s);
          i.useEffect(() => {
            C.default.track(I.AnalyticEvents.TOOLTIP_VIEWED, { type: A });
          }, [A]);
          let b = (0, u.useAppContext)(),
            U = b === I.AppContext.POPOUT,
            G = (0, r.useStateFromStores)(
              [h.default],
              () => h.default.getChannel(t),
              [t]
            );
          return (0, l.jsx)(x, {
            children: (0, l.jsx)("div", {
              className: p.wrapper,
              children: (0, l.jsx)("div", {
                className: p.container,
                children: (0, l.jsxs)("div", {
                  className: p.content,
                  children: [
                    (0, l.jsx)(_.default, {
                      className: p.video,
                      src: P,
                      poster: M,
                      width: 224,
                      height: 126,
                      loop: !0,
                      muted: !0,
                      autoPlay: !0,
                    }),
                    (0, l.jsx)("div", {
                      className: p.header,
                      children: (0, l.jsx)(o.Heading, {
                        className: p.headerText,
                        variant: "text-sm/bold",
                        color: "always-white",
                        children: L,
                      }),
                    }),
                    (0, l.jsxs)(o.Text, {
                      className: p.subheaderText,
                      variant: "text-xs/normal",
                      color: "always-white",
                      children: [
                        O,
                        v
                          ? (0, l.jsxs)(l.Fragment, {
                              children: [
                                " ",
                                (0, l.jsx)(o.Anchor, {
                                  className: p.learnMoreLink,
                                  href: "https://support.discord.com/hc/articles/4422142836759",
                                  children: m.default.Messages.LEARN_MORE,
                                }),
                              ],
                            })
                          : null,
                      ],
                    }),
                    (0, l.jsxs)("div", {
                      className: p.ctaActionWrapper,
                      children: [
                        (0, l.jsx)(o.Button, {
                          color: o.Button.Colors.BRAND,
                          onClick: () => {
                            n(S.ContentDismissActionType.UNKNOWN);
                          },
                          children: R,
                        }),
                        (0, l.jsx)(o.Button, {
                          color: o.Button.Colors.BRAND,
                          look: o.Button.Looks.INVERTED,
                          onClick:
                            null != D
                              ? D
                              : () => {
                                  n(S.ContentDismissActionType.UNKNOWN),
                                    null != G &&
                                      ((0, c.default)({
                                        channel: G.isGuildVoice() ? G : void 0,
                                        guildId: G.guild_id,
                                        locationObject: {
                                          page: I.AnalyticsPages.GUILD_CHANNEL,
                                          section:
                                            I.AnalyticsSections
                                              .GUILD_CHANNEL_LIST,
                                          object:
                                            I.AnalyticsObjects
                                              .ACTIVITIES_COACH_MARK,
                                          objectType:
                                            I.AnalyticsObjectTypes.ACTIVITY,
                                        },
                                        openInPopout: U,
                                        analyticsLocations: y,
                                      }),
                                      (0, d.fetchShelf)({
                                        guildId: G.guild_id,
                                      }));
                                },
                          children: N,
                        }),
                      ],
                    }),
                  ],
                }),
              }),
            }),
          });
        };
    },
    828931: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return G;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("151426"),
        i = n("819855"),
        r = n("77078"),
        o = n("685665"),
        u = n("593094"),
        d = n("951169"),
        c = n("384997"),
        f = n("379532"),
        E = n("526843"),
        h = n("442619"),
        _ = n("592407"),
        C = n("465511"),
        I = n("519119"),
        S = n("5667"),
        m = n("599110"),
        p = n("427459"),
        T = n("49111"),
        g = n("994428"),
        A = n("944305"),
        N = n("646718"),
        R = n("782340"),
        O = n("271765"),
        v = n("321490"),
        L = n("288562"),
        M = n("553274"),
        P = n("824489"),
        D = n("776432");
      function y(e) {
        null != e &&
          _.default.open(
            e.id,
            T.GuildSettingsSections.OVERVIEW,
            { section: T.AnalyticsSections.PREMIUM_GUILD_PROGRESS_BAR },
            T.GuildSettingsSubsections.DISPLAY
          );
      }
      function x(e, t) {
        t && _.default.open(e.id, T.GuildSettingsSections.DISCOVERY);
      }
      function b(e, t) {
        null != t &&
          ((0, p.isTierUnlocked)(t, T.BoostedGuildTiers.TIER_1)
            ? _.default.open(
                t.id,
                T.GuildSettingsSections.OVERVIEW,
                { section: T.AnalyticsSections.PREMIUM_GUILD_INVITE_SPLASH },
                T.GuildSettingsSubsections.INVITE
              )
            : (0, f.default)({
                analyticsLocations: e,
                analyticsSourceLocation:
                  T.AnalyticsSections.PREMIUM_GUILD_INVITE_SPLASH,
                guild: t,
                perks: (0, A.guildInviteUpsellPerks)(),
              }));
      }
      function U(e) {
        let { renderPopout: t, renderGuildHeaderDropdownButton: n } = e;
        return (0, a.jsx)(r.Popout, {
          renderPopout: () =>
            (0, a.jsx)("div", {
              onClick: e => e.stopPropagation(),
              children: t,
            }),
          position: "bottom",
          align: "center",
          animation: r.Popout.Animation.TRANSLATE,
          shouldShow: !0,
          children: () => n(),
        });
      }
      var G = s.memo(function (e) {
        let {
            contentTypes: t,
            theme: n,
            guild: s,
            renderGuildHeaderDropdownButton: r,
          } = e,
          { analyticsLocations: f } = (0, o.default)(),
          A = () => {
            m.default.track(T.AnalyticEvents.TOOLTIP_VIEWED, {
              type: N.PremiumUpsellTypes.PREMIUM_PROGRESS_BAR,
              location: { page: T.AnalyticsPages.GUILD_CHANNEL },
            });
          },
          G = () => {
            m.default.track(T.AnalyticEvents.PREMIUM_UPSELL_VIEWED, {
              type: N.PremiumUpsellTypes.INVITE_SPLASH_UPSELL,
              location: { page: T.AnalyticsPages.GUILD_CHANNEL },
              location_stack: f,
            });
          },
          j = (0, i.isThemeDark)(n) ? M : P,
          [w, k] = (0, c.useSelectedDismissibleContent)(
            t,
            g.DismissibleContentGroupName.GUILD_HEADER_TOOLTIPS
          );
        return (0, a.jsx)(a.Fragment, {
          children: (() => {
            switch (w) {
              case l.DismissibleContent.GUILD_HEADER_PREMIUM_GUILD_PROGRESS:
                return (0, a.jsx)(U, {
                  renderPopout: (0, a.jsx)(S.default, {
                    onComponentMount: A,
                    header:
                      R.default.Messages
                        .PREMIUM_PROGRESS_BAR_GUILD_HEADER_TOOLTIP_TITLE,
                    asset: (0, a.jsx)("img", {
                      alt: "",
                      src: j,
                      className: v.fullWidthImage,
                    }),
                    content:
                      R.default.Messages.PREMIUM_PROGRESS_BAR_GUILD_HEADER_TOOLTIP_CONTENT.format(),
                    buttonCTA:
                      R.default.Messages
                        .PREMIUM_PROGRESS_BAR_GUILD_HEADER_TOOLTIP_CTA_PRIMARY_ROLE_SETTINGS,
                    secondaryButtonCTA:
                      R.default.Messages
                        .PREMIUM_PROGRESS_BAR_GUILD_HEADER_TOOLTIP_CTA_SECONDARY,
                    onSecondaryClick: () => y(),
                    onClick: () => y(s),
                    markAsDismissed: k,
                  }),
                  renderGuildHeaderDropdownButton: r,
                });
              case l.DismissibleContent
                .GUILD_HEADER_PROGRESS_BAR_SIZE_COACH_MARK:
                return (0, a.jsx)(U, {
                  renderPopout: (0, a.jsx)(S.default, {
                    onComponentMount: A,
                    header:
                      R.default.Messages
                        .PREMIUM_PROGRESS_BAR_GUILD_HEADER_SIZE_TOOLTIP_TITLE,
                    asset: (0, a.jsx)("img", {
                      alt: "",
                      src: j,
                      className: v.fullWidthImage,
                    }),
                    content:
                      R.default.Messages.PREMIUM_PROGRESS_BAR_GUILD_HEADER_SIZE_TOOLTIP_CONTENT.format(),
                    buttonCTA:
                      R.default.Messages
                        .PREMIUM_PROGRESS_BAR_GUILD_HEADER_TOOLTIP_CTA_PRIMARY_ROLE_SETTINGS,
                    secondaryButtonCTA:
                      R.default.Messages
                        .PREMIUM_PROGRESS_BAR_GUILD_HEADER_TOOLTIP_CTA_SECONDARY,
                    onSecondaryClick: () => y(),
                    onClick: () => y(s),
                    markAsDismissed: k,
                  }),
                  renderGuildHeaderDropdownButton: r,
                });
              case l.DismissibleContent.GUILD_HEADER_ROLE_SUBSCRIPTION_UPSELL:
                return (0, a.jsx)(U, {
                  renderPopout: (0, a.jsx)(E.default, {
                    guildId: s.id,
                    markAsDismissed: k,
                  }),
                  renderGuildHeaderDropdownButton: r,
                });
              case l.DismissibleContent.GUILD_HEADER_SERVER_DISCOVERY_TOOLTIP:
                return (0, a.jsx)(U, {
                  renderPopout: (0, a.jsx)(d.default, {
                    onClick: () => x(s, !0),
                    onSecondaryClick: () => x(s),
                    markAsDismissed: k,
                  }),
                  renderGuildHeaderDropdownButton: r,
                });
              case l.DismissibleContent
                .GUILD_DISCOVERY_LANDING_PAGE_SETTINGS_UPSELL:
                return (0, a.jsx)(U, {
                  renderPopout: (0, a.jsx)(u.default, {
                    guild: s,
                    markAsDismissed: k,
                  }),
                  renderGuildHeaderDropdownButton: r,
                });
              case l.DismissibleContent.GUILD_HEADER_INVITE_SPLASH:
                let e = (0, p.isTierUnlocked)(s, T.BoostedGuildTiers.TIER_1)
                    ? R.default.Messages.INVITE_SPLASH_GUILD_HEADER_TOOLTIP_CONTENT.format()
                    : R.default.Messages.INVITE_SPLASH_GUILD_HEADER_TOOLTIP_CONTENT_LOCKED.format(
                        {
                          boostCount: (0,
                          p.getNumberOfAppliedBoostsNeededForTier)(
                            s,
                            T.BoostedGuildTiers.TIER_1
                          ),
                        }
                      ),
                  t = (0, p.isTierUnlocked)(s, T.BoostedGuildTiers.TIER_1)
                    ? R.default.Messages
                        .INVITE_SPLASH_GUILD_HEADER_TOOLTIP_CTA_PRIMARY_ROLE_SETTINGS
                    : R.default.Messages.LEARN_MORE;
                return (0, a.jsx)(U, {
                  renderPopout: (0, a.jsx)(S.default, {
                    onComponentMount: G,
                    header:
                      R.default.Messages
                        .INVITE_SPLASH_GUILD_HEADER_TOOLTIP_TITLE,
                    asset: (0, a.jsx)("img", {
                      alt: "",
                      src: L,
                      className: v.fullWidthImage,
                    }),
                    content: e,
                    buttonCTA: t,
                    secondaryButtonCTA:
                      R.default.Messages
                        .INVITE_SPLASH_GUILD_HEADER_TOOLTIP_CTA_SECONDARY,
                    onSecondaryClick: () => b(f),
                    onClick: () => b(f, s),
                    markAsDismissed: k,
                  }),
                  renderGuildHeaderDropdownButton: r,
                });
              case l.DismissibleContent.STUDENT_HUB_PRIVACY_SETTINGS_TOOLTIP:
                return (0, a.jsx)(U, {
                  renderPopout: (0, a.jsx)(C.default, { markAsDismissed: k }),
                  renderGuildHeaderDropdownButton: r,
                });
              case l.DismissibleContent.GUILD_HEADER_ACTIVE_THREADS_NOTICE:
                return (0, a.jsx)(U, {
                  renderPopout: (0, a.jsx)(S.default, {
                    className: O.tooltipOverrideColor,
                    header: R.default.Messages.ACTIVE_THREADS_UPSELL_HEADER,
                    content: R.default.Messages.ACTIVE_THREADS_UPSELL_CONTENT,
                    buttonCTA: R.default.Messages.GOT_IT,
                    onClick: () => k(g.ContentDismissActionType.UNKNOWN),
                    markAsDismissed: k,
                  }),
                  renderGuildHeaderDropdownButton: r,
                });
              case l.DismissibleContent.GUILD_HEADER_SOUNDBOARD_PERMISSION:
                return (0, a.jsx)(U, {
                  renderPopout: (0, a.jsx)(S.default, {
                    header: R.default.Messages.SOUNDBOARD_TOOLTIP_TITLE_NEW,
                    content: R.default.Messages.SOUNDBOARD_TOOLTIP_BODY,
                    buttonCTA: R.default.Messages.CHECK_IT_OUT,
                    secondaryButtonCTA: R.default.Messages.NO_THANKS,
                    asset: (0, a.jsx)("img", {
                      alt: "",
                      src: D,
                      className: v.fullWidthImage,
                    }),
                    onClick: () => {
                      _.default.open(s.id, T.GuildSettingsSections.ROLES),
                        _.default.selectRole(
                          s.getEveryoneRoleId(),
                          R.default.Messages.USE_SOUNDBOARD
                        );
                    },
                    markAsDismissed: k,
                  }),
                  renderGuildHeaderDropdownButton: r,
                });
              case l.DismissibleContent.MEDIA_CHANNEL_UPSELL:
                return (0, a.jsx)(U, {
                  renderPopout: (0, a.jsx)(I.default, {
                    guildId: s.id,
                    markAsDismissed: k,
                  }),
                  renderGuildHeaderDropdownButton: r,
                });
              case l.DismissibleContent
                .SERVER_SUBSCRIPTION_TIER_TEMPLATE_UPSELL:
                return (0, a.jsx)(U, {
                  renderPopout: (0, a.jsx)(h.default, {
                    guildId: s.id,
                    markAsDismissed: k,
                  }),
                  renderGuildHeaderDropdownButton: r,
                });
              default:
                return r();
            }
          })(),
        });
      });
    },
    118971: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return eI;
          },
        }),
        n("222007"),
        n("424973");
      var a = n("37983"),
        s = n("884691"),
        l = n("917351"),
        i = n.n(l),
        r = n("907002"),
        o = n("446674"),
        u = n("151426"),
        d = n("862337"),
        c = n("77078"),
        f = n("913144"),
        E = n("272030"),
        h = n("366634"),
        _ = n("241845"),
        C = n("84339"),
        I = n("812204"),
        S = n("685665"),
        m = n("619935"),
        p = n("731681"),
        T = n("947783"),
        g = n("303791"),
        A = n("453910"),
        N = n("862853"),
        R = n("10641"),
        O = n("384997"),
        v = n("149362"),
        L = n("145067"),
        M = n("754707"),
        P = n("93877"),
        D = n("167790"),
        y = n("81732"),
        x = n("518953"),
        b = n("341563"),
        U = n("240239"),
        G = n("6895"),
        j = n("1501"),
        w = n("689275"),
        k = n("12896"),
        F = n("612246"),
        B = n("5667"),
        H = n("161778"),
        V = n("42203"),
        Y = n("162805"),
        W = n("341542"),
        K = n("923959"),
        z = n("525065"),
        q = n("305961"),
        Q = n("778588"),
        Z = n("957255"),
        X = n("945956"),
        J = n("697218"),
        $ = n("719923"),
        ee = n("197881"),
        et = n("120817"),
        en = n("951568"),
        ea = n("637667"),
        es = n("828931"),
        el = n("89956"),
        ei = n("421595"),
        er = n("49111"),
        eo = n("427474"),
        eu = n("994428"),
        ed = n("695838"),
        ec = n("782340"),
        ef = n("271765");
      let eE = 64,
        eh = "server-settings",
        e_ = {
          origin: { x: -8, y: -48 },
          targetWidth: 40,
          targetHeight: 40,
          offset: { x: 0, y: 0 },
        };
      class eC extends s.PureComponent {
        static getDerivedStateFromProps(e) {
          let { guild: t, hasChannelNotice: n } = e;
          return null == t || null == t.banner || n
            ? { renderBanner: !1, bannerVisible: !1 }
            : null;
        }
        componentDidMount() {
          var e;
          this.setAnimatedValue(0),
            f.default.subscribe("LAYER_PUSH", this.closeAllHeaderNotices),
            (this.historyUnlisten = j.default.addRouteChangeListener(
              this.handleHistoryChange
            ));
          let { location: t } = j.default.getHistory();
          (null === (e = t.state) || void 0 === e
            ? void 0
            : e.shouldShowSubscribeTooltip) &&
            this.showTimeout.start(1e3, () =>
              this.setState({ shouldShowSubscribeTooltip: !0 })
            );
        }
        componentWillUnmount() {
          this.showTimeout.stop(),
            this.state.controller.dispose(),
            this.historyUnlisten(),
            f.default.unsubscribe("LAYER_PUSH", this.closeAllHeaderNotices);
        }
        getGuildBannerHash() {
          let { guild: e, hasChannelNotice: t } = this.props;
          return null == e || t ? null : e.banner;
        }
        renderGuildHeaderNotices(e) {
          let {
              showGuildTemplateDirtyTooltip: t,
              showGuildHeaderTutorial: n,
              anyLayerOpen: s,
            } = this.props,
            { shouldShowSubscribeTooltip: l } = this.state;
          if (n)
            return (0, a.jsx)("div", {
              onClick: t => (e ? null : t.stopPropagation()),
              children: (0, a.jsx)(k.default, {
                tutorialId: eh,
                position: "bottom",
                inlineSpecs: e_,
                children: this.renderGuildHeaderDropdownButton(e),
              }),
            });
          if (t)
            return (0, a.jsx)(c.Tooltip, {
              forceOpen: !0,
              color: c.TooltipColors.BRAND,
              position: "bottom",
              shouldShow: !e && !s,
              text: ec.default.Messages.GUILD_TEMPLATES_UNSYNCED_TOOLTIP,
              "aria-label":
                ec.default.Messages.GUILD_TEMPLATES_UNSYNCED_TOOLTIP,
              children: () => this.renderGuildHeaderDropdownButton(e),
            });
          if (!s && !e)
            return l
              ? (0, a.jsx)(c.Popout, {
                  renderPopout: () =>
                    (0, a.jsx)("div", {
                      onClick: e => e.stopPropagation(),
                      children: (0, a.jsx)(B.default, {
                        header:
                          ec.default.Messages
                            .PREMIUM_GUILD_SUBSCRIPTION_HEADER_SUBSCRIBE_TOOLTIP_HEADER,
                        content:
                          ec.default.Messages
                            .PREMIUM_GUILD_SUBSCRIPTION_HEADER_SUBSCRIBE_TOOLTIP_TEXT,
                        buttonCTA:
                          ec.default.Messages
                            .PREMIUM_GUILD_SUBSCRIPTION_HEADER_SUBSCRIBE_TOOLTIP_CLOSE,
                        onClick: this.handleCloseSubscribeTooltip,
                      }),
                    }),
                  position: "bottom",
                  align: "center",
                  animation: c.Popout.Animation.TRANSLATE,
                  shouldShow: !0,
                  children: () => this.renderGuildHeaderDropdownButton(e),
                })
              : this.renderGuildHeaderUpsellPopout(e);
          return this.renderGuildHeaderDropdownButton(e);
        }
        renderGuildHeader(e) {
          let {
              guild: t,
              isHeaderPopoutOpen: n,
              showGuildHeaderTutorial: s,
              showGuildTemplateDirtyTooltip: l,
              isGuildHeaderDismissibleTooltipShown: i,
              HeaderAnalyticsLocationProvider: r,
            } = this.props,
            {
              controller: o,
              renderBanner: u,
              bannerVisible: d,
              bannerVisibleHeight: f,
              communityInfoVisible: E,
            } = this.state,
            h = s || l || i;
          return null == t
            ? null
            : (0, a.jsx)(r, {
                children: (0, a.jsx)(c.LazyPopout, {
                  renderPopout: this.renderMenuPopout,
                  position: "bottom",
                  align: "center",
                  animation: c.Popout.Animation.SCALE,
                  shouldShow: n,
                  onRequestClose: () => {
                    (0, L.showGuildHeaderPopout)(!1);
                  },
                  children: s => {
                    let { onClick: l, ...i } = s;
                    return (0, a.jsx)(ea.default, {
                      guild: t,
                      controller: o,
                      renderBanner: u,
                      hasSubheader: e,
                      bannerVisible: d,
                      communityInfoVisible: E,
                      guildBanner: this.getGuildBannerHash(),
                      onClick: this.handleHeaderMenuToggle,
                      onContextMenu: this.handleHeaderContextMenu,
                      disableBannerAnimation: h,
                      animationOverlayHeight: f,
                      ...i,
                      children: this.renderGuildHeaderNotices(n),
                    });
                  },
                }),
              });
        }
        setAnimatedValue(e) {
          let { guild: t } = this.props,
            n = null != this.getGuildBannerHash(),
            a = null == t ? void 0 : t.hasCommunityInfoSubheader();
          null != t &&
            (n || a) &&
            (n
              ? this.setAnimatedValueForBanner(e)
              : this.setAnimatedValueForGuildInfo(e));
        }
        setAnimatedValueForBanner(e) {
          let {
            renderBanner: t,
            communityInfoVisible: n,
            bannerVisible: a,
            bannerVisibleHeight: s,
            controller: l,
          } = this.state;
          ((e >= eE && a) || (e < eE && !a)) && (a = !a),
            ((e >= 88 && !t) || (e < 88 && t)) && (t = !t),
            (s = Math.max(88 - e, 0)),
            (n = a),
            (t !== this.state.renderBanner ||
              a !== this.state.bannerVisible ||
              s !== this.state.bannerVisibleHeight ||
              n !== this.state.communityInfoVisible) &&
              this.setState({
                renderBanner: t,
                bannerVisible: a,
                bannerVisibleHeight: s,
                communityInfoVisible: n,
              }),
            l
              .update({
                value: Math.min(1, Math.max(0, 1 - e / 88)),
                immediate: !0,
              })
              .start();
        }
        setAnimatedValueForGuildInfo(e) {
          let { communityInfoVisible: t, controller: n } = this.state;
          ((e >= 20 && t) || (e < 20 && !t)) && (t = !t),
            t !== this.state.communityInfoVisible &&
              this.setState({ communityInfoVisible: t }),
            n
              .update({
                value: Math.min(1, Math.max(0, 1 - e / 20)),
                immediate: !0,
              })
              .start();
        }
        renderChannelList() {
          let {
            isUnavailable: e,
            guild: t,
            selectedChannel: n,
            enableStudyGroup: s,
            ...l
          } = this.props;
          if (e || null == t)
            return (0, a.jsx)(ei.default, {
              withBannerPadding: null != t && null != this.getGuildBannerHash(),
            });
          {
            if (t.hasFeature(er.GuildFeatures.HUB) && !s)
              return (0, a.jsx)("div", {
                className: ef.hubContainer,
                children: (0, a.jsx)(U.default, {
                  guild: t,
                  channel: null != n ? n : K.default.getDefaultChannel(t.id),
                }),
              });
            let e =
              t.id === ed.FAVORITES_RAW_GUILD_ID
                ? et.FavoritesChannelList
                : et.GuildChannelList;
            return (0, a.jsx)(e, {
              guild: t,
              ...l,
              guildBanner: this.getGuildBannerHash(),
              hasGuildSubheader: this.state.hasGuildSubheader,
              onScroll:
                null != t &&
                (null != this.getGuildBannerHash() ||
                  t.hasCommunityInfoSubheader())
                  ? this.pinBannerOrGuildInfo
                  : null,
            });
          }
        }
        renderFooter() {
          let { selectedChannelId: e, shouldRenderClipsEducation: t } =
            this.props;
          return (0, a.jsx)(O.default, {
            contentTypes: [],
            children: n => {
              let { visibleContent: s, markAsDismissed: l } = n;
              switch (s) {
                case u.DismissibleContent.BASH_OUT_COACH_MARK:
                  return (0, a.jsx)(en.EmbeddedActivityTutorial, {
                    channelId: null != e ? e : void 0,
                    markAsDismissed: l,
                    tutorialType: en.TutorialType.BASH_OUT,
                  });
                case u.DismissibleContent.ACTIVITIES_COACH_MARK_GAME_NIGHT:
                  return (0, a.jsx)(en.EmbeddedActivityTutorial, {
                    channelId: null != e ? e : void 0,
                    markAsDismissed: l,
                    tutorialType: en.TutorialType.GAME_NIGHT,
                  });
                default:
                  if (t) return (0, a.jsx)(T.default, {});
                  return (0, a.jsx)(a.Fragment, {});
              }
            },
          });
        }
        render() {
          let { guild: e, FooterAnalyticsLocationProvider: t } = this.props;
          return (0, a.jsxs)("nav", {
            className: ef.container,
            onContextMenu: this.handleContextMenu,
            "aria-label": ec.default.Messages.GUILD_SIDEBAR_A11Y_LABEL.format({
              guildName: null != e ? e.toString() : "",
            }),
            children: [
              null != e && this.renderGuildHeader(this.state.hasGuildSubheader),
              null != e &&
                (0, a.jsx)(el.default, {
                  guild: e,
                  setHasSubheader: e => this.setState({ hasGuildSubheader: e }),
                }),
              this.renderChannelList(),
              (0, a.jsx)(t, { children: this.renderFooter() }),
            ],
          });
        }
        constructor(...e) {
          super(...e),
            (this.historyUnlisten = () => {}),
            (this.showTimeout = new d.Timeout()),
            (this.state = {
              controller: new r.Controller({ value: 1, immediate: !0 }),
              renderBanner: !1,
              bannerVisible: !1,
              communityInfoVisible: !1,
              shouldShowSubscribeTooltip: !1,
              bannerVisibleHeight: 88,
              hasGuildSubheader: !1,
            }),
            (this.handleHistoryChange = e => {
              null != e.state &&
                e.state.shouldShowSubscribeTooltip &&
                this.showTimeout.start(1e3, () =>
                  this.setState({ shouldShowSubscribeTooltip: !0 })
                );
            }),
            (this.handleHeaderMenuToggle = e => {
              let { isHeaderPopoutOpen: t } = this.props;
              e.stopPropagation(),
                (0, L.showGuildHeaderPopout)(!t),
                this.closeAllHeaderNotices();
            }),
            (this.handleContextMenu = e => {
              let { guild: t } = this.props;
              null != t &&
                (0, E.openContextMenuLazy)(e, async () => {
                  let { default: e } = await n
                    .el("358060")
                    .then(n.bind(n, "358060"));
                  return n => (0, a.jsx)(e, { ...n, guild: t });
                });
            }),
            (this.handleHeaderContextMenu = e => {
              let { guild: t } = this.props;
              null != t &&
                (0, E.openContextMenuLazy)(e, async () => {
                  let { default: e } = await n
                    .el("374705")
                    .then(n.bind(n, "374705"));
                  return n => (0, a.jsx)(e, { ...n, guild: t });
                });
            }),
            (this.closeAllHeaderNotices = () => {
              this.handleCloseSubscribeTooltip(),
                this.handleCloseTemplateDirtyTooltip(),
                this.handleCloseStudentHubPrivacySettingsTooltip();
            }),
            (this.handleCloseStudentHubPrivacySettingsTooltip = () => {
              var e;
              let t = (0, R.isDismissibleContentDismissed)(
                  u.DismissibleContent.STUDENT_HUB_PRIVACY_SETTINGS_TOOLTIP
                ),
                n =
                  null === (e = this.props.guild) || void 0 === e
                    ? void 0
                    : e.hasFeature(er.GuildFeatures.HUB);
              !t &&
                n &&
                (0, R.markDismissibleContentAsDismissed)(
                  u.DismissibleContent.STUDENT_HUB_PRIVACY_SETTINGS_TOOLTIP,
                  { dismissAction: eu.ContentDismissActionType.AUTO }
                );
            }),
            (this.handleCloseSubscribeTooltip = () => {
              this.showTimeout.stop(),
                this.state.shouldShowSubscribeTooltip &&
                  this.setState({ shouldShowSubscribeTooltip: !1 });
            }),
            (this.handleCloseTemplateDirtyTooltip = () => {
              let { guild: e, showGuildTemplateDirtyTooltip: t } = this.props;
              null != e && t && y.default.hideGuildTemplateDirtyTooltip(e.id);
            }),
            (this.renderMenuPopout = async () => {
              let { default: e } = await n
                .el("992996")
                .then(n.bind(n, "992996"));
              return t => {
                let { closePopout: n } = t,
                  { guild: s } = this.props;
                return null != s && (0, a.jsx)(e, { onClose: n, guild: s });
              };
            }),
            (this.renderGuildHeaderUpsellPopout = e => {
              let {
                showGuildBoostingProgressBarUpsell: t,
                showGuildBoostingProgressBarSizeUpsell: n,
                showRoleSubscriptionUpsell: s,
                showDiscoveryTooltip: l,
                showInviteSplashUpsell: i,
                showDiscoveryLandingPageSettingsUpsell: r,
                showHubPrivacySettingsTooltip: o,
                showActiveThreadsNotice: d,
                showGuildSoundboardPermissionUpsell: c,
                showMediaChannelUpsell: f,
                showTierTemplatesUpsell: E,
                guild: h,
                theme: _,
              } = this.props;
              if (null == h) return this.renderGuildHeaderDropdownButton(e);
              let C = [];
              return (o &&
                C.push(
                  u.DismissibleContent.STUDENT_HUB_PRIVACY_SETTINGS_TOOLTIP
                ),
              d &&
                C.push(u.DismissibleContent.GUILD_HEADER_ACTIVE_THREADS_NOTICE),
              t &&
                C.push(
                  u.DismissibleContent.GUILD_HEADER_PREMIUM_GUILD_PROGRESS
                ),
              n &&
                C.push(
                  u.DismissibleContent.GUILD_HEADER_PROGRESS_BAR_SIZE_COACH_MARK
                ),
              s &&
                C.push(
                  u.DismissibleContent.GUILD_HEADER_ROLE_SUBSCRIPTION_UPSELL
                ),
              c &&
                C.push(u.DismissibleContent.GUILD_HEADER_SOUNDBOARD_PERMISSION),
              i && C.push(u.DismissibleContent.GUILD_HEADER_INVITE_SPLASH),
              l &&
                C.push(
                  u.DismissibleContent.GUILD_HEADER_SERVER_DISCOVERY_TOOLTIP
                ),
              r &&
                C.push(
                  u.DismissibleContent
                    .GUILD_DISCOVERY_LANDING_PAGE_SETTINGS_UPSELL
                ),
              0 === C.length)
                ? this.renderGuildHeaderDropdownButton(e)
                : (f && C.push(u.DismissibleContent.MEDIA_CHANNEL_UPSELL),
                  E &&
                    C.push(
                      u.DismissibleContent
                        .SERVER_SUBSCRIPTION_TIER_TEMPLATE_UPSELL
                    ),
                  (0, a.jsx)(es.default, {
                    contentTypes: C,
                    theme: _,
                    guild: h,
                    renderGuildHeaderDropdownButton: () =>
                      this.renderGuildHeaderDropdownButton(e),
                  }));
            }),
            (this.renderGuildHeaderDropdownButton = e =>
              (0, a.jsx)(h.default, { open: e, className: ef.dropdownButton })),
            (this.pinBannerOrGuildInfo = e => {
              let { scrollTop: t } = e;
              this.setAnimatedValue(t);
            });
        }
      }
      function eI(e) {
        var t;
        let { guildId: n, hideSelectedChannel: l, selectedChannelId: r } = e,
          d = (0, o.useStateFromStores)([q.default], () =>
            q.default.getGuild(n)
          );
        (0, _.useGlobalTriggerDebugging)(n);
        let f = (0, v.default)(n),
          E = (0, o.useStateFromStores)(
            [Y.default],
            () => Y.default.getGuildDimensions(n).scrollTo
          ),
          h = (0, o.useStateFromStores)([X.default], () =>
            X.default.getChannelId()
          ),
          [T, O, y] = (0, o.useStateFromStoresArray)([Z.default], () => [
            Z.default.can(er.Permissions.MANAGE_GUILD, d),
            Z.default.can(er.Permissions.MANAGE_ROLES, d),
            Z.default.can(er.Permissions.MANAGE_THREADS, d),
          ]),
          U = (0, o.useStateFromStores)([W.default], () =>
            W.default.isUnavailable(n)
          ),
          j = (0, o.useStateFromStores)([J.default], () =>
            J.default.getCurrentUser()
          ),
          k = (0, o.useStateFromStores)([H.default], () =>
            H.default.darkSidebar ? er.ThemeTypes.DARK : H.default.theme
          ),
          { enableStudyGroup: B } = (0, b.useHubStudyGroupExperiment)(d),
          K = (0, N.default)(e =>
            e.currentlyShown.has(
              u.DismissibleContent.NAGBAR_NOTICE_CONNECT_PLAYSTATION
            )
          ),
          [et, en] = s.useState(!K),
          ea = (0, C.default)(n),
          { AnalyticsLocationProvider: es } = (0, S.default)(
            I.default.GUILD_HEADER
          ),
          { AnalyticsLocationProvider: el } = (0, S.default)(
            I.default.GUILD_CHANNEL_LIST_FOOTER
          );
        s.useEffect(() => {
          n !== ea && en(!K);
        }, [n, ea, K]);
        let [ei, ed] = (0, N.default)(e => [
            eo.CHANNEL_NOTICES.some(t =>
              e.currentlyShown.has(t.dismissibleContentType)
            ),
            e.currentlyShownGroup.has(
              eu.DismissibleContentGroupName.GUILD_HEADER_TOOLTIPS
            ),
          ]),
          ec = (0, p.default)(d),
          ef = (0, c.useModalsStore)(c.hasAnyModalOpenSelector),
          eE = (0, o.useStateFromStores)([Q.default], () =>
            Q.default.hasLayers()
          ),
          e_ = (0, o.useStateFromStores)([F.default], () =>
            F.default.shouldShow(eh)
          ),
          eI =
            T &&
            (null == d ? void 0 : d.premiumProgressBarEnabled) === !1 &&
            !ee.ProcessArgs.isDisallowPopupsSet(),
          eS = (0, o.useStateFromStores)([z.default], () =>
            z.default.getMemberCount(n)
          ),
          em =
            T &&
            null != eS &&
            eS >= 30 &&
            (null == d ? void 0 : d.premiumProgressBarEnabled) === !1 &&
            !ee.ProcessArgs.isDisallowPopupsSet(),
          ep =
            O &&
            null != d &&
            (d.hasFeature(er.GuildFeatures.COMMUNITY) ||
              (null != eS && eS > 50)),
          eT = (0, D.default)(n),
          eg = (0, A.useLowerMemberCountRequirements)(n),
          eA = (null == d ? void 0 : d.hasFeature(er.GuildFeatures.HUB)) === !0,
          eN =
            T &&
            (null == d
              ? void 0
              : d.hasFeature(er.GuildFeatures.DISCOVERABLE)) === !0,
          eR = (0, m.useBlockedPaymentsConfig)(),
          eO =
            (T ||
              (null == d ? void 0 : d.premiumTier) ===
                er.BoostedGuildTiers.NONE) &&
            !ee.ProcessArgs.isDisallowPopupsSet() &&
            !eR,
          ev = (0, o.useStateFromStores)(
            [x.default, Q.default],
            () =>
              null != d &&
              null != j &&
              T &&
              !Q.default.hasLayers() &&
              x.default.shouldShowGuildTemplateDirtyTooltip(n)
          ),
          eL = (0, o.useStateFromStores)([V.default], () =>
            V.default.getChannel(r)
          ),
          { isPopoutOpen: eM } = (0, L.useGuildHeaderPopoutStore)(),
          eP =
            null !==
              (t =
                null == d
                  ? void 0
                  : d.hasFeature(er.GuildFeatures.COMMUNITY)) &&
            void 0 !== t &&
            t,
          eD = (0, o.useStateFromStores)(
            [w.default],
            () => !i.isEmpty(w.default.getThreadsForGuild(n))
          ),
          ey = $.default.isNewUser(j),
          ex = et && !ey,
          eb = (0, g.default)(j);
        (0, M.default)(d);
        let eU = (0, R.useIsDismissibleContentDismissed)(
            u.DismissibleContent.PREMIUM_TUTORIAL_SERVER_MENU_TOOLTIP
          ),
          eG = (0, G.default)(n),
          ej = (0, P.default)(n);
        return (0, a.jsx)(eC, {
          guildId: n,
          hideSelectedChannel: l,
          guild: d,
          scrollToChannel: E,
          selectedChannelId: l ? null : r,
          selectedChannel: eL,
          selectedVoiceChannelId: h,
          voiceStates: f,
          isUnavailable: U,
          theme: k,
          user: j,
          hasChannelNotice: null != ec || ei,
          anyLayerOpen: ef || eE,
          showGuildBoostingProgressBarUpsell: eI,
          showGuildBoostingProgressBarSizeUpsell: em,
          showInviteSplashUpsell: eO,
          showDiscoveryLandingPageSettingsUpsell: eN,
          showGuildHeaderTutorial: e_,
          showGuildTemplateDirtyTooltip: ev,
          showRoleSubscriptionUpsell: eT,
          showDiscoveryTooltip: eg,
          showHubPrivacySettingsTooltip: eA,
          showNewUnreadsBar: eP,
          showActiveThreadsNotice: y && null != eS && eS >= 200 && eD,
          showGuildSoundboardPermissionUpsell: ep,
          showMediaChannelUpsell: eG,
          showTierTemplatesUpsell: ej,
          isHeaderPopoutOpen: eM,
          enableStudyGroup: B,
          isGuildHeaderDismissibleTooltipShown: ed,
          canShowCoachMarkAtBottom: et,
          HeaderAnalyticsLocationProvider: es,
          FooterAnalyticsLocationProvider: el,
          shouldRenderClipsEducation: eb,
          isTutorialHighlightDismissed: eU,
          shouldRenderBurstCoachmark: ex,
        });
      }
    },
    89956: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("640322"),
        i = n("130107");
      function r(e) {
        let { guild: t, setHasSubheader: n } = e,
          r = s.useRef(null);
        return (
          s.useLayoutEffect(() => {
            let e = r.current;
            null != e && n(e.childNodes.length > 0);
          }),
          (0, a.jsx)("div", {
            className: i.container,
            ref: r,
            children: (0, a.jsx)(l.default, { guild: t }),
          })
        );
      }
    },
    421595: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("414456"),
        l = n.n(s),
        i = n("274531");
      let r = () => (0, a.jsx)("div", { className: i.spacer }),
        o = () => (0, a.jsx)("div", { className: i.category }),
        u = e => {
          let { width: t } = e;
          return (0, a.jsxs)("div", {
            className: i.channel,
            children: [
              (0, a.jsx)("div", { className: i.channelIcon }),
              (0, a.jsx)("div", {
                className: i.channelName,
                style: { width: "".concat(t, "px") },
              }),
            ],
          });
        };
      var d = e => {
        let { withBannerPadding: t } = e;
        return (0, a.jsxs)("div", {
          className: l(i.container, { [i.bannerPadding]: t }),
          children: [
            (0, a.jsx)(o, {}),
            (0, a.jsx)(u, { width: 100 }),
            (0, a.jsx)(u, { width: 74 }),
            (0, a.jsx)(u, { width: 100 }),
            (0, a.jsx)(u, { width: 70 }),
            (0, a.jsx)(u, { width: 112 }),
            (0, a.jsx)(u, { width: 175 }),
            (0, a.jsx)(r, {}),
            (0, a.jsx)(o, {}),
            (0, a.jsx)(u, { width: 100 }),
            (0, a.jsx)(u, { width: 74 }),
            (0, a.jsx)(u, { width: 100 }),
            (0, a.jsx)(u, { width: 70 }),
            (0, a.jsx)(u, { width: 112 }),
            (0, a.jsx)(u, { width: 56 }),
          ],
        });
      };
    },
    518953: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var a = n("446674"),
        s = n("95410"),
        l = n("913144");
      let i = "hasSeenGuildTemplatePromotionTooltip",
        r = {},
        o = !0 === s.default.get(i);
      function u(e) {
        let { guildId: t } = e;
        r = { ...r, [t]: !1 };
      }
      class d extends a.default.Store {
        shouldShowGuildTemplateDirtyTooltip(e) {
          var t;
          return null !== (t = r[e]) && void 0 !== t && t;
        }
        shouldShowGuildTemplatePromotionTooltip() {
          return !o;
        }
      }
      d.displayName = "GuildTemplateTooltipStore";
      var c = new d(l.default, {
        GUILD_TEMPLATE_DIRTY_TOOLTIP_REFRESH: function (e) {
          let { guildTemplate: t } = e;
          r = { ...r, [t.source_guild_id]: t.is_dirty || !1 };
        },
        GUILD_TEMPLATE_PROMOTION_TOOLTIP_HIDE: function () {
          s.default.set(i, !0), (o = !0);
        },
        GUILD_TEMPLATE_SYNC_SUCCESS: function (e) {
          r = { ...r, [e.guildTemplate.source_guild_id]: !1 };
        },
        GUILD_TEMPLATE_DIRTY_TOOLTIP_HIDE: u,
        GUILD_TEMPLATE_DELETE_SUCCESS: u,
      });
    },
    913645: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        });
      var a = n("742270"),
        s = n("815157"),
        l = n("391679"),
        i = n("523086"),
        r = n("599110"),
        o = n("65300"),
        u = n("883069"),
        d = n("49111");
      let c = "template";
      var f = {
        ...u.default,
        openNativeAppModal(e) {
          i.default.openNativeAppModal(e, d.RPCCommands.GUILD_TEMPLATE_BROWSER);
        },
        openMobileApp(e, t) {
          if (
            null != platform.ua &&
            platform.ua.toLowerCase().indexOf("googlebot") > -1
          )
            return;
          let n =
              null != e
                ? (0, a.getGuildTemplateDynamicLinkTemplate)(e)
                : (0, a.getDefaultDynamicLinkTemplate)(),
            i = (0, s.generateAttemptId)(),
            u = (0, s.default)(n, {
              utmSource: c,
              fingerprint: t,
              attemptId: i,
            });
          r.default.track(d.AnalyticEvents.DEEP_LINK_CLICKED, {
            fingerprint: (0, l.maybeExtractId)(t),
            attempt_id: i,
            source: c,
            guild_template_code: e,
          }),
            o.default.launch(u, () => {});
        },
      };
    },
    236199: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var a = n("913144"),
        s = n("597517"),
        l = n("533613"),
        i = {
          init() {
            a.default.subscribe("VOICE_CHANNEL_SELECT", e => {
              let { channelId: t } = e;
              null == t &&
                s.hideHotspot(l.HotspotLocations.VOICE_PANEL_INTRODUCTION);
            });
          },
        };
    },
    341563: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useHubStudyGroupExperiment: function () {
            return r;
          },
        });
      var a = n("884691"),
        s = n("862205"),
        l = n("49111");
      let i = (0, s.createExperiment)({
          kind: "guild",
          id: "2021-10_study_group",
          label: "Student hub study group",
          defaultConfig: { enableStudyGroup: !1 },
          treatments: [
            {
              id: 1,
              label: "Enables study group sidebar",
              config: { enableStudyGroup: !0 },
            },
          ],
        }),
        r = e => {
          var t;
          a.useEffect(() => {
            null != e &&
              e.hasFeature(l.GuildFeatures.HUB) &&
              i.trackExposure({ guildId: e.id, location: "467c32_1" });
          }, [e]);
          let n = i.useExperiment(
            {
              guildId:
                null !== (t = null == e ? void 0 : e.id) && void 0 !== t
                  ? t
                  : l.EMPTY_STRING_SNOWFLAKE_ID,
              location: "467c32_2",
            },
            {
              autoTrackExposure: !1,
              disable: null == e || !e.hasFeature(l.GuildFeatures.HUB),
            }
          );
          return n;
        };
    },
    973191: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("77078"),
        l = n("745633"),
        i = n("782340"),
        r = n("103453"),
        o = e => {
          let { hasHub: t } = e;
          return (0, a.jsxs)("div", {
            className: r.container,
            children: [
              (0, a.jsx)("div", {
                className: r.iconContainer,
                children: (0, a.jsx)(l.default, {
                  color: s.tokens.colors.WHITE.css,
                }),
              }),
              (0, a.jsx)(s.Text, {
                color: "header-primary",
                variant: "text-lg/semibold",
                className: r.header,
                children: t
                  ? i.default.Messages.HUB_EMAIL_CONNECTION_ADD_HEADER
                  : i.default.Messages.HUB_EMAIL_CONNECTION_JOIN_HEADER,
              }),
              (0, a.jsx)(s.Text, {
                color: "header-secondary",
                variant: "text-sm/normal",
                className: r.description,
                children: t
                  ? i.default.Messages.HUB_EMAIL_CONNECTION_ADD_DESCRIPTION
                  : i.default.Messages
                      .HUB_EMAIL_CONNECTION_JOIN_CARD_DESCRIPTION,
              }),
              (0, a.jsx)("div", { className: r.gap }),
              (0, a.jsx)(s.Button, {
                size: s.Button.Sizes.LARGE,
                color: t ? s.Button.Colors.PRIMARY : s.Button.Colors.GREEN,
                onClick: () =>
                  (0, s.openModalLazy)(async () => {
                    let { default: e } = await n
                      .el("927475")
                      .then(n.bind(n, "927475"));
                    return t => (0, a.jsx)(e, { ...t });
                  }),
                children: (0, a.jsx)(s.Text, {
                  variant: "text-sm/semibold",
                  className: r.addButton,
                  color: "none",
                  children: t
                    ? i.default.Messages.HUB_EMAIL_CONNECTION_JOIN_ANOTHER
                    : i.default.Messages.HUB_EMAIL_CONNECTION_JOIN_MY_SCHOOOL,
                }),
              }),
            ],
          });
        };
    },
    143217: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("446674"),
        l = n("77078"),
        i = n("851387"),
        r = n("161778"),
        o = n("465126"),
        u = n("973191"),
        d = n("782340"),
        c = n("87484"),
        f = e => {
          let { guilds: t } = e,
            n = (0, s.useStateFromStores)([r.default], () => r.default.theme),
            f = t.map(e =>
              (0, a.jsx)(
                o.default,
                {
                  className: c.guildCard,
                  onView: () => i.default.transitionToGuildSync(e.id),
                  guild: {
                    ...e,
                    presenceCount: void 0,
                    memberCount: void 0,
                    premiumSubscriptionCount: void 0,
                    emojis: void 0,
                  },
                  theme: n,
                },
                e.id
              )
            );
          return (0, a.jsx)("section", {
            className: c.guildListSection,
            children:
              t.length > 0
                ? (0, a.jsxs)("div", {
                    children: [
                      (0, a.jsx)(l.Heading, {
                        className: c.title,
                        variant: "heading-lg/semibold",
                        children: d.default.Messages.YOUR_HUB,
                      }),
                      (0, a.jsxs)("div", {
                        className: c.guildList,
                        children: [f, (0, a.jsx)(u.default, { hasHub: !0 })],
                      }),
                    ],
                  })
                : (0, a.jsx)("div", {
                    className: c.guildList,
                    children: (0, a.jsx)(u.default, { hasHub: !1 }),
                  }),
          });
        };
    },
    40546: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("745633"),
        l = n("11056"),
        i = n("447621"),
        r = n("782340"),
        o = n("791666"),
        u = e => {
          let {
            handleCategorySelect: t,
            shouldDisplaySelectedCategory: n,
            currentCategoryId: u,
          } = e;
          return (0, a.jsx)(
            l.default,
            {
              avatar: (0, a.jsx)(s.default, {}),
              name: r.default.Messages.HUB_SCHOOL_HUBS,
              focusProps: { offset: { right: 4, top: 1, bottom: 1 } },
              onClick: () => {
                t(i.DISCORD_HUB_ID);
              },
              wrapContent: !0,
              selected: n && i.DISCORD_HUB_ID === u,
              className: o.categoryItem,
              selectedClassName: o.selectedCategoryItem,
              innerClassName: o.itemInner,
            },
            i.DISCORD_HUB_ID
          );
        };
    },
    349682: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("77078"),
        i = n("69927"),
        r = n("794818"),
        o = n("244922"),
        u = n("143217"),
        d = n("447621"),
        c = n("782340"),
        f = n("623798"),
        E = n("152985"),
        h = e => {
          let { loadId: t } = e,
            n = (0, o.default)();
          return (
            s.useEffect(() => {
              (0, r.trackDiscoveryViewed)({
                loadId: t,
                gamesYouPlayGuilds: [],
                allGuilds: [],
                categoryId: d.DISCORD_HUB_ID,
              });
            }, [t]),
            (0, i.usePageTitle)({
              subsection: c.default.Messages.HUB_SCHOOL_HUBS,
              location: c.default.Messages.HUB_DIRECTORY_SEARCH_TITLE,
            }),
            (0, a.jsx)(l.Scroller, {
              className: f.scroller,
              children: (0, a.jsxs)("div", {
                className: f.viewWrapper,
                children: [
                  (0, a.jsxs)("div", {
                    className: f.headerContainer,
                    children: [
                      (0, a.jsx)("img", {
                        alt: "",
                        className: f.headerImage,
                        src: E,
                      }),
                      (0, a.jsxs)("div", {
                        className: f.headerContent,
                        children: [
                          (0, a.jsx)(l.Heading, {
                            className: f.headerText,
                            variant: "heading-xl/semibold",
                            children:
                              c.default.Messages.HUB_DIRECTORY_SEARCH_TITLE,
                          }),
                          (0, a.jsx)(l.Text, {
                            className: f.headerDescription,
                            variant: "text-md/normal",
                            color: "none",
                            children:
                              c.default.Messages.HUB_DIRECTORY_SEARCH_SUBTITLE,
                          }),
                        ],
                      }),
                    ],
                  }),
                  (0, a.jsx)(u.default, { guilds: n }),
                  (0, a.jsx)("div", { className: f.divider }),
                  (0, a.jsx)(l.Text, {
                    className: f.footerDescription,
                    variant: "text-md/medium",
                    color: "header-secondary",
                    children:
                      c.default.Messages.HUB_DISCOVERY_FOOTER_DESCRIPTION,
                  }),
                ],
              }),
            })
          );
        };
    },
    273457: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return C;
          },
        }),
        n("222007"),
        n("506083");
      var a = n("37983"),
        s = n("884691"),
        l = n("446674"),
        i = n("970728"),
        r = n("393414"),
        o = n("305961"),
        u = n("337543"),
        d = n("554054"),
        c = n("831588"),
        f = n("927475"),
        E = n("49111"),
        h = n("289382"),
        _ = n("789283"),
        C = e => {
          let { guildId: t, inviteCode: n } = e,
            [C, I] = s.useState(h.WaveStates.INITIAL),
            [S, m] = s.useState(null != n);
          s.useEffect(() => {
            null != n && i.default.resolveInvite(n, "Hub").finally(() => m(!1));
          }, [n]);
          let p = (0, l.useStateFromStores)([u.default], () =>
              null != n ? u.default.getInvite(n) : null
            ),
            T = (0, l.useStateFromStores)([o.default], () =>
              o.default.getGuild(t)
            );
          s.useEffect(() => {
            null != T && (0, r.transitionTo)(E.Routes.CHANNEL(t));
          }, [T, t]);
          let g = s.useCallback(e => {
              I(t => Math.max(t, e));
            }, []),
            A = (0, c.getArtForPath)();
          return (0, a.jsx)("div", {
            className: _.page,
            children: (0, a.jsxs)(d.default, {
              embedded: !0,
              splash: A,
              waveState: C,
              showLogo: !1,
              updateWaveState: g,
              children: [
                (0, a.jsx)("div", { className: _.dragRegion }),
                (0, a.jsx)("div", {
                  className: _.contentWrapper,
                  children:
                    !S &&
                    (0, a.jsx)(f.HubEmailConnectionModalView, { invite: p }),
                }),
              ],
            }),
          });
        };
    },
    79176: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("77078"),
        l = n("963662"),
        i = n("49111"),
        r = n("994428"),
        o = n("782340"),
        u = n("843528");
      function d(e) {
        let { guild: t, markAsDismissed: d } = e;
        return (0, a.jsx)(l.default, {
          guild: t,
          onDismissed: () => d(r.ContentDismissActionType.UNKNOWN),
          onClick: function () {
            (0, s.openModalLazy)(async () => {
              let { default: e } = await n
                .el("927475")
                .then(n.bind(n, "927475"));
              return t => (0, a.jsx)(e, { ...t });
            });
          },
          message: o.default.Messages.HUB_LINK_CHANNEL_NOTICE_BODY,
          cta: o.default.Messages.LEARN_MORE,
          trackingSource: i.ChannelNoticeCtaSources.HUB_LINK_NOTICE,
          type: i.ChannelNoticeTypes.HUB_LINK,
          image: u,
        });
      }
    },
    465511: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("77078"),
        l = n("994428"),
        i = n("782340"),
        r = n("540675");
      function o(e) {
        let { markAsDismissed: t } = e;
        return (0, a.jsxs)("div", {
          className: r.container,
          children: [
            (0, a.jsx)("div", { className: r.pointer }),
            (0, a.jsx)(s.Text, {
              variant: "text-sm/normal",
              className: r.content,
              children: i.default.Messages.HUB_PRIVACY_SETTINGS_TOOLTIP,
            }),
            (0, a.jsx)(s.Button, {
              look: s.Button.Looks.INVERTED,
              fullWidth: !0,
              onClick: () => {
                t(l.ContentDismissActionType.AUTO);
              },
              children: i.default.Messages.GOT_IT,
            }),
          ],
        });
      }
    },
    244922: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        }),
        n("222007");
      var a = n("446674"),
        s = n("305961"),
        l = n("49111");
      function i() {
        return (0, a.useStateFromStores)([s.default], () => {
          let e = s.default.getGuilds();
          return Object.entries(e)
            .filter(e => {
              let [t, n] = e;
              return n.hasFeature(l.GuildFeatures.HUB);
            })
            .map(e => {
              let [t, n] = e;
              return n;
            });
        });
      }
    },
    986321: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("907002"),
        l = n("446674"),
        i = n("139321"),
        r = n("923959"),
        o = n("957255"),
        u = n("119153"),
        d = n("602632"),
        c = n("723872"),
        f = n("49111");
      function E(e) {
        let { channel: t, guild: n } = e,
          r = (0, l.useStateFromStores)([i.HotspotStore], () =>
            i.HotspotStore.hasHotspot(i.HotspotLocations.HUB_STUDY_ROOM_NOTICE)
          ),
          o = (0, c.useConnectedInCurrentHub)(t.guild_id),
          f = (0, s.useSpring)({
            maxHeight: o ? 0 : 300,
            overflow: "hidden",
            delay: 400,
          });
        return (0, a.jsx)(s.animated.div, {
          style: f,
          children: r
            ? (0, a.jsx)(u.default, { channel: t, guild: n })
            : (0, a.jsx)(d.default, {
                name: "\uD83D\uDCDA☕ ".concat(t.name),
                channel: t,
              }),
        });
      }
      var h = function (e) {
        let { guild: t } = e,
          n = (0, l.useStateFromStores)([r.default], () => {
            let e = r.default.getChannels(t.id),
              n = e[r.GUILD_VOCAL_CHANNELS_KEY];
            return n[0];
          }),
          s = (0, l.useStateFromStores)(
            [o.default],
            () => null != n && o.default.can(f.Permissions.CONNECT, n.channel)
          );
        return t.hasFeature(f.GuildFeatures.HUB) && null != n && s
          ? (0, a.jsx)(E, { channel: n.channel, guild: t })
          : null;
      };
    },
    119153: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("963662"),
        l = n("139321"),
        i = n("393414"),
        r = n("716214"),
        o = n("49111"),
        u = n("782340"),
        d = n("963301"),
        c = e => {
          let { channel: t, guild: n } = e;
          return (0, a.jsx)(s.default, {
            guild: n,
            onDismissed: () => {
              (0, l.hideHotspot)(l.HotspotLocations.HUB_STUDY_ROOM_NOTICE);
            },
            onClick: () => {
              (0, l.hideHotspot)(l.HotspotLocations.HUB_STUDY_ROOM_NOTICE),
                null != t &&
                  null != t.getGuildId() &&
                  ((0, r.connectAndOpen)(t),
                  (0, i.transitionToGuild)(t.getGuildId(), t.id));
            },
            title: u.default.Messages.HUB_STUDY_ROOM_NOTICE_TITLE,
            message: u.default.Messages.HUB_STUDY_ROOM_NOTICE_DESCRIPTION,
            cta: u.default.Messages.HUB_STUDY_ROOM_NOTICE_VOICE_CTA,
            image: d,
            type: o.ChannelNoticeTypes.HUB_STUDY_ROOM,
          });
        };
    },
    602632: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("446674"),
        l = n("419830"),
        i = n("153014"),
        r = n("316133"),
        o = n("782340"),
        u = n("415422"),
        d = function (e) {
          let { name: t, channel: n } = e,
            d = (0, s.useStateFromStoresArray)(
              [r.default],
              () =>
                r.default.getVoiceStatesForChannel(n).map(e => {
                  let { user: t } = e;
                  return t;
                }),
              [n]
            ),
            c = (0, l.getChannelIconComponent)(n);
          return (0, a.jsx)(i.GuildNoticeBody, {
            heading: o.default.Messages.STAGE_CHANNEL_LIVE_NOW,
            topic: t,
            location: o.default.Messages.HUB_STUDY_ROOM_VOICE_CHANNEL_TOOLTIP,
            locationIcon:
              null != c
                ? (0, a.jsx)(c, { width: 16, height: 16, className: u.icon })
                : null,
            children: (0, a.jsx)(i.LiveVoiceOrStageChannelNotice, {
              channel: n,
              speakers: d,
              voiceType: i.VoiceChannelType.STUDY_ROOM,
            }),
          });
        };
    },
    519440: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("963662"),
        l = n("592407"),
        i = n("702411"),
        r = n("49111"),
        o = n("782340"),
        u = n("885634");
      function d(e) {
        let { guild: t } = e,
          n = () => i.default.dismissNotice(t.id);
        return (0, a.jsx)(s.default, {
          guild: t,
          onDismissed: n,
          cta: o.default.Messages.CHECK_IT_OUT,
          message:
            o.default.Messages.COMMANDS_SCOPE_MIGRATION_ADMIN_NOTICE.format(),
          type: r.ChannelNoticeTypes.COMMANDS_MIGRATION,
          image: u,
          onClick: () => {
            n(), l.default.open(t.id, r.GuildSettingsSections.INTEGRATIONS);
          },
          imageMarginTop: 15,
          imageMarginX: 22,
        });
      }
    },
    470055: function (e, t, n) {
      "use strict";
      let a, s, l, i, r;
      n.r(t),
        n.d(t, {
          InteractionModalState: function () {
            return u;
          },
          default: function () {
            return m;
          },
        });
      var o,
        u,
        d = n("627445"),
        c = n.n(d),
        f = n("446674"),
        E = n("913144"),
        h = n("819689"),
        _ = n("798609"),
        C = n("274800"),
        I = n("718517");
      ((o = u || (u = {}))[(o.IN_FLIGHT = 0)] = "IN_FLIGHT"),
        (o[(o.ERRORED = 1)] = "ERRORED"),
        (o[(o.SUCCEEDED = 2)] = "SUCCEEDED");
      class S extends f.default.Store {
        getModalState(e) {
          return e !== a ? null : s;
        }
      }
      S.displayName = "InteractionModalStore";
      var m = new S(E.default, {
        LOGOUT: function () {
          return (a = null), (s = null), (l = null), (i = null), (r = null), !0;
        },
        INTERACTION_MODAL_CREATE: function (e) {
          let { nonce: t } = e;
          return (
            t === r &&
              (h.default.deleteMessage(i, l, !0),
              (l = null),
              (i = null),
              (r = null)),
            !1
          );
        },
        INTERACTION_IFRAME_MODAL_CREATE: function (e) {
          let { nonce: t } = e;
          return (
            t === r &&
              (h.default.deleteMessage(i, l, !0),
              (l = null),
              (i = null),
              (r = null)),
            !1
          );
        },
        INTERACTION_QUEUE: function (e) {
          let { messageId: t, nonce: n, data: o } = e;
          switch (o.interactionType) {
            case _.InteractionTypes.APPLICATION_COMMAND:
              return (l = t), (i = o.channelId), (r = n), !1;
            case _.InteractionTypes.MODAL_SUBMIT:
              return (
                c(
                  null == a || 1 === s || 2 === s,
                  "cannot submit multiple modals at once"
                ),
                (a = n),
                (s = 0),
                setTimeout(() => {
                  a === n && 0 === s && (0, C.setFailed)(n);
                }, 10 * I.default.Millis.SECOND),
                !0
              );
            default:
              return !1;
          }
        },
        INTERACTION_SUCCESS: function (e) {
          let { nonce: t } = e;
          return null != t && t === a && ((s = 2), !0);
        },
        INTERACTION_FAILURE: function (e) {
          let { nonce: t } = e;
          return null != t && t === a && ((s = 1), !0);
        },
      });
    },
    940035: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return L;
          },
        });
      var a = n("913144"),
        s = n("629109"),
        l = n("539405"),
        i = n("987317"),
        r = n("990766"),
        o = n("52289"),
        u = n("316272"),
        d = n("56947"),
        c = n("803725"),
        f = n("374014"),
        E = n("712258"),
        h = n("393414"),
        _ = n("245463"),
        C = n("570413"),
        I = n("373469"),
        S = n("42887"),
        m = n("102985"),
        p = n("860957"),
        T = n("901165"),
        g = n("599110"),
        A = n("360782"),
        N = n("49111"),
        R = n("353927");
      let O = {
        [N.GlobalKeybindActions.TOGGLE_PRIORITY_SPEAKER]: {
          onTrigger() {},
          keyEvents: {},
        },
        [N.GlobalKeybindActions.UNASSIGNED]: { onTrigger() {}, keyEvents: {} },
        [N.GlobalKeybindActions.PUSH_TO_TALK]: {
          onTrigger(e, t) {
            S.default.getMode(t.context) === N.InputModes.PUSH_TO_TALK &&
              ((O[N.GlobalKeybindActions.PUSH_TO_TALK].isPressed = e),
              S.default
                .getMediaEngine()
                .eachConnection(t => t.setForceAudioInput(e, !1), t.context));
          },
          keyEvents: { keyup: !0, keydown: !0 },
          isPressed: !1,
        },
        [N.GlobalKeybindActions.PUSH_TO_TALK_PRIORITY]: {
          onTrigger(e) {
            S.default.getMode() === N.InputModes.PUSH_TO_TALK &&
              ((O[N.GlobalKeybindActions.PUSH_TO_TALK_PRIORITY].isPressed = e),
              S.default
                .getMediaEngine()
                .eachConnection(
                  t => t.setForceAudioInput(e, !0),
                  R.MediaEngineContextTypes.DEFAULT
                ));
          },
          keyEvents: { keyup: !0, keydown: !0 },
          isPressed: !1,
        },
        [N.GlobalKeybindActions.PUSH_TO_MUTE]: {
          onTrigger(e) {
            if (S.default.getMode() === N.InputModes.VOICE_ACTIVITY)
              !S.default.isSelfDeaf() &&
                ((O[N.GlobalKeybindActions.PUSH_TO_MUTE].isPressed = e),
                s.default.setTemporarySelfMute(e));
          },
          keyEvents: { keyup: !0, keydown: !0 },
          isPressed: !1,
        },
        [N.GlobalKeybindActions.TOGGLE_MUTE]: {
          onTrigger: () => s.default.toggleSelfMute({ usedKeybind: !0 }),
          keyEvents: { keyup: !0, keydown: !1 },
        },
        [N.GlobalKeybindActions.TOGGLE_DEAFEN]: {
          onTrigger() {
            s.default.toggleSelfDeaf();
          },
          keyEvents: { keyup: !0, keydown: !1 },
        },
        [N.GlobalKeybindActions.TOGGLE_VOICE_MODE]: {
          onTrigger() {
            let e =
              S.default.getMode() === N.InputModes.PUSH_TO_TALK
                ? N.InputModes.VOICE_ACTIVITY
                : N.InputModes.PUSH_TO_TALK;
            s.default.setMode(e);
          },
          keyEvents: { keyup: !0, keydown: !1 },
        },
        [N.GlobalKeybindActions.TOGGLE_OVERLAY]: {
          onTrigger() {
            let e = p.default.enabled;
            l.default.setEnabled(!e);
          },
          keyEvents: { keyup: !0, keydown: !1 },
        },
        [N.GlobalKeybindActions.TOGGLE_OVERLAY_INPUT_LOCK]: {
          onTrigger(e) {
            let t = (0, A.default)();
            null != t &&
              (e
                ? l.default.setUILocked(!T.default.isUILocked(t), t)
                : l.default.setInputLocked(!p.default.isInputLocked(t), t));
          },
          keyEvents: { keyup: !0, keydown: !0 },
        },
        [N.GlobalKeybindActions.OVERLAY_ACTIVATE_REGION_TEXT_WIDGET]: {
          onTrigger() {
            let e = p.default.getFocusedPID(),
              t = null != e;
            null != e &&
              t &&
              T.default.isPinned(N.OverlayWidgets.TEXT) &&
              p.default.isReady(e) &&
              p.default.isInputLocked(e) &&
              l.default.activateRegion(N.OverlayActiveRegions.TEXT_WIDGET);
          },
          keyEvents: { keyup: !0, keydown: !1 },
        },
        [N.GlobalKeybindActions.TOGGLE_GO_LIVE_STREAMING]: {
          onTrigger() {
            let e = I.default.getCurrentUserActiveStream();
            if (null != e) return (0, r.stopStream)((0, f.encodeStreamKey)(e));
            (0, E.default)();
          },
          keyEvents: { keyup: !0, keydown: !1 },
        },
        [N.GlobalKeybindActions.TOGGLE_STREAMER_MODE]: {
          onTrigger() {
            o.default.setEnabled(!m.default.enabled);
          },
          keyEvents: { keyup: !0, keydown: !1 },
        },
        [N.GlobalKeybindActions.NAVIGATE_BACK]: {
          onTrigger: () => (0, h.back)(),
          keyEvents: { keyup: !0, keydown: !1, focused: !0, blurred: !1 },
        },
        [N.GlobalKeybindActions.NAVIGATE_FORWARD]: {
          onTrigger: () => (0, h.forward)(),
          keyEvents: { keyup: !0, keydown: !1, focused: !0, blurred: !1 },
        },
        [N.GlobalKeybindActions.SOUNDBOARD]: {
          onTrigger: () => {
            if (!(0, _.canSelectedVoiceChannelUseSoundboard)()) return;
            let e = (0, A.default)();
            null != e &&
              (T.default.isUILocked(e)
                ? (0, C.openSoundboardInOverlay)(!0, e)
                : (0, C.closeSoundboardInOverlay)(e));
          },
          keyEvents: { keyup: !0, keydown: !1 },
        },
        [N.GlobalKeybindActions.SOUNDBOARD_HOLD]: {
          onTrigger: e => {
            if (!(0, _.canSelectedVoiceChannelUseSoundboard)()) return;
            let t = (0, A.default)();
            if (null != t) {
              e
                ? (0, C.openSoundboardInOverlay)(!1, t)
                : (0, C.closeSoundboardInOverlay)(t);
              return;
            }
          },
          keyEvents: { keyup: !0, keydown: !0 },
        },
        [N.GlobalKeybindActions.SAVE_CLIP]: {
          onTrigger: () => {
            let e = (0, d.areClipsEnabled)();
            e &&
              (g.default.track(N.AnalyticEvents.CLIP_SAVE_KEYBIND_PRESSED),
              (0, c.saveClip)());
          },
          keyEvents: { keyup: !1, keydown: !0 },
        },
        [N.GlobalKeybindActions.SWITCH_TO_VOICE_CHANNEL]: {
          onTrigger(e, t) {
            let {
              params: { channelId: n },
            } = t;
            null != n && i.default.selectVoiceChannel(n);
          },
          keyEvents: { keyup: !0, keydown: !1, blurred: !0, focused: !0 },
        },
        [N.GlobalKeybindActions.DISCONNECT_FROM_VOICE_CHANNEL]: {
          onTrigger() {
            i.default.selectVoiceChannel(null);
          },
          keyEvents: { keyup: !0, keydown: !1, blurred: !0, focused: !0 },
        },
      };
      class v extends u.default {
        _initialize() {
          a.default.wait(() =>
            a.default.dispatch({
              type: "KEYBINDS_REGISTER_GLOBAL_KEYBIND_ACTIONS",
              keybinds: O,
            })
          );
        }
        _terminate() {}
      }
      var L = new v();
    },
    6895: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var a = n("446674"),
        s = n("305961"),
        l = n("957255"),
        i = n("690563"),
        r = n("49111");
      function o(e) {
        let t = (0, a.useStateFromStores)([s.default], () =>
            s.default.getGuild(e)
          ),
          n = (0, i.useGuildEligibleForMediaChannels)(t),
          o = l.default.can(r.Permissions.MANAGE_CHANNELS, t);
        return n && o;
      }
    },
    519119: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("77078"),
        l = n("716241"),
        i = n("5667"),
        r = n("58608"),
        o = n("599110"),
        u = n("701909"),
        d = n("49111"),
        c = n("782340"),
        f = n("685705");
      function E(e) {
        let { guildId: t, markAsDismissed: E } = e,
          h = (0, a.jsxs)(a.Fragment, {
            children: [
              (0, a.jsx)(s.Text, {
                color: "always-white",
                variant: "text-sm/normal",
                className: f.upsellBody,
                children: c.default.Messages.MEDIA_CHANNEL_UPSELL_BODY,
              }),
              (0, a.jsx)(s.Text, {
                color: "always-white",
                variant: "text-sm/normal",
                children: c.default.Messages.MEDIA_CHANNEL_LEARN_MORE.format({
                  hcArticleUrl: u.default.getCreatorSupportArticleURL(
                    d.HelpdeskArticles.MEDIA_CHANNEL
                  ),
                }),
              }),
            ],
          });
        return (0, a.jsx)(i.default, {
          header: c.default.Messages.MEDIA_CHANNEL_UPSELL_TITLE,
          content: h,
          asset: (0, a.jsx)(r.default, {
            className: f.video,
            src: "https://cdn.discordapp.com/assets/media_channel/media_channel_upsell_demo.mp4",
            autoPlay: !0,
            loop: !0,
          }),
          buttonCTA: c.default.Messages.MEDIA_CHANNEL_UPSELL_CREATE_NOW_CTA,
          onClick: () => {
            o.default.track(d.AnalyticEvents.MEDIA_CHANNEL_UPSELL_CLICKED, {
              ...(0, l.collectGuildAnalyticsMetadata)(t),
            }),
              (0, s.openModalLazy)(async () => {
                let { default: e } = await n
                  .el("581354")
                  .then(n.bind(n, "581354"));
                return n =>
                  (0, a.jsx)(e, {
                    ...n,
                    channelType: d.ChannelTypes.GUILD_MEDIA,
                    guildId: t,
                  });
              });
          },
          secondaryButtonCTA: c.default.Messages.DISMISS,
          markAsDismissed: E,
        });
      }
    },
    94372: function (e, t, n) {
      "use strict";
      n.r(t), n("222007");
      var a = n("75247"),
        s = n("913144"),
        l = n("280468"),
        i = n("605250"),
        r = n("21121"),
        o = n("42203"),
        u = n("377253"),
        d = n("344442");
      let c = -1 / 0,
        f = new i.default("MessagePreviewStore");
      class E extends a.default {
        isLatest(e, t) {
          var n;
          let a = this.guilds.get(null != e ? e : null);
          return (
            null !==
              (n = null == a ? void 0 : a.isLatest(t, this.generation)) &&
            void 0 !== n &&
            n
          );
        }
        isLocalFetchNeeded(e) {
          var t, n;
          return (
            null ===
              (n =
                null === (t = this.guilds.get(e)) || void 0 === t
                  ? void 0
                  : t.localNeeded) ||
            void 0 === n ||
            n
          );
        }
        message(e, t) {
          var n, a;
          return null !==
            (a =
              null === (n = this.guilds.get(e)) || void 0 === n
                ? void 0
                : n.messageRecord(t)) && void 0 !== a
            ? a
            : null;
        }
        data(e) {
          return (
            !this.guilds.has(e) && this.guilds.set(e, new d.PreviewData()),
            this.guilds.get(e)
          );
        }
        handleOneGuildCreate(e) {
          var t, n;
          let a = this.data(e.id);
          a.putMany(
            null !== (t = e.lastMessages) && void 0 !== t ? t : [],
            this.generation
          ),
            a.putMany(
              null !== (n = e.threadMessages) && void 0 !== n ? n : [],
              this.generation
            ),
            null != e.lastMessages && (a.localNeeded = !1);
        }
        handleConnectionOpen(e) {
          if (!(0, r.isInMainTabsExperiment)()) return !1;
          for (let t of ((this.generation += 1), e.guilds))
            this.handleOneGuildCreate(t);
        }
        handleGuildCreate(e) {
          if (!(0, r.isInMainTabsExperiment)()) return !1;
          this.handleOneGuildCreate(e.guild);
        }
        handleGuildDelete(e) {
          if (!(0, r.isInMainTabsExperiment)()) return !1;
          this.guilds.delete(e.guild.id);
        }
        handleMessageCreate(e) {
          var t;
          if (
            !(0, r.isInMainTabsExperiment)() ||
            e.optimistic ||
            e.isPushNotification
          )
            return !1;
          this.data(null !== (t = e.guildId) && void 0 !== t ? t : null).put(
            e.message.channel_id,
            e.message,
            this.generation
          );
        }
        handleMessageDelete(e) {
          var t, n;
          if (!(0, r.isInMainTabsExperiment)()) return !1;
          let a = null !== (n = e.guildId) && void 0 !== n ? n : null,
            s =
              null === (t = this.data(a)) || void 0 === t
                ? void 0
                : t.messageId(e.channelId);
          if (s === e.id) {
            let t = u.default.getMessages(e.channelId),
              n = t.hasMoreAfter ? null : t.last();
            null != n
              ? this.data(a).put(e.channelId, n, this.generation)
              : this.data(a).delete(e.channelId);
          }
        }
        handleMessageUpdate(e) {
          var t;
          if (!(0, r.isInMainTabsExperiment)()) return;
          let n = null !== (t = e.guildId) && void 0 !== t ? t : null,
            a = e.message.channel_id,
            s = e.message.id;
          if (null == a || null == s) return !1;
          let l = this.data(n),
            i = null == l ? void 0 : l.messageId(a);
          if (i !== s) return !1;
          null == l || l.update(e.message);
        }
        handleThreadListSync(e) {
          var t;
          if (!(0, r.isInMainTabsExperiment)()) return !1;
          this.data(e.guildId).putMany(
            null !== (t = e.mostRecentMessages) && void 0 !== t ? t : [],
            this.generation
          );
        }
        handleLoadMessagesSuccess(e) {
          if (!(0, r.isInMainTabsExperiment)()) return;
          let t = o.default.getBasicChannel(e.channelId);
          if (null != t) {
            var n;
            (0, l.requireSortedDescending)(e.messages),
              this.data(t.guild_id).putNew(
                e.channelId,
                null !== (n = e.messages[0]) && void 0 !== n ? n : null,
                this.generation
              );
          }
        }
        handleLocalMessagesLoaded(e) {
          if (!(0, r.isInMainTabsExperiment)()) return;
          let t = o.default.getBasicChannel(e.channelId);
          if (null != t) {
            var n;
            (0, l.requireSortedDescending)(e.messages),
              this.data(t.guild_id).putNew(
                e.channelId,
                null !== (n = e.messages[0]) && void 0 !== n ? n : null,
                c
              );
          }
        }
        handleMessagePreviewsLoaded(e) {
          if (!(0, r.isInMainTabsExperiment)()) return;
          f.verbose(
            "adding remote previews (guildId: "
              .concat(e.guildId, ", messages: ")
              .concat(e.messages.length, ")")
          );
          let t = this.data(e.guildId);
          for (let n of e.messages)
            !t.isLatest(n.channel_id, this.generation) &&
              t.put(n.channel_id, n, this.generation);
        }
        handleMessagePreviewsLocallyLoaded(e) {
          if (!(0, r.isInMainTabsExperiment)()) return;
          f.verbose(
            "adding local previews (guildId: "
              .concat(e.guildId, ", messages: ")
              .concat(e.messages.length, ")")
          );
          let t = this.data(e.guildId);
          for (let [n, a] of e.messages) !t.has(n) && t.put(n, a, c);
          t.localNeeded = !1;
        }
        handleLogout(e) {
          this.guilds.clear();
        }
        constructor() {
          super(s.default, {
            CONNECTION_OPEN: e => this.handleConnectionOpen(e),
            GUILD_CREATE: e => this.handleGuildCreate(e),
            GUILD_DELETE: e => this.handleGuildDelete(e),
            LOAD_MESSAGES_SUCCESS: e => this.handleLoadMessagesSuccess(e),
            LOCAL_MESSAGES_LOADED: e => this.handleLocalMessagesLoaded(e),
            LOGOUT: e => this.handleLogout(e),
            MESSAGE_CREATE: e => this.handleMessageCreate(e),
            MESSAGE_DELETE: e => this.handleMessageDelete(e),
            MESSAGE_PREVIEWS_LOADED: e => this.handleMessagePreviewsLoaded(e),
            MESSAGE_PREVIEWS_LOCALLY_LOADED: e =>
              this.handleMessagePreviewsLocallyLoaded(e),
            MESSAGE_UPDATE: e => this.handleMessageUpdate(e),
            THREAD_LIST_SYNC: e => this.handleThreadListSync(e),
          }),
            (this.guilds = new Map()),
            (this.generation = 0);
        }
      }
      new E();
    },
    344442: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          PreviewData: function () {
            return r;
          },
        }),
        n("222007");
      var a = n("692038"),
        s = n("719926"),
        l = n("660478"),
        i = n("299039");
      class r {
        isLatest(e, t) {
          return this.messageGeneration(e, t) === t;
        }
        messageGeneration(e, t) {
          let n = this.messages.get(e);
          return null == n
            ? -1 / 0
            : n.generation !== t &&
                null != n.message &&
                n.message.id === l.default.lastMessageId(e)
              ? (this.messages.set(e, { ...n, generation: t }), t)
              : n.generation;
        }
        messageId(e) {
          var t, n;
          let a = this.messages.get(e);
          return null !==
            (n =
              null == a
                ? void 0
                : null === (t = a.message) || void 0 === t
                  ? void 0
                  : t.id) && void 0 !== n
            ? n
            : null;
        }
        messageRecord(e) {
          var t;
          let n = this.messages.get(e);
          return (
            null != n &&
              null != n.message &&
              !(n.message instanceof s.default) &&
              (n.message = (0, a.createMessageRecord)(n.message)),
            null !== (t = null == n ? void 0 : n.message) && void 0 !== t
              ? t
              : null
          );
        }
        has(e) {
          return this.messages.has(e);
        }
        put(e, t, n) {
          this.messages.set(e, { message: t, generation: n });
        }
        putNew(e, t, n) {
          var a;
          let s = this.messages.get(e);
          null != t &&
            (function (e, t) {
              return null == t || i.default.compare(e, t) > 0;
            })(
              t.id,
              null == s
                ? void 0
                : null === (a = s.message) || void 0 === a
                  ? void 0
                  : a.id
            ) &&
            this.put(e, t, n);
        }
        putMany(e, t) {
          for (let n of e) this.put(n.channel_id, n, t);
        }
        update(e) {
          var t;
          if (null == e.id || null == e.channel_id) return;
          let n = e.channel_id,
            l = this.messages.get(n);
          if (
            (null == l
              ? void 0
              : null === (t = l.message) || void 0 === t
                ? void 0
                : t.id) !== e.id
          )
            return;
          let i =
            l.message instanceof s.default
              ? (0, a.updateMessageRecord)(l.message, e)
              : (0, a.updateServerMessage)(l.message, e);
          this.messages.set(n, { ...l, message: i });
        }
        delete(e) {
          this.messages.delete(e);
        }
        constructor() {
          (this.localNeeded = !0), (this.messages = new Map());
        }
      }
    },
    460929: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          sortChannelIds: function () {
            return s;
          },
        });
      var a = n("299039");
      function s(e) {
        return e
          .sort((e, t) => a.default.compare(e.lastMessageId, t.lastMessageId))
          .reverse();
      }
    },
    803524: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useListHasSingleMessageRequest: function () {
            return u;
          },
          useListHasSingleSpamMessageRequest: function () {
            return d;
          },
        });
      var a = n("884691"),
        s = n("446674"),
        l = n("288518"),
        i = n("486503"),
        r = n("260488"),
        o = n("452229");
      function u() {
        let e = (0, r.useMessageRequestsCount)(),
          t = a.useRef(e),
          n = (0, s.useStateFromStores)([l.default], () => l.default.isReady()),
          i = a.useRef(n);
        return (
          a.useEffect(() => {
            n && !i.current && ((i.current = !0), (t.current = e));
          }, [n, e]),
          t.current <= 1 && 1 === e
        );
      }
      function d() {
        let e = (0, o.useSpamMessageRequestCount)(),
          t = a.useRef(e),
          n = (0, s.useStateFromStores)([i.default], () => i.default.isReady()),
          l = a.useRef(n);
        return (
          a.useEffect(() => {
            n && !l.current && ((l.current = !0), (t.current = e));
          }, [n, e]),
          t.current <= 1 && 1 === e
        );
      }
    },
    91830: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useMessageRequestRelativeTimestampText: function () {
            return o;
          },
        }),
        n("866227");
      var a = n("446674"),
        s = n("487269"),
        l = n("660478"),
        i = n("299039"),
        r = n("389495");
      function o(e) {
        let t = (0, r.useMessageRequestPreview)(e),
          n = (0, a.useStateFromStores)([l.default], () =>
            l.default.lastMessageId(e.id)
          ),
          o = (function (e) {
            let { lastMessageId: t, message: n, loaded: a } = e;
            return a && null != n
              ? i.default.extractTimestamp(n.id)
              : null != t
                ? i.default.extractTimestamp(t)
                : null;
          })({ lastMessageId: n, ...t });
        return null == o ? "" : (0, s.getTimestampString)(o);
      }
    },
    639547: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useShouldShowMessageRequestsRow: function () {
            return r;
          },
        });
      var a = n("446674"),
        s = n("288518"),
        l = n("415435"),
        i = n("486503");
      function r() {
        return (0, a.useStateFromStores)([s.default, i.default], () =>
          (0, l.shouldShowMessageRequests)([s.default, i.default])
        );
      }
    },
    500526: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var a = n("884691"),
        s = n("446674"),
        l = n("42203"),
        i = n("697218"),
        r = n("288518"),
        o = n("460929");
      function u() {
        let e = (0, s.useStateFromStores)([l.default], () =>
            l.default.getPrivateChannelsVersion()
          ),
          t = (0, s.useStateFromStoresArray)(
            [l.default, r.default],
            () => {
              let e = l.default.getMutablePrivateChannels(),
                t = Array.from(r.default.getMessageRequestChannelIds())
                  .map(t => e[t])
                  .filter(e => null != e);
              return (0, o.sortChannelIds)(t);
            },
            [e]
          ),
          n = (0, s.useStateFromStoresObject)(
            [i.default],
            () => {
              let e = {};
              return (
                t.forEach(t => {
                  let n = i.default.getUser(t.recipients[0]);
                  null != n && (e[t.id] = n);
                }),
                e
              );
            },
            [t]
          ),
          u = a.useMemo(
            () => t.map(e => ({ channel: e, user: n[e.id] })),
            [t, n]
          );
        return u;
      }
    },
    521702: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var a = n("884691"),
        s = n("446674"),
        l = n("42203"),
        i = n("697218"),
        r = n("460929"),
        o = n("486503");
      function u() {
        let e = (0, s.useStateFromStores)([l.default], () =>
            l.default.getPrivateChannelsVersion()
          ),
          t = (0, s.useStateFromStoresArray)(
            [l.default, o.default],
            () => {
              let e = l.default.getMutablePrivateChannels(),
                t = Array.from(o.default.getSpamChannelIds())
                  .map(t => e[t])
                  .filter(e => null != e);
              return (0, r.sortChannelIds)(t);
            },
            [e]
          ),
          n = (0, s.useStateFromStoresObject)(
            [i.default],
            () => {
              let e = {};
              return (
                t.forEach(t => {
                  let n = i.default.getUser(t.recipients[0]);
                  null != n && (e[t.id] = n);
                }),
                e
              );
            },
            [t]
          ),
          u = a.useMemo(
            () => t.map(e => ({ channel: e, user: n[e.id] })),
            [t, n]
          );
        return u;
      }
    },
    452229: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useSpamMessageRequestCount: function () {
            return l;
          },
        });
      var a = n("446674"),
        s = n("486503");
      function l() {
        return (0, a.useStateFromStores)([s.default], () =>
          s.default.getSpamChannelsCount()
        );
      }
    },
    24927: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("458960"),
        o = n("974667"),
        u = n("77078"),
        d = n("272030"),
        c = n("973199"),
        f = n("20282"),
        E = function (e) {
          let {
              index: t,
              children: l,
              user: E,
              channel: h,
              onClick: _,
              isFocused: C,
              isActive: I,
              onOtherHover: S,
              className: m,
            } = e,
            [p, T] = s.useState(!1),
            [g, A] = s.useState(!1),
            N = () => {
              T(!0), C && !I && !g && (null == S || S());
            },
            R = () => {
              T(!1);
            },
            O = (e, t) => {
              null != t &&
                (A(!0),
                (0, d.openContextMenuLazy)(
                  e,
                  async () => {
                    let { default: e } = await n
                      .el("406784")
                      .then(n.bind(n, "406784"));
                    return n => (0, a.jsx)(e, { ...n, user: t });
                  },
                  {
                    onClose: () => {
                      A(!1);
                    },
                  }
                ));
            };
          return (0, a.jsx)(o.ListNavigatorItem, {
            id: h.id,
            children: e =>
              (0, a.jsx)(u.FocusRing, {
                offset: { left: -8, right: -8 },
                children: (0, a.jsx)(r.default.div, {
                  className: i(f.messageRequestItem, m, {
                    [f.active]: I || g,
                    [f.firstItem]: 0 === t,
                  }),
                  onContextMenu: e => O(e, E),
                  onMouseEnter: N,
                  onMouseLeave: R,
                  onClick: null != _ ? _ : void 0,
                  style: { LIST_ROW_HEIGHT: c.LIST_ROW_HEIGHT, opacity: 1 },
                  ...e,
                  children: l(p || I || g),
                }),
              }),
          });
        };
    },
    598156: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return ei;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("974667"),
        o = n("432710"),
        u = n("446674"),
        d = n("151426"),
        c = n("77078"),
        f = n("939488"),
        E = n("737960"),
        h = n("74456"),
        _ = n("206230"),
        C = n("302437"),
        I = n("665182"),
        S = n("442174"),
        m = n("69927"),
        p = n("10641"),
        T = n("384997"),
        g = n("539938"),
        A = n("155084"),
        N = n("393414"),
        R = n("582713"),
        O = n("970366"),
        v = n("5667"),
        L = n("161778"),
        M = n("982108"),
        P = n("42203"),
        D = n("778588"),
        y = n("556081"),
        x = n("826684"),
        b = n("599110"),
        U = n("439932"),
        G = n("288518"),
        j = n("486503"),
        w = n("916650"),
        k = n("803524"),
        F = n("7643"),
        B = n("785770"),
        H = n("260488"),
        V = n("500526"),
        Y = n("452229"),
        W = n("196986"),
        K = n("410560"),
        z = n("433591"),
        q = n("973199"),
        Q = n("49111"),
        Z = n("994428"),
        X = n("782340"),
        J = n("109362"),
        $ = n("250455");
      function ee() {
        let e = s.useRef(null),
          t = (0, H.useMessageRequestsCount)(),
          n = (0, V.default)(),
          l = (0, k.useListHasSingleMessageRequest)(),
          u = (0, h.useIsRejectAllMessageRequestsEnabled)(),
          d = s.useCallback(() => {
            (0, c.showToast)(
              (0, c.createToast)(
                X.default.Messages.MESSAGE_REQUEST_REQUEST_ERROR_ALERT_TITLE,
                c.ToastType.FAILURE
              )
            );
          }, []),
          { rejectAll: f } = (0, F.useMessageRequestActions)({ onError: d }),
          E = (0, C.default)("message-requests-list"),
          { channelId: _ } = (0, B.useMessageRequestSidebarState)(),
          I = s.useCallback(() => {
            let e = n.map(e => e.channel.id);
            f(e);
          }, [n, f]),
          S = s.useCallback(
            e => {
              var t, s;
              let { row: r } = e,
                o = n[r],
                u =
                  null === (s = n[r + 1]) || void 0 === s
                    ? void 0
                    : null === (t = s.channel) || void 0 === t
                      ? void 0
                      : t.id,
                d = o.channel.id;
              return (0, a.jsx)(
                K.default,
                {
                  index: r,
                  className: i({
                    [J.selected]: null != _ && _ === d,
                    [J.siblingSelected]: null != _ && _ === u,
                  }),
                  channel: o.channel,
                  user: o.user,
                  hasSingleMessageRequest: l,
                },
                d
              );
            },
            [l, n, _]
          ),
          m = s.useCallback(
            () =>
              (0, a.jsxs)(
                x.default,
                {
                  className: J.sectionTitle,
                  children: [
                    t > 0
                      ? X.default.Messages.MESSAGE_REQUESTS_PAGE_TITLE_WITH_COUNT.format(
                          { count: t }
                        )
                      : X.default.Messages.MESSAGE_REQUESTS_PAGE_TITLE,
                    u && t > 0
                      ? (0, a.jsxs)(a.Fragment, {
                          children: [
                            (0, a.jsx)(c.Text, {
                              className: J.titleDivider,
                              variant: "eyebrow",
                              color: "header-secondary",
                              tag: "span",
                              children: "•",
                            }),
                            (0, a.jsx)(c.Button, {
                              onClick: I,
                              look: c.ButtonLooks.LINK,
                              color: c.ButtonColors.LINK,
                              size: c.ButtonSizes.SMALL,
                              className: J.clearAllButton,
                              "aria-label":
                                X.default.Messages.MESSAGE_REQUESTS_CLEAR_ALL,
                              children:
                                X.default.Messages.MESSAGE_REQUESTS_CLEAR_ALL,
                            }),
                          ],
                        })
                      : null,
                  ],
                },
                "title"
              ),
            [t, I, u]
          );
        return (n.length !== t &&
          A.default.increment({
            name: o.MetricEvents.MESSAGE_REQUEST_COUNT_DRIFT,
          }),
        0 === n.length)
          ? (0, a.jsx)(W.default, {
              section: q.MessageRequestSections.REQUESTS,
            })
          : (0, a.jsx)(r.ListNavigatorProvider, {
              navigator: E,
              children: (0, a.jsx)(r.ListNavigatorContainer, {
                children: t => {
                  let { ref: s, role: l, ...i } = t;
                  return (0, a.jsx)(
                    c.List,
                    {
                      className: J.list,
                      innerRole: l,
                      innerAriaLabel: X.default.Messages.MESSAGE_REQUESTS,
                      ref: t => {
                        var n;
                        (e.current = t),
                          (s.current =
                            null !==
                              (n = null == t ? void 0 : t.getScrollerNode()) &&
                            void 0 !== n
                              ? n
                              : null);
                      },
                      paddingTop: 24,
                      paddingBottom: 24,
                      sectionHeight: q.LIST_SECTION_HEIGHT,
                      rowHeight: q.LIST_ROW_HEIGHT,
                      renderSection: m,
                      renderRow: S,
                      sections: [n.length],
                      chunkSize: 30,
                      fade: !0,
                      ...i,
                    },
                    "message-requests-list"
                  );
                },
              }),
            });
      }
      function et(e) {
        let { pageWidth: t, onSidebarResize: n } = e,
          s = (0, u.useStateFromStores)([M.default], () =>
            M.default.getSidebarState(M.MESSAGE_REQUESTS_BASE_CHANNEL_ID)
          ),
          l = (0, u.useStateFromStores)([P.default], () =>
            P.default.getChannel(null == s ? void 0 : s.channelId)
          );
        if (
          null == s ||
          s.type !== R.SidebarType.VIEW_MESSAGE_REQUEST ||
          null == l ||
          !l.isPrivate()
        )
          return null;
        let i = t - Q.DEFAULT_MESSAGE_REQUEST_SIDEBAR_WIDTH;
        return (0, a.jsx)(I.default, {
          sidebarType: I.ChatSidebarType.MessageRequestSidebar,
          maxWidth: i,
          onWidthChange: n,
          children: (0, a.jsx)(S.default, {
            channel: l,
            baseChannelId: M.MESSAGE_REQUESTS_BASE_CHANNEL_ID,
          }),
        });
      }
      let en = function (e) {
          let { markAsDismissed: t } = e;
          return (0, a.jsx)(v.default, {
            header: X.default.Messages.MESSAGE_REQUESTS_COACHMARK_TITLE,
            content:
              X.default.Messages.MESSAGE_REQUESTS_COACHMARK_CONTENT_TEENS,
            buttonCTA: X.default.Messages.MESSAGE_REQUESTS_COACHMARK_DISMISS,
            className: J.messageRequestCoachmark,
            onClick: () => t(Z.ContentDismissActionType.UNKNOWN),
            markAsDismissed: t,
            caretPosition: v.CaretPosition.TOP_CENTER,
            headerClassName: J.header,
          });
        },
        ea = e => {
          let t = (0, w.default)(),
            n = () => D.default.hasLayers() || (0, c.hasAnyModalOpen)(),
            l = (0, u.useStateFromStores)(
              [_.default],
              () => _.default.useReducedMotion
            );
          return (
            s.useEffect(() => {
              (0, p.requestMarkDismissibleContentAsShown)(
                d.DismissibleContent.MESSAGE_REQUEST_SETTINGS_COACH_MARK
              );
            }, []),
            (0, a.jsx)(T.default, {
              contentTypes: [
                d.DismissibleContent.MESSAGE_REQUEST_SETTINGS_COACH_MARK,
              ],
              children: s => {
                let { visibleContent: i, markAsDismissed: r } = s;
                if (
                  i === d.DismissibleContent.MESSAGE_REQUEST_SETTINGS_COACH_MARK
                )
                  return (0, a.jsx)(c.Popout, {
                    renderPopout: () =>
                      t
                        ? (0, a.jsx)(en, { markAsDismissed: r })
                        : (0, a.jsx)(v.default, {
                            header:
                              X.default.Messages
                                .MESSAGE_REQUESTS_COACHMARK_TITLE,
                            content:
                              X.default.Messages
                                .MESSAGE_REQUESTS_COACHMARK_CONTENT,
                            buttonCTA:
                              X.default.Messages
                                .MESSAGE_REQUESTS_COACHMARK_CONFIRM,
                            secondaryButtonCTA:
                              X.default.Messages
                                .MESSAGE_REQUESTS_COACHMARK_DISMISS,
                            className: J.messageRequestCoachmark,
                            onClick: e => {
                              e.stopPropagation(),
                                (0, N.transitionTo)(
                                  Q.Routes.SETTINGS("privacy-and-safety")
                                );
                            },
                            markAsDismissed: r,
                            caretPosition: v.CaretPosition.TOP_CENTER,
                            headerClassName: J.header,
                          }),
                    position: "bottom",
                    align: "center",
                    animation: l
                      ? c.Popout.Animation.NONE
                      : c.Popout.Animation.TRANSLATE,
                    shouldShow: !n(),
                    spacing: 16,
                    children: () => e.children,
                  });
                return e.children;
              },
            })
          );
        };
      function es(e) {
        let { section: t } = e;
        return t === q.MessageRequestSections.SPAM
          ? (0, a.jsx)(z.default, {})
          : (0, a.jsx)(ee, {});
      }
      let el = (0, E.default)(function (e) {
        let { width: t } = e,
          n = (0, H.useMessageRequestsCount)();
        s.useEffect(() => {
          f.setHomeLink(Q.Routes.MESSAGE_REQUESTS),
            (0, O.trackAppUIViewed)("message-requests"),
            b.default.track(Q.AnalyticEvents.MESSAGE_REQUESTS_VIEWED, {
              num_message_requests: n,
            }),
            A.default.increment({ name: o.MetricEvents.MESSAGE_REQUEST_VIEW });
        }, []);
        let l = (0, u.useStateFromStores)([L.default], () => L.default.theme),
          r = (0, Y.useSpamMessageRequestCount)(),
          [d, E] = s.useState(!1),
          h = (0, u.useStateFromStores)(
            [M.default, G.default, j.default],
            () => {
              let e = M.default.getSidebarState(
                M.MESSAGE_REQUESTS_BASE_CHANNEL_ID
              );
              return (
                null != e &&
                e.type === R.SidebarType.VIEW_MESSAGE_REQUEST &&
                (G.default.isMessageRequest(e.channelId) ||
                  j.default.isSpam(e.channelId))
              );
            }
          ),
          [_, C] = s.useState(q.MessageRequestSections.REQUESTS);
        return (
          (0, m.usePageTitle)({
            location: X.default.Messages.MESSAGE_REQUESTS,
          }),
          (0, a.jsxs)(a.Fragment, {
            children: [
              (0, a.jsxs)("div", {
                className: i($.chat, J.container, {
                  [$.threadSidebarOpen]: h,
                  [$.threadSidebarFloating]: h && d,
                }),
                children: [
                  (0, a.jsxs)(g.default, {
                    className: (0, U.getThemeClass)(l),
                    toolbar: !0,
                    children: [
                      (0, a.jsx)(g.default.Icon, {
                        icon: y.default,
                        "aria-hidden": !0,
                      }),
                      (0, a.jsx)(ea, {
                        children: (0, a.jsx)(g.default.Title, {
                          children: X.default.Messages.MESSAGE_REQUESTS,
                        }),
                      }),
                      (0, a.jsx)(g.default.Divider, {}),
                      (0, a.jsxs)(c.TabBar, {
                        "aria-label": X.default.Messages.MESSAGE_REQUESTS,
                        selectedItem: _,
                        type: "top-pill",
                        onItemSelect: e => {
                          C(e);
                        },
                        className: J.tabBar,
                        children: [
                          (0, a.jsx)(c.TabBar.Item, {
                            id: q.MessageRequestSections.REQUESTS,
                            className: J.item,
                            children:
                              X.default.Messages
                                .MESSAGE_REQUESTS_REQUESTS_TAB_TITLE,
                          }),
                          (0, a.jsx)(c.TabBar.Item, {
                            id: q.MessageRequestSections.SPAM,
                            className: J.item,
                            children:
                              0 === r
                                ? X.default.Messages
                                    .MESSAGE_REQUESTS_SPAM_TAB_TITLE
                                : X.default.Messages.MESSAGE_REQUESTS_SPAM_TAB_TITLE_WITH_COUNT.format(
                                    { count: r }
                                  ),
                          }),
                        ],
                      }),
                    ],
                  }),
                  (0, a.jsx)("div", {
                    className: $.content,
                    children: (0, a.jsx)(es, { section: _ }),
                  }),
                ],
              }),
              h &&
                (0, a.jsx)(et, {
                  pageWidth: t,
                  onSidebarResize: (e, t) => {
                    E(t);
                  },
                }),
            ],
          })
        );
      });
      var ei = el;
    },
    214621: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return A;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("446674"),
        o = n("77078"),
        u = n("70845"),
        d = n("95045"),
        c = n("845579"),
        f = n("957255"),
        E = n("27618"),
        h = n("505684"),
        _ = n("93427"),
        C = n("389495"),
        I = n("49111"),
        S = n("719347"),
        m = n("782340"),
        p = n("196417"),
        T = n("919163");
      let g = s.memo(function (e) {
        let { channel: t } = e,
          {
            loaded: n,
            error: l,
            message: g,
          } = (0, C.useMessageRequestPreview)(t),
          A = (0, r.useStateFromStores)(
            [E.default],
            () => null != g && E.default.isBlocked(g.author.id),
            [g]
          ),
          N = (0, r.useStateFromStores)([f.default], () =>
            f.default.can(I.Permissions.MANAGE_MESSAGES, t)
          ),
          R = c.RenderSpoilers.useSetting(),
          { content: O } = s.useMemo(
            () =>
              (null == g ? void 0 : g.content) != null && "" !== g.content
                ? (0, d.default)(g, {
                    formatInline: !0,
                    noStyleAndInteraction: !0,
                  })
                : { content: null },
            [g]
          ),
          v = null;
        if (l)
          v = (0, a.jsx)(o.Text, {
            className: p.messageReplacement,
            variant: "text-sm/normal",
            color: "text-muted",
            children: m.default.Messages.MESSAGE_REQUESTS_ERROR_LOADING_PREVIEW,
          });
        else if (n) {
          if (null != g && A)
            v = (0, a.jsx)(o.Text, {
              className: p.messageReplacement,
              variant: "text-sm/normal",
              color: "text-muted",
              children: m.default.Messages.MESSAGE_REQUESTS_BLOCKED_MESSAGE,
            });
          else if (null != g) {
            let { contentPlaceholder: e, renderedContent: t } = (0,
            _.renderSingleLineMessage)(
              g,
              O,
              A,
              i(p.messageContent, T.inlineFormat, T.smallFontSize),
              {
                iconClass: p.messageContentIcon,
                iconSize: S.SINGLE_LINE_MESSAGE_DEFAULT_ICON_SIZE,
              }
            );
            v =
              null != t
                ? (0, a.jsx)(o.Text, {
                    variant: "text-sm/normal",
                    color: "text-muted",
                    className: p.messageContent,
                    children: t,
                  })
                : (0, a.jsx)(o.Text, {
                    tag: "span",
                    variant: "text-sm/normal",
                    color: "text-muted",
                    className: p.messageReplacement,
                    children: e,
                  });
          } else
            v = (0, a.jsx)(o.Text, {
              className: p.messageReplacement,
              variant: "text-sm/normal",
              color: "text-muted",
              children: m.default.Messages.MESSAGE_REQUESTS_DELETED_MESSAGE,
            });
        } else v = null;
        return (0, a.jsx)(h.ObscuredDisplayContext.Provider, {
          value: (0, u.default)(R, N),
          children: (0, a.jsx)(o.FocusBlock, {
            className: p.messageFocusBlock,
            children: v,
          }),
        });
      });
      var A = g;
    },
    98708: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return m;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("446674"),
        l = n("77078"),
        i = n("145079"),
        r = n("206230"),
        o = n("606292"),
        u = n("688318"),
        d = n("843962"),
        c = n("27618"),
        f = n("158998"),
        E = n("50885"),
        h = n("91830"),
        _ = n("214621"),
        C = n("782340"),
        I = n("159036");
      let S = E.default.getEnableHardwareAcceleration()
        ? l.AnimatedAvatar
        : l.Avatar;
      function m(e) {
        var t;
        let { channel: n, otherUser: E, active: m } = e,
          p = (0, s.useStateFromStores)(
            [r.default],
            () => r.default.useReducedMotion
          ),
          T = (0, s.useStateFromStores)([c.default], () =>
            null == E ? null : c.default.getNickname(E.id)
          ),
          g = (0, h.useMessageRequestRelativeTimestampText)(n),
          { avatarDecorationSrc: A } = (0, u.default)({
            user: E,
            size: (0, o.getDecorationSizeForAvatarSize)(l.AvatarSizes.SIZE_40),
            animateOnHover: !0,
          });
        return (0, a.jsxs)(a.Fragment, {
          children: [
            (0, a.jsx)(S, {
              className: I.avatar,
              src: (0, d.getChannelIconURL)(n, 40, !p && m),
              avatarDecoration: A,
              size: l.AvatarSizes.SIZE_40,
              "aria-label":
                null !== (t = null == E ? void 0 : E.username) && void 0 !== t
                  ? t
                  : C.default.Messages.UNKNOWN_USER,
            }),
            (0, a.jsxs)("div", {
              className: I.userPreview,
              children: [
                (0, a.jsxs)("div", {
                  className: I.userContainerWithPreview,
                  children: [
                    (0, a.jsx)(i.default, {
                      nick: T,
                      user: E,
                      showAccountIdentifier: !0,
                      className: I.tagContainer,
                      usernameClass: I.username,
                      discriminatorClass:
                        null != f.default.getGlobalName(E)
                          ? I.globalName
                          : I.discriminator,
                    }),
                    (0, a.jsx)(l.Text, {
                      className: I.timestampWithPreview,
                      color: "text-muted",
                      variant: "text-xs/normal",
                      children: g,
                    }),
                  ],
                }),
                (0, a.jsx)("div", {
                  className: I.messagePreview,
                  children: (0, a.jsx)(_.default, { channel: n }),
                }),
              ],
            }),
          ],
        });
      }
    },
    196986: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("446674"),
        l = n("161778"),
        i = n("941886"),
        r = n("973199"),
        o = n("782340"),
        u = n("75005"),
        d = n("855143"),
        c = n("934516");
      function f(e) {
        let { section: t } = e,
          n = (0, s.useStateFromStores)([l.default], () => l.default.theme);
        return (0, a.jsxs)(i.default, {
          theme: n,
          className: u.emptyStateContainer,
          children: [
            (0, a.jsx)(i.default.Image, {
              width: 415,
              height: 200,
              lightSrc: c,
              darkSrc: d,
            }),
            (0, a.jsx)(i.default.Text, {
              note:
                t === r.MessageRequestSections.SPAM
                  ? o.default.Messages.MESSAGE_REQUESTS_SPAM_EMPTY_STATE_BODY
                  : o.default.Messages.MESSAGE_REQUESTS_EMPTY_STATE_BODY,
            }),
          ],
        });
      }
    },
    410560: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("208021"),
        l = n("982108"),
        i = n("599110"),
        r = n("659500"),
        o = n("785770"),
        u = n("24927"),
        d = n("410688"),
        c = n("49111");
      function f(e) {
        let {
            index: t,
            className: n,
            channel: f,
            user: E,
            hasSingleMessageRequest: h,
          } = e,
          { channelId: _ } = (0, o.useMessageRequestSidebarState)();
        return (0, a.jsx)(u.default, {
          index: t,
          className: n,
          isFocused: _ === f.id,
          channel: f,
          user: E,
          onClick: e => {
            e.stopPropagation(),
              s.default.openPrivateChannelAsSidebar({
                channelId: f.id,
                baseChannelId: l.MESSAGE_REQUESTS_BASE_CHANNEL_ID,
                hasSingleMessageRequest: h,
              }),
              i.default.track(c.AnalyticEvents.MESSAGE_REQUEST_PREVIEW_VIEWED, {
                is_spam: !1,
                channel_id: f.id,
                other_user_id: E.id,
              }),
              setTimeout(() => {
                r.ComponentDispatch.dispatch(
                  c.ComponentActions.FOCUS_CHANNEL_TEXT_AREA,
                  { channelId: f.id }
                );
              }, 0);
          },
          children: e =>
            (0, a.jsx)(d.PendingMessageRequestRowItem, {
              active: e,
              user: E,
              channel: f,
            }),
        });
      }
    },
    410688: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          PendingMessageRequestRowItem: function () {
            return h;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("77078"),
        i = n("144491"),
        r = n("208021"),
        o = n("982108"),
        u = n("803524"),
        d = n("7643"),
        c = n("98708"),
        f = n("782340"),
        E = n("773220");
      function h(e) {
        let { active: t, user: n, channel: h } = e,
          _ = (0, u.useListHasSingleMessageRequest)(),
          C = s.useCallback(() => {
            (0, l.showToast)(
              (0, l.createToast)(
                f.default.Messages.MESSAGE_REQUEST_REQUEST_ERROR_ALERT_TITLE,
                l.ToastType.FAILURE
              )
            );
          }, []),
          I = s.useCallback(() => {
            r.default.closeChannelSidebar(o.MESSAGE_REQUESTS_BASE_CHANNEL_ID);
          }, []),
          S = s.useCallback(() => {
            r.default.closeChannelSidebar(o.MESSAGE_REQUESTS_BASE_CHANNEL_ID),
              _ && (0, i.transitionToChannel)(h.id);
          }, [h.id, _]),
          {
            acceptMessageRequest: m,
            rejectMessageRequest: p,
            isAcceptLoading: T,
            isRejectLoading: g,
            isUserProfileLoading: A,
            isOptimisticAccepted: N,
            isOptimisticRejected: R,
          } = (0, d.useMessageRequestActions)({
            user: n,
            onAcceptSuccess: S,
            onRejectSuccess: I,
            onError: C,
          }),
          O = T || g || A || N || R;
        return (0, a.jsxs)("div", {
          className: E.container,
          children: [
            (0, a.jsx)(c.default, { channel: h, otherUser: n, active: t }),
            (0, a.jsxs)("div", {
              className: E.actions,
              children: [
                (0, a.jsx)(l.Button, {
                  className: E.button,
                  color: l.ButtonColors.PRIMARY,
                  size: l.Button.Sizes.SMALL,
                  onClick: e => {
                    e.stopPropagation(), p(h.id);
                  },
                  disabled: O,
                  submitting: g || R,
                  children: f.default.Messages.MESSAGE_REQUEST_IGNORE,
                }),
                (0, a.jsx)(l.Button, {
                  className: E.button,
                  color: l.ButtonColors.BRAND,
                  size: l.Button.Sizes.SMALL,
                  onClick: e => {
                    e.stopPropagation(), m(h.id);
                  },
                  disabled: O,
                  submitting: T || A || N,
                  children: f.default.Messages.MESSAGE_REQUEST_ACCEPT,
                }),
              ],
            }),
          ],
        });
      }
    },
    92918: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("208021"),
        l = n("982108"),
        i = n("599110"),
        r = n("659500"),
        o = n("24927"),
        u = n("745772"),
        d = n("49111");
      function c(e) {
        let {
          index: t,
          className: n,
          channel: c,
          user: f,
          hasSingleMessageRequest: E,
        } = e;
        return (0, a.jsx)(o.default, {
          index: t,
          className: n,
          isFocused: !1,
          channel: c,
          user: f,
          onClick: e => {
            e.stopPropagation(),
              s.default.openPrivateChannelAsSidebar({
                channelId: c.id,
                baseChannelId: l.MESSAGE_REQUESTS_BASE_CHANNEL_ID,
                hasSingleMessageRequest: E,
              }),
              i.default.track(d.AnalyticEvents.MESSAGE_REQUEST_PREVIEW_VIEWED, {
                is_spam: !0,
                channel_id: c.id,
                other_user_id: f.id,
              }),
              setTimeout(() => {
                r.ComponentDispatch.dispatch(
                  d.ComponentActions.FOCUS_CHANNEL_TEXT_AREA,
                  { channelId: c.id }
                );
              }, 0);
          },
          children: e =>
            (0, a.jsx)(u.default, { active: e, user: f, channel: c }),
        });
      }
    },
    433591: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return O;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("355262"),
        o = n("432710"),
        u = n("77078"),
        d = n("74456"),
        c = n("302437"),
        f = n("155084"),
        E = n("826684"),
        h = n("599110"),
        _ = n("803524"),
        C = n("7643"),
        I = n("785770"),
        S = n("521702"),
        m = n("452229"),
        p = n("196986"),
        T = n("92918"),
        g = n("973199"),
        A = n("49111"),
        N = n("782340"),
        R = n("451482");
      function O() {
        let e = s.useRef(null),
          t = (0, S.default)(),
          n = (0, m.useSpamMessageRequestCount)(),
          l = (0, _.useListHasSingleSpamMessageRequest)(),
          O = (0, d.useIsRejectAllMessageRequestsEnabled)(),
          v = (0, c.default)("message-requests-spam-list"),
          { channelId: L } = (0, I.useMessageRequestSidebarState)(),
          M = s.useCallback(() => {
            (0, u.showToast)(
              (0, u.createToast)(
                N.default.Messages.MESSAGE_REQUEST_REQUEST_ERROR_ALERT_TITLE,
                u.ToastType.FAILURE
              )
            );
          }, []),
          { rejectAll: P } = (0, C.useMessageRequestActions)({ onError: M }),
          D = s.useCallback(() => {
            let e = t.map(e => e.channel.id);
            P(e);
          }, [t, P]);
        s.useEffect(() => {
          h.default.track(A.AnalyticEvents.SPAM_MESSAGE_REQUESTS_VIEWED, {
            num_spam_message_requests: n,
          }),
            f.default.increment({
              name: o.MetricEvents.SPAM_MESSAGE_REQUEST_VIEW,
            });
        }, []);
        let y = s.useCallback(
            e => {
              var n, s;
              let { row: r } = e,
                o = t[r],
                u =
                  null === (s = t[r + 1]) || void 0 === s
                    ? void 0
                    : null === (n = s.channel) || void 0 === n
                      ? void 0
                      : n.id,
                d = o.channel.id;
              return (0, a.jsx)(
                T.default,
                {
                  index: r,
                  className: i({
                    [R.selected]: null != L && L === d,
                    [R.siblingSelected]: null != L && L === u,
                  }),
                  channel: o.channel,
                  user: o.user,
                  hasSingleMessageRequest: l,
                },
                d
              );
            },
            [t, l, L]
          ),
          x = s.useCallback(
            () =>
              (0, a.jsxs)(
                E.default,
                {
                  className: R.sectionTitle,
                  children: [
                    N.default.Messages.MESSAGE_REQUESTS_SPAM_HEADER.format({
                      count: n,
                    }),
                    O && n > 0
                      ? (0, a.jsxs)(a.Fragment, {
                          children: [
                            (0, a.jsx)(u.Text, {
                              className: R.titleDivider,
                              variant: "eyebrow",
                              color: "header-secondary",
                              tag: "span",
                              children: "•",
                            }),
                            (0, a.jsx)(u.Button, {
                              onClick: D,
                              look: u.ButtonLooks.LINK,
                              color: u.ButtonColors.LINK,
                              size: u.ButtonSizes.SMALL,
                              className: R.clearAllButton,
                              "aria-label":
                                N.default.Messages.MESSAGE_REQUESTS_CLEAR_ALL,
                              children:
                                N.default.Messages.MESSAGE_REQUESTS_CLEAR_ALL,
                            }),
                          ],
                        })
                      : null,
                  ],
                },
                "message-requests-spam-title"
              ),
            [n, D, O]
          );
        return 0 === t.length
          ? (0, a.jsx)(p.default, { section: g.MessageRequestSections.SPAM })
          : (0, a.jsx)(r.ListNavigatorProvider, {
              navigator: v,
              children: (0, a.jsx)(r.ListNavigatorContainer, {
                children: n => {
                  let { ref: s, role: l, ...i } = n;
                  return (0, a.jsx)(
                    u.List,
                    {
                      className: R.list,
                      innerRole: l,
                      innerAriaLabel: N.default.Messages.MESSAGE_REQUESTS,
                      ref: t => {
                        var n;
                        (e.current = t),
                          (s.current =
                            null !==
                              (n = null == t ? void 0 : t.getScrollerNode()) &&
                            void 0 !== n
                              ? n
                              : null);
                      },
                      paddingTop: 24,
                      paddingBottom: 24,
                      sectionHeight: g.LIST_SECTION_HEIGHT,
                      rowHeight: g.LIST_ROW_HEIGHT,
                      renderSection: x,
                      renderRow: y,
                      sections: [t.length],
                      chunkSize: 30,
                      fade: !0,
                      ...i,
                    },
                    "message-requests-spam-list"
                  );
                },
              }),
            });
      }
    },
    745772: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return I;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("432710"),
        i = n("77078"),
        r = n("155084"),
        o = n("144491"),
        u = n("208021"),
        d = n("982108"),
        c = n("803524"),
        f = n("7643"),
        E = n("98708"),
        h = n("28424"),
        _ = n("782340"),
        C = n("348173");
      function I(e) {
        let { active: t, user: n, channel: I } = e,
          S = (0, c.useListHasSingleSpamMessageRequest)(),
          m = s.useCallback(() => {
            (0, i.showToast)(
              (0, i.createToast)(
                _.default.Messages.MESSAGE_REQUESTS_SPAM_ERROR_ALERT_TITLE,
                i.ToastType.FAILURE
              )
            ),
              r.default.increment({
                name: l.MetricEvents.SPAM_MESSAGE_REQUEST_ERROR_VIEW,
              });
          }, []),
          p = s.useCallback(() => {
            u.default.closeChannelSidebar(d.MESSAGE_REQUESTS_BASE_CHANNEL_ID);
          }, []),
          T = s.useCallback(() => {
            u.default.closeChannelSidebar(d.MESSAGE_REQUESTS_BASE_CHANNEL_ID),
              S && (0, o.transitionToChannel)(I.id);
          }, [I.id, S]),
          {
            acceptMessageRequest: g,
            isAcceptLoading: A,
            isUserProfileLoading: N,
            isOptimisticAccepted: R,
          } = (0, f.useMessageRequestActions)({
            user: n,
            onAcceptSuccess: T,
            onRejectSuccess: p,
            onError: m,
          }),
          O = A || N,
          v = O || R;
        return (0, a.jsxs)("div", {
          className: C.container,
          children: [
            (0, a.jsx)(E.default, { otherUser: n, channel: I, active: t }),
            (0, a.jsxs)("div", {
              className: C.actions,
              children: [
                (0, a.jsx)(i.Button, {
                  className: C.button,
                  color: i.ButtonColors.PRIMARY,
                  size: i.Button.Sizes.SMALL,
                  onClick: e => {
                    g(I.id), e.stopPropagation();
                  },
                  disabled: v,
                  submitting: O,
                  children: _.default.Messages.MESSAGE_REQUESTS_SPAM_ACCEPT,
                }),
                (0, a.jsx)(h.default, {
                  className: C.button,
                  channel: I,
                  buttonSize: i.Button.Sizes.SMALL,
                }),
              ],
            }),
          ],
        });
      }
    },
    397039: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
      var a = n("913144"),
        s = {
          closeSidebar() {
            a.default.dispatch({ type: "MOBILE_WEB_SIDEBAR_CLOSE" });
          },
          openSidebar() {
            a.default.dispatch({ type: "MOBILE_WEB_SIDEBAR_OPEN" });
          },
        };
    },
    628805: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var a = n("394846"),
        s = n("446674"),
        l = n("913144");
      let i = !1;
      class r extends s.default.Store {
        getIsOpen() {
          return !a.isMobile || i;
        }
      }
      r.displayName = "MobileWebSidebarStore";
      var o = new r(l.default, {
        MOBILE_WEB_SIDEBAR_OPEN: function () {
          i = !0;
        },
        MOBILE_WEB_SIDEBAR_CLOSE: function () {
          i = !1;
        },
      });
    },
    397009: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
      var a = (0, n("862205").createExperiment)({
        kind: "user",
        id: "2022-04_account_profile_popout",
        label: "Account Profile Popout",
        defaultConfig: {
          isPopupEnabled: !1,
          isTaglessAccountPanelEnabled: !1,
          isJoinedTagButtonEnabled: !1,
        },
        treatments: [
          {
            id: 1,
            label: "Enable Account Profile Popout",
            config: {
              isPopupEnabled: !0,
              isTaglessAccountPanelEnabled: !1,
              isJoinedTagButtonEnabled: !1,
            },
          },
          {
            id: 2,
            label: "Enable Account Profile Popout w/ DiscordTag button",
            config: {
              isPopupEnabled: !0,
              isTaglessAccountPanelEnabled: !1,
              isJoinedTagButtonEnabled: !0,
            },
          },
        ],
      });
    },
    694787: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          validateMultiAccountTokens: function () {
            return f;
          },
          switchAccount: function () {
            return E;
          },
          removeAccount: function () {
            return h;
          },
        });
      var a = n("171718"),
        s = n("872717"),
        l = n("913144"),
        i = n("437822"),
        r = n("605250"),
        o = n("271938"),
        u = n("770032"),
        d = n("49111");
      let c = new r.default("MultiAccountActionCreators");
      function f() {
        let e = o.default.getId(),
          t = u.default.getUsers();
        t.forEach(async t => {
          let n,
            { id: i } = t,
            r = a.default.getToken(i);
          if (null == r || "" === r) {
            l.default.dispatch({
              type: "MULTI_ACCOUNT_VALIDATE_TOKEN_FAILURE",
              userId: i,
            });
            return;
          }
          l.default.dispatch({
            type: "MULTI_ACCOUNT_VALIDATE_TOKEN_REQUEST",
            userId: i,
          });
          try {
            n = await s.default.get({
              url: d.Endpoints.ME,
              headers: { authorization: r },
              retries: 3,
            });
          } catch (t) {
            let e =
              (null == t ? void 0 : t.status) === 401 ||
              (null == t ? void 0 : t.status) === 403;
            l.default.dispatch({
              type: e
                ? "MULTI_ACCOUNT_VALIDATE_TOKEN_FAILURE"
                : "MULTI_ACCOUNT_VALIDATE_TOKEN_SUCCESS",
              userId: i,
            });
            return;
          }
          l.default.dispatch({
            type: e === i ? "CURRENT_USER_UPDATE" : "USER_UPDATE",
            user: n.body,
          }),
            l.default.dispatch({
              type: "MULTI_ACCOUNT_VALIDATE_TOKEN_SUCCESS",
              userId: i,
            });
        });
      }
      function E(e, t) {
        c.log("Switching account to ".concat(e), { switchSynchronously: t });
        let n = a.default.getToken(e);
        return null == n
          ? (c.log("Switching accounts failed because there was no token"),
            l.default.dispatch({
              type: "MULTI_ACCOUNT_VALIDATE_TOKEN_FAILURE",
              userId: e,
            }),
            Promise.resolve())
          : i.default.switchAccountToken(n, t);
      }
      function h(e) {
        l.default.dispatch({ type: "MULTI_ACCOUNT_REMOVE_ACCOUNT", userId: e });
      }
    },
    927101: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useMultiAccountUsers: function () {
            return o;
          },
        });
      var a = n("884691"),
        s = n("446674"),
        l = n("913144"),
        i = n("694787"),
        r = n("770032");
      function o() {
        let e = (0, s.useStateFromStoresObject)([r.default], () => ({
          isLoading: r.default.getIsValidatingUsers(),
          multiAccountUsers: r.default.getUsers(),
        }));
        return (
          a.useEffect(() => {
            l.default.wait(() => {
              i.validateMultiAccountTokens();
            });
          }, []),
          e
        );
      }
    },
    337328: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return J;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("627445"),
        o = n.n(r),
        u = n("733724"),
        d = n("394846"),
        c = n("446674"),
        f = n("47115"),
        E = n("77078"),
        h = n("327037"),
        _ = n("997289"),
        C = n("731898"),
        I = n("252744"),
        S = n("502651"),
        m = n("812204"),
        p = n("685665"),
        T = n("106803"),
        g = n("861370"),
        A = n("91639"),
        N = n("726778"),
        R = n("128887"),
        O = n("217513"),
        v = n("430312"),
        L = n("763866"),
        M = n("10532"),
        P = n("935409"),
        D = n("845579"),
        y = n("373469"),
        x = n("52028"),
        b = n("824563"),
        U = n("697218"),
        G = n("304121"),
        j = n("956089"),
        w = n("599110"),
        k = n("718517"),
        F = n("158998"),
        B = n("583232"),
        H = n("644091"),
        V = n("891964"),
        Y = n("49111"),
        W = n("590456"),
        K = n("782340"),
        z = n("400464");
      let q = [
        {
          duration: 30 * k.default.Millis.MINUTE,
          label: () => K.default.Messages.MUTE_DURATION_30_MINUTES,
        },
        {
          duration: k.default.Millis.HOUR,
          label: () => K.default.Messages.MUTE_DURATION_1_HOUR,
        },
        {
          duration: 3 * k.default.Millis.HOUR,
          label: () => K.default.Messages.MUTE_DURATION_3_HOURS,
        },
        {
          duration: 8 * k.default.Millis.HOUR,
          label: () => K.default.Messages.MUTE_DURATION_8_HOURS,
        },
        {
          duration: k.default.Millis.DAY,
          label: () => K.default.Messages.MUTE_DURATION_24_HOURS,
        },
        { duration: void 0, label: () => K.default.Messages.DURATION_FOREVER },
      ];
      function Q(e, t, n, s) {
        let l = (0, a.jsx)(a.Fragment, {
          children: q.map(s => {
            let { duration: l, label: i } = s;
            return (0, a.jsx)(
              E.MenuItem,
              {
                id: "".concat(e, "-").concat(l),
                label: i(),
                action: () => (0, B.default)(e, t, n, l),
                dontCloseOnAction: !0,
              },
              l
            );
          }),
        });
        return (0, a.jsx)(E.MenuItem, {
          id: e,
          className: z.expiringStatusMenuItem,
          keepItemStyles: !0,
          hasSubmenu: !0,
          label: t => {
            let { isFocused: n } = t;
            return (0, a.jsxs)("div", {
              className: z.statusItem,
              children: [
                (0, a.jsx)(E.Status, {
                  status: e,
                  className: z.icon,
                  size: 10,
                  color: n ? "currentColor" : void 0,
                }),
                (0, a.jsx)("div", {
                  className: z.status,
                  children: (0, F.humanizeStatus)(e),
                }),
                null != s &&
                  (0, a.jsx)("div", { className: z.description, children: s }),
              ],
            });
          },
          action: () => (0, B.default)(e, t, n),
          dontCloseOnAction: !0,
          children: e !== Y.StatusTypes.ONLINE ? l : void 0,
        });
      }
      function Z(e, t, n, s) {
        return (0, a.jsx)(E.MenuItem, {
          id: e,
          keepItemStyles: !0,
          render: t => {
            let { isFocused: n } = t;
            return (0, a.jsxs)("div", {
              className: z.statusItem,
              children: [
                (0, a.jsx)(E.Status, {
                  status: e,
                  className: z.icon,
                  size: 10,
                  color: n ? "currentColor" : void 0,
                }),
                (0, a.jsx)("div", {
                  className: z.status,
                  children: (0, F.humanizeStatus)(e),
                }),
                null != s &&
                  (0, a.jsx)("div", { className: z.description, children: s }),
              ],
            });
          },
          action: () => (0, B.default)(e, t, n),
          dontCloseOnAction: !0,
        });
      }
      function X(e) {
        let {
            user: t,
            customStatus: n,
            guildId: l,
            isApplicationStreaming: r,
            onClose: o,
            onSelect: h,
            closePopout: y,
          } = e,
          x = (0, _.useAnalyticsContext)(),
          { AnalyticsLocationProvider: U } = (0, p.default)(
            m.default.ACCOUNT_PROFILE_POPOUT
          ),
          k = (0, O.default)(t.id, l),
          [B, X, J, $] = (0, c.useStateFromStoresArray)([b.default], () => {
            var e;
            let n = t.id;
            return "string" != typeof n
              ? [void 0, void 0, Y.StatusTypes.UNKNOWN, !1]
              : [
                  null !==
                    (e = b.default.findActivity(
                      n,
                      e => e.type !== Y.ActivityTypes.CUSTOM_STATUS
                    )) && void 0 !== e
                    ? e
                    : void 0,
                  b.default.findActivity(
                    t.id,
                    e => e.type === Y.ActivityTypes.CUSTOM_STATUS
                  ),
                  b.default.getStatus(n),
                  b.default.isMobileOnline(n),
                ];
          }),
          ee = (function (e, t) {
            let n = A.ExpiringStatusExperiment.useExperiment({
                location: "account popout",
              }).expiringStatus,
              s = D.StatusExpiresAtSetting.useSetting(),
              l = (0, N.useFocusModeEnabled)(),
              i =
                R.QuietModeExperiment.useExperiment({
                  location: "account popout",
                }).allowQuietMode || l,
              r = D.FocusModeExpiresAtSetting.useSetting(),
              o = e === Y.StatusTypes.DND,
              d = t => {
                let n =
                  null != s && "0" !== s
                    ? K.default.Messages.STATUS_UNTIL.format({
                        endTime: new Date(Number(s)).toLocaleString(
                          K.default.getLocale(),
                          {
                            month: "numeric",
                            day: "numeric",
                            hour: "numeric",
                            minute: "2-digit",
                          }
                        ),
                      })
                    : void 0;
                if (e === t && null != n) return n;
                switch (t) {
                  case Y.StatusTypes.DND:
                    return i
                      ? K.default.Messages.STATUS_DND_HELP_FOCUS_MODE
                      : K.default.Messages.STATUS_DND_HELP;
                  case Y.StatusTypes.INVISIBLE:
                    return K.default.Messages.STATUS_INVISIBLE_HELPER;
                  default:
                    return;
                }
              },
              c = (0, a.jsx)(a.Fragment, {
                children: q.map(t => {
                  let { duration: n, label: s } = t;
                  return (0, a.jsx)(
                    E.MenuItem,
                    {
                      id: "".concat(e, "-").concat(n),
                      label: s(),
                      action: () => {
                        (0, N.setFocusMode)(!0, n);
                      },
                      dontCloseOnAction: !0,
                    },
                    n
                  );
                }),
              });
            return (0, a.jsxs)(a.Fragment, {
              children: [
                Z(Y.StatusTypes.ONLINE, e, t),
                (0, a.jsx)(E.MenuSeparator, {}, "menu-separator-statuses"),
                n
                  ? Q(Y.StatusTypes.IDLE, e, t, d(Y.StatusTypes.IDLE))
                  : Z(Y.StatusTypes.IDLE, e, t, d(Y.StatusTypes.IDLE)),
                n
                  ? Q(Y.StatusTypes.DND, e, t, d(Y.StatusTypes.DND))
                  : Z(Y.StatusTypes.DND, e, t, d(Y.StatusTypes.DND)),
                n
                  ? Q(Y.StatusTypes.INVISIBLE, e, t, d(Y.StatusTypes.INVISIBLE))
                  : Z(
                      Y.StatusTypes.INVISIBLE,
                      e,
                      t,
                      d(Y.StatusTypes.INVISIBLE)
                    ),
                (0, a.jsx)(E.MenuSeparator, {}, "menu-separator-statuses"),
                i || l
                  ? (0, a.jsx)(
                      E.MenuItem,
                      {
                        id: "quiet-mode",
                        "aria-label": "focus mode",
                        className: z.expiringStatusMenuItem,
                        keepItemStyles: !0,
                        hasSubmenu: !0,
                        showIconFirst: !0,
                        label: () =>
                          (0, a.jsxs)("div", {
                            className: z.statusItem,
                            children: [
                              (0, a.jsx)(f.BellSlashIcon, {
                                width: 12,
                                height: 12,
                                className: z.icon,
                              }),
                              (0, a.jsxs)("div", {
                                className: z.focusModeTitle,
                                children: [
                                  K.default.Messages.FOCUS_MODE_TITLE,
                                  (0, a.jsx)(j.TextBadge, {
                                    text: l
                                      ? K.default.Messages.FOCUS_MODE_BADGE_ON
                                      : o
                                        ? K.default.Messages
                                            .FOCUS_MODE_BADGE_ON_VIA_DND
                                        : K.default.Messages
                                            .FOCUS_MODE_BADGE_OFF,
                                    color: l
                                      ? u.default.BRAND_500
                                      : o
                                        ? u.default.RED_400
                                        : u.default.PRIMARY_500,
                                  }),
                                ],
                              }),
                              (0, a.jsx)("div", {
                                className: z.description,
                                children:
                                  l && null != r && "0" !== r
                                    ? K.default.Messages.STATUS_UNTIL.format({
                                        endTime: new Date(
                                          Number(r)
                                        ).toLocaleString(
                                          K.default.getLocale(),
                                          {
                                            month: "numeric",
                                            day: "numeric",
                                            hour: "numeric",
                                            minute: "2-digit",
                                          }
                                        ),
                                      })
                                    : K.default.Messages.FOCUS_MODE_DESCRIPTION,
                              }),
                            ],
                          }),
                        action: () => {
                          (0, N.setFocusMode)(!l);
                        },
                        dontCloseOnAction: !0,
                        children: c,
                      },
                      "quiet-mode"
                    )
                  : null,
              ],
            });
          })(J, x),
          { ref: et } = (0, C.default)(),
          en = (0, I.default)(et);
        s.useEffect(() => {
          w.default.track(Y.AnalyticEvents.OPEN_POPOUT, {
            type: "User Status Menu",
            has_custom_status: null != n,
            other_user_id: t.id,
            application_id: null != B ? B.application_id : void 0,
            is_streaming: r,
            application_name: null != B ? B.name : void 0,
            profile_has_nitro_customization:
              (null == k ? void 0 : k.banner) != null,
            location: x.location,
            has_profile_effect:
              (null == k ? void 0 : k.profileEffectId) != null,
          });
        }, []);
        let ea = (0, N.useFocusModeEnabled)(),
          es = J === Y.StatusTypes.DND,
          el = (0, H.useMultiAccountMenuItems)(),
          ei = (0, T.useCustomStatusMenuItem)(
            null != n ? n : void 0,
            z.menuItemFocused
          ),
          er = (0, g.default)({
            id: t.id,
            label: K.default.Messages.COPY_ID_USER,
            showIconFirst: !0,
          });
        return (0, a.jsx)(U, {
          children: (0, a.jsx)("div", {
            className: z.popoutContainer,
            children: (0, a.jsx)("div", {
              ref: et,
              children: (0, a.jsxs)(v.default, {
                user: t,
                profileType: W.UserProfileTypes.POPOUT,
                children: [
                  (0, a.jsx)(P.default, {
                    user: t,
                    displayProfile: k,
                    onClose: () => (null == y ? void 0 : y()),
                    isMobile: $,
                    isStreaming: (0, S.default)(B),
                    status: J,
                    disableUserProfileLink: __OVERLAY__,
                    isHovering: en,
                    showPremiumBadgeUpsell: !1,
                  }),
                  (0, a.jsxs)(v.default.Inner, {
                    children: [
                      (0, a.jsx)(L.default, {
                        activity: B,
                        customStatusActivity: X,
                        displayProfile: k,
                        user: t,
                        onClose: o,
                        setNote: !1,
                        canDM: !1,
                        hideNote: !0,
                        showCopiableUsername: !0,
                      }),
                      (0, a.jsx)(M.default, { className: z.divider }),
                      (0, a.jsxs)(E.Menu, {
                        navId: "account",
                        "aria-label": K.default.Messages.SET_STATUS,
                        hideScroller: !0,
                        className: z.menu,
                        onClose: o,
                        onSelect: h,
                        children: [
                          (0, a.jsxs)(E.MenuGroup, {
                            children: [
                              (0, a.jsx)(
                                E.MenuItem,
                                {
                                  id: "status-picker",
                                  label: (0, a.jsxs)("div", {
                                    style: {
                                      display: "flex",
                                      alignItems: "center",
                                      justifyContent: "space-between",
                                    },
                                    children: [
                                      (0, F.humanizeStatus)(J),
                                      ea || es
                                        ? (0, a.jsx)(f.BellSlashIcon, {
                                            width: 12,
                                            height: 12,
                                          })
                                        : null,
                                    ],
                                  }),
                                  focusedClassName: z.menuItemFocused,
                                  subMenuIconClassName: z.subMenuIcon,
                                  action: d.isMobile
                                    ? function () {
                                        (0, E.openModalLazy)(
                                          () =>
                                            new Promise(e => {
                                              e(e =>
                                                (0, a.jsx)(E.ModalRoot, {
                                                  ...e,
                                                  size: E.ModalSize.SMALL,
                                                  className: z.modal,
                                                  "aria-label":
                                                    K.default.Messages
                                                      .SET_STATUS,
                                                  children: (0, a.jsx)(E.Menu, {
                                                    navId: "account",
                                                    variant: "fixed",
                                                    "aria-label":
                                                      K.default.Messages
                                                        .SET_STATUS,
                                                    hideScroller: !0,
                                                    className:
                                                      z.statusPickerModalMenu,
                                                    onClose: e.onClose,
                                                    onSelect: e.onClose,
                                                    children: ee,
                                                  }),
                                                })
                                              );
                                            })
                                        );
                                      }
                                    : void 0,
                                  showIconFirst: !0,
                                  icon: e => {
                                    let { className: t, isFocused: n } = e;
                                    return (0, a.jsx)(E.Status, {
                                      status: J,
                                      size: 12,
                                      className: i(t, z.mainStatusIcon),
                                      color: n ? "currentColor" : void 0,
                                    });
                                  },
                                  children: d.isMobile ? void 0 : ee,
                                },
                                "status-picker"
                              ),
                              ei,
                            ],
                          }),
                          (0, a.jsx)(E.MenuGroup, {
                            children: (0, a.jsx)(
                              E.MenuItem,
                              {
                                id: "switch-account",
                                focusedClassName: z.menuItemFocused,
                                subMenuIconClassName: z.subMenuIcon,
                                label:
                                  K.default.Messages
                                    .SWITCH_ACCOUNTS_MENU_ITEM_TITLE,
                                icon: G.default,
                                showIconFirst: !0,
                                action: V.default,
                                children: el,
                              },
                              "switch-account"
                            ),
                          }),
                          (0, a.jsx)(E.MenuGroup, { children: er }),
                        ],
                      }),
                    ],
                  }),
                ],
              }),
            }),
          }),
        });
      }
      function J(e) {
        let { userId: t, user: n, guildId: l, onClose: i, onSelect: r } = e,
          u = (0, c.useStateFromStores)(
            [U.default],
            () => U.default.getUser(t),
            [t]
          ),
          d = (0, c.useStateFromStores)([x.default], () =>
            x.default.getCustomStatusActivity()
          ),
          [f, E] = s.useState(!1),
          _ = null != u ? u : n,
          C = (0, c.useStateFromStores)(
            [y.default],
            () => null != _ && null != y.default.getAnyStreamForUser(_.id)
          );
        return (s.useEffect(() => {
          null == u && e();
          async function e() {
            "string" == typeof t && (await (0, h.getUser)(t), E(!0));
          }
        }, [u, t]),
        null == _)
          ? (f && o(null != _, "Unexpected missing user"), null)
          : (0, a.jsx)(X, {
              closePopout: i,
              user: _,
              customStatus: d,
              guildId: l,
              isApplicationStreaming: C,
              onClose: i,
              onSelect: r,
            });
      }
    },
    891964: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("77078"),
        l = n("913144"),
        i = n("583374");
      function r() {
        (0, s.openModalLazy)(
          async () => {
            let { default: e } = await n.el("685807").then(n.bind(n, "685807"));
            return t => (0, a.jsx)(e, { ...t });
          },
          {
            onCloseCallback: () => {
              l.default.dispatch({ type: "CLEAR_AUTHENTICATION_ERRORS" }),
                l.default.dispatch({ type: "LOGIN_RESET", isMultiAccount: !0 });
            },
            modalKey: i.SWITCH_ACCOUNTS_MODAL_KEY,
          }
        );
      }
    },
    644091: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useMultiAccountMenuItems: function () {
            return T;
          },
        }),
        n("424973");
      var a = n("37983");
      n("884691");
      var s = n("446674"),
        l = n("77078"),
        i = n("449918"),
        r = n("766274"),
        o = n("102985"),
        u = n("697218"),
        d = n("578706"),
        c = n("423487"),
        f = n("599110"),
        E = n("158998"),
        h = n("694787"),
        _ = n("770032"),
        C = n("927101"),
        I = n("891964"),
        S = n("49111"),
        m = n("782340"),
        p = n("945526");
      function T() {
        let e = (0, s.useStateFromStores)([u.default], () =>
            u.default.getCurrentUser()
          ),
          t = (0, s.useStateFromStores)(
            [o.default],
            () => o.default.hidePersonalInformation
          ),
          { multiAccountUsers: n } = (0, C.useMultiAccountUsers)(),
          T = t => {
            t !== (null == e ? void 0 : e.id) &&
              (f.default.track(S.AnalyticEvents.MULTI_ACCOUNT_SWITCH_ATTEMPT, {
                location: { section: S.AnalyticsSections.PROFILE_POPOUT },
              }),
              h.switchAccount(t));
          },
          g = n.map(n => {
            let s = new r.default(n),
              o = s.id === (null == e ? void 0 : e.id),
              u = n.tokenStatus === _.MultiAccountTokenStatus.INVALID,
              f = t ? null : "#".concat(s.discriminator);
            return (0, a.jsx)(
              l.MenuItem,
              {
                id: s.id,
                focusedClassName: p.focused,
                label: e => {
                  let { isFocused: r } = e;
                  return (0, a.jsxs)("div", {
                    className: p.userMenuItem,
                    children: [
                      (0, a.jsx)(l.Avatar, {
                        src: s.getAvatarURL(void 0, 40),
                        size: l.AvatarSizes.SIZE_24,
                        "aria-label": n.username,
                      }),
                      (0, a.jsxs)("div", {
                        className: p.userMenuUsername,
                        children: [
                          (0, a.jsx)(l.Text, {
                            className: p.userMenuText,
                            variant: "text-sm/normal",
                            children: E.default.getUserTag(s, {
                              mode: "username",
                              identifiable: t ? "never" : "always",
                            }),
                          }),
                          !s.isPomelo() &&
                            (0, a.jsx)(l.Text, {
                              className: p.userMenuDiscriminator,
                              variant: "text-sm/normal",
                              children: f,
                            }),
                        ],
                      }),
                      o &&
                        (0, a.jsx)(d.default, {
                          color: (0, i.getColor)(
                            r ? S.Color.WHITE_500 : S.Color.BRAND_500
                          ),
                          backgroundColor: (0, i.getColor)(
                            r ? S.Color.BRAND_500 : S.Color.WHITE_500
                          ),
                          width: 18,
                          height: 18,
                          className: p.activeIcon,
                        }),
                      u &&
                        (0, a.jsx)(c.default, {
                          color: (0, i.getColor)(S.Color.RED_400),
                          backgroundColor: (0, i.getColor)(S.Color.WHITE_500),
                          width: 15,
                          height: 15,
                          className: p.activeIcon,
                        }),
                    ],
                  });
                },
                action: () => {
                  u ? (0, I.default)() : T(s.id);
                },
              },
              s.id
            );
          });
        return (
          g.push(
            (0, a.jsxs)(a.Fragment, {
              children: [
                (0, a.jsx)(l.MenuSeparator, {}),
                (0, a.jsx)(l.MenuItem, {
                  id: "manage-accounts",
                  label: m.default.Messages.SWITCH_ACCOUNTS_MANAGE_ACCOUNTS,
                  action: I.default,
                }),
              ],
            })
          ),
          g
        );
      }
    },
    91639: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ExpiringStatusExperiment: function () {
            return s;
          },
        });
      var a = n("862205");
      let s = (0, a.createExperiment)({
        kind: "user",
        id: "2024-01_expiring_status",
        label: "Expiring status Experiment ",
        defaultConfig: { expiringStatus: !1 },
        treatments: [
          {
            id: 1,
            label: "allow expiring status",
            config: { expiringStatus: !0 },
          },
        ],
      });
    },
    404931: function (e, t, n) {
      "use strict";
      n.r(t), n("424973");
      var a = n("446674"),
        s = n("913144"),
        l = n("845579"),
        i = n("101125"),
        r = n("718517"),
        o = n("49111");
      let u = [],
        d = !1;
      function c() {
        return (
          u.length >= 4 &&
          u.some(e => e < Date.now() - 3 * r.default.Millis.DAY)
        );
      }
      class f extends a.default.PersistedStore {
        initialize(e) {
          null != e &&
            Array.isArray(e.sessionStartsWithDND) &&
            (u = e.sessionStartsWithDND);
        }
        showNagBar() {
          return d;
        }
        getState() {
          return { sessionStartsWithDND: u };
        }
        getTemp() {
          return { x: l.StatusExpiresAtSetting.getSetting() };
        }
      }
      (f.displayName = "HabitualDNDStore"),
        (f.persistKey = "habitualDND"),
        new f(s.default, {
          POST_CONNECTION_OPEN: function () {
            i.default.getStatus() === o.StatusTypes.DND &&
            "0" === l.StatusExpiresAtSetting.getSetting()
              ? (u.push(Date.now()),
                (u = u.filter(e => e > Date.now() - 5 * r.default.Millis.DAY)),
                c() &&
                  setTimeout(() => {
                    s.default.dispatch({ type: "HABITUAL_DND_CLEAR" });
                  }, 15 * r.default.Millis.SECOND))
              : (u = []);
          },
          HABITUAL_DND_CLEAR: function () {
            (d = !!c() || !1), (u = []);
          },
        });
    },
    128887: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          QuietModeExperiment: function () {
            return s;
          },
        });
      var a = n("862205");
      let s = (0, a.createExperiment)({
        kind: "user",
        id: "2024-01_quiet_mode",
        label: "Quiet Mode (dnd-equivalent) Experiment ",
        defaultConfig: { allowQuietMode: !1 },
        treatments: [
          { id: 1, label: "allow quiet mode", config: { allowQuietMode: !0 } },
        ],
      });
    },
    744923: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          mount: function () {
            return s;
          },
          unmount: function () {
            return l;
          },
        });
      var a = n("913144");
      function s() {
        a.default.dispatch({ type: "NOW_PLAYING_MOUNTED" });
      }
      function l() {
        a.default.dispatch({ type: "NOW_PLAYING_UNMOUNTED" });
      }
    },
    386133: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return x;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("917351"),
        i = n.n(l),
        r = n("483366"),
        o = n.n(r),
        u = n("446674"),
        d = n("77078"),
        c = n("913144"),
        f = n("777273"),
        E = n("2973"),
        h = n("227231"),
        _ = n("843823"),
        C = n("697218"),
        I = n("392453"),
        S = n("599110"),
        m = n("718517"),
        p = n("744923"),
        T = n("333705"),
        g = n("749554"),
        A = n("62659"),
        N = n("36512"),
        R = n("638441"),
        O = n("49111"),
        v = n("988268"),
        L = n("782340"),
        M = n("852865");
      let P = 15 * m.default.Millis.MINUTE,
        D = (0, R.default)(function (e) {
          let {
              party: t,
              onUserContextMenu: n,
              onChannelContextMenu: l,
              quest: i,
            } = e,
            r = (0, a.jsx)(g.default, { party: t, onUserContextMenu: n }),
            u = (0, a.jsx)(T.default, {
              party: t,
              onChannelContextMenu: l,
              quest: i,
            }),
            {
              partiedMembers: c,
              applicationStreams: f,
              currentActivities: E,
              voiceChannels: h,
            } = t,
            _ = c.length,
            C = f.length,
            I = E.length,
            m = h.length > 0,
            p = s.useCallback(() => {
              let e = E.filter(e => {
                var t, n;
                return (
                  (null === (t = e.game) || void 0 === t ? void 0 : t.name) !=
                    null &&
                  (null === (n = e.game) || void 0 === n ? void 0 : n.type) ===
                    v.ApplicationTypes.GAME
                );
              }).map(e => e.game.name);
              S.default.track(O.AnalyticEvents.NOW_PLAYING_CARD_HOVERED, {
                num_users: _,
                num_streams: C,
                num_activities: I,
                in_voice_channel: m,
                games_detected: e,
              });
            }, [_, C, I, m, E]),
            R = o(p, P);
          return null != r || null != u
            ? (0, a.jsx)(d.Popout, {
                position: "left",
                renderPopout: e => {
                  let { closePopout: n } = e;
                  return (0, a.jsx)(N.default, { party: t, close: n });
                },
                spacing: 8,
                children: (e, t) => {
                  let { isShown: n } = t;
                  return (0, a.jsx)(A.default, {
                    ...e,
                    onMouseEnter: R,
                    "aria-haspopup": "menu",
                    className: M.itemCard,
                    active: n,
                    children: (0, a.jsxs)("div", { children: [r, u] }),
                  });
                },
              })
            : null;
        }),
        y = i.throttle(() => f.fetchUserAffinities(!1), 3e5);
      function x() {
        let {
            nowPlayingCards: e,
            loaded: t,
            needsRefresh: n,
            fetching: l,
            currentUser: i,
          } = (0, u.useStateFromStoresObject)(
            [I.default, _.default, C.default],
            () => ({
              nowPlayingCards: I.default.nowPlayingCards,
              loaded: I.default.loaded,
              needsRefresh: _.default.needsRefresh(),
              fetching: _.default.getFetching(),
              currentUser: C.default.getCurrentUser(),
            })
          ),
          r = (0, u.useStateFromStores)([E.default], () => E.default.quests);
        s.useEffect(
          () => (
            c.default.wait(() => p.mount()),
            () => c.default.wait(() => p.unmount())
          ),
          [null == i ? void 0 : i.id]
        ),
          s.useEffect(() => {
            n && !l && y();
          }, [n, l]);
        let o = s.useMemo(() => {
            let t = new Map(),
              n = new Set();
            for (let a of e)
              a.party.currentActivities.forEach(e => {
                let { game: s } = e;
                if (null != s) {
                  let e = (0, h.getQuestByApplicationId)(r, s.id);
                  null != e &&
                    !n.has(e.id) &&
                    (t.set(a.party.id, e), n.add(e.id));
                }
              });
            return t;
          }, [e, r]),
          f = null;
        return t
          ? ((f =
              e.length > 0
                ? e.map(e => {
                    let { party: t } = e;
                    return (0, a.jsx)(
                      D,
                      { party: t, quest: o.get(t.id) },
                      t.id
                    );
                  })
                : (0, a.jsxs)("div", {
                    className: M.emptyCard,
                    children: [
                      (0, a.jsx)(d.Heading, {
                        variant: "heading-md/semibold",
                        className: M.emptyHeader,
                        children:
                          L.default.Messages.ACTIVITY_FEED_NONE_PLAYING_HEADER,
                      }),
                      (0, a.jsx)(d.Text, {
                        color: "none",
                        className: M.emptyText,
                        variant: "text-sm/normal",
                        children:
                          L.default.Messages.ACTIVITY_FEED_NONE_PLAYING_BODY,
                      }),
                    ],
                  })),
            (0, a.jsx)(a.Fragment, { children: f }))
          : (0, a.jsx)("div", {
              className: M.emptyCard,
              children: (0, a.jsx)(d.Spinner, {}),
            });
      }
    },
    333705: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return m;
          },
        }),
        n("424973"),
        n("222007");
      var a = n("37983");
      n("884691");
      var s = n("987317"),
        l = n("990766"),
        i = n("309570"),
        r = n("152311"),
        o = n("429928"),
        u = n("36539"),
        d = n("502651"),
        c = n("834440"),
        f = n("239380"),
        E = n("550368"),
        h = n("67139"),
        _ = n("62659"),
        C = n("389817"),
        I = n("636174"),
        S = n("49111");
      function m(e) {
        let { party: t, onChannelContextMenu: n, quest: m } = e,
          p = (0, C.useNowPlayingVisible)(),
          {
            voiceChannels: T,
            currentActivities: g,
            partiedMembers: A,
            applicationStreams: N,
            guildContext: R,
          } = t,
          O = [],
          v = e => {
            var t, n;
            let { length: s } = O;
            if (0 === s) {
              O.push(e);
              return;
            }
            let l = O[s - 1],
              i = "".concat(
                null !== (t = null == e ? void 0 : e.key) && void 0 !== t
                  ? t
                  : ""
              ),
              r = "".concat(
                null !== (n = null == l ? void 0 : l.key) && void 0 !== n
                  ? n
                  : ""
              ),
              o = r.startsWith("game") && i.startsWith("rich-presence");
            O.push(
              (0, a.jsx)(_.default.Separator, { inset: o }, "sep-".concat(i))
            ),
              O.push(e);
          };
        for (let { activity: e } of (T.length > 0 &&
          T.forEach(e => {
            let { members: t, channel: s, guild: l } = e;
            v(
              (0, a.jsx)(
                _.default.VoiceSection,
                {
                  guild: l,
                  channel: s,
                  members: t,
                  partySize: (function (e, t) {
                    let n;
                    let a = e.length,
                      s = 0;
                    if (
                      null != t &&
                      null != t.party &&
                      null != t.party.size &&
                      t.party.size.length >= 2
                    ) {
                      let a = t.party.size;
                      (s = Math.max(a[0] - e.length, 0)), (n = a[1]);
                    } else n = a + s;
                    return { knownSize: a, unknownSize: s, totalSize: n };
                  })(t),
                  onChannelContextMenu: n,
                  onGuildClick: () => {
                    (0, f.transitionToGuild)(l.id);
                  },
                },
                "voice-".concat(s.id)
              )
            );
          }),
        t.currentActivities))
          if (null != e) {
            let t = h.createBody(e);
            if (null != t) {
              v(t);
              break;
            }
          }
        return (
          N.length > 0 &&
            p &&
            N.forEach(e => {
              let { stream: t, streamUser: n, activity: i } = e;
              v(
                (0, a.jsx)(
                  _.default.ApplicationStreamingSection,
                  {
                    guildId: null == R ? void 0 : R.id,
                    user: n,
                    activity: i,
                    applicationStream: t,
                    onPreviewClick: () => {
                      s.default.selectVoiceChannel(t.channelId),
                        (0, l.watchStreamAndTransitionToStream)(t);
                    },
                  },
                  "application-stream-".concat(t.ownerId)
                )
              );
            }),
          g.forEach((e, t) => {
            var n, s, l, f, h, C, p, N, O;
            let {
              activity: L,
              game: M,
              playingMembers: P,
              activityUser: D,
            } = e;
            if (null == L || null == L.type) return null;
            if (
              g.length > 1 &&
              L.type === S.ActivityTypes.PLAYING &&
              !(0, i.default)(L) &&
              null != M
            )
              v(
                (0, a.jsx)(
                  _.default.GameSection,
                  {
                    icon: M.getIconURL(I.ICON_SIZE),
                    name: M.name,
                    partySize: {
                      knownSize: P.length,
                      unknownSize: 0,
                      totalSize: P.length,
                    },
                    members: P,
                  },
                  "game-"
                    .concat(
                      null !== (n = L.session_id) && void 0 !== n ? n : t,
                      "-"
                    )
                    .concat(
                      null !== (s = L.application_id) && void 0 !== s ? s : t
                    )
                )
              );
            else if ((0, r.default)(L)) {
              let e = new Set(P.map(e => e.id)),
                t =
                  null === (l = T.find(e => null != e)) || void 0 === l
                    ? void 0
                    : l.channel;
              null != t &&
                v(
                  (0, a.jsx)(
                    _.default.EmbeddedActivitySection,
                    {
                      activity: L,
                      participants: e,
                      channel: t,
                      guildId: t.guild_id,
                    },
                    "embedded-activity-".concat(L.application_id)
                  )
                );
            } else if (
              (null != L.assets || (0, i.default)(L)) &&
              L.type === S.ActivityTypes.PLAYING
            )
              v(
                (0, a.jsx)(
                  _.default.RichPresenceSection,
                  { activity: L, getAssetImage: E.getAssetImage },
                  "rich-presence-"
                    .concat(
                      null !== (f = L.session_id) && void 0 !== f ? f : t,
                      "-"
                    )
                    .concat(D.id)
                )
              );
            else if ((0, d.default)(L)) {
              let e = T.length > 0 && T[0].members.length > 1,
                n = P.length > 1;
              v(
                (0, a.jsx)(
                  _.default.TwitchSection,
                  {
                    guildId: null == R ? void 0 : R.id,
                    activity: L,
                    user: e || n ? D : null,
                    getAssetImage: E.getAssetImage,
                  },
                  "streaming-".concat(
                    null !== (h = L.session_id) && void 0 !== h ? h : t
                  )
                )
              );
            } else
              (0, o.default)(L)
                ? v(
                    (0, a.jsx)(
                      _.default.SpotifySection,
                      {
                        activity: L,
                        isSolo: 1 === A.length,
                        partySize: {
                          knownSize: P.length,
                          unknownSize: 0,
                          totalSize: P.length,
                        },
                        getAssetImage: E.getAssetImage,
                        members: P,
                      },
                      "spotify-"
                        .concat(
                          null !== (C = L.session_id) && void 0 !== C ? C : t,
                          "-"
                        )
                        .concat(D.id)
                    )
                  )
                : (null != L.assets || (0, i.default)(L)) &&
                    L.type === S.ActivityTypes.LISTENING
                  ? v(
                      (0, a.jsx)(
                        _.default.RichPresenceSection,
                        { activity: L, getAssetImage: E.getAssetImage },
                        "rich-presence-"
                          .concat(
                            null !== (p = L.session_id) && void 0 !== p ? p : t,
                            "-"
                          )
                          .concat(D.id)
                      )
                    )
                  : (0, u.default)(L) &&
                    v(
                      (0, a.jsx)(
                        _.default.XboxSection,
                        { title: M.name },
                        "xbox-".concat(
                          null !== (N = L.session_id) && void 0 !== N ? N : t
                        )
                      )
                    );
            null != m &&
              v(
                (0, a.jsx)(
                  c.default,
                  { quest: m },
                  "quest-"
                    .concat(m.id, "-")
                    .concat(null !== (O = L.session_id) && void 0 !== O ? O : t)
                )
              );
          }),
          O.length > 0 ? (0, a.jsx)(_.default.Body, { children: O }) : null
        );
      }
    },
    749554: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return C;
          },
        }),
        n("222007");
      var a = n("37983");
      n("884691");
      var s = n("627445"),
        l = n.n(s),
        i = n("152311"),
        r = n("429928"),
        o = n("36539"),
        u = n("280174"),
        d = n("158998"),
        c = n("67139"),
        f = n("62659"),
        E = n("636174"),
        h = n("49111"),
        _ = n("782340");
      function C(e) {
        let { party: t, onUserContextMenu: s } = e,
          { priorityMembers: C, guildContext: I } = t,
          S = C[0],
          m = (function (e) {
            let { priorityMembers: t, partiedMembers: n } = e,
              a = new Set(
                t.map(e => {
                  let { user: t } = e;
                  return t.id;
                })
              ),
              s = n.filter(e => !a.has(e.id)),
              l = d.default.getName(t[0].user),
              i =
                null != t[1]
                  ? d.default.getName(t[1].user)
                  : null != s[0]
                    ? d.default.getName(s[0])
                    : null;
            switch (n.length) {
              case 1:
                return l;
              case 2:
                return _.default.Messages.ACTIVITY_FEED_NOW_PLAYING_HEADER_TWO_KNOWN_ONLY.format(
                  { user1: l, user2: i }
                );
              default:
                return _.default.Messages.ACTIVITY_FEED_NOW_PLAYING_HEADER_TWO_KNOWN.format(
                  { user1: l, user2: i, extras: n.length - 2 }
                );
            }
          })(t),
          { subtitle: p, icon: T } = (function (e) {
            var t;
            let {
                priorityMembers: s,
                partiedMembers: d,
                voiceChannels: C,
                currentActivities: I,
              } = e,
              S = s.length,
              m = d.length - S,
              p = I[0],
              T = null == p ? void 0 : p.activity,
              g = null == p ? void 0 : p.startedPlayingTime,
              A = {
                name:
                  null !== (t = null == T ? void 0 : T.name) && void 0 !== t
                    ? t
                    : "",
              };
            if ((0, i.default)(T) && null != T)
              return {
                subtitle: (0, a.jsx)(u.default, {
                  start: g,
                  location: u.default.Locations.ACTIVITY_FEED_NEW,
                  messageProps: A,
                }),
                icon: null,
              };
            if (S + m === 1 && null != p) {
              let { game: e } = p;
              if (null == T) return { subtitle: null, icon: null };
              let t = c.createHeader(T);
              if (null != t) return t;
              switch (T.type) {
                case h.ActivityTypes.PLAYING:
                  if ((0, o.default)(T))
                    return {
                      subtitle:
                        _.default.Messages.ACTIVITY_FEED_NOW_PLAYING_XBOX,
                      icon: (0, a.jsx)(f.default.Header.Icon, {
                        src: f.default.Header.Icon.Src.XBOX,
                      }),
                    };
                  return {
                    subtitle: (0, a.jsx)(u.default, {
                      start: g,
                      location: u.default.Locations.ACTIVITY_FEED_NEW,
                      messageProps: A,
                    }),
                    icon:
                      null != e
                        ? (0, a.jsx)(f.default.Header.Icon, {
                            src:
                              null != e.getIconURL(E.ICON_SIZE)
                                ? e.getIconURL(E.ICON_SIZE)
                                : n("992739"),
                          })
                        : null,
                  };
                case h.ActivityTypes.STREAMING:
                  return {
                    subtitle:
                      _.default.Messages.ACTIVITY_FEED_NOW_STREAMING_TWITCH,
                    icon:
                      null != e && null != e.getIconURL(E.ICON_SIZE)
                        ? (0, a.jsx)(f.default.Header.Icon, {
                            src: e.getIconURL(E.ICON_SIZE),
                          })
                        : null,
                  };
                case h.ActivityTypes.LISTENING:
                  let s;
                  return (
                    (s = (0, r.default)(T)
                      ? (0, a.jsx)(f.default.Header.Icon, {
                          src: f.default.Header.Icon.Src.SPOTIFY,
                        })
                      : null != e.getIconURL(E.ICON_SIZE)
                        ? (0, a.jsx)(f.default.Header.Icon, {
                            src: e.getIconURL(E.ICON_SIZE),
                          })
                        : (0, a.jsx)(f.default.Header.Icon, {
                            src: n("992739"),
                          })),
                    {
                      subtitle:
                        _.default.Messages.ACTIVITY_FEED_NOW_PLAYING_LISTENING.format(
                          { name: T.name }
                        ),
                      icon: s,
                    }
                  );
                case h.ActivityTypes.WATCHING:
                  return {
                    subtitle:
                      _.default.Messages.ACTIVITY_FEED_NOW_PLAYING_WATCHING,
                    icon:
                      null != e && null != e.getIconURL(E.ICON_SIZE)
                        ? (0, a.jsx)(f.default.Header.Icon, {
                            src: e.getIconURL(E.ICON_SIZE),
                          })
                        : null,
                  };
                default:
                  return {
                    subtitle:
                      _.default.Messages
                        .ACTIVITY_FEED_NOW_PLAYING_IN_A_VOICE_CHANNEL,
                    icon: null,
                  };
              }
            }
            if (0 === I.length) {
              if (C.length > 0)
                return {
                  subtitle:
                    _.default.Messages
                      .ACTIVITY_FEED_NOW_PLAYING_IN_A_VOICE_CHANNEL,
                  icon: null,
                };
              let e = I[0];
              if (null != e) {
                let { activity: t } = e;
                if (null != t) {
                  let e = c.createHeader(t);
                  if (null != e) return e;
                }
                if (null != t && t.type === h.ActivityTypes.LISTENING)
                  return {
                    subtitle:
                      _.default.Messages.ACTIVITY_FEED_NOW_PLAYING_SPOTIFY,
                    icon: (0, a.jsx)(f.default.Header.Icon, {
                      src: f.default.Header.Icon.Src.SPOTIFY,
                    }),
                  };
              }
            } else if (1 === I.length) {
              let e = I.find(e => null != e.activity);
              if (null == e) return { subtitle: null, icon: null };
              let { activity: t, game: n, startedPlayingTime: s } = e;
              return (
                l(null != t, "Activity was null somehow"),
                {
                  subtitle: (0, a.jsx)(u.default, {
                    start: s,
                    location: u.default.Locations.ACTIVITY_FEED_NEW,
                    messageProps: A,
                  }),
                  icon:
                    null != n && null != n.getIconURL(E.ICON_SIZE)
                      ? (0, a.jsx)(f.default.Header.Icon, {
                          src: n.getIconURL(E.ICON_SIZE),
                        })
                      : null,
                }
              );
            }
            return {
              subtitle:
                _.default.Messages.ACTIVITY_FEED_NOW_PLAYING_MULTIPLE_GAMES,
              icon: (0, a.jsx)(f.default.Header.Icon, {
                src: f.default.Header.Icon.Src.MULTIPLE,
              }),
            };
          })(t);
        return (0, a.jsx)(f.default.Header, {
          priorityUser: S,
          guildId: null == I ? void 0 : I.id,
          title: m,
          subtitle: p,
          icon: T,
          onContextMenu: e => s(e, S.user),
        });
      }
    },
    62659: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return el;
          },
        }),
        n("222007");
      var a,
        s,
        l = n("37983"),
        i = n("884691"),
        r = n("414456"),
        o = n.n(r),
        u = n("446674"),
        d = n("669491"),
        c = n("77078"),
        f = n("832627"),
        E = n("997289"),
        h = n("376556"),
        _ = n("706508"),
        C = n("287585"),
        I = n("309570"),
        S = n("985677"),
        m = n("429928"),
        p = n("502651"),
        T = n("29088"),
        g = n("698372"),
        A = n("141962"),
        N = n("685665"),
        R = n("299285"),
        O = n("679653"),
        v = n("223913"),
        L = n("673527"),
        M = n("395763"),
        P = n("271938"),
        D = n("42203"),
        y = n("697218"),
        x = n("944832"),
        b = n("953109"),
        U = n("280174"),
        G = n("163466"),
        j = n("316887"),
        w = n("936629"),
        k = n("420145"),
        F = n("368121"),
        B = n("980423"),
        H = n("550368"),
        V = n("449008"),
        Y = n("158998"),
        W = n("356070"),
        K = n("49111"),
        z = n("782340"),
        q = n("211757");
      let Q = { SMALL: 64, LARGE: 160 },
        Z = [14, 14, 12, 12, 10, 8, 6],
        X = function (e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : null;
          return (0, l.jsx)(c.Text, {
            className: o(q.textContent, t),
            variant: "text-sm/semibold",
            children: e,
          });
        },
        J = function (e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : null;
          return (0, l.jsx)(c.Text, {
            className: o(q.textContent, t),
            variant: "text-xs/normal",
            children: e,
          });
        },
        $ = (0, f.default)(e => {
          let { message: t } = e;
          return (0, l.jsx)("div", { className: q.timestamp, children: t });
        }),
        ee = e => {
          let { children: t } = e;
          return (0, l.jsx)("section", { className: q.section, children: t });
        };
      class et extends i.Component {
        renderTimePlayed() {
          let e;
          let { activity: t } = this.props,
            { timestamps: n } = t;
          return null == n || !(0, S.default)(t) || (0, m.default)(t)
            ? null
            : J(
                (e = (0, I.default)(t)
                  ? (0, l.jsx)($, { timestamps: n })
                  : (0, l.jsx)(U.default, {
                      start: n.start,
                      end: n.end,
                      location: U.default.Locations.USER_ACTIVITY,
                      className: q.playTime,
                    }))
              );
        }
        render() {
          var e, t;
          let {
            activity: { assets: a, details: s, state: i, application_id: r },
            getAssetImage: u,
          } = this.props;
          return (0, l.jsx)(ee, {
            children: (0, l.jsxs)("div", {
              className: q.activitySection,
              children: [
                null != a && 0 !== Object.keys(a).length
                  ? (0, l.jsxs)("div", {
                      className: q.activitySectionAssets,
                      children: [
                        (0, l.jsx)("img", {
                          alt:
                            null !== (e = a.large_text) && void 0 !== e
                              ? e
                              : "",
                          src: u(r, a.large_image, [Q.LARGE, Q.LARGE]),
                          className: o(q.largeImage, {
                            [q.largeImageMask]: null != a.small_image,
                          }),
                        }),
                        null != a.small_image
                          ? (0, l.jsx)("img", {
                              alt:
                                null !== (t = a.small_text) && void 0 !== t
                                  ? t
                                  : "",
                              src: u(r, a.small_image, [Q.SMALL, Q.SMALL]),
                              className: q.smallImage,
                            })
                          : null,
                      ],
                    })
                  : (0, l.jsx)("div", {
                      className: q.activitySectionAssets,
                      children: (0, l.jsx)("img", {
                        alt: "",
                        src: n("992739"),
                        className: q.largeImage,
                      }),
                    }),
                (0, l.jsxs)("div", {
                  children: [
                    X(
                      null != s && "" !== s
                        ? s
                        : z.default.Messages.USER_ACTIVITY_HEADER_PLAYING
                    ),
                    null != i ? J(i) : null,
                    this.renderTimePlayed(),
                  ],
                }),
              ],
            }),
          });
        }
      }
      ((s = a || (a = {})).XBOX = "XBOX"),
        (s.SPOTIFY = "SPOTIFY"),
        (s.MULTIPLE = "MULTIPLE");
      let en = e => {
        let t,
          { src: n, onClick: a, onContextMenu: s } = e;
        switch (n) {
          case "XBOX":
            t = (0, l.jsx)(k.default, {
              className: q.headerIcon,
              color: d.default.unsafe_rawColors.PRIMARY_300.css,
            });
            break;
          case "SPOTIFY":
            t = (0, l.jsx)(w.default, {
              className: q.headerIcon,
              color: d.default.unsafe_rawColors.SPOTIFY.css,
            });
            break;
          case "MULTIPLE":
            t = (0, l.jsx)("div", {
              className: q.multipleIconWrapper,
              children: (0, l.jsx)(j.default, {
                className: o(q.headerIcon, q.multipleIcon),
                color: d.default.unsafe_rawColors.PRIMARY_300.css,
              }),
            });
            break;
          default:
            t = (0, l.jsx)("img", {
              src: null != n ? n : void 0,
              alt: "",
              className: q.headerIcon,
            });
        }
        return null != a || null != s
          ? (0, l.jsx)(c.Clickable, {
              onClick: a,
              className: o(null != a ? q.clickableIcon : ""),
              onContextMenu: s,
              children: t,
            })
          : t;
      };
      en.Src = a;
      let ea = e => {
        let {
          priorityUser: t,
          title: n,
          subtitle: a,
          icon: s,
          onContextMenu: i,
          guildId: r,
        } = e;
        return (0, l.jsxs)("header", {
          className: null != s ? q.headerFull : q.headerSimple,
          children: [
            (0, l.jsx)(c.Avatar, {
              src: t.user.getAvatarURL(r, 32),
              "aria-label": t.user.username,
              size: c.AvatarSizes.SIZE_32,
              className: q.headerAvatar,
              status: t.status,
              onContextMenu: i,
            }),
            (0, l.jsxs)("div", {
              className: q.headerDetails,
              children: [
                (0, l.jsx)(c.Text, {
                  className: o(q.textContent),
                  variant: "text-md/semibold",
                  children: n,
                }),
                (0, l.jsx)(c.Text, {
                  color: "header-secondary",
                  className: q.textContent,
                  variant: "text-sm/normal",
                  children: a,
                }),
              ],
            }),
            null != s ? s : null,
          ],
        });
      };
      ea.Icon = en;
      let es = e => {
        let { children: t, className: n, ...a } = e;
        return (0, l.jsx)(c.FocusRing, {
          children: (0, l.jsx)(G.default, {
            className: o(n, q.wrapper),
            padded: !0,
            ...a,
            children: t,
          }),
        });
      };
      (es.Header = ea),
        (es.Body = e => {
          let { children: t } = e;
          return (0, l.jsx)(G.default, {
            inset: !0,
            padded: !1,
            className: q.body,
            children: t,
          });
        }),
        (es.Separator = e => {
          let { inset: t, className: n } = e;
          return (0, l.jsx)("div", {
            className: o(q.separator, { [q.inset]: t }, n),
          });
        }),
        (es.VoiceSection = e => {
          var t, n;
          let {
              guild: a,
              channel: s,
              onGuildClick: r,
              partySize: u,
              members: d,
              onChannelContextMenu: f,
            } = e,
            E = i.useRef(null),
            h = (0, O.default)(s, !0);
          return (0, l.jsx)(ee, {
            children: (0, l.jsxs)("div", {
              className: q.voiceSection,
              ref: E,
              onContextMenu: e => f(e, s),
              children: [
                (0, l.jsx)(c.Clickable, {
                  onClick: r,
                  "aria-hidden": !0,
                  tabIndex: -1,
                  children: (0, l.jsxs)("div", {
                    className: q.voiceSectionAssets,
                    children: [
                      null != a.getIconURL(32)
                        ? (0, l.jsx)("img", {
                            alt: "",
                            src:
                              null !== (t = a.getIconURL(32)) && void 0 !== t
                                ? t
                                : void 0,
                            className: o(
                              q.voiceSectionGuildImage,
                              q.largeImageMask
                            ),
                          })
                        : (0, l.jsx)("div", {
                            className: q.voiceSectionNoGuildImageWrapper,
                            children: (0, l.jsx)("div", {
                              className: q.voiceSectionNoGuildImage,
                              style: {
                                fontSize:
                                  null !== (n = Z[a.acronym.length]) &&
                                  void 0 !== n
                                    ? n
                                    : Z[Z.length - 1],
                              },
                              children: a.acronym,
                            }),
                          }),
                      (0, l.jsx)("div", {
                        className: q.voiceSectionIconWrapper,
                        children: (0, l.jsx)(F.default, {
                          className: q.voiceSectionIcon,
                        }),
                      }),
                    ],
                  }),
                }),
                (0, l.jsx)(c.Clickable, {
                  onClick: r,
                  focusProps: { ringTarget: E },
                  children: (0, l.jsxs)("div", {
                    className: q.voiceSectionDetails,
                    children: [
                      X(a.toString(), q.voiceSectionText),
                      J(h, q.voiceSectionText),
                    ],
                  }),
                }),
                (0, l.jsx)(W.default, {
                  partySize: u,
                  members: d,
                  guildId: a.id,
                }),
              ],
            }),
          });
        }),
        (es.GameSection = e => {
          let { icon: t, name: n, partySize: a, members: s } = e;
          return (0, l.jsx)(ee, {
            children: (0, l.jsxs)("div", {
              className: q.gameSection,
              children: [
                null != t
                  ? (0, l.jsx)("img", {
                      alt: "",
                      src: t,
                      className: q.gameSectionIcon,
                    })
                  : null,
                (0, l.jsxs)("div", {
                  children: [
                    X(n),
                    J(
                      z.default.Messages.ACTIVITY_FEED_SINGLE_MEMBER_LIST_HEADER.format(
                        { memberCount: a.totalSize }
                      )
                    ),
                  ],
                }),
                (0, l.jsx)(W.default, { partySize: a, members: s }),
              ],
            }),
          });
        }),
        (es.RichPresenceSection = et),
        (es.XboxSection = e => {
          let { title: t } = e;
          return (0, l.jsx)(ee, {
            children: (0, l.jsxs)("div", {
              className: q.xboxSection,
              children: [
                (0, l.jsx)(k.default, { className: q.xboxSectionIcon }),
                (0, l.jsxs)("div", {
                  className: q.xboxSectionDetails,
                  children: [
                    X(t),
                    J(z.default.Messages.GAME_FEED_ACTIVITY_PLAYING_XBOX),
                  ],
                }),
              ],
            }),
          });
        }),
        (es.SpotifySection = e => {
          var t;
          let {
            activity: { assets: n, details: a, state: s, application_id: i },
            partySize: r,
            members: u,
            isSolo: c,
            getAssetImage: f,
          } = e;
          return (0, l.jsx)(ee, {
            children: (0, l.jsxs)("div", {
              className: q.spotifySection,
              children: [
                null != n
                  ? (0, l.jsxs)("div", {
                      className: q.activitySectionAssets,
                      children: [
                        (0, l.jsx)("img", {
                          alt:
                            null !== (t = n.large_text) && void 0 !== t
                              ? t
                              : "",
                          src: f(i, n.large_image, [Q.LARGE, Q.LARGE]),
                          className: o(q.largeImage, q.borderRadius0, {
                            [q.largeImageMask]: null != n.small_image,
                          }),
                        }),
                        c
                          ? null
                          : (0, l.jsx)(w.default, {
                              className: q.smallImage,
                              color: d.default.unsafe_rawColors.SPOTIFY.css,
                            }),
                      ],
                    })
                  : (0, l.jsx)("div", {}),
                (0, l.jsxs)("div", {
                  children: [null != a ? X(a) : null, null != s ? J(s) : null],
                }),
                (0, l.jsx)(W.default, {
                  minAvatarsShown: c ? 2 : 1,
                  partySize: r,
                  members: u,
                }),
              ],
            }),
          });
        }),
        (es.TwitchSection = e => {
          let t,
            { activity: a, user: s, getAssetImage: i, guildId: r } = e,
            { name: u, details: d, assets: f, application_id: E } = a;
          if (null != f && (0, p.default)(a)) {
            var _;
            t = (0, l.jsx)(x.default, {
              className: q.twitchSectionPreviewWrapper,
              aspectRatio: 16 / 9,
              children: (0, l.jsxs)(c.Clickable, {
                href: (0, C.default)(a),
                tag: "a",
                target: "_blank",
                children: [
                  (0, l.jsx)("img", {
                    alt: null !== (_ = f.large_text) && void 0 !== _ ? _ : "",
                    src: i(E, f.large_image, [900, 500]),
                    className: q.twitchSectionPreview,
                  }),
                  (0, l.jsx)("img", {
                    src: n("306910"),
                    className: q.twitchSectionPlayButton,
                    alt: "",
                  }),
                ],
              }),
            });
          }
          return (0, l.jsxs)(ee, {
            children: [
              (0, l.jsxs)("div", {
                className: o({
                  [q.twitchSectionSimple]: null == s,
                  [q.twitchSectionFull]: null != s,
                }),
                children: [
                  (0, l.jsx)("img", {
                    alt: "",
                    src: h.default.get(K.PlatformTypes.TWITCH).icon.lightSVG,
                    className: q.twitchSectionIcon,
                  }),
                  (0, l.jsxs)("div", {
                    children: [X(u), null != d ? J(d) : null],
                  }),
                  null != s
                    ? (0, l.jsx)(c.Avatar, {
                        src: s.getAvatarURL(r, 24),
                        "aria-label": s.username,
                        className: q.twitchSectionAvatar,
                        size: c.AvatarSizes.SIZE_24,
                      })
                    : null,
                ],
              }),
              t,
            ],
          });
        }),
        (es.ApplicationStreamingSection = e => {
          var t, n;
          let {
              activity: a,
              user: s,
              applicationStream: i,
              onPreviewClick: r,
              guildId: o,
            } = e,
            d = (0, u.useStateFromStores)([D.default], () =>
              D.default.getChannel(i.channelId)
            ),
            [f, E] = (0, v.useCanWatchStream)(d),
            h = (0, l.jsxs)(c.Clickable, {
              onClick: f ? r : void 0,
              className: q.applicationStreamingPreviewWrapper,
              children: [
                (0, l.jsx)(L.default, {
                  stream: i,
                  className: q.applicationStreamingPreviewSize,
                }),
                (0, l.jsx)("div", {
                  className: q.applicationStreamingHoverWrapper,
                  children: (0, l.jsx)("div", {
                    className: q.applicationStreamingHoverText,
                    children: (0, v.getStreamCTAString)(E),
                  }),
                }),
              ],
            }),
            _ =
              null !==
                (n =
                  null === (t = (0, T.default)(a, i)) || void 0 === t
                    ? void 0
                    : t.activityText) && void 0 !== n
                ? n
                : z.default.Messages.SHARING_SCREEN;
          return (0, l.jsxs)(ee, {
            children: [
              (0, l.jsxs)("div", {
                className: q.applicationStreamingSection,
                children: [
                  (0, l.jsx)(c.Avatar, {
                    size: c.AvatarSizes.SIZE_32,
                    src: s.getAvatarURL(o, 32),
                    "aria-label": s.username,
                    className: q.applicationStreamingAvatar,
                  }),
                  (0, l.jsxs)("div", {
                    children: [X(Y.default.getName(s)), J(_)],
                  }),
                  (0, l.jsx)(B.default, { size: B.default.Sizes.SMALL }),
                ],
              }),
              h,
            ],
          });
        }),
        (es.EmbeddedActivitySection = e => {
          let { activity: t, channel: n, guildId: a, participants: s } = e,
            r = (0, g.default)(),
            [o, d] = i.useState(null),
            f = t.application_id;
          i.useEffect(() => {
            null != f &&
              (0, H.fetchAssetIds)(f, ["embedded_background"]).then(e => {
                let [t] = e;
                return d(t);
              });
          }, [f]);
          let h = (0, u.useStateFromStoresArray)([y.default, P.default], () =>
              Array.from(s)
                .map(e =>
                  P.default.getId() === e ? null : y.default.getUser(e)
                )
                .filter(V.isNotNullish)
            ),
            C = (0, E.useAnalyticsContext)(),
            { analyticsLocations: I } = (0, N.default)();
          if (null == f) return null;
          let S = R.default.getApplication(f);
          if (null == S) return null;
          let m =
              null != t.created_at && t.created_at > 0
                ? { start: t.created_at }
                : void 0,
            p = (0, H.getAssetImage)(S.id, o, 300);
          return (0, l.jsxs)(ee, {
            children: [
              (0, l.jsxs)("div", {
                className: q.embeddedActivityTopRow,
                children: [
                  (0, l.jsx)(b.default, {
                    game: S,
                    size: b.default.Sizes.XSMALL,
                    className: q.embeddedActivityIcon,
                  }),
                  (0, l.jsx)("div", {
                    className: q.embeddedActivityName,
                    children: (0, l.jsx)(c.Text, {
                      variant: "text-sm/semibold",
                      children: S.name,
                    }),
                  }),
                  null != m
                    ? (0, l.jsx)("div", {
                        className: q.embeddedActivityTimeElapsed,
                        children: (0, l.jsx)(c.Text, {
                          color: "text-muted",
                          variant: "text-sm/normal",
                          children: (0, l.jsx)($, { timestamps: m }),
                        }),
                      })
                    : null,
                ],
              }),
              (0, l.jsxs)("div", {
                className: q.embeddedActivityPlayerContainer,
                children: [
                  null != p
                    ? (0, l.jsx)("img", {
                        src: p,
                        alt: S.name,
                        className: q.embeddedActivityImage,
                      })
                    : null,
                  (0, l.jsxs)("div", {
                    className: q.embeddedActivityImageOverlay,
                    children: [
                      (0, l.jsx)(M.Avatars, {
                        users: h,
                        guildId: a,
                        channelId: n.id,
                      }),
                      (0, l.jsx)("div", {
                        className: q.embeddedActivityJoinWrapper,
                        children: (0, l.jsx)(c.Button, {
                          size: c.Button.Sizes.SMALL,
                          onClick: e => {
                            e.stopPropagation(),
                              (0, _.default)({
                                applicationId: f,
                                currentEmbeddedApplication: r,
                                activityChannelId: n.id,
                                locationObject: C.location,
                                embeddedActivitiesManager: A.default,
                                analyticsLocations: I,
                              });
                          },
                          children: z.default.Messages.JOIN,
                        }),
                      }),
                    ],
                  }),
                ],
              }),
            ],
          });
        });
      var el = es;
    },
    698343: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return S;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("446674"),
        l = n("151426"),
        i = n("77078"),
        r = n("901582"),
        o = n("812204"),
        u = n("685665"),
        d = n("384997"),
        c = n("911574"),
        f = n("350522"),
        E = n("476765"),
        h = n("386133"),
        _ = n("49111"),
        C = n("782340"),
        I = n("754569");
      function S() {
        let { AnalyticsLocationProvider: e } = (0, u.default)(
            o.default.ACTIVE_NOW_COLUMN
          ),
          t = (0, s.useStateFromStores)([f.default], () =>
            f.default.hasConsented(_.Consents.PERSONALIZATION)
          ),
          n = t ? [] : [l.DismissibleContent.NOW_PLAYING_CONSENT_CARD],
          S = (0, E.useUID)();
        return (0, a.jsx)(e, {
          children: (0, a.jsx)(r.default, {
            section: _.AnalyticsSections.ACTIVE_NOW_COLUMN,
            children: (0, a.jsx)("aside", {
              className: I.container,
              "aria-labelledby": S,
              children: (0, a.jsxs)(i.Scroller, {
                className: I.scroller,
                children: [
                  (0, a.jsx)(i.Heading, {
                    variant: "heading-lg/semibold",
                    className: I.header,
                    id: S,
                    children: C.default.Messages.GAME_FEED_CURRENT_HEADER_TITLE,
                  }),
                  (0, a.jsx)(d.default, {
                    contentTypes: n,
                    children: e => {
                      let { visibleContent: t, markAsDismissed: n } = e;
                      if (t === l.DismissibleContent.NOW_PLAYING_CONSENT_CARD)
                        return (0, a.jsx)(c.default, {
                          className: I.consentCard,
                          markAsDismissed: n,
                        });
                    },
                  }),
                  (0, a.jsx)(h.default, {}),
                ],
              }),
            }),
          }),
        });
      }
    },
    36512: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return C;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("77078"),
        i = n("599110"),
        r = n("186888"),
        o = n("70118"),
        u = n("398953"),
        d = n("7259"),
        c = n("250529"),
        f = n("391950"),
        E = n("49111"),
        h = n("988268"),
        _ = n("782340");
      function C(e) {
        let { party: t, close: n, onSelect: C } = e,
          I = (0, u.default)(t),
          S = (0, f.default)(t),
          m = (0, c.default)(t),
          p = (0, d.default)(t),
          T = (0, r.default)(t),
          g = (0, o.default)(t);
        return (
          s.useEffect(() => {
            let e = t.currentActivities
              .filter(e => {
                var t, n;
                return (
                  (null === (t = e.game) || void 0 === t ? void 0 : t.name) !=
                    null &&
                  (null === (n = e.game) || void 0 === n ? void 0 : n.type) ===
                    h.ApplicationTypes.GAME
                );
              })
              .map(e => e.game.name);
            i.default.track(E.AnalyticEvents.OPEN_POPOUT, {
              type: "Now Playing Card Popout",
              games_detected: e,
            });
          }, []),
          (0, a.jsxs)(l.Menu, {
            navId: "now-playing-menu",
            onClose: n,
            "aria-label": _.default.Messages.GENERIC_ACTIONS_MENU_LABEL,
            onSelect: C,
            children: [
              I,
              (0, a.jsxs)(l.MenuGroup, { children: [S, m] }),
              (0, a.jsx)(l.MenuGroup, { children: p }),
              (0, a.jsx)(l.MenuGroup, { children: T }),
              g,
            ],
          })
        );
      }
    },
    444097: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
          NowPlayingUnknownMemberMenuItem: function () {
            return d;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("414456"),
        l = n.n(s),
        i = n("77078"),
        r = n("145079"),
        o = n("694603");
      function u(e) {
        let { user: t, status: n, isFocused: s, guildId: l } = e;
        return (0, a.jsxs)("div", {
          className: o.memberItem,
          children: [
            (0, a.jsx)(i.Avatar, {
              src: t.getAvatarURL(l, 24),
              className: o.avatar,
              "aria-label": t.username,
              size: i.AvatarSizes.SIZE_24,
              status: n,
              statusColor: s ? "currentColor" : void 0,
            }),
            (0, a.jsx)(r.default, { user: t, hideDiscriminator: !0 }),
          ],
        });
      }
      function d(e) {
        let { label: t } = e;
        return (0, a.jsxs)("div", {
          className: o.memberItem,
          children: [
            (0, a.jsx)("div", { className: l(o.avatar, o.unknown) }),
            (0, a.jsx)("div", { children: t }),
          ],
        });
      }
    },
    186888: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return O;
          },
        }),
        n("424973"),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("446674"),
        i = n("77078"),
        r = n("260365"),
        o = n("987317"),
        u = n("79112"),
        d = n("376556"),
        c = n("871388"),
        f = n("152311"),
        E = n("36539"),
        h = n("161454"),
        _ = n("860285"),
        C = n("47319"),
        I = n("86878"),
        S = n("686470"),
        m = n("535974"),
        p = n("599110"),
        T = n("602043"),
        g = n("780009"),
        A = n("49111"),
        N = n("782340");
      let R = d.default.get(A.PlatformTypes.XBOX).name;
      function O(e) {
        let { currentActivities: t } = e,
          n = t.length > 1,
          O = (function (e) {
            let { currentActivities: t } = e,
              n = (0, l.useStateFromStores)([C.default], () =>
                C.default
                  .getAccounts()
                  .some(
                    e => e.type === d.default.get(A.PlatformTypes.XBOX).type
                  )
              ),
              s = t.some(e => {
                let { activity: t } = e;
                return (0, E.default)(t);
              });
            return n || !s
              ? null
              : (0, a.jsx)(i.MenuItem, {
                  id: "xbox-connect",
                  action: () =>
                    u.default.open(A.UserSettingsSections.CONNECTIONS),
                  label:
                    N.default.Messages.USER_ACTIVITY_CONNECT_PLATFORM.format({
                      platform: R,
                    }),
                });
          })(e),
          v = (function (e) {
            let { currentActivities: t } = e,
              n = s.useContext(p.AnalyticsContext);
            return (0, l.useStateFromStoresArray)(
              [h.default, S.default, _.default, m.default, I.default],
              () =>
                t
                  .filter(e => !(0, f.default)(e.activity))
                  .map(e => {
                    let { activity: t, game: a } = e,
                      s = S.default.getActiveLibraryApplication(a.id);
                    return {
                      ...e,
                      libraryApplication: s,
                      canJoin:
                        null != t &&
                        (0, c.default)(t, A.ActivityFlags.JOIN) &&
                        t.type === A.ActivityTypes.PLAYING,
                      canPlay: (0, T.isLaunchable)({
                        LibraryApplicationStore: S.default,
                        LaunchableGameStore: _.default,
                        DispatchApplicationStore: m.default,
                        ConnectedAppsStore: I.default,
                        applicationId: a.id,
                        branchId: null != s ? s.branchId : null,
                      }),
                      isLaunching: _.default.launchingGames.has(a.id),
                      isRunning: h.default
                        .getRunningVerifiedApplicationIds()
                        .includes(a.id),
                      location: n.location,
                    };
                  }),
              [n.location, t]
            );
          })(e),
          L = [];
        for (let e of v) {
          let { activity: t } = e;
          null != t &&
            null != t.type &&
            L.push(
              (function (e, t) {
                let { canJoin: n, activity: s, activityUser: l } = e;
                if (!n || null == s) return null;
                async function u() {
                  if (null == s) return;
                  let e = await r.default.sendActivityInviteUser({
                    type: A.ActivityActionTypes.JOIN_REQUEST,
                    userId: l.id,
                    activity: s,
                    location: A.AnalyticsLocations.PROFILE_POPOUT,
                  });
                  null != e && o.default.selectPrivateChannel(e.id);
                }
                return (0, a.jsx)(i.MenuItem, {
                  id: "join-".concat(s.session_id),
                  label: t
                    ? N.default.Messages.USER_ACTIVITY_ACTION_ASK_TO_JOIN_USER.format(
                        { name: l.toString() }
                      )
                    : N.default.Messages.USER_ACTIVITY_ACTION_ASK_TO_JOIN,
                  action: u,
                });
              })(e, n),
              (function (e, t) {
                let {
                  activity: n,
                  game: s,
                  libraryApplication: l,
                  location: r,
                  canPlay: o,
                  isRunning: u,
                  isLaunching: d,
                } = e;
                if (!o || null == n) return null;
                let c = u
                  ? N.default.Messages.ACTIVITY_FEED_POPOUT_APPLICATION_RUNNING.format(
                      { name: s.name }
                    )
                  : d
                    ? N.default.Messages.ACTIVITY_FEED_POPOUT_APPLICATION_LAUNCHING.format(
                        { name: s.name }
                      )
                    : void 0;
                return (0, a.jsx)(i.MenuItem, {
                  id: "play-".concat(n.session_id),
                  action: function () {
                    (0, g.playApplication)(s.id, l, {
                      analyticsParams: {
                        location: {
                          ...r,
                          object: A.AnalyticsObjects.LIST_ITEM,
                        },
                      },
                    });
                  },
                  label: t
                    ? N.default.Messages.APPLICATION_CONTEXT_MENU_LAUNCH_APPLICATION_NAME.format(
                        { name: s.name }
                      )
                    : N.default.Messages.APPLICATION_CONTEXT_MENU_LAUNCH,
                  subtext: c,
                });
              })(e, n)
            );
        }
        return [O, ...L];
      }
    },
    70118: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        }),
        n("424973"),
        n("222007"),
        n("881410");
      var a = n("37983"),
        s = n("884691"),
        l = n("77078"),
        i = n("401642"),
        r = n("444097"),
        o = n("49111"),
        u = n("782340");
      function d(e, t, n, s, d) {
        let c = [];
        for (let { user: t, status: n } of e)
          c.push(
            (0, a.jsx)(l.MenuItem, {
              id: t.id,
              keepItemStyles: !0,
              render: e =>
                (0, a.jsx)(r.default, { ...e, user: t, status: n, guildId: d }),
              action: () =>
                (0, i.openUserProfileModal)({
                  userId: t.id,
                  analyticsLocation: {
                    section:
                      o.AnalyticsSections
                        .ACTIVITY_FEED_NOW_PLAYING_CONTEXT_MENU,
                  },
                }),
            })
          );
        for (let e of t)
          c.push(
            (0, a.jsx)(l.MenuItem, {
              id: e.id,
              keepItemStyles: !0,
              render: t => (0, a.jsx)(r.default, { ...t, user: e, guildId: d }),
              action: () =>
                (0, i.openUserProfileModal)({
                  userId: e.id,
                  analyticsLocation: {
                    section:
                      o.AnalyticsSections
                        .ACTIVITY_FEED_NOW_PLAYING_CONTEXT_MENU,
                  },
                }),
            })
          );
        let f = n - c.length;
        return (
          f > 0 &&
            c.push(
              (0, a.jsx)(l.MenuItem, {
                id: "unknown-members-".concat(
                  null == s ? void 0 : s.session_id
                ),
                render: e =>
                  (0, a.jsx)(r.NowPlayingUnknownMemberMenuItem, {
                    ...e,
                    label: u.default.Messages.GAME_FEED_UNKNOWN_PLAYERS.format({
                      count: f,
                    }),
                  }),
              })
            ),
          c
        );
      }
      function c(e) {
        let {
            priorityMembers: t,
            partiedMembers: n,
            currentActivities: i,
            guildContext: r,
          } = e,
          o = new Set(
            t.map(e => {
              let { user: t } = e;
              return t.id;
            })
          ),
          c = n.filter(e => !o.has(e.id)),
          f = s.useMemo(() => {
            let e = i
              .flatMap(e => {
                let { playingMembers: t } = e;
                return t;
              })
              .map(e => e.id);
            return n.filter(t => !e.includes(t.id));
          }, [n, i]);
        if (i.length <= 1 && 0 === f.length) {
          var E, h;
          return (0, a.jsx)(l.MenuGroup, {
            label:
              n.length > 1
                ? u.default.Messages.ACTIVITY_FEED_SINGLE_MEMBER_LIST_HEADER.format(
                    { memberCount: n.length }
                  )
                : void 0,
            children: d(
              t,
              c,
              n.length,
              null !==
                (h =
                  null === (E = i[0]) || void 0 === E ? void 0 : E.activity) &&
                void 0 !== h
                ? h
                : void 0,
              null == r ? void 0 : r.id
            ),
          });
        }
        let _ = i.map((e, n) => {
            let { playingMembers: s, game: i, activity: u } = e,
              c = new Set(s.map(e => e.id));
            return (0, a.jsx)(
              l.MenuGroup,
              {
                label: "".concat(i.name, " - ").concat(s.length),
                children: d(
                  t.filter(e => {
                    let { user: t } = e;
                    return c.has(t.id);
                  }),
                  s.filter(e => !o.has(e.id)),
                  s.length,
                  null != u ? u : void 0,
                  null == r ? void 0 : r.id
                ),
              },
              n
            );
          }),
          C = f.map(e => e.id),
          I = (0, a.jsx)(l.MenuGroup, {
            label: ""
              .concat(
                u.default.Messages.ACTIVITY_FEED_OTHER_MEMBER_LIST_HEADER,
                " - "
              )
              .concat(f.length),
            children: d(
              t.filter(e => {
                let { user: t } = e;
                return C.includes(t.id);
              }),
              f.filter(e => !o.has(e.id)),
              f.length,
              void 0,
              null == r ? void 0 : r.id
            ),
          });
        return [..._, I];
      }
    },
    398953: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("77078"),
        i = n("450911"),
        r = n("716241"),
        o = n("456353"),
        u = n("599110"),
        d = n("49111"),
        c = n("782340");
      function f(e) {
        let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
          { priorityMembers: n, partiedMembers: f } = e,
          E = s.useContext(u.AnalyticsContext),
          h = n.map(e => {
            let { user: t } = e;
            return t.id;
          }),
          _ = 1 === f.length && 1 === n.length,
          C = n.length - f.length > 0;
        return (_ || t) && !C && 0 !== h.length
          ? (0, a.jsx)(l.MenuItem, {
              id: "message",
              action: function () {
                i.default
                  .openPrivateChannel(h)
                  .then(t =>
                    r.default.trackWithMetadata(
                      d.AnalyticEvents.ACTIVITY_FEED_DM_VISITED,
                      {
                        source: {
                          ...E.location,
                          object: d.AnalyticsObjects.LIST_ITEM,
                        },
                        channel_id: t,
                        recipient_id: "string" == typeof h ? h : h[0],
                        af_recently_played: !1,
                        ...(0, o.getPartyMetadata)(e),
                      }
                    )
                  );
              },
              label: c.default.Messages.SEND_DM,
            })
          : null;
      }
    },
    7259: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
      var a = n("2129");
      function s(e) {
        let { currentActivities: t, isSpotifyActivity: n } = e,
          s = t[0],
          l = (0, a.default)(
            null == s ? void 0 : s.activity,
            null == s ? void 0 : s.activityUser
          );
        return n ? l : null;
      }
    },
    250529: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("77078"),
        l = n("987317"),
        i = n("990766"),
        r = n("158998"),
        o = n("782340");
      function u(e) {
        let { applicationStreams: t } = e;
        return t.map(e => {
          let { stream: t, streamUser: n } = e;
          return (0, a.jsx)(
            s.MenuItem,
            {
              id: "spectate-".concat(t.ownerId),
              action: () => {
                l.default.selectVoiceChannel(t.channelId),
                  (0, i.watchStreamAndTransitionToStream)(t);
              },
              label: o.default.Messages.WATCH_USER_STREAM.format({
                streamerName: r.default.getName(n),
              }),
            },
            "spectate-".concat(t.ownerId)
          );
        });
      }
    },
    391950: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("446674"),
        i = n("77078"),
        r = n("987317"),
        o = n("716241"),
        u = n("239380"),
        d = n("957255"),
        c = n("456353"),
        f = n("599110"),
        E = n("49111"),
        h = n("782340");
      function _(e) {
        let t = s.useContext(f.AnalyticsContext),
          n = e.voiceChannels[0],
          _ = (0, l.useStateFromStores)(
            [d.default],
            () => null != n && d.default.can(E.Permissions.CONNECT, n.channel)
          );
        return null == n
          ? null
          : [
              (0, a.jsx)(
                i.MenuItem,
                {
                  id: "join-voice",
                  action: function () {
                    (0, u.transitionToGuild)(n.guild.id),
                      r.default.selectVoiceChannel(n.channel.id),
                      o.default.trackWithMetadata(
                        E.AnalyticEvents.ACTIVITY_FEED_VOICE_CHANNEL_VISITED,
                        {
                          source: {
                            ...t.location,
                            object: E.AnalyticsObjects.LIST_ITEM,
                          },
                          guild_id: n.guild.id,
                          channel_id: n.channel.id,
                          ...(0, c.getPartyMetadata)(e),
                        }
                      );
                  },
                  label:
                    h.default.Messages
                      .ACTIVITY_FEED_NOW_PLAYING_ACTION_JOIN_CHANNEL,
                  disabled: !_,
                },
                "join-voice"
              ),
              (0, a.jsx)(
                i.MenuItem,
                {
                  id: "goto-server",
                  action: function () {
                    (0, u.transitionToGuild)(n.guild.id),
                      o.default.trackWithMetadata(
                        E.AnalyticEvents.ACTIVITY_FEED_GUILD_VISITED,
                        {
                          source: {
                            ...t.location,
                            object: E.AnalyticsObjects.LIST_ITEM,
                          },
                          guild_id: n.guild.id,
                          af_recently_played: !1,
                          ...(0, c.getPartyMetadata)(e),
                        }
                      );
                  },
                  label:
                    h.default.Messages
                      .ACTIVITY_FEED_NOW_PLAYING_ACTION_GO_TO_SERVER,
                },
                "goto-server"
              ),
            ];
      }
    },
    638441: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("450911"),
        i = n("272030"),
        r = n("86621"),
        o = n("305961");
      function u(e) {
        return (0, r.default)(
          class extends s.Component {
            render() {
              return (0, a.jsx)(e, {
                ...this.props,
                onMessageUser: this.handleMessageUser,
                onUserContextMenu: this.handleUserContextMenu,
                onGuildContextMenu: this.handleGuildContextMenu,
                onChannelContextMenu: this.handleChannelContextMenu,
              });
            }
            handleMessageUser(e, t) {
              return l.default.openPrivateChannel(t.id);
            }
            handleUserContextMenu(e, t, s) {
              (0, i.openContextMenuLazy)(
                e,
                async () => {
                  let { default: e } = await n
                    .el("406784")
                    .then(n.bind(n, "406784"));
                  return n => (0, a.jsx)(e, { ...n, user: t });
                },
                { onClose: s }
              );
            }
            handleGuildContextMenu(e, t) {
              (0, i.openContextMenuLazy)(e, async () => {
                let { default: e } = await n
                  .el("374705")
                  .then(n.bind(n, "374705"));
                return n => (0, a.jsx)(e, { ...n, guild: t });
              });
            }
            handleChannelContextMenu(e, t) {
              let s = o.default.getGuild(t.getGuildId());
              if (null == s) return null;
              (0, i.openContextMenuLazy)(e, async () => {
                let { default: e } = await n
                  .el("754938")
                  .then(n.bind(n, "754938"));
                return n => (0, a.jsx)(e, { ...n, channel: t, guild: s });
              });
            }
          }
        );
      }
    },
    165926: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          setNewUser: function () {
            return s;
          },
          setNewUserFlowCompleted: function () {
            return l;
          },
        });
      var a = n("913144");
      function s(e) {
        a.default.wait(() =>
          a.default.dispatch({ type: "NUF_NEW_USER", newUserType: e })
        );
      }
      function l() {
        a.default.wait(() => a.default.dispatch({ type: "NUF_COMPLETE" }));
      }
    },
    56235: function (e, t, n) {
      "use strict";
      var a, s;
      n.r(t),
        n.d(t, {
          NewUserTypes: function () {
            return a;
          },
        }),
        ((s = a || (a = {}))[(s.MARKETING_UNCLAIMED = 0)] =
          "MARKETING_UNCLAIMED"),
        (s[(s.INVITE_UNCLAIMED = 1)] = "INVITE_UNCLAIMED"),
        (s[(s.ORGANIC_REGISTERED = 2)] = "ORGANIC_REGISTERED"),
        (s[(s.ORGANIC_REGISTERED_GUILD_TEMPLATE = 3)] =
          "ORGANIC_REGISTERED_GUILD_TEMPLATE");
    },
    527441: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("446674"),
        s = n("913144");
      let l = null;
      class i extends a.default.PersistedStore {
        initialize(e) {
          var t;
          l =
            null !== (t = null == e ? void 0 : e.type) && void 0 !== t
              ? t
              : null;
        }
        getType() {
          return l;
        }
        getState() {
          return { type: l };
        }
      }
      (i.displayName = "NewUserStore"), (i.persistKey = "nuf");
      var r = new i(s.default, {
        NUF_NEW_USER: function (e) {
          let { newUserType: t } = e;
          l = t;
        },
        NUF_COMPLETE: function () {
          l = null;
        },
      });
    },
    218971: function (e, t, n) {
      "use strict";
      var a, s;
      n.r(t),
        n.d(t, {
          NUFSlides: function () {
            return a;
          },
        }),
        ((s = a || (a = {})).AGE_GATE = "age-gate"),
        (s.CHOOSE_TEMPLATE = "choose-template"),
        (s.CUSTOMIZE_GUILD = "customize-server"),
        (s.CHANNEL_PROMPT = "channel-prompt"),
        (s.JOIN_GUILD = "join-server"),
        (s.CREATION_INTENT = "creation-intent"),
        (s.COMPLETE = "complete");
    },
    946522: function (e, t, n) {
      "use strict";
      let a;
      n.r(t),
        n.d(t, {
          default: function () {
            return P;
          },
        }),
        n("222007");
      var s = n("37983");
      n("884691");
      var l = n("77078"),
        i = n("913144"),
        r = n("316272"),
        o = n("19009"),
        u = n("774146"),
        d = n("233322"),
        c = n("894887"),
        f = n("42963"),
        E = n("223170"),
        h = n("59811"),
        _ = n("341542"),
        C = n("305961"),
        I = n("162771"),
        S = n("697218"),
        m = n("449008"),
        p = n("773336"),
        T = n("165926"),
        g = n("527441"),
        A = n("56235"),
        N = n("218971"),
        R = n("49111"),
        O = n("492397"),
        v = n("149806");
      function L() {
        null != a && (0, l.closeModal)(a);
      }
      class M extends r.default {
        _initialize() {
          i.default.subscribe("CONNECTION_OPEN", this.handleConnectionOpen),
            i.default.subscribe("LOGOUT", L);
        }
        _terminate() {
          i.default.unsubscribe("CONNECTION_OPEN", this.handleConnectionOpen),
            i.default.unsubscribe("LOGOUT", L);
        }
        handleConnectionOpen() {
          var e;
          let t,
            i = g.default.getType();
          if (null == i) return;
          switch (i) {
            case A.NewUserTypes.INVITE_UNCLAIMED:
              f.default.flowStart(
                v.FlowType.INVITE,
                v.RegistrationSteps.NUF_STARTED
              );
              break;
            case A.NewUserTypes.ORGANIC_REGISTERED:
              f.default.flowStart(
                v.FlowType.ORGANIC,
                v.RegistrationSteps.NUF_STARTED
              );
              break;
            case A.NewUserTypes.MARKETING_UNCLAIMED:
              f.default.flowStart(
                v.FlowType.ORGANIC_MARKETING,
                v.RegistrationSteps.NUF_STARTED
              );
          }
          let r = !1,
            L = I.default.getGuildId();
          if (i === A.NewUserTypes.INVITE_UNCLAIMED) {
            let e = C.default.getGuild(L);
            (null == e ? void 0 : e.hasVerificationGate()) &&
              ((r = !0), (0, E.fetchWelcomeScreen)(e.id));
          }
          let M = () => 0 === _.default.totalGuilds && !p.isPlatformEmbedded,
            P = o.userNeedsAgeGate();
          (e = [
            {
              key: "Unified NUF Modal",
              open: async function e(e) {
                let t = e => {
                  switch (e) {
                    case N.NUFSlides.AGE_GATE:
                      f.default.flowStep(
                        v.FlowType.ANY,
                        v.RegistrationSteps.AGE_GATE
                      );
                      break;
                    case N.NUFSlides.CHOOSE_TEMPLATE:
                      f.default.flowStep(
                        v.FlowType.ANY,
                        v.CreateGuildSteps.GUILD_TEMPLATES
                      );
                      break;
                    case N.NUFSlides.CUSTOMIZE_GUILD:
                      f.default.flowStep(
                        v.FlowType.ANY,
                        v.CreateGuildSteps.GUILD_CREATE
                      );
                      break;
                    case N.NUFSlides.CHANNEL_PROMPT:
                      f.default.flowStep(
                        v.FlowType.ANY,
                        v.CreateGuildSteps.CHANNEL_PROMPT
                      );
                      break;
                    case N.NUFSlides.JOIN_GUILD:
                      f.default.flowStep(
                        v.FlowType.ANY,
                        v.CreateGuildSteps.JOIN_GUILD
                      );
                      break;
                    case N.NUFSlides.CREATION_INTENT:
                      f.default.flowStep(
                        v.FlowType.ANY,
                        v.CreateGuildSteps.CREATION_INTENT
                      );
                      break;
                    case N.NUFSlides.COMPLETE:
                      f.default.flowStep(
                        v.FlowType.ANY,
                        v.CreateGuildSteps.SUCCESS
                      );
                      break;
                    case null:
                      break;
                    default:
                      m.assertNever(e);
                  }
                };
                a = await (0, l.openModalLazy)(
                  async () => {
                    let { default: e } = await n
                      .el("439431")
                      .then(n.bind(n, "439431"));
                    return n => (0, s.jsx)(e, { ...n, onSlideChange: t });
                  },
                  { onCloseRequest: R.NOOP, onCloseCallback: e, modalKey: a }
                );
              },
              predicate: () => M() && !O.CONFERENCE_MODE_ENABLED,
            },
            {
              key: "New User Age Gate",
              open: u.openNewUserAgeGateModal,
              predicate: () => P && !M() && !O.CONFERENCE_MODE_ENABLED,
            },
            {
              key: "Claim Account Modal",
              open: e => u.openClaimAccountModal(p.isPlatformEmbedded, e),
              predicate: () => {
                var e;
                return (
                  !r &&
                  null != S.default.getCurrentUser() &&
                  !(null === (e = S.default.getCurrentUser()) || void 0 === e
                    ? void 0
                    : e.isClaimed()) &&
                  !O.CONFERENCE_MODE_ENABLED &&
                  !(0, c.isMidjourneyOnboardingFlow)("new_user_manager")
                );
              },
            },
            {
              key: "Verification Gate with Claim Account",
              open: e =>
                (0, d.openMemberVerificationModal)(L, null != e ? e : void 0),
              predicate: () => {
                var e;
                return (
                  r &&
                  !(null === (e = S.default.getCurrentUser()) || void 0 === e
                    ? void 0
                    : e.isClaimed()) &&
                  !O.CONFERENCE_MODE_ENABLED
                );
              },
            },
            {
              key: "Guild Welcome Modal",
              open: e =>
                (0, l.openModalLazy)(
                  async () => {
                    let { default: e } = await n
                      .el("900257")
                      .then(n.bind(n, "900257"));
                    return t => (0, s.jsx)(e, { ...t, guildId: L });
                  },
                  { onCloseCallback: e }
                ),
              predicate: () =>
                null != L &&
                null != h.default.get(L) &&
                h.default.get(L) !== h.NO_WELCOME_SCREEN,
            },
          ]),
            (t = () => {
              T.setNewUserFlowCompleted(),
                f.default.flowStep(
                  v.FlowType.ANY,
                  v.RegistrationSteps.NUF_COMPLETE,
                  !0
                );
            }),
            [...e].reverse().forEach(e => {
              let n = t;
              t = () => {
                e.predicate() ? e.open(n) : n();
              };
            }),
            t();
        }
      }
      var P = new M();
    },
    710768: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
      var a = { isScreenLandscape: () => null };
    },
    755729: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return eZ;
          },
        }),
        n("222007"),
        n("424973");
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("446674"),
        o = n("151426"),
        u = n("862337"),
        d = n("966900"),
        c = n("358917"),
        f = n("838048"),
        E = n("359902"),
        h = n("696675"),
        _ = n("780624"),
        C = n("696526"),
        I = n("197801"),
        S = n("582601"),
        m = n("77078"),
        p = n("850068"),
        T = n("272030"),
        g = n("79112"),
        A = n("146350"),
        N = n("901582"),
        R = n("415929"),
        O = n("687531"),
        v = n("875212"),
        L = n("899633"),
        M = n("606292"),
        P = n("489740"),
        D = n("355025"),
        y = n("842272"),
        x = n("14124"),
        b = n("959646"),
        U = n("338677"),
        G = n("20606"),
        j = n("225772"),
        w = n("775377"),
        k = n("10641"),
        F = n("384997"),
        B = n("243632"),
        H = n("180273"),
        V = n("579565"),
        Y = n("473503"),
        W = n("257426"),
        K = n("76393"),
        z = n("957833"),
        q = n("397009"),
        Q = n("337328"),
        Z = n("167209"),
        X = n("691818"),
        J = n("106457"),
        $ = n("507917"),
        ee = n("837944"),
        et = n("374089"),
        en = n("189726"),
        ea = n("666647"),
        es = n("286914"),
        el = n("235004"),
        ei = n("696770"),
        er = n("506885"),
        eo = n("250659"),
        eu = n("365114"),
        ed = n("933422"),
        ec = n("924658"),
        ef = n("244390"),
        eE = n("271938"),
        eh = n("42203"),
        e_ = n("778588"),
        eC = n("42887"),
        eI = n("945956"),
        eS = n("101125"),
        em = n("102985"),
        ep = n("697218"),
        eT = n("521012"),
        eg = n("145131"),
        eA = n("398288"),
        eN = n("837899"),
        eR = n("425190"),
        eO = n("474571"),
        ev = n("272339"),
        eL = n("200639"),
        eM = n("925877"),
        eP = n("849467"),
        eD = n("97347"),
        ey = n("962541"),
        ex = n("762489"),
        eb = n("329858"),
        eU = n("956089"),
        eG = n("599110"),
        ej = n("315102"),
        ew = n("306160"),
        ek = n("718517"),
        eF = n("197881"),
        eB = n("158998"),
        eH = n("50885"),
        eV = n("49111"),
        eY = n("411511"),
        eW = n("782340"),
        eK = n("895493");
      let ez = eH.default.getEnableHardwareAcceleration()
          ? m.AnimatedAvatar
          : m.Avatar,
        eq = 30 * ek.default.Millis.DAY;
      class eQ extends s.PureComponent {
        get isCopiedStreakGodlike() {
          let { copiedStreak: e } = this.state;
          return e >= 10;
        }
        componentDidUpdate(e) {
          let { speakingWhileMuted: t, occluded: n } = e,
            { speakingWhileMuted: a, occluded: s } = this.props;
          s !== n && this.handleOccludedChanged(),
            a !== t && this.handleSpeakingWhileMutedChanged();
        }
        componentWillUnmount() {
          this.copiedTimeout.stop(),
            this.copiedDecayTimeout.stop(),
            this.speakingWhileMutedTooltipTimeout.stop();
        }
        renderCopiedSuccess() {
          let { copiedStreak: e } = this.state,
            t = [
              eW.default.Messages.COPY_SUCCESS_1,
              eW.default.Messages.COPY_SUCCESS_2,
              eW.default.Messages.COPY_SUCCESS_3,
              eW.default.Messages.COPY_SUCCESS_4,
              eW.default.Messages.COPY_SUCCESS_5,
              eW.default.Messages.COPY_SUCCESS_6,
              eW.default.Messages.COPY_SUCCESS_7,
              eW.default.Messages.COPY_SUCCESS_8,
              eW.default.Messages.COPY_SUCCESS_9,
              eW.default.Messages.COPY_SUCCESS_10,
              eW.default.Messages.COPY_SUCCESS_11,
            ],
            n = Math.min(Math.max(0, e - 1), t.length - 1);
          return (0, a.jsx)(m.Shaker, {
            isShaking: this.isCopiedStreakGodlike,
            children: t[n],
          });
        }
        renderNameTag() {
          let e;
          let { hovered: t } = this.state,
            {
              customStatusActivity: n,
              userTag: s,
              currentUser: l,
              status: i,
            } = this.props;
          if (null == l) return null;
          let r = eB.default.getName(l),
            o = null != i && i !== eV.StatusTypes.UNKNOWN,
            u = null != n;
          return (
            (u || (o && l.isPomelo())) &&
              (e = (0, a.jsx)(eA.default, {
                hoverText: s,
                forceHover: t,
                children: u
                  ? (0, a.jsx)(w.default, {
                      activity: n,
                      emojiClassName: eK.emoji,
                      className: eK.customStatus,
                    })
                  : eB.default.humanizeStatus(i),
              })),
            (0, a.jsxs)(a.Fragment, {
              children: [
                (0, a.jsx)("div", {
                  className: eK.panelTitleContainer,
                  children: (0, a.jsx)(eb.default, { children: r }),
                }),
                (0, a.jsx)("div", {
                  className: eK.panelSubtextContainer,
                  children: (0, a.jsx)(ex.default, {
                    children: null != e ? e : s,
                  }),
                }),
              ],
            })
          );
        }
        renderCopiableNameTag() {
          let { currentUser: e } = this.props,
            { shouldShowNametagTooltip: t, shouldShowCopiedFeedback: n } =
              this.state;
          if (null == e) return null;
          let s = null,
            l = m.TooltipColors.PRIMARY;
          return (
            ew.SUPPORTS_COPY &&
              ((s = eW.default.Messages.ACCOUNT_CLICK_TO_COPY),
              n &&
                ((s = this.renderCopiedSuccess()),
                (l = this.isCopiedStreakGodlike
                  ? m.TooltipColors.RED
                  : m.TooltipColors.GREEN))),
            (0, a.jsx)(m.Tooltip, {
              text: s,
              forceOpen: t,
              "aria-label":
                !!ew.SUPPORTS_COPY && eW.default.Messages.ACCOUNT_CLICK_TO_COPY,
              color: l,
              delay: 500,
              onAnimationRest: (e, a) => {
                n &&
                  !t &&
                  a.phase === eV.SpringTransitionPhases.LEAVE &&
                  this.setState({ shouldShowCopiedFeedback: !1 });
              },
              children: e => {
                let { onClick: t, onMouseEnter: s, ...l } = e;
                return (0, a.jsx)(m.Clickable, {
                  ...l,
                  onMouseEnter: () => {
                    n
                      ? (this.copiedTimeout.stop(),
                        this.setState({ shouldShowNametagTooltip: !1 }, s))
                      : null == s || s();
                  },
                  onClick: () => {
                    null == t || t(), this.handleCopyTag();
                  },
                  className: i(eK.nameTag, { [eK.canCopy]: ew.SUPPORTS_COPY }),
                  children: this.renderNameTag(),
                });
              },
            })
          );
        }
        renderAvatarWithPopout() {
          let {
            speaking: e,
            streaming: t,
            currentUser: n,
            status: s,
            showTagAsButton: l,
            showTaglessAccountPanel: r,
          } = this.props;
          if (null == n) return null;
          let o = (0, ej.getAvatarDecorationURL)({
            avatarDecoration: n.avatarDecoration,
            size: (0, M.getDecorationSizeForAvatarSize)(m.AvatarSizes.SIZE_32),
          });
          return (0, a.jsx)(N.default, {
            object: eV.AnalyticsObjects.AVATAR,
            children: (0, a.jsx)(m.Popout, {
              renderPopout: this.renderStatusPickerPopout,
              position: "top",
              align: "left",
              animation: m.Popout.Animation.FADE,
              spacing: 14,
              fixed: !0,
              preload: () =>
                (0, er.default)(
                  n.id,
                  null == n ? void 0 : n.getAvatarURL(null, 80)
                ),
              children: (u, d) =>
                (0, a.jsxs)(m.Clickable, {
                  ...u,
                  "aria-label": eW.default.Messages.SET_STATUS,
                  className: i(eK.avatarWrapper, {
                    [eK.withTagAsButton]: l,
                    [eK.withTagless]: r,
                  }),
                  children: [
                    (0, a.jsx)(ez, {
                      size: m.AvatarSizes.SIZE_32,
                      src: n.getAvatarURL(void 0, 32, !1),
                      avatarDecoration: o,
                      "aria-label": n.username,
                      status: t ? eV.StatusTypes.STREAMING : s,
                      isSpeaking: e,
                      className: eK.avatar,
                    }),
                    l || r
                      ? (0, a.jsx)("div", {
                          className: i(eK.nameTag, {
                            [eK.canCopy]: ew.SUPPORTS_COPY,
                          }),
                          children: r
                            ? (0, a.jsx)(ey.default, {
                                tooltipText: null,
                                icon: d.isShown ? eN.default : eR.default,
                                role: "switch",
                                "aria-label": eW.default.Messages.SET_STATUS,
                              })
                            : this.renderNameTag(),
                        })
                      : null,
                  ],
                }),
            }),
          });
        }
        renderNameZone() {
          let { currentUser: e, dismissibleContents: t } = this.props,
            { showTagAsButton: n, showTaglessAccountPanel: s } = this.props;
          return null == e
            ? null
            : (0, a.jsxs)(a.Fragment, {
                children: [
                  (0, a.jsx)(F.default, {
                    contentTypes: t.avatar,
                    children: e => {
                      let { visibleContent: t } = e;
                      return this.renderAvatarWithPopout();
                    },
                  }),
                  n || s ? null : this.renderCopiableNameTag(),
                ],
              });
        }
        render() {
          let {
              currentUser: e,
              selfDeaf: t,
              selfMute: n,
              awaitingRemote: s,
              serverMute: l,
              serverDeaf: r,
              suppress: u,
              dismissibleContents: d,
            } = this.props,
            { shouldShowSpeakingWhileMutedTooltip: c } = this.state;
          if (null == e) return null;
          let f = n || u || l,
            E = t || r;
          return (0, a.jsxs)("div", {
            className: eK.container,
            onMouseEnter: this.handleMouseEnter,
            onMouseLeave: this.handleMouseLeave,
            children: [
              this.renderNameZone(),
              (0, a.jsxs)(eg.default, {
                grow: 0,
                children: [
                  (0, a.jsx)(ey.default, {
                    tooltipText: c
                      ? eW.default.Messages.ACCOUNT_SPEAKING_WHILE_MUTED
                      : (0, x.default)(n, l, u, s),
                    tooltipColor: c ? m.TooltipColors.GREEN : void 0,
                    tooltipForceOpen: c || void 0,
                    onMouseEnter: this.handleMouseEnterMute,
                    onMouseLeave: this.handleMouseLeaveMute,
                    icon: (0, a.jsx)(eJ, {
                      selfMute: n,
                      serverMute: l,
                      suppress: u,
                    }),
                    iconForeground: f ? eK.strikethrough : null,
                    onClick: this.handleToggleSelfMute,
                    innerClassName: i({ [eK.redIcon]: l || u }),
                    onContextMenu: this.handleInputAudioContextMenu,
                    role: "switch",
                    "aria-label": eW.default.Messages.MUTE,
                    "aria-checked": f,
                    disabled: s,
                  }),
                  (0, a.jsx)(ey.default, {
                    tooltipText: (0, y.default)(t, r, s),
                    icon: (0, a.jsx)(e$, { selfDeaf: t, serverDeaf: r }),
                    onClick: this.handleToggleSelfDeaf,
                    onContextMenu: this.handleOutputAudioContextMenu,
                    innerClassName: i({ [eK.redIcon]: r }),
                    iconForeground: E ? eK.strikethrough : null,
                    role: "switch",
                    "aria-label": eW.default.Messages.DEAFEN,
                    "aria-checked": E,
                    disabled: s,
                  }),
                  (0, a.jsx)(F.default, {
                    contentTypes: d.settings,
                    children: e => {
                      let { visibleContent: t, markAsDismissed: n } = e;
                      switch (t) {
                        case o.DismissibleContent
                          .PROFILE_THEMES_FEATURE_EDUCATION_TOOLTIP_TAKE_2:
                          return (0, a.jsx)(m.Popout, {
                            position: "top",
                            align: "center",
                            shouldShow: !0,
                            renderPopout: () => (0, a.jsx)($.default, {}),
                            children: this.renderSettingsGear,
                          });
                        case o.DismissibleContent.QUEST_2_ENROLLMENT_TOOLTIP:
                          return (0, a.jsx)(m.Popout, {
                            position: "top",
                            align: "center",
                            shouldShow: !0,
                            renderPopout: () =>
                              (0, a.jsx)(Y.default, {
                                markAsDismissed: n,
                                partnerGame: eY.PartnerGame.FORTNITE,
                              }),
                            children: this.renderSettingsGear,
                          });
                        case o.DismissibleContent.QUEST_2_COMPLETION_TOOLTIP:
                          return (0, a.jsx)(m.Popout, {
                            position: "top",
                            align: "center",
                            shouldShow: !0,
                            renderPopout: () =>
                              (0, a.jsx)(W.default, {
                                markAsDismissed: n,
                                partnerGame: eY.PartnerGame.FORTNITE,
                              }),
                            children: this.renderSettingsGear,
                          });
                        case o.DismissibleContent
                          .USER_SAFETY_SAFE_DIRECT_MESSAGING:
                          return (0, a.jsx)(m.Popout, {
                            position: "top",
                            align: "center",
                            shouldShow: !0,
                            renderPopout: () =>
                              (0, a.jsx)(ed.default, { markAsDismissed: n }),
                            children: this.renderSettingsGear,
                          });
                        case o.DismissibleContent
                          .USER_SAFETY_CONSUMER_EDUCATION_BLOCK:
                          return (0, a.jsx)(m.Popout, {
                            position: "top",
                            align: "center",
                            shouldShow: !0,
                            renderPopout: () =>
                              (0, a.jsx)(en.default, { markAsDismissed: n }),
                            children: this.renderSettingsGear,
                          });
                        case o.DismissibleContent
                          .USER_SAFETY_CONSUMER_EDUCATION_MUTE:
                          return (0, a.jsx)(m.Popout, {
                            position: "top",
                            align: "center",
                            shouldShow: !0,
                            renderPopout: () =>
                              (0, a.jsx)(ea.default, { markAsDismissed: n }),
                            children: this.renderSettingsGear,
                          });
                        case o.DismissibleContent.SOUNDBOARD_VOLUME_EDUCATION:
                          return (0, a.jsx)(m.Popout, {
                            position: "top",
                            align: "center",
                            shouldShow: !0,
                            renderPopout: () =>
                              (0, a.jsx)(ei.default, { markAsDismissed: n }),
                            children: this.renderSettingsGear,
                          });
                        case o.DismissibleContent
                          .USER_SAFETY_CONSUMER_EDUCATION_REPORTING:
                          return (0, a.jsx)(m.Popout, {
                            position: "top",
                            align: "center",
                            shouldShow: !0,
                            renderPopout: () =>
                              (0, a.jsx)(
                                es.UserSafetyEducationReportingCoachmark,
                                { markAsDismissed: n }
                              ),
                            children: this.renderSettingsGear,
                          });
                        case o.DismissibleContent
                          .PER_GUILD_COLLECTIBLES_CUSTOMIZATION_COACHMARK:
                          return (0, a.jsx)(m.Popout, {
                            position: "top",
                            align: "center",
                            shouldShow: !0,
                            renderPopout: () => (0, a.jsx)(eu.default, {}),
                            children: this.renderSettingsGear,
                          });
                        default:
                          return this.renderSettingsGear();
                      }
                    },
                  }),
                ],
              }),
            ],
          });
        }
        constructor(...e) {
          super(...e),
            (this.copiedTimeout = new u.Timeout()),
            (this.copiedDecayTimeout = new u.Timeout()),
            (this.speakingWhileMutedTooltipTimeout = new u.Timeout()),
            (this.state = {
              hovered: !1,
              copiedStreak: 0,
              shouldShowNametagTooltip: !1,
              shouldShowCopiedFeedback: !1,
              shouldShowSpeakingWhileMutedTooltip: !1,
              hoveringOnMute: !1,
            }),
            (this.handleToggleSelfMute = () => {
              let { serverMute: e, suppress: t } = this.props;
              (0, U.default)(e, t);
            }),
            (this.handleToggleSelfDeaf = () => {
              let { serverDeaf: e } = this.props;
              (0, b.default)(e);
            }),
            (this.handleOpenAccountSettings = () => {
              this.handleOpenSettings();
            }),
            (this.handleOpenSettings = function () {
              let e =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : eV.UserSettingsSections.ACCOUNT,
                t = arguments.length > 1 ? arguments[1] : void 0,
                n = arguments.length > 2 ? arguments[2] : void 0;
              g.default.open(e, t, n);
            }),
            (this.handleOpenSettingsContextMenu = e => {
              let { currentUser: t } = this.props;
              null != t &&
                (0, T.openContextMenuLazy)(e, async () => {
                  let { default: e } = await n
                    .el("727212")
                    .then(n.bind(n, "727212"));
                  return n =>
                    (0, a.jsx)(e, {
                      ...n,
                      user: t,
                      premiumSubscription: this.props.premiumSubscription,
                      webBuildOverride: this.props.webBuildOverride,
                    });
                });
            }),
            (this.handleInputAudioContextMenu = e => {
              (0, T.openContextMenuLazy)(e, async () => {
                let { default: e } = await n
                  .el("266392")
                  .then(n.bind(n, "266392"));
                return () =>
                  (0, a.jsx)(e, {
                    onClose: T.closeContextMenu,
                    renderInputDevices: !0,
                    renderInputModes: !0,
                    renderInputVolume: !0,
                  });
              });
            }),
            (this.handleOutputAudioContextMenu = e => {
              (0, T.openContextMenuLazy)(e, async () => {
                let { default: e } = await n
                  .el("266392")
                  .then(n.bind(n, "266392"));
                return () =>
                  (0, a.jsx)(e, {
                    onClose: T.closeContextMenu,
                    renderOutputDevices: !0,
                    renderOutputVolume: !0,
                  });
              });
            }),
            (this.handleMouseEnter = () => {
              this.setState({ hovered: !0 });
            }),
            (this.handleMouseLeave = () => {
              this.setState({ hovered: !1 });
            }),
            (this.handleMouseEnterMute = () => {
              this.setState({
                hoveringOnMute: !0,
                shouldShowSpeakingWhileMutedTooltip: !1,
              }),
                this.speakingWhileMutedTooltipTimeout.stop();
            }),
            (this.handleMouseLeaveMute = () => {
              this.setState({ hoveringOnMute: !1 });
            }),
            (this.handleCopyTag = () => {
              let { currentUser: e } = this.props,
                { shouldShowNametagTooltip: t, copiedStreak: n } = this.state;
              if (null == e) return;
              (0, ew.copy)(
                eB.default.getUserTag(e, {
                  decoration: "never",
                  identifiable: "always",
                })
              ),
                eG.default.track(eV.AnalyticEvents.TEXT_COPIED, {
                  type: "User Tag",
                });
              let a = {
                shouldShowCopiedFeedback: !0,
                shouldShowNametagTooltip: !0,
              };
              !t && (a.copiedStreak = n + 1),
                this.setState(a, () => {
                  this.copiedTimeout.start(1e3, () =>
                    this.setState({ shouldShowNametagTooltip: !1 })
                  ),
                    this.copiedDecayTimeout.start(2e3, () =>
                      this.setState({ copiedStreak: 0 })
                    );
                });
            }),
            (this.handleOccludedChanged = () => {
              let { occluded: e } = this.props;
              e &&
                this.setState({
                  shouldShowNametagTooltip: !1,
                  shouldShowSpeakingWhileMutedTooltip: !1,
                });
            }),
            (this.handleSpeakingWhileMutedChanged = () => {
              let {
                  selfMute: e,
                  serverMute: t,
                  suppress: n,
                  speakingWhileMuted: a,
                  occluded: s,
                } = this.props,
                { hoveringOnMute: l } = this.state;
              a
                ? !l &&
                  e &&
                  !t &&
                  !n &&
                  !s &&
                  this.setState(
                    { shouldShowSpeakingWhileMutedTooltip: !0 },
                    () => {
                      this.speakingWhileMutedTooltipTimeout.start(2e3, () =>
                        this.setState({
                          shouldShowSpeakingWhileMutedTooltip: !1,
                        })
                      );
                    }
                  )
                : (this.setState({ shouldShowSpeakingWhileMutedTooltip: !1 }),
                  this.speakingWhileMutedTooltipTimeout.stop());
            }),
            (this.renderStatusPickerPopout = e => {
              let { closePopout: t } = e,
                { showRichProfilePopup: n, currentUser: s } = this.props;
              if (n) {
                let e = {
                  userId: null == s ? void 0 : s.id,
                  user: s,
                  onClose: () => {
                    this.handleMouseLeave(), null == t || t();
                  },
                };
                return (0, a.jsx)("div", {
                  className: eK.accountProfilePopoutWrapper,
                  children: (0, a.jsx)(Q.default, { ...e }),
                });
              }
              return (0, a.jsx)(A.default, {
                onClose: () => {
                  this.handleMouseLeave(), null == t || t();
                },
              });
            }),
            (this.renderSettingsGear = () =>
              (0, a.jsx)(eX, {
                isEligibleForPomelo: this.props.isEligibleForPomelo,
                webBuildOverride: this.props.webBuildOverride,
                onClick: this.handleOpenAccountSettings,
                onContextMenu: this.handleOpenSettingsContextMenu,
              }));
        }
      }
      function eZ() {
        let e = (0, r.useStateFromStores)([ep.default], () =>
            ep.default.getCurrentUser()
          ),
          t = (0, B.useShowEligibilityEnrollmentTooltip)(
            eY.PartnerGame.FORTNITE
          ),
          n = (0, r.useStateFromStores)([eE.default], () => eE.default.getId()),
          l = (0, j.useCustomStatusActivity)(),
          { streaming: i, status: u } = (0, r.useStateFromStoresObject)(
            [eS.default],
            () => ({
              streaming:
                null !=
                eS.default.findActivity(
                  e => e.type === eV.ActivityTypes.STREAMING
                ),
              status: eS.default.getStatus(),
            })
          ),
          d = (0, L.default)({ userId: n }),
          c = eB.default.useUserTag(e, { decoration: "never" }),
          f = (0, r.useStateFromStores)(
            [em.default],
            () => em.default.hidePersonalInformation
          ),
          E = (0, r.useStateFromStores)([eI.default, eh.default], () => {
            let e = eI.default.getChannelId();
            return null != e ? eh.default.getChannel(e) : null;
          }),
          { mute: h, selfMute: _, suppress: C } = (0, ef.default)(E),
          { selfDeaf: I, deaf: S } = (0, ec.default)(E),
          T = (0, r.useStateFromStores)([P.default], () => {
            var e;
            return (0, D.probablyHasBuildOverride)()
              ? null === (e = P.default.getCurrentBuildOverride().overrides) ||
                void 0 === e
                ? void 0
                : e.discord_web
              : null;
          }),
          g = (0, r.useStateFromStores)([eT.default], () =>
            eT.default.getPremiumTypeSubscription()
          ),
          A = (0, r.useStateFromStores)([eC.default], () =>
            eC.default.getEverSpeakingWhileMuted()
          ),
          N = (0, r.useStateFromStores)([e_.default], () =>
            e_.default.hasLayers()
          ),
          M = (0, m.useModalsStore)(m.hasAnyModalOpenSelector),
          y = M || N || eF.ProcessArgs.isDisallowPopupsSet(),
          x = (0, Z.useIsEligibleForPomelo)();
        s.useEffect(() => {
          q.default.trackExposure({ location: "08bd40_3" });
        });
        let b = (0, r.useStateFromStores)(
            [K.default],
            () => null != K.default.getAwaitingRemoteSessionInfo()
          ),
          {
            isPopupEnabled: U,
            isJoinedTagButtonEnabled: G,
            isTaglessAccountPanelEnabled: w,
          } = q.default.useExperiment(
            { location: "08bd40_4" },
            { autoTrackExposure: !1 }
          ),
          F = (0, r.useStateFromStores)(
            [H.default],
            () => H.default.isCurrentQuestCompleted
          ),
          Y = (0, r.useStateFromStores)(
            [H.default],
            () => H.default.currentDropQuestGameTitle
          ),
          W = (0, z.useIsHomeSelected)(),
          Q = (0, O.useIsDmSpamFilterCoachmarkEnabled)(),
          $ = (0, ee.useCanSeeSafetyEducationBlockMuteCoachmark)(),
          en = (0, R.useIsSafetyConsumerEducationBlockMuteBucket)(),
          ea = (0, et.useCanSeeSafetyEducationReportingCoachmark)(),
          es = (0, eo.default)(e),
          ei = "account";
        (0, v.useTriggerDebuggingAA)({
          location: ei + " auto on",
          autoTrackExposure: !0,
        }),
          (0, v.useTriggerDebuggingAA)({
            location: ei + " auto off",
            autoTrackExposure: !1,
          }),
          (0, ee.useSafetyEducationAATriggerPoint)();
        let er = (0, r.useStateFromStores)([el.default], () =>
            el.default.hasHadOtherUserPlaySoundInSession()
          ),
          eu = (function () {
            let e = (0, k.useIsDismissibleContentDismissed)(
                o.DismissibleContent
                  .PROFILE_THEMES_FEATURE_EDUCATION_TOOLTIP_TAKE_2
              ),
              [t, n] = (0, r.useStateFromStoresArray)([X.default], () => [
                X.default.hasFetchedRelevance,
                X.default.profileThemesRelevanceExceeded,
              ]),
              [a, l] = (0, r.useStateFromStoresArray)([eT.default], () => [
                eT.default.hasFetchedMostRecentPremiumTypeSubscription(),
                eT.default.getMostRecentPremiumTypeSubscription(),
              ]),
              { enabled: i } = J.default.useExperiment(
                { location: "08bd40_1" },
                { autoTrackExposure: !0 }
              ),
              u = s.useMemo(() => {
                let e = new Date().getTime();
                return (
                  null != l &&
                  (l.status === eV.SubscriptionStatusTypes.ACTIVE ||
                    e - l.currentPeriodEnd.getTime() < eq)
                );
              }, [l]);
            return (
              s.useEffect(() => {
                let s = async () => {
                  if (!e && null == n && !!i) {
                    if (!a) {
                      await (0, p.fetchMostRecentSubscription)();
                      return;
                    }
                    !u && !t && (await (0, p.getPerksRelevance)());
                  }
                };
                s();
              }, [i, n, e, a, t, u]),
              !e && !!i && !u && null != n && n
            );
          })(),
          ed = { avatar: [], settings: [] };
        if (!y) {
          if (
            (eu &&
              ed.settings.push(
                o.DismissibleContent
                  .PROFILE_THEMES_FEATURE_EDUCATION_TOOLTIP_TAKE_2
              ),
            t)
          ) {
            var eg;
            ed.settings.push(o.DismissibleContent.QUEST_2_ENROLLMENT_TOOLTIP),
              F &&
                Y ===
                  (null === (eg = (0, V.getDrop)(eY.PartnerGame.FORTNITE)) ||
                  void 0 === eg
                    ? void 0
                    : eg.title) &&
                ed.settings.push(
                  o.DismissibleContent.QUEST_2_COMPLETION_TOOLTIP
                );
          }
          W &&
            Q &&
            ed.settings.push(
              o.DismissibleContent.USER_SAFETY_SAFE_DIRECT_MESSAGING
            ),
            $ &&
              (1 === en
                ? ed.settings.push(
                    o.DismissibleContent.USER_SAFETY_CONSUMER_EDUCATION_MUTE
                  )
                : ed.settings.push(
                    o.DismissibleContent.USER_SAFETY_CONSUMER_EDUCATION_BLOCK
                  )),
            er &&
              ed.settings.push(
                o.DismissibleContent.SOUNDBOARD_VOLUME_EDUCATION
              ),
            ea &&
              ed.settings.push(
                o.DismissibleContent.USER_SAFETY_CONSUMER_EDUCATION_REPORTING
              ),
            es &&
              ed.settings.push(
                o.DismissibleContent
                  .PER_GUILD_COLLECTIBLES_CUSTOMIZATION_COACHMARK
              );
        }
        return (0, a.jsx)(eQ, {
          currentUser: e,
          customStatusActivity: l,
          dismissibleContents: ed,
          userTag: c,
          hidePrivateData: f,
          occluded: y,
          premiumSubscription: g,
          selfDeaf: I,
          selfMute: _,
          serverDeaf: S,
          serverMute: h,
          showRichProfilePopup: U,
          showTagAsButton: G,
          showTaglessAccountPanel: w,
          speaking: d,
          speakingWhileMuted: A,
          status: u,
          streaming: i,
          suppress: C,
          webBuildOverride: T,
          awaitingRemote: b,
          isEligibleForPomelo: x,
        });
      }
      function eX(e) {
        let {
            webBuildOverride: t,
            isEligibleForPomelo: n,
            onClick: s,
            onContextMenu: l,
          } = e,
          i = (0, m.useRedesignIconContext)().enabled,
          r = null,
          o = eO.default;
        return (
          i
            ? (o =
                null != t
                  ? S.SettingsInfoIcon
                  : n
                    ? C.SettingsCircleIcon
                    : I.SettingsIcon)
            : null != t
              ? (r = (0, a.jsx)(eM.default, {
                  width: 9,
                  height: 9,
                  className: eK.hasBuildOverride,
                  "aria-hidden": !0,
                }))
              : n &&
                (r = (0, a.jsx)(eU.CircleBadge, {
                  color: G.default.STATUS_DANGER,
                  className: eK.hasBuildOverride,
                  "aria-hidden": !0,
                })),
          (0, a.jsx)(ey.default, {
            tooltipText:
              null != t
                ? eW.default.Messages.USER_SETTINGS_WITH_BUILD_OVERRIDE.format({
                    webBuildOverride: t.id,
                  })
                : eW.default.Messages.USER_SETTINGS,
            onClick: s,
            onContextMenu: l,
            innerClassName: null != t || n ? eK.buildOverrideButton : null,
            icon: o,
            children: r,
          })
        );
      }
      function eJ(e) {
        let { selfMute: t, suppress: n, serverMute: s } = e,
          l = (0, m.useRedesignIconContext)().enabled;
        if (l) {
          let e, l;
          return (
            s
              ? ((e = E.MicrophoneDenyIcon),
                (l = m.tokens.colors.STATUS_DANGER))
              : n
                ? ((e = E.MicrophoneDenyIcon),
                  (l = m.tokens.colors.STATUS_DANGER))
                : t
                  ? ((e = _.MicrophoneSlashIcon),
                    (l = m.tokens.colors.STATUS_DANGER))
                  : (e = h.MicrophoneIcon),
            (0, a.jsx)(e, {
              width: 20,
              height: 20,
              color: null != l ? l : "currentColor",
            })
          );
        }
        {
          let e = t || n || s,
            l = e ? eD.default : eP.default;
          return (0, a.jsx)(l, {
            width: 20,
            height: 20,
            foreground: e ? eK.strikethrough : void 0,
          });
        }
      }
      function e$(e) {
        let { selfDeaf: t, serverDeaf: n } = e,
          s = (0, m.useRedesignIconContext)().enabled;
        if (s) {
          let e, s;
          return (
            n
              ? ((e = d.HeadphonesDenyIcon),
                (s = m.tokens.colors.STATUS_DANGER))
              : t
                ? ((e = f.HeadphonesSlashIcon),
                  (s = m.tokens.colors.STATUS_DANGER))
                : (e = c.HeadphonesIcon),
            (0, a.jsx)(e, {
              width: 20,
              height: 20,
              color: null != s ? s : "currentColor",
            })
          );
        }
        {
          let e = t ? eL.default : ev.default;
          return (0, a.jsx)(e, {
            width: 20,
            height: 20,
            foreground: t ? eK.strikethrough : void 0,
          });
        }
      }
    },
    2190: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("446674"),
        l = n("77078"),
        i = n("878550"),
        r = n("921917"),
        o = n("393027"),
        u = n("845579"),
        d = n("271938"),
        c = n("305961"),
        f = n("49111"),
        E = n("507626");
      function h() {
        let { guildId: e } = (0, o.default)(),
          t = (0, s.useStateFromStores)([c.default], () =>
            c.default.getGuild(e)
          ),
          n = (0, s.useStateFromStores)([d.default], () => d.default.getId()),
          h = (0, s.useStateFromStores)([i.default], () =>
            i.default.getDownToPlay(n)
          );
        return (null == t ? void 0 : t.hasFeature(f.GuildFeatures.CLAN))
          ? (0, a.jsx)("div", {
              className: E.container,
              children: (0, a.jsx)(l.FormSwitch, {
                value: null != h,
                hideBorder: !0,
                className: E.formSwitch,
                onChange: e => {
                  e
                    ? (0, r.default)(
                        "Let's play together!",
                        { id: void 0, name: "\uD83C\uDFAE" },
                        "TODAY"
                      )
                    : u.CustomStatusSetting.updateSetting(void 0);
                },
                children: "Down to Play",
              }),
            })
          : null;
      }
    },
    566396: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return p;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("917351"),
        i = n.n(l),
        r = n("446674"),
        o = n("272030"),
        u = n("630273"),
        d = n("823704"),
        c = n("662285"),
        f = n("981601"),
        E = n("925758"),
        h = n("27618"),
        _ = n("697218"),
        C = n("663449"),
        I = n("449008"),
        S = n("782340");
      class m extends s.PureComponent {
        hasParty(e) {
          return e.length > 1;
        }
        handleStopListening() {
          (0, d.default)();
        }
        renderUserPopout(e, t) {
          return (0, a.jsx)(f.default, { ...e, userId: t.id });
        }
        render() {
          let { currentUser: e, host: t, party: n } = this.props;
          return this.hasParty(n) && null != e
            ? (0, a.jsx)(C.default, {
                currentUser: e,
                host: t,
                party: n,
                renderUserPopout: this.renderUserPopout,
                renderOverflowPopout: this.renderOverflowPopout,
                onStopListening: this.handleStopListening,
                onUserContextMenu: this.handleUserContextMenu,
              })
            : null;
        }
        constructor(...e) {
          super(...e),
            (this.handleUserContextMenu = (e, t) => {
              (0, o.openContextMenuLazy)(e, async () => {
                let { default: e } = await n
                  .el("406784")
                  .then(n.bind(n, "406784"));
                return n => (0, a.jsx)(e, { ...n, user: t });
              });
            }),
            (this.renderOverflowPopout = () => {
              let { party: e } = this.props;
              return (0, a.jsx)(u.default, {
                party: e,
                header:
                  S.default.Messages.SPOTIFY_LISTEN_ALONG_LISTENING_ALONG_COUNT.format(
                    { count: e.length }
                  ),
              });
            });
        }
      }
      var p = r.default.connectStores(
        [c.default, _.default, h.default, E.default],
        () => {
          let e, t;
          let n = c.default.getSyncingWith(),
            a = c.default.getActivity(),
            s = _.default.getCurrentUser(),
            l = [];
          if (
            (null != n
              ? ((e = _.default.getUser(n.userId)), (t = n.partyId))
              : null != a &&
                null != a.party &&
                null != a.party.id &&
                ((e = s), (t = a.party.id)),
            null != t)
          ) {
            var r;
            l = i(
              Array.from(
                null !== (r = E.default.getParty(t)) && void 0 !== r ? r : []
              )
            )
              .map(e => _.default.getUser(e))
              .filter(I.isNotNullish)
              .orderBy(
                [
                  t => null == e || e.id === t.id,
                  e => h.default.isFriend(e.id),
                ],
                ["desc", "desc"]
              )
              .value();
          }
          return { currentUser: s, host: e, party: l };
        }
      )(m);
    },
    618489: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return eK;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("627445"),
        o = n.n(r),
        u = n("90915"),
        d = n("446674"),
        c = n("77078"),
        f = n("629109"),
        E = n("272030"),
        h = n("406189"),
        _ = n("32296"),
        C = n("412026"),
        I = n("86621"),
        S = n("997289"),
        m = n("244201"),
        p = n("191225"),
        T = n("372610"),
        g = n("380691"),
        A = n("943349"),
        N = n("702173"),
        R = n("10524"),
        O = n("478272"),
        v = n("812204"),
        L = n("685665"),
        M = n("754493"),
        P = n("458685"),
        D = n("679653"),
        y = n("76393"),
        x = n("261552"),
        b = n("167715"),
        U = n("479788"),
        G = n("16916"),
        j = n("597517"),
        w = n("269596"),
        k = n("38654"),
        F = n("393414"),
        B = n("245463"),
        H = n("486185"),
        V = n("488464"),
        Y = n("998716"),
        W = n("819450"),
        K = n("111542"),
        z = n("924872"),
        q = n("274438"),
        Q = n("808422"),
        Z = n("845579"),
        X = n("999180"),
        J = n("830210"),
        $ = n("289180"),
        ee = n("951691"),
        et = n("19065"),
        en = n("977347"),
        ea = n("799808"),
        es = n("727284"),
        el = n("116439"),
        ei = n("373469"),
        er = n("271938"),
        eo = n("42203"),
        eu = n("305961"),
        ed = n("778588"),
        ec = n("42887"),
        ef = n("957255"),
        eE = n("945956"),
        eh = n("27618"),
        e_ = n("697218"),
        eC = n("800762"),
        eI = n("316133"),
        eS = n("145131"),
        em = n("437825"),
        ep = n("142303"),
        eT = n("406019"),
        eg = n("220075"),
        eA = n("82636"),
        eN = n("394832"),
        eR = n("394640"),
        eO = n("343571"),
        ev = n("962541"),
        eL = n("762489"),
        eM = n("599110"),
        eP = n("701909"),
        eD = n("158998"),
        ey = n("452469"),
        ex = n("997769"),
        eb = n("49111"),
        eU = n("533613"),
        eG = n("782340"),
        ej = n("194416"),
        ew = n("890957");
      function ek(e) {
        let t = e.currentTarget;
        eM.default.track(eb.AnalyticEvents.NOISE_CANCELLATION_LINK_CLICKED, {
          text: t.text,
          href: t.href,
          location: { section: eb.AnalyticsSections.NOISE_CANCELLATION_POPOUT },
        });
      }
      function eF() {
        let e = s.useRef(null);
        (0, c.useFocusLock)(e),
          s.useEffect(() => {
            eM.default.track(eb.AnalyticEvents.OPEN_POPOUT, {
              type: eb.AnalyticsSections.NOISE_CANCELLATION_POPOUT,
            });
          }, []);
        let t = (0, d.useStateFromStores)([ec.default], () =>
          ec.default.getNoiseCancellation()
        );
        return (0, a.jsxs)("div", {
          ref: e,
          className: ej.noiseCancellationPopout,
          children: [
            (0, a.jsx)(c.FormSwitch, {
              hideBorder: !0,
              className: ew.marginBottom4,
              value: t,
              onChange: () =>
                f.default.setNoiseCancellation(!t, {
                  section: eb.AnalyticsSections.NOISE_CANCELLATION_POPOUT,
                }),
              note: eG.default.Messages.NOISE_CANCELLATION_POPOUT_DESCRIPTION,
              children: eG.default.Messages.NOISE_CANCELLATION_POPOUT_HEADER,
            }),
            (0, a.jsx)(_.default, {
              title:
                eG.default.Messages.NOISE_CANCELLATION_POPOUT_MIC_TEST_TITLE,
              notchBackground: _.NotchBackground.BLACK,
              buttonTest: eG.default.Messages.NOISE_CANCELLATION_POPOUT_TEST,
              buttonStop: eG.default.Messages.NOISE_CANCELLATION_POPOUT_STOP,
              buttonClassName: ej.micTestButton,
              buttonColor: c.Button.Colors.PRIMARY,
              location: {
                section: eb.AnalyticsSections.NOISE_CANCELLATION_POPOUT,
              },
            }),
            (0, a.jsx)(c.FormTitle, {
              tag: c.FormTitleTags.H5,
              className: i(ew.marginBottom8, ew.marginTop20),
              children: eG.default.Messages.NOISE_CANCELLATION_POPOUT_FOOTER,
            }),
            (0, a.jsxs)(eS.default, {
              justify: eS.default.Justify.BETWEEN,
              className: ej.footer,
              children: [
                (0, a.jsx)(c.Anchor, {
                  href: eb.MarketingURLs.KRISP,
                  onClick: e => ek(e),
                  children: (0, a.jsx)("div", { className: ej.krispLogo }),
                }),
                (0, a.jsx)(c.Anchor, {
                  href: eP.default.getArticleURL(
                    eb.HelpdeskArticles.NOISE_SUPPRESSION
                  ),
                  className: ej.krispLink,
                  onClick: e => ek(e),
                  children: eG.default.Messages.LEARN_MORE,
                }),
              ],
            }),
          ],
        });
      }
      function eB() {
        let e = (0, d.useStateFromStores)([q.default], () =>
            q.default.isMuted()
          ),
          t = e
            ? eG.default.Messages.STAGE_MUSIC_UNMUTE
            : eG.default.Messages.STAGE_MUSIC_MUTE;
        return (0, a.jsx)(ev.default, {
          "aria-label": t,
          tooltipText: t,
          icon: e ? eO.default : eR.default,
          onClick: () => (0, K.updateStageMusicMuted)(!e),
        });
      }
      function eH(e) {
        let { channel: t, enableActivities: n, disabled: l } = e,
          r = (0, X.default)(),
          o = (0, $.default)(t),
          u = (0, d.useStateFromStoresObject)(
            [p.default],
            () => null != p.default.getSelfEmbeddedActivityForChannel(t.id)
          ),
          E = (0, B.default)(t),
          { reachedLimit: h, limit: _ } = (0, J.default)(t),
          C = s.useCallback(() => {
            (0, et.default)();
          }, []),
          I = (0, m.useAppContext)(),
          S = s.useCallback(
            e => {
              if (ec.default.isVideoEnabled() === e) return;
              let n = () => {
                var n;
                f.default.setVideoEnabled(e),
                  e &&
                    (0, F.transitionTo)(
                      eb.Routes.CHANNEL(
                        null !== (n = t.getGuildId()) && void 0 !== n
                          ? n
                          : eb.ME,
                        t.id
                      )
                    );
              };
              e ? (0, es.default)(n, I) : n();
            },
            [t, I]
          ),
          T = u || n || E;
        return (0, a.jsx)(el.VideoButtonWrapper, {
          onChange: S,
          onCameraUnavailable: C,
          hasPermission: o,
          channelLimit: _,
          channelLimitReached: h,
          ...r,
          enabled: !l && r.enabled,
          children: e => {
            let {
                unavailable: t,
                active: n,
                label: s,
                iconComponent: l,
                ...r
              } = e,
              o = n ? em.default : ep.default,
              u = (0, a.jsx)(o, {
                className: i(ej.buttonIcon, { [ej.withText]: !T }),
              });
            return (0, a.jsx)(c.Popout, {
              renderPopout: e => {
                let { closePopout: t } = e;
                return (0, a.jsx)(P.default, { onClose: t });
              },
              position: "top",
              align: "center",
              animation: c.Popout.Animation.FADE,
              children: (e, l) => {
                let { onClick: o, ...d } = e,
                  { isShown: f } = l;
                return (0, a.jsx)(c.Tooltip, {
                  text: s,
                  children: e =>
                    (0, a.jsx)(c.Button, {
                      ...r,
                      ...e,
                      ...d,
                      onClick: t => {
                        var n;
                        r.onClick(t),
                          null === (n = e.onClick) || void 0 === n || n.call(e),
                          f && o(t);
                      },
                      onContextMenu: t => {
                        var n;
                        o(t),
                          null === (n = e.onContextMenu) ||
                            void 0 === n ||
                            n.call(e);
                      },
                      size: c.Button.Sizes.SMALL,
                      className: i(ej.button, ej.buttonColor, {
                        [ej.buttonActive]: n,
                        [ej.fauxDisabled]: t,
                        [ej.disabled]: r.disabled,
                      }),
                      innerClassName: ej.buttonContents,
                      wrapperClassName: ej.button,
                      fullWidth: !0,
                      children: T
                        ? u
                        : (0, a.jsxs)(eS.default, {
                            align: eS.default.Align.CENTER,
                            children: [u, eG.default.Messages.VIDEO],
                          }),
                    }),
                });
              },
            });
          },
        });
      }
      function eV(e) {
        let { channel: t, enableActivities: n } = e,
          s = (0, m.useAppContext)(),
          { analyticsLocations: l } = (0, L.default)(),
          r = s === eb.AppContext.POPOUT,
          o = (0, A.useEmbeddedActivityLaunchability)(t.id),
          u = (0, A.getEmbeddedActivityLaunchabilityLabel)(o),
          [f] = (0, d.useStateFromStores)([p.default], () =>
            null != t.id && "" !== t.id
              ? p.default.getEmbeddedActivitiesForChannel(t.id)
              : p.NO_ACTIVITIES
          ),
          { userInActivity: E } = (0, d.useStateFromStoresObject)(
            [p.default],
            () => ({
              userInActivity:
                null != p.default.getSelfEmbeddedActivityForChannel(t.id),
            })
          ),
          h = (0, S.useAnalyticsContext)(),
          _ = (0, g.useShowActivityIndicator)(),
          C = o !== A.EmbeddedActivityLaunchability.CAN_LAUNCH;
        return n
          ? (0, a.jsx)(c.Tooltip, {
              text: u,
              children: e =>
                (0, a.jsxs)(c.Button, {
                  ...e,
                  fullWidth: !0,
                  size: c.Button.Sizes.SMALL,
                  onClick: () => {
                    var n;
                    (0, O.default)({
                      channel: t,
                      guildId: t.guild_id,
                      locationObject: h.location,
                      openInPopout: r,
                      analyticsLocations: l,
                    }),
                      null === (n = e.onClick) || void 0 === n || n.call(e);
                  },
                  disabled: C,
                  className: i(ej.button, ej.buttonColor, {
                    [ej.buttonActive]: E || null != f,
                    [ej.disabled]: C,
                  }),
                  innerClassName: ej.buttonContents,
                  wrapperClassName: ej.button,
                  children: [
                    _
                      ? (0, a.jsx)(R.FreeActivityIndicatorDot, {
                          top: -1,
                          right: -1,
                        })
                      : null,
                    (0, a.jsx)(eA.default, { className: ej.buttonIcon }),
                  ],
                }),
            })
          : null;
      }
      function eY(e) {
        let t,
          { channel: n, canGoLive: l, enableActivities: r, disabled: o } = e,
          u = (0, d.useStateFromStores)([e_.default], () =>
            e_.default.getCurrentUser()
          ),
          f = (0, d.useStateFromStoresArray)([ei.default], () =>
            ei.default.getAllActiveStreams()
          ),
          E = (0, $.default)(n),
          h = n.getGuildId(),
          _ = (0, d.useStateFromStoresObject)(
            [p.default],
            () => null != p.default.getSelfEmbeddedActivityForChannel(n.id)
          ),
          C = (0, B.default)(n),
          I = s.useCallback(() => {
            (0, ea.default)(h, n.id, eb.AnalyticsSections.ACTIVITY_PANEL);
          }, [h, n.id]),
          S = f.find(e => e.ownerId === (null == u ? void 0 : u.id)),
          m = (0, ee.useOtherStreams)(n, u, f);
        t = null == S ? (l ? I : en.default) : () => (0, G.default)(S);
        let T = null != S || m.length > 0,
          g = E
            ? eG.default.Messages.SHARE_YOUR_SCREEN
            : eG.default.Messages
                .ACTIVITY_PANEL_GO_LIVE_TOOLTIP_NO_PERMISSION_IN_VOICE,
          A = _ || r || C,
          N = (0, a.jsx)(eN.default, {
            className: i(ej.buttonIcon, { [ej.withText]: !A }),
          });
        return (0, a.jsx)(c.Popout, {
          renderPopout: e => {
            let { closePopout: t } = e;
            return (0, a.jsx)(ee.default, {
              channel: n,
              currentUser: u,
              activeStreams: f,
              onClose: t,
              handleGoLive: l ? I : en.default,
            });
          },
          position: "top",
          align: "center",
          animation: c.Popout.Animation.FADE,
          children: e => {
            let { onClick: n, ...s } = e;
            return (0, a.jsx)(c.Tooltip, {
              text: g,
              children: e =>
                (0, a.jsx)(c.Button, {
                  ...e,
                  size: c.Button.Sizes.SMALL,
                  onClick: a => {
                    var s;
                    T ? n(a) : t(),
                      null === (s = e.onClick) || void 0 === s || s.call(e);
                  },
                  disabled: !E || o,
                  className: i(ej.button, ej.buttonColor, {
                    [ej.buttonActive]: null != S,
                    [ej.disabled]: !E || o,
                  }),
                  ...(T ? s : null),
                  innerClassName: ej.buttonContents,
                  wrapperClassName: ej.button,
                  children: A
                    ? N
                    : (0, a.jsxs)(eS.default, {
                        align: eS.default.Align.CENTER,
                        children: [N, eG.default.Messages.GO_LIVE_SHARE_SCREEN],
                      }),
                }),
            });
          },
        });
      }
      class eW extends s.PureComponent {
        renderConnectionStatus() {
          let e;
          let {
            channel: t,
            guild: n,
            rtcConnectionQuality: s,
            rtcConnectionState: l,
            rtcConnectionLastPing: i,
            hasVideo: r,
            isBroadcasting: o,
          } = this.props;
          if (null == t) return null;
          let d = (0, D.computeChannelName)(t, e_.default, eh.default);
          return (
            null != n
              ? ((e = eb.Routes.CHANNEL(n.id, t.id)),
                (d = "".concat(d, " / ").concat(n.name)))
              : (e = eb.Routes.CHANNEL(eb.ME, t.id)),
            o &&
              t.isBroadcastChannel() &&
              (d = eG.default.Messages.BROADCASTING),
            (0, a.jsx)(C.default, {
              statusTextClassName: ej.statusWithPopout,
              quality: s,
              state: l,
              lastPing: i,
              hasVideo: r,
              children: (0, a.jsx)(c.FocusRing, {
                children: (0, a.jsx)(u.Link, {
                  to: e,
                  onClick: this.handleChannelLinkClick,
                  onContextMenu: this.handleChannelLinkContextMenu,
                  children: (0, a.jsx)(eL.default, {
                    className: ej.channel,
                    children: d,
                  }),
                }),
              }),
            })
          );
        }
        renderNoiseCancellation() {
          let {
            noiseCancellationActive: e,
            noiseCancellationError: t,
            hasLayers: n,
            remoteVoiceState: s,
            channel: l,
            voiceStates: i,
          } = this.props;
          if (null != s) return null;
          if (null == l ? void 0 : l.isGuildStageVoice()) {
            let e =
              null !=
              i.find(
                e =>
                  e.user.id === er.default.getId() &&
                  (0, Q.getAudienceRequestToSpeakState)(e.voiceState) ===
                    Q.RequestToSpeakStates.ON_STAGE
              );
            if (!e && (0, z.shouldShowStageMusicMuteButton)(l.id))
              return (0, a.jsx)(eB, {});
          }
          return !n && t
            ? (0, a.jsx)(c.Tooltip, {
                text: eG.default.Messages.NOISE_CANCELLATION_CPU_OVERUSE,
                tooltipClassName: ej.noiseCancellationTooltip,
                forceOpen: !0,
                children: e => {
                  let { "aria-label": t } = e;
                  return (0, a.jsx)(ev.default, {
                    "aria-label": t,
                    tooltipText: null,
                    disabled: !0,
                    icon: eg.default,
                  });
                },
              })
            : (0, a.jsx)(
                c.Popout,
                {
                  position: "top",
                  align: "center",
                  renderPopout: () => (0, a.jsx)(eF, {}),
                  children: (t, n) => {
                    let { isShown: s } = n;
                    return (0, a.jsx)(ev.default, {
                      ...t,
                      tooltipClassName: ej.noiseCancellationTooltip,
                      tooltipText: s
                        ? null
                        : eG.default.Messages.NOISE_CANCELLATION_TOOLTIP,
                      icon: e ? eT.default : eg.default,
                    });
                  },
                },
                "krisp-popout"
              );
        }
        renderVoiceStates() {
          let { channel: e, voiceStates: t, showVoiceStates: n } = this.props;
          return null != e && n && 0 !== t.length
            ? (0, a.jsx)(ex.default, {
                voiceStates: t,
                channel: e,
                className: ej.voiceUsers,
              })
            : null;
        }
        renderChannelButtons() {
          let {
            channel: e,
            canGoLive: t,
            remoteVoiceState: n,
            enableActivities: s,
            voiceStates: l,
            selfStream: r,
            isPrivateChannelWithEnabledActivities: o,
          } = this.props;
          if (null == e || null != n) return null;
          let u = er.default.getId();
          if (e.isGuildStageVoice()) {
            if (!(0, W.isStageVideoEnabled)(e.guild_id) || !t) return null;
            let n = l.find(e => e.user.id === u);
            if (null == n || n.voiceState.suppress) return null;
          }
          let d = (e.isGuildVoice() || o) && s,
            { reachedLimit: c } = (0, J.getChannelVideoLimit)(e),
            f = (0, W.getStageHasMedia)(e.id);
          return (0, a.jsxs)("div", {
            className: ej.actionButtons,
            children: [
              (0, a.jsx)(eH, {
                channel: e,
                enableActivities: d,
                disabled: !f && c,
              }),
              (0, a.jsx)(eY, {
                channel: e,
                canGoLive: t,
                enableActivities: d,
                disabled:
                  e.isGuildStageVoice() && ((f && null == r) || (!f && c)),
              }),
              (0, a.jsxs)(a.Fragment, {
                children: [
                  d
                    ? (0, a.jsx)(eV, { channel: e, enableActivities: s })
                    : null,
                  (0, B.default)(e)
                    ? (0, a.jsx)(H.default, {
                        className: i(ej.button, ej.buttonColor),
                        innerClassName: ej.buttonContents,
                        iconClassName: ej.buttonIcon,
                        channel: e,
                      })
                    : null,
                ],
              }),
            ],
          });
        }
        render() {
          let {
            channel: e,
            noiseCancellationSupported: t,
            shouldShowVoicePanelIntroduction: n,
          } = this.props;
          return null == e
            ? null
            : (0, a.jsx)(c.Popout, {
                renderPopout: this.renderVoicePanelIntroduction,
                position: "top",
                align: "center",
                animation: c.Popout.Animation.TRANSLATE,
                shouldShow: n,
                children: () =>
                  (0, a.jsxs)("div", {
                    className: ej.container,
                    children: [
                      (0, a.jsxs)(eS.default, {
                        className: ej.connection,
                        align: eS.default.Align.CENTER,
                        children: [
                          (0, a.jsx)("div", {
                            className: ej.inner,
                            children: this.renderConnectionStatus(),
                          }),
                          (0, a.jsxs)(eS.default, {
                            grow: 0,
                            shrink: 0,
                            children: [
                              t ? this.renderNoiseCancellation() : null,
                              (0, a.jsx)(ey.default, { channel: e }),
                            ],
                          }),
                        ],
                      }),
                      this.renderVoiceStates(),
                      this.renderChannelButtons(),
                    ],
                  }),
              });
        }
        constructor(...e) {
          super(...e),
            (this.canScreenshare = () => {
              let { channel: e, canGoLive: t } = this.props;
              return t && null != e && null != e.getGuildId();
            }),
            (this.handleNoiseCancellationClicked = () => {
              let { noiseCancellationActive: e } = this.props;
              f.default.setNoiseCancellation(!e, {
                section: eb.AnalyticsSections.NOISE_CANCELLATION_POPOUT,
              });
            }),
            (this.handleGoLive = () => {
              let { guild: e, channel: t } = this.props,
                n = null != t ? t.getGuildId() : null != e ? e.id : null;
              null != n &&
                (0, ea.default)(n, t.id, eb.AnalyticsLocations.VOICE_PANEL);
            }),
            (this.handleChannelLinkClick = e => {
              var t;
              let { guild: n, channel: a } = this.props;
              o(null != a, "Channel is null during navigation click"),
                e.stopPropagation(),
                h.default.channelListScrollTo(
                  null !== (t = null == n ? void 0 : n.id) && void 0 !== t
                    ? t
                    : eb.ME,
                  a.id
                );
            }),
            (this.handleChannelLinkContextMenu = e => {
              let { channel: t } = this.props;
              (0, E.openContextMenuLazy)(e, async () => {
                let { default: e } = await n
                  .el("19577")
                  .then(n.bind(n, "19577"));
                return n => (0, a.jsx)(e, { ...n, channel: t });
              });
            }),
            (this.handleCloseVoicePanelIntroduction = () => {
              j.hideHotspot(eU.HotspotLocations.VOICE_PANEL_INTRODUCTION);
            }),
            (this.renderVoicePanelIntroduction = () =>
              (0, a.jsxs)("div", {
                className: i(ej.voicePanelIntroductionWrapper, "theme-light"),
                children: [
                  (0, a.jsx)(c.Heading, {
                    className: ej.voicePanelIntroductionHeader,
                    variant: "heading-md/semibold",
                    children:
                      eG.default.Messages.VOICE_PANEL_INTRODUCTION_HEADER,
                  }),
                  (0, a.jsx)(c.Text, {
                    className: ej.voicePanelIntroductionText,
                    variant: "text-sm/normal",
                    children: eG.default.Messages.VOICE_PANEL_INTRODUCTION_TEXT,
                  }),
                  (0, a.jsx)(c.Button, {
                    className: ej.voicePanelIntroductionButton,
                    color: c.Button.Colors.BRAND,
                    onClick: this.handleCloseVoicePanelIntroduction,
                    children:
                      eG.default.Messages.VOICE_PANEL_INTRODUCTION_CLOSE,
                  }),
                ],
              }));
        }
      }
      var eK = (0, I.default)(function (e) {
        let t = (0, x.default)(),
          n = (0, d.useStateFromStores)([y.default], () =>
            y.default.getAwaitingRemoteSessionInfo()
          ),
          l = (0, d.useStateFromStores)([e_.default], () =>
            e_.default.getCurrentUser()
          ),
          { channelId: i, ...r } = (0, d.useStateFromStoresObject)(
            [eE.default],
            () =>
              null != t
                ? {
                    channelId: t.channelId,
                    rtcConnectionQuality: eb.RTCConnectionQuality.FINE,
                    rtcConnectionState: eb.RTCConnectionStates.RTC_CONNECTED,
                    rtcConnectionLastPing: 0,
                  }
                : {
                    channelId: eE.default.getChannelId(),
                    rtcConnectionQuality: eE.default.getQuality(),
                    rtcConnectionState: eE.default.getState(),
                    rtcConnectionLastPing: eE.default.getLastPing(),
                  }
          ),
          o = (0, d.useStateFromStores)(
            [eo.default],
            () => eo.default.getChannel(i),
            [i]
          ),
          u = null == o ? void 0 : o.getGuildId(),
          f = (0, d.useStateFromStores)(
            [eu.default],
            () => eu.default.getGuild(u),
            [u]
          ),
          E = (0, d.useStateFromStoresObject)([ec.default], () => ({
            noiseCancellationSupported:
              ec.default.isNoiseCancellationSupported(),
            noiseCancellationActive: ec.default.getNoiseCancellation(),
            noiseCancellationError: ec.default.isNoiseCancellationError(),
            canGoLive: (0, U.default)(ec.default),
          })),
          h = (0, d.useStateFromStores)(
            [ec.default, w.default],
            () =>
              w.default.hasHotspot(
                eU.HotspotLocations.VOICE_PANEL_INTRODUCTION
              ) &&
              (0, eD.isNewUser)(l) &&
              !ec.default.isInteractionRequired() &&
              !(null == o ? void 0 : o.isGuildStageVoice())
          ),
          _ = (0, d.useStateFromStores)(
            [eC.default],
            () => null != i && eC.default.hasVideo(i),
            [i]
          ),
          C = (0, d.useStateFromStores)([ei.default], () =>
            ei.default.getCurrentUserActiveStream()
          ),
          I = (0, d.useStateFromStores)([ed.default], () =>
            ed.default.hasLayers()
          ),
          S = (0, d.useStateFromStores)([k.default], () =>
            k.default.isViewingRoles(u)
          ),
          m = (0, d.useStateFromStores)(
            [ef.default],
            () => S && !ef.default.can(eb.Permissions.VIEW_CHANNEL, o),
            [S, o]
          ),
          p = Z.RtcPanelShowVoiceStates.useSetting(),
          [g, A, R] = (0, d.useStateFromStoresArray)(
            [eI.default, V.default],
            () =>
              (null == o ? void 0 : o.isGuildStageVoice())
                ? [
                    V.default.getMutableParticipants(
                      o.id,
                      Y.StageChannelParticipantNamedIndex.SPEAKER
                    ),
                    V.default.getParticipantsVersion(o.id),
                    null,
                  ]
                : [
                    null,
                    null,
                    null != o ? eI.default.getVoiceStatesForChannel(o) : null,
                  ],
            [o]
          ),
          O = s.useMemo(() => {
            var e, t;
            return null !==
              (t =
                null !==
                  (e =
                    null == g
                      ? void 0
                      : g.map(e => {
                          let { user: t, userNick: n, voiceState: a } = e;
                          return { user: t, nick: n, voiceState: a };
                        })) && void 0 !== e
                  ? e
                  : R) && void 0 !== t
              ? t
              : [];
          }, [g, A, R]),
          [P, D] = s.useState(!1);
        s.useEffect(() => {
          (S || m) && D(!1);
        }, [S, m, D]);
        let { AnalyticsLocationProvider: G } = (0, L.default)(
            v.default.RTC_PANEL
          ),
          j = (0, T.default)(
            null != u ? u : eb.EMPTY_STRING_SNOWFLAKE_ID,
            null == o ? void 0 : o.id
          ),
          F = (0, N.default)(null == o ? void 0 : o.id),
          B = (0, M.default)();
        return (0, a.jsx)(G, {
          children: (0, a.jsxs)("div", {
            className: ej.wrapper,
            children: [
              null != t || null != n
                ? (0, a.jsx)(b.default, {
                    voiceState: t,
                    awaitingRemoteSessionInfo: n,
                  })
                : null,
              (0, a.jsx)(eW, {
                ...e,
                ...E,
                ...r,
                enableActivities: j,
                remoteVoiceState: t,
                guild: f,
                channel: o,
                hasVideo: _,
                selfStream: C,
                hasLayers: I,
                voiceStates: O,
                showVoiceStates: p,
                shouldShowVoicePanelIntroduction: h,
                isPrivateChannelWithEnabledActivities: F,
                isBroadcasting: B,
              }),
              !P && S && null != u
                ? (0, a.jsxs)("div", {
                    className: ej.viewAsRolesWarning,
                    children: [
                      (0, a.jsx)(c.Text, {
                        variant: "text-sm/normal",
                        className: ej.viewAsRolesWarningText,
                        children: m
                          ? eG.default.Messages.VIEW_AS_ROLES_HIDDEN_VC_WARNING
                          : eG.default.Messages.VIEW_AS_ROLES_VOICE_WARNING,
                      }),
                      (0, a.jsx)(c.Button, {
                        className: ej.viewAsRolesWarningButton,
                        size: c.Button.Sizes.MIN,
                        onClick: () => {
                          D(!0);
                        },
                        children: eG.default.Messages.DISMISS,
                      }),
                    ],
                  })
                : null,
            ],
          }),
        });
      });
    },
    452469: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return I;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("987317"),
        l = n("713726"),
        i = n("754493"),
        r = n("374021"),
        o = n("649275"),
        u = n("751661"),
        d = n("734019"),
        c = n("293137"),
        f = n("962541"),
        E = n("782340");
      function h() {
        return (0, a.jsx)(f.default, {
          tooltipText: E.default.Messages.DISCONNECT_SELF,
          onClick: () => {
            (0, l.stopBroadcast)(), s.default.disconnect();
          },
          icon: c.default,
        });
      }
      function _(e) {
        let { channel: t } = e;
        return (0, a.jsx)(f.default, {
          tooltipText: E.default.Messages.AUDIENCE_DISCONNECT,
          onClick: () => {
            if ((0, d.default)(t)) {
              (0, u.openEndStageModal)(t);
              return;
            }
            s.default.disconnect();
          },
          icon: c.default,
        });
      }
      function C(e) {
        let { channel: t } = e;
        return (0, a.jsx)(f.default, {
          tooltipText: E.default.Messages.DISCONNECT_SELF,
          onClick: () => {
            if ((0, o.default)(t)) {
              (0, r.openEndEventModal)(t);
              return;
            }
            s.default.disconnect();
          },
          icon: c.default,
        });
      }
      function I(e) {
        let { channel: t } = e,
          n = (0, i.default)();
        return t.isGuildStageVoice()
          ? (0, a.jsx)(_, { channel: t })
          : n && t.isBroadcastChannel()
            ? (0, a.jsx)(h, {})
            : (0, a.jsx)(C, { channel: t });
      }
    },
    997769: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return x;
          },
        }),
        n("424973"),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("446674"),
        o = n("966900"),
        u = n("838048"),
        d = n("359902"),
        c = n("780624"),
        f = n("77078"),
        E = n("272030"),
        h = n("899633"),
        _ = n("835040"),
        C = n("506885"),
        I = n("981601"),
        S = n("271938"),
        m = n("42887"),
        p = n("211248"),
        T = n("200639"),
        g = n("97347"),
        A = n("151185"),
        N = n("342169"),
        R = n("158998"),
        O = n("39141"),
        v = n("782340"),
        L = n("387822");
      let M = { offset: 2 },
        P = {
          serverDeaf: {
            icon: T.default,
            colorize: !0,
            getStatus: () => v.default.Messages.SERVER_DEAFENED,
          },
          serverMute: {
            icon: g.default,
            colorize: !0,
            getStatus: () => v.default.Messages.SERVER_MUTED,
          },
          deaf: {
            icon: T.default,
            colorize: !1,
            getStatus: () => v.default.Messages.VOICE_CHANNEL_DEAFENED,
          },
          mute: {
            icon: g.default,
            colorize: !1,
            getStatus: () => v.default.Messages.VOICE_CHANNEL_MUTED,
          },
        },
        D = {
          serverDeaf: {
            icon: o.HeadphonesDenyIcon,
            colorize: !0,
            getStatus: () => v.default.Messages.SERVER_DEAFENED,
          },
          serverMute: {
            icon: d.MicrophoneDenyIcon,
            colorize: !0,
            getStatus: () => v.default.Messages.SERVER_MUTED,
          },
          deaf: {
            icon: u.HeadphonesSlashIcon,
            colorize: !1,
            getStatus: () => v.default.Messages.VOICE_CHANNEL_DEAFENED,
          },
          mute: {
            icon: c.MicrophoneSlashIcon,
            colorize: !1,
            getStatus: () => v.default.Messages.VOICE_CHANNEL_MUTED,
          },
          localMute: {
            icon: d.MicrophoneDenyIcon,
            colorize: !1,
            getStatus: () => v.default.Messages.VOICE_CHANNEL_LOCAL_MUTED,
          },
        };
      function y(e) {
        var t, s;
        let {
            channel: l,
            user: o,
            nick: u,
            mute: d,
            deaf: c,
            serverMute: S,
            serverDeaf: p,
          } = e,
          T = (0, r.useStateFromStores)([m.default], () =>
            m.default.isLocalMute(o.id)
          ),
          g = (0, h.default)({ userId: o.id, checkSoundSharing: !0 }),
          A = null !== (t = l.getGuildId()) && void 0 !== t ? t : void 0,
          N = o.getAvatarURL(l.guild_id, 24),
          y = null != u ? u : R.default.getName(o),
          {
            icon: x,
            colorize: b,
            getStatus: U,
          } = null !==
            (s = (function (e) {
              let {
                  serverDeaf: t,
                  deaf: n,
                  serverMute: a,
                  mute: s,
                  localMute: l,
                } = e,
                i = (0, f.useRedesignIconContext)().enabled;
              if (t) return i ? D.serverDeaf : P.serverDeaf;
              if (n) return i ? D.deaf : P.deaf;
              if (a) return i ? D.serverMute : P.serverMute;
              else if (l) return i ? D.localMute : P.mute;
              else if (s) return i ? D.mute : P.mute;
            })({
              serverDeaf: p,
              deaf: c,
              serverMute: S,
              mute: d,
              localMute: T,
            })) && void 0 !== s
            ? s
            : {},
          G =
            null != U
              ? v.default.Messages.VOICE_PANEL_USER_TOOLTIP.format({
                  userName: y,
                  status: U(),
                })
              : y;
        function j(e) {
          null != A
            ? (0, E.openContextMenuLazy)(e, async () => {
                let { default: e } = await n
                  .el("834247")
                  .then(n.bind(n, "834247"));
                return t =>
                  (0, a.jsx)(e, {
                    ...t,
                    user: o,
                    guildId: A,
                    channel: l,
                    showMediaItems: !0,
                  });
              })
            : (0, E.openContextMenuLazy)(e, async () => {
                let { default: e } = await n
                  .el("406784")
                  .then(n.bind(n, "406784"));
                return t =>
                  (0, a.jsx)(e, { ...t, user: o, showMediaItems: !0 });
              });
        }
        return (0, a.jsx)(f.Popout, {
          preload: () =>
            (0, C.default)(o.id, o.getAvatarURL(A, 80), {
              guildId: A,
              channelId: l.id,
            }),
          position: "top",
          renderPopout: e =>
            (0, a.jsx)(I.default, {
              userId: o.id,
              guildId: A,
              channelId: l.id,
              ...e,
            }),
          children: e =>
            (0, a.jsx)(f.Tooltip, {
              text: G,
              children: t =>
                (0, a.jsx)(f.Clickable, {
                  ...t,
                  ...e,
                  className: L.avatarContainer,
                  onContextMenu: j,
                  focusProps: M,
                  children: (0, a.jsx)(_.default, {
                    shakeLocation: O.ShakeLocation.VOICE_USER,
                    isShaking: g,
                    children: (0, a.jsx)("div", {
                      className: i(L.avatar, { [L.speaking]: g }),
                      style: { backgroundImage: "url(".concat(N, ")") },
                      children:
                        null != x
                          ? (0, a.jsx)(x, {
                              className: i(L.avatarIconOverlay, {
                                [L.avatarIconRed]: b,
                              }),
                              color: "currentColor",
                              width: 16,
                              height: 16,
                              foreground: L.avatarIconRed,
                            })
                          : null,
                    }),
                  }),
                }),
            }),
        });
      }
      function x(e) {
        let { voiceStates: t, channel: n, className: l } = e,
          [o, u] = s.useState(!1),
          d = o ? N.default : A.default,
          c = (0, a.jsx)(p.default, {
            className: L.expandButton,
            onClick: () => u(!o),
            color: p.CircleIconButtonColors.PRIMARY,
            size: p.CircleIconButtonSizes.SIZE_24,
            tooltip: o
              ? v.default.Messages.VOICE_PANEL_HIDE_EXTRAS
              : v.default.Messages.VOICE_PANEL_SHOW_EXTRAS,
            icon: (0, a.jsx)(d, { width: 16, height: 16 }),
            focusProps: M,
          }),
          E = (0, r.useStateFromStores)(
            [S.default],
            () => S.default.getId(),
            []
          ),
          [h, _] = (function (e, t) {
            let n = [];
            for (let a of e) {
              if (a.user.id !== t) {
                if (!n.some(e => e.user.id === a.user.id)) {
                  if (n.length >= 7) return [n, !0];
                  n.push(a);
                }
              }
            }
            return [n, !1];
          })(t, E),
          C = _ && o ? t : h;
        return C.length <= 0
          ? null
          : (0, a.jsx)(f.ScrollerThin, {
              className: i(L.scroller, l),
              fade: !0,
              children: (0, a.jsxs)("div", {
                className: L.voiceUsers,
                role: "group",
                "aria-label": v.default.Messages.VOICE_PANEL_USERS_A11Y_LABEL,
                children: [
                  C.map(e => {
                    let { user: t, nick: s, voiceState: l } = e;
                    return t.id !== E
                      ? (0, a.jsx)(
                          y,
                          {
                            channel: n,
                            user: t,
                            nick: s,
                            mute: l.isVoiceMuted(),
                            deaf: l.isVoiceDeafened(),
                            video: l.selfVideo,
                            serverMute: l.mute,
                            serverDeaf: l.deaf,
                          },
                          t.id
                        )
                      : null;
                  }),
                  _ ? c : null,
                ],
              }),
            });
      }
    },
    671088: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useIsEligibleForFamilyCenterVCJoin: function () {
            return l;
          },
        });
      var a = n("862205");
      let s = (0, a.createExperiment)({
        kind: "user",
        id: "2024-02_family_center_vc_join",
        label: "Family Center VC Join",
        defaultConfig: { enabled: !1 },
        treatments: [
          {
            id: 1,
            label: "Enable VC Join in Family Center",
            config: { enabled: !0 },
          },
        ],
      });
      function l(e) {
        let { location: t, autoTrackExposure: n = !1 } = e,
          { enabled: a } = s.useExperiment(
            { location: t },
            { autoTrackExposure: n }
          );
        return a;
      }
    },
    368874: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useAgeSpecificText: function () {
            return s;
          },
        });
      var a = n("775032");
      let s = (e, t) => {
        let n = (0, a.default)();
        return n ? t : e;
      };
    },
    648750: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useFamilyCenterActions: function () {
            return o;
          },
        }),
        n("222007");
      var a = n("884691"),
        s = n("448993"),
        l = n("544556"),
        i = n("822825"),
        r = n("922832");
      function o(e) {
        let { onError: t, onSuccess: n } = null != e ? e : {},
          [o, u] = a.useState(!1),
          [d, c] = a.useState(!1),
          [f, E] = a.useState(!1),
          [h, _] = a.useState(!1),
          [C, I] = a.useState(!1),
          [S, m] = a.useState(!1),
          [p, T] = a.useState(!1),
          [g, A] = a.useState(!1),
          N = o || d || f || h || S || g,
          R = a.useCallback(
            async e => {
              if (!N) {
                u(!0);
                try {
                  await (0, l.updateLinkForUserId)(
                    e.id,
                    r.UserLinkStatus.ACTIVE
                  ),
                    null == n || n();
                } catch (n) {
                  let e = new s.APIError(n);
                  null == t || t(e);
                } finally {
                  u(!1);
                }
              }
            },
            [N, t, n]
          ),
          O = a.useCallback(
            async e => {
              if (!N) {
                c(!0);
                try {
                  await (0, l.updateLinkForUserId)(
                    e.id,
                    r.UserLinkStatus.DECLINED
                  ),
                    null == n || n();
                } catch (n) {
                  let e = new s.APIError(n);
                  null == t || t(e);
                } finally {
                  c(!1);
                }
              }
            },
            [N, t, n]
          ),
          v = a.useCallback(
            async e => {
              if (!N) {
                E(!0);
                try {
                  await (0, l.updateLinkForUserId)(
                    e.id,
                    r.UserLinkStatus.INACTIVE
                  ),
                    null == n || n();
                } catch (n) {
                  let e = new s.APIError(n);
                  null == t || t(e);
                } finally {
                  E(!1);
                }
              }
            },
            [N, t, n]
          ),
          L = a.useCallback(
            async e => {
              if (!N) {
                _(!0);
                try {
                  await (0, l.removeLinkForUserId)(e.id), null == n || n();
                } catch (n) {
                  let e = new s.APIError(n);
                  null == t || t(e);
                } finally {
                  _(!1);
                }
              }
            },
            [N, t, n]
          ),
          M = a.useCallback(async () => {
            if (!C) {
              I(!0);
              try {
                await (0, l.getLinkCodeForCurrentUser)(), null == n || n();
              } catch (n) {
                let e = new s.APIError(n);
                null == t || t(e);
              } finally {
                I(!1);
              }
            }
          }, [C, t, n]),
          P = a.useCallback(
            async e => {
              if (!p) {
                T(!0);
                try {
                  await l.default.fetchTeenActivity(e), null == n || n();
                } catch (n) {
                  let e = new s.APIError(n);
                  null == t || t(e);
                } finally {
                  T(!1);
                }
              }
            },
            [p, t, n]
          ),
          D = a.useCallback(
            async (e, a) => {
              if (!S) {
                m(!0);
                try {
                  await l.default.requestLink(e, a), null == n || n();
                } catch (n) {
                  let e = new s.APIError(n);
                  null == t || t(e);
                } finally {
                  m(!1);
                }
              }
            },
            [S, t, n]
          ),
          y = a.useCallback(
            async e => {
              let n = i.default.getActionsForDisplayType(e),
                a = n[n.length - 1],
                r = i.default.getStartId(),
                o = i.default.getSelectedTeenId();
              if (!g && null != r && null != o) {
                A(!0);
                try {
                  await l.default.fetchMoreTeenActivity(o, e, r, a.event_id);
                } catch (n) {
                  let e = new s.APIError(n);
                  null == t || t(e);
                } finally {
                  A(!1);
                }
              }
            },
            [g, t]
          );
        return {
          acceptLinkRequest: R,
          declineLinkRequest: O,
          disconnectLinkRequest: v,
          cancelLinkRequest: L,
          selectTeenUser: P,
          getLinkCode: M,
          requestLink: D,
          loadMore: y,
          isAcceptLoading: o,
          isDeclineLoading: d,
          isDisconnectLoading: f,
          isCancelLoading: h,
          isGetLinkCodeLoading: C,
          isSelectTeenUserLoading: p,
          isRequestingLink: S,
          isMoreLoading: g,
        };
      }
    },
    710514: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useActionsForDisplayType: function () {
            return i;
          },
          useActionTotalsForDisplayType: function () {
            return r;
          },
          useHasActionForAnyDisplayType: function () {
            return o;
          },
        });
      var a = n("65597"),
        s = n("822825"),
        l = n("922832");
      function i(e) {
        let t = (0, a.useStateFromStoresArray)([s.default], () =>
          s.default.getActionsForDisplayType(e)
        );
        return t;
      }
      function r(e) {
        return (0, a.default)([s.default], () =>
          s.default.getTotalForDisplayType(e)
        );
      }
      function o() {
        return (0, a.default)([s.default], () =>
          Object.values(l.TeenActionDisplayType).some(e => {
            let t = s.default.getTotalForDisplayType(e);
            return t > 0;
          })
        );
      }
    },
    104887: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var a = n("65597"),
        s = n("599110"),
        l = n("544556"),
        i = n("822825"),
        r = n("922832"),
        o = n("49111"),
        u = () => {
          let e = (0, a.default)([i.default], () => i.default.getSelectedTab());
          return {
            selectedTab: e,
            handleTabChange: e => {
              l.default.selectTab(e),
                s.default.track(o.AnalyticEvents.FAMILY_CENTER_ACTION, {
                  action: r.FamilyCenterAction.TabChange,
                  tab: e,
                });
            },
          };
        };
    },
    771783: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useSelectedTeenId: function () {
            return l;
          },
        });
      var a = n("65597");
      n("697218");
      var s = n("822825");
      let l = () =>
        (0, a.default)([s.default], () => s.default.getSelectedTeenId());
    },
    339853: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useSelectedTeenUser: function () {
            return r;
          },
          useTeenUserForId: function () {
            return o;
          },
        });
      var a = n("65597"),
        s = n("697218"),
        l = n("822825"),
        i = n("775032");
      let r = () => {
          let e = (0, i.default)();
          return (0, a.default)([l.default, s.default], () => {
            if (!e) return s.default.getCurrentUser();
            let t = l.default.getSelectedTeenId();
            if (null !== t) return s.default.getUser(t);
          });
        },
        o = e =>
          (0, a.default)([s.default], () => {
            let t = s.default.getUser(e);
            if (null != t) return t;
          });
    },
    25132: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useUserForLinkStatus: function () {
            return d;
          },
          useUserQRLinkUrl: function () {
            return c;
          },
          useHasMaxConnections: function () {
            return f;
          },
          usePendingRequestCount: function () {
            return E;
          },
          useAcceptedRequestsCount: function () {
            return h;
          },
          useActivityWindowTimeStamp: function () {
            return _;
          },
          useLinkTimestampText: function () {
            return C;
          },
        });
      var a = n("65597"),
        s = n("697218"),
        l = n("822825"),
        i = n("117933"),
        r = n("771783"),
        o = n("775032"),
        u = n("922832");
      function d(e) {
        let t = (0, a.default)([l.default], () => l.default.getLinkedUsers()),
          n = Object.values(t).filter(t => null != t && t.link_status === e),
          i = n
            .sort(
              (e, t) =>
                new Date(e.updated_at).getTime() -
                new Date(t.updated_at).getTime()
            )
            .map(e => {
              var t;
              return null !== (t = e.user_id) && void 0 !== t ? t : void 0;
            })
            .filter(e => null != e);
        return (0, a.useStateFromStoresArray)([s.default], () =>
          i.map(e => s.default.getUser(e))
        ).filter(e => null != e);
      }
      function c() {
        let e = (0, a.default)([l.default], () => l.default.getLinkCode()),
          t = (0, a.default)([s.default], () => s.default.getCurrentUser());
        return null == e || null == t
          ? null
          : (0, u.FAMILY_CENTER_REQUEST_QR_CODE_URL)(t.id, e);
      }
      function f() {
        let e = (0, o.default)(),
          t = d(u.UserLinkStatus.ACTIVE),
          n = e
            ? u.MAX_PARENT_TO_TEEN_ACTIVE_CONNECTIONS
            : u.MAX_TEEN_TO_PARENT_ACTIVE_CONNECTIONS;
        return t.length >= n;
      }
      function E() {
        let e = (0, a.default)([s.default], () => s.default.getCurrentUser()),
          t = (0, a.default)([l.default], () => l.default.getLinkedUsers());
        if (null == e) return 0;
        let n = Object.values(t).filter(
          t =>
            null != t &&
            t.link_status === u.UserLinkStatus.PENDING &&
            e.id !== t.requestor_id
        );
        return n.length;
      }
      function h() {
        let e = (0, a.default)([s.default], () => s.default.getCurrentUser()),
          t = (0, a.default)([l.default], () => l.default.getLinkedUsers());
        if (null == e) return 0;
        let n = Object.values(t).filter(
          e => null != e && e.link_status === u.UserLinkStatus.ACTIVE
        );
        return n.length;
      }
      function _(e) {
        let t = (0, r.useSelectedTeenId)(),
          n = (0, a.default)([l.default], () =>
            null == t ? null : l.default.getRangeStartTimestamp()
          );
        return null == n
          ? null
          : (0, i.formatUserActivityTimestamp)(
              new Date(n).getTime(),
              () => e,
              7
            );
      }
      function C(e, t) {
        let n = (0, a.default)([l.default], () =>
          l.default.getLinkTimestamp(e)
        );
        return null != n
          ? (0, i.formatLinkTimestamp)(
              Date.parse(n),
              t === u.UserLinkStatus.PENDING
                ? u.PENDING_LINK_REQUEST_TIMESTAMP_FORMATTER
                : u.ACCEPTED_LINK_REQUEST_TIMESTAMP_FORMATTER
            )
          : null;
      }
    },
    322372: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return C;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("77078"),
        l = n("368874"),
        i = n("104887"),
        r = n("775032"),
        o = n("25132"),
        u = n("806468"),
        d = n("922832"),
        c = n("782340"),
        f = n("813614"),
        E = n("358616"),
        h = n("215529");
      let _ = () => {
        let e = (0, o.useUserForLinkStatus)(d.UserLinkStatus.ACTIVE),
          t = (0, r.default)(),
          { handleTabChange: n } = (0, i.default)(),
          l = (0, o.useHasMaxConnections)();
        return l || (t && e.length > 0)
          ? null
          : (0, a.jsx)("div", {
              className: f.button,
              children: t
                ? (0, a.jsx)(s.Button, {
                    fullWidth: !1,
                    size: s.ButtonSizes.LARGE,
                    onClick: () => n(d.FamilyCenterSubPages.REQUESTS),
                    children: c.default.Messages.GET_STARTED,
                  })
                : (0, a.jsx)(u.default, {}),
            });
      };
      var C = () => {
        let e = (0, r.default)(),
          t = (0, l.useAgeSpecificText)(
            c.default.Messages.FAMILY_CENTER_ACTIVITY_BANNER_HEADER_TEEN,
            c.default.Messages.FAMILY_CENTER_ACTIVITY_BANNER_HEADER_PARENT
          ),
          n = (0, l.useAgeSpecificText)(
            c.default.Messages.FAMILY_CENTER_ACTIVITY_BANNER_DESCRIPTION_TEEN.format(
              {
                articleLink:
                  "https://support.discord.com/hc/articles/14155060633623",
              }
            ),
            c.default.Messages.FAMILY_CENTER_ACTIVITY_BANNER_DESCRIPTION_PARENT.format(
              {
                articleLink:
                  "https://support.discord.com/hc/articles/14155043715735",
              }
            )
          );
        return (0, a.jsxs)("div", {
          className: f.container,
          children: [
            (0, a.jsxs)("div", {
              children: [
                (0, a.jsx)("div", {
                  children: (0, a.jsxs)("div", {
                    className: f.headerText,
                    children: [
                      (0, a.jsx)(s.Heading, {
                        variant: "heading-xl/medium",
                        children: (0, a.jsx)(s.HeadingLevel, { children: t }),
                      }),
                      (0, a.jsx)(s.Text, {
                        variant: "text-sm/medium",
                        color: "text-muted",
                        children: n,
                      }),
                    ],
                  }),
                }),
                (0, a.jsx)(_, {}),
              ],
            }),
            (0, a.jsx)("div", {
              className: f.headerImage,
              children: (0, a.jsx)("img", {
                src: e ? E : h,
                alt: c.default.Messages.FAMILY_CENTER_ACTIVITY_BANNER_IMAGE_ALT,
              }),
            }),
          ],
        });
      };
    },
    447342: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return w;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("627445"),
        i = n.n(l),
        r = n("65597"),
        o = n("77078"),
        u = n("462579"),
        d = n("266926"),
        c = n("599110"),
        f = n("299039"),
        E = n("822825"),
        h = n("117933"),
        _ = n("671088"),
        C = n("368874"),
        I = n("648750"),
        S = n("710514"),
        m = n("339853"),
        p = n("775032"),
        T = n("25132"),
        g = n("453479"),
        A = n("975344"),
        N = n("57"),
        R = n("863972"),
        O = n("884706"),
        v = n("424373"),
        L = n("922832"),
        M = n("49111"),
        P = n("782340"),
        D = n("676899");
      function y() {
        let e = s.useCallback(() => {
          (0, o.openModalLazy)(async () => {
            let { default: e } = await n.el("538969").then(n.bind(n, "538969"));
            return t => (0, a.jsx)(e, { ...t });
          });
        }, []);
        return (0, a.jsx)(o.Clickable, {
          className: D.tooltip,
          onClick: e,
          children: (0, a.jsx)(d.default, {
            className: D.icon,
            width: 15,
            height: 15,
          }),
        });
      }
      function x(e) {
        let { displayType: t } = e,
          n = s.useCallback(() => {
            (0, o.showToast)(
              (0, o.createToast)(
                P.default.Messages.FAMILY_CENTER_ERROR_GENERIC_TOAST,
                o.ToastType.FAILURE
              )
            );
          }, []),
          l = (0, p.default)(),
          r = (0, S.useActionsForDisplayType)(t),
          u = (0, S.useActionTotalsForDisplayType)(t),
          { loadMore: d, isMoreLoading: c } = (0, I.useFamilyCenterActions)({
            onError: n,
          }),
          E = L.ACTION_TO_TEXT.get(t),
          [C, m] = s.useState(L.FAMILY_CENTER_ITEMS_SHOWN_INCREMENTS),
          T = (0, _.useIsEligibleForFamilyCenterVCJoin)({
            location: "family_center_activity_section_web",
          }),
          g = s.useCallback(() => {
            m(e => e + L.FAMILY_CENTER_ITEMS_SHOWN_INCREMENTS), d(t);
          }, [t, d]);
        i(E, "No text for action type");
        let R = E.sectionHeader(u),
          O = s.useCallback(
            e => {
              let { row: t } = e,
                n = r[t];
              return (0, h.isUserAction)(n)
                ? (0, a.jsx)(
                    N.default,
                    {
                      userId: n.entity_id,
                      timestamp: f.default.extractTimestamp(n.event_id),
                      timestampFormatter: E.timestampFormatter,
                    },
                    n.event_id
                  )
                : (0, h.isGuildAction)(n)
                  ? (0, a.jsx)(A.default, { guildId: n.entity_id }, n.event_id)
                  : void 0;
            },
            [r, E.timestampFormatter]
          ),
          v = s.useCallback(
            () =>
              (0, a.jsxs)(a.Fragment, {
                children: [
                  (0, a.jsx)(o.Text, {
                    className: D.sectionHeader,
                    variant: "eyebrow",
                    color: "header-secondary",
                    children: R,
                  }),
                  void 0 !== E.sectionDescription
                    ? (0, a.jsx)(o.Text, {
                        className: D.sectionDescription,
                        variant: "text-md/medium",
                        color: "text-muted",
                        children: E.sectionDescription(null != l && l, T),
                      })
                    : null,
                ],
              }),
            [R, E, l, T]
          );
        if (0 === r.length) return null;
        let M = r.slice(0, C);
        return (0, a.jsxs)("div", {
          className: D.actionSection,
          children: [
            v(),
            (0, a.jsx)("div", {
              className: D.actions,
              style: { maxHeight: 65 * M.length },
              children: M.map((e, t) => O({ row: t })),
            }),
            M.length !== u
              ? (0, a.jsx)(o.Clickable, {
                  className: D.loadMoreBar,
                  onClick: g,
                  role: "button",
                  children: c
                    ? (0, a.jsx)(o.Spinner, {
                        type: o.Spinner.Type.PULSING_ELLIPSIS,
                        className: D.spinner,
                      })
                    : (0, a.jsx)(o.Text, {
                        className: D.loadMore,
                        variant: "text-sm/bold",
                        children:
                          P.default.Messages.FAMILY_CENTER_ACTIVITY_MORE.format(
                            {
                              pageSize: Math.min(
                                u - M.length,
                                L.FAMILY_CENTER_ITEMS_SHOWN_INCREMENTS
                              ),
                            }
                          ),
                      }),
                })
              : null,
          ],
        });
      }
      let b = () => {
          let e = (0, p.default)(),
            t = (0, T.useUserForLinkStatus)(L.UserLinkStatus.ACTIVE),
            n = (0, C.useAgeSpecificText)(
              P.default.Messages.FAMILY_CENTER_ACTIVITY_OVERVIEW_PREFACE_TEEN.format(
                { activeLinks: t.length }
              ),
              P.default.Messages.FAMILY_CENTER_ACTIVITY_OVERVIEW_PREFACE_PARENT
            ),
            s = (0, h.getActivityWindowTimestampFormatter)(!!e),
            l = (0, T.useActivityWindowTimeStamp)(s);
          return e && t.length > 1
            ? (0, a.jsx)(o.Text, { variant: "eyebrow", children: l })
            : (0, a.jsxs)(a.Fragment, {
                children: [
                  e ? null : (0, a.jsx)(u.default, { className: D.icon }),
                  (0, a.jsx)(o.Text, { variant: "eyebrow", children: n }),
                ],
              });
        },
        U = e => {
          let {
              userId: t,
              subText: n,
              avatarSize: s = o.AvatarSizes.SIZE_40,
            } = e,
            l = (0, m.useTeenUserForId)(t);
          return void 0 === l
            ? null
            : (0, a.jsxs)("div", {
                className: D.accountRow,
                children: [
                  (0, a.jsx)(R.FamilyCenterAvatar, { user: l, avatarSize: s }),
                  (0, a.jsxs)("div", {
                    className: D.headerText,
                    children: [
                      (0, a.jsx)(O.default, { user: l }),
                      void 0 !== n
                        ? (0, a.jsx)(o.Text, {
                            variant: "text-sm/medium",
                            color: "text-muted",
                            children: n,
                          })
                        : null,
                    ],
                  }),
                ],
              });
        },
        G = () => {
          let e = (0, T.useUserForLinkStatus)(L.UserLinkStatus.ACTIVE),
            t = (0, r.default)([E.default], () =>
              E.default.getSelectedTeenId()
            ),
            { selectTeenUser: n } = (0, I.useFamilyCenterActions)({}),
            l = e.map(e => ({ label: e.id, value: e.id })),
            i = s.useCallback(
              e =>
                (0, a.jsx)(U, {
                  userId: e.value,
                  avatarSize: o.AvatarSizes.SIZE_24,
                }),
              []
            );
          return (0, a.jsx)(o.Select, {
            className: D.select,
            renderOptionLabel: i,
            renderOptionValue: e => {
              let [t] = e;
              return i(t);
            },
            serialize: e => e,
            select: e => {
              n(e),
                c.default.track(M.AnalyticEvents.FAMILY_CENTER_ACTION, {
                  action: L.FamilyCenterAction.SelectTeen,
                });
            },
            isSelected: e => e === t,
            options: l,
          });
        },
        j = e => {
          let { userId: t } = e,
            n = (0, p.default)(),
            s = (0, T.useUserForLinkStatus)(L.UserLinkStatus.ACTIVE),
            l = (0, h.getActivityWindowTimestampFormatter)(!!n),
            i = (0, T.useActivityWindowTimeStamp)(l);
          return n && 1 !== s.length
            ? (0, a.jsx)(G, {})
            : (0, a.jsx)(U, { userId: t, subText: i });
        };
      var w = e => {
        let { user: t } = e,
          n = Array.from(L.ACTION_TO_TEXT.entries()),
          s = (0, S.useHasActionForAnyDisplayType)(),
          l = (0, h.getEmptyActivityFormatter)(),
          i = (0, T.useActivityWindowTimeStamp)(l);
        return (0, a.jsxs)("div", {
          className: D.container,
          children: [
            (0, a.jsxs)("div", {
              className: D.connectedCounter,
              children: [(0, a.jsx)(b, {}), (0, a.jsx)(y, {})],
            }),
            (0, a.jsxs)("div", {
              className: D.card,
              children: [
                (0, a.jsx)("div", {
                  className: D.header,
                  children: (0, a.jsx)(j, { userId: t.id }),
                }),
                (0, a.jsxs)("div", {
                  className: D.content,
                  children: [
                    (0, a.jsx)("div", {
                      className: D.activityCounterRow,
                      children: n.map(e => {
                        let [t, n] = e;
                        return (0, a.jsx)(
                          g.default,
                          { displayType: t, header: n.tooltipHeader() },
                          "counter-".concat(t)
                        );
                      }),
                    }),
                    (0, a.jsx)("div", {
                      className: D.activityOverview,
                      children: s
                        ? n.map(e => {
                            let [t] = e;
                            return (0, a.jsx)(
                              x,
                              { displayType: t },
                              "".concat(t, "-list")
                            );
                          })
                        : (0, a.jsx)(v.default, {
                            className: D.emptyActivity,
                            text: null != i ? i : "",
                          }),
                    }),
                  ],
                }),
              ],
            }),
          ],
        });
      };
    },
    453479: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("77078"),
        l = n("710514"),
        i = n("432813"),
        r = e => {
          let { header: t, displayType: n } = e,
            r = (0, l.useActionTotalsForDisplayType)(n);
          return (0, a.jsxs)("div", {
            className: i.counter,
            children: [
              (0, a.jsx)(s.Heading, {
                variant: "heading-xxl/medium",
                color: r > 0 ? "text-brand" : "text-muted",
                children: (0, a.jsx)(s.HeadingLevel, {
                  children: null != r ? r : 0,
                }),
              }),
              (0, a.jsx)(s.Text, { variant: "text-sm/semibold", children: t }),
            ],
          });
        };
    },
    299138: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("77078"),
        l = n("368874"),
        i = n("328911"),
        r = n("782340"),
        o = n("866260"),
        u = n("392963"),
        d = () => {
          let e = (0, l.useAgeSpecificText)(
            r.default.Messages
              .FAMILY_CENTER_ACTIVITY_DATA_CONFIRMATION_BANNER_DESCRIPTION_TEEN,
            r.default.Messages
              .FAMILY_CENTER_ACTIVITY_DATA_CONFIRMATION_BANNER_DESCRIPTION_PARENT
          );
          return (0, a.jsxs)("div", {
            className: o.container,
            children: [
              (0, a.jsxs)("div", {
                className: o.content,
                children: [
                  (0, a.jsx)(s.Heading, {
                    className: o.header,
                    variant: "heading-md/bold",
                    children: (0, a.jsx)(s.HeadingLevel, {
                      children:
                        r.default.Messages
                          .FAMILY_CENTER_ACTIVITY_DATA_CONFIRMATION_BANNER_HEADER,
                    }),
                  }),
                  (0, a.jsx)(s.Text, {
                    className: o.description,
                    variant: "text-sm/medium",
                    color: "text-muted",
                    children: e,
                  }),
                  (0, a.jsx)(i.default, {}),
                ],
              }),
              (0, a.jsx)("div", {
                className: o.artContainer,
                children: (0, a.jsx)("img", {
                  src: u,
                  alt: r.default.Messages
                    .FAMILY_CENTER_ACTIVITY_DATA_CONFIRMATION_BANNER_ALT,
                }),
              }),
            ],
          });
        };
    },
    975344: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("414456"),
        l = n.n(s),
        i = n("617258"),
        r = n("65597"),
        o = n("77078"),
        u = n("580357"),
        d = n("822825"),
        c = n("49111"),
        f = n("782340"),
        E = n("756755");
      let h = [18, 18, 16, 16, 14, 12, 10];
      var _ = e => {
        let { guildId: t } = e,
          n = (0, r.default)([d.default], () => d.default.getGuild(t));
        if (void 0 === n) return null;
        let s =
            n.hasFeature(c.GuildFeatures.VERIFIED) ||
            n.hasFeature(c.GuildFeatures.PARTNERED),
          _ = n.toString(),
          C = n.getIconURL(40, !0),
          I = null,
          S = h[h.length - 1];
        if (null == n.icon && null != _) {
          var m;
          S =
            null !== (m = h[(I = (0, i.getAcronym)(_)).length - 1]) &&
            void 0 !== m
              ? m
              : h[h.length - 1];
        }
        return (0, a.jsxs)("div", {
          className: E.container,
          children: [
            (0, a.jsxs)("div", {
              style: { fontSize: S },
              children: [
                null != I
                  ? (0, a.jsx)("div", {
                      className: l(E.childWrapper, E.acronym),
                      "aria-hidden": !0,
                      children: I,
                    })
                  : null,
                null != C
                  ? (0, a.jsx)(o.Avatar, {
                      src: n.getIconURL(40, !0),
                      size: o.AvatarSizes.SIZE_40,
                      "aria-hidden": !0,
                    })
                  : null,
              ],
            }),
            (0, a.jsxs)("div", {
              className: E.descriptors,
              children: [
                (0, a.jsxs)("div", {
                  className: E.header,
                  children: [
                    s
                      ? (0, a.jsx)(u.default, {
                          guild: n,
                          tooltipPosition: "bottom",
                          tooltipColor: o.Tooltip.Colors.PRIMARY,
                          className: E.guildBadge,
                        })
                      : null,
                    (0, a.jsx)(o.Text, {
                      variant: "text-md/semibold",
                      children: n.toString(),
                    }),
                  ],
                }),
                void 0 !== n.approximateMemberCount
                  ? (0, a.jsx)(o.Text, {
                      variant: "text-xs/medium",
                      color: "text-muted",
                      children:
                        f.default.Messages.FAMILY_CENTER_ACTIVITY_GUILD_ROW_MEMBER_COUNT.format(
                          { members: n.approximateMemberCount }
                        ),
                    })
                  : null,
              ],
            }),
          ],
        });
      };
    },
    544553: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return T;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("65597"),
        l = n("225288"),
        i = n("77078"),
        r = n("697218"),
        o = n("171710"),
        u = n("462579"),
        d = n("368874"),
        c = n("339853"),
        f = n("25132"),
        E = n("322372"),
        h = n("447342"),
        _ = n("299138"),
        C = n("893302"),
        I = n("490013"),
        S = n("922832"),
        m = n("782340"),
        p = n("496420"),
        T = () => {
          let e = (0, f.useUserForLinkStatus)(S.UserLinkStatus.ACTIVE),
            t = (0, c.useSelectedTeenUser)(),
            n = (0, s.default)([r.default], () => r.default.getCurrentUser()),
            T = (0, d.useAgeSpecificText)(
              m.default.Messages
                .FAMILY_CENTER_FEATURE_CARD_MESSAGES_DESCRIPTION_TEEN,
              m.default.Messages
                .FAMILY_CENTER_FEATURE_CARD_MESSAGES_DESCRIPTION_PARENT
            ),
            g = (0, d.useAgeSpecificText)(
              m.default.Messages
                .FAMILY_CENTER_FEATURE_CARD_SHARING_DESCRIPTION_TEEN,
              m.default.Messages
                .FAMILY_CENTER_FEATURE_CARD_SHARING_DESCRIPTION_PARENT
            ),
            A = (0, d.useAgeSpecificText)(
              m.default.Messages
                .FAMILY_CENTER_FEATURE_CARD_PAIRING_DESCRIPTION_TEEN,
              m.default.Messages
                .FAMILY_CENTER_FEATURE_CARD_PAIRING_DESCRIPTION_PARENT
            ),
            N = (0, i.useRedesignIconContext)().enabled;
          return void 0 === n
            ? null
            : (0, a.jsxs)("div", {
                className: p.container,
                children: [
                  (0, a.jsx)("div", {
                    className: p.banner,
                    children: (0, a.jsx)(E.default, {}),
                  }),
                  (0, a.jsxs)("div", {
                    className: p.featureCards,
                    children: [
                      (0, a.jsx)(C.default, {
                        iconClassName: p.chatCheckIcon,
                        icon: o.default,
                        header:
                          m.default.Messages
                            .FAMILY_CENTER_FEATURE_CARD_MESSAGES_HEADER,
                        description: T,
                      }),
                      (0, a.jsx)(C.default, {
                        icon: u.default,
                        header:
                          m.default.Messages
                            .FAMILY_CENTER_FEATURE_CARD_SHARING_HEADER,
                        description: g,
                      }),
                      (0, a.jsx)(C.default, {
                        icon: N ? l.QrCodeCameraIcon : I.default,
                        header:
                          m.default.Messages
                            .FAMILY_CENTER_FEATURE_CARD_PAIRING_HEADER,
                        description: A,
                      }),
                    ],
                  }),
                  0 === e.length ? (0, a.jsx)(_.default, {}) : null,
                  void 0 !== t && e.length > 0
                    ? (0, a.jsx)(h.default, { user: t })
                    : null,
                ],
              });
        };
    },
    57: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("65597"),
        l = n("77078"),
        i = n("697218"),
        r = n("158998"),
        o = n("117933"),
        u = n("863972"),
        d = n("985688"),
        c = e => {
          let { userId: t, timestamp: n, timestampFormatter: c } = e,
            f = (0, s.default)([i.default], () => i.default.getUser(t));
          return void 0 === f
            ? null
            : (0, a.jsxs)("div", {
                className: d.container,
                children: [
                  (0, a.jsx)(u.FamilyCenterAvatar, {
                    user: f,
                    avatarSize: l.AvatarSizes.SIZE_40,
                  }),
                  (0, a.jsx)("div", {
                    children: (0, a.jsxs)("div", {
                      className: d.descriptors,
                      children: [
                        (0, a.jsx)(l.Text, {
                          variant: "text-md/semibold",
                          children: r.default.getName(f),
                        }),
                        (0, a.jsx)(l.Text, {
                          variant: "text-xs/medium",
                          color: "text-muted",
                          children: (0, o.formatUserActivityTimestamp)(
                            new Date(n).getTime(),
                            c
                          ),
                        }),
                      ],
                    }),
                  }),
                ],
              });
        };
    },
    863972: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          FamilyCenterAvatar: function () {
            return d;
          },
          default: function () {
            return c;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("77078"),
        l = n("106435"),
        i = n("50885"),
        r = n("782340"),
        o = n("468540");
      let u = i.default.getEnableHardwareAcceleration()
          ? s.AnimatedAvatar
          : s.Avatar,
        d = e => {
          let { user: t, avatarSize: n = s.AvatarSizes.SIZE_48 } = e,
            {
              avatarSrc: i,
              avatarDecorationSrc: d,
              eventHandlers: c,
            } = (0, l.default)({ user: t, size: n });
          return (0, a.jsx)("div", {
            ...c,
            children: (0, a.jsx)(u, {
              className: o.avatar,
              src: i,
              avatarDecoration: d,
              size: n,
              "aria-label": r.default.Messages.FAMILY_CENTER_AVATAR_ARIA.format(
                { name: t.username }
              ),
            }),
          });
        };
      var c = e => {
        let { currentUser: t, otherUser: n, children: s } = e;
        return (0, a.jsx)("div", {
          className: o.avatarPairContainer,
          children: (0, a.jsxs)("div", {
            className: o.avatarPair,
            children: [
              (0, a.jsx)(d, { user: t }),
              s,
              (0, a.jsx)(d, { user: n }),
            ],
          }),
        });
      };
    },
    328911: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return C;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("414456"),
        l = n.n(s),
        i = n("77078"),
        r = n("945330"),
        o = n("549586"),
        u = n("564875"),
        d = n("368874"),
        c = n("589333"),
        f = n("782340"),
        E = n("485762"),
        h = n("890957");
      let _ = e => {
        let { header: t, description: n, icon: s, inModal: r } = e;
        return (0, a.jsxs)("div", {
          className: l(E.row, h.marginBottom8, { [E.inModal]: r }),
          children: [
            (0, a.jsx)("div", { className: E.iconContainer, children: s }),
            (0, a.jsxs)("div", {
              children: [
                (0, a.jsx)(i.Text, {
                  className: E.header,
                  variant: "text-sm/bold",
                  color: "header-primary",
                  children: t,
                }),
                (0, a.jsx)(i.Text, {
                  variant: "text-xs/medium",
                  color: "header-secondary",
                  children: n,
                }),
              ],
            }),
          ],
        });
      };
      var C = e => {
        let { inModal: t } = e,
          n = (0, d.useAgeSpecificText)(
            f.default.Messages
              .FAMILY_CENTER_DATA_CONFIRMATION_INCLUDED_HEADER_TEEN,
            f.default.Messages
              .FAMILY_CENTER_DATA_CONFIRMATION_INCLUDED_HEADER_PARENT
          ),
          s = (0, d.useAgeSpecificText)(
            f.default.Messages
              .FAMILY_CENTER_DATA_CONFIRMATION_EXCLUDED_HEADER_TEEN,
            f.default.Messages
              .FAMILY_CENTER_DATA_CONFIRMATION_EXCLUDED_HEADER_PARENT
          ),
          l = (0, d.useAgeSpecificText)(
            f.default.Messages
              .FAMILY_CENTER_DATA_CONFIRMATION_EXCLUDED_CONTENT_HEADER_TEEN,
            f.default.Messages
              .FAMILY_CENTER_DATA_CONFIRMATION_EXCLUDED_CONTENT_HEADER_PARENT
          ),
          h = (0, d.useAgeSpecificText)(
            f.default.Messages
              .FAMILY_CENTER_DATA_CONFIRMATION_EXCLUDED_CONTENT_DESCRIPTION_TEEN,
            f.default.Messages
              .FAMILY_CENTER_DATA_CONFIRMATION_EXCLUDED_CONTENT_DESCRIPTION_PARENT
          );
        return (0, a.jsxs)("div", {
          children: [
            (0, a.jsx)(i.Text, {
              className: E.groupHeader,
              variant: "text-xxs/bold",
              color: "header-secondary",
              children: n,
            }),
            (0, a.jsx)(_, {
              header:
                f.default.Messages
                  .FAMILY_CENTER_DATA_CONFIRMATION_FRIEND_ADD_HEADER,
              description:
                f.default.Messages
                  .FAMILY_CENTER_DATA_CONFIRMATION_FRIEND_ADD_DESCRIPTION,
              icon: (0, a.jsx)(u.default, {
                width: 20,
                height: 20,
                color: i.tokens.colors.WHITE.css,
              }),
              inModal: t,
            }),
            (0, a.jsx)(_, {
              header:
                f.default.Messages
                  .FAMILY_CENTER_DATA_CONFIRMATION_GUILD_PARTICIPATION_HEADER,
              description:
                f.default.Messages
                  .FAMILY_CENTER_DATA_CONFIRMATION_GUILD_PARTICIPATION_DESCRIPTION,
              icon: (0, a.jsx)(o.default, {
                width: 20,
                height: 20,
                color: i.tokens.colors.WHITE.css,
              }),
              inModal: t,
            }),
            (0, a.jsx)(_, {
              header:
                f.default.Messages
                  .FAMILY_CENTER_DATA_CONFIRMATION_USERS_MESSAGED_HEADER,
              description:
                f.default.Messages
                  .FAMILY_CENTER_DATA_CONFIRMATION_USERS_MESSAGED_DESCRIPTION,
              icon: (0, a.jsx)(c.default, {
                width: 20,
                height: 20,
                color: i.tokens.colors.WHITE.css,
              }),
              inModal: t,
            }),
            (0, a.jsx)(i.Text, {
              className: E.groupHeader,
              variant: "text-xxs/bold",
              color: "header-secondary",
              children: s,
            }),
            (0, a.jsx)(_, {
              header: l,
              description: h,
              icon: (0, a.jsx)(r.default, {
                width: 20,
                height: 20,
                color: i.tokens.colors.WHITE.css,
              }),
              inModal: t,
            }),
          ],
        });
      };
    },
    884706: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("414456"),
        l = n.n(s),
        i = n("77078"),
        r = n("158998"),
        o = n("23968"),
        u = e => {
          let { user: t, fill: n } = e,
            s = "\xa0(@".concat(
              r.default.getUserTag(t, { decoration: "never" }),
              ")"
            );
          return (0, a.jsxs)(i.Text, {
            className: l([o.text, { [o.fill]: n }]),
            variant: "text-md/medium",
            children: [
              (0, a.jsx)("span", {
                className: o.username,
                children: r.default.getName(t),
              }),
              (0, a.jsx)("span", { className: o.discriminator, children: s }),
            ],
          });
        };
    },
    424373: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("414456"),
        l = n.n(s),
        i = n("77078"),
        r = n("649867"),
        o = n("890957"),
        u = n("871859"),
        d = e => {
          let { text: t, className: n } = e;
          return (0, a.jsxs)("div", {
            className: l(n, r.empty),
            children: [
              (0, a.jsx)("img", { className: r.image, src: u, alt: "" }),
              (0, a.jsx)(i.Text, {
                className: o.marginTop8,
                variant: "text-sm/medium",
                color: "text-muted",
                children: t,
              }),
            ],
          });
        };
    },
    893302: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("414456"),
        l = n.n(s),
        i = n("77078"),
        r = n("822690"),
        o = e => {
          let { icon: t, iconClassName: n, header: s, description: o } = e;
          return (0, a.jsxs)("div", {
            className: r.container,
            children: [
              (0, a.jsx)("div", {
                className: r.circle,
                children: (0, a.jsx)(t, {
                  className: l(r.icon, n),
                  width: 20,
                  height: 20,
                  color: "currentColor",
                }),
              }),
              (0, a.jsxs)("div", {
                children: [
                  (0, a.jsx)(i.Heading, {
                    variant: "heading-md/bold",
                    className: r.header,
                    children: (0, a.jsx)(i.HeadingLevel, { children: s }),
                  }),
                  (0, a.jsx)(i.Text, {
                    variant: "text-sm/medium",
                    color: "text-muted",
                    children: o,
                  }),
                ],
              }),
            ],
          });
        };
    },
    589333: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("75196");
      function l(e) {
        let {
          width: t = 24,
          height: n = 24,
          color: l = "currentColor",
          ...i
        } = e;
        return (0, a.jsxs)("svg", {
          ...(0, s.default)(i),
          width: t,
          height: n,
          viewBox: "0 0 20 20",
          fill: "none",
          children: [
            (0, a.jsx)("path", {
              d: "M5.42999 16C5.73201 16 5.97454 15.7326 5.98651 15.4309C5.99216 15.2885 6 15.145 6 15C6 10.582 8.97355 7 13.6115 7C15.3176 7 16.9378 7.60732 18.2734 8.47894C18.6009 8.69267 19.0088 8.49717 19.0012 8.10616C19.0004 8.06876 19 8.03318 19 8C19 3.589 15.0439 0 10.1825 0C5.32115 0 1.36504 3.589 1.36504 8C1.36504 9.24168 1.67304 10.4357 2.26529 11.523C2.49433 11.9436 2.45549 12.472 2.12042 12.8141L0.664819 14.3003C0.0449194 14.9332 0.493315 16 1.37923 16H5.42999Z",
              fill: l,
            }),
            (0, a.jsx)("path", {
              d: "M20.0134 17.8398C19.8366 17.558 19.8172 17.2085 19.9242 16.8935C20.1307 16.2852 20.2371 15.6451 20.2371 15C20.2371 11.691 17.4914 9 14.1166 9C10.7419 9 7.99609 11.691 7.99609 15C7.99609 18.309 10.7419 21 14.1166 21H20.1882C20.9744 21 21.4531 20.1345 21.0353 19.4685L20.0134 17.8398Z",
              fill: l,
            }),
          ],
        });
      }
    },
    153935: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          UserSettingsFamilyCenterPage: function () {
            return K;
          },
          default: function () {
            return z;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("394846"),
        o = n("432710"),
        u = n("65597"),
        d = n("151426"),
        c = n("77078"),
        f = n("939488"),
        E = n("669499"),
        h = n("69927"),
        _ = n("10641"),
        C = n("539938"),
        I = n("155084"),
        S = n("970366"),
        m = n("161778"),
        p = n("845579"),
        T = n("697218"),
        g = n("476765"),
        A = n("155207"),
        N = n("956089"),
        R = n("599110"),
        O = n("439932"),
        v = n("544556"),
        L = n("822825"),
        M = n("104887"),
        P = n("771783"),
        D = n("775032"),
        y = n("25132"),
        x = n("544553"),
        b = n("210173"),
        U = n("68818"),
        G = n("922832"),
        j = n("49111"),
        w = n("586391"),
        k = n("994428"),
        F = n("782340"),
        B = n("322833");
      let H = {
          [G.FamilyCenterSubPages.REQUESTS]: () => (0, a.jsx)(b.default, {}),
          [G.FamilyCenterSubPages.ACTIVITY]: () => (0, a.jsx)(x.default, {}),
          [G.FamilyCenterSubPages.SETTINGS]: () => (0, a.jsx)(U.default, {}),
        },
        V = {
          [G.FamilyCenterSubPages.REQUESTS]: () => (0, a.jsx)(b.default, {}),
          [G.FamilyCenterSubPages.ACTIVITY]: () => (0, a.jsx)(x.default, {}),
        };
      function Y(e) {
        let { section: t, handleItemSelect: n } = e,
          s = (0, y.usePendingRequestCount)(),
          l = (0, D.default)();
        return (0, a.jsxs)(c.TabBar, {
          className: B.settingsTabBar,
          "aria-label": F.default.Messages.FAMILY_CENTER_TITLE,
          selectedItem: t,
          type: "top",
          look: "brand",
          onItemSelect: n,
          children: [
            (0, a.jsx)(c.TabBar.Item, {
              className: B.settingsTabBarItem,
              id: G.FamilyCenterSubPages.ACTIVITY,
              children: F.default.Messages.FAMILY_CENTER_ACTIVITY_TAB,
            }),
            (0, a.jsxs)(c.TabBar.Item, {
              className: B.settingsTabBarItem,
              id: G.FamilyCenterSubPages.REQUESTS,
              "aria-label": F.default.Messages.FAMILY_CENTER_REQUESTS_TAB,
              children: [
                F.default.Messages.FAMILY_CENTER_REQUESTS_TAB,
                s > 0
                  ? (0, a.jsx)(N.NumberBadge, { className: B.badge, count: s })
                  : null,
              ],
            }),
            l
              ? (0, a.jsx)(c.TabBar.Item, {
                  className: B.settingsTabBarItem,
                  id: G.FamilyCenterSubPages.SETTINGS,
                  children: F.default.Messages.SETTINGS,
                })
              : null,
          ],
        });
      }
      function W(e) {
        let { theme: t, section: n, handleItemSelect: s } = e,
          l = (0, g.useUID)(),
          o = (0, y.usePendingRequestCount)();
        return (0, a.jsxs)(C.default, {
          className: i((0, O.getThemeClass)(t), B.sidebarTabBar),
          scrollable: r.isMobile,
          role: "navigation",
          "aria-labelledby": l,
          toolbar: !0,
          children: [
            (0, a.jsx)(C.default.Icon, { icon: A.default, "aria-hidden": !0 }),
            (0, a.jsx)(C.default.Title, {
              id: l,
              children: F.default.Messages.FAMILY_CENTER_TITLE,
            }),
            (0, a.jsx)(C.default.Divider, {}),
            (0, a.jsxs)(c.TabBar, {
              "aria-label": F.default.Messages.FAMILY_CENTER_TITLE,
              selectedItem: n,
              type: "top-pill",
              onItemSelect: s,
              className: B.tabBar,
              children: [
                (0, a.jsx)(c.TabBar.Item, {
                  id: G.FamilyCenterSubPages.ACTIVITY,
                  className: B.item,
                  children: F.default.Messages.FAMILY_CENTER_ACTIVITY_TAB,
                }),
                (0, a.jsxs)(c.TabBar.Item, {
                  id: G.FamilyCenterSubPages.REQUESTS,
                  className: B.item,
                  "aria-label": F.default.Messages.FAMILY_CENTER_REQUESTS_TAB,
                  children: [
                    F.default.Messages.FAMILY_CENTER_REQUESTS_TAB,
                    o > 0
                      ? (0, a.jsx)(N.NumberBadge, {
                          className: B.badge,
                          count: o,
                        })
                      : null,
                  ],
                }),
              ],
            }),
          ],
        });
      }
      function K() {
        let e = (0, D.default)(),
          t = (0, y.useAcceptedRequestsCount)(),
          n = (0, _.useIsDismissibleContentDismissed)(
            d.DismissibleContent.FAMILY_CENTER_NEW_BADGE
          ),
          l = (0, u.default)([L.default], () => L.default.getIsInitialized()),
          r = (0, P.useSelectedTeenId)(),
          { selectedTab: f, handleTabChange: C } = (0, M.default)(),
          m = (0, g.useUID)(),
          p = T.default.getCurrentUser(),
          A = null != e,
          N = l && null != p && !A;
        return (s.useEffect(() => {
          (0, S.trackAppUIViewed)("family-center"),
            v.default.initialPageLoad(),
            !n &&
              (0, _.markDismissibleContentAsDismissed)(
                d.DismissibleContent.FAMILY_CENTER_NEW_BADGE,
                {
                  dismissAction: k.ContentDismissActionType.AUTO,
                  forceTrack: !0,
                }
              );
        }, []),
        s.useEffect(() => {
          l &&
            A &&
            (R.default.track(j.AnalyticEvents.FAMILY_CENTER_VIEWED, {
              is_considered_adult: e,
              num_of_accepted_links: t,
              selected_teen_id: r,
              initial_page: G.FamilyCenterSubPageAnalyticsIds[f],
              source:
                G.FamilyCenterPageLocationAnalyticsIds[
                  G.FamilyCenterPageLocation.SIDENAV
                ],
            }),
            I.default.increment({ name: o.MetricEvents.FAMILY_CENTER_VIEW }));
        }, [l, A]),
        N)
          ? ((0, E.openAgeGateModal)(w.AgeGateSource.FAMILY_CENTER), null)
          : (0, a.jsxs)("main", {
              className: i(B.container),
              "aria-label": F.default.Messages.FAMILY_CENTER_TITLE,
              children: [
                (0, a.jsx)(h.AppPageTitle, {
                  location: F.default.Messages.FAMILY_CENTER_TITLE,
                }),
                (0, a.jsx)(Y, {
                  section: f,
                  handleItemSelect: e => {
                    C(e);
                  },
                }),
                (0, a.jsx)(c.TabBar.Panel, {
                  id: f,
                  "aria-labelledby": m,
                  className: B.contentPanel,
                  children: (0, a.jsx)("div", { children: H[f]() }),
                }),
              ],
            });
      }
      function z() {
        let e = (0, D.default)(),
          t = (0, y.useAcceptedRequestsCount)(),
          n = (0, _.useIsDismissibleContentDismissed)(
            d.DismissibleContent.FAMILY_CENTER_NEW_BADGE
          ),
          l = (0, u.default)([L.default], () => L.default.getIsInitialized()),
          r = (0, P.useSelectedTeenId)(),
          C = (0, u.default)([m.default], () => m.default.theme),
          { selectedTab: A, handleTabChange: N } = (0, M.default)(),
          O = (0, g.useUID)(),
          x = T.default.getCurrentUser(),
          b = null != e,
          U = l && null != x && !b;
        if (
          (s.useEffect(() => {
            f.setHomeLink(j.Routes.FAMILY_CENTER),
              (0, S.trackAppUIViewed)("family-center"),
              !L.default.isLoading() &&
                L.default.canRefetch() &&
                v.default.initialPageLoad(),
              !n &&
                (0, _.markDismissibleContentAsDismissed)(
                  d.DismissibleContent.FAMILY_CENTER_NEW_BADGE,
                  {
                    dismissAction: k.ContentDismissActionType.AUTO,
                    forceTrack: !0,
                  }
                );
          }, []),
          s.useEffect(() => {
            l &&
              b &&
              (R.default.track(j.AnalyticEvents.FAMILY_CENTER_VIEWED, {
                is_considered_adult: e,
                num_of_accepted_links: t,
                selected_teen_id: r,
                initial_page: G.FamilyCenterSubPageAnalyticsIds[A],
                source:
                  G.FamilyCenterPageLocationAnalyticsIds[
                    G.FamilyCenterPageLocation.SIDENAV
                  ],
              }),
              I.default.increment({ name: o.MetricEvents.FAMILY_CENTER_VIEW }));
          }, [l, b]),
          s.useEffect(() => {
            let t = p.FamilyCenterEnabled.getSetting();
            l && e && void 0 === t && p.FamilyCenterEnabled.updateSetting(!0);
          }, [l, e]),
          U)
        )
          return (0, E.openAgeGateModal)(w.AgeGateSource.FAMILY_CENTER), null;
        let H =
            A !== G.FamilyCenterSubPages.SETTINGS
              ? A
              : G.FamilyCenterSubPages.ACTIVITY,
          Y = V[H];
        return (0, a.jsxs)("main", {
          className: i(B.container, B.containerSidenav),
          "aria-label": F.default.Messages.FAMILY_CENTER_TITLE,
          children: [
            (0, a.jsx)(h.AppPageTitle, {
              location: F.default.Messages.FAMILY_CENTER_TITLE,
            }),
            (0, a.jsx)(W, {
              theme: C,
              section: H,
              handleItemSelect: e => {
                N(e);
              },
            }),
            (0, a.jsx)(c.TabBar.Panel, {
              id: H,
              "aria-labelledby": O,
              className: B.contentPanel,
              children: (0, a.jsx)("div", {
                className: B.sideNavContent,
                children: Y(),
              }),
            }),
          ],
        });
      }
    },
    490013: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("75196");
      function l(e) {
        let {
          width: t = 24,
          height: n = 24,
          color: l = "currentColor",
          foreground: i,
          ...r
        } = e;
        return (0, a.jsxs)("svg", {
          ...(0, s.default)(r),
          width: t,
          height: n,
          viewBox: "0 0 24 24",
          children: [
            (0, a.jsx)("path", {
              d: "M2.36002 2.35999V7.39991H7.39994V2.35999H2.36002ZM5.96009 5.96006H3.80009V3.80006H5.96009V5.96006Z",
              fill: l,
              fillRule: "evenodd",
              clipRule: "evenodd",
              className: i,
            }),
            (0, a.jsx)("path", {
              d: "M2.36002 14.5999V19.6401H7.39994V14.5999H2.36002ZM5.96009 18.2002H3.80009V16.0402H5.96009V18.2002Z",
              fill: l,
              fillRule: "evenodd",
              clipRule: "evenodd",
              className: i,
            }),
            (0, a.jsx)("path", {
              d: "M14.6001 2.35999V7.39991H19.64V2.35999H14.6001ZM18.2 5.96006H16.04V3.80006H18.2V5.96006Z",
              fill: l,
              fillRule: "evenodd",
              clipRule: "evenodd",
              className: i,
            }),
            (0, a.jsx)("path", {
              d: "M18.2 8.84003V13.16H14.6001V14.5999H19.64V8.84003H18.2Z",
              fill: l,
              fillRule: "evenodd",
              clipRule: "evenodd",
              className: i,
            }),
            (0, a.jsx)("path", {
              d: "M14.6001 16.0402V19.64H16.04V17.48H18.2V19.64H19.64V16.0402H14.6001Z",
              fill: l,
              fillRule: "evenodd",
              clipRule: "evenodd",
              className: i,
            }),
            (0, a.jsx)("path", {
              d: "M8.84006 2.35999V3.80006H11.72V7.39991H13.1601V2.35999H8.84006Z",
              fill: l,
              fillRule: "evenodd",
              clipRule: "evenodd",
              className: i,
            }),
            (0, a.jsx)("path", {
              d: "M11.72 8.84003V11.7202H8.84006V16.0402H11.72V19.64H13.1601V14.5999H10.2801V13.16H13.1601V10.2801H14.6001V11.7202H16.04V8.84003H11.72Z",
              fill: l,
              fillRule: "evenodd",
              clipRule: "evenodd",
              className: i,
            }),
            (0, a.jsx)("path", {
              d: "M10.2801 17.48H8.84006V19.64H10.2801V17.48Z",
              fill: l,
              fillRule: "evenodd",
              clipRule: "evenodd",
              className: i,
            }),
            (0, a.jsx)("path", {
              d: "M7.39999 11.7202H5.23999V13.1601H7.39999V11.7202Z",
              fill: l,
              fillRule: "evenodd",
              clipRule: "evenodd",
              className: i,
            }),
            (0, a.jsx)("path", {
              d: "M8.84001 5.23999V8.84006H2.36002V13.1601H3.80009V10.2801H10.2801V5.23999H8.84001Z",
              fill: l,
              fillRule: "evenodd",
              clipRule: "evenodd",
              className: i,
            }),
          ],
        });
      }
    },
    210173: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return x;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("355262"),
        o = n("77078"),
        u = n("302437"),
        d = n("826684"),
        c = n("368874"),
        f = n("652126"),
        E = n("775032"),
        h = n("25132"),
        _ = n("424373"),
        C = n("806468"),
        I = n("863023"),
        S = n("299387"),
        m = n("154640"),
        p = n("922832"),
        T = n("782340"),
        g = n("575650"),
        A = n("890957"),
        N = n("371997");
      function R(e) {
        let { header: t, description: n, stepNumber: s } = e;
        return (0, a.jsxs)("div", {
          className: g.step,
          children: [
            (0, a.jsx)("div", {
              className: g.stepNumber,
              children: (0, a.jsx)(o.Heading, {
                variant: "heading-md/semibold",
                color: "text-brand",
                children: (0, a.jsx)(o.HeadingLevel, { children: s }),
              }),
            }),
            (0, a.jsxs)("div", {
              children: [
                (0, a.jsx)(o.Heading, {
                  variant: "heading-sm/bold",
                  children: (0, a.jsx)(o.HeadingLevel, { children: t }),
                }),
                (0, a.jsx)(o.Text, {
                  variant: "text-sm/medium",
                  color: "text-muted",
                  children: n,
                }),
              ],
            }),
          ],
        });
      }
      function O() {
        return (0, a.jsxs)("div", {
          className: i(g.box, g.linkingBanner, g.linkingBannerParent),
          children: [
            (0, a.jsxs)("div", {
              className: i(g.linkingBannerUpper),
              children: [
                (0, a.jsxs)("div", {
                  className: g.header,
                  children: [
                    (0, a.jsx)(o.Heading, {
                      className: A.marginBottom8,
                      variant: "heading-xl/medium",
                      children: (0, a.jsx)(o.HeadingLevel, {
                        children:
                          T.default.Messages
                            .FAMILY_CENTER_REQUESTS_LINKING_BANNER_HEADER_PARENT,
                      }),
                    }),
                    (0, a.jsx)(o.Text, {
                      variant: "text-sm/medium",
                      color: "text-muted",
                      className: A.marginBottom20,
                      children:
                        T.default.Messages
                          .FAMILY_CENTER_REQUESTS_LINKING_BANNER_DESCRIPTION_PARENT,
                    }),
                  ],
                }),
                (0, a.jsx)("img", {
                  className: g.bannerArt,
                  src: N,
                  alt: T.default.Messages
                    .FAMILY_CENTER_REQUESTS_LINKING_BANNER_TEEN_ASSET_ALT,
                }),
              ],
            }),
            (0, a.jsxs)("div", {
              className: g.steps,
              children: [
                (0, a.jsx)(R, {
                  header:
                    T.default.Messages
                      .FAMILY_CENTER_REQUESTS_LINKING_BANNER_PARENT_STEP_1_HEADER,
                  description:
                    T.default.Messages
                      .FAMILY_CENTER_REQUESTS_LINKING_BANNER_PARENT_STEP_1_DESCRIPTION,
                  stepNumber: 1,
                }),
                (0, a.jsx)(R, {
                  header:
                    T.default.Messages
                      .FAMILY_CENTER_REQUESTS_LINKING_BANNER_PARENT_STEP_2_HEADER,
                  description:
                    T.default.Messages
                      .FAMILY_CENTER_REQUESTS_LINKING_BANNER_PARENT_STEP_2_DESCRIPTION,
                  stepNumber: 2,
                }),
                (0, a.jsx)(R, {
                  header:
                    T.default.Messages
                      .FAMILY_CENTER_REQUESTS_LINKING_BANNER_PARENT_STEP_3_HEADER,
                  description:
                    T.default.Messages
                      .FAMILY_CENTER_REQUESTS_LINKING_BANNER_PARENT_STEP_3_DESCRIPTION,
                  stepNumber: 3,
                }),
              ],
            }),
          ],
        });
      }
      function v() {
        let e = (0, h.useHasMaxConnections)();
        return (0, a.jsxs)("div", {
          className: i(g.box, g.linkingBanner),
          children: [
            (0, a.jsxs)("div", {
              children: [
                (0, a.jsx)(o.Heading, {
                  className: A.marginBottom8,
                  variant: "heading-xl/medium",
                  children: (0, a.jsx)(o.HeadingLevel, {
                    children:
                      T.default.Messages
                        .FAMILY_CENTER_REQUESTS_LINKING_BANNER_HEADER_TEEN,
                  }),
                }),
                (0, a.jsx)(o.Text, {
                  variant: "text-sm/medium",
                  color: "text-muted",
                  className: A.marginBottom20,
                  children:
                    T.default.Messages.FAMILY_CENTER_REQUESTS_LINKING_BANNER_DESCRIPTION_TEEN.format(
                      {
                        link: "https://support.discord.com/hc/articles/14155060633623",
                      }
                    ),
                }),
                e ? null : (0, a.jsx)(C.default, {}),
              ],
            }),
            (0, a.jsx)("img", {
              className: g.bannerArt,
              src: N,
              alt: T.default.Messages
                .FAMILY_CENTER_REQUESTS_LINKING_BANNER_TEEN_ASSET_ALT,
            }),
          ],
        });
      }
      function L(e) {
        let { sectionType: t, sectionTitle: n, requests: l } = e,
          i = s.useRef(null),
          c = "".concat(t, "-list"),
          f = (0, u.default)(c),
          E = s.useCallback(
            e => {
              let { row: n, listIndex: s } = e,
                i = l[n],
                r = s === l.length;
              return null == i
                ? null
                : (0, a.jsx)(
                    m.default,
                    {
                      userId: i.id,
                      isLast: r,
                      children: () =>
                        t === p.UserLinkStatus.ACTIVE
                          ? (0, a.jsx)(I.UserLinkAcceptedRequestRow, {
                              user: i,
                            })
                          : (0, a.jsx)(S.UserLinkPendingRequestRow, {
                              user: i,
                            }),
                    },
                    i.id
                  );
            },
            [l, t]
          ),
          h = s.useCallback(
            () =>
              (0, a.jsx)(
                d.default,
                {
                  className: g.sectionTitle,
                  children: (0, a.jsx)(o.Text, {
                    className: A.marginBottom8,
                    variant: "eyebrow",
                    color: "header-secondary",
                    children: n,
                  }),
                },
                "title"
              ),
            [n]
          );
        return (0, a.jsx)("div", {
          className: g.section,
          children: (0, a.jsx)(r.ListNavigatorProvider, {
            navigator: f,
            children: (0, a.jsx)(r.ListNavigatorContainer, {
              children: e => {
                let { ref: t, role: s, ...r } = e;
                return (0, a.jsx)(
                  o.List,
                  {
                    className: g.list,
                    innerRole: s,
                    innerAriaLabel: n,
                    ref: e => {
                      var n;
                      (i.current = e),
                        (t.current =
                          null !==
                            (n = null == e ? void 0 : e.getScrollerNode()) &&
                          void 0 !== n
                            ? n
                            : null);
                    },
                    sectionHeight: p.FAMILY_CENTER_REQUEST_SECTION_HEIGHT,
                    rowHeight: p.FAMILY_CENTER_REQUEST_ROW_HEIGHT,
                    renderSection: h,
                    renderRow: E,
                    sections: [l.length],
                    chunkSize: 30,
                    fade: !0,
                    ...r,
                  },
                  c
                );
              },
            }),
          }),
        });
      }
      let M = () => {
          let e = (0, E.default)(),
            t = (0, h.useUserForLinkStatus)(p.UserLinkStatus.ACTIVE),
            n = e
              ? p.MAX_PARENT_TO_TEEN_ACTIVE_CONNECTIONS
              : p.MAX_TEEN_TO_PARENT_ACTIVE_CONNECTIONS,
            s = { count: t.length, max: n },
            l = (0, c.useAgeSpecificText)(
              T.default.Messages.FAMILY_CENTER_ACCEPTED_REQUESTS_TITLE_TEEN.format(
                s
              ),
              T.default.Messages.FAMILY_CENTER_ACCEPTED_REQUESTS_TITLE_PARENT.format(
                s
              )
            );
          return (0, a.jsx)(a.Fragment, {
            children:
              t.length > 0
                ? (0, a.jsx)(L, {
                    sectionType: p.UserLinkStatus.ACTIVE,
                    sectionTitle: l,
                    requests: t,
                  })
                : (0, a.jsxs)("div", {
                    className: g.section,
                    children: [
                      (0, a.jsx)(o.Text, {
                        className: A.marginBottom8,
                        variant: "eyebrow",
                        color: "header-secondary",
                        children: l,
                      }),
                      (0, a.jsx)("div", {
                        className: g.box,
                        children: (0, a.jsx)(_.default, {
                          text: T.default.Messages
                            .FAMILY_CENTER_ACCEPTED_REQUESTS_EMPTY_DESCRIPTION,
                        }),
                      }),
                    ],
                  }),
          });
        },
        P = () => {
          let e = (0, h.useHasMaxConnections)(),
            t = (0, E.default)(),
            n = t
              ? p.MAX_PARENT_TO_TEEN_ACTIVE_CONNECTIONS
              : p.MAX_TEEN_TO_PARENT_ACTIVE_CONNECTIONS,
            s = (0, c.useAgeSpecificText)(
              T.default.Messages.FAMILY_CENTER_REQUESTS_LIMIT_INFO_TEEN.format({
                maxConnections: n,
              }),
              T.default.Messages.FAMILY_CENTER_REQUESTS_LIMIT_INFO_PARENT.format(
                { maxConnections: n }
              )
            );
          return e
            ? (0, a.jsx)("div", {
                className: g.maxConnectionInfo,
                children: (0, a.jsx)(o.Text, {
                  variant: "text-xxs/medium",
                  color: "text-muted",
                  children: s,
                }),
              })
            : null;
        },
        D = () => {
          let e = (0, f.useShouldShowHelplineLink)();
          return e
            ? (0, a.jsxs)("div", {
                className: i(g.helpLineInfo, A.marginTop20),
                children: [
                  (0, a.jsx)(o.Heading, {
                    className: g.supportHeader,
                    variant: "heading-sm/semibold",
                    children: (0, a.jsx)(o.HeadingLevel, {
                      children:
                        T.default.Messages.FAMILY_CENTER_HELP_LINE_HEADER,
                    }),
                  }),
                  (0, a.jsx)(o.Text, {
                    variant: "text-xs/medium",
                    color: "text-muted",
                    children:
                      T.default.Messages.FAMILY_CENTER_HELP_LINE_CONTENT.format(
                        {
                          helpLink:
                            "https://support.discord.com/hc/articles/7925648993943-Crisis-Text-Line",
                        }
                      ),
                  }),
                ],
              })
            : null;
        },
        y = () => {
          let e = (0, h.useUserForLinkStatus)(p.UserLinkStatus.PENDING),
            t = (0, c.useAgeSpecificText)(
              T.default.Messages.FAMILY_CENTER_PENDING_REQUESTS_TITLE_TEEN.format(
                { count: e.length }
              ),
              T.default.Messages.FAMILY_CENTER_PENDING_REQUESTS_TITLE_PARENT.format(
                { count: e.length }
              )
            );
          return 0 === e.length
            ? null
            : (0, a.jsx)(L, {
                sectionType: p.UserLinkStatus.PENDING,
                sectionTitle: t,
                requests: e,
              });
        };
      var x = () => {
        let e = (0, E.default)();
        return (0, a.jsxs)("div", {
          className: g.container,
          children: [
            e ? (0, a.jsx)(O, {}) : (0, a.jsx)(v, {}),
            (0, a.jsx)(M, {}),
            (0, a.jsx)(y, {}),
            (0, a.jsx)(P, {}),
            (0, a.jsx)(D, {}),
          ],
        });
      };
    },
    209688: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("90915"),
        l = n("775032"),
        i = n("153935"),
        r = n("49111");
      function o() {
        let e = (0, l.default)();
        return !1 === e
          ? (0, a.jsx)(s.Redirect, { to: r.Routes.SETTINGS("family-center") })
          : (0, a.jsx)(i.default, {});
      }
    },
    68818: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return g;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("90915"),
        o = n("750485"),
        u = n("446674"),
        d = n("77078"),
        c = n("54239"),
        f = n("389434"),
        E = n("521128"),
        h = n("845579"),
        _ = n("538137"),
        C = n("956089"),
        I = n("49111"),
        S = n("853994"),
        m = n("782340"),
        p = n("788217"),
        T = n("890957"),
        g = () => {
          let e = h.FamilyCenterEnabled.useSetting(),
            { categories: t, initialized: n } = (0, u.useStateFromStoresObject)(
              [E.default],
              () => E.default.getEmailSettings()
            );
          return (
            s.useEffect(() => {
              null == n && (0, f.fetchEmailSettings)();
            }, [n]),
            (0, a.jsxs)("div", {
              className: p.container,
              children: [
                (0, a.jsx)(d.Text, {
                  variant: "eyebrow",
                  color: "text-muted",
                  children:
                    m.default.Messages.FAMILY_CENTER_SETTINGS_FORM_TITLE,
                }),
                (0, a.jsx)(d.FormSwitch, {
                  className: i(T.marginTop8, T.marginBottom20),
                  value: e,
                  note: m.default.Messages
                    .FAMILY_CENTER_SETTINGS_ENABLE_SWITCH_NOTE,
                  hideBorder: !0,
                  onChange: h.FamilyCenterEnabled.updateSetting,
                  children:
                    m.default.Messages.FAMILY_CENTER_SETTINGS_ENABLE_SWITCH,
                }),
                e
                  ? (0, a.jsx)(d.Card, {
                      className: p.enableCard,
                      type: d.Card.Types.CUSTOM,
                      outline: !0,
                      children: (0, a.jsxs)(o.default, {
                        justify: o.default.Justify.END,
                        children: [
                          (0, a.jsx)(o.default.Child, {
                            children: (0, a.jsx)(d.Text, {
                              variant: "text-sm/semibold",
                              color: "text-normal",
                              children:
                                m.default.Messages
                                  .FAMILY_CENTER_SETTINGS_ENABLE_PROMPT,
                            }),
                          }),
                          (0, a.jsx)(d.Clickable, {
                            children: (0, a.jsx)(r.Link, {
                              onClick: c.popLayer,
                              to: {
                                pathname: I.Routes.FAMILY_CENTER,
                                state: { scrollRestoration: !1 },
                              },
                              children:
                                m.default.Messages
                                  .FAMILY_CENTER_SETTINGS_ENABLE_CTA,
                            }),
                          }),
                          (0, a.jsx)(C.IconBadge, {
                            icon: _.default,
                            className: p.arrow,
                            disableColor: !0,
                          }),
                        ],
                      }),
                    })
                  : null,
                (0, a.jsx)(d.FormSwitch, {
                  className: i(T.marginTop20, T.marginBottom20),
                  value: !!t[S.EmailCategories.FAMILY_CENTER_DIGEST],
                  note: m.default.Messages
                    .FAMILY_CENTER_SETTINGS_EMAIL_DIGEST_ENABLE_SWITCH_NOTE,
                  hideBorder: !0,
                  onChange: function (e) {
                    (0, f.updateEmailSetting)(
                      S.EmailCategories.FAMILY_CENTER_DIGEST,
                      e
                    );
                  },
                  children:
                    m.default.Messages
                      .FAMILY_CENTER_SETTINGS_EMAIL_DIGEST_ENABLE_SWITCH,
                }),
              ],
            })
          );
        };
    },
    806468: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("77078"),
        l = n("599110"),
        i = n("698370"),
        r = n("922832"),
        o = n("49111"),
        u = n("782340"),
        d = n("238595");
      function c() {
        return (0, a.jsxs)(s.Button, {
          innerClassName: d.qrCodeButtonContent,
          size: s.Button.Sizes.LARGE,
          onClick: () => {
            (0, s.openModalLazy)(async () => {
              let { default: e } = await n
                .el("668170")
                .then(n.bind(n, "668170"));
              return t => (0, a.jsx)(e, { ...t });
            }),
              l.default.track(o.AnalyticEvents.FAMILY_CENTER_ACTION, {
                action: r.FamilyCenterAction.ShowQRCodeModal,
              });
          },
          children: [
            (0, a.jsx)(i.default, {}),
            u.default.Messages
              .FAMILY_CENTER_REQUESTS_LINKING_BANNER_TEEN_BUTTON,
          ],
        });
      }
    },
    698370: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("75196");
      function l(e) {
        let {
          width: t = 18,
          height: n = 18,
          color: l = "currentColor",
          ...i
        } = e;
        return (0, a.jsxs)("svg", {
          ...(0, s.default)(i),
          width: t,
          height: n,
          viewBox: "0 0 18 18",
          children: [
            (0, a.jsx)("path", {
              fill: l,
              d: "M1.8 1.8V6H6V1.8H1.8Zm3 3H3V3h1.8v1.8ZM1.8 12v4.2H6V12H1.8Zm3 3H3v-1.8h1.8V15ZM12 1.8V6h4.2V1.8H12Zm3 3h-1.8V3H15v1.8ZM7.2 1.8V3h2.4v3h1.2V1.8H7.2ZM6 9.6H4.2v1.2H6V9.6Z",
            }),
            (0, a.jsx)("path", {
              fill: l,
              d: "M7.2 4.2v3H1.8v3.6H3V8.4h5.4V4.2H7.2ZM12.417 10.75c-.92 0-1.667.748-1.667 1.667 0 .92.748 1.666 1.667 1.666s1.666-.747 1.666-1.666c0-.92-.747-1.667-1.666-1.667Z",
            }),
            (0, a.jsx)("path", {
              fill: l,
              d: "M15.75 9.5h-.804a.834.834 0 0 1-.694-.37l-.338-.509a.834.834 0 0 0-.693-.371h-1.608a.835.835 0 0 0-.694.37l-.338.51a.833.833 0 0 1-.694.37h-.804a.833.833 0 0 0-.833.833v4.584c0 .46.373.833.833.833h6.667c.46 0 .833-.373.833-.833v-4.584a.834.834 0 0 0-.833-.833Zm-3.333 5.417a2.503 2.503 0 0 1-2.5-2.5c0-1.379 1.12-2.5 2.5-2.5 1.378 0 2.5 1.121 2.5 2.5s-1.122 2.5-2.5 2.5Z",
            }),
          ],
        });
      }
    },
    863023: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          UserLinkAcceptedRequestRow: function () {
            return C;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("627445"),
        i = n.n(l),
        r = n("65597"),
        o = n("77078"),
        u = n("697218"),
        d = n("945330"),
        c = n("768815"),
        f = n("176661"),
        E = n("922832"),
        h = n("782340"),
        _ = n("840408");
      function C(e) {
        let { user: t } = e,
          l = (0, r.default)([u.default], () => u.default.getCurrentUser()),
          C = s.useCallback(() => {
            i(void 0 !== l, "User must be logged in to accept a link request"),
              (0, o.openModalLazy)(async () => {
                let { default: e } = await n
                  .el("127563")
                  .then(n.bind(n, "127563"));
                return n =>
                  (0, a.jsx)(e, { ...n, currentUser: l, otherUser: t });
              });
          }, [l, t]);
        return (0, a.jsxs)("div", {
          className: _.container,
          children: [
            (0, a.jsx)("div", {
              className: _.details,
              children: (0, a.jsx)(f.default, {
                otherUser: t,
                status: E.UserLinkStatus.ACTIVE,
              }),
            }),
            (0, a.jsx)("div", {
              className: _.actions,
              children: (0, a.jsx)(c.default, {
                icon: d.default,
                className: _.actionDeny,
                tooltip:
                  h.default.Messages.FAMILY_CENTER_LINK_ACTION_DISCONNECT,
                onClick: C,
              }),
            }),
          ],
        });
      }
    },
    768815: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("414456"),
        l = n.n(s),
        i = n("77078"),
        r = n("192823");
      function o(e) {
        let { icon: t, tooltip: n, onClick: s, className: o } = e,
          u = e => {
            e.preventDefault(), e.stopPropagation(), s(e);
          };
        return (0, a.jsx)(i.Tooltip, {
          text: n,
          children: e =>
            (0, a.jsx)(i.Clickable, {
              ...e,
              "aria-label": n,
              onClick: u,
              className: l(r.actionButton, o),
              children: (0, a.jsx)(t, { className: r.icon }),
            }),
        });
      }
    },
    299387: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          UserLinkPendingRequestRow: function () {
            return m;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("627445"),
        i = n.n(l),
        r = n("65597"),
        o = n("77078"),
        u = n("697218"),
        d = n("36694"),
        c = n("945330"),
        f = n("775032"),
        E = n("25132"),
        h = n("768815"),
        _ = n("176661"),
        C = n("922832"),
        I = n("782340"),
        S = n("840408");
      function m(e) {
        let { user: t } = e,
          l = (0, f.default)(),
          m = (0, E.useHasMaxConnections)(),
          p = (0, r.default)([u.default], () => u.default.getCurrentUser()),
          T = s.useCallback(() => {
            i(void 0 !== p, "User must be logged in to accept a link request"),
              (0, o.openModalLazy)(async () => {
                let { default: e } = await n
                  .el("134855")
                  .then(n.bind(n, "134855"));
                return n =>
                  (0, a.jsx)(e, { ...n, currentUser: p, otherUser: t });
              });
          }, [p, t]),
          g = s.useCallback(() => {
            i(void 0 !== p, "User must be logged in to decline a link request"),
              (0, o.openModalLazy)(async () => {
                let { default: e } = await n
                  .el("217014")
                  .then(n.bind(n, "217014"));
                return n =>
                  (0, a.jsx)(e, { ...n, currentUser: p, otherUser: t });
              });
          }, [p, t]),
          A = s.useCallback(() => {
            i(void 0 !== p, "User must be logged in to decline a link request"),
              (0, o.openModalLazy)(async () => {
                let { default: e } = await n
                  .el("809175")
                  .then(n.bind(n, "809175"));
                return n =>
                  (0, a.jsx)(e, { ...n, currentUser: p, otherUser: t });
              });
          }, [p, t]);
        return (0, a.jsxs)("div", {
          className: S.container,
          children: [
            (0, a.jsx)("div", {
              className: S.details,
              children: (0, a.jsx)(_.default, {
                otherUser: t,
                status: C.UserLinkStatus.PENDING,
              }),
            }),
            (0, a.jsx)("div", {
              className: S.actions,
              children: l
                ? (0, a.jsx)(h.default, {
                    icon: c.default,
                    className: S.actionDeny,
                    tooltip:
                      I.default.Messages.FAMILY_CENTER_LINK_ACTION_CANCEL,
                    onClick: A,
                  })
                : (0, a.jsxs)(a.Fragment, {
                    children: [
                      m
                        ? null
                        : (0, a.jsx)(h.default, {
                            icon: d.default,
                            className: S.actionAccept,
                            tooltip:
                              I.default.Messages
                                .FAMILY_CENTER_LINK_ACTION_ACCEPT,
                            onClick: T,
                          }),
                      (0, a.jsx)(h.default, {
                        icon: c.default,
                        className: S.actionDeny,
                        tooltip:
                          I.default.Messages.FAMILY_CENTER_LINK_ACTION_DECLINE,
                        onClick: g,
                      }),
                    ],
                  }),
            }),
          ],
        });
      }
    },
    176661: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("77078"),
        l = n("106435"),
        i = n("50885"),
        r = n("25132"),
        o = n("884706"),
        u = n("615111");
      let d = i.default.getEnableHardwareAcceleration()
        ? s.AnimatedAvatar
        : s.Avatar;
      function c(e) {
        let { otherUser: t, status: n } = e,
          i = (0, r.useLinkTimestampText)(t.id, n),
          {
            avatarSrc: c,
            avatarDecorationSrc: f,
            eventHandlers: E,
          } = (0, l.default)({
            user: t,
            size: s.AvatarSizes.SIZE_40,
            animateOnHover: !0,
          });
        return (0, a.jsxs)(a.Fragment, {
          children: [
            (0, a.jsx)("div", {
              ...E,
              children: (0, a.jsx)(d, {
                className: u.avatar,
                src: c,
                avatarDecoration: f,
                size: s.AvatarSizes.SIZE_40,
                "aria-label": t.username,
              }),
            }),
            (0, a.jsxs)("div", {
              className: u.userPreview,
              children: [
                (0, a.jsx)("div", {
                  className: u.userContainerWithTimestamp,
                  children: (0, a.jsx)(o.default, { user: t }),
                }),
                (0, a.jsx)(s.Text, {
                  className: u.timestamp,
                  color: "text-muted",
                  variant: "text-xs/normal",
                  children: i,
                }),
              ],
            }),
          ],
        });
      }
    },
    154640: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("15542"),
        o = n("458960"),
        u = n("355262"),
        d = n("401642"),
        c = n("49111"),
        f = n("161950"),
        E = e => {
          let { userId: t, children: n, isLast: l, className: E } = e,
            [h, _] = s.useState(!1),
            C = s.useCallback(() => {
              (0, d.openUserProfileModal)({
                userId: t,
                analyticsLocation: {
                  section: c.AnalyticsSections.FAMILY_CENTER,
                },
              });
            }, [t]),
            I = () => {
              _(!0);
            },
            S = () => {
              _(!1);
            };
          return (0, a.jsx)(u.ListNavigatorItem, {
            id: t,
            children: e =>
              (0, a.jsx)(r.FocusRing, {
                offset: { left: -8, right: -8 },
                children: (0, a.jsx)(o.default.div, {
                  style: { opacity: 1 },
                  className: i(f.rowItem, E, { [f.last]: l, [f.active]: h }),
                  onMouseEnter: I,
                  onMouseLeave: S,
                  onClick: C,
                  ...e,
                  children: n(h),
                }),
              }),
          });
        };
    },
    791878: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useIsClearIncomingFriendRequestsEnabled: function () {
            return l;
          },
        });
      var a = n("862205");
      let s = (0, a.createExperiment)({
        kind: "user",
        id: "2023-05_clear_pending_incoming_friend_requests",
        label: "Enable ability to clear incoming friend requests",
        defaultConfig: { enabled: !1 },
        treatments: [{ id: 1, label: "Enabled", config: { enabled: !0 } }],
      });
      function l() {
        return s.useExperiment(
          { location: "ca2288_1" },
          { autoTrackExposure: !0 }
        ).enabled;
      }
    },
    59678: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          RELATIONSHIP_COUNT_ANIMATION_THRESHOLD: function () {
            return a;
          },
          PEOPLE_LIST_ITEM_HEIGHT: function () {
            return s;
          },
          STATUS_HEADER_HEIGHT: function () {
            return l;
          },
          MINIMUM_PENDING_INCOMING_COUNT_FOR_CLEAR_ALL: function () {
            return i;
          },
        });
      let a = 64,
        s = 62,
        l = 24,
        i = 5;
    },
    371449: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        });
      var a,
        s,
        l = n("37983");
      n("884691");
      var i = n("414456"),
        r = n.n(i),
        o = n("394846"),
        u = n("77078"),
        d = n("940675");
      function c(e) {
        let {
          icon: t,
          tooltip: n,
          onClick: a,
          actionType: s = 2,
          shouldHighlight: i,
        } = e;
        return (0, l.jsx)(u.Tooltip, {
          text: n,
          children: e =>
            (0, l.jsx)(u.Clickable, {
              ...e,
              "aria-label": n,
              onClick: a,
              className: r(d.actionButton, {
                [d.actionAccept]: 0 === s,
                [d.actionDeny]: 1 === s,
                [d.highlight]: i,
                [d.actionButtonMobile]: o.isMobile,
              }),
              children: (0, l.jsx)(t, { className: d.icon }),
            }),
        });
      }
      ((a = s || (s = {}))[(a.ACCEPT = 0)] = "ACCEPT"),
        (a[(a.DENY = 1)] = "DENY"),
        (a[(a.DEFAULT = 2)] = "DEFAULT"),
        (c.ActionTypes = s);
      var f = c;
    },
    161011: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("77078"),
        i = n("245489"),
        r = n("229929"),
        o = n("62899"),
        u = n("709410"),
        d = n("49111"),
        c = n("782340"),
        f = n("541945");
      function E() {
        return (0, a.jsxs)("header", {
          className: f.header,
          children: [
            (0, a.jsx)(l.FormTitle, {
              tag: "h2",
              className: f.title,
              children: c.default.Messages.ADD_FRIEND,
            }),
            (0, a.jsx)(i.default, {}),
          ],
        });
      }
      var h = function () {
        return (0, a.jsxs)(s.Fragment, {
          children: [
            (0, a.jsx)(E, {}),
            (0, r.backToSchoolEnabled)() && (0, a.jsx)(o.default, {}),
            (0, a.jsx)("div", {
              className: f.emptyState,
              children: (0, a.jsx)(u.default, {
                type: d.FriendsSections.ADD_FRIEND,
              }),
            }),
          ],
        });
      };
    },
    62899: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return S;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("77078"),
        i = n("340626"),
        r = n("393414"),
        o = n("239380"),
        u = n("305961"),
        d = n("627490"),
        c = n("599110"),
        f = n("315102"),
        E = n("853004"),
        h = n("49111"),
        _ = n("782340"),
        C = n("368686");
      function I(e, t, n) {
        return (0, a.jsxs)(
          "button",
          {
            className: C.container,
            onClick: n,
            children: [
              "function" == typeof e
                ? (0, a.jsx)("div", {
                    className: C.icon,
                    children: (0, a.jsx)(e, {
                      className: C.iconInner,
                      color: l.tokens.colors.WHITE.css,
                    }),
                  })
                : (0, a.jsx)("img", { className: C.icon, alt: "", src: e }),
              (0, a.jsx)(l.Text, {
                className: C.text,
                variant: "text-md/medium",
                children: t,
              }),
              (0, a.jsx)(E.default, { className: C.arrow }),
            ],
          },
          t
        );
      }
      function S() {
        let e = Object.values(u.default.getGuilds()),
          t = e.filter(e => e.hasFeature(h.GuildFeatures.HUB)),
          n = e => {
            c.default.track(
              h.AnalyticEvents.ADD_FRIEND_OTHER_PLACES_HUB_CLICKED,
              { guild_id: e }
            ),
              (0, o.transitionToGuild)(e);
          };
        return (0, a.jsxs)(s.Fragment, {
          children: [
            (0, a.jsx)("header", {
              className: C.header,
              children: (0, a.jsx)(l.FormTitle, {
                tag: "h2",
                className: C.title,
                children: _.default.Messages.ADD_FRIEND_MAKE_FRIENDS,
              }),
            }),
            (0, a.jsxs)("div", {
              className: C.grid,
              children: [
                t.map(e =>
                  I(
                    f.default.getGuildIconURL({
                      id: e.id,
                      icon: e.icon,
                      size: 240,
                    }),
                    e.name,
                    () => {
                      n(e.id);
                    }
                  )
                ),
                I(
                  d.default,
                  _.default.Messages.ADD_FRIEND_EXPLORE_PUBLIC_SERVERS,
                  () => {
                    (0, i.clearSearch)(),
                      c.default.track(
                        h.AnalyticEvents
                          .ADD_FRIEND_OTHER_PLACES_DISCOVERY_CLICKED
                      ),
                      (0, r.transitionTo)(h.Routes.GUILD_DISCOVERY);
                  }
                ),
              ],
            }),
          ],
        });
      }
    },
    853004: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
      var a = n("37983");
      function s(e) {
        let { color: t = "currentColor", ...n } = e;
        return (0, a.jsx)("svg", {
          ...n,
          fill: "none",
          height: "20",
          viewBox: "0 0 20 20",
          width: "20",
          xmlns: "http://www.w3.org/2000/svg",
          children: (0, a.jsx)("path", {
            clipRule: "evenodd",
            d: "m5.41667 4.2625 5.66573 5.7375-5.66573 5.7375 1.74426 1.7625 7.42237-7.5-7.42237-7.5z",
            fill: t,
            fillRule: "evenodd",
          }),
        });
      }
      n("884691");
    },
    637824: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("736964"),
        i = n("401642"),
        r = n("152224"),
        o = n("599110"),
        u = n("371449"),
        d = n("224978"),
        c = n("559541"),
        f = n("49111"),
        E = n("782340"),
        h = n("74967");
      function _(e) {
        let { user: t, key: n, isFocused: _ } = e,
          C = s.useContext(o.AnalyticsContext),
          I = e => {
            e.stopPropagation(),
              l.default.unblockUser(t.id, { location: "Friends" });
          };
        return (0, a.jsx)(
          d.default,
          {
            isFocused: _,
            onClick: () =>
              (0, i.openUserProfileModal)({
                userId: t.id,
                analyticsLocation: C.location,
              }),
            user: t,
            children: e =>
              (0, a.jsxs)("div", {
                className: h.listItemContents,
                children: [
                  (0, a.jsx)(c.default, {
                    user: t,
                    hovered: e,
                    status: f.StatusTypes.UNKNOWN,
                    subText: E.default.Messages.BLOCKED,
                  }),
                  (0, a.jsx)(u.default, {
                    icon: r.default,
                    actionType: u.default.ActionTypes.DENY,
                    tooltip: E.default.Messages.UNBLOCK,
                    onClick: I,
                    shouldHighlight: e,
                  }),
                ],
              }),
          },
          n
        );
      }
    },
    911574: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("414456"),
        l = n.n(s),
        i = n("77078"),
        r = n("629803"),
        o = n("79112"),
        u = n("163466"),
        d = n("49111"),
        c = n("994428"),
        f = n("782340"),
        E = n("569154");
      function h(e) {
        let { className: t, markAsDismissed: n } = e;
        return (0, a.jsxs)(u.default, {
          className: l(E.card, t),
          children: [
            (0, a.jsx)(i.Heading, {
              variant: "heading-md/semibold",
              className: E.header,
              children: f.default.Messages.NOW_PLAYING_GDPR_HEADER,
            }),
            (0, a.jsx)(i.Text, {
              variant: "text-sm/normal",
              children: f.default.Messages.NOW_PLAYING_GDPR_BODY.format({
                onPrivacyClick: () =>
                  o.default.open(d.UserSettingsSections.PRIVACY_AND_SAFETY),
              }),
            }),
            (0, a.jsxs)("div", {
              className: E.buttonContainer,
              children: [
                (0, a.jsx)(i.Button, {
                  size: i.Button.Sizes.SMALL,
                  onClick: () =>
                    (0, r.setConsents)([d.Consents.PERSONALIZATION], []),
                  children:
                    f.default.Messages.ACTIVITY_FEED_CARD_GDPR_BUTTON_YES,
                }),
                (0, a.jsx)(i.Button, {
                  color: i.Button.Colors.PRIMARY,
                  size: i.Button.Sizes.SMALL,
                  onClick: () => n(c.ContentDismissActionType.DISMISS),
                  look: i.Button.Looks.LINK,
                  children: f.default.Messages.NO_THANKS,
                }),
              ],
            }),
          ],
        });
      }
    },
    146378: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return L;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("917351"),
        i = n.n(l),
        r = n("446674"),
        o = n("77078"),
        u = n("450911"),
        d = n("272030"),
        c = n("736964"),
        f = n("393414"),
        E = n("42203"),
        h = n("42887"),
        _ = n("109264"),
        C = n("663745"),
        I = n("158998"),
        S = n("371449"),
        m = n("224978"),
        p = n("83916"),
        T = n("559541"),
        g = n("49111"),
        A = n("353927"),
        N = n("782340"),
        R = n("393719");
      function O(e) {
        let { user: t, onSelect: n } = e,
          s = () => {
            c.default.removeFriend(t.id, { location: "Friends" });
          },
          l = (0, r.useStateFromStores)([h.default], () =>
            h.default.supports(A.Features.VIDEO)
          );
        return (0, a.jsxs)(o.Menu, {
          navId: "friend-row",
          "aria-label": N.default.Messages.USER_ACTIONS_MENU_LABEL,
          onClose: d.closeContextMenu,
          onSelect: n,
          children: [
            l
              ? (0, a.jsx)(o.MenuItem, {
                  id: "start-video-call",
                  label: N.default.Messages.START_VIDEO_CALL,
                  action: function () {
                    u.default.openPrivateChannel(t.id, !0, !0);
                  },
                })
              : null,
            (0, a.jsx)(o.MenuItem, {
              id: "start-voice-call",
              label: N.default.Messages.START_VOICE_CALL,
              action: () => {
                u.default.openPrivateChannel(t.id, !0);
              },
            }),
            (0, a.jsx)(o.MenuItem, {
              id: "remove-friend",
              label: N.default.Messages.REMOVE_FRIEND,
              action: () => {
                (0, o.openModal)(e =>
                  (0, a.jsx)(o.ConfirmModal, {
                    header: N.default.Messages.REMOVE_FRIEND_TITLE.format({
                      name: I.default.getName(t),
                    }),
                    confirmText: N.default.Messages.REMOVE_FRIEND,
                    cancelText: N.default.Messages.CANCEL,
                    onConfirm: s,
                    ...e,
                    children: (0, a.jsx)(o.Text, {
                      variant: "text-md/normal",
                      children: N.default.Messages.REMOVE_FRIEND_BODY.format({
                        name: I.default.getName(t),
                      }),
                    }),
                  })
                );
              },
              color: "danger",
            }),
          ],
        });
      }
      class v extends s.PureComponent {
        componentWillLeave(e) {
          null != this.peopleListItemRef.current &&
            this.peopleListItemRef.current.componentWillLeave(e);
        }
        componentWillEnter(e) {
          null != this.peopleListItemRef.current &&
            this.peopleListItemRef.current.componentWillEnter(e);
        }
        render() {
          let {
              user: e,
              isFocused: t,
              activities: n,
              applicationStream: s,
              status: l,
              isMobile: i,
            } = this.props,
            { isActiveRow: r } = this.state;
          return (0, a.jsx)(m.default, {
            ref: this.peopleListItemRef,
            isFocused: t,
            isActive: r,
            user: e,
            onOtherHover: () => (r ? null : (0, d.closeContextMenu)()),
            onClick: this.handleOpenPrivateChannel,
            children: t =>
              (0, a.jsxs)("div", {
                className: R.listItemContents,
                children: [
                  (0, a.jsx)(T.default, {
                    user: e,
                    status: l,
                    isMobile: i,
                    subText: (0, a.jsx)(p.default, {
                      hovered: t,
                      activities: n,
                      applicationStream: s,
                      status: l,
                      user: e,
                    }),
                    hovered: t,
                    showAccountIdentifier: !0,
                  }),
                  (0, a.jsxs)("div", {
                    className: R.actions,
                    children: [
                      (0, a.jsx)(S.default, {
                        icon: _.default,
                        tooltip: N.default.Messages.SEND_DM,
                        onClick: this.handleOpenPrivateChannel,
                        shouldHighlight: t,
                      }),
                      (0, a.jsx)(S.default, {
                        icon: C.default,
                        tooltip: N.default.Messages.MORE,
                        onClick: this.handleOpenActionsMenu,
                        shouldHighlight: t,
                      }),
                    ],
                  }),
                ],
              }),
          });
        }
        constructor(...e) {
          super(...e),
            (this.peopleListItemRef = s.createRef()),
            (this.state = { isActiveRow: !1 }),
            (this.handleOpenPrivateChannel = e => {
              let { user: t } = this.props;
              e.stopPropagation();
              let n = i.find(
                E.default.getMutablePrivateChannels(),
                e => e.type === g.ChannelTypes.DM && e.getRecipientId() === t.id
              );
              null != n
                ? (0, f.transitionTo)(g.Routes.CHANNEL(g.ME, n.id))
                : u.default.openPrivateChannel(t.id);
            }),
            (this.handleOpenActionsMenu = e => {
              let { user: t } = this.props;
              (0, d.openContextMenu)(e, e => (0, a.jsx)(O, { ...e, user: t }), {
                onClose: () => {
                  this.setState({ isActiveRow: !1 });
                },
              }),
                this.setState({ isActiveRow: !0 });
            });
        }
      }
      var L = v;
    },
    709410: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          FriendsSearchStatus: function () {
            return a;
          },
          default: function () {
            return I;
          },
        }),
        n("70102"),
        n("222007");
      var a,
        s = n("37983"),
        l = n("884691"),
        i = n("458960"),
        r = n("446674"),
        o = n("77078"),
        u = n("161778"),
        d = n("941886"),
        c = n("49111"),
        f = n("782340"),
        E = n("594411");
      (a || (a = {})).SECTION_NO_RESULTS = "SECTION_NO_RESULTS";
      let h = Object.freeze({
          SECTION_ALL: {
            lightSrc: n("1547"),
            darkSrc: n("197040"),
            width: 376,
            height: 162,
            renderContent: e =>
              (0, s.jsxs)(l.Fragment, {
                children: [
                  (0, s.jsx)(d.default.Text, {
                    note: f.default.Messages.FRIENDS_EMPTY_STATE_ALL,
                  }),
                  (0, s.jsx)(o.Button, {
                    className: E.button,
                    onClick: e,
                    children: f.default.Messages.ADD_FRIEND,
                  }),
                ],
              }),
          },
          SECTION_ONLINE: {
            lightSrc: n("681224"),
            darkSrc: n("819444"),
            width: 421,
            height: 218,
            renderContent: () =>
              (0, s.jsx)(d.default.Text, {
                note: f.default.Messages.FRIENDS_EMPTY_STATE_ONLINE,
              }),
          },
          SECTION_BLOCKED: {
            lightSrc: n("289309"),
            darkSrc: n("829361"),
            width: 433,
            height: 232,
            renderContent: () =>
              (0, s.jsx)(d.default.Text, {
                note: f.default.Messages.FRIENDS_EMPTY_STATE_BLOCKED,
              }),
          },
          SECTION_PENDING: {
            lightSrc: n("934516"),
            darkSrc: n("855143"),
            width: 415,
            height: 200,
            renderContent: () =>
              (0, s.jsx)(d.default.Text, {
                note: f.default.Messages.FRIENDS_EMPTY_STATE_PENDING,
              }),
          },
          SECTION_SUGGESTIONS: {
            lightSrc: n("934516"),
            darkSrc: n("855143"),
            width: 415,
            height: 200,
            renderContent: () =>
              (0, s.jsx)(d.default.Text, {
                note: f.default.Messages.FRIENDS_EMPTY_STATE_SUGGESTIONS,
              }),
          },
          SECTION_NO_RESULTS: {
            lightSrc: n("681224"),
            darkSrc: n("819444"),
            width: 421,
            height: 218,
            renderContent: () =>
              (0, s.jsx)(d.default.Text, {
                note: f.default.Messages.FRIEND_REQUEST_NO_RESULTS_FOUND,
              }),
          },
        }),
        _ = e => {
          let { theme: t } = e,
            n = f.default.Messages.FRIENDS_EMPTY_STATE_ALL,
            a = h.SECTION_ALL;
          return (0, s.jsx)(l.Fragment, {
            children: (0, s.jsxs)(d.default, {
              theme: t,
              children: [
                (0, s.jsx)(d.default.Image, {
                  width: a.width,
                  height: a.height,
                  lightSrc: a.lightSrc,
                  darkSrc: a.darkSrc,
                }),
                (0, s.jsx)(d.default.Text, { note: n }),
              ],
            }),
          });
        };
      class C extends l.PureComponent {
        render() {
          let { type: e, onClick: t, theme: n } = this.props,
            a = { opacity: this.state.opacity },
            l = (function (e) {
              switch (e) {
                case c.FriendsSections.ADD_FRIEND:
                case c.FriendsSections.ALL:
                  return h.SECTION_ALL;
                case c.FriendsSections.ONLINE:
                  return h.SECTION_ONLINE;
                case c.FriendsSections.PENDING:
                  return h.SECTION_PENDING;
                case c.FriendsSections.SUGGESTIONS:
                  return h.SECTION_SUGGESTIONS;
                case c.FriendsSections.BLOCKED:
                  return h.SECTION_BLOCKED;
                case "SECTION_NO_RESULTS":
                  return h.SECTION_NO_RESULTS;
                default:
                  throw Error("FriendsEmptyState: Invalid empty state");
              }
            })(e);
          return e === c.FriendsSections.ADD_FRIEND
            ? (0, s.jsx)(i.default.div, {
                className: E.friendsEmpty,
                style: a,
                children: (0, s.jsx)(_, { theme: n }),
              })
            : (0, s.jsx)(i.default.div, {
                className: E.friendsEmpty,
                style: a,
                children: (0, s.jsxs)(d.default, {
                  theme: n,
                  children: [
                    (0, s.jsx)(d.default.Image, {
                      width: l.width,
                      height: l.height,
                      lightSrc: l.lightSrc,
                      darkSrc: l.darkSrc,
                    }),
                    l.renderContent(t),
                  ],
                }),
              });
        }
        constructor(...e) {
          super(...e),
            (this.state = { opacity: new i.default.Value(1) }),
            (this.componentWillEnter = e => {
              this.state.opacity.setValue(0),
                i.default
                  .timing(this.state.opacity, { toValue: 1, duration: 250 })
                  .start(e);
            }),
            (this.componentWillLeave = e => {
              i.default
                .timing(this.state.opacity, { toValue: 0, duration: 250 })
                .start(e);
            });
        }
      }
      var I = r.default.connectStores(
        [u.default],
        () => ({ theme: u.default.theme }),
        { forwardRef: !0 }
      )(C);
    },
    411676: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return m;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("669491"),
        i = n("736964"),
        r = n("401642"),
        o = n("697218"),
        u = n("36694"),
        d = n("945330"),
        c = n("956089"),
        f = n("599110"),
        E = n("371449"),
        h = n("224978"),
        _ = n("559541"),
        C = n("49111"),
        I = n("782340"),
        S = n("289984");
      function m(e) {
        let { user: t, type: n, status: m, isFocused: p } = e,
          T = s.useContext(f.AnalyticsContext),
          g = e => {
            e.stopPropagation(),
              i.default.cancelFriendRequest(t.id, { location: "Friends" });
          },
          A = e => {
            e.stopPropagation(),
              i.default.addRelationship({
                userId: t.id,
                context: { location: "Friends" },
              });
          },
          N = m === C.StatusTypes.OFFLINE ? C.StatusTypes.UNKNOWN : m,
          R =
            n === C.RelationshipTypes.PENDING_INCOMING
              ? I.default.Messages.INCOMING_FRIEND_REQUEST
              : I.default.Messages.OUTGOING_FRIEND_REQUEST;
        return (0, a.jsx)(h.default, {
          isFocused: p,
          user: t,
          onClick: () =>
            (0, r.openUserProfileModal)({
              userId: t.id,
              analyticsLocation: T.location,
            }),
          children: e => {
            var s;
            let i =
              n === C.RelationshipTypes.PENDING_INCOMING
                ? (0, a.jsxs)(a.Fragment, {
                    children: [
                      (null === (s = o.default.getCurrentUser()) || void 0 === s
                        ? void 0
                        : s.isStaff()) &&
                        (null == t ? void 0 : t.isStaff()) &&
                        (0, a.jsx)("div", {
                          className: S.staffIndicator,
                          children: (0, a.jsx)(c.TextBadge, {
                            color: l.default.unsafe_rawColors.BRAND_500.css,
                            text: I.default.Messages.STAFF_BADGE_TOOLTIP,
                          }),
                        }),
                      (0, a.jsx)(E.default, {
                        icon: u.default,
                        actionType: E.default.ActionTypes.ACCEPT,
                        tooltip: I.default.Messages.FRIEND_REQUEST_ACCEPT,
                        onClick: A,
                        shouldHighlight: e,
                      }),
                      (0, a.jsx)(E.default, {
                        icon: d.default,
                        actionType: E.default.ActionTypes.DENY,
                        tooltip: I.default.Messages.FRIEND_REQUEST_IGNORE,
                        onClick: g,
                        shouldHighlight: e,
                      }),
                    ],
                  })
                : (0, a.jsx)(E.default, {
                    icon: d.default,
                    actionType: E.default.ActionTypes.DENY,
                    tooltip: I.default.Messages.FRIEND_REQUEST_CANCEL,
                    onClick: g,
                    shouldHighlight: e,
                  });
            return (0, a.jsxs)("div", {
              className: S.listItemContents,
              children: [
                (0, a.jsx)(_.default, {
                  user: t,
                  hovered: e,
                  showAccountIdentifier: !0,
                  status: N,
                  subText: R,
                  className: S.userInfo,
                }),
                (0, a.jsx)("div", { className: S.actions, children: i }),
              ],
            });
          },
        });
      }
    },
    756183: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return P;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("446674"),
        o = n("77078"),
        u = n("630086"),
        d = n("736964"),
        c = n("901582"),
        f = n("206230"),
        E = n("347272"),
        h = n("27618"),
        _ = n("545429"),
        C = n("471671"),
        I = n("810567"),
        S = n("791878"),
        m = n("637824"),
        p = n("146378"),
        T = n("709410"),
        g = n("411676"),
        A = n("86959"),
        N = n("748753"),
        R = n("144521"),
        O = n("59678"),
        v = n("49111"),
        L = n("782340"),
        M = n("512807"),
        P = function (e) {
          let { sectionFilter: t, titleId: n } = e,
            { rows: l, section: P } = (0, r.useStateFromStoresObject)(
              [_.default],
              () => _.default.getState()
            ),
            D = (0, r.useStateFromStores)([C.default], () =>
              C.default.isFocused()
            ),
            y = (0, r.useStateFromStores)([h.default], () =>
              h.default.getRelationshipCount()
            ),
            x = (0, S.useIsClearIncomingFriendRequestsEnabled)(),
            [b, U] = s.useState(() => {
              let e = {};
              for (let t of Object.values(v.FriendsSections)) e[t] = "";
              return e;
            }),
            G = s.useCallback(
              e => {
                U({ ...b, [t]: e });
              },
              [b, t]
            ),
            j = s.useCallback(() => {
              U({ ...b, [t]: "" });
            }, [b, t]),
            w = l.filter(t, b[t]);
          if (0 === w.length && "" === b[t])
            return (0, a.jsxs)("div", {
              className: M.emptyStateContainer,
              children: [
                t === v.FriendsSections.ONLINE && (0, a.jsx)(E.default, {}),
                (0, a.jsx)(
                  T.default,
                  {
                    type: t,
                    onClick: () => {
                      u.default.setSection(v.FriendsSections.ADD_FRIEND);
                    },
                  },
                  P
                ),
              ],
            });
          let k = 0 === w.length && "" !== b[t],
            F = w.filter(
              e => e.type === v.RelationshipTypes.PENDING_INCOMING
            ).length,
            B = t === v.FriendsSections.PENDING && F > 0,
            H = B && x && F >= O.MINIMUM_PENDING_INCOMING_COUNT_FOR_CLEAR_ALL;
          return (0, a.jsxs)(c.default, {
            section: v.AnalyticsSections.FRIENDS_LIST,
            children: [
              (0, a.jsx)(I.default, {
                className: i(M.searchBar, k ? M.searchEmptyState : null),
                query: b[t],
                onChange: G,
                onClear: j,
                size: I.default.Sizes.MEDIUM,
              }),
              t === v.FriendsSections.ONLINE &&
                "" === b[t] &&
                (0, a.jsx)(E.default, {}),
              (0, a.jsxs)("div", {
                className: M.sectionTitle,
                children: [
                  (0, a.jsx)(N.default, {
                    id: n,
                    title: (function (e, t) {
                      switch (e) {
                        case v.FriendsSections.ONLINE:
                          return L.default.Messages.FRIENDS_ONLINE_HEADER.format(
                            { online: t.toString() }
                          );
                        case v.FriendsSections.PENDING:
                          return L.default.Messages.FRIENDS_PENDING_HEADER.format(
                            { count: t.toString() }
                          );
                        case v.FriendsSections.SUGGESTIONS:
                          return L.default.Messages.FRIENDS_FRIEND_SUGGESTIONS_HEADER.format(
                            { count: t.toString() }
                          );
                        case v.FriendsSections.BLOCKED:
                          return L.default.Messages.FRIENDS_BLOCKED_HEADER.format(
                            { count: t.toString() }
                          );
                        default:
                          return L.default.Messages.FRIENDS_ALL_HEADER.format({
                            count: t.toString(),
                          });
                      }
                    })(t, w.length),
                  }),
                  H &&
                    (0, a.jsx)(o.Button, {
                      look: o.ButtonLooks.LINK,
                      color: o.ButtonColors.LINK,
                      className: M.clearButton,
                      size: o.Button.Sizes.TINY,
                      onClick: e => {
                        e.stopPropagation(),
                          d.default.confirmClearPendingRelationships(F);
                      },
                      "aria-label":
                        L.default.Messages.CLEAR_INCOMING_REQUESTS_BUTTON,
                      children:
                        L.default.Messages.CLEAR_INCOMING_REQUESTS_BUTTON,
                    }),
                ],
              }),
              k
                ? (0, a.jsx)("div", {
                    className: M.emptyStateContainer,
                    children: (0, a.jsx)(
                      T.default,
                      { type: T.FriendsSearchStatus.SECTION_NO_RESULTS },
                      P
                    ),
                  })
                : (0, a.jsx)(A.default, {
                    relationshipCount: y,
                    statusSections: [w],
                    renderRow: function (e) {
                      switch (t) {
                        case v.FriendsSections.BLOCKED:
                          return (0, a.jsx)(m.default, { ...e, isFocused: D });
                        case v.FriendsSections.PENDING:
                          return (0, a.jsx)(g.default, { ...e, isFocused: D });
                        case v.FriendsSections.SUGGESTIONS:
                          return (0, a.jsx)(R.default, { ...e, isFocused: D });
                        case v.FriendsSections.ONLINE:
                        case v.FriendsSections.ALL:
                        default:
                          return (0, a.jsx)(p.default, { ...e, isFocused: D });
                      }
                    },
                    sectionFilter: t,
                    searchQuery: b[t],
                    useReducedMotion: f.default.useReducedMotion,
                  }),
            ],
          });
        };
    },
    224978: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("458960"),
        o = n("974667"),
        u = n("77078"),
        d = n("272030"),
        c = n("59678"),
        f = n("68099");
      class E extends s.PureComponent {
        componentWillLeave(e) {
          r.default
            .parallel([
              r.default.timing(this.state.opacity, {
                toValue: 0,
                duration: 200,
              }),
              r.default.timing(this.state.height, {
                toValue: 0,
                duration: 200,
              }),
            ])
            .start(e);
        }
        componentWillEnter(e) {
          this.state.opacity.setValue(0),
            this.state.height.setValue(0),
            r.default
              .parallel([
                r.default.timing(this.state.opacity, {
                  toValue: 1,
                  duration: 200,
                }),
                r.default.timing(this.state.height, {
                  toValue: c.PEOPLE_LIST_ITEM_HEIGHT,
                  duration: 200,
                }),
              ])
              .start(e);
        }
        render() {
          let {
              height: e,
              opacity: t,
              hovered: n,
              isContextMenuActive: s,
            } = this.state,
            { children: l, user: d, onClick: c, isActive: E } = this.props;
          return (0, a.jsx)(o.ListNavigatorItem, {
            id: d.id,
            children: o =>
              (0, a.jsx)(u.FocusRing, {
                offset: { left: -8, right: -8 },
                children: (0, a.jsx)(r.default.div, {
                  className: i(f.peopleListItem, { [f.active]: E || s }),
                  onContextMenu: e => this.handleContextMenu(e, d),
                  onMouseEnter: this.handleMouseEnter,
                  onMouseLeave: this.handleMouseLeave,
                  onClick: null != c ? c : void 0,
                  style: { height: e, opacity: t },
                  ...o,
                  children: l(n || E || s),
                }),
              }),
          });
        }
        constructor(...e) {
          super(...e),
            (this.state = {
              height: new r.default.Value(c.PEOPLE_LIST_ITEM_HEIGHT),
              opacity: new r.default.Value(1),
              hovered: !1,
              isContextMenuActive: !1,
            }),
            (this.handleMouseEnter = () => {
              let { isFocused: e, isActive: t, onOtherHover: n } = this.props,
                { isContextMenuActive: a } = this.state;
              this.setState({ hovered: e }),
                e && !t && !a && (null == n || n());
            }),
            (this.handleMouseLeave = () => {
              this.setState({ hovered: !1 });
            }),
            (this.handleContextMenu = (e, t) => {
              this.setState({ isContextMenuActive: !0 }),
                (0, d.openContextMenuLazy)(
                  e,
                  async () => {
                    let { default: e } = await n
                      .el("406784")
                      .then(n.bind(n, "406784"));
                    return n => (0, a.jsx)(e, { ...n, user: t });
                  },
                  {
                    onClose: () => {
                      this.setState({ isContextMenuActive: !1 });
                    },
                  }
                );
            });
        }
      }
      var h = E;
    },
    86959: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("204597"),
        l = n("904945"),
        i = n("59678");
      function r(e) {
        let {
          relationshipCount: t,
          statusSections: n,
          renderRow: r,
          searchQuery: o,
          sectionFilter: u,
          useReducedMotion: d,
        } = e;
        return t >= i.RELATIONSHIP_COUNT_ANIMATION_THRESHOLD
          ? (0, a.jsx)(s.default, {
              statusSections: n,
              renderRow: r,
              searchQuery: o,
            })
          : (0, a.jsx)(l.default, {
              statusSections: n,
              renderRow: r,
              sectionFilter: u,
              searchQuery: o,
              useReducedMotion: d,
            });
      }
    },
    204597: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("974667"),
        i = n("446674"),
        r = n("77078"),
        o = n("206230"),
        u = n("59678"),
        d = n("512807"),
        c = function (e) {
          let { statusSections: t, renderRow: n, searchQuery: c } = e,
            f = e => {
              let n = t[e];
              return 0 === n.length ? 0 : u.STATUS_HEADER_HEIGHT + 16;
            },
            E = e => {
              let { section: a, row: s } = e,
                l = t[a];
              if (null == l || null == s) return null;
              let i = l[s];
              return null == i ? null : n(i);
            },
            h = (0, i.useStateFromStores)(
              [o.default],
              () => o.default.keyboardModeEnabled
            ),
            _ = s.useRef(null),
            C = s.useCallback(
              () =>
                new Promise(e => {
                  let t = _.current;
                  if (null == t) return e();
                  t.scrollToTop({
                    callback: () => requestAnimationFrame(() => e()),
                  });
                }),
              []
            ),
            I = s.useCallback(
              () =>
                new Promise(e => {
                  let t = _.current;
                  if (null == t) return e();
                  t.scrollToBottom({
                    callback: () => requestAnimationFrame(() => e()),
                  });
                }),
              []
            ),
            S = s.useCallback(e => {
              let t = document.querySelector(e),
                n = _.current;
              null != t &&
                null != n &&
                n.scrollIntoViewNode({
                  node: t,
                  padding: 8,
                  callback: () => (null == t ? void 0 : t.focus()),
                });
            }, []),
            m = (0, l.default)({
              id: "people-list",
              isEnabled: h,
              scrollToStart: C,
              scrollToEnd: I,
              setFocus: S,
            });
          return (0, a.jsx)(l.ListNavigatorProvider, {
            navigator: m,
            children: (0, a.jsx)(l.ListNavigatorContainer, {
              children: e => {
                let { ref: n, ...s } = e;
                return (0, a.jsx)(r.ListAuto, {
                  ref: e => {
                    var t;
                    (_.current = e),
                      (n.current =
                        null !==
                          (t = null == e ? void 0 : e.getScrollerNode()) &&
                        void 0 !== t
                          ? t
                          : null);
                  },
                  sectionHeight: f,
                  renderRow: E,
                  rowHeight: u.PEOPLE_LIST_ITEM_HEIGHT,
                  sections: t.map(e =>
                    "" !== c && 0 === e.length ? e.length + 1 : e.length
                  ),
                  className: d.peopleList,
                  ...s,
                });
              },
            }),
          });
        };
    },
    904945: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("974667"),
        l = n("446674"),
        i = n("266491"),
        r = n("77078"),
        o = n("206230"),
        u = n("49111"),
        d = n("512807"),
        c = function (e) {
          let {
              statusSections: t,
              renderRow: n,
              searchQuery: c,
              sectionFilter: f,
              useReducedMotion: E,
            } = e,
            h = (0, l.useStateFromStores)(
              [o.default],
              () => o.default.keyboardModeEnabled
            ),
            _ = (0, s.default)({
              id: "people",
              isEnabled: h,
              async scrollToStart() {},
              async scrollToEnd() {},
            }),
            C = f !== u.FriendsSections.ONLINE && f !== u.FriendsSections.ALL,
            I = E || "" !== c || C,
            S = t.map((e, t) =>
              I
                ? (0, a.jsx)("div", { children: e.map(n) }, t)
                : (0, a.jsx)(
                    i.default,
                    {
                      transitionAppear: !1,
                      component: "div",
                      children: e.map(n),
                    },
                    t
                  )
            );
          return (0, a.jsx)(s.ListNavigatorProvider, {
            navigator: _,
            children: (0, a.jsx)(s.ListNavigatorContainer, {
              children: e => {
                let { ref: t, ...n } = e;
                return (0, a.jsx)(r.ScrollerAuto, {
                  ref: t,
                  className: d.peopleList,
                  ...n,
                  children: S,
                });
              },
            }),
          });
        };
    },
    747223: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return x;
          },
        }),
        n("313619"),
        n("654714"),
        n("287168"),
        n("956660"),
        n("222007"),
        n("781738");
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("90915"),
        o = n("394846"),
        u = n("446674"),
        d = n("77078"),
        c = n("913144"),
        f = n("939488"),
        E = n("630086"),
        h = n("69927"),
        _ = n("449004"),
        C = n("539938"),
        I = n("718091"),
        S = n("698343"),
        m = n("970366"),
        p = n("161778"),
        T = n("545429"),
        g = n("476765"),
        A = n("564875"),
        N = n("956089"),
        R = n("439932"),
        O = n("161011"),
        v = n("756183"),
        L = n("49111"),
        M = n("586391"),
        P = n("782340"),
        D = n("859120");
      function y() {
        return (0, a.jsxs)("div", {
          className: D.inviteToolbar,
          children: [
            (0, a.jsx)(I.default, { tooltip: P.default.Messages.NEW_GROUP_DM }),
            (0, a.jsx)(C.default.Divider, {}),
          ],
        });
      }
      var x = function (e) {
        let { initialSection: t } = e,
          n = (0, r.useLocation)(),
          l = (0, r.useHistory)();
        s.useEffect(() => {
          let e = "true" === new URLSearchParams(n.search).get("confirm-age");
          e &&
            c.default
              .dispatch({
                type: "AGE_GATE_MODAL_OPEN",
                source: M.AgeGateSource.DEEP_LINK_PROMPT,
              })
              .then(() => {
                l.replace(L.Routes.ME);
              });
        }, [l, n]),
          s.useEffect(() => {
            f.setHomeLink(L.Routes.FRIENDS), (0, m.trackAppUIViewed)("friends");
          }, []),
          s.useEffect(() => {
            null != t && E.default.setInitialSection(t);
          }, [t]);
        let I = (0, u.useStateFromStores)([p.default], () => p.default.theme),
          { section: x, pendingCount: b } = (0, u.useStateFromStoresObject)(
            [T.default],
            () => T.default.getState()
          ),
          U = (0, u.useStateFromStoresObject)([_.default], () =>
            _.default.getSuggestionCount()
          ),
          G = (0, g.useUID)(),
          j = (0, g.useUID)();
        return (0, a.jsxs)("main", {
          className: D.container,
          "aria-label": P.default.Messages.FRIENDS,
          children: [
            (0, a.jsx)(h.AppPageTitle, {
              location: P.default.Messages.FRIENDS,
            }),
            (0, a.jsxs)(C.default, {
              className: (0, R.getThemeClass)(I),
              toolbar: (0, a.jsx)(y, {}),
              scrollable: o.isMobile,
              role: "navigation",
              "aria-labelledby": G,
              children: [
                (0, a.jsx)(C.default.Icon, {
                  icon: A.default,
                  "aria-hidden": !0,
                }),
                (0, a.jsx)(C.default.Title, {
                  id: G,
                  children: P.default.Messages.FRIENDS,
                }),
                (0, a.jsx)(C.default.Divider, {}),
                (0, a.jsxs)(d.TabBar, {
                  "aria-label": P.default.Messages.FRIENDS,
                  selectedItem: x,
                  type: "top-pill",
                  onItemSelect: e => {
                    E.default.setSection(e);
                  },
                  className: D.tabBar,
                  children: [
                    (0, a.jsx)(d.TabBar.Item, {
                      id: L.FriendsSections.ONLINE,
                      className: D.item,
                      children: P.default.Messages.FRIENDS_SECTION_ONLINE,
                    }),
                    (0, a.jsx)(d.TabBar.Item, {
                      id: L.FriendsSections.ALL,
                      className: D.item,
                      children: P.default.Messages.FRIENDS_SECTION_ALL,
                    }),
                    (0, a.jsxs)(d.TabBar.Item, {
                      id: L.FriendsSections.PENDING,
                      className: D.item,
                      "aria-label": P.default.Messages.FRIENDS_SECTION_PENDING,
                      children: [
                        P.default.Messages.FRIENDS_SECTION_PENDING,
                        b > 0
                          ? (0, a.jsx)(N.NumberBadge, {
                              count: b,
                              className: D.badge,
                              style: { paddingRight: 0 },
                            })
                          : null,
                      ],
                    }),
                    U > 0
                      ? (0, a.jsxs)(d.TabBar.Item, {
                          id: L.FriendsSections.SUGGESTIONS,
                          className: D.item,
                          "aria-label":
                            P.default.Messages.FRIENDS_SECTION_SUGGESTIONS,
                          children: [
                            P.default.Messages.FRIENDS_SECTION_SUGGESTIONS,
                            (0, a.jsx)(N.NumberBadge, {
                              count: U,
                              className: D.badge,
                              style: { paddingRight: 0 },
                            }),
                          ],
                        })
                      : null,
                    (0, a.jsx)(d.TabBar.Item, {
                      id: L.FriendsSections.BLOCKED,
                      className: D.item,
                      children: P.default.Messages.BLOCKED,
                    }),
                    (0, a.jsx)(d.TabBar.Item, {
                      "aria-label":
                        P.default.Messages.FRIENDS_SECTION_ADD_FRIEND,
                      className: i(D.item, D.addFriend),
                      id: L.FriendsSections.ADD_FRIEND,
                      children: (0, a.jsx)("span", {
                        children: P.default.Messages.FRIENDS_SECTION_ADD_FRIEND,
                      }),
                    }),
                  ],
                }),
              ],
            }),
            (0, a.jsxs)("div", {
              className: D.tabBody,
              children: [
                (0, a.jsx)(d.TabBar.Panel, {
                  id: x,
                  className: D.peopleColumn,
                  "aria-labelledby": j,
                  children:
                    x === L.FriendsSections.ADD_FRIEND
                      ? (0, a.jsx)(O.default, {})
                      : (0, a.jsx)(v.default, { titleId: j, sectionFilter: x }),
                }),
                (0, a.jsx)("div", {
                  className: D.nowPlayingColumn,
                  children: (0, a.jsx)(S.default, {}),
                }),
              ],
            }),
          ],
        });
      };
    },
    748753: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("826684"),
        l = n("300202");
      function i(e) {
        let { title: t, id: n } = e;
        return (0, a.jsx)(s.default, {
          className: l.title,
          id: n,
          children: t,
        });
      }
    },
    83916: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("943722"),
        l = n("158998"),
        i = n("210630"),
        r = function (e) {
          let {
            hovered: t,
            activities: n,
            applicationStream: r,
            status: o,
            user: u,
          } = e;
          return n.length > 0
            ? (0, a.jsx)(s.default, {
                className: i.activity,
                textClassName: i.text,
                emojiClassName: i.customStatusEmoji,
                activities: n,
                applicationStream: r,
                animate: t,
                user: u,
              })
            : (0, a.jsx)("div", {
                className: i.text,
                children: (0, l.humanizeStatus)(o),
              });
        };
    },
    144521: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return I;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("736964"),
        i = n("390790"),
        r = n("401642"),
        o = n("36694"),
        u = n("945330"),
        d = n("599110"),
        c = n("371449"),
        f = n("224978"),
        E = n("559541"),
        h = n("49111"),
        _ = n("782340"),
        C = n("708046");
      function I(e) {
        let { user: t, nickname: n, status: I, isFocused: S } = e,
          m = s.useContext(d.AnalyticsContext),
          p = e => {
            null == e || e.stopPropagation(),
              l.default.addRelationship({
                userId: t.id,
                context: { location: "Friends" },
                type: void 0,
                friendToken: void 0,
                fromFriendSuggestion: !0,
              });
          },
          T = e => {
            null == e || e.stopPropagation(), i.default.ignore(t.id);
          },
          g = I === h.StatusTypes.OFFLINE ? h.StatusTypes.UNKNOWN : I;
        return (0, a.jsx)(f.default, {
          isFocused: S,
          user: t,
          onClick: () =>
            (0, r.openUserProfileModal)({
              userId: t.id,
              analyticsLocation: m.location,
            }),
          children: e => {
            let s = (0, a.jsxs)(a.Fragment, {
              children: [
                (0, a.jsx)(c.default, {
                  icon: o.default,
                  actionType: c.default.ActionTypes.ACCEPT,
                  tooltip: _.default.Messages.FRIEND_REQUEST_ACCEPT,
                  onClick: p,
                  shouldHighlight: e,
                }),
                (0, a.jsx)(c.default, {
                  icon: u.default,
                  actionType: c.default.ActionTypes.DENY,
                  tooltip: _.default.Messages.FRIEND_REQUEST_IGNORE,
                  onClick: T,
                  shouldHighlight: e,
                }),
              ],
            });
            return (0, a.jsxs)("div", {
              className: C.listItemContents,
              children: [
                (0, a.jsx)(E.default, {
                  user: t,
                  hovered: e,
                  status: g,
                  subText: n,
                  className: C.userInfo,
                }),
                (0, a.jsx)("div", { className: C.actions, children: s }),
              ],
            });
          },
        });
      }
    },
    559541: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("414456"),
        l = n.n(s),
        i = n("446674"),
        r = n("145079"),
        o = n("87657"),
        u = n("27618"),
        d = n("819088"),
        c = function (e) {
          let {
              user: t,
              hovered: n,
              subText: s,
              showAccountIdentifier: c,
              status: f,
              isMobile: E,
              className: h,
            } = e,
            _ = (0, i.useStateFromStores)([u.default], () =>
              u.default.getNickname(t.id)
            );
          return (0, a.jsxs)("div", {
            className: l(d.userInfo, h, { [d.hovered]: n }),
            children: [
              (0, a.jsx)(o.default, {
                user: t,
                className: d.avatar,
                animate: n,
                status: f,
                isMobile: E,
              }),
              (0, a.jsxs)("div", {
                className: d.text,
                children: [
                  (0, a.jsx)(r.default, {
                    user: t,
                    nick: _,
                    botClass: d.botTag,
                    className: l(d.discordTag, {
                      [d.alignPomelo]: t.isPomelo(),
                    }),
                    usernameClass: d.username,
                    discriminatorClass: d.discriminator,
                    showAccountIdentifier: c,
                  }),
                  (0, a.jsx)("div", { className: d.subtext, children: s }),
                ],
              }),
            ],
          });
        };
    },
    25033: function (e, t, n) {
      "use strict";
      let a;
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var s = n("446674"),
        l = n("913144"),
        i = n("988415");
      let r = (0, i.getDefaultCountryCode)();
      function o(e) {
        var t;
        let { countryCode: n } = e;
        null != n &&
          (r =
            null !== (t = (0, i.getCountryCodeByAlpha2)(n)) && void 0 !== t
              ? t
              : (0, i.getDefaultCountryCode)());
      }
      class u extends s.default.DeviceSettingsStore {
        initialize(e) {
          null != e && (a = e.selectedCountryCode);
        }
        getUserAgnosticState() {
          return { selectedCountryCode: a };
        }
        getCountryCode() {
          return null != a ? a : r;
        }
      }
      (u.displayName = "PhoneStore"), (u.persistKey = "PhoneStore");
      var d = new u(l.default, {
        PHONE_SET_COUNTRY_CODE: function (e) {
          let { countryCode: t } = e;
          a = t;
        },
        CONNECTION_OPEN: o,
        SET_LOCATION_METADATA: o,
      });
    },
    356702: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          unlockAchievement: function () {
            return u;
          },
          showAchievementToast: function () {
            return d;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("77078"),
        l = n("913144"),
        i = n("106413"),
        r = n("745690"),
        o = n("782340");
      function u(e) {
        l.default.dispatch({
          type: "POGGERMODE_ACHIEVEMENT_UNLOCK",
          achievementId: e,
        });
      }
      function d(e, t) {
        let n = (0, i.getPoggermodeAchievementData)(e);
        null != n &&
          (0, s.showToast)(
            (0, s.createToast)(
              o.default.Messages.POGGERMODE_ACHIEVEMENTS,
              s.ToastType.CUSTOM,
              {
                position: s.ToastPosition.BOTTOM,
                component: (0, a.jsx)(r.default, {
                  achievement: n,
                  unlocked: t,
                }),
                duration: 6e3,
              }
            )
          );
      }
    },
    429464: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        });
      var a = n("446674"),
        s = n("913144"),
        l = n("271938"),
        i = n("356702"),
        r = n("880731"),
        o = n("943551");
      let u = { unlockedAchievements: {} },
        d = { ...u };
      class c extends a.default.PersistedStore {
        initialize(e) {
          this.waitFor(l.default, o.default);
          let t = null != e ? e : { ...u };
          for (let e in t) d[e] = t[e];
        }
        getState() {
          return d;
        }
        getAllUnlockedAchievements() {
          return d.unlockedAchievements;
        }
        getUnlocked(e) {
          var t;
          return null !== (t = d.unlockedAchievements[e]) && void 0 !== t
            ? t
            : null;
        }
      }
      (c.displayName = "PoggermodeAchievementStore"),
        (c.persistKey = "PoggermodeAchievementStore");
      var f = new c(s.default, {
        POGGERMODE_ACHIEVEMENT_UNLOCK: function (e) {
          var t;
          let { achievementId: n } = e;
          if (!r.default.isEnabled()) return !1;
          (t = n),
            null != d.unlockedAchievements[t] ||
              ((d.unlockedAchievements = {
                ...d.unlockedAchievements,
                [t]: { achievementId: t, dateUnlocked: Date.now() },
              }),
              setTimeout(() => {
                (0, i.showAchievementToast)(t, !0);
              }, 2e3));
        },
      });
    },
    106413: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          PoggermodeAchievementId: function () {
            return l;
          },
          PoggermodeAchievementRarity: function () {
            return i;
          },
          ACHIEVEMENT_LIST: function () {
            return u;
          },
          getPoggermodeAchievementData: function () {
            return d;
          },
          getAchievementStyles: function () {
            return c;
          },
        });
      var a,
        s,
        l,
        i,
        r = n("119035"),
        o = n("782340");
      ((a = l || (l = {}))[(a.ENABLE_POGGERMODE = 0)] = "ENABLE_POGGERMODE"),
        (a[(a.DISABLE_POGGERMODE = 1)] = "DISABLE_POGGERMODE"),
        (a[(a.PING_SOMEONE = 2)] = "PING_SOMEONE"),
        (a[(a.PING_ME = 3)] = "PING_ME"),
        (a[(a.COMBO_MULTI_LEVEL_1 = 4)] = "COMBO_MULTI_LEVEL_1"),
        (a[(a.COMBO_MULTI_LEVEL_2 = 5)] = "COMBO_MULTI_LEVEL_2"),
        (a[(a.COMBO_MULTI_LEVEL_3 = 6)] = "COMBO_MULTI_LEVEL_3"),
        (a[(a.COMBO_MULTI_LEVEL_4 = 7)] = "COMBO_MULTI_LEVEL_4"),
        (a[(a.TOTAL_SCORE_LEVEL_1 = 8)] = "TOTAL_SCORE_LEVEL_1"),
        (a[(a.TOTAL_SCORE_LEVEL_2 = 9)] = "TOTAL_SCORE_LEVEL_2"),
        (a[(a.TOTAL_SCORE_LEVEL_3 = 10)] = "TOTAL_SCORE_LEVEL_3"),
        (a[(a.TOTAL_SCORE_LEVEL_4 = 11)] = "TOTAL_SCORE_LEVEL_4"),
        (a[(a.TOTAL_SCORE_LEVEL_5 = 12)] = "TOTAL_SCORE_LEVEL_5"),
        (a[(a.VISITOR_100 = 13)] = "VISITOR_100"),
        (a[(a.CUSTOMIZE_CONFETTI = 14)] = "CUSTOMIZE_CONFETTI"),
        (a[(a.MORE = 15)] = "MORE"),
        (a[(a.COMBO_VALUE_LEVEL_1 = 16)] = "COMBO_VALUE_LEVEL_1"),
        (a[(a.COMBO_VALUE_LEVEL_2 = 17)] = "COMBO_VALUE_LEVEL_2"),
        (a[(a.COMBO_VALUE_LEVEL_3 = 18)] = "COMBO_VALUE_LEVEL_3"),
        (a[(a.COMBO_VALUE_LEVEL_4 = 19)] = "COMBO_VALUE_LEVEL_4"),
        ((s = i || (i = {}))[(s.COMMON = 0)] = "COMMON"),
        (s[(s.UNCOMMON = 1)] = "UNCOMMON"),
        (s[(s.RARE = 2)] = "RARE"),
        (s[(s.EPIC = 3)] = "EPIC"),
        (s[(s.LEGENDARY = 4)] = "LEGENDARY");
      let u = {
        0: {
          id: 0,
          name: () =>
            o.default.Messages.POGGERMODE_ACHIEVEMENT_ENABLE_POGGERMODE_NAME,
          description: () =>
            o.default.Messages
              .POGGERMODE_ACHIEVEMENT_ENABLE_POGGERMODE_DESCRIPTION,
          rarity: 0,
          hideDescriptionUntilUnlock: !1,
        },
        1: {
          id: 1,
          name: () =>
            o.default.Messages.POGGERMODE_ACHIEVEMENT_DISABLE_POGGERMODE_NAME,
          description: () =>
            o.default.Messages
              .POGGERMODE_ACHIEVEMENT_DISABLE_POGGERMODE_DESCRIPTION,
          rarity: 1,
          hideDescriptionUntilUnlock: !1,
        },
        13: {
          id: 13,
          name: () =>
            o.default.Messages.POGGERMODE_ACHIEVEMENT_VISITOR_100_NAME,
          description: () =>
            o.default.Messages.POGGERMODE_ACHIEVEMENT_VISITOR_100_DESCRIPTION,
          rarity: 4,
          hideDescriptionUntilUnlock: !0,
          onAction: () => {
            window.open(
              "https://www.youtube.com/watch?v=dQw4w9WgXcQ",
              "_blank"
            );
          },
        },
        14: {
          id: 14,
          name: () =>
            o.default.Messages.POGGERMODE_ACHIEVEMENT_CUSTOMIZE_CONFETTI_NAME,
          description: () =>
            o.default.Messages
              .POGGERMODE_ACHIEVEMENT_CUSTOMIZE_CONFETTI_DESCRIPTION,
          rarity: 0,
          hideDescriptionUntilUnlock: !1,
        },
        15: {
          id: 15,
          name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_MORE_NAME,
          description: () =>
            o.default.Messages.POGGERMODE_ACHIEVEMENT_MORE_DESCRIPTION,
          rarity: 1,
          hideDescriptionUntilUnlock: !1,
        },
        2: {
          id: 2,
          name: () =>
            o.default.Messages.POGGERMODE_ACHIEVEMENT_PING_SOMEONE_NAME,
          description: () =>
            o.default.Messages.POGGERMODE_ACHIEVEMENT_PING_SOMEONE_DESCRIPTION,
          rarity: 0,
          hideDescriptionUntilUnlock: !1,
        },
        3: {
          id: 3,
          name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_PING_ME_NAME,
          description: () =>
            o.default.Messages.POGGERMODE_ACHIEVEMENT_PING_ME_DESCRIPTION,
          rarity: 1,
          hideDescriptionUntilUnlock: !1,
        },
        4: {
          id: 4,
          name: () =>
            o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_MULTI_LEVEL_1_NAME,
          description: () =>
            o.default.Messages
              .POGGERMODE_ACHIEVEMENT_COMBO_MULTI_LEVEL_1_DESCRIPTION,
          rarity: 0,
          hideDescriptionUntilUnlock: !1,
          checkUnlock: e => e.multiplier >= 2,
        },
        5: {
          id: 5,
          name: () =>
            o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_MULTI_LEVEL_2_NAME,
          description: () =>
            o.default.Messages
              .POGGERMODE_ACHIEVEMENT_COMBO_MULTI_LEVEL_2_DESCRIPTION,
          rarity: 1,
          hideDescriptionUntilUnlock: !1,
          checkUnlock: e => e.multiplier >= 4,
        },
        6: {
          id: 6,
          name: () =>
            o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_MULTI_LEVEL_3_NAME,
          description: () =>
            o.default.Messages
              .POGGERMODE_ACHIEVEMENT_COMBO_MULTI_LEVEL_3_DESCRIPTION,
          rarity: 2,
          hideDescriptionUntilUnlock: !1,
          checkUnlock: e => e.multiplier >= 5,
        },
        7: {
          id: 7,
          name: () =>
            o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_MULTI_LEVEL_4_NAME,
          description: () =>
            o.default.Messages
              .POGGERMODE_ACHIEVEMENT_COMBO_MULTI_LEVEL_4_DESCRIPTION,
          rarity: 2,
          hideDescriptionUntilUnlock: !1,
          checkUnlock: e => e.multiplier >= 7,
        },
        8: {
          id: 8,
          name: () =>
            o.default.Messages.POGGERMODE_ACHIEVEMENT_TOTAL_SCORE_LEVEL_1_NAME,
          description: () =>
            o.default.Messages
              .POGGERMODE_ACHIEVEMENT_TOTAL_SCORE_LEVEL_1_DESCRIPTION,
          rarity: 3,
          hideDescriptionUntilUnlock: !0,
          checkUnlock: e => 430 === (0, r.getComboScore)(e),
        },
        9: {
          id: 9,
          name: () =>
            o.default.Messages.POGGERMODE_ACHIEVEMENT_TOTAL_SCORE_LEVEL_2_NAME,
          description: () =>
            o.default.Messages
              .POGGERMODE_ACHIEVEMENT_TOTAL_SCORE_LEVEL_2_DESCRIPTION,
          rarity: 3,
          hideDescriptionUntilUnlock: !0,
          checkUnlock: e => 555 === (0, r.getComboScore)(e),
        },
        10: {
          id: 10,
          name: () =>
            o.default.Messages.POGGERMODE_ACHIEVEMENT_TOTAL_SCORE_LEVEL_3_NAME,
          description: () =>
            o.default.Messages
              .POGGERMODE_ACHIEVEMENT_TOTAL_SCORE_LEVEL_3_DESCRIPTION,
          rarity: 3,
          hideDescriptionUntilUnlock: !0,
          checkUnlock: e => 898 === (0, r.getComboScore)(e),
        },
        11: {
          id: 11,
          name: () =>
            o.default.Messages.POGGERMODE_ACHIEVEMENT_TOTAL_SCORE_LEVEL_4_NAME,
          description: () =>
            o.default.Messages
              .POGGERMODE_ACHIEVEMENT_TOTAL_SCORE_LEVEL_4_DESCRIPTION,
          rarity: 4,
          hideDescriptionUntilUnlock: !0,
          checkUnlock: e => 1337 === (0, r.getComboScore)(e),
        },
        12: {
          id: 12,
          name: () =>
            o.default.Messages.POGGERMODE_ACHIEVEMENT_TOTAL_SCORE_LEVEL_5_NAME,
          description: () =>
            o.default.Messages
              .POGGERMODE_ACHIEVEMENT_TOTAL_SCORE_LEVEL_5_DESCRIPTION,
          rarity: 4,
          hideDescriptionUntilUnlock: !0,
          checkUnlock: e => 2048 === (0, r.getComboScore)(e),
        },
        16: {
          id: 16,
          name: () =>
            o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_VALUE_LEVEL_1_NAME,
          description: () =>
            o.default.Messages
              .POGGERMODE_ACHIEVEMENT_COMBO_VALUE_LEVEL_1_DESCRIPTION,
          rarity: 2,
          hideDescriptionUntilUnlock: !0,
          checkUnlock: e => 64 === e.value,
        },
        17: {
          id: 17,
          name: () =>
            o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_VALUE_LEVEL_2_NAME,
          description: () =>
            o.default.Messages
              .POGGERMODE_ACHIEVEMENT_COMBO_VALUE_LEVEL_2_DESCRIPTION,
          rarity: 3,
          hideDescriptionUntilUnlock: !0,
          checkUnlock: e => 88 === e.value,
        },
        18: {
          id: 18,
          name: () =>
            o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_VALUE_LEVEL_3_NAME,
          description: () =>
            o.default.Messages
              .POGGERMODE_ACHIEVEMENT_COMBO_VALUE_LEVEL_3_DESCRIPTION,
          rarity: 3,
          hideDescriptionUntilUnlock: !0,
          checkUnlock: e => 99 === e.value,
        },
        19: {
          id: 19,
          name: () =>
            o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_VALUE_LEVEL_4_NAME,
          description: () =>
            o.default.Messages
              .POGGERMODE_ACHIEVEMENT_COMBO_VALUE_LEVEL_4_DESCRIPTION,
          rarity: 4,
          hideDescriptionUntilUnlock: !0,
          checkUnlock: e => 113 === e.value,
        },
      };
      function d(e) {
        return u[e];
      }
      let c = e => {
        switch (e) {
          case 0:
            return { color: "#1ABC9C" };
          case 1:
            return { color: "#3498DB" };
          case 2:
            return { color: "#9B59B6" };
          case 3:
            return { color: "#E91E63" };
          case 4:
            return { color: "#E67E22" };
        }
      };
    },
    880185: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
        }),
        n("222007");
      var a = n("913144"),
        s = n("316272"),
        l = n("271938"),
        i = n("356702"),
        r = n("429464"),
        o = n("106413"),
        u = n("880731"),
        d = n("943551");
      let c = new Set();
      class f extends s.default {
        _initialize() {
          a.default.subscribe("MESSAGE_CREATE", this.handleMessageCreate),
            a.default.subscribe(
              "POGGERMODE_SETTINGS_UPDATE",
              this.handleSettingsUpdate
            );
        }
        _terminate() {
          a.default.unsubscribe("MESSAGE_CREATE", this.handleMessageCreate),
            a.default.unsubscribe(
              "POGGERMODE_SETTINGS_UPDATE",
              this.handleSettingsUpdate
            );
        }
        constructor(...e) {
          super(...e),
            (this.handleSettingsUpdate = e => {
              let { settings: t } = e;
              t.enabled
                ? (0, i.unlockAchievement)(
                    o.PoggermodeAchievementId.ENABLE_POGGERMODE
                  )
                : !1 === t.enabled &&
                  (0, i.unlockAchievement)(
                    o.PoggermodeAchievementId.DISABLE_POGGERMODE
                  );
              let n = Object.keys(t).some(e => e.startsWith("confetti"));
              n &&
                (0, i.unlockAchievement)(
                  o.PoggermodeAchievementId.CUSTOMIZE_CONFETTI
                );
            }),
            (this.handleMessageCreate = e => {
              var t;
              let {
                channelId: n,
                message: { author: a, nonce: s, mentions: f },
              } = e;
              if (!u.default.isEnabled()) return !1;
              let E = l.default.getId();
              if (
                ((null == f ? void 0 : f.find(e => e.id === E)) != null
                  ? (0, i.unlockAchievement)(o.PoggermodeAchievementId.PING_ME)
                  : (null !== (t = null == f ? void 0 : f.length) &&
                    void 0 !== t
                      ? t
                      : 0) > 0 &&
                    (null == a ? void 0 : a.id) === E &&
                    (0, i.unlockAchievement)(
                      o.PoggermodeAchievementId.PING_SOMEONE
                    ),
                !(0, d.shouldTrackMessage)(null == a ? void 0 : a.id, E, s, c))
              )
                return !1;
              let h = d.default.getMostRecentMessageCombo(n),
                { combo: _ } = null != h ? h : {};
              if (null == _) return !1;
              Object.values(o.PoggermodeAchievementId).forEach(e => {
                if (null != r.default.getUnlocked(e)) return;
                let t = (0, o.getPoggermodeAchievementData)(e),
                  n = null == t ? void 0 : t.checkUnlock;
                if (null != n) !1 !== n(_) && (0, i.unlockAchievement)(e);
              });
            });
        }
      }
      var E = new f();
    },
    624043: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return O;
          },
        }),
        n("222007"),
        n("424973");
      var a = n("913144"),
        s = n("316272"),
        l = n("870696"),
        i = n("271938"),
        r = n("945956"),
        o = n("18494"),
        u = n("191542"),
        d = n("709681"),
        c = n("880731"),
        f = n("943551"),
        E = n("49111");
      let h = (0, d.createSoundForPack)(
          "poggermode_applause",
          l.default.getSoundpack()
        ),
        _ = !1,
        C = !1,
        I = [],
        S = null,
        m = () => {
          !_ && (h.loop(), (_ = !0));
        },
        p = () => {
          h.stop(), (_ = !1);
        },
        T = () => {
          let e = c.default.isEnabled(),
            t = c.default.comboSoundsEnabled;
          if (!e || !t) return !1;
          let n = o.default.getChannelId();
          return null != n && !0;
        },
        g = () => {
          if (0 === I.length || !T() || C) return;
          C = !0;
          let [e, t] = I[I.length - 1];
          (0, d.playSound)(e, t), (S = setTimeout(A, 1e3));
        },
        A = () => {
          I.pop(), (C = !1), g();
        },
        N = function (e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 1,
            n = r.default.isConnected();
          I.push([e, t * (n ? 0.1 : 1)]), g();
        };
      class R extends s.default {
        _initialize() {
          f.default.addChangeListener(this.startAudio),
            a.default.subscribe("RTC_CONNECTION_STATE", this.setVolume),
            a.default.subscribe("TYPING_STOP", this.stopAudio),
            a.default.subscribe("TYPING_STOP_LOCAL", this.stopAudio),
            a.default.subscribe("CHANNEL_SELECT", this.stopAudio),
            a.default.subscribe("POGGERMODE_SETTINGS_UPDATE", this.stopAudio);
        }
        _terminate() {
          f.default.removeChangeListener(this.startAudio),
            a.default.unsubscribe("RTC_CONNECTION_STATE", this.setVolume),
            a.default.unsubscribe("TYPING_STOP", this.stopAudio),
            a.default.unsubscribe("TYPING_STOP_LOCAL", this.stopAudio),
            a.default.unsubscribe("CHANNEL_SELECT", this.stopAudio),
            a.default.unsubscribe("POGGERMODE_SETTINGS_UPDATE", this.stopAudio),
            clearTimeout(S);
        }
        setVolume(e) {
          let { state: t } = e;
          t === E.RTCConnectionStates.RTC_CONNECTED
            ? (h.volume = 0.1)
            : (h.volume = 1);
        }
        handleTypingStop(e) {
          let { userId: t } = e,
            n = i.default.getId();
          n === t && p();
        }
        stopAudio() {
          p();
        }
        startAudio() {
          var e;
          if (!T()) return;
          let t = o.default.getChannelId();
          if (null == t) return;
          let n = i.default.getId(),
            a = u.default.isTyping(t, n),
            s = f.default.getUserCombo(n, t),
            l =
              null !== (e = null == s ? void 0 : s.multiplier) && void 0 !== e
                ? e
                : 1;
          a && l >= 7 ? m() : p();
        }
        playAchievementUnlockSound() {
          T() && N("poggermode_achievement_unlock");
        }
      }
      var O = new R();
    },
    745690: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("77078"),
        o = n("106413"),
        u = n("624043"),
        d = n("408792"),
        c = n("145229");
      let f = e => {
        let { color: t } = e;
        return (0, a.jsxs)("svg", {
          width: "48",
          height: "28",
          viewBox: "0 0 55 34",
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg",
          children: [
            (0, a.jsx)("rect", {
              x: "10.1968",
              y: "7",
              width: "14.4203",
              height: "14.4203",
              transform: "rotate(45 10.1968 7)",
              className: c.toastBG,
            }),
            (0, a.jsx)("rect", {
              x: "27.3936",
              y: "0.59021",
              width: "23.4851",
              height: "23.4851",
              transform: "rotate(45 27.3936 0.59021)",
              className: c.toastBG,
            }),
            (0, a.jsx)("rect", {
              x: "44.5903",
              y: "7",
              width: "14.4203",
              height: "14.4203",
              transform: "rotate(45 44.5903 7)",
              className: c.toastBG,
            }),
            (0, a.jsx)("rect", {
              x: "10.1968",
              y: "13",
              width: "6",
              height: "6",
              transform: "rotate(45 10.1968 13)",
              fill: t,
            }),
            (0, a.jsx)("path", {
              d: "M27.3936 4.39355L34.1233 16.2873L27.3936 28.1811L20.6638 16.2873L27.3936 4.39355Z",
              fill: t,
            }),
            (0, a.jsx)("rect", {
              x: "44.5903",
              y: "13",
              width: "6",
              height: "6",
              transform: "rotate(45 44.5903 13)",
              fill: t,
            }),
          ],
        });
      };
      function E(e) {
        let { achievement: t, unlocked: n } = e,
          {
            name: l,
            description: E,
            rarity: h,
            hideDescriptionUntilUnlock: _,
            onAction: C,
          } = t,
          { color: I } = (0, o.getAchievementStyles)(h);
        s.useEffect(() => {
          let e = setTimeout(() => {
            u.default.playAchievementUnlockSound();
          }, 50);
          return () => {
            clearTimeout(e);
          };
        }, []);
        let S = null != C && n,
          m = S ? r.Clickable : "div";
        return (0, a.jsxs)(m, {
          className: i(c.container, S && c.actionable),
          onClick: () => {
            S && C();
          },
          children: [
            (0, a.jsx)("div", {
              className: c.iconContainer,
              children: (0, a.jsx)(d.default, {
                achievementId: t.id,
                size: d.default.Sizes.SIZE_40,
                unlocked: n,
              }),
            }),
            (0, a.jsxs)("div", {
              className: c.nameContainer,
              children: [
                (0, a.jsx)(r.Text, {
                  variant: "text-md/semibold",
                  color: "header-primary",
                  children: l(),
                }),
                (0, a.jsx)(r.Text, {
                  variant: "text-xs/medium",
                  color: "header-secondary",
                  children: _ && !n ? "?????" : E(),
                }),
              ],
            }),
            (0, a.jsx)("div", {
              className: c.flair,
              children: (0, a.jsx)(f, { color: I }),
            }),
          ],
        });
      }
    },
    408792: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return C;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("819855"),
        l = n("77078"),
        i = n("841098"),
        r = n("449918"),
        o = n("451166"),
        u = n("45029"),
        d = n("300113"),
        c = n("106413"),
        f = n("843455"),
        E = n("365696");
      let h = {
          trophy: f.Color.PRIMARY_400,
          locked: f.Color.PRIMARY_400,
          unlocked: f.Color.GREEN_330,
        },
        _ = {
          trophy: f.Color.PRIMARY_400,
          locked: f.Color.PRIMARY_400,
          unlocked: f.Color.GREEN_330,
        };
      function C(e) {
        var t;
        let {
            achievementId: n,
            unlocked: f,
            size: C = l.AvatarSizes.SIZE_40,
          } = e,
          I = (0, i.default)(),
          S = (0, c.getPoggermodeAchievementData)(n);
        if (null == S) return null;
        let m = (0, l.getAvatarSpecs)(C),
          { name: p, rarity: T } = S,
          { color: g } = (0, c.getAchievementStyles)(T),
          A = (0, s.isThemeDark)(I) ? h : _,
          N = (m.size - m.offset - 2 * m.stroke) * 0.8,
          R = m.size - m.stroke,
          O = { width: 0.4 * N, height: 0.4 * N },
          v = {
            width: O.width + 1,
            height: O.height + 1,
            right: m.stroke + 1,
            bottom: m.stroke + 1,
            padding: 0,
          };
        return (0, a.jsxs)("div", {
          className: E.container,
          style: { width: R, height: R, padding: m.stroke },
          "aria-label": "".concat(null !== (t = p()) && void 0 !== t ? t : ""),
          children: [
            (0, a.jsx)("div", {
              className: E.trophyIconContainer,
              children: (0, a.jsx)(d.default, {
                color: f ? g : (0, r.getColor)(A.trophy),
                width: N,
                height: N,
              }),
            }),
            !f &&
              (0, a.jsx)("div", {
                className: E.lockContainer,
                style: v,
                children: (0, a.jsx)(u.default, {
                  color: (0, r.getColor)(A.locked),
                  ...O,
                }),
              }),
            f &&
              T === c.PoggermodeAchievementRarity.LEGENDARY &&
              (0, a.jsx)("div", {
                className: E.lockContainer,
                style: v,
                children: (0, a.jsx)(o.default, {
                  className: E.confettiIcon,
                  ...O,
                }),
              }),
          ],
        });
      }
      C.Sizes = l.AvatarSizes;
    },
    263065: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("77078"),
        l = n("913144"),
        i = n("316272"),
        r = n("782340");
      class o extends i.default {
        _initialize() {
          l.default.subscribe(
            "POGGERMODE_TEMPORARILY_DISABLED",
            this.handlePoggermodeTemporarilyDisabled
          );
        }
        _terminate() {
          l.default.unsubscribe(
            "POGGERMODE_TEMPORARILY_DISABLED",
            this.handlePoggermodeTemporarilyDisabled
          );
        }
        handlePoggermodeTemporarilyDisabled() {
          (0, s.openModal)(e =>
            (0, a.jsx)(s.ConfirmModal, {
              ...e,
              header:
                r.default.Messages.POGGERMODE_TEMPORARILY_DISABLED_TOAST_TITLE,
              confirmText: r.default.Messages.CONFIRM,
              confirmButtonColor: s.Button.Colors.GREEN,
              children: (0, a.jsx)(s.Text, {
                variant: "text-md/normal",
                children:
                  r.default.Messages.POGGERMODE_TEMPORARILY_DISABLED_TOAST_BODY,
              }),
            })
          );
        }
      }
      var u = new o();
    },
    204025: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("913144"),
        l = n("316272"),
        i = n("269936"),
        r = n("383294"),
        o = n("49111");
      n("573417");
      let u = (0, i.makeLazy)({
          createPromise: () => n.el("93116").then(n.bind(n, "93116")),
          webpackId: "93116",
          name: "PopoutWindowChannelCall",
        }),
        d = (0, i.makeLazy)({
          createPromise: () => n.el("846679").then(n.bind(n, "846679")),
          webpackId: "846679",
          name: "PopoutWindowStageChannelCall",
        }),
        c = (0, i.makeLazy)({
          createPromise: () => n.el("620635").then(n.bind(n, "620635")),
          webpackId: "620635",
          name: "PopoutWindowRTCDebug",
        });
      class f extends l.default {
        _initialize() {
          s.default.subscribe(
            "CHANNEL_CALL_POPOUT_WINDOW_OPEN",
            this.handleOpenChannelCallPopout
          ),
            s.default.subscribe(
              "RTC_DEBUG_POPOUT_WINDOW_OPEN",
              this.handleOpenRTCDebugPopout
            );
        }
        _terminate() {
          s.default.unsubscribe(
            "CHANNEL_CALL_POPOUT_WINDOW_OPEN",
            this.handleOpenChannelCallPopout
          ),
            s.default.unsubscribe(
              "RTC_DEBUG_POPOUT_WINDOW_OPEN",
              this.handleOpenRTCDebugPopout
            );
        }
        handleOpenChannelCallPopout(e) {
          let { channel: t } = e;
          r.open(
            o.PopoutWindowKeys.CHANNEL_CALL_POPOUT,
            e =>
              t.isGuildStageVoice()
                ? (0, a.jsx)(d, { windowKey: e, channelId: t.id })
                : (0, a.jsx)(u, { windowKey: e, channelId: t.id }),
            { defaultWidth: 854, defaultHeight: 480 }
          );
        }
        handleOpenRTCDebugPopout() {
          r.open(
            o.PopoutWindowKeys.RTC_DEBUG_POPOUT,
            e => (0, a.jsx)(c, { windowKey: e }),
            { defaultWidth: 854, defaultHeight: 480 }
          );
        }
      }
      var E = new f();
    },
    684641: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        }),
        n("222007");
      var a = n("458960"),
        s = n("913144"),
        l = n("316272"),
        i = n("619106"),
        r = n("292687");
      class o extends l.default {
        _initialize() {
          r.default.addChangeListener(this.handlePopoutWindowChange),
            s.default.subscribe("WINDOW_FOCUS", this.handleMainWindowFocus);
        }
        _terminate() {
          r.default.removeChangeListener(this.handlePopoutWindowChange),
            s.default.unsubscribe("WINDOW_FOCUS", this.handleMainWindowFocus),
            this.injectWindowAnimationFrame(window);
        }
        injectWindowAnimationFrame(e) {
          let t = t => e.requestAnimationFrame(t),
            n = t => e.cancelAnimationFrame(t);
          a.default.inject.RequestAnimationFrame(t),
            a.default.inject.CancelAnimationFrame(n),
            i.frameLoop.setRAF(t, n);
        }
        constructor(...e) {
          super(...e),
            (this.handleMainWindowFocus = e => {
              let { focused: t } = e;
              t && this.injectWindowAnimationFrame(window);
            }),
            (this.handlePopoutWindowChange = () => {
              let e = r.default
                .getWindowKeys()
                .find(e => r.default.getWindowFocused(e));
              if (null == e) return this.injectWindowAnimationFrame(window);
              let t = r.default.getWindow(e);
              if (null == t || t.closed)
                return this.injectWindowAnimationFrame(window);
              this.injectWindowAnimationFrame(t);
            });
        }
      }
      var u = new o();
    },
    691818: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        });
      var a = n("446674"),
        s = n("913144"),
        l = n("718517");
      let i = 12 * l.default.Millis.HOUR,
        r = { profileThemesRelevanceExceeded: null, savedAt: null },
        o = { hasFetchedRelevance: !1 },
        u = r,
        d = o;
      class c extends a.default.PersistedStore {
        initialize(e) {
          (d = o), (u = r);
          let t = new Date();
          null != e &&
            null != e.savedAt &&
            t.getTime() - e.savedAt < i &&
            (u = e);
        }
        get hasFetchedRelevance() {
          return d.hasFetchedRelevance;
        }
        get profileThemesRelevanceExceeded() {
          return u.profileThemesRelevanceExceeded;
        }
        getState() {
          return u;
        }
      }
      (c.displayName = "PerksRelevanceStore"),
        (c.persistKey = "PerksRelevanceStore");
      var f = new c(s.default, {
        BILLING_PERKS_RELEVANCE_FETCH_START: function () {
          d.hasFetchedRelevance = !0;
        },
        BILLING_PERKS_RELEVANCE_FETCH_SUCCESS: function (e) {
          let { res: t } = e;
          null != t &&
            ((u.profileThemesRelevanceExceeded = t.eligible),
            (u.savedAt = new Date().getTime()));
        },
        BILLING_PERKS_RELEVANCE_FETCH_FAIL: function () {},
        LOGOUT: function () {
          (d = o), (u = r);
        },
      });
    },
    176372: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return C;
          },
        }),
        n("222007");
      var a = n("37983");
      n("884691");
      var s = n("77078"),
        l = n("913144"),
        i = n("316272"),
        r = n("340412"),
        o = n("197881"),
        u = n("982457"),
        d = n("443504"),
        c = n("247820"),
        f = n("641078"),
        E = n("518151");
      let h = "PremiumServerDriveAnnouncementModal";
      class _ extends i.default {
        _initialize() {
          l.default.subscribe(
            "POST_CONNECTION_OPEN",
            this.mayShowAnnouncementModal
          ),
            l.default.subscribe(
              "PREMIUM_MARKETING_PREVIEW",
              this.handlePreview
            );
        }
        _terminate() {
          l.default.unsubscribe(
            "POST_CONNECTION_OPEN",
            this.mayShowAnnouncementModal
          ),
            l.default.unsubscribe(
              "PREMIUM_MARKETING_PREVIEW",
              this.handlePreview
            );
        }
        constructor(...e) {
          super(...e),
            (this.maybeOpenServerDriveAnnouncementModal = (e, t) => {
              let l = (0, E.extractAnnouncementModalContent)({
                content: e,
                isPreview: t,
              });
              return (
                null != l &&
                ((0, s.closeModal)(h),
                (0, s.openModalLazy)(
                  async () => {
                    let { default: e } = await n
                      .el("518151")
                      .then(n.bind(n, "518151"));
                    return t =>
                      (0, a.jsx)(e, { renderModalProps: t, properties: l });
                  },
                  { modalKey: h }
                ),
                !0)
              );
            }),
            (this.handlePreview = e => {
              let { properties: t } = e;
              this.maybeOpenServerDriveAnnouncementModal(t, !0);
            }),
            (this.mayShowAnnouncementModal = async () => {
              if (
                (await (0, f.maybeFetchActiveBogoPromotion)(),
                !o.ProcessArgs.isDisallowPopupsSet())
              ) {
                if (
                  !(0, s.hasAnyModalOpen)() &&
                  d.default.getCurrentConfig({
                    location: "OfferAnnouncementManager",
                  }).enabled
                ) {
                  let e = await (0, c.fetchPremiumMarketingContent)();
                  for (let t of e)
                    if (this.maybeOpenServerDriveAnnouncementModal(t, !1))
                      break;
                }
                !(0, s.hasAnyModalOpen)() &&
                  (await (0, f.isEligibleForBOGOAnnouncementModal)()) &&
                  (0, s.openModalLazy)(async () => {
                    let { default: e } = await n
                      .el("981125")
                      .then(n.bind(n, "981125"));
                    return t => (0, a.jsx)(e, { renderModalProps: t });
                  });
              }
            }),
            (this._hasTrialOffer = async () => {
              try {
                if (
                  (r.default.shouldFetchOffer() &&
                    (await u.default.fetchUserTrialOffer()),
                  r.default.hasFetchedOffer() &&
                    r.default.hasAnyUnexpiredOffer())
                )
                  return !0;
                return !1;
              } catch (e) {
                return !1;
              }
            });
        }
      }
      var C = new _();
    },
    215429: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("669491"),
        l = n("819855"),
        i = n("77078"),
        r = n("841098"),
        o = e => {
          let { className: t } = e,
            n = (0, r.default)(),
            o = (0, i.useToken)(s.default.colors.BACKGROUND_ACCENT).hex();
          return (0, a.jsx)("svg", {
            width: "700",
            height: "120",
            viewBox: "0 0 700 120",
            className: t,
            xmlns: "http://www.w3.org/2000/svg",
            children: (0, a.jsx)("path", {
              fill: (0, l.isThemeDark)(n) ? o : "white",
              opacity: "1",
              d: "M351 39.047C185.4 -31.2102 48 9.77319 0 39.047V583.068C0 587.486 3.58174 591.068 8.00002 591.068H692C696.418 591.068 700 587.486 700 583.068V39.047C653.333 68.3208 516.6 109.304 351 39.047Z",
            }),
          });
        };
    },
    518151: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          extractAnnouncementModalContent: function () {
            return _;
          },
          default: function () {
            return C;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("849266"),
        l = n("258864"),
        i = n("755854"),
        r = n("997289"),
        o = n("841098"),
        u = n("812204"),
        d = n("685665"),
        c = n("10641"),
        f = n("286235"),
        E = n("516129"),
        h = n("702542");
      function _(e) {
        let { content: t, isPreview: n } = e,
          a = l.PremiumMarketingComponentProperties.fromBinary(
            (0, s.base64decode)(t)
          );
        return "announcementModalVariant1" !== a.properties.oneofKind
          ? null
          : !n &&
              (0, c.isDismissibleContentDismissed)(
                Number(a.properties.announcementModalVariant1.dismissKey)
              )
            ? null
            : (n && (a.properties.announcementModalVariant1.dismissKey = ""),
              a);
      }
      function C(e) {
        let { renderModalProps: t, properties: n } = e,
          { location: s } = (0, r.useAnalyticsContext)(),
          { analyticsLocations: l } = (0, d.default)(
            u.default.PREMIUM_MARKETING_ANNOUNCEMENT_MODAL
          ),
          c = (0, o.default)(),
          _ = (0, i.isThemeLight)(c);
        if ("announcementModalVariant1" === n.properties.oneofKind) {
          let e = (0, E.adaptAnnouncementModalVariant1)({
            content: n.properties.announcementModalVariant1,
            renderModalProps: t,
            analyticsLocations: l,
            analyticsLocation: s,
            isLightTheme: _,
          });
          return (0, a.jsx)(h.default, { ...e });
        }
        return (
          f.default.captureMessage(
            "Property type ".concat(
              n.properties.oneofKind,
              " is not supported to render ServerDriveAnnouncementModal"
            )
          ),
          null
        );
      }
    },
    106457: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var a = n("862205");
      let s = (0, a.createExperiment)({
        kind: "user",
        id: "2023-08_dcf_ml_model",
        label: "DCF ML Perks Relevance Model",
        defaultConfig: { enabled: !1 },
        treatments: [
          { id: 0, label: "threshold 0", config: { enabled: !0 } },
          { id: 1, label: "threshold 1", config: { enabled: !0 } },
          { id: 2, label: "threshold 2", config: { enabled: !0 } },
          { id: 3, label: "threshold 3", config: { enabled: !0 } },
          { id: 4, label: "threshold 4", config: { enabled: !0 } },
        ],
      });
      var l = s;
    },
    443504: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var a = n("862205");
      let s = (0, a.createExperiment)({
        kind: "user",
        id: "2023-12_marketing_automation_experiment",
        label: "Marketing Automation",
        defaultConfig: { enabled: !1 },
        treatments: [
          {
            id: 1,
            label: "Ask server for marketing content for rendering",
            config: { enabled: !0 },
          },
        ],
      });
      var l = s;
    },
    247820: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          fetchPremiumMarketingContent: function () {
            return l;
          },
        });
      var a = n("872717"),
        s = n("49111");
      async function l() {
        try {
          let e = await a.default.get({ url: s.Endpoints.PREMIUM_MARKETING });
          if (e.ok) return e.body;
          return [];
        } catch (e) {
          return [];
        }
      }
    },
    516129: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          adaptAnnouncementModalVariant1: function () {
            return C;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("105110"),
        l = n("77078"),
        i = n("649844"),
        r = n("393414"),
        o = n("181114"),
        u = n("599110"),
        d = n("701909"),
        c = n("646718"),
        f = n("49111"),
        E = n("782340"),
        h = n("196003"),
        _ = n("121432");
      function C(e) {
        var t, n;
        let {
            content: C,
            renderModalProps: I,
            analyticsLocations: S,
            analyticsLocation: m,
            isLightTheme: p,
          } = e,
          T = "AnnouncementModalVariant1",
          { onClose: g } = I,
          A =
            null != C.button && "" !== C.button.copy
              ? C.button.copy
              : E.default.Messages.BILLING_SUBSCRIBE_TO_PLAN,
          N =
            (null === (t = C.button) || void 0 === t
              ? void 0
              : t.buttonAction) === s.ButtonAction.OPEN_MARKETING_PAGE
              ? "jump_to_mkt_button"
              : "get_nitro_button",
          R =
            (null === (n = C.button) || void 0 === n
              ? void 0
              : n.buttonAction) === s.ButtonAction.OPEN_MARKETING_PAGE
              ? () => {
                  (0, r.transitionTo)(f.Routes.APPLICATION_STORE), g();
                }
              : () =>
                  (0, i.default)({
                    subscriptionTier: c.PremiumSubscriptionSKUs.TIER_2,
                    analyticsLocations: S,
                    analyticsObject: {
                      ...m,
                      object: f.AnalyticsObjects.BUTTON_CTA,
                      objectType: f.AnalyticsObjectTypes.TIER_2,
                    },
                    onClose: e => {
                      e && g();
                    },
                  }),
          O =
            "" !== C.helpArticleId
              ? () =>
                  (0, a.jsx)(l.Anchor, {
                    className: h.termsApplyAnchor,
                    href: d.default.getArticleURL(C.helpArticleId),
                    children: (0, a.jsx)(l.Heading, {
                      variant: "heading-md/normal",
                      className: h.termsApplyBodyText,
                      children: E.default.Messages.BOGO_TERMS_APPLY,
                    }),
                  })
              : void 0,
          v = {
            type: "video",
            src: p ? C.heroArtVideoLinkLightTheme : C.videoLink,
          };
        return (
          ("" !== C.heroArtImageLinkDarkTheme ||
            "" !== C.heroArtImageLinkLightTheme) &&
            (v = {
              type: "image",
              src: p
                ? C.heroArtImageLinkLightTheme
                : C.heroArtImageLinkDarkTheme,
            }),
          {
            renderModalProps: I,
            header: C.header,
            subHeader: C.subheader,
            subHeaderExtra: O,
            heroArt: v,
            featureCards: C.featureCards.map(e => ({
              header: e.header,
              subHeader: e.body,
              imageSrc: p ? e.imageLinkLightTheme : e.imageLink,
              tagText: "" !== e.pill ? e.pill : void 0,
            })),
            changeLogId: T,
            button: () => {
              let e = Date.now();
              return (0, a.jsxs)(o.default, {
                className: h.buttonWide,
                innerClassName: h.innerButton,
                color: l.Button.Colors.GREEN,
                size: l.Button.Sizes.SMALL,
                onClick: () => {
                  u.default.track(f.AnalyticEvents.CHANGE_LOG_CTA_CLICKED, {
                    change_log_id: T,
                    cta_type: N,
                    seconds_open: Math.round((Date.now() - e) / 1e3),
                    target: T,
                  }),
                    R();
                },
                children: [
                  (0, a.jsx)("img", {
                    alt: "",
                    className: h.nitroIconSubHeader,
                    src: _,
                  }),
                  A,
                ],
              });
            },
            modalDismissibleContent:
              "" !== C.dismissKey ? Number(C.dismissKey) : void 0,
          }
        );
      }
    },
    266782: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("78938"),
        l = n("782340"),
        i = e => {
          let { copy: t } = e;
          return (0, a.jsx)(s.default, {
            copy: null != t ? t : l.default.Messages.NEW,
          });
        };
    },
    702542: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return N;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("446674"),
        o = n("77078"),
        u = n("206230"),
        d = n("10641"),
        c = n("933629"),
        f = n("560176"),
        E = n("633667"),
        h = n("476765"),
        _ = n("956089"),
        C = n("58608"),
        I = n("599110"),
        S = n("215429"),
        m = n("49111"),
        p = n("994428"),
        T = n("481741");
      let g = e => {
          let { tagText: t, className: n } = e;
          return (0, a.jsx)(_.TextBadge, { className: i(T.tag, n), text: t });
        },
        A = e => {
          let {
            header: t,
            subHeader: n,
            imageSrc: s,
            tagText: l,
            wideStyle: r,
          } = e;
          return (0, a.jsxs)("div", {
            className: i(T.featureCard, { [T.wideStyle]: r }),
            children: [
              null != l
                ? (0, a.jsx)(g, { tagText: l, className: T.featureCardTag })
                : null,
              (0, a.jsx)("img", {
                alt: "",
                className: i(T.featureCardImg, { [T.wideStyle]: r }),
                src: s,
              }),
              (0, a.jsxs)("div", {
                className: T.featureCardTextGroup,
                children: [
                  (0, a.jsx)(o.Heading, {
                    variant: "heading-lg/extrabold",
                    className: T.featureCardTextHeader,
                    children: t,
                  }),
                  (0, a.jsx)(o.Text, {
                    variant: "text-sm/normal",
                    children: n,
                  }),
                ],
              }),
            ],
          });
        };
      function N(e) {
        let {
            className: t,
            renderModalProps: n,
            heroArt: l,
            heroArtClassName: _,
            modalDismissibleContent: g,
            modalTopExtra: N,
            header: R,
            headerClassName: O,
            subHeader: v,
            subHeaderExtra: L,
            featureCards: M,
            changeLogId: P,
            button: D,
          } = e,
          { onClose: y, transitionState: x } = n,
          b = (0, h.useUID)(),
          U = M.length % 2 == 0,
          G = (0, r.useStateFromStores)(
            [u.default],
            () => u.default.useReducedMotion
          ),
          [j, w] = s.useState(Date.now()),
          [k, F] = s.useState(0),
          [B, H] = s.useState(0),
          [V, Y] = s.useState(!1),
          [W, K] = s.useState(!0),
          z = s.useRef(j),
          q = s.useRef(k),
          Q = s.useRef(B),
          Z = s.useRef(V),
          X = s.useRef(W);
        function J() {
          let e = Date.now(),
            t = e - z.current,
            n = q.current,
            a = Q.current;
          return (
            Z.current && (F((n += t)), !X.current && H((a += t))), w(e), [n, a]
          );
        }
        return (
          s.useEffect(() => {
            (z.current = j),
              (q.current = k),
              (Q.current = B),
              (Z.current = V),
              (X.current = W);
          }, [j, k, B, V, W]),
          s.useEffect(
            () => () => {
              let [e, t] = J();
              I.default.track(m.AnalyticEvents.CHANGE_LOG_VIDEO_PLAYED, {
                change_log_id: P,
                seconds_played: Math.round(e / 1e3),
              }),
                I.default.track(m.AnalyticEvents.CHANGE_LOG_VIDEO_UNMUTE, {
                  change_log_id: P,
                  seconds_unmuted: Math.round(t / 1e3),
                });
            },
            [P]
          ),
          s.useEffect(() => {
            null != g && (0, d.requestMarkDismissibleContentAsShown)(g);
            let e = Date.now();
            return (
              I.default.track(m.AnalyticEvents.CHANGE_LOG_OPENED, {
                change_log_id: P,
              }),
              () => {
                I.default.track(m.AnalyticEvents.CHANGE_LOG_CLOSED, {
                  change_log_id: P,
                  seconds_open: Math.round((Date.now() - e) / 1e3),
                }),
                  null != g &&
                    (0, d.markDismissibleContentAsDismissed)(g, {
                      dismissAction: p.ContentDismissActionType.DISMISS,
                    });
              }
            );
          }, [g, P]),
          (0, a.jsxs)(o.ModalRoot, {
            className: i(T.root, t),
            transitionState: x,
            "aria-labelledby": b,
            children: [
              (0, a.jsx)(o.ModalCloseButton, {
                className: T.closeButton,
                onClick: y,
              }),
              (0, a.jsx)(S.default, { className: T.splash }),
              null == N ? void 0 : N(),
              (0, a.jsxs)(o.ModalContent, {
                className: T.content,
                children: [
                  (0, a.jsx)(o.Heading, {
                    variant: "display-md",
                    className: i(T.headerText, O),
                    children: R,
                  }),
                  "video" === l.type
                    ? (0, a.jsx)(C.default, {
                        className: i(T.video, _),
                        autoPlay: !G,
                        loop: !0,
                        muted: !0,
                        controls: !0,
                        controlsList:
                          "nofullscreen nodownload noremoteplayback noplaybackrate",
                        src: l.src,
                        poster: l.poster,
                        onPlay: e => {
                          I.default.track(
                            m.AnalyticEvents.CHANGE_LOG_VIDEO_INTERACTED,
                            { change_log_id: P }
                          ),
                            w(Date.now()),
                            Y(!0),
                            K(e.currentTarget.muted);
                        },
                        onEnded: e => {
                          J(), K(e.currentTarget.muted), Y(!1);
                        },
                        onVolumeChange: e => {
                          J(), K(e.currentTarget.muted);
                        },
                        onPause: e => {
                          J(), K(e.currentTarget.muted), Y(!1);
                        },
                        disablePictureInPicture: !0,
                      })
                    : "embed" === l.type
                      ? (0, a.jsx)(f.EmbedVideo, {
                          className: i(T.video, _),
                          allowFullScreen: !1,
                          href: l.href,
                          thumbnail: l.thumbnail,
                          video: l.embed,
                          provider: E.SupportedEmbedIFrame.YOUTUBE,
                          maxWidth: l.embed.width,
                          maxHeight: l.embed.height,
                          renderVideoComponent: c.renderVideoComponent,
                          renderImageComponent: c.renderImageComponent,
                          renderLinkComponent: c.renderMaskedLinkComponent,
                          onPlay: () => {
                            I.default.track(
                              m.AnalyticEvents.CHANGE_LOG_VIDEO_INTERACTED,
                              { change_log_id: P }
                            );
                          },
                        })
                      : "image" === l.type
                        ? (0, a.jsx)("img", {
                            alt: "",
                            className: i(T.video, _),
                            src: l.src,
                          })
                        : null,
                  (0, a.jsx)(o.Heading, {
                    variant: "heading-lg/extrabold",
                    className: T.bodyText,
                    children: v,
                  }),
                  null == L ? void 0 : L(),
                  (0, a.jsx)("div", {
                    className: i(T.featureCardGroup, { [T.wideStyle]: U }),
                    children: M.map((e, t) =>
                      (0, a.jsx)(
                        A,
                        { ...e, wideStyle: U },
                        "".concat(e.header, "_").concat(t)
                      )
                    ),
                  }),
                  D(),
                ],
              }),
            ],
          })
        );
      }
    },
    600177: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        }),
        n("222007"),
        n("424973");
      var a = n("37983"),
        s = n("884691"),
        l = n("446674"),
        i = n("299285"),
        r = n("963662"),
        o = n("592407"),
        u = n("927078"),
        d = n("991254"),
        c = n("49111"),
        f = n("782340"),
        E = n("630159");
      function h(e) {
        let { guild: t } = e,
          n = (0, d.useUnseenEndedApplicationSubscriptionEntitlements)(t),
          h = () => (0, u.dismissApplicationSubscriptionExpirationNotice)(t.id),
          _ = s.useMemo(() => new Set(n.map(e => e.applicationId)), [n]),
          C = (0, l.useStateFromStoresArray)(
            [i.default],
            () => {
              let e = [];
              for (let t of _) {
                let n = i.default.getApplication(t);
                null != n && e.push(n);
              }
              return e;
            },
            [_]
          );
        if (0 === C.length) return null;
        let I = "";
        return (
          (I =
            1 === C.length
              ? f.default.Messages.ONE_APPLICATION_SUBSCRIPTION_EXPIRATION_CHANNEL_NOTICE_CONTENT.format(
                  { a: C[0].name }
                )
              : 2 === C.length
                ? f.default.Messages.TWO_APPLICATION_SUBSCRIPTION_EXPIRATION_CHANNEL_NOTICE_CONTENT.format(
                    { a: C[0].name, b: C[1].name }
                  )
                : 3 === C.length
                  ? f.default.Messages.THREE_APPLICATION_SUBSCRIPTION_EXPIRATION_CHANNEL_NOTICE_CONTENT.format(
                      { a: C[0].name, b: C[1].name, c: C[2].name }
                    )
                  : f.default.Messages
                      .MORE_APPLICATION_SUBSCRIPTION_EXPIRATION_CHANNEL_NOTICE_CONTENT),
          (0, a.jsx)(r.default, {
            guild: t,
            onDismissed: h,
            message: I,
            type: c.ChannelNoticeTypes.APPLICATION_SUBSCRIPTION_EXPIRATION,
            image: E,
            onClick: () => {
              h(), o.default.open(t.id, c.GuildSettingsSections.INTEGRATIONS);
            },
            imageMarginTop: 6,
            imageMarginX: 46,
            cta: f.default.Messages
              .APPLICATION_SUBSCRIPTION_EXPIRATION_CHANNEL_NOTICE_CTA,
          })
        );
      }
    },
    565500: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("446674"),
        s = n("305961"),
        l = n("162771"),
        i = n("677099"),
        r = () => {
          let e = (0, a.useStateFromStores)([i.default], () =>
              i.default.getFlattenedGuildIds()
            ),
            t = (0, a.useStateFromStores)([l.default], () =>
              l.default.getGuildId()
            ),
            n = (0, a.useStateFromStores)([s.default], () =>
              s.default.getGuild(null != t ? t : e[0])
            );
          return n;
        };
    },
    630140: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("77078"),
        l = n("913144"),
        i = n("152584"),
        r = n("316272"),
        o = n("929423"),
        u = n("783142"),
        d = n("697218"),
        c = n("719923"),
        f = n("75015");
      class E extends r.default {
        _initialize() {
          l.default.subscribe(
            "PROFILE_CUSTOMIZATION_OPEN_PREVIEW_MODAL",
            this.maybeOpenProfilePreviewModal
          );
        }
        _terminate() {
          l.default.unsubscribe(
            "PROFILE_CUSTOMIZATION_OPEN_PREVIEW_MODAL",
            this.maybeOpenProfilePreviewModal
          );
        }
        maybeOpenProfilePreviewModal(e) {
          let {
              imageSrc: t,
              file: l,
              uploadType: r,
              guildId: E,
              isTryItOutFlow: h,
            } = e,
            _ = null != E ? o.setPendingAvatar : i.setPendingAvatar,
            C = null != E ? o.setPendingBanner : u.setPendingBanner,
            I = d.default.getCurrentUser();
          if (r === f.UploadTypes.AVATAR) {
            if (h) {
              (0, u.setTryItOutAvatar)(t);
              return;
            }
            let e = c.default.canUseAnimatedAvatar(I);
            if (e || "image/gif" !== l.type) {
              _(t);
              return;
            }
            (0, s.openModalLazy)(async () => {
              let { default: e } = await n
                .el("745544")
                .then(n.bind(n, "745544"));
              return n =>
                (0, a.jsx)(e, { avatarSrc: t, onSubscribe: () => _(t), ...n });
            });
          } else if (r === f.UploadTypes.BANNER) {
            if (h) {
              (0, u.setTryItOutBanner)(t);
              return;
            }
            let e = c.default.canUsePremiumProfileCustomization(I);
            if (e) {
              C(t);
              return;
            }
            (0, s.openModalLazy)(async () => {
              let { default: e } = await n
                .el("745544")
                .then(n.bind(n, "745544"));
              return n =>
                (0, a.jsx)(e, { bannerSrc: t, onSubscribe: () => C(t), ...n });
            });
          }
        }
      }
      var h = new E();
    },
    507917: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("151426"),
        l = n("369964"),
        i = n("38766"),
        r = n("397336"),
        o = n("782340"),
        u = n("181456");
      function d() {
        let e = (0, i.default)({
          scrollPosition: r.ProfileCustomizationScrollPositions.TRY_IT_OUT,
        });
        return (0, a.jsx)(l.default, {
          isPremiumFeature: !0,
          shouldUseHorizontalButtons: !0,
          inlineArt: !0,
          artClassName: u.profileThemesArt,
          onTryFeature: e,
          header: o.default.Messages.PROFILE_THEMES_TOOLTIP_TITLE,
          body: o.default.Messages.PROFILE_THEMES_TOOLTIP_DESCRIPTION_PREMIUM,
          dismissibleContent:
            s.DismissibleContent
              .PROFILE_THEMES_FEATURE_EDUCATION_TOOLTIP_TAKE_2,
        });
      }
    },
    189293: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          fetchUserProfileEffects: function () {
            return o;
          },
        });
      var a = n("872717"),
        s = n("913144"),
        l = n("448993");
      n("845962");
      var i = n("49111");
      let r = e => {
          let { sku_id: t, ...n } = e;
          return { id: n.id, skuId: t, config: { ...n, skuId: t } };
        },
        o = async () => {
          s.default.dispatch({ type: "USER_PROFILE_EFFECTS_FETCH" });
          try {
            let { body: e } = await a.default.get(
                i.Endpoints.USER_PROFILE_EFFECTS
              ),
              t = null == e ? void 0 : e.profile_effect_configs,
              n = t.map(r);
            s.default.dispatch({
              type: "USER_PROFILE_EFFECTS_FETCH_SUCCESS",
              profileEffects: n,
            });
          } catch (e) {
            throw (
              (s.default.dispatch({
                type: "USER_PROFILE_EFFECTS_FETCH_FAILURE",
                error: e,
              }),
              new l.APIError(e))
            );
          }
        };
    },
    91990: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        }),
        n("222007");
      var a = n("913144"),
        s = n("316272"),
        l = n("189293");
      class i extends s.default {
        _initialize() {
          a.default.subscribe("CONNECTION_OPEN", this.handleConnectionOpen);
        }
        _terminate() {
          a.default.unsubscribe("CONNECTION_OPEN", this.handleConnectionOpen);
        }
        constructor(...e) {
          super(...e),
            (this.handleConnectionOpen = () => {
              (0, l.fetchUserProfileEffects)();
            });
        }
      }
      var r = new i();
    },
    226511: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        }),
        n("222007");
      var a = n("446674"),
        s = n("95410"),
        l = n("913144"),
        i = n("525065"),
        r = n("305961"),
        o = n("957255"),
        u = n("69741"),
        d = n("49111");
      let c = "publicUpsellChannelNoticeGuilds",
        f = new Set();
      class E extends a.default.Store {
        initialize() {
          var e;
          this.waitFor(o.default, r.default, i.default),
            this.syncWith([o.default, r.default, i.default], d.NOOP),
            (f = ((e = new Set(s.default.get(c))), e));
        }
        isVisible(e) {
          if (null == e) return;
          let t = i.default.getMemberCount(e.id);
          return (
            !f.has(e.id) &&
            null != t &&
            t >= u.COMMUNITY_UPSELL_MINIMUM_GUILD_SIZE &&
            o.default.can(d.Permissions.ADMINISTRATOR, e) &&
            !e.hasFeature(d.GuildFeatures.COMMUNITY)
          );
        }
      }
      E.displayName = "EnablePublicGuildUpsellNoticeStore";
      var h = new E(l.default, {
        PUBLIC_UPSELL_NOTICE_DISMISS: function (e) {
          let t = e.guildId;
          if (!f.has(t)) return f.add(t), s.default.set(c, f), !0;
        },
      });
    },
    947337: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("363025"),
        i = n("963662"),
        r = n("592407"),
        o = n("49111"),
        u = n("782340"),
        d = n("175717"),
        c = e => {
          let { guild: t } = e,
            n = s.useCallback(() => {
              (0, l.hideEnablePublicGuildUpsellNotice)(t.id);
            }, [t.id]);
          return (0, a.jsx)(i.default, {
            guild: t,
            onDismissed: n,
            onClick: () =>
              r.default.open(t.id, o.GuildSettingsSections.COMMUNITY),
            message:
              u.default.Messages.NOTICE_ENABLE_PUBLIC_GUILD_UPSELL_MESSAGE,
            trackingSource:
              o.ChannelNoticeCtaSources.ENABLE_PUBLIC_GUILD_UPSELL_NOTICE,
            type: o.ChannelNoticeTypes.PUBLIC_UPSELL,
            image: d,
            cta: u.default.Messages.LEARN_MORE,
          });
        };
    },
    555226: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("414456"),
        l = n.n(s),
        i = n("227231"),
        r = n("49111"),
        o = n("194829"),
        u = function (e) {
          let { className: t, quest: n } = e;
          return (0, a.jsxs)("div", {
            className: l(o.partnerBranding, t),
            children: [
              (0, a.jsx)("img", {
                className: o.partnerBrandingGameTile,
                alt: "",
                src: (0, i.getGameTileAssetUrl)(n.id),
              }),
              (0, a.jsx)("img", {
                className: o.partnerBrandingLogotype,
                alt: n.config.messages.gameTitle,
                src: (0, i.getGameLogotypeAssetUrl)(n.id, r.ThemeTypes.DARK),
              }),
            ],
          });
        };
    },
    228399: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("77078"),
        o = n("79112"),
        u = n("815496"),
        d = n("227231"),
        c = n("49111"),
        f = n("782340"),
        E = n("297261"),
        h = function (e) {
          let { className: t, quest: n } = e,
            l = s.useCallback(() => {
              (0, u.trackQuestContentClicked)(
                n.id,
                e.questContent,
                u.QuestContentCTA.REWARD_LEARN_MORE
              ),
                o.default.open(c.UserSettingsSections.INVENTORY);
            }, [n, e.questContent]);
          return (0, a.jsxs)(r.Clickable, {
            className: i(E.questRewardTile, t),
            onClick: l,
            children: [
              (0, a.jsx)(r.Text, {
                color: "always-white",
                variant: "text-xs/normal",
                className: E.questRewardTileDetailsLearnMore,
                children: f.default.Messages.QUESTS_LEARN_MORE_STACKED.format(),
              }),
              (0, a.jsx)("img", {
                alt: n.config.messages.rewardName,
                className: E.questRewardTileAsset,
                src: (0, d.getRewardAssetUrl)(n.id),
              }),
            ],
          });
        };
    },
    834440: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return O;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("446674"),
        o = n("77078"),
        u = n("272030"),
        d = n("79112"),
        c = n("433487"),
        f = n("815496"),
        E = n("448881"),
        h = n("879364"),
        _ = n("2973"),
        C = n("588025"),
        I = n("227231"),
        S = n("534801"),
        m = n("762985"),
        p = n("385416"),
        T = n("255697"),
        g = n("49111"),
        A = n("782340"),
        N = n("647439");
      function R(e) {
        var t;
        let { quest: n } = e,
          s = (0, h.useQuestFormattedDate)(n.config.expiresAt),
          l = (0, h.useQuestFormattedDate)(n.config.rewardCodeExpiresAt),
          i =
            (null === (t = n.userStatus) || void 0 === t
              ? void 0
              : t.completedAt) != null;
        return (0, a.jsxs)("div", {
          className: N.heading,
          children: [
            (0, a.jsx)("img", {
              className: N.headingGameTile,
              alt: "",
              src: (0, I.getGameTileAssetUrl)(n.id),
            }),
            (0, a.jsxs)("div", {
              className: N.headingCopy,
              children: [
                (0, a.jsx)(o.Heading, {
                  variant: "heading-md/semibold",
                  color: "header-primary",
                  children: i
                    ? A.default.Messages
                        .QUESTS_COMPLETION_PROGRESS_COMPLETE_ACTIVITY_PANEL
                    : A.default.Messages.QUESTS_TITLE.format({
                        questName: n.config.messages.questName,
                      }),
                }),
                (0, a.jsx)(o.Text, {
                  variant: "text-xs/normal",
                  color: "header-secondary",
                  children: i
                    ? A.default.Messages.QUESTS_CLAIM_BY.format({
                        expirationDate: l,
                      })
                    : A.default.Messages.QUESTS_AVAILABLE_UNTIL.format({
                        expirationDate: s,
                      }),
                }),
              ],
            }),
          ],
        });
      }
      var O = function (e) {
        var t, l, O;
        let { quest: v } = e,
          L = (0, r.useStateFromStores)(
            [_.default],
            () => _.default.isEnrolling(v.id),
            [v]
          ),
          M = s.useCallback(e => {
            e.stopPropagation();
          }, []),
          P = s.useCallback(
            e => {
              (0, f.trackQuestContentClicked)(
                v.id,
                C.QuestContent.ACTIVITY_PANEL,
                f.QuestContentCTA.OPEN_CONTEXT_MENU
              ),
                (0, u.openContextMenuLazy)(e, async () => {
                  let { QuestsEntryContextMenu: e } = await n
                    .el("275986")
                    .then(n.bind(n, "275986"));
                  return t => {
                    var n;
                    return (0, a.jsx)(e, {
                      ...t,
                      quest: v,
                      questContent: C.QuestContent.ACTIVITY_PANEL,
                      shouldShowDisclosure:
                        (null === (n = v.userStatus) || void 0 === n
                          ? void 0
                          : n.enrolledAt) == null,
                    });
                  };
                });
            },
            [v]
          ),
          D = s.useCallback(() => {
            (0, E.enrollInQuest)(v.id, {
              questContent: C.QuestContent.ACTIVITY_PANEL,
              questContentCTA: f.QuestContentCTA.ACCEPT_QUEST,
            });
          }, [v]),
          y = s.useCallback(() => {
            null != v &&
              ((0, f.trackQuestContentClicked)(
                v.id,
                C.QuestContent.ACTIVITY_PANEL,
                f.QuestContentCTA.TRACK_PROGRESS
              ),
              d.default.open(g.UserSettingsSections.INVENTORY));
          }, [v]),
          x = s.useCallback(() => {
            (0, f.trackQuestContentClicked)(
              v.id,
              C.QuestContent.ACTIVITY_PANEL,
              f.QuestContentCTA.LEARN_MORE
            ),
              d.default.open(g.UserSettingsSections.INVENTORY);
          }, [v]),
          b = (0, p.useHandleClaimQuestsReward)({
            quest: v,
            location: C.QuestContent.ACTIVITY_PANEL,
          }),
          U = (0, h.useIsQuestExpired)(v),
          G =
            (null === (t = v.userStatus) || void 0 === t
              ? void 0
              : t.enrolledAt) != null,
          j =
            (null === (l = v.userStatus) || void 0 === l
              ? void 0
              : l.completedAt) != null,
          w =
            (null === (O = v.userStatus) || void 0 === O
              ? void 0
              : O.claimedAt) != null,
          k =
            (null == v ? void 0 : v.userStatus) == null ||
            (0, I.isDismissed)(v.userStatus, C.QuestContent.ACTIVITY_PANEL);
        return k || U || w
          ? null
          : (0, a.jsx)(S.QuestContentImpressionTracker, {
              questId: v.id,
              questContent: C.QuestContent.ACTIVITY_PANEL,
              children: e =>
                (0, a.jsxs)("div", {
                  ref: t => {
                    e.current = t;
                  },
                  className: i(N.wrapper, { [N.wrapperQuestAccepted]: G }),
                  onClick: M,
                  onKeyPress: M,
                  children: [
                    (0, a.jsxs)("div", {
                      className: N.utils,
                      children: [
                        G
                          ? (0, a.jsx)(R, { quest: v })
                          : (0, a.jsx)(m.default, { textOpacity: 0.5 }),
                        (0, a.jsx)(o.Clickable, {
                          className: N.submenuWrapper,
                          onClick: P,
                          children: (0, a.jsx)(c.default, {
                            className: N.submenuIcon,
                          }),
                        }),
                      ],
                    }),
                    !G &&
                      (0, a.jsxs)(a.Fragment, {
                        children: [
                          (0, a.jsx)(R, { quest: v }),
                          (0, a.jsx)(o.Text, {
                            className: N.instructions,
                            variant: "text-sm/normal",
                            color: "text-normal",
                            children:
                              A.default.Messages.QUESTS_INSTRUCTIONS_TO_WIN_REWARD.format(
                                {
                                  gameTitle: v.config.messages.gameTitle,
                                  questReward:
                                    v.config.messages.rewardNameWithArticle,
                                  streamingDurationRequirement:
                                    v.config.streamDurationRequirementMinutes,
                                }
                              ),
                          }),
                        ],
                      }),
                    G &&
                      !j &&
                      (0, a.jsx)(T.default, {
                        className: N.rewardTileWithInstructions,
                        quest: v,
                      }),
                    (0, a.jsxs)("div", {
                      className: N.ctas,
                      children: [
                        !G &&
                          (0, a.jsxs)(a.Fragment, {
                            children: [
                              (0, a.jsx)(o.Button, {
                                className: N.cta,
                                color: o.Button.Colors.PRIMARY,
                                fullWidth: !0,
                                size: o.Button.Sizes.SMALL,
                                onClick: x,
                                children:
                                  A.default.Messages.QUESTS_LEARN_MORE_V2,
                              }),
                              (0, a.jsx)(o.Button, {
                                className: N.cta,
                                color: o.Button.Colors.GREEN,
                                fullWidth: !0,
                                onClick: D,
                                size: o.Button.Sizes.SMALL,
                                submitting: L,
                                children:
                                  A.default.Messages.QUESTS_ACCEPT_QUEST,
                              }),
                            ],
                          }),
                        G &&
                          !j &&
                          (0, a.jsx)(o.Button, {
                            className: N.cta,
                            color: o.Button.Colors.BRAND,
                            fullWidth: !0,
                            onClick: y,
                            size: o.Button.Sizes.SMALL,
                            children:
                              A.default.Messages.QUESTS_TRACK_YOUR_PROGRESS,
                          }),
                        j &&
                          (0, a.jsx)(o.Button, {
                            className: N.cta,
                            color: o.Button.Colors.BRAND,
                            fullWidth: !0,
                            onClick: b,
                            size: o.Button.Sizes.SMALL,
                            children:
                              A.default.Messages.QUESTS_CLAIM_YOUR_REWARD,
                          }),
                      ],
                    }),
                  ],
                }),
            });
      };
    },
    94425: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return j;
          },
        }),
        n("222007"),
        n("808653");
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("917351"),
        o = n.n(r),
        u = n("907002"),
        d = n("446674"),
        c = n("206230"),
        f = n("778588"),
        E = n("471671"),
        h = n("491605"),
        _ = n("284679"),
        C = n("815496"),
        I = n("374023"),
        S = n("879364"),
        m = n("2973"),
        p = n("588025"),
        T = n("227231"),
        g = n("534801"),
        A = n("919354"),
        N = n("705589"),
        R = n("166604"),
        O = n("49111"),
        v = n("335294");
      let L = {
          "layers[1].shapes[1].g.k.k": [
            0, 0.522, 0.278, 0.776, 0.5, 0.522, 0.278, 0.776, 1, 0.522, 0.278,
            0.776,
          ],
          "layers[2].shapes[1].g.k.k": [
            0, 0.714, 0.271, 0.757, 0.5, 0.714, 0.271, 0.757, 1, 0.714, 0.271,
            0.757,
          ],
        },
        M = [0, 0.5, 1],
        P = {
          "layers[1].shapes[0].it[1].c.k": [1, 0.466666668653, 0.972549021244],
          "layers[2].shapes[0].it[1].c.k": [1, 0.466666668653, 0.972549021244],
          "layers[3].shapes[0].it[1].c.k": [1, 0.466666668653, 0.972549021244],
        };
      function D(e, t, n) {
        for (let a in t) {
          let s = t[a],
            l = o.get(e, a);
          if (null == l) continue;
          let i = l.map((e, t) => (s[t] === e ? n[t] : e));
          o.set(e, a, i);
        }
      }
      let y = new Map();
      async function x(e, t) {
        let a = y.get(e);
        if (null != a) return a;
        let s = (await n.el("723469").then(n.t.bind(n, "723469", 19))).default;
        return D(s, L, t), y.set(e, s), s;
      }
      let b = new Map();
      async function U(e, t) {
        let a = b.get(e);
        if (null != a) return a;
        let s = (await n.el("479580").then(n.t.bind(n, "479580", 19))).default;
        return D(s, P, t), b.set(e, s), s;
      }
      function G(e) {
        return e + 0.5 * (255 - e);
      }
      var j = function () {
        var e, t, n;
        let l = (0, I.useIsEligibleForQuests)({
            location: R.QuestsExperimentLocations.ACTIVITY_PANEL,
            autoTrackExposure: !0,
          }),
          r = (0, d.useStateFromStores)(
            [c.default],
            () => c.default.useReducedMotion
          ),
          o = (0, d.useStateFromStores)([m.default], () =>
            (0, T.getQuestForTargetedContent)(
              m.default.quests,
              p.QuestContent.QUEST_BAR
            )
          ),
          L = (0, d.useStateFromStores)([E.default], () =>
            E.default.isFocused()
          ),
          P = !r && L,
          D = s.useRef(-1),
          y = s.useRef(-1),
          b = s.useRef(!1),
          [j, w] = s.useState(!1),
          [k, F] = s.useState(!1),
          [B, H] = s.useState(!1),
          [V, Y] = s.useState(!0),
          [W, K] = s.useState(!0),
          [z, q] = s.useState(240),
          Q = s.useRef(!1),
          Z = s.useRef(null),
          X = (0, d.useStateFromStores)([f.default], () =>
            f.default.hasLayers()
          ),
          J =
            (null == o
              ? void 0
              : null === (e = o.userStatus) || void 0 === e
                ? void 0
                : e.enrolledAt) != null,
          $ = s.useRef(J),
          ee =
            (null == o
              ? void 0
              : null === (t = o.userStatus) || void 0 === t
                ? void 0
                : t.completedAt) != null,
          et =
            (null == o
              ? void 0
              : null === (n = o.userStatus) || void 0 === n
                ? void 0
                : n.claimedAt) != null,
          en =
            (null == o ? void 0 : o.userStatus) != null &&
            (0, T.isDismissed)(
              null == o ? void 0 : o.userStatus,
              p.QuestContent.QUEST_BAR
            ),
          ea = s.useMemo(() => {
            if (null == o) return null;
            let e = (0, _.hexToRgb)(o.config.colors.primary);
            return [G(e.r) / 255, G(e.g) / 255, G(e.b) / 255];
          }, [o]),
          es = s.useMemo(() => {
            if (null == o) return null;
            let e = (0, _.hexToRgb)(o.config.colors.primary),
              t = { r: e.r / 255, g: e.g / 255, b: e.b / 255 };
            return M.reduce((e, n) => [...e, n, t.r, t.g, t.b], []);
          }, [o]),
          el = (0, S.useIsQuestExpired)(o),
          ei = s.useCallback(() => {
            var e, t;
            q(
              (null !==
                (t =
                  null === (e = Z.current) || void 0 === e
                    ? void 0
                    : e.offsetHeight) && void 0 !== t
                ? t
                : 84) + 16
            ),
              H(!0);
          }, []),
          er = s.useCallback(() => {
            w(!0);
          }, []),
          eo = s.useCallback(() => {
            w(!1), !b.current && !ee && H(!1);
          }, [ee]),
          eu = s.useCallback(() => {
            w(!1), H(!1), (b.current = !1);
          }, []),
          ed = s.useCallback(
            function () {
              let e =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {},
                { withDelay: t = !1 } = e;
              window.clearTimeout(D.current),
                (Q.current = !0),
                F(!1),
                t ? (y.current = window.setTimeout(ei, 125)) : ei();
            },
            [ei]
          ),
          ec = s.useCallback(() => {
            if ((window.clearTimeout(y.current), !ee))
              !j &&
                (D.current = window.setTimeout(() => {
                  !b.current && H(!1);
                }, 200));
          }, [j, ee]),
          ef = s.useCallback(() => {
            null != o &&
              (0, C.trackQuestEvent)(o.id, O.AnalyticEvents.QUEST_HOVER),
              (b.current = !0),
              ed({ withDelay: !0 });
          }, [ed, o]),
          eE = s.useCallback(() => {
            (b.current = !1), ec();
          }, [ec]),
          eh = s.useCallback(() => {
            Q.current = !0;
          }, []);
        s.useEffect(() => {
          if (Q.current) return;
          let e = window.setTimeout(() => {
            F(E.default.isFocused());
          }, 500);
          return () => {
            window.clearTimeout(e);
          };
        }, []),
          s.useLayoutEffect(() => {
            ee && ei();
          }, [ee, ei]),
          s.useLayoutEffect(() => {
            J && !$.current && b.current && ei();
          }, [J, ei]),
          s.useLayoutEffect(() => {
            !ee && J && !$.current && !b.current && H(!1);
          }, [J, ee]);
        let e_ = l && !en && !et && null != o && !el,
          eC = s.useRef(e_);
        s.useLayoutEffect(() => {
          e_ !== eC.current && K(!1), (eC.current = e_);
        }, [e_]),
          s.useEffect(() => {
            $.current = J;
          }, [J]);
        let { expansionSpring: eI } = (0, u.useSpring)({
            from: { expansionSpring: B ? 0 : 1 },
            to: { expansionSpring: B ? 1 : 0 },
            config: { tension: 300, friction: 30, clamp: !0 },
            immediate: r,
            onRest: () => {
              Y(!0);
            },
            onStart: () => {
              Y(!1);
            },
          }),
          { visibilitySpring: eS } = (0, u.useSpring)({
            from: { visibilitySpring: 0 },
            to: { visibilitySpring: e_ ? 1 : 0 },
            config: { tension: 250, friction: 10, clamp: !0 },
            immediate: r,
            onRest: () => {
              K(!0);
            },
            onStart: () => {
              K(!1);
            },
          });
        return l && null != o && (e_ || !W)
          ? (0, a.jsx)(g.QuestContentImpressionTracker, {
              questId: o.id,
              questContent: p.QuestContent.QUEST_BAR,
              overrideVisibility: !X,
              children: () =>
                (0, a.jsxs)(u.animated.div, {
                  className: i(v.wrapper, { [v.wrapperVisible]: e_ && W }),
                  style: {
                    color: o.config.colors.secondary,
                    height: eS.to({
                      range: [0, 1],
                      output: [0, ee && B ? z : 40],
                    }),
                  },
                  children: [
                    (0, a.jsxs)(u.animated.div, {
                      onMouseLeave: eE,
                      onMouseEnter: ef,
                      onFocus: () => ed(),
                      onBlur: ec,
                      className: i(v.contentWrapper, {
                        [v.contentWrapperExpanded]: B,
                        [v.contentWrapperAccepted]: J,
                      }),
                      style: {
                        backgroundImage: J
                          ? "linear-gradient(90deg, "
                              .concat(o.config.colors.primary, ", ")
                              .concat(o.config.colors.secondary, ")")
                          : void 0,
                        height: eI.to({
                          range: [0, 1],
                          output: [40, J ? z : 240],
                        }),
                        transform: eS
                          .to({ range: [0, 1], output: [100, 0] })
                          .to(e => "translateY(".concat(e, "%)")),
                      },
                      children: [
                        (0, a.jsx)(A.default, {
                          className: v.content,
                          expansionSpring: eI,
                          isExpanded: B,
                          isExpansionAnimationComplete: V,
                          quest: o,
                        }),
                        (0, a.jsx)(N.default, {
                          className: v.content,
                          onCtxMenuOpen: er,
                          onCtxMenuClose: eo,
                          onCtxMenuSelect: eu,
                          expansionSpring: eI,
                          isExpanded: B,
                          isExpansionAnimationComplete: V,
                          quest: o,
                          useReducedMotion: r,
                          ref: Z,
                        }),
                      ],
                    }),
                    null != es &&
                      !J &&
                      (!B || (B && !V)) &&
                      (0, a.jsx)("div", {
                        className: v.lottieAnimationBackgroundWrapper,
                        children: (0, a.jsx)(h.default, {
                          importData: () => x(o.id, es),
                          shouldAnimate: P,
                          className: i(
                            v.lottieAnimation,
                            v.lottieAnimationBackground
                          ),
                          loop: !0,
                        }),
                      }),
                    !J &&
                      null != ea &&
                      (0, a.jsx)(h.default, {
                        importData: () => U(o.id, ea),
                        shouldAnimate: k,
                        className: i(
                          v.lottieAnimation,
                          v.lottieAnimationForeground,
                          { [v.lottieAnimationForegroundHidden]: !k }
                        ),
                        loop: !1,
                        onComplete: eh,
                        autoplay: k,
                      }),
                    !J &&
                      (0, a.jsx)("div", { className: v.backgroundFallback }),
                  ],
                }),
            })
          : null;
      };
    },
    919354: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return S;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("907002"),
        o = n("446674"),
        u = n("77078"),
        d = n("206230"),
        c = n("471671"),
        f = n("181114"),
        E = n("227231"),
        h = n("555226"),
        _ = n("315130"),
        C = n("782340"),
        I = n("368347"),
        S = function (e) {
          var t, n, l;
          let {
              className: S,
              expansionSpring: m,
              isExpanded: p,
              isExpansionAnimationComplete: T,
              quest: g,
            } = e,
            A =
              (null === (t = g.userStatus) || void 0 === t
                ? void 0
                : t.enrolledAt) != null,
            N =
              (null !==
                (l =
                  null === (n = g.userStatus) || void 0 === n
                    ? void 0
                    : n.streamProgressSeconds) && void 0 !== l
                ? l
                : 0) > 0,
            R = (0, o.useStateFromStores)(
              [d.default],
              () => d.default.useReducedMotion
            ),
            O = (0, o.useStateFromStores)([c.default], () =>
              c.default.isFocused()
            ),
            [v, L] = s.useState(!1);
          return (
            s.useEffect(() => {
              O ? L(!A) : L(!1);
            }, [O, A]),
            (0, a.jsx)(r.animated.div, {
              "aria-hidden": p && T,
              className: i(S, I.contentCollapsed, {
                [I.contentCollapsedAccepted]: A,
              }),
              style: { opacity: m.to({ range: [0, 1], output: [1, 0] }) },
              children: A
                ? (0, a.jsxs)("div", {
                    className: I.questProgressWrapper,
                    children: [
                      (0, a.jsx)("img", {
                        alt: g.config.messages.rewardName,
                        className: I.questProgressRewardTile,
                        src: (0, E.getRewardAssetUrl)(g.id),
                      }),
                      N
                        ? (0, a.jsx)(_.default, {
                            className: I.questProgressBar,
                            quest: g,
                          })
                        : (0, a.jsx)(u.Text, {
                            className: I.questProgressHint,
                            color: "always-white",
                            variant: "text-sm/semibold",
                            children:
                              C.default.Messages
                                .QUESTS_COMPLETION_PROGRESS_NOT_STARTED,
                          }),
                    ],
                  })
                : (0, a.jsxs)(a.Fragment, {
                    children: [
                      !R && v && (0, a.jsx)(f.Shine, { className: I.shine }),
                      (0, a.jsxs)("div", {
                        className: I.brandingWrapper,
                        children: [
                          (0, a.jsx)(h.default, {
                            className: I.partnerBranding,
                            quest: g,
                          }),
                          (0, a.jsx)(u.Heading, {
                            color: "always-white",
                            variant: "heading-sm/medium",
                            className: I.questName,
                            children: g.config.messages.questName,
                          }),
                        ],
                      }),
                    ],
                  }),
            })
          );
        };
    },
    705589: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return O;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("907002"),
        o = n("446674"),
        u = n("77078"),
        d = n("433487"),
        c = n("58608"),
        f = n("815496"),
        E = n("448881"),
        h = n("879364"),
        _ = n("2973"),
        C = n("588025"),
        I = n("227231"),
        S = n("315130"),
        m = n("762985"),
        p = n("228399"),
        T = n("275986"),
        g = n("385416"),
        A = n("782340"),
        N = n("841274");
      let R = s.forwardRef(function (e, t) {
        var n, l;
        let {
            className: R,
            expansionSpring: O,
            isExpanded: v,
            isExpansionAnimationComplete: L,
            onCtxMenuOpen: M,
            onCtxMenuClose: P,
            onCtxMenuSelect: D,
            quest: y,
            useReducedMotion: x,
          } = e,
          b = (0, o.useStateFromStores)(
            [_.default],
            () => _.default.isEnrolling(y.id),
            [y]
          ),
          U = (0, h.useQuestFormattedDate)(y.config.expiresAt),
          G = (0, h.useQuestFormattedDate)(y.config.rewardCodeExpiresAt),
          j = s.useMemo(
            () => y.config.videoAssets.includes(C.QuestContent.QUEST_BAR),
            [y]
          ),
          w = s.useCallback(() => {
            (0, E.enrollInQuest)(y.id, {
              questContent: C.QuestContent.QUEST_BAR,
              questContentCTA: f.QuestContentCTA.ACCEPT_QUEST,
            });
          }, [y]),
          k = (0, g.useHandleClaimQuestsReward)({
            quest: y,
            location: C.QuestContent.QUEST_BAR,
          }),
          { acceptButtonSpring: F } = (0, r.useSpring)({
            from: { acceptButtonSpring: v ? 0 : 1 },
            to: { acceptButtonSpring: v ? 1 : 0 },
            config: { tension: 650, friction: 32 },
            delay: !x && v ? 300 : 0,
            immediate: x,
          }),
          B =
            (null === (n = y.userStatus) || void 0 === n
              ? void 0
              : n.enrolledAt) != null,
          H =
            (null === (l = y.userStatus) || void 0 === l
              ? void 0
              : l.completedAt) != null,
          V = v && L;
        return (0, a.jsx)(r.animated.div, {
          "aria-hidden": !V,
          className: i(R, N.contentExpanded, { [N.contentInteractable]: V }),
          style: { opacity: O.to({ range: [0, 1], output: [0, 1] }) },
          children: B
            ? (0, a.jsxs)("div", {
                className: N.questAcceptedContent,
                ref: t,
                children: [
                  (0, a.jsxs)("div", {
                    className: N.utils,
                    children: [
                      (0, a.jsxs)("div", {
                        className: N.questAcceptedContentHeading,
                        children: [
                          (0, a.jsx)("img", {
                            alt: y.config.messages.rewardName,
                            className: N.questProgressRewardTile,
                            src: (0, I.getRewardAssetUrl)(y.id),
                          }),
                          (0, a.jsxs)("div", {
                            className: N.questAcceptedContentCopy,
                            children: [
                              (0, a.jsx)(u.Heading, {
                                color: "always-white",
                                variant: "heading-sm/semibold",
                                children: (0, I.getContextualEntrypointHeading)(
                                  y
                                ),
                              }),
                              (0, a.jsx)(u.Text, {
                                className: N.questAcceptedContentCopySubheading,
                                color: "always-white",
                                variant: "text-xxs/normal",
                                children: H
                                  ? A.default.Messages.QUESTS_CLAIM_BY.format({
                                      expirationDate: G,
                                    })
                                  : A.default.Messages.QUESTS_AVAILABLE_UNTIL.format(
                                      { expirationDate: U }
                                    ),
                              }),
                            ],
                          }),
                        ],
                      }),
                      (0, a.jsx)(T.QuestsEntryContextMenuPopout, {
                        onOpen: M,
                        onClose: P,
                        onSelect: D,
                        questContent: C.QuestContent.QUEST_BAR,
                        quest: y,
                        shouldShowDisclosure: !1,
                        children: e =>
                          (0, a.jsx)(u.Clickable, {
                            ...e,
                            className: N.submenuWrapper,
                            children: (0, a.jsx)(d.default, {
                              className: N.submenuIcon,
                            }),
                          }),
                      }),
                    ],
                  }),
                  H
                    ? (0, a.jsx)(u.Button, {
                        className: i(N.cta, N.ctaClaimReward),
                        color: u.Button.Colors.CUSTOM,
                        fullWidth: !0,
                        onClick: k,
                        size: u.Button.Sizes.NONE,
                        children: A.default.Messages.QUESTS_CLAIM_YOUR_REWARD,
                      })
                    : (0, a.jsx)(u.Text, {
                        className: N.description,
                        color: "always-white",
                        variant: "text-xs/normal",
                        children:
                          A.default.Messages.QUESTS_INSTRUCTIONS_TO_WIN_REWARD.format(
                            {
                              gameTitle: y.config.messages.gameTitle,
                              streamingDurationRequirement:
                                y.config.streamDurationRequirementMinutes,
                              questReward:
                                y.config.messages.rewardNameWithArticle,
                            }
                          ),
                      }),
                  (0, a.jsx)(S.default, { quest: y }),
                ],
              })
            : (0, a.jsxs)(a.Fragment, {
                children: [
                  (0, a.jsxs)("div", {
                    className: N.questPromoContent,
                    ref: t,
                    children: [
                      (0, a.jsxs)("div", {
                        className: N.utils,
                        children: [
                          (0, a.jsx)(m.default, { color: "always-white" }),
                          (0, a.jsx)(T.QuestsEntryContextMenuPopout, {
                            onOpen: M,
                            onClose: P,
                            onSelect: D,
                            questContent: C.QuestContent.QUEST_BAR,
                            quest: y,
                            shouldShowDisclosure: !0,
                            children: e =>
                              (0, a.jsx)(u.Clickable, {
                                ...e,
                                className: N.submenuWrapper,
                                children: (0, a.jsx)(d.default, {
                                  className: N.submenuIcon,
                                }),
                              }),
                          }),
                        ],
                      }),
                      (0, a.jsxs)("div", {
                        className: N.details,
                        children: [
                          (0, a.jsx)(p.default, {
                            className: N.rewardTile,
                            quest: y,
                            questContent: C.QuestContent.QUEST_BAR,
                          }),
                          (0, a.jsx)(u.Heading, {
                            className: N.title,
                            color: "always-white",
                            variant: "heading-md/medium",
                            children: A.default.Messages.QUESTS_TITLE.format({
                              questName: y.config.messages.questName,
                            }),
                          }),
                          (0, a.jsx)(u.Text, {
                            className: N.description,
                            color: "always-white",
                            variant: "text-sm/normal",
                            children:
                              A.default.Messages.QUESTS_INSTRUCTIONS_TO_WIN_REWARD.format(
                                {
                                  gameTitle: y.config.messages.gameTitle,
                                  streamingDurationRequirement:
                                    y.config.streamDurationRequirementMinutes,
                                  questReward:
                                    y.config.messages.rewardNameWithArticle,
                                }
                              ),
                          }),
                        ],
                      }),
                      (0, a.jsx)(r.animated.div, {
                        className: N.ctaWrapper,
                        style: {
                          opacity: F,
                          transform: F.to({
                            range: [0, 1],
                            output: [24, 0],
                          }).to(e => "translateY(".concat(e, "px)")),
                        },
                        children: (0, a.jsx)(u.Button, {
                          className: N.cta,
                          color: u.Button.Colors.CUSTOM,
                          fullWidth: !0,
                          onClick: w,
                          size: u.Button.Sizes.NONE,
                          submitting: b,
                          children: A.default.Messages.QUESTS_ACCEPT_QUEST,
                        }),
                      }),
                    ],
                  }),
                  (0, a.jsx)("div", {
                    className: N.heroAssetWrapper,
                    style: { color: y.config.colors.primary },
                    children: (0, a.jsx)(
                      c.default,
                      {
                        autoPlay: !x,
                        loop: !0,
                        muted: !0,
                        playsInline: !0,
                        className: N.heroAsset,
                        controls: !1,
                        poster: (0, I.getQuestBarStaticHeroAssetUrl)(y.id),
                        children:
                          x || !j
                            ? null
                            : (0, a.jsx)("source", {
                                src: (0, I.getQuestBarAnimatedHeroAssetUrl)(
                                  y.id
                                ),
                                type: "video/webm",
                              }),
                      },
                      x ? "static" : "animated"
                    ),
                  }),
                ],
              }),
        });
      });
      var O = R;
    },
    578287: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getRemoteIconURL: function () {
            return G;
          },
          transformChannel: function () {
            return w;
          },
          transformInternalTextMessage: function () {
            return k;
          },
          transformVoiceState: function () {
            return F;
          },
          transformRelationship: function () {
            return B;
          },
          isMatchingOrigin: function () {
            return H;
          },
          hasMessageReadPermission: function () {
            return V;
          },
          getVoiceConnectionState: function () {
            return Y;
          },
          computeActivityFlags: function () {
            return W;
          },
          validateActivityInvite: function () {
            return K;
          },
          fetchApplicationsRPC: function () {
            return z;
          },
          processSocketThrottlers: function () {
            return q;
          },
          validateOriginAndUpdateSocket: function () {
            return Q;
          },
          getDeprecatedVoiceSettingsWithShortcut: function () {
            return Z;
          },
          getVoiceSettingsWithShortcut: function () {
            return X;
          },
          validatePostMessageTransport: function () {
            return J;
          },
          validateApplication: function () {
            return $;
          },
        }),
        n("222007"),
        n("424973"),
        n("70102"),
        n("781738"),
        n("917351");
      var a,
        s = n("746379"),
        l = n.n(s),
        i = n("872717"),
        r = n("497"),
        o = n("95410"),
        u = n("819689"),
        d = n("711562"),
        c = n("367376"),
        f = n("574073"),
        E = n("845579"),
        h = n("233069"),
        _ = n("766274"),
        C = n("42203"),
        I = n("305961"),
        S = n("42887"),
        m = n("377253"),
        p = n("824563"),
        T = n("697218"),
        g = n("800762"),
        A = n("718517"),
        N = n("387111"),
        R = n("655518"),
        O = n("861309"),
        v = n("694352"),
        L = n("492249"),
        M = n("49111");
      let P =
          null !== (a = l.parse(window.GLOBAL_ENV.API_ENDPOINT, !1, !0).host) &&
          void 0 !== a
            ? a
            : "localhost",
        D = (function () {
          let e = P.split(":")[0];
          if (!e.includes(".")) return e;
          let t = e.split("."),
            n = t[t.length - 1];
          return /^\d+$/.test(n) ? e : t.slice(-2).join(".");
        })(),
        y = new RegExp(
          "^"
            .concat(R.default.escape("https://"), "(?:[a-z]+\\.)?(")
            .concat(R.default.escape(D), "|discordapp.com|discord.com)$")
        ),
        x = 1 * A.default.Millis.MINUTE,
        b = {};
      function U(e) {
        return (
          "customEmoji" === e.type && (e.type = "emoji"),
          "emoji" === e.type && e.src && (e.src = G(e.src)),
          Array.isArray(e.content) && (e.content = e.content.map(U)),
          e
        );
      }
      function G(e) {
        return /^http/.test(e)
          ? e
          : ""
              .concat(location.protocol, "//")
              .concat(location.host)
              .concat("/" === e.charAt(0) ? "" : "/")
              .concat(e);
      }
      function j(e) {
        let t =
          arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
        return t.indexOf(e) > -1;
      }
      function w(e, t) {
        let n = [],
          a = e.getGuildId();
        return (
          ![
            M.ChannelTypes.GUILD_CATEGORY,
            ...(0, h.GUILD_VOCAL_CHANNEL_TYPES),
          ].includes(e.type) &&
            n.push(
              new Promise(t => {
                m.default.whenReady(e.id, () => t()),
                  u.default.fetchMessages({
                    channelId: e.id,
                    limit: M.MAX_MESSAGES_PER_CHANNEL,
                  });
              })
            ),
          Promise.all(n).then(() => {
            var n;
            let s =
                !e.isNSFW() ||
                (null === (n = T.default.getCurrentUser()) || void 0 === n
                  ? void 0
                  : n.nsfwAllowed) === !0,
              l = s && t ? m.default.getMessages(e.id).toArray().map(k) : [],
              i = Object.values(g.default.getVoiceStatesForChannel(e.id)).map(
                t => F(a, e.id, t)
              );
            return {
              id: e.id,
              name: e.name,
              type: e.type,
              topic: e.topic,
              bitrate: e.bitrate,
              user_limit: e.userLimit,
              guild_id: a,
              position: e.position,
              messages: l,
              voice_states: i,
            };
          })
        );
      }
      function k(e) {
        let t = c.default
            .parseToAST(e.content, !0, { channelId: e.channel_id })
            .map(U),
          n = C.default.getChannel(e.channel_id),
          a =
            null != e.author
              ? (0, f.getUserAuthor)(new _.default(e.author), n)
              : void 0;
        return {
          id: e.id,
          blocked: e.blocked,
          bot: e.bot,
          content: e.content,
          content_parsed: t.length ? t : void 0,
          nick: null == a ? void 0 : a.nick,
          author_color: null == a ? void 0 : a.colorString,
          edited_timestamp: e.edited_timestamp || e.editedTimestamp,
          timestamp: e.timestamp,
          tts: e.tts,
          mentions: e.mentions,
          mention_everyone: e.mention_everyone || e.mentionEveryone,
          mention_roles: e.mention_roles || e.mentionRoles,
          embeds: e.embeds,
          attachments: e.attachments,
          author: e.author,
          pinned: e.pinned,
          type: e.type,
        };
      }
      function F(e, t, n) {
        let {
            mute: a,
            deaf: s,
            selfMute: l,
            selfDeaf: i,
            suppress: r,
            userId: o,
          } = n,
          u = T.default.getUser(o);
        if (null == u) throw Error("Invalid user id: ".concat(o));
        return {
          nick: N.default.getName(e, t, u),
          mute: S.default.isLocalMute(u.id),
          volume: S.default.getLocalVolume(u.id),
          pan: S.default.getLocalPan(u.id),
          voice_state: {
            mute: a,
            deaf: s,
            self_mute: l,
            self_deaf: i,
            suppress: r,
          },
          user: (0, v.default)(u),
        };
      }
      function B(e, t, n) {
        let a = T.default.getUser(t);
        return {
          type: e,
          user: null != a ? (0, v.default)(a) : null,
          presence: {
            status: p.default.getStatus(t),
            activity:
              null != n
                ? p.default.getApplicationActivity(t, n)
                : p.default.getPrimaryActivity(t),
          },
        };
      }
      function H(e) {
        let t;
        if (null == e) return !1;
        let n = window.location.origin;
        if (e === n) return !0;
        try {
          t = l.parse(e).hostname;
        } catch (e) {
          return !1;
        }
        return (
          (window.location.hostname === t && "localhost" === t) ||
          (null == e.match("staging") && (!!(y.test(e) && y.test(n)) || !1))
        );
      }
      function V(e, t, n) {
        let a = I.default.getGuild(e.getGuildId()),
          s = null != a ? a.getApplicationId() : e.getApplicationId();
        return s === t || n.indexOf(M.OAuth2Scopes.MESSAGES_READ) > -1;
      }
      function Y(e) {
        switch (e) {
          case M.RTCConnectionStates.RTC_CONNECTED:
          case M.RTCConnectionStates.RTC_CONNECTING:
          case M.RTCConnectionStates.RTC_DISCONNECTED:
            return e.replace(/^RTC_/, "VOICE_");
          default:
            return e;
        }
      }
      function W(e) {
        let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
          { instance: n, secrets: a, party: s } = e,
          l = 0;
        return (n && (l |= M.ActivityFlags.INSTANCE),
        (null == a ? void 0 : a.join) != null && (l |= M.ActivityFlags.JOIN),
        t)
          ? ((l |= M.ActivityFlags.EMBEDDED),
            (l |= M.ActivityFlags.PARTY_PRIVACY_VOICE_CHANNEL))
          : (((null == s ? void 0 : s.privacy) ===
              M.ActivityPartyPrivacy.PUBLIC ||
              o.default.get("ACTIVITIES_FORCE_PUBLIC")) &&
              (E.AllowActivityPartyPrivacyFriends.getSetting() &&
                (l |= M.ActivityFlags.PARTY_PRIVACY_FRIENDS),
              E.AllowActivityPartyPrivacyVoiceChannel.getSetting() &&
                (l |= M.ActivityFlags.PARTY_PRIVACY_VOICE_CHANNEL)),
            l);
      }
      function K(e, t, n) {
        if (e === M.ActivityActionTypes.JOIN)
          return null != t && null != t.id && null != n.join;
        return !1;
      }
      function z(e, t, n) {
        return i.default
          .get({
            url: M.Endpoints.APPLICATION_RPC(t),
            oldFormErrors: !0,
            retries: 3,
          })
          .then(
            a => {
              let {
                body: {
                  rpc_origins: s,
                  id: l,
                  name: i,
                  icon: r,
                  cover_image: o,
                  flags: u,
                },
              } = a;
              if ("string" == typeof n) {
                if (e.transport === L.TransportTypes.POST_MESSAGE) {
                  let e = (0, d.default)(t);
                  if (null == e || !j(n, [e]))
                    throw new O.default(
                      { closeCode: M.RPCCloseCodes.INVALID_ORIGIN },
                      "Invalid Origin"
                    );
                } else if (!j(n, s))
                  throw new O.default(
                    { closeCode: M.RPCCloseCodes.INVALID_ORIGIN },
                    "Invalid Origin"
                  );
              }
              e.application = {
                id: l,
                name: i,
                icon: r,
                coverImage: o,
                flags: u,
              };
            },
            () => {
              throw new O.default(
                { closeCode: M.RPCCloseCodes.INVALID_CLIENTID },
                "Invalid Client ID"
              );
            }
          );
      }
      async function q(e, t) {
        let n = b[e];
        null == n && ((n = new r.default(t ? 2 : 60, x)), (b[e] = n)),
          await n.process();
      }
      function Q(e, t) {
        null == t && (e.authorization.scopes = [L.RPC_LOCAL_SCOPE]);
      }
      function Z(e) {
        let t = S.default.getSettings(),
          n = e =>
            Object.values(e)
              .sort((e, t) => e.index - t.index)
              .map(e => ({ id: e.id, name: e.name })),
          a = e(t);
        return {
          input: {
            available_devices: n(S.default.getInputDevices()),
            device_id: t.inputDeviceId,
            volume: t.inputVolume,
          },
          output: {
            available_devices: n(S.default.getOutputDevices()),
            device_id: t.outputDeviceId,
            volume: t.outputVolume,
          },
          mode: {
            type: t.mode,
            auto_threshold: t.modeOptions.autoThreshold,
            threshold: t.modeOptions.threshold,
            shortcut: a,
            delay: t.modeOptions.delay,
          },
          automatic_gain_control: t.automaticGainControl,
          echo_cancellation: t.echoCancellation,
          noise_suppression: t.noiseSuppression,
          qos: t.qos,
          silence_warning: t.silenceWarning,
          deaf: t.deaf,
          mute: t.mute,
        };
      }
      function X(e, t) {
        let n = S.default.getSettings(e),
          a = t(n);
        return {
          input_mode: { type: n.mode, shortcut: a },
          local_mutes: Object.keys(n.localMutes),
          local_volumes: n.localVolumes,
          self_mute: n.mute,
          self_deaf: n.deaf,
        };
      }
      function J(e) {
        if (e !== L.TransportTypes.POST_MESSAGE)
          throw new O.default(
            { errorCode: M.RPCErrors.INVALID_COMMAND },
            'command not available from "'.concat(e, " transport")
          );
      }
      function $(e) {
        if (null == e.id)
          throw new O.default(
            { errorCode: M.RPCErrors.INVALID_COMMAND },
            "Invalid application"
          );
      }
    },
    65810: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          activityInstanceConnectedParticipants: function () {
            return f;
          },
          activityInstanceConnectedParticipantsScope: function () {
            return E;
          },
          activityInstanceConnectedParticipantsUpdateEvent: function () {
            return h;
          },
          subscribeToActivityInstanceConnectedParticipants: function () {
            return _;
          },
        });
      var a = n("917351"),
        s = n.n(a),
        l = n("913144"),
        i = n("191225"),
        r = n("697218"),
        o = n("449008"),
        u = n("387111"),
        d = n("694352"),
        c = n("492249");
      function f() {
        let e = i.default.getCurrentEmbeddedActivity();
        if (null == e) return { participants: [] };
        let { guildId: t, channelId: n } = e,
          a = Array.from(e.userIds, e => {
            let a = r.default.getUser(e);
            if (null == a) return;
            let s = (0, u.getNickname)(t, n, a);
            return { ...(0, d.default)(a), nickname: null != s ? s : void 0 };
          }).filter(o.isNotNullish);
        return { participants: a };
      }
      let E = { [c.RPC_SCOPE_CONFIG.ANY]: [c.RPC_AUTHENTICATED_SCOPE] },
        h = {
          scope: E,
          handler: () => e => {
            let { prevState: t, dispatch: n } = e,
              a = f();
            return !s.isEqual(a, t) && n(a), a;
          },
        };
      function _(e) {
        let t = "EMBEDDED_ACTIVITY_INBOUND_UPDATE",
          n = () => {
            e(f());
          };
        return l.default.subscribe(t, n), () => l.default.unsubscribe(t, n);
      }
    },
    716724: function (e, t, n) {
      "use strict";
      function a(e) {
        return e.object().unknown(!0);
      }
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
    },
    613652: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var a = n("191225"),
        s = n("42203");
      function l() {
        let e = a.default.getConnectedActivityChannelId();
        return s.default.getChannel(e);
      }
    },
    856116: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var a = n("49111");
      let s = "<removed>";
      function l(e) {
        var t, n;
        let l = { ...e };
        if ("object" == typeof (t = l).args && "string" == typeof t.cmd)
          l = (function (e) {
            if (e.cmd === a.RPCCommands.AUTHENTICATE)
              return { ...e, args: { ...e.args, access_token: s } };
            return { ...e };
          })(l);
        if ("object" == typeof (n = l).data && "string" == typeof n.cmd)
          l = (function (e) {
            if (e.cmd === a.RPCCommands.AUTHENTICATE)
              return { ...e, data: { ...e.data, access_token: s } };
            return { ...e };
          })(l);
        return l;
      }
    },
    961400: function (e, t, n) {
      "use strict";
      function a(e) {
        return {
          name: e.name,
          id: e.id,
          icon: e.icon,
          cover_image: e.coverImage,
          type: e.type,
        };
      }
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
    },
    403275: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          deprecatedCommand: function () {
            return l;
          },
        });
      var a = n("861309"),
        s = n("49111");
      let l = {
        handler(e) {
          throw new a.default(
            { errorCode: s.RPCErrors.INVALID_COMMAND },
            "Deprecated command: ".concat(e.cmd)
          );
        },
      };
    },
    207873: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          validateOpenInviteDialog: function () {
            return u;
          },
        });
      var a = n("242757"),
        s = n("305961"),
        l = n("957255"),
        i = n("861309"),
        r = n("613652"),
        o = n("49111");
      function u() {
        let e = (0, r.default)();
        if (null == e)
          throw new i.default(
            { errorCode: o.RPCErrors.INVALID_CHANNEL },
            "Invalid channel"
          );
        let t = s.default.getGuild(e.getGuildId());
        if (null == t)
          throw new i.default(
            { errorCode: o.RPCErrors.INVALID_CHANNEL },
            "Invalid guild ".concat(e.getGuildId())
          );
        if (!(0, a.canViewInviteModal)(l.default, t, e))
          throw new i.default(
            { errorCode: o.RPCErrors.INVALID_PERMISSIONS },
            "No invite permissions for ".concat(e.id)
          );
        return { channel: e, guild: t };
      }
    },
    383928: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          validateTransportType: function () {
            return i;
          },
        });
      var a = n("861309"),
        s = n("492249"),
        l = n("49111");
      function i(e) {
        if (s.TransportTypes.IPC !== e && s.TransportTypes.POST_MESSAGE !== e)
          throw new a.default(
            { errorCode: l.RPCErrors.INVALID_COMMAND },
            "Invalid transport."
          );
      }
    },
    748900: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        }),
        n("222007");
      var a,
        s = n("917351"),
        l = n.n(s),
        i = n("446674"),
        r = n("913144"),
        o = n("191225"),
        u = n("499031"),
        d = n("42203"),
        c = n("26989"),
        f = n("305961"),
        E = n("260320"),
        h = n("169602"),
        _ = n("42887"),
        C = n("824563"),
        I = n("945956"),
        S = n("27618"),
        m = n("18494"),
        p = n("843823"),
        T = n("697218"),
        g = n("800762"),
        A = n("599110"),
        N = n("449008"),
        R = n("773336"),
        O = n("578287"),
        v = n("65810"),
        L = n("694352"),
        M = n("49111"),
        P = n("954016"),
        D = n("353927");
      a = class {
        loadServer() {
          for (let e of (R.isPlatformEmbedded &&
            this.registerTransportsForEmbeddedPlatform(),
          this.transports))
            this.rpcServer.registerTransport(e);
          let e = this.rpcCommandHandlers;
          for (let [t, n] of Object.entries(e))
            this.rpcServer.setCommandHandler(t, n);
          let t = this.rpcEventHandlers;
          for (let [e, n] of Object.entries(t))
            this.rpcServer.setEventHandler(e, n);
        }
        init() {
          (this.rpcServer.getCurrentUser = () => T.default.getCurrentUser()),
            (this.rpcServer.onConnect = e => {
              r.default.dispatch({
                type: "RPC_APP_CONNECTED",
                socketId: e.id,
                application: e.application,
              }),
                A.default.track(M.AnalyticEvents.AUTHORIZED_APP_CONNECTED, {
                  app_id: e.application.id,
                  transport: e.transport,
                });
            }),
            (this.rpcServer.onDisconnect = (e, t) => {
              r.default.dispatch({
                type: "RPC_APP_DISCONNECTED",
                socketId: e.id,
                application: e.application,
                reason: t,
              });
            });
          let e = [
              d.default,
              c.default,
              C.default,
              g.default,
              _.default,
              I.default,
            ],
            t = new i.BatchedStoreListener(e.concat(this.stores), () =>
              this.rpcServer.updateSubscriptions()
            );
          t.attach("RPCServerManager"),
            r.default.subscribe("MESSAGE_CREATE", e => this.handleMessage(e)),
            r.default.subscribe("MESSAGE_UPDATE", e => this.handleMessage(e)),
            r.default.subscribe("MESSAGE_DELETE", e => this.handleMessage(e)),
            r.default.subscribe("SPEAKING", e => this.handleSpeaking(e)),
            r.default.subscribe("OAUTH2_TOKEN_REVOKE", e =>
              this.handleOAuth2TokenRevoke(e)
            ),
            r.default.subscribe("GUILD_CREATE", e => this.handleGuildCreate(e)),
            r.default.subscribe("CHANNEL_CREATE", e =>
              this.handleChannelCreate(e)
            ),
            r.default.subscribe("LOGOUT", () => this.handleLogout()),
            r.default.subscribe("VOICE_CHANNEL_SELECT", e =>
              this.handleVoiceChannelSelect(e)
            ),
            r.default.subscribe("RPC_NOTIFICATION_CREATE", e =>
              this.handleNotificationCreate(e)
            ),
            r.default.subscribe("ACTIVITY_JOIN", e =>
              this.handleActivityJoin(e)
            ),
            r.default.subscribe("ACTIVITY_LAYOUT_MODE_UPDATE", e =>
              this.handleActivityLayoutModeUpdate(e)
            ),
            r.default.subscribe("THERMAL_STATE_CHANGE", e =>
              this.handleThermalStateChange(e)
            ),
            r.default.subscribe("ACTIVITY_SCREEN_ORIENTATION_UPDATE", e =>
              this.handleScreenOrientationUpdate(e)
            ),
            r.default.subscribe("EMBEDDED_ACTIVITY_INSTANCE_CHANGE", e =>
              this.handleActivityInstanceChange(e)
            ),
            (0, v.subscribeToActivityInstanceConnectedParticipants)(e =>
              this.rpcServer.dispatchToSubscriptions(
                M.RPCEvents.ACTIVITY_INSTANCE_PARTICIPANTS_UPDATE,
                {},
                e
              )
            ),
            r.default.subscribe("RELATIONSHIP_ADD", e =>
              this.handleRelationshipAdd(e)
            ),
            r.default.subscribe("RELATIONSHIP_REMOVE", e =>
              this.handleRelationshipRemove(e)
            ),
            r.default.subscribe("PRESENCE_UPDATES", e =>
              this.handlePresenceUpdate(e)
            ),
            r.default.subscribe("PRESENCES_REPLACE", () =>
              this.handlePresencesReplace()
            ),
            r.default.subscribe("LOBBY_UPDATE", e => this.handleLobbyUpdate(e)),
            r.default.subscribe("LOBBY_DELETE", e => this.handleLobbyDelete(e)),
            r.default.subscribe("LOBBY_MEMBER_CONNECT", e =>
              this.handleLobbyMemberConnect(e)
            ),
            r.default.subscribe("LOBBY_MEMBER_UPDATE", e =>
              this.handleLobbyMemberUpdate(e)
            ),
            r.default.subscribe("LOBBY_MEMBER_DISCONNECT", e =>
              this.handleLobbyMemberDisconnect(e)
            ),
            r.default.subscribe("LOBBY_MESSAGE", e =>
              this.handleLobbyMessage(e)
            ),
            r.default.subscribe("ENTITLEMENT_CREATE", e =>
              this.handleEntitlementCreate(e)
            ),
            r.default.subscribe("ENTITLEMENT_DELETE", e =>
              this.handleEntitlementDelete(e)
            ),
            r.default.subscribe("USER_ACHIEVEMENT_UPDATE", e =>
              this.handleUserAchievementUpdate(e)
            );
        }
        handleMessage(e) {
          let t, n, a;
          if (0 === this.rpcServer.subscriptions.length) return;
          "MESSAGE_CREATE" === e.type && this.handleActivityMessage(e);
          let s = null;
          switch (e.type) {
            case "MESSAGE_CREATE":
              if ("SENDING" === e.message.state) return;
              (t = M.RPCEvents.MESSAGE_CREATE),
                (n = e.channelId),
                (a = e.message),
                (s = "".concat(t).concat(e.message.id));
              break;
            case "MESSAGE_UPDATE":
              (t = M.RPCEvents.MESSAGE_UPDATE),
                (n = e.message.channel_id),
                (a = e.message);
              break;
            case "MESSAGE_DELETE":
              (t = M.RPCEvents.MESSAGE_DELETE),
                (n = e.channelId),
                (a = { id: e.id }),
                (s = "".concat(t).concat(e.id));
              break;
            default:
              return (0, N.assertNever)(e);
          }
          null != n &&
            this.rpcServer.dispatchToSubscriptions(
              t,
              { channel_id: n },
              {
                channel_id: n,
                message: (0, O.transformInternalTextMessage)(a),
              },
              s
            );
        }
        handleSpeaking(e) {
          if (0 === this.rpcServer.subscriptions.length) return;
          let t =
            0 !== e.speakingFlags
              ? M.RPCEvents.SPEAKING_START
              : M.RPCEvents.SPEAKING_STOP;
          if (e.context === D.MediaEngineContextTypes.DEFAULT) {
            let n = m.default.getVoiceChannelId();
            if (null != n) {
              let a = d.default.getChannel(n);
              if (null == a) return;
              let s = g.default.getVoiceState(a.getGuildId(), e.userId);
              if (null == s) return;
              this.rpcServer.dispatchToSubscriptions(
                t,
                { channel_id: s.channelId },
                { channel_id: s.channelId, user_id: e.userId }
              );
            }
          } else
            h.default.getLobbyIdsForUser(e.userId).forEach(n => {
              let a = E.default.getLobby(n);
              null != a &&
                a.application_id === e.context &&
                this.rpcServer.dispatchToSubscriptions(
                  t,
                  {},
                  { lobby_id: n, user_id: e.userId }
                );
            });
        }
        handleVoiceChannelSelect(e) {
          let { guildId: t, channelId: n } = e;
          0 !== this.rpcServer.subscriptions.length &&
            this.rpcServer.dispatchToSubscriptions(
              M.RPCEvents.VOICE_CHANNEL_SELECT,
              {},
              { channel_id: n, guild_id: t }
            );
        }
        handleNotificationCreate(e) {
          let { channelId: t, message: n, icon: a, title: s, body: l } = e;
          0 !== this.rpcServer.subscriptions.length &&
            this.rpcServer.dispatchToSubscriptions(
              M.RPCEvents.NOTIFICATION_CREATE,
              {},
              {
                channel_id: t,
                message: (0, O.transformInternalTextMessage)(n),
                icon_url: null != a ? (0, O.getRemoteIconURL)(a) : null,
                title: s,
                body: l,
              }
            );
        }
        handleActivityJoin(e) {
          let { applicationId: t, secret: n, intent: a, embedded: s } = e;
          if (0 === this.rpcServer.subscriptions.length) return;
          let l = { secret: n };
          s && (l.intent = a),
            this.rpcServer.dispatchToSubscriptions(
              M.RPCEvents.ACTIVITY_JOIN,
              e => e.socket.application.id === t,
              l
            ),
            this.rpcServer.dispatchToSubscriptions(
              M.RPCEvents.GAME_JOIN,
              e => e.socket.application.id === t,
              l
            );
        }
        handleActivityLayoutModeUpdate(e) {
          let { applicationId: t, layoutMode: n } = e;
          if (0 === this.rpcServer.subscriptions.length) return;
          let a = n !== P.ActivityLayoutMode.FOCUSED;
          this.rpcServer.dispatchToSubscriptions(
            M.RPCEvents.ACTIVITY_PIP_MODE_UPDATE,
            e => e.socket.application.id === t,
            { is_pip_mode: a }
          );
          this.rpcServer.dispatchToSubscriptions(
            M.RPCEvents.ACTIVITY_LAYOUT_MODE_UPDATE,
            e => e.socket.application.id === t,
            { layout_mode: n }
          );
        }
        handleThermalStateChange(e) {
          let { applicationId: t, rawThermalState: n } = e;
          if (0 === this.rpcServer.subscriptions.length || null == t) return;
          let a = { thermal_state: (0, u.default)(n) };
          this.rpcServer.dispatchToSubscriptions(
            M.RPCEvents.THERMAL_STATE_UPDATE,
            e => e.socket.application.id === t,
            a
          );
        }
        handleScreenOrientationUpdate(e) {
          let { screenOrientation: t } = e;
          if (0 === this.rpcServer.subscriptions.length) return;
          let n =
            t === P.ActivityScreenOrientation.PORTRAIT
              ? "portrait"
              : "landscape";
          this.rpcServer.dispatchToSubscriptions(
            M.RPCEvents.ORIENTATION_UPDATE,
            {},
            { screen_orientation: t, orientation: n }
          );
        }
        handleActivityInstanceChange(e) {
          let { channelId: t, instanceId: n } = e;
          if (0 === this.rpcServer.subscriptions.length) return;
          let a = T.default.getCurrentUser();
          if (null == a) return;
          let s = o.default.getSelfEmbeddedActivityForChannel(t);
          null != s &&
            this.rpcServer.dispatchToSubscriptions(
              M.RPCEvents.ACTIVITY_INSTANCE_UPDATE,
              e => e.socket.application.id === s.applicationId,
              { instance_id: n }
            );
        }
        handleActivityMessage(e) {
          var t;
          let { channelId: n, message: a } = e;
          if (0 === this.rpcServer.subscriptions.length) return;
          let { application: s, activity: l } = a;
          if (null == s || null == l || null == l.party_id) return;
          let i = T.default.getUser(
            null === (t = a.author) || void 0 === t ? void 0 : t.id
          );
          if (null == i) return;
          let r = T.default.getCurrentUser();
          if (null == r || i.id === r.id) return;
          let o =
            l.type === M.ActivityActionTypes.JOIN_REQUEST
              ? C.default.getApplicationActivity(r.id, s.id)
              : C.default.getApplicationActivity(i.id, s.id);
          if (null == o || null == o.party || o.party.id !== l.party_id) return;
          let u = o.application_id;
          switch (l.type) {
            case M.ActivityActionTypes.JOIN:
              this.rpcServer.dispatchToSubscriptions(
                M.RPCEvents.ACTIVITY_INVITE,
                e => e.socket.application.id === u,
                {
                  user: (0, L.default)(i),
                  activity: o,
                  type: l.type,
                  channel_id: n,
                  message_id: a.id,
                }
              );
              break;
            case M.ActivityActionTypes.JOIN_REQUEST:
              this.rpcServer.dispatchToSubscriptions(
                M.RPCEvents.ACTIVITY_JOIN_REQUEST,
                e => e.socket.application.id === u,
                { user: (0, L.default)(i) }
              );
          }
        }
        handleOAuth2TokenRevoke(e) {
          let { accessToken: t } = e;
          this.rpcServer.sockets.forEach(e => {
            e.authorization.accessToken === t &&
              e.close(M.RPCCloseCodes.TOKEN_REVOKED, "Token revoked");
          });
        }
        handleGuildCreate(e) {
          let {
              guild: { id: t },
            } = e,
            n = f.default.getGuild(t);
          0 !== this.rpcServer.subscriptions.length &&
            null != n &&
            this.rpcServer.dispatchToSubscriptions(
              M.RPCEvents.GUILD_CREATE,
              {},
              { id: t, name: n.name }
            );
        }
        handleChannelCreate(e) {
          let {
            channel: { id: t, name: n, type: a },
          } = e;
          0 !== this.rpcServer.subscriptions.length &&
            this.rpcServer.dispatchToSubscriptions(
              M.RPCEvents.CHANNEL_CREATE,
              {},
              { id: t, name: n, type: a }
            );
        }
        handleLogout() {
          this.rpcServer.sockets.forEach(e =>
            e.close(M.RPCCloseCodes.CLOSE_NORMAL, "User logout")
          );
        }
        handleRelationshipAdd(e) {
          let {
            relationship: { id: t, type: n },
          } = e;
          0 !== this.rpcServer.subscriptions.length &&
            this.rpcServer.dispatchToSubscriptions(
              M.RPCEvents.RELATIONSHIP_UPDATE,
              {},
              (0, O.transformRelationship)(n, t)
            );
        }
        handleRelationshipRemove(e) {
          let {
            relationship: { id: t },
          } = e;
          0 !== this.rpcServer.subscriptions.length &&
            this.rpcServer.dispatchToSubscriptions(
              M.RPCEvents.RELATIONSHIP_UPDATE,
              {},
              (0, O.transformRelationship)(M.RelationshipTypes.NONE, t)
            );
        }
        handlePresenceUpdate(e) {
          let { updates: t } = e;
          0 !== this.rpcServer.subscriptions.length &&
            t.forEach(e => {
              let {
                guildId: t,
                user: { id: n },
              } = e;
              if (null != t) return;
              let a = S.default.getRelationshipType(n);
              a === M.RelationshipTypes.NONE &&
                p.default.getUserAffinitiesUserIds().has(n) &&
                (a = M.RelationshipTypes.IMPLICIT),
                a !== M.RelationshipTypes.NONE &&
                  this.rpcServer.dispatchToSubscriptions(
                    M.RPCEvents.RELATIONSHIP_UPDATE,
                    {},
                    (0, O.transformRelationship)(a, n)
                  );
            });
        }
        handlePresencesReplace() {
          0 !== this.rpcServer.subscriptions.length &&
            l.forEach(S.default.getRelationships(), (e, t) => {
              this.rpcServer.dispatchToSubscriptions(
                M.RPCEvents.RELATIONSHIP_UPDATE,
                {},
                (0, O.transformRelationship)(e, t)
              );
            });
        }
        handleLobbyUpdate(e) {
          let { lobby: t } = e;
          0 !== this.rpcServer.subscriptions.length &&
            this.rpcServer.dispatchToSubscriptions(
              M.RPCEvents.LOBBY_UPDATE,
              {},
              t
            );
        }
        handleLobbyDelete(e) {
          let { lobbyId: t } = e;
          0 !== this.rpcServer.subscriptions.length &&
            this.rpcServer.dispatchToSubscriptions(
              M.RPCEvents.LOBBY_DELETE,
              {},
              { id: t }
            );
        }
        handleLobbyMemberConnect(e) {
          let { lobbyId: t, member: n } = e;
          0 !== this.rpcServer.subscriptions.length &&
            this.rpcServer.dispatchToSubscriptions(
              M.RPCEvents.LOBBY_MEMBER_CONNECT,
              {},
              { lobby_id: t, member: n }
            );
        }
        handleLobbyMemberUpdate(e) {
          let { lobbyId: t, member: n } = e;
          0 !== this.rpcServer.subscriptions.length &&
            this.rpcServer.dispatchToSubscriptions(
              M.RPCEvents.LOBBY_MEMBER_UPDATE,
              {},
              { lobby_id: t, member: n }
            );
        }
        handleLobbyMemberDisconnect(e) {
          let { lobbyId: t, member: n } = e;
          0 !== this.rpcServer.subscriptions.length &&
            this.rpcServer.dispatchToSubscriptions(
              M.RPCEvents.LOBBY_MEMBER_DISCONNECT,
              {},
              { lobby_id: t, member: n }
            );
        }
        handleLobbyMessage(e) {
          let { lobbyId: t, senderId: n, data: a } = e;
          0 !== this.rpcServer.subscriptions.length &&
            this.rpcServer.dispatchToSubscriptions(
              M.RPCEvents.LOBBY_MESSAGE,
              {},
              { lobby_id: t, sender_id: n, data: a }
            );
        }
        handleEntitlementCreate(e) {
          let { entitlement: t } = e;
          0 !== this.rpcServer.subscriptions.length &&
            this.rpcServer.dispatchToSubscriptions(
              M.RPCEvents.ENTITLEMENT_CREATE,
              e => e.socket.application.id === t.application_id,
              { entitlement: t }
            );
        }
        handleEntitlementDelete(e) {
          let { entitlement: t } = e;
          0 !== this.rpcServer.subscriptions.length &&
            this.rpcServer.dispatchToSubscriptions(
              M.RPCEvents.ENTITLEMENT_DELETE,
              e => e.socket.application.id === t.application_id,
              { entitlement: t }
            );
        }
        handleUserAchievementUpdate(e) {
          let { userAchievement: t } = e;
          if (0 === this.rpcServer.subscriptions.length) return;
          let { application_id: n } = t;
          this.rpcServer.dispatchToSubscriptions(
            M.RPCEvents.USER_ACHIEVEMENT_UPDATE,
            e => e.socket.application.id === n,
            { user_achievement: t }
          );
        }
        constructor(e) {
          (this.rpcServer = e.server),
            (this.transports = e.transports),
            (this.rpcCommandHandlers = e.commands),
            (this.rpcEventHandlers = e.events),
            (this.stores = e.stores),
            (this.registerTransportsForEmbeddedPlatform =
              e.registerTransportsForEmbeddedPlatform);
        }
      };
    },
    18520: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return p;
          },
        }),
        n("222007");
      var a = n("522632"),
        s = n("891189"),
        l = n("316693"),
        i = n("872717"),
        r = n("524297"),
        o = n("95410"),
        u = n("913144"),
        d = n("8222"),
        c = n("357974"),
        f = n("697218"),
        E = n("991170"),
        h = n("861309"),
        _ = n("492249"),
        C = n("49111");
      let I = "CachedTokens";
      async function S(e, t, n) {
        let a,
          {
            client_id: i,
            response_type: r = "code",
            redirect_uri: o,
            code_challenge: u,
            code_challenge_method: _,
            state: I,
            scope: S,
            permissions: m,
            guild_id: p,
            channel_id: T,
            prompt: g,
            disable_guild_select: A,
            integration_type: N,
          } = e;
        if (null == i)
          throw new h.default(
            { errorCode: C.RPCErrors.OAUTH2_ERROR },
            "No Client ID provided"
          );
        if (null != o)
          throw new h.default(
            { errorCode: C.RPCErrors.OAUTH2_ERROR },
            "Redirect URI cannot be used in the RPC OAuth2 Authorization flow"
          );
        let R = [];
        "string" == typeof S
          ? (R = S.split(" ").filter(e => e.length > 0))
          : Array.isArray(S) && (R = S);
        let O = f.default.getCurrentUser();
        if (null == O)
          throw new h.default(
            { errorCode: C.RPCErrors.OAUTH2_ERROR },
            "Client is not logged in"
          );
        try {
          a = await (0, d.fetchAuthorization)({
            clientId: i,
            scopes: R,
            responseType: r,
            redirectUri: o,
            codeChallenge: u,
            codeChallengeMethod: _,
            state: I,
          });
        } catch (t) {
          let { body: e } = t;
          throw new h.default(
            { errorCode: C.RPCErrors.OAUTH2_ERROR },
            "OAuth2 Authorization Error: ".concat(e.message || "Unknown Error")
          );
        }
        if (g === c.OAuth2Prompts.NONE && null != a && a.authorized)
          try {
            let e = await (0, d.authorize)({
              authorize: !0,
              clientId: i,
              scopes: R,
              responseType: r,
              redirectUri: o,
              codeChallenge: u,
              codeChallengeMethod: _,
              state: I,
              integrationType:
                null == N
                  ? s.ApplicationIntegrationType.GUILD_INSTALL
                  : Number(N),
            });
            return e.location;
          } catch (t) {
            let { body: e } = t;
            throw new h.default(
              { errorCode: C.RPCErrors.OAUTH2_ERROR },
              "OAuth2 Authorize Error: ".concat(e.message || "Unknown Error")
            );
          }
        null == n || n(a.application, T);
        let v = E.default.NONE;
        try {
          v = l.default.deserialize(null != m ? m : 0);
        } catch (e) {}
        return t(i, a, R, v, r, o, u, _, I, p, T, g, A);
      }
      function m(e, t) {
        if (e.authorization.accessToken)
          throw new h.default(
            { errorCode: C.RPCErrors.INVALID_COMMAND },
            "Already authenticated"
          );
        if (e.authorization.authing)
          throw new h.default(
            { errorCode: C.RPCErrors.INVALID_COMMAND },
            "Already authenticating"
          );
        return (
          (e.authorization.authing = !0),
          i.default
            .get({
              url: C.Endpoints.OAUTH2_CURRENT_AUTH,
              headers: { Authorization: "Bearer ".concat(t) },
              oldFormErrors: !0,
            })
            .then(
              n => {
                e.authorization.authing = !1;
                let { application: a, user: s, scopes: l, expires: i } = n.body;
                if (e.application.id !== a.id)
                  throw new h.default(
                    { errorCode: C.RPCErrors.INVALID_CLIENTID },
                    "Application does not match the connection's"
                  );
                let r = f.default.getCurrentUser();
                if (null == r || !s || r.id !== s.id)
                  throw new h.default(
                    { errorCode: C.RPCErrors.INVALID_TOKEN },
                    "Token does not match current user"
                  );
                return (
                  (e.authorization.scopes = [
                    ...e.authorization.scopes,
                    ...l,
                    _.RPC_AUTHENTICATED_SCOPE,
                  ]),
                  (e.authorization.accessToken = t),
                  (e.authorization.expires = new Date(i)),
                  u.default.dispatch({
                    type: "RPC_APP_AUTHENTICATED",
                    socketId: e.id,
                    application: e.application,
                  }),
                  { ...n.body, access_token: t }
                );
              },
              () => {
                throw new h.default(
                  { errorCode: C.RPCErrors.INVALID_TOKEN },
                  "Invalid access token: ".concat(t)
                );
              }
            )
            .catch(t => {
              throw ((e.authorization.authing = !1), t);
            })
        );
      }
      function p(e, t) {
        return {
          [C.RPCCommands.AUTHENTICATE]: (0, r.createRPCCommand)(
            C.RPCCommands.AUTHENTICATE,
            {
              handler(n) {
                let {
                  socket: s,
                  args: { access_token: l },
                } = n;
                if (null == l && s.transport === _.TransportTypes.IPC) {
                  let n = s.application.id;
                  if (null == n)
                    throw new h.default(
                      { errorCode: C.RPCErrors.INVALID_COMMAND },
                      "No application."
                    );
                  let i = C.OAuth2Scopes.IDENTIFY,
                    r = () =>
                      S(
                        { client_id: n, scope: i, response_type: "token" },
                        e,
                        t
                      ).then(e => {
                        if (null == e)
                          throw new h.default(
                            { errorCode: C.RPCErrors.UNKNOWN_ERROR },
                            "Unknown error occurred"
                          );
                        let t = e.split(/#|\?/),
                          l = a.parse(t[t.length - 1]);
                        if (null != l.error) {
                          var i;
                          throw new h.default(
                            { errorCode: C.RPCErrors.OAUTH2_ERROR },
                            "OAuth2 Error: "
                              .concat(l.error, ": ")
                              .concat(
                                null !== (i = l.error_description) &&
                                  void 0 !== i
                                  ? i
                                  : "unknown error"
                              )
                          );
                        }
                        return (
                          !(function (e, t, n, a) {
                            var s;
                            let l =
                              null !== (s = o.default.get(I)) && void 0 !== s
                                ? s
                                : {};
                            (l[e] = {
                              accessToken: t,
                              scope: n,
                              expires: Date.now() + a,
                            }),
                              o.default.set(I, l);
                          })(n, l.access_token, l.scope, l.expires_in),
                          m(s, l.access_token)
                        );
                      });
                  return null !=
                    (l = (function (e, t) {
                      let n = o.default.get(I);
                      if (null != n && null != n[e]) {
                        let a = n[e];
                        if (!(a.scope !== t || a.expires <= Date.now()))
                          return a.accessToken;
                        delete n[e], o.default.set(I, n);
                      }
                    })(n, i))
                    ? m(s, l).catch(
                        () => (
                          !(function (e) {
                            var t;
                            let n =
                              null !== (t = o.default.get(I)) && void 0 !== t
                                ? t
                                : {};
                            delete n[e], o.default.set(I, n);
                          })(n),
                          r()
                        )
                      )
                    : r();
                }
                if (null == l)
                  throw new h.default(
                    { errorCode: C.RPCErrors.INVALID_TOKEN },
                    "No access token provided"
                  );
                return m(s, l);
              },
            }
          ),
          [C.RPCCommands.AUTHORIZE]: {
            handler(n) {
              let { socket: s, args: l } = n,
                r = l.client_id;
              if (!r)
                throw new h.default(
                  { errorCode: C.RPCErrors.INVALID_CLIENTID },
                  "No client id provided"
                );
              if (null != s.authorization.accessToken)
                throw new h.default(
                  { errorCode: C.RPCErrors.INVALID_COMMAND },
                  "Already authenticated"
                );
              if (s.authorization.authing)
                throw new h.default(
                  { errorCode: C.RPCErrors.INVALID_COMMAND },
                  "Already authing"
                );
              return (
                (s.authorization.authing = !0),
                i.default
                  .get({
                    url: C.Endpoints.APPLICATION_RPC(r),
                    oldFormErrors: !0,
                  })
                  .then(
                    n => {
                      let a = n.body;
                      if (s.application.id !== a.id)
                        throw new h.default(
                          { errorCode: C.RPCErrors.INVALID_CLIENTID },
                          "Application does not match the connection's"
                        );
                      let i = l.scopes || l.scope;
                      return delete l.scopes, S({ ...l, scope: i }, e, t);
                    },
                    () => {
                      throw new h.default(
                        { errorCode: C.RPCErrors.INVALID_CLIENTID },
                        "Invalid client id: ".concat(r)
                      );
                    }
                  )
                  .then(e => {
                    if (((s.authorization.authing = !1), null == e))
                      throw new h.default(
                        { errorCode: C.RPCErrors.UNKNOWN_ERROR },
                        "Unknown error occurred"
                      );
                    let t = a.parse(e.split("?")[1].split("#")[0]);
                    if (null != t.error) {
                      var n;
                      throw new h.default(
                        { errorCode: C.RPCErrors.OAUTH2_ERROR },
                        "OAuth2 Error: "
                          .concat(t.error, ": ")
                          .concat(
                            null !== (n = t.error_description) && void 0 !== n
                              ? n
                              : "unknown error"
                          )
                      );
                    }
                    return { code: t.code };
                  })
                  .catch(e => {
                    throw ((s.authorization.authing = !1), e);
                  })
              );
            },
          },
        };
      }
    },
    381759: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        }),
        n("222007");
      var a = n("831314"),
        s = n("861309"),
        l = n("716724"),
        i = n("492249"),
        r = n("49111"),
        o = {
          [r.RPCCommands.SET_USER_ACHIEVEMENT]: {
            scope: {
              [i.RPC_SCOPE_CONFIG.ANY]: [r.OAuth2Scopes.RPC, i.RPC_LOCAL_SCOPE],
            },
            validation: e =>
              (0, l.default)(e)
                .required()
                .keys({
                  achievement_id: e.string().min(2).max(128),
                  percent_complete: e.number().min(0).max(100).required(),
                }),
            handler(e) {
              let {
                  socket: t,
                  args: { achievement_id: n, percent_complete: l },
                } = e,
                i = t.application.id;
              if (null == i)
                throw new s.default(
                  { errorCode: r.RPCErrors.INVALID_COMMAND },
                  "No application."
                );
              return a.default
                .setUserAchievement(i, n, l)
                .catch(e => {
                  let { status: t, body: n } = e;
                  switch (t) {
                    case 429:
                      throw new s.default(
                        { errorCode: r.RPCErrors.RATE_LIMITED },
                        "You are being rate limited."
                      );
                    case 403:
                      if (
                        null != n &&
                        n.code ===
                          r.AbortCodes.USER_NOT_AUTHORIZED_FOR_APPLICATION
                      )
                        throw new s.default(
                          {
                            errorCode: r.RPCErrors.UNAUTHORIZED_FOR_ACHIEVEMENT,
                          },
                          "Not authorized to update this achievement."
                        );
                      throw new s.default(
                        { errorCode: r.RPCErrors.UNKNOWN_ERROR },
                        "Unknown error from API. status=".concat(t, ".")
                      );
                    default:
                      throw new s.default(
                        { errorCode: r.RPCErrors.UNKNOWN_ERROR },
                        "Unknown error from API. status=".concat(t, ".")
                      );
                  }
                })
                .then(() => null);
            },
          },
          [r.RPCCommands.GET_USER_ACHIEVEMENTS]: {
            scope: {
              [i.RPC_SCOPE_CONFIG.ANY]: [r.OAuth2Scopes.RPC, i.RPC_LOCAL_SCOPE],
            },
            handler(e) {
              let { socket: t } = e,
                n = t.application.id;
              if (null == n)
                throw new s.default(
                  { errorCode: r.RPCErrors.INVALID_COMMAND },
                  "No application."
                );
              return a.default.fetchForApplication(n).then(e => e || []);
            },
          },
        };
    },
    81910: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("524297"),
        s = n("578287"),
        l = n("65810"),
        i = n("49111"),
        r = {
          [i.RPCCommands.GET_ACTIVITY_INSTANCE_CONNECTED_PARTICIPANTS]: (0,
          a.createRPCCommand)(
            i.RPCCommands.GET_ACTIVITY_INSTANCE_CONNECTED_PARTICIPANTS,
            {
              scope: l.activityInstanceConnectedParticipantsScope,
              handler(e) {
                let { socket: t } = e;
                return (
                  (0, s.validatePostMessageTransport)(t.transport),
                  (0, l.activityInstanceConnectedParticipants)()
                );
              },
            }
          ),
        };
    },
    737954: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        }),
        n("222007");
      var a = n("913144"),
        s = n("299039"),
        l = n("578287"),
        i = n("716724"),
        r = n("613652"),
        o = n("492249"),
        u = n("49111"),
        d = {
          [u.RPCCommands.CREATE_ACTIVITY_INSTANCE]: {
            scope: { [o.RPC_SCOPE_CONFIG.ANY]: [o.RPC_AUTHENTICATED_SCOPE] },
            handler(e) {
              let { socket: t } = e;
              return (
                (0, l.validatePostMessageTransport)(t.transport),
                Promise.resolve({
                  instance_id: s.default.fromTimestamp(Date.now()),
                })
              );
            },
          },
          [u.RPCCommands.JOIN_ACTIVITY_INSTANCE]: {
            scope: { [o.RPC_SCOPE_CONFIG.ANY]: [o.RPC_AUTHENTICATED_SCOPE] },
            validation: e =>
              (0, i.default)(e)
                .required()
                .keys({ instance_id: e.string().required().allow(null) }),
            handler(e) {
              let {
                socket: t,
                args: { instance_id: n },
              } = e;
              (0, l.validatePostMessageTransport)(t.transport);
              let s = (0, r.default)();
              return (
                null != t.application.id &&
                  (null == s ? void 0 : s.id) != null &&
                  a.default.dispatch({
                    type: "EMBEDDED_ACTIVITY_INSTANCE_CHANGE",
                    channelId: s.id,
                    instanceId: n,
                  }),
                Promise.resolve()
              );
            },
          },
          [u.RPCCommands.LEAVE_ACTIVITY_INSTANCE]: {
            scope: { [o.RPC_SCOPE_CONFIG.ANY]: [o.RPC_AUTHENTICATED_SCOPE] },
            handler(e) {
              let { socket: t } = e;
              (0, l.validatePostMessageTransport)(t.transport);
              let n = (0, r.default)();
              return (
                null != t.application.id &&
                  (null == n ? void 0 : n.id) != null &&
                  a.default.dispatch({
                    type: "EMBEDDED_ACTIVITY_INSTANCE_CHANGE",
                    channelId: n.id,
                    instanceId: null,
                  }),
                Promise.resolve()
              );
            },
          },
        };
    },
    878705: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return C;
          },
        }),
        n("222007"),
        n("702976");
      var a = n("872717"),
        s = n("84460"),
        l = n("648456"),
        i = n("299285"),
        r = n("167726"),
        o = n("599110"),
        u = n("568734"),
        d = n("861309"),
        c = n("578287"),
        f = n("716724"),
        E = n("613652"),
        h = n("492249"),
        _ = n("49111"),
        C = {
          [_.RPCCommands.SEND_ANALYTICS_EVENT]: {
            validation: e =>
              (0, f.default)(e)
                .required()
                .keys({
                  event_name: e.string().required(),
                  event_properties: e.object().required(),
                }),
            handler(e) {
              var t;
              let {
                socket: n,
                args: { event_name: a, event_properties: s },
              } = e;
              (0, c.validatePostMessageTransport)(n.transport),
                (0, c.validateApplication)(n.application);
              let r = n.application.id,
                f = (0, E.default)(),
                h = null == f ? void 0 : f.getGuildId();
              if (null == f)
                throw new d.default(
                  { errorCode: _.RPCErrors.INVALID_COMMAND },
                  "Invalid channel"
                );
              let C = i.default.getApplication(r),
                I = (0, u.hasFlag)(
                  null !== (t = null == C ? void 0 : C.flags) && void 0 !== t
                    ? t
                    : 0,
                  _.ApplicationFlags.EMBEDDED_FIRST_PARTY
                );
              if (!I)
                throw new d.default(
                  { errorCode: _.RPCErrors.INVALID_COMMAND },
                  "This application cannot access this API"
                );
              let S = (0, l.getActiveAnalyticsSessionIDs)(r),
                m = {
                  activity_application_id: r,
                  activity_channel_type: f.type,
                  activity_guild_id: h,
                  activity_user_session_id:
                    null == S ? void 0 : S.activityUserSessionId,
                };
              o.default.track(a, { ...m, ...s });
            },
          },
          [_.RPCCommands.GET_APPLICATION_TICKET]: {
            scope: h.RPC_LOCAL_SCOPE,
            handler(e) {
              let { socket: t } = e,
                n = t.application.id;
              if (null == n)
                throw new d.default(
                  { errorCode: _.RPCErrors.INVALID_COMMAND },
                  "No application."
                );
              return a.default
                .post({
                  url: _.Endpoints.APPLICATION_TICKET(n),
                  body: {
                    test_mode:
                      r.default.inTestModeForApplication(n) ||
                      s.default.inDevModeForApplication(n),
                  },
                  retries: 3,
                  oldFormErrors: !0,
                })
                .then(e => {
                  let { body: t } = e;
                  return t;
                });
            },
          },
        };
    },
    268801: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        }),
        n("222007");
      var a = n("17434"),
        s = n("861309"),
        l = n("716724"),
        i = n("492249"),
        r = n("49111"),
        o = n("353927"),
        u = {
          [r.RPCCommands.SET_CERTIFIED_DEVICES]: {
            scope: {
              [i.RPC_SCOPE_CONFIG.ANY]: [r.OAuth2Scopes.RPC, i.RPC_LOCAL_SCOPE],
            },
            validation: e =>
              (0, l.default)(e)
                .required()
                .keys({
                  devices: e.array().items(
                    (0, l.default)(e).keys({
                      type: e
                        .string()
                        .required()
                        .valid([
                          o.DeviceTypes.AUDIO_INPUT,
                          o.DeviceTypes.AUDIO_OUTPUT,
                          o.DeviceTypes.VIDEO_INPUT,
                        ]),
                      id: e.string().required().min(1),
                      vendor: e
                        .object()
                        .required()
                        .keys({
                          name: e.string().min(1),
                          url: e.string().min(1),
                        }),
                      model: e
                        .object()
                        .required()
                        .keys({
                          name: e.string().min(1),
                          url: e.string().min(1),
                        }),
                      related: e.array().items(e.string().min(1)),
                      echo_cancellation: e.boolean(),
                      noise_suppression: e.boolean(),
                      automatic_gain_control: e.boolean(),
                      hardware_mute: e.boolean(),
                    })
                  ),
                }),
            handler(e) {
              let {
                socket: t,
                args: { devices: n },
              } = e;
              if (null == t.application.id)
                throw new s.default(
                  { errorCode: r.RPCErrors.INVALID_COMMAND },
                  "No application."
                );
              (0, a.setCertifiedDevices)(
                t.application.id,
                n.map(e => ({
                  type: e.type,
                  id: e.id,
                  vendor: e.vendor,
                  model: e.model,
                  related: e.related.filter(e => n.some(t => t.id === e)),
                  echoCancellation: e.echo_cancellation,
                  noiseSuppression: e.noise_suppression,
                  automaticGainControl: e.automatic_gain_control,
                  hardwareMute: e.hardware_mute,
                }))
              );
            },
          },
        };
    },
    523834: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return T;
          },
        }),
        n("222007");
      var a = n("917351"),
        s = n.n(a),
        l = n("970728"),
        i = n("987317"),
        r = n("393414"),
        o = n("233069"),
        u = n("42203"),
        d = n("305961"),
        c = n("957255"),
        f = n("18494"),
        E = n("800762"),
        h = n("404008"),
        _ = n("861309"),
        C = n("578287"),
        I = n("716724"),
        S = n("613652"),
        m = n("492249"),
        p = n("49111"),
        T = {
          [p.RPCCommands.GET_CHANNEL]: {
            scope: {
              [m.RPC_SCOPE_CONFIG.ANY]: [
                p.OAuth2Scopes.RPC,
                p.OAuth2Scopes.GUILDS,
              ],
            },
            handler(e) {
              let {
                  args: { channel_id: t },
                  socket: n,
                } = e,
                a = u.default.getChannel(t);
              if (null == a)
                throw new _.default(
                  { errorCode: p.RPCErrors.INVALID_CHANNEL },
                  "Invalid channel id: ".concat(t)
                );
              if (a.isPrivate()) {
                let e = n.authorization.scopes;
                if (
                  !e.includes(p.OAuth2Scopes.RPC) &&
                  !e.includes(p.OAuth2Scopes.DM_CHANNELS_READ)
                )
                  throw new _.default(
                    { errorCode: p.RPCErrors.INVALID_PERMISSIONS },
                    "Invalid scope"
                  );
              }
              return (0, C.transformChannel)(
                a,
                (0, C.hasMessageReadPermission)(
                  a,
                  n.application.id,
                  n.authorization.scopes
                )
              );
            },
          },
          [p.RPCCommands.GET_CHANNELS]: {
            scope: p.OAuth2Scopes.RPC,
            handler(e) {
              let {
                  args: { guild_id: t },
                } = e,
                n = s.values(
                  u.default.loadAllGuildAndPrivateChannelsFromDisk()
                );
              if (t) {
                let e = d.default.getGuild(t);
                if (null == e)
                  throw new _.default(
                    { errorCode: p.RPCErrors.INVALID_GUILD },
                    "Invalid guild id: ".concat(t)
                  );
                n = n.filter(t => {
                  let { guild_id: n } = t;
                  return n === e.id;
                });
              }
              return {
                channels: n
                  .filter(e => c.default.can(p.Permissions.VIEW_CHANNEL, e))
                  .map(e => {
                    let { id: t, name: n, type: a } = e;
                    return { id: t, name: n, type: a };
                  }),
              };
            },
          },
          [p.RPCCommands.GET_CHANNEL_PERMISSIONS]: {
            scope: p.OAuth2Scopes.GUILDS_MEMBERS_READ,
            handler(e) {
              let t = (0, S.default)();
              if (null == t)
                throw new _.default(
                  { errorCode: p.RPCErrors.INVALID_CHANNEL },
                  "Invalid channel"
                );
              return { permissions: c.default.computePermissions(t) };
            },
          },
          [p.RPCCommands.SELECT_VOICE_CHANNEL]: {
            scope: p.OAuth2Scopes.RPC,
            validation: e =>
              (0, I.default)(e)
                .required()
                .keys({
                  channel_id: e.string().allow(null),
                  timeout: e.number().min(0).max(60),
                  force: e.boolean(),
                  navigate: e.boolean(),
                }),
            handler(e) {
              let {
                server: t,
                socket: n,
                args: {
                  channel_id: a,
                  timeout: s = 0,
                  force: l = !1,
                  navigate: I = !1,
                },
              } = e;
              if (!a) return i.default.selectVoiceChannel(null), null;
              let S = f.default.getVoiceChannelId();
              if (null != S && S !== a && !1 === l)
                throw new _.default(
                  { errorCode: p.RPCErrors.SELECT_VOICE_FORCE_REQUIRED },
                  "User is already joined to a voice channel."
                );
              return t
                .storeWait(n, () => u.default.getChannel(a), s)
                .catch(() => {
                  throw new _.default(
                    { errorCode: p.RPCErrors.SELECT_CHANNEL_TIMED_OUT },
                    "Request to select voice channel timed out."
                  );
                })
                .then(e => {
                  if (null == e)
                    throw new _.default(
                      { errorCode: p.RPCErrors.INVALID_CHANNEL },
                      "Invalid channel id: ".concat(a)
                    );
                  if (!(0, o.isVoiceChannel)(e.type))
                    throw new _.default(
                      { errorCode: p.RPCErrors.INVALID_CHANNEL },
                      "Channel is not a voice channel"
                    );
                  return Promise.all([
                    Promise.resolve(e),
                    (0, C.transformChannel)(
                      e,
                      (0, C.hasMessageReadPermission)(
                        e,
                        n.application.id,
                        n.authorization.scopes
                      )
                    ),
                  ]);
                })
                .then(e => {
                  let [t, n] = e;
                  if (n.guild_id) {
                    if ((0, h.isChannelFull)(t, E.default, d.default))
                      throw new _.default(
                        { errorCode: p.RPCErrors.INVALID_CHANNEL },
                        "Channel is full"
                      );
                    if (!c.default.can(p.Permissions.CONNECT, t))
                      throw new _.default(
                        { errorCode: p.RPCErrors.INVALID_PERMISSIONS },
                        "Connect permission required to join channel"
                      );
                  }
                  return (
                    i.default.selectVoiceChannel(t.id),
                    I && (0, r.replaceWith)(p.Routes.CHANNEL(t.guild_id, t.id)),
                    n
                  );
                });
            },
          },
          [p.RPCCommands.GET_SELECTED_VOICE_CHANNEL]: {
            scope: {
              [m.RPC_SCOPE_CONFIG.ANY]: [
                p.OAuth2Scopes.RPC,
                p.OAuth2Scopes.RPC_VOICE_READ,
              ],
            },
            handler(e) {
              let { socket: t } = e,
                n = f.default.getVoiceChannelId(),
                a = null != n ? u.default.getChannel(n) : null;
              return null != a
                ? (0, C.transformChannel)(
                    a,
                    (0, C.hasMessageReadPermission)(
                      a,
                      t.application.id,
                      t.authorization.scopes
                    )
                  )
                : null;
            },
          },
          [p.RPCCommands.SELECT_TEXT_CHANNEL]: {
            scope: p.OAuth2Scopes.RPC,
            validation: e =>
              (0, I.default)(e)
                .required()
                .keys({
                  channel_id: e.string().allow(null),
                  timeout: e.number().min(0).max(60),
                }),
            handler(e) {
              let {
                server: t,
                socket: n,
                args: { channel_id: a, timeout: s = 0 },
              } = e;
              return a
                ? t
                    .storeWait(n, () => u.default.getChannel(a), s)
                    .catch(() => {
                      throw new _.default(
                        { errorCode: p.RPCErrors.SELECT_CHANNEL_TIMED_OUT },
                        "Request to select text channel timed out."
                      );
                    })
                    .then(e => {
                      if (null == e)
                        throw new _.default(
                          { errorCode: p.RPCErrors.INVALID_CHANNEL },
                          "Invalid channel id: ".concat(a)
                        );
                      if (!(0, o.isTextChannel)(e.type))
                        throw new _.default(
                          { errorCode: p.RPCErrors.INVALID_CHANNEL },
                          "Channel is not a text channel"
                        );
                      return Promise.all([
                        Promise.resolve(e),
                        (0, C.transformChannel)(
                          e,
                          (0, C.hasMessageReadPermission)(
                            e,
                            n.application.id,
                            n.authorization.scopes
                          )
                        ),
                      ]);
                    })
                    .then(e => {
                      let [t, n] = e;
                      if (
                        n.guild_id &&
                        !c.default.can(p.Permissions.VIEW_CHANNEL, t)
                      )
                        throw new _.default(
                          { errorCode: p.RPCErrors.INVALID_CHANNEL },
                          "No permission to see channel"
                        );
                      return (
                        n.guild_id
                          ? (0, r.replaceWith)(
                              p.Routes.CHANNEL(n.guild_id, t.id)
                            )
                          : i.default.selectPrivateChannel(t.id),
                        n
                      );
                    })
                : ((0, r.transitionTo)(p.Routes.ME), null);
            },
          },
          [p.RPCCommands.CREATE_CHANNEL_INVITE]: {
            scope: p.OAuth2Scopes.RPC,
            handler(e) {
              let {
                args: { channel_id: t, ...n },
              } = e;
              return l.default.createInvite(t, n, "RPC").catch(() => {
                throw new _.default(
                  { errorCode: p.RPCErrors.INVALID_PERMISSIONS },
                  "Unable to generate an invite for ".concat(
                    t,
                    ". Does this user have permissions?"
                  )
                );
              });
            },
          },
        };
    },
    418194: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        }),
        n("222007");
      var a = n("913144"),
        s = n("861309"),
        l = n("716724"),
        i = n("492249"),
        r = n("49111"),
        o = {
          [r.RPCCommands.SET_CONFIG]: {
            scope: i.RPC_AUTHENTICATED_SCOPE,
            validation: e =>
              (0, l.default)(e)
                .required()
                .keys({ use_interactive_pip: e.boolean() }),
            handler(e) {
              let {
                socket: t,
                args: { use_interactive_pip: n },
              } = e;
              if (t.transport !== i.TransportTypes.POST_MESSAGE)
                throw new s.default(
                  { errorCode: r.RPCErrors.INVALID_COMMAND },
                  'command not available from "'.concat(
                    t.transport,
                    " transport"
                  )
                );
              if (null == t.application.id)
                throw new s.default(
                  { errorCode: r.RPCErrors.INVALID_COMMAND },
                  "invalid application"
                );
              return (
                a.default.dispatch({
                  type: "EMBEDDED_ACTIVITY_SET_CONFIG",
                  applicationId: t.application.id,
                  config: { useInteractivePIP: n },
                }),
                Promise.resolve({ use_interactive_pip: n })
              );
            },
          },
        };
    },
    84090: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          crossPlatformCommands: function () {
            return R;
          },
        });
      var a = n("381759"),
        s = n("81910"),
        l = n("737954"),
        i = n("878705"),
        r = n("268801"),
        o = n("523834"),
        u = n("418194"),
        d = n("156965"),
        c = n("234933"),
        f = n("568887"),
        E = n("336566"),
        h = n("899114"),
        _ = n("709963"),
        C = n("258316"),
        I = n("881963"),
        S = n("88321"),
        m = n("473902"),
        p = n("673090"),
        T = n("108087"),
        g = n("657322"),
        A = n("220795"),
        N = n("272279");
      let R = {
        ...a.default,
        ...l.default,
        ...i.default,
        ...r.default,
        ...o.default,
        ...u.default,
        ...d.default,
        ...c.default,
        ...f.default,
        ...E.default,
        ...h.default,
        ..._.default,
        ...I.default,
        ...S.default,
        ...m.default,
        ...T.default,
        ...g.default,
        ...N.default,
        ...A.default,
        ...C.default,
        ...p.default,
        ...s.default,
      };
    },
    156965: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        }),
        n("222007");
      var a = n("917351"),
        s = n.n(a),
        l = n("305961"),
        i = n("861309"),
        r = n("716724"),
        o = n("49111"),
        u = {
          [o.RPCCommands.GET_GUILD]: {
            scope: o.OAuth2Scopes.RPC,
            validation: e =>
              (0, r.default)(e)
                .required()
                .keys({
                  guild_id: e.string(),
                  timeout: e.number().min(0).max(60),
                }),
            handler(e) {
              let {
                socket: t,
                server: n,
                args: { guild_id: a, timeout: s = 0 },
              } = e;
              return n
                .storeWait(t, () => l.default.getGuild(a), s)
                .catch(() => {
                  throw new i.default(
                    { errorCode: o.RPCErrors.GET_GUILD_TIMED_OUT },
                    "Request to get guild timed out."
                  );
                })
                .then(e => {
                  var t;
                  if (null == e)
                    throw new i.default(
                      { errorCode: o.RPCErrors.INVALID_GUILD },
                      "Invalid guild id: ".concat(a)
                    );
                  return {
                    id: e.id,
                    name: e.name,
                    icon_url:
                      null !== (t = e.getIconURL(128)) && void 0 !== t
                        ? t
                        : null,
                    members: [],
                    vanity_url_code: e.vanityURLCode,
                  };
                });
            },
          },
          [o.RPCCommands.GET_GUILDS]: {
            scope: o.OAuth2Scopes.RPC,
            handler() {
              let e = l.default.getGuilds();
              return {
                guilds: s.map(e, e => ({
                  id: e.id,
                  name: e.name,
                  icon_url: e.getIconURL(128),
                })),
              };
            },
          },
        };
    },
    234933: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        }),
        n("222007");
      var a = n("697218"),
        s = n("315102"),
        l = n("103603"),
        i = n("861309"),
        r = n("716724"),
        o = n("492249"),
        u = n("49111"),
        d = {
          [u.RPCCommands.GET_IMAGE]: {
            scope: o.RPC_LOCAL_SCOPE,
            validation: e =>
              (0, r.default)(e)
                .required()
                .keys({
                  type: e.string().required().valid(["user"]),
                  id: e.string().required(),
                  format: e.string().required().valid(["png", "webp", "jpg"]),
                  size: e
                    .number()
                    .required()
                    .valid([16, 32, 64, 128, 256, 512, 1024]),
                }),
            handler(e) {
              let t,
                {
                  args: { type: n, id: r, format: o = "png", size: d = 128 },
                } = e;
              if ("user" === n) {
                let e = a.default.getUser(r);
                if (null != e) {
                  t = s.default.getUserAvatarURL(e, !1, d, o);
                  let n = window.GLOBAL_ENV.CDN_HOST;
                  null != n && -1 !== t.indexOf(n) && (t += "&_=");
                } else
                  throw new i.default(
                    { errorCode: u.RPCErrors.INVALID_USER },
                    "Invalid user id: ".concat(r)
                  );
              }
              if (null == t)
                throw new i.default(
                  { errorCode: u.RPCErrors.INVALID_COMMAND },
                  "No valid type."
                );
              return fetch(t)
                .then(e => e.blob())
                .then(e => (0, l.readFileAsBase64)(e))
                .then(e => ({ data_url: e }));
            },
          },
        };
    },
    568887: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        }),
        n("222007"),
        n("511434"),
        n("313619"),
        n("654714"),
        n("287168"),
        n("956660");
      var a = n("922932"),
        s = n("128259"),
        l = n("773336"),
        i = n("861309"),
        r = n("578287"),
        o = n("716724"),
        u = n("492249"),
        d = n("49111"),
        c = {
          [d.RPCCommands.OPEN_EXTERNAL_LINK]: {
            scope: { [u.RPC_SCOPE_CONFIG.ANY]: [u.RPC_AUTHENTICATED_SCOPE] },
            validation: e =>
              (0, o.default)(e).required().keys({ url: e.string().required() }),
            handler(e) {
              let {
                socket: t,
                args: { url: n },
              } = e;
              (0, r.validatePostMessageTransport)(t.transport);
              try {
                let e = new URL(n);
                l.isPlatformEmbedded && a.default.focus(null, !0),
                  (0, s.handleClick)({ href: e.toString() });
              } catch (e) {
                throw new i.default(
                  { errorCode: d.RPCErrors.INVALID_COMMAND },
                  "Invalid URL: ".concat(n)
                );
              }
            },
          },
        };
    },
    336566: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        }),
        n("222007");
      var a = n("297726");
      n("216391");
      var s = n("260320"),
        l = n("861309"),
        i = n("716724"),
        r = n("492249"),
        o = n("49111");
      function u(e) {
        if (e instanceof s.LobbyError)
          switch (e.code) {
            case o.LobbyErrors.FULL:
              throw new l.default(
                { errorCode: o.RPCErrors.LOBBY_FULL },
                "Lobby is full."
              );
            case o.LobbyErrors.INVALID_SECRET:
              throw new l.default(
                { errorCode: o.RPCErrors.INVALID_LOBBY_SECRET },
                "Lobby secret is invalid."
              );
            case o.LobbyErrors.NOT_FOUND:
              throw new l.default(
                { errorCode: o.RPCErrors.INVALID_LOBBY },
                "Lobby does not exist."
              );
            case o.LobbyErrors.SERVICE_UNAVAILABLE:
              throw new l.default(
                { errorCode: o.RPCErrors.SERVICE_UNAVAILABLE },
                "Lobby service is unavailable."
              );
            case o.LobbyErrors.ALREADY_CONNECTING:
              throw new l.default(
                { errorCode: o.RPCErrors.INVALID_COMMAND },
                "Already connecting to lobby."
              );
            default:
              throw new l.default(
                { errorCode: o.RPCErrors.UNKNOWN_ERROR },
                "Unknown error has occured."
              );
          }
        throw e;
      }
      var d = {
        [o.RPCCommands.CREATE_LOBBY]: {
          scope: { [r.RPC_SCOPE_CONFIG.ANY]: [r.RPC_LOCAL_SCOPE] },
          validation: e =>
            (0, i.default)(e)
              .required()
              .keys({
                type: e.number().valid(Object.values(o.LobbyTypes)),
                capacity: e.number(),
                locked: e.boolean(),
                metadata: e.object(),
              }),
          handler(e) {
            let {
              socket: t,
              args: { type: n, capacity: s, locked: i, metadata: r },
            } = e;
            if (null == t.application.id)
              throw new l.default(
                { errorCode: o.RPCErrors.INVALID_COMMAND },
                "No application."
              );
            return (0, a.createLobby)(t.id, t.application.id, {
              type: n,
              capacity: s,
              locked: i,
              metadata: r,
            }).catch(u);
          },
        },
        [o.RPCCommands.UPDATE_LOBBY]: {
          scope: { [r.RPC_SCOPE_CONFIG.ANY]: [r.RPC_LOCAL_SCOPE] },
          validation: e =>
            (0, i.default)(e)
              .required()
              .keys({
                id: e.string().required(),
                type: e.number().valid(Object.values(o.LobbyTypes)),
                owner_id: e.string(),
                capacity: e.number(),
                locked: e.boolean(),
                metadata: (0, i.default)(e),
              }),
          handler(e) {
            let {
              args: {
                id: t,
                type: n,
                owner_id: s,
                capacity: l,
                locked: i,
                metadata: r,
              },
            } = e;
            return (0, a.updateLobby)(t, {
              type: n,
              owner_id: s,
              capacity: l,
              locked: i,
              metadata: r,
            }).catch(u);
          },
        },
        [o.RPCCommands.DELETE_LOBBY]: {
          scope: { [r.RPC_SCOPE_CONFIG.ANY]: [r.RPC_LOCAL_SCOPE] },
          validation: e =>
            (0, i.default)(e).required().keys({ id: e.string().required() }),
          handler(e) {
            let {
              args: { id: t },
            } = e;
            return (0, a.deleteLobby)(t).catch(u);
          },
        },
        [o.RPCCommands.UPDATE_LOBBY_MEMBER]: {
          scope: { [r.RPC_SCOPE_CONFIG.ANY]: [r.RPC_LOCAL_SCOPE] },
          validation: e =>
            (0, i.default)(e)
              .required()
              .keys({
                lobby_id: e.string().required(),
                user_id: e.string().required(),
                metadata: (0, i.default)(e),
              }),
          handler(e) {
            let {
              args: { lobby_id: t, user_id: n, metadata: s },
            } = e;
            return (0, a.updateLobbyMember)(t, n, { metadata: s }).catch(u);
          },
        },
        [o.RPCCommands.CONNECT_TO_LOBBY]: {
          scope: { [r.RPC_SCOPE_CONFIG.ANY]: [r.RPC_LOCAL_SCOPE] },
          validation: e =>
            (0, i.default)(e)
              .required()
              .keys({
                id: e.string().required(),
                secret: e.string().required(),
              }),
          handler(e) {
            let {
              socket: t,
              args: { id: n, secret: s },
            } = e;
            return (0, a.connect)(t.id, n, s).catch(u);
          },
        },
        [o.RPCCommands.DISCONNECT_FROM_LOBBY]: {
          scope: { [r.RPC_SCOPE_CONFIG.ANY]: [r.RPC_LOCAL_SCOPE] },
          validation: e =>
            (0, i.default)(e).required().keys({ id: e.string().required() }),
          handler(e) {
            let {
              args: { id: t },
            } = e;
            (0, a.disconnect)(t);
          },
        },
        [o.RPCCommands.SEND_TO_LOBBY]: {
          scope: { [r.RPC_SCOPE_CONFIG.ANY]: [r.RPC_LOCAL_SCOPE] },
          validation: e =>
            (0, i.default)(e)
              .required()
              .keys({
                lobby_id: e.string().required(),
                data: e.string().required(),
              }),
          handler(e) {
            let {
              args: { lobby_id: t, data: n },
            } = e;
            return (0, a.send)(t, n).catch(u);
          },
        },
        [o.RPCCommands.SEARCH_LOBBIES]: {
          scope: r.RPC_LOCAL_SCOPE,
          validation: e =>
            (0, i.default)(e)
              .required()
              .keys({
                filter: e
                  .array()
                  .items(
                    (0, i.default)(e).keys({
                      key: e.string().required(),
                      comparison: e.number().required(),
                      cast: e.number().required(),
                      value: e.string().required(),
                    })
                  ),
                sort: e
                  .array()
                  .items(
                    (0, i.default)(e).keys({
                      key: e.string().required(),
                      cast: e.number().required(),
                      near_value: e.string(),
                    })
                  ),
                limit: e.number(),
                distance: e.number(),
              }),
          handler(e) {
            let {
              socket: t,
              args: { filter: n, sort: s, limit: l, distance: i },
            } = e;
            return (0, a.search)({
              application_id: t.application.id,
              filter: n,
              sort: s,
              limit: l,
              distance: i,
            }).catch(u);
          },
        },
        [o.RPCCommands.CONNECT_TO_LOBBY_VOICE]: {
          scope: r.RPC_LOCAL_SCOPE,
          validation: e =>
            (0, i.default)(e).required().keys({ id: e.string().required() }),
          handler(e) {
            let {
              args: { id: t },
            } = e;
            (0, a.voiceConnect)(t);
          },
        },
        [o.RPCCommands.DISCONNECT_FROM_LOBBY_VOICE]: {
          scope: r.RPC_LOCAL_SCOPE,
          validation: e =>
            (0, i.default)(e).required().keys({ id: e.string().required() }),
          handler(e) {
            let {
              args: { id: t },
            } = e;
            (0, a.voiceDisconnect)(t);
          },
        },
      };
    },
    899114: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        }),
        n("222007");
      var a = n("605250"),
        s = n("578287"),
        l = n("716724"),
        i = n("49111");
      let r = new a.default(i.RPC_APPLICATION_LOGGING_CATEGORY);
      var o = {
        [i.RPCCommands.CAPTURE_LOG]: {
          validation: e =>
            (0, l.default)(e)
              .required()
              .keys({
                level: e.string().max(10).required(),
                message: e.string().max(1e3).required(),
              }),
          handler(e) {
            let {
              socket: t,
              args: { level: n, message: a },
            } = e;
            (0, s.validatePostMessageTransport)(t.transport);
            let l = t.application.id,
              i = "".concat(l, " - ").concat(a);
            switch (n) {
              case "log":
                r.log(i);
                break;
              case "warn":
                r.warn(i);
                break;
              case "debug":
                r.verbose(i);
                break;
              case "info":
                r.info(i);
                break;
              case "error":
                r.error(i);
            }
          },
        },
      };
    },
    709963: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        }),
        n("222007");
      var a = n("872717"),
        s = n("599110"),
        l = n("492249"),
        i = n("49111"),
        r = {
          [i.RPCCommands.GET_NETWORKING_CONFIG]: {
            scope: l.RPC_LOCAL_SCOPE,
            handler: () =>
              Promise.all([
                a.default
                  .get({
                    url:
                      location.protocol + window.GLOBAL_ENV.NETWORKING_ENDPOINT,
                    retries: 3,
                  })
                  .then(e => {
                    let {
                      body: { address: t },
                    } = e;
                    return t;
                  }),
                a.default
                  .post({
                    url: i.Endpoints.NETWORKING_TOKEN,
                    retries: 3,
                    oldFormErrors: !0,
                  })
                  .then(e => {
                    let {
                      body: { token: t },
                    } = e;
                    return t;
                  }),
              ]).then(e => {
                let [t, n] = e;
                return { address: t, token: n };
              }),
          },
          [i.RPCCommands.NETWORKING_SYSTEM_METRICS]: {
            scope: l.RPC_LOCAL_SCOPE,
            handler(e) {
              let { socket: t, args: n } = e;
              (n.application_id = t.application.id),
                s.default.track(i.AnalyticEvents.NETWORKING_SYSTEM_METRICS, n);
            },
          },
          [i.RPCCommands.NETWORKING_PEER_METRICS]: {
            scope: l.RPC_LOCAL_SCOPE,
            handler(e) {
              let { socket: t, args: n } = e;
              (n.application_id = t.application.id),
                s.default.track(i.AnalyticEvents.NETWORKING_PEER_METRICS, n);
            },
          },
          [i.RPCCommands.NETWORKING_CREATE_TOKEN]: {
            scope: l.RPC_LOCAL_SCOPE,
            handler: () =>
              a.default
                .post({
                  url: i.Endpoints.NETWORKING_TOKEN,
                  retries: 1,
                  oldFormErrors: !0,
                })
                .then(e => e.body),
          },
        };
    },
    258316: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
      var a = {
        [n("843455").RPCCommands.GET_PLATFORM_BEHAVIORS]: {
          handler: () => ({ iosKeyboardResizesView: !0 }),
        },
      };
    },
    881963: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var a = n("917351"),
        s = n.n(a),
        l = n("27618"),
        i = n("843823"),
        r = n("697218"),
        o = n("578287"),
        u = n("49111"),
        d = {
          [u.RPCCommands.GET_RELATIONSHIPS]: {
            scope: u.OAuth2Scopes.RELATIONSHIPS_READ,
            handler() {
              let e = { ...l.default.getRelationships() };
              return (
                i.default.getUserAffinitiesUserIds().forEach(t => {
                  null == e[t] &&
                    null != r.default.getUser(t) &&
                    (e[t] = u.RelationshipTypes.IMPLICIT);
                }),
                {
                  relationships: s.map(e, (e, t) =>
                    (0, o.transformRelationship)(e, t)
                  ),
                }
              );
            },
          },
        };
    },
    88321: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        }),
        n("222007"),
        n("702976"),
        n("70102");
      var a = n("917351"),
        s = n.n(a),
        l = n("913144"),
        i = n("599110"),
        r = n("550368"),
        o = n("718517"),
        u = n("861309"),
        d = n("578287"),
        c = n("716724"),
        f = n("492249"),
        E = n("49111");
      let h = ["349134787773988865"];
      var _ = {
        [E.RPCCommands.SET_ACTIVITY]: {
          scope: {
            [f.RPC_SCOPE_CONFIG.ANY]: [
              E.OAuth2Scopes.RPC,
              E.OAuth2Scopes.RPC_ACTIVITIES_WRITE,
              f.RPC_LOCAL_SCOPE,
            ],
          },
          validation: e =>
            (0, c.default)(e)
              .required()
              .keys({
                pid: e.number().min(0),
                activity: e
                  .object()
                  .keys({
                    state: e.string().min(2).max(128),
                    details: e.string().min(2).max(128),
                    timestamps: (0, c.default)(e).keys({
                      start: e.number().min(1),
                      end: e.number().min(1),
                    }),
                    assets: (0, c.default)(e).keys({
                      large_image: e.string().min(1).max(256),
                      large_text: e.string().min(2).max(128),
                      small_image: e.string().min(1).max(256),
                      small_text: e.string().min(2).max(128),
                    }),
                    party: (0, c.default)(e).keys({
                      id: e.string().min(2).max(128),
                      size: e.array().items(e.number().min(1)).length(2),
                      privacy: e
                        .number()
                        .default(E.ActivityPartyPrivacy.PRIVATE)
                        .valid([
                          E.ActivityPartyPrivacy.PRIVATE,
                          E.ActivityPartyPrivacy.PUBLIC,
                        ]),
                    }),
                    secrets: (0, c.default)(e).keys({
                      match: e.string().min(2).max(128),
                      join: e.string().min(2).max(128),
                      spectate: e.string().min(2).max(128),
                    }),
                    buttons: e
                      .array()
                      .items(
                        (0, c.default)(e).keys({
                          label: e.string().min(1).max(32).required(),
                          url: e.string().uri().min(1).max(512).required(),
                        })
                      )
                      .min(1)
                      .max(2),
                    instance: e.boolean(),
                    supported_platforms: e
                      .array()
                      .items(e.string().min(1).max(32))
                      .min(1)
                      .max(3),
                    type: e
                      .number()
                      .default(E.ActivityTypes.PLAYING)
                      .valid(
                        E.ActivityTypes.PLAYING,
                        E.ActivityTypes.LISTENING,
                        E.ActivityTypes.WATCHING
                      ),
                  })
                  .allow(null),
              }),
          handler(e) {
            var t;
            let n,
              {
                socket: a,
                args: { pid: c, activity: _ },
                isSocketConnected: C,
              } = e;
            if (
              ![
                f.TransportTypes.IPC,
                f.TransportTypes.WEBSOCKET,
                f.TransportTypes.POST_MESSAGE,
              ].includes(a.transport)
            )
              throw new u.default(
                { errorCode: E.RPCErrors.INVALID_COMMAND },
                'command not available from "'.concat(
                  a.transport,
                  '" transport'
                )
              );
            if (null == c && f.TransportTypes.IPC === a.transport)
              throw new u.default(
                { errorCode: E.RPCErrors.INVALID_COMMAND },
                "nonzero pid required"
              );
            if (null == _)
              return (
                l.default.dispatch({
                  type: "LOCAL_ACTIVITY_UPDATE",
                  socketId: a.id,
                  pid: c,
                  activity: _,
                }),
                Promise.resolve(_)
              );
            (_.name = a.application.name),
              (_.application_id = a.application.id);
            let I = a.transport === f.TransportTypes.POST_MESSAGE,
              S = (0, d.computeActivityFlags)(_, I);
            S > 0 && (_.flags = S),
              delete _.instance,
              null === (t = _.party) || void 0 === t || delete t.privacy;
            let {
              assets: m,
              party: p,
              secrets: T,
              timestamps: g,
              buttons: A,
              type: N,
            } = _;
            if (
              ((null == N || (N !== E.ActivityTypes.PLAYING && !I)) &&
                (_.type = E.ActivityTypes.PLAYING),
              null != T)
            ) {
              let e = s.values(T).filter(e => !!e);
              if (
                null != p &&
                s.intersection(e, [p.id]).length > 0 &&
                !h.includes(a.application.id)
              )
                throw new u.default(
                  { errorCode: E.RPCErrors.INVALID_ACTIVITY_SECRET },
                  "secrets cannot match the party id"
                );
              if (s.uniq(e).length < e.length)
                throw new u.default(
                  { errorCode: E.RPCErrors.INVALID_ACTIVITY_SECRET },
                  "secrets must be unique"
                );
              if (null != A)
                throw new u.default(
                  { errorCode: E.RPCErrors.INVALID_ACTIVITY_SECRET },
                  "secrets cannot currently be sent with buttons"
                );
            }
            if (
              (null != A &&
                ((_.metadata = { button_urls: A.map(e => e.url) }),
                (_.buttons = A.map(e => e.label))),
              null != g)
            )
              for (let e of Object.keys(g))
                Date.now().toString().length - g[e].toString().length > 2 &&
                  (g[e] = Math.floor(g[e] * o.default.Millis.SECOND));
            if (null == m) n = Promise.resolve([]);
            else {
              if (null == a.application || null == a.application.id)
                throw Error();
              n = (0, r.fetchAssetIds)(a.application.id, [
                m.large_image,
                m.small_image,
              ]);
            }
            return n.then(e => {
              var t, n;
              let [s, r] = e;
              if (
                (null != m &&
                  (null != s ? (m.large_image = s) : delete m.large_image,
                  null != r ? (m.small_image = r) : delete m.small_image),
                !C())
              )
                return;
              l.default.dispatch({
                type: "LOCAL_ACTIVITY_UPDATE",
                socketId: a.id,
                pid: c,
                activity: _,
              });
              let { secrets: o, party: u } = _,
                d = {
                  application_id: a.application.id,
                  type: _.type,
                  name: _.name,
                  details: null !== (t = _.details) && void 0 !== t ? t : "",
                  state: null !== (n = _.state) && void 0 !== n ? n : "",
                };
              return (
                null != o &&
                  ((d.has_match_secret = !!o.match),
                  (d.has_join_secret = !!o.join)),
                null != m &&
                  (d.has_images = !!(m.large_image || m.small_image)),
                null != u &&
                  ((d.party_max = null != u.size ? u.size[1] : void 0),
                  (d.party_id = u.id)),
                i.default.track(E.AnalyticEvents.ACTIVITY_UPDATED, d),
                _
              );
            });
          },
        },
      };
    },
    473902: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        }),
        n("222007");
      var a = n("913144"),
        s = n("861309"),
        l = n("716724"),
        i = n("954016"),
        r = n("843455"),
        o = {
          [r.RPCCommands.SET_ORIENTATION_LOCK_STATE]: {
            validation: e =>
              (0, l.default)(e)
                .required()
                .keys({
                  lock_state: e
                    .number()
                    .valid(
                      i.OrientationLockState.UNLOCKED,
                      i.OrientationLockState.PORTRAIT,
                      i.OrientationLockState.LANDSCAPE
                    )
                    .required(),
                  picture_in_picture_lock_state: e
                    .number()
                    .valid(
                      i.OrientationLockState.UNLOCKED,
                      i.OrientationLockState.PORTRAIT,
                      i.OrientationLockState.LANDSCAPE
                    )
                    .allow(null)
                    .optional(),
                  grid_lock_state: e
                    .number()
                    .valid(
                      i.OrientationLockState.UNLOCKED,
                      i.OrientationLockState.PORTRAIT,
                      i.OrientationLockState.LANDSCAPE
                    )
                    .allow(null)
                    .optional(),
                }),
            handler(e) {
              let {
                  socket: t,
                  args: {
                    lock_state: n,
                    picture_in_picture_lock_state: l,
                    grid_lock_state: i,
                  },
                } = e,
                o = t.application.id;
              if (null != o)
                a.default.dispatch({
                  type: "EMBEDDED_ACTIVITY_SET_ORIENTATION_LOCK_STATE",
                  applicationId: o,
                  lockState: n,
                  pictureInPictureLockState: l,
                  gridLockState: i,
                });
              else
                throw new s.default(
                  { errorCode: r.RPCErrors.INVALID_COMMAND },
                  "No application."
                );
            },
          },
        };
    },
    673090: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        }),
        n("424973"),
        n("222007");
      var a = n("812204"),
        s = n("305122"),
        l = n("235004"),
        i = n("389480"),
        r = n("78581"),
        o = n("245463"),
        u = n("697218"),
        d = n("861309"),
        c = n("716724"),
        f = n("880553"),
        E = n("492249"),
        h = n("843455"),
        _ = {
          [h.RPCCommands.GET_SOUNDBOARD_SOUNDS]: {
            scope: {
              [E.RPC_SCOPE_CONFIG.ANY]: [h.OAuth2Scopes.RPC, E.RPC_LOCAL_SCOPE],
            },
            async handler() {
              await (0, s.maybeFetchSoundboardSounds)();
              let e = l.default.getSounds(),
                t = [];
              return (
                e.forEach(e =>
                  e.forEach(e => t.push((0, i.soundboardSoundToAPI)(e)))
                ),
                t
              );
            },
          },
          [h.RPCCommands.PLAY_SOUNDBOARD_SOUND]: {
            scope: {
              [E.RPC_SCOPE_CONFIG.ALL]: [
                h.OAuth2Scopes.RPC,
                h.OAuth2Scopes.RPC_VOICE_WRITE,
              ],
            },
            validation: e =>
              (0, c.default)(e)
                .required()
                .keys({ guild_id: e.string(), sound_id: e.string() }),
            async handler(e) {
              let {
                args: { guild_id: t, sound_id: n },
              } = e;
              await (0, s.maybeFetchSoundboardSounds)();
              let i = u.default.getCurrentUser(),
                c = l.default.getSound(t, n),
                E = (0, f.default)(),
                _ =
                  null != c &&
                  null != i &&
                  (0, r.canUseSoundboardSound)(i, c, E);
              if (null == E)
                throw new d.default(
                  { errorCode: h.RPCErrors.INVALID_CHANNEL },
                  "Invalid Channel."
                );
              if (_) {
                if ((0, o.default)(E))
                  null != c && (0, r.playSound)(c, E.id, [a.default.RPC]);
                else
                  throw new d.default(
                    { errorCode: h.RPCErrors.INVALID_PERMISSIONS },
                    "Invalid Permissions."
                  );
              } else
                throw new d.default(
                  { errorCode: h.RPCErrors.INVALID_SOUND },
                  "Invalid Sound."
                );
            },
          },
        };
    },
    108087: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return C;
          },
        }),
        n("222007"),
        n("424973");
      var a = n("316718"),
        s = n("465527"),
        l = n("55620"),
        i = n("84460"),
        r = n("927078"),
        o = n("167726"),
        u = n("861309"),
        d = n("383928"),
        c = n("492249"),
        f = n("49111");
      async function E(e, t) {
        let n = t.filter(e => e.type === f.SKUTypes.SUBSCRIPTION_GROUP),
          a = await Promise.all(
            n.map(
              async t =>
                await (0, r.fetchAllSubscriptionListingsDataForApplication)(
                  e,
                  t.id
                )
            )
          ),
          s = [];
        return (
          a.forEach(e => {
            if (null == e) return null;
            let n = e.subscription_listings;
            if (null == n) return null;
            let a = [];
            n.forEach(e => {
              e.subscription_plans.forEach(n => {
                var s;
                let l = null == n ? void 0 : n.price,
                  i = t.find(e => e.id === n.sku_id);
                if (null == i) return;
                let r = {
                  id: n.sku_id,
                  name: i.name,
                  type: i.type,
                  price: { amount: l, currency: f.CurrencyCodes.USD },
                  application_id: e.application_id,
                  flags: e.sku_flags,
                  release_date:
                    null !== (s = i.release_date) && void 0 !== s ? s : null,
                };
                a.push(r);
              });
            }),
              a
                .filter(e => (null == e ? void 0 : e.price) != null)
                .forEach(e => s.push(e));
          }),
          s
        );
      }
      async function h(e) {
        let { socket: t } = e;
        (0, d.validateTransportType)(t.transport);
        let n = t.application.id;
        if (null == n)
          throw new u.default(
            { errorCode: f.RPCErrors.INVALID_COMMAND },
            "No application."
          );
        if (
          o.default.inTestModeForApplication(n) ||
          i.default.inDevModeForApplication(n)
        ) {
          let e = await s.fetchTestSKUsForApplication(n, !1),
            t = await E(n, e);
          return [...e.filter(e => null != e.price), ...t];
        }
        let a = await l.fetchAllStoreListingsForApplication(n),
          r = a
            .filter(e => e.sku.type !== f.SKUTypes.SUBSCRIPTION_GROUP)
            .map(e => e.sku)
            .filter(e => null != e.price),
          c = await E(
            n,
            a.map(e => e.sku)
          );
        return [...r, ...c];
      }
      function _(e) {
        let { socket: t } = e;
        (0, d.validateTransportType)(t.transport);
        let n = t.application.id;
        if (null == n)
          throw new u.default(
            { errorCode: f.RPCErrors.INVALID_COMMAND },
            "No application."
          );
        return a.fetchUserEntitlementsForApplication(n);
      }
      var C = {
        [f.RPCCommands.GET_SKUS]: {
          [c.RPC_SCOPE_CONFIG.ANY]: [
            c.RPC_AUTHENTICATED_SCOPE,
            c.RPC_LOCAL_SCOPE,
          ],
          handler: h,
        },
        [f.RPCCommands.GET_ENTITLEMENTS]: {
          [c.RPC_SCOPE_CONFIG.ANY]: [
            c.RPC_AUTHENTICATED_SCOPE,
            c.RPC_LOCAL_SCOPE,
          ],
          handler: _,
        },
        [f.RPCCommands.GET_SKUS_EMBEDDED]: {
          [c.RPC_SCOPE_CONFIG.ANY]: [
            c.RPC_AUTHENTICATED_SCOPE,
            c.RPC_LOCAL_SCOPE,
          ],
          handler: async e => ({ skus: await h(e) }),
        },
        [f.RPCCommands.GET_ENTITLEMENTS_EMBEDDED]: {
          [c.RPC_SCOPE_CONFIG.ANY]: [
            c.RPC_AUTHENTICATED_SCOPE,
            c.RPC_LOCAL_SCOPE,
          ],
          handler: async e => ({ entitlements: await _(e) }),
        },
      };
    },
    657322: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        }),
        n("860677");
      var a = n("599110"),
        s = n("843158"),
        l = n("861309"),
        i = n("846678"),
        r = n("842897"),
        o = n("49111"),
        u = {
          [o.RPCCommands.SUBSCRIBE]: {
            async handler(e) {
              let { server: t, socket: n, evt: u, args: d } = e,
                c = t.events[u];
              if (null == c)
                throw new l.default(
                  { errorCode: o.RPCErrors.INVALID_EVENT },
                  "Invalid event: ".concat(u)
                );
              if (!(0, i.default)(n.authorization.scopes, c.scope))
                throw new l.default(
                  { errorCode: o.RPCErrors.INVALID_PERMISSIONS },
                  "Not authenticated or invalid scope"
                );
              if (
                (s.ExperimentRPCServerAnalyticsKillswitch.getCurrentConfig({
                  location: "RPCServer",
                }).enabled &&
                  a.default.track(o.AnalyticEvents.RPC_SUBSCRIPTION_REQUESTED, {
                    event: u,
                    scope:
                      "object" == typeof c.scope
                        ? JSON.stringify(c.scope)
                        : c.scope,
                    application_id: n.application.id,
                    socket_scope: n.authorization.scopes.toString(),
                  }),
                null != c.validation)
              ) {
                let e = await t.getJoi(),
                  n = e.validate(d, c.validation(e), { convert: !1 });
                if (null != n.error)
                  throw new l.default(
                    { errorCode: o.RPCErrors.INVALID_PAYLOAD },
                    "Invalid subscription parameters provided"
                  );
              }
              let f = c.handler({ args: d, socket: n }),
                E = await (0, r.getInitialSubscriptionPayload)(n, u, d);
              return new Promise(e => {
                setImmediate(() => {
                  t.addSubscription(n, u, d, f),
                    null != E &&
                      t.dispatchToSubscriptions(
                        u,
                        e => e.socket.id === n.id,
                        E
                      );
                }),
                  e({ evt: u });
              });
            },
          },
          [o.RPCCommands.UNSUBSCRIBE]: {
            handler(e) {
              let { server: t, socket: n, evt: a, args: s } = e;
              if (null == t.events[a])
                throw new l.default(
                  { errorCode: o.RPCErrors.INVALID_EVENT },
                  "Invalid event: ".concat(a)
                );
              return t.removeSubscription(n, a, s), { evt: a };
            },
          },
        };
    },
    220795: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var a = n("915639"),
        s = n("49111"),
        l = {
          [s.RPCCommands.USER_SETTINGS_GET_LOCALE]: {
            scope: s.OAuth2Scopes.IDENTIFY,
            handler: () => ({ locale: a.default.locale }),
          },
        };
    },
    272279: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        }),
        n("222007");
      var a = n("327037"),
        s = n("861309"),
        l = n("716724"),
        i = n("694352"),
        r = n("492249"),
        o = n("49111"),
        u = {
          [o.RPCCommands.GET_USER]: {
            scope: r.RPC_LOCAL_SCOPE,
            validation: e =>
              (0, l.default)(e).required().keys({ id: e.string().required() }),
            handler(e) {
              let {
                args: { id: t },
              } = e;
              return (0, a.getUser)(t)
                .then(i.default)
                .catch(() => {
                  throw new s.default(
                    { errorCode: o.RPCErrors.INVALID_USER },
                    "Invalid user id: ".concat(t)
                  );
                });
            },
          },
        };
    },
    730112: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("917351"),
        s = n.n(a),
        l = n("492249"),
        i = n("49111");
      function r(e, t) {
        return {
          [i.RPCEvents.VOICE_SETTINGS_UPDATE]: {
            scope: {
              [l.RPC_SCOPE_CONFIG.ANY]: [
                i.OAuth2Scopes.RPC,
                i.OAuth2Scopes.RPC_VOICE_READ,
              ],
            },
            handler: () => t => {
              let { prevState: n, dispatch: a } = t,
                l = e();
              return !s.isEqual(l, n) && a(l), l;
            },
          },
          [i.RPCEvents.VOICE_SETTINGS_UPDATE_2]: {
            scope: l.RPC_LOCAL_SCOPE,
            handler(e) {
              let { socket: n } = e;
              return e => {
                let { prevState: a, dispatch: l } = e;
                if (null == n.application.id) return a;
                let i = t(n.application.id);
                return !s.isEqual(i, a) && l(i), i;
              };
            },
          },
        };
      }
    },
    251744: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return M;
          },
        }),
        n("222007");
      var a = n("917351"),
        s = n.n(a),
        l = n("233736"),
        i = n("299285"),
        r = n("161454"),
        o = n("373469"),
        u = n("42203"),
        d = n("305961"),
        c = n("260320"),
        f = n("42887"),
        E = n("945956"),
        h = n("697218"),
        _ = n("800762"),
        C = n("861309"),
        I = n("578287"),
        S = n("65810"),
        m = n("716724"),
        p = n("961400"),
        T = n("694352"),
        g = n("492249"),
        A = n("49111");
      let N = e =>
        (0, m.default)(e)
          .required()
          .keys({ channel_id: e.string().required() });
      function R(e) {
        var t;
        let {
            args: { channel_id: n },
            socket: a,
          } = e,
          s = u.default.getChannel(n);
        if (
          null == s ||
          !(0, I.hasMessageReadPermission)(
            s,
            a.application.id,
            a.authorization.scopes
          )
        )
          throw new C.default(
            { errorCode: A.RPCErrors.INVALID_CHANNEL },
            "Invalid channel id: ".concat(n)
          );
        if (
          s.isNSFW() &&
          (null === (t = h.default.getCurrentUser()) || void 0 === t
            ? void 0
            : t.nsfwAllowed) !== !0
        )
          throw new C.default(
            { errorCode: A.RPCErrors.INVALID_CHANNEL },
            "Invalid nsfw channel id: ".concat(s.id)
          );
      }
      let O = e =>
        (0, m.default)(e).keys({
          lobby_id: e.string().allow(null),
          channel_id: e.string().allow(null),
        });
      function v(e) {
        let {
          args: { lobby_id: t, channel_id: n },
        } = e;
        if (null != n) {
          let e = u.default.getChannel(n);
          if (null == e)
            throw new C.default(
              { errorCode: A.RPCErrors.INVALID_CHANNEL },
              "Invalid channel id: ".concat(n)
            );
        }
        if (null != t) {
          let e = c.default.getLobby(t);
          if (null == e)
            throw new C.default(
              { errorCode: A.RPCErrors.INVALID_LOBBY },
              "Invalid lobby id: ".concat(t)
            );
        }
      }
      let L = {
        [A.RPCEvents.GUILD_STATUS]: {
          scope: A.OAuth2Scopes.RPC,
          validation: e =>
            (0, m.default)(e)
              .required()
              .keys({ guild_id: e.string().required() }),
          handler(e) {
            let {
              args: { guild_id: t },
            } = e;
            if (null == d.default.getGuild(t))
              throw new C.default(
                { errorCode: A.RPCErrors.INVALID_GUILD },
                "Invalid guild id: ".concat(t)
              );
            return e => {
              var n;
              let { prevState: a, dispatch: l } = e,
                i = d.default.getGuild(t);
              if (null == i) return;
              let r = {
                guild: {
                  id: i.id,
                  name: i.name,
                  icon_url:
                    null !== (n = i.getIconURL(128)) && void 0 !== n ? n : null,
                },
                online: 0,
              };
              return !s.isEqual(a, r) && l(r), r;
            };
          },
        },
        [A.RPCEvents.VOICE_STATE_CREATE]: {
          scope: {
            [g.RPC_SCOPE_CONFIG.ANY]: [
              A.OAuth2Scopes.RPC,
              A.OAuth2Scopes.RPC_VOICE_READ,
            ],
          },
          validation: e =>
            (0, m.default)(e)
              .required()
              .keys({ channel_id: e.string().required() }),
          handler(e) {
            let {
              args: { channel_id: t },
            } = e;
            if (null == u.default.getChannel(t))
              throw new C.default(
                { errorCode: A.RPCErrors.INVALID_CHANNEL },
                "Invalid channel id: ".concat(t)
              );
            return e => {
              let { prevState: n, dispatch: a } = e,
                l = u.default.getChannel(t);
              if (null == l) return;
              let i = l.getGuildId(),
                r = Object.values(_.default.getVoiceStatesForChannel(l.id));
              if (n) {
                let e = s.differenceBy(r, n, e => {
                  let { userId: t } = e;
                  return t;
                });
                e.forEach(e => a((0, I.transformVoiceState)(i, l.id, e)));
              }
              return r;
            };
          },
        },
        [A.RPCEvents.VOICE_STATE_DELETE]: {
          scope: {
            [g.RPC_SCOPE_CONFIG.ANY]: [
              A.OAuth2Scopes.RPC,
              A.OAuth2Scopes.RPC_VOICE_READ,
            ],
          },
          validation: e =>
            (0, m.default)(e)
              .required()
              .keys({ channel_id: e.string().required() }),
          handler(e) {
            let {
              args: { channel_id: t },
            } = e;
            if (null == u.default.getChannel(t))
              throw new C.default(
                { errorCode: A.RPCErrors.INVALID_CHANNEL },
                "Invalid channel id: ".concat(t)
              );
            return e => {
              let { prevState: n, dispatch: a } = e,
                l = u.default.getChannel(t);
              if (null == l) return;
              let i = l.getGuildId(),
                r = Object.values(_.default.getVoiceStatesForChannel(l.id)),
                o = s.differenceBy(n, r, e => {
                  let { userId: t } = e;
                  return t;
                });
              return (
                o.forEach(e => a((0, I.transformVoiceState)(i, l.id, e))), r
              );
            };
          },
        },
        [A.RPCEvents.VOICE_STATE_UPDATE]: {
          scope: {
            [g.RPC_SCOPE_CONFIG.ANY]: [
              A.OAuth2Scopes.RPC,
              A.OAuth2Scopes.RPC_VOICE_READ,
            ],
          },
          validation: e =>
            (0, m.default)(e)
              .required()
              .keys({ channel_id: e.string().required() }),
          handler(e) {
            let {
              args: { channel_id: t },
            } = e;
            if (null == u.default.getChannel(t))
              throw new C.default(
                { errorCode: A.RPCErrors.INVALID_CHANNEL },
                "Invalid channel id: ".concat(t)
              );
            return e => {
              let { prevState: n, dispatch: a } = e,
                l = u.default.getChannel(t);
              if (null == l) return;
              let i = l.getGuildId(),
                r = Object.values(_.default.getVoiceStatesForChannel(l.id)).map(
                  e => (0, I.transformVoiceState)(i, l.id, e)
                ),
                o = s.differenceWith(r, n, s.isEqual);
              return o.forEach(e => a(e)), r;
            };
          },
        },
        [A.RPCEvents.VOICE_CONNECTION_STATUS]: {
          scope: {
            [g.RPC_SCOPE_CONFIG.ANY]: [
              A.OAuth2Scopes.RPC,
              A.OAuth2Scopes.RPC_VOICE_READ,
            ],
          },
          handler: () => e => {
            let { prevState: t, dispatch: n } = e,
              a = {
                state: (0, I.getVoiceConnectionState)(E.default.getState()),
                hostname: E.default.getHostname(),
                pings: E.default.getPings(),
                average_ping: E.default.getAveragePing(),
                last_ping: E.default.getLastPing(),
              };
            return !s.isEqual(a, t) && n(a), a;
          },
        },
        [A.RPCEvents.MESSAGE_CREATE]: {
          scope: A.OAuth2Scopes.RPC,
          validation: N,
          handler: R,
        },
        [A.RPCEvents.MESSAGE_UPDATE]: {
          scope: A.OAuth2Scopes.RPC,
          validation: N,
          handler: R,
        },
        [A.RPCEvents.MESSAGE_DELETE]: {
          scope: A.OAuth2Scopes.RPC,
          validation: N,
          handler: R,
        },
        [A.RPCEvents.SPEAKING_START]: {
          scope: {
            [g.RPC_SCOPE_CONFIG.ANY]: [
              A.OAuth2Scopes.RPC,
              A.OAuth2Scopes.RPC_VOICE_READ,
              g.RPC_LOCAL_SCOPE,
            ],
          },
          validation: O,
          handler: v,
        },
        [A.RPCEvents.SPEAKING_STOP]: {
          scope: {
            [g.RPC_SCOPE_CONFIG.ANY]: [
              A.OAuth2Scopes.RPC,
              A.OAuth2Scopes.RPC_VOICE_READ,
              g.RPC_LOCAL_SCOPE,
            ],
          },
          validation: O,
          handler: v,
        },
        [A.RPCEvents.GUILD_CREATE]: { scope: A.OAuth2Scopes.RPC, handler() {} },
        [A.RPCEvents.CHANNEL_CREATE]: {
          scope: A.OAuth2Scopes.RPC,
          handler() {},
        },
        [A.RPCEvents.GAME_JOIN]: {
          scope: {
            [g.RPC_SCOPE_CONFIG.ANY]: [A.OAuth2Scopes.RPC, g.RPC_LOCAL_SCOPE],
          },
          handler() {},
        },
        [A.RPCEvents.GAME_SPECTATE]: {
          scope: {
            [g.RPC_SCOPE_CONFIG.ANY]: [A.OAuth2Scopes.RPC, g.RPC_LOCAL_SCOPE],
          },
          handler() {},
        },
        [A.RPCEvents.ACTIVITY_JOIN]: {
          scope: {
            [g.RPC_SCOPE_CONFIG.ANY]: [
              A.OAuth2Scopes.RPC,
              g.RPC_AUTHENTICATED_SCOPE,
              g.RPC_LOCAL_SCOPE,
            ],
          },
          handler() {},
        },
        [A.RPCEvents.ACTIVITY_JOIN_REQUEST]: {
          scope: {
            [g.RPC_SCOPE_CONFIG.ANY]: [A.OAuth2Scopes.RPC, g.RPC_LOCAL_SCOPE],
          },
          handler() {},
        },
        [A.RPCEvents.ACTIVITY_SPECTATE]: {
          scope: {
            [g.RPC_SCOPE_CONFIG.ANY]: [
              A.OAuth2Scopes.RPC,
              g.RPC_AUTHENTICATED_SCOPE,
              g.RPC_LOCAL_SCOPE,
            ],
          },
          handler() {},
        },
        [A.RPCEvents.ACTIVITY_INVITE]: {
          scope: {
            [g.RPC_SCOPE_CONFIG.ANY]: [A.OAuth2Scopes.RPC, g.RPC_LOCAL_SCOPE],
          },
          handler() {},
        },
        [A.RPCEvents.ACTIVITY_PIP_MODE_UPDATE]: {
          scope: {
            [g.RPC_SCOPE_CONFIG.ANY]: [
              A.OAuth2Scopes.RPC,
              g.RPC_AUTHENTICATED_SCOPE,
              g.RPC_LOCAL_SCOPE,
            ],
          },
          handler() {},
        },
        [A.RPCEvents.ACTIVITY_LAYOUT_MODE_UPDATE]: {
          scope: {
            [g.RPC_SCOPE_CONFIG.ANY]: [
              A.OAuth2Scopes.RPC,
              g.RPC_AUTHENTICATED_SCOPE,
              g.RPC_LOCAL_SCOPE,
            ],
          },
          handler() {},
        },
        [A.RPCEvents.ACTIVITY_INSTANCE_PARTICIPANTS_UPDATE]:
          S.activityInstanceConnectedParticipantsUpdateEvent,
        [A.RPCEvents.THERMAL_STATE_UPDATE]: {
          scope: { [g.RPC_SCOPE_CONFIG.ANY]: [g.RPC_AUTHENTICATED_SCOPE] },
          handler() {},
        },
        [A.RPCEvents.ORIENTATION_UPDATE]: {
          scope: { [g.RPC_SCOPE_CONFIG.ANY]: [g.RPC_AUTHENTICATED_SCOPE] },
          handler() {},
        },
        [A.RPCEvents.ACTIVITY_INSTANCE_UPDATE]: { handler() {} },
        [A.RPCEvents.VOICE_CHANNEL_SELECT]: {
          scope: A.OAuth2Scopes.RPC,
          handler() {},
        },
        [A.RPCEvents.NOTIFICATION_CREATE]: {
          scope: {
            [g.RPC_SCOPE_CONFIG.ALL]: [
              A.OAuth2Scopes.RPC,
              A.OAuth2Scopes.RPC_NOTIFICATIONS_READ,
            ],
          },
          handler() {},
        },
        [A.RPCEvents.RELATIONSHIP_UPDATE]: {
          scope: A.OAuth2Scopes.RELATIONSHIPS_READ,
          handler() {},
        },
        [A.RPCEvents.CURRENT_USER_UPDATE]: {
          scope: {
            [g.RPC_SCOPE_CONFIG.ANY]: [
              g.RPC_LOCAL_SCOPE,
              A.OAuth2Scopes.IDENTIFY,
            ],
          },
          handler: () => e => {
            let { prevState: t, dispatch: n } = e,
              a = { currentUser: h.default.getCurrentUser() };
            return (
              null != a.currentUser &&
                (null == t || !(0, l.default)(a, t)) &&
                n((0, T.default)(a.currentUser)),
              a
            );
          },
        },
        [A.RPCEvents.LOBBY_UPDATE]: {
          scope: {
            [g.RPC_SCOPE_CONFIG.ANY]: [
              g.RPC_AUTHENTICATED_SCOPE,
              g.RPC_LOCAL_SCOPE,
            ],
          },
          handler() {},
        },
        [A.RPCEvents.LOBBY_DELETE]: {
          scope: {
            [g.RPC_SCOPE_CONFIG.ANY]: [
              g.RPC_AUTHENTICATED_SCOPE,
              g.RPC_LOCAL_SCOPE,
            ],
          },
          handler() {},
        },
        [A.RPCEvents.LOBBY_MEMBER_CONNECT]: {
          scope: {
            [g.RPC_SCOPE_CONFIG.ANY]: [
              g.RPC_AUTHENTICATED_SCOPE,
              g.RPC_LOCAL_SCOPE,
            ],
          },
          handler() {},
        },
        [A.RPCEvents.LOBBY_MEMBER_UPDATE]: {
          scope: {
            [g.RPC_SCOPE_CONFIG.ANY]: [
              g.RPC_AUTHENTICATED_SCOPE,
              g.RPC_LOCAL_SCOPE,
            ],
          },
          handler() {},
        },
        [A.RPCEvents.LOBBY_MEMBER_DISCONNECT]: {
          scope: {
            [g.RPC_SCOPE_CONFIG.ANY]: [
              g.RPC_AUTHENTICATED_SCOPE,
              g.RPC_LOCAL_SCOPE,
            ],
          },
          handler() {},
        },
        [A.RPCEvents.LOBBY_MESSAGE]: {
          scope: {
            [g.RPC_SCOPE_CONFIG.ANY]: [
              g.RPC_AUTHENTICATED_SCOPE,
              g.RPC_LOCAL_SCOPE,
            ],
          },
          handler() {},
        },
        [A.RPCEvents.ENTITLEMENT_CREATE]: {
          scope: {
            [g.RPC_SCOPE_CONFIG.ANY]: [
              g.RPC_LOCAL_SCOPE,
              g.RPC_AUTHENTICATED_SCOPE,
            ],
          },
          handler() {},
        },
        [A.RPCEvents.ENTITLEMENT_DELETE]: {
          scope: {
            [g.RPC_SCOPE_CONFIG.ANY]: [
              g.RPC_LOCAL_SCOPE,
              g.RPC_AUTHENTICATED_SCOPE,
            ],
          },
          handler() {},
        },
        [A.RPCEvents.USER_ACHIEVEMENT_UPDATE]: {
          scope: g.RPC_LOCAL_SCOPE,
          handler() {},
        },
        [A.RPCEvents.SCREENSHARE_STATE_UPDATE]: {
          scope: {
            [g.RPC_SCOPE_CONFIG.ALL]: [
              g.RPC_LOCAL_SCOPE,
              A.OAuth2Scopes.RPC_SCREENSHARE_READ,
            ],
          },
          handler: () => e => {
            var t, n;
            let { prevState: a, dispatch: l } = e,
              u = o.default.getStreamerActiveStreamMetadata(),
              d =
                (null == u ? void 0 : u.pid) != null
                  ? r.default.getGameForPID(u.pid)
                  : null,
              c =
                (null == d ? void 0 : d.id) != null
                  ? i.default.getApplication(d.id)
                  : null,
              f = null != c ? (0, p.default)(c) : null,
              E = null == u ? void 0 : u.sourceName,
              h = {
                active: null != u,
                pid:
                  null !== (t = null == u ? void 0 : u.pid) && void 0 !== t
                    ? t
                    : null,
                application: ((n = null != f), n) ? { name: E } : null,
              };
            return !s.isEqual(h, a) && l(h), h;
          },
        },
        [A.RPCEvents.VIDEO_STATE_UPDATE]: {
          scope: {
            [g.RPC_SCOPE_CONFIG.ALL]: [
              g.RPC_LOCAL_SCOPE,
              A.OAuth2Scopes.RPC_VIDEO_READ,
            ],
          },
          handler: () => e => {
            let { prevState: t, dispatch: n } = e,
              a = { active: f.default.isVideoEnabled() };
            return !s.isEqual(a, t) && n(a), a;
          },
        },
      };
      var M = L;
    },
    842897: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getInitialSubscriptionPayload: function () {
            return d;
          },
        });
      var a = n("191225"),
        s = n("499031"),
        l = n("601222"),
        i = n("710768"),
        r = n("65810"),
        o = n("49111"),
        u = n("954016");
      async function d(e, t, n) {
        var d, c;
        switch (t) {
          case o.RPCEvents.ACTIVITY_PIP_MODE_UPDATE: {
            let t =
                null === (d = e.application) || void 0 === d ? void 0 : d.id,
              n = null != t ? a.default.getLayoutModeForApp(t) : null;
            return null != n
              ? { is_pip_mode: n !== u.ActivityLayoutMode.FOCUSED }
              : null;
          }
          case o.RPCEvents.ACTIVITY_LAYOUT_MODE_UPDATE: {
            let t =
                null === (c = e.application) || void 0 === c ? void 0 : c.id,
              n = null != t ? a.default.getLayoutModeForApp(t) : null;
            return null != n ? { layout_mode: n } : null;
          }
          case o.RPCEvents.THERMAL_STATE_UPDATE: {
            let e = await (0, l.default)();
            if (null == e) return null;
            let t = (0, s.default)(e);
            return { thermal_state: t };
          }
          case o.RPCEvents.ORIENTATION_UPDATE: {
            let e = i.default.isScreenLandscape();
            if (null == e) return null;
            {
              let t = e
                  ? u.ActivityScreenOrientation.LANDSCAPE
                  : u.ActivityScreenOrientation.PORTRAIT,
                n =
                  t === u.ActivityScreenOrientation.PORTRAIT
                    ? "portrait"
                    : "landscape";
              return { screen_orientation: t, orientation: n };
            }
          }
          case o.RPCEvents.ACTIVITY_INSTANCE_UPDATE: {
            let e = a.default.getConnectedActivityChannelId();
            if (null != e) {
              let t = a.default.getSelfEmbeddedActivityForChannel(e);
              if (null != t)
                return Promise.resolve({ instance_id: t.instanceId });
            }
            return Promise.resolve(null);
          }
          case o.RPCEvents.ACTIVITY_INSTANCE_PARTICIPANTS_UPDATE:
            return (0, r.activityInstanceConnectedParticipants)();
          default:
            return null;
        }
      }
    },
    470313: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
      var a,
        s = n("917351"),
        l = n.n(s),
        i = n("861309"),
        r = n("49111");
      a = class {
        constructor(e, t, n) {
          if (
            ((this.transport = e),
            (this.version = t),
            (this.encoding = n),
            (this.id = l.uniqueId()),
            (this.authorization = {
              authing: !1,
              scopes: [],
              accessToken: null,
              expires: new Date(0),
            }),
            (this.application = { id: null, name: null, icon: null }),
            null == t || t > r.RPC_VERSION || t < 1)
          )
            throw new i.default(
              { closeCode: r.RPCCloseCodes.INVALID_VERSION },
              "Invalid Version: ".concat(t)
            );
        }
      };
    },
    132181: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        });
      var a,
        s = n("861309"),
        l = n("614818"),
        i = n("470313"),
        r = n("492249"),
        o = n("49111");
      a = class extends i.default {
        send(e) {
          var t;
          null === (t = this.onSendingToRPCClient) ||
            void 0 === t ||
            t.call(this, e, this.id),
            this.postMessageToRPCClient([l.default.FRAME, e], this.origin);
        }
        close(e, t) {
          !this.closed &&
            this.postClose(
              this.origin,
              { code: e, message: t },
              this.postMessageToRPCClient
            ),
            (this.closed = !0);
        }
        constructor({
          origin: e,
          postMessageToRPCClient: t,
          frameId: n,
          version: a,
          encoding: l,
          logger: i,
          postClose: u,
          onSendingToRPCClient: d,
        }) {
          if (
            (super(r.TransportTypes.POST_MESSAGE, a, l),
            -1 === ["etf", "json"].indexOf(l))
          )
            throw new s.default(
              { closeCode: o.RPCCloseCodes.INVALID_ENCODING },
              "Invalid Encoding: ".concat(l)
            );
          if ("etf" === l)
            throw new s.default(
              { closeCode: o.RPCCloseCodes.INVALID_ENCODING },
              "Erlpack cannot be used on this client"
            );
          (this.origin = e),
            (this.postMessageToRPCClient = t),
            (this.frameId = n),
            (this.logger = i),
            (this.postClose = u),
            (this.onSendingToRPCClient = d),
            (this.closed = !1);
        }
      };
    },
    17891: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        }),
        n("222007");
      var a,
        s = n("44170"),
        l = n("191225"),
        i = n("599110"),
        r = n("659500"),
        o = n("718517"),
        u = n("861309"),
        d = n("614818"),
        c = n("49111");
      let f = 10 * o.default.Millis.SECOND,
        E = new Map(),
        h = new Set(),
        _ = (e, t, n) => {
          n([d.default.CLOSE, t], e);
        };
      a = class extends s.EventEmitter {
        routeEvent(e, t, n, a) {
          if (!Array.isArray(n)) {
            console.warn(
              "[PostMessageTransport] Protocol error: event data should be an Array!"
            );
            return;
          }
          let [s, l] = n;
          switch (s) {
            case d.default.HANDSHAKE:
              if (null != e)
                throw new u.default(
                  { closeCode: c.RPCCloseCodes.CLOSE_UNSUPPORTED },
                  "Already connected"
                );
              return this.handleHandshake(t, l, a);
            case d.default.FRAME:
              if (null == e)
                throw new u.default(
                  { closeCode: c.RPCCloseCodes.CLOSE_UNSUPPORTED },
                  "Not connected"
                );
              return this.handleFrame(t, e, l);
            case d.default.CLOSE:
              if (null == e)
                throw new u.default(
                  { closeCode: c.RPCCloseCodes.CLOSE_UNSUPPORTED },
                  "Not connected"
                );
              return this.handleClose(e, l);
            default:
              throw new u.default(
                { closeCode: c.RPCCloseCodes.CLOSE_UNSUPPORTED },
                "Invalid opcode"
              );
          }
        }
        constructor(e, t, a, s) {
          var o;
          super(),
            (o = this),
            (this.disconnectSocket = function (e, t) {
              var n, a;
              let s =
                arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
              o.emit("disconnect", e, s ? void 0 : t),
                e.close(
                  t.code,
                  null !== (n = t.message) && void 0 !== n ? n : "Unknown"
                );
              let [l] =
                null !==
                  (a = Array.from(E.entries()).find(t => {
                    let [n, a] = t;
                    return a === e;
                  })) && void 0 !== a
                  ? a
                  : [null, null];
              null != l && E.delete(l);
            }),
            (this.handleIFrameMount = e => {
              let { id: t } = e;
              h.add(t),
                (this.handshakeFailureTimeoutId = setTimeout(() => {
                  Array.from(
                    l.default.getSelfEmbeddedActivities().entries()
                  ).forEach(e => {
                    let [t, n] = e;
                    i.default.track(
                      c.AnalyticEvents.ACTIVITY_HANDSHAKE_TIMED_OUT,
                      {
                        application_id: t,
                        channel_id: n.channelId,
                        guild_id: n.guildId,
                        timeout_ms: f,
                      }
                    );
                  });
                }, f));
            }),
            (this.handleIFrameUnmount = e => {
              var t;
              let { id: n } = e;
              h.delete(n);
              let [a, s] =
                null !==
                  (t = Array.from(E.entries()).find(e => {
                    let [t, a] = e;
                    return a.frameId === n;
                  })) && void 0 !== t
                  ? t
                  : [null, null];
              null != s &&
                null != a &&
                (this.disconnectSocket(
                  s,
                  {
                    code: c.RPCCloseCodes.CLOSE_NORMAL,
                    message: "iFrame gone",
                  },
                  !0
                ),
                E.delete(a));
            }),
            (this.handleMessage = (e, t, n) => {
              let a = E.get(t);
              try {
                this.routeEvent(a, t, e, n);
              } catch (e) {
                if (
                  e instanceof u.default &&
                  e.errorCode === c.RPCErrors.INVALID_PAYLOAD
                )
                  throw e;
                null != a
                  ? this.disconnectSocket(
                      a,
                      { code: e.code, message: e.message },
                      !0
                    )
                  : _(t, { code: e.code, message: e.message }, n);
              }
            }),
            (this.handleFrame = (e, t, n) => {
              var a;
              let s;
              if (e !== t.origin)
                throw new u.default(
                  { closeCode: c.RPCCloseCodes.INVALID_ORIGIN },
                  "Origin has changed"
                );
              try {
                s = "string" == typeof n ? JSON.parse(n) : n;
              } catch (e) {
                throw new u.default(
                  { closeCode: c.RPCCloseCodes.CLOSE_UNSUPPORTED },
                  "Payload not recognized encoding"
                );
              }
              null === (a = this.onFrameHandled) ||
                void 0 === a ||
                a.call(this, s, this.logger, t),
                this.emit("request", t, s);
            }),
            (this.handleHandshake = async (e, t, a) => {
              let s;
              null != this.handshakeFailureTimeoutId &&
                clearTimeout(this.handshakeFailureTimeoutId);
              let l = (await n.el("990599").then(n.t.bind(n, "990599", 23)))
                .default;
              try {
                l.assert(
                  t,
                  l
                    .object()
                    .required()
                    .keys({
                      v: l.number().min(1).max(1).required(),
                      encoding: l.string().equal("json").optional(),
                      client_id: l.string().required(),
                      frame_id: l.string().required(),
                    })
                );
              } catch (e) {
                throw new u.default(
                  { closeCode: c.RPCCloseCodes.CLOSE_UNSUPPORTED },
                  e.message
                );
              }
              let i = t.frame_id,
                r = !h.has(i);
              if (r)
                throw (
                  (this.logger.error("Unrecognized frame ID ".concat(i)),
                  new u.default(
                    { closeCode: c.RPCCloseCodes.CLOSE_UNSUPPORTED },
                    "Unrecognized frame ID ".concat(i)
                  ))
                );
              try {
                var o;
                s = this.createPostMessageProxySocket({
                  origin: e,
                  postMessageToRPCClient: a,
                  frameId: i,
                  version: Number(t.v),
                  logger: this.logger,
                  postClose: _,
                  encoding:
                    null !== (o = t.encoding) && void 0 !== o ? o : "json",
                });
              } catch (e) {
                throw (
                  (this.logger.error("Error opening window socket ".concat(e)),
                  e)
                );
              }
              this.logger.info("Socket Opened: ".concat(s.id));
              try {
                if (
                  (await this.validateSocketClient(s, e, t.client_id),
                  !h.has(i))
                )
                  throw (
                    (this.logger.error(
                      "Frame ID ".concat(i, " no longer exists")
                    ),
                    new u.default(
                      { closeCode: c.RPCCloseCodes.CLOSE_UNSUPPORTED },
                      "Unrecognized frame ID ".concat(i)
                    ))
                  );
                E.set(e, s),
                  h.delete(i),
                  this.emit("connect", s),
                  this.logger.info("Socket Validated: ".concat(s.id));
              } catch (e) {
                throw (
                  (this.logger.info(
                    "Socket Closed: ".concat(s.id, ", ").concat(e.message)
                  ),
                  e)
                );
              }
            }),
            (this.handleClose = async (e, t) => {
              let a = (await n.el("990599").then(n.t.bind(n, "990599", 23)))
                .default;
              try {
                a.assert(
                  t,
                  a
                    .object()
                    .required()
                    .unknown(!0)
                    .keys({
                      code: a
                        .number()
                        .valid(Object.values(c.RPCCloseCodes))
                        .required(),
                      message: a.string().optional(),
                    })
                );
              } catch (e) {
                throw new u.default(
                  { closeCode: c.RPCCloseCodes.CLOSE_UNSUPPORTED },
                  e.message
                );
              }
              this.disconnectSocket(e, t);
            }),
            r.ComponentDispatch.subscribe(
              c.ComponentActions.IFRAME_MOUNT,
              this.handleIFrameMount
            ),
            r.ComponentDispatch.subscribe(
              c.ComponentActions.IFRAME_UNMOUNT,
              this.handleIFrameUnmount
            ),
            (this.validateSocketClient = e),
            (this.logger = t),
            (this.createPostMessageProxySocket = a),
            (this.onFrameHandled = s);
        }
      };
    },
    219380: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return N;
          },
        }),
        n("222007");
      var a = n("901165"),
        s = n("50885"),
        l = n("84090"),
        i = n("251744"),
        r = n("261131"),
        o = n("370453"),
        u = n("878099"),
        d = n("221850"),
        c = n("700721"),
        f = n("871832"),
        E = n("805875"),
        h = n("376897"),
        _ = n("683805"),
        C = n("825734"),
        I = n("766383"),
        S = n("696287"),
        m = n("778117"),
        p = n("195180"),
        T = n("357147");
      let g = {
          ...l.crossPlatformCommands,
          ...d.default,
          ...c.default,
          ...E.default,
          ...h.default,
          ..._.default,
          ...C.default,
          ...S.default,
          ...p.default,
          ...m.default,
          ...f.default,
          ...I.default,
        },
        A = {
          ...i.default,
          ...o.overlayEventHandlers,
          ...u.voiceSettingsEventHandlers,
        };
      var N = {
        server: r.default,
        commands: g,
        events: A,
        stores: [a.default],
        transports: [T.default],
        registerTransportsForEmbeddedPlatform: function () {
          s.default.ensureModule("discord_rpc").then(() => {
            let e = [n("255516").default, n("90906").default];
            for (let t of e) r.default.registerTransport(t);
          });
        },
      };
    },
    370453: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          overlayEventHandlers: function () {
            return d;
          },
        });
      var a = n("917351"),
        s = n.n(a),
        l = n("686470"),
        i = n("860957"),
        r = n("861309"),
        o = n("492249"),
        u = n("49111");
      let d = {
        [u.RPCEvents.OVERLAY_UPDATE]: {
          scope: o.RPC_LOCAL_SCOPE,
          handler(e) {
            let {
              args: { pid: t },
              socket: n,
            } = e;
            if ("number" != typeof t || t < 10)
              throw new r.default(
                { errorCode: u.RPCErrors.INVALID_EVENT },
                "Invalid pid"
              );
            return e => {
              let { prevState: a, dispatch: r } = e,
                o = i.default.enabled,
                u = !0,
                d = n.application.id;
              if (null != d) {
                let e = l.default.getActiveLibraryApplication(d);
                null != e && (o = o && e.isOverlayEnabled()),
                  (u = i.default.isInputLocked(t));
              }
              let c = { enabled: o, locked: u };
              return !s.isEqual(c, a) && r(c), c;
            };
          },
        },
      };
    },
    878099: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          voiceSettingsEventHandlers: function () {
            return l;
          },
        });
      var a = n("730112"),
        s = n("56245");
      let l = (0, a.default)(s.getDeprecatedVoiceSettings, s.getVoiceSettings);
    },
    56245: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          unlockOverlay: function () {
            return f;
          },
          validateSocketClient: function () {
            return E;
          },
          getDeprecatedVoiceSettings: function () {
            return h;
          },
          getVoiceSettings: function () {
            return _;
          },
        });
      var a = n("539405"),
        s = n("860957"),
        l = n("50885"),
        i = n("13798"),
        r = n("861309"),
        o = n("578287"),
        u = n("492249"),
        d = n("49111");
      let c = ["207646673902501888"];
      function f(e) {
        let t = s.default.isReady(e);
        return t
          ? (a.default.setLocked(!1, e),
            {
              lock() {
                a.default.setLocked(!0, e);
              },
              context: d.AppContext.OVERLAY,
            })
          : (l.default.focus(null, !0),
            {
              lock() {
                l.default.setForegroundProcess(e);
              },
              context: d.AppContext.APP,
            });
      }
      let E = async (e, t, n) => {
          if (
            ((0, o.validateOriginAndUpdateSocket)(e, t),
            (null == n || "" === n) && (0, o.isMatchingOrigin)(t))
          )
            return (
              (e.authorization.scopes = [
                u.RPC_PRIVATE_SCOPE,
                u.RPC_PRIVATE_LIMITED_SCOPE,
              ]),
              Promise.resolve()
            );
          if (null == n || "" === n)
            return Promise.reject(
              new r.default(
                { closeCode: d.RPCCloseCodes.INVALID_CLIENTID },
                "No Client ID Specified"
              )
            );
          let a =
            l.default.releaseChannel !== d.PublicReleaseChannels.CANARY &&
            !c.includes(n) &&
            e.transport !== u.TransportTypes.POST_MESSAGE;
          return (
            await (0, o.processSocketThrottlers)(n, a),
            (0, o.fetchApplicationsRPC)(e, n, t)
          );
        },
        h = () =>
          (0, o.getDeprecatedVoiceSettingsWithShortcut)(e => {
            let t = [];
            if (
              null != e.modeOptions.shortcut &&
              Array.isArray(e.modeOptions.shortcut)
            )
              t = e.modeOptions.shortcut.map(e => {
                var t;
                return {
                  type: e[0],
                  code: e[1],
                  name:
                    null !== (t = (0, i.codeToKey)(e)) && void 0 !== t
                      ? t
                      : "unknown",
                };
              });
            return t;
          }),
        _ = e =>
          (0, o.getVoiceSettingsWithShortcut)(e, e => {
            let t = "";
            return (
              null != e.modeOptions.shortcut &&
                Array.isArray(e.modeOptions.shortcut) &&
                (t = (0, i.toString)(e.modeOptions.shortcut)),
              t
            );
          });
    },
    828309: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var a = n("748900"),
        s = n("219380"),
        l = new a.default(s.default);
    },
    221850: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return x;
          },
        }),
        n("222007"),
        n("702976");
      var a = n("37983");
      n("884691");
      var s = n("524297"),
        l = n("77078"),
        i = n("260365"),
        r = n("636974"),
        o = n("823411"),
        u = n("267363"),
        d = n("599417"),
        c = n("244201"),
        f = n("550766"),
        E = n("299803"),
        h = n("587984"),
        _ = n("292687"),
        C = n("42203"),
        I = n("52028"),
        S = n("101125"),
        m = n("471671"),
        p = n("568734"),
        T = n("449008"),
        g = n("253981"),
        A = n("563680"),
        N = n("861309"),
        R = n("578287"),
        O = n("716724"),
        v = n("613652"),
        L = n("207873"),
        M = n("56245"),
        P = n("492249"),
        D = n("49111");
      async function y(e, t, n, a) {
        let s =
            arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : "",
          l = I.default.getApplicationActivity(t);
        if (
          null == l ||
          null == l.secrets ||
          !(0, R.validateActivityInvite)(a, l.party, l.secrets)
        )
          throw new N.default(
            { errorCode: D.RPCErrors.NO_ELIGIBLE_ACTIVITY },
            "No eligible activity for application. Ensure an activity includes a party and appropriate secret."
          );
        let o = (0, E.default)(l, S.default);
        if (o) {
          let { lock: t } = (0, M.unlockOverlay)(e);
          return (0, r.openModal)(l, o).then(() => {
            throw (
              (t(),
              new N.default(
                { errorCode: D.RPCErrors.NO_ELIGIBLE_ACTIVITY },
                "No eligible activity for application. Ensure user does have have privacy enabled."
              ))
            );
          });
        }
        await i.default.sendActivityInviteUser({
          userId: n,
          type: a,
          activity: l,
          content: s,
          location: "In-Game Invite",
        });
      }
      var x = {
        [D.RPCCommands.SEND_ACTIVITY_JOIN_INVITE]: {
          scope: {
            [P.RPC_SCOPE_CONFIG.ANY]: [D.OAuth2Scopes.RPC, P.RPC_LOCAL_SCOPE],
          },
          handler(e) {
            let {
                socket: t,
                args: { user_id: n, pid: a },
              } = e,
              s = t.application.id;
            if (null == s)
              throw new N.default(
                { errorCode: D.RPCErrors.INVALID_COMMAND },
                "No application."
              );
            return y(a, s, n, D.ActivityActionTypes.JOIN);
          },
        },
        [D.RPCCommands.CLOSE_ACTIVITY_JOIN_REQUEST]: {
          scope: {
            [P.RPC_SCOPE_CONFIG.ANY]: [D.OAuth2Scopes.RPC, P.RPC_LOCAL_SCOPE],
          },
          handler(e) {
            let {
                args: { user_id: t },
              } = e,
              n = C.default.getDMFromUserId(t);
            null != n && (0, u.ack)(n, !0, !0);
          },
        },
        [D.RPCCommands.ACTIVITY_INVITE_USER]: {
          scope: {
            [P.RPC_SCOPE_CONFIG.ANY]: [D.OAuth2Scopes.RPC, P.RPC_LOCAL_SCOPE],
          },
          validation: e =>
            (0, O.default)(e)
              .required()
              .keys({
                user_id: e.string().required(),
                type: e.number().required().valid([D.ActivityActionTypes.JOIN]),
                content: e.string().min(0).max(1024),
                pid: e.number().min(0).required(),
              }),
          handler(e) {
            let {
                socket: t,
                args: { type: n, user_id: a, content: s, pid: l },
              } = e,
              i = t.application.id;
            if (null == i)
              throw new N.default(
                { errorCode: D.RPCErrors.INVALID_COMMAND },
                "No application."
              );
            return y(l, i, a, n, s);
          },
        },
        [D.RPCCommands.ACCEPT_ACTIVITY_INVITE]: {
          scope: {
            [P.RPC_SCOPE_CONFIG.ANY]: [D.OAuth2Scopes.RPC, P.RPC_LOCAL_SCOPE],
          },
          validation: e =>
            (0, O.default)(e)
              .required()
              .keys({
                type: e.number().required().valid([D.ActivityActionTypes.JOIN]),
                user_id: e.string().required(),
                session_id: e.string().required(),
                channel_id: e.string().required(),
                message_id: e.string().required(),
              }),
          handler(e) {
            let {
                socket: t,
                args: {
                  type: n,
                  user_id: a,
                  session_id: s,
                  channel_id: l,
                  message_id: i,
                },
              } = e,
              r = t.application.id;
            if (null == r)
              throw new N.default(
                { errorCode: D.RPCErrors.INVALID_COMMAND },
                "No application."
              );
            let u = Promise.resolve(!1);
            if (n === D.ActivityActionTypes.JOIN)
              u = o.default.join({
                userId: a,
                sessionId: s,
                applicationId: r,
                channelId: l,
                messageId: i,
              });
            return u.then(e => {
              if (!e)
                throw new N.default(
                  { errorCode: D.RPCErrors.INVALID_INVITE },
                  "Invite is expired or invalid."
                );
            });
          },
        },
        [D.RPCCommands.OPEN_INVITE_DIALOG]: {
          scope: {
            [P.RPC_SCOPE_CONFIG.ANY]: [
              D.OAuth2Scopes.RPC,
              P.RPC_LOCAL_SCOPE,
              P.RPC_AUTHENTICATED_SCOPE,
            ],
          },
          handler(e) {
            let { socket: t } = e,
              { channel: s, guild: i } = (0, L.validateOpenInviteDialog)(),
              r = _.default.getWindow(D.PopoutWindowKeys.CHANNEL_CALL_POPOUT);
            (null == r ? void 0 : r.closed) && (r = null);
            let o = null != r ? D.AppContext.POPOUT : D.AppContext.APP;
            (0, A.exitFullScreen)({}, null == r ? void 0 : r.document),
              (0, l.openModalLazy)(
                async () => {
                  let { default: e } = await n
                    .el("310688")
                    .then(n.bind(n, "310688"));
                  return n =>
                    (0, a.jsx)(e, {
                      ...n,
                      guild: i,
                      channel: s,
                      applicationId: t.application.id,
                      analyticsLocation: D.AnalyticsLocations.ACTIVITY_RPC,
                      source: D.InstantInviteSources.ACTIVITY_INVITE,
                    });
                },
                {
                  contextKey:
                    o === D.AppContext.POPOUT
                      ? l.POPOUT_MODAL_CONTEXT
                      : l.DEFAULT_MODAL_CONTEXT,
                }
              );
          },
        },
        [D.RPCCommands.INITIATE_IMAGE_UPLOAD]: (0, s.createRPCCommand)(
          D.RPCCommands.INITIATE_IMAGE_UPLOAD,
          {
            scope: {
              [P.RPC_SCOPE_CONFIG.ANY]: [
                D.OAuth2Scopes.RPC,
                P.RPC_LOCAL_SCOPE,
                P.RPC_AUTHENTICATED_SCOPE,
              ],
            },
            handler(e) {
              var t;
              let { socket: n } = e,
                a = n.application.id;
              if (null == a)
                throw new N.default(
                  { errorCode: D.RPCErrors.INVALID_COMMAND },
                  "No application."
                );
              let s =
                null === (t = (0, v.default)()) || void 0 === t ? void 0 : t.id;
              if (null == s)
                throw new N.default(
                  { errorCode: D.RPCErrors.UNKNOWN_ERROR },
                  "Unable to find selected channel"
                );
              return new Promise((e, t) => {
                !(function (e, t) {
                  var n;
                  let a = m.default.getFocusedWindowId(),
                    s =
                      null == a
                        ? null
                        : null === (n = (0, c.getAppWindowContextValue)(a)) ||
                            void 0 === n
                          ? void 0
                          : n.renderWindow;
                  if (null == s)
                    throw new N.default(
                      { errorCode: D.RPCErrors.UNKNOWN_ERROR },
                      "No valid window found"
                    );
                  let l = s.document.createElement("input");
                  (l.style.display = "none"),
                    (l.type = "file"),
                    (l.accept = "image/jpeg, image/jpg, image/png, image/gif");
                  let i = () => {
                    (null == l.files || 0 === l.files.length) && t(),
                      s.document.body.removeEventListener("focus", i, !0),
                      setTimeout(() => {
                        s.document.body.removeChild(l);
                      }, 1e3);
                  };
                  l.addEventListener("change", () => {
                    (0, T.isNotNullish)(l.files) && e(l.files[0]), i();
                  }),
                    l.addEventListener("cancel", () => {
                      i();
                    }),
                    s.document.body.addEventListener("focus", i, !0),
                    s.document.body.appendChild(l),
                    l.click();
                })(
                  async n => {
                    let l = await (0, f.uploadImageAttachment)(a, s, n);
                    (0, T.isNotNullish)(l) &&
                    (0, T.isNotNullish)(l.url) &&
                    !(l instanceof d.default)
                      ? e({ image_url: l.url })
                      : t(l);
                  },
                  () => t()
                );
              }).catch(e => {
                throw new N.default(
                  { errorCode: D.RPCErrors.UNKNOWN_ERROR },
                  "Failed to upload image"
                );
              });
            },
          }
        ),
        [D.RPCCommands.OPEN_SHARE_MOMENT_DIALOG]: (0, s.createRPCCommand)(
          D.RPCCommands.OPEN_SHARE_MOMENT_DIALOG,
          {
            scope: { [P.RPC_SCOPE_CONFIG.ANY]: [P.RPC_AUTHENTICATED_SCOPE] },
            handler(e) {
              var t;
              let {
                socket: n,
                args: { mediaUrl: a },
              } = e;
              (0, R.validatePostMessageTransport)(n.transport);
              let s = n.application.id;
              if (null == s)
                throw new N.default(
                  { errorCode: D.RPCErrors.INVALID_COMMAND },
                  "No application."
                );
              let l = (0, p.hasFlag)(
                null !== (t = n.application.flags) && void 0 !== t ? t : 0,
                D.ApplicationFlags.EMBEDDED
              );
              if (!l)
                throw new N.default(
                  { errorCode: D.RPCErrors.INVALID_COMMAND },
                  "This application cannot access this API"
                );
              let i = (0, v.default)();
              if (null == i)
                throw new N.default(
                  { errorCode: D.RPCErrors.INVALID_COMMAND },
                  "No channel found"
                );
              if (!g.default.isDiscordCdnUrl(a))
                throw new N.default(
                  { errorCode: D.RPCErrors.INVALID_PAYLOAD },
                  "mediaUrl must be a Discord CDN url"
                );
              (0, h.openActivityShareMomentModal)({
                applicationId: s,
                channelId: i.id,
                mediaUrl: a,
              });
            },
          }
        ),
      };
    },
    700721: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return m;
          },
        }),
        n("222007");
      var a = n("37983");
      n("884691");
      var s = n("872717"),
        l = n("862337"),
        i = n("77078"),
        r = n("316718"),
        o = n("84460"),
        u = n("299285"),
        d = n("697218"),
        c = n("437712"),
        f = n("167726"),
        E = n("718517"),
        h = n("50885"),
        _ = n("861309"),
        C = n("492249"),
        I = n("49111");
      let S = 10 * E.default.Millis.SECOND;
      var m = {
        [I.RPCCommands.VALIDATE_APPLICATION]: {
          scope: C.RPC_LOCAL_SCOPE,
          handler(e) {
            let { socket: t } = e,
              s = t.application.id;
            try {
              if (null == s)
                throw new _.default(
                  { errorCode: I.RPCErrors.INVALID_COMMAND },
                  "No application."
                );
              let e = u.default.getApplication(s);
              if (null == e)
                throw new _.default(
                  { errorCode: I.RPCErrors.INVALID_ENTITLEMENT },
                  "SKU does not exist."
                );
              let t = e.primarySkuId;
              if (null == t)
                throw new _.default(
                  { errorCode: I.RPCErrors.INVALID_ENTITLEMENT },
                  "SKU does not exist."
                );
              return Promise.race([
                (function (e, t) {
                  let n = c.default.isEntitledToSku(
                    d.default.getCurrentUser(),
                    e,
                    t
                  );
                  return null != n
                    ? Promise.resolve(n)
                    : (0, r.fetchUserEntitlementsForApplication)(t).then(
                        () =>
                          !0 ===
                          c.default.isEntitledToSku(
                            d.default.getCurrentUser(),
                            e,
                            t
                          )
                      );
                })(t, e.id).then(e => {
                  if (!e)
                    throw new _.default(
                      { errorCode: I.RPCErrors.INVALID_ENTITLEMENT },
                      "User does not have entitlement."
                    );
                }),
                (0, l.timeoutPromise)(S).then(() => {
                  throw new _.default(
                    { errorCode: I.RPCErrors.INVALID_ENTITLEMENT },
                    "Timed out fetching entitlement."
                  );
                }),
              ]);
            } catch (e) {
              throw (
                (e.code === I.RPCErrors.INVALID_ENTITLEMENT &&
                  (h.default.focus(null, !0),
                  (0, i.openModalLazy)(async () => {
                    let { default: e } = await n
                      .el("43264")
                      .then(n.bind(n, "43264"));
                    return t => (0, a.jsx)(e, { ...t, applicationId: s });
                  })),
                e)
              );
            }
          },
        },
        [I.RPCCommands.GET_ENTITLEMENT_TICKET]: {
          scope: C.RPC_LOCAL_SCOPE,
          handler(e) {
            let { socket: t } = e,
              l = t.application.id;
            if (null == l)
              throw new _.default(
                { errorCode: I.RPCErrors.INVALID_COMMAND },
                "No application."
              );
            return s.default
              .post({
                url: I.Endpoints.ENTITLEMENT_TICKET(l),
                body: {
                  test_mode:
                    f.default.inTestModeForApplication(l) ||
                    o.default.inDevModeForApplication(l),
                },
                retries: 3,
                oldFormErrors: !0,
              })
              .then(e => {
                let { body: t } = e;
                return t;
              })
              .catch(e => {
                throw (
                  (h.default.focus(null, !0),
                  (0, i.openModalLazy)(async () => {
                    let { default: e } = await n
                      .el("43264")
                      .then(n.bind(n, "43264"));
                    return t => (0, a.jsx)(e, { ...t, applicationId: l });
                  }),
                  e)
                );
              });
          },
        },
      };
    },
    871832: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("77078"),
        l = n("159997"),
        i = n("33942"),
        r = n("773336"),
        o = n("50885"),
        u = n("18520"),
        d = n("49111"),
        c = (0, u.default)(
          (e, t, n, r, o, u, d, c, f, E, h, _, C) => {
            let I = "OAuth2Authorize_".concat(e, "_").concat(E, "_").concat(h);
            return new Promise(S => {
              let m = e => {
                let { location: t } = e;
                S(t);
              };
              (0, s.openModal)(
                s =>
                  (0, a.jsx)(i.OAuth2AuthorizeModal, {
                    ...s,
                    authorization: t,
                    clientId: e,
                    scopes: null != n ? n : [],
                    callback: m,
                    responseType: o,
                    redirectUri: u,
                    codeChallenge: d,
                    codeChallengeMethod: c,
                    state: f,
                    permissions: r,
                    guildId: E,
                    channelId: h,
                    prompt: _,
                    disableGuildSelect:
                      "boolean" == typeof C ? C : "true" === C,
                  }),
                {
                  modalKey: I,
                  onCloseRequest: () => {
                    (0, s.closeModal)(I), S(void 0);
                  },
                },
                (0, l.default)(t.application, h)
                  ? s.POPOUT_MODAL_CONTEXT
                  : s.DEFAULT_MODAL_CONTEXT
              );
            });
          },
          function (e, t) {
            if (r.isPlatformEmbedded) {
              let n = (0, l.default)(e, t)
                ? d.PopoutWindowKeys.CHANNEL_CALL_POPOUT
                : null;
              (0, r.isWindows)() ? o.default.minimize(n) : o.default.restore(n),
                o.default.focus(n);
            }
          }
        );
    },
    805875: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("321836"),
        s = n("50885"),
        l = n("578287"),
        i = n("716724"),
        r = {
          [n("49111").RPCCommands.ENCOURAGE_HW_ACCELERATION]: {
            validation: e => (0, i.default)(e),
            handler(e) {
              let { socket: t } = e;
              (0, l.validatePostMessageTransport)(t.transport);
              let n = t.application.id;
              if (null != n)
                return (
                  (0, a.default)(n),
                  { enabled: s.default.getEnableHardwareAcceleration() }
                );
            },
          },
        };
    },
    376897: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return S;
          },
        }),
        n("222007");
      var a = n("37983");
      n("884691");
      var s = n("77078"),
        l = n("913144"),
        i = n("636974"),
        r = n("970728"),
        o = n("539405"),
        u = n("299803"),
        d = n("52028"),
        c = n("101125"),
        f = n("861309"),
        E = n("578287"),
        h = n("716724"),
        _ = n("56245"),
        C = n("492249"),
        I = n("49111"),
        S = {
          [I.RPCCommands.SET_OVERLAY_LOCKED]: {
            scope: C.RPC_LOCAL_SCOPE,
            validation: e =>
              (0, h.default)(e)
                .required()
                .keys({
                  locked: e.boolean().required(),
                  pid: e.number().min(0).required(),
                }),
            handler(e) {
              let {
                  args: { locked: t, pid: n },
                  socket: { application: a },
                } = e,
                s = a.id;
              if (null == s)
                throw new f.default(
                  { errorCode: I.RPCErrors.INVALID_COMMAND },
                  "No application."
                );
              o.default.setLocked(t, n);
            },
          },
          [I.RPCCommands.OPEN_OVERLAY_ACTIVITY_INVITE]: {
            scope: C.RPC_LOCAL_SCOPE,
            validation: e =>
              (0, h.default)(e)
                .required()
                .keys({
                  type: e
                    .number()
                    .required()
                    .valid([I.ActivityActionTypes.JOIN]),
                  pid: e.number().min(0).required(),
                }),
            handler(e) {
              let {
                  socket: t,
                  args: { type: n, pid: a },
                } = e,
                s = t.application.id;
              if (null == s)
                throw new f.default(
                  { errorCode: I.RPCErrors.INVALID_COMMAND },
                  "No application."
                );
              let l = d.default.getApplicationActivity(s);
              if (
                null == l ||
                null == l.secrets ||
                !(0, E.validateActivityInvite)(n, l.party, l.secrets)
              )
                throw new f.default(
                  { errorCode: I.RPCErrors.NO_ELIGIBLE_ACTIVITY },
                  "No eligible activity for application. Ensure an activity includes a party and appropriate secret."
                );
              let { lock: r } = (0, _.unlockOverlay)(a),
                o = (0, u.default)(l, c.default);
              return (0, i.openModal)(l, o).then(() => {
                if ((r(), o))
                  throw new f.default(
                    { errorCode: I.RPCErrors.NO_ELIGIBLE_ACTIVITY },
                    "No eligible activity for application. Ensure user does have have privacy enabled."
                  );
              });
            },
          },
          [I.RPCCommands.OPEN_OVERLAY_GUILD_INVITE]: {
            scope: C.RPC_LOCAL_SCOPE,
            validation: e =>
              (0, h.default)(e)
                .required()
                .keys({
                  code: e.string().required(),
                  pid: e.number().min(0).required(),
                }),
            handler(e) {
              let {
                  args: { code: t, pid: n },
                  socket: a,
                } = e,
                s = a.application.id;
              if (null == s)
                throw new f.default(
                  { errorCode: I.RPCErrors.INVALID_COMMAND },
                  "No application."
                );
              return r.default.resolveInvite(t, "Game SDK").then(e => {
                let { invite: t, code: a } = e;
                if (null == t)
                  throw new f.default(
                    { errorCode: I.RPCErrors.INVALID_INVITE },
                    "Invalid invite id: ".concat(a)
                  );
                let { context: s, lock: i } = (0, _.unlockOverlay)(n);
                return new Promise(e => {
                  l.default.dispatch({
                    type: "INVITE_MODAL_OPEN",
                    invite: t,
                    code: a,
                    context: s,
                    resolve: e,
                  });
                }).then(i);
              });
            },
          },
          [I.RPCCommands.OPEN_OVERLAY_VOICE_SETTINGS]: {
            scope: C.RPC_LOCAL_SCOPE,
            validation: e =>
              (0, h.default)(e)
                .required()
                .keys({ pid: e.number().min(0).required() }),
            handler(e) {
              let {
                  args: { pid: t },
                  socket: l,
                } = e,
                i = l.application.id;
              if (null == i)
                throw new f.default(
                  { errorCode: I.RPCErrors.INVALID_COMMAND },
                  "No application."
                );
              let { lock: r } = (0, _.unlockOverlay)(t);
              return new Promise(e => {
                (0, s.openModalLazy)(async () => {
                  let { default: t } = await n
                    .el("301450")
                    .then(n.bind(n, "301450"));
                  return n =>
                    (0, a.jsx)(t, {
                      ...n,
                      mediaEngineContext: i,
                      title: l.application.name,
                      onClose: () => {
                        n.onClose(), r(), e();
                      },
                    });
                });
              });
            },
          },
        };
    },
    683805: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return R;
          },
        });
      var a,
        s,
        l = n("37983");
      n("884691");
      var i = n("391679"),
        r = n("77078"),
        o = n("913144"),
        u = n("850068"),
        d = n("697796"),
        c = n("619340"),
        f = n("569272"),
        E = n("970728"),
        h = n("913645"),
        _ = n("393414"),
        C = n("271938"),
        I = n("697218"),
        S = n("599110"),
        m = n("253981"),
        p = n("50885"),
        T = n("861309"),
        g = n("492249"),
        A = n("49111");
      function N(e, t) {
        null != e &&
          S.default.track(A.AnalyticEvents.EXTERNAL_DYNAMIC_LINK_RECEIVED, {
            invite_code: null,
            has_auth_token: null,
            is_backgrounded: null,
            fingerprint: (0, i.extractId)(e),
            link_type: t,
          });
      }
      ((a = s || (s = {})).SETTINGS = "settings"),
        (a.CHANGELOG = "changelog"),
        (a.LIBRARY = "library"),
        (a.STORE = "store"),
        (a.INVITE = "invite"),
        (a.CHANNEL = "channel"),
        (a.GUILD_SETTINGS = "guild_settings");
      var R = {
        [A.RPCCommands.INVITE_BROWSER]: {
          scope: g.RPC_PRIVATE_SCOPE,
          async handler(e) {
            let {
                args: { code: t },
              } = e,
              { invite: n } = await E.default.resolveInvite(t, "Desktop Modal");
            if (null == n)
              throw new T.default(
                { errorCode: A.RPCErrors.INVALID_INVITE },
                "Invalid invite id: ".concat(t)
              );
            return (
              C.default.isAuthenticated()
                ? o.default.dispatch({
                    type: "INVITE_MODAL_OPEN",
                    invite: n,
                    code: t,
                    context: A.AppContext.APP,
                  })
                : (0, _.replaceWith)(A.Routes.INVITE(t)),
              { invite: n, code: t }
            );
          },
        },
        [A.RPCCommands.GUILD_TEMPLATE_BROWSER]: {
          scope: g.RPC_PRIVATE_SCOPE,
          async handler(e) {
            let {
              args: { code: t },
            } = e;
            if (null == I.default.getCurrentUser()) return;
            let { guildTemplate: a } = await h.default.resolveGuildTemplate(t);
            if (null == a)
              throw new T.default(
                { errorCode: A.RPCErrors.INVALID_GUILD_TEMPLATE },
                "Invalid guild template id: ".concat(t)
              );
            return (
              p.default.focus(),
              (0, r.openModalLazy)(async () => {
                let { default: e } = await n
                  .el("843456")
                  .then(n.bind(n, "843456"));
                return t => (0, l.jsx)(e, { ...t, guildTemplate: a });
              }),
              { guildTemplate: a, code: t }
            );
          },
        },
        [A.RPCCommands.GIFT_CODE_BROWSER]: {
          scope: g.RPC_PRIVATE_SCOPE,
          handler(e) {
            let {
              args: { code: t },
            } = e;
            return new Promise((e, a) => {
              o.default.wait(() => {
                f.default
                  .resolveGiftCode(t, !0, !0)
                  .then(a => {
                    let { giftCode: s } = a;
                    p.default.focus(),
                      S.default.track(A.AnalyticEvents.OPEN_MODAL, {
                        type: "gift_accept",
                        location: A.DIRECT_ANALYTICS_LOCATION,
                      }),
                      (0, r.openModalLazy)(async () => {
                        let { default: e } = await n
                          .el("669146")
                          .then(n.bind(n, "669146"));
                        return n => (0, l.jsx)(e, { code: t, ...n });
                      }),
                      e({ giftCode: s });
                  })
                  .catch(() =>
                    a(
                      new T.default(
                        { errorCode: A.RPCErrors.INVALID_GIFT_CODE },
                        "Invalid gift code: ".concat(t)
                      )
                    )
                  );
              });
            });
          },
        },
        [A.RPCCommands.DEEP_LINK]: {
          scope: g.RPC_PRIVATE_SCOPE,
          handler(e) {
            let {
              args: { type: t, params: n },
            } = e;
            switch ((p.default.focus(), t)) {
              case g.RPCDeepLinks.USER_SETTINGS:
                null != n &&
                  ((0, _.replaceWith)(
                    A.Routes.SETTINGS(n.section, n.subsection)
                  ),
                  N(n.fingerprint, "settings"));
                break;
              case g.RPCDeepLinks.CHANGELOG:
                null != n &&
                  ((0, _.replaceWith)(
                    m.default.formatPathWithQuery(
                      A.Routes.CHANGELOGS(n.date),
                      n.query
                    )
                  ),
                  N(n.fingerprint, "changelog"));
                break;
              case g.RPCDeepLinks.LIBRARY:
                (0, _.replaceWith)(A.Routes.APPLICATION_LIBRARY),
                  null != n && N(n.fingerprint, "library");
                break;
              case g.RPCDeepLinks.STORE_HOME:
                (0, _.replaceWith)(A.Routes.APPLICATION_STORE),
                  null != n && N(n.fingerprint, "store");
                break;
              case g.RPCDeepLinks.STORE_LISTING:
                null != n &&
                  ((0, _.replaceWith)(
                    A.Routes.APPLICATION_STORE_LISTING_SKU(n.skuId, n.slug)
                  ),
                  N(n.fingerprint, "store"));
                break;
              case g.RPCDeepLinks.PICK_GUILD_SETTINGS:
                null != n &&
                  ((0, _.replaceWith)({
                    pathname: A.Routes.PICK_GUILD_SETTINGS(
                      n.section,
                      n.subsection
                    ),
                    search: n.search,
                  }),
                  N(n.fingerprint, "guild_settings"));
                break;
              case g.RPCDeepLinks.CHANNEL:
                null != n &&
                  ((0, _.replaceWith)({
                    pathname: A.Routes.CHANNEL(
                      n.guildId,
                      n.channelId,
                      n.messageId
                    ),
                    search: n.search,
                  }),
                  N(n.fingerprint, "channel"));
            }
          },
        },
        [A.RPCCommands.BROWSER_HANDOFF]: {
          scope: g.RPC_PRIVATE_LIMITED_SCOPE,
          handler(e) {
            let {
              args: { handoffToken: t, fingerprint: n },
            } = e;
            p.default.focus(null, !0), (0, d.handoffEnd)(t, n);
          },
        },
        [A.RPCCommands.CONNECTIONS_CALLBACK]: {
          scope: g.RPC_PRIVATE_SCOPE,
          handler(e) {
            let {
              args: { providerType: t, code: n, openid_params: a, state: s },
            } = e;
            return c.default.callback(t, {
              code: n,
              openid_params: a,
              state: s,
            });
          },
        },
        [A.RPCCommands.BRAINTREE_POPUP_BRIDGE_CALLBACK]: {
          scope: g.RPC_PRIVATE_SCOPE,
          handler(e) {
            let {
              args: { state: t, path: n, query: a },
            } = e;
            return (0, u.popupBridgeCallback)({
              paymentSourceType: A.PaymentSourceTypes.PAYPAL,
              state: t,
              path: n,
              query: a,
            });
          },
        },
        [A.RPCCommands.BILLING_POPUP_BRIDGE_CALLBACK]: {
          scope: g.RPC_PRIVATE_SCOPE,
          handler(e) {
            let {
              args: { state: t, path: n, query: a, payment_source_type: s },
            } = e;
            return (0, u.popupBridgeCallback)({
              paymentSourceType: s,
              state: t,
              path: n,
              query: a,
            });
          },
        },
      };
    },
    825734: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return I;
          },
        }),
        n("70102"),
        n("222007");
      var a = n("308757"),
        s = n("812204"),
        l = n("929479"),
        i = n("861309"),
        r = n("716724"),
        o = n("613652"),
        u = n("383928"),
        d = n("56245"),
        c = n("492249"),
        f = n("49111"),
        E = n("646718");
      let h = [s.default.RPC];
      function _(e) {
        if (null == e) return { lock: f.NOOP_NULL, context: f.AppContext.APP };
        let t = (0, d.unlockOverlay)(e);
        return { lock: t.lock, context: t.context };
      }
      function C(e, t) {
        let n = {
          subscriptionTier: E.PremiumSubscriptionSKUs.TIER_2,
          analyticsLocations: h,
          analyticsObject: t,
        };
        switch (e) {
          case f.AppContext.APP:
            return l.default.openPremiumPaymentModalInApp(n);
          case f.AppContext.OVERLAY:
            return l.default.openPremiumPaymentModalInOverlay(n);
          default:
            throw Error("Unexpected app context: ".concat(e));
        }
      }
      var I = {
        [f.RPCCommands.START_PURCHASE]: {
          [c.RPC_SCOPE_CONFIG.ANY]: [
            c.RPC_AUTHENTICATED_SCOPE,
            c.RPC_LOCAL_SCOPE,
          ],
          validation: e =>
            (0, r.default)(e)
              .required()
              .keys({ sku_id: e.string().required(), pid: e.number().min(0) }),
          handler(e) {
            let {
              socket: t,
              args: { sku_id: n, pid: s },
            } = e;
            (0, u.validateTransportType)(t.transport);
            let l = t.application.id;
            if (null == l)
              throw new i.default(
                { errorCode: f.RPCErrors.INVALID_COMMAND },
                "No application."
              );
            let { lock: r, context: d } = _(
                t.transport !== c.TransportTypes.POST_MESSAGE ? s : null
              ),
              E = (0, o.default)();
            if (null == E)
              throw new i.default(
                { errorCode: f.RPCErrors.INVALID_CHANNEL },
                "Invalid channel"
              );
            let I = { page: f.AnalyticsPages.IN_APP },
              S = async () => {
                try {
                  let e = await (0, a.openIAPPurchaseModal)({
                    applicationId: l,
                    skuId: n,
                    openPremiumPaymentModal: () => C(d, I),
                    analyticsLocations: h,
                    analyticsLocationObject: I,
                    context: d,
                  });
                  return r(), e;
                } catch (e) {
                  if ((r(), null != e)) {
                    let t = "";
                    throw (
                      ((t =
                        "object" == typeof e &&
                        "message" in e &&
                        "string" == typeof e.message
                          ? e.message
                          : "string" == typeof e
                            ? e
                            : JSON.stringify(e)),
                      new i.default(
                        { errorCode: f.RPCErrors.PURCHASE_ERROR },
                        t
                      ))
                    );
                  }
                  throw new i.default(
                    { errorCode: f.RPCErrors.PURCHASE_CANCELED },
                    "Purchase was canceled by the user."
                  );
                }
              };
            return S();
          },
        },
        [f.RPCCommands.START_PREMIUM_PURCHASE]: {
          [c.RPC_SCOPE_CONFIG.ANY]: [
            c.RPC_AUTHENTICATED_SCOPE,
            c.RPC_LOCAL_SCOPE,
          ],
          validation: e => (0, r.default)(e).keys({ pid: e.number().min(0) }),
          handler(e) {
            let {
              socket: t,
              args: { pid: n },
            } = e;
            (0, u.validateTransportType)(t.transport);
            let a = t.application.id;
            if (null == a)
              throw new i.default(
                { errorCode: f.RPCErrors.INVALID_COMMAND },
                "No application."
              );
            let { lock: s, context: l } = _(
                t.transport !== c.TransportTypes.POST_MESSAGE ? n : null
              ),
              r = { page: f.AnalyticsPages.IN_APP };
            return C(l, r).then(
              () => {
                s();
              },
              e => {
                if ((s(), null != e))
                  throw new i.default(
                    { errorCode: f.RPCErrors.PURCHASE_ERROR },
                    e
                  );
                throw new i.default(
                  { errorCode: f.RPCErrors.PURCHASE_CANCELED },
                  "Purchase was canceled by the user."
                );
              }
            );
          },
        },
      };
    },
    766383: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
      var a = n("403275"),
        s = {
          [n("49111").RPCCommands.SEND_GENERIC_EVENT]: a.deprecatedCommand,
        };
    },
    696287: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return S;
          },
        }),
        n("222007");
      var a = n("37983");
      n("884691");
      var s = n("77078"),
        l = n("629109"),
        i = n("990766"),
        r = n("161454"),
        o = n("375202"),
        u = n("727284"),
        d = n("373469"),
        c = n("42887"),
        f = n("703370"),
        E = n("773336"),
        h = n("716724"),
        _ = n("880553"),
        C = n("492249"),
        I = n("49111"),
        S = {
          [I.RPCCommands.TOGGLE_VIDEO]: {
            scope: {
              [C.RPC_SCOPE_CONFIG.ALL]: [
                I.OAuth2Scopes.RPC,
                I.OAuth2Scopes.RPC_VIDEO_WRITE,
              ],
            },
            handler() {
              let e = c.default.isVideoEnabled(),
                t = (0, _.default)();
              null != t &&
                (e
                  ? l.default.setVideoEnabled(!1)
                  : (0, u.default)(
                      () => l.default.setVideoEnabled(!0),
                      I.AppContext.APP
                    ));
            },
          },
          [I.RPCCommands.TOGGLE_SCREENSHARE]: {
            scope: {
              [C.RPC_SCOPE_CONFIG.ALL]: [
                I.OAuth2Scopes.RPC,
                I.OAuth2Scopes.RPC_SCREENSHARE_WRITE,
              ],
            },
            validation: e =>
              (0, h.default)(e)
                .optional()
                .keys({ pid: e.number().optional().min(0) }),
            handler(e) {
              let {
                  args: { pid: t },
                } = e,
                l = d.default.getCurrentUserActiveStream(),
                u = d.default.getStreamerActiveStreamMetadata(),
                c = (0, o.default)(r.default, f.default),
                h = (0, _.default)();
              null != h &&
                (null != t && null != u && u.pid !== t && (0, E.isWindows)()
                  ? (0, i.startStream)(h.guild_id, h.id, { pid: t })
                  : null != l
                    ? (0, i.stopOwnStream)(!1)
                    : null != t && (0, E.isWindows)()
                      ? (0, i.startStream)(h.guild_id, h.id, { pid: t })
                      : null != c
                        ? (0, i.startStream)(h.guild_id, h.id, { pid: c.pid })
                        : (0, s.openModalLazy)(async () => {
                            let { default: e } = await n
                              .el("451863")
                              .then(n.bind(n, "451863"));
                            return t =>
                              (0, a.jsx)(e, {
                                ...t,
                                guildId: h.guild_id,
                                analyticsLocation:
                                  I.AnalyticsLocations.ACTIVITY_RPC,
                              });
                          }));
            },
          },
        };
    },
    778117: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        }),
        n("222007");
      var a = n("629109"),
        s = n("42887"),
        l = n("13798"),
        i = n("861309"),
        r = n("716724"),
        o = n("492249"),
        u = n("49111"),
        d = n("353927");
      function c(e) {
        let t = e.application.id;
        if (null == t)
          throw new i.default(
            { errorCode: u.RPCErrors.INVALID_COMMAND },
            "No application."
          );
        return t;
      }
      var f = {
        [u.RPCCommands.SET_VOICE_SETTINGS_2]: {
          scope: o.RPC_LOCAL_SCOPE,
          validation: e =>
            (0, r.default)(e)
              .required()
              .keys({
                input_mode: (0, r.default)(e).keys({
                  type: e.string().valid(Object.keys(u.InputModes)),
                  shortcut: e.string().required(),
                }),
                self_mute: e.boolean(),
                self_deaf: e.boolean(),
              }),
          handler(e) {
            let {
                socket: t,
                args: { input_mode: n, self_mute: i, self_deaf: r },
              } = e,
              o = c(t);
            null != n &&
              a.default.setMode(
                n.type,
                { shortcut: (0, l.toCombo)(n.shortcut) },
                o
              ),
              null != i &&
                i !== s.default.isSelfMute(o) &&
                a.default.toggleSelfMute({ context: o }),
              null != r &&
                r !== s.default.isSelfDeaf(o) &&
                a.default.toggleSelfDeaf({ context: o });
          },
        },
        [u.RPCCommands.SET_USER_VOICE_SETTINGS_2]: {
          scope: o.RPC_LOCAL_SCOPE,
          validation: e =>
            (0, r.default)(e)
              .required()
              .keys({
                user_id: e.string().required(),
                volume: e.number().min(0).max(200),
                mute: e.boolean(),
              }),
          handler(e) {
            let {
                socket: t,
                args: { user_id: n, mute: l, volume: i },
              } = e,
              r = c(t);
            null != l &&
              l !== s.default.isLocalMute(n, r) &&
              a.default.toggleLocalMute(n, r),
              null != i && a.default.setLocalVolume(n, i, r);
          },
        },
        [u.RPCCommands.PUSH_TO_TALK]: {
          scope: {
            [o.RPC_SCOPE_CONFIG.ALL]: [
              u.OAuth2Scopes.RPC,
              u.OAuth2Scopes.RPC_VOICE_WRITE,
            ],
          },
          validation: e =>
            (0, r.default)(e).required().keys({ active: e.boolean() }),
          handler(e) {
            let {
              args: { active: t },
            } = e;
            s.default.getMode(d.MediaEngineContextTypes.DEFAULT) ===
              u.InputModes.PUSH_TO_TALK &&
              s.default
                .getMediaEngine()
                .eachConnection(
                  e => e.setForceAudioInput(t),
                  d.MediaEngineContextTypes.DEFAULT
                );
          },
        },
      };
    },
    195180: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        }),
        n("222007");
      var a = n("629109"),
        s = n("42887"),
        l = n("697218"),
        i = n("861309"),
        r = n("716724"),
        o = n("56245"),
        u = n("492249"),
        d = n("49111"),
        c = {
          [d.RPCCommands.SET_USER_VOICE_SETTINGS]: {
            scope: {
              [u.RPC_SCOPE_CONFIG.ANY]: [
                d.OAuth2Scopes.RPC,
                d.OAuth2Scopes.RPC_VOICE_WRITE,
              ],
            },
            validation: e =>
              (0, r.default)(e)
                .required()
                .keys({
                  user_id: e.string().required(),
                  pan: (0, r.default)(e).keys({
                    left: e.number().min(0).max(1).required(),
                    right: e.number().min(0).max(1).required(),
                  }),
                  volume: e.number().min(0).max(200),
                  mute: e.boolean(),
                }),
            handler(e) {
              let {
                  args: { user_id: t, pan: n, volume: r, mute: o },
                } = e,
                u = l.default.getCurrentUser();
              if (
                null == l.default.getUser(t) ||
                (null == u ? void 0 : u.id) === t
              )
                throw new i.default(
                  { errorCode: d.RPCErrors.INVALID_USER },
                  "Invalid user id: ".concat(t)
                );
              if (
                (null != n && a.default.setLocalPan(t, n.left, n.right),
                null != r && a.default.setLocalVolume(t, r),
                null != o)
              ) {
                let e = s.default.isLocalMute(t);
                ((e && !o) || (!e && o)) && a.default.toggleLocalMute(t);
              }
              return {
                user_id: t,
                pan: s.default.getLocalPan(t),
                volume: s.default.getLocalVolume(t),
                mute: s.default.isLocalMute(t),
              };
            },
          },
          [d.RPCCommands.GET_VOICE_SETTINGS]: {
            scope: {
              [u.RPC_SCOPE_CONFIG.ANY]: [
                d.OAuth2Scopes.RPC,
                d.OAuth2Scopes.RPC_VOICE_READ,
              ],
            },
            handler: () => (0, o.getDeprecatedVoiceSettings)(),
          },
          [d.RPCCommands.SET_VOICE_SETTINGS]: {
            scope: {
              [u.RPC_SCOPE_CONFIG.ANY]: [
                d.OAuth2Scopes.RPC,
                d.OAuth2Scopes.RPC_VOICE_WRITE,
              ],
            },
            validation: e =>
              (0, r.default)(e)
                .required()
                .keys({
                  input: (0, r.default)(e).keys({
                    device_id: e
                      .string()
                      .valid(Object.keys(s.default.getInputDevices())),
                    volume: e.number().min(0).max(100),
                  }),
                  output: (0, r.default)(e).keys({
                    device_id: e
                      .string()
                      .valid(Object.keys(s.default.getOutputDevices())),
                    volume: e.number().min(0).max(200),
                  }),
                  mode: (0, r.default)(e).keys({
                    type: e.string().valid(Object.keys(d.InputModes)),
                    auto_threshold: e.boolean(),
                    threshold: e.number().min(-100).max(0),
                    shortcut: e
                      .array()
                      .items(
                        (0, r.default)(e).keys({
                          type: e.number().min(0).max(3).required(),
                          code: e.number().required(),
                          name: e.string(),
                        })
                      ),
                    delay: e.number().min(0).max(2e3),
                  }),
                  automatic_gain_control: e.boolean(),
                  echo_cancellation: e.boolean(),
                  noise_suppression: e.boolean(),
                  qos: e.boolean(),
                  silence_warning: e.boolean(),
                  deaf: e.boolean(),
                  mute: e.boolean(),
                }),
            handler(e) {
              let {
                args: {
                  input: t,
                  output: n,
                  mode: l,
                  automatic_gain_control: i,
                  echo_cancellation: r,
                  noise_suppression: u,
                  qos: d,
                  silence_warning: c,
                  deaf: f,
                  mute: E,
                },
              } = e;
              if (
                (t &&
                  (null != t.device_id && a.default.setInputDevice(t.device_id),
                  null != t.volume && a.default.setInputVolume(t.volume)),
                n &&
                  (null != n.device_id &&
                    a.default.setOutputDevice(n.device_id),
                  null != n.volume && a.default.setOutputVolume(n.volume)),
                l)
              ) {
                let e = s.default.getMode(),
                  t = s.default.getModeOptions();
                null != l.type && (e = l.type),
                  null != l.auto_threshold &&
                    (t.autoThreshold = l.auto_threshold),
                  null != l.threshold && (t.threshold = l.threshold),
                  null != l.shortcut &&
                    (t.shortcut = l.shortcut.map(e => [e.type, e.code])),
                  null != l.delay && (t.delay = l.delay),
                  a.default.setMode(e, t);
              }
              if (
                (null != i && a.default.setAutomaticGainControl(i),
                null != r && a.default.setEchoCancellation(r),
                null != u && a.default.setNoiseSuppression(u),
                null != d && a.default.setQoS(d),
                null != c && a.default.setSilenceWarning(c),
                null != f)
              ) {
                let e = s.default.isSelfDeaf();
                ((e && !f) || (!e && f)) && a.default.toggleSelfDeaf();
              }
              if (null != E) {
                let e = s.default.isSelfMute();
                ((e && !E) || (!e && E)) && a.default.toggleSelfMute();
              }
              return (0, o.getDeprecatedVoiceSettings)();
            },
          },
        };
    },
    90906: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return A;
          },
        }),
        n("222007"),
        n("70102");
      var a = n("446825"),
        s = n("44170"),
        l = n("917351"),
        i = n.n(l),
        r = n("605250"),
        o = n("50885"),
        u = n("856116"),
        d = n("470313"),
        c = n("56245"),
        f = n("49111");
      let E = o.default.requireModule("discord_rpc").RPCIPC,
        h = new r.default("RPCServer:IPC"),
        _ = { HANDSHAKE: 0, FRAME: 1, CLOSE: 2, PING: 3, PONG: 4 };
      function C(e, t) {
        null != e.setHandshakeComplete
          ? e.setHandshakeComplete(t)
          : (e._didHandshake = t);
      }
      function I(e) {
        return null != e.getHandshakeComplete
          ? e.getHandshakeComplete()
          : e._didHandshake;
      }
      function S(e) {
        return new Promise((t, n) => {
          "string" == typeof e && (e = E.net.createConnection(e)),
            e.pause(),
            e.on("readable", () => {
              try {
                p(e);
              } catch (t) {
                e.end(m(_.CLOSE, { code: 1003, message: t.message })),
                  e.destroy();
              }
            });
          let a = () => {
              try {
                e.end(), e.destroy();
              } catch (e) {}
            },
            s = Promise.race([
              new Promise(t => e.on("error", () => t())),
              new Promise((t, n) => {
                e.on("pong", () => n(Error("socket responded with pong")));
              }),
              new Promise((e, t) => {
                setTimeout(() => t(Error("socket alive timeout")), 1e3);
              }),
            ]).then(
              () => {
                a();
              },
              e => {
                throw (a(), e);
              }
            );
          return e.write(m(_.PING, i.uniqueId())), s.then(t, n);
        });
      }
      function m(e, t) {
        var n;
        t = JSON.stringify(t);
        let s = a.Buffer.byteLength(t),
          l = a.Buffer.alloc(8 + s);
        return (
          l.writeInt32LE(e, 0),
          l.writeInt32LE(s, 4),
          l.write(t, 8, s),
          (n = l).buffer.slice(n.byteOffset, n.byteOffset + n.byteLength)
        );
      }
      function p(e) {
        let t = e.read(8);
        if (null == t) return;
        let n = a.Buffer.from(t),
          s = n.readInt32LE(0),
          l = n.readInt32LE(4);
        if (!Object.values(_).includes(s) || l < 0)
          throw Error("protocol error");
        if (null == (t = e.read(l)))
          throw Error("data size does not match what was received");
        n = a.Buffer.from(t);
        let i = JSON.parse(n.toString());
        switch (s) {
          case _.PING:
            e.emit("ping", i), e.write(m(_.PONG, i));
            break;
          case _.PONG:
            e.emit("pong", i);
            break;
          case _.HANDSHAKE:
            if (I(e)) throw Error("already did handshake");
            C(e, !0), e.emit("handshake", i);
            break;
          case _.FRAME:
            if (!I(e)) throw Error("did not handshake");
            e.emit("request", i);
            break;
          case _.CLOSE:
            e.end(), e.destroy();
        }
        p(e);
      }
      class T extends d.default {
        send(e) {
          h.info("Socket Emit: ".concat(this.id), (0, u.default)(e)),
            this.socket.write(m(_.FRAME, e));
        }
        close(e, t) {
          this.socket.end(m(_.CLOSE, { code: e, message: t })),
            this.socket.destroy();
        }
        constructor(e, t, n) {
          super("ipc", t, n), (this.socket = e);
        }
      }
      class g extends s.EventEmitter {
        handleConnection(e) {
          C(e, !1),
            e.pause(),
            e.on("readable", () => {
              try {
                p(e);
              } catch (t) {
                e.end(
                  m(_.CLOSE, {
                    code: f.RPCCloseCodes.CLOSE_UNSUPPORTED,
                    message: t.message,
                  })
                ),
                  e.destroy();
              }
            }),
            e.once("handshake", t => {
              let n;
              let a = t.client_id,
                s = +t.v;
              try {
                n = new T(e, s, "json");
              } catch (t) {
                e.end(m(_.CLOSE, { code: t.code, message: t.message })),
                  e.destroy();
                return;
              }
              h.info("Socket Opened: ".concat(n.id)),
                e.on("error", e => h.error("Socket Error: ".concat(e.message))),
                e.on("close", () => {
                  h.info("Socket Close: ".concat(n.id)),
                    this.emit("disconnect", n);
                }),
                (0, c.validateSocketClient)(n, null, a)
                  .then(() => {
                    e.on("request", e => {
                      h.info(
                        "Socket Message: ".concat(n.id),
                        (0, u.default)(e)
                      ),
                        this.emit("request", n, e);
                    }),
                      this.emit("connect", n);
                  })
                  .catch(e => {
                    let { code: t, message: a } = e;
                    return n.close(t, a);
                  });
            });
        }
        constructor() {
          super();
          let e = E.net.createServer(e => this.handleConnection(e));
          e.on("error", e => h.error("Error: ".concat(e.message))),
            E.getAvailableSocket(S).then(t => {
              e.listen(t, () => {
                let t =
                  "function" == typeof e.listening
                    ? e.listening()
                    : e.listening;
                t && h.info("Starting on ".concat(e.address()));
              });
            });
        }
      }
      var A = new g();
    },
    255516: function (e, t, n) {
      "use strict";
      let a, s;
      n.r(t),
        n.d(t, {
          default: function () {
            return D;
          },
        }),
        n("222007"),
        n("313619"),
        n("654714"),
        n("287168"),
        n("956660"),
        n("424973"),
        n("70102");
      var l = n("44170"),
        i = n("917351"),
        r = n.n(i),
        o = n("746379"),
        u = n.n(o),
        d = n("913144"),
        c = n("605250"),
        f = n("313915"),
        E = n("50885"),
        h = n("861309"),
        _ = n("856116"),
        C = n("470313"),
        I = n("56245"),
        S = n("492249"),
        m = n("49111"),
        p = n("446825").Buffer;
      try {
        a = E.default.requireModule("discord_erlpack");
      } catch (e) {
        try {
          a = E.default.requireModule("erlpack");
        } catch (e) {}
      }
      let T = E.default.requireModule("discord_rpc").RPCWebSocket,
        g = window.GLOBAL_ENV.MARKETING_ENDPOINT,
        A = new c.default("RPCServer:WSS"),
        N = [];
      function R(e) {
        return "function" == typeof e ? e() : e;
      }
      function O() {
        let e =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
          t =
            e > 0
              ? void 0
              : () => {
                  if (!R(s.listening)) return;
                  let e = s.address().port;
                  A.info("Starting on ".concat(e)),
                    d.default.dispatch({ type: "RPC_SERVER_READY", port: e });
                };
        s.listen(m.RPC_STARTING_PORT + (e % m.RPC_PORT_RANGE), "127.0.0.1", t);
      }
      function v(e, t, n) {
        let a =
            arguments.length > 3 && void 0 !== arguments[3]
              ? arguments[3]
              : 200,
          s =
            arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : {},
          l =
            null != R(e.headers).origin
              ? {
                  "Access-Control-Allow-Origin": R(e.headers).origin,
                  "Access-Control-Allow-Credentials": "true",
                  "Access-Control-Allow-Methods":
                    "POST, GET, PUT, PATCH, DELETE",
                  "Access-Control-Allow-Headers": "Content-Type, Authorization",
                }
              : {};
        (n = n ? JSON.stringify(n) : ""),
          (a = 200 === a && 0 === n.length ? 204 : a),
          t.setHeader("Content-Length", p.byteLength(n).toString()),
          t.setHeader("Content-Type", "application/json"),
          t.writeHead(a, { ...s, ...l }),
          t.end(n);
      }
      function L(e, t, n, a) {
        let s =
          arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0;
        v(e, t, { code: s, message: a }, n);
      }
      class WebSocket extends C.default {
        send(e) {
          (f.default.isLoggingOverlayEvents ||
            (e.cmd !== m.RPCCommands.OVERLAY &&
              e.evt !== m.RPCEvents.OVERLAY)) &&
            A.info("Socket Emit: ".concat(this.id), (0, _.default)(e)),
            null != a && "etf" === this.encoding
              ? this._socket.send(a.pack(e), { binary: !0 })
              : this._socket.send(JSON.stringify(e));
        }
        close(e, t) {
          this._socket.close(e, t);
        }
        constructor(e, t, n) {
          if ((super("ws", t, n), -1 === ["etf", "json"].indexOf(n)))
            throw new h.default(
              { closeCode: m.RPCCloseCodes.INVALID_ENCODING },
              "Invalid Encoding: ".concat(n)
            );
          if ("etf" === n && null == a)
            throw new h.default(
              { closeCode: m.RPCCloseCodes.INVALID_ENCODING },
              "Erlpack cannot be used on this client"
            );
          this._socket = e;
        }
      }
      class M extends C.default {
        send(e) {
          (f.default.isLoggingOverlayEvents ||
            e.cmd !== m.RPCCommands.OVERLAY) &&
            A.info("Socket Emit: ".concat(this.id), e),
            this._sendCallback(e);
        }
        close(e, t) {
          this._closeCallback(t, e);
        }
        constructor(e, t, n, a) {
          if ((super("http", n, a), "json" !== a))
            throw new h.default(
              { closeCode: m.RPCCloseCodes.INVALID_ENCODING },
              "Invalid Encoding: ".concat(a)
            );
          (this._sendCallback = e), (this._closeCallback = t);
        }
      }
      class P extends l.EventEmitter {
        handleRequest(e, t) {
          let [n, a] = R(e.url).split("?"),
            s = R(e.method);
          if ("/rpc" === n && "OPTIONS" === s) {
            v(e, t, { body: "" });
            return;
          }
          let l = "POST" === s;
          if ("/rpc" === n && ("GET" === s || l)) {
            let n = new URLSearchParams(a),
              s = l ? R(e.headers)["content-type"].split("/")[1] : "json",
              r = function () {
                var e;
                let { protocol: a, host: s } = u.parse(
                  null !== (e = n.get("callback")) && void 0 !== e ? e : ""
                );
                a === location.protocol && s === location.host
                  ? t.setHeader("Location", n.get("callback"))
                  : t.setHeader("Location", g),
                  t.writeHead(301),
                  t.end();
              },
              o = new M(
                l ? v.bind(null, e, t) : r,
                l ? L.bind(null, e, t, 400) : r,
                Number(n.get("v")),
                s
              );
            if (l)
              (0, I.validateSocketClient)(
                o,
                R(e.headers).origin,
                n.get("client_id")
              )
                .then(() => {
                  let n = "";
                  e.on("data", e => (n += e)),
                    e.on("error", () => L(e, t, 500, "Internal Server Error")),
                    e.on("end", () => this.handleMessage(o, n));
                })
                .catch(e => {
                  let { code: t, message: n } = e;
                  return o.close(t, n);
                });
            else {
              var i;
              (o.authorization.scopes = [S.RPC_PRIVATE_LIMITED_SCOPE]),
                this.handleMessage(
                  o,
                  decodeURIComponent(
                    null !== (i = n.get("payload")) && void 0 !== i ? i : ""
                  )
                );
            }
            return;
          }
          L(e, t, 404, "Not Found");
        }
        handleConnection(e) {
          var t, n;
          let a;
          let s = new URLSearchParams(R(e.upgradeReq).url.split("?")[1]),
            l =
              null !== (t = R(e.upgradeReq).headers.origin) && void 0 !== t
                ? t
                : "";
          try {
            a = new WebSocket(
              e,
              Number(s.get("v")),
              null !== (n = s.get("encoding")) && void 0 !== n ? n : "json"
            );
          } catch (t) {
            e.close(t.code, t.message);
            return;
          }
          A.info("Socket Opened: ".concat(a.id)),
            e.on("error", e => A.error("WS Error: ".concat(e.message))),
            e.on("close", (e, t) => {
              A.info(
                "Socket Closed: "
                  .concat(a.id, ", code ")
                  .concat(e, ", message ")
                  .concat(t)
              ),
                r.remove(N, e => e === a),
                this.emit("disconnect", a);
            }),
            (0, I.validateSocketClient)(a, l, s.get("client_id"))
              .then(() => {
                N.push(a),
                  e.on("message", e => this.handleMessage(a, e)),
                  this.emit("connect", a);
              })
              .catch(e => {
                let { code: t, message: n } = e;
                return a.close(t, n);
              });
        }
        handleMessage(e, t) {
          let n;
          try {
            if (null != a && "etf" === e.encoding) n = a.unpack(t);
            else if ("string" == typeof t) n = JSON.parse(t);
            else throw Error();
          } catch (t) {
            e.close(
              m.RPCCloseCodes.CLOSE_UNSUPPORTED,
              "Payload not ".concat(e.encoding)
            );
            return;
          }
          (f.default.isLoggingOverlayEvents ||
            n.cmd !== m.RPCCommands.OVERLAY) &&
            A.info("Socket Message: ".concat(e.id), (0, _.default)(n)),
            this.emit("request", e, n);
        }
        constructor() {
          var e;
          super();
          let t = 0;
          (s = T.http.createServer()).on("error", e => {
            A.error("Error: ".concat(e.message)),
              ("EADDRINUSE" === e.code || e.message.includes("EADDRINUSE")) &&
                setTimeout(() => O(++t), 1e3);
          }),
            s.on("request", this.handleRequest.bind(this)),
            O(t);
          let n = {
            instanceId: null !== (e = s.instanceId) && void 0 !== e ? e : 0,
            server: s,
          };
          new T.ws.Server(n).on("connection", e => this.handleConnection(e));
        }
      }
      var D = new P();
    },
    357147: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        });
      var a = n("605250"),
        s = n("313915"),
        l = n("856116"),
        i = n("17891"),
        r = n("56245"),
        o = n("958530"),
        u = n("49111");
      let d = new a.default("RPCServer:PostMessage"),
        c = (e, t, n) => {
          (s.default.isLoggingOverlayEvents ||
            e.cmd !== u.RPCCommands.OVERLAY) &&
            t.info("Socket Message: ".concat(n.id), (0, l.default)(e));
        };
      var f = (function () {
        let e = new i.default(r.validateSocketClient, d, o.default, c);
        return (
          window.addEventListener("message", t => {
            if (window === t.source) return;
            if (null == t.source || null == t.source.postMessage) {
              d.error("Unknown event source");
              return;
            }
            let n = t.source,
              a = t.data,
              s = t.origin;
            e.handleMessage(a, s, (e, t) => {
              n.postMessage(e, t);
            });
          }),
          e
        );
      })();
    },
    958530: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("313915"),
        s = n("856116"),
        l = n("132181"),
        i = n("49111"),
        r = e => {
          let {
            origin: t,
            postMessageToRPCClient: n,
            frameId: r,
            version: o,
            encoding: u,
            logger: d,
            postClose: c,
          } = e;
          return new l.default({
            origin: t,
            postMessageToRPCClient: n,
            frameId: r,
            version: o,
            encoding: u,
            logger: d,
            postClose: c,
            onSendingToRPCClient: (e, t) => {
              (a.default.isLoggingOverlayEvents ||
                (e.cmd !== i.RPCCommands.OVERLAY &&
                  e.evt !== i.RPCEvents.OVERLAY)) &&
                d.info("Socket Emit: ".concat(t), (0, s.default)(e));
            },
          });
        };
    },
    837944: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useCanSeeSafetyEducationBlockMuteCoachmark: function () {
            return u;
          },
          useSafetyEducationAATriggerPoint: function () {
            return d;
          },
        });
      var a = n("65597"),
        s = n("607742"),
        l = n("415929"),
        i = n("697218"),
        r = n("158998"),
        o = n("332164");
      let u = () => {
          let e = (0, l.useIsSafetyConsumerEducationBlockMuteEnabled)(),
            t = (0, a.default)([i.default], () => i.default.getCurrentUser()),
            n = (0, o.useUserIsInLargeGuilds)();
          return e && !(0, r.isNewUser)(t) && n;
        },
        d = () => (0, s.useIsSafetyConsumerEducationAAEnabled)();
    },
    374089: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useCanSeeSafetyEducationReportingCoachmark: function () {
            return o;
          },
        });
      var a = n("65597"),
        s = n("127205"),
        l = n("697218"),
        i = n("158998"),
        r = n("332164");
      let o = () => {
        let e = (0, s.useIsSafetyConsumerEducationReportingEnabled)(),
          t = (0, a.default)([l.default], () => l.default.getCurrentUser()),
          n = (0, r.useUserIsInLargeGuilds)();
        return e && !(0, i.isNewUser)(t) && n;
      };
    },
    332164: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useUserIsInLargeGuilds: function () {
            return l;
          },
        });
      var a = n("65597"),
        s = n("525065");
      function l() {
        let e = (0, a.default)([s.default], () => {
          let e = Object.values(s.default.getMemberCounts());
          return e.some(e => e >= 200);
        });
        return e;
      }
    },
    189726: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("65597"),
        l = n("206230"),
        i = n("5667"),
        r = n("58608"),
        o = n("837944"),
        u = n("994428"),
        d = n("782340"),
        c = n("736209"),
        f = e => {
          let { markAsDismissed: t } = e,
            n = (0, s.default)([l.default], () => l.default.useReducedMotion),
            f = (0, o.useCanSeeSafetyEducationBlockMuteCoachmark)();
          return f
            ? (0, a.jsx)(i.default, {
                asset: (0, a.jsx)(r.default, {
                  className: c.video,
                  src: "https://cdn.discordapp.com/attachments/1067194967979733053/1067195117439557712/Safety_BLOCK_Coachmark.mp4",
                  loop: !0,
                  autoPlay: !n,
                  width: "100%",
                }),
                header:
                  d.default.Messages.SAFETY_CONSUMER_EDUCATION_BLOCK_HEADER,
                content:
                  d.default.Messages.SAFETY_CONSUMER_EDUCATION_BLOCK_CONTENT,
                buttonCTA: d.default.Messages.GOT_IT,
                className: c.coachmark,
                onClick: e => {
                  e.stopPropagation(), t(u.ContentDismissActionType.UNKNOWN);
                },
                markAsDismissed: t,
                caretPosition: i.CaretPosition.BOTTOM_CENTER,
                headerClassName: c.header,
              })
            : null;
        };
    },
    666647: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("65597"),
        l = n("206230"),
        i = n("5667"),
        r = n("58608"),
        o = n("837944"),
        u = n("994428"),
        d = n("782340"),
        c = n("197546"),
        f = e => {
          let { markAsDismissed: t } = e,
            n = (0, s.default)([l.default], () => l.default.useReducedMotion),
            f = (0, o.useCanSeeSafetyEducationBlockMuteCoachmark)();
          return f
            ? (0, a.jsx)(i.default, {
                asset: (0, a.jsx)(r.default, {
                  className: c.video,
                  src: "https://cdn.discordapp.com/attachments/1067194967979733053/1067195118026772480/Safety_MUTE_Coachmark.mp4",
                  loop: !0,
                  autoPlay: !n,
                  width: "100%",
                }),
                header:
                  d.default.Messages.SAFETY_CONSUMER_EDUCATION_MUTE_HEADER,
                content:
                  d.default.Messages.SAFETY_CONSUMER_EDUCATION_MUTE_CONTENT,
                buttonCTA: d.default.Messages.GOT_IT,
                className: c.coachmark,
                onClick: e => {
                  e.stopPropagation(), t(u.ContentDismissActionType.UNKNOWN);
                },
                markAsDismissed: t,
                caretPosition: i.CaretPosition.BOTTOM_CENTER,
                headerClassName: c.header,
              })
            : null;
        };
    },
    286914: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          UserSafetyEducationReportingCoachmark: function () {
            return f;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("65597"),
        l = n("206230"),
        i = n("5667"),
        r = n("58608"),
        o = n("374089"),
        u = n("994428"),
        d = n("782340"),
        c = n("831025");
      let f = e => {
        let { markAsDismissed: t } = e,
          n = (0, s.default)([l.default], () => l.default.useReducedMotion),
          f = (0, o.useCanSeeSafetyEducationReportingCoachmark)();
        return f
          ? (0, a.jsx)(i.default, {
              asset: (0, a.jsx)(r.default, {
                src: "https://cdn.discordapp.com/attachments/1063579271815245944/1095089224421740695/CEC_Reporting_Animation_v03_EN_1x1_Music_1.mp4",
                loop: !0,
                autoPlay: !n,
                className: c.video,
                width: "100%",
              }),
              header:
                d.default.Messages.SAFETY_CONSUMER_EDUCATION_REPORTING_HEADER,
              content:
                d.default.Messages.SAFETY_CONSUMER_EDUCATION_REPORTING_CONTENT,
              buttonCTA: d.default.Messages.GOT_IT,
              onClick: e => {
                e.stopPropagation(), t(u.ContentDismissActionType.UNKNOWN);
              },
              markAsDismissed: t,
              caretPosition: i.CaretPosition.BOTTOM_CENTER,
              headerClassName: c.header,
            })
          : null;
      };
    },
    29322: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        }),
        n("222007"),
        n("424973");
      var a = n("862337"),
        s = n("913144"),
        l = n("316272"),
        i = n("462274"),
        r = n("697218"),
        o = n("760679"),
        u = n("827520");
      class d extends l.default {
        _initialize() {
          !__OVERLAY__ &&
            (s.default.subscribe(
              "SHARED_CANVAS_DRAW_LINE_POINT",
              this._handleDrawLinePoint
            ),
            s.default.subscribe(
              "VOICE_CHANNEL_EFFECT_SEND",
              this._handleVoiceChannelEffectReceived
            ));
        }
        _terminate() {
          !__OVERLAY__ &&
            (s.default.unsubscribe(
              "SHARED_CANVAS_DRAW_LINE_POINT",
              this._handleDrawLinePoint
            ),
            s.default.unsubscribe(
              "VOICE_CHANNEL_EFFECT_SEND",
              this._handleVoiceChannelEffectReceived
            ),
            this.lineBatchTimer.stop());
        }
        _handleVoiceChannelEffectReceived(e) {
          var t;
          let {
            lineId: n,
            points: a,
            userId: s,
            streamerId: l,
            emojiHose: d,
          } = e;
          if (
            null != l &&
            s !==
              (null === (t = r.default.getCurrentUser()) || void 0 === t
                ? void 0
                : t.id)
          ) {
            if (null != a && null != n) {
              let e = r.default.getUser(s);
              null != e &&
                (0, i.maybeFetchColors)(
                  e.getAvatarURL(null, u.AVATAR_COLOR_AVATAR_SIZE)
                ),
                (0, o.updateLinePoints)(n, s, l, a);
            } else
              null != d &&
                ((d.lastUpdatedAt = Date.now()),
                (0, o.updateEmojiHose)(d, s, l));
          }
        }
        constructor(...e) {
          super(...e),
            (this.linesToUpdate = {}),
            (this.lineBatchTimer = new a.Interval()),
            (this._handleDrawLinePoint = e => {
              let { channelId: t, lineId: n, streamerId: a, point: s } = e;
              null == this.linesToUpdate[n]
                ? (this.linesToUpdate[n] = {
                    channelId: t,
                    streamerId: a,
                    points: [s],
                  })
                : this.linesToUpdate[n].points.push(s),
                null == this.lineBatchTimer._ref &&
                  this.lineBatchTimer.start(
                    u.EVENT_TICK_RATE,
                    this.sendLineBatch
                  );
            }),
            (this.sendLineBatch = () => {
              for (let e in this.linesToUpdate) {
                let {
                  channelId: t,
                  points: n,
                  streamerId: a,
                } = this.linesToUpdate[e];
                (0, o.addLinePoints)(t, e, a, n);
              }
              (this.linesToUpdate = {}), this.lineBatchTimer.stop();
            });
        }
      }
      var c = new d();
    },
    447973: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        }),
        n("222007");
      var a,
        s = n("913144"),
        l = n("316272"),
        i = n("271938"),
        r = n("42887");
      a = class extends l.default {
        _initialize() {
          !__OVERLAY__ &&
            (s.default.subscribe(
              "VOICE_CHANNEL_EFFECT_SEND",
              this._handleSoundboardSoundReceived
            ),
            s.default.subscribe(
              "GUILD_SOUNDBOARD_SOUND_PLAY_LOCALLY",
              this._handleSoundboardSoundPlayLocally
            ),
            s.default.subscribe(
              "VOICE_CHANNEL_SELECT",
              this._handleVoiceChannelSelect
            ),
            s.default.subscribe(
              "AUDIO_TOGGLE_SELF_DEAF",
              this._handleToggleSelfDeafened
            ));
        }
        _terminate() {
          !__OVERLAY__ &&
            (s.default.unsubscribe(
              "VOICE_CHANNEL_EFFECT_SEND",
              this._handleSoundboardSoundReceived
            ),
            s.default.unsubscribe(
              "GUILD_SOUNDBOARD_SOUND_PLAY_LOCALLY",
              this._handleSoundboardSoundPlayLocally
            ),
            s.default.unsubscribe(
              "VOICE_CHANNEL_SELECT",
              this._handleVoiceChannelSelect
            ),
            s.default.unsubscribe(
              "AUDIO_TOGGLE_SELF_DEAF",
              this._handleToggleSelfDeafened
            ));
        }
        constructor(...e) {
          super(...e),
            (this._playSound = function (e) {
              arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                arguments.length > 2 && arguments[2],
                arguments.length > 3 && arguments[3];
            }),
            (this._stopAndClearSounds = () => {}),
            (this._handleToggleSelfDeafened = () => {
              r.default.isDeaf() && this._stopAndClearSounds();
            }),
            (this._handleSoundboardSoundReceived = e => {
              let { soundId: t, soundVolume: n, userId: a, channelId: s } = e;
              if (null != t && a !== i.default.getId())
                return this._playSound(t, n, a, s);
            }),
            (this._handleSoundboardSoundPlayLocally = e => {
              let { sound: t, channelId: n } = e,
                a = i.default.getId();
              return this._playSound(t.soundId, t.volume, a, n);
            }),
            (this._handleVoiceChannelSelect = () => {
              this._stopAndClearSounds();
            });
        }
      };
    },
    949e3: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return g;
          },
        }),
        n("222007");
      var a = n("37983");
      n("884691");
      var s = n("77078"),
        l = n("913144"),
        i = n("139321"),
        r = n("269596"),
        o = n("42203"),
        u = n("42887"),
        d = n("18494"),
        c = n("227602"),
        f = n("447973"),
        E = n("305122"),
        h = n("235004"),
        _ = n("245463"),
        C = n("520497"),
        I = n("812809"),
        S = n("435895"),
        m = n("49111"),
        p = n("353927");
      class T extends f.default {
        _initialize() {
          super._initialize(),
            !__OVERLAY__ &&
              l.default.subscribe(
                "OVERLAY_SOUNDBOARD_SOUNDS_FETCH_REQUEST",
                this._handleOverlaySoundboardSoundsFetchRequest
              );
        }
        _terminate() {
          super._terminate(),
            !__OVERLAY__ &&
              l.default.unsubscribe(
                "OVERLAY_SOUNDBOARD_SOUNDS_FETCH_REQUEST",
                this._handleOverlaySoundboardSoundsFetchRequest
              );
        }
        constructor(...e) {
          var t;
          super(...e),
            (t = this),
            (this.playingSoundsWeb = new Map()),
            (this._stopAndClearSounds = () => {
              u.default.supports(p.Features.SAMPLE_PLAYBACK) &&
                u.default.getMediaEngine().eachConnection(e => {
                  e.stopAllSamplesLocalPlayback();
                }),
                this.playingSoundsWeb.forEach(e => {
                  e.pause(), (e.src = "");
                }),
                (this.playingSoundsWeb = new Map());
            }),
            (this._playSound = async function (e) {
              let n =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : 1,
                a = arguments.length > 2 ? arguments[2] : void 0,
                s = arguments.length > 3 ? arguments[3] : void 0,
                l = null != s && d.default.getVoiceChannelId() === s;
              if (
                (null == s || l) &&
                !u.default.isDeaf() &&
                !h.default.isLocalSoundboardMuted(a)
              )
                try {
                  let s = {
                    soundKey: "".concat(a, "-").concat(e),
                    soundURL: (0, C.default)(e),
                    soundVolume: (0, I.default)(n),
                    reportSoundStartedPlaying: () =>
                      (0, E.reportSoundStartedPlaying)(e, a),
                  };
                  u.default.supports(p.Features.SAMPLE_PLAYBACK)
                    ? await (0, S.playDesktopSound)(s)
                    : await (0, S.playWebSound)(s, t.playingSoundsWeb);
                } finally {
                  (0, E.reportSoundFinishedPlaying)(e, a);
                }
            }),
            (this._handleOverlaySoundboardSoundsFetchRequest = () => {
              (0, E.maybeFetchSoundboardSounds)();
            }),
            (this._handleOpenEducationModal = (e, t) => {
              if (null == e) return;
              let l = o.default.getChannel(t),
                u = c.default.getKeybindForAction(
                  m.GlobalKeybindActions.SOUNDBOARD_HOLD
                );
              null != l &&
                (0, _.default)(l) &&
                null != u &&
                r.default.hasHotspot(
                  i.HotspotLocations.SOUNDBOARD_WHEEL_EDUCATION_MODAL
                ) &&
                (0, s.openModalLazy)(async () => {
                  let { default: t } = await n
                    .el("170441")
                    .then(n.bind(n, "170441"));
                  return n =>
                    (0, a.jsx)(t, { ...n, guildId: e, keybind: u, channel: l });
                });
            });
        }
      }
      var g = new T();
    },
    486185: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return p;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("65597"),
        i = n("151426"),
        r = n("77078"),
        o = n("272030"),
        u = n("812204"),
        d = n("685665"),
        c = n("235145"),
        f = n("244390"),
        E = n("42887"),
        h = n("754576"),
        _ = n("78581"),
        C = n("429829"),
        I = n("191191"),
        S = n("994428"),
        m = n("782340");
      function p(e) {
        let {
            channel: t,
            iconClassName: p,
            className: T,
            innerClassName: g,
            ...A
          } = e,
          { mute: N, suppress: R } = (0, f.default)(t),
          O = (0, l.default)([E.default], () => E.default.isDeaf()),
          v = N || R || O,
          [L, M] = s.useState(!1),
          P = t.getGuildId(),
          D = (0, _.useSoundBoardDismissContentTypes)({
            isSoundboardButtonDisabled: v,
          }),
          [y, x] = (0, c.useGetDismissibleContent)(D),
          { AnalyticsLocationProvider: b } = (0, d.default)(
            u.default.SOUNDBOARD_BUTTON
          );
        function U(e) {
          null != P &&
            (0, o.openContextMenuLazy)(e, async () => {
              let { default: e } = await n
                .el("136137")
                .then(n.bind(n, "136137"));
              return t => (0, a.jsx)(e, { guildId: P, ...t });
            });
        }
        let G = e =>
          (0, a.jsx)(r.Popout, {
            shouldShow: L,
            position: "top",
            onRequestClose: () => M(!1),
            renderPopout: e => {
              let { closePopout: n } = e;
              return (0, a.jsx)(I.default, {
                guildId: P,
                channel: t,
                onClose: n,
                gridNotice:
                  y === i.DismissibleContent.CUSTOM_CALL_SOUNDS_PICKER_UPSELL &&
                  (0, a.jsx)(C.CustomCallSoundUpsell, {
                    onClose: n,
                    markAsDismissed: x,
                  }),
                analyticsSource: "rtc panel",
              });
            },
            children: t =>
              (0, a.jsx)("div", {
                children: (0, a.jsx)(r.Button, {
                  ...e,
                  ...t,
                  className: T,
                  wrapperClassName: T,
                  innerClassName: g,
                  disabled: v,
                  onClick: () => {
                    var t, n;
                    null == n || n(),
                      null != y &&
                        y !==
                          i.DismissibleContent
                            .CUSTOM_CALL_SOUNDS_PICKER_UPSELL &&
                        x(S.ContentDismissActionType.UNKNOWN),
                      null == e ||
                        null === (t = e.onClick) ||
                        void 0 === t ||
                        t.call(e),
                      M(!L);
                  },
                  onContextMenu: U,
                  fullWidth: !0,
                  size: r.Button.Sizes.SMALL,
                  ...A,
                  children: (0, a.jsx)(h.default, { className: p }),
                }),
              }),
          });
        return (0, a.jsx)(b, {
          children: (0, a.jsx)(r.Tooltip, {
            text: (function () {
              if (N)
                return m.default.Messages
                  .SOUNDBOARD_OPEN_SOUNDBOARD_ERROR_GUILD_MUTE;
              if (R)
                return m.default.Messages
                  .SOUNDBOARD_OPEN_SOUNDBOARD_ERROR_SUPPRESSED;
              if (O)
                return m.default.Messages
                  .SOUNDBOARD_OPEN_SOUNBOARRD_ERROR_DEAFENED;
              return m.default.Messages.SOUNDBOARD_OPEN_SOUNDBOARD;
            })(),
            children: e => G(e),
          }),
        });
      }
    },
    696770: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("151426"),
        l = n("79112"),
        i = n("369964"),
        r = n("49111"),
        o = n("994428"),
        u = n("782340"),
        d = n("121438");
      function c(e) {
        let { markAsDismissed: t } = e;
        return (0, a.jsx)(i.default, {
          header: u.default.Messages.SOUNDBOARD_VOLUME_TOOLTIP_HEADER,
          body: u.default.Messages.SOUNDBOARD_VOLUME_TOOLTIP_BODY,
          tryItText: u.default.Messages.TAKE_ME_THERE,
          dismissibleContent: s.DismissibleContent.SOUNDBOARD_VOLUME_EDUCATION,
          artClassName: d.art,
          onTryFeature: () => {
            l.default.open(r.UserSettingsSections.VOICE),
              t(o.ContentDismissActionType.UNKNOWN);
          },
          onClose: () => t(o.ContentDismissActionType.UNKNOWN),
          shouldUseHorizontalButtons: !0,
          inlineArt: !0,
        });
      }
    },
    435895: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          playDesktopSound: function () {
            return c;
          },
          playWebSound: function () {
            return f;
          },
        }),
        n("222007");
      var a = n("627445"),
        s = n.n(a),
        l = n("773364"),
        i = n("42887"),
        r = n("812809");
      let o = null;
      try {
        o = new AudioContext();
      } catch {}
      let u = new Map();
      async function d(e) {
        let t = u.get(e);
        if (null != t) return t;
        let n = await (await fetch(e)).arrayBuffer(),
          a = await (null == o ? void 0 : o.decodeAudioData(n));
        return null != a && u.set(e, a), a;
      }
      function c(e) {
        let {
          soundKey: t,
          soundURL: n,
          soundVolume: a,
          reportSoundStartedPlaying: r,
        } = e;
        return new Promise(async e => {
          let o = await d(n);
          null == o && e(),
            i.default.getMediaEngine().eachConnection(n => {
              n.context === l.MediaEngineContextTypes.DEFAULT &&
                (r(),
                s(null != o, "audioBuffer cannot be null here"),
                n.startSamplesLocalPlayback(t, o, a, () => {
                  e();
                }));
            });
        });
      }
      function f(e, t) {
        let {
            soundKey: n,
            soundURL: a,
            soundVolume: s,
            reportSoundStartedPlaying: l,
          } = e,
          i = t.get(n);
        if (null != i) {
          i.currentTime = 0;
          return;
        }
        return new Promise(e => {
          let i = new Audio(a);
          (i.volume = (0, r.default)(s)),
            i.addEventListener("canplaythrough", () => {
              l(), t.set(n, i), i.play();
            }),
            i.addEventListener("ended", () => {
              t.delete(n), (i.src = ""), e();
            });
        });
      }
    },
    2129: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("446674"),
        l = n("77078"),
        i = n("271938"),
        r = n("662285"),
        o = n("629414"),
        u = n("53887"),
        d = n("486150"),
        c = n("555759"),
        f = n("450484"),
        E = n("782340");
      function h(e, t, n) {
        let h = (0, s.useStateFromStores)(
          [r.default, i.default],
          () =>
            null != t ? (0, u.default)(r.default, i.default, t, e) : void 0,
          [e, t]
        );
        if (null == h || null == e || null == t) return null;
        let _ = h.isCurrentUser || h.notPlayable || h.playingSameTrack,
          C = h.isCurrentUser || h.syncingWithUser || h.syncingWithParty;
        return [
          (0, a.jsx)(
            l.MenuItem,
            {
              id: "spotify-play-".concat(e.session_id),
              action: () =>
                (0, c.default)(h, f.SpotifyActionTypes.USER_ACTIVITY_PLAY, n),
              label:
                E.default.Messages
                  .ACTIVITY_FEED_NOW_PLAYING_ACTION_PLAY_ON_SPOTIFY,
              subtext: _
                ? (0, o.default)(h, f.SpotifyActionTypes.USER_ACTIVITY_PLAY)
                : void 0,
              disabled: _,
            },
            "spotify-play-".concat(e.session_id)
          ),
          h.canPlaySpotify
            ? (0, a.jsx)(
                l.MenuItem,
                {
                  id: "spotify-sync-".concat(e.session_id),
                  action: () =>
                    (0, d.default)(
                      h,
                      f.SpotifyActionTypes.USER_ACTIVITY_SYNC,
                      n
                    ),
                  label:
                    E.default.Messages
                      .ACTIVITY_FEED_NOW_PLAYING_ACTION_LISTEN_ALONG,
                  subtext: C
                    ? (0, o.default)(h, f.SpotifyActionTypes.USER_ACTIVITY_SYNC)
                    : void 0,
                  disabled: C,
                },
                "spotify-sync-".concat(e.session_id)
              )
            : null,
        ];
      }
    },
    987285: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        }),
        n("222007");
      var a = n("913144"),
        s = n("629109"),
        l = n("990766"),
        i = n("316272"),
        r = n("374014"),
        o = n("373469"),
        u = n("271938"),
        d = n("42203"),
        c = n("42887"),
        f = n("808422");
      class E extends i.default {
        _initialize() {
          a.default.subscribe(
            "VOICE_STATE_UPDATES",
            this.handleVoiceStateUpdates
          );
        }
        _terminate() {
          a.default.unsubscribe(
            "VOICE_STATE_UPDATES",
            this.handleVoiceStateUpdates
          );
        }
        constructor(...e) {
          super(...e),
            (this.handleVoiceStateUpdates = e => {
              let { voiceStates: t } = e,
                n = u.default.getId();
              t.forEach(e => {
                var t;
                if (e.userId !== n) return;
                let a =
                  null === (t = d.default.getChannel(e.channelId)) ||
                  void 0 === t
                    ? void 0
                    : t.isGuildStageVoice();
                if (!a) return;
                let s =
                  (0, f.getAudienceRequestToSpeakState)(e) ===
                  f.RequestToSpeakStates.ON_STAGE;
                !s && (this.handleStopStream(e), this.handleStopUserVideo());
              });
            }),
            (this.handleStopStream = e => {
              let t = o.default.getActiveStreamForUser(e.userId, e.guildId);
              null != t && (0, l.stopStream)((0, r.encodeStreamKey)(t), !1);
            }),
            (this.handleStopUserVideo = () => {
              c.default.isVideoEnabled() && s.default.setVideoEnabled(!1);
            });
        }
      }
      var h = new E();
    },
    160870: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("446674"),
        s = n("271938"),
        l = n("18494"),
        i = n("325861");
      function r(e) {
        return (0, a.useStateFromStores)(
          [s.default, l.default, i.default],
          () => {
            let t = s.default.getId();
            return l.default.getVoiceChannelId() === e
              ? i.default.getPermissionsForUser(t, e)
              : null;
          },
          [e]
        );
      }
    },
    686551: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        }),
        n("222007");
      var a = n("37983");
      n("884691");
      var s = n("77078"),
        l = n("913144"),
        i = n("316272"),
        r = n("271938"),
        o = n("42203"),
        u = n("235660"),
        d = n("808422"),
        c = n("49111");
      let f = "STAGE_INVITED_TO_SPEAK_MODAL";
      class E extends i.default {
        _initialize() {
          l.default.subscribe(
            "VOICE_STATE_UPDATES",
            this.handleVoiceStateUpdates
          );
        }
        _terminate() {
          l.default.unsubscribe(
            "VOICE_STATE_UPDATES",
            this.handleVoiceStateUpdates
          );
        }
        constructor(...e) {
          super(...e),
            (this.handleVoiceStateUpdates = e => {
              var t;
              let { voiceStates: l } = e,
                i = r.default.getId(),
                E =
                  null === (t = u.default.getSession()) || void 0 === t
                    ? void 0
                    : t.sessionId,
                h = l.find(e => e.userId === i && e.sessionId === E);
              if (null == h) return;
              let _ = h.channelId;
              if (null == _) {
                (0, s.hasModalOpen)(f) && (0, s.closeModal)(f);
                return;
              }
              let C = o.default.getChannel(_),
                I = null == C ? void 0 : C.isGuildStageVoice();
              if (!I) return;
              let S =
                (0, d.getAudienceRequestToSpeakState)(h) ===
                d.RequestToSpeakStates.REQUESTED_TO_SPEAK_AND_AWAITING_USER_ACK;
              if (null != C && S) {
                if ((0, s.hasModalOpen)(f)) return;
                (0, s.openModalLazy)(
                  async () => {
                    let { default: e } = await n
                      .el("730705")
                      .then(n.bind(n, "730705"));
                    return t => (0, a.jsx)(e, { ...t, channel: C });
                  },
                  { modalKey: f, onCloseRequest: c.NOOP_NULL }
                );
              }
            });
        }
      }
      var h = new E();
    },
    357046: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          MAX_TTS_LENGTH: function () {
            return a;
          },
          SPEECH_RATE_INCREMENTS: function () {
            return s;
          },
        });
      let a = 200,
        s = [
          0, 0.25, 0.5, 0.75, 1, 1.25, 1.5, 1.75, 2, 2.25, 2.5, 2.75, 3, 3.25,
          3.5, 3.75, 4, 4.25, 4.5, 4.75, 5, 5.25, 5.5, 5.75, 6, 6.25, 6.5, 6.75,
          7, 7.25, 7.5, 7.75, 8, 8.25, 8.5, 8.75, 9, 9.25, 9.5, 9.75, 10,
        ];
    },
    481395: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return Y;
          },
        }),
        n("781738"),
        n("843762");
      var a = n("866227"),
        s = n.n(a),
        l = n("913144"),
        i = n("533280"),
        r = n("679653"),
        o = n("646630"),
        u = n("256572"),
        d = n("915639"),
        c = n("845579"),
        f = n("271938"),
        E = n("982108"),
        h = n("42203"),
        _ = n("26989"),
        C = n("305961"),
        I = n("42887"),
        S = n("385649"),
        m = n("27618"),
        p = n("18494"),
        T = n("282109"),
        g = n("697218"),
        A = n("158998"),
        N = n("76629"),
        R = n("981957"),
        O = n("357046"),
        v = n("49111"),
        L = n("782340");
      let M = [],
        P = null,
        D = null,
        y = null,
        x = /\|\|([\s\S]+?)\|\|/g;
      function b(e, t, n, a) {
        let l = C.default.getGuild(n),
          i = e
            .replace(x, L.default.Messages.SPOILER)
            .replace(/<@!?(\d+)>/g, (e, t) => {
              var a;
              let s = g.default.getUser(t);
              if (null == s) return e;
              return null !== (a = _.default.getNick(n, s.id)) && void 0 !== a
                ? a
                : A.default.getName(s);
            })
            .replace(/<@&?(\d+)>/g, (e, t) => {
              let n = null != l ? C.default.getRole(l.id, t) : null;
              return null != n && null != n.name
                ? n.name
                : L.default.Messages.MESSAGE_TTS_DELETED_ROLE;
            })
            .replace(/<#(\d+)>/g, (e, t) => {
              let n = h.default.getChannel(t);
              return null == n
                ? e
                : (0, r.computeChannelName)(n, g.default, m.default);
            })
            .replace(/<a?:(\w+):(\d+)>/g, (e, t) =>
              "".concat(L.default.Messages.EMOJI, " ").concat(t)
            )
            .replace(/<\/([^\s]+?):(\d+)>/g, (e, t) => "/".concat(t))
            .replace(/<t:(\d+):([A-Z]|[a-z])>/g, (e, t, n) => {
              let a = o.TIMESTAMP_FORMATS[n],
                l = 1e3 * parseInt(t, 10),
                i = s(l);
              return null != a ? a(i) : i.format();
            });
        return null == a
          ? L.default.Messages.MESSAGE_TTS.format({ username: t, body: i })
          : L.default.Messages.MESSAGE_TTS_REPLY.format({
              username: t,
              body: i,
              replyUsername: a,
            });
      }
      function U() {
        if (!i.supported) return !1;
        let e = d.default.locale;
        if (null == y) {
          var t;
          y =
            null === (t = window.speechSynthesis) || void 0 === t
              ? void 0
              : t.getVoices();
        }
        let n = y.filter(
          t => t.lang === e || t.lang.slice(0, e.length) === e || !1
        );
        D = n.length > 0 ? n[0] : null;
      }
      async function G(e, t, n, a, s) {
        let l = i.createUtterance(e, n);
        null !== l &&
          (null == D && U(),
          t
            ? await (0, N.stopSpeaking)()
            : null == P || P.removeEventListener("end", N.stopSpeaking),
          l.addEventListener("end", N.stopSpeaking),
          null != a && l.addEventListener("start", a),
          null != s && l.addEventListener("end", s),
          (P = l),
          i.speakUtterance(l, D));
      }
      function j(e, t, n, a, s) {
        G(e, t, s, () => {
          (0, N.speakingMessage)(n, a);
        });
      }
      function w(e) {
        let { text: t, interrupt: n, maxLength: a, onStart: s, onEnd: l } = e;
        G(t, n, a, s, l);
      }
      function k() {
        return (
          null !== P && P.removeEventListener("end", N.stopSpeaking),
          i.cancelAll(),
          (P = null),
          !0
        );
      }
      function F(e) {
        var t, n, a;
        let { message: s, channel: l } = e,
          i =
            s.type === v.MessageTypes.REPLY
              ? u.default.getMessageByReference(s.messageReference)
              : null,
          r =
            (null == i ? void 0 : i.state) === u.ReferencedMessageState.LOADED
              ? null == i
                ? void 0
                : null === (t = i.message) || void 0 === t
                  ? void 0
                  : t.author
              : null,
          o =
            null != r
              ? null !==
                  (n = _.default.getNick(
                    l.guild_id,
                    null == r ? void 0 : r.id
                  )) && void 0 !== n
                ? n
                : A.default.getName(r)
              : null,
          d = l.getGuildId(),
          c =
            null !== (a = _.default.getNick(d, s.author.id)) && void 0 !== a
              ? a
              : A.default.getName(s.author),
          f = b(s.content, c, d, o);
        return j(f, !0, l.id, s.id), !0;
      }
      function B(e) {
        var t, n, a, s, l, i, r;
        let { channelId: o, message: u, optimistic: d } = e;
        if (d || I.default.isSelfDeaf()) return !1;
        let C = h.default.getChannel(o);
        if (null == C) return !1;
        let g = p.default.getChannelId(),
          N = E.default.getCurrentSidebarChannelId(g),
          R = o === g || o === N,
          L = c.EnableTTSCommand.getSetting() && u.tts && R,
          P = S.default.getTTSType(),
          D =
            (null === (t = u.author) || void 0 === t ? void 0 : t.id) !==
              f.default.getId() &&
            (P === v.TTSNotificationTypes.ALL_CHANNELS ||
              (P === v.TTSNotificationTypes.SELECTED_CHANNEL && R));
        if (
          (L || D) &&
          ((null === (n = u.author) || void 0 === n ? void 0 : n.id) == null ||
            !m.default.isBlocked(u.author.id))
        ) {
          if (M.indexOf(u.id) >= 0) return !1;
          M.unshift(u.id) > 10 && M.pop();
          let e = C.getGuildId();
          if (null != e && T.default.getMutedChannels(e).has(o)) return !1;
          let t =
              null !==
                (i =
                  null !==
                    (l = _.default.getNick(
                      e,
                      null === (a = u.author) || void 0 === a ? void 0 : a.id
                    )) && void 0 !== l
                    ? l
                    : A.default.getName(u.author)) && void 0 !== i
                ? i
                : "",
            n =
              u.type === v.MessageTypes.REPLY
                ? null === (s = u.referenced_message) || void 0 === s
                  ? void 0
                  : s.author
                : null,
            d =
              null != n
                ? null !==
                    (r = _.default.getNick(e, null == n ? void 0 : n.id)) &&
                  void 0 !== r
                  ? r
                  : A.default.getName(n)
                : null,
            c = b(u.content, t, e, d);
          j(c, !1, C.id, u.id, O.MAX_TTS_LENGTH);
        }
        return !1;
      }
      function H(e) {
        let { id: t, channelId: n } = e,
          a = R.default.currentMessage;
        return (
          null != a &&
          t === a.messageId &&
          n === a.channelId &&
          ((0, N.stopSpeaking)(), !0)
        );
      }
      function V() {
        I.default.isSelfDeaf() && i.cancelAll();
      }
      var Y = {
        init() {
          l.default.subscribe("SPEAK_TEXT", w),
            l.default.subscribe("SPEAK_MESSAGE", F),
            l.default.subscribe("STOP_SPEAKING", k),
            l.default.subscribe("MESSAGE_CREATE", B),
            l.default.subscribe("MESSAGE_DELETE", H),
            l.default.subscribe("AUDIO_TOGGLE_SELF_DEAF", V),
            l.default.subscribe("USER_SETTINGS_PROTO_UPDATE", U),
            l.default.subscribe("I18N_LOAD_SUCCESS", U);
        },
      };
    },
    555898: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          useCanCustomizeGuildCollectibleItem: function () {
            return l;
          },
        });
      var a = n("862205");
      let s = (0, a.createExperiment)({
        kind: "user",
        id: "2024-01_per_guild_pfx",
        label: "Per-guild Profile Effects / Avatar Decoration Experiment",
        defaultConfig: { isEnabled: !1 },
        treatments: [{ id: 1, label: "Enabled", config: { isEnabled: !0 } }],
      });
      function l(e) {
        let { location: t } = e;
        return s.useExperiment({ location: t }).isEnabled;
      }
    },
    250659: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var a = n("719923"),
        s = n("555898"),
        l = e => {
          let t = a.default.canUsePremiumGuildMemberProfile(e),
            n = (0, s.useCanCustomizeGuildCollectibleItem)({
              location: "useCanSeePerGuildCollectiblesCustomizationCoachmark",
            });
          return t && n;
        };
    },
    365114: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("151426"),
        l = n("369964"),
        i = n("565500"),
        r = n("38766"),
        o = n("782340"),
        u = n("203237"),
        d = () => {
          let e = (0, i.default)(),
            t = (0, r.default)({ guild: e });
          return (0, a.jsx)(l.default, {
            isPremiumFeature: !0,
            shouldUseHorizontalButtons: !0,
            artClassName: u.coachmarkArt,
            headerClassName: u.coachmarkHeader,
            onTryFeature: t,
            tryItText: o.default.Messages.CHECK_IT_OUT,
            header: o.default.Messages.GUILD_IDENTITY_PFX_COACHMARK_TITLE,
            body: o.default.Messages.GUILD_IDENTITY_PFX_COACHMARK_BODY,
            dismissibleContent:
              s.DismissibleContent
                .PER_GUILD_COLLECTIBLES_CUSTOMIZATION_COACHMARK,
            maxWidth: 320,
          });
        };
    },
    542789: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return p;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("77078"),
        l = n("913144"),
        i = n("316272"),
        r = n("575365"),
        o = n("299285"),
        u = n("824563"),
        d = n("27618"),
        c = n("697218"),
        f = n("599110"),
        E = n("713135"),
        h = n("49111"),
        _ = n("450484");
      let C = null;
      async function I(e) {
        var t, l, i, I;
        let S,
          m,
          p,
          {
            userId: T,
            section: g,
            guildId: A = h.ME,
            channelId: N,
            friendToken: R,
            autoFocusNote: O,
            analyticsLocation: v,
          } = e,
          L = c.default.getUser(T),
          M = E.default.getUserProfile(T);
        if (null == L) return;
        let P = u.default.getPrimaryActivity(T);
        null != P &&
          ((S = P.party),
          (m = P.assets),
          (p =
            null != P.application_id
              ? o.default.getApplication(P.application_id)
              : null));
        let D = u.default.getStatus(T),
          y = u.default.isMobileOnline(T),
          x = D;
        D === h.StatusTypes.ONLINE &&
          (x = y
            ? h.AnalyticsUserStatusTypes.ONLINE_MOBILE
            : h.AnalyticsUserStatusTypes.ONLINE_DESKTOP),
          (C = await (0, s.openModalLazy)(async () => {
            let { default: e } = await n.el("279286").then(n.bind(n, "279286"));
            return t =>
              (0, a.jsx)(e, {
                ...t,
                user: L,
                autoFocusNote: O,
                guildId: A,
                friendToken: R,
                initialSection: g,
                channelId: N,
              });
          })),
          f.default.track(h.AnalyticEvents.OPEN_MODAL, {
            type: "Profile Modal",
            guild_id: A !== h.ME ? A : null,
            channel_id: N,
            other_user_id: T,
            application_id:
              null !== (l = null == P ? void 0 : P.application_id) &&
              void 0 !== l
                ? l
                : null,
            application_name: null == P ? void 0 : P.name,
            sku_id:
              null !== (i = null == p ? void 0 : p.primarySkuId) && void 0 !== i
                ? i
                : null,
            is_friend: d.default.isFriend(T),
            has_images: !!(null !== (I = null == m ? void 0 : m.large_image) &&
            void 0 !== I
              ? I
              : null == m
                ? void 0
                : m.small_image),
            party_max:
              null == S
                ? void 0
                : null === (t = S.size) || void 0 === t
                  ? void 0
                  : t[1],
            party_id: null == S ? void 0 : S.id,
            party_platform: (0, _.isSpotifyParty)(null == S ? void 0 : S.id)
              ? h.PlatformTypes.SPOTIFY
              : null,
            game_platform: (0, r.default)(P),
            profile_user_status: x,
            profile_has_nitro_customization:
              (null == M ? void 0 : M.banner) != null,
            profile_has_profile_effect:
              (null == M ? void 0 : M.profileEffectId) != null,
            ...(null == v ? null : (0, f.expandLocation)(v)),
          });
      }
      function S() {
        null != C && (0, s.closeModal)(C), (C = null);
      }
      class m extends i.default {
        _initialize() {
          l.default.subscribe("USER_PROFILE_MODAL_OPEN", I),
            l.default.subscribe("USER_PROFILE_MODAL_CLOSE", S);
        }
        _terminate() {
          l.default.unsubscribe("USER_PROFILE_MODAL_OPEN", I),
            l.default.unsubscribe("USER_PROFILE_MODAL_CLOSE", S);
        }
      }
      var p = new m();
    },
    177632: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("759843"),
        i = n("65597"),
        r = n("77078"),
        o = n("327037"),
        u = n("428958"),
        d = n("330387"),
        c = n("476765"),
        f = n("49111"),
        E = n("782340"),
        h = n("955811");
      function _(e) {
        let { transitionState: t } = e,
          _ = (0, i.default)([d.default], () => d.default.getAction()),
          [C, I] = s.useState(!1),
          S = (0, c.useUID)();
        async function m() {
          if ((I(!0), _ === f.UserRequiredActions.AGREEMENTS)) {
            let e = await (0, o.acceptAgreements)();
            I(e);
          }
          return null;
        }
        return (
          (0, u.default)(
            {
              type: l.ImpressionTypes.VIEW,
              name: l.ImpressionNames.USER_AGREEMENTS,
              properties: { required_action: _ },
            },
            {},
            []
          ),
          (0, a.jsxs)(r.ModalRoot, {
            "aria-labelledby": S,
            transitionState: t,
            children: [
              (0, a.jsx)("div", { id: S }),
              (0, a.jsx)(r.ModalHeader, {
                separator: !1,
                children: (0, a.jsx)(r.Heading, {
                  variant: "heading-lg/semibold",
                  children: E.default.Messages.NEW_TERMS_TITLE,
                }),
              }),
              (0, a.jsxs)(r.ModalContent, {
                children: [
                  (0, a.jsx)(r.Text, {
                    variant: "text-md/normal",
                    children:
                      _ === f.UserRequiredActions.AGREEMENTS
                        ? E.default.Messages.TERMS_OF_SERVICE_UPDATE_03_27_2023_DESCRIPTION.format()
                        : null,
                  }),
                  (0, a.jsxs)("div", {
                    className: h.container,
                    children: [
                      (0, a.jsxs)("ul", {
                        className: h.links,
                        children: [
                          (0, a.jsx)("li", {
                            children:
                              E.default.Messages.TERMS_OF_SERVICE.format({
                                url: f.MarketingURLs.TERMS,
                              }),
                          }),
                          (0, a.jsx)("li", {
                            children:
                              E.default.Messages.PAID_SERVICES_TERMS.format({
                                url: f.MarketingURLs.PAID_TERMS,
                              }),
                          }),
                          (0, a.jsx)("li", {
                            children: E.default.Messages.PRIVACY_POLICY.format({
                              url: f.MarketingURLs.PRIVACY,
                            }),
                          }),
                          (0, a.jsx)("li", {
                            children:
                              E.default.Messages.COMMUNITY_GUIDELINES.format({
                                url: f.MarketingURLs.GUIDELINES,
                              }),
                          }),
                        ],
                      }),
                      (0, a.jsx)("img", {
                        className: h.image,
                        alt: "",
                        src: n("275974"),
                      }),
                    ],
                  }),
                  (0, a.jsx)(r.Text, {
                    variant: "text-md/normal",
                    className: h.agreementDescription,
                    children:
                      E.default.Messages.TERMS_OF_SERVICE_AGREEMENT_DESCRIPTION,
                  }),
                ],
              }),
              (0, a.jsx)(r.ModalFooter, {
                children: (0, a.jsx)(r.Button, {
                  submitting: C,
                  onClick: m,
                  color: r.Button.Colors.GREEN,
                  children: E.default.Messages.AGREE,
                }),
              }),
            ],
          })
        );
      }
    },
    84124: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return C;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("77078"),
        l = n("913144"),
        i = n("892313"),
        r = n("61928"),
        o = n("697218"),
        u = n("708169"),
        d = n("668596"),
        c = n("197881"),
        f = n("177632"),
        E = n("49111"),
        h = n("843455");
      let _ = "AGREEMENTS_MODAL_KEY";
      var C = {
        init() {
          l.default.subscribe("CONNECTION_OPEN", this.handleRequiredAction),
            l.default.subscribe(
              "USER_REQUIRED_ACTION_UPDATE",
              this.handleRequiredAction
            ),
            l.default.subscribe(
              "CURRENT_USER_UPDATE",
              this.handleCurrentUserUpdate
            ),
            l.default.subscribe("LOGOUT", this.handleLogout);
        },
        handleRequiredAction(e) {
          let t = e.requiredAction;
          !c.ProcessArgs.isDisallowPopupsSet() &&
            (null == o.default.getCurrentUser()
              ? ((0, u.closeFullScreenLayer)("verification"),
                (0, s.hasModalOpen)(_) && (0, s.closeModal)(_))
              : t === E.UserRequiredActions.REQUIRE_CAPTCHA ||
                  t === E.UserRequiredActions.REQUIRE_VERIFIED_EMAIL ||
                  t === E.UserRequiredActions.REQUIRE_VERIFIED_PHONE ||
                  t === E.UserRequiredActions.REQUIRE_REVERIFIED_PHONE ||
                  t ===
                    E.UserRequiredActions
                      .REQUIRE_REVERIFIED_EMAIL_OR_REVERIFIED_PHONE ||
                  t ===
                    E.UserRequiredActions
                      .REQUIRE_VERIFIED_EMAIL_OR_REVERIFIED_PHONE ||
                  i.default.isEmailReverification(t)
                ? (0, u.openFullScreenLayer)(() => (0, a.jsx)(r.default, {}), {
                    layerKey: "verification",
                    Layer: d.default,
                  })
                : t === E.UserRequiredActions.AGREEMENTS
                  ? (0, s.openModal)(e => (0, a.jsx)(f.default, { ...e }), {
                      modalKey: _,
                      onCloseRequest: h.NOOP_NULL,
                    })
                  : null == t &&
                    ((0, u.closeFullScreenLayer)("verification"),
                    (0, s.hasModalOpen)(_) && (0, s.closeModal)(_)));
        },
        handleLogout() {
          (0, u.closeFullScreenLayer)("verification");
        },
        handleCurrentUserUpdate(e) {
          let { user: t } = e;
          t.verified && (0, s.closeModal)(r.EMAIL_VERIFICATION_MODAL_KEY);
        },
      };
    },
    389434: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          fetchEmailSettings: function () {
            return u;
          },
          updateEmailSetting: function () {
            return d;
          },
          updateMarketingEmailSettings: function () {
            return c;
          },
        }),
        n("808653");
      var a = n("759843"),
        s = n("627929"),
        l = n("913144"),
        i = n("840707"),
        r = n("853994"),
        o = n("49111");
      async function u() {
        try {
          let e = await i.default.get({
            url: o.Endpoints.EMAIL_SETTINGS,
            trackedActionData: {
              event: a.NetworkActionNames.EMAIL_SETTINGS_FETCH,
              properties: e => {
                var t;
                let n =
                  null == e
                    ? void 0
                    : null === (t = e.body) || void 0 === t
                      ? void 0
                      : t.initialized;
                return (0, s.exact)({ initialized: n });
              },
            },
          });
          l.default.dispatch({
            type: "EMAIL_SETTINGS_FETCH_SUCCESS",
            settings: e.body,
          });
        } catch {
          l.default.dispatch({ type: "EMAIL_SETTINGS_FETCH_FAILURE" });
        }
      }
      async function d(e, t) {
        l.default.dispatch({
          type: "EMAIL_SETTINGS_UPDATE",
          updates: { [e]: t },
        });
        try {
          let n = await i.default.patch({
            url: o.Endpoints.EMAIL_SETTINGS,
            body: { settings: { categories: { [e]: t } } },
            trackedActionData: {
              event: a.NetworkActionNames.EMAIL_SETTINGS_UPDATE,
              properties: { category: e, value: t },
            },
          });
          l.default.dispatch({
            type: "EMAIL_SETTINGS_UPDATE_SUCCESS",
            settings: n.body,
          });
        } catch (e) {
          l.default.dispatch({ type: "EMAIL_SETTINGS_UPDATE_FAILURE" });
        }
      }
      async function c() {
        let e = r.MarketingEmailCategories.reduce(
          (e, t) => ({ ...e, [t]: !1 }),
          {}
        );
        l.default.dispatch({ type: "EMAIL_SETTINGS_UPDATE", updates: e });
        try {
          let t = await i.default.patch({
            url: o.Endpoints.EMAIL_SETTINGS,
            body: { settings: { categories: e } },
            trackedActionData: {
              event: a.NetworkActionNames.EMAIL_SETTINGS_UPDATE,
              properties: { category: "marketing", value: !1 },
            },
          });
          l.default.dispatch({
            type: "EMAIL_SETTINGS_UPDATE_SUCCESS",
            settings: t.body,
          });
        } catch (e) {
          l.default.dispatch({ type: "EMAIL_SETTINGS_UPDATE_FAILURE" });
        }
      }
    },
    853994: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          EMAILS_SUBSECTION: function () {
            return i;
          },
          EmailCategories: function () {
            return s;
          },
          MarketingEmailCategories: function () {
            return r;
          },
          EmailCategoriesList: function () {
            return o;
          },
        });
      var a,
        s,
        l = n("782340");
      let i = "emails";
      ((a = s || (s = {})).COMMUNICATION = "communication"),
        (a.SOCIAL = "social"),
        (a.TIPS = "tips"),
        (a.RECOMMENDATIONS_AND_EVENTS = "recommendations_and_events"),
        (a.UPDATES_AND_ANNOUNCEMENTS = "updates_and_announcements"),
        (a.FAMILY_CENTER_DIGEST = "family_center_digest");
      let r = [
          "tips",
          "recommendations_and_events",
          "updates_and_announcements",
        ],
        o = [
          {
            category: "communication",
            label: () =>
              l.default.Messages.USER_SETTINGS_EMAIL_CATEGORY_COMMUNICATION,
            subLabel: () =>
              l.default.Messages
                .USER_SETTINGS_EMAIL_CATEGORY_COMMUNICATION_SUBLABEL,
          },
          {
            category: "social",
            label: () => l.default.Messages.USER_SETTINGS_EMAIL_CATEGORY_SOCIAL,
            subLabel: () =>
              l.default.Messages.USER_SETTINGS_EMAIL_CATEGORY_SOCIAL_SUBLABEL,
          },
          {
            category: "updates_and_announcements",
            label: () =>
              l.default.Messages
                .USER_SETTINGS_EMAIL_CATEGORY_UPDATES_AND_ANNOUNCEMENTS,
            subLabel: () =>
              l.default.Messages
                .USER_SETTINGS_EMAIL_CATEGORY_UPDATES_AND_ANNOUNCEMENTS_SUBLABEL,
          },
          {
            category: "tips",
            label: () => l.default.Messages.USER_SETTINGS_EMAIL_CATEGORY_TIPS,
            subLabel: () =>
              l.default.Messages.USER_SETTINGS_EMAIL_CATEGORY_TIPS_SUBLABEL,
          },
          {
            category: "recommendations_and_events",
            label: () =>
              l.default.Messages
                .USER_SETTINGS_EMAIL_CATEGORY_RECOMMENDATIONS_AND_EVENTS,
            subLabel: () =>
              l.default.Messages
                .USER_SETTINGS_EMAIL_CATEGORY_RECOMMENDATIONS_AND_EVENTS_SUBLABEL,
          },
        ];
    },
    521128: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var a = n("446674"),
        s = n("913144");
      let l = {},
        i = null;
      function r() {
        (l = {}), (i = null);
      }
      class o extends a.default.Store {
        getEmailSettings() {
          return { categories: l, initialized: i };
        }
      }
      o.displayName = "EmailSettingsStore";
      var u = new o(s.default, {
        CONNECTION_OPEN: r,
        LOGOUT: r,
        EMAIL_SETTINGS_FETCH_SUCCESS: function (e) {
          let { settings: t } = e;
          (l = t.categories), (i = t.initialized);
        },
        EMAIL_SETTINGS_UPDATE_SUCCESS: function (e) {
          let { settings: t } = e;
          l = t.categories;
        },
        EMAIL_SETTINGS_UPDATE: function (e) {
          let { updates: t } = e;
          l = { ...l, ...t };
        },
      });
    },
    647627: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return _;
          },
        }),
        n("222007"),
        n("424973");
      var a = n("917351"),
        s = n.n(a),
        l = n("446674"),
        i = n("713349"),
        r = n("95410"),
        o = n("299039"),
        u = n("116949"),
        d = n("397336"),
        c = n("49111");
      let f = "selectedChannelGuildFrecency";
      function E(e) {
        var t;
        let n;
        ((t = n || (n = {})).IMAGE = "IMAGE"), (t.VIDEO = "VIDEO");
        let { state: a } = l.default.PersistedStore.migrateAndReadStoreState(
          "GIFFavoritesStore",
          [
            e =>
              null == e
                ? { favorites: [], timesFavorited: 0 }
                : Array.isArray(e)
                  ? { favorites: e, timesFavorited: 0 }
                  : e,
            e =>
              Array.isArray(e.favorites)
                ? e
                : { favorites: [], timesFavorited: 0 },
          ]
        );
        return null == a || 0 === a.favorites.length
          ? []
          : a.favorites.map((t, n) => {
              let s = i.FavoriteGIF.create();
              return (
                (s.format =
                  "IMAGE" === t.format
                    ? i.GIFType.IMAGE
                    : "VIDEO" === t.format
                      ? i.GIFType.VIDEO
                      : i.GIFType.NONE),
                (s.src = t.src),
                (s.width = t.width),
                (s.height = t.height),
                (s.order = a.favorites.length - n + e),
                { url: t.url, favorite: s }
              );
            });
      }
      let h = [
        {
          version: 2,
          run(e) {
            let t = E(1);
            if (0 === t.length) return !1;
            for (let { url: n, favorite: a } of (null == e.favoriteGifs &&
              (e.favoriteGifs = i.FavoriteGIFs.create()),
            (e.favoriteGifs.gifs = {}),
            t))
              e.favoriteGifs.gifs[n] = a;
            return (e.favoriteGifs.hideTooltip = t.length > 2), !0;
          },
          cleanup() {},
        },
        {
          version: 3,
          run(e) {
            function t() {
              return { usageHistory: {}, favorites: [] };
            }
            let { state: n } =
              l.default.PersistedStore.migrateAndReadStoreState(
                "StickersPersistedStore",
                [
                  e => (null == e || 0 === Object.keys(e).length ? t() : e),
                  e =>
                    null == e || 0 === Object.keys(e).length
                      ? t()
                      : (null == e.favorites && (e.favorites = []), e),
                ]
              );
            if (null == n) return !1;
            let a = !1;
            return (
              n.favorites.length > 0 &&
                ((e.favoriteStickers = i.FavoriteStickers.create()),
                (e.favoriteStickers.stickerIds = s
                  .uniq(n.favorites)
                  .slice(0, d.MAX_FAVORITES)),
                (a = !0)),
              s.size(n.usageHistory) > 0 &&
                ((e.stickerFrecency = i.StickerFrecency.create()),
                (e.stickerFrecency.stickers = (0, u.serializeUsageHistory)(
                  n.usageHistory,
                  100
                )),
                (a = !0)),
              a
            );
          },
          cleanup() {
            r.default.remove("StickersPersistedStore");
          },
        },
        {
          version: 4,
          run(e) {
            let { state: t } =
              l.default.PersistedStore.migrateAndReadStoreState("EmojiStore", [
                () => ({
                  usageHistory: r.default.get("EmojiUsageHistory") || {},
                }),
              ]);
            if (null == t) return !1;
            let n = !1;
            return (
              null != t.favorites &&
                t.favorites.length > 0 &&
                ((e.favoriteEmojis = i.FavoriteEmojis.create()),
                (e.favoriteEmojis.emojis = s
                  .uniq(t.favorites)
                  .slice(0, d.MAX_FAVORITES)),
                (n = !0)),
              s.size(t.usageHistory) > 0 &&
                ((e.emojiFrecency = i.EmojiFrecency.create()),
                (e.emojiFrecency.emojis = (0, u.serializeUsageHistory)(
                  t.usageHistory,
                  100
                )),
                (n = !0)),
              n
            );
          },
          cleanup() {
            r.default.remove("EmojiStore"),
              r.default.remove("EmojiUsageHistory"),
              r.default.remove("EmojiDiversitySurrogate");
          },
        },
        {
          version: 6,
          run(e) {
            null == e.favoriteGifs &&
              (e.favoriteGifs = i.FavoriteGIFs.create()),
              null == e.favoriteGifs.gifs && (e.favoriteGifs.gifs = {});
            let t = E(1);
            if (0 === t.length) return !1;
            s(e.favoriteGifs.gifs)
              .values()
              .sortBy("order")
              .forEach((e, n) => (e.order = t.length + 1 + n));
            let n = i.FavoriteGIFs.toBinary(e.favoriteGifs).length,
              a = 0;
            for (let { url: s, favorite: l } of t) {
              if (((l.order = t.length - a), a++, s in e.favoriteGifs.gifs)) {
                e.favoriteGifs.gifs[s].order = l.order;
                continue;
              }
              let r = i.FavoriteGIF.toBinary(l).length + s.length + 7;
              !(n + r > d.MAX_FAVORITE_GIFS_SIZE) &&
                ((n += r), (e.favoriteGifs.gifs[s] = l));
            }
            for (
              n = i.FavoriteGIFs.toBinary(e.favoriteGifs).length;
              n > d.MAX_FAVORITE_GIFS_SIZE;

            ) {
              let t = 0;
              for (let n in e.favoriteGifs.gifs)
                if ((delete e.favoriteGifs.gifs[n], ++t >= 10)) break;
              n = i.FavoriteGIFs.toBinary(e.favoriteGifs).length;
            }
            return !0;
          },
          cleanup() {},
        },
        {
          version: 7,
          run(e) {
            let { state: t } =
              l.default.PersistedStore.migrateAndReadStoreState(
                "ApplicationCommandFrecency",
                []
              );
            if (null == t) return !1;
            let n = !1;
            return (
              s.size(t.usageHistory) > 0 &&
                ((e.applicationCommandFrecency =
                  i.ApplicationCommandFrecency.create()),
                (e.applicationCommandFrecency.applicationCommands = (0,
                u.serializeUsageHistory)(t.usageHistory, 500)),
                (n = !0)),
              n
            );
          },
          cleanup() {
            r.default.remove("ApplicationCommandFrecency");
          },
        },
        {
          version: 8,
          run(e) {
            let { state: t } =
              l.default.PersistedStore.migrateAndReadStoreState(
                "SoundboardFavoriteStore",
                []
              );
            if (null == t) return !1;
            let n = !1;
            return (
              s.size(t.favoriteSounds) > 0 &&
                ((e.favoriteSoundboardSounds =
                  i.FavoriteSoundboardSounds.create()),
                o.default.keys(t.favoriteSounds).forEach(n => {
                  let a = new Set(t.favoriteSounds[n]);
                  a.forEach(t => {
                    var n;
                    null === (n = e.favoriteSoundboardSounds) ||
                      void 0 === n ||
                      n.soundIds.push(t);
                  });
                }),
                (n = !0)),
              n
            );
          },
          cleanup() {
            r.default.remove("SoundboardFavoriteStore");
          },
        },
        {
          version: 9,
          run(e) {
            let t = r.default.get(f);
            if (null == t) return !1;
            for (let e in t) !c.ID_REGEX.test(e) && delete t[e];
            return (
              (e.guildAndChannelFrecency = i.GuildAndChannelFrecency.create()),
              (e.guildAndChannelFrecency.guildAndChannels = (0,
              u.serializeUsageHistory)(t, 100)),
              !0
            );
          },
          cleanup() {
            r.default.remove(f);
          },
        },
      ];
      var _ = h;
    },
    243315: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return C;
          },
        }),
        n("311790"),
        n("477657"),
        n("811875"),
        n("90301"),
        n("652153"),
        n("28797"),
        n("817884"),
        n("597349"),
        n("667536"),
        n("690341");
      var a = n("446674"),
        s = n("151426"),
        l = n("750028"),
        i = n("95410"),
        r = n("139321"),
        o = n("42203"),
        u = n("674268"),
        d = n("116949"),
        c = n("49111"),
        f = n("583374");
      function E(e, t) {
        let n = !1;
        return (
          null == e.userContent &&
            (e.userContent = { dismissedContents: new Uint8Array() }),
          null == e.userContent.dismissedContents &&
            (e.userContent.dismissedContents = new Uint8Array()),
          !(0, u.hasBit)(e.userContent.dismissedContents, t) &&
            ((e.userContent.dismissedContents = (0, u.addBit)(
              e.userContent.dismissedContents,
              t
            )),
            (n = !0)),
          n
        );
      }
      function h(e, t, n) {
        let a = r.HotspotStore.hasHiddenHotspot(t);
        return !!a && E(e, n);
      }
      let _ = [
        {
          version: 2,
          run(e) {
            var t, n, a;
            let l;
            if (
              (((a = l || (l = {})).Mentions = "Recent Mentions"),
              (a.Unreads = "Inbox"),
              null != e.inbox)
            )
              return !1;
            let r = !1,
              u = s.InboxSettings.create();
            (e.inbox = u),
              i.default.get("seenInboxTutorial", !1) &&
                ((u.viewedTutorial = !0), (r = !0));
            let c = i.default.get("recentsButtonTab2");
            null != c &&
              ((u.currentTab =
                "Recent Mentions" === c
                  ? s.InboxTab.MENTIONS
                  : s.InboxTab.UNREADS),
              (r = !0));
            let f =
              null !==
                (t = i.default.get("unread-messages-collapsed-channels")) &&
              void 0 !== t
                ? t
                : {};
            for (let t in f) {
              if (!f[t]) continue;
              let a = o.default.getChannel(t);
              null != a &&
                ((r = !0),
                (0, d.mutateUserChannelSettings)(
                  e,
                  null !== (n = a.guild_id) && void 0 !== n ? n : "0",
                  a.id,
                  e => {
                    e.collapsedInInbox = !0;
                  }
                ));
            }
            return r;
          },
          cleanup() {
            i.default.remove("seenInboxTutorial"),
              i.default.remove("recentsButtonTab2"),
              i.default.remove("unread-messages-collapsed-channels");
          },
        },
        {
          version: 3,
          run(e) {
            let { state: t } =
              a.default.PersistedStore.migrateAndReadStoreState("EmojiStore", [
                () => ({
                  diversitySurrogate:
                    i.default.get("EmojiDiversitySurrogate") || "",
                }),
              ]);
            if (null == t) return !1;
            let n = !1;
            return (
              null != t.diversitySurrogate &&
                "" !== t.diversitySurrogate &&
                (null == e.textAndImages &&
                  (e.textAndImages = s.TextAndImagesSettings.create()),
                null == e.textAndImages.diversitySurrogate &&
                  (e.textAndImages.diversitySurrogate = l.StringValue.create()),
                (e.textAndImages.diversitySurrogate.value =
                  t.diversitySurrogate),
                (n = !0)),
              n
            );
          },
          cleanup() {},
        },
        {
          version: 4,
          run(e) {
            let t = !1,
              n =
                !0 === i.default.get("HAS_SEEN_HUB_UPSELL") ||
                r.HotspotStore.hasHiddenHotspot(
                  r.HotspotLocations.HUB_SECOND_EMAIL_CONNECTION_UPSELL
                );
            return n && (t = E(e, s.DismissibleContent.HUB_WAITLIST_UPSELL)), t;
          },
          cleanup() {
            i.default.remove("HAS_SEEN_HUB_UPSELL");
          },
        },
        {
          version: 5,
          run(e) {
            var t, n, a, r, o, u, d;
            let c = !1;
            (e.textAndImages =
              null !== (t = e.textAndImages) && void 0 !== t
                ? t
                : s.TextAndImagesSettings.create()),
              (e.notifications =
                null !== (n = e.notifications) && void 0 !== n
                  ? n
                  : s.NotificationSettings.create()),
              (e.privacy =
                null !== (a = e.privacy) && void 0 !== a
                  ? a
                  : s.PrivacySettings.create()),
              (e.voiceAndVideo =
                null !== (r = e.voiceAndVideo) && void 0 !== r
                  ? r
                  : s.VoiceAndVideoSettings.create()),
              (e.gameLibrary =
                null !== (o = e.gameLibrary) && void 0 !== o
                  ? o
                  : s.GameLibrarySettings.create()),
              (e.debug =
                null !== (u = e.debug) && void 0 !== u
                  ? u
                  : s.DebugSettings.create());
            let f =
              null !== (d = i.default.get("UserSettingsStore")) && void 0 !== d
                ? d
                : {};
            return (
              "boolean" == typeof f.useRichChatTextBox &&
                ((e.textAndImages.useRichChatInput = l.BoolValue.create({
                  value: f.useRichChatTextBox,
                })),
                (c = !0)),
              "string" == typeof f.renderSpoilers &&
                ((e.textAndImages.renderSpoilers = l.StringValue.create({
                  value: f.renderSpoilers,
                })),
                (c = !0)),
              "boolean" == typeof f.useThreadSidebar &&
                ((e.textAndImages.useThreadSidebar = l.BoolValue.create({
                  value: f.useThreadSidebar,
                })),
                (c = !0)),
              "boolean" == typeof f.showInAppNotifications &&
                ((e.notifications.showInAppNotifications = l.BoolValue.create({
                  value: f.showInAppNotifications,
                })),
                (c = !0)),
              f.emojiPickerCollapsedSections instanceof Array &&
                ((e.textAndImages.emojiPickerCollapsedSections =
                  f.emojiPickerCollapsedSections),
                (c = !0)),
              f.stickerPickerCollapsedSections instanceof Array &&
                ((e.textAndImages.stickerPickerCollapsedSections =
                  f.stickerPickerCollapsedSections),
                (c = !0)),
              "boolean" == typeof f.viewImageDescriptions &&
                ((e.textAndImages.viewImageDescriptions = l.BoolValue.create({
                  value: f.viewImageDescriptions,
                })),
                (c = !0)),
              "boolean" == typeof f.showCommandSuggestions &&
                ((e.textAndImages.showCommandSuggestions = l.BoolValue.create({
                  value: f.showCommandSuggestions,
                })),
                (c = !0)),
              "boolean" == typeof f.alwaysPreviewVideo &&
                ((e.voiceAndVideo.alwaysPreviewVideo = l.BoolValue.create({
                  value: f.alwaysPreviewVideo,
                })),
                (c = !0)),
              "boolean" == typeof f.notifyFriendsOnGoLive &&
                ((e.notifications.notifyFriendsOnGoLive = l.BoolValue.create({
                  value: f.notifyFriendsOnGoLive,
                })),
                (c = !0)),
              "boolean" == typeof f.installShortcutDesktop &&
                ((e.gameLibrary.installShortcutDesktop = l.BoolValue.create({
                  value: f.installShortcutDesktop,
                })),
                (c = !0)),
              "boolean" == typeof f.installShortcutStartMenu &&
                ((e.gameLibrary.installShortcutStartMenu = l.BoolValue.create({
                  value: f.installShortcutStartMenu,
                })),
                (c = !0)),
              "boolean" == typeof f.allowActivityPartyPrivacyFriends &&
                ((e.privacy.allowActivityPartyPrivacyFriends =
                  l.BoolValue.create({
                    value: f.allowActivityPartyPrivacyFriends,
                  })),
                (c = !0)),
              "boolean" == typeof f.allowActivityPartyPrivacyVoiceChannel &&
                ((e.privacy.allowActivityPartyPrivacyVoiceChannel =
                  l.BoolValue.create({
                    value: f.allowActivityPartyPrivacyVoiceChannel,
                  })),
                (c = !0)),
              "boolean" == typeof f.rtcPanelShowVoiceStates &&
                ((e.debug.rtcPanelShowVoiceStates = l.BoolValue.create({
                  value: f.rtcPanelShowVoiceStates,
                })),
                (c = !0)),
              c
            );
          },
          cleanup() {},
        },
        {
          version: 7,
          run: e =>
            h(
              e,
              r.HotspotLocations.APPLICATION_COMMAND_TOOLTIP,
              s.DismissibleContent.APPLICATION_COMMAND_TOOLTIP
            ),
          cleanup() {},
        },
        {
          version: 8,
          run: e =>
            h(
              e,
              r.HotspotLocations.CHANNEL_BANNER_MEMBER_LIST_NOTICE,
              s.DismissibleContent.CHANNELINFO_CHANNELBANNER_NOTICE
            ),
          cleanup() {},
        },
        {
          version: 9,
          run: e => (
            r.HotspotStore.hasHiddenHotspot(
              r.HotspotLocations.MULTI_ACCOUNT_TOOLTIP
            ) && i.default.set(f.MULTIACCOUNT_TOOLTIP_SEEN_KEY, "true"),
            h(
              e,
              r.HotspotLocations.MULTI_ACCOUNT_TOOLTIP,
              s.DismissibleContent.ACCOUNT_MULTIACCOUNT_TOOLTIP
            )
          ),
          cleanup() {},
        },
        {
          version: 10,
          run(e) {
            var t;
            let n = h(
                e,
                r.HotspotLocations.HUB_LINK_CHANNEL_NOTICE,
                s.DismissibleContent.CHANNEL_NOTICE_HUBLINK
              ),
              a =
                null !== (t = i.default.get("channelNotices")) && void 0 !== t
                  ? t
                  : {};
            return (
              !1 === a[c.ChannelNoticeTypes.INVITE] &&
                E(e, s.DismissibleContent.CHANNEL_NOTICE_INVITE) &&
                (n = !0),
              !1 === a[c.ChannelNoticeTypes.QUICKSWITCHER] &&
                E(e, s.DismissibleContent.CHANNEL_NOTICE_QUICKSWITCHER) &&
                (n = !0),
              !1 === a[c.ChannelNoticeTypes.GUILD_BOOSTING] &&
                E(
                  e,
                  s.DismissibleContent.CHANNEL_NOTICE_PREMIUM_GUILD_SUBSCRIPTION
                ) &&
                (n = !0),
              n
            );
          },
          cleanup() {
            i.default.remove("channelNotices");
          },
        },
        {
          version: 11,
          run(e) {
            let t = !1;
            return (
              h(
                e,
                r.HotspotLocations.GUILD_EVENT_UPSELL,
                s.DismissibleContent.GUILD_HEADER_EVENT_UPSELL
              ) && (t = !0),
              h(
                e,
                r.HotspotLocations.PREMIUM_PROGRESS_BAR_GUILD_HEADER_TOOLTIP,
                s.DismissibleContent.GUILD_HEADER_PREMIUM_GUILD_PROGRESS
              ) && (t = !0),
              h(
                e,
                r.HotspotLocations.ANIMATED_GUILD_BANNER_GUILD_HEADER_TOOLTIP,
                s.DismissibleContent.GUILD_HEADER_ANIMATED_GUILD_BANNER
              ) && (t = !0),
              t
            );
          },
          cleanup() {},
        },
        {
          version: 12,
          run(e) {
            let t = !1;
            return (
              i.default.get("hideNag") &&
                E(e, s.DismissibleContent.NAGBAR_NOTICE_DOWNLOAD) &&
                (t = !0),
              i.default.get("hideConnectSpotify") &&
                E(e, s.DismissibleContent.NAGBAR_NOTICE_CONNECT_SPOTIFY) &&
                (t = !0),
              i.default.get("hideConnectPlayStation") &&
                E(e, s.DismissibleContent.NAGBAR_NOTICE_CONNECT_PLAYSTATION) &&
                (t = !0),
              i.default.get("hideMFASMSNotice") &&
                E(e, s.DismissibleContent.NAGBAR_NOTICE_MFA_SMS_BACKUP) &&
                (t = !0),
              t
            );
          },
          cleanup() {
            i.default.remove("hideNag"),
              i.default.remove("hideConnectSpotify"),
              i.default.remove("hideConnectPlayStation"),
              i.default.remove("hideMFASMSNotice");
          },
        },
        {
          version: 13,
          run(e) {
            let t = !1;
            return (
              i.default.get("hidePremiumPromo") &&
                E(e, s.DismissibleContent.NAGBAR_NOTICE_PREMIUM_PROMO) &&
                (t = !0),
              i.default.get("hidePremiumTier2TrialEnding") &&
                E(
                  e,
                  s.DismissibleContent
                    .NAGBAR_NOTICE_PREMIUM_TIER_TWO_TRIAL_ENDING
                ) &&
                (t = !0),
              i.default.get("hidePremiumReactivateNotice") &&
                E(e, s.DismissibleContent.NAGBAR_NOTICE_PREMIUM_REACTIVATE) &&
                (t = !0),
              h(
                e,
                r.HotspotLocations.INVITE_SPLASH_GUILD_HEADER_TOOLTIP,
                s.DismissibleContent.GUILD_HEADER_INVITE_SPLASH
              ) && (t = !0),
              t
            );
          },
          cleanup() {
            i.default.remove("hidePremiumPromo"),
              i.default.remove("hidePremiumTier2TrialEnding"),
              i.default.remove("hidePremiumReactivateNotice");
          },
        },
        {
          version: 14,
          run: e =>
            h(
              e,
              r.HotspotLocations.ACTIVITY_BEB_TUTORIAL,
              s.DismissibleContent.ACTIVITIES_TUTORIAL_COACH_MARK
            ),
          cleanup() {},
        },
        {
          version: 15,
          run: e =>
            h(
              e,
              r.HotspotLocations.NOW_PLAYING_CONSENT_CARD,
              s.DismissibleContent.NOW_PLAYING_CONSENT_CARD
            ),
          cleanup() {},
        },
        {
          version: 16,
          run(e) {
            let t = i.default.get("PromotionsPersistedStore");
            if (null == t) return !1;
            let n = t._state.lastDismissedOutboundPromotionStartDate;
            return (
              null != n &&
              (null == e.userContent &&
                (e.userContent = s.UserContentSettings.create()),
              null == e.userContent.lastDismissedOutboundPromotionStartDate) &&
              ((e.userContent.lastDismissedOutboundPromotionStartDate =
                l.StringValue.create({ value: n })),
              !0)
            );
          },
          cleanup() {},
        },
        {
          version: 17,
          run(e) {
            let { state: t } =
              a.default.PersistedStore.migrateAndReadStoreState(
                "ExpressionSuggestionsPersistedStore",
                null
              );
            if (null == t) return !1;
            let n = t.expressionSuggestionsEnabled;
            return (
              null != n &&
              (null == e.textAndImages &&
                (e.textAndImages = s.TextAndImagesSettings.create()),
              null == e.textAndImages.expressionSuggestionsEnabled) &&
              ((e.textAndImages.expressionSuggestionsEnabled =
                l.BoolValue.create({ value: n })),
              !0)
            );
          },
          cleanup() {
            i.default.remove("ExpressionSuggestionsPersistedStore");
          },
        },
        {
          version: 18,
          run(e) {
            let t = !1;
            return (
              h(
                e,
                r.HotspotLocations.GUILD_DELETE_FEEDBACK,
                s.DismissibleContent.GUILD_DELETE_FEEDBACK
              ) && (t = !0),
              h(
                e,
                r.HotspotLocations.GUILD_LEAVE_FEEDBACK,
                s.DismissibleContent.GUILD_LEAVE_FEEDBACK
              ) && (t = !0),
              t
            );
          },
          cleanup() {},
        },
        {
          version: 19,
          run(e) {
            var t;
            let n = !1,
              a =
                null !== (t = i.default.get("forumHelperCardStorageKey")) &&
                void 0 !== t &&
                t;
            return (
              a && (n = E(e, s.DismissibleContent.FORUM_CHANNEL_HELPER_CARD)), n
            );
          },
          cleanup() {
            i.default.remove("forumHelperCardStorageKey");
          },
        },
      ];
      var C = _;
    },
    392011: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        });
      var a = n("917351"),
        s = n.n(a),
        l = n("913144"),
        i = n("647627"),
        r = n("243315"),
        o = n("275877"),
        u = n("872173"),
        d = n("374363"),
        c = n("397336"),
        f = {
          init() {
            (o.default[c.UserSettingsTypes.PRELOADED_USER_SETTINGS] =
              r.default),
              (o.default[c.UserSettingsTypes.FRECENCY_AND_FAVORITES_SETTINGS] =
                i.default),
              l.default.subscribe("CONNECTION_OPEN", E),
              l.default.subscribe("USER_SETTINGS_PROTO_ENQUEUE_UPDATE", h),
              l.default.subscribe("USER_SETTINGS_PROTO_LOAD_IF_NECESSARY", _),
              l.default.subscribe("APP_STATE_UPDATE", C);
          },
        };
      function E() {
        let e = d.default.getFullState(),
          t = e[c.UserSettingsTypes.PRELOADED_USER_SETTINGS];
        t.editInfo.triggeredMigrations &&
          u.PreloadedUserSettingsActionCreators.markDirtyFromMigration(
            t.proto,
            t.editInfo.cleanupFuncs
          ),
          s.forEach(u.UserSettingsActionCreatorsByType, (t, n) => {
            let a = e[Number(n)];
            null != a.editInfo.offlineEditDataVersion &&
              null != a.editInfo.protoToSave &&
              t.scheduleSaveFromOfflineEdit();
          });
      }
      function h(e) {
        let {
          settings: { proto: t, type: n },
          delaySeconds: a,
          jitter: s,
        } = e;
        (0, u.UserSettingsActionCreatorsByType)[n].markDirty(t, {
          delaySeconds: a,
          jitter: s,
        });
      }
      function _(e) {
        let { settingsType: t } = e;
        (0, u.UserSettingsActionCreatorsByType)[t].loadIfNecessary();
      }
      function C(e) {
        let { state: t } = e;
        ("inactive" === t || "background" === t) &&
          s.forEach(u.UserSettingsActionCreatorsByType, (e, t) => {
            let n = d.default.getFullState()[Number(t)];
            null != n.editInfo.timeout &&
              (e.logger.log("Triggering persistChanges due to AppStateUpdate"),
              e.persistChanges());
          });
      }
    },
    933422: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("393414"),
        i = n("5667"),
        r = n("599110"),
        o = n("701909"),
        u = n("568456"),
        d = n("49111"),
        c = n("994428"),
        f = n("782340"),
        E = n("476985"),
        h = e => {
          let { markAsDismissed: t } = e;
          return (
            s.useEffect(() => {
              r.default.track(d.AnalyticEvents.DM_SAFETY_COACHMARK_ACTION, {
                action: u.DMSafetyCoachmarkActions.VIEW,
              });
            }, []),
            (0, a.jsx)(i.default, {
              header:
                f.default.Messages
                  .USER_EXPLICIT_CONTENT_FILTER_COACHMARK_HEADER_V2,
              content:
                f.default.Messages.USER_EXPLICIT_CONTENT_FILTER_COACHMARK_CONTENT_V2.format(
                  {
                    helpdeskArticle: o.default.getArticleURL(
                      d.HelpdeskArticles.SAFE_DIRECT_MESSAGING
                    ),
                  }
                ),
              buttonCTA: f.default.Messages.GOT_IT,
              secondaryButtonCTA:
                f.default.Messages
                  .USER_EXPLICIT_CONTENT_FILTER_COACHMARK_REDIRECT,
              className: E.coachmark,
              onClick: e => {
                e.stopPropagation(),
                  t(c.ContentDismissActionType.UNKNOWN),
                  r.default.track(d.AnalyticEvents.DM_SAFETY_COACHMARK_ACTION, {
                    action: u.DMSafetyCoachmarkActions.DISMISS,
                  });
              },
              onSecondaryClick: () => {
                (0, l.transitionTo)(d.Routes.SETTINGS("privacy-and-safety")),
                  r.default.track(d.AnalyticEvents.DM_SAFETY_COACHMARK_ACTION, {
                    action: u.DMSafetyCoachmarkActions.CHANGE_SETTING,
                  });
              },
              markAsDismissed: t,
              caretPosition: i.CaretPosition.BOTTOM_CENTER,
              headerClassName: E.header,
            })
          );
        };
    },
    892313: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return E;
          },
        });
      var a = n("917351"),
        s = n.n(a),
        l = n("49111"),
        i = n("782340");
      let {
          CAPTCHA: r,
          EMAIL: o,
          PHONE: u,
          REVERIFY_EMAIL: d,
          REVERIFY_PHONE: c,
        } = l.VerificationTypes,
        f = {
          [l.UserRequiredActions.REQUIRE_VERIFIED_EMAIL]: [o],
          [l.UserRequiredActions.REQUIRE_VERIFIED_PHONE]: [u],
          [l.UserRequiredActions.REQUIRE_REVERIFIED_EMAIL]: [d],
          [l.UserRequiredActions.REQUIRE_REVERIFIED_PHONE]: [c],
          [l.UserRequiredActions.REQUIRE_VERIFIED_EMAIL_OR_VERIFIED_PHONE]: [
            o,
            u,
          ],
          [l.UserRequiredActions.REQUIRE_REVERIFIED_EMAIL_OR_VERIFIED_PHONE]: [
            u,
            d,
          ],
          [l.UserRequiredActions.REQUIRE_VERIFIED_EMAIL_OR_REVERIFIED_PHONE]: [
            o,
            c,
          ],
          [l.UserRequiredActions.REQUIRE_REVERIFIED_EMAIL_OR_REVERIFIED_PHONE]:
            [d, c],
          [l.UserRequiredActions.REQUIRE_CAPTCHA]: [r],
          [l.UserRequiredActions.AGREEMENTS]: [],
        };
      var E = {
        isPhoneReverification: (e, t) =>
          void 0 !== e &&
          e.isPhoneVerified() &&
          (t === l.UserRequiredActions.REQUIRE_REVERIFIED_PHONE ||
            t ===
              l.UserRequiredActions
                .REQUIRE_REVERIFIED_EMAIL_OR_REVERIFIED_PHONE ||
            t ===
              l.UserRequiredActions.REQUIRE_VERIFIED_EMAIL_OR_REVERIFIED_PHONE),
        isEmailReverification: e =>
          e === l.UserRequiredActions.REQUIRE_REVERIFIED_EMAIL ||
          e ===
            l.UserRequiredActions
              .REQUIRE_REVERIFIED_EMAIL_OR_REVERIFIED_PHONE ||
          e ===
            l.UserRequiredActions.REQUIRE_REVERIFIED_EMAIL_OR_VERIFIED_PHONE,
        getVerificationTypes: e =>
          null == e || "symbol" == typeof e ? [] : f[e],
        getButtonTitle(e) {
          switch (e) {
            case l.VerificationTypes.EMAIL:
              return i.default.Messages.VERIFY_BY_EMAIL;
            case l.VerificationTypes.PHONE:
              return i.default.Messages.START_PHONE_VERIFICATION_BUTTON;
            case l.VerificationTypes.REVERIFY_EMAIL:
              return i.default.Messages.START_EMAIL_REVERIFICATION_BUTTON;
            case l.VerificationTypes.REVERIFY_PHONE:
              return i.default.Messages.START_PHONE_REVERIFICATION_BUTTON;
            default:
              return i.default.Messages.START_VERIFICATION_BUTTON;
          }
        },
        areVerificationTypesEqual: (e, t) => s.isEqual(e, t),
      };
    },
    61928: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          EMAIL_VERIFICATION_MODAL_KEY: function () {
            return N;
          },
          default: function () {
            return R;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("759843"),
        i = n("446674"),
        r = n("872717"),
        o = n("77078"),
        u = n("437822"),
        d = n("54239"),
        c = n("152584"),
        f = n("84339"),
        E = n("485328"),
        h = n("428958"),
        _ = n("878720"),
        C = n("161778"),
        I = n("330387"),
        S = n("642400"),
        m = n("668596"),
        p = n("892313"),
        T = n("49111"),
        g = n("482931"),
        A = n("782340");
      let N = "Email Verification";
      function R() {
        let { action: e, theme: t } = (0, i.useStateFromStoresObject)(
            [I.default, C.default],
            () => ({ action: I.default.getAction(), theme: C.default.theme })
          ),
          R = p.default.getVerificationTypes(e),
          [O, v] = s.useState(0),
          L = (0, f.default)(R);
        (0, h.default)(
          {
            type: l.ImpressionTypes.MODAL,
            name: l.ImpressionNames.USER_ACTION_REQUIRED,
            properties: { verification_type: R[0], verification_types: R },
          },
          {},
          [R.toString()]
        );
        let M = () => {
            (0, c.accountDetailsInit)(),
              (0, o.openModalLazy)(
                async () => {
                  let { default: e } = await n
                    .el("126667")
                    .then(n.bind(n, "126667"));
                  return t => (0, a.jsx)(e, { ...t });
                },
                { modalKey: N, Layer: m.default }
              );
          },
          P = () => {
            (0, o.openModalLazy)(
              async () => {
                let { default: e } = await n
                  .el("601745")
                  .then(n.bind(n, "601745"));
                return t =>
                  (0, a.jsx)(e, {
                    reason: _.ChangePhoneReason.USER_ACTION_REQUIRED,
                    ...t,
                  });
              },
              { modalKey: g.PHONE_VERIFICATION_MODAL_KEY, Layer: m.default }
            );
          };
        return (
          s.useEffect(
            () => (
              E.default.disable(),
              () => {
                E.default.enable();
              }
            ),
            []
          ),
          s.useEffect(() => {
            (null == L ? void 0 : L[0]) === T.VerificationTypes.PHONE &&
              (null == R ? void 0 : R[0]) === T.VerificationTypes.EMAIL &&
              (0, o.openModalLazy)(
                async () => {
                  let { default: e } = await n
                    .el("135230")
                    .then(n.bind(n, "135230"));
                  return t =>
                    (0, a.jsx)(e, {
                      ...t,
                      title:
                        A.default.Messages.PHONE_THEN_EMAIL_INTERSTITIAL_TITLE,
                      body: A.default.Messages
                        .PHONE_THEN_EMAIL_INTERSTITIAL_BODY,
                      confirmText:
                        A.default.Messages
                          .PHONE_THEN_EMAIL_INTERSTITIAL_CONFIRM,
                    });
                },
                {
                  modalKey: "PHONE_THEN_EMAIL_INTERSTITIAL_MODAL_KEY",
                  Layer: m.default,
                  onCloseCallback: M,
                }
              );
          }, [R, L]),
          (0, a.jsx)(S.default, {
            types: R,
            captchaKey: O,
            onCaptchaVerify: e => {
              r.default
                .post({
                  url: T.Endpoints.CAPTCHA,
                  body: { captcha_key: e },
                  oldFormErrors: !0,
                })
                .then(d.popLayer, () => {
                  v(e => e + 1);
                });
            },
            theme: t,
            onClick: e => {
              e === T.VerificationTypes.EMAIL_OR_PHONE ||
              e === T.VerificationTypes.EMAIL ||
              e === T.VerificationTypes.REVERIFY_EMAIL
                ? M()
                : P();
            },
            onLogout: () => {
              (0, o.openModalLazy)(
                async () => {
                  let { ConfirmModal: e, Text } = await n
                    .el("77078")
                    .then(n.bind(n, "77078"));
                  return t =>
                    (0, a.jsx)(e, {
                      header: A.default.Messages.LOGOUT,
                      confirmText: A.default.Messages.LOGOUT,
                      cancelText: A.default.Messages.CANCEL,
                      onConfirm: () => u.default.logout(),
                      ...t,
                      children: (0, a.jsx)(Text, {
                        variant: "text-md/normal",
                        children:
                          A.default.Messages.USER_SETTINGS_CONFIRM_LOGOUT,
                      }),
                    });
                },
                { Layer: m.default }
              );
            },
          })
        );
      }
    },
    924658: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("446674"),
        s = n("271938"),
        l = n("42887"),
        i = n("800762"),
        r = e =>
          (0, a.useStateFromStoresObject)(
            [i.default, l.default, s.default],
            () =>
              (function (e) {
                var t;
                let n =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : i.default,
                  a =
                    arguments.length > 2 && void 0 !== arguments[2]
                      ? arguments[2]
                      : l.default,
                  r =
                    arguments.length > 3 && void 0 !== arguments[3]
                      ? arguments[3]
                      : s.default,
                  o =
                    null != e
                      ? n.getVoiceState(e.getGuildId(), r.getId())
                      : null,
                  u = a.isSelfDeaf();
                return {
                  selfDeaf: u,
                  deaf:
                    null !== (t = null == o ? void 0 : o.deaf) &&
                    void 0 !== t &&
                    t,
                };
              })(e, i.default, l.default, s.default)
          );
    },
    470885: function (e, t, n) {
      "use strict";
      let a;
      n.r(t),
        n.d(t, {
          default: function () {
            return A;
          },
        });
      var s = n("913144"),
        l = n("600965"),
        i = n("316272"),
        r = n("191225"),
        o = n("292687"),
        u = n("373469"),
        d = n("42203"),
        c = n("778588"),
        f = n("42887"),
        E = n("449501"),
        h = n("945956"),
        _ = n("18494"),
        C = n("162771"),
        I = n("800762"),
        S = n("49111"),
        m = n("353927");
      function p() {
        var e;
        let t = a;
        if (null == t || !E.default.isOpen(t)) return !1;
        s.default.wait(() => l.close(t)),
          null === (e = h.default.getRTCConnection()) ||
            void 0 === e ||
            e.setPipOpen(!1),
          (a = null);
      }
      function T() {
        let e = h.default.getChannelId(),
          t = a === e;
        return (function () {
          let e = h.default.getChannelId(),
            t = _.default.getChannelId(),
            n = f.default.supports(m.Features.VIDEO);
          if (!n) return !0;
          let a = o.default.getWindowOpen(
            S.PopoutWindowKeys.CHANNEL_CALL_POPOUT
          );
          if (a) return !0;
          let s = u.default.getAllActiveStreams().length > 0,
            l =
              null != e &&
              Object.values(I.default.getVideoVoiceStatesForChannel(e)).some(
                e => {
                  let { userId: t } = e;
                  return !f.default.isLocalVideoDisabled(t);
                }
              );
          if (!(l || s)) return !0;
          let i = c.default.hasLayers(),
            r = i && c.default.getLayers().includes(S.Layers.RTC_DEBUG);
          if (r) return !1;
          if (i) return !0;
          let d = e === t;
          return !!d || !1;
        })()
          ? p()
          : (!t && p(),
            null != e &&
              (function (e) {
                var t;
                let n = d.default.getChannel(e);
                if (null == n || E.default.isOpen(e)) return !1;
                s.default.wait(() =>
                  l.open(n.id, S.PictureInPictureComponents.VIDEO, {
                    channel: n,
                  })
                ),
                  null === (t = h.default.getRTCConnection()) ||
                    void 0 === t ||
                    t.setPipOpen(!0),
                  (a = e);
              })(e));
      }
      class g extends i.default {
        _initialize() {
          _.default.addChangeListener(T),
            C.default.addChangeListener(T),
            h.default.addChangeListener(T),
            I.default.addChangeListener(T),
            c.default.addChangeListener(T),
            u.default.addChangeListener(T),
            o.default.addChangeListener(T),
            f.default.addChangeListener(T),
            r.default.addChangeListener(T);
        }
        _terminate() {
          _.default.removeChangeListener(T),
            C.default.removeChangeListener(T),
            h.default.removeChangeListener(T),
            I.default.removeChangeListener(T),
            c.default.removeChangeListener(T),
            u.default.removeChangeListener(T),
            o.default.removeChangeListener(T),
            f.default.removeChangeListener(T),
            r.default.removeChangeListener(T);
        }
      }
      var A = new g();
    },
    868558: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return S;
          },
        }),
        n("222007");
      var a = n("862337"),
        s = n("913144"),
        l = n("987317"),
        i = n("316272"),
        r = n("373469"),
        o = n("42203"),
        u = n("305961"),
        d = n("603699"),
        c = n("945956"),
        f = n("718517"),
        E = n("773336"),
        h = n("49111");
      let _ = new a.Timeout(),
        C = new a.Timeout();
      class I extends i.default {
        _initialize() {
          s.default.subscribe("IDLE", this.handleIdleUpdate);
        }
        _terminate() {
          _.stop(),
            C.stop(),
            s.default.unsubscribe("IDLE", this.handleIdleUpdate);
        }
        handleIdleUpdate() {
          let e = d.default.getIdleSince();
          if (!E.isPlatformEmbedded) return;
          _.stop(), C.stop();
          let t = r.default.getAllActiveStreams();
          for (let e of t)
            if (e.state !== h.ApplicationStreamStates.ENDED) return;
          if (null == e) return;
          let n = c.default.getChannelId();
          if (null == n) return;
          C.start(18e6, () => {
            l.default.selectVoiceChannel(null);
          });
          let a = u.default.getGuild(c.default.getGuildId());
          if (
            null == a ||
            null == a.afkChannelId ||
            a.afkChannelId === n ||
            null == a.afkTimeout
          )
            return;
          let s = o.default.getChannel(n);
          if (null != s)
            !s.isGuildStageVoice() &&
              _.start(
                e + a.afkTimeout * f.default.Millis.SECOND - Date.now(),
                () => {
                  null != (a = u.default.getGuild(c.default.getGuildId())) &&
                    null != a.afkChannelId &&
                    l.default.selectVoiceChannel(a.afkChannelId);
                }
              );
        }
      }
      var S = new I();
    },
    453515: function (e, t, n) {
      "use strict";
      n.r(t), n("222007");
      var a,
        s = n("446674"),
        l = n("95410"),
        i = n("862337"),
        r = n("913144"),
        o = n("260365"),
        u = n("161454"),
        d = n("374363"),
        c = n("718517"),
        f = n("964889"),
        E = n("546463"),
        h = n("686470"),
        _ = n("49111");
      let C = "ActivityTrackingStore",
        I = 30 * c.default.Millis.MINUTE,
        S = 5 * c.default.Millis.MINUTE,
        m = null !== (a = l.default.get(C)) && void 0 !== a ? a : {},
        p = {},
        T = !1;
      function g(e) {
        let t =
          !(arguments.length > 1) || void 0 === arguments[1] || arguments[1];
        t && A(e, !0);
        let n = p[e.applicationId];
        null != n && (n.stop(), delete p[e.applicationId]),
          delete m[e.applicationId],
          l.default.set(C, m);
      }
      function A(e) {
        let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
          n = Date.now(),
          a = null != e.updatedAt ? n - e.updatedAt : 0;
        a > I + S && (a = 0),
          o.default.updateActivity({
            applicationId: e.applicationId,
            distributor: e.isDiscordApplication
              ? _.Distributors.DISCORD
              : e.distributor,
            shareActivity: (0, f.shouldShareApplicationActivity)(
              e.applicationId,
              h.default
            ),
            token: e.token,
            duration: Math.floor(a / 1e3),
            closed: t,
          }),
          (e.updatedAt = n);
        let s = p[e.applicationId];
        null == s &&
          (s = p[e.applicationId] = new i.Interval()).start(I, () => A(e)),
          !t && ((m[e.applicationId] = e), l.default.set(C, m));
      }
      function N() {
        let e =
            !(arguments.length > 0) || void 0 === arguments[0] || arguments[0],
          t = u.default.getVisibleRunningGames(),
          n = new Set();
        for (let { name: e, distributor: a } of t) {
          let t = E.default.getGameByName(e);
          if (null != t)
            n.add(t.id),
              !(t.id in m) &&
                A({
                  applicationId: t.id,
                  updatedAt: Date.now(),
                  distributor: a,
                });
        }
        for (let t of Object.keys(m)) !n.has(t) && g(m[t], e);
      }
      function R() {
        for (let e of Object.keys(m)) g(m[e]);
        T = !1;
      }
      class O extends s.default.Store {
        initialize() {
          this.waitFor(u.default, d.default, h.default),
            this.syncWith([d.default], N);
        }
        getActivities() {
          return m;
        }
      }
      (O.displayName = "ActivityTrackingStore"),
        new O(r.default, {
          RUNNING_GAMES_CHANGE: () => N(),
          CONNECTION_OPEN: function () {
            if (T) return !1;
            for (let e of Object.keys(m)) A(m[e]);
            N(!1), (T = !0);
          },
          CONNECTION_CLOSED: function (e) {
            let { code: t } = e;
            4004 === t && R();
          },
          LOGOUT: R,
          ACTIVITY_UPDATE_SUCCESS: function (e) {
            let { applicationId: t, token: n } = e,
              a = m[t];
            if (null == a) return !1;
            (a.token = n), l.default.set(C, m);
          },
          ACTIVITY_UPDATE_FAIL: function (e) {
            let { applicationId: t } = e,
              n = m[t];
            if (null == n) return !1;
            (n.token = null), (n.updatedAt = null), l.default.set(C, m);
          },
        });
    },
    2105: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("446674"),
        s = n("913144");
      let l = {};
      class i extends a.default.Store {
        getSkuIdForChannel(e) {
          return l[e];
        }
      }
      i.displayName = "ChannelSKUStore";
      var r = new i(s.default, {
        CONNECTION_OPEN: function () {
          l = {};
        },
        STORE_LISTING_FETCH_SUCCESS: function (e) {
          let { channelId: t, storeListing: n } = e;
          null != t && (l[t] = n.sku.id);
        },
      });
    },
    161810: function (e, t, n) {
      "use strict";
      let a, s, l;
      n.r(t),
        n.d(t, {
          default: function () {
            return L;
          },
        }),
        n("424973"),
        n("222007");
      var i = n("917351"),
        r = n.n(i),
        o = n("446674"),
        u = n("913144"),
        d = n("611183"),
        c = n("492114"),
        f = n("305961"),
        E = n("957255"),
        h = n("45894"),
        _ = n("49111");
      let C = [],
        I = null,
        S = !1,
        m = _.FormStates.CLOSED,
        p = {},
        T = !1,
        g = null;
      function A() {
        if (
          ((a =
            null != (s = c.default.getChannel())
              ? f.default.getGuild(s.guild_id)
              : null),
          (C =
            null != s &&
            null != a &&
            E.default.can(_.Permissions.MANAGE_WEBHOOKS, s)
              ? h.default.getWebhooksForChannel(a.id, s.id)
              : []),
          null != I)
        ) {
          let e = R(I.id);
          null != e && (I = e);
        }
        (m = _.FormStates.OPEN), (p = {}), (T = !1);
      }
      let N = r.debounce(() => {
        T &&
          ((null == I || r.isEqual(I, R(I.id))) && (T = !1),
          !T && v.emitChange());
      }, 500);
      function R(e) {
        return C.find(t => {
          let { id: n } = t;
          return n === e;
        });
      }
      class O extends o.default.Store {
        initialize() {
          this.waitFor(c.default, f.default, h.default, E.default);
        }
        hasChanges() {
          return T;
        }
        get webhooks() {
          return C;
        }
        get editedWebhook() {
          return I;
        }
        get formState() {
          return m;
        }
        getWebhook(e) {
          return R(e);
        }
        showNotice() {
          return this.hasChanges();
        }
        getProps() {
          return {
            submitting: m === _.FormStates.SUBMITTING,
            webhooks: C,
            editedWebhook: I,
            section: l,
            sectionId: g,
            hasChanges: this.hasChanges(),
            isFetching: S,
            errors: p,
          };
        }
      }
      O.displayName = "ChannelSettingsIntegrationsStore";
      let v = new O(
        u.default,
        __OVERLAY__
          ? {}
          : {
              INTEGRATION_SETTINGS_INIT: A,
              INTEGRATION_SETTINGS_SAVE_SUCCESS: A,
              CHANNEL_SETTINGS_SET_SECTION: function (e) {
                let { section: t } = e;
                if (t !== _.ChannelSettingsSections.INTEGRATIONS) return !1;
                if (((l = _.IntegrationSettingsSections.OVERVIEW), null == a)) {
                  let e = c.default.getChannel(),
                    t = null == e ? void 0 : e.getGuildId();
                  null != e &&
                    null != t &&
                    (d.default.fetchForChannel(t, e.id), (S = !0)),
                    A();
                }
              },
              INTEGRATION_SETTINGS_SET_SECTION: function (e) {
                let { section: t, sectionId: n } = e;
                (l = t), (g = n);
              },
              INTEGRATION_SETTINGS_START_EDITING_WEBHOOK: function (e) {
                let { webhookId: t } = e,
                  n = R(t);
                if (null == n) return !1;
                (I = n), (p = {}), (T = !1);
              },
              INTEGRATION_SETTINGS_STOP_EDITING_WEBHOOK: function () {
                (I = null), (p = {}), (T = !1);
              },
              INTEGRATION_SETTINGS_UPDATE_WEBHOOK: function (e) {
                let { settings: t } = e;
                if (null == I) return !1;
                (I = { ...I }),
                  null != t.name &&
                    I.name !== t.name &&
                    ((I.name = t.name), (T = !0)),
                  void 0 !== t.avatar &&
                    I.avatar !== t.avatar &&
                    ((I.avatar = t.avatar), (T = !0)),
                  null != t.channelId &&
                    I.channel_id !== t.channelId &&
                    ((I.channel_id = t.channelId), (T = !0)),
                  T && N();
              },
              CHANNEL_SETTINGS_CLOSE: function () {
                (s = null),
                  (a = null),
                  (C = []),
                  (I = null),
                  (m = _.FormStates.CLOSED);
              },
              WEBHOOKS_UPDATE: function (e) {
                let { guildId: t, channelId: n, webhooks: l } = e;
                if (
                  null == a ||
                  t !== a.id ||
                  null == s ||
                  n !== s.id ||
                  null == l ||
                  m === _.FormStates.SUBMITTING
                )
                  return !1;
                S = !1;
                for (let e = C.length - 1; e >= 0; e--) {
                  let t = C[e];
                  if (null != n && (null == t ? void 0 : t.channel_id) !== n)
                    continue;
                  let a = l.find(e => {
                    let { id: n } = e;
                    if (n === t.id) return !0;
                  });
                  if (null != a) {
                    let n = { ...t, ...a };
                    (C[e] = n),
                      !T && (null == I ? void 0 : I.id) === n.id && (I = n);
                  } else
                    (null == I ? void 0 : I.id) === t.id && (I = null),
                      C.splice(e, 1);
                }
                for (let e of l) {
                  let t = C.find(t => {
                    let { id: n } = t;
                    if (n === e.id) return !0;
                  });
                  null == t && C.push(e);
                }
                (C = [...C]), N();
              },
              INTEGRATION_SETTINGS_SUBMITTING: function () {
                (m = _.FormStates.SUBMITTING), (p = {});
              },
              INTEGRATION_SETTINGS_SAVE_FAILURE: function (e) {
                var t;
                if (m !== _.FormStates.SUBMITTING) return !1;
                (m = _.FormStates.OPEN),
                  (p = null !== (t = e.errors) && void 0 !== t ? t : {});
              },
            }
      );
      var L = v;
    },
    901998: function (e, t, n) {
      "use strict";
      let a, s;
      n.r(t),
        n.d(t, {
          default: function () {
            return L;
          },
        }),
        n("222007");
      var l = n("917351"),
        i = n.n(l),
        r = n("446674"),
        o = n("95410"),
        u = n("913144"),
        d = n("991170"),
        c = n("492114"),
        f = n("42203"),
        E = n("49111"),
        h = n("606762");
      let _ = new Set(),
        C = E.FormStates.CLOSED,
        I = !1,
        S = null,
        m = null,
        p = null,
        T = null,
        g = null,
        A = null,
        N = o.default.get(h.ADVANCED_MODE_ON_KEY) || !1;
      function R(e) {
        let t = e.getGuildId(),
          n = { ...e.permissionOverwrites };
        return (
          null != t &&
            null == n[t] &&
            (n[t] = d.default.makeEveryoneOverwrite(t)),
          n
        );
      }
      function O() {
        if (
          ((p = c.default.getChannel()),
          (T = c.default.getCategory()),
          null == p)
        )
          return !1;
        let e = p.getGuildId();
        (m = S = R(p)),
          null == S[g] && (g = e),
          (s = null != T),
          (a = d.default.areChannelsLocked(p, T)),
          (A = null),
          (I = !1),
          (C = E.FormStates.CLOSED),
          _.clear();
      }
      class v extends r.default.Store {
        initialize() {
          this.waitFor(c.default, f.default);
        }
        hasChanges() {
          return I;
        }
        showNotice() {
          return this.hasChanges();
        }
        getPermissionOverwrite(e) {
          return null == S ? void 0 : S[e];
        }
        get editedPermissionIds() {
          return Array.from(_);
        }
        get permissionOverwrites() {
          return S;
        }
        get selectedOverwriteId() {
          return g;
        }
        get formState() {
          return C;
        }
        get isLockable() {
          return s;
        }
        get locked() {
          return a;
        }
        get channel() {
          return p;
        }
        get category() {
          return T;
        }
        get advancedMode() {
          return N;
        }
      }
      v.displayName = "ChannelSettingsPermissionsStore";
      var L = new v(u.default, {
        CHANNEL_SETTINGS_SET_SECTION: function (e) {
          let { section: t } = e;
          if (null != p || t !== E.ChannelSettingsSections.PERMISSIONS)
            return !1;
          O();
        },
        CHANNEL_SETTINGS_PERMISSIONS_INIT: O,
        CHANNEL_SETTINGS_PERMISSIONS_UPDATE_PERMISSION: function (e) {
          let { id: t, allow: n, deny: s } = e,
            l = null == S ? void 0 : S[t];
          if (null == l || null == p) return !1;
          (l = { ...l, allow: n, deny: s }),
            (S = { ...S, [t]: l }),
            _.add(t),
            (C = E.FormStates.OPEN),
            (I = !i.isEqual(S, m)),
            (a = d.default.areChannelsLocked(p, T));
        },
        CHANNEL_SETTINGS_PERMISSIONS_SELECT_PERMISSION: function (e) {
          let { id: t } = e;
          if (null != S && null != S[t]) g = t;
          else {
            if (null == p) return !1;
            A = t;
          }
        },
        CHANNEL_SETTINGS_CLOSE: function () {
          (C = E.FormStates.CLOSED),
            (S = null),
            (m = null),
            (p = null),
            (T = null),
            (I = !1),
            _.clear(),
            (g = null),
            (A = null);
        },
        CHANNEL_UPDATES: function (e) {
          let { channels: t } = e;
          if (null == p) return !1;
          let n = !1;
          for (let e of t)
            !1 !==
              (function (e) {
                if (
                  null == p ||
                  p.id !== e ||
                  null == (p = f.default.getChannel(e))
                )
                  return !1;
                T = c.default.getCategory();
                let t = p.getGuildId();
                if (null == t) return !1;
                m = R(p);
                let n = {};
                return (
                  _.forEach(e => {
                    null != S && (n[e] = S[e]);
                  }),
                  null == n[t] &&
                    null == p.permissionOverwrites[t] &&
                    (n[t] = d.default.makeEveryoneOverwrite(t)),
                  null == (S = { ...p.permissionOverwrites, ...n })[g]
                    ? (g = t)
                    : null != A && null != S[A] && ((g = A), (A = null)),
                  (a = d.default.areChannelsLocked(p, T)),
                  !0
                );
              })(e.id) && (n = !0);
          return n;
        },
        CHANNEL_SETTINGS_PERMISSIONS_SUBMITTING: function () {
          C = E.FormStates.SUBMITTING;
        },
        CHANNEL_SETTINGS_PERMISSIONS_SAVE_SUCCESS: function (e) {
          let { silent: t } = e;
          t ? (C = E.FormStates.OPEN) : ((C = E.FormStates.CLOSED), O());
        },
        CHANNEL_SETTINGS_PERMISSIONS_SET_ADVANCED_MODE: function (e) {
          let { advancedMode: t } = e;
          (N = t), o.default.set(h.ADVANCED_MODE_ON_KEY, t);
        },
      });
    },
    113605: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          extractDisplayName: function () {
            return g;
          },
          default: function () {
            return R;
          },
        });
      var a = n("917351"),
        s = n.n(a),
        l = n("446674"),
        i = n("913144"),
        r = n("629109"),
        o = n("374363"),
        u = n("773336"),
        d = n("42887"),
        c = n("49111"),
        f = n("353927");
      let E = {},
        h = E,
        _ = !1,
        C = {},
        I = {},
        S = {},
        m = { id: null, justChanged: !1 },
        p = { id: null, justChanged: !1 },
        T = /\(([^)]+)\)/;
      function g(e) {
        if ((0, u.getPlatform)() === u.PlatformTypes.WINDOWS) {
          let t = e.name.match(T);
          if (null != t) return t[1];
        }
        return e.name;
      }
      function A(e, t, n) {
        return null == e || e.displayName !== t
          ? { displayName: t, type: n }
          : (e.type === c.ConnectedDeviceType.INPUT &&
                n === c.ConnectedDeviceType.OUTPUT) ||
              (e.type === c.ConnectedDeviceType.OUTPUT &&
                n === c.ConnectedDeviceType.INPUT)
            ? { displayName: t, type: c.ConnectedDeviceType.INPUT_AND_OUTPUT }
            : e;
      }
      class N extends l.default.DeviceSettingsStore {
        initialize(e) {
          this.waitFor(d.default, o.default), (h = null != e ? e : E);
        }
        getUserAgnosticState() {
          return h;
        }
        get initialized() {
          return _;
        }
        get lastDeviceConnected() {
          return S;
        }
        get inputDevices() {
          return C;
        }
        get lastInputSystemDevice() {
          return m;
        }
        get outputDevices() {
          return I;
        }
        get lastOutputSystemDevice() {
          return p;
        }
      }
      (N.displayName = "ConnectedDeviceStore"),
        (N.persistKey = "ConnectedDeviceStore");
      var R = new N(i.default, {
        MEDIA_ENGINE_DEVICES: function (e) {
          let { inputDevices: t, outputDevices: n } = e,
            a = {};
          (m.justChanged = !1),
            t.forEach(e => {
              if (((a[g(e)] = e.id), e.id === f.DEFAULT_DEVICE_ID)) {
                var t;
                let n =
                  null !== (t = e.originalId) && void 0 !== t
                    ? t
                    : e.originalName;
                n !== m.id && (m.justChanged = !0), (m.id = n);
              }
            });
          let l = {};
          if (
            ((p.justChanged = !1),
            n.forEach(e => {
              if (((l[g(e)] = e.id), e.id === f.DEFAULT_DEVICE_ID)) {
                var t;
                let n =
                  null !== (t = e.originalId) && void 0 !== t
                    ? t
                    : e.originalName;
                n !== p.id && (p.justChanged = !0), (p.id = n);
              }
            }),
            !_)
          ) {
            (C = a), (I = l), (_ = !0);
            return;
          }
          let i = Object.keys(C),
            r = Object.keys(a),
            o = Object.keys(I),
            u = Object.keys(l),
            d = s.difference(i, r),
            E = s.difference(o, u);
          if (d.length > 0 || E.length > 0) S = {};
          else {
            let e = s.difference(r, i);
            e.forEach(e => {
              S[e] = A(S[e], e, c.ConnectedDeviceType.INPUT);
            });
            let t = s.difference(u, o);
            t.forEach(e => {
              S[e] = A(S[e], e, c.ConnectedDeviceType.OUTPUT);
            });
          }
          return (
            !(s.isEqual(i, r) && s.isEqual(o, u)) && ((C = a), (I = l), !0)
          );
        },
        CONNECTED_DEVICE_SET: function (e) {
          let { displayName: t, connectedDevicePreference: n, location: a } = e;
          !(function (e, t, n) {
            if (
              t === c.ConnectedDevicePreference.INPUT ||
              t === c.ConnectedDevicePreference.INPUT_AND_OUTPUT
            ) {
              let t = C[e];
              null != t && i.default.wait(() => r.default.setInputDevice(t, n));
            }
            if (
              t === c.ConnectedDevicePreference.OUTPUT ||
              t === c.ConnectedDevicePreference.INPUT_AND_OUTPUT
            ) {
              let t = I[e];
              i.default.wait(() => r.default.setOutputDevice(t, n));
            }
          })(t, n, a),
            delete S[t];
        },
        CONNECTED_DEVICE_IGNORE: function (e) {
          let { displayName: t } = e;
          delete S[t];
        },
        CONNECTED_DEVICE_NEVER_SHOW_MODAL: function () {
          (S = {}), (h = { neverShowModal: !0 });
        },
      });
    },
    555826: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        }),
        n("424973");
      var a = n("446674"),
        s = n("913144"),
        l = n("680762"),
        i = n("305961");
      let r = {},
        o = () => {
          r = {
            guildAffinitiesByGuildId: {},
            guildAffinities: [],
            lastFetched: 0,
          };
        };
      o();
      class u extends a.default.PersistedStore {
        initialize(e) {
          null != e && (r = e), this.waitFor(i.default);
        }
        getState() {
          return r;
        }
        getGuildAffinity(e) {
          return r.guildAffinitiesByGuildId[e];
        }
        get affinities() {
          return r.guildAffinities;
        }
        get hasRequestResolved() {
          return 0 !== r.lastFetched;
        }
      }
      (u.displayName = "GuildAffinitiesStore"),
        (u.persistKey = "GuildAffinitiesStore");
      var d = new u(s.default, {
        CONNECTION_OPEN: function () {
          return (
            Date.now() - r.lastFetched > 864e5 && (0, l.fetchGuildAffinities)(),
            !1
          );
        },
        LOAD_GUILD_AFFINITIES_SUCCESS: function (e) {
          let { guildAffinities: t } = e;
          (r.guildAffinities = []),
            (r.guildAffinitiesByGuildId = {}),
            (r.lastFetched = Date.now()),
            t.forEach((e, t) => {
              let { affinity: n, guild_id: a } = e,
                s = { score: n, guildId: a, index: t };
              (r.guildAffinitiesByGuildId[a] = s), r.guildAffinities.push(s);
            });
        },
        LOGOUT: function () {
          o();
        },
      });
    },
    353802: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var a = n("446674"),
        s = n("913144"),
        l = n("697218"),
        i = n("49111");
      let r = null;
      class o extends a.default.Store {
        getHouseMembership() {
          return r;
        }
      }
      o.displayName = "HypeSquadStore";
      var u = new o(s.default, {
        CONNECTION_OPEN: function () {
          let e = l.default.getCurrentUser();
          null != e &&
            (e.hasFlag(i.UserFlags.HYPESQUAD_ONLINE_HOUSE_1)
              ? (r = i.HypeSquadHouses.HOUSE_1)
              : e.hasFlag(i.UserFlags.HYPESQUAD_ONLINE_HOUSE_2)
                ? (r = i.HypeSquadHouses.HOUSE_2)
                : e.hasFlag(i.UserFlags.HYPESQUAD_ONLINE_HOUSE_3) &&
                  (r = i.HypeSquadHouses.HOUSE_3));
        },
        HYPESQUAD_ONLINE_MEMBERSHIP_LEAVE_SUCCESS: function () {
          r = null;
        },
        HYPESQUAD_ONLINE_MEMBERSHIP_JOIN_SUCCESS: function (e) {
          r = e.houseID;
        },
      });
    },
    216391: function (e, t, n) {
      "use strict";
      let a;
      n.r(t),
        n.d(t, {
          default: function () {
            return p;
          },
        }),
        n("70102");
      var s = n("917351"),
        l = n.n(s),
        i = n("446674"),
        r = n("913144"),
        o = n("997722"),
        u = n("422791"),
        d = n("271938"),
        c = n("260320"),
        f = n("42887"),
        E = n("49111");
      let h = {};
      function _() {
        l.forEach(h, (e, t) => {
          e.destroy(), delete h[t];
        });
      }
      function C(e, t, n) {
        let a = h[e];
        return null != a ? t(a) : n;
      }
      function I(e) {
        let { lobbyId: t } = e,
          n = h[t];
        if (null == n) return !1;
        n.destroy(), delete h[t];
      }
      function S() {
        return !0;
      }
      class m extends i.default.Store {
        forEach(e) {
          l.each(h, e);
        }
        getState(e) {
          return C(e, e => e.state, E.RTCConnectionStates.DISCONNECTED);
        }
        isConnected(e) {
          return this.getState(e) === E.RTCConnectionStates.RTC_CONNECTED;
        }
        isDisconnected(e) {
          return this.getState(e) === E.RTCConnectionStates.DISCONNECTED;
        }
        getHostname(e) {
          return C(e, e => e.hostname, null);
        }
        getQuality(e) {
          return C(e, e => e.quality, E.RTCConnectionQuality.UNKNOWN);
        }
        getPings(e) {
          return C(e, e => e.getPings(), []);
        }
        getAveragePing(e) {
          return C(e, e => e.getAveragePing(), 0);
        }
        getLastPing(e) {
          return C(e, e => e.getLastPing(), 0);
        }
        getOutboundLossRate(e) {
          return C(e, e => e.getOutboundLossRate(), 0);
        }
        getMediaSessionId(e) {
          return C(e, e => e.getMediaSessionId(), null);
        }
        getRTCConnectionId(e) {
          return C(e, e => e.getRTCConnectionId(), null);
        }
        getDuration(e) {
          return C(e, e => e.getDuration(), 0);
        }
      }
      m.displayName = "RTCConnectionStore";
      var p = new m(
        r.default,
        f.default.isSupported()
          ? {
              CONNECTION_OPEN: function (e) {
                (a = e.sessionId), _();
              },
              CONNECTION_CLOSED: function () {
                (a = null), _();
              },
              RTC_CONNECTION_STATE: S,
              RTC_CONNECTION_PING: S,
              RTC_CONNECTION_LOSS_RATE: S,
              RTC_CONNECTION_UPDATE_ID: function (e) {
                return l.some(h, t => t === e.connection);
              },
              LOBBY_VOICE_STATE_UPDATE: function (e) {
                if (d.default.getId() !== e.userId || e.sessionId !== a)
                  return !1;
                let t = h[e.lobbyId];
                null != t && null == e.channelId
                  ? (t.destroy(), delete h[e.lobbyId])
                  : null != t
                    ? (t.channelId = e.channelId)
                    : null != e.channelId &&
                      ((t = (function (e, t) {
                        if (null == a)
                          throw Error(
                            "Creating RTCConnection without session."
                          );
                        let n = c.default.getLobby(e);
                        if (null == n)
                          throw Error("Creating RTCConnection without lobby.");
                        let s = n.application_id,
                          l = new o.default({
                            userId: d.default.getId(),
                            sessionId: a,
                            guildId: e,
                            channelId: t,
                            context: s,
                          });
                        return (
                          l.on(u.RTCConnectionEvent.State, (t, n, a) => {
                            r.default.dispatch({
                              type: "RTC_CONNECTION_STATE",
                              state: t,
                              ...n,
                              ...a,
                              lobbyId: e,
                            });
                          }),
                          l.on(u.RTCConnectionEvent.Ping, (t, n) => {
                            r.default.dispatch({
                              type: "RTC_CONNECTION_PING",
                              pings: t,
                              quality: n,
                              lobbyId: e,
                            });
                          }),
                          l.on(u.RTCConnectionEvent.OutboundLossRate, t => {
                            r.default.dispatch({
                              type: "RTC_CONNECTION_LOSS_RATE",
                              lossRate: t,
                              lobbyId: e,
                            });
                          }),
                          l
                        );
                      })(e.lobbyId, e.channelId)),
                      (h[e.lobbyId] = t));
              },
              LOBBY_VOICE_SERVER_UPDATE: function (e) {
                let t = h[e.lobbyId];
                if (null == t) return !1;
                t.connect(e.endpoint, e.token);
              },
              LOBBY_DELETE: I,
              LOBBY_DISCONNECT: I,
            }
          : {}
      );
    },
    367530: function (e, t, n) {
      "use strict";
      n.r(t);
      var a = n("446674"),
        s = n("913144"),
        l = n("193990"),
        i = n("299285");
      class r extends a.default.Store {}
      r.displayName = "UserAchievementStore";
      new r(s.default, {
        USER_ACHIEVEMENT_UPDATE: function (e) {
          let { userAchievement: t } = e,
            { application_id: n, achievement: a, percent_complete: s } = t;
          if (100 === s && null != a) {
            let e = i.default.getApplication(n),
              t = null != e ? e.getIconURL(64) : null;
            l.default.showNotification(
              t,
              a.name,
              a.description,
              { notif_type: "USER_ACHIEVEMENT_UPDATE" },
              { omitViewTracking: !0 }
            );
          }
        },
      });
    },
    779671: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var a = n("446674"),
        s = n("913144"),
        l = n("305961"),
        i = n("49111");
      class r extends a.default.Store {
        initialize() {
          this.waitFor(l.default), this.syncWith([l.default], i.NOOP);
        }
        channelNoticePredicate(e, t) {
          return (
            !e.hasFeature(i.GuildFeatures.BANNER) &&
            Date.now() - t >= i.CHANNEL_NOTICE_SHOW_DELAY
          );
        }
      }
      r.displayName = "GuildBoostingNoticeStore";
      var o = new r(s.default);
    },
    833781: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var a = n("446674"),
        s = n("913144"),
        l = n("427459"),
        i = n("49111");
      let r = {};
      r = { lastDismissedGracePeriods: {}, isVisible: {} };
      class o extends a.default.PersistedStore {
        initialize(e) {
          null != e && (r = e);
        }
        getLastDismissedGracePeriodForGuild(e) {
          return null != r.lastDismissedGracePeriods[e]
            ? r.lastDismissedGracePeriods[e]
            : null;
        }
        isVisible(e) {
          return null != e && null != r.isVisible[e] && r.isVisible[e];
        }
        getState() {
          return r;
        }
      }
      (o.displayName = "GuildBoostingGracePeriodNoticeStore"),
        (o.persistKey = "PremiumGuildGracePeriodNoticeStore"),
        (o.migrations = [
          e => ({
            ...e,
            lastDismissedGracePeriods:
              null != e ? { ...e.lastDismissedGracePeriods } : {},
            isVisible: {},
          }),
        ]);
      var u = new o(s.default, {
        GUILD_APPLIED_BOOSTS_FETCH_SUCCESS: function (e) {
          let { guildId: t, appliedBoosts: n } = e,
            a =
              null != r.lastDismissedGracePeriods[t]
                ? r.lastDismissedGracePeriods[t]
                : null,
            s =
              null != a &&
              Date.now() - a <= i.GRACE_PERIOD_CHANNEL_NOTICE_SHOW_DELAY,
            o = null != n && !s && (0, l.isInGracePeriod)(n, t);
          r = { ...r, isVisible: { ...r.isVisible, [t]: o } };
        },
        BOOSTED_GUILD_GRACE_PERIOD_NOTICE_DISMISS: function (e) {
          let t = e.guildId;
          r = {
            ...r,
            lastDismissedGracePeriods: {
              ...r.lastDismissedGracePeriods,
              [t]: Date.now(),
            },
            isVisible: { ...r.isVisible, [t]: !1 },
          };
        },
      });
    },
    8452: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var a = n("446674"),
        s = n("913144"),
        l = n("957255"),
        i = n("49111");
      class r extends a.default.Store {
        initialize() {
          this.waitFor(l.default), this.syncWith([l.default], i.NOOP);
        }
        channelNoticePredicate(e, t) {
          return (
            Date.now() - t >= i.CHANNEL_NOTICE_SHOW_DELAY &&
            l.default.can(i.Permissions.MANAGE_GUILD, e)
          );
        }
      }
      r.displayName = "GuildBoostingNoticeStore";
      var o = new r(s.default);
    },
    572182: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return c;
          },
        });
      var a = n("446674"),
        s = n("913144"),
        l = n("923959"),
        i = n("697218"),
        r = n("49111");
      let o = null;
      function u() {
        let e = i.default.getCurrentUser();
        if (null == e || e.mfaEnabled === o) return !1;
        o = e.mfaEnabled;
      }
      class d extends a.default.Store {
        initialize() {
          this.waitFor(i.default, l.default),
            this.syncWith([i.default, l.default], u);
        }
        isVisible(e) {
          return (
            null != e &&
            e.mfaLevel === r.MFALevels.ELEVATED &&
            !1 === o &&
            l.default.hasElevatedPermissions(e.id)
          );
        }
      }
      d.displayName = "GuildMFAWarningStore";
      var c = new d(s.default, {
        CONNECTION_OPEN: u,
        GUILD_UPDATE: function () {
          return !0;
        },
      });
    },
    433973: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        });
      var a = n("446674"),
        s = n("151426"),
        l = n("913144"),
        i = n("179803"),
        r = n("957255");
      function o() {
        return !0;
      }
      class u extends a.default.Store {
        initialize() {
          this.waitFor(r.default), this.syncWith([r.default], o);
        }
        channelNoticePredicate(e) {
          return (0, i.shouldShowGuildOnboardingUpsell)(
            e.id,
            s.DismissibleContent.GUILD_ONBOARDING_UPSELL_CHANNEL_NOTICE
          );
        }
      }
      u.displayName = "GuildOnboardingUpsellNoticeStore";
      var d = new u(l.default);
    },
    150057: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        }),
        n("222007");
      var a = n("446674"),
        s = n("913144"),
        l = n("269596"),
        i = n("305961"),
        r = n("49111");
      let o = !1;
      function u(e) {
        let t = i.default.getGuild(e);
        return (
          !!(null != t && t.hasFeature(r.GuildFeatures.HUB)) && ((o = !0), !0)
        );
      }
      function d() {
        return !0;
      }
      class c extends a.default.Store {
        initialize() {
          this.waitFor(i.default, l.default), this.syncWith([l.default], d);
        }
        channelNoticePredicate(e) {
          return !!e.hasFeature(r.GuildFeatures.LINKED_TO_HUB) && !o && !0;
        }
      }
      c.displayName = "HubLinkNoticeStore";
      var f = new c(s.default, {
        CONNECTION_OPEN: function (e) {
          for (let t of e.guilds) if (u(t.id)) return !0;
          return !1;
        },
        GUILD_CREATE: function (e) {
          let { guild: t } = e;
          return u(t.id);
        },
      });
    },
    141162: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var a = n("446674"),
        s = n("913144"),
        l = n("957255"),
        i = n("49111");
      function r() {
        return !0;
      }
      class o extends a.default.Store {
        initialize() {
          this.waitFor(l.default), this.syncWith([l.default], r);
        }
        channelNoticePredicate(e, t) {
          let n = Date.now() - t >= i.CHANNEL_NOTICE_SHOW_DELAY;
          return n && l.default.can(i.Permissions.ADMINISTRATOR, e);
        }
      }
      o.displayName = "InviteNoticeStore";
      var u = new o(s.default);
    },
    201952: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return f;
          },
        }),
        n("222007");
      var a = n("446674"),
        s = n("95410"),
        l = n("913144"),
        i = n("525065"),
        r = n("305961"),
        o = n("957255"),
        u = n("49111");
      let d = { MAX_MEMBER_COUNT: new Set() };
      class c extends a.default.Store {
        initialize() {
          var e;
          this.waitFor(o.default, r.default, i.default),
            this.syncWith([o.default, r.default, i.default], u.NOOP),
            s.default.remove(u.ChannelNoticeTypes.MAX_MEMBER_COUNT_100),
            s.default.remove(u.ChannelNoticeTypes.MAX_MEMBER_COUNT_250),
            (e = new Set(s.default.get(u.ChannelNoticeTypes.MAX_MEMBER_COUNT))),
            (d[u.ChannelNoticeTypes.MAX_MEMBER_COUNT] =
              void 0 !== e ? e : new Set());
        }
        isVisible(e) {
          var t;
          if (null == e) return !1;
          let n =
              null !== (t = i.default.getMemberCount(e.id)) && void 0 !== t
                ? t
                : 0,
            a = o.default.can(u.Permissions.ADMINISTRATOR, e);
          return (
            !d[u.ChannelNoticeTypes.MAX_MEMBER_COUNT].has(e.id) &&
            a &&
            e.maxMembers > 0 &&
            e.maxMembers - n <= 1e4
          );
        }
      }
      c.displayName = "MaxMemberCountChannelNoticeStore";
      var f = new c(l.default, {
        MAX_MEMBER_COUNT_NOTICE_DISMISS: function (e) {
          let t = e.guildId;
          if (!d[u.ChannelNoticeTypes.MAX_MEMBER_COUNT].has(t))
            return (
              d[u.ChannelNoticeTypes.MAX_MEMBER_COUNT].add(t),
              s.default.set(
                u.ChannelNoticeTypes.MAX_MEMBER_COUNT,
                d[u.ChannelNoticeTypes.MAX_MEMBER_COUNT]
              ),
              !0
            );
        },
      });
    },
    545429: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return x;
          },
        }),
        n("424973");
      var a = n("917351"),
        s = n.n(a),
        l = n("446674"),
        i = n("913144"),
        r = n("736964"),
        o = n("666038"),
        u = n("449004"),
        d = n("373469"),
        c = n("26989"),
        f = n("305961"),
        E = n("824563"),
        h = n("27618"),
        _ = n("697218"),
        C = n("49111");
      function I(e) {
        let t = _.default.getUser(e);
        return {
          user: t,
          usernameLower: null != t ? t.username.toLowerCase() : null,
        };
      }
      function S(e) {
        return {
          status: E.default.getStatus(e),
          isMobile: E.default.isMobileOnline(e),
          activities: E.default.getActivities(e),
          applicationStream: d.default.getAnyStreamForUser(e),
        };
      }
      function m(e) {
        let t = [];
        return (
          s(c.default.memberOf(e))
            .map(f.default.getGuild)
            .sortBy(e => (null != e ? e.name.toLowerCase() : null))
            .forEach(e => {
              null != e && t.push(e);
            }),
          { mutualGuildsLength: t.length, mutualGuilds: t.slice(0, 5) }
        );
      }
      class p extends o.default {
        get comparator() {
          var e, t, n, a, s;
          return [
            this.type,
            null !==
              (s =
                null !==
                  (a =
                    null === (e = this.nickname) || void 0 === e
                      ? void 0
                      : e.toLowerCase()) && void 0 !== a
                  ? a
                  : null === (n = this.user) || void 0 === n
                    ? void 0
                    : null === (t = n.globalName) || void 0 === t
                      ? void 0
                      : t.toLowerCase()) && void 0 !== s
              ? s
              : this.usernameLower,
          ];
        }
        constructor(e) {
          super(),
            (this.key = e.key),
            (this.type = e.type),
            (this.status = e.status),
            (this.activities = e.activities),
            (this.applicationStream = e.applicationStream),
            (this.user = e.user),
            (this.isMobile = e.isMobile),
            (this.usernameLower = e.usernameLower),
            (this.mutualGuildsLength = e.mutualGuildsLength),
            (this.mutualGuilds = e.mutualGuilds),
            (this.nickname = e.nickname);
        }
      }
      class T {
        reset() {
          let e = s.map(
              h.default.getRelationships(),
              (e, t) =>
                new p({
                  key: t,
                  type: e,
                  nickname: h.default.getNickname(t),
                  ...I(t),
                  ...S(t),
                  ...m(t),
                })
            ),
            t = s.map(
              u.default.getSuggestions(),
              e =>
                new p({
                  key: e.key,
                  type: 99,
                  nickname: e.name,
                  ...I(e.key),
                  ...S(e.key),
                  ...m(e.key),
                })
            );
          return new T(s.concat(e, t));
        }
        clone() {
          return new T(this._rows);
        }
        update(e) {
          let t = !1;
          for (let n = 0; n < this._rows.length; n++) {
            let a = this._rows[n],
              s = a.merge(e(a.key));
            (t = t || s !== a), (this._rows[n] = s);
          }
          return t;
        }
        filter(e, t) {
          let n = s(this._rows)
            .filter(e => {
              if (null == e.user) return !1;
              if (null != t && "" !== t) {
                let n = t.toLowerCase(),
                  a = [e.usernameLower, e.nickname, e.user.globalName].map(e =>
                    null == e ? void 0 : e.toLowerCase()
                  );
                return a.some(e => (null == e ? void 0 : e.includes(n)));
              }
              return !0;
            })
            .filter(t => {
              switch (e) {
                case C.FriendsSections.ONLINE:
                  return (
                    t.type === C.RelationshipTypes.FRIEND &&
                    t.status !== C.StatusTypes.OFFLINE
                  );
                case C.FriendsSections.PENDING:
                  return (
                    t.type === C.RelationshipTypes.PENDING_INCOMING ||
                    t.type === C.RelationshipTypes.PENDING_OUTGOING
                  );
                case C.FriendsSections.SUGGESTIONS:
                  return 99 === t.type;
                case C.FriendsSections.BLOCKED:
                  return t.type === C.RelationshipTypes.BLOCKED;
                case C.FriendsSections.ALL:
                default:
                  return t.type === C.RelationshipTypes.FRIEND;
              }
            })
            .sortBy(e => e.comparator)
            .value();
          return n;
        }
        getRelationshipCounts() {
          let e = {
            [C.RelationshipTypes.FRIEND]: 0,
            [C.RelationshipTypes.PENDING_INCOMING]: 0,
            [C.RelationshipTypes.PENDING_OUTGOING]: 0,
            99: 0,
            [C.RelationshipTypes.BLOCKED]: 0,
          };
          return (
            this._rows.forEach(t => {
              null != t.user && null != e[t.type] && e[t.type]++;
            }),
            e
          );
        }
        constructor(e = []) {
          this._rows = e;
        }
      }
      let g = !0,
        A = !1,
        N = C.FriendsSections.ONLINE,
        R = new T(),
        O = !0,
        v = !1;
      function L() {
        let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
        g &&
          (e ||
            (N !== C.FriendsSections.ONLINE &&
              N !== C.FriendsSections.ADD_FRIEND)) &&
          !A &&
          ((g = !1), (A = !0), r.default.fetchRelationships());
      }
      function M() {
        if (((g = !0), O ? (A = !1) : L(), (R = R.reset()), v)) return;
        let e = R.getRelationshipCounts();
        N =
          0 === e[C.RelationshipTypes.FRIEND]
            ? 0 !== e[C.RelationshipTypes.PENDING_INCOMING]
              ? C.FriendsSections.PENDING
              : C.FriendsSections.ADD_FRIEND
            : C.FriendsSections.ONLINE;
      }
      function P() {
        R = O ? new T() : R.reset();
      }
      function D(e) {
        return function () {
          return !O && !!R.update(e) && ((R = R.clone()), !0);
        };
      }
      class y extends l.default.Store {
        initialize() {
          this.waitFor(
            h.default,
            E.default,
            _.default,
            f.default,
            c.default,
            d.default,
            u.default
          ),
            this.syncWith([h.default], P),
            this.syncWith([u.default], P),
            this.syncWith([_.default], D(I)),
            this.syncWith([E.default, d.default], D(S)),
            M();
        }
        getState() {
          return {
            fetching: A,
            section: N,
            pendingCount: h.default.getPendingCount(),
            rows: R,
          };
        }
      }
      y.displayName = "FriendsStore";
      var x = new y(i.default, {
        CONNECTION_OPEN: function () {
          M();
        },
        FRIENDS_SET_SECTION: function (e) {
          (N = e.section), L();
        },
        CHANNEL_SELECT: function (e) {
          let { channelId: t } = e;
          return (O = null != t), P(), !O;
        },
        LOAD_RELATIONSHIPS_SUCCESS: function () {
          A = !1;
        },
        LOAD_RELATIONSHIPS_FAILURE: function () {
          (g = !0), (A = !0);
        },
        DRAWER_SELECT_TAB: function (e) {
          let { tab: t } = e;
          return (O = t !== C.DrawerTabTypes.FRIENDS), P(), !O;
        },
        FRIENDS_SET_INITIAL_SECTION: function (e) {
          (N = e.section), (v = !0);
        },
      });
    },
    428773: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return h;
          },
        }),
        n("222007");
      var a = n("37983");
      n("884691");
      var s = n("917351"),
        l = n.n(s),
        i = n("77078"),
        r = n("533222"),
        o = n("113605"),
        u = n("42887"),
        d = n("353927");
      let c = new Set(["DisplayPort"]),
        f = !1;
      function E() {
        let e;
        if (f) return;
        let t = u.default.getInputDeviceId(),
          s = u.default.getOutputDeviceId();
        if (
          o.default.getState().neverShowModal ||
          l.isEmpty(o.default.lastDeviceConnected)
        )
          return;
        let E = (0, o.extractDisplayName)(u.default.getInputDevices()[t]),
          h = (0, o.extractDisplayName)(u.default.getOutputDevices()[s]),
          _ = l.some(
            o.default.lastDeviceConnected,
            e =>
              c.has(e.displayName) || e.displayName === E || e.displayName === h
          );
        if (_) return;
        let C = l.some(
            o.default.lastDeviceConnected,
            e =>
              r.default.isCertified(o.default.inputDevices[e.displayName]) ||
              r.default.isCertified(o.default.outputDevices[e.displayName])
          ),
          I =
            (t === d.DEFAULT_DEVICE_ID &&
              o.default.lastInputSystemDevice.justChanged) ||
            (s === d.DEFAULT_DEVICE_ID &&
              o.default.lastOutputSystemDevice.justChanged);
        if (I && !C) return;
        let S = l.first(Object.keys(o.default.lastDeviceConnected)),
          m = null != S && "" !== S ? o.default.lastDeviceConnected[S] : null;
        null != m &&
          (o.default.initialized &&
            null != S &&
            (r.default.isCertified(o.default.inputDevices[S])
              ? (e = r.default.getCertifiedDevice(o.default.inputDevices[S]))
              : r.default.isCertified(o.default.outputDevices[S]) &&
                (e = r.default.getCertifiedDevice(o.default.outputDevices[S]))),
          (f = !0),
          (0, i.openModalLazy)(async () => {
            let { default: t } = await n.el("134064").then(n.bind(n, "134064"));
            return n => {
              let { transitionState: s, onClose: l } = n;
              return (0, a.jsx)(t, {
                device: m,
                certifiedDeviceMetadata: e,
                transitionState: s,
                onClose: () => ((f = !1), l()),
              });
            };
          }));
      }
      var h = {
        init() {
          o.default.addChangeListener(E);
        },
      };
    },
    31957: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return R;
          },
        }),
        n("222007");
      var a = n("446674"),
        s = n("95410"),
        l = n("913144"),
        i = n("845579"),
        r = n("374363"),
        o = n("271938"),
        u = n("42203"),
        d = n("101125"),
        c = n("49111");
      let f = "IncomingCallStore",
        E = { width: 232, height: 315 },
        h = new Set(),
        _ = [],
        C = new Map(),
        I = new Set(),
        S = 0,
        m = 0,
        p = !1;
      function T(e) {
        if (null == e || null == C.get(e)) return !1;
        C.delete(e), (I = new Set(I)).delete(e);
      }
      function g(e) {
        let { channelId: t, ringing: n } = e,
          a = n.includes(o.default.getId());
        if (!I.has(t) && a) {
          let e = u.default.getChannel(t);
          if (null == e) return !1;
          let n = 10 * I.size;
          C.set(t, { channel: e, x: S + n, y: m + n }), (I = new Set(I)).add(t);
        } else {
          if (!I.has(t) || a) return !1;
          T(t);
        }
      }
      !(function () {
        let e = s.default.get(f);
        if (null != e) (S = +e.x), (m = +e.y);
        else {
          let e = n("471671").default.windowSize();
          (S = e.width / 2 - E.width / 2), (m = e.height / 2 - E.height / 2);
        }
      })();
      function A() {
        p =
          d.default.getStatus() === c.StatusTypes.DND ||
          i.FocusMode.getSetting();
      }
      class N extends a.default.Store {
        initialize() {
          this.waitFor(u.default, d.default),
            this.syncWith([d.default], A),
            this.syncWith([r.default], A);
        }
        getIncomingCalls() {
          return p ? _ : Array.from(C.values());
        }
        getIncomingCallChannelIds() {
          return p ? h : I;
        }
        getFirstIncomingCallId() {
          return p ? null : I.values().next().value;
        }
        hasIncomingCalls() {
          return !p && I.size > 0;
        }
      }
      N.displayName = "IncomingCallStore";
      var R = new N(l.default, {
        CALL_CREATE: g,
        CALL_UPDATE: g,
        CALL_DELETE: function (e) {
          let { channelId: t } = e;
          return T(t);
        },
        VOICE_CHANNEL_SELECT: function (e) {
          let { channelId: t } = e;
          return T(t);
        },
        INCOMING_CALL_MOVE: function (e) {
          let { x: t, y: n } = e;
          return (S = t), (m = n), s.default.set(f, { x: S, y: m }), !1;
        },
        CHANNEL_DELETE: function (e) {
          let { channel: t } = e;
          return T(t.id);
        },
      });
    },
    43093: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("77078"),
        l = n("913144");
      let i = !1,
        r = null;
      var o = {
        init() {
          l.default.subscribe("CONNECTION_OPEN", e => {
            let { pendingPayments: t } = e;
            if (null != t && t.length > 0) {
              var l;
              if (r === t[0] || null == (r = t[0])) return;
              (l = r),
                i ||
                  ((i = !0),
                  (0, s.openModalLazy)(async () => {
                    let { default: e } = await n
                      .el("905692")
                      .then(n.bind(n, "905692"));
                    return t => {
                      let { transitionState: n, onClose: s } = t;
                      return (0, a.jsx)(e, {
                        pendingPayment: l,
                        transitionState: n,
                        onClose: () => ((i = !1), s()),
                      });
                    };
                  }));
            }
          });
        },
      };
    },
    944832: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("414456"),
        l = n.n(s),
        i = n("846433"),
        r = e => {
          let { aspectRatio: t, style: n, className: s, children: r } = e;
          return (0, a.jsx)("div", {
            className: l(i.outer, s),
            style: { paddingTop: "".concat((1 / t) * 100, "%"), ...n },
            children: (0, a.jsx)("div", { className: i.inner, children: r }),
          });
        };
    },
    149851: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("77078"),
        l = n("782340"),
        i = n("485738");
      let r = Math.ceil(2 * Math.PI * 20);
      var o = e => {
        let { total: t, used: n } = e,
          o = Math.max(0, Math.min(1, n / t)),
          u = "".concat(Math.floor(100 * o), "%");
        return (0, a.jsx)(s.Tooltip, {
          text: l.default.Messages.APPLICATION_INSTALLATION_SPACE_USED.format({
            used: u,
          }),
          children: e => {
            var t;
            return (0, a.jsxs)("div", {
              className: i.wrapper,
              role: "progressbar",
              "aria-label":
                l.default.Messages.APPLICATION_INSTALLATION_SPACE_USED.format({
                  used: u,
                }),
              ...e,
              children: [
                (0, a.jsxs)("svg", {
                  viewBox: "25 25 50 50",
                  className: i.svg,
                  "aria-hidden": !0,
                  children: [
                    (0, a.jsx)("circle", {
                      className: i.background,
                      cx: "50",
                      cy: "50",
                      r: 20,
                    }),
                    (0, a.jsx)("circle", {
                      className: i.foreground,
                      cx: "50",
                      cy: "50",
                      r: 20,
                      stroke:
                        ((t = o),
                        "rgb("
                          .concat(Math.round(-85 * t + 199), ", ")
                          .concat(Math.round(-71 * t + 208), ", ")
                          .concat(Math.round(-22 * t + 240), ")")),
                      strokeDasharray: (function (e) {
                        let t = Math.floor(r * e);
                        return "".concat(t, ", ").concat(r);
                      })(o),
                    }),
                  ],
                }),
                (0, a.jsx)("aside", {
                  className: i.usageInfo,
                  "aria-hidden": !0,
                  children: u,
                }),
              ],
            });
          },
        });
      };
    },
    230962: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          NotchBackground: function () {
            return E;
          },
          default: function () {
            return _;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("669491"),
        o = n("769846"),
        u = n("159885"),
        d = n("874293"),
        c = n("879104");
      let f = (0, u.cssValueToNumber)(o.default.GRADIENT_PROGRESS_NOTCH_WIDTH),
        E = Object.freeze({ BLACK: c.black, GRAY: c.gray });
      class h extends s.Component {
        componentDidMount() {
          this.computeBars(),
            window.addEventListener("resize", this.computeBars);
        }
        componentWillUnmount() {
          window.removeEventListener("resize", this.computeBars);
        }
        roundToNearestStep(e) {
          return Math.round(e / f) * f;
        }
        getProgressStyles() {
          let { progress: e } = this.props,
            { barWidth: t } = this.state,
            n = this.roundToNearestStep(
              (t * (100 - Math.max(0, Math.min(100, e)))) / 100
            );
          return { transform: "translateX(".concat(Math.abs(n - t), "px)") };
        }
        getGradientStyles() {
          let { gradientEnd: e, gradientStart: t, progress: n } = this.props,
            { barWidth: a } = this.state;
          return {
            width: "".concat(a, "px"),
            background:
              n <= 0
                ? "none"
                : "linear-gradient(to right, ".concat(t, ", ").concat(e, ")"),
          };
        }
        render() {
          let { className: e, notchBackground: t } = this.props,
            { barWidth: n } = this.state;
          return (0, a.jsx)("div", {
            className: c.wrapper,
            ref: this.sizerRef,
            children: (0, a.jsxs)("div", {
              className: i(c.container, e),
              style: this.getGradientStyles(),
              children: [
                (0, a.jsx)("div", {
                  className: c.progress,
                  style: this.getProgressStyles(),
                }),
                0 !== n &&
                  (0, a.jsx)(d.default, {
                    width: n,
                    className: i(c.notches, t),
                  }),
              ],
            }),
          });
        }
        constructor(...e) {
          super(...e),
            (this.state = { barWidth: 0 }),
            (this.sizerRef = s.createRef()),
            (this.computeBars = () => {
              let { current: e } = this.sizerRef;
              this.setState({
                barWidth:
                  null != e ? this.roundToNearestStep(e.clientWidth) : 0,
              });
            });
        }
      }
      h.defaultProps = {
        gradientStart: r.default.unsafe_rawColors.YELLOW_260.css,
        gradientEnd: r.default.unsafe_rawColors.GREEN_360.css,
      };
      var _ = h;
    },
    465126: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return v;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("290381"),
        o = n("77078"),
        u = n("272030"),
        d = n("378662"),
        c = n("574921"),
        f = n("311092"),
        E = n("613088"),
        h = n("407063"),
        _ = n("845579"),
        C = n("315102"),
        I = n("794818"),
        S = n("580357"),
        m = n("587974"),
        p = n("49111"),
        T = n("782340"),
        g = n("196779"),
        A = n("68422"),
        N = n("578817"),
        R = n("855237");
      class O extends s.PureComponent {
        getDefaultSplashURL(e, t) {
          if (t) return R;
          switch (e) {
            case p.ThemeTypes.DARK:
              return A;
            case p.ThemeTypes.LIGHT:
              return N;
          }
        }
        render() {
          var e;
          let { guild: t, className: n, theme: s, onTagClick: l } = this.props,
            {
              loaded: u,
              hasBeenSeen: A,
              isVisible: N,
              submitting: R,
            } = this.state,
            {
              name: O,
              description: v,
              presenceCount: L,
              memberCount: M,
              keywords: P,
            } = t,
            D =
              null === (e = t.features) || void 0 === e
                ? void 0
                : e.has(p.GuildFeatures.HUB),
            y = C.default.getGuildDiscoverySplashURL({
              id: t.id,
              splash: t.discoverySplash,
              size: 300 * (0, h.getDevicePixelRatio)(),
            }),
            x = null != y ? y : this.getDefaultSplashURL(s, D),
            b = C.default.getGuildIconURL({ id: t.id, icon: t.icon, size: 40 });
          c.DiscoveryTagsExperiment.trackExposure({ location: "de1ef6_1" });
          let { shouldDisplayTags: U } =
              c.DiscoveryTagsExperiment.getCurrentConfig(
                { location: "de1ef6_2" },
                { autoTrackExposure: !1 }
              ),
            { canSeeInAppReportingButtons: G } =
              d.DiscoveryInAppReportingExperiment.getCurrentConfig(
                { location: "de1ef6_3" },
                { autoTrackExposure: !1 }
              );
          d.DiscoveryInAppReportingExperiment.trackExposure({
            location: "de1ef6_4",
          });
          let j = _.DeveloperMode.getSetting();
          return (0, a.jsx)(r.VisibilitySensor, {
            active: !N,
            onChange: this.setIsVisible,
            threshold: 0.1,
            children: N
              ? (0, a.jsx)(r.VisibilitySensor, {
                  onChange: this.handleVisibilityChange,
                  active: !A,
                  threshold: 0.55,
                  children: (0, a.jsxs)("div", {
                    className: i(n, { [g.loaded]: u, [g.loading]: !u }),
                    children: [
                      R
                        ? (0, a.jsx)(o.Spinner, {
                            type: o.Spinner.Type.PULSING_ELLIPSIS,
                            className: g.spinner,
                          })
                        : null,
                      (0, a.jsxs)(o.Clickable, {
                        onClick: this.handleClickView,
                        className: i(g.card, {
                          [g.submitting]: R,
                          [g.cardWithTags]: U,
                        }),
                        onContextMenu: this.handleContextMenu,
                        children: [
                          (0, a.jsxs)("div", {
                            className: g.cardHeader,
                            children: [
                              (0, a.jsx)("div", {
                                className: g.splash,
                                children: (0, a.jsx)("img", {
                                  src: x,
                                  alt: "",
                                  className: i(g.splashImage, {
                                    [g.splashImageHeight]: !D,
                                  }),
                                  onLoad: () => this.setState({ loaded: !0 }),
                                }),
                              }),
                              j || G
                                ? (0, a.jsx)("div", {
                                    className: g.actionButtons,
                                    children: (0, a.jsx)(E.default, {
                                      guild: t,
                                    }),
                                  })
                                : null,
                              (0, a.jsx)("div", {
                                className: g.guildIcon,
                                children: (0, a.jsx)(m.default, {
                                  mask: m.default.Masks.SQUIRCLE,
                                  width: 48,
                                  height: 48,
                                  children: (0, a.jsx)("div", {
                                    className: g.iconMask,
                                    children: (0, a.jsx)(m.default, {
                                      mask: m.default.Masks.SQUIRCLE,
                                      width: 40,
                                      height: 40,
                                      children: (0, a.jsx)("img", {
                                        src: b,
                                        alt: "",
                                        className: g.avatar,
                                      }),
                                    }),
                                  }),
                                }),
                              }),
                            ],
                          }),
                          (0, a.jsxs)("div", {
                            className: g.guildInfo,
                            children: [
                              (0, a.jsxs)("div", {
                                className: g.title,
                                children: [
                                  (0, a.jsx)(S.default, {
                                    className: g.guildBadge,
                                    guild: t,
                                    tooltipColor: o.Tooltip.Colors.PRIMARY,
                                  }),
                                  (0, a.jsx)(o.Heading, {
                                    variant: "heading-md/semibold",
                                    className: g.guildName,
                                    children: O,
                                  }),
                                ],
                              }),
                              (0, a.jsx)(o.Text, {
                                className: g.description,
                                variant: "text-sm/normal",
                                color: "header-secondary",
                                children: v,
                              }),
                              U &&
                                null != P &&
                                null != l &&
                                (0, a.jsx)(f.DiscoveryTags, {
                                  tags: P,
                                  onTagClick: e => l(e, t.id),
                                  guildId: t.id,
                                  section: I.AnalyticsContexts.POPULAR,
                                }),
                              (0, a.jsxs)("div", {
                                className: g.memberInfo,
                                children: [
                                  null != L &&
                                    (0, a.jsxs)("div", {
                                      className: g.memberCount,
                                      children: [
                                        (0, a.jsx)("div", {
                                          className: g.dotOnline,
                                        }),
                                        (0, a.jsx)(o.Text, {
                                          variant: "text-xs/normal",
                                          color: "header-secondary",
                                          children:
                                            T.default.Messages.INSTANT_INVITE_GUILD_MEMBERS_ONLINE.format(
                                              { membersOnline: L }
                                            ),
                                        }),
                                      ],
                                    }),
                                  null != M &&
                                    (0, a.jsxs)("div", {
                                      className: g.memberCount,
                                      children: [
                                        (0, a.jsx)("div", {
                                          className: g.dotOffline,
                                        }),
                                        (0, a.jsx)(o.Text, {
                                          variant: "text-xs/normal",
                                          color: "header-secondary",
                                          children:
                                            T.default.Messages.INSTANT_INVITE_GUILD_MEMBERS_TOTAL.format(
                                              { count: M }
                                            ),
                                        }),
                                      ],
                                    }),
                                ],
                              }),
                            ],
                          }),
                        ],
                      }),
                    ],
                  }),
                })
              : (0, a.jsx)("div", {
                  className: i(g.card, { [g.cardWithTags]: U }),
                }),
          });
        }
        constructor(...e) {
          super(...e),
            (this.state = {
              loaded: !1,
              hasBeenSeen: !1,
              isVisible: !1,
              submitting: !1,
            }),
            (this.handleClickView = async e => {
              let { className: t } = e.target;
              if (t.includes("Menu")) return;
              let { onView: n, guild: a } = this.props;
              e.stopPropagation(), this.setState({ submitting: !0 });
              try {
                null != n && (await n(a.id));
              } finally {
                this.setState({ submitting: !1 });
              }
            }),
            (this.handleVisibilityChange = e => {
              let { onGuildCardSeen: t, guild: n } = this.props;
              null != n &&
                !this.state.hasBeenSeen &&
                e &&
                (this.setState({ hasBeenSeen: e }), null != t && t(n.id));
            }),
            (this.handleContextMenu = e => {
              (0, u.openContextMenuLazy)(e, async () => {
                let { default: e } = await n
                  .el("392533")
                  .then(n.bind(n, "392533"));
                return t => (0, a.jsx)(e, { ...t, guild: this.props.guild });
              });
            }),
            (this.setIsVisible = e => {
              this.setState({ isVisible: e });
            });
        }
      }
      O.Placeholder = e =>
        (0, a.jsx)("div", { className: i(e.className, g.cardPlaceholder) });
      var v = O;
    },
    398288: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("744377");
      class o extends s.PureComponent {
        render() {
          let {
            tag: e,
            children: t,
            hoverText: n,
            className: s,
            forceHover: l,
            ...o
          } = this.props;
          return (0, a.jsxs)("div", {
            ...o,
            className: i(s, r.hoverRoll, {
              [r.disabled]: null == n,
              [r.forceHover]: l,
            }),
            children: [
              (0, a.jsx)(e, { className: r.hovered, children: n }),
              (0, a.jsx)(e, { className: r.default, children: t }),
            ],
          });
        }
      }
      o.defaultProps = { tag: "div", forceHover: !1 };
      var u = o;
    },
    109507: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("67164"),
        l = n("819855"),
        i = n("49111");
      let r = e => {
        let { theme: t, ...n } = e,
          r = (0, l.isThemeDark)(t) ? "dark" : "light";
        return (0, a.jsx)(s.default, {
          sitekey: i.RECAPTCHA_SITE_KEY,
          ...n,
          theme: r,
        });
      };
      (r.Themes = { LIGHT: "light", DARK: "dark" }),
        (r.Sizes = {
          COMPACT: "compact",
          NORMAL: "normal",
          INVISIBLE: "invisible",
        });
      var o = r;
    },
    163466: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return o;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("414456"),
        l = n.n(s),
        i = n("77078"),
        r = n("177452");
      function o(e) {
        let {
          padded: t = !0,
          inset: n = !1,
          active: s = !1,
          className: o,
          children: u,
          onClick: d,
          ...c
        } = e;
        return null != d
          ? (0, a.jsx)(i.Clickable, {
              onClick: d,
              tabIndex: null != d ? 0 : -1,
              className: l(o, {
                [r.outer]: !n,
                [r.inset]: n,
                [r.padded]: t,
                [r.active]: s,
                [r.interactive]: null != d,
              }),
              ...c,
              children: u,
            })
          : (0, a.jsx)("div", {
              className: l(o, {
                [r.outer]: !n,
                [r.inset]: n,
                [r.padded]: t,
                [r.active]: s,
              }),
              ...c,
              children: u,
            });
      }
    },
    833923: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return d;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("917351"),
        i = n.n(l),
        r = n("284679"),
        o = n("435491");
      class u extends s.PureComponent {
        onDataUpdate(e, t) {
          let { maxValue: n, data: a, animate: s } = this.props,
            l = null == e || (e.data !== t.data && !i.isEqual(e.data, t.data));
          if (
            (l &&
              ((this.dataChangedAt = performance.now()),
              (this.maxValue = null != n ? n : Math.max(...a))),
            l || null == e || (!e.animate && s) || e.color !== this.props.color)
          ) {
            let e = r.hexToRgb(this.props.color);
            (this.fillColor = "rgba("
              .concat(e.r, ", ")
              .concat(e.g, ", ")
              .concat(e.b, ", 0.5)")),
              window.cancelAnimationFrame(this.animationFrameRequestId),
              (this.animationFrameRequestId = window.requestAnimationFrame(
                this.updateAnimation
              ));
          }
        }
        componentDidMount() {
          (this.animationFrameRequestId = 0),
            this.onDataUpdate(null, this.props);
        }
        componentDidUpdate(e) {
          this.onDataUpdate(e, this.props);
        }
        componentWillUnmount() {
          window.cancelAnimationFrame(this.animationFrameRequestId),
            (this.animationFrameRequestId = 0);
        }
        render() {
          let { className: e, pixelWidth: t, pixelHeight: n } = this.props;
          return (0, a.jsx)("div", {
            className: e,
            children: (0, a.jsx)("canvas", {
              ref: this.canvas,
              className: o.canvas,
              width: t,
              height: n,
            }),
          });
        }
        constructor(...e) {
          super(...e),
            (this.canvas = s.createRef()),
            (this.updateAnimation = e => {
              let t, n;
              let a = this.canvas.current;
              if (null == a) return;
              let {
                data: s,
                updateInterval: l,
                color: i,
                numUpdatesToShow: o,
                lineWidth: u,
                animate: d,
                gradientStopColor: c,
              } = this.props;
              if (s.length < 2) return;
              let f = Math.max(Math.min((e - this.dataChangedAt) / l, 1), 0),
                E = a.getContext("2d"),
                h = this.maxValue;
              (E.strokeStyle = i), (E.lineWidth = u);
              let _ = a.height - E.lineWidth,
                C = E.createLinearGradient(0, 0, 0, _);
              if (null != c) C.addColorStop(0, c);
              else {
                let { r: e, g: t, b: n } = r.hexToRgb(i);
                C.addColorStop(
                  0,
                  "rgba(".concat(e, ", ").concat(t, ", ").concat(n, ", 0)")
                );
              }
              C.addColorStop(1, this.fillColor), (E.fillStyle = C);
              let I = s.length >= o ? o : s.length;
              E.setTransform(1, 0, 0, -1, 0, a.height),
                E.clearRect(0, 0, a.width, a.height),
                E.translate(0, 0.5 * E.lineWidth);
              let S = Math.floor(a.width / (I - 3)),
                m = 0.5 * S;
              E.translate(S - S * f, 0), E.beginPath();
              let p = -S;
              s.forEach((e, a) => {
                (t = { x: p, y: (_ * e) / h }),
                  0 === a
                    ? E.moveTo(t.x, t.y)
                    : E.bezierCurveTo(n.x + m, n.y, t.x - m, t.y, t.x, t.y),
                  (n = t),
                  (p += S);
              }),
                E.stroke(),
                E.lineTo(p - S, 0),
                E.lineTo(0, 0),
                E.fill(),
                d &&
                  f < 1 &&
                  (this.animationFrameRequestId = window.requestAnimationFrame(
                    this.updateAnimation
                  ));
            });
        }
      }
      u.defaultProps = { animate: !0 };
      var d = u;
    },
    642400: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return m;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("394846"),
        o = n("77078"),
        u = n("892313"),
        d = n("701909"),
        c = n("145131"),
        f = n("109507"),
        E = n("49111"),
        h = n("782340"),
        _ = n("450552"),
        C = n("890957");
      let I = d.default.getArticleURL(E.HelpdeskArticles.VERIFICATION_FAQ);
      class S extends s.PureComponent {
        renderFields() {
          let {
            types: e,
            captchaKey: t,
            theme: n,
            onCaptchaVerify: s,
          } = this.props;
          return (0, a.jsx)(a.Fragment, {
            children: e.map(e =>
              e === E.VerificationTypes.CAPTCHA
                ? (0, a.jsx)(f.default, { onVerify: s, theme: n }, t)
                : (0, a.jsx)(
                    o.Button,
                    {
                      className: i(C.marginBottom20),
                      onClick: () => this.handleClick(e),
                      children: u.default.getButtonTitle(e),
                    },
                    e
                  )
            ),
          });
        }
        render() {
          return (0, a.jsxs)(c.default, {
            className: _.verification,
            align: c.default.Align.CENTER,
            direction: c.default.Direction.VERTICAL,
            children: [
              (0, a.jsxs)(c.default, {
                className: i(_.container, { [_.isMobile]: r.isMobile }),
                direction: c.default.Direction.VERTICAL,
                align: c.default.Align.CENTER,
                justify: c.default.Justify.CENTER,
                children: [
                  (0, a.jsx)("div", { className: _.image }),
                  (0, a.jsx)("div", {
                    className: i(_.title, C.marginTop20),
                    children: h.default.Messages.VERIFICATION_TITLE,
                  }),
                  (0, a.jsx)("div", {
                    className: i(_.body, C.marginTop4, C.marginBottom20),
                    children:
                      h.default.Messages.VERIFICATION_BODY_WITH_HELP_LINK.format(
                        { helpCenterURL: I }
                      ),
                  }),
                  (0, a.jsx)(c.default, {
                    grow: 0,
                    direction: c.default.Direction.VERTICAL,
                    justify: c.default.Justify.CENTER,
                    children: this.renderFields(),
                  }),
                ],
              }),
              (0, a.jsx)("div", {
                className: i(_.footer, C.marginTop20),
                children: h.default.Messages.VERIFICATION_FOOTER,
              }),
              (0, a.jsxs)(c.default, {
                className: i(C.marginTop4, C.marginBottom20),
                grow: 0,
                children: [
                  (0, a.jsx)("div", {
                    className: i(_.footer, _.footerAction),
                    children:
                      h.default.Messages.VERIFICATION_FOOTER_SUPPORT.format({
                        supportURL: d.default.getSubmitRequestURL(),
                      }),
                  }),
                  (0, a.jsx)("div", {
                    className: i(_.footer, _.footerBullet),
                    children: "•",
                  }),
                  (0, a.jsx)("div", {
                    className: i(_.footer, _.footerAction),
                    children:
                      h.default.Messages.VERIFICATION_FOOTER_LOGOUT.format({
                        logoutOnClick: this.props.onLogout,
                      }),
                  }),
                ],
              }),
            ],
          });
        }
        constructor(...e) {
          super(...e),
            (this.handleClick = e => {
              let { onClick: t } = this.props;
              null == t || t(e);
            });
        }
      }
      S.defaultProps = {
        types: [E.VerificationTypes.CAPTCHA],
        onCaptchaVerify: E.NOOP,
        onLogout: E.NOOP,
      };
      var m = S;
    },
    311450: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("75196");
      function l(e) {
        let {
          width: t = 24,
          height: n = 24,
          color: l = "currentColor",
          foreground: i,
          ...r
        } = e;
        return (0, a.jsxs)("svg", {
          ...(0, s.default)(r),
          width: t,
          height: n,
          viewBox: "0 0 24 24",
          fill: "none",
          children: [
            (0, a.jsxs)("g", {
              className: i,
              fill: l,
              clipPath: "url(#a)",
              children: [
                (0, a.jsx)("path", {
                  d: "M14.8377 9.86956a2.79875 2.79875 0 0 1 1.9166.70444 2.7981 2.7981 0 0 1 .9278 1.8188.59587.59587 0 0 1 .0459.2753v9.4968H4.51517v-8.2581l9.17563-3.8078a3.2101 3.2101 0 0 1 1.1469-.22944Zm0-1.83512a5.23024 5.23024 0 0 0-1.8351.36703L3.27647 12.4387a.96346.96346 0 0 0-.59641.9176v9.6344c0 .2676.10633.5244.29562.7137.18928.1892.446.2956.71369.2956H19.5631V12.6681c0-.1376-.0458-.2753-.0458-.4129-.1041-1.164-.644-2.2457-1.5118-3.02835a4.63378 4.63378 0 0 0-3.1678-1.19241Z",
                }),
                (0, a.jsx)("path", {
                  d: "M19.563 24c.4889-.0735.9351-.32 1.2577-.6946a2.06455 2.06455 0 0 0 0-2.6939 2.06443 2.06443 0 0 0-1.2577-.6946M10.6797 3.3208c0-.6889.8077-2.32504 1.2308-3.1431.0266-.05384.0656-.09872.1129-.12997C12.0708.01648 12.1247 0 12.1797 0c.0549 0 .1089.01648.1563.04773.0473.03125.0863.07613.1129.12996.4616.81807 1.2308 2.45421 1.2308 3.14311 0 .44535-.158.87246-.4394 1.18737C12.959 4.82308 12.5775 5 12.1797 5c-.3978 0-.7794-.17692-1.0607-.49183s-.4393-.74202-.4393-1.18737Z",
                }),
                (0, a.jsx)("path", {
                  fillRule: "evenodd",
                  d: "M12.1797 6.16742c.8284 0 1.5.67157 1.5 1.5V11.2c0 .8284-.6716 1.5-1.5 1.5s-1.5-.6716-1.5-1.5V7.66742c0-.82843.6716-1.5 1.5-1.5Z",
                  clipRule: "evenodd",
                }),
                (0, a.jsx)("path", {
                  d: "M4.51529 13.2187c-.4867 0-.95347.1933-1.29762.5375a1.83498 1.83498 0 0 0-.53749 1.2976v7.9369A1.0093 1.0093 0 0 0 3.68949 24H19.5633V13.2187H4.51529Zm9.17561 8.258H4.79056v-2.0645h8.90034c.2607.021.5054.134.6903.319.185.1849.298.4296.319.6903.0062.1364-.0153.2726-.0632.4004-.048.1278-.1213.2445-.2157.3432a1.0077 1.0077 0 0 1-.3333.2306 1.00732 1.00732 0 0 1-.3971.081Zm0-4.0372H4.79056V15.375h8.90034a.96291.96291 0 0 1 .377.0899.96339.96339 0 0 1 .3112.2312c.1083.0878.194.2002.2499.3279.0558.1278.0803.267.0712.4061 0 .2677-.1063.5245-.2956.7137-.1893.1893-.446.2957-.7137.2957Z",
                }),
              ],
            }),
            (0, a.jsx)("defs", {
              children: (0, a.jsx)("clipPath", {
                id: "a",
                children: (0, a.jsx)("path", {
                  fill: "#fff",
                  d: "M0 0h24v24H0z",
                }),
              }),
            }),
          ],
        });
      }
    },
    858722: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("351275"),
        l = n("75196");
      function i(e) {
        return "CloudDone-".concat(e);
      }
      function r(e) {
        let {
            width: t = 24,
            height: n = 24,
            color: r = "currentColor",
            foreground: o,
            gradientConfig: u,
            ...d
          } = e,
          c = null;
        return (
          null != u &&
            (c = (0, a.jsx)(s.default, { ...u, color: r, id: i(u.id) })),
          (0, a.jsxs)("svg", {
            ...(0, l.default)(d),
            width: t,
            height: n,
            viewBox: "0 0 24 24",
            children: [
              (0, a.jsx)("defs", { children: c }),
              (0, a.jsx)("path", { d: "M0 0h24v24H0z", fill: "none" }),
              (0, a.jsx)("path", {
                fill: null != u ? "url(#".concat(i(u.id), ")") : r,
                className: o,
                d: "M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM10 17l-3.5-3.5 1.41-1.41L10 14.17 15.18 9l1.41 1.41L10 17z",
              }),
            ],
          })
        );
      }
    },
    220978: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("469563"),
        l = n("691096"),
        i = n("351275"),
        r = n("75196");
      function o(e) {
        return "CloudDownload-".concat(e);
      }
      var u = (0, s.replaceIcon)(
        function (e) {
          let {
              width: t = 24,
              height: n = 24,
              color: s = "currentColor",
              foreground: l,
              gradientConfig: u,
              ...d
            } = e,
            c = null;
          return (
            null != u &&
              (c = (0, a.jsx)(i.default, { ...u, color: s, id: o(u.id) })),
            (0, a.jsxs)("svg", {
              ...(0, r.default)(d),
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              children: [
                (0, a.jsx)("defs", { children: c }),
                (0, a.jsx)("path", { d: "M0 0h24v24H0z", fill: "none" }),
                (0, a.jsx)("path", {
                  fill: null != u ? "url(#".concat(o(u.id), ")") : s,
                  className: l,
                  d: "M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM17 13l-5 5-5-5h3V9h4v4h3z",
                }),
              ],
            })
          );
        },
        l.DownloadIcon,
        void 0,
        { size: 24 }
      );
    },
    581454: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return u;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("469563"),
        l = n("596256"),
        i = n("351275"),
        r = n("75196");
      function o(e) {
        return "CloudUpload-".concat(e);
      }
      var u = (0, s.replaceIcon)(
        function (e) {
          let {
              width: t = 24,
              height: n = 24,
              color: s = "currentColor",
              foreground: l,
              gradientConfig: u,
              ...d
            } = e,
            c = null;
          return (
            null != u &&
              (c = (0, a.jsx)(i.default, { ...u, color: s, id: o(u.id) })),
            (0, a.jsxs)("svg", {
              ...(0, r.default)(d),
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              children: [
                (0, a.jsx)("defs", { children: c }),
                (0, a.jsx)("path", { d: "M0 0h24v24H0z", fill: "none" }),
                (0, a.jsx)("path", {
                  fill: null != u ? "url(#".concat(o(u.id), ")") : s,
                  className: l,
                  d: "M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z",
                }),
              ],
            })
          );
        },
        l.UploadIcon,
        void 0,
        { size: 24 }
      );
    },
    743826: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("469563"),
        l = n("422244"),
        i = n("75196"),
        r = (0, s.replaceIcon)(
          function (e) {
            let {
              width: t = 23,
              height: n = 18,
              color: s = "currentColor",
              ...l
            } = e;
            return (0, a.jsx)("svg", {
              ...(0, i.default)(l),
              width: t,
              height: n,
              viewBox: "0 0 23 18",
              fill: "none",
              children: (0, a.jsx)("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M1.63373 2.18776C1.99762 0.893925 3.17765 0 4.52168 0H5.99904C6.55132 0 6.99904 0.447715 6.99904 1V4.98282C6.99904 4.99819 6.99892 5.01354 6.9987 5.02886C6.99896 5.03058 6.9991 5.03234 6.9991 5.03414C6.9991 5.50023 6.89159 5.94121 6.70001 6.33363C6.21831 7.32031 5.20515 8 4.03324 8C4.02466 8 4.01609 7.99996 4.00753 7.99989C3.99898 7.99996 3.99043 8 3.98186 8C1.9825 8 0.536052 6.09062 1.07737 4.16593L1.63373 2.18776ZM8.99904 0C8.44676 0 7.99904 0.447715 7.99904 1V5C7.99904 6.5533 9.17954 7.83088 10.6923 7.98451C10.7932 7.99475 10.8955 8 10.999 8C10.9991 8 10.9991 8 10.9991 8C12.1789 8 13.1996 7.31899 13.6896 6.32862C13.883 5.93771 13.9937 5.49859 13.9989 5.03414C13.9989 5.0335 13.9989 5.03288 13.9989 5.03225C13.999 5.02151 13.999 5.01076 13.999 5V1C13.999 0.447715 13.5513 0 12.999 0H8.99904ZM15.999 0C15.4468 0 14.999 0.447715 14.999 1V4.98282C14.999 4.99845 14.9992 5.01406 14.9994 5.02963C14.9992 5.03111 14.9991 5.03261 14.9991 5.03414C14.9991 5.50023 15.1066 5.94121 15.2982 6.33363C15.7799 7.32031 16.7931 8 17.965 8C17.9735 8 17.9821 7.99996 17.9906 7.99989C17.9991 7.99996 18.0077 8 18.0162 8C20.0156 8 21.462 6.09062 20.9207 4.16593L20.3643 2.18776C20.0005 0.893924 18.8204 0 17.4764 0H15.999ZM19.9991 9.42264V17C19.9991 18.6569 18.6559 20 16.9991 20H14.2491C14.111 20 13.9991 19.8881 13.9991 19.75V14C13.9991 12.8954 13.1037 12 11.9991 12H9.99909C8.89452 12 7.99909 12.8954 7.99909 14V19.75C7.99909 19.8881 7.88716 20 7.74909 20H4.99909C3.34223 20 1.99909 18.6569 1.99909 17V9.42263C1.99909 9.2357 2.19766 9.11353 2.37121 9.18297C2.88063 9.38678 3.44019 9.5 4.03324 9.5C5.32615 9.5 6.49074 8.95057 7.30626 8.07246C7.41432 7.95611 7.60217 7.95576 7.71059 8.07178C8.53188 8.95064 9.70133 9.5 10.9991 9.5C12.2969 9.5 13.4663 8.95064 14.2876 8.07178C14.396 7.95576 14.5839 7.9561 14.6919 8.07246C15.5075 8.95057 16.672 9.5 17.965 9.5C18.558 9.5 19.1176 9.38678 19.627 9.18298C19.8005 9.11354 19.9991 9.23571 19.9991 9.42264Z",
                fill: s,
              }),
            });
          },
          l.ShopIcon,
          void 0,
          { size: 23 }
        );
    },
    447853: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("469563"),
        l = n("31"),
        i = n("75196"),
        r = (0, s.replaceIcon)(
          function (e) {
            let {
              width: t = 24,
              height: n = 24,
              color: s = "currentColor",
              className: l,
              foreground: r,
              ...o
            } = e;
            return (0, a.jsx)("svg", {
              ...(0, i.default)(o),
              className: l,
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              children: (0, a.jsx)("path", {
                className: r,
                fill: s,
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M22.447 8.11002L12.447 3.11002C12.166 2.96902 11.834 2.96902 11.552 3.11002L1.552 8.11002C1.35 8.21002 1.197 8.38402 1.107 8.57302C1.046 8.69502 1 8.90202 1 9.00502V14.77C1 15.322 1.448 15.77 2 15.77C2.552 15.77 3 15.322 3 14.77V10.172L12.015 13.927L22.372 9.93302C22.737 9.78602 22.983 9.44002 22.999 9.04602C23.016 8.65202 22.799 8.28702 22.447 8.11002ZM12 16.005C11.869 16.005 11.738 15.979 11.615 15.928L5 13.172V16.185C5 16.564 5.214 16.91 5.553 17.08C5.7173 17.1621 5.88209 17.2461 6.04836 17.3308C7.61773 18.1306 9.31996 18.998 12 18.998C14.6812 18.998 16.3872 18.1284 17.956 17.3287C18.1208 17.2447 18.2842 17.1614 18.447 17.08C18.786 16.911 19 16.564 19 16.186V13.385L12.359 15.939C12.243 15.982 12.122 16.005 12 16.005ZM1 18.005C1 17.453 1.448 17.005 2 17.005C2.552 17.005 3 17.453 3 18.005V20.005C3 20.557 2.552 21.005 2 21.005C1.448 21.005 1 20.557 1 20.005V18.005Z",
              }),
            });
          },
          l.EducationIcon,
          void 0,
          { size: 24 }
        );
    },
    351275: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return s;
          },
        });
      var a = n("37983");
      n("884691");
      var s = e => {
        let { id: t, startColor: n, stopColor: s, color: l, stop: i } = e;
        return (0, a.jsxs)("linearGradient", {
          id: t,
          children: [
            (0, a.jsx)("stop", { offset: "0", stopColor: n }),
            (0, a.jsx)("stop", { offset: i, stopColor: s }),
            (0, a.jsx)("stop", { offset: i, stopColor: l }),
            (0, a.jsx)("stop", { offset: "1", stopColor: l }),
          ],
        });
      };
    },
    89684: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("75196");
      function l(e) {
        let {
          width: t = 32,
          height: n = 32,
          color: l = "currentColor",
          ...i
        } = e;
        return (0, a.jsx)("svg", {
          ...(0, s.default)(i),
          width: t,
          height: n,
          viewBox: "0 0 ".concat(t, " ").concat(n),
          fill: "none",
          children: (0, a.jsx)("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M8 3C7.44772 3 7 3.44772 7 4V12C7 12.5523 7.44772 13 8 13C8.55228 13 9 12.5523 9 12V4C9 3.44772 8.55228 3 8 3ZM3 6C3 5.44772 3.44772 5 4 5C4.55228 5 5 5.44772 5 6V10C5 10.5523 4.55228 11 4 11C3.44772 11 3 10.5523 3 10V6ZM11 6C11 5.44772 11.4477 5 12 5C12.5523 5 13 5.44772 13 6V10C13 10.5523 12.5523 11 12 11C11.4477 11 11 10.5523 11 10V6Z",
            fill: l,
          }),
        });
      }
    },
    517425: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("469563"),
        l = n("283322"),
        i = n("75196"),
        r = (0, s.replaceIcon)(
          function (e) {
            let {
              width: t = 24,
              height: n = 24,
              color: s = "currentColor",
              className: l,
              foreground: r,
              ...o
            } = e;
            return (0, a.jsx)("svg", {
              ...(0, i.default)(o),
              className: l,
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              children: (0, a.jsx)("path", {
                className: r,
                fill: s,
                d: "M19.396 3.29898C19.016 3.01598 18.524 2.93098 18.07 3.06498L8.07 6.06498C7.435 6.25498 7 6.83998 7 7.50298V15.054C6.835 15.03 6.671 15.003 6.5 15.003C4.566 15.003 3 16.571 3 18.503C3 20.434 4.566 22.003 6.5 22.003C8.434 22.003 10 20.434 10 18.503V8.61798L17 6.51798V13.054C16.835 13.03 16.671 13.003 16.5 13.003C14.566 13.003 13 14.571 13 16.503C13 18.434 14.566 20.003 16.5 20.003C18.434 20.003 20 18.434 20 16.503V4.50298C20 4.02698 19.775 3.58198 19.396 3.29898Z",
              }),
            });
          },
          l.MusicIcon,
          void 0,
          { size: 24 }
        );
    },
    406019: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("469563"),
        l = n("902515"),
        i = n("75196"),
        r = (0, s.replaceIcon)(
          function (e) {
            let {
              width: t = 24,
              height: n = 24,
              color: s = "currentColor",
              foreground: l,
              ...r
            } = e;
            return (0, a.jsxs)("svg", {
              ...(0, i.default)(r),
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              xmlns: "http://www.w3.org/2000/svg",
              children: [
                (0, a.jsx)("path", {
                  className: l,
                  d: "M10.889 4C10.889 3.44772 11.3367 3 11.889 3H12.1112C12.6635 3 13.1112 3.44772 13.1112 4V20C13.1112 20.5523 12.6635 21 12.1112 21H11.889C11.3367 21 10.889 20.5523 10.889 20V4Z",
                  fill: s,
                }),
                (0, a.jsx)("path", {
                  className: l,
                  d: "M6.44439 6.25C6.44439 5.69772 6.89211 5.25 7.44439 5.25H7.66661C8.2189 5.25 8.66661 5.69772 8.66661 6.25V17.75C8.66661 18.3023 8.2189 18.75 7.66661 18.75H7.44439C6.89211 18.75 6.44439 18.3023 6.44439 17.75V6.25Z",
                  fill: s,
                }),
                (0, a.jsx)("path", {
                  className: l,
                  d: "M3.22222 15.375C3.77451 15.375 4.22222 14.9273 4.22222 14.375L4.22222 9.625C4.22222 9.07272 3.77451 8.625 3.22222 8.625H3C2.44772 8.625 2 9.07272 2 9.625V14.375C2 14.9273 2.44772 15.375 3 15.375H3.22222Z",
                  fill: s,
                }),
                (0, a.jsx)("path", {
                  className: l,
                  d: "M22.0001 13.25C22.0001 13.8023 21.5523 14.25 21.0001 14.25H20.7778C20.2255 14.25 19.7778 13.8023 19.7778 13.25V10.75C19.7778 10.1977 20.2255 9.75 20.7778 9.75H21.0001C21.5523 9.75 22.0001 10.1977 22.0001 10.75V13.25Z",
                  fill: s,
                }),
                (0, a.jsx)("path", {
                  className: l,
                  d: "M16.3333 7.5C15.781 7.5 15.3333 7.94772 15.3333 8.5V15.5C15.3333 16.0523 15.781 16.5 16.3333 16.5H16.5555C17.1078 16.5 17.5555 16.0523 17.5555 15.5V8.5C17.5555 7.94772 17.1078 7.5 16.5555 7.5H16.3333Z",
                  fill: s,
                }),
              ],
            });
          },
          l.WaveformIcon,
          void 0,
          { size: 24 }
        );
    },
    220075: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("469563"),
        l = n("215118"),
        i = n("75196"),
        r = (0, s.replaceIcon)(
          function (e) {
            let {
              width: t = 24,
              height: n = 24,
              color: s = "currentColor",
              foreground: l,
              ...r
            } = e;
            return (0, a.jsxs)("svg", {
              ...(0, i.default)(r),
              width: t,
              height: n,
              viewBox: "0 0 48 48",
              fill: "none",
              xmlns: "http://www.w3.org/2000/svg",
              children: [
                (0, a.jsx)("path", {
                  d: "M30.6666 24.9644L35.1111 20.5199V31C35.1111 32.1046 34.2156 33 33.1111 33H32.6666C31.562 33 30.6666 32.1046 30.6666 31V24.9644Z",
                  fill: s,
                }),
                (0, a.jsx)("path", {
                  d: "M26.2224 14.1463V8C26.2224 6.89543 25.327 6 24.2224 6H23.7779C22.6734 6 21.7779 6.89543 21.7779 8V18.5907L26.2224 14.1463Z",
                  fill: s,
                }),
                (0, a.jsx)("path", {
                  d: "M21.7779 33.8543L21.9254 33.7056L26.2224 29.4086V40C26.2224 41.1046 25.327 42 24.2224 42H23.7779C22.6734 42 21.7779 41.1046 21.7779 40V33.8543Z",
                  fill: s,
                }),
                (0, a.jsx)("path", {
                  d: "M17.3332 23.0354L12.8888 27.4799V12.5C12.8888 11.3954 13.7842 10.5 14.8888 10.5H15.3332C16.4378 10.5 17.3332 11.3954 17.3332 12.5V23.0354Z",
                  fill: s,
                }),
                (0, a.jsx)("path", {
                  d: "M8.44445 28.75C8.44445 29.8546 7.54902 30.75 6.44445 30.75H6C4.89543 30.75 4 29.8546 4 28.75V19.25C4 18.1454 4.89543 17.25 6 17.25H6.44445C7.54902 17.25 8.44445 18.1454 8.44445 19.25L8.44445 28.75Z",
                  fill: s,
                }),
                (0, a.jsx)("path", {
                  d: "M44.0001 26.5C44.0001 27.6046 43.1047 28.5 42.0001 28.5H41.5557C40.4511 28.5 39.5557 27.6046 39.5557 26.5V21.5C39.5557 20.3954 40.4511 19.5 41.5557 19.5H42.0001C43.1047 19.5 44.0001 20.3954 44.0001 21.5V26.5Z",
                  fill: s,
                }),
                (0, a.jsx)("path", {
                  d: "M42 8.54L39.46 6L6 39.46L8.54 42L16.92 33.64L19.38 31.16L22.7 27.84L29.98 20.56L42 8.54Z",
                  fill: s,
                  className: l,
                }),
              ],
            });
          },
          l.WaveformSlashIcon,
          void 0,
          { size: 24 }
        );
    },
    688342: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("469563"),
        l = n("496061"),
        i = n("75196"),
        r = (0, s.replaceIcon)(
          function (e) {
            let {
              width: t = 24,
              height: n = 24,
              color: s = "currentColor",
              foreground: l,
              ...r
            } = e;
            return (0, a.jsx)("svg", {
              ...(0, i.default)(r),
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              children: (0, a.jsxs)("g", {
                fill: "none",
                fillRule: "evenodd",
                children: [
                  (0, a.jsx)("path", {
                    className: l,
                    fill: s,
                    d: "M8.67872 19H11V21H7V23H17V21H13V19H20C21.103 19 22 18.104 22 17V6C22 5.89841 21.9924 5.79857 21.9777 5.70101L20 7.67872V15H12.6787L8.67872 19ZM13.1496 6H4V15H4.14961L2.00515 17.1445C2.00174 17.0967 2 17.0486 2 17V6C2 4.897 2.897 4 4 4H15.1496L13.1496 6Z",
                  }),
                  (0, a.jsx)("rect", {
                    x: "2",
                    y: "20",
                    width: "26",
                    height: "2",
                    transform: "rotate(-45 2 20)",
                    fill: "#ed4245",
                  }),
                ],
              }),
            });
          },
          l.ScreenSlashIcon,
          void 0,
          { size: 24 }
        );
    },
    874293: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("75196");
      function l(e) {
        let {
          width: t = 80,
          height: n = 20,
          color: l = "currentColor",
          foreground: i,
          ...r
        } = e;
        return (0, a.jsxs)("svg", {
          ...(0, s.default)(r),
          width: t,
          height: n,
          viewBox: "0 0 ".concat(t, " ").concat(n),
          children: [
            (0, a.jsx)("pattern", {
              id: "pill-frame-pattern",
              width: 8 / t,
              height: "1",
              children: (0, a.jsx)("path", {
                d: "m0 0h8v20h-8zm4 2c-1.1045695 0-2 .8954305-2 2v12c0 1.1045695.8954305 2 2 2s2-.8954305 2-2v-12c0-1.1045695-.8954305-2-2-2z",
                fillRule: "evenodd",
                fill: l,
                className: i,
              }),
            }),
            (0, a.jsx)("rect", {
              fill: "url(#pill-frame-pattern)",
              height: "100%",
              width: "100%",
            }),
          ],
        });
      }
    },
    709071: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("469563"),
        l = n("91297"),
        i = n("75196"),
        r = (0, s.replaceIcon)(
          function (e) {
            let {
              width: t = 24,
              height: n = 24,
              color: s = "currentColor",
              className: l,
              foreground: r,
              ...o
            } = e;
            return (0, a.jsx)("svg", {
              ...(0, i.default)(o),
              className: l,
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              children: (0, a.jsx)("path", {
                className: r,
                fill: s,
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M18.6683 11.9964C19.5992 13.2208 20.3732 14.4331 20.9422 15.5701C22.5858 18.8593 22.0118 20.4688 21.2418 21.2398C20.895 21.5846 20.2596 21.9978 19.1951 21.9978C17.3645 21.9978 14.7478 20.7553 12.0004 18.6683C9.25198 20.7553 6.63527 21.9978 4.80569 21.9978C3.74111 21.9978 3.10478 21.5846 2.75896 21.2398C1.98792 20.4677 1.41392 18.8593 3.05853 15.5701C3.62751 14.4331 4.40257 13.2218 5.33245 11.9964C2.51569 8.28291 1.00176 4.51719 2.75896 2.75898C3.10578 2.41316 3.74111 2 4.80569 2C6.63628 2 9.25298 3.24251 12.0004 5.32944C14.7488 3.24251 17.3655 2 19.1951 2C20.2596 2 20.895 2.41216 21.2418 2.75898C22.999 4.51618 21.4851 8.28191 18.6683 11.9964ZM19.8203 4.18042C19.6806 4.03969 19.4032 4.01053 19.1951 4.01053C18.0481 4.01053 15.9933 4.9203 13.6209 6.64835C15.0262 7.86472 16.2346 9.08512 17.3655 10.395C19.752 7.13188 20.3541 4.71422 19.8203 4.18042ZM14.1325 14.1316C14.8654 13.3987 15.5108 12.689 16.0928 12.0024C15.4876 11.2856 14.8342 10.5689 14.1325 9.86621C13.4128 9.14744 12.701 8.51312 12.0004 7.92202C11.2997 8.51312 10.588 9.14744 9.86821 9.86621C9.16653 10.5689 8.51311 11.2856 7.90794 12.0024C8.48999 12.689 9.13637 13.3987 9.86821 14.1316C10.588 14.8513 11.2997 15.4856 12.0004 16.0747C12.701 15.4856 13.4128 14.8513 14.1325 14.1316ZM4.80569 4.01053C4.5986 4.01053 4.32115 4.03969 4.18142 4.18042C3.64661 4.71422 4.24977 7.13088 6.63628 10.394C7.83556 9.00469 9.05696 7.79435 10.3799 6.64735C8.00645 4.9203 5.95269 4.01053 4.80569 4.01053ZM4.18041 19.8183C4.32014 19.9581 4.5976 19.9872 4.80569 19.9872C5.95269 19.9872 8.00746 19.0785 10.3799 17.3514C8.98357 16.1421 7.7873 14.9348 6.6413 13.6078C5.92053 14.593 5.31133 15.56 4.85695 16.4688C3.79539 18.5909 3.9502 19.5881 4.18041 19.8183ZM19.1941 19.9872C19.4021 19.9872 19.6796 19.9581 19.8193 19.8183C20.0495 19.5881 20.2044 18.5919 19.1428 16.4688C18.6884 15.559 18.0792 14.592 17.3584 13.6078C16.2114 14.9358 15.0152 16.1431 13.6199 17.3514C15.9933 19.0785 18.0471 19.9872 19.1941 19.9872ZM14.0109 11.9984C14.0109 13.1088 13.1108 14.0089 12.0004 14.0089C10.89 14.0089 9.98984 13.1088 9.98984 11.9984C9.98984 10.888 10.89 9.98784 12.0004 9.98784C13.1108 9.98784 14.0109 10.888 14.0109 11.9984Z",
              }),
            });
          },
          l.ScienceIcon,
          void 0,
          { size: 24 }
        );
    },
    50647: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("75196");
      function l(e) {
        let {
          width: t = 14,
          height: n = 14,
          color: l = "currentColor",
          foreground: i,
          ...r
        } = e;
        return (0, a.jsx)("svg", {
          ...(0, s.default)(r),
          width: t,
          height: n,
          viewBox: "0 0 14 14",
          children: (0, a.jsx)("path", {
            fill: l,
            className: i,
            d: "M6.99471698,9.67522659 C8.47108874,9.67522659 9.66792453,8.47748685 9.66792453,7 C9.66792453,5.52251315 8.47108874,4.32477341 6.99471698,4.32477341 C5.51834522,4.32477341 4.32150943,5.52251315 4.32150943,7 C4.32150943,8.47748685 5.51834522,9.67522659 6.99471698,9.67522659 Z M6.99471698,2.67522659 C8.18867925,2.67522659 9.26641509,3.16163142 10.0483019,3.94410876 L11.9396226,2.05135952 C10.6822642,0.782477341 8.92830189,0 6.99471698,0 C3.12754717,0 0,3.14048338 0,7 L2.67320755,7 C2.67320755,4.6102719 4.60679245,2.67522659 6.99471698,2.67522659 Z M11.3267925,7 C11.3267925,9.3897281 9.39320755,11.3247734 7.00528302,11.3247734 C5.81132075,11.3247734 4.73358491,10.8383686 3.94113208,10.0558912 L2.04981132,11.9486405 C3.31773585,13.2175227 5.06113208,14 6.99471698,14 C10.8618868,14 14,10.8595166 14,7 L11.3267925,7 Z",
          }),
        });
      }
    },
    304121: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return l;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("75196");
      function l(e) {
        let {
          width: t = 20,
          height: n = 20,
          color: l = "currentColor",
          ...i
        } = e;
        return (0, a.jsxs)("svg", {
          ...(0, s.default)(i),
          width: t,
          height: n,
          viewBox: "0 0 18 18",
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg",
          children: [
            (0, a.jsx)("path", {
              d: "M13.4996 0H6.72144C6.62254 1.34004e-06 6.52586 0.0293272 6.44363 0.0842743C6.36141 0.139221 6.29733 0.217322 6.25949 0.308693C6.22165 0.400063 6.21176 0.500602 6.23106 0.597595C6.25037 0.694589 6.298 0.783679 6.36794 0.8536L7.63564 2.1213C7.82317 2.30884 7.92853 2.56319 7.92853 2.8284C7.92853 3.09361 7.82317 3.34796 7.63564 3.5355L6.22144 4.9498C5.65884 5.51241 5.34277 6.27546 5.34277 7.0711C5.34277 7.86674 5.65884 8.62979 6.22144 9.1924C6.40897 9.37993 6.66331 9.48528 6.92853 9.48528C7.19374 9.48528 7.4481 9.37993 7.63564 9.1924L9.75703 7.0711C10.1321 6.69603 10.6408 6.48533 11.1712 6.48533C11.7017 6.48533 12.2104 6.69603 12.5854 7.0711L13.146 7.6317C13.2159 7.70164 13.305 7.74927 13.402 7.76858C13.499 7.78788 13.5996 7.77799 13.6909 7.74015C13.7823 7.70231 13.8604 7.63823 13.9154 7.556C13.9703 7.47377 13.9996 7.37709 13.9996 7.2782V0.5C13.9996 0.367392 13.9469 0.240214 13.8532 0.146446C13.7594 0.052678 13.6322 0 13.4996 0Z",
              fill: l,
            }),
            (0, a.jsx)("path", {
              d: "M4.5 17.9999H11.2782C11.3771 17.9999 11.4738 17.9706 11.556 17.9157C11.6382 17.8607 11.7023 17.7826 11.7401 17.6912C11.778 17.5999 11.7879 17.4993 11.7686 17.4023C11.7493 17.3053 11.7016 17.2163 11.6317 17.1463L10.364 15.8786C10.1765 15.6911 10.0711 15.4367 10.0711 15.1715C10.0711 14.9063 10.1765 14.652 10.364 14.4644L11.7782 13.0501C12.3408 12.4875 12.6569 11.7245 12.6569 10.9288C12.6569 10.1332 12.3408 9.37014 11.7782 8.80753C11.5907 8.62 11.3363 8.51465 11.0711 8.51465C10.8059 8.51465 10.5515 8.62 10.364 8.80753L8.2426 10.9288C7.86753 11.3039 7.35883 11.5146 6.8284 11.5146C6.29797 11.5146 5.78927 11.3039 5.4142 10.9288L4.85361 10.3682C4.78369 10.2983 4.69459 10.2507 4.5976 10.2314C4.5006 10.2121 4.40006 10.2219 4.30869 10.2598C4.21731 10.2976 4.13922 10.3617 4.08427 10.4439C4.02933 10.5262 4 10.6228 4 10.7217V17.4999C4 17.6325 4.05269 17.7597 4.14645 17.8535C4.24022 17.9473 4.36739 17.9999 4.5 17.9999Z",
              fill: l,
            }),
          ],
        });
      }
    },
    300113: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("469563"),
        l = n("769174"),
        i = n("75196"),
        r = (0, s.replaceIcon)(
          function (e) {
            let {
              width: t = 24,
              height: n = 24,
              color: s = "currentColor",
              className: l,
              foreground: r,
              ...o
            } = e;
            return (0, a.jsx)("svg", {
              ...(0, i.default)(o),
              className: l,
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              children: (0, a.jsx)("path", {
                className: r,
                fill: s,
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M17.722 3.00098H21C21.553 3.00098 22 3.44898 22 4.00098V8.00098C22 8.30498 21.861 8.59298 21.625 8.78198L16.696 12.724C15.794 13.86 14.49 14.659 13 14.911V16.001H15C15.553 16.001 16 16.449 16 17.001V19.001H8V17.001C8 16.449 8.447 16.001 9 16.001H11V14.911C9.51 14.659 8.206 13.86 7.304 12.724L2.375 8.78198C2.139 8.59298 2 8.30498 2 8.00098V4.00098C2 3.44898 2.447 3.00098 3 3.00098H6.278C6.625 2.40598 7.263 2.00098 8 2.00098H16C16.738 2.00098 17.375 2.40598 17.722 3.00098ZM4 5.00098V7.52098L6.006 9.12598C6.006 9.10435 6.00448 9.08348 6.00297 9.06274C6.00148 9.04224 6 9.02185 6 9.00098V5.00098H4ZM17.994 9.12698L20 7.52098V5.00098H18V9.00098C18 9.02173 17.9985 9.042 17.9971 9.0625C17.9955 9.08349 17.994 9.10472 17.994 9.12698ZM7 20.001H17V22.001H7V20.001Z",
              }),
            });
          },
          l.TrophyIcon,
          void 0,
          { size: 24 }
        );
    },
    15435: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("469563"),
        l = n("409186"),
        i = n("75196"),
        r = (0, s.replaceIcon)(
          function (e) {
            let {
              width: t = 20,
              height: n = 16,
              color: s = "currentColor",
              className: l,
              foreground: r,
              ...o
            } = e;
            return (0, a.jsx)("svg", {
              className: l,
              width: t,
              height: n,
              viewBox: "0 0 20 16",
              ...(0, i.default)(o),
              children: (0, a.jsxs)("g", {
                fill: "none",
                fillRule: "evenodd",
                children: [
                  (0, a.jsx)("path", {
                    className: r,
                    fill: s,
                    d: "M1,14.1538462 L1.95,14.1538462 C3.73125,14.1538462 5.5125,13.5384615 6.81875,12.4307692 C5.15625,12.4307692 3.73125,11.2 3.1375,9.6 C3.375,9.6 3.6125,9.72307692 3.85,9.72307692 C4.20625,9.72307692 4.5625,9.72307692 4.91875,9.6 C3.1375,9.23076923 1.7125,7.63076923 1.7125,5.66153846 C2.1875,5.90769231 2.78125,6.15384615 3.49375,6.15384615 C2.425,5.41538462 1.83125,4.18461538 1.83125,2.70769231 C1.83125,1.96923077 2.06875,1.23076923 2.30625,0.615384615 C4.20625,3.07692308 7.05625,4.67692308 10.38125,4.8 C10.2625,4.67692308 10.2625,4.30769231 10.2625,4.06153846 C10.2625,1.84615385 12.04375,0 14.18125,0 C15.25,0 16.31875,0.492307692 17.03125,1.23076923 C17.8625,1.10769231 18.8125,0.738461538 19.525,0.246153846 C19.2875,1.23076923 18.575,1.96923077 17.8625,2.46153846 C18.575,2.46153846 19.2875,2.21538462 20,1.84615385 C19.525,2.70769231 18.8125,3.32307692 18.1,3.93846154 L18.1,4.43076923 C18.1,9.84615385 14.18125,16 6.9375,16 C4.68125,16 2.6625,15.3846154 1,14.1538462 Z",
                  }),
                  (0, a.jsx)("rect", { width: "20", height: "16" }),
                ],
              }),
            });
          },
          l.XNeutralIcon,
          void 0,
          { size: 16 }
        );
    },
    364719: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return r;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("469563"),
        l = n("779807"),
        i = n("75196"),
        r = (0, s.replaceIcon)(
          function (e) {
            let {
              width: t = 16,
              height: n = 16,
              color: s = "currentColor",
              foreground: l,
              ...r
            } = e;
            return (0, a.jsx)("svg", {
              ...(0, i.default)(r),
              width: t,
              height: n,
              viewBox: "0 0 24 24",
              children: (0, a.jsx)("g", {
                fill: "none",
                fillRule: "evenodd",
                children: (0, a.jsx)("path", {
                  className: l,
                  fill: s,
                  d: "M1,21 L23,21 L12,2 L1,21 L1,21 Z M13,18 L11,18 L11,16 L13,16 L13,18 L13,18 Z M13,14 L11,14 L11,10 L13,10 L13,14 L13,14 Z",
                }),
              }),
            });
          },
          l.WarningIcon,
          void 0,
          { size: 16 }
        );
    },
    663449: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return N;
          },
        }),
        n("222007");
      var a = n("37983"),
        s = n("884691"),
        l = n("414456"),
        i = n.n(l),
        r = n("627445"),
        o = n.n(r),
        u = n("77078"),
        d = n("506885"),
        c = n("145131"),
        f = n("533403"),
        E = n("945330"),
        h = n("925877"),
        _ = n("701909"),
        C = n("962541"),
        I = n("762489"),
        S = n("329858"),
        m = n("49111"),
        p = n("782340"),
        T = n("32478");
      let g = { HOST: 5, LISTENER: 4 };
      class A extends s.PureComponent {
        isHost() {
          let { currentUser: e, host: t } = this.props;
          return e.id === (null == t ? void 0 : t.id);
        }
        renderTitle() {
          return (0, a.jsxs)("div", {
            children: [
              (0, a.jsx)(S.default, {
                children: this.isHost()
                  ? p.default.Messages.SPOTIFY_LISTEN_ALONG_TITLE_HOST.format({
                      count: this.props.party.length,
                    })
                  : p.default.Messages.SPOTIFY_LISTEN_ALONG_TITLE_LISTENER,
              }),
              (0, a.jsx)(I.default, {
                children:
                  p.default.Messages.SPOTIFY_LISTEN_ALONG_SUBTITLE_LISTENER,
              }),
            ],
          });
        }
        renderStopListeningButton() {
          let { onStopListening: e } = this.props;
          return this.isHost()
            ? null
            : (0, a.jsx)(C.default, {
                tooltipText: p.default.Messages.SPOTIFY_LISTEN_ALONG_STOP,
                onClick: e,
                icon: E.default,
              });
        }
        renderHelpIcon() {
          return this.isHost()
            ? (0, a.jsx)(C.default, {
                tooltipText: p.default.Messages.SPOTIFY_LISTEN_ALONG_INFO,
                onClick: () => {
                  window.open(
                    _.default.getArticleURL(
                      m.HelpdeskArticles.SPOTIFY_CONNECTION
                    ),
                    "_blank"
                  );
                },
                icon: h.default,
              })
            : null;
        }
        render() {
          return (0, a.jsxs)("div", {
            className: T.listeningAlong,
            children: [
              this.renderTitle(),
              (0, a.jsx)(c.default, {
                justify: c.default.Justify.END,
                className: T.party,
                children: (0, a.jsx)(f.default, {
                  users: this.props.party,
                  max: this.isHost() ? g.HOST : g.LISTENER,
                  renderUser: this.renderPartyMember,
                  renderMoreUsers: this.renderPartyMemberOverflow,
                }),
              }),
              (0, a.jsxs)("div", {
                className: T.icons,
                children: [
                  this.renderHelpIcon(),
                  this.renderStopListeningButton(),
                ],
              }),
            ],
          });
        }
        constructor(...e) {
          super(...e),
            (this.renderPartyMember = (e, t) => {
              let n;
              if (null == e) return null;
              let {
                host: l,
                renderUserPopout: r,
                onUserContextMenu: c,
              } = this.props;
              return (
                (n =
                  (null == l ? void 0 : l.id) === e.id
                    ? p.default.Messages.SPOTIFY_LISTEN_ALONG_HOST
                    : p.default.Messages.SPOTIFY_LISTEN_ALONG_LISTENER),
                (0, a.jsx)(
                  u.Popout,
                  {
                    preload: () =>
                      (0, d.default)(e.id, e.getAvatarURL(void 0, 80)),
                    renderPopout: t => (o(null != e, ""), r(t, e)),
                    position: "top",
                    align: "center",
                    children: l =>
                      (0, a.jsx)(u.Tooltip, {
                        text: n,
                        children: n => {
                          let { onMouseEnter: a, onMouseLeave: r } = n;
                          return (0, s.createElement)(u.Avatar, {
                            ...l,
                            key: e.id,
                            src: e.getAvatarURL(void 0, 24),
                            size: u.AvatarSizes.SIZE_24,
                            className: i(T.avatar, t),
                            "aria-label": e.username,
                            onMouseEnter: a,
                            onMouseLeave: r,
                            onContextMenu: t =>
                              void (null != e && (null == c || c(t, e))),
                          });
                        },
                      }),
                  },
                  e.id
                )
              );
            }),
            (this.renderPartyMemberOverflow = (e, t, n) => {
              let { renderOverflowPopout: s } = this.props;
              return (0, a.jsx)(
                u.Popout,
                {
                  renderPopout: s,
                  children: n =>
                    (0, a.jsx)(u.Tooltip, {
                      text: p.default.Messages.SPOTIFY_LISTEN_ALONG_LISTENERS,
                      children: s =>
                        (0, a.jsx)("div", {
                          className: i(T.overflow, t),
                          ...s,
                          ...n,
                          children: e,
                        }),
                    }),
                },
                n
              );
            });
        }
      }
      var N = A;
    },
    456353: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          getPartyMetadata: function () {
            return l;
          },
        });
      var a = n("575365"),
        s = n("309570");
      function l(e) {
        return {
          af_voice_chat: e.voiceChannels.length > 0,
          af_people_count: e.partiedMembers.length,
          af_rich_presence: e.currentActivities.some(e => {
            let { activity: t } = e;
            return (0, s.default)(t);
          }),
          game_platform:
            e.currentActivities.length > 0
              ? (0, a.default)(e.currentActivities[0].activity)
              : null,
        };
      }
    },
    969388: function (e, t, n) {
      "use strict";
      function a(e) {
        let t;
        let n = !1;
        return function () {
          for (var a = arguments.length, s = Array(a), l = 0; l < a; l++)
            s[l] = arguments[l];
          return !n && ((n = !0), (t = e(...s))), t;
        };
      }
      n.r(t),
        n.d(t, {
          callOnce: function () {
            return a;
          },
        }),
        n("222007");
    },
    353908: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          EducationIcon: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("669491"),
        l = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = s.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...o
        } = e;
        return (0, a.jsxs)("svg", {
          ...(0, l.default)(o),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: [
            (0, a.jsx)("path", {
              fill: "string" == typeof i ? i : i.css,
              d: "M22.56 9.63 12.8 13.9a2 2 0 0 1-1.6 0L5 11.19V15a1 1 0 1 1-2 0v-4.69l-1.56-.68a.75.75 0 0 1-.05-1.35l9.69-5.05a2 2 0 0 1 1.84 0l9.69 5.05c.56.29.53 1.1-.05 1.35Z",
              className: r,
            }),
            (0, a.jsx)("path", {
              fill: "string" == typeof i ? i : i.css,
              d: "M6.98 18.98a.48.48 0 0 1-.28-.38l-.18-1.43a1 1 0 0 0-.1-.32l-.37-.74a.5.5 0 0 1-.05-.23v-1.7c0-.35.37-.6.7-.45l4.9 2.1c.26.1.54.1.8 0l5.9-2.53c.33-.14.7.1.7.46v3.44c0 .2-.05.39-.18.54C17.65 19.11 14.65 20 12 20c-1.73 0-3.6-.38-5.02-1.02ZM3.38 17a1 1 0 0 0-.99.88l-.25 2a1 1 0 0 0 1 1.12h1.73a1 1 0 0 0 .99-1.12l-.25-2a1 1 0 0 0-1-.88H3.39Z",
              className: r,
            }),
          ],
        });
      };
    },
    718729: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          QrCodeCameraIcon: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("669491"),
        l = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = s.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...o
        } = e;
        return (0, a.jsxs)("svg", {
          ...(0, l.default)(o),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: [
            (0, a.jsx)("path", {
              fill: "string" == typeof i ? i : i.css,
              d: "M4 6c0-1.1.9-2 2-2h3a1 1 0 0 0 0-2H6a4 4 0 0 0-4 4v3a1 1 0 0 0 2 0V6ZM4 18c0 1.1.9 2 2 2h3a1 1 0 1 1 0 2H6a4 4 0 0 1-4-4v-3a1 1 0 1 1 2 0v3ZM20 6a2 2 0 0 0-2-2h-3a1 1 0 1 1 0-2h3a4 4 0 0 1 4 4v3a1 1 0 1 1-2 0V6Z",
              className: r,
            }),
            (0, a.jsx)("path", {
              fill: "string" == typeof i ? i : i.css,
              fillRule: "evenodd",
              d: "M5 7c0-1.1.9-2 2-2h2a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V7Zm2 0h2v2H7V7ZM5 15c0-1.1.9-2 2-2h2a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2v-2Zm2 0h2v2H7v-2ZM13 7c0-1.1.9-2 2-2h2a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2h-2a2 2 0 0 1-2-2V7Zm2 0h2v2h-2V7ZM17.08 13a1.5 1.5 0 0 0-1.42 1.03c-.09.25-.3.47-.56.47H15a2 2 0 0 0-2 2V20c0 1.1.9 2 2 2h6a2 2 0 0 0 2-2v-3.5a2 2 0 0 0-2-2h-.1c-.26 0-.47-.22-.56-.47A1.5 1.5 0 0 0 18.92 13h-1.84ZM20 18a2 2 0 1 1-4 0 2 2 0 0 1 4 0Z",
              clipRule: "evenodd",
              className: r,
            }),
          ],
        });
      };
    },
    179367: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ScienceIcon: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("669491"),
        l = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = s.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...o
        } = e;
        return (0, a.jsxs)("svg", {
          ...(0, l.default)(o),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: [
            (0, a.jsx)("path", {
              fill: "string" == typeof i ? i : i.css,
              d: "M12 14a2 2 0 1 0 0-4 2 2 0 0 0 0 4Z",
              className: r,
            }),
            (0, a.jsx)("path", {
              fill: "string" == typeof i ? i : i.css,
              fillRule: "evenodd",
              d: "M19.5 15.46a13.2 13.2 0 0 0-.72-1.62c-.68.9-1.45 1.78-2.3 2.64a21.05 21.05 0 0 1-7.24 4.9c-2.24.83-4.63.98-6.12-.5-1.48-1.49-1.33-3.88-.5-6.12.33-.89.78-1.82 1.35-2.76a16.28 16.28 0 0 1-1.35-2.76c-.83-2.24-.98-4.63.5-6.12C4.61 1.64 7 1.8 9.24 2.62c.89.33 1.82.78 2.76 1.35a13.7 13.7 0 0 1 4.62-1.86c1.58-.27 3.17-.07 4.26 1.01 1.48 1.49 1.33 3.88.5 6.12-.33.89-.78 1.82-1.35 2.76.57.94 1.02 1.87 1.35 2.76.83 2.24.98 4.63-.5 6.12-1.1 1.09-2.68 1.29-4.3 1a1.5 1.5 0 0 1-2.08-1.38 1.5 1.5 0 0 1 2.9-.52c1.01.1 1.68-.14 2.06-.52.6-.6.81-1.92.04-4ZM8.54 4.5c2 .73 4.35 2.26 6.52 4.44 1 1 1.87 2.04 2.58 3.06A22.82 22.82 0 0 1 12 17.64 22.83 22.83 0 0 1 6.36 12a22.6 22.6 0 0 1 2.27-2.76 1.5 1.5 0 1 0-1.6-1.2 25 25 0 0 0-1.8 2.12c-.3-.56-.54-1.1-.73-1.62-.77-2.08-.56-3.4.04-4 .6-.6 1.92-.81 4-.04ZM4.5 15.46c.19-.52.43-1.06.72-1.62a25.3 25.3 0 0 0 4.94 4.94c-.56.29-1.1.53-1.62.72-2.08.77-3.4.56-4-.04-.6-.6-.81-1.92-.04-4ZM16.96 4.08c-.91.16-1.98.54-3.12 1.14a25.3 25.3 0 0 1 4.94 4.94c.29-.56.53-1.1.72-1.62.77-2.08.56-3.4-.04-4-.43-.43-1.23-.68-2.5-.46Z",
              clipRule: "evenodd",
              className: r,
            }),
          ],
        });
      };
    },
    921590: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          SettingsCircleIcon: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("669491"),
        l = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          secondaryColor: i = s.default.colors.STATUS_DANGER,
          secondaryColorClass: r = "",
          color: o = s.default.colors.INTERACTIVE_NORMAL,
          colorClass: u = "",
          ...d
        } = e;
        return (0, a.jsxs)("svg", {
          ...(0, l.default)(d),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: [
            (0, a.jsx)("circle", {
              cx: "19",
              cy: "19",
              r: "5",
              fill: "string" == typeof i ? i : i.css,
              className: r,
            }),
            (0, a.jsx)("path", {
              fill: "string" == typeof o ? o : o.css,
              d: "M9.92 2.08c-.07-.45.18-.93.64-.99a11.1 11.1 0 0 1 2.88 0c.46.06.7.54.64.99-.18 1.16.19 2.2.98 2.53.8.33 1.79-.14 2.49-1.1.27-.36.78-.52 1.14-.24.77.59 1.45 1.27 2.04 2.04.28.36.12.87-.24 1.14-.96.7-1.43 1.7-1.1 2.49.33.8 1.37 1.16 2.53.98.45-.07.93.18.99.64a11.1 11.1 0 0 1 .08 1.82c0 .38-.43.58-.77.4a6.97 6.97 0 0 0-5.63-.35c-.28.1-.59-.14-.59-.43a4 4 0 1 0-4 4c.3 0 .53.31.43.59a6.99 6.99 0 0 0 .35 5.63c.18.34-.02.76-.4.77a11.39 11.39 0 0 1-1.82-.08c-.46-.06-.7-.54-.64-.99.18-1.16-.19-2.2-.98-2.53-.8-.33-1.79.15-2.49 1.1-.27.36-.78.52-1.14.24a11.06 11.06 0 0 1-2.04-2.04c-.28-.36-.12-.87.24-1.14.96-.7 1.43-1.7 1.1-2.49-.33-.8-1.37-1.16-2.53-.98-.45.07-.93-.18-.99-.64a11.1 11.1 0 0 1 0-2.88c.06-.46.54-.7.99-.64 1.16.18 2.2-.19 2.53-.98.33-.8-.14-1.79-1.1-2.49-.36-.27-.52-.78-.24-1.14.59-.77 1.27-1.45 2.04-2.04.36-.28.87-.12 1.14.24.7.95 1.7 1.43 2.49 1.1.8-.33 1.16-1.37.98-2.53Z",
              className: u,
            }),
          ],
        });
      };
    },
    696597: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ShopIcon: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("669491"),
        l = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = s.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...o
        } = e;
        return (0, a.jsxs)("svg", {
          ...(0, l.default)(o),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: [
            (0, a.jsx)("path", {
              fill: "string" == typeof i ? i : i.css,
              d: "M2.63 4.19A3 3 0 0 1 5.53 2H7a1 1 0 0 1 1 1v3.98a3.07 3.07 0 0 1-.3 1.35A2.97 2.97 0 0 1 4.98 10c-2 0-3.44-1.9-2.9-3.83l.55-1.98ZM10 2a1 1 0 0 0-1 1v4a3 3 0 0 0 3 3 3 3 0 0 0 3-2.97V3a1 1 0 0 0-1-1h-4ZM17 2a1 1 0 0 0-1 1v3.98a3.65 3.65 0 0 0 0 .05A2.95 2.95 0 0 0 19.02 10c2 0 3.44-1.9 2.9-3.83l-.55-1.98A3 3 0 0 0 18.47 2H17Z",
              className: r,
            }),
            (0, a.jsx)("path", {
              fill: "string" == typeof i ? i : i.css,
              d: "M21 11.42V19a3 3 0 0 1-3 3h-2.75a.25.25 0 0 1-.25-.25V16a2 2 0 0 0-2-2h-2a2 2 0 0 0-2 2v5.75c0 .14-.11.25-.25.25H6a3 3 0 0 1-3-3v-7.58c0-.18.2-.3.37-.24a4.46 4.46 0 0 0 4.94-1.1c.1-.12.3-.12.4 0a4.49 4.49 0 0 0 6.58 0c.1-.12.3-.12.4 0a4.45 4.45 0 0 0 4.94 1.1c.17-.07.37.06.37.24Z",
              className: r,
            }),
          ],
        });
      };
    },
    437736: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          WaveformIcon: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("669491"),
        l = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = s.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...o
        } = e;
        return (0, a.jsx)("svg", {
          ...(0, l.default)(o),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: (0, a.jsx)("path", {
            fill: "string" == typeof i ? i : i.css,
            d: "M7 2a1 1 0 0 0-1 1v18a1 1 0 1 0 2 0V3a1 1 0 0 0-1-1ZM11 6a1 1 0 1 1 2 0v12a1 1 0 1 1-2 0V6ZM1 8a1 1 0 0 1 2 0v8a1 1 0 1 1-2 0V8ZM16 5a1 1 0 1 1 2 0v14a1 1 0 1 1-2 0V5ZM22 8a1 1 0 0 0-1 1v6a1 1 0 1 0 2 0V9a1 1 0 0 0-1-1Z",
            className: r,
          }),
        });
      };
    },
    569969: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          WaveformSlashIcon: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("669491"),
        l = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = s.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...o
        } = e;
        return (0, a.jsx)("svg", {
          ...(0, l.default)(o),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: (0, a.jsx)("path", {
            fill: "string" == typeof i ? i : i.css,
            d: "M22.7 2.7a1 1 0 0 0-1.4-1.4l-20 20a1 1 0 1 0 1.4 1.4l20-20ZM6.85 13.15a.5.5 0 0 1-.85-.36V3a1 1 0 0 1 2 0v8.8a.5.5 0 0 1-.15.35l-1 1ZM11 17.2v.8a1 1 0 1 0 2 0v-1.8a.5.5 0 0 0-.85-.35l-1 1a.5.5 0 0 0-.15.36ZM11 7.8V6a1 1 0 1 1 2 0v.8a.5.5 0 0 1-.15.35l-1 1a.5.5 0 0 1-.85-.36ZM17.15 10.85a.5.5 0 0 1 .85.36V19a1 1 0 1 1-2 0v-6.8a.5.5 0 0 1 .15-.35l1-1ZM2 7a1 1 0 0 0-1 1v8a1 1 0 1 0 2 0V8a1 1 0 0 0-1-1ZM21 9a1 1 0 1 1 2 0v6a1 1 0 1 1-2 0V9Z",
            className: r,
          }),
        });
      };
    },
    90769: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          XNeutralIcon: function () {
            return i;
          },
        });
      var a = n("37983");
      n("884691");
      var s = n("669491"),
        l = n("82169");
      let i = e => {
        let {
          width: t = 24,
          height: n = 24,
          color: i = s.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...o
        } = e;
        return (0, a.jsx)("svg", {
          ...(0, l.default)(o),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          fill: "none",
          viewBox: "0 0 24 24",
          children: (0, a.jsx)("path", {
            fill: "string" == typeof i ? i : i.css,
            d: "M13.86 10.47 21.15 2h-1.73l-6.33 7.35L8.04 2H2.22l7.64 11.12L2.22 22h1.72l6.68-7.77L15.96 22h5.82l-7.92-11.53Zm-2.36 2.75-.78-1.11L4.57 3.3h2.65l4.97 7.11.77 1.1 6.46 9.25h-2.65l-5.27-7.54Z",
            className: r,
          }),
        });
      };
    },
    497: function (e, t, n) {
      "use strict";
      var a;
      n.r(t),
        n.d(t, {
          default: function () {
            return a;
          },
        }),
        n("424973"),
        (a = class {
          _processQueue() {
            setTimeout(() => {
              if (this._queue.length > 0 && this._tokenCount > 0) {
                this._tokenCount--,
                  null == this._intervalID &&
                    (this._intervalID = setInterval(
                      () => this._iterate(),
                      this._intervalPeriod
                    ));
                let e = this._queue.shift();
                null == e || e(), this._processQueue();
              }
            }, 0);
          }
          _iterate() {
            (this._tokenCount = Math.min(this._capacity, this._tokenCount + 1)),
              this._tokenCount >= this._capacity &&
                null != this._intervalID &&
                (clearInterval(this._intervalID), (this._intervalID = null)),
              this._processQueue();
          }
          process() {
            return new Promise(e => {
              this._queue.push(e), this._processQueue();
            });
          }
          constructor(e, t) {
            (this._capacity = e),
              (this._tokenCount = e),
              (this._queue = []),
              (this._intervalPeriod = t / e),
              (this._intervalID = null);
          }
        });
    },
    105110: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          ButtonAction: function () {
            return a;
          },
          AnnouncementModalVariant1Properties: function () {
            return c;
          },
        }),
        n("222007"),
        n("70102"),
        n("424973");
      var a,
        s,
        l = n("849266");
      ((s = a || (a = {}))[(s.UNSPECIFIED = 0)] = "UNSPECIFIED"),
        (s[(s.OPEN_MARKETING_PAGE = 1)] = "OPEN_MARKETING_PAGE"),
        (s[(s.OPEN_TIER_2_PAYMENT_MODAL = 2)] = "OPEN_TIER_2_PAYMENT_MODAL");
      class i extends l.MessageType {
        create(e) {
          let t = {
            header: "",
            pill: "",
            body: "",
            imageLink: "",
            imageLinkLightTheme: "",
          };
          return (
            globalThis.Object.defineProperty(t, l.MESSAGE_TYPE, {
              enumerable: !1,
              value: this,
            }),
            void 0 !== e && (0, l.reflectionMergePartial)(this, t, e),
            t
          );
        }
        internalBinaryRead(e, t, n, a) {
          let s = null != a ? a : this.create(),
            i = e.pos + t;
          for (; e.pos < i; ) {
            let [t, a] = e.tag();
            switch (t) {
              case 1:
                s.header = e.string();
                break;
              case 2:
                s.pill = e.string();
                break;
              case 3:
                s.body = e.string();
                break;
              case 4:
                s.imageLink = e.string();
                break;
              case 5:
                s.imageLinkLightTheme = e.string();
                break;
              default:
                let i = n.readUnknownField;
                if ("throw" === i)
                  throw new globalThis.Error(
                    "Unknown field "
                      .concat(t, " (wire type ")
                      .concat(a, ") for ")
                      .concat(this.typeName)
                  );
                let r = e.skip(a);
                !1 !== i &&
                  (!0 === i ? l.UnknownFieldHandler.onRead : i)(
                    this.typeName,
                    s,
                    t,
                    a,
                    r
                  );
            }
          }
          return s;
        }
        internalBinaryWrite(e, t, n) {
          "" !== e.header &&
            t.tag(1, l.WireType.LengthDelimited).string(e.header),
            "" !== e.pill &&
              t.tag(2, l.WireType.LengthDelimited).string(e.pill),
            "" !== e.body &&
              t.tag(3, l.WireType.LengthDelimited).string(e.body),
            "" !== e.imageLink &&
              t.tag(4, l.WireType.LengthDelimited).string(e.imageLink),
            "" !== e.imageLinkLightTheme &&
              t
                .tag(5, l.WireType.LengthDelimited)
                .string(e.imageLinkLightTheme);
          let a = n.writeUnknownFields;
          return (
            !1 !== a &&
              (!0 == a ? l.UnknownFieldHandler.onWrite : a)(
                this.typeName,
                e,
                t
              ),
            t
          );
        }
        constructor() {
          super("discord_protos.premium_marketing.v1.FeatureCard", [
            { no: 1, name: "header", kind: "scalar", T: 9 },
            { no: 2, name: "pill", kind: "scalar", T: 9 },
            { no: 3, name: "body", kind: "scalar", T: 9 },
            { no: 4, name: "image_link", kind: "scalar", T: 9 },
            { no: 5, name: "image_link_light_theme", kind: "scalar", T: 9 },
          ]);
        }
      }
      let r = new i();
      class o extends l.MessageType {
        create(e) {
          let t = { copy: "", buttonAction: 0 };
          return (
            globalThis.Object.defineProperty(t, l.MESSAGE_TYPE, {
              enumerable: !1,
              value: this,
            }),
            void 0 !== e && (0, l.reflectionMergePartial)(this, t, e),
            t
          );
        }
        internalBinaryRead(e, t, n, a) {
          let s = null != a ? a : this.create(),
            i = e.pos + t;
          for (; e.pos < i; ) {
            let [t, a] = e.tag();
            switch (t) {
              case 1:
                s.copy = e.string();
                break;
              case 2:
                s.buttonAction = e.int32();
                break;
              default:
                let i = n.readUnknownField;
                if ("throw" === i)
                  throw new globalThis.Error(
                    "Unknown field "
                      .concat(t, " (wire type ")
                      .concat(a, ") for ")
                      .concat(this.typeName)
                  );
                let r = e.skip(a);
                !1 !== i &&
                  (!0 === i ? l.UnknownFieldHandler.onRead : i)(
                    this.typeName,
                    s,
                    t,
                    a,
                    r
                  );
            }
          }
          return s;
        }
        internalBinaryWrite(e, t, n) {
          "" !== e.copy && t.tag(1, l.WireType.LengthDelimited).string(e.copy),
            0 !== e.buttonAction &&
              t.tag(2, l.WireType.Varint).int32(e.buttonAction);
          let a = n.writeUnknownFields;
          return (
            !1 !== a &&
              (!0 == a ? l.UnknownFieldHandler.onWrite : a)(
                this.typeName,
                e,
                t
              ),
            t
          );
        }
        constructor() {
          super("discord_protos.premium_marketing.v1.SubscriptionButton", [
            { no: 1, name: "copy", kind: "scalar", T: 9 },
            {
              no: 2,
              name: "button_action",
              kind: "enum",
              T: () => [
                "discord_protos.premium_marketing.v1.ButtonAction",
                a,
                "BUTTON_ACTION_",
              ],
            },
          ]);
        }
      }
      let u = new o();
      class d extends l.MessageType {
        create(e) {
          let t = {
            header: "",
            subheader: "",
            videoLink: "",
            helpArticleId: "",
            featureCards: [],
            dismissKey: "",
            heroArtVideoLinkLightTheme: "",
            heroArtImageLinkDarkTheme: "",
            heroArtImageLinkLightTheme: "",
          };
          return (
            globalThis.Object.defineProperty(t, l.MESSAGE_TYPE, {
              enumerable: !1,
              value: this,
            }),
            void 0 !== e && (0, l.reflectionMergePartial)(this, t, e),
            t
          );
        }
        internalBinaryRead(e, t, n, a) {
          let s = null != a ? a : this.create(),
            i = e.pos + t;
          for (; e.pos < i; ) {
            let [t, a] = e.tag();
            switch (t) {
              case 1:
                s.header = e.string();
                break;
              case 2:
                s.subheader = e.string();
                break;
              case 3:
                s.videoLink = e.string();
                break;
              case 4:
                s.helpArticleId = e.string();
                break;
              case 5:
                s.featureCards.push(r.internalBinaryRead(e, e.uint32(), n));
                break;
              case 6:
                s.button = u.internalBinaryRead(e, e.uint32(), n, s.button);
                break;
              case 7:
                s.dismissKey = e.string();
                break;
              case 8:
                s.heroArtVideoLinkLightTheme = e.string();
                break;
              case 9:
                s.heroArtImageLinkDarkTheme = e.string();
                break;
              case 10:
                s.heroArtImageLinkLightTheme = e.string();
                break;
              default:
                let i = n.readUnknownField;
                if ("throw" === i)
                  throw new globalThis.Error(
                    "Unknown field "
                      .concat(t, " (wire type ")
                      .concat(a, ") for ")
                      .concat(this.typeName)
                  );
                let o = e.skip(a);
                !1 !== i &&
                  (!0 === i ? l.UnknownFieldHandler.onRead : i)(
                    this.typeName,
                    s,
                    t,
                    a,
                    o
                  );
            }
          }
          return s;
        }
        internalBinaryWrite(e, t, n) {
          "" !== e.header &&
            t.tag(1, l.WireType.LengthDelimited).string(e.header),
            "" !== e.subheader &&
              t.tag(2, l.WireType.LengthDelimited).string(e.subheader),
            "" !== e.videoLink &&
              t.tag(3, l.WireType.LengthDelimited).string(e.videoLink),
            "" !== e.helpArticleId &&
              t.tag(4, l.WireType.LengthDelimited).string(e.helpArticleId);
          for (let a = 0; a < e.featureCards.length; a++)
            r.internalBinaryWrite(
              e.featureCards[a],
              t.tag(5, l.WireType.LengthDelimited).fork(),
              n
            ).join();
          e.button &&
            u
              .internalBinaryWrite(
                e.button,
                t.tag(6, l.WireType.LengthDelimited).fork(),
                n
              )
              .join(),
            "" !== e.dismissKey &&
              t.tag(7, l.WireType.LengthDelimited).string(e.dismissKey),
            "" !== e.heroArtVideoLinkLightTheme &&
              t
                .tag(8, l.WireType.LengthDelimited)
                .string(e.heroArtVideoLinkLightTheme),
            "" !== e.heroArtImageLinkDarkTheme &&
              t
                .tag(9, l.WireType.LengthDelimited)
                .string(e.heroArtImageLinkDarkTheme),
            "" !== e.heroArtImageLinkLightTheme &&
              t
                .tag(10, l.WireType.LengthDelimited)
                .string(e.heroArtImageLinkLightTheme);
          let a = n.writeUnknownFields;
          return (
            !1 !== a &&
              (!0 == a ? l.UnknownFieldHandler.onWrite : a)(
                this.typeName,
                e,
                t
              ),
            t
          );
        }
        constructor() {
          super(
            "discord_protos.premium_marketing.v1.AnnouncementModalVariant1Properties",
            [
              { no: 1, name: "header", kind: "scalar", T: 9 },
              { no: 2, name: "subheader", kind: "scalar", T: 9 },
              { no: 3, name: "video_link", kind: "scalar", T: 9 },
              { no: 4, name: "help_article_id", kind: "scalar", T: 9 },
              {
                no: 5,
                name: "feature_cards",
                kind: "message",
                repeat: 1,
                T: () => r,
              },
              { no: 6, name: "button", kind: "message", T: () => u },
              { no: 7, name: "dismiss_key", kind: "scalar", T: 9 },
              {
                no: 8,
                name: "hero_art_video_link_light_theme",
                kind: "scalar",
                T: 9,
              },
              {
                no: 9,
                name: "hero_art_image_link_dark_theme",
                kind: "scalar",
                T: 9,
              },
              {
                no: 10,
                name: "hero_art_image_link_light_theme",
                kind: "scalar",
                T: 9,
              },
            ]
          );
        }
      }
      let c = new d();
    },
    258864: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          PremiumMarketingComponentProperties: function () {
            return i;
          },
        }),
        n("222007"),
        n("70102");
      var a = n("849266"),
        s = n("105110");
      class l extends a.MessageType {
        create(e) {
          let t = { properties: { oneofKind: void 0 } };
          return (
            globalThis.Object.defineProperty(t, a.MESSAGE_TYPE, {
              enumerable: !1,
              value: this,
            }),
            void 0 !== e && (0, a.reflectionMergePartial)(this, t, e),
            t
          );
        }
        internalBinaryRead(e, t, n, l) {
          let i = null != l ? l : this.create(),
            r = e.pos + t;
          for (; e.pos < r; ) {
            let [t, l] = e.tag();
            switch (t) {
              case 1:
                i.properties = {
                  oneofKind: "placeholder",
                  placeholder: e.string(),
                };
                break;
              case 2:
                i.properties = {
                  oneofKind: "announcementModalVariant1",
                  announcementModalVariant1:
                    s.AnnouncementModalVariant1Properties.internalBinaryRead(
                      e,
                      e.uint32(),
                      n,
                      i.properties.announcementModalVariant1
                    ),
                };
                break;
              default:
                let r = n.readUnknownField;
                if ("throw" === r)
                  throw new globalThis.Error(
                    "Unknown field "
                      .concat(t, " (wire type ")
                      .concat(l, ") for ")
                      .concat(this.typeName)
                  );
                let o = e.skip(l);
                !1 !== r &&
                  (!0 === r ? a.UnknownFieldHandler.onRead : r)(
                    this.typeName,
                    i,
                    t,
                    l,
                    o
                  );
            }
          }
          return i;
        }
        internalBinaryWrite(e, t, n) {
          "placeholder" === e.properties.oneofKind &&
            t
              .tag(1, a.WireType.LengthDelimited)
              .string(e.properties.placeholder),
            "announcementModalVariant1" === e.properties.oneofKind &&
              s.AnnouncementModalVariant1Properties.internalBinaryWrite(
                e.properties.announcementModalVariant1,
                t.tag(2, a.WireType.LengthDelimited).fork(),
                n
              ).join();
          let l = n.writeUnknownFields;
          return (
            !1 !== l &&
              (!0 == l ? a.UnknownFieldHandler.onWrite : l)(
                this.typeName,
                e,
                t
              ),
            t
          );
        }
        constructor() {
          super(
            "discord_protos.premium_marketing.v1.PremiumMarketingComponentProperties",
            [
              {
                no: 1,
                name: "placeholder",
                kind: "scalar",
                oneof: "properties",
                T: 9,
              },
              {
                no: 2,
                name: "announcement_modal_variant_1",
                kind: "message",
                oneof: "properties",
                T: () => s.AnnouncementModalVariant1Properties,
              },
            ]
          );
        }
      }
      let i = new l();
    },
    61141: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          RPCCommandSchemas: function () {
            return l;
          },
        }),
        n("222007");
      var a = n("792353"),
        s = n("843455");
      let l = {
          [a.RPCCommand.INITIATE_IMAGE_UPLOAD]: {
            request: void 0,
            response: e => e.object({ image_url: e.string().required() }),
          },
          [a.RPCCommand.OPEN_SHARE_MOMENT_DIALOG]: {
            response: void 0,
            request: e =>
              (0, a.joiReqObj)(
                e.object({ mediaUrl: e.string().required().max(1024) })
              ),
          },
          [a.RPCCommand.AUTHENTICATE]: {
            request: e =>
              (0, a.joiReqObj)(
                e.object({ access_token: e.string().allow(null).optional() })
              ),
            response: e =>
              e.object({
                access_token: e.string().required(),
                user: e
                  .object({
                    username: e.string().required(),
                    discriminator: e.string().required(),
                    id: e.string().required(),
                    avatar: e.string().allow(null),
                    public_flags: e.number().required(),
                    global_name: e.string().allow(null),
                  })
                  .required(),
                scopes: e
                  .array()
                  .items(e.string().valid(...(0, a.joiEnum)(s.OAuth2Scopes)))
                  .required(),
                expires: e.string().required(),
                application: e
                  .object({
                    description: e.string().required(),
                    icon: e.string().allow(null),
                    id: e.string().required(),
                    rpc_origins: e.array().items(e.string()).optional(),
                    name: e.string().required(),
                  })
                  .required(),
              }),
          },
          [a.RPCCommand.GET_ACTIVITY_INSTANCE_CONNECTED_PARTICIPANTS]: {
            request: void 0,
            response: e =>
              e
                .object({
                  participants: e
                    .array()
                    .items(
                      i(e)
                        .keys({
                          nickname: e
                            .string()
                            .description("Server nickname. Not unique."),
                        })
                        .required()
                    )
                    .required(),
                })
                .required(),
          },
        },
        i = e =>
          e
            .object({
              id: e.string().required().description("User ID"),
              username: e.string().required(),
              global_name: e
                .string()
                .allow(null)
                .description("Global Discord name. Not unique."),
              discriminator: e
                .string()
                .required()
                .description(
                  "Global name discriminator. Will be 0 if a unique username"
                ),
              avatar: e.string().allow(null).description("User Avatar ID"),
              flags: e.number().required().description("Public user flags"),
              bot: e.bool().required().description("If a bot user."),
              avatar_decoration_data: e
                .object({ asset: e.string().required(), skuId: e.string() })
                .allow(null)
                .description("Details about avatar decoration"),
              premium_type: e
                .number()
                .allow(null)
                .description("Nitro premium type"),
            })
            .description("Discord User");
    },
    792353: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          RPCCommand: function () {
            return a.RPCCommands;
          },
          joiReqObj: function () {
            return s;
          },
          joiEnum: function () {
            return l;
          },
        });
      var a = n("843455");
      function s(e) {
        return e.required().unknown(!0);
      }
      function l(e) {
        return Object.values(e);
      }
    },
    524297: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          createRPCCommand: function () {
            return s;
          },
        });
      var a = n("61141");
      function s(e, t) {
        var n;
        let { scope: s, handler: l } = t,
          i = { scope: s, handler: l },
          r =
            null === (n = a.RPCCommandSchemas[e]) || void 0 === n
              ? void 0
              : n.request,
          o = null;
        return (
          null != r &&
            (i.validation = function (e) {
              return null == o && (o = r(e)), o;
            }),
          i
        );
      }
    },
    750485: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return C;
          },
        });
      var a = n("37983"),
        s = n("884691"),
        l = n("421898"),
        i = n.n(l),
        r = n("782600"),
        o = n("983663");
      let u = {
          VERTICAL: r.flexVertical,
          HORIZONTAL: r.flexHorizontal,
          HORIZONTAL_REVERSE: r.flexHorizontalReverse,
        },
        d = {
          START: r.flexJustifyStart,
          END: r.flexJustifyEnd,
          CENTER: r.flexJustifyCenter,
          BETWEEN: r.flexJustifyBetween,
          AROUND: r.flexJustifyAround,
        },
        c = {
          NO_WRAP: r.flexNowrap,
          WRAP: r.flexWrap,
          WRAP_REVERSE: r.flexWrapReverse,
        },
        f = {
          START: r.flexAlignStart,
          END: r.flexAlignEnd,
          CENTER: r.flexAlignCenter,
          STRETCH: r.flexAlignStretch,
        },
        E = { SMALL: o.flexGutterSmall, LARGE: o.flexGutterLarge };
      class h extends s.PureComponent {
        render() {
          let {
              children: e,
              className: t,
              shrink: n,
              grow: l,
              basis: r,
              style: u,
              wrap: d,
              ...c
            } = this.props,
            f = {
              style: { flexGrow: l, flexShrink: n, flexBasis: r, ...u },
              className: t === o.flexChild ? t : i(o.flexChild, t),
              ...c,
            };
          if (!d && "string" != typeof e && 1 === s.Children.count(e)) {
            let n = s.Children.only(e);
            return (
              (f.style = { ...f.style, ...n.props.style }),
              (f.className = i(n.props.className, t)),
              s.cloneElement(n, f)
            );
          }
          return (0, a.jsx)("div", { ...f, children: e });
        }
      }
      h.defaultProps = { className: o.flexChild, style: {}, wrap: !1 };
      class _ extends s.PureComponent {
        render() {
          let {
              children: e,
              className: t,
              direction: n,
              justify: s,
              align: l,
              wrap: r,
              shrink: u,
              grow: d,
              basis: c,
              style: f,
              gutter: E,
              ...h
            } = this.props,
            _ = { flexShrink: u, flexGrow: d, flexBasis: c, ...f };
          return (0, a.jsx)("div", {
            style: _,
            className: i(o.flex, n, s, l, r, E, t),
            ...h,
            children: e,
          });
        }
      }
      (_.Child = h),
        (_.Direction = u),
        (_.Align = f),
        (_.Justify = d),
        (_.Wrap = c),
        (_.Gutter = E),
        (_.defaultProps = {
          direction: u.HORIZONTAL,
          justify: d.START,
          align: f.STRETCH,
          wrap: c.WRAP,
          shrink: 1,
          grow: 1,
          basis: "auto",
          style: {},
        });
      var C = _;
    },
  },
]);
//# sourceMappingURL=462d63268b3b9b2682bd.js.map
