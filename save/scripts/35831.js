(this.webpackChunkdiscord_app = this.webpackChunkdiscord_app || []).push([
  ["35831"],
  {
    262228: function (e, t, s) {
      "use strict";
      e.exports = s.p + "a826e445dff97cf15335.svg";
    },
    337695: function (e, t, s) {
      "use strict";
      e.exports = s.p + "d29a5e9ac3e2efa42e40.svg";
    },
    682407: function (e, t, s) {
      "use strict";
      e.exports = s.p + "5dacee8566b3fa5d05e7.png";
    },
    522025: function (e, t, s) {
      "use strict";
      e.exports = s.p + "8debd25fc894741dafd0.svg";
    },
    471737: function (e, t, s) {
      "use strict";
      e.exports = s.p + "a0e249703c7cad81a7c1.svg";
    },
    541956: function (e, t, s) {
      "use strict";
      e.exports = s.p + "5ed4b36fc88424ef09b0.svg";
    },
    301037: function (e, t, s) {
      "use strict";
      e.exports = s.p + "4a0bbd7108c55228c0a7.svg";
    },
    137718: function (e, t, s) {
      "use strict";
      e.exports = s.p + "53e9102a961af6cf7254.svg";
    },
    631399: function (e, t, s) {
      "use strict";
      e.exports = s.p + "db947193d549bd45c3a3.svg";
    },
    867369: function (e, t, s) {
      "use strict";
      e.exports = s.p + "0fcdddd7e59d53cf3253.svg";
    },
    200324: function (e, t, s) {
      "use strict";
      e.exports = s.p + "ff9cfb0571740063f0be.svg";
    },
    605149: function (e, t, s) {
      "use strict";
      e.exports = s.p + "c166e3edbd9dc71381fd.svg";
    },
    203017: function (e, t, s) {
      "use strict";
      e.exports = s.p + "d2884ba829223582b3bf.svg";
    },
    137963: function (e, t, s) {
      "use strict";
      e.exports = s.p + "1de079b3a4d002a51a15.svg";
    },
    700930: function (e, t, s) {
      "use strict";
      e.exports = s.p + "ce0628c13e297670b496.svg";
    },
    742737: function (e, t, s) {
      "use strict";
      e.exports = s.p + "f2230dc3b0d0362eb79a.svg";
    },
    412457: function (e, t, s) {
      "use strict";
      e.exports = s.p + "8224481274681d0608a9.svg";
    },
    335138: function (e, t, s) {
      "use strict";
      e.exports = s.p + "731bd00d0cba7b0ad9a2.svg";
    },
    492078: function (e, t, s) {
      "use strict";
      e.exports = s.p + "c0c99b912780c3933ee2.svg";
    },
    269304: function (e, t, s) {
      "use strict";
      e.exports = s.p + "8038d36ff150656fed89.svg";
    },
    507822: function (e, t, s) {
      "use strict";
      e.exports = s.p + "2035204bfda605f5ac43.svg";
    },
    389671: function (e, t, s) {
      "use strict";
      e.exports = s.p + "d8fed90d3e2823445104.svg";
    },
    445113: function (e, t, s) {
      "use strict";
      e.exports = s.p + "a6bdd16f1b2d92dd9865.svg";
    },
    295450: function (e, t, s) {
      "use strict";
      e.exports = s.p + "6c7e4648f08a48073917.svg";
    },
    345598: function (e, t, s) {
      "use strict";
      e.exports = s.p + "1dd01e7f98785e600f91.svg";
    },
    385622: function (e, t, s) {
      "use strict";
      e.exports = s.p + "e5ee547697275994f034.svg";
    },
    178266: function (e, t, s) {
      "use strict";
      e.exports = s.p + "7c0e125dc9e3990f9dfc.svg";
    },
    140090: function (e, t, s) {
      "use strict";
      e.exports = s.p + "7d917b4bfa064c89919b.svg";
    },
    553847: function (e, t, s) {
      "use strict";
      e.exports = s.p + "13a8bb57a95635a785ae.svg";
    },
    963040: function (e, t, s) {
      "use strict";
      e.exports = s.p + "013a3e2bea3d51d71775.svg";
    },
    596482: function (e, t, s) {
      "use strict";
      e.exports = s.p + "99a94741486949920394.svg";
    },
    471208: function (e, t, s) {
      "use strict";
      e.exports = s.p + "8bc13200408a99819215.svg";
    },
    748268: function (e, t, s) {
      "use strict";
      e.exports = s.p + "c87be216431a35927431.svg";
    },
    473604: function (e, t, s) {
      "use strict";
      e.exports = s.p + "221c7480010a4ceeadf1.png";
    },
    47919: function (e, t, s) {
      "use strict";
      e.exports = s.p + "fa8cd14c4cb1193731c8.png";
    },
    670640: function (e, t, s) {
      "use strict";
      e.exports = s.p + "5d5299b59e078e119f24.svg";
    },
    887356: function (e, t, s) {
      "use strict";
      e.exports = s.p + "5deaff8a5a4b53d68928.svg";
    },
    12483: function (e, t, s) {
      "use strict";
      e.exports = s.p + "fa7c7d8e213243eda4e5.svg";
    },
    391590: function (e, t, s) {
      "use strict";
      e.exports = s.p + "2e0140afe6dd3a9a1bfa.svg";
    },
    435021: function (e, t, s) {
      "use strict";
      e.exports = s.p + "e881e01b06b1b0ee45b2.svg";
    },
    629551: function (e, t, s) {
      "use strict";
      e.exports = s.p + "6762ed8abdaef6a7f6fc.png";
    },
    305213: function (e, t, s) {
      "use strict";
      e.exports = s.p + "5af9f85713084d6867a6.png";
    },
    240547: function (e, t, s) {
      "use strict";
      e.exports = s.p + "1e778bb85ac27d961943.svg";
    },
    587531: function (e, t, s) {
      "use strict";
      e.exports = s.p + "48a28e207ce985f03e7b.svg";
    },
    217775: function (e, t, s) {
      "use strict";
      e.exports = s.p + "18d4fb0943c54591dfd4.png";
    },
    481701: function (e, t, s) {
      "use strict";
      e.exports = s.p + "de0896237eebfc178931.png";
    },
    872702: function (e, t, s) {
      "use strict";
      e.exports = s.p + "e62a3b5f49dad09eea9d.png";
    },
    43980: function (e, t, s) {
      "use strict";
      e.exports = s.p + "656b71fbb77a9b4e278b.png";
    },
    156465: function (e, t, s) {
      "use strict";
      e.exports = s.p + "42b086ee3d9863ea45bc.svg";
    },
    709976: function (e, t, s) {
      "use strict";
      e.exports = s.p + "9fdb9e06aa233a3af0d1.png";
    },
    555657: function (e, t, s) {
      "use strict";
      e.exports = s.p + "16e7fcbfbd488cc6d5d9.png";
    },
    269863: function (e, t, s) {
      "use strict";
      e.exports = s.p + "e9dc9eab2d472da0d6f4.svg";
    },
    22247: function (e, t, s) {
      "use strict";
      e.exports = s.p + "a8321094b63c5b722adb.mp3";
    },
    226992: function (e, t, s) {
      "use strict";
      e.exports = s.p + "6bd54527c7eb6fa18c21.svg";
    },
    757856: function (e, t, s) {
      "use strict";
      e.exports = s.p + "717e47f4e1c8f4d86f00.svg";
    },
    901979: function (e, t, s) {
      "use strict";
      e.exports = s.p + "56d360a7672d87843eaa.png";
    },
    430208: function (e, t, s) {
      "use strict";
      e.exports = s.p + "1e62cabfa6b0da1c840d.svg";
    },
    834461: function (e, t, s) {
      "use strict";
      e.exports = s.p + "901bb05cc5cba64d219c.svg";
    },
    203705: function (e, t, s) {
      "use strict";
      e.exports = s.p + "8f2475066b3742df9f0d.svg";
    },
    591779: function (e, t, s) {
      "use strict";
      e.exports = s.p + "c4a300333537caaf68ba.png";
    },
    106785: function (e, t, s) {
      "use strict";
      e.exports = s.p + "594df69499dc25c515c8.gif";
    },
    474200: function (e, t, s) {
      "use strict";
      e.exports = s.p + "413fa93792c1a4566f3b.svg";
    },
    776466: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return i;
          },
        });
      var a = s("872717"),
        n = s("913144"),
        l = s("49111"),
        i = {
          fetch() {
            a.default
              .get({ url: l.Endpoints.OAUTH2_TOKENS, oldFormErrors: !0 })
              .then(
                e =>
                  n.default.dispatch({
                    type: "USER_AUTHORIZED_APPS_UPDATE",
                    apps: e.body,
                  }),
                () =>
                  n.default.dispatch({
                    type: "USER_AUTHORIZED_APPS_UPDATE",
                    apps: [],
                  })
              );
          },
          delete(e) {
            a.default
              .delete({ url: l.Endpoints.OAUTH2_TOKEN(e), oldFormErrors: !0 })
              .then(() => {
                this.fetch();
              });
          },
        };
    },
    6481: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return o;
          },
        });
      var a = s("872717"),
        n = s("913144"),
        l = s("448993"),
        i = s("49111");
      let r = {
        [i.HypeSquadHouses.HOUSE_1]: 1,
        [i.HypeSquadHouses.HOUSE_2]: 2,
        [i.HypeSquadHouses.HOUSE_3]: 3,
      };
      var o = {
        joinHypeSquadOnline: e =>
          a.default
            .post({
              url: i.Endpoints.HYPESQUAD_ONLINE,
              body: { house_id: r[e.houseID] },
              oldFormErrors: !0,
            })
            .then(() =>
              n.default.dispatch({
                type: "HYPESQUAD_ONLINE_MEMBERSHIP_JOIN_SUCCESS",
                houseID: e.houseID,
              })
            )
            .catch(e => {
              throw new l.V6OrEarlierAPIError(e);
            }),
        leaveHypeSquadOnline: () =>
          a.default
            .delete({ url: i.Endpoints.HYPESQUAD_ONLINE, oldFormErrors: !0 })
            .then(() =>
              n.default.dispatch({
                type: "HYPESQUAD_ONLINE_MEMBERSHIP_LEAVE_SUCCESS",
              })
            )
            .catch(e => {
              throw new l.V6OrEarlierAPIError(e);
            }),
      };
    },
    913139: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return n;
          },
        });
      var a = s("913144"),
        n = {
          addKeybind(e) {
            a.default.dispatch({ type: "KEYBINDS_ADD_KEYBIND", keybind: e });
          },
          setKeybind(e) {
            a.default.dispatch({ type: "KEYBINDS_SET_KEYBIND", keybind: e });
          },
          deleteKeybind(e) {
            a.default.dispatch({ type: "KEYBINDS_DELETE_KEYBIND", id: e });
          },
          enableAll(e) {
            a.default.dispatch({
              type: "KEYBINDS_ENABLE_ALL_KEYBINDS",
              enable: e,
            });
          },
        };
    },
    430713: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return o;
          },
        });
      var a = s("872717"),
        n = s("913144"),
        l = s("650893"),
        i = s("49111");
      function r(e, t) {
        return (
          n.default.dispatch({ type: "MFA_SMS_TOGGLE" }),
          a.default
            .post({ url: e, body: { password: t }, oldFormErrors: !0 })
            .then(
              e => (n.default.dispatch({ type: "MFA_SMS_TOGGLE_COMPLETE" }), e),
              e => {
                throw (
                  (n.default.dispatch({ type: "MFA_SMS_TOGGLE_COMPLETE" }), e)
                );
              }
            )
        );
      }
      var o = {
        async enableMFAStart(e) {
          let t = await a.default.post({
            url: i.Endpoints.MFA_TOTP_ENABLE,
            body: { password: e },
            oldFormErrors: !0,
          });
          return t.body;
        },
        async verifyEmailCode(e) {
          let t = await a.default.post({
            url: i.Endpoints.MFA_TOTP_ENABLE_VERIFY,
            body: { code: e },
          });
          return t.body;
        },
        resendEmailCode: e =>
          a.default.post({
            url: i.Endpoints.MFA_TOTP_ENABLE_RESEND,
            body: { password: e },
          }),
        setEmailToken(e) {
          n.default.dispatch({ type: "MFA_ENABLE_EMAIL_TOKEN", token: e });
        },
        enable(e) {
          let { password: t, code: s, secret: l, emailToken: r } = e;
          return a.default
            .post({
              url: i.Endpoints.MFA_TOTP_ENABLE,
              body: { code: s, secret: l, password: t, email_token: r },
              oldFormErrors: !0,
            })
            .then(e =>
              n.default.dispatch({
                type: "MFA_ENABLE_SUCCESS",
                token: e.body.token,
                codes: e.body.backup_codes,
              })
            );
        },
        disable() {
          a.default
            .post({ url: i.Endpoints.MFA_TOTP_DISABLE, oldFormErrors: !0 })
            .then(e => {
              let {
                body: { token: t },
              } = e;
              return n.default.dispatch({
                type: "MFA_DISABLE_SUCCESS",
                token: t,
              });
            });
        },
        enableSMS: e => r(i.Endpoints.MFA_SMS_ENABLE, e),
        disableSMS: e => r(i.Endpoints.MFA_SMS_DISABLE, e),
        sendMFABackupCodesVerificationKeyEmail: e =>
          a.default
            .post({
              url: i.Endpoints.MFA_SEND_VERIFICATION_KEY,
              body: { password: e },
              oldFormErrors: !0,
            })
            .then(
              e =>
                n.default.dispatch({
                  type: "MFA_SEND_VERIFICATION_KEY",
                  nonces: {
                    viewNonce: e.body.nonce,
                    regenerateNonce: e.body.regenerate_nonce,
                  },
                }),
              e => {
                throw e;
              }
            ),
        confirmViewBackupCodes(e, t) {
          let { viewNonce: s, regenerateNonce: r } = l.default.getNonces();
          return a.default
            .post({
              url: i.Endpoints.MFA_CODES_VERIFICATION,
              body: { key: e, nonce: t ? r : s, regenerate: t },
              oldFormErrors: !0,
            })
            .then(
              t =>
                n.default.dispatch({
                  type: "MFA_VIEW_BACKUP_CODES",
                  codes: t.body.backup_codes,
                  key: e,
                }),
              e => {
                throw e;
              }
            );
        },
        clearBackupCodes() {
          n.default.dispatch({ type: "MFA_CLEAR_BACKUP_CODES" });
        },
      };
    },
    335430: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          CurrencyWrapper: function () {
            return i;
          },
          default: function () {
            return r;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("77078"),
        l = s("575209");
      function i(e) {
        let { currencies: t, className: s, children: n } = e;
        return t.length < 2
          ? null
          : (0, a.jsx)("div", { className: s, children: n });
      }
      var r = function (e) {
        let {
          currencies: t,
          onChange: s,
          selectedCurrency: i,
          className: r,
          disabled: o = !1,
        } = e;
        if (t.length < 2) return null;
        let d = t.map((e, t) => ({
          key: t,
          value: e,
          label: ""
            .concat(e.toUpperCase(), " - ")
            .concat((0, l.getCurrencyFullName)(e)),
        }));
        return (0, a.jsx)(n.SingleSelect, {
          value: i,
          options: d,
          onChange: e => {
            null != e && s(e);
          },
          className: r,
          isDisabled: o,
        });
      };
    },
    58502: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return T;
          },
        }),
        s("222007");
      var a,
        n = s("37983"),
        l = s("884691"),
        i = s("476765"),
        r = s("520713"),
        o = s("137460"),
        d = s("983299"),
        u = s("782340"),
        c = s("298961");
      (a || (a = {})).EXPIRATION_DATE = "expirationDate";
      let S = {
          expirationDate: {
            name: "expirationDate",
            id: (0, i.uid)(),
            title: () => u.default.Messages.CREDIT_CARD_EXPIRATION_DATE,
            autoComplete: "cc-exp",
            placeholder: () =>
              u.default.Messages.PAYMENT_SOURCE_EXPIRATION_DATE_PLACEHOLDER,
            pattern: "\\d*",
            getClassNameForLayout: () => c.width50,
            renderInput: e => (0, n.jsx)(o.default, { ...e }),
          },
        },
        E = [{ fields: [S.expirationDate] }];
      var T = function (e) {
        let {
            onCardInfoChange: t,
            className: s,
            expirationDate: a,
            error: i,
          } = e,
          [o, c] = l.useState(!1),
          [S, T] = l.useState(null),
          [f, _] = l.useState(a);
        return (
          l.useEffect(() => {
            t({ expirationDate: f }, null === S);
          }, [f, t, S]),
          (0, n.jsx)(d.default, {
            className: s,
            form: E,
            values: { expirationDate: f },
            errors: null != S ? { expirationDate: S } : {},
            formError: i,
            onFieldChange: e => {
              !o && "" !== e && c(!0),
                (o && "" === e) || !(0, r.validateExpiry)(e)
                  ? T(u.default.Messages.CREDIT_CARD_ERROR_EXPIRATION)
                  : T(null),
                _(e);
            },
          })
        );
      };
    },
    793133: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return C;
          },
        }),
        s("222007");
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("394846"),
        o = s("446674"),
        d = s("77078"),
        u = s("913144"),
        c = s("850068"),
        S = s("607191"),
        E = s("865146"),
        T = s("160299"),
        f = s("449008"),
        _ = s("18502"),
        m = s("58502"),
        g = s("364735"),
        h = s("782340"),
        N = s("909380");
      let I = { IS_DEFAULT: "isDefault" };
      class p extends n.PureComponent {
        componentWillUnmount() {
          u.default.wait(() => {
            (0, c.clearUpdatePaymentSourceError)(),
              (0, c.clearRemovePaymentSourceError)();
          });
        }
        renderError() {
          let { updateError: e, removeError: t } = this.props;
          return null == e || e.hasCardError() || e.hasAddressError()
            ? null != t
              ? (0, a.jsx)(d.FormErrorBlock, {
                  className: N.formError,
                  children: t.message,
                })
              : null
            : (0, a.jsx)(d.FormErrorBlock, {
                className: N.formError,
                children: e.message,
              });
        }
        renderBillingAddressSection() {
          let { billingAddress: e } = this.state,
            { updateError: t, paymentSource: s } = this.props,
            n = (0, S.getBillingAddressLayout)(s);
          return (0, a.jsxs)("div", {
            className: N.addressSection,
            children: [
              (0, a.jsx)(d.Text, {
                className: N.sectionHeader,
                variant: "text-sm/normal",
                children: h.default.Messages.BILLING_ADDRESS,
              }),
              (0, a.jsx)(_.default, {
                ...e,
                mode: _.default.Modes.EDIT,
                layout: n,
                onBillingAddressChange: this.handleAddressUpdate,
                error: t,
              }),
            ],
          });
        }
        renderCardExpirationSection() {
          let { expiresMonth: e, expiresYear: t } = this.state;
          if (null == e || null == t) return null;
          let s = ""
            .concat(e.toString().padStart(2, "0"), "/")
            .concat(t.toString().padStart(2, "0").slice(-2));
          return (0, a.jsxs)("div", {
            className: N.addressSection,
            children: [
              (0, a.jsx)(d.Text, {
                className: N.sectionHeader,
                variant: "text-sm/normal",
                children:
                  h.default.Messages.BILLING_STEP_CREDIT_CARD_INFORMATION,
              }),
              (0, a.jsx)(m.default, {
                expirationDate: s,
                onCardInfoChange: this.handleExpirationDateUpdate,
                error: this.props.updateError,
              }),
            ],
          });
        }
        renderActions() {
          let { submitting: e, removing: t, isForSubscription: s } = this.props,
            { billingAddressValid: n, expirationValid: l } = this.state;
          return (0, a.jsxs)("div", {
            className: N.formActions,
            children: [
              (0, a.jsx)("div", {
                className: N.leftAlignedButtons,
                children: (0, a.jsxs)("div", {
                  className: N.disabledTooltipWrapper,
                  children: [
                    s
                      ? (0, a.jsx)(d.Tooltip, {
                          text: h.default.Messages
                            .PAYMENT_SOURCE_DELETE_DISABLED_TOOLTIP,
                          children: e =>
                            (0, a.jsx)("div", {
                              "aria-hidden": !0,
                              className: N.disabledTooltipTarget,
                              ...e,
                            }),
                        })
                      : null,
                    (0, a.jsx)(d.Button, {
                      type: "button",
                      disabled: s || e,
                      submitting: t,
                      onClick: this.handleDelete,
                      look: d.Button.Looks.OUTLINED,
                      color: d.Button.Colors.RED,
                      size: r.isMobile
                        ? d.ButtonSizes.SMALL
                        : d.ButtonSizes.MEDIUM,
                      children: r.isMobile
                        ? h.default.Messages.DELETE
                        : h.default.Messages.PAYMENT_SOURCE_DELETE,
                    }),
                  ],
                }),
              }),
              (0, a.jsxs)("div", {
                className: N.rightAlignedButtons,
                children: [
                  (0, a.jsx)(d.Button, {
                    type: "button",
                    disabled: e || t,
                    onClick: this.handleCancel,
                    look: d.Button.Looks.LINK,
                    color: d.Button.Colors.PRIMARY,
                    size: r.isMobile
                      ? d.ButtonSizes.SMALL
                      : d.ButtonSizes.MEDIUM,
                    children: h.default.Messages.CANCEL,
                  }),
                  (0, a.jsx)(d.Button, {
                    submitting: e,
                    disabled: !n || t || !l,
                    type: "submit",
                    color: d.Button.Colors.GREEN,
                    size: r.isMobile
                      ? d.ButtonSizes.SMALL
                      : d.ButtonSizes.MEDIUM,
                    children: h.default.Messages.SAVE,
                  }),
                ],
              }),
            ],
          });
        }
        render() {
          let {
              paymentSource: e,
              isDefault: t,
              locale: s,
              className: n,
              isForSubscription: l,
            } = this.props,
            { isDefault: r } = this.state,
            o = e instanceof E.PaypalSourceRecord;
          return (0, a.jsx)(d.Card, {
            editable: !0,
            className: i(N.card, n),
            children: (0, a.jsxs)("form", {
              onSubmit: this.handleSubmit,
              noValidate: !0,
              children: [
                this.renderError(),
                (0, a.jsxs)("div", {
                  className: N.paymentSection,
                  children: [
                    (0, a.jsx)(g.default, {
                      paymentSource: e,
                      isDefault: t,
                      isForSubscription: l,
                      locale: s,
                    }),
                    e.invalid
                      ? (0, a.jsx)("div", {
                          className: N.errorSubText,
                          children:
                            h.default.Messages.PAYMENT_SOURCE_INVALID_HELP,
                        })
                      : null,
                    (0, a.jsx)("div", {
                      className: N.subText,
                      children: o
                        ? h.default.Messages.PAYMENT_SOURCE_EDIT_HELP_PAYPAL.format(
                            { paypalURL: "https://www.paypal.com" }
                          )
                        : h.default.Messages.PAYMENT_SOURCE_EDIT_HELP_CARD,
                    }),
                  ],
                }),
                this.renderCardExpirationSection(),
                this.renderBillingAddressSection(),
                (0, a.jsx)(d.Checkbox, {
                  name: I.IS_DEFAULT,
                  value: r,
                  onChange: (e, t) => this.handleFieldChange(t, I.IS_DEFAULT),
                  type: d.Checkbox.Types.INVERTED,
                  className: N.defaultSection,
                  children: (0, a.jsx)(d.Text, {
                    className: N.defaultCheckboxLabel,
                    variant: "text-sm/normal",
                    children: h.default.Messages.PAYMENT_SOURCE_MAKE_DEFAULT,
                  }),
                }),
                (0, a.jsx)(d.FormDivider, {}),
                this.renderActions(),
              ],
            }),
          });
        }
        constructor(e) {
          var t, s, a, n, l, i, r;
          super(e),
            (this.handleSubmit = e => {
              if (
                (e.preventDefault(),
                e.stopPropagation(),
                0 ===
                  Object.values(this.state.dirtyFields).filter(f.isNotNullish)
                    .length)
              )
                this.props.onCancel();
              else {
                let {
                  billingAddress: e,
                  isDefault: t,
                  expiresMonth: s,
                  expiresYear: a,
                } = this.state;
                this.props.onSubmit(this.props.paymentSource.id, {
                  billingAddress: e,
                  expiresMonth: s,
                  expiresYear: a,
                  isDefault: t,
                });
              }
            }),
            (this.handleCancel = () => {
              this.props.onCancel();
            }),
            (this.handleDelete = () => {
              let { onDelete: e, paymentSource: t } = this.props;
              e(t.id);
            }),
            (this.handleAddressUpdate = (e, t, s) => {
              this.setState({
                billingAddress: e,
                billingAddressValid: t,
                dirtyFields: { ...this.state.dirtyFields, billingAddress: s },
              });
            }),
            (this.handleExpirationDateUpdate = (e, t) => {
              let { expirationDate: s } = e;
              if (
                (this.setState({ expirationValid: t }), null == s || "" === s)
              )
                return;
              let [a, n] = s.split("/");
              this.handleFieldChange(Number(a), "expiresMonth"),
                this.handleFieldChange(
                  Number(
                    ""
                      .concat(new Date().getFullYear().toString().slice(0, 2))
                      .concat(n)
                  ),
                  "expiresYear"
                );
            }),
            (this.handleFieldChange = (e, t) => {
              null != t &&
                this.setState({
                  [t]: e,
                  dirtyFields: { ...this.state.dirtyFields, [t]: !0 },
                });
            });
          let { paymentSource: o, isDefault: d } = e,
            u = o.billingAddress;
          this.state = {
            billingAddress: {
              name: null !== (t = u.name) && void 0 !== t ? t : "",
              line1: null !== (s = u.line1) && void 0 !== s ? s : "",
              line2: null !== (a = u.line2) && void 0 !== a ? a : "",
              country: null !== (n = u.country) && void 0 !== n ? n : "",
              state: null !== (l = u.state) && void 0 !== l ? l : "",
              city: null !== (i = u.city) && void 0 !== i ? i : "",
              postalCode: null !== (r = u.postalCode) && void 0 !== r ? r : "",
            },
            expiresMonth:
              o instanceof E.CreditCardSourceRecord ? o.expiresMonth : void 0,
            expiresYear:
              o instanceof E.CreditCardSourceRecord ? o.expiresYear : void 0,
            billingAddressValid: !1,
            isDefault: d,
            expirationValid: !0,
            dirtyFields: {},
          };
        }
      }
      p.defaultProps = {
        onDelete: () => {},
        onSubmit: () => {},
        onCancel: () => {},
      };
      var C = o.default.connectStores([T.default], () => ({
        updateError: T.default.editSourceError,
        removeError: T.default.removeSourceError,
      }))(p);
    },
    137460: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return d;
          },
        }),
        s("222007"),
        s("781738");
      var a = s("37983"),
        n = s("884691"),
        l = s("77078"),
        i = s("417809");
      let r = /[^0-9]/g;
      class o extends n.PureComponent {
        componentDidUpdate(e) {
          let t = this._inputRef;
          e.value !== this.props.value &&
            null != t &&
            t.setSelectionRange(this.selectionStart, this.selectionStart);
        }
        render() {
          return (0, a.jsx)(l.TextInput, {
            ...this.props,
            inputMode: "numeric",
            onChange: this.handleChange,
            inputRef: this.setRef,
          });
        }
        constructor(...e) {
          super(...e),
            (this.selectionStart = 0),
            (this.setRef = e => {
              let { inputRef: t } = this.props;
              (this._inputRef = e), null != t && t(e);
            }),
            (this.handleChange = (e, t) => {
              let { value: s, onChange: a } = this.props,
                n = this._inputRef;
              if (e === s || null == n || null == s) return;
              let l = (0, i.formatExpiration)(e),
                o = n.selectionStart;
              l === s && l.length <= 3 && s.includes("/") && !e.includes("/")
                ? (l = l.replace(r, ""))
                : l === s && e.includes("/") && !s.includes("/") && (l += "/"),
                l.length > e.length && (o += l.length - e.length),
                (this.selectionStart = o),
                null != a && a(l, t);
            });
        }
      }
      var d = o;
    },
    87641: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return I;
          },
        }),
        s("222007");
      var a = s("37983"),
        n = s("884691"),
        l = s("917351"),
        i = s.n(l),
        r = s("77078"),
        o = s("850068"),
        d = s("112679"),
        u = s("145131"),
        c = s("600785"),
        S = s("713518"),
        E = s("299039"),
        T = s("793133"),
        f = s("364735"),
        _ = s("49111"),
        m = s("782340"),
        g = s("140806");
      class h extends n.PureComponent {
        render() {
          let {
            paymentSource: e,
            isDefault: t,
            isEditing: s,
            index: n,
            hideDivider: l,
            isForSubscription: i,
            locale: o,
            removing: d,
            submitting: c,
            onSubmit: S,
            onCancel: E,
            onDelete: _,
          } = this.props;
          return s
            ? (0, a.jsx)(T.default, {
                paymentSource: e,
                isDefault: t,
                removing: d,
                submitting: c,
                locale: o,
                isForSubscription: i,
                onSubmit: S,
                onCancel: E,
                onDelete: _,
              })
            : (0, a.jsxs)("div", {
                className: g.paymentSourceItem,
                children: [
                  n > 0 && !l
                    ? (0, a.jsx)(r.FormDivider, { className: g.sourceDivider })
                    : null,
                  (0, a.jsxs)(u.default, {
                    align: u.default.Align.CENTER,
                    justify: u.default.Justify.BETWEEN,
                    className: g.paymentSourceRow,
                    children: [
                      (0, a.jsx)(f.default, {
                        paymentSource: e,
                        isDefault: t,
                        isForSubscription: i,
                        locale: o,
                        showSubtext: !0,
                      }),
                      s
                        ? null
                        : (0, a.jsx)(r.Button, {
                            color: r.Button.Colors.PRIMARY,
                            onClick: this.handleEditClick,
                            size: r.Button.Sizes.SMALL,
                            children: m.default.Messages.EDIT,
                          }),
                    ],
                  }),
                ],
              });
        }
        constructor(...e) {
          super(...e),
            (this.handleEditClick = () => {
              this.props.onEditClick(this.props.paymentSource.id);
            });
        }
      }
      h.defaultProps = {
        isEditing: !1,
        hideDivider: !1,
        onEditClick: () => {},
      };
      class N extends n.PureComponent {
        renderFooter() {
          let { paymentSources: e } = this.props;
          return (0, a.jsxs)(u.default, {
            justify: u.default.Justify.END,
            className: g.footer,
            children: [
              0 === Object.keys(e).length
                ? (0, a.jsxs)(u.default.Child, {
                    children: [
                      (0, a.jsx)(r.Text, {
                        variant: "text-sm/normal",
                        children: m.default.Messages.BILLING_NO_PAYMENT_METHOD,
                      }),
                      (0, a.jsx)("div", {
                        className: g.subText,
                        children:
                          m.default.Messages
                            .BILLING_NO_PAYMENT_METHOD_DESCRIPTION,
                      }),
                    ],
                  })
                : null,
              (0, a.jsx)(r.Button, {
                onClick: this.handleAddPaymentMethod,
                children: m.default.Messages.BILLING_ADD_PAYMENT_METHOD,
              }),
            ],
          });
        }
        render() {
          let {
              defaultPaymentSourceId: e,
              paymentSources: t,
              locale: s,
              removing: n,
              submitting: l,
              premiumSubscriptionPaymentSourceId: o,
            } = this.props,
            d = i
              .values(t)
              .sort((t, s) =>
                t.id === e ? -1 : s.id === e ? 1 : E.default.compare(t.id, s.id)
              ),
            S = this.state.editingPayment,
            T = d.findIndex(e => e.id === S),
            f = d.map((t, i) =>
              (0, a.jsx)(
                h,
                {
                  locale: s,
                  paymentSource: t,
                  isDefault: e === t.id,
                  onCancel: this.handleCancel,
                  onDelete: this.handleDelete,
                  isForSubscription: t.id === o,
                  hideDivider: T === i - 1,
                  onSubmit: this.handleSubmit,
                  index: i,
                  submitting: l,
                  removing: n,
                  isEditing: S === t.id,
                  onEditClick: this.handleEditClick,
                },
                t.id
              )
            );
          return (0, a.jsxs)("div", {
            children: [
              (0, a.jsx)(r.FormTitle, {
                tag: "h1",
                children: (0, a.jsxs)(u.default, {
                  align: u.default.Align.CENTER,
                  children: [
                    (0, a.jsx)(r.Tooltip, {
                      position: "left",
                      text: m.default.Messages.BILLING_SECURE_TOOLTIP,
                      children: e =>
                        (0, a.jsx)(c.default, { className: g.lockIcon, ...e }),
                    }),
                    m.default.Messages.BILLING_PAYMENT_SOURCES,
                  ],
                }),
              }),
              f,
              T !== d.length - 1
                ? (0, a.jsx)(r.FormDivider, { className: g.sourceDivider })
                : null,
              this.renderFooter(),
            ],
          });
        }
        constructor(...e) {
          super(...e),
            (this.state = { editingPayment: null }),
            (this.handleEditClick = e => {
              this.setState({ editingPayment: e });
            }),
            (this.handleCancel = () => {
              this.setState({ editingPayment: null });
            }),
            (this.handleDelete = async e => {
              try {
                await o.deletePaymentSource(e),
                  this.setState({ editingPayment: null });
              } catch (e) {}
            }),
            (this.handleSubmit = async (e, t) => {
              if (null != e)
                try {
                  await o.updatePaymentSource(e, t),
                    this.setState({ editingPayment: null });
                } catch (e) {}
            }),
            (this.handlePaymentSourceAdded = async e => {
              await (0, S.fetchSubscriptionPlansOnNewPaymentSource)(e.id);
            }),
            (this.handleAddPaymentMethod = () => {
              (0, r.openModalLazy)(
                async () => {
                  let { default: e } = await s
                    .el("960391")
                    .then(s.bind(s, "960391"));
                  return t =>
                    (0, a.jsx)(e, {
                      ...t,
                      onAddPaymentSource: this.handlePaymentSourceAdded,
                    });
                },
                {
                  onCloseCallback: () => {
                    (0, d.clearError)();
                  },
                  onCloseRequest: _.NOOP,
                }
              );
            });
        }
      }
      var I = N;
    },
    264044: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return f;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("414456"),
        l = s.n(n),
        i = s("819855"),
        r = s("77078"),
        o = s("841098"),
        d = s("376556"),
        u = s("572943"),
        c = s("926994"),
        S = s("599110"),
        E = s("49111"),
        T = s("721687"),
        f = e => {
          let {
              disabled: t = !1,
              type: s,
              className: n,
              innerClassName: f,
              onConnect: _,
            } = e,
            m = (0, o.default)(),
            g = d.default.get((0, u.useLegacyPlatformType)(s));
          return (0, a.jsx)(r.Tooltip, {
            text: g.name,
            children: e => {
              let { onMouseEnter: o, onMouseLeave: u } = e;
              return (0, a.jsx)("div", {
                className: l(T.wrapper, n),
                children: (0, a.jsx)(r.FocusRing, {
                  children: (0, a.jsx)("button", {
                    onMouseEnter: o,
                    onMouseLeave: u,
                    className: l(T.inner, f),
                    type: "button",
                    disabled: t,
                    style: {
                      backgroundImage: "url('".concat(
                        (0, i.isThemeDark)(m)
                          ? g.icon.darkSVG
                          : g.icon.lightSVG,
                        "')"
                      ),
                    },
                    onClick:
                      null != _
                        ? _
                        : () =>
                            (function (e) {
                              let t = d.default.get(e);
                              (0, c.default)(t.type, "Friends List"),
                                S.default.track(
                                  E.AnalyticEvents.ACCOUNT_LINK_STEP,
                                  {
                                    previous_step: "desktop connections",
                                    current_step: "desktop oauth",
                                    platform_type: t.type,
                                  }
                                );
                            })(s),
                    "aria-label": g.name,
                  }),
                }),
              });
            },
          });
        };
    },
    290110: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return d;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("414456"),
        l = s.n(n),
        i = s("145131"),
        r = s("293947"),
        o = s("890957");
      function d(e) {
        let { features: t } = e;
        return (0, a.jsx)(a.Fragment, {
          children: t.map((e, t) =>
            (0, a.jsxs)(
              i.default,
              {
                align: i.default.Align.CENTER,
                className: l(o.marginTop20, r.feature, {
                  [r.featureBorder]: 0 !== t,
                }),
                children: [
                  null != e.icon
                    ? (0, a.jsx)("div", { className: l(r.icon, e.icon) })
                    : null,
                  (0, a.jsxs)("div", {
                    children: [
                      null != e.title
                        ? (0, a.jsx)("div", {
                            className: l(o.marginBottom8, r.title),
                            children: e.title,
                          })
                        : null,
                      (0, a.jsx)("div", {
                        className: r.description,
                        children: e.description,
                      }),
                    ],
                  }),
                ],
              },
              t
            )
          ),
        });
      }
    },
    984557: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return a;
          },
        }),
        s("222007");
      var a,
        n = s("884691"),
        l = s("979897"),
        i = s("49671"),
        r = s("773336");
      a = class extends n.Component {
        getFileContents() {
          let { fileContents: e } = this.props;
          return "function" == typeof e && (e = e()), e;
        }
        downloadNative(e, t) {
          i.default.fileManager.saveWithDialog(e, t);
        }
        downloadHtml5(e, t) {
          let s = new Blob([e], { type: this.props.contentType });
          (0, l.saveAs)(s, t);
        }
        render() {
          let { children: e } = this.props,
            t = n.Children.only(e);
          return n.cloneElement(t, { onClick: this.handleFileDownload });
        }
        constructor(...e) {
          super(...e),
            (this.handleFileDownload = e => {
              e.preventDefault();
              let t = this.getFileContents(),
                { fileName: s, onDownload: a } = this.props;
              r.isPlatformEmbedded
                ? this.downloadNative(t, s)
                : this.downloadHtml5(t, s),
                null == a || a();
            });
        }
      };
    },
    278108: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return T;
          },
        }),
        s("222007"),
        s("424973");
      var a = s("37983"),
        n = s("884691"),
        l = s("499032"),
        i = s.n(l),
        r = s("312165"),
        o = s("3958"),
        d = s("773336"),
        u = s("50885"),
        c = s("49111");
      let S =
        d.isPlatformEmbedded &&
        null != u.default.getDiscordUtils().inputCaptureRegisterElement;
      class E extends n.PureComponent {
        componentDidMount() {
          this._mounted = !0;
        }
        componentWillUnmount() {
          (this._mounted = !1), this.cleanUp();
        }
        componentDidUpdate(e) {
          this.props.defaultValue !== e.defaultValue &&
            this.setState({ codes: this.props.defaultValue });
        }
        cleanUp() {
          d.isPlatformEmbedded &&
            null != this.gs &&
            (this.gs.destroy(), (this.gs = null));
        }
        handleComboChange(e) {
          let { mode: t } = this.state,
            { onChange: s } = this.props;
          t === o.RecordModes.RECORDING &&
            (null != s && s(e), this.setState({ codes: e }));
        }
        render() {
          let e, t;
          let { codes: s, mode: n } = this.state,
            { disabled: l } = this.props;
          return (
            S
              ? ((t = u.default.getDiscordUtils().inputCaptureRegisterElement),
                (e = this.handleNativeChange))
              : !d.isPlatformEmbedded && (e = this.handleComboKeys),
            (0, a.jsx)(o.default, {
              disabled: l,
              value: s,
              mode: n,
              onClick: this.toggleRecordMode,
              onChange: e,
              registerNativeRecorder: t,
              disableOnClickWhileRecording: S,
            })
          );
        }
        constructor(e) {
          super(e),
            (this._mounted = !1),
            (this.recordStart = () => {
              d.isPlatformEmbedded &&
                !S &&
                ((this.gs = new r.default()),
                this.gs.on("change", this.handleGSChange)),
                this.setState({ mode: o.RecordModes.RECORDING });
            }),
            (this.recordEnd = () => {
              this.cleanUp(), this.setState({ mode: o.RecordModes.DEFAULT });
            }),
            (this.toggleRecordMode = () => {
              this.state.mode === o.RecordModes.DEFAULT
                ? this.recordStart()
                : this.recordEnd();
            }),
            (this.handleComboKeys = (e, t, s) => {
              if ((s.preventDefault(), "keydown" === s.type)) {
                let e = t.map(e => [
                    c.KeyboardDeviceTypes.KEYBOARD_KEY,
                    i(e),
                    c.KeyboardEnvs.BROWSER,
                  ]),
                  { keyCode: a } = s;
                null ==
                  e.find(e => {
                    let [, t] = e;
                    return a === t;
                  }) &&
                  e.push([
                    c.KeyboardDeviceTypes.KEYBOARD_KEY,
                    a,
                    c.KeyboardEnvs.BROWSER,
                  ]),
                  this.handleComboChange(e);
              }
            }),
            (this.handleGSChange = e => {
              if (!1 === this._mounted) return;
              let t = [...e.combo];
              this.handleComboChange(t);
            }),
            (this.handleNativeChange = e => {
              e.length > 0 && this.handleComboChange(e), this.recordEnd();
            });
          let { defaultValue: t } = e;
          this.state = { codes: t, mode: o.RecordModes.DEFAULT };
        }
      }
      var T = E;
    },
    294490: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return a;
          },
        });
      var a,
        n = s("37983"),
        l = s("884691"),
        i = s("414456"),
        r = s.n(i),
        o = s("49111"),
        d = s("814480");
      a = class extends l.Component {
        render() {
          let { className: e, videoID: t, videoClassName: s } = this.props;
          return (0, n.jsx)("div", {
            className: r(e, d.videoWrapper),
            children: (0, n.jsx)("iframe", {
              className: r(s, d.video),
              src: "https://www.youtube.com/embed/"
                .concat(t, "?rel=0&showinfo=0&controls=1&origin=https://")
                .concat(o.PRIMARY_DOMAIN),
              allowFullScreen: !0,
              sandbox:
                "allow-forms allow-modals allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts",
            }),
          });
        }
      };
    },
    491589: function (e, t, s) {
      "use strict";
      s.r(t);
      var a = s("281069");
      s.es(a, t);
    },
    887560: function (e, t, s) {
      "use strict";
      s.r(t);
      var a = s("125174");
      s.es(a, t);
    },
    312165: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return a;
          },
        }),
        s("222007"),
        s("424973");
      var a,
        n = s("44170"),
        l = s("773336"),
        i = s("50885"),
        r = s("13798"),
        o = s("49111");
      let d = [],
        u = (e, t, s) => {
          let a = (0, l.isWindows)() ? 0 : 1;
          (e !== o.KeyboardDeviceTypes.MOUSE_BUTTON || s !== a) &&
            d.forEach(a => a._handleEvent(e, t, s));
        };
      a = class extends n.EventEmitter {
        destroy() {
          this.removeAllListeners(),
            0 === (d = d.filter(e => e !== this)).length &&
              i.default.setOnInputEventCallback(null);
        }
        toString() {
          return (0, r.toString)(this.combo);
        }
        _handleEvent(e, t, s) {
          0 === t
            ? (this.combo = this.combo.filter(t => {
                let [a, n] = t;
                return !(a === e && n === s);
              }))
            : (this.combo.push([e, s, (0, r.getEnv)()]),
              this.emit("change", this));
        }
        constructor() {
          super(),
            (this.combo = []),
            d.push(this),
            1 === d.length && i.default.setOnInputEventCallback(u);
        }
      };
    },
    158645: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          fetchAuthSessions: function () {
            return i;
          },
          clearAuthSessions: function () {
            return r;
          },
          logOutSessions: function () {
            return o;
          },
        });
      var a = s("872717"),
        n = s("913144"),
        l = s("49111");
      async function i() {
        var e;
        let t = await a.default.get({ url: l.Endpoints.AUTH_SESSIONS });
        return (
          (null == t ? void 0 : t.ok) &&
            (null === (e = t.body) || void 0 === e
              ? void 0
              : e.user_sessions) != null &&
            n.default.dispatch({
              type: "FETCH_AUTH_SESSIONS_SUCCESS",
              sessions: t.body.user_sessions,
            }),
          t
        );
      }
      function r() {
        n.default.dispatch({
          type: "FETCH_AUTH_SESSIONS_SUCCESS",
          sessions: [],
        });
      }
      async function o(e) {
        if (Array.isArray(e)) {
          if (0 === e.length) return;
        } else e = [e];
        let t = await a.default.post({
          url: l.Endpoints.AUTH_SESSIONS_LOGOUT,
          body: { session_id_hashes: e },
        });
        return (
          (null == t ? void 0 : t.ok) &&
            n.default.dispatch({
              type: "LOGOUT_AUTH_SESSIONS_SUCCESS",
              sessionIdHashes: e,
            }),
          t
        );
      }
    },
    797175: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return o;
          },
        }),
        s("222007");
      var a = s("446674"),
        n = s("913144");
      let l = [];
      function i() {
        l = [];
      }
      class r extends a.default.Store {
        getSessions() {
          return l;
        }
      }
      r.displayName = "AuthSessionsStore";
      var o = new r(n.default, {
        LOGOUT: i,
        LOGIN_SUCCESS: i,
        FETCH_AUTH_SESSIONS_SUCCESS: function (e) {
          let { sessions: t } = e;
          l = t.map(e => ({
            ...e,
            approx_last_used_time: new Date(e.approx_last_used_time),
          }));
        },
        LOGOUT_AUTH_SESSIONS_SUCCESS: function (e) {
          let { sessionIdHashes: t } = e,
            s = [...l],
            a = !1;
          for (let e of t) {
            let t = s.findIndex(t => t.id_hash === e);
            t >= 0 && (s.splice(t, 1), (a = !0));
          }
          if (!a) return !1;
          l = s;
        },
      });
    },
    917454: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          useAuthSessions: function () {
            return u;
          },
          formatDate: function () {
            return c;
          },
        }),
        s("222007");
      var a = s("884691"),
        n = s("866227"),
        l = s.n(n),
        i = s("446674"),
        r = s("271938"),
        o = s("797175"),
        d = s("782340");
      function u() {
        let e = (0, i.useStateFromStoresObject)([o.default], () =>
          o.default.getSessions()
        );
        return a.useMemo(() => {
          let t = [...e],
            s = null,
            a = r.default.getAuthSessionIdHash();
          if (null != a) {
            let e = t.findIndex(e => e.id_hash === a);
            e >= 0 && (s = t.splice(e, 1)[0]);
          }
          return (
            t.sort(
              (e, t) =>
                t.approx_last_used_time.valueOf() -
                e.approx_last_used_time.valueOf()
            ),
            { currentSession: s, otherSessions: t }
          );
        }, [e]);
      }
      function c(e) {
        let t = (Date.now() - e.valueOf()) / 1e3 / 60 / 60;
        return t < 1
          ? d.default.Messages.AUTH_SESSIONS_ACTIVE_RECENTLY
          : l(e).fromNow();
      }
    },
    850166: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return r;
          },
        }),
        s("222007");
      var a = s("884691"),
        n = s("1501"),
        l = s("337575");
      let i = [];
      function r(e) {
        let {
            visible: t,
            autocompleterResultTypes: s,
            autocompleterOptions: r,
            autocompleterBeforeCreateSearchContext: o,
          } = e,
          [d, u] = a.useState(""),
          [c, S] = a.useState(i),
          E = a.useCallback((e, t) => {
            "" === (t = t.trim()).trim() ? S(i) : S(e);
          }, []);
        a.useEffect(() => {
          let e = n.default.addRouteChangeListener(() => {
            u("");
          });
          return e;
        }, []);
        let [T] = a.useState(() => new l.default(E, s, void 0, r));
        a.useEffect(() => {
          t ? (null == o || o(T), T.createSearchContext()) : (T.clean(), u(""));
        }, [t, T, o]);
        let f = a.useCallback(
          e => {
            u(e), T.search(e);
          },
          [T]
        );
        return { queryResults: c, query: d, updateQuery: f };
      }
    },
    607191: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          getBillingAddressLayout: function () {
            return i;
          },
          getOverrideBillingAddressLayout: function () {
            return r;
          },
        });
      var a = s("394846"),
        n = s("18502"),
        l = s("49111");
      let i = e =>
          [l.PaymentSourceTypes.CARD, l.PaymentSourceTypes.VENMO].includes(
            e.type
          ) && "US" === e.country
            ? a.isMobile
              ? n.default.Layouts.SETTINGS_US_MOBILE
              : n.default.Layouts.SETTINGS_US
            : e.type === l.PaymentSourceTypes.CARD && "US" !== e.country
              ? a.isMobile
                ? n.default.Layouts.SETTINGS_INTL_MOBILE
                : n.default.Layouts.SETTINGS_INTL
              : a.isMobile
                ? n.default.Layouts.SETTINGS_INTL_NO_NAME_MOBILE
                : n.default.Layouts.SETTINGS_INTL_NO_NAME,
        r = a.isMobile
          ? n.default.Layouts.SETTINGS_US_MOBILE
          : n.default.Layouts.SETTINGS_US;
    },
    426902: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return r;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("77078"),
        l = s("586391"),
        i = s("843455"),
        r = {
          openNewUserAgeGateModal: e => {
            (0, n.openModalLazy)(
              async () => {
                let { default: e } = await s
                  .el("377531")
                  .then(s.bind(s, "377531"));
                return t => (0, a.jsx)(e, { ...t });
              },
              {
                modalKey: l.NEW_USER_AGE_GATE_MODAL_KEY,
                onCloseRequest: i.NOOP,
                onCloseCallback: e,
              }
            );
          },
          openClaimAccountModal: function () {
            let e =
                arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
              t = arguments.length > 1 ? arguments[1] : void 0;
            (0, n.openModalLazy)(
              async () => {
                let { default: t } = await s
                  .el("633156")
                  .then(s.bind(s, "633156"));
                return s => (0, a.jsx)(t, { claimRequired: e, ...s });
              },
              { onCloseRequest: e ? i.NOOP : null, onCloseCallback: t }
            );
          },
        };
    },
    311207: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return r;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("77078"),
        l = s("298878"),
        i = s("782340"),
        r = () =>
          (0, a.jsx)(n.TooltipContainer, {
            text: i.default.Messages.CLIPS_BETA_TAG_HOVER,
            children: (0, a.jsx)(l.default, {}),
          });
    },
    653485: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return L;
          },
        });
      var a = s("37983"),
        n = s("884691"),
        l = s("627445"),
        i = s.n(l),
        r = s("446674"),
        o = s("77078"),
        d = s("913139"),
        u = s("79112"),
        c = s("278108"),
        S = s("584687"),
        E = s("915639"),
        T = s("216503"),
        f = s("42887"),
        _ = s("227602"),
        m = s("56947"),
        g = s("386045"),
        h = s("30591"),
        N = s("18346"),
        I = s("803725"),
        p = s("119052"),
        C = s("80028"),
        A = s("49111"),
        O = s("686298"),
        x = s("397336"),
        M = s("782340"),
        R = s("836937"),
        D = s("824905"),
        v = s("890957");
      function L() {
        let e = (0, r.useStateFromStores)([f.default], () =>
            f.default.getHardwareH264()
          ),
          {
            clipsEnabled: t,
            remindersEnabled: s,
            decoupledClipsEnabled: l,
            clipsLength: L,
            clipsQuality: P,
          } = (0, r.useStateFromStoresObject)([g.default], () =>
            g.default.getSettings()
          ),
          j = (0, r.useStateFromStores)([g.default], () =>
            g.default.getHardwareClassification()
          ),
          b = (0, r.useStateFromStores)([_.default], () =>
            _.default.getKeybindForAction(A.GlobalKeybindActions.SAVE_CLIP, !0)
          ),
          { enableDecoupledGameClipping: U } = S.default.useExperiment(
            { location: "clips_recording_settings" },
            { autoTrackExposure: !1 }
          ),
          y = (0, N.default)(f.default),
          { showClipsHeaderEntrypoint: B } = m.ClipsExperiment.useExperiment(
            { location: "clips_recording_settings" },
            { autoTrackExposure: !1 }
          );
        i(null != b, "Save clip keybind unset");
        let F = (0, r.useStateFromStores)([E.default], () => E.default.locale),
          G = n.useMemo(
            () => [
              {
                value: C.ClipsLengthSettings.SECONDS_30,
                label: M.default.Messages.CLIPS_LENGTH_SECONDS.format({
                  count: 30,
                }),
              },
              {
                value: C.ClipsLengthSettings.MINUTES_1,
                label: M.default.Messages.CLIPS_LENGTH_MINUTES.format({
                  count: 1,
                }),
              },
              {
                value: C.ClipsLengthSettings.MINUTES_2,
                label: M.default.Messages.CLIPS_LENGTH_MINUTES.format({
                  count: 2,
                }),
              },
            ],
            [F]
          ),
          k = n.useMemo(
            () => [
              {
                value: O.ApplicationStreamResolutions.RESOLUTION_480,
                label:
                  M.default.Messages.SCREENSHARE_RESOLUTION_ABBREVIATED.format({
                    resolution: O.ApplicationStreamResolutions.RESOLUTION_480,
                  }),
              },
              {
                value: O.ApplicationStreamResolutions.RESOLUTION_720,
                label:
                  M.default.Messages.SCREENSHARE_RESOLUTION_ABBREVIATED.format({
                    resolution: O.ApplicationStreamResolutions.RESOLUTION_720,
                  }),
              },
              {
                value: O.ApplicationStreamResolutions.RESOLUTION_1080,
                label:
                  M.default.Messages.SCREENSHARE_RESOLUTION_ABBREVIATED.format({
                    resolution: O.ApplicationStreamResolutions.RESOLUTION_1080,
                  }),
              },
              {
                value: O.ApplicationStreamResolutions.RESOLUTION_1440,
                label:
                  M.default.Messages.SCREENSHARE_RESOLUTION_ABBREVIATED.format({
                    resolution: O.ApplicationStreamResolutions.RESOLUTION_1440,
                  }),
              },
              {
                value: O.ApplicationStreamResolutions.RESOLUTION_SOURCE,
                label: M.default.Messages.SCREENSHARE_SOURCE,
              },
            ],
            [F]
          ),
          H = n.useMemo(
            () => [
              {
                value: O.ApplicationStreamFPS.FPS_15,
                label: M.default.Messages.SCREENSHARE_FPS_ABBREVIATED.format({
                  fps: O.ApplicationStreamFPS.FPS_15,
                }),
              },
              {
                value: O.ApplicationStreamFPS.FPS_30,
                label: M.default.Messages.SCREENSHARE_FPS_ABBREVIATED.format({
                  fps: O.ApplicationStreamFPS.FPS_30,
                }),
              },
              {
                value: O.ApplicationStreamFPS.FPS_60,
                label: M.default.Messages.SCREENSHARE_FPS_ABBREVIATED.format({
                  fps: O.ApplicationStreamFPS.FPS_60,
                }),
              },
            ],
            [F]
          ),
          w = n.useCallback(
            e => {
              d.default.setKeybind({ ...b, shortcut: e });
            },
            [b]
          );
        return (0, a.jsxs)(a.Fragment, {
          children: [
            (0, a.jsxs)(o.FormSection, {
              disabled: !e,
              children: [
                !e &&
                  (0, a.jsx)(T.default, {
                    look: T.InfoBoxLooks.WARNING,
                    className: D.formItem,
                    children:
                      M.default.Messages.CLIPS_SETTINGS_HW_ENCODING_MUST_BE_ENABLED_INFOBOX.format(
                        {
                          onClick: () =>
                            u.default.open(A.UserSettingsSections.VOICE, null, {
                              scrollPosition:
                                x.UserSettingsScrollPositions
                                  .VoiceAndVideoScrollPositions
                                  .HARDWARE_ACCELERATION,
                            }),
                        }
                      ),
                  }),
                j === h.ClipsHardwareClassification.BELOW_MINIMUM
                  ? (0, a.jsx)(T.default, {
                      look: T.InfoBoxLooks.WARNING,
                      className: D.formItem,
                      children:
                        M.default.Messages.CLIPS_SETTINGS_UNDER_MIN_SPECS,
                    })
                  : null,
                (0, a.jsx)(o.FormSwitch, {
                  hideBorder: !0,
                  disabled: !e,
                  className: D.formItem,
                  value: t,
                  note: M.default.Messages.CLIPS_SETTINGS_ENABLE_CLIPS_HELP,
                  onChange: e =>
                    I.updateClipsEnabled({
                      clipsEnabled: e,
                      trackAnalytics: !0,
                    }),
                  children: M.default.Messages.CLIPS_SETTINGS_ENABLE_CLIPS,
                }),
                e &&
                  (0, a.jsx)(T.default, {
                    className: D.formItem,
                    children: M.default.Messages.CLIPS_SETTINGS_QUALITY_INFOBOX,
                  }),
              ],
            }),
            U &&
              y &&
              (0, a.jsxs)(a.Fragment, {
                children: [
                  (0, a.jsx)(o.FormDivider, {}),
                  (0, a.jsx)(o.FormSection, {
                    className: v.marginTop20,
                    disabled: !e,
                    children: (0, a.jsx)(o.FormSwitch, {
                      hideBorder: !0,
                      disabled: !e,
                      className: D.formItem,
                      value: l,
                      note: M.default.Messages
                        .CLIPS_SETTINGS_ENABLE_DECOUPLED_CLIPS_HELP,
                      onChange: e =>
                        I.updateDecoupledClipsEnabled({
                          enabled: e,
                          trackAnalytics: !0,
                        }),
                      children:
                        M.default.Messages
                          .CLIPS_SETTINGS_ENABLE_DECOUPLED_CLIPS,
                    }),
                  }),
                ],
              }),
            B &&
              (0, a.jsxs)(a.Fragment, {
                children: [
                  (0, a.jsx)(o.FormDivider, {}),
                  (0, a.jsx)(o.FormSection, {
                    className: v.marginTop20,
                    children: (0, a.jsx)(o.FormSwitch, {
                      hideBorder: !0,
                      className: D.formItem,
                      value: s,
                      note: M.default.Messages
                        .CLIPS_SETTINGS_ENABLE_REMINDERS_HELP,
                      onChange: e => I.updateRemindersEnabled(e),
                      children:
                        M.default.Messages.CLIPS_SETTINGS_ENABLE_REMINDERS,
                    }),
                  }),
                ],
              }),
            (0, a.jsx)(o.FormDivider, {}),
            (0, a.jsxs)(o.FormSection, {
              className: v.marginTop20,
              children: [
                (0, a.jsx)(p.SelectItem, {
                  className: D.formItem,
                  select: I.updateClipsLength,
                  title: M.default.Messages.CLIPS_SETTINGS_LENGTH,
                  note: M.default.Messages.CLIPS_SETTINGS_LENGTH_HELP,
                  value: L,
                  options: G,
                }),
                (0, a.jsx)(p.SelectItem, {
                  className: D.formItem,
                  select: e =>
                    I.updateClipsQuality({
                      resolution: e,
                      frameRate: P.frameRate,
                    }),
                  title: M.default.Messages.CLIPS_SETTINGS_RESOLUTION,
                  note: M.default.Messages.CLIPS_SETTINGS_RESOLUTION_NOTE,
                  value: P.resolution,
                  options: k,
                }),
                (0, a.jsx)(p.SelectItem, {
                  className: D.formItem,
                  select: e =>
                    I.updateClipsQuality({
                      resolution: P.resolution,
                      frameRate: e,
                    }),
                  title: M.default.Messages.CLIPS_SETTINGS_FRAMERATE,
                  note: M.default.Messages.CLIPS_SETTINGS_FRAMERATE_NOTE,
                  value: P.frameRate,
                  options: H,
                }),
                (0, a.jsx)(p.InputItem, {
                  className: D.formItem,
                  title: M.default.Messages.CLIPS_SETTINGS_KEYBIND,
                  note: M.default.Messages.CLIPS_SETTINGS_KEYBIND_HELP,
                  children: (0, a.jsx)("div", {
                    className: R.keyRecorder,
                    children: (0, a.jsx)(c.default, {
                      defaultValue: b.shortcut,
                      onChange: w,
                    }),
                  }),
                }),
              ],
            }),
          ],
        });
      }
    },
    824357: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return A;
          },
        });
      var a = s("37983"),
        n = s("884691"),
        l = s("446674"),
        i = s("151426"),
        r = s("77078"),
        o = s("685665"),
        d = s("10641"),
        u = s("103979"),
        c = s("845579"),
        S = s("42887"),
        E = s("56947"),
        T = s("386045"),
        f = s("18346"),
        _ = s("803725"),
        m = s("311207"),
        g = s("653485"),
        h = s("462491"),
        N = s("782340"),
        I = s("416255"),
        p = s("824905"),
        C = s("890957");
      function A() {
        let e = c.ClipsAllowVoiceRecording.useSetting(),
          { enableViewerClipping: t } = u.default.useExperiment(
            { location: "Clips Settings" },
            { autoTrackExposure: !1 }
          ),
          { AnalyticsLocationProvider: s } = (0, o.default)(),
          A = (0, E.useEnableClips)(),
          { viewerClipsEnabled: O } = (0, l.useStateFromStoresObject)(
            [T.default],
            () => T.default.getSettings()
          ),
          x = (0, f.default)(S.default);
        return (
          n.useEffect(() => {
            (0, d.markDismissibleContentAsDismissed)(
              i.DismissibleContent.CLIPS_SETTINGS_BETA_TAG
            );
          }),
          (0, a.jsxs)(s, {
            children: [
              (0, a.jsx)(r.FormSection, {
                tag: r.FormTitleTags.H1,
                title: (0, a.jsxs)("div", {
                  className: I.headerContainer,
                  children: [
                    N.default.Messages.CLIPS,
                    (0, a.jsx)(m.default, {}),
                  ],
                }),
                children:
                  A &&
                  (0, a.jsxs)("form", {
                    onSubmit: e => e.preventDefault(),
                    children: [
                      (0, a.jsx)(g.default, {}),
                      (0, a.jsx)(h.default, {}),
                    ],
                  }),
              }),
              A && (0, a.jsx)(r.FormDivider, {}),
              (0, a.jsxs)(r.FormSection, {
                className: C.marginTop20,
                children: [
                  (0, a.jsx)(r.FormSwitch, {
                    hideBorder: !0,
                    className: p.formItem,
                    value: e,
                    note: N.default.Messages
                      .CLIPS_SETTINGS_OPT_OUT_OF_VOICE_RECORDING_DESCRIPTION,
                    onChange: e =>
                      _.updateAllowVoiceRecording({ allowVoiceRecording: e }),
                    children:
                      N.default.Messages
                        .CLIPS_SETTINGS_OPT_OUT_OF_VOICE_RECORDING,
                  }),
                  t &&
                    x &&
                    (0, a.jsx)(r.FormSwitch, {
                      hideBorder: !0,
                      className: p.formItem,
                      value: O,
                      note: N.default.Messages
                        .CLIPS_SETTINGS_VIEWERSIDE_CLIPS_TOGGLE_DESCRIPTION,
                      onChange: e =>
                        _.updateViewerClipsEnabled({
                          enabled: e,
                          trackAnalytics: !0,
                        }),
                      children:
                        N.default.Messages
                          .CLIPS_SETTINGS_VIEWERSIDE_CLIPS_TOGGLE,
                    }),
                ],
              }),
            ],
          })
        );
      }
    },
    462491: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return E;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("446674"),
        l = s("77078"),
        i = s("49671"),
        r = s("386045"),
        o = s("803725"),
        d = s("119052"),
        u = s("782340"),
        c = s("824905"),
        S = s("925994");
      function E() {
        let e = (0, n.useStateFromStores)(
            [r.default],
            () => r.default.getSettings().storageLocation
          ),
          t = async () => {
            let e = await i.default.fileManager.showOpenDialog({
              properties: ["openDirectory", "createDirectory"],
            });
            e.length > 0 && o.updateClipsStorageLocation(e[0]);
          };
        return (0, a.jsx)(l.FormSection, {
          children: (0, a.jsx)(d.InputItem, {
            title: u.default.Messages.CLIPS_SETTINGS_STORAGE_LOCATION,
            note: u.default.Messages.CLIPS_SETTINGS_STORAGE_LOCATION_HELP,
            className: c.formItem,
            children: (0, a.jsx)(l.Clickable, {
              className: S.selectControl,
              "aria-label":
                u.default.Messages.CLIPS_SETTINGS_STORAGE_LOCATION_LABEL.format(
                  { storageLocation: e }
                ),
              onClick: t,
              children: (0, a.jsx)(l.TextInput, {
                tabIndex: -1,
                value: e,
                editable: !1,
                "aria-hidden": !0,
              }),
            }),
          }),
        });
      }
    },
    119052: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          InputItem: function () {
            return d;
          },
          SelectItem: function () {
            return u;
          },
        });
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("77078"),
        o = s("925994");
      function d(e) {
        let { title: t, note: s, children: n, className: l, id: d } = e;
        return (0, a.jsxs)("div", {
          className: i(o.inputItem, l),
          children: [
            (0, a.jsxs)("div", {
              className: o.inputItemText,
              children: [
                (0, a.jsx)(r.Text, {
                  tag: "label",
                  variant: "text-md/medium",
                  className: o.inputItemTitle,
                  id: d,
                  children: t,
                }),
                null != s &&
                  (0, a.jsx)(r.FormText, {
                    className: o.note,
                    type: r.FormText.Types.DESCRIPTION,
                    children: s,
                  }),
              ],
            }),
            n,
          ],
        });
      }
      function u(e) {
        let { options: t, value: s, select: l, selectClassName: u, ...c } = e,
          S = n.useId();
        return (0, a.jsx)(d, {
          ...c,
          id: S,
          children: (0, a.jsx)(r.Select, {
            "aria-labelledby": S,
            className: i(o.selectControl, u),
            options: t,
            isSelected: e => e === s,
            select: l,
            serialize: e => String(e),
          }),
        });
      }
    },
    12480: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return l;
          },
        });
      var a = s("862205");
      let n = (0, a.createExperiment)({
        kind: "user",
        id: "2024-01_mobile_shop",
        label: "Mobile Shop Experiment",
        defaultConfig: {
          mobileShopEnabled: !1,
          showPaymentSuccessViewInsteadOfPDP: !1,
          shouldAnimateAvatarDecorationsInIndexPages: !1,
          shouldFakePurchaseSuccessFlowLocally: !1,
        },
        treatments: [
          {
            id: 1,
            label: "Enables mobile shop",
            config: {
              mobileShopEnabled: !0,
              showPaymentSuccessViewInsteadOfPDP: !1,
              shouldAnimateAvatarDecorationsInIndexPages: !1,
              shouldFakePurchaseSuccessFlowLocally: !1,
            },
          },
          {
            id: 601,
            label: "Show payment success view instead of PDP",
            config: {
              mobileShopEnabled: !0,
              showPaymentSuccessViewInsteadOfPDP: !0,
              shouldAnimateAvatarDecorationsInIndexPages: !1,
              shouldFakePurchaseSuccessFlowLocally: !1,
            },
          },
          {
            id: 602,
            label: "Animate decorations in home/index page",
            config: {
              mobileShopEnabled: !0,
              showPaymentSuccessViewInsteadOfPDP: !1,
              shouldAnimateAvatarDecorationsInIndexPages: !0,
              shouldFakePurchaseSuccessFlowLocally: !1,
            },
          },
          {
            id: 603,
            label: "Simulate Success Flow Locally",
            config: {
              mobileShopEnabled: !0,
              showPaymentSuccessViewInsteadOfPDP: !0,
              shouldAnimateAvatarDecorationsInIndexPages: !1,
              shouldFakePurchaseSuccessFlowLocally: !0,
            },
          },
        ],
      });
      var l = e => {
        let { location: t } = e;
        return n.useExperiment({ location: t });
      };
    },
    235898: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return u;
          },
        }),
        s("222007");
      var a = s("884691"),
        n = s("65597"),
        l = s("875212"),
        i = s("21526"),
        r = s("853987"),
        o = s("12480"),
        d = s("775416");
      function u(e) {
        var t;
        let s = "useFetchCollectiblesCategoriesAndPurchases";
        (0, l.useTriggerDebuggingAA)({
          location: s + " auto on",
          autoTrackExposure: !0,
        }),
          (0, l.useTriggerDebuggingAA)({
            location: s + " auto off",
            autoTrackExposure: !1,
          });
        let {
            isFetching: u,
            categories: c,
            error: S,
          } = (function (e) {
            let t = "useMaybeFetchCollectiblesCategories";
            (0, l.useTriggerDebuggingAA)({
              location: t + " auto on",
              autoTrackExposure: !0,
            }),
              (0, l.useTriggerDebuggingAA)({
                location: t + " auto off",
                autoTrackExposure: !1,
              });
            let [s, o, d, u] = (0, n.useStateFromStoresArray)(
              [r.default],
              () => {
                var e;
                return [
                  r.default.isFetching,
                  r.default.error,
                  null !== (e = r.default.lastFetched) && void 0 !== e ? e : 0,
                  r.default.categories,
                ];
              }
            );
            return (
              (0, a.useEffect)(() => {
                !(s || o || Date.now() - d < 6e5) &&
                  (0, i.fetchCollectiblesCategories)(e);
              }, [s, d, o, e]),
              { isFetching: s, categories: u, error: o }
            );
          })(e),
          {
            isClaiming: E,
            fetchError: T,
            claimError: f,
            isFetching: _,
            purchases: m,
          } = (function () {
            let e = "useFetchPurchases";
            (0, l.useTriggerDebuggingAA)({
              location: e + " auto on",
              autoTrackExposure: !0,
            }),
              (0, l.useTriggerDebuggingAA)({
                location: e + " auto off",
                autoTrackExposure: !1,
              });
            let [t, s, r, u, c] = (0, n.useStateFromStoresArray)(
                [d.default],
                () => [
                  d.default.isFetching,
                  d.default.isClaiming,
                  d.default.fetchError,
                  d.default.claimError,
                  d.default.purchases,
                ]
              ),
              { shouldFakePurchaseSuccessFlowLocally: S } = (0, o.default)({
                location: "useFetchPurchases",
              });
            return (
              (0, a.useEffect)(() => {
                (!S || !(c.size > 0)) && (0, i.fetchCollectiblesPurchases)();
              }, [S]),
              {
                isClaiming: s,
                fetchError: r,
                claimError: u,
                isFetching: t,
                purchases: c,
              }
            );
          })(),
          g = null !== (t = null != S ? S : T) && void 0 !== t ? t : f;
        return {
          isFetching: u || _,
          isFetchingCategories: u,
          isFetchingPurchases: _,
          isClaiming: E,
          categories: c,
          purchases: m,
          error: g,
        };
      }
    },
    345210: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return r;
          },
        }),
        s("222007");
      var a = s("884691"),
        n = s("853987"),
        l = s("491232"),
        i = s("235898"),
        r = e => {
          let [t, s] = a.useState(),
            { categories: r, purchases: o } = (0, i.default)();
          return (
            a.useEffect(() => {
              (null == t || 0 === t.size) && s(r);
            }, [r, t]),
            a.useMemo(() => {
              if (null != e) return e;
              if (null == t) return;
              let s = (0, l.getAvatarDecorations)(o, t),
                a = s.filter(e => {
                  let { skuId: t } = e,
                    s = n.default.getProduct(t);
                  return (0, l.isPremiumCollectiblesProduct)(s);
                });
              return a[Math.floor(Math.random() * a.length)];
            }, [t, e, o])
          );
        };
    },
    793346: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return r;
          },
        }),
        s("222007");
      var a = s("884691"),
        n = s("853987"),
        l = s("491232"),
        i = s("235898"),
        r = e => {
          let [t, s] = a.useState(),
            { categories: r } = (0, i.default)();
          return (
            a.useEffect(() => {
              (null == t || 0 === t.size) && s(r);
            }, [r, t]),
            a.useMemo(() => {
              if (null != e) return e;
              if (null == t) return;
              let s = (0, l.getProfileEffectsFromCategories)(t),
                a = s
                  .filter(e => {
                    let { skuId: t } = e,
                      s = n.default.getProduct(t);
                    return (0, l.isPremiumCollectiblesProduct)(s);
                  })
                  .map(e => e.id);
              return a[Math.floor(Math.random() * a.length)];
            }, [t, e])
          );
        };
    },
    104385: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return p;
          },
        }),
        s("794252");
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("506838"),
        o = s("77078"),
        d = s("812204"),
        u = s("685665"),
        c = s("599110"),
        S = s("21526"),
        E = s("411691"),
        T = s("49111"),
        f = s("646718"),
        _ = s("782340"),
        m = s("941147");
      let g = () =>
          (0, a.jsxs)(a.Fragment, {
            children: [
              (0, a.jsx)("div", {
                className: m.artContainer,
                "aria-hidden": !0,
                role: "presentation",
                children: (0, a.jsx)("img", {
                  src: s("217775"),
                  className: m.art,
                  alt: " ",
                }),
              }),
              (0, a.jsxs)("div", {
                className: m.mainColumn,
                children: [
                  (0, a.jsx)(o.Heading, {
                    variant: "heading-lg/extrabold",
                    color: "always-white",
                    className: m.title,
                    children: _.default.Messages.COLLECTIBLES_BANNER_TITLE_2024,
                  }),
                  (0, a.jsx)(o.Text, {
                    className: m.textBody,
                    variant: "text-sm/normal",
                    color: "always-white",
                    children:
                      _.default.Messages.COLLECTIBLES_BANNER_DESCRIPTION_2024,
                  }),
                ],
              }),
            ],
          }),
        h = () =>
          (0, a.jsxs)(a.Fragment, {
            children: [
              (0, a.jsx)("div", {
                className: m.artContainer,
                "aria-hidden": !0,
                role: "presentation",
                children: (0, a.jsx)("img", {
                  src: s("872702"),
                  className: i([m.art, m.artJan2024]),
                  alt: " ",
                  width: "143",
                }),
              }),
              (0, a.jsxs)("div", {
                className: m.mainColumn,
                children: [
                  (0, a.jsx)(o.Heading, {
                    variant: "heading-lg/bold",
                    color: "always-white",
                    className: m.title,
                    children: _.default.Messages.COLLECTIBLES_SFA_TITLE,
                  }),
                  (0, a.jsx)(o.Text, {
                    className: m.textBody,
                    variant: "text-sm/normal",
                    color: "always-white",
                    children:
                      _.default.Messages.COLLECTIBLES_SFA_BANNER_DESCRIPTION,
                  }),
                ],
              }),
            ],
          }),
        N = () =>
          (0, a.jsxs)(a.Fragment, {
            children: [
              (0, a.jsx)("div", {
                className: m.artContainer,
                "aria-hidden": !0,
                role: "presentation",
                children: (0, a.jsx)("img", {
                  src: s("43980"),
                  className: m.art,
                  alt: " ",
                }),
              }),
              (0, a.jsxs)("div", {
                className: m.mainColumn,
                children: [
                  (0, a.jsx)(o.Heading, {
                    variant: "heading-lg/extrabold",
                    color: "always-white",
                    className: m.title,
                    children: _.default.Messages.COLLECTIBLES_BANNER_TITLE_2024,
                  }),
                  (0, a.jsx)(o.Text, {
                    className: m.textBody,
                    variant: "text-sm/normal",
                    color: "always-white",
                    children:
                      _.default.Messages.COLLECTIBLES_BANNER_DESCRIPTION_2024,
                  }),
                ],
              }),
            ],
          }),
        I = e => {
          let { variation: t } = e;
          return (0, r.match)(t)
            .with(E.CollectiblesShopMarketingVariants.MONSTER_DROP, () =>
              (0, a.jsx)(h, {})
            )
            .with(E.CollectiblesShopMarketingVariants.SPRINGTOONS, () =>
              (0, a.jsx)(N, {})
            )
            .otherwise(() => (0, a.jsx)(g, {}));
        };
      var p = () => {
        let { analyticsLocations: e } = (0, u.default)(
            d.default.COLLECTIBLES_PROFILE_SETTINGS_UPSELL
          ),
          t = n.useRef(null),
          s = (0, E.default)("CollectiblesUpsellBanner");
        return (
          n.useEffect(() => {
            c.default.track(T.AnalyticEvents.PREMIUM_UPSELL_VIEWED, {
              type: f.PremiumUpsellTypes.COLLECTIBLES_PROFILE_SETTINGS_UPSELL,
              location_stack: e,
            });
          }, [e]),
          (0, a.jsxs)("div", {
            ref: t,
            className: i(m.container, m.shopForAllBackgroundImage),
            children: [
              (0, a.jsx)(I, { variation: s }),
              (0, a.jsx)(o.Button, {
                onClick: () => {
                  (0, S.openCollectiblesShop)({
                    analyticsLocations: e,
                    analyticsSource:
                      d.default.COLLECTIBLES_PROFILE_SETTINGS_UPSELL,
                  });
                },
                className: m.ctaButton,
                look: o.Button.Looks.INVERTED,
                children: (0, r.match)(s)
                  .with(
                    E.CollectiblesShopMarketingVariants.WINTER_2023_DROP,
                    () => _.default.Messages.CHECK_IT_OUT
                  )
                  .otherwise(
                    () => _.default.Messages.COLLECTIBLES_CTA_GO_TO_SHOP
                  ),
              }),
            ],
          })
        );
      };
    },
    811199: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          DevToolsLayerContainer: function () {
            return o;
          },
          DevToolsLayerProvider: function () {
            return d;
          },
          devToolsLayerContext: function () {
            return u;
          },
        });
      var a = s("77078");
      let {
          Layer: n,
          LayerContainer: l,
          LayerProvider: i,
          layerContext: r,
        } = (0, a.createLayer)("DevTools"),
        o = l,
        d = i,
        u = r;
    },
    192845: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return A;
          },
        }),
        s("222007"),
        s("311790"),
        s("477657"),
        s("811875"),
        s("90301"),
        s("652153"),
        s("28797"),
        s("817884"),
        s("597349"),
        s("667536"),
        s("690341"),
        s("843762");
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("446674"),
        o = s("151426"),
        d = s("95410"),
        u = s("77078"),
        c = s("872173"),
        S = s("374363"),
        E = s("145131"),
        T = s("810567"),
        f = s("258078"),
        _ = s("674268"),
        m = s("585653"),
        g = s("989691"),
        h = s("862853"),
        N = s("216210"),
        I = s("890957");
      function p(e) {
        let { contents: t, content: s, onChange: n } = e,
          l = (0, _.hasBit)(t, o.DismissibleContent[s]);
        return (0, a.jsx)(a.Fragment, {
          children: (0, a.jsx)(u.FormSwitch, {
            value: l,
            onChange: function () {
              n(s),
                l
                  ? (0, c.removeDismissedContent)(o.DismissibleContent[s])
                  : (0, c.addDismissedContent)(o.DismissibleContent[s]);
            },
            children: (0, a.jsx)(u.FormText, {
              size: f.default.Sizes.SIZE_16,
              className: I.marginTop4,
              children: ""
                .concat(s.toLowerCase(), " (")
                .concat(o.DismissibleContent[s], ")"),
            }),
          }),
        });
      }
      function C(e) {
        let { items: t, dismissedContents: s, handleChange: n } = e;
        return (0, a.jsx)(a.Fragment, {
          children: t
            .filter(e => isNaN(Number(e)))
            .map(e =>
              (0, a.jsx)(p, { contents: s, content: e, onChange: n }, e)
            ),
        });
      }
      function A() {
        var e;
        let t = (0, h.default)(e => e.recentlyShown),
          { dailyCapReached: s, dailyCapOverridden: l } = (0,
          r.useStateFromStoresObject)([g.default], () => ({
            dailyCapReached: g.default.hasUserHitDCCap(),
            dailyCapOverridden: g.default.dailyCapOverridden,
          })),
          [f, _] = n.useState(""),
          p =
            null !==
              (e = (0, r.useStateFromStores)([S.default], () => {
                var e;
                return null === (e = S.default.settings.userContent) ||
                  void 0 === e
                  ? void 0
                  : e.dismissedContents;
              })) && void 0 !== e
              ? e
              : new Uint8Array(),
          [A, O] = (function (e, t) {
            let [s, a] = n.useState(() => {
              let s = d.default.get(e);
              return null != s ? s : t;
            });
            return (
              n.useEffect(() => {
                d.default.set(e, s);
              }, [e, s]),
              [s, a]
            );
          })("RecentDismissibleOverrides", []),
          x = e => {
            O(t => {
              let s = new Set(t);
              s.delete(e);
              let a = Array.from(s).slice(0, 4);
              return a.unshift(e), a;
            });
          },
          M = t.map(e => o.DismissibleContent[e]),
          R = A.filter(e => e.toLowerCase().includes(f.toLowerCase())).filter(
            e => !M.includes(e)
          ),
          D = Object.keys(o.DismissibleContent)
            .filter(e => !M.includes(e))
            .filter(e => !A.includes(e))
            .filter(e => e.toLowerCase().includes(f.toLowerCase()))
            .sort((e, t) => e.localeCompare(t));
        return (0, a.jsxs)(a.Fragment, {
          children: [
            (0, a.jsxs)(u.FormSection, {
              title: "Dismissible Content Fatigue",
              tag: u.FormTitleTags.H1,
              className: I.marginBottom60,
              children: [
                (0, a.jsx)(u.FormItem, {
                  children: (0, a.jsxs)(u.FormText, {
                    className: I.marginBottom4,
                    children: ["Daily Cap Reached: ", s ? "Yes" : "No"],
                  }),
                }),
                (0, a.jsx)(u.FormSwitch, {
                  value: l,
                  onChange: m.overrideDismissibleContentFramework,
                  children: "Override Dismissible Content Daily Cap",
                }),
                (0, a.jsxs)(u.FormItem, {
                  children: [
                    (0, a.jsx)(u.Button, {
                      onClick: () =>
                        (0, m.resetDismissibleContentFrameworkStore)(),
                      children: "Reset DismissibleContentFrameworkStore",
                    }),
                    (0, a.jsx)(u.FormText, {
                      className: I.marginTop4,
                      children:
                        "This will reset the daily cap and content seen during session",
                    }),
                  ],
                }),
              ],
            }),
            (0, a.jsxs)(u.FormSection, {
              title: "Dismissible Contents",
              tag: u.FormTitleTags.H1,
              children: [
                (0, a.jsx)(T.default, {
                  className: I.marginBottom20,
                  size: T.default.Sizes.LARGE,
                  query: f,
                  onChange: _,
                  onClear: () => _(""),
                }),
                (0, a.jsxs)(u.FormItem, {
                  className: N.buttonsContainer,
                  children: [
                    (0, a.jsx)(u.Button, {
                      onClick: c.clearDismissedContents,
                      children: "Clear All Dismissed Contents",
                    }),
                    (0, a.jsx)(u.Button, {
                      onClick: c.checkAllDismissedContents,
                      children: "Check All Dismissed Contents",
                    }),
                  ],
                }),
                t.length > 0
                  ? (0, a.jsxs)("div", {
                      className: I.marginBottom20,
                      children: [
                        (0, a.jsx)("div", {
                          className: I.marginBottom20,
                          children: (0, a.jsx)(u.FormTitle, {
                            children: "Recently Shown",
                          }),
                        }),
                        (0, a.jsx)(C, {
                          items: M,
                          dismissedContents: p,
                          handleChange: x,
                        }),
                      ],
                    })
                  : null,
                R.length > 0
                  ? (0, a.jsxs)(a.Fragment, {
                      children: [
                        (0, a.jsx)("div", {
                          className: I.marginBottom20,
                          children: (0, a.jsx)(u.FormTitle, {
                            children: "Recent Overrides",
                          }),
                        }),
                        (0, a.jsx)(C, {
                          items: R,
                          dismissedContents: p,
                          handleChange: x,
                        }),
                      ],
                    })
                  : null,
                (0, a.jsx)(E.default, {
                  className: i(I.marginBottom20, I.marginTop20),
                  children: (0, a.jsx)(u.FormTitle, {
                    children: "Available Dismissible Contents",
                  }),
                }),
                (0, a.jsx)(C, {
                  items: D,
                  dismissedContents: p,
                  handleChange: x,
                }),
              ],
            }),
          ],
        });
      }
    },
    778695: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          DropsCopyCodeModalContent: function () {
            return f;
          },
          DropsModalClaimErrorBody: function () {
            return _;
          },
          default: function () {
            return m;
          },
        }),
        s("222007");
      var a = s("37983"),
        n = s("884691"),
        l = s("446674"),
        i = s("77078"),
        r = s("913144"),
        o = s("545158"),
        d = s("476765"),
        u = s("376152"),
        c = s("180273"),
        S = s("579565"),
        E = s("782340"),
        T = s("126867");
      function f(e) {
        let { onClose: t, code: s, copyInputTitle: n, bodyText: l } = e;
        return (0, a.jsxs)(a.Fragment, {
          children: [
            (0, a.jsxs)(i.ModalHeader, {
              separator: !1,
              className: T.headerContainer,
              children: [
                (0, a.jsx)("div", { className: T.dropArt }),
                (0, a.jsx)(i.Heading, {
                  variant: "heading-xl/semibold",
                  children:
                    E.default.Messages
                      .OUTBOUND_PROMOTION_REDEMPTION_MODAL_TITLE,
                }),
              ],
            }),
            (0, a.jsxs)(i.ModalContent, {
              className: T.modalContent,
              children: [
                (0, a.jsx)(i.Text, {
                  variant: "text-md/normal",
                  className: T.codeBodyText,
                  children: l,
                }),
                (0, a.jsx)(i.FormDivider, { className: T.formDivider }),
                (0, a.jsx)(i.FormSection, {
                  title: n,
                  className: T.formSection,
                  children: (0, a.jsx)(i.Button, {
                    onClick: () => (0, o.default)(s),
                    color: i.Button.Colors.BRAND,
                    look: i.Button.Looks.FILLED,
                    children: E.default.Messages.GIFT_EMBED_BUTTON_CLAIM,
                  }),
                }),
              ],
            }),
            (0, a.jsx)(i.ModalFooter, {
              className: T.modalFooter,
              children: (0, a.jsx)(i.Button, {
                className: T.closeButton,
                onClick: t,
                look: i.Button.Looks.LINK,
                color: T.closeButton,
                children: E.default.Messages.CLOSE,
              }),
            }),
          ],
        });
      }
      function _(e) {
        let { onClose: t, errorCode: s } = e,
          n = {
            26e4: E.default.Messages.DROPS_USER_NOT_ENROLLED_ERROR,
            260001: E.default.Messages.DROPS_QUEST_NOT_COMPLETED_ERROR,
            260002: E.default.Messages.DROPS_NO_CODE_AVAILABLE_ERROR,
            260003: E.default.Messages.DROPS_CODE_ALREADY_CLAIMED_ERROR,
          },
          l = E.default.Messages.GENERIC_ERROR_BODY;
        return (
          null != n[s] && (l = n[s]),
          (0, a.jsxs)(a.Fragment, {
            children: [
              (0, a.jsxs)(i.ModalHeader, {
                separator: !1,
                className: T.errorHeader,
                children: [
                  (0, a.jsx)("div", { className: T.errorArt }),
                  (0, a.jsx)(i.Heading, {
                    variant: "heading-xl/semibold",
                    children: E.default.Messages.GENERIC_ERROR_TITLE,
                  }),
                ],
              }),
              (0, a.jsx)(i.ModalContent, {
                className: T.errorBody,
                children: (0, a.jsx)(i.Text, {
                  variant: "text-md/normal",
                  className: T.bodyText,
                  children: l,
                }),
              }),
              (0, a.jsx)(i.ModalFooter, {
                children: (0, a.jsx)(i.Button, {
                  color: i.Button.Colors.BRAND,
                  onClick: t,
                  children: E.default.Messages.CLOSE,
                }),
              }),
            ],
          })
        );
      }
      var m = function (e) {
        let {
            onClose: t,
            code: o,
            drop: _,
            platform: m,
            transitionState: g,
          } = e,
          h = (0, d.useUID)(),
          [N, I] = n.useState();
        n.useEffect(() => {
          null == o &&
            r.default.wait(async () => {
              await (0, u.fetchCodePlatformAvailability)(_.dropsQuestId);
            });
        }, [_.dropsQuestId, o]);
        let p = (0, l.useStateFromStores)(
          [c.default],
          () => c.default.platformAvailability
        );
        return (0, a.jsx)(i.ModalRoot, {
          transitionState: g,
          "aria-labelledby": h,
          children: (0, a.jsx)(a.Fragment, {
            children: (() => {
              if (null != o)
                return (0, a.jsx)(f, {
                  bodyText: _.messages.claimTip(),
                  onClose: t,
                  copyInputTitle:
                    E.default.Messages.DROPS_REDEMPTION_CODE_PLATFORM_TITLE.format(
                      { platform: m }
                    ),
                  code: o,
                });
              {
                if (null === p)
                  return (0, a.jsx)("div", {
                    className: T.spinnerContainer,
                    children: (0, a.jsx)(i.Spinner, {}),
                  });
                let e = p.length > 0,
                  n = 1 === p.length;
                return (0, a.jsxs)(a.Fragment, {
                  children: [
                    (0, a.jsxs)(i.ModalHeader, {
                      separator: !1,
                      className: T.headerContainer,
                      children: [
                        (0, a.jsx)("div", { className: T.dropArt }),
                        (0, a.jsx)(i.Heading, {
                          variant: "heading-lg/semibold",
                          children:
                            E.default.Messages
                              .OUTBOUND_PROMOTION_REDEMPTION_MODAL_TITLE,
                        }),
                      ],
                    }),
                    (0, a.jsxs)(i.ModalContent, {
                      children: [
                        (0, a.jsx)(i.Text, {
                          variant: "text-md/normal",
                          className: T.dropBodyText,
                          children: n
                            ? E.default.Messages.DROPS_MODAL_CHOOSE_SINGLE_PLATFORM.format(
                                { platform: (0, S.getPlatformLabel)(p[0]) }
                              )
                            : E.default.Messages.DROPS_MODAL_CHOOSE_PLATFORM.format(
                                { title: _.title }
                              ),
                        }),
                        (0, a.jsx)(i.FormDivider, { className: T.formDivider }),
                        (0, a.jsxs)(i.FormSection, {
                          className: T.dropFormSection,
                          children: [
                            (0, a.jsx)(i.SingleSelect, {
                              onChange: I,
                              options: p.map(e => ({
                                value: e,
                                label: (0, S.getPlatformLabel)(e),
                              })),
                              value: n ? p[0] : N,
                              isDisabled: !e,
                              className: e ? "" : T.selectDangerBorder,
                              look: e
                                ? i.SelectLooks.FILLED
                                : i.SelectLooks.CUSTOM,
                            }),
                            !e &&
                              (0, a.jsx)(i.Text, {
                                variant: "text-sm/medium",
                                color: "text-danger",
                                className: T.errorCodesText,
                                children:
                                  E.default.Messages.DROPS_CODES_RAN_OUT,
                              }),
                          ],
                        }),
                      ],
                    }),
                    (0, a.jsxs)(i.ModalFooter, {
                      children: [
                        e &&
                          (0, a.jsx)(i.Button, {
                            color: i.Button.Colors.BRAND,
                            onClick: () => {
                              (0, i.openModalLazy)(async () => {
                                let { default: e } = await s
                                  .el("343495")
                                  .then(s.bind(s, "343495"));
                                return s =>
                                  (void 0 !== N || n) &&
                                  (0, a.jsx)(e, {
                                    ...s,
                                    platform: void 0 === N ? p[0] : N,
                                    code: o,
                                    dropsQuestId: _.dropsQuestId,
                                    closeParentModal: t,
                                    singlePlatformClaim: n,
                                  });
                              });
                            },
                            disabled: void 0 === N && !n,
                            children: E.default.Messages.UNLOCK_CODE,
                          }),
                        e
                          ? (0, a.jsx)(i.Button, {
                              onClick: t,
                              look: i.Button.Looks.LINK,
                              color: T.maybeLaterButton,
                              children: E.default.Messages.MAYBE_LATER,
                            })
                          : (0, a.jsx)(i.Button, {
                              onClick: t,
                              look: i.Button.Looks.LINK,
                              color: T.closeButton,
                              children: E.default.Messages.CLOSE,
                            }),
                      ],
                    }),
                  ],
                });
              }
            })(),
          }),
        });
      };
    },
    260518: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return a;
          },
        });
      var a = (0, s("296892").default)({
        kind: "user",
        id: "2023-08_aa_imbalance_remediation",
        label:
          "AA test to validate fallback trigger and location frequency change",
        defaultConfig: { isEnabled: !1 },
        treatments: [
          {
            id: 1,
            label: "AA test enabled. Noop on UI effect.",
            config: { isEnabled: !0 },
          },
        ],
      });
    },
    810549: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          watchCandidateGames: function () {
            return i;
          },
          stopWatchingCandidateGames: function () {
            return r;
          },
        }),
        s("70102");
      var a = s("913144"),
        n = s("773336"),
        l = s("50885");
      function i() {
        if (!(0, n.isDesktop)())
          throw Error(
            "Attempted to observe candidate games on a non-desktop platform"
          );
        l.default.setCandidateGamesCallback(e => {
          a.default.dispatch({ type: "CANDIDATE_GAMES_CHANGE", games: e });
        }),
          a.default.dispatch({
            type: "GAME_DETECTION_WATCH_CANDIDATE_GAMES_START",
          });
      }
      function r() {
        if (!(0, n.isDesktop)())
          throw Error(
            "Attempted to stop observing candidate games on a non-desktop platform"
          );
        l.default.clearCandidateGamesCallback(),
          a.default.dispatch({
            type: "GAME_DETECTION_WATCH_CANDIDATE_GAMES_STOP",
          });
      }
    },
    36685: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          getNumIncludedAndTenureRewardPremiumGuildSubscriptionSlots:
            function () {
              return n;
            },
        });
      var a = s("719923");
      function n(e, t) {
        return (
          a.default.getNumIncludedPremiumGuildSubscriptionSlots(e.planId) +
          (null != t ? 1 : 0)
        );
      }
    },
    308086: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return o;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("77078"),
        l = s("427459"),
        i = s("49111"),
        r = s("782340");
      function o(e) {
        let {
            guildBoostSlot: t,
            onClose: o,
            hasCancelableGuildBoostSlot: d,
            premiumSubscription: u,
            onSelect: c,
          } = e,
          S = u.status === i.SubscriptionStatusTypes.PAST_DUE;
        return (0, a.jsxs)(n.Menu, {
          onSelect: c,
          navId: "subscription-context",
          variant: "fixed",
          "aria-label": r.default.Messages.GENERIC_ACTIONS_MENU_LABEL,
          onClose: o,
          children: [
            (0, a.jsx)(n.MenuItem, {
              id: "apply",
              label:
                null != t.premiumGuildSubscription
                  ? r.default.Messages
                      .PREMIUM_GUILD_SUBSCRIPTION_TRANSFER_BUTTON
                  : r.default.Messages
                      .PREMIUM_GUILD_SUBSCRIPTION_SELECT_SERVER_BUTTON,
              subtext: t.isOnCooldown()
                ? r.default.Messages
                    .PREMIUM_GUILD_SUBSCRIPTION_TRANSFER_BUTTON_DISABLED_TOOLTIP
                : null,
              action: function () {
                (0, n.openModalLazy)(async () => {
                  let { default: e } = await s
                    .el("247760")
                    .then(s.bind(s, "247760"));
                  return s =>
                    (0, a.jsx)(e, {
                      ...s,
                      guildBoostSlots: [t],
                      locationSection: i.AnalyticsSections.SETTINGS_PREMIUM,
                    });
                });
              },
              disabled: t.isOnCooldown(),
            }),
            (0, l.isGuildBoostSlotCanceled)(t)
              ? (0, a.jsx)(n.MenuItem, {
                  id: "uncancel",
                  label:
                    r.default.Messages
                      .PREMIUM_GUILD_SUBSCRIPTION_SLOT_UNCANCEL_BUTTON,
                  subtext: S
                    ? r.default.Messages
                        .PREMIUM_GUILD_SUBSCRIPTION_CANCEL_BUTTON_DISABLED_PAST_DUE_TOOLTIP
                    : null,
                  action: function () {
                    (0, n.openModalLazy)(async () => {
                      let { default: e } = await s
                        .el("738400")
                        .then(s.bind(s, "738400"));
                      return s =>
                        (0, a.jsx)(e, { ...s, guildBoostSlotId: t.id });
                    });
                  },
                  disabled: S,
                })
              : (0, a.jsx)(n.MenuItem, {
                  id: "cancel",
                  label:
                    r.default.Messages
                      .PREMIUM_GUILD_SUBSCRIPTION_SLOT_CANCEL_BUTTON,
                  subtext: d
                    ? S
                      ? r.default.Messages
                          .PREMIUM_GUILD_SUBSCRIPTION_CANCEL_BUTTON_DISABLED_PAST_DUE_TOOLTIP
                      : null
                    : r.default.Messages
                        .PREMIUM_GUILD_SUBSCRIPTION_CANCEL_BUTTON_DISABLED_TOOLTIP,
                  action: function () {
                    (0, n.openModalLazy)(async () => {
                      let { default: e } = await s
                        .el("933182")
                        .then(s.bind(s, "933182"));
                      return s => (0, a.jsx)(e, { ...s, guildBoostSlot: t });
                    });
                  },
                  disabled: !d || S,
                  color: "danger",
                }),
          ],
        });
      }
    },
    754893: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          setNewPendingGuildIdentityBio: function () {
            return n;
          },
          setNewPendingGuildIdentityPronouns: function () {
            return l;
          },
          setNewPendingNickname: function () {
            return i;
          },
          setNewPendingGuildIdentityThemeColors: function () {
            return r;
          },
          canResetThemeColors: function () {
            return o;
          },
        });
      var a = s("929423");
      function n(e, t) {
        (0, a.setPendingBio)(e === t ? void 0 : e);
      }
      function l(e, t) {
        (0, a.setPendingPronouns)(e === t ? void 0 : e);
      }
      function i(e, t) {
        (0, a.setPendingNickname)(
          e === t || ("" === e && null === t) ? void 0 : e
        );
      }
      function r(e, t) {
        let s =
          (null == e ? void 0 : e[0]) == null ||
          (null == e ? void 0 : e[1]) == null;
        (0, a.setPendingThemeColors)(s && null == t ? void 0 : e);
      }
      function o(e, t) {
        return void 0 === e
          ? null != t
          : (null == e ? void 0 : e[0]) != null &&
              (null == e ? void 0 : e[1]) != null;
      }
    },
    872306: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return c;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("77078"),
        l = s("54239"),
        i = s("393414"),
        r = s("49111"),
        o = s("782340"),
        d = s("289975"),
        u = s("269863");
      function c() {
        return (0, a.jsxs)("div", {
          className: d.emptyState,
          children: [
            (0, a.jsx)("img", { src: u, alt: "", className: d.image }),
            (0, a.jsx)(n.Heading, {
              className: d.topSpacing,
              variant: "heading-lg/extrabold",
              children:
                o.default.Messages.GUILD_IDENTITY_SETTINGS_EMPTY_STATE_TITLE,
            }),
            (0, a.jsx)(n.Text, {
              className: d.topSpacing,
              variant: "text-md/normal",
              children:
                o.default.Messages
                  .GUILD_IDENTITY_SETTINGS_EMPTY_STATE_DESCRIPTION,
            }),
            (0, a.jsx)(n.Button, {
              className: d.topSpacing,
              onClick: () => {
                (0, i.transitionTo)(r.Routes.GUILD_DISCOVERY), l.popLayer();
              },
              children:
                o.default.Messages.GUILD_IDENTITY_SETTINGS_EMPTY_STATE_CTA,
            }),
          ],
        });
      }
    },
    527274: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return P;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("627445"),
        l = s.n(n),
        i = s("446674"),
        r = s("77078"),
        o = s("956967"),
        d = s("906932"),
        u = s("702877"),
        c = s("668688"),
        S = s("447645"),
        E = s("52704"),
        T = s("741781"),
        f = s("121370"),
        _ = s("370505"),
        m = s("555898"),
        g = s("713135"),
        h = s("26989"),
        N = s("697218"),
        I = s("216422"),
        p = s("719923"),
        C = s("158998"),
        A = s("929423"),
        O = s("424562"),
        x = s("754893"),
        M = s("8204"),
        R = s("250590"),
        D = s("49111"),
        v = s("782340"),
        L = s("999997");
      function P(e) {
        var t, s, n, P;
        let { guild: j } = e,
          b = (0, i.useStateFromStores)([N.default], () => {
            let e = N.default.getCurrentUser();
            return (
              l(
                null != e,
                "GuildIdentitySettingsPage: user cannot be undefined"
              ),
              e
            );
          }),
          {
            pendingAvatar: U,
            pendingNickname: y,
            pendingBanner: B,
            pendingBio: F,
            pendingPronouns: G,
            pendingThemeColors: k,
            errors: H,
            guild: w,
          } = (0, i.useStateFromStoresObject)([O.default], () => {
            let {
              pendingAvatar: e,
              pendingNickname: t,
              pendingBio: s,
              pendingPronouns: a,
              pendingBanner: n,
              pendingThemeColors: l,
            } = O.default.getAllPending();
            return {
              pendingAvatar: e,
              pendingNickname: t,
              pendingBanner: n,
              pendingBio: s,
              pendingPronouns: a,
              pendingThemeColors: l,
              errors: O.default.getErrors(),
              guild: O.default.getGuild(),
            };
          }),
          V = null != j ? j : w;
        l(null != V, "guild should not be null");
        let Y = (0, o.useGuildAutomodProfileQuarantineErrors)(V.id),
          K = (0, i.useStateFromStores)([h.default], () =>
            null == V.id ? null : h.default.getMember(V.id, b.id)
          ),
          W = (0, i.useStateFromStores)([g.default], () =>
            g.default.getGuildMemberProfile(b.id, V.id)
          ),
          z = p.default.canUsePremiumProfileCustomization(b),
          Q = (0, d.showRemoveAvatar)(U, null == K ? void 0 : K.avatar),
          X = (0, d.showRemoveBanner)(B, null == W ? void 0 : W.banner),
          q = (0, x.canResetThemeColors)(k, null == W ? void 0 : W.themeColors),
          Z =
            null !== (t = null == W ? void 0 : W.bio) && void 0 !== t ? t : "",
          J =
            null !== (s = null == W ? void 0 : W.pronouns) && void 0 !== s
              ? s
              : "",
          $ = (0, m.useCanCustomizeGuildCollectibleItem)({
            location: "GuildIdentityCustomizationSections",
          }),
          ee = (e, t, s) => {
            s(null != e ? e : null != t ? null : void 0);
          };
        return (0, a.jsxs)("div", {
          className: L.sectionsContainer,
          children: [
            (0, a.jsx)(
              M.default,
              {
                errors:
                  null !== (n = null == H ? void 0 : H.nick) && void 0 !== n
                    ? n
                    : null == Y
                      ? void 0
                      : Y.nick,
                username: C.default.getName(b),
                pendingNick: y,
                currentNick: null == K ? void 0 : K.nick,
                guild: V,
              },
              "nick"
            ),
            (0, a.jsx)(
              _.default,
              {
                sectionTitle: v.default.Messages.USER_SETTINGS_PRONOUNS,
                errors: null == H ? void 0 : H.pronouns,
                onPronounsChange: e => {
                  (0, x.setNewPendingGuildIdentityPronouns)(e, J);
                },
                pendingPronouns: G,
                currentPronouns: J,
              },
              "pronouns"
            ),
            (0, a.jsxs)(R.default, {
              user: b,
              showOverlay: !z,
              children: [
                (0, a.jsx)(
                  S.default,
                  {
                    sectionTitle: (0, a.jsxs)(a.Fragment, {
                      children: [
                        v.default.Messages.USER_SETTINGS_AVATAR,
                        (0, a.jsx)(r.Tooltip, {
                          text: v.default.Messages
                            .PROFILE_CUSTOMIZATION_NITRO_ICON_TOOLTIP,
                          children: e =>
                            (0, a.jsx)(I.default, {
                              ...e,
                              className: L.nitroWheel,
                            }),
                        }),
                      ],
                    }),
                    showRemoveAvatarButton: Q,
                    onAvatarChange: e =>
                      ee(e, null == K ? void 0 : K.avatar, A.setPendingAvatar),
                    errors: null == H ? void 0 : H.avatar,
                    guildId: V.id,
                    disabled: !z,
                  },
                  "avatar"
                ),
                $
                  ? (0, a.jsx)(
                      c.default,
                      {
                        sectionTitle: (0, a.jsxs)(a.Fragment, {
                          children: [
                            v.default.Messages.USER_SETTINGS_AVATAR_DECORATION,
                            (0, a.jsx)(r.Tooltip, {
                              text: v.default.Messages
                                .PROFILE_CUSTOMIZATION_NITRO_ICON_TOOLTIP,
                              children: e =>
                                (0, a.jsx)(I.default, {
                                  ...e,
                                  className: L.nitroWheel,
                                }),
                            }),
                          ],
                        }),
                        user: b,
                        guild: V,
                      },
                      "decoration"
                    )
                  : null,
                $
                  ? (0, a.jsx)(
                      T.default,
                      {
                        sectionTitle: (0, a.jsxs)(a.Fragment, {
                          children: [
                            v.default.Messages.USER_SETTINGS_PROFILE_EFFECT,
                            (0, a.jsx)(r.Tooltip, {
                              text: v.default.Messages
                                .PROFILE_CUSTOMIZATION_NITRO_ICON_TOOLTIP,
                              children: e =>
                                (0, a.jsx)(I.default, {
                                  ...e,
                                  className: L.nitroWheel,
                                }),
                            }),
                          ],
                        }),
                        user: b,
                        guild: V,
                      },
                      "effect"
                    )
                  : null,
                (0, a.jsx)(
                  E.default,
                  {
                    showRemoveBannerButton: X,
                    errors: null == H ? void 0 : H.banner,
                    onBannerChange: e =>
                      ee(e, null == W ? void 0 : W.banner, A.setPendingBanner),
                    guildId: null == V ? void 0 : V.id,
                    disabled: !z,
                  },
                  "banner"
                ),
                (0, a.jsx)(f.default, {
                  user: b,
                  pendingAvatar: U,
                  pendingColors: k,
                  onThemeColorsChange: e => {
                    (0, x.setNewPendingGuildIdentityThemeColors)(
                      e,
                      null == W ? void 0 : W.themeColors
                    );
                  },
                  guildId: null == V ? void 0 : V.id,
                  showResetThemeButton: q,
                }),
                (0, a.jsx)(
                  u.default,
                  {
                    placeholder:
                      v.default.Messages.CHANGE_IDENTITY_BIO_PLACEHOLDER,
                    sectionTitle: (0, a.jsxs)(a.Fragment, {
                      children: [
                        v.default.Messages.USER_PROFILE_ABOUT_ME,
                        (0, a.jsx)(r.Tooltip, {
                          text: v.default.Messages
                            .PROFILE_CUSTOMIZATION_NITRO_ICON_TOOLTIP,
                          children: e =>
                            (0, a.jsx)(I.default, {
                              ...e,
                              className: L.nitroWheel,
                            }),
                        }),
                      ],
                    }),
                    onBioChange: e => {
                      (0, x.setNewPendingGuildIdentityBio)(e, Z),
                        (0, A.setDisableSubmit)(
                          null != e && e.length > D.BIO_MAX_LENGTH
                        );
                    },
                    errors:
                      null !== (P = null == H ? void 0 : H.bio) && void 0 !== P
                        ? P
                        : null == Y
                          ? void 0
                          : Y.bio,
                    pendingBio: F,
                    currentBio: Z,
                    disabled: !z,
                  },
                  "about"
                ),
              ],
            }),
          ],
        });
      }
    },
    808030: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return S;
          },
        }),
        s("222007");
      var a = s("37983"),
        n = s("884691"),
        l = s("446674"),
        i = s("45299"),
        r = s("880397"),
        o = s("783142"),
        d = s("929423"),
        u = s("424562"),
        c = s("782340");
      function S() {
        let e = (0, l.useStateFromStores)([u.default], () =>
            u.default.getIsDisableSubmit()
          ),
          t = (0, l.useStateFromStores)([u.default], () =>
            u.default.getGuild()
          ),
          s = (0, l.useStateFromStores)([u.default], () =>
            u.default.getErrors()
          ),
          [S, E] = n.useState(!1),
          T = n.useMemo(
            () =>
              (null == s ? void 0 : s.message) != null
                ? null == s
                  ? void 0
                  : s.message
                : Object.keys(null != s ? s : {}).length > 0
                  ? c.default.Messages.GUILD_SETTINGS_EDIT_PROFILE_GENERIC_ERROR
                  : null,
            [s]
          ),
          f = n.useCallback(async () => {
            var e, s;
            E(!0);
            let a = u.default.getAllPending(),
              n = (0, r.getGuildMemberChangesForUpdateRequest)(a),
              l = (0, r.getProfileChangesForUpdateRequest)(a),
              i = !0;
            if (Object.keys(n).length > 0) {
              let s = await (0, d.saveGuildIdentityChanges)(
                null == t ? void 0 : t.id,
                n
              );
              (i =
                i &&
                null !== (e = null == s ? void 0 : s.ok) &&
                void 0 !== e &&
                e),
                (null == s ? void 0 : s.ok) &&
                  (0, d.resetPendingMemberChanges)();
            }
            if (Object.keys(l).length > 0) {
              let e = await (0, o.saveProfileChanges)(
                l,
                null == t ? void 0 : t.id
              );
              (i =
                i &&
                null !== (s = null == e ? void 0 : e.ok) &&
                void 0 !== s &&
                s),
                (null == e ? void 0 : e.ok) &&
                  (0, d.resetPendingProfileChanges)();
            }
            i && (0, d.clearErrors)(), E(!1);
          }, [null == t ? void 0 : t.id]),
          _ = n.useCallback(() => {
            (0, d.resetAllPending)();
          }, []);
        return (0, a.jsx)(i.default, {
          submitting: S,
          onSave: f,
          onReset: _,
          disabled: e,
          errorMessage: null != T ? T : void 0,
        });
      }
    },
    376402: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return j;
          },
        });
      var a = s("37983"),
        n = s("884691"),
        l = s("627445"),
        i = s.n(l),
        r = s("446674"),
        o = s("77078"),
        d = s("913144"),
        u = s("79112"),
        c = s("642950"),
        S = s("812204"),
        E = s("716241"),
        T = s("685665"),
        f = s("360871"),
        _ = s("184900"),
        m = s("11899"),
        g = s("713135"),
        h = s("102985"),
        N = s("697218"),
        I = s("599110"),
        p = s("701909"),
        C = s("719923"),
        A = s("929423"),
        O = s("424562"),
        x = s("872306"),
        M = s("527274"),
        R = s("185153"),
        D = s("49111"),
        v = s("782340");
      function L() {
        I.default.track(D.AnalyticEvents.PREMIUM_PROMOTION_OPENED, {
          location_page: D.AnalyticsPages.GUILD_MEMBER_PROFILE_SETTINGS,
          location_object: D.AnalyticsObjects.BADGE,
        }),
          (0, A.closeGuildIdentitySettings)(),
          u.default.open(D.UserSettingsSections.PREMIUM);
      }
      function P(e) {
        (0, o.openModalLazy)(async () => {
          let { default: t } = await s.el("414242").then(s.bind(s, "414242"));
          return s =>
            (0, a.jsx)(t, {
              source: {
                ...e,
                page: D.AnalyticsPages.GUILD_MEMBER_PROFILE_SETTINGS,
              },
              ...s,
            });
        });
      }
      function j(e) {
        let { selectedGuild: t } = e,
          { AnalyticsLocationProvider: s } = (0, T.default)(
            S.default.GUILD_PROFILE
          ),
          l = (0, r.useStateFromStores)([N.default], () => {
            let e = N.default.getCurrentUser();
            return (
              i(
                null != e,
                "GuildIdentitySettingsPage: user cannot be undefined"
              ),
              e
            );
          }),
          u = (0, r.useStateFromStores)(
            [g.default],
            () => !g.default.isFetchingProfile(l.id)
          ),
          I = (0, r.useStateFromStores)(
            [h.default],
            () => h.default.hidePersonalInformation
          ),
          {
            pendingAvatar: j,
            pendingAvatarDecoration: b,
            pendingProfileEffectId: U,
            pendingNickname: y,
            pendingBanner: B,
            pendingBio: F,
            pendingPronouns: G,
            pendingThemeColors: k,
            source: H,
          } = (0, r.useStateFromStoresObject)([O.default], () => ({
            ...O.default.getAllPending(),
            source: O.default.getSource(),
          }));
        if (
          (n.useEffect(() => () => d.default.wait(A.resetAllPending), []),
          n.useEffect(() => {
            null != H &&
              E.default.trackWithMetadata(
                D.AnalyticEvents.SETTINGS_PANE_VIEWED,
                {
                  settings_type: "guild",
                  destination_pane:
                    D.AnalyticsSections.SETTINGS_CUSTOMIZE_PROFILE,
                  source: H,
                }
              );
          }, [H]),
          I)
        )
          return (0, a.jsx)(c.default, {});
        if (!u) return (0, a.jsx)(o.Spinner, {});
        let w = C.default.canUsePremiumProfileCustomization(l),
          V = {
            user: l,
            guild: t,
            canUsePremiumCustomization: w,
            onAvatarChange: A.setPendingAvatar,
            onBannerChange: A.setPendingBanner,
            onUpsellClick: P,
            pendingAvatar: j,
            pendingAvatarDecoration: b,
            pendingProfileEffectId: U,
            pendingBanner: B,
            pendingBio: F,
            pendingPronouns: G,
            pendingNickname: y,
            activityName: v.default.Messages.CHANGE_IDENTITY_SERVER_PROFILE,
            activityCharacter: f.FakeActivityCharacter.PHIBI,
            openPremiumSettings: L,
          };
        return (0, a.jsxs)(s, {
          children: [
            (0, a.jsx)(o.Text, {
              variant: "text-sm/normal",
              children:
                v.default.Messages.PROFILE_CUSTOMIZATION_GUILD_HINT.format({
                  helpCenterLink: p.default.getArticleURL(
                    D.HelpdeskArticles.GUILD_PROFILES
                  ),
                }),
            }),
            null != t
              ? (0, a.jsxs)(a.Fragment, {
                  children: [
                    (0, a.jsx)(R.default, {
                      guildId: t.id,
                      onChange: e => {
                        null != e && (0, A.setCurrentGuild)(e);
                      },
                    }),
                    (0, a.jsx)(m.default, {
                      previewTitle:
                        v.default.Messages.CHANGE_IDENTITY_PREVIEW_WITH_GUILD_NAME.format(
                          { guildName: null == t ? void 0 : t.name }
                        ),
                      profilePreview: (0, a.jsx)(_.default, {
                        ...V,
                        pendingThemeColors: k,
                      }),
                      children: (0, a.jsx)(M.default, {}),
                    }),
                  ],
                })
              : (0, a.jsx)(x.default, {}),
          ],
        });
      }
    },
    185153: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return m;
          },
          GuildSelector: function () {
            return g;
          },
        }),
        s("843762");
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("446674"),
        o = s("77078"),
        d = s("570697"),
        u = s("305961"),
        c = s("677099"),
        S = s("476263"),
        E = s("449008"),
        T = s("424562"),
        f = s("782340"),
        _ = s("714423");
      function m(e) {
        let {
          guildId: t,
          className: s,
          globalOption: n,
          hideDivider: l = !1,
          onChange: r,
          renderOptionSuffix: o,
        } = e;
        return (0, a.jsx)(d.default, {
          className: i(_.section, s),
          title: f.default.Messages.PROFILE_CUSTOMIZATION_GUILD_SELECT_TITLE,
          hideDivider: l,
          forcedDivider: !0,
          children: (0, a.jsx)(g, {
            guildId: t,
            onChange: r,
            renderOptionSuffix: o,
            globalOption: n,
          }),
        });
      }
      function g(e) {
        let {
            guildId: t,
            globalOption: s,
            onChange: l,
            renderOptionSuffix: i,
          } = e,
          d = (0, r.useStateFromStores)([T.default], () =>
            T.default.showNotice()
          ),
          m = (0, r.useStateFromStores)([c.default], () =>
            c.default.getFlattenedGuildIds()
          ),
          g = (0, r.useStateFromStores)([u.default], () =>
            u.default.getGuilds()
          ),
          h = n.useMemo(() => {
            let e = m
              .map(e => {
                let t = g[e];
                return null == t ? null : { label: t.name, value: t.id };
              })
              .filter(E.isNotNullish);
            return null != s && e.unshift(s), e;
          }, [m, g, s]),
          N = n.useCallback(
            e => {
              let t =
                (null == e ? void 0 : e.label) ===
                  (null == s ? void 0 : s.label) &&
                (null == e ? void 0 : e.value) ===
                  (null == s ? void 0 : s.value);
              return null == e || "" === e.value || t
                ? null
                : (0, a.jsx)(S.default, {
                    className: _.guildSelectOptionIcon,
                    guild: g[e.value],
                    size: S.default.Sizes.SMOL,
                    active: !0,
                  });
            },
            [g, s]
          );
        return (0, a.jsx)(o.SearchableSelect, {
          isDisabled: d,
          onChange: e => {
            if ("" === e || e === (null == s ? void 0 : s.value)) {
              l(null);
              return;
            }
            let t = g[e];
            null != t && l(t);
          },
          value: t,
          options: h,
          renderOptionPrefix: N,
          renderOptionSuffix: i,
          placeholder:
            f.default.Messages.PROFILE_CUSTOMIZATION_GUILD_SELECT_PLACEHOLDER,
        });
      }
    },
    8204: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return S;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("446674"),
        l = s("77078"),
        i = s("570697"),
        r = s("957255"),
        o = s("754893"),
        d = s("49111"),
        u = s("782340"),
        c = s("836930");
      function S(e) {
        let {
            errors: t,
            pendingNick: s,
            currentNick: S,
            username: E,
            guild: T,
          } = e,
          f = null != s ? s : S,
          _ = (0, n.useStateFromStores)(
            [r.default],
            () =>
              r.default.can(d.Permissions.CHANGE_NICKNAME, T) ||
              r.default.can(d.Permissions.MANAGE_NICKNAMES, T)
          );
        return (0, a.jsxs)(i.default, {
          title: u.default.Messages.SERVER_NICKNAME,
          errors: t,
          children: [
            (0, a.jsx)(l.TextInput, {
              value: null != f ? f : "",
              placeholder: E,
              maxLength: d.USERNAME_MAX_LENGTH,
              onChange: function (e) {
                (0, o.setNewPendingNickname)(e, S);
              },
              disabled: !_,
            }),
            !_ &&
              (0, a.jsx)(l.FormText, {
                className: c.nicknameDisabled,
                type: l.FormText.Types.DESCRIPTION,
                children:
                  u.default.Messages
                    .CHANGE_IDENTITY_NICKNAME_PERMISSIONS_DISABLED,
              }),
          ],
        });
      }
    },
    250590: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return g;
          },
        });
      var a = s("37983"),
        n = s("884691"),
        l = s("77078"),
        i = s("841098"),
        r = s("812204"),
        o = s("685665"),
        d = s("635956"),
        u = s("599110"),
        c = s("719923"),
        S = s("49111"),
        E = s("646718"),
        T = s("782340"),
        f = s("722844"),
        _ = s("709976"),
        m = s("555657");
      function g(e) {
        let { user: t, showOverlay: s, children: g } = e,
          h = (0, i.default)(),
          { analyticsLocations: N } = (0, o.default)(
            r.default.PREMIUM_UPSELL_OVERLAY
          );
        return (n.useEffect(() => {
          s &&
            u.default.track(S.AnalyticEvents.PREMIUM_UPSELL_VIEWED, {
              location_stack: N,
              type: E.PremiumUpsellTypes
                .PREMIUM_GUILD_MEMBER_PROFILE_UPSELL_INLINE,
            });
        }, [s, N]),
        s)
          ? (0, a.jsxs)("div", {
              className: f.upsellOverlayContainer,
              children: [
                (0, a.jsx)("div", { children: g }),
                (0, a.jsxs)("div", {
                  className: f.upsellOverlay,
                  children: [
                    (0, a.jsx)("img", {
                      className: f.upsellImage,
                      alt: T.default.Messages
                        .GUILD_IDENTITY_UPSELL_OVERLAY_IMAGE_ALT,
                      src: (function (e) {
                        switch (e) {
                          case S.ThemeTypes.DARK:
                            return _;
                          case S.ThemeTypes.LIGHT:
                            return m;
                        }
                      })(h),
                    }),
                    (0, a.jsxs)("div", {
                      className: f.upsellTextContainer,
                      children: [
                        (0, a.jsx)(l.Text, {
                          variant: "text-lg/semibold",
                          color: "always-white",
                          children:
                            T.default.Messages
                              .GUILD_IDENTITY_UPSELL_OVERLAY_TITLE,
                        }),
                        (0, a.jsx)(l.Text, {
                          variant: "text-sm/normal",
                          color: "always-white",
                          children:
                            T.default.Messages
                              .GUILD_IDENTITY_UPSELL_OVERLAY_DESCRIPTION_THEMES,
                        }),
                      ],
                    }),
                    (0, a.jsx)(d.default, {
                      size: l.Button.Sizes.LARGE,
                      color: l.Button.Colors.GREEN,
                      buttonText: c.default.isPremium(t)
                        ? T.default.Messages
                            .USER_SETTINGS_PROFILE_THEMES_UPSELL_UPGRADE
                        : T.default.Messages.CHANGE_IDENTITY_UPSELL,
                      subscriptionTier: E.PremiumSubscriptionSKUs.TIER_2,
                    }),
                  ],
                }),
              ],
            })
          : (0, a.jsx)(a.Fragment, { children: g });
      }
    },
    898184: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return T;
          },
        }),
        s("222007");
      var a = s("884691"),
        n = s("866227"),
        l = s.n(n),
        i = s("446674"),
        r = s("305961"),
        o = s("153160"),
        d = s("837008"),
        u = s("648825"),
        c = s("136185"),
        S = s("49111"),
        E = s("782340");
      function T(e) {
        let t = (0, c.getRoleSubscriptionPlanId)(e),
          s = (0, i.useStateFromStores)([u.default], () =>
            u.default.getSubscriptionListingForPlan(t)
          ),
          n = (0, i.useStateFromStores)([u.default], () =>
            null != s
              ? u.default.getSubscriptionGroupListingForSubscriptionListing(
                  s.id
                )
              : null
          ),
          T = (0, i.useStateFromStores)([r.default], () =>
            r.default.getGuild(null == n ? void 0 : n.guild_id)
          ),
          [f, _] = a.useState(!1),
          { fetchSubscriptionsSettings: m } = (0,
          d.useFetchSubscriptionsSettings)();
        a.useEffect(() => {
          f &&
            null != T &&
            null == u.default.getSubscriptionSettings(T.id) &&
            m(T.id);
        }, [f, T, m]);
        let g =
          null == s
            ? void 0
            : (function (e) {
                let { subscription: t } = e,
                  s = l(t.currentPeriodEnd).format("M/D/YY"),
                  a =
                    null != t.price
                      ? (0, o.formatPrice)(t.price, t.currency)
                      : "",
                  n = l(t.createdAt).format("M/D/YY"),
                  i = t.status === S.SubscriptionStatusTypes.CANCELED,
                  r = t.status === S.SubscriptionStatusTypes.PAST_DUE,
                  d = null != t.trialId;
                return {
                  memberSince: n,
                  nextRenewalDate: s,
                  nextRenewalLabel: i
                    ? E.default.Messages
                        .GUILD_ROLE_MANAGE_SUBSCRIPTION_INFO_MEMBERSHIP_ENDS
                    : E.default.Messages
                        .GUILD_ROLE_MANAGE_SUBSCRIPTION_INFO_NEXT_RENEWAL,
                  subscriptionPrice: a,
                  isCancelled: i,
                  isPastDue: r,
                  isTrial: d,
                };
              })({ subscription: e });
        return {
          guild: T,
          expanded: f,
          handleToggleExpanded: () => _(e => !e),
          listing: s,
          groupListing: n,
          subscriptionInfo: g,
        };
      }
    },
    736595: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return u;
          },
        });
      var a = s("884691"),
        n = s("446674"),
        l = s("850068"),
        i = s("521012"),
        r = s("656506"),
        o = s("677795");
      let d = [];
      function u() {
        let { ensureFresh: e = !1 } =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
          t =
            (0, r.default)() ===
            o.UserGuildRoleSubscriptionRelationship.SUBSCRIBED,
          s = (0, n.useStateFromStores)([i.default], () =>
            i.default.getActiveGuildSubscriptions()
          ),
          u = a.useRef(!1);
        return (
          a.useEffect(() => {
            (function (e) {
              var t;
              let {
                  ensureFresh: s,
                  hasFetched: a,
                  hasRoleSubscriptions: n,
                } = e,
                l = i.default.getActiveGuildSubscriptions();
              return (
                ((null !== (t = null == l ? void 0 : l.length) && void 0 !== t
                  ? t
                  : 0) === 0 &&
                  !!n) ||
                (!!s && !a) ||
                (!a && !i.default.hasFetchedSubscriptions())
              );
            })({
              ensureFresh: e,
              hasRoleSubscriptions: t,
              hasFetched: u.current,
            }) && ((u.current = !0), l.fetchSubscriptions());
          }, [e, t]),
          null != s ? s : d
        );
      }
    },
    656506: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return i;
          },
        }),
        s("222007");
      var a = s("446674"),
        n = s("256941"),
        l = s("677795");
      function i() {
        return (0, a.useStateFromStores)([n.default], () =>
          (function () {
            let [e] =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : [n.default],
              t = e.getGuildIdsWithPurchasableRoles(),
              s = !1;
            return (t.forEach(t => {
              let a = e.getUserSubscriptionRoles(t);
              a.size > 0 && (s = !0);
            }),
            s)
              ? l.UserGuildRoleSubscriptionRelationship.SUBSCRIBED
              : 0 === t.size
                ? l.UserGuildRoleSubscriptionRelationship.NONE
                : l.UserGuildRoleSubscriptionRelationship
                    .IN_SUBSCRIPTION_SERVER;
          })([n.default])
        );
      }
    },
    592504: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          openModal: function () {
            return N;
          },
        }),
        s("222007");
      var a = s("37983"),
        n = s("884691"),
        l = s("866227"),
        i = s.n(l),
        r = s("77078"),
        o = s("850068"),
        d = s("812204"),
        u = s("685665"),
        c = s("476765"),
        S = s("271560"),
        E = s("837008"),
        T = s("108314"),
        f = s("677795"),
        _ = s("782340"),
        m = s("143270");
      let g = e => {
          let [t, s] = n.useState(!1),
            [a, l] = n.useState(null),
            i = async t => {
              try {
                return s(!0), await o.cancelSubscription(t, e), !0;
              } catch (e) {
                l(e);
              } finally {
                s(!1);
              }
            };
          return { cancelSubscription: i, error: a, submitting: t };
        },
        h = e => {
          var t;
          let {
              transitionState: s,
              groupListing: n,
              guildId: l,
              listing: o,
              subscription: h,
              onClose: N,
            } = e,
            I = (0, c.useUID)(),
            p = (0, E.useSubscriptionsSettings)(l),
            C =
              (null == p
                ? void 0
                : null === (t = p.cover_image_asset) || void 0 === t
                  ? void 0
                  : t.application_id) != null
                ? (0, S.getAssetURL)(
                    p.cover_image_asset.application_id,
                    p.cover_image_asset,
                    440
                  )
                : void 0,
            { analyticsLocations: A } = (0, u.default)(
              d.default.GUILD_ROLE_SUBSCRIPTION_CANCELLATION_MODAL
            ),
            { cancelSubscription: O, error: x, submitting: M } = g(A),
            R = async () => {
              let e = await O(h.id);
              e && N();
            },
            D = o.role_benefits.benefits.filter(
              e => e.ref_type === f.GuildRoleSubscriptionBenefitTypes.CHANNEL
            ),
            v = o.role_benefits.benefits.filter(
              e => e.ref_type === f.GuildRoleSubscriptionBenefitTypes.INTANGIBLE
            ),
            L = i(h.currentPeriodEnd).format("MMMM Do, YYYY"),
            P =
              _.default.Messages.GUILD_ROLE_CANCEL_SUBSCRIPTION_MODAL_DESCRIPTION.format(
                {
                  numChannels: D.length,
                  numAdditionalBenefits: v.length,
                  subscriptionEndDate: L,
                }
              );
          return (0, a.jsxs)(r.ModalRoot, {
            transitionState: s,
            className: m.modal,
            "aria-labelledby": I,
            children: [
              (0, a.jsxs)("div", {
                children: [
                  (0, a.jsx)("img", {
                    src: C,
                    alt: "",
                    className: m.headerImage,
                  }),
                  (0, a.jsx)(r.ModalCloseButton, {
                    withCircleBackground: !0,
                    className: m.closeButton,
                    onClick: N,
                  }),
                ],
              }),
              null != x
                ? (0, a.jsx)(r.FormErrorBlock, { children: x.message })
                : null,
              (0, a.jsxs)(r.ModalContent, {
                className: m.content,
                children: [
                  (0, a.jsx)(r.Heading, {
                    id: I,
                    variant: "text-md/medium",
                    className: m.title,
                    children:
                      _.default.Messages
                        .GUILD_ROLE_CANCEL_SUBSCRIPTION_MODAL_TITLE,
                  }),
                  (0, a.jsx)(r.Text, {
                    className: m.description,
                    variant: "text-sm/normal",
                    children: P,
                  }),
                  (0, a.jsx)(T.GuildRoleSubscriptionBenefits, {
                    listingId: o.id,
                    guildId: n.guild_id,
                    className: m.benefits,
                  }),
                ],
              }),
              (0, a.jsxs)(r.ModalFooter, {
                className: m.footer,
                children: [
                  (0, a.jsx)(r.Button, {
                    color: r.Button.Colors.RED,
                    onClick: R,
                    submitting: M,
                    children:
                      _.default.Messages
                        .GUILD_ROLE_CANCEL_SUBSCRIPTION_MODAL_CANCEL_CTA,
                  }),
                  (0, a.jsx)(r.Button, {
                    look: r.Button.Looks.LINK,
                    color: r.Button.Colors.WHITE,
                    className: m.goBackButton,
                    onClick: N,
                    children:
                      _.default.Messages
                        .GUILD_ROLE_CANCEL_SUBSCRIPTION_MODAL_NEVERMIND_CTA,
                  }),
                ],
              }),
            ],
          });
        },
        N = e => {
          (0, r.openModal)(t => (0, a.jsx)(h, { ...t, ...e }));
        };
    },
    424876: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return _;
          },
        });
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("446674"),
        o = s("77078"),
        d = s("521012"),
        u = s("191814"),
        c = s("49111"),
        S = s("782340"),
        E = s("314207"),
        T = s("809432"),
        f = s("137963");
      function _(e) {
        let { onClickManageSubscription: t } = e,
          s = (0, r.useStateFromStores)([d.default], () =>
            d.default.getSubscriptions()
          ),
          l = n.useMemo(
            () =>
              Object.values(null != s ? s : {})
                .filter(e => e.type === c.SubscriptionTypes.GUILD)
                .filter(e => e.status !== c.SubscriptionStatusTypes.ENDED),
            [s]
          );
        return 0 === l.length
          ? null
          : (0, a.jsxs)("div", {
              className: E.container,
              children: [
                (0, a.jsx)(o.Heading, {
                  variant: "heading-md/semibold",
                  className: E.sectionTitle,
                  children: S.default.Messages.GUILD_ROLE_SUBSCRIPTIONS_TITLE,
                }),
                (0, a.jsx)(u.default, { size: 4 }),
                (0, a.jsx)(o.Text, {
                  variant: "text-sm/normal",
                  className: E.sectionDescription,
                  children:
                    S.default.Messages
                      .GUILD_ROLE_SUBSCRIPTIONS_USER_SUBSCRIPTIONS_DESCRIPTION,
                }),
                (0, a.jsx)(u.default, { size: 24 }),
                (0, a.jsxs)("div", {
                  className: i(T.guildBoostingSubscriptionRow, E.card),
                  children: [
                    (0, a.jsx)("img", {
                      src: f,
                      alt: "",
                      className: E.handImage,
                    }),
                    (0, a.jsxs)("div", {
                      className: E.textContainer,
                      children: [
                        (0, a.jsx)(o.Heading, {
                          variant: "heading-xl/semibold",
                          className: E.header,
                          children:
                            S.default.Messages.GUILD_ROLE_SUBSCRIPTIONS_TITLE,
                        }),
                        (0, a.jsx)(o.Text, {
                          variant: "text-md/normal",
                          className: E.description,
                          children:
                            S.default.Messages.GUILD_ROLE_SUBSCRIPTIONS_ACTIVE_USER_SUBSCRIPTIONS_DESCRIPTION.format(
                              { numSubscriptions: l.length }
                            ),
                        }),
                      ],
                    }),
                    (0, a.jsx)(o.Button, {
                      color: o.Button.Colors.CUSTOM,
                      size: o.Button.Sizes.SMALL,
                      look: o.Button.Looks.INVERTED,
                      className: E.manageSubscriptionsButton,
                      onClick: t,
                      children:
                        S.default.Messages
                          .GUILD_ROLE_SUBSCRIPTIONS_MANAGE_SUBSCRIPTIONS_BUTTON,
                    }),
                  ],
                }),
              ],
            });
      }
    },
    533137: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return w;
          },
        }),
        s("222007");
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("733724"),
        o = s("446674"),
        d = s("77078"),
        u = s("850068"),
        c = s("54239"),
        S = s("215082"),
        E = s("79112"),
        T = s("812204"),
        f = s("685665"),
        _ = s("20606"),
        m = s("465869"),
        g = s("809071"),
        h = s("690679"),
        N = s("393414"),
        I = s("357957"),
        p = s("476263"),
        C = s("876269"),
        A = s("191814"),
        O = s("476765"),
        x = s("837899"),
        M = s("68238"),
        R = s("956089"),
        D = s("898184"),
        v = s("306073"),
        L = s("430780"),
        P = s("592504"),
        j = s("618976"),
        b = s("49111"),
        U = s("724210"),
        y = s("397336"),
        B = s("782340"),
        F = s("261712");
      let G = e => {
          let {
            label: t,
            value: s,
            showInfoIcon: n,
            infoIconTooltipText: l,
          } = e;
          return (0, a.jsxs)("div", {
            className: F.infoCard,
            children: [
              (0, a.jsxs)("div", {
                className: F.infoCardLabelContainer,
                children: [
                  (0, a.jsx)(d.Heading, {
                    variant: "heading-deprecated-12/semibold",
                    className: F.infoCardLabel,
                    children: t,
                  }),
                  n &&
                    (0, a.jsx)(d.Tooltip, {
                      clickableOnMobile: !0,
                      text: l,
                      children: e =>
                        (0, a.jsx)(M.default, {
                          ...e,
                          className: F.infoCardIcon,
                        }),
                    }),
                ],
              }),
              (0, a.jsx)(d.Heading, {
                variant: "heading-xl/semibold",
                className: F.infoCardValue,
                children: s,
              }),
            ],
          });
        },
        k = e => {
          let { subscription: t } = e,
            { analyticsLocations: s } = (0, f.default)(),
            [n] = (0, g.useSubscriptionInvoicePreview)({
              subscriptionId: t.id,
              renewal: !0,
              analyticsLocations: s,
              analyticsLocation:
                T.default.GUILD_ROLE_SUBSCRIPTION_PAYMENT_SOURCE_WITH_INVOICE,
            }),
            l = (0, o.useStateFromStores)(
              [I.default],
              () => I.default.hasFetchedPaymentSources
            );
          return null != n && l
            ? (0, a.jsx)(h.default, {
                subscription: t,
                currentInvoicePreview: n,
                dropdownClassName: F.paymentSourceDropdown,
              })
            : (0, a.jsx)(d.Spinner, {});
        },
        H = e => {
          let {
            isTrial: t,
            isCancelled: s,
            isResubscribing: n,
            shouldHideRoleSubscriptionEntryPoints: l,
            onCancelSubscriptionClick: i,
            onResubscribeClick: r,
            onChangePlanClick: o,
          } = e;
          return s && (t || l)
            ? null
            : (0, a.jsxs)("div", {
                children: [
                  (0, a.jsx)(d.FormTitle, {
                    children:
                      B.default.Messages
                        .GUILD_ROLE_MANAGE_SUBSCRIPTION_MANAGE_OPTIONS_LABEL,
                  }),
                  (0, a.jsx)("div", {
                    className: F.rowButtons,
                    children: s
                      ? (0, a.jsx)(d.Button, {
                          onClick: r,
                          submitting: n,
                          children:
                            B.default.Messages
                              .GUILD_ROLE_MANAGE_SUBSCRIPTION_MANAGE_OPTIONS_RESTART_SUBSCRIPTION,
                        })
                      : (0, a.jsxs)(a.Fragment, {
                          children: [
                            !t &&
                              !l &&
                              (0, a.jsx)(C.default, {
                                label:
                                  B.default.Messages
                                    .GUILD_ROLE_MANAGE_SUBSCRIPTION_MANAGE_OPTIONS_CHANGE_TIER,
                                onClick: o,
                              }),
                            (0, a.jsx)(C.default, {
                              label:
                                B.default.Messages
                                  .GUILD_ROLE_MANAGE_SUBSCRIPTION_MANAGE_OPTIONS_CANCEL,
                              onClick: i,
                            }),
                          ],
                        }),
                  }),
                ],
              });
        };
      var w = e => {
        let { subscription: t } = e,
          {
            listing: s,
            groupListing: l,
            guild: o,
            expanded: T,
            handleToggleExpanded: g,
            subscriptionInfo: h,
          } = (0, D.default)(t),
          [I, C] = n.useState(!1),
          M = (0, O.useUID)(),
          { analyticsLocations: w } = (0, f.default)(),
          { shouldHideGuildPurchaseEntryPoints: V } = (0,
          m.useShouldHideGuildPurchaseEntryPoints)(null == o ? void 0 : o.id),
          Y =
            (null == t ? void 0 : t.paymentGateway) ===
            b.PaymentGateways.APPLE_PARTNER;
        if (null == l || null == s || null == h) return null;
        let K = () => {
            null != o &&
              ((0, N.transitionTo)(
                b.Routes.CHANNEL(o.id, U.StaticChannelRoute.ROLE_SUBSCRIPTIONS)
              ),
              (0, c.popLayer)(),
              S.default.show(
                b.NoticeTypes.BACK_TO_PREVIOUS_SCREEN,
                void 0,
                B.default.Messages
                  .GUILD_ROLE_SUBSCRIPTION_PURCHASE_BACK_TO_SUBSCRIPTION_USER_SETTING_CTA,
                () =>
                  E.default.open(
                    b.UserSettingsSections.SUBSCRIPTIONS,
                    y.ROLE_SUBSCRIPTION_SUBSECTION
                  )
              ));
          },
          W = () => {
            null != o &&
              (0, P.openModal)({
                guildId: o.id,
                groupListing: l,
                listing: s,
                subscription: t,
              });
          },
          z = async () => {
            try {
              C(!0),
                await u.resubscribeToSubscription(t, w),
                (0, j.openModal)();
            } finally {
              C(!1);
            }
          },
          {
            isCancelled: Q,
            isPastDue: X,
            subscriptionPrice: q,
            memberSince: Z,
            nextRenewalDate: J,
            nextRenewalLabel: $,
            isTrial: ee,
          } = h,
          et = s.soft_deleted || null == o || Y,
          es = () => {
            if (Q)
              return (0, a.jsx)(R.TextBadge, {
                text: B.default.Messages
                  .GUILD_ROLE_MANAGE_SUBSCRIPTION_CANCELLED,
              });
            if (ee)
              return (0, a.jsx)(R.TextBadge, {
                text: B.default.Messages
                  .GUILD_ROLE_SUBSCRIPTION_SETUP_FREE_TRIAL_TITLE,
                color: r.default.BRAND_500,
              });
            if (X)
              return (0, a.jsx)(d.Tooltip, {
                text: B.default.Messages
                  .GUILD_ROLE_SUBSCRIPTION_USER_SUBSCRIPTION_PAST_DUE_WARNING,
                children: e =>
                  (0, a.jsx)("div", {
                    ...e,
                    children: (0, a.jsx)(R.TextBadge, {
                      className: F.paymentDueBadge,
                      text: B.default.Messages
                        .GUILD_ROLE_MANAGE_SUBSCRIPTION_PAST_DUE,
                      color: r.default.YELLOW_300,
                    }),
                  }),
              });
            else return null;
          },
          ea = () =>
            Y
              ? (0, a.jsx)(d.Tooltip, {
                  text: B.default.Messages
                    .GUILD_ROLE_MANAGE_SUBSCRIPTION_IOS_PLATFORM_TOOLTIP,
                  children: e =>
                    (0, a.jsx)("div", {
                      ...e,
                      children: (0, a.jsx)(R.TextBadge, {
                        text: B.default.Messages
                          .GUILD_ROLE_MANAGE_SUBSCRIPTION_IOS_PLATFORM,
                        color: _.default.INTERACTIVE_MUTED,
                      }),
                    }),
                })
              : null;
        return (0, a.jsxs)("div", {
          className: F.container,
          children: [
            (0, a.jsx)(v.default, {
              onClick: g,
              className: F.headerContainer,
              children: e => {
                let { areaRef: t, handleStopPropagation: n } = e;
                return (0, a.jsxs)(a.Fragment, {
                  children: [
                    null != o &&
                      (0, a.jsx)(p.default, {
                        guild: o,
                        active: !0,
                        size: p.default.Sizes.MEDIUM,
                      }),
                    (0, a.jsxs)("div", {
                      className: F.headerTextContainer,
                      children: [
                        (0, a.jsx)(d.Text, {
                          variant: "text-md/medium",
                          className: F.guildName,
                          children:
                            null != o
                              ? o.name
                              : B.default.Messages
                                  .GUILD_ROLE_SUBSCRIPTION_SERVER_NAME_UNAVAILABLE,
                        }),
                        (0, a.jsxs)("div", {
                          className: F.headerSubtitleContainer,
                          children: [
                            (0, a.jsx)(d.Text, {
                              variant: "text-sm/normal",
                              className: F.tierName,
                              children: s.name,
                            }),
                            es(),
                            ea(),
                          ],
                        }),
                      ],
                    }),
                    (0, a.jsx)(d.Clickable, {
                      onClick: n(g),
                      "aria-label":
                        B.default.Messages
                          .GUILD_ROLE_SUBSCRIPTIONS_TOGGLE_SECTION_LABEL,
                      "aria-controls": M,
                      "aria-expanded": T,
                      focusProps: { ringTarget: t },
                      children: (0, a.jsx)(x.default, {
                        className: i(F.arrowIcon, { [F.arrowIconExpanded]: T }),
                      }),
                    }),
                  ],
                });
              },
            }),
            T
              ? (0, a.jsxs)("div", {
                  id: M,
                  children: [
                    (0, a.jsx)("div", { className: F.divider }),
                    (0, a.jsx)(L.default, {
                      groupListingId: l.id,
                      subscription: t,
                      className: F.changePlanNotice,
                    }),
                    (0, a.jsxs)("div", {
                      className: F.subscriptionInfoCards,
                      children: [
                        (0, a.jsx)(G, { label: $, value: J }),
                        (0, a.jsx)(G, {
                          label:
                            B.default.Messages
                              .GUILD_ROLE_MANAGE_SUBSCRIPTION_INFO_PRICE,
                          value: q,
                          showInfoIcon: ee,
                          infoIconTooltipText: ee
                            ? B.default.Messages
                                .GUILD_ROLE_SUBSCRIPTION_MANAGE_SUBSCRIPTION_PAGE_TRIAL_PRICE_INFO
                            : void 0,
                        }),
                        (0, a.jsx)(G, {
                          label:
                            B.default.Messages
                              .GUILD_ROLE_MANAGE_SUBSCRIPTION_INFO_MEMBER_SINCE,
                          value: Z,
                        }),
                      ],
                    }),
                    (0, a.jsx)(A.default, { size: 16 }),
                    !Q &&
                      !Y &&
                      (0, a.jsxs)(a.Fragment, {
                        children: [
                          (0, a.jsx)(d.FormTitle, {
                            children:
                              B.default.Messages
                                .GUILD_ROLE_MANAGE_SUBSCRIPTION_PAYMENT_METHOD_LABEL,
                          }),
                          (0, a.jsx)(k, { subscription: t }),
                        ],
                      }),
                    !et &&
                      (0, a.jsx)(H, {
                        isTrial: ee,
                        isCancelled: Q,
                        isResubscribing: I,
                        shouldHideRoleSubscriptionEntryPoints: V,
                        onCancelSubscriptionClick: W,
                        onChangePlanClick: K,
                        onResubscribeClick: z,
                      }),
                  ],
                })
              : null,
          ],
        });
      };
    },
    618976: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          openModal: function () {
            return i;
          },
        });
      var a = s("352807"),
        n = s("915675"),
        l = s("782340");
      let i = () => {
        (0, a.openActionCompleteSuccessModal)({
          title: l.default.Messages.GUILD_ROLE_SUBSCRIPTION_RESTARTED_TITLE,
          body: l.default.Messages
            .GUILD_ROLE_SUBSCRIPTION_RESTARTED_DESCRIPTION,
          Icon: n.default,
        });
      };
    },
    699260: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return T;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("394846"),
        l = s("77078"),
        i = s("516899"),
        r = s("191814"),
        o = s("538137"),
        d = s("837008"),
        u = s("736595"),
        c = s("533137"),
        S = s("782340"),
        E = s("452535"),
        T = e => {
          let { onGoBack: t } = e,
            s = (0, u.default)(),
            { loading: T } = (0, d.useFetchListingsForSubscriptions)(s);
          return ((0, i.default)(
            n.isMobile ? "role-subscriptions-user-setting" : void 0
          ),
          T)
            ? (0, a.jsx)(l.Spinner, {})
            : 0 === s.length
              ? null
              : (0, a.jsxs)("div", {
                  className: E.container,
                  children: [
                    (0, a.jsxs)(l.Button, {
                      look: l.Button.Looks.BLANK,
                      innerClassName: E.backButtonContents,
                      onClick: t,
                      children: [
                        (0, a.jsx)(o.default, { className: E.arrowIcon }),
                        S.default.Messages
                          .GUILD_ROLE_SUBSCRIPTIONS_MANAGE_SUBSCRIPTIONS_PAGE_BACK_BUTTON_CTA,
                      ],
                    }),
                    (0, a.jsx)(r.default, { size: 10 }),
                    (0, a.jsx)(l.FormTitle, {
                      tag: "h1",
                      children:
                        S.default.Messages.GUILD_ROLE_SUBSCRIPTIONS_TITLE,
                    }),
                    (0, a.jsx)(l.Text, {
                      variant: "text-sm/normal",
                      className: E.pageDescription,
                      children:
                        S.default.Messages
                          .GUILD_ROLE_MANAGE_SUBSCRIPTION_PAGE_DESCRIPTION,
                    }),
                    (0, a.jsx)("div", {
                      className: E.subscriptionsContainer,
                      children: s.map(e =>
                        (0, a.jsx)(c.default, { subscription: e }, e.id)
                      ),
                    }),
                  ],
                });
        };
    },
    433426: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return S;
          },
        });
      var a = s("37983"),
        n = s("884691"),
        l = s("77078"),
        i = s("290110"),
        r = s("294490"),
        o = s("782340"),
        d = s("680090");
      let u = () => [
        {
          icon: d.perkNewsletter,
          title: o.default.Messages.HYPESQUAD_PERK_TITLE_NEWSLETTER,
          description: o.default.Messages.HYPESQUAD_PERK_DESCRIPTION_NEWSLETTER,
        },
        {
          icon: d.perkBadge,
          title: o.default.Messages.HYPESQUAD_PERK_TITLE_PROFILE_BADGE,
          description:
            o.default.Messages.HYPESQUAD_PERK_DESCRIPTION_PROFILE_BADGE,
        },
        {
          icon: d.perkChallenges,
          title: o.default.Messages.HYPESQUAD_PERK_TITLE_SQUAD_CHALLENGES,
          description:
            o.default.Messages.HYPESQUAD_PERK_DESCRIPTION_SQUAD_CHALLENGES,
        },
      ];
      class c extends n.Component {
        render() {
          return (0, a.jsxs)("div", {
            className: d.features,
            children: [
              (0, a.jsx)(r.default, {
                className: d.video,
                videoID: "SWzB1mx2o5k",
              }),
              (0, a.jsx)(l.Heading, {
                className: d.perksHeading,
                variant: "heading-sm/semibold",
                children: o.default.Messages.HYPESQUAD_PERKS_HEADING,
              }),
              (0, a.jsx)(i.default, { features: u() }),
            ],
          });
        }
      }
      var S = c;
    },
    240760: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return a;
          },
        }),
        s("222007");
      var a,
        n = s("37983"),
        l = s("884691"),
        i = s("414456"),
        r = s.n(i),
        o = s("77078"),
        d = s("145131"),
        u = s("259051"),
        c = s("49111"),
        S = s("782340"),
        E = s("522570");
      let T = {
          [c.HypeSquadHouses.HOUSE_1]: E.membershipDialogHouse1,
          [c.HypeSquadHouses.HOUSE_2]: E.membershipDialogHouse2,
          [c.HypeSquadHouses.HOUSE_3]: E.membershipDialogHouse3,
        },
        f = {
          [c.HypeSquadHouses.HOUSE_1]: E.houseLogoHouse1,
          [c.HypeSquadHouses.HOUSE_2]: E.houseLogoHouse2,
          [c.HypeSquadHouses.HOUSE_3]: E.houseLogoHouse3,
        },
        _ = {
          [c.HypeSquadHouses.HOUSE_1]: s("385622"),
          [c.HypeSquadHouses.HOUSE_2]: s("178266"),
          [c.HypeSquadHouses.HOUSE_3]: s("140090"),
        },
        m = e => {
          let t = {
            [c.HypeSquadHouses.HOUSE_1]:
              S.default.Messages.HYPESQUAD_DESCRIPTION_HOUSE_1,
            [c.HypeSquadHouses.HOUSE_2]:
              S.default.Messages.HYPESQUAD_DESCRIPTION_HOUSE_2,
            [c.HypeSquadHouses.HOUSE_3]:
              S.default.Messages.HYPESQUAD_DESCRIPTION_HOUSE_3,
          };
          return t[e];
        };
      a = class extends l.Component {
        render() {
          let { houseMembership: e, isClaimed: t, isVerified: s } = this.props;
          if (!t || !s) return null;
          if (null != e) {
            let t = S.default.Messages.HYPESQUAD_MEMBERSHIP_HEADING.format({
              houseName: (0, u.getHouseNameFromHouseID)(e),
            });
            return (0, n.jsx)("div", {
              className: r(E.membershipDialog, T[e]),
              children: (0, n.jsxs)("div", {
                className: E.membershipDialogContent,
                children: [
                  (0, n.jsxs)(d.default, {
                    children: [
                      (0, n.jsxs)(d.default.Child, {
                        grow: 1,
                        shrink: 1,
                        children: [
                          (0, n.jsx)(o.Text, {
                            className: E.membershipDialogHeading,
                            variant: "text-xs/bold",
                            children: S.default.Messages.HYPESQUAD_YOUR_HOUSE,
                          }),
                          (0, n.jsx)(o.Heading, {
                            className: E.membershipDialogHouseName,
                            variant: "heading-sm/semibold",
                            children: t,
                          }),
                          (0, n.jsx)(o.Text, {
                            className: E.membershipDialogHouseDescription,
                            variant: "text-md/normal",
                            children: m(e),
                          }),
                        ],
                      }),
                      (0, n.jsx)(d.default.Child, {
                        className: E.houseLogoWrapper,
                        grow: 0,
                        shrink: 0,
                        wrap: !0,
                        children: (0, n.jsx)("img", {
                          className: r(E.houseLogo, f[e]),
                          src: _[e],
                          alt: t,
                        }),
                      }),
                    ],
                  }),
                  (0, n.jsxs)(o.Text, {
                    className: E.membershipDialogSwitchHouses,
                    variant: "text-md/normal",
                    children: [
                      S.default.Messages.HYPESQUAD_SWITCH_HOUSES_PROMPT,
                      (0, n.jsx)(o.Clickable, {
                        className: E.membershipDialogSwitchHousesAction,
                        onClick: this.handleJoinHypeSquadClick,
                        tag: "span",
                        children:
                          S.default.Messages.HYPESQUAD_SWITCH_HOUSES_ACTION,
                      }),
                    ],
                  }),
                ],
              }),
            });
          }
          return (0, n.jsxs)("div", {
            className: E.joinCTAWrapper,
            children: [
              (0, n.jsxs)(d.default, {
                className: E.joinCTA,
                align: d.default.Align.CENTER,
                justify: d.default.Justify.CENTER,
                direction: d.default.Direction.HORIZONTAL,
                children: [
                  (0, n.jsx)(d.default.Child, {
                    grow: 0,
                    shrink: 0,
                    children: (0, n.jsx)(o.Text, {
                      variant: "text-sm/normal",
                      children: S.default.Messages.HYPESQUAD_READY_TO_REP,
                    }),
                  }),
                  (0, n.jsx)(d.default.Child, {
                    grow: 0,
                    shrink: 0,
                    children: (0, n.jsx)(o.Button, {
                      onClick: this.handleJoinHypeSquadClick,
                      children: S.default.Messages.HYPESQUAD_JOIN,
                    }),
                  }),
                ],
              }),
              (0, n.jsx)(o.Text, {
                className: E.newsletterWarning,
                variant: "text-sm/normal",
                children: S.default.Messages.HYPESQUAD_NEWSLETTER_WARNING,
              }),
            ],
          });
        }
        constructor(...e) {
          super(...e),
            (this.handleJoinHypeSquadClick = () => {
              (0, o.openModalLazy)(async () => {
                let { default: e } = await s
                  .el("655615")
                  .then(s.bind(s, "655615"));
                return t => (0, n.jsx)(e, { ...t });
              });
            });
        }
      };
    },
    12013: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return a;
          },
        }),
        s("222007");
      var a,
        n = s("37983"),
        l = s("884691"),
        i = s("77078"),
        r = s("6481"),
        o = s("782340"),
        d = s("525558");
      a = class extends l.PureComponent {
        renderErrorMessage() {
          let { hasError: e } = this.state;
          return e
            ? (0, n.jsx)("div", {
                className: d.error,
                children: o.default.Messages.HYPESQUAD_LEAVE_ERROR,
              })
            : null;
        }
        render() {
          let { isRequestPending: e } = this.state,
            { isHypeSquadOnlineMember: t } = this.props;
          return t
            ? (0, n.jsxs)("div", {
                className: d.leaveActionWrapper,
                children: [
                  this.renderErrorMessage(),
                  (0, n.jsxs)(i.Text, {
                    variant: "text-sm/normal",
                    children: [
                      o.default.Messages.HYPESQUAD_LEAVE_PROMPT,
                      (0, n.jsx)(i.Button, {
                        className: d.leaveButton,
                        color: i.Button.Colors.LINK,
                        look: i.Button.Looks.LINK,
                        onClick: this.handleLeaveHypeSquadClick,
                        size: i.Button.Sizes.NONE,
                        submitting: e,
                        children: o.default.Messages.HYPESQUAD_LEAVE_ACTION,
                      }),
                    ],
                  }),
                ],
              })
            : null;
        }
        constructor(...e) {
          super(...e),
            (this.state = { isRequestPending: !1, hasError: !1 }),
            (this.handleLeaveHypeSquadError = () => {
              this.setState({ hasError: !0 });
            }),
            (this.handleLeaveHypeSquadClick = () => {
              this.setState({ isRequestPending: !0 }, () => {
                r.default
                  .leaveHypeSquadOnline()
                  .then(() => {
                    this.setState({ isRequestPending: !1 });
                  })
                  .catch(() => {
                    this.setState({ hasError: !0, isRequestPending: !1 });
                  });
              });
            });
        }
      };
    },
    841026: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          fetchUserLootboxData: function () {
            return i;
          },
          openLootbox: function () {
            return r;
          },
          redeemPrize: function () {
            return o;
          },
          fetchCountStat: function () {
            return d;
          },
        });
      var a = s("872717"),
        n = s("913144"),
        l = s("49111");
      async function i() {
        n.default.dispatch({ type: "USER_LOOTBOX_DATA_FETCH" });
        try {
          let e = await a.default.get({ url: l.Endpoints.USER_LOOTBOX_DATA });
          if (e.ok && null != e.body) {
            let { user_id: t, opened_items: s, redeemed_prize: a } = e.body;
            n.default.dispatch({
              type: "USER_LOOTBOX_DATA_FETCH_SUCCESS",
              userId: t,
              openedItems: s,
              redeemedPrize: a,
            });
          } else
            n.default.dispatch({ type: "USER_LOOTBOX_DATA_FETCH_FAILURE" });
        } catch (e) {
          n.default.dispatch({ type: "USER_LOOTBOX_DATA_FETCH_FAILURE" });
        }
      }
      async function r() {
        let e = await a.default.post({
          url: l.Endpoints.USER_LOOTBOX_OPEN_ITEM,
        });
        if (e.ok && null != e.body) {
          let { user_lootbox_data: t, opened_item: s } = e.body,
            { user_id: a, opened_items: l, redeemed_prize: i } = t;
          n.default.dispatch({
            type: "USER_LOOTBOX_OPEN_ITEM",
            userLootboxData: { userId: a, openedItems: l, redeemedPrize: i },
            openedItem: s,
          });
        }
      }
      async function o() {
        let e = await a.default.post({
          url: l.Endpoints.USER_LOOTBOX_REDEEM_PRIZE,
        });
        if (e.ok && null != e.body) {
          let { user_id: t, opened_items: s, redeemed_prize: a } = e.body;
          n.default.dispatch({
            type: "USER_LOOTBOX_DATA_FETCH_SUCCESS",
            userId: t,
            openedItems: s,
            redeemedPrize: a,
          });
        }
      }
      async function d() {
        let e = await a.default.get({ url: l.Endpoints.LOOTBOX_COUNT });
        n.default.dispatch({
          type: "LOOTBOX_COUNT_STAT_FETCHED",
          currentCount: e.body.current_count,
          previousCount: e.body.previous_count,
        });
      }
    },
    630615: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          getLootboxes: function () {
            return d;
          },
          LOOTBOX_COUNT_STAT_FETCH_DELAY_MIN: function () {
            return u;
          },
          LOOTBOX_COUNT_STAT_FETCH_DELAY_MAX: function () {
            return c;
          },
        });
      var a,
        n,
        l = s("718517"),
        i = s("782340"),
        r = s("262228");
      let o = s("22247");
      ((a = n || (n = {})).ITEM_1 = "1214340999644446720"),
        (a.ITEM_2 = "1214340999644446721"),
        (a.ITEM_3 = "1214340999644446722"),
        (a.ITEM_4 = "1214340999644446723"),
        (a.ITEM_5 = "1214340999644446724"),
        (a.ITEM_6 = "1214340999644446725"),
        (a.ITEM_7 = "1214340999644446726"),
        (a.ITEM_8 = "1214340999644446727"),
        (a.ITEM_9 = "1214340999644446728");
      let d = () => ({
          "1214340999644446720": {
            name: i.default.Messages.PACKAGE_ITEM_1_NAME,
            image: r,
            sound: o,
          },
          "1214340999644446721": {
            name: i.default.Messages.PACKAGE_ITEM_2_NAME,
            image: r,
            sound: o,
          },
          "1214340999644446722": {
            name: i.default.Messages.PACKAGE_ITEM_3_NAME,
            image: r,
            sound: o,
          },
          "1214340999644446723": {
            name: i.default.Messages.PACKAGE_ITEM_4_NAME,
            image: r,
            sound: o,
          },
          "1214340999644446724": {
            name: i.default.Messages.PACKAGE_ITEM_5_NAME,
            image: r,
            sound: o,
          },
          "1214340999644446725": {
            name: i.default.Messages.PACKAGE_ITEM_6_NAME,
            image: r,
            sound: o,
          },
          "1214340999644446726": {
            name: i.default.Messages.PACKAGE_ITEM_7_NAME,
            image: r,
            sound: o,
          },
          "1214340999644446727": {
            name: i.default.Messages.PACKAGE_ITEM_8_NAME,
            image: r,
            sound: o,
          },
          "1214340999644446728": {
            name: i.default.Messages.PACKAGE_ITEM_9_NAME,
            image: r,
            sound: o,
          },
        }),
        u = l.default.Millis.MINUTE,
        c = l.default.Millis.MINUTE + 10 * l.default.Millis.SECOND;
    },
    204062: function (e, t, s) {
      "use strict";
      let a;
      s.r(t),
        s.d(t, {
          FetchState: function () {
            return l;
          },
          default: function () {
            return h;
          },
        });
      var n,
        l,
        i = s("446674"),
        r = s("913144"),
        o = s("976028"),
        d = s("630615");
      ((n = l || (l = {}))[(n.NOT_FETCHED = 0)] = "NOT_FETCHED"),
        (n[(n.FETCHING = 1)] = "FETCHING"),
        (n[(n.FETCHED = 2)] = "FETCHED"),
        (n[(n.ERROR = 3)] = "ERROR");
      let u = 0,
        c = 0,
        S = {},
        E = !1,
        T = 0,
        f = 0,
        _ = 0,
        m = 0;
      class g extends i.default.Store {
        get openedItems() {
          return S;
        }
        get redeemedPrize() {
          return E;
        }
        get globalOpenedCount() {
          return f;
        }
        get lastGlobalOpenedCount() {
          return T;
        }
        get globalOpenedCountFetchTime() {
          return _;
        }
        get nextGlobalOpenedCountFetchDelay() {
          return m;
        }
        get recentlyOpenedItem() {
          return a;
        }
        get userDataFetchState() {
          return u;
        }
        get globalOpenedCountFetchState() {
          return c;
        }
      }
      g.displayName = "LootboxStore";
      var h = new g(r.default, {
        USER_LOOTBOX_DATA_FETCH: function () {
          u = 1;
        },
        USER_LOOTBOX_DATA_FETCH_SUCCESS: function (e) {
          (S = { ...e.openedItems }), (E = e.redeemedPrize), (u = 2);
        },
        USER_LOOTBOX_DATA_FETCH_FAILURE: function () {
          u = 3;
        },
        USER_LOOTBOX_OPEN_ITEM: function (e) {
          let { userLootboxData: t, openedItem: s } = e;
          (S = { ...t.openedItems }), (E = t.redeemedPrize), (a = s), f++, T++;
        },
        LOOTBOX_COUNT_STAT_FETCHED: function (e) {
          let { currentCount: t, previousCount: s } = e;
          (f = t),
            (T = s),
            (_ = Date.now()),
            (m = (0, o.randomBetween)(
              d.LOOTBOX_COUNT_STAT_FETCH_DELAY_MIN,
              d.LOOTBOX_COUNT_STAT_FETCH_DELAY_MAX
            )),
            (c = 2);
        },
        LOGOUT: function () {
          (S = {}), (E = !1), (a = void 0), (u = 0);
        },
      });
    },
    976028: function (e, t, s) {
      "use strict";
      function a(e, t) {
        return Math.floor(Math.random() * (t - e + 1) + e);
      }
      s.r(t),
        s.d(t, {
          randomBetween: function () {
            return a;
          },
        });
    },
    4452: function (e, t, s) {
      "use strict";
      function a(e, t, s) {
        return e * (1 - s) + t * s;
      }
      s.r(t),
        s.d(t, {
          default: function () {
            return a;
          },
        });
    },
    193694: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return m;
          },
        }),
        s("222007");
      var a,
        n,
        l = s("37983"),
        i = s("884691"),
        r = s("414456"),
        o = s.n(r),
        d = s("446674"),
        u = s("862337"),
        c = s("763377"),
        S = s("77078"),
        E = s("206230"),
        T = s("976028"),
        f = s("782340"),
        _ = s("904620");
      ((n = a || (a = {}))[(n.ODDS_FIRST = 0)] = "ODDS_FIRST"),
        (n[(n.ODDS_2 = 1)] = "ODDS_2"),
        (n[(n.ODDS_3 = 2)] = "ODDS_3"),
        (n[(n.ODDS_4 = 3)] = "ODDS_4"),
        (n[(n.ODDS_5 = 4)] = "ODDS_5"),
        (n[(n.ODDS_6 = 5)] = "ODDS_6"),
        (n[(n.ODDS_LAST = 6)] = "ODDS_LAST");
      function m(e) {
        let { className: t } = e,
          s = (0, d.useStateFromStores)(
            [E.default],
            () => E.default.useReducedMotion
          ),
          [a, n] = i.useState(!1),
          [r, m] = i.useState(0),
          [g, h] = i.useState(""),
          [N] = i.useState(new u.Timeout()),
          [I, p] = i.useState((0, T.randomBetween)(5, 95)),
          C = (function (e, t) {
            switch (e) {
              case 0:
                return f.default.Messages.PACKAGES_HELP_1;
              case 1:
                return f.default.Messages.PACKAGES_HELP_2;
              case 2:
                return f.default.Messages.PACKAGES_HELP_3;
              case 3:
                return f.default.Messages.PACKAGES_HELP_4;
              case 4:
                return f.default.Messages.PACKAGES_HELP_5.format({
                  percent: t,
                });
              case 5:
                return f.default.Messages.PACKAGES_HELP_6;
              case 6:
                return f.default.Messages.PACKAGES_HELP_7;
            }
          })(r, I),
          A = g.length === C.length,
          O = () => {
            r < 6 ? m(r + 1) : m(0), p((0, T.randomBetween)(5, 95));
          };
        return (
          i.useEffect(() => {
            if (g.length === C.length || !a || s) {
              N.stop();
              return;
            }
            N.start((0, T.randomBetween)(20, 100), () => {
              h(C.substring(0, g.length + 1));
            });
          }, [a, r, g.length, N, C, s]),
          i.useEffect(() => {
            h(C.substring(0, 1));
          }, [r, C]),
          i.useEffect(() => () => N.stop(), [N]),
          (0, l.jsx)(S.Tooltip, {
            text: s ? C : g,
            "aria-label": C,
            onTooltipShow: () => n(!0),
            onTooltipHide: () => n(!1),
            children: e =>
              (0, l.jsx)(S.Clickable, {
                ...e,
                onClick: s || A ? O : void 0,
                className: o(t, _.clickable),
                children: (0, l.jsx)(c.CircleQuestionIcon, {
                  className: _.icon,
                }),
              }),
          })
        );
      }
    },
    508577: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return S;
          },
        }),
        s("222007");
      var a = s("37983"),
        n = s("884691"),
        l = s("907002"),
        i = s("862337"),
        r = s("77078"),
        o = s("4452"),
        d = s("782340"),
        u = s("114602");
      let c = l.config.stiff;
      function S(e) {
        let { image: t, name: s, sound: S, openedCount: E } = e,
          T = E > 0,
          f = n.useRef(null),
          _ = n.useRef(null),
          [m, g] = n.useState(!1),
          [h, N] = n.useState({ x: 0, y: 0 }),
          [I] = n.useState(new i.Interval()),
          [p, C] = (0, l.useSpring)(() => ({ x: 0, y: 0, config: c })),
          [A, O] = (0, l.useSpring)(() => ({ value: 1, config: c }));
        n.useEffect(() => {
          if (T && m && null != f.current) {
            let e = f.current.getBoundingClientRect(),
              t = h.x - e.x,
              s = h.y - e.y,
              a = e.width / 2,
              n = e.height / 2;
            C({ x: ((t - a) / a) * 25, y: -(((s - n) / n) * 25) });
          }
        }, [m, T, h.x, h.y, C]),
          n.useEffect(() => {
            O({ value: T && m ? 1.2 : 1 });
          }, [m, T, O]);
        let x = n.useCallback(e => {
            N({ x: e.clientX, y: e.clientY });
          }, []),
          M = n.useCallback(
            e => {
              g(!0), x(e);
            },
            [x]
          ),
          R = n.useCallback(() => {
            g(!1), N({ x: 0, y: 0 }), C({ x: 0, y: 0 });
          }, [C]),
          D = n.useCallback(() => {
            if (null != _.current) {
              let e = _.current.currentTime / _.current.duration,
                t = (0, o.default)(1, 1.2, e);
              O({ value: t }), e >= 1 && (!m && O({ value: 1 }), I.stop());
            }
          }, [I, m, O]);
        n.useEffect(() => {
          null != I._ref && I.start(30, D);
        }, [I, D]);
        let v = n.useCallback(() => {
          null != _.current &&
            ((_.current.currentTime = 0), _.current.play(), I.start(30, D));
        }, [I, D]);
        return (0, a.jsxs)(r.Clickable, {
          onClick: T ? v : void 0,
          children: [
            (0, a.jsx)("audio", { src: S, ref: _ }),
            (0, a.jsx)(l.animated.div, {
              ref: f,
              className: T ? u.containerOwned : void 0,
              style: {
                transform: (0, l.to)([A.value], e => "scale(".concat(e, ")")),
              },
              onMouseEnter: M,
              onMouseLeave: R,
              onMouseMove: x,
              children: (0, a.jsxs)(l.animated.div, {
                className: u.item,
                style: {
                  transform: (0, l.to)([p.x, p.y], (e, t) =>
                    "rotateY(".concat(e, "deg) rotateX(").concat(t, "deg)")
                  ),
                },
                children: [
                  T &&
                    (0, a.jsx)(r.Text, {
                      variant: "text-xxs/bold",
                      className: u.count,
                      children:
                        d.default.Messages.USER_SETTINGS_PACKAGE_COUNT.format({
                          count: E,
                        }),
                    }),
                  (0, a.jsx)(r.Heading, {
                    variant: "display-md",
                    className: u.imageContainer,
                    color: "text-muted",
                    children: T
                      ? (0, a.jsx)("img", {
                          src: t,
                          alt: "",
                          className: u.image,
                        })
                      : "?",
                  }),
                  T &&
                    (0, a.jsx)(r.Text, {
                      variant: "text-xxs/bold",
                      className: u.name,
                      children: s,
                    }),
                ],
              }),
            }),
          ],
        });
      }
    },
    946964: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return c;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("748820"),
        l = s("77078"),
        i = s("112679"),
        r = s("55689"),
        o = s("21526"),
        d = s("599110"),
        u = s("49111");
      function c(e) {
        let {
            skuId: t,
            isGift: c = !1,
            giftMessage: S,
            onClose: E,
            onComplete: T,
            analyticsLocations: f,
            analyticsObject: _,
          } = e,
          m = !1,
          g = (0, n.v4)();
        (0, l.openModalLazy)(
          async () => {
            let { default: e } = await s.el("894742").then(s.bind(s, "894742"));
            return s => {
              let { onClose: n, returnRef: l, ...i } = s;
              return (0, a.jsx)(e, {
                ...i,
                loadId: g,
                skuId: t,
                isGift: c,
                giftMessage: S,
                analyticsLocations: f,
                onClose: e => {
                  n(), null == E || E(e);
                },
                onComplete: () => {
                  (m = !0), null == T || T();
                },
                returnRef: l,
              });
            };
          },
          {
            onCloseCallback: () => {
              !m &&
                d.default.track(u.AnalyticEvents.PAYMENT_FLOW_CANCELED, {
                  load_id: g,
                  payment_type:
                    u.PurchaseTypeToAnalyticsPaymentType[
                      u.PurchaseTypes.ONE_TIME
                    ],
                  location: _,
                  is_gift: c,
                  location_stack: f,
                }),
                (0, i.clearError)(),
                (0, r.clearPurchaseTokenAuthState)(),
                null == E || E(m),
                m && (0, o.fetchCollectiblesPurchases)();
            },
            onCloseRequest: u.NOOP,
          }
        );
      }
    },
    653208: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return E;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("414456"),
        l = s.n(n),
        i = s("866227"),
        r = s.n(i),
        o = s("77078"),
        d = s("888400"),
        u = s("106413"),
        c = s("408792"),
        S = s("996082");
      function E(e) {
        let { achievementId: t, dateUnlocked: s } = e,
          n = (0, u.getPoggermodeAchievementData)(t);
        if (null == n) return null;
        let i = null != s,
          {
            name: E,
            description: T,
            hideDescriptionUntilUnlock: f,
            onAction: _,
          } = n,
          m = f && !i,
          g = i ? "header-primary" : "text-muted",
          h = i ? "header-secondary" : "text-muted",
          N = r(s),
          I = null != _ && i,
          p = I ? o.Clickable : "div";
        return (0, a.jsxs)(p, {
          className: l(S.container, I && S.actionable),
          onClick: () => {
            I && _();
          },
          children: [
            (0, a.jsx)("div", {
              className: S.iconContainer,
              children: (0, a.jsx)(c.default, {
                achievementId: t,
                size: c.default.Sizes.SIZE_40,
                unlocked: i,
              }),
            }),
            (0, a.jsxs)("div", {
              className: S.nameContainer,
              children: [
                null != s &&
                  (0, a.jsx)(o.Text, {
                    variant: "text-xxs/semibold",
                    color: "text-muted",
                    className: S.unlocked,
                    children: (0, d.calendarFormat)(N),
                  }),
                (0, a.jsx)(o.Text, {
                  variant: "text-md/medium",
                  color: g,
                  children: E(),
                }),
                (0, a.jsx)(o.Text, {
                  variant: "text-xs/normal",
                  color: h,
                  children: m ? "?????" : T(),
                }),
              ],
            }),
          ],
        });
      }
    },
    317654: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return q;
          },
        }),
        s("222007");
      var a,
        n,
        l,
        i,
        r = s("37983"),
        o = s("884691"),
        d = s("917351"),
        u = s("446674"),
        c = s("669491"),
        S = s("77078"),
        E = s("54239"),
        T = s("206230"),
        f = s("491605"),
        _ = s("16594"),
        m = s("772280"),
        g = s("300113"),
        h = s("659500"),
        N = s("709681"),
        I = s("356702"),
        p = s("106413"),
        C = s("28007"),
        A = s("880731"),
        O = s("250024"),
        x = s("798592"),
        M = s("39141"),
        R = s("49111"),
        D = s("782340"),
        v = s("97137");
      let L = {
          enabled: !0,
          combosEnabled: !0,
          screenshakeEnabled: !1,
          confettiEnabled: !1,
        },
        P = (0, d.range)(0, 11),
        j = (0, d.range)(0, 2.25, 0.25),
        b = (0, d.range)(1, 11),
        U = (0, d.range)(1, 26);
      ((l = a || (a = {}))[(l.CONFETTI = 0)] = "CONFETTI"),
        (l[(l.SHAKE = 1)] = "SHAKE"),
        ((i = n || (n = {}))[(i.USER_SETTINGS = 0)] = "USER_SETTINGS"),
        (i[(i.ACHIEVEMENT_LIST = 1)] = "ACHIEVEMENT_LIST");
      let y = () => [
          {
            location: M.ConfettiLocation.CHAT_INPUT,
            title:
              D.default.Messages
                .POGGERMODE_CONFETTI_LOCATION_CHAT_INPUT_ENABLED,
            description:
              D.default.Messages
                .POGGERMODE_CONFETTI_LOCATION_CHAT_INPUT_ENABLED_DESCRIPTION,
          },
          {
            location: M.ConfettiLocation.REACTION,
            title:
              D.default.Messages.POGGERMODE_CONFETTI_LOCATION_REACTION_ENABLED,
            description:
              D.default.Messages
                .POGGERMODE_CONFETTI_LOCATION_REACTION_ENABLED_DESCRIPTION,
          },
          {
            location: M.ConfettiLocation.MEMBER_USER,
            title:
              D.default.Messages
                .POGGERMODE_CONFETTI_LOCATION_MEMBER_USER_ENABLED,
            description:
              D.default.Messages
                .POGGERMODE_CONFETTI_LOCATION_MEMBER_USER_ENABLED_DESCRIPTION,
          },
          {
            location: M.ConfettiLocation.CALL_TILE,
            title:
              D.default.Messages.POGGERMODE_CONFETTI_LOCATION_CALL_TILE_ENABLED,
            description:
              D.default.Messages
                .POGGERMODE_CONFETTI_LOCATION_CALL_TILE_ENABLED_DESCRIPTION,
          },
        ],
        B = () => [
          {
            location: M.ShakeLocation.CHAT_INPUT,
            title:
              D.default.Messages
                .POGGERMODE_SCREENSHAKE_LOCATION_CHAT_INPUT_ENABLED,
            description:
              D.default.Messages
                .POGGERMODE_SCREENSHAKE_LOCATION_CHAT_INPUT_ENABLED_DESCRIPTION,
          },
          {
            location: M.ShakeLocation.VOICE_USER,
            title:
              D.default.Messages
                .POGGERMODE_SCREENSHAKE_LOCATION_VOICE_USER_ENABLED,
            description:
              D.default.Messages
                .POGGERMODE_SCREENSHAKE_LOCATION_VOICE_USER_ENABLED_DESCRIPTION,
          },
          {
            location: M.ShakeLocation.MENTION,
            title:
              D.default.Messages
                .POGGERMODE_SCREENSHAKE_LOCATION_MENTION_ENABLED,
            description:
              D.default.Messages
                .POGGERMODE_SCREENSHAKE_LOCATION_MENTION_ENABLED_DESCRIPTION,
          },
        ];
      function F(e) {
        let {
            disabled: t,
            locations: s,
            settingsLocations: a,
            onChange: n,
          } = e,
          l = s.map(e =>
            (0, r.jsx)(
              S.FormSwitch,
              {
                disabled: t,
                value: a[e.location],
                note: e.description,
                onChange: t => n({ ...a, [e.location]: t }),
                children: e.title,
              },
              e.location
            )
          );
        return (0, r.jsxs)(r.Fragment, {
          children: [
            (0, r.jsx)(S.FormTitle, {
              children: D.default.Messages.POGGERMODE_LOCATIONS,
            }),
            l,
          ],
        });
      }
      function G(e) {
        let { children: t } = e;
        return (0, r.jsx)(S.Text, {
          className: v.sliderDescription,
          variant: "text-sm/normal",
          color: "header-secondary",
          children: t,
        });
      }
      function k(e) {
        let {
            settings: { enabled: t, warningSeen: s },
            updateSettings: a,
          } = e,
          n = (0, u.useStateFromStores)(
            [T.default],
            () => T.default.useReducedMotion
          );
        return (0, r.jsx)(S.FormSwitch, {
          value: t,
          note: D.default.Messages.POGGERMODE_ENABLE_DESCRIPTION,
          onChange: e => {
            !e &&
              (0, I.unlockAchievement)(
                p.PoggermodeAchievementId.DISABLE_POGGERMODE
              ),
              e && (!s || n)
                ? (0, S.openModal)(e =>
                    (0, r.jsx)(S.ConfirmModal, {
                      header: n
                        ? D.default.Messages
                            .POGGERMODE_WARNING_TITLE_REDUCED_MOTION
                        : D.default.Messages.POGGERMODE_WARNING_TITLE,
                      confirmText: D.default.Messages.ENABLE,
                      cancelText: D.default.Messages.CANCEL,
                      onConfirm: () =>
                        a(n ? L : { enabled: !0, warningSeen: !0 }),
                      ...e,
                      children: (0, r.jsx)(S.Text, {
                        variant: "text-md/normal",
                        children: n
                          ? D.default.Messages
                              .POGGERMODE_WARNING_BODY_REDUCED_MOTION
                          : D.default.Messages.POGGERMODE_WARNING_BODY,
                      }),
                    })
                  )
                : a({ enabled: e });
          },
          children: D.default.Messages.POGGERMODE_ENABLE,
        });
      }
      function H(e) {
        let {
            settings: {
              enabled: t,
              confettiEnabled: s,
              confettiCount: a,
              confettiSize: n,
              confettiEnabledLocations: l,
            },
            updateSettings: i,
          } = e,
          o = !t || !s;
        return (0, r.jsxs)(S.FormSection, {
          tag: S.FormTitleTags.H1,
          title: D.default.Messages.POGGERMODE_CONFETTI_CUSTOMIZATION,
          children: [
            (0, r.jsx)(S.FormSwitch, {
              disabled: !t,
              value: s,
              note: D.default.Messages.POGGERMODE_CONFETTI_ENABLED_DESCRIPTION,
              onChange: e => i({ confettiEnabled: e }, 0),
              children: D.default.Messages.POGGERMODE_CONFETTI_ENABLED,
            }),
            (0, r.jsxs)(S.FormItem, {
              disabled: o,
              title: D.default.Messages.POGGERMODE_CONFETTI_COUNT,
              className: v.formItem,
              children: [
                (0, r.jsx)(G, {
                  children:
                    D.default.Messages.POGGERMODE_CONFETTI_COUNT_DESCRIPTION,
                }),
                (0, r.jsx)(S.Slider, {
                  disabled: o,
                  markers: b,
                  stickToMarkers: !0,
                  minValue: b[0],
                  maxValue: b[b.length - 1],
                  initialValue: a,
                  onValueChange: e => i({ confettiCount: e }, 0),
                  onValueRender: e => "".concat(e),
                }),
              ],
            }),
            (0, r.jsxs)(S.FormItem, {
              disabled: o,
              title: D.default.Messages.POGGERMODE_CONFETTI_SIZE,
              className: v.formItem,
              children: [
                (0, r.jsx)(G, {
                  children:
                    D.default.Messages.POGGERMODE_CONFETTI_SIZE_DESCRIPTION,
                }),
                (0, r.jsx)(S.Slider, {
                  disabled: o,
                  markers: U,
                  stickToMarkers: !0,
                  minValue: U[0],
                  maxValue: U[U.length - 1],
                  initialValue: n,
                  onValueChange: e => i({ confettiSize: e }, 0),
                  onValueRender: e => "".concat(e),
                }),
              ],
            }),
            (0, r.jsx)(F, {
              disabled: o,
              locations: y(),
              settingsLocations: l,
              onChange: e => i({ confettiEnabledLocations: e }, 0),
            }),
          ],
        });
      }
      function w(e) {
        let {
            settings: {
              enabled: t,
              combosEnabled: s,
              comboSoundsEnabled: a,
              combosRequiredCount: n,
            },
            updateSettings: l,
          } = e,
          i = !t || !s;
        return (0, r.jsxs)(S.FormSection, {
          tag: S.FormTitleTags.H1,
          title: D.default.Messages.POGGERMODE_COMBOS_CUSTOMIZATION,
          children: [
            (0, r.jsx)(S.FormSwitch, {
              disabled: !t,
              value: s,
              note: D.default.Messages.POGGERMODE_COMBOS_ENABLED_DESCRIPTION,
              onChange: e => l({ combosEnabled: e }),
              children: D.default.Messages.POGGERMODE_COMBOS_ENABLED,
            }),
            (0, r.jsx)(S.FormSwitch, {
              disabled: !t,
              value: a,
              note: D.default.Messages
                .POGGERMODE_COMBO_SOUNDS_ENABLED_DESCRIPTION,
              onChange: e => l({ comboSoundsEnabled: e }),
              children: D.default.Messages.POGGERMODE_COMBO_SOUNDS_ENABLED,
            }),
            (0, r.jsxs)(S.FormItem, {
              disabled: i,
              title: D.default.Messages.POGGERMODE_COMBOS_REQUIRED,
              className: v.formItem,
              children: [
                (0, r.jsx)(G, {
                  children:
                    D.default.Messages.POGGERMODE_COMBOS_REQUIRED_DESCRIPTION,
                }),
                (0, r.jsx)(S.Slider, {
                  disabled: i,
                  markers: P,
                  stickToMarkers: !0,
                  minValue: P[0],
                  maxValue: P[P.length - 1],
                  initialValue: n,
                  onValueChange: e => l({ combosRequiredCount: e }),
                  onValueRender: e => "".concat(e),
                }),
              ],
            }),
            (0, r.jsx)(S.FormDivider, { className: v.divider }),
          ],
        });
      }
      function V(e) {
        let {
            settings: {
              enabled: t,
              screenshakeEnabled: s,
              shakeIntensity: a,
              screenshakeEnabledLocations: n,
            },
            updateSettings: l,
          } = e,
          i = (0, u.useStateFromStores)(
            [T.default],
            () => T.default.useReducedMotion
          ),
          o = !t || !s || i,
          d = (e, t) => {
            null != e.shakeIntensity &&
              e.shakeIntensity > a &&
              (0, I.unlockAchievement)(p.PoggermodeAchievementId.MORE),
              l(e, t);
          };
        return (0, r.jsxs)(S.FormSection, {
          tag: S.FormTitleTags.H1,
          title: D.default.Messages.POGGERMODE_SCREENSHAKE_CUSTOMIZATION,
          children: [
            (0, r.jsx)(S.FormSwitch, {
              disabled: !t || i,
              tooltipNote: i
                ? D.default.Messages
                    .POGGERMODE_SCREENSHAKE_DISABLED_REDUCED_MOTION
                : null,
              value: s && !i,
              note: D.default.Messages
                .POGGERMODE_SCREENSHAKE_ENABLED_DESCRIPTION,
              onChange: e => l({ screenshakeEnabled: e }, 1),
              children: D.default.Messages.POGGERMODE_SCREENSHAKE_ENABLED,
            }),
            (0, r.jsxs)(S.FormItem, {
              disabled: o,
              title: D.default.Messages.POGGERMODE_SCREENSHAKE,
              className: v.formItem,
              children: [
                (0, r.jsx)(G, {
                  children:
                    D.default.Messages.POGGERMODE_SCREENSHAKE_DESCRIPTION,
                }),
                (0, r.jsx)(S.Slider, {
                  disabled: o,
                  markers: j,
                  equidistant: !0,
                  stickToMarkers: !0,
                  minValue: j[0],
                  maxValue: j[j.length - 1],
                  initialValue: a,
                  onValueChange: e => d({ shakeIntensity: e }, 1),
                  onMarkerRender: e =>
                    e === j[j.length - 1]
                      ? D.default.Messages.POGGERMODE_SCREENSHAKE_MAX
                      : "".concat(100 * e, "%"),
                }),
              ],
            }),
            (0, r.jsx)(F, {
              disabled: o,
              locations: B(),
              settingsLocations: n,
              onChange: e => l({ screenshakeEnabledLocations: e }, 1),
            }),
          ],
        });
      }
      function Y(e) {
        let { updateSettings: t } = e;
        return (0, r.jsx)(S.FormSection, {
          tag: S.FormTitleTags.H1,
          title: D.default.Messages.POGGERMODE_SETTINGS_CUSTOMIZATION,
          children: (0, r.jsxs)(S.FormItem, {
            className: v.formItem,
            children: [
              (0, r.jsx)(S.FormText, {
                className: v.formItem,
                children:
                  D.default.Messages.POGGERMODE_HIDE_SETTINGS_DESCRIPTION,
              }),
              (0, r.jsx)(S.Button, {
                className: v.hideButton,
                size: S.Button.Sizes.SMALL,
                onClick: () => {
                  t({ enabled: !1, settingsVisible: !1 }), (0, E.popLayer)();
                },
                children: D.default.Messages.POGGERMODE_HIDE_SETTINGS,
              }),
            ],
          }),
        });
      }
      function K(e) {
        let { onChangePage: t } = e;
        return (0, r.jsxs)(S.FormSection, {
          children: [
            (0, r.jsxs)(S.Clickable, {
              onClick: () => t(1),
              className: v.achievementContainer,
              children: [
                (0, r.jsx)("div", {
                  className: v.achievementIconContainer,
                  children: (0, r.jsx)(g.default, {
                    color: c.default.unsafe_rawColors.ORANGE_345.css,
                  }),
                }),
                (0, r.jsxs)("div", {
                  className: v.achievementTextContainer,
                  children: [
                    (0, r.jsx)(S.Heading, {
                      variant: "heading-md/semibold",
                      color: "header-primary",
                      children: D.default.Messages.POGGERMODE_ACHIEVEMENT_TITLE,
                    }),
                    (0, r.jsx)(S.Text, {
                      variant: "text-md/normal",
                      color: "header-secondary",
                      children:
                        D.default.Messages.POGGERMODE_ACHIEVEMENT_DESCRIPTION,
                    }),
                  ],
                }),
                (0, r.jsx)(m.default, {
                  width: 16,
                  className: v.rightCaretIcon,
                }),
              ],
            }),
            (0, r.jsx)(S.FormDivider, { className: v.divider }),
          ],
        });
      }
      let W = () =>
        s
          .el("185720")
          .then(s.t.bind(s, "185720", 19))
          .then(e => {
            let { default: t } = e;
            return t;
          });
      function z(e) {
        let { onChangePage: t, setShowEnableAnimation: s } = e,
          a = (0, u.useStateFromStoresObject)([A.default], () =>
            A.default.getState()
          ),
          [n, l] = o.useState({ x: 0, y: 0 }),
          i = (0, x.default)();
        function d(e, t, s, a) {
          return (null != t ? t : e) && (null != a ? a : s);
        }
        let c = e => {
            if (e.enabled && !1 === a.enabled) {
              var t;
              s(!0),
                (0, N.playSound)("poggermode_enabled"),
                h.ComponentDispatch.dispatch(R.ComponentActions.SHAKE_APP, {
                  duration: 2e3,
                  intensity:
                    null !== (t = e.shakeIntensity) && void 0 !== t
                      ? t
                      : a.shakeIntensity,
                });
            }
          },
          E = (e, t) => {
            if ((c(e), (0, C.updatePoggermodeSettings)(e), null == t)) return;
            let s = d(
              a.confettiEnabled,
              e.confettiEnabled,
              a.enabled,
              e.enabled
            );
            0 === t && s && i.fire(n.x, n.y, { settings: e });
            let l = d(
              a.screenshakeEnabled,
              e.screenshakeEnabled,
              a.enabled,
              e.enabled
            );
            if (1 === t && l) {
              var r;
              h.ComponentDispatch.dispatch(R.ComponentActions.SHAKE_APP, {
                duration: 1e3,
                intensity:
                  null !== (r = e.shakeIntensity) && void 0 !== r
                    ? r
                    : a.shakeIntensity,
              });
            }
          },
          T = e => {
            l({ x: e.clientX, y: e.clientY });
          };
        return (
          o.useEffect(
            () => (
              window.addEventListener("mousemove", T),
              () => window.removeEventListener("mousemove", T)
            ),
            []
          ),
          (0, r.jsxs)(r.Fragment, {
            children: [
              (0, r.jsx)(S.Heading, {
                variant: "heading-lg/semibold",
                className: v.title,
                children: D.default.Messages.POGGERMODE,
              }),
              (0, r.jsx)(k, { settings: a, updateSettings: E }),
              (0, r.jsx)(K, { onChangePage: t }),
              (0, r.jsx)(w, { settings: a, updateSettings: E }),
              (0, r.jsx)(V, { settings: a, updateSettings: E }),
              (0, r.jsx)(H, { settings: a, updateSettings: E }),
              (0, r.jsx)(Y, { updateSettings: E }),
            ],
          })
        );
      }
      let Q = (e, t, s) => {
          let a = e => () => {
            t(e);
          };
          switch (e) {
            case 0:
              return (0, r.jsx)(z, {
                onChangePage: a(1),
                setShowEnableAnimation: s,
              });
            case 1:
              return (0, r.jsx)(O.default, { onBackClick: a(0) });
            default:
              return null;
          }
        },
        X = e => (0 === e ? _.SlideDirection.LEFT : _.SlideDirection.RIGHT);
      function q() {
        let [e, t] = o.useState(0),
          [s, a] = o.useState(X(e)),
          [n, l] = o.useState(!1),
          i = (0, u.useStateFromStores)(
            [T.default],
            () => T.default.useReducedMotion
          ),
          d = n && !i;
        return (
          o.useEffect(() => {
            let t = setTimeout(() => {
              a(X(e));
            }, 500);
            return () => clearTimeout(t);
          }, [e]),
          o.useEffect(() => {
            Math.random() > 0.99 &&
              (0, I.unlockAchievement)(p.PoggermodeAchievementId.VISITOR_100);
          }, []),
          (0, r.jsxs)(r.Fragment, {
            children: [
              (0, r.jsx)(_.default, {
                className: v.slideAnimator,
                step: e,
                direction: s,
                children: Q(e, t, l),
              }),
              (0, r.jsx)("div", {
                className: d
                  ? v.enableAnimationOverlayVisible
                  : v.enableAnimationOverlayHidden,
                children: (0, r.jsx)(f.default, {
                  className: v.enableAnimation,
                  importData: W,
                  shouldAnimate: d,
                  autoplay: !1,
                  resetOnPlay: !0,
                  loop: !1,
                  onComplete: () => l(!1),
                }),
              }),
            ],
          })
        );
      }
    },
    250024: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return _;
          },
        });
      var a = s("37983"),
        n = s("884691"),
        l = s("446674"),
        i = s("669491"),
        r = s("77078"),
        o = s("137215"),
        d = s("300113"),
        u = s("449008"),
        c = s("429464"),
        S = s("106413"),
        E = s("653208"),
        T = s("782340"),
        f = s("544565");
      function _(e) {
        let { onBackClick: t } = e,
          s = (0, l.useStateFromStores)([c.default], () =>
            c.default.getAllUnlockedAchievements()
          ),
          _ = n.useMemo(() => {
            let e = Object.values(s);
            return e.sort((e, t) => t.dateUnlocked - e.dateUnlocked);
          }, [s]),
          m = n.useMemo(
            () =>
              Object.values(S.ACHIEVEMENT_LIST)
                .filter(u.isNotNullish)
                .filter(e => null == s[e.id])
                .sort((e, t) => e.rarity - t.rarity),
            [s]
          );
        return (0, a.jsxs)(a.Fragment, {
          children: [
            (0, a.jsx)(r.FormSection, {
              children: (0, a.jsxs)(r.Clickable, {
                onClick: t,
                className: f.backContainer,
                children: [
                  (0, a.jsx)(o.default, {
                    direction: o.default.Directions.LEFT,
                    className: f.icon,
                  }),
                  (0, a.jsx)(r.Text, {
                    variant: "text-lg/normal",
                    color: "text-normal",
                    children: T.default.Messages.BACK,
                  }),
                ],
              }),
            }),
            (0, a.jsxs)("div", {
              className: f.headerContainer,
              children: [
                (0, a.jsxs)("div", {
                  className: f.headerTextContainer,
                  children: [
                    (0, a.jsx)(r.Heading, {
                      variant: "heading-lg/extrabold",
                      color: "header-primary",
                      children: T.default.Messages.POGGERMODE_ACHIEVEMENT_TITLE,
                    }),
                    (0, a.jsx)(r.Text, {
                      variant: "text-md/normal",
                      color: "header-secondary",
                      children:
                        T.default.Messages.POGGERMODE_ACHIEVEMENT_DESCRIPTION,
                    }),
                  ],
                }),
                (0, a.jsx)("div", {
                  className: f.headerIcon,
                  children: (0, a.jsx)(d.default, {
                    color: i.default.unsafe_rawColors.ORANGE_345.css,
                    width: 40,
                    height: 40,
                  }),
                }),
              ],
            }),
            _.length > 0 &&
              (0, a.jsx)(r.FormSection, {
                className: f.divider,
                children: (0, a.jsx)("div", {
                  className: f.achievementGrid,
                  children: _.map(e => {
                    let { achievementId: t, dateUnlocked: s } = e;
                    return (0, a.jsx)(
                      E.default,
                      { achievementId: t, dateUnlocked: s },
                      t
                    );
                  }),
                }),
              }),
            m.length > 0 &&
              (0, a.jsxs)(r.FormSection, {
                className: f.divider,
                children: [
                  (0, a.jsx)("div", {
                    className: f.headerTextContainer,
                    children: (0, a.jsx)(r.Text, {
                      variant: "text-md/bold",
                      color: "header-secondary",
                      children:
                        T.default.Messages.POGGERMODE_ACHIEVEMENT_LOCKED_TITLE,
                    }),
                  }),
                  (0, a.jsx)("div", {
                    className: f.achievementGrid,
                    children: m.map(e =>
                      (0, a.jsx)(E.default, { achievementId: e.id }, e.id)
                    ),
                  }),
                ],
              }),
            (0, a.jsx)(r.FormSection, {
              className: f.divider,
              children: (0, a.jsx)("div", { className: f.bottomPadding }),
            }),
          ],
        });
      }
    },
    35188: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return a;
          },
        });
      var a = (0, s("862205").createExperiment)({
        kind: "user",
        id: "2022-12_localized_pricing_poland_notice",
        label: "Localized Pricing Poland Notice",
        defaultConfig: { enabled: !1 },
        treatments: [
          { id: 1, label: "Enable Poland Notice", config: { enabled: !0 } },
        ],
      });
    },
    391533: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return a;
          },
        });
      var a = (0, s("862205").createExperiment)({
        kind: "user",
        id: "2023-05_localized_pricing_turkey_notice",
        label: "Localized Pricing Turkey Notice",
        defaultConfig: { enabled: !1 },
        treatments: [
          { id: 1, label: "Enable Turkey Notice", config: { enabled: !0 } },
        ],
      });
    },
    285471: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          updateClientPremiumTypeOverride: function () {
            return n;
          },
        });
      var a = s("913144");
      let n = (e, t) => {
        a.default.dispatch({
          type: "SET_PREMIUM_TYPE_OVERRIDE",
          premiumType: e,
        }),
          a.default.dispatch({ type: "UPDATE_CLIENT_PREMIUM_TYPE", user: t });
      };
    },
    388817: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return l;
          },
        });
      var a = s("862205");
      let n = (0, a.createExperiment)({
        kind: "user",
        id: "2024-01_expanded_gift_entry_points_gift_inventory",
        label: "Expanded Gift Entry Points - Gift Inventory",
        defaultConfig: { enabled: !1 },
        treatments: [
          {
            id: 1,
            label: "Show Gift Entry Point in Gift Inventory",
            config: { enabled: !0 },
          },
        ],
      });
      var l = n;
    },
    921149: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          useIsPrepaidPaymentPastDue: function () {
            return S;
          },
        });
      var a = s("866227"),
        n = s.n(a),
        l = s("446674"),
        i = s("357957"),
        r = s("10514"),
        o = s("521012"),
        d = s("719923"),
        u = s("49111"),
        c = s("843455");
      function S() {
        let e = (0, l.useStateFromStores)([o.default], () =>
            o.default.getPremiumTypeSubscription()
          ),
          t = (0, l.useStateFromStores)([r.default], () =>
            null != e && null != e.planIdFromItems
              ? r.default.get(null == e ? void 0 : e.planIdFromItems)
              : null
          ),
          s = (0, l.useStateFromStores)(
            [i.default],
            () =>
              null != e && null != e.paymentSourceId
                ? i.default.getPaymentSource(e.paymentSourceId)
                : null,
            [e]
          ),
          a = null != s && c.PREPAID_PAYMENT_SOURCES.has(s.type),
          S =
            (null == e ? void 0 : e.status) ===
            u.SubscriptionStatusTypes.PAST_DUE
              ? n().diff(n(e.currentPeriodStart), "days")
              : 0;
        return (
          !!(
            null != e &&
            null != t &&
            (0, d.isPremiumBaseSubscriptionPlan)(t.id)
          ) &&
          a &&
          S >= 0 &&
          S <= (0, d.getBillingGracePeriodDays)(e) &&
          e.status === u.SubscriptionStatusTypes.PAST_DUE &&
          !e.isPurchasedExternally
        );
      }
    },
    170788: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return o;
          },
        });
      var a = s("884691"),
        n = s("866227"),
        l = s.n(n),
        i = s("888400");
      let r = l.duration(30, "days");
      function o(e, t) {
        return a.useMemo(
          () =>
            (0, i.dateFormat)(
              t
                ? null != e.outboundRedemptionEndDate
                  ? l(e.outboundRedemptionEndDate)
                  : l(e.endDate).add(r)
                : l(e.endDate),
              "LL"
            ),
          [e, t]
        );
      }
    },
    541840: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return S;
          },
        }),
        s("222007");
      var a = s("37983"),
        n = s("884691"),
        l = s("77078"),
        i = s("913801"),
        r = s("778695"),
        o = s("476765"),
        d = s("44678"),
        u = s("782340"),
        c = s("76495"),
        S = function (e) {
          let {
              onClose: t,
              onClaim: s,
              code: S,
              outboundPromotion: E,
              transitionState: T,
            } = e,
            [f, _] = n.useState(null),
            m = (0, o.useUID)();
          return (
            n.useEffect(() => {
              null == S &&
                (0, d.claimOutboundPromotion)(E.id)
                  .then(e => s(e))
                  .catch(e => {
                    var t;
                    return _(
                      null == e
                        ? void 0
                        : null === (t = e.body) || void 0 === t
                          ? void 0
                          : t.code
                    );
                  });
            }, [S, E.id, s]),
            (0, a.jsx)(l.ModalRoot, {
              transitionState: T,
              "aria-labelledby": m,
              children:
                null != f
                  ? (0, a.jsx)(r.DropsModalClaimErrorBody, {
                      onClose: t,
                      errorCode: f,
                    })
                  : null == S
                    ? (0, a.jsx)(l.ModalContent, {
                        children: (0, a.jsx)(l.Spinner, {
                          className: c.loading,
                        }),
                      })
                    : (0, a.jsxs)(a.Fragment, {
                        children: [
                          (0, a.jsxs)(l.ModalHeader, {
                            separator: !1,
                            className: c.headerContainer,
                            children: [
                              (0, a.jsx)("div", { className: c.art }),
                              (0, a.jsx)(l.Heading, {
                                variant: "heading-xl/semibold",
                                children:
                                  u.default.Messages
                                    .OUTBOUND_PROMOTION_REDEMPTION_MODAL_TITLE,
                              }),
                            ],
                          }),
                          (0, a.jsxs)(l.ModalContent, {
                            children: [
                              (0, a.jsx)(l.Text, {
                                variant: "text-md/normal",
                                className: c.bodyText,
                                children: E.outboundRedemptionModalBody,
                              }),
                              (0, a.jsx)(l.FormDivider, {
                                className: c.formDivider,
                              }),
                              (0, a.jsxs)(l.FormSection, {
                                title: u.default.Messages.REDEMPTION_CODE,
                                className: c.formSection,
                                children: [
                                  (0, a.jsx)(i.default, {
                                    value: S,
                                    buttonColor: l.Button.Colors.BRAND,
                                    buttonLook: l.Button.Looks.FILLED,
                                    delay: 1e3,
                                    inputClassName: c.textInput,
                                  }),
                                  (0, a.jsx)(l.Text, {
                                    variant: "text-xs/normal",
                                    color: "header-secondary",
                                    className: c.confirmationText,
                                    children:
                                      u.default.Messages
                                        .OUTBOUND_PROMOTION_CODE_CONFIRMATION_EMAIL,
                                  }),
                                ],
                              }),
                            ],
                          }),
                          (0, a.jsxs)(l.ModalFooter, {
                            children: [
                              (0, a.jsx)(l.Button, {
                                color: l.Button.Colors.BRAND,
                                onClick: () => {
                                  let e = (0,
                                  d.getOutboundPromotionRedemptionUrl)(S, E);
                                  window.open(e, "_blank");
                                },
                                children: u.default.Messages.REDEEM,
                              }),
                              (0, a.jsx)(l.Button, {
                                onClick: t,
                                look: l.Button.Looks.LINK,
                                color: c.maybeLaterButton,
                                children: u.default.Messages.MAYBE_LATER,
                              }),
                            ],
                          }),
                        ],
                      }),
            })
          );
        };
    },
    279171: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          useShouldShowLegacyPricingNotice: function () {
            return _;
          },
          default: function () {
            return m;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("414456"),
        l = s.n(n),
        i = s("627445"),
        r = s.n(i),
        o = s("423487"),
        d = s("701909"),
        u = s("35188"),
        c = s("391533"),
        S = s("296253"),
        E = s("49111"),
        T = s("782340"),
        f = s("816461");
      function _() {
        let e = (0, S.default)(),
          { enabled: t } = u.default.useExperiment(
            { location: "5ebfcf_1" },
            { autoTrackExposure: !1 }
          ),
          { enabled: s } = c.default.useExperiment(
            { location: "5ebfcf_2" },
            { autoTrackExposure: !1 }
          );
        return null != e && ("PL" === e ? t : "TR" === e && s);
      }
      var m = e => {
        var t, s;
        let { fromBoostCancelModal: n, className: i } = e,
          u = (0, S.default)(),
          c = _();
        if (!c) return null;
        return (
          r(null != u, "Subscription billing country should not be null"),
          (0, a.jsxs)("div", {
            className: l(f.noticeRoot, i),
            children: [
              (0, a.jsx)("div", {
                className: f.iconContainer,
                children: (0, a.jsx)(o.default, { className: f.infoIcon }),
              }),
              (0, a.jsx)("div", {
                className: f.text,
                children: ((t = u),
                (s = n),
                "PL" === t
                  ? s
                    ? T.default.Messages
                        .LOCALIZED_PRICING_PLN_LEGACY_PRICING_BOOST_WARNING
                    : T.default.Messages
                        .LOCALIZED_PRICING_PLN_LEGACY_PRICING_WARNING
                  : "TR" === t
                    ? s
                      ? T.default.Messages
                          .LOCALIZED_PRICING_TRY_LEGACY_PRICING_BOOST_WARNING
                      : T.default.Messages
                          .LOCALIZED_PRICING_TRY_LEGACY_PRICING_WARNING
                    : s
                      ? T.default.Messages
                          .LOCALIZED_PRICING_LEGACY_PRICING_BOOST_WARNING
                      : T.default.Messages
                          .LOCALIZED_PRICING_LEGACY_PRICING_WARNING).format({
                  helpCenterLink: d.default.getArticleURL(
                    E.HelpdeskArticles.LOCALIZED_PRICING
                  ),
                }),
              }),
            ],
          })
        );
      };
    },
    743053: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return q;
          },
        }),
        s("222007");
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("866227"),
        o = s.n(r),
        d = s("446674"),
        u = s("235855"),
        c = s("819855"),
        S = s("77078"),
        E = s("913144"),
        T = s("850068"),
        f = s("54239"),
        _ = s("775433"),
        m = s("79112"),
        g = s("642950"),
        h = s("875212"),
        N = s("841098"),
        I = s("812204"),
        p = s("685665"),
        C = s("619935"),
        A = s("308592"),
        O = s("245187"),
        x = s("393414"),
        M = s("102985"),
        R = s("521012"),
        D = s("90404"),
        v = s("41250"),
        L = s("599110"),
        P = s("719923"),
        j = s("182650"),
        b = s("53253"),
        U = s("300962"),
        y = s("959905"),
        B = s("635956"),
        F = s("400307"),
        G = s("992118"),
        k = s("525505"),
        H = s("646718"),
        w = s("49111"),
        V = s("782340"),
        Y = s("828339"),
        K = s("12483"),
        W = s("391590"),
        z = s("435021");
      function Q() {
        var e, t;
        let s = (0, d.useStateFromStores)([R.default], () =>
            R.default.getPremiumTypeSubscription()
          ),
          n = (0, j.useHasDiscountApplied)(),
          l = (0, j.useActiveDiscountInfo)(),
          r = (0, N.default)(),
          { enabled: u } = (0, U.default)();
        if (null == s || null == s.planIdFromItems) return null;
        let E = null != s.trialId,
          T = n || E,
          _ = null != s.trialEndsAt ? o(s.trialEndsAt).diff(o(), "d") : 0,
          g = H.SubscriptionPlanInfo[s.planIdFromItems],
          h = P.default.formatPriceString(
            P.default.getDefaultPrice(g.id),
            g.interval
          );
        return (0, a.jsxs)("div", {
          className: i(Y.tierCard, { [Y.withTier2Rim]: T }),
          children: [
            (0, a.jsxs)("div", {
              className: Y.tierInfo,
              children: [
                (0, a.jsx)(v.default, { className: i(Y.tierTitle) }),
                T
                  ? (0, a.jsxs)(a.Fragment, {
                      children: [
                        (0, a.jsx)(F.PremiumPillWithSparkles, {
                          text: E
                            ? V.default.Messages
                                .PREMIUM_TIER_CARD_TRIAL_ACTIVATED
                            : V.default.Messages
                                .PREMIUM_TIER_CARD_DISCOUNT_APPLIED,
                          className: Y.topRimPill,
                          colorOptions: (0, c.isThemeDark)(r)
                            ? F.PremiumPillAndSparklesColorOptions
                                .PREMIUM_TIER_2_WHITE_FILL
                            : F.PremiumPillAndSparklesColorOptions
                                .PREMIUM_TIER_2_OLD_GRADIENT_FILL,
                        }),
                        (0, a.jsx)("div", { className: Y.rimGlowTier2 }),
                        (0, a.jsx)(S.Heading, {
                          variant: "heading-md/normal",
                          color: "always-white",
                          className: Y.trialHeader,
                          children: E
                            ? V.default.Messages.PREMIUM_TIER_CARD_TRIAL_HEADER_AFTER_REDEMPTION.format(
                                { remainingTime: _, price: h }
                              )
                            : V.default.Messages.PREMIUM_TIER_CARD_DISCOUNT_HEADER_AFTER_REDEMPTION_GENERIC.format(
                                {
                                  percent:
                                    null !==
                                      (e = null == l ? void 0 : l.percentage) &&
                                    void 0 !== e
                                      ? e
                                      : H.DISCOUNT_PERCENTAGE_FALLBACK,
                                  regularPrice: h,
                                  numMonths:
                                    null !==
                                      (t = null == l ? void 0 : l.duration) &&
                                    void 0 !== t
                                      ? t
                                      : H.DISCOUNT_DURATION_FALLBACK,
                                }
                              ),
                        }),
                      ],
                    })
                  : (0, a.jsx)(G.default, {
                      subscriptionTier: H.PremiumSubscriptionSKUs.TIER_2,
                      interval: g.interval,
                    }),
                (0, a.jsx)(F.Tier2FeatureItems, {}),
                u
                  ? null
                  : (0, a.jsx)(S.Button, {
                      className: Y.tierCardButton,
                      color: S.Button.Colors.WHITE,
                      onClick: () => {
                        L.default.track(
                          w.AnalyticEvents.PREMIUM_SETTINGS_INTERACTED,
                          {
                            cta_type: "to_premium_home_button",
                            target: "premium home page",
                          }
                        ),
                          (0, f.popLayer)(),
                          (0, x.transitionTo)(w.Routes.APPLICATION_STORE);
                      },
                      children: (0, a.jsx)(S.Text, {
                        className: Y.tierCardButtonCTA,
                        variant: "text-sm/medium",
                        children:
                          V.default.Messages
                            .PREMIUM_SETTINGS_NAVIGATE_TO_HOME_CTA_V2,
                      }),
                    }),
                (0, a.jsx)(S.Button, {
                  className: Y.managePlanButton,
                  look: S.Button.Looks.OUTLINED,
                  color: S.Button.Colors.WHITE,
                  onClick: () => {
                    L.default.track(
                      w.AnalyticEvents.PREMIUM_SETTINGS_INTERACTED,
                      {
                        cta_type: "to_subscriptions_button",
                        target: "subscriptions settings",
                      }
                    ),
                      m.default.open(w.UserSettingsSections.SUBSCRIPTIONS);
                  },
                  children: (0, a.jsx)(S.Text, {
                    className: Y.managePlanButtonCTA,
                    variant: "text-sm/medium",
                    color: "always-white",
                    children:
                      V.default.Messages
                        .PREMIUM_SETTINGS_NATIGATE_TO_SUBSCRIPTIONS_CTA,
                  }),
                }),
              ],
            }),
            (0, a.jsx)("div", {
              className: Y.tierImage,
              children: (0, a.jsx)("img", {
                className: Y.tierImage,
                alt: "",
                src: K,
              }),
            }),
          ],
        });
      }
      function X() {
        let e = (0, b.useIsSeasonalGiftingActive)(),
          { enabled: t } = b.SeasonalGiftingMarketingExperiment.useExperiment(
            { location: "GiftNitro" },
            { autoTrackExposure: e }
          ),
          s = t && e;
        return (0, a.jsxs)("div", {
          className: i(Y.giftCard, { [Y.giftCardSeasonal]: s }),
          children: [
            s &&
              (0, a.jsx)("img", {
                className: Y.seasonalGiftImage,
                alt: "",
                src: W,
              }),
            (0, a.jsx)("img", {
              className: Y.giftImage,
              style: { visibility: s ? "hidden" : "visible" },
              alt: "",
              src: z,
            }),
            (0, a.jsxs)("div", {
              className: Y.giftInfo,
              children: [
                (0, a.jsx)(S.Heading, {
                  className: i(Y.giftTitle, { [Y.seasonalColor]: s }),
                  variant: "heading-xl/extrabold",
                  children: s
                    ? V.default.Messages
                        .PREMIUM_TRIAL_MARKETING_EXPERIMENT_SEASONAL_GIFT_HEADING
                    : V.default.Messages
                        .PREMIUM_TRIAL_MARKETING_EXPERIMENT_GIFT_HEADING,
                }),
                (0, a.jsx)(S.Text, {
                  className: i(Y.giftText, { [Y.seasonalColor]: s }),
                  variant: "text-sm/normal",
                  children: s
                    ? V.default.Messages
                        .PREMIUM_TRIAL_MARKETING_EXPERIMENT_SEASONAL_GIFT_BODY
                    : V.default.Messages
                        .PREMIUM_TRIAL_MARKETING_EXPERIMENT_GIFT_BODY,
                }),
                (0, a.jsx)(B.default, {
                  isGift: !0,
                  className: i(
                    Y.giftCardButton,
                    s ? Y.seasonalColor : Y.giftCardButtonColor
                  ),
                  look: S.Button.Looks.OUTLINED,
                  buttonText: V.default.Messages.GIFT_NITRO,
                  buttonTextClassName: Y.giftButtonCTA,
                  color: S.Button.Colors.CUSTOM,
                  onClick: () => {
                    L.default.track(
                      w.AnalyticEvents.PREMIUM_SETTINGS_INTERACTED,
                      { cta_type: "gifting_button", target: "payment modal" }
                    );
                  },
                }),
              ],
            }),
          ],
        });
      }
      var q = function () {
        let e = (0, C.useBlockedPaymentsConfig)(),
          { AnalyticsLocationProvider: t, analyticsLocations: s } = (0,
          p.default)(I.default.PREMIUM_SETTINGS),
          l = (0, d.useStateFromStores)([R.default], () =>
            R.default.getPremiumTypeSubscription()
          ),
          i = (0, d.useStateFromStores)([R.default], () =>
            R.default.hasFetchedSubscriptions()
          ),
          r = (0, A.useSubscriptionPlansLoaded)(),
          [o, c] = n.useState(!0),
          f = (0, y.useLocalizedPromoQuery)(),
          m = null == f ? void 0 : f.countryCode,
          N = (0, d.useStateFromStores)([M.default], () => M.default.enabled),
          x = "PremiumManagementSettings";
        (0, h.useTriggerDebuggingAA)({
          location: x + " auto on",
          autoTrackExposure: !0,
        }),
          (0, h.useTriggerDebuggingAA)({
            location: x + " auto off",
            autoTrackExposure: !1,
          }),
          n.useEffect(() => {
            E.default.wait(async () => {
              !N &&
                !e &&
                (await Promise.all([
                  T.fetchSubscriptions(),
                  T.fetchPaymentSources(),
                  (0, _.fetchPremiumSubscriptionPlans)(
                    m,
                    null,
                    w.RevenueSurfaces.DISCOVERY
                  ),
                ])),
                c(!1);
            });
          }, [m, N, e]);
        let [v, P] = n.useState(!1);
        if (N) return (0, a.jsx)(g.default, {});
        if (e) return (0, a.jsx)(O.BlockedPaymentsContentSettings, {});
        if ((!i || null == l || !r) && !o)
          return (0, a.jsx)(D.default, {
            title: V.default.Messages.REDIRECTED_CALLBACK_ERROR,
            note: null,
          });
        if (!i || null == l || !r || o) return (0, a.jsx)(S.Spinner, {});
        let j = null != l.trialId;
        return (0, a.jsx)(t, {
          children: (0, a.jsxs)(a.Fragment, {
            children: [
              (0, a.jsxs)("div", {
                className: Y.container,
                children: [
                  (0, a.jsx)(Q, {}),
                  (0, a.jsx)(X, {}),
                  (0, a.jsx)(k.default, {
                    className: Y.planComparisonTable,
                    hideCTAs: !0,
                    headingOverride:
                      V.default.Messages
                        .PREMIUM_COMPARISON_TABLE_WHAT_YOU_HAVE_GOT_TITLE,
                    hidePill: !j,
                    selectedPlanColumnClassName:
                      Y.tier2PlanComparisonTableBackground,
                    selectedPlanTier: H.PremiumTypes.TIER_2,
                  }),
                ],
              }),
              (0, a.jsx)(u.default, {
                onChange: e => {
                  e &&
                    !v &&
                    (L.default.track(
                      w.AnalyticEvents.PREMIUM_MARKETING_SURFACE_REACHED_BOTTOM,
                      { location_stack: s }
                    ),
                    P(!0));
                },
                children: (0, a.jsx)("div", {
                  className: Y.bottomOfPageVisibilitySensor,
                }),
              }),
            ],
          }),
        });
      };
    },
    646105: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return N;
          },
        }),
        s("222007");
      var a = s("37983");
      s("884691");
      var n = s("414456"),
        l = s.n(n),
        i = s("917351"),
        r = s.n(i),
        o = s("446674"),
        d = s("77078"),
        u = s("697218"),
        c = s("10514"),
        S = s("521012"),
        E = s("216422"),
        T = s("719923"),
        f = s("541554"),
        _ = s("646718"),
        m = s("782340"),
        g = s("301004");
      function h(e) {
        let { user: t, planId: s, count: n, userPremiumSubscription: i } = e,
          [r, u] = (0, o.useStateFromStoresArray)([c.default], () => [
            c.default.get(s),
            null != i ? c.default.get(i.planId) : null,
          ]);
        if (
          null == r ||
          T.default.getInterval(s).intervalType !==
            _.SubscriptionIntervalTypes.MONTH
        )
          return null;
        let S = null != u ? u.skuId : null,
          f = r.skuId === S,
          h = T.default.getDisplayName(s);
        return (0, a.jsxs)("div", {
          className: g.accountCreditRow,
          children: [
            (0, a.jsx)("div", {
              className: l({
                [g.iconBackgroundTier0]:
                  r.skuId === _.PremiumSubscriptionSKUs.TIER_0,
                [g.iconBackgroundTier1]:
                  r.skuId === _.PremiumSubscriptionSKUs.TIER_1,
                [g.iconBackgroundTier2]:
                  r.skuId === _.PremiumSubscriptionSKUs.TIER_2,
              }),
              children: (0, a.jsx)(E.default, { className: g.icon }),
            }),
            (0, a.jsxs)("div", {
              className: g.rowDetails,
              children: [
                (0, a.jsx)(d.Heading, {
                  variant: "heading-md/semibold",
                  children:
                    m.default.Messages.PREMIUM_SUBSCRIPTION_CREDIT.format({
                      planName: h,
                    }),
                }),
                t.hasFreePremium()
                  ? null
                  : (0, a.jsx)(d.Heading, {
                      className: g.rowApplied,
                      variant: "heading-sm/semibold",
                      color: "header-secondary",
                      children:
                        f && null != i
                          ? m.default.Messages.PREMIUM_SUBSCRIPTION_CREDIT_APPLIED_ON.format(
                              { date: i.currentPeriodEnd }
                            )
                          : m.default.Messages.PREMIUM_SUBSCRIPTION_CREDIT_APPLIED_MISMATCHED_PLAN.format(
                              { planName: h }
                            ),
                    }),
              ],
            }),
            (0, a.jsx)(d.Text, {
              className: g.rowCreditCount,
              variant: "text-md/semibold",
              children:
                m.default.Messages.PREMIUM_SUBSCRIPTION_CREDIT_COUNT_MONTHS.format(
                  { count: n }
                ),
            }),
          ],
        });
      }
      var N = function (e) {
        let { className: t, entitlements: s } = e,
          n = r(Array.from(s))
            .filter(e => {
              let { subscriptionPlanId: t, parentId: s, consumed: a } = e;
              return null != t && null != s && !a;
            })
            .groupBy(e => e.subscriptionPlanId)
            .value(),
          i = (0, o.useStateFromStores)([S.default], () =>
            S.default.getPremiumSubscription()
          ),
          c = (0, o.useStateFromStores)(
            [S.default],
            () => null == S.default.getPremiumTypeSubscription()
          ),
          E = Object.keys(n).some(
            e => e === _.SubscriptionPlans.PREMIUM_MONTH_TIER_1
          ),
          T = (0, o.useStateFromStores)([u.default], () =>
            u.default.getCurrentUser()
          );
        return null == T
          ? null
          : (0, a.jsxs)("div", {
              children: [
                (0, a.jsx)("div", {
                  className: l(t, g.premiumSubscriptionAccountCredit),
                  children: Object.keys(n).map(e =>
                    (0, a.jsx)(
                      h,
                      {
                        planId: e,
                        count: n[e].length,
                        userPremiumSubscription: i,
                        user: T,
                      },
                      e
                    )
                  ),
                }),
                E &&
                  c &&
                  (0, a.jsxs)("div", {
                    children: [
                      (0, a.jsx)(d.Text, {
                        className: g.tier1AccountCreditHeader,
                        variant: "text-md/normal",
                        children:
                          m.default.Messages
                            .PREMIUM_TIER_1_ACCOUNT_CREDIT_HEADER,
                      }),
                      (0, a.jsx)(f.Tier1AccountCreditBanner, {}),
                    ],
                  }),
              ],
            });
      };
    },
    995362: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return g;
          },
        }),
        s("222007");
      var a = s("37983");
      s("884691");
      var n = s("627445"),
        l = s.n(n),
        i = s("77078"),
        r = s("812204"),
        o = s("685665"),
        d = s("10514"),
        u = s("719923"),
        c = s("153160"),
        S = s("809071"),
        E = s("646718"),
        T = s("49111"),
        f = s("782340"),
        _ = s("423525");
      function m(e) {
        let { subscription: t, withOverheadSeparator: s } = e,
          { analyticsLocations: n } = (0, o.default)(),
          [m] = (0, S.useSubscriptionInvoicePreview)({
            subscriptionId: t.id,
            renewal: !0,
            analyticsLocations: n,
            analyticsLocation:
              r.default.PREMIUM_SUBSCRIPTION_FINE_PRINT_CONTENT,
          });
        if (null == m) return null;
        let g = s ? _.finePrintWithOverheadSeparator : _.finePrint,
          h = m.invoiceItems.find(e => {
            let { subscriptionPlanId: t } = e;
            return (0, u.isPremiumBaseSubscriptionPlan)(t);
          });
        if (null == h) return null;
        let N = h.subscriptionPlanId,
          I = d.default.get(N);
        l(null != I, "Missing plan");
        let p = (0, c.formatPrice)(m.total, m.currency),
          C = "";
        return (
          I.interval === E.SubscriptionIntervalTypes.YEAR
            ? (C =
                f.default.Messages.BILLING_PAYMENT_PREMIUM_TERMS_LEGALESE_YEARLY.format(
                  {
                    price: p,
                    termsUrl: T.MarketingURLs.TERMS,
                    paidURL: T.MarketingURLs.PAID_TERMS,
                    privacyUrl: T.MarketingURLs.PRIVACY,
                  }
                ))
            : I.interval === E.SubscriptionIntervalTypes.MONTH &&
              (C =
                1 === I.intervalCount
                  ? f.default.Messages.BILLING_PAYMENT_PREMIUM_TERMS_LEGALESE_MONTHLY.format(
                      {
                        price: p,
                        termsUrl: T.MarketingURLs.TERMS,
                        paidURL: T.MarketingURLs.PAID_TERMS,
                        privacyUrl: T.MarketingURLs.PRIVACY,
                      }
                    )
                  : f.default.Messages.BILLING_PAYMENT_PREMIUM_TERMS_LEGALESE_MULTI_MONTH.format(
                      {
                        price: p,
                        termsUrl: T.MarketingURLs.TERMS,
                        paidURL: T.MarketingURLs.PAID_TERMS,
                        privacyUrl: T.MarketingURLs.PRIVACY,
                        intervalCount: I.intervalCount,
                      }
                    )),
          (0, a.jsx)(i.Text, {
            color: "text-muted",
            className: g,
            variant: "text-xs/normal",
            children: C,
          })
        );
      }
      function g(e) {
        let { subscription: t, withOverheadSeparator: s } = e;
        return t.status === T.SubscriptionStatusTypes.CANCELED ||
          t.isPurchasedExternally
          ? null
          : (0, a.jsx)(m, { subscription: t, withOverheadSeparator: s });
      }
    },
    580758: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return w;
          },
        });
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("446674"),
        o = s("77078"),
        d = s("913144"),
        u = s("850068"),
        c = s("583367"),
        S = s("316718"),
        E = s("775433"),
        T = s("79112"),
        f = s("642950"),
        _ = s("218989"),
        m = s("308592"),
        g = s("424876"),
        h = s("699260"),
        N = s("95454"),
        I = s("230272"),
        p = s("102985"),
        C = s("26092"),
        A = s("160299"),
        O = s("357957"),
        x = s("521012"),
        M = s("437712"),
        R = s("145131"),
        D = s("953109"),
        v = s("599110"),
        L = s("719923"),
        P = s("646105"),
        j = s("995362"),
        b = s("58820"),
        U = s("646718"),
        y = s("49111"),
        B = s("397336"),
        F = s("782340"),
        G = s("575172");
      function k() {
        return (0, a.jsx)(o.Card, {
          className: G.noItemsCard,
          type: o.Card.Types.CUSTOM,
          children: (0, a.jsxs)(R.default, {
            align: R.default.Align.CENTER,
            children: [
              (0, a.jsx)(D.default, {
                game: null,
                size: D.default.Sizes.SMALL,
                className: G.noItemsIcon,
              }),
              (0, a.jsx)("span", {
                className: G.cardText,
                children:
                  F.default.Messages.USER_SETTINGS_NO_SUBSCRIPTION_CREDIT,
              }),
            ],
          }),
        });
      }
      function H() {
        let e = (0, r.useStateFromStores)([M.default], () =>
          M.default.getForApplication(U.PREMIUM_SUBSCRIPTION_APPLICATION)
        );
        return (
          n.useEffect(() => {
            (0, S.fetchUserEntitlementsForApplication)(
              U.PREMIUM_SUBSCRIPTION_APPLICATION
            );
          }, []),
          (0, a.jsxs)("section", {
            className: G.sectionAccountCredit,
            children: [
              (0, a.jsx)(o.FormTitle, {
                className: G.accountCreditTitle,
                tag: o.FormTitleTags.H1,
                children: F.default.Messages.BILLING_SUBSCRIPTION_CREDIT,
              }),
              (0, a.jsx)("p", {
                className: G.accountCreditDescription,
                children: F.default.Messages.BILLING_ACCOUNT_CREDIT_DESCRIPTION,
              }),
              null != e && L.default.hasAccountCredit(e)
                ? (0, a.jsx)(P.default, {
                    className: G.accountCredit,
                    entitlements: e,
                  })
                : (0, a.jsx)(k, {}),
            ],
          })
        );
      }
      var w = function () {
        let e = (0, r.useStateFromStores)([x.default], () =>
            x.default.getPremiumTypeSubscription()
          ),
          t = (0, _.default)({
            subscriptionFilter: e =>
              b.VIEWABLE_SUBSCRIPTION_STATUSES.has(e.status),
          }),
          s = t.length > 1,
          l = (0, r.useStateFromStores)(
            [O.default],
            () =>
              null != e && null != e.paymentSourceId
                ? O.default.getPaymentSource(e.paymentSourceId)
                : null,
            [e]
          ),
          S = (0, r.useStateFromStores)([x.default], () =>
            x.default.hasFetchedSubscriptions()
          ),
          M = (0, r.useStateFromStores)([A.default], () => A.default.isBusy),
          R = (0, m.useSubscriptionPlansLoaded)(),
          D = (0, r.useStateFromStores)([C.default], () =>
            C.default.getSubsection()
          );
        return (n.useEffect(
          () => (
            d.default.wait(() => {
              (0, E.fetchPremiumSubscriptionPlans)(),
                u.fetchSubscriptions(),
                (0, c.fetchGuildBoostSlots)(),
                u.fetchPaymentSources();
            }),
            function () {
              T.default.clearSubsection();
            }
          ),
          []
        ),
        p.default.enabled)
          ? (0, a.jsx)(f.default, {})
          : S && R
            ? D === B.ROLE_SUBSCRIPTION_SUBSECTION
              ? (0, a.jsx)(h.default, {
                  onGoBack: () => T.default.clearSubsection(),
                })
              : D === B.APPLICATION_SUBSCRIPTION_SUBSECTION
                ? (0, a.jsx)(I.default, {
                    onGoBack: () => T.default.clearSubsection(),
                  })
                : (0, a.jsx)("div", {
                    className: G.container,
                    children: (0, a.jsxs)("div", {
                      className: G.content,
                      children: [
                        s
                          ? (0, a.jsx)(b.DuplicateSubscriptionsBanner, {})
                          : null,
                        null != e
                          ? (0, a.jsx)(b.default, {
                              className: G.subscriptionDetails,
                              subscription: e,
                              paymentSource: l,
                              busy: M,
                              subscriptions: t,
                            })
                          : (0, a.jsx)(b.SubscriptionDetailsEmpty, {
                              className: G.subscriptionDetails,
                            }),
                        (0, a.jsx)(g.default, {
                          onClickManageSubscription: () =>
                            T.default.setSection(
                              y.UserSettingsSections.SUBSCRIPTIONS,
                              B.ROLE_SUBSCRIPTION_SUBSECTION
                            ),
                        }),
                        (0, a.jsx)(N.default, {
                          onClickManageSubscription: () => {
                            T.default.setSection(
                              y.UserSettingsSections.SUBSCRIPTIONS,
                              B.APPLICATION_SUBSCRIPTION_SUBSECTION
                            ),
                              v.default.track(
                                y.AnalyticEvents
                                  .PREMIUM_APPLICATION_SUBSCRIPTION_MANAGE_CTA_CLICKED
                              );
                          },
                        }),
                        (0, a.jsx)(H, {}),
                        null != e
                          ? (0, a.jsx)(j.default, {
                              subscription: e,
                              withOverheadSeparator: !1,
                            })
                          : null,
                      ],
                    }),
                  })
            : (0, a.jsx)("div", {
                className: i(G.container, G.loading),
                children: (0, a.jsx)(o.Spinner, {}),
              });
      };
    },
    177998: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return r;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("77078"),
        l = s("782340"),
        i = s("32464"),
        r = e => {
          let { onClick: t } = e;
          return (0, a.jsx)(n.Anchor, {
            onClick: t,
            className: i.link,
            children: l.default.Messages.BACK,
          });
        };
    },
    661128: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          useUnsupportedExternalSubscriptionModalHandler: function () {
            return c;
          },
          useSubscriptionEntitlements: function () {
            return E;
          },
        });
      var a = s("884691"),
        n = s("446674"),
        l = s("404118"),
        i = s("10514"),
        r = s("437712"),
        o = s("719923"),
        d = s("843455"),
        u = s("782340");
      function c(e, t, s) {
        a.useEffect(() => {
          null != e &&
            e.isPurchasedExternally &&
            null != e.paymentGateway &&
            !s &&
            (l.default.show({
              title: u.default.Messages.BILLING_EXTERNAL_HEADER.format({
                paymentGatewayName:
                  d.PaymentGatewayToFriendlyName[e.paymentGateway],
              }),
              body: u.default.Messages.BILLING_EXTERNAL_MANAGE_ELSEWHERE.format(
                {
                  paymentGatewayName:
                    d.PaymentGatewayToFriendlyName[e.paymentGateway],
                  subscriptionManagementLink: (0,
                  o.getExternalSubscriptionMethodUrl)(
                    e.paymentGateway,
                    "SUBSCRIPTION_MANAGEMENT"
                  ),
                }
              ),
              confirmText: u.default.Messages.OKAY,
            }),
            t());
        }, [e]);
      }
      let S = [];
      function E(e, t) {
        let s = (0, n.useStateFromStores)([i.default], () =>
            null != e ? i.default.get(e) : null
          ),
          l = (0, n.useStateFromStores)([r.default], () => {
            var e;
            return null != s &&
              null !== (e = r.default.getForSku(s.skuId)) &&
              void 0 !== e
              ? e
              : S;
          }),
          d = a.useMemo(
            () =>
              Array.from(l).filter(e => {
                let { parentId: t, consumed: s } = e;
                return null != t && !s;
              }),
            [l]
          ),
          u =
            !t &&
            null != s &&
            null != d &&
            d.length >=
              o.default.getIntervalMonths(s.interval, s.intervalCount);
        return { hasEntitlements: u, entitlements: d };
      }
    },
    95454: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return m;
          },
        });
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("446674"),
        o = s("77078"),
        d = s("892843"),
        u = s("521012"),
        c = s("191814"),
        S = s("49111"),
        E = s("782340"),
        T = s("930985"),
        f = s("809432"),
        _ = s("757856");
      function m(e) {
        let { onClickManageSubscription: t } = e,
          s = (0, r.useStateFromStores)([u.default], () =>
            u.default.getSubscriptions()
          ),
          l = n.useMemo(
            () =>
              Object.values(null != s ? s : {}).filter(
                e =>
                  e.type === S.SubscriptionTypes.APPLICATION &&
                  e.status !== S.SubscriptionStatusTypes.ENDED
              ),
            [s]
          );
        return 0 === l.length
          ? null
          : (0, a.jsxs)("div", {
              className: T.container,
              children: [
                (0, a.jsx)(o.Heading, {
                  variant: "heading-md/semibold",
                  className: T.sectionTitle,
                  children:
                    E.default.Messages.APPLICATION_USER_SUBSCRIPTIONS_TITLE,
                }),
                (0, a.jsx)(c.default, { size: 4 }),
                (0, a.jsx)(o.Text, {
                  variant: "text-sm/normal",
                  className: T.sectionDescription,
                  children:
                    E.default.Messages
                      .APPLICATION_USER_SUBSCRIPTIONS_DESCRIPTION,
                }),
                (0, a.jsx)(c.default, { size: 24 }),
                (0, a.jsxs)("div", {
                  className: i(f.guildBoostingSubscriptionRow, T.card),
                  children: [
                    (0, a.jsx)("img", {
                      src: _,
                      alt: "",
                      className: T.bannerImage,
                    }),
                    (0, a.jsxs)("div", {
                      className: T.textContainer,
                      children: [
                        (0, a.jsx)(o.Heading, {
                          variant: "heading-xl/semibold",
                          className: T.header,
                          children:
                            E.default.Messages
                              .APPLICATION_USER_SUBSCRIPTIONS_TITLE,
                        }),
                        (0, a.jsx)(o.Text, {
                          variant: "text-md/normal",
                          className: T.description,
                          children:
                            E.default.Messages.APPLICATION_ACTIVE_USER_SUBSCRIPTIONS_DESCRIPTION.format(
                              { numSubscriptions: l.length }
                            ),
                        }),
                      ],
                    }),
                    (0, a.jsx)(d.default, {
                      color: o.Button.Colors.BRAND,
                      onClick: t,
                      children:
                        E.default.Messages
                          .APPLICATION_MANAGE_SUBSCRIPTIONS_BUTTON,
                    }),
                  ],
                }),
              ],
            });
      }
    },
    597097: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return F;
          },
        }),
        s("222007");
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("627445"),
        o = s.n(r),
        d = s("733724"),
        u = s("446674"),
        c = s("77078"),
        S = s("850068"),
        E = s("812204"),
        T = s("685665"),
        f = s("306073"),
        _ = s("430780"),
        m = s("809071"),
        g = s("690679"),
        h = s("388290"),
        N = s("357957"),
        I = s("476263"),
        p = s("555158"),
        C = s("876269"),
        A = s("191814"),
        O = s("476765"),
        x = s("837899"),
        M = s("68238"),
        R = s("956089"),
        D = s("129408"),
        v = s("167007"),
        L = s("457430"),
        P = s("49111"),
        j = s("782340"),
        b = s("440605");
      let U = e => {
          let {
            label: t,
            value: s,
            showInfoIcon: n,
            infoIconTooltipText: l,
          } = e;
          return (0, a.jsxs)("div", {
            className: b.infoCard,
            children: [
              (0, a.jsxs)("div", {
                className: b.infoCardLabelContainer,
                children: [
                  (0, a.jsx)(c.Heading, {
                    variant: "heading-deprecated-12/semibold",
                    className: b.infoCardLabel,
                    children: t,
                  }),
                  n &&
                    (0, a.jsx)(c.Tooltip, {
                      text: l,
                      children: e =>
                        (0, a.jsx)(M.default, {
                          ...e,
                          className: b.infoCardIcon,
                        }),
                    }),
                ],
              }),
              (0, a.jsx)(c.Heading, {
                variant: "heading-xl/semibold",
                className: b.infoCardValue,
                children: s,
              }),
            ],
          });
        },
        y = e => {
          let { subscription: t, disabled: s } = e,
            { analyticsLocations: n } = (0, T.default)(),
            [l] = (0, m.useSubscriptionInvoicePreview)({
              subscriptionId: t.id,
              renewal: !0,
              analyticsLocations: n,
              analyticsLocation:
                E.default.APP_SUBSCRIPTION_PAYMENT_SOURCE_WITH_INVOICE,
            }),
            i = (0, u.useStateFromStores)(
              [N.default],
              () => N.default.hasFetchedPaymentSources
            );
          return i
            ? null == l
              ? null
              : (0, a.jsxs)(a.Fragment, {
                  children: [
                    (0, a.jsx)(c.FormTitle, {
                      children:
                        j.default.Messages
                          .APPLICATION_MANAGE_SUBSCRIPTION_PAYMENT_METHOD_LABEL,
                    }),
                    (0, a.jsx)(g.default, {
                      subscription: t,
                      currentInvoicePreview: l,
                      dropdownClassName: b.paymentSourceDropdown,
                      disabled: s,
                    }),
                  ],
                })
            : (0, a.jsx)(c.Spinner, {});
        },
        B = e => {
          let {
            isCancelled: t,
            onCancelSubscriptionClick: s,
            isResubscribing: n,
            onResubscribeClick: l,
          } = e;
          return (0, a.jsxs)("div", {
            children: [
              (0, a.jsx)(c.FormTitle, {
                children:
                  j.default.Messages
                    .APPLICATION_MANAGE_SUBSCRIPTION_MANAGE_OPTIONS_LABEL,
              }),
              (0, a.jsx)("div", {
                className: b.rowButtons,
                children: t
                  ? (0, a.jsx)(c.Button, {
                      onClick: l,
                      submitting: n,
                      children:
                        j.default.Messages
                          .APPLICATION_MANAGE_SUBSCRIPTION_MANAGE_OPTIONS_RESTART,
                    })
                  : (0, a.jsx)(C.default, {
                      label:
                        j.default.Messages
                          .APPLICATION_MANAGE_SUBSCRIPTION_MANAGE_OPTIONS_CANCEL,
                      onClick: s,
                    }),
              }),
            ],
          });
        };
      var F = e => {
        let { subscription: t } = e,
          {
            listing: l,
            groupListing: r,
            guild: u,
            expanded: E,
            handleToggleExpanded: m,
            subscriptionInfo: g,
            application: N,
          } = (0, L.default)(t),
          C = (0, O.useUID)(),
          [M, F] = n.useState(!1),
          { analyticsLocations: G } = (0, T.default)();
        if (null == r || null == l || null == g) return null;
        let k = () => {
            o(null != N, "Application cannot be null"),
              (0, c.openModalLazy)(async () => {
                let { default: e } = await s
                  .el("187752")
                  .then(s.bind(s, "187752"));
                return s =>
                  (0, a.jsx)(e, {
                    application: N,
                    listing: l,
                    subscription: t,
                    guild: u,
                    ...s,
                  });
              });
          },
          H = async () => {
            try {
              F(!0);
              let { subscription: e } = await S.resubscribeToSubscription(t, G);
              null != e &&
                (0, c.openModalLazy)(async () => {
                  let { default: t } = await s
                    .el("135154")
                    .then(s.bind(s, "135154"));
                  return s =>
                    (0, a.jsx)(t, {
                      listing: l,
                      subscription: h.default.createFromServer(e),
                      ...s,
                    });
                });
            } finally {
              F(!1);
            }
          },
          {
            isCancelled: w,
            isDeleted: V,
            isPastDue: Y,
            subscriptionPlanPrice: K,
            subscribedSinceDate: W,
            currentPeriodEndDate: z,
            currentPeriodEndLabel: Q,
          } = g,
          X = (0, D.isApplicationUserSubscription)(l.sku_flags),
          q = (0, D.isApplicationGuildSubscription)(l.sku_flags),
          Z = l.soft_deleted || null == N || ((!q || null == u) && !X),
          J = () =>
            w || V
              ? (0, a.jsx)(R.TextBadge, {
                  text: j.default.Messages
                    .APPLICATION_MANAGE_SUBSCRIPTION_CANCELED,
                })
              : Y
                ? (0, a.jsx)(c.Tooltip, {
                    text: j.default.Messages
                      .APPLICATION_SUBSCRIPTION_USER_SUBSCRIPTION_PAST_DUE_WARNING,
                    children: e =>
                      (0, a.jsx)("div", {
                        ...e,
                        children: (0, a.jsx)(R.TextBadge, {
                          className: b.paymentDueBadge,
                          text: j.default.Messages
                            .APPLICATION_MANAGE_SUBSCRIPTION_PAST_DUE,
                          color: d.default.YELLOW_300,
                        }),
                      }),
                  })
                : null,
          $ = null;
        if (q) {
          var ee;
          $ = (0, a.jsxs)(c.Text, {
            variant: "text-sm/normal",
            className: b.tierName,
            children: [
              j.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_CARD_IN_GUILD.format(
                {
                  guildName:
                    null !== (ee = null == u ? void 0 : u.name) && void 0 !== ee
                      ? ee
                      : j.default.Messages
                          .APPLICATION_MANAGE_SUBSCRIPTION_CARD_GUILD_NAME_UNAVAILABLE,
                }
              ),
              null != u &&
                (0, a.jsx)(I.default, {
                  guild: u,
                  size: I.default.Sizes.MINI,
                  className: b.guildIcon,
                }),
            ],
          });
        } else
          X &&
            ($ = (0, a.jsx)(c.Text, {
              variant: "text-sm/normal",
              className: b.tierName,
              children:
                j.default.Messages
                  .APPLICATION_MANAGE_SUBSCRIPTION_CARD_PERSONAL_SUBSCRIPTION,
            }));
        return (0, a.jsxs)("div", {
          className: b.container,
          children: [
            (0, a.jsx)(f.default, {
              onClick: m,
              className: b.headerContainer,
              children: e => {
                let { areaRef: t, handleStopPropagation: s } = e;
                return (0, a.jsxs)(a.Fragment, {
                  children: [
                    null != N &&
                      (0, a.jsx)(v.default, {
                        size: v.ApplicationIconSize.SMALL,
                        className: b.applicationIcon,
                        application: N,
                        asset: l.image_asset,
                      }),
                    (0, a.jsxs)("div", {
                      className: b.headerTextContainer,
                      children: [
                        (0, a.jsx)(c.Text, {
                          variant: "text-md/medium",
                          className: b.applicationName,
                          children:
                            null != N
                              ? N.name
                              : j.default.Messages
                                  .APPLICATION_MANAGE_SUBSCRIPTION_CARD_APPLICATION_NAME_UNAVAILABLE,
                        }),
                        (0, a.jsxs)("div", {
                          className: b.headerSubtitleContainer,
                          children: [$, J()],
                        }),
                      ],
                    }),
                    (0, a.jsx)(c.Clickable, {
                      onClick: s(m),
                      "aria-label":
                        j.default.Messages
                          .APPLICATION_SUBSCRIPTION_TOGGLE_SECTION_LABEL,
                      "aria-controls": C,
                      "aria-expanded": E,
                      focusProps: { ringTarget: t },
                      children: (0, a.jsx)(x.default, {
                        className: i(b.arrowIcon, { [b.arrowIconExpanded]: E }),
                      }),
                    }),
                  ],
                });
              },
            }),
            E
              ? (0, a.jsxs)("div", {
                  id: C,
                  children: [
                    (0, a.jsx)("div", { className: b.divider }),
                    V
                      ? (0, a.jsx)(p.default, {
                          messageType: p.HelpMessageTypes.WARNING,
                          className: b.deletedHelpMessage,
                          children:
                            j.default.Messages
                              .APPLICATION_MANAGE_SUBSCRIPTION_DELETED_WARNING,
                        })
                      : null,
                    (0, a.jsx)(_.default, {
                      groupListingId: r.id,
                      subscription: t,
                      className: b.changePlanNotice,
                    }),
                    (0, a.jsxs)("div", {
                      className: b.subscriptionInfoCards,
                      children: [
                        (0, a.jsx)(U, {
                          label: Q,
                          value:
                            j.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_INFO_CURRENT_PERIOD_END_DATE.format(
                              { timestamp: z.getTime() }
                            ),
                        }),
                        (0, a.jsx)(U, {
                          label:
                            j.default.Messages
                              .APPLICATION_MANAGE_SUBSCRIPTION_INFO_PRICE,
                          value: K,
                        }),
                        (0, a.jsx)(U, {
                          label:
                            j.default.Messages
                              .APPLICATION_MANAGE_SUBSCRIPTION_INFO_SUBSCRIBED_SINCE,
                          value:
                            j.default.Messages.APPLICATION_MANAGE_SUBSCRIPTION_INFO_SUBSCRIBED_SINCE_DATE.format(
                              { timestamp: W.getTime() }
                            ),
                        }),
                      ],
                    }),
                    (0, a.jsx)(A.default, { size: 16 }),
                    t.status === P.SubscriptionStatusTypes.ACTIVE &&
                      (0, a.jsx)(y, { subscription: t, disabled: V }),
                    !Z &&
                      (0, a.jsx)(B, {
                        isCancelled: w,
                        onCancelSubscriptionClick: k,
                        isResubscribing: M,
                        onResubscribeClick: H,
                      }),
                  ],
                })
              : null,
          ],
        });
      };
    },
    230272: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return E;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("446674"),
        l = s("77078"),
        i = s("521012"),
        r = s("191814"),
        o = s("538137"),
        d = s("991254"),
        u = s("597097"),
        c = s("782340"),
        S = s("600477"),
        E = e => {
          let { onGoBack: t } = e,
            s = (0, n.useStateFromStores)([i.default], () => {
              var e;
              return null !==
                (e = i.default.getActiveApplicationSubscriptions()) &&
                void 0 !== e
                ? e
                : [];
            }),
            { loading: E } = (0, d.useFetchListingsForSubscriptions)(s),
            { loadState: T } = (0,
            d.useFetchUserApplicationSubscriptionEntitlements)();
          return E || T !== d.LoadState.LOADED
            ? (0, a.jsx)(l.Spinner, {})
            : 0 === s.length
              ? null
              : (0, a.jsxs)("div", {
                  className: S.container,
                  children: [
                    (0, a.jsxs)(l.Button, {
                      look: l.Button.Looks.BLANK,
                      innerClassName: S.backButtonContents,
                      onClick: t,
                      children: [
                        (0, a.jsx)(o.default, { className: S.arrowIcon }),
                        c.default.Messages
                          .APPLICATION_MANAGE_SUBSCRIPTION_PAGE_BACK_CTA,
                      ],
                    }),
                    (0, a.jsx)(r.default, { size: 10 }),
                    (0, a.jsx)(l.FormTitle, {
                      tag: "h1",
                      children:
                        c.default.Messages
                          .APPLICATION_MANAGE_SUBSCRIPTION_PAGE_TITLE,
                    }),
                    (0, a.jsx)(l.Text, {
                      variant: "text-sm/normal",
                      className: S.pageDescription,
                      children:
                        c.default.Messages
                          .APPLICATION_MANAGE_SUBSCRIPTION_PAGE_DESCRIPTION,
                    }),
                    (0, a.jsx)("div", {
                      className: S.subscriptionsContainer,
                      children: s.map(e =>
                        (0, a.jsx)(u.default, { subscription: e }, e.id)
                      ),
                    }),
                  ],
                });
        };
    },
    457430: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return f;
          },
        }),
        s("222007");
      var a = s("884691"),
        n = s("866227"),
        l = s.n(n),
        i = s("446674"),
        r = s("299285"),
        o = s("305961"),
        d = s("437712"),
        u = s("153160"),
        c = s("248933"),
        S = s("129408"),
        E = s("49111"),
        T = s("782340");
      function f(e) {
        let t = (0, S.getApplicationSubscriptionPlanId)(e),
          s = (0, i.useStateFromStores)(
            [c.default],
            () => c.default.getSubscriptionListingForPlan(t),
            [t]
          ),
          n = (0, i.useStateFromStores)(
            [c.default],
            () =>
              null != s
                ? c.default.getSubscriptionGroupListingForSubscriptionListing(
                    s.id
                  )
                : null,
            [s]
          ),
          f = (0, i.useStateFromStores)(
            [d.default],
            () => {
              let t = d.default.getForSubscription(e.id);
              if (null != t) {
                let [e] = Array.from(t);
                return e;
              }
              return null;
            },
            [e]
          ),
          _ = (0, i.useStateFromStores)(
            [r.default],
            () => {
              if (null == f) return;
              let e = r.default.getApplication(f.applicationId);
              if (null != e) return e;
            },
            [f]
          ),
          m = (0, i.useStateFromStores)(
            [o.default],
            () => {
              if (null != f) return o.default.getGuild(f.guildId);
            },
            [f]
          ),
          [g, h] = a.useState(!1),
          N =
            null == s
              ? void 0
              : (function (e) {
                  let { listing: t, subscription: s } = e,
                    a = s.currentPeriodEnd,
                    n = t.subscription_plans[0],
                    i = (0, u.formatPrice)(n.price, n.currency),
                    r = s.createdAt,
                    o = s.status === E.SubscriptionStatusTypes.CANCELED,
                    d = t.soft_deleted,
                    c = s.status === E.SubscriptionStatusTypes.PAST_DUE;
                  return {
                    subscribedSinceDate: r,
                    currentPeriodEndDate: a,
                    currentPeriodEndLabel: l().isAfter(s.currentPeriodEnd)
                      ? T.default.Messages
                          .APPLICATION_MANAGE_SUBSCRIPTION_INFO_SUBSCRIPTION_ENDED
                      : T.default.Messages
                          .APPLICATION_MANAGE_SUBSCRIPTION_INFO_SUBSCRIPTION_ENDS,
                    subscriptionPlanPrice: i,
                    isCancelled: o,
                    isDeleted: d,
                    isPastDue: c,
                  };
                })({ listing: s, subscription: e });
        return {
          application: _,
          guild: m,
          expanded: g,
          handleToggleExpanded: () => h(e => !e),
          listing: s,
          groupListing: n,
          subscriptionInfo: N,
        };
      }
    },
    409214: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return h;
          },
        }),
        s("222007");
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("748820"),
        o = s("509043"),
        d = s("669491"),
        u = s("77078"),
        c = s("634634"),
        S = s("449918"),
        E = s("973262"),
        T = s("832132"),
        f = s("771325"),
        _ = s("49111"),
        m = s("782340"),
        g = s("718740");
      function h(e) {
        let {
            onChange: t,
            onClose: s,
            color: l,
            suggestedColors: h,
            disabled: N,
            label: I,
            colorPickerMiddle: p,
            colorPickerFooter: C,
            showEyeDropper: A,
          } = e,
          O = n.useRef(null),
          x = (0, u.useToken)(d.default.colors.BACKGROUND_PRIMARY).hex(),
          M = d.default.colors.BACKGROUND_ACCENT.css,
          R = (0, f.isColorDark)(l),
          D = (0, o.int2hex)(l),
          v = D === x ? M : D,
          L = (0, S.getColor)(R ? _.Color.WHITE_500 : _.Color.PRIMARY_530),
          P = (0, c.default)(p),
          j = (0, c.default)(C),
          [b, U] = n.useState((0, r.v4)());
        return (
          n.useEffect(() => {
            (P !== p || j !== C) && U((0, r.v4)());
          }, [C, p, j, P]),
          (0, a.jsx)(u.Popout, {
            positionKey: b,
            renderPopout: e =>
              (0, a.jsx)(E.CustomColorPicker, {
                ...e,
                value: l,
                onChange: t,
                suggestedColors: h,
                middle: p,
                footer: C,
                showEyeDropper: A,
              }),
            onRequestClose: s,
            children: e => {
              let { onClick: t, ...s } = e;
              return (0, a.jsxs)("div", {
                ref: O,
                className: i(g.colorSwatch, { [g.disabled]: N }),
                children: [
                  (0, a.jsx)(u.Clickable, {
                    ...s,
                    tabIndex: N ? -1 : 0,
                    onClick: N ? _.NOOP : t,
                    style: { backgroundColor: D, borderColor: v },
                    className: g.swatch,
                    "aria-label":
                      m.default.Messages
                        .USER_SETTINGS_PROFILE_COLOR_SELECT_COLOR,
                    focusProps: { ringTarget: O },
                    children: (0, a.jsx)(T.default, {
                      className: g.editPencilIcon,
                      width: 14,
                      height: 14,
                      color: L,
                    }),
                  }),
                  I,
                ],
              });
            },
          })
        );
      }
    },
    891653: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return u;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("414456"),
        l = s.n(n),
        i = s("77078"),
        r = s("216422"),
        o = s("782340"),
        d = s("321562");
      function u(e) {
        let {
          text: t = o.default.Messages.PROFILE_CUSTOMIZATION_NITRO_ICON_TOOLTIP,
          className: s,
        } = e;
        return (0, a.jsx)(i.Tooltip, {
          text: t,
          children: e =>
            (0, a.jsx)(i.Clickable, {
              ...e,
              children: (0, a.jsx)(r.default, {
                className: l(d.nitroWheel, s),
              }),
            }),
        });
      }
    },
    763417: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return o;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("446674"),
        l = s("424562"),
        i = s("808030"),
        r = s("735690");
      function o() {
        let e = (0, n.useStateFromStores)([l.default], () =>
          l.default.showNotice()
        );
        return e ? (0, a.jsx)(i.default, {}) : (0, a.jsx)(r.default, {});
      }
    },
    470022: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return A;
          },
        });
      var a = s("37983"),
        n = s("884691"),
        l = s("446674"),
        i = s("77078"),
        r = s("800751"),
        o = s("685665"),
        d = s("260518"),
        u = s("929423"),
        c = s("424562"),
        S = s("376402"),
        E = s("506885"),
        T = s("621200"),
        f = s("790618"),
        _ = s("697218"),
        m = s("659500"),
        g = s("565500"),
        h = s("543306"),
        N = s("49111"),
        I = s("397336"),
        p = s("782340"),
        C = s("395734");
      function A() {
        d.default.useExperiment({ location: "profile_customization_auto" });
        let e = (0, l.useStateFromStores)([c.default], () =>
            c.default.getGuild()
          ),
          t = (0, g.default)(),
          s = (0, l.useStateFromStores)(
            [c.default, f.default],
            () => c.default.showNotice() || f.default.showNotice()
          ),
          A = null != e ? e : t,
          O = (0, l.useStateFromStores)([_.default], () =>
            _.default.getCurrentUser()
          ),
          { subsection: x, setSubsection: M } = (0, h.default)(),
          { AnalyticsLocationProvider: R, analyticsLocations: D } = (0,
          o.default)();
        return (
          n.useEffect(() => {
            null != O &&
              (0, E.default)(
                O.id,
                O.getAvatarURL(null == A ? void 0 : A.id, 80),
                { guildId: null == A ? void 0 : A.id }
              );
          }, [null == A ? void 0 : A.id, O]),
          (0, a.jsx)(R, {
            children: (0, a.jsxs)(i.HeadingLevel, {
              component: (0, a.jsx)(i.Heading, {
                variant: "heading-lg/semibold",
                children: p.default.Messages.USER_SETTINGS_PROFILES,
              }),
              children: [
                (0, a.jsxs)(i.TabBar, {
                  className: C.tabBar,
                  type: "top",
                  look: "brand",
                  selectedItem: x,
                  onItemSelect: function (t) {
                    if (x !== t) {
                      if (s) {
                        m.ComponentDispatch.dispatch(
                          N.ComponentActions.SHAKE_APP,
                          {
                            duration: 300,
                            intensity: r.SHAKE_INTENSITY_DEFAULT,
                          }
                        ),
                          m.ComponentDispatch.dispatch(
                            N.ComponentActions.EMPHASIZE_NOTICE
                          );
                        return;
                      }
                      t === I.ProfileCustomizationSubsection.GUILD &&
                        null == e &&
                        null != A &&
                        (0, u.initGuildIdentitySettings)(A, D),
                        M(t);
                    }
                  },
                  children: [
                    (0, a.jsx)(
                      i.TabBar.Item,
                      {
                        className: C.tabBarItem,
                        id: I.ProfileCustomizationSubsection.USER_PROFILE,
                        children:
                          p.default.Messages.EDIT_PROFILE_CATEGORY_USER_PROFILE,
                      },
                      I.ProfileCustomizationSubsection.USER_PROFILE
                    ),
                    (0, a.jsx)(
                      i.TabBar.Item,
                      {
                        className: C.tabBarItem,
                        id: I.ProfileCustomizationSubsection.GUILD,
                        children:
                          p.default.Messages
                            .EDIT_PROFILE_CATEGORY_GUILD_IDENTITY,
                      },
                      I.ProfileCustomizationSubsection.GUILD
                    ),
                  ],
                }),
                x === I.ProfileCustomizationSubsection.GUILD
                  ? (0, a.jsx)(S.default, { selectedGuild: A })
                  : (0, a.jsx)(T.default, {}),
              ],
            }),
          })
        );
      }
    },
    11899: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return c;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("414456"),
        l = s.n(n),
        i = s("394846"),
        r = s("77078"),
        o = s("570697"),
        d = s("782340"),
        u = s("475830");
      function c(e) {
        let {
            children: t,
            className: s,
            layoutClassName: n,
            profilePreview: c,
            previewTitle: S,
          } = e,
          E = () =>
            (0, a.jsx)(o.default, {
              title:
                null != S
                  ? S
                  : d.default.Messages.PROFILE_CUSTOMIZATION_PREVIEW,
              className: u.preview,
              children: c,
            });
        return (0, a.jsx)("div", {
          className: s,
          children: (0, a.jsxs)(r.FormSection, {
            className: u.profileCustomizationSection,
            children: [
              i.isMobile && E(),
              (0, a.jsxs)("div", {
                className: l(u.baseLayout, n),
                children: [t, !i.isMobile && E()],
              }),
            ],
          }),
        });
      }
    },
    702877: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return g;
          },
        }),
        s("222007");
      var a = s("37983"),
        n = s("884691"),
        l = s("77078"),
        i = s("850391"),
        r = s("149022"),
        o = s("681060"),
        d = s("233069"),
        u = s("476765"),
        c = s("570697"),
        S = s("49111"),
        E = s("782340"),
        T = s("97236");
      let f = (0, u.uid)(),
        _ = (0, d.createChannelRecord)({ id: "1", type: S.ChannelTypes.DM }),
        m = (0, u.uid)();
      function g(e) {
        let {
            sectionTitle: t,
            errors: s,
            onBioChange: d,
            pendingBio: u,
            placeholder: g,
            currentBio: h,
            disabled: N = !1,
          } = e,
          [I, p] = n.useState(null != u ? u : h),
          [C, A] = n.useState((0, r.toRichValue)(I)),
          O = n.useRef(!1);
        return (
          n.useEffect(() => {
            if (void 0 === u) {
              let e = (0, r.toRichValue)(h);
              p(h), A(e);
            }
          }, [u, h]),
          (0, a.jsxs)(c.default, {
            title: t,
            titleId: f,
            description: E.default.Messages.USER_SETTINGS_ABOUT_ME_DETAILS,
            errors: s,
            disabled: N,
            children: [
              (0, a.jsx)(o.default, {
                "aria-describedby": m,
                "aria-labelledby": f,
                innerClassName: T.bioTextArea,
                maxCharacterCount: S.BIO_MAX_LENGTH,
                onChange: function (e, t, s) {
                  t !== I && (p(t), A(s), d(t));
                },
                placeholder: g,
                channel: _,
                textValue: I,
                richValue: C,
                type: i.ChatInputTypes.PROFILE_BIO_INPUT,
                onBlur: () => {
                  O.current = !1;
                },
                onFocus: () => {
                  O.current = !0;
                },
                focused: O.current,
                onSubmit: function () {
                  return new Promise(e => {
                    e({ shouldClear: !1, shouldRefocus: !0 });
                  });
                },
              }),
              (0, a.jsx)(l.HiddenVisually, {
                id: m,
                children: E.default.Messages.MAXIMUM_LENGTH.format({
                  maxLength: S.BIO_MAX_LENGTH,
                }),
              }),
            ],
          })
        );
      }
    },
    668688: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return g;
          },
        });
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("77078"),
        o = s("685665"),
        d = s("234251"),
        u = s("606292"),
        c = s("890503"),
        S = s("181114"),
        E = s("950603"),
        T = s("906932"),
        f = s("570697"),
        _ = s("782340"),
        m = s("572540");
      function g(e) {
        let {
            user: t,
            guild: s,
            className: l,
            sectionTitle: E,
            forcedDivider: g = !1,
            withTutorial: N = !1,
            isTryItOutFlow: I = !1,
          } = e,
          { analyticsLocations: p } = (0, o.default)(),
          C = null != s,
          {
            userAvatarDecoration: A,
            guildAvatarDecoration: O,
            pendingAvatarDecoration: x,
            pendingErrors: M,
          } = (0, T.useGuildMemberAndUserPendingAvatarDecoration)(t, s),
          R = (0, c.default)("enable_avatar_decoration_uploads"),
          D = n.useCallback(
            () =>
              (0, u.openAvatarDecorationModal)({
                analyticsLocations: p,
                isTryItOutFlow: I,
                guild: s,
              }),
            [p, I, s]
          ),
          v = I || void 0 !== x ? null != x : (C ? O : A) != null,
          L = N ? S.default : r.Button;
        return (0, a.jsxs)(f.default, {
          className: l,
          forcedDivider: g,
          hasBackground: !0,
          title: E,
          errors: M,
          children: [
            (0, a.jsxs)("div", {
              className: m.buttonsContainer,
              children: [
                (0, a.jsx)(L, {
                  size: r.Button.Sizes.SMALL,
                  onClick: D,
                  className: i({ [m.buttonHighlighted]: N }),
                  children:
                    _.default.Messages.USER_SETTINGS_CHANGE_AVATAR_DECORATION,
                }),
                v &&
                  (0, a.jsx)(r.Button, {
                    className: m.removeButton,
                    color: r.Button.Colors.PRIMARY,
                    look: r.Button.Looks.LINK,
                    size: r.Button.Sizes.SMALL,
                    onClick: function () {
                      (0, T.setNewPendingAvatarDecoration)(
                        null == s ? void 0 : s.id,
                        null
                      );
                    },
                    children: (0, d.hasGlobalDefaultAvatarDecoration)(t, s)
                      ? _.default.Messages
                          .USER_SETTINGS_REMOVE_PER_GUILD_AVATAR_DECORATION
                      : _.default.Messages
                          .USER_SETTINGS_REMOVE_AVATAR_DECORATION,
                  }),
              ],
            }),
            t.isStaff() && R && (0, a.jsx)(h, { user: t }),
          ],
        });
      }
      let h = e => {
        let { user: t } = e;
        return (0, a.jsxs)("div", {
          className: m.overrideButtonsContainer,
          children: [
            (0, a.jsx)(r.Text, {
              variant: "text-xs/bold",
              children:
                "STAFF ONLY and Experimental. Upload a decoration to view throughout the app.",
            }),
            (0, a.jsx)(E.default, {
              onChange: e => {
                null != e &&
                  (t.avatarDecoration = { asset: e, skuID: "PALUE000000001" });
              },
              buttonCTA: "Upload Override",
            }),
          ],
        });
      };
    },
    447645: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return T;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("414456"),
        l = s.n(n),
        i = s("77078"),
        r = s("181114"),
        o = s("771325"),
        d = s("570697"),
        u = s("75015"),
        c = s("782340"),
        S = s("761289");
      let E = [{ name: "gif", extensions: ["gif"] }];
      function T(e) {
        let {
            showRemoveAvatarButton: t,
            errors: s,
            onAvatarChange: n,
            sectionTitle: T,
            changeAvatarButtonText: f,
            guildId: _,
            className: m,
            disabled: g = !1,
            isTryItOutFlow: h = !1,
            forcedDivider: N,
            withHighlight: I = !1,
          } = e,
          p = I ? r.default : i.Button;
        return (0, a.jsx)(d.default, {
          className: m,
          title: T,
          errors: s,
          disabled: g,
          forcedDivider: N,
          children: (0, a.jsxs)("div", {
            className: S.buttonsContainer,
            children: [
              (0, a.jsx)(p, {
                className: l({ [S.buttonHighlighted]: I }),
                size: i.Button.Sizes.SMALL,
                onClick: () =>
                  (0, o.handleOpenSelectImageModal)(
                    u.UploadTypes.AVATAR,
                    _,
                    h,
                    h ? E : void 0
                  ),
                children:
                  null != f
                    ? f
                    : c.default.Messages.USER_SETTINGS_CHANGE_AVATAR,
              }),
              t &&
                (0, a.jsx)(i.Button, {
                  className: S.removeButton,
                  color: i.Button.Colors.PRIMARY,
                  look: i.Button.Looks.LINK,
                  size: i.Button.Sizes.SMALL,
                  onClick: () => n(null),
                  children:
                    null != _
                      ? c.default.Messages.USER_SETTINGS_RESET_AVATAR
                      : c.default.Messages.USER_SETTINGS_REMOVE_AVATAR,
                }),
            ],
          }),
        });
      }
    },
    570697: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return S;
          },
        }),
        s("781738");
      var a = s("37983");
      s("884691");
      var n = s("414456"),
        l = s.n(n),
        i = s("77078"),
        r = s("254490"),
        o = s("891653"),
        d = s("632892"),
        u = s("881049");
      function c(e) {
        let { errors: t } = e;
        return (0, a.jsx)(a.Fragment, {
          children: t.map((e, t) =>
            (0, a.jsx)(
              i.Text,
              {
                variant: "text-xs/normal",
                color: "text-danger",
                className: u.errorMessage,
                children: e.replace(/[0-9.,]+ ?kb/g, e => {
                  let t = 1024 * parseInt(e, 10);
                  return isNaN(t) ? e : (0, r.sizeString)(t);
                }),
              },
              t
            )
          ),
        });
      }
      function S(e) {
        let {
          title: t,
          titleIcon: s,
          titleId: n,
          description: r,
          children: S,
          className: E,
          errors: T,
          disabled: f = !1,
          hideDivider: _ = !1,
          showBorder: m = !1,
          borderType: g,
          hasBackground: h = !1,
          forcedDivider: N = !1,
          showPremiumIcon: I = !1,
        } = e;
        return (0, a.jsx)("div", {
          className: l(u.customizationSection, E, {
            [u.disabled]: f,
            [u.hideDivider]: _,
            [u.showBorder]: m,
            [u.withDivider]: N,
          }),
          children: (0, a.jsxs)(d.default, {
            className: u.customizationSectionBorder,
            backgroundClassName: u.customizationSectionBackground,
            isShown: m,
            type: g,
            hasBackground: h,
            children: [
              (0, a.jsxs)(i.FormTitle, {
                className: u.title,
                id: n,
                children: [t, I && (0, a.jsx)(o.default, {}), s],
              }),
              null != r
                ? (0, a.jsx)(i.FormText, {
                    type: i.FormText.Types.DESCRIPTION,
                    className: u.sectionDescription,
                    children: r,
                  })
                : null,
              S,
              null != T && (0, a.jsx)(c, { errors: T }),
            ],
          }),
        });
      }
    },
    569460: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return o;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("77078"),
        l = s("570697"),
        i = s("49111"),
        r = s("782340");
      function o(e) {
        var t, s;
        return (0, a.jsx)(l.default, {
          errors: e.errors,
          disabled: e.disabled,
          title: r.default.Messages.DISPLAY_NAME,
          children: (0, a.jsx)("div", {
            children: (0, a.jsx)(n.TextInput, {
              placeholder: e.placeholder,
              maxLength: i.DISPLAY_NAME_MAX_LENGTH,
              onChange: e.onGlobalNameChange,
              value:
                null !==
                  (s =
                    null !== (t = e.pendingGlobalName) && void 0 !== t
                      ? t
                      : e.currentGlobalName) && void 0 !== s
                  ? s
                  : "",
            }),
          }),
        });
      }
    },
    97747: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return r;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("77078"),
        l = s("845579"),
        i = s("782340");
      function r(e) {
        let t = l.LegacyUsernameDisabled.useSetting();
        return (0, a.jsx)(n.FormSwitch, {
          hideBorder: !0,
          value: !t,
          onChange: () => l.LegacyUsernameDisabled.updateSetting(!t),
          note: t
            ? null
            : i.default.Messages.UNIQUE_USERNAME_TOGGLE_SUBTITLE.format({
                username: e.legacyUsername,
              }),
          children: i.default.Messages.UNIQUE_USERNAME_TOGGLE_TITLE,
        });
      }
    },
    52704: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return E;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("414456"),
        l = s.n(n),
        i = s("77078"),
        r = s("181114"),
        o = s("771325"),
        d = s("570697"),
        u = s("75015"),
        c = s("782340"),
        S = s("837087");
      function E(e) {
        let {
            showRemoveBannerButton: t,
            errors: s,
            onBannerChange: n,
            guildId: E,
            className: T,
            disabled: f = !1,
            showPremiumIcon: _ = !0,
            isTryItOutFlow: m = !1,
            forcedDivider: g,
            withHighlight: h = !1,
          } = e,
          N = h ? r.default : i.Button;
        return (0, a.jsx)(d.default, {
          className: T,
          title: c.default.Messages.USER_SETTINGS_PROFILE_BANNER,
          showPremiumIcon: _,
          errors: s,
          disabled: f,
          forcedDivider: g,
          children: (0, a.jsxs)("div", {
            className: S.buttonsContainer,
            children: [
              (0, a.jsx)(N, {
                className: l({ [S.buttonHighlighted]: h }),
                size: i.Button.Sizes.SMALL,
                onClick: () =>
                  (0, o.handleOpenSelectImageModal)(
                    u.UploadTypes.BANNER,
                    E,
                    m,
                    void 0
                  ),
                children: c.default.Messages.CHANGE_BANNER,
              }),
              t &&
                (0, a.jsx)(i.Button, {
                  className: S.removeButton,
                  color: i.Button.Colors.PRIMARY,
                  look: i.Button.Looks.LINK,
                  size: i.Button.Sizes.SMALL,
                  onClick: () => n(null),
                  children:
                    null != E
                      ? c.default.Messages.USER_SETTINGS_RESET_BANNER
                      : c.default.Messages.USER_SETTINGS_REMOVE_BANNER,
                }),
            ],
          }),
        });
      }
    },
    79685: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return c;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("509043"),
        l = s("669491"),
        i = s("77078"),
        r = s("462274"),
        o = s("409214"),
        d = s("570697"),
        u = s("782340");
      function c(e) {
        var t;
        let {
            user: s,
            savedUserColor: c,
            pendingColor: S,
            setPendingAccentColor: E,
          } = e,
          T = s.getAvatarURL(null, 80),
          f = (0, i.useToken)(l.default.unsafe_rawColors.PRIMARY_530).hex(),
          _ = (0, r.useAvatarColors)(T, f, !1),
          m = (0, n.hex2int)(_[0]);
        return (0, a.jsx)(d.default, {
          title: u.default.Messages.USER_SETTINGS_BANNER_COLOR_TITLE,
          children: (0, a.jsx)(o.default, {
            onChange: e => E(e),
            color: null !== (t = null != S ? S : c) && void 0 !== t ? t : m,
            suggestedColors: _,
            showEyeDropper: !0,
          }),
        });
      }
    },
    741781: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return N;
          },
        });
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("77078"),
        o = s("685665"),
        d = s("493390"),
        u = s("181114"),
        c = s("599110"),
        S = s("719923"),
        E = s("906932"),
        T = s("570697"),
        f = s("632892"),
        _ = s("49111"),
        m = s("646718"),
        g = s("782340"),
        h = s("535031");
      function N(e) {
        let {
            user: t,
            guild: s,
            className: l,
            sectionTitle: N,
            forcedDivider: I = !1,
            withTutorial: p = !1,
            showBorder: C = !1,
            isTryItOutFlow: A = !1,
            initialSelectedEffectId: O,
          } = e,
          x = (0, E.useGlobalOrGuildIdentityProfileEffect)(t, s),
          M = S.default.canUsePremiumProfileCustomization(t),
          { analyticsLocations: R } = (0, o.default)(),
          { pendingProfileEffectId: D, errors: v } = (0,
          E.useGlobalOrGuildIdentityPendingProfileEffect)(s),
          L = n.useCallback(
            () =>
              (0, d.openProfileEffectModal)({
                analyticsLocations: R,
                initialSelectedEffectId: O,
                guild: s,
              }),
            [R, O, s]
          );
        n.useEffect(() => {
          M &&
            c.default.track(_.AnalyticEvents.PREMIUM_UPSELL_VIEWED, {
              type: m.PremiumUpsellTypes.PROFILE_EFFECTS_INLINE_SETTINGS,
              location_stack: R,
            });
        }, [M, R]);
        let P = null != s,
          j = A || void 0 !== D ? null != D : null != x,
          b = p ? u.default : r.Button;
        return (0, a.jsx)(T.default, {
          forcedDivider: I,
          borderType: f.FeatureBorderTypes.PREMIUM,
          hasBackground: !0,
          title: N,
          showBorder: C,
          errors: v,
          className: l,
          children: (0, a.jsxs)("div", {
            className: h.buttonsContainer,
            children: [
              (0, a.jsx)(b, {
                size: r.Button.Sizes.SMALL,
                onClick: L,
                className: i({ [h.buttonHighlighted]: p }),
                children:
                  g.default.Messages.USER_SETTINGS_CHANGE_PROFILE_EFFECT,
              }),
              j &&
                (0, a.jsx)(r.Button, {
                  className: h.removeButton,
                  color: r.Button.Colors.PRIMARY,
                  look: r.Button.Looks.LINK,
                  size: r.Button.Sizes.SMALL,
                  onClick: function () {
                    (0, E.setNewPendingProfileEffectId)(null, x, s);
                  },
                  children: P
                    ? g.default.Messages
                        .USER_SETTINGS_USE_DEFAULT_PROFILE_EFFECT
                    : g.default.Messages.USER_SETTINGS_REMOVE_PROFILE_EFFECT,
                }),
            ],
          }),
        });
      }
    },
    121370: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return g;
          },
        }),
        s("222007");
      var a = s("37983");
      s("884691");
      var n = s("414456"),
        l = s.n(n),
        i = s("969176"),
        r = s.n(i),
        o = s("669491"),
        d = s("77078"),
        u = s("462274"),
        c = s("217513"),
        S = s("528438"),
        E = s("719923"),
        T = s("409214"),
        f = s("570697"),
        _ = s("782340"),
        m = s("440682");
      function g(e) {
        let {
            user: t,
            pendingAvatar: s,
            pendingColors: n,
            onThemeColorsChange: i,
            preventDisabled: g,
            guildId: h,
            className: N,
            showPremiumIcon: I = !0,
            showResetThemeButton: p = !1,
            forcedDivider: C,
          } = e,
          A = (0, c.default)(t.id, h),
          [O, x] = (0, S.default)(t, A, {
            pendingThemeColors: n,
            isPreview: !0,
          }),
          M = E.default.canUsePremiumProfileCustomization(t),
          R = null != s ? s : t.getAvatarURL(h, 80),
          D = (0, d.useToken)(o.default.unsafe_rawColors.PRIMARY_530).hex(),
          v = (0, u.useAvatarColors)(R, D, !1);
        if (null == O || null == x) return null;
        let L = e => {
          let t = r(e, null == A ? void 0 : A.themeColors);
          i(t ? void 0 : e);
        };
        return (0, a.jsx)(f.default, {
          title: _.default.Messages.USER_SETTINGS_PROFILE_THEME,
          disabled: !M && !g,
          className: l(m.profileThemesSection, N),
          showPremiumIcon: I,
          forcedDivider: C,
          children: (0, a.jsxs)("div", {
            className: m.sectionContainer,
            children: [
              (0, a.jsx)("div", {
                className: m.sparkleContainer,
                children: (0, a.jsx)(T.default, {
                  onChange: e => L([e, x]),
                  color: O,
                  suggestedColors: v,
                  showEyeDropper: !0,
                  label: (0, a.jsx)(d.Text, {
                    className: m.colorSwatchLabel,
                    color: "header-secondary",
                    variant: "text-xs/normal",
                    "aria-hidden": !0,
                    children:
                      _.default.Messages.USER_SETTINGS_PROFILE_THEME_PRIMARY,
                  }),
                }),
              }),
              (0, a.jsx)("div", {
                className: m.sparkleContainer,
                children: (0, a.jsx)(T.default, {
                  onChange: e => L([O, e]),
                  color: x,
                  suggestedColors: v,
                  showEyeDropper: !0,
                  label: (0, a.jsx)(d.Text, {
                    className: m.colorSwatchLabel,
                    color: "header-secondary",
                    variant: "text-xs/normal",
                    "aria-hidden": !0,
                    children:
                      _.default.Messages.USER_SETTINGS_PROFILE_THEME_ACCENT,
                  }),
                }),
              }),
              p &&
                null != h &&
                (0, a.jsx)(d.Button, {
                  className: m.resetButton,
                  color: d.Button.Colors.PRIMARY,
                  look: d.Button.Looks.LINK,
                  size: d.Button.Sizes.SMALL,
                  onClick: () => L([null, null]),
                  children:
                    _.default.Messages.USER_SETTINGS_RESET_PROFILE_THEME,
                }),
            ],
          }),
        });
      }
    },
    370505: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return r;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("77078"),
        l = s("570697"),
        i = s("782340");
      function r(e) {
        let {
          sectionTitle: t,
          errors: s,
          onPronounsChange: r,
          pendingPronouns: o,
          placeholder: d,
          currentPronouns: u,
          disabled: c = !1,
        } = e;
        return (0, a.jsx)(l.default, {
          title: t,
          errors: s,
          disabled: c,
          children: (0, a.jsx)(n.TextInput, {
            placeholder:
              null != d
                ? d
                : i.default.Messages.PROFILE_CUSTOMIZATION_PRONOUNS_PLACEHOLDER,
            maxLength: 40,
            value: null != o ? o : u,
            onChange: function (e) {
              r(e === u ? void 0 : e);
            },
            disabled: c,
          }),
        });
      }
    },
    635415: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return B;
          },
        });
      var a = s("37983"),
        n = s("884691"),
        l = s("446674"),
        i = s("77078"),
        r = s("152584"),
        o = s("875212"),
        d = s("812204"),
        u = s("685665"),
        c = s("345210"),
        S = s("793346"),
        E = s("154889"),
        T = s("917247"),
        f = s("956597"),
        _ = s("635956"),
        m = s("783142"),
        g = s("217513"),
        h = s("225849"),
        N = s("790618"),
        I = s("216422"),
        p = s("599110"),
        C = s("719923"),
        A = s("184900"),
        O = s("11899"),
        x = s("668688"),
        M = s("447645"),
        R = s("632892"),
        D = s("52704"),
        v = s("741781"),
        L = s("121370"),
        P = s("49111"),
        j = s("646718"),
        b = s("397336"),
        U = s("782340"),
        y = s("881559");
      function B(e) {
        var t, B, F;
        let { user: G } = e,
          { reducedMotion: k } = n.useContext(
            i.AccessibilityPreferencesContext
          ),
          H = C.default.isPremium(G),
          {
            pendingAvatar: w,
            pendingBanner: V,
            pendingThemeColors: Y,
            pendingPronouns: K,
            pendingBio: W,
            tryItOutThemeColors: z,
            tryItOutAvatar: Q,
            tryItOutBanner: X,
            tryItOutAvatarDecoration: q,
            tryItOutProfileEffectId: Z,
          } = (0, l.useStateFromStoresObject)([N.default], () => {
            let e = N.default.getAllPending(),
              t = N.default.getErrors(),
              s = N.default.getAllTryItOut();
            return { ...e, ...s, errors: t };
          }),
          J = (0, c.default)(q),
          $ = (0, S.default)(Z),
          ee = n.useRef(null);
        (0, h.default)(ee, b.ProfileCustomizationScrollPositions.TRY_IT_OUT);
        let et = (0, g.default)(G.id),
          es = null == et ? void 0 : et.getPreviewBio(W),
          { AnalyticsLocationProvider: ea, sourceAnalyticsLocations: en } = (0,
          u.default)(d.default.USER_SETTINGS_TRY_OUT_PREMIUM);
        n.useEffect(() => {
          p.default.track(P.AnalyticEvents.PREMIUM_UPSELL_VIEWED, {
            type: j.PremiumUpsellTypes.PREMIUM_PROFILE_TRY_IT_OUT,
            location: { page: P.AnalyticsPages.USER_SETTINGS },
            location_stack: en,
          });
        }, [en, G]);
        let el =
            (null === (B = (0, T.usePremiumTrialOffer)()) || void 0 === B
              ? void 0
              : null === (t = B.subscription_trial) || void 0 === t
                ? void 0
                : t.sku_id) === j.PremiumSubscriptionSKUs.TIER_2,
          ei = (0, E.usePremiumDiscountOffer)(),
          er = (0, E.discountOfferHasTier)(
            ei,
            j.PremiumSubscriptionSKUs.TIER_2
          ),
          eo = "TryOutPremiumSection";
        return (
          (0, o.useTriggerDebuggingAA)({
            location: eo + " auto on",
            autoTrackExposure: !0,
          }),
          (0, o.useTriggerDebuggingAA)({
            location: eo + " auto off",
            autoTrackExposure: !1,
          }),
          (0, a.jsx)(ea, {
            children: (0, a.jsxs)(R.default, {
              ref: ee,
              className: y.tryItOutSection,
              type: R.FeatureBorderTypes.PREMIUM,
              isShown: !0,
              hasBackground: !0,
              children: [
                (0, a.jsx)(O.default, {
                  layoutClassName: y.tryItOutLayout,
                  previewTitle: (0, a.jsxs)(a.Fragment, {
                    children: [
                      (0, a.jsx)(I.default, { className: y.premiumIcon }),
                      U.default.Messages.USER_SETTINGS_TRY_OUT_PREMIUM_PREVIEW,
                    ],
                  }),
                  profilePreview: (0, a.jsx)(A.default, {
                    user: G,
                    onAvatarChange: m.setTryItOutAvatar,
                    onBannerChange: m.setTryItOutBanner,
                    pendingPronouns: K,
                    pendingBio: W,
                    pendingBanner:
                      null !== (F = null != X ? X : V) && void 0 !== F
                        ? F
                        : s("901979"),
                    pendingAvatar: null != Q ? Q : w,
                    pendingThemeColors: null != z ? z : Y,
                    pendingAvatarDecoration: J,
                    pendingProfileEffectId: $,
                    avatarClassName:
                      null != Q || null != w || k.enabled
                        ? void 0
                        : y.spinningAvatar,
                    canUsePremiumCustomization: !0,
                    isTryItOutFlow: !0,
                    hideExampleButton: !0,
                    hideFakeActivity: !!(null == es ? void 0 : es.value),
                  }),
                  children: (0, a.jsxs)("div", {
                    className: y.editor,
                    children: [
                      (0, a.jsxs)("div", {
                        children: [
                          (0, a.jsx)(i.Heading, {
                            variant: "heading-xl/extrabold",
                            children:
                              U.default.Messages
                                .USER_SETTINGS_TRY_OUT_PREMIUM_HEADER,
                          }),
                          (0, a.jsx)(i.Text, {
                            className: y.description,
                            variant: "text-sm/normal",
                            children:
                              U.default.Messages
                                .USER_SETTINGS_TRY_OUT_PREMIUM_DESCRIPTION,
                          }),
                        ],
                      }),
                      (0, a.jsx)(L.default, {
                        className: y.customizationSection,
                        user: G,
                        pendingAvatar: null != Q ? Q : w,
                        pendingColors: null != z ? z : Y,
                        onThemeColorsChange: m.setTryItOutThemeColors,
                        showPremiumIcon: !1,
                        preventDisabled: !0,
                      }),
                      (0, a.jsx)(D.default, {
                        className: y.customizationSection,
                        isTryItOutFlow: !0,
                        showRemoveBannerButton: null != X,
                        onBannerChange: m.setTryItOutBanner,
                        showPremiumIcon: !1,
                      }),
                      (0, a.jsx)(M.default, {
                        className: y.customizationSection,
                        isTryItOutFlow: !0,
                        onAvatarChange: m.setTryItOutAvatar,
                        showRemoveAvatarButton: !1,
                        changeAvatarButtonText:
                          U.default.Messages.USER_SETTINGS_ADD_ANIMATED_AVATAR,
                        sectionTitle:
                          U.default.Messages.PREMIUM_TIER_0_FEATURE_AVATAR,
                      }),
                      (0, a.jsx)(
                        x.default,
                        {
                          isTryItOutFlow: !0,
                          className: y.customizationSection,
                          user: G,
                          sectionTitle:
                            U.default.Messages.USER_SETTINGS_AVATAR_DECORATION,
                        },
                        "decoration"
                      ),
                      (0, a.jsx)(
                        v.default,
                        {
                          className: y.customizationSection,
                          isTryItOutFlow: !0,
                          initialSelectedEffectId: $,
                          user: G,
                          sectionTitle:
                            U.default.Messages.USER_SETTINGS_PROFILE_EFFECT,
                        },
                        "effect"
                      ),
                      !el &&
                        (0, a.jsxs)(a.Fragment, {
                          children: [
                            (0, a.jsx)(i.Text, {
                              variant: "text-sm/normal",
                              className: y.premiumPerksListTitle,
                              children:
                                U.default.Messages
                                  .USER_SETTINGS_TRY_OUT_PREMIUM_ALSO_INCLUDES,
                            }),
                            (0, a.jsx)(_.default, {
                              onSubscribeModalClose: e => {
                                e &&
                                  ((0, r.setPendingAvatar)(Q),
                                  (0, m.setPendingBanner)(X),
                                  (0, m.setPendingThemeColors)(z));
                              },
                              subscriptionTier:
                                j.PremiumSubscriptionSKUs.TIER_2,
                              className: y.premiumSubscribeButton,
                              size: i.Button.Sizes.MEDIUM,
                              buttonText: H
                                ? U.default.Messages
                                    .USER_SETTINGS_PROFILE_THEMES_UPSELL_UPGRADE
                                : er
                                  ? U.default.Messages.PREMIUM_DISCOUNT_CTA.format(
                                      {
                                        percent:
                                          null == ei
                                            ? void 0
                                            : ei.discount.amount,
                                      }
                                    )
                                  : U.default.Messages.PREMIUM_UPSELL_GET_NITRO,
                            }),
                          ],
                        }),
                    ],
                  }),
                }),
                el &&
                  (0, a.jsxs)("div", {
                    children: [
                      (0, a.jsx)("div", { className: y.premiumTier2Divider }),
                      (0, a.jsx)(f.default, {
                        type: j.PremiumUpsellTypes
                          .CUSTOM_PROFILE_TRY_OUT_UPSELL,
                        subscriptionTier: j.PremiumSubscriptionSKUs.TIER_2,
                      }),
                    ],
                  }),
              ],
            }),
          })
        );
      }
    },
    543306: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return c;
          },
        }),
        s("222007");
      var a = s("884691"),
        n = s("65597"),
        l = s("79112"),
        i = s("26092"),
        r = s("49111"),
        o = s("397336");
      let d = new Set(Object.values(o.ProfileCustomizationSubsection)),
        u = e => null != e && d.has(e);
      var c = () => {
        let e = (0, n.default)([i.default], () => {
            let e = i.default.getSubsection();
            return u(e) ? e : o.ProfileCustomizationSubsection.USER_PROFILE;
          }),
          t = a.useCallback(
            t => {
              e !== t &&
                l.default.setSection(
                  r.UserSettingsSections.PROFILE_CUSTOMIZATION,
                  t
                );
            },
            [e]
          );
        return { subsection: e, setSubsection: t };
      };
    },
    493390: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          openProfileEffectModal: function () {
            return l;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("77078");
      let l = e => {
        let { analyticsLocations: t, initialSelectedEffectId: l, guild: i } = e;
        (0, n.openModalLazy)(async () => {
          let { default: e } = await s.el("889793").then(s.bind(s, "889793"));
          return s =>
            (0, a.jsx)(e, {
              ...s,
              guild: i,
              initialSelectedEffectId: l,
              analyticsLocations: t,
            });
        }, {});
      };
    },
    49470: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return S;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("77078"),
        l = s("701909"),
        i = s("879364"),
        r = s("588025"),
        o = s("301259"),
        d = s("49111"),
        u = s("782340"),
        c = s("38845"),
        S = () => {
          let { quests: e, isFetchingCurrentQuests: t } = (0, i.useQuests)(
            void 0,
            { fetch: !0 }
          );
          return ((0, i.useDismissNewQuestBadge)(), t)
            ? (0, a.jsx)(n.Spinner, { className: c.spinner })
            : 0 === e.length
              ? null
              : (0, a.jsx)(n.FormSection, {
                  className: c.questsContainer,
                  children: (0, a.jsxs)(n.HeadingLevel, {
                    component: (0, a.jsxs)("div", {
                      className: c.questsHeading,
                      children: [
                        (0, a.jsx)(n.Heading, {
                          variant: "heading-md/semibold",
                          className: c.questsHeading,
                          children: u.default.Messages.QUESTS,
                        }),
                        (0, a.jsx)(n.Text, {
                          variant: "text-xs/normal",
                          className: c.questsHeadingLearnMore,
                          children:
                            u.default.Messages.QUESTS_LEARN_MORE_LINK.format({
                              questsLearnMoreLink: l.default.getArticleURL(
                                d.HelpdeskArticles.QUESTS_LEARN_MORE
                              ),
                            }),
                        }),
                      ],
                    }),
                    children: [
                      (0, a.jsx)(n.FormDivider, { className: c.divider }),
                      e.map(e =>
                        (0, a.jsx)(
                          o.QuestsCard,
                          {
                            quest: e,
                            location: r.QuestContent.QUEST_INVENTORY_CARD,
                          },
                          e.id
                        )
                      ),
                    ],
                  }),
                });
        };
    },
    456931: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return n;
          },
        });
      var a = s("913144"),
        n = {
          startSpeedTest() {
            a.default.dispatch({ type: "RTC_SPEED_TEST_START_TEST" });
          },
          stopSpeedTest() {
            a.default.dispatch({ type: "RTC_SPEED_TEST_STOP_TEST" });
          },
        };
    },
    84908: function (e, t, s) {
      "use strict";
      var a, n, l, i, r, o, d, u;
      s.r(t),
        s.d(t, {
          SpeedTestStates: function () {
            return a;
          },
          SpeedTestDirections: function () {
            return n;
          },
          SpeedTestLifecycles: function () {
            return l;
          },
          SpeedTestOpcodes: function () {
            return i;
          },
        }),
        ((r = a || (a = {})).STARTING_RECEIVER = "STARTING_RECEIVER"),
        (r.SENDING = "SENDING"),
        (r.AWAITING_RESULTS = "AWAITING_RESULTS"),
        (r.COMPLETED = "COMPLETED"),
        ((o = n || (n = {})).CLIENT_TO_SERVER = "CLIENT_TO_SERVER"),
        (o.SERVER_TO_CLIENT = "SERVER_TO_CLIENT"),
        ((d = l || (l = {}))[(d.INACTIVE = 0)] = "INACTIVE"),
        (d[(d.CANCELLED = 1)] = "CANCELLED"),
        (d[(d.AWAITING_ENDPOINT = 2)] = "AWAITING_ENDPOINT"),
        (d[(d.CONNECTING = 3)] = "CONNECTING"),
        (d[(d.PINGING = 4)] = "PINGING"),
        (d[(d.TESTING = 5)] = "TESTING"),
        (d[(d.UPLOADING = 6)] = "UPLOADING"),
        (d[(d.COMPLETED = 7)] = "COMPLETED"),
        ((u = i || (i = {}))[(u.CLIENT_TO_SERVER_START = 0)] =
          "CLIENT_TO_SERVER_START"),
        (u[(u.CLIENT_TO_SERVER_END = 1)] = "CLIENT_TO_SERVER_END"),
        (u[(u.SERVER_TO_CLIENT_START = 2)] = "SERVER_TO_CLIENT_START"),
        (u[(u.SERVER_TO_CLIENT_END = 3)] = "SERVER_TO_CLIENT_END");
    },
    868391: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return n;
          },
        }),
        s("70102"),
        s("781738");
      var a,
        n,
        l = s("552442"),
        i = s.n(l),
        r = s("44170"),
        o = s("746379"),
        d = s.n(o),
        u = s("748820"),
        c = s("981980"),
        S = s("773364"),
        E = s("417040"),
        T = s("605250"),
        f = s("42887"),
        _ = s("718517"),
        m = s("773336"),
        g = s("414074"),
        h = s("84908"),
        N = s("49111"),
        I = s("353927");
      let p = /^https/.test(((a = "https:"), "https:")) ? "wss:" : "ws:";
      n = class extends r.EventEmitter {
        connect() {
          this._backoff.cancel();
          let e = (this._socket = new E.default(this._endpoint));
          e.on(E.SocketEvent.Connecting, this._handleConnecting.bind(this, e)),
            e.on(E.SocketEvent.Connect, this._handleConnect.bind(this, e)),
            e.on(
              E.SocketEvent.Disconnect,
              this._handleDisconnect.bind(this, e)
            ),
            e.on(E.SocketEvent.Resuming, this._handleResuming.bind(this, e)),
            e.on(E.SocketEvent.Ready, this._handleReady.bind(this, e)),
            e.on(E.SocketEvent.Speaking, this._handleSpeaking.bind(this, e)),
            e.on(E.SocketEvent.Video, this._handleVideo.bind(this, e)),
            e.on(E.SocketEvent.Ping, this._handleControlPing.bind(this)),
            e.on(
              E.SocketEvent.ClientDisconnect,
              this._handleClientDisconnect.bind(this)
            ),
            e.on(E.SocketEvent.Codecs, this._handleCodecs.bind(this)),
            e.on(
              E.SocketEvent.MediaSessionId,
              this._handleMediaSessionId.bind(this)
            ),
            e.on(
              E.SocketEvent.MediaSinkWants,
              this._handleMediaSinkWants.bind(this)
            ),
            e.on(
              E.SocketEvent.VoiceBackendVersion,
              this._handleCodeVersion.bind(this)
            ),
            e.on(
              E.SocketEvent.KeyframeInterval,
              this._handleKeyframeInterval.bind(this)
            ),
            e.on(
              E.SocketEvent.ChannelOptionsUpdateRtcLog,
              this._handleUpdateRtcLog.bind(this)
            ),
            e.on(E.SocketEvent.SpeedTest, this._handleSpeedTest.bind(this)),
            e.setHeartbeatIntervalModifier(2),
            e.connect();
        }
        destroy() {
          if (
            (this._backoff.cancel(),
            this._cleanupSocket(),
            null != this._connection)
          ) {
            let e = this._connection;
            (this._connection = null), e.destroy();
          }
          this.removeAllListeners(), (this._destroyed = !0);
        }
        _cleanupSocket() {
          let e = this._socket;
          null != e &&
            (e.close(), e.removeAllListeners(), (this._socket = null));
        }
        setState(e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          this.logger.info(
            "RTC connection state: ".concat(this.state, " => ").concat(e)
          ),
            (this.state = e),
            this.emit(
              "state",
              e,
              {
                hostname: this.hostname,
                channelId: i(this.rtcServerId).prev().toString(),
              },
              t
            );
        }
        startClientToServerSpeedTest(e) {
          this.state === N.RTCConnectionStates.RTC_CONNECTED &&
            ((this._speedTestParams = e),
            (this._speedTestDirection = h.SpeedTestDirections.CLIENT_TO_SERVER),
            this._setSpeedTestState(h.SpeedTestStates.STARTING_RECEIVER),
            this._speedTest(h.SpeedTestOpcodes.CLIENT_TO_SERVER_START, {}));
        }
        startServerToClientSpeedTest(e) {
          let t = this._connection;
          this.state === N.RTCConnectionStates.RTC_CONNECTED &&
            null != t &&
            ((this._speedTestParams = e),
            (this._speedTestDirection = h.SpeedTestDirections.SERVER_TO_CLIENT),
            this._setSpeedTestState(h.SpeedTestStates.STARTING_RECEIVER),
            t.startSpeedTestReceiver(() => {
              var e, t, s;
              this._setSpeedTestState(h.SpeedTestStates.SENDING),
                this._speedTest(h.SpeedTestOpcodes.SERVER_TO_CLIENT_START, {
                  cluster_size:
                    null === (e = this._speedTestParams) || void 0 === e
                      ? void 0
                      : e.clusterSize,
                  cluster_interval_ms:
                    null === (t = this._speedTestParams) || void 0 === t
                      ? void 0
                      : t.clusterIntervalMs,
                  num_clusters:
                    null === (s = this._speedTestParams) || void 0 === s
                      ? void 0
                      : s.numClusters,
                });
            }, -1));
        }
        stopClientToServerSpeedTest() {
          this._speedTest(h.SpeedTestOpcodes.CLIENT_TO_SERVER_END, {}),
            null != this._connection && this._connection.stopSpeedTestSender();
        }
        stopServerToClientSpeedTest() {
          this._speedTest(h.SpeedTestOpcodes.SERVER_TO_CLIENT_END, {}),
            null != this._connection &&
              this._connection.stopSpeedTestReceiver(() => {});
        }
        getNetworkOverhead() {
          return this._networkOverhead;
        }
        setPingInterval(e) {
          null != this._connection && this._connection.setPingInterval(e);
        }
        _setSpeedTestState(e) {
          (this._speedTestState = e), this.emit("speed-test-state", e);
        }
        _completeSpeedTests(e, t) {
          (this._speedTestState = h.SpeedTestStates.COMPLETED),
            this.emit("speed-test-completed", e, t);
        }
        _speedTest(e, t) {
          let s = this._socket;
          null != s && s.speedTest(e, t);
        }
        _handleConnecting(e) {
          null != this._endpoint &&
            this.logger.info(
              "Connecting to RTC server "
                .concat(this._endpoint, ", rtc-connection-id: ")
                .concat(this._rtcConnectionId)
            ),
            this.setState(N.RTCConnectionStates.CONNECTING);
        }
        _handleConnect(e) {
          let t = this.token;
          if (null == t)
            throw Error("RTCConnection._handleConnect(...): Token is missing.");
          {
            this.logger.info("Connected to RTC server.");
            let s = [{ rid: "100", type: I.MediaTypes.TEST, quality: 100 }];
            e.identify({
              serverId: this.rtcServerId,
              userId: this.userId,
              sessionId: this.sessionId,
              token: t,
              maxSecureFramesVersion:
                f.default.getSupportedSecureFramesProtocolVersion(
                  this.rtcServerId
                ),
              video: !1,
              streamParameters: s,
            }),
              this.setState(N.RTCConnectionStates.AUTHENTICATING);
          }
        }
        _handleDisconnect(e, t, s, a) {
          this.logger.info(
            "Disconnected from RTC server, clean: "
              .concat(t, ", code: ")
              .concat(s, ", reason: ")
              .concat(a, ", state: ")
              .concat(this.state)
          );
          let n = "Force Close" !== a;
          if (n) {
            let e = this._backoff.fail(this.reconnect);
            this.logger.warn(
              "Disconnect was not clean! reason="
                .concat(a, ". Reconnecting in ")
                .concat((e / 1e3).toFixed(2), " seconds.")
            );
          }
          if (null != this._connection) {
            let e = this._connection;
            (this._connection = null), e.destroy();
          }
          this.setState(N.RTCConnectionStates.DISCONNECTED, {
            willReconnect: n,
          });
        }
        _handleResuming(e) {
          this.emit("resuming");
        }
        _handleReady(e, t, s, a, n, l, r) {
          this.setState(N.RTCConnectionStates.RTC_CONNECTING),
            (this.mediaEnginePort = s),
            (this.mediaEngineAddress = t);
          let o = f.default.getMediaEngine(),
            d = o.speedTester(
              {
                userId: this.userId,
                channelId: i(this.rtcServerId).prev().toString(),
                guildId: this.rtcServerId,
              },
              {
                ssrc: n,
                address: t,
                port: s,
                modes: a,
                experiments: [],
                streamParameters: l,
                qosEnabled: f.default.getQoS(),
              }
            );
          d.on(
            S.BaseSpeedTesterEvent.Connected,
            this._handleMediaEngineConnected.bind(this, e, d)
          ),
            d.on(
              S.BaseSpeedTesterEvent.Error,
              this._handleMediaEngineError.bind(this, e, d)
            ),
            d.on(
              S.BaseSpeedTesterEvent.ConnectionStateChange,
              this._handleMediaEngineConnectionStateChange.bind(this, e, d)
            ),
            d.on(
              S.BaseSpeedTesterEvent.Ping,
              this._handleMediaEnginePing.bind(this, e)
            ),
            d.on(
              S.BaseSpeedTesterEvent.PingTimeout,
              this._handleMediaEnginePingTimeout.bind(this, e)
            ),
            (this._connection = d);
        }
        _handleSpeaking(e, t, s, a) {}
        _handleVideo(e, t, s, a, n) {}
        _handleControlPing(e) {}
        _handleClientDisconnect(e) {}
        _handleCodecs(e, t) {
          let s = this._connection;
          null != s && null != this.protocol
            ? (s.setCodecs(null != e && "" !== e ? e : I.Codecs.OPUS, "TEST"),
              this.emit("ready"))
            : this.logger.warn(
                "Cannot set codecs on connection with protocol:",
                this.protocol
              );
        }
        _handleSpeedTest(e, t) {
          let s = this._connection;
          if (null != s && null != e) {
            if (
              this._speedTestState === h.SpeedTestStates.STARTING_RECEIVER &&
              this._speedTestDirection ===
                h.SpeedTestDirections.CLIENT_TO_SERVER &&
              e === h.SpeedTestOpcodes.CLIENT_TO_SERVER_START
            ) {
              var a;
              this._setSpeedTestState(h.SpeedTestStates.SENDING),
                s.startSpeedTestSender(
                  (e, t) => {
                    this._speedTest(
                      h.SpeedTestOpcodes.CLIENT_TO_SERVER_END,
                      {}
                    ),
                      this._setSpeedTestState(
                        h.SpeedTestStates.AWAITING_RESULTS
                      );
                  },
                  this._speedTestParams.clusterSize,
                  this._speedTestParams.clusterIntervalMs,
                  this._speedTestParams.numClusters
                );
            }
            if (
              this._speedTestState === h.SpeedTestStates.AWAITING_RESULTS &&
              this._speedTestDirection ===
                h.SpeedTestDirections.CLIENT_TO_SERVER &&
              e === h.SpeedTestOpcodes.CLIENT_TO_SERVER_END
            ) {
              let e = t.results,
                s = (0, g.speedTestSummary)(
                  e,
                  this._speedTestParams,
                  null !== (a = this._networkOverhead) && void 0 !== a ? a : 0
                );
              (this._speedTestDirection = null),
                (this._speedTestParams = null),
                this._completeSpeedTests(e, s);
            }
            this._speedTestState === h.SpeedTestStates.SENDING &&
              this._speedTestDirection ===
                h.SpeedTestDirections.SERVER_TO_CLIENT &&
              e === h.SpeedTestOpcodes.SERVER_TO_CLIENT_END &&
              (this._setSpeedTestState(h.SpeedTestStates.AWAITING_RESULTS),
              s.stopSpeedTestReceiver((e, t) => {
                var s;
                let a = (0, g.speedTestSummary)(
                  t,
                  this._speedTestParams,
                  null !== (s = this._networkOverhead) && void 0 !== s ? s : 0
                );
                (this._speedTestDirection = null),
                  (this._speedTestParams = null),
                  this._completeSpeedTests(t, a);
              }));
          }
        }
        _handleMediaSessionId(e) {}
        _handleMediaSinkWants(e) {}
        _handleCodeVersion(e, t) {}
        _handleKeyframeInterval(e) {}
        _handleUpdateRtcLog(e) {}
        _handleMediaEngineConnected(e, t, s, a) {
          if (
            (this.logger.info(
              "RTC connected to media server: "
                .concat(this.mediaEngineAddress, ":")
                .concat(this.mediaEnginePort)
            ),
            e !== this._socket)
          ) {
            this.logger.warn("Socket mismatch, disconnecting");
            return;
          }
          switch (((this.protocol = s), s)) {
            case "udp":
              this.logger.info("Sending UDP info to RTC server.", a, []),
                e.once(E.SocketEvent.Encryption, (e, s) => {
                  t === this._connection &&
                    (t.setEncryption(e, s),
                    t.getNetworkOverhead(e => (this._networkOverhead = e)));
                }),
                e.selectProtocol(s, this._rtcConnectionId, a, []);
              break;
            case "webrtc":
              this.logger.info("Sending local SDP to RTC server."),
                e.once(E.SocketEvent.SDP, this._handleSDP.bind(this)),
                e.selectProtocol(s, this._rtcConnectionId, a);
              break;
            default:
              this.logger.error("Unable to determine protocol.");
              return;
          }
          this._backoff.succeed();
        }
        _handleMediaEngineError(e, t, s) {
          e === this._socket &&
            this.logger.error(
              "Error occurred while connecting to RTC server: ".concat(s)
            );
        }
        _handleMediaEngineConnectionStateChange(e, t, s) {
          if (
            (this.logger.info(
              "RTC media connection state change: "
                .concat(this.state, " => ")
                .concat(s)
            ),
            e !== this._socket)
          )
            return;
          let a = this.state;
          switch (s) {
            case I.ConnectionStates.DISCONNECTED:
              this.setState(N.RTCConnectionStates.RTC_DISCONNECTED);
              break;
            case I.ConnectionStates.CONNECTING:
              this.setState(N.RTCConnectionStates.RTC_CONNECTING);
              break;
            case I.ConnectionStates.CONNECTED:
              this.setState(N.RTCConnectionStates.RTC_CONNECTED);
              break;
            case I.ConnectionStates.NO_ROUTE:
              this.setState(N.RTCConnectionStates.NO_ROUTE);
              break;
            case I.ConnectionStates.ICE_CHECKING:
              this.setState(N.RTCConnectionStates.ICE_CHECKING);
              break;
            case I.ConnectionStates.DTLS_CONNECTING:
              this.setState(N.RTCConnectionStates.DTLS_CONNECTING);
          }
          a === N.RTCConnectionStates.RTC_CONNECTING &&
          this.state === N.RTCConnectionStates.RTC_DISCONNECTED
            ? this.reconnect()
            : this.state === N.RTCConnectionStates.NO_ROUTE &&
              this._backoff.fail(this.reconnect);
        }
        _handleMediaEnginePing(e, t) {
          this.emit("ping", t);
        }
        _handleMediaEnginePingTimeout(e, t, s) {
          this.emit("ping-timeout", s);
        }
        _handleSDP(e) {
          let t = this._connection;
          null != t && null != this.protocol
            ? t.setSDP(e)
            : this.logger.warn(
                "Cannot set SDP on connection with protocol:",
                this.protocol
              );
        }
        constructor({
          userId: e,
          sessionId: t,
          rtcServerId: s,
          endpoint: a,
          token: n,
        }) {
          super(),
            (this.reconnect = () => {
              let e = this._socket;
              null != e && (e.close(), e.connect());
            }),
            (this._rtcConnectionId = (0, u.v4)()),
            (this.logger = new T.default(
              "RTCSpeedTestRTCConnection(".concat(s, ")")
            )),
            (this.userId = e),
            (this.sessionId = t),
            (this.rtcServerId = s),
            (this.mediaEnginePort = null),
            (this.mediaEngineAddress = null),
            (this._speedTestState = null),
            (this._speedTestDirection = null),
            (this._speedTestParams = null),
            (this.state = N.RTCConnectionStates.AWAITING_ENDPOINT),
            (this._socket = null),
            (this.token = n),
            (this._destroyed = !1),
            (this._connection = null),
            (this._backoff = new c.default(
              1 * _.default.Millis.SECOND,
              10 * _.default.Millis.SECOND
            )),
            (a = "".concat(p, "//").concat(a)),
            (0, m.isAndroid)() &&
              (a = (a = a.replace(".gg", ".media")).replace(":80", ":443"));
          let { hostname: l, port: i } = d.parse(a),
            r = null != i ? parseInt(i) : NaN;
          null != l &&
            (80 === r || 443 === r) &&
            (a = "".concat(p, "//").concat(l)),
            (this._endpoint = a + "/"),
            (this.hostname = l),
            (this._networkOverhead = null);
        }
      };
    },
    610109: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return j;
          },
        }),
        s("424973"),
        s("222007");
      var a = s("446674"),
        n = s("872717"),
        l = s("913144"),
        i = s("605250"),
        r = s("271938"),
        o = s("42887"),
        d = s("985365"),
        u = s("590401"),
        c = s("800762"),
        S = s("456931"),
        E = s("868391"),
        T = s("414074"),
        f = s("84908"),
        _ = s("49111"),
        m = s("353927");
      new i.default("RTCSpeedTestStore");
      let g = [
          {
            clusterSize: 40,
            clusterIntervalMs: 20,
            numClusters: 1500,
            direction: f.SpeedTestDirections.CLIENT_TO_SERVER,
          },
          {
            clusterSize: 40,
            clusterIntervalMs: 20,
            numClusters: 1500,
            direction: f.SpeedTestDirections.SERVER_TO_CLIENT,
          },
          {
            clusterSize: 160,
            clusterIntervalMs: 20,
            numClusters: 1500,
            direction: f.SpeedTestDirections.CLIENT_TO_SERVER,
          },
          {
            clusterSize: 160,
            clusterIntervalMs: 20,
            numClusters: 1500,
            direction: f.SpeedTestDirections.SERVER_TO_CLIENT,
          },
          {
            clusterSize: 4125,
            clusterIntervalMs: 33,
            numClusters: 455,
            direction: f.SpeedTestDirections.CLIENT_TO_SERVER,
          },
          {
            clusterSize: 4125,
            clusterIntervalMs: 33,
            numClusters: 455,
            direction: f.SpeedTestDirections.SERVER_TO_CLIENT,
          },
          {
            clusterSize: 17e3,
            clusterIntervalMs: 17,
            numClusters: 295,
            direction: f.SpeedTestDirections.CLIENT_TO_SERVER,
          },
          {
            clusterSize: 17e3,
            clusterIntervalMs: 17,
            numClusters: 295,
            direction: f.SpeedTestDirections.SERVER_TO_CLIENT,
          },
        ],
        h = g.length,
        N = {
          running: !1,
          region: null,
          endpoint: null,
          connection: null,
          rtcServerId: null,
          connected: !1,
          currentTest: null,
          failed: !1,
          lifecycle: f.SpeedTestLifecycles.INACTIVE,
          results: [],
          pings: [],
          notes: "",
        };
      function I(e, t, s) {
        e === _.RTCConnectionStates.RTC_CONNECTED
          ? (N.connected = !0)
          : (e === _.RTCConnectionStates.DISCONNECTED ||
              e === _.RTCConnectionStates.RTC_DISCONNECTED) &&
            (N.lifecycle === f.SpeedTestLifecycles.TESTING &&
              ((N.failed = !0), v(), L()),
            (N.connected = !1));
      }
      function p() {
        N.lifecycle === f.SpeedTestLifecycles.TESTING &&
          ((N.failed = !0), v(), L());
      }
      function C() {
        if (N.lifecycle === f.SpeedTestLifecycles.CONNECTING) {
          var e;
          R(f.SpeedTestLifecycles.PINGING),
            null === (e = N.connection) ||
              void 0 === e ||
              e.setPingInterval(500),
            x();
        }
      }
      function A(e, t) {
        if (null != N.currentTest)
          !0 !== N.failed &&
            ((N.currentTest = N.currentTest + 1),
            N.results.push({ payload: e, summary: t }),
            N.currentTest === h
              ? (R(f.SpeedTestLifecycles.UPLOADING), L())
              : D());
      }
      function O(e) {
        void 0 !== e &&
          N.pings.length < 10 &&
          (N.pings.push(e),
          N.pings.length < 10 && R(f.SpeedTestLifecycles.PINGING),
          x());
      }
      function x() {
        if (
          N.lifecycle === f.SpeedTestLifecycles.PINGING &&
          10 === N.pings.length
        ) {
          var e;
          null === (e = N.connection) || void 0 === e || e.setPingInterval(5e3),
            (N.currentTest = 0),
            D();
        }
      }
      function M() {
        if (null == N.connection) return !1;
        N.connection.destroy(), (N.connection = null);
      }
      function R(e) {
        (N.lifecycle = e),
          l.default.dispatch({
            type: "RTC_SPEED_TEST_STATE_UPDATE",
            lifecycle: e,
          });
      }
      function D() {
        var e, t;
        null !== N.currentTest &&
          (g[N.currentTest].direction === f.SpeedTestDirections.CLIENT_TO_SERVER
            ? null === (e = N.connection) ||
              void 0 === e ||
              e.startClientToServerSpeedTest(g[N.currentTest])
            : g[N.currentTest].direction ===
                f.SpeedTestDirections.SERVER_TO_CLIENT &&
              (null === (t = N.connection) ||
                void 0 === t ||
                t.startServerToClientSpeedTest(g[N.currentTest])),
          R(f.SpeedTestLifecycles.TESTING));
      }
      function v() {
        if (
          N.lifecycle === f.SpeedTestLifecycles.TESTING &&
          null != N.currentTest
        ) {
          var e, t;
          let s = g[N.currentTest].direction;
          s === f.SpeedTestDirections.CLIENT_TO_SERVER
            ? null === (e = N.connection) ||
              void 0 === e ||
              e.stopClientToServerSpeedTest()
            : null === (t = N.connection) ||
              void 0 === t ||
              t.stopServerToClientSpeedTest();
        }
      }
      async function L() {
        var e, t;
        let s = new Date().toISOString(),
          a = {
            date: s,
            endpoint: N.endpoint,
            networkOverhead:
              null === (e = N.connection) || void 0 === e
                ? void 0
                : e.getNetworkOverhead(),
            networkType: d.default.getType(),
            networkEffectiveConnectionSpeed:
              d.default.getEffectiveConnectionSpeed(),
            networkServiceProvider:
              null !== (t = d.default.getServiceProvider()) && void 0 !== t
                ? t
                : "unknown",
            notes: N.notes,
          },
          l = { info: a, ping: (0, T.speedTestPingInfo)(N.pings), tests: [] },
          i = { info: a, pings: N.pings, tests: [] };
        for (let e = 0; e < g.length; e++) {
          let t = { params: null, results: null },
            s = { params: null, results: null };
          (t.params = g[e]),
            (s.params = g[e]),
            e < N.results.length &&
              ((t.results = N.results[e].summary),
              (s.results = N.results[e].payload)),
            l.tests.push(t),
            i.tests.push(s);
        }
        await Promise.all([
          n.default.post({
            url: _.Endpoints.DEBUG_LOG(
              _.DebugLogCategory.SPEED_TEST,
              "speed_test_summary_".concat(s, ".json")
            ),
            body: JSON.stringify(l, void 0, 2),
            retries: 3,
            headers: { "Content-Type": "text/plain" },
          }),
          n.default.post({
            url: _.Endpoints.DEBUG_LOG(
              _.DebugLogCategory.SPEED_TEST,
              "speed_test_results_".concat(s, ".json")
            ),
            body: JSON.stringify(i, void 0, 2),
            retries: 3,
            headers: { "Content-Type": "text/plain" },
          }),
        ]),
          R(f.SpeedTestLifecycles.COMPLETED),
          M(),
          S.default.stopSpeedTest(),
          (N.running = !1),
          (N.notes = "");
      }
      class P extends a.default.Store {
        initialize() {
          this.waitFor(r.default, o.default, u.default, c.default);
        }
        getAvailable() {
          return !c.default.isCurrentClientInVoiceChannel();
        }
        getActive() {
          return N.running;
        }
        getEndpoint() {
          return N.endpoint;
        }
        getConnected() {
          var e;
          return null !== (e = N.connected) && void 0 !== e && e;
        }
        getLifecycle() {
          return N.lifecycle;
        }
        getFailed() {
          return N.failed;
        }
        getCurrentTest() {
          return N.currentTest;
        }
        getTestCases() {
          return g;
        }
        getTestResults() {
          return N.results;
        }
        getPings() {
          return N.pings;
        }
        getNotes() {
          return N.notes;
        }
        setNotes(e) {
          N.notes = e;
        }
        isSupported() {
          return o.default.supports(m.Features.SPEED_TEST);
        }
      }
      P.displayName = "RTCSpeedTestStore";
      var j = new P(l.default, {
        RTC_SPEED_TEST_START_TEST: function (e) {
          !N.running &&
            (R(f.SpeedTestLifecycles.AWAITING_ENDPOINT),
            (N.running = !0),
            (N.currentTest = null),
            (N.results = []),
            (N.failed = !1),
            (N.pings = []),
            (N.connected = !1),
            M());
        },
        RTC_SPEED_TEST_STOP_TEST: function (e) {
          (N.running = !1),
            M(),
            N.lifecycle !== f.SpeedTestLifecycles.COMPLETED &&
              R(f.SpeedTestLifecycles.CANCELLED);
        },
        SPEED_TEST_CREATE: function (e) {
          if (!N.running) {
            S.default.stopSpeedTest();
            return;
          }
          N.rtcServerId = e.rtcServerId;
        },
        SPEED_TEST_DELETE: function (e) {
          M(),
            (N.running = !1),
            N.lifecycle !== f.SpeedTestLifecycles.COMPLETED &&
              R(f.SpeedTestLifecycles.INACTIVE);
        },
        SPEED_TEST_SERVER_UPDATE: function (e) {
          var t;
          M(),
            (N.endpoint = null !== (t = e.endpoint) && void 0 !== t ? t : null),
            (N.connection = new E.default({
              userId: r.default.getId(),
              sessionId: r.default.getSessionId(),
              rtcServerId: N.rtcServerId,
              endpoint: e.endpoint,
              token: e.token,
            })),
            N.connection.on("state", I),
            N.connection.on("resuming", p),
            N.connection.on("ready", C),
            N.connection.on("speed-test-completed", A),
            N.connection.on("ping", O),
            N.connection.on("ping-timeout", O),
            N.connection.connect(),
            R(f.SpeedTestLifecycles.CONNECTING);
        },
      });
    },
    414074: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          speedTestRate: function () {
            return i;
          },
          speedTestDuration: function () {
            return r;
          },
          speedTestDirection: function () {
            return o;
          },
          speedTestFps: function () {
            return d;
          },
          speedTestPingInfo: function () {
            return u;
          },
          speedTestSummary: function () {
            return c;
          },
        }),
        s("222007"),
        s("311790"),
        s("477657"),
        s("811875"),
        s("90301"),
        s("652153"),
        s("28797"),
        s("817884"),
        s("597349"),
        s("667536"),
        s("690341"),
        s("492311");
      var a = s("24815"),
        n = s("226445"),
        l = s("84908");
      function i(e) {
        return (8 * e.clusterSize * 1e3) / e.clusterIntervalMs;
      }
      function r(e) {
        return (e.clusterIntervalMs * e.numClusters) / 1e3;
      }
      function o(e) {
        return e.direction === l.SpeedTestDirections.CLIENT_TO_SERVER
          ? "Client -> Server"
          : e.direction === l.SpeedTestDirections.SERVER_TO_CLIENT
            ? "Server -> Client"
            : e.direction;
      }
      function d(e) {
        return 1e3 / e.clusterIntervalMs;
      }
      function u(e) {
        let t = [...e];
        t.sort((e, t) => e - t);
        let s = t.length;
        return {
          count: s,
          min: t[0],
          p50: t[Math.floor(s / 2)],
          max: t[s - 1],
        };
      }
      function c(e, t, s) {
        let l = Uint8Array.from(a.toByteArray(e)),
          i = new DataView(l.buffer),
          r = 16,
          o = Math.ceil(t.clusterSize / 1200),
          d = t.numClusters * o,
          u = 0,
          c = 0,
          S = 0,
          E = null,
          T = null,
          f = null,
          _ = null,
          m = null;
        for (let e = 0; e < i.byteLength / r; e++) {
          let t = i.getUint32(4 * (4 * e + 0)),
            a = i.getUint32(4 * (4 * e + 1)),
            n = i.getUint32(4 * (4 * e + 2)),
            l = i.getUint32(4 * (4 * e + 3));
          u++,
            (c += a),
            (S += a + s),
            null == T && (T = l),
            (f = l),
            null == E && (E = n),
            null == _ && (_ = t);
          let r = l - (n - E);
          null == m && (m = r), r < m && (m = r);
        }
        let g = new n.Histogram(),
          h = null;
        for (let e = 0; e < i.byteLength / r; e++) {
          let t = i.getUint32(4 * (4 * e + 2)),
            s = i.getUint32(4 * (4 * e + 3)),
            a = (s - (t - E) - m) / 1e3;
          g.addSample(a), null == h && (h = a), a > h && (h = a);
        }
        let N = null != T && null != f ? (f - T) / 1e3 : 0,
          I = 1 - u / d,
          p = (8 * c) / N,
          C = (8 * S) / N,
          A = g.getReport([50, 95, 99]);
        return {
          payloadBandwidth: p,
          networkBandwidth: C,
          loss: I,
          iatP50: A.percentiles[50],
          iatP95: A.percentiles[95],
          iatP99: A.percentiles[99],
          iatMax: null != h ? h : 0,
        };
      }
    },
    281098: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          updateDmSafetyAlertsSetting: function () {
            return l;
          },
        });
      var a = s("750028"),
        n = s("872173");
      let l = e =>
        n.PreloadedUserSettingsActionCreators.updateAsync(
          "privacy",
          t => {
            t.inappropriateConversationWarnings = a.BoolValue.create({
              value: e,
            });
          },
          n.UserSettingsDelay.INFREQUENT_USER_ACTION
        );
    },
    67508: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return l;
          },
        });
      var a = s("468200"),
        n = s("782340");
      function l(e) {
        switch (e) {
          case a.SettingsOverrideReasonKeys.REDUCED_MOTION:
            return n.default.Messages.ACCESSIBILITY_REDUCED_MOTION_SETTINGS_OVERRIDE.format();
          case a.SettingsOverrideReasonKeys.REDUCED_MOTION_STICKERS:
            return n.default.Messages.STICKERS_AUTO_PLAY_HELP_DISABLED;
          default:
            return;
        }
      }
    },
    561847: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return C;
          },
        }),
        s("222007");
      var a = s("37983"),
        n = s("884691"),
        l = s("446674"),
        i = s("669491"),
        r = s("77078"),
        o = s("430568"),
        d = s("697218"),
        u = s("832132"),
        c = s("368121"),
        S = s("228220"),
        E = s("719923"),
        T = s("78581"),
        f = s("23106"),
        _ = s("429829"),
        m = s("553372"),
        g = s("191191"),
        h = s("782340"),
        N = s("758749");
      function I(e) {
        let { onSelect: t } = e,
          [s, i] = n.useState(!1),
          o = (0, l.useStateFromStores)([d.default], () =>
            d.default.getCurrentUser()
          ),
          c = E.default.canUseCustomCallSounds(o);
        function S(e) {
          c && (i(!1), null == t || t(e));
        }
        return (0, a.jsx)(r.Popout, {
          shouldShow: s,
          position: "left",
          onRequestClose: () => i(!1),
          renderPopout: e => {
            let { closePopout: t } = e;
            return (0, a.jsx)(r.Dialog, {
              children: (0, a.jsx)(g.default, {
                suppressPlaySound: !0,
                shouldShowUpsell: !1,
                guildId: null,
                channel: null,
                onClose: t,
                onSelect: S,
                gridNotice: c ? null : (0, a.jsx)(_.CustomCallSoundUpsell, {}),
                analyticsSource: "call sounds edit setting",
              }),
            });
          },
          children: e =>
            (0, a.jsx)(m.SecondaryActionButton, {
              ...e,
              onClick: () => {
                i(!s);
              },
              text: h.default.Messages.CALL_SOUNDS_SETTINGS_JOIN_SOUND_CHANGE,
              children: (0, a.jsx)(u.default, { className: N.secondaryIcon }),
            }),
        });
      }
      function p(e) {
        let { sound: t } = e,
          { previewSound: s } = (0, f.default)(t, null),
          n = (0, T.getAmplitudinalSoundboardVolume)(),
          l =
            0 === n
              ? h.default.Messages.SOUNDBOARD_SOUND_PREVIEW_SOUND_LOW_VOLUME
              : h.default.Messages.SOUNDBOARD_SOUND_PREVIEW_SOUND.format({
                  emojiName: t.emojiName,
                  soundName: t.name,
                });
        return (0, a.jsx)(m.SecondaryActionButton, {
          onClick: s,
          text: l,
          children: (0, a.jsx)(c.default, { className: N.secondaryIconActive }),
        });
      }
      function C(e) {
        let { sound: t, isGlobal: s, onSelect: n } = e,
          l = null != t,
          d = null == t ? void 0 : t.emojiId,
          u = null == t ? void 0 : t.emojiName,
          E = l && (null != u || null != d),
          T = e =>
            (0, a.jsx)(r.Text, {
              variant: "text-xs/medium",
              color: "header-secondary",
              tag: "span",
              children: e,
            });
        return (0, a.jsxs)("div", {
          className: N.soundButtonSettingContainer,
          children: [
            (0, a.jsxs)("div", {
              className: N.container,
              children: [
                E &&
                  (0, a.jsx)(o.default, {
                    emojiId: d,
                    emojiName: u,
                    className: N.emoji,
                  }),
                (0, a.jsx)(r.Text, {
                  variant: "text-xs/medium",
                  color: "header-primary",
                  className: N.soundText,
                  children:
                    null == t
                      ? h.default.Messages.NONE
                      : s
                        ? h.default.Messages.CALL_SOUNDS_SETTINGS_ALL_SERVERS.format(
                            { soundName: t.name, subtextHook: T }
                          )
                        : t.name,
                }),
                l
                  ? (0, a.jsx)(p, { sound: t })
                  : (0, a.jsx)(c.default, {
                      className: N.secondaryIconDisabled,
                    }),
              ],
            }),
            (0, a.jsxs)("div", {
              className: N.container,
              children: [
                (0, a.jsx)(I, { onSelect: n }),
                l &&
                  !s &&
                  (0, a.jsx)(m.SecondaryActionButton, {
                    onClick: () => n(null),
                    text: h.default.Messages
                      .CALL_SOUNDS_SETTINGS_JOIN_SOUND_REMOVE,
                    children: (0, a.jsx)(S.default, {
                      color: i.default.unsafe_rawColors.RED_400.css,
                      className: N.secondaryIcon,
                    }),
                  }),
              ],
            }),
          ],
        });
      }
    },
    405069: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          setSoundpack: function () {
            return r;
          },
        });
      var a = s("913144"),
        n = s("599110"),
        l = s("870696"),
        i = s("49111");
      function r(e) {
        n.default.track(i.AnalyticEvents.SOUNDPACK_UPDATED, {
          soundpack: e,
          previous_soundpack: l.default.getSoundpack(),
        }),
          a.default.dispatch({ type: "SET_SOUNDPACK", soundpack: e });
      }
    },
    820974: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return u;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("446674"),
        l = s("77078"),
        i = s("168067"),
        r = s("405069"),
        o = s("870696"),
        d = s("157246");
      function u(e) {
        let { className: t } = e,
          s = (0, n.useStateFromStores)([o.default], () =>
            o.default.getSoundpack()
          ),
          { allowAprilFoolsSoundpack: u } = i.default.useExperiment(
            { location: "a96548_1" },
            { autoTrackExposure: !1 }
          );
        if (!u) return null;
        let c = u ? (0, d.getSoundpackOptionsAprilFools2023)() : [];
        return (0, a.jsx)(l.SingleSelect, {
          className: t,
          onChange: e => (0, r.setSoundpack)(e),
          value: s,
          options: c,
        });
      }
    },
    880397: function (e, t, s) {
      "use strict";
      function a(e) {
        let t = {};
        return (
          void 0 !== e.pendingBanner && (t.banner = e.pendingBanner),
          null != e.pendingBio && (t.bio = e.pendingBio),
          null != e.pendingPronouns && (t.pronouns = e.pendingPronouns),
          void 0 !== e.pendingAccentColor &&
            (t.accent_color = e.pendingAccentColor),
          void 0 !== e.pendingThemeColors &&
            (t.theme_colors = e.pendingThemeColors),
          void 0 !== e.pendingProfileEffectId &&
            (t.profile_effect_id =
              null != e.pendingProfileEffectId
                ? e.pendingProfileEffectId
                : null),
          t
        );
      }
      function n(e) {
        let t = {};
        return (
          void 0 !== e.pendingGlobalName &&
            (t.globalName = e.pendingGlobalName),
          void 0 !== e.pendingAvatar && (t.avatar = e.pendingAvatar),
          void 0 !== e.pendingAvatarDecoration &&
            (t.avatarDecoration = e.pendingAvatarDecoration),
          t
        );
      }
      function l(e) {
        let t = {};
        if (
          (void 0 !== e.pendingAvatar && (t.avatar = e.pendingAvatar),
          void 0 !== e.pendingNickname)
        ) {
          var s;
          t.nick = null !== (s = e.pendingNickname) && void 0 !== s ? s : "";
        }
        return (
          void 0 !== e.pendingAvatarDecoration &&
            (t.avatarDecoration = e.pendingAvatarDecoration),
          t
        );
      }
      s.r(t),
        s.d(t, {
          getProfileChangesForUpdateRequest: function () {
            return a;
          },
          getAccountUpdateForUpdateRequest: function () {
            return n;
          },
          getGuildMemberChangesForUpdateRequest: function () {
            return l;
          },
        });
    },
    546605: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return a;
          },
        });
      var a = (0, s("862205").createExperiment)({
        kind: "user",
        id: "2022-06_auth_sessions_user_settings",
        label: "Auth Sessions User Settings",
        defaultConfig: { showSettings: !1 },
        treatments: [
          { id: 1, label: "Show settings", config: { showSettings: !0 } },
        ],
      });
    },
    462369: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          getSMSBackupDisabledMessage: function () {
            return l;
          },
        }),
        s("65597"),
        s("305961"),
        s("957255"),
        s("697218");
      var a = s("49111"),
        n = s("782340");
      function l(e) {
        return e.hasAnyStaffLevel() || e.hasFlag(a.UserFlags.PARTNER)
          ? n.default.Messages.MFA_SMS_DISABLED_PARTNER
          : null == e.email
            ? n.default.Messages.MFA_SMS_DISABLED_NO_EMAIL
            : null;
      }
    },
    663657: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          isMfaEmailVerificationEnabled: function () {
            return l;
          },
        });
      var a = s("862205");
      let n = (0, a.createExperiment)({
        kind: "user",
        id: "2023-07_mfa_email_verification",
        label: "Safety Experience Mfa Email Verification",
        defaultConfig: { enabled: !1 },
        treatments: [{ id: 1, label: "Enabled", config: { enabled: !0 } }],
      });
      function l() {
        let { enabled: e } = n.getCurrentConfig(
          { location: "41ef90_2" },
          { autoTrackExposure: !0 }
        );
        return e;
      }
    },
    733051: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return a;
          },
        });
      var a = (0, s("862205").createExperiment)({
        kind: "user",
        id: "2023-05_speed_test",
        label: "Speed Test User Setting",
        defaultConfig: { showSettings: !1 },
        treatments: [
          { id: 1, label: "Show speed test", config: { showSettings: !0 } },
        ],
      });
    },
    327350: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          getEntries: function () {
            return r;
          },
          sortEntries: function () {
            return o;
          },
          getBestMatches: function () {
            return d;
          },
        }),
        s("222007"),
        s("424973");
      var a = s("345570"),
        n = s.n(a);
      let l = /^(\d{4}-\d{1,2})/;
      function i(e) {
        let t = l.exec(e);
        return null != t ? t[1] : null;
      }
      function r(e) {
        return Array.from(Object.entries(e)).map(e => {
          let [t, s] = e;
          return { id: t, experiment: s };
        });
      }
      function o(e, t) {
        return e.slice().sort((e, s) => {
          if (
            null != t[null == e ? void 0 : e.id] &&
            null == t[null == s ? void 0 : s.id]
          )
            return -1;
          if (
            null == t[null == e ? void 0 : e.id] &&
            null != t[null == s ? void 0 : s.id]
          )
            return 1;
          let a = i(e.id),
            n = i(s.id);
          if (null != a && null != n) {
            let e = n.localeCompare(a);
            if (0 !== e) return e;
          }
          return e.experiment.title.localeCompare(s.experiment.title);
        });
      }
      function d(e, t) {
        let s = t.split(/\s+/g).filter(e => "" !== e);
        if (0 === s.length) return e;
        let a = [];
        for (let t of e) {
          let e = 0;
          for (let a of s)
            (function e(t, s) {
              if (Array.isArray(t)) {
                for (let a of t) if (e(a, s)) return !0;
              } else if ("object" == typeof t && null !== t) {
                for (let a of Object.values(t)) if (e(a, s)) return !0;
              } else if (
                "string" == typeof t &&
                t.toLowerCase().includes(s.toLowerCase())
              )
                return !0;
              return !1;
            })(t, a) && (e += 1);
          0 !== e && (null == a[e] && (a[e] = []), a[e].push(t));
        }
        return n(a.filter(e => void 0 !== e).reverse());
      }
    },
    101787: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return n;
          },
          useShouldWarnAuthorizedAppTwoWay: function () {
            return l;
          },
        });
      var a = s("106076");
      function n(e) {
        return (
          a.ConsoleOAuthApplications.XBOX_APPLICATION_ID === e ||
          a.ConsoleOAuthApplicationsSets.PLAYSTATION_APPLICATION_IDS.has(e)
        );
      }
      function l(e) {
        return n(e);
      }
    },
    333562: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return l;
          },
        }),
        s("222007");
      var a = s("49111");
      let n = new Set([
        a.PlatformTypes.XBOX,
        a.PlatformTypes.PLAYSTATION,
        a.PlatformTypes.PLAYSTATION_STAGING,
        a.PlatformTypes.CRUNCHYROLL,
      ]);
      function l(e) {
        return n.has(e.type) && e.twoWayLink;
      }
    },
    760947: function (e, t, s) {
      "use strict";
      function a(e) {
        return "".concat("*".repeat(e.length - 4)).concat(e.slice(-4));
      }
      function n(e) {
        let [t, s] = e.split("@");
        return "".concat("*".repeat(t.length), "@").concat(s);
      }
      s.r(t),
        s.d(t, {
          censorPhone: function () {
            return a;
          },
          censorEmail: function () {
            return n;
          },
        }),
        s("222007");
    },
    474775: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return c;
          },
        }),
        s("222007"),
        s("781738"),
        s("424973");
      var a = s("37983");
      s("884691");
      var n = s("597755"),
        l = s.n(n),
        i = s("77078"),
        r = s("49671"),
        o = s("618927"),
        d = s("782340"),
        u = s("425375");
      function c() {
        var e, t, s, n, c;
        let S = window.GLOBAL_ENV.RELEASE_CHANNEL,
          E = "275829",
          T =
            ((e = "241428ca61d01c9139a431dfd65ca80008dbb454"),
            e.substring(0, 7)),
          f =
            null === r.default || void 0 === r.default
              ? void 0
              : r.default.remoteApp.getVersion(),
          _ =
            null === r.default || void 0 === r.default
              ? void 0
              : null === (t = (s = r.default.remoteApp).getBuildNumber) ||
                  void 0 === t
                ? void 0
                : t.call(s),
          m =
            null === r.default || void 0 === r.default
              ? void 0
              : null === (n = (c = r.default.remoteApp).getAppArch) ||
                  void 0 === n
                ? void 0
                : n.call(c),
          g = (function () {
            var e;
            let t =
              null == l
                ? void 0
                : null === (e = l.os) || void 0 === e
                  ? void 0
                  : e.toString();
            if (null == t || null == r.default) return null;
            let s = r.default.os.release,
              [a, n, i] = s.split(".").map(e => parseInt(e, 10));
            return (
              t.includes("Windows 10") &&
                void 0 !== i &&
                i >= 22e3 &&
                (t = t.replace("Windows 10", "Windows 11")),
              t.includes("OS X 10.15.7") &&
                void 0 !== a &&
                a >= 20 &&
                (t = "macOS ".concat(a - 9)),
              "".concat(t, " (").concat(s, ")")
            );
          })(),
          h = [S, E, "(".concat(T, ")")];
        return (
          null != f &&
            (h.push("Host ".concat(f)),
            null != m && h.push(m.toLowerCase()),
            null != _ && h.push("(".concat(_, ")"))),
          null != g && h.push(g),
          (0, a.jsx)(o.CopiableField, {
            copyValue: h.join(" "),
            disableCopy: !1,
            copyTooltip: d.default.Messages.COPY_VERSION,
            showCopyIcon: !1,
            children: (0, a.jsxs)("div", {
              className: u.info,
              children: [
                (0, a.jsxs)(i.Text, {
                  tag: "span",
                  className: u.line,
                  variant: "text-xs/normal",
                  color: "text-muted",
                  children: [
                    S,
                    " ",
                    E,
                    " ",
                    (0, a.jsxs)("span", {
                      className: u.versionHash,
                      children: ["(", T, ")"],
                    }),
                  ],
                }),
                " ",
                null != f
                  ? (0, a.jsxs)(a.Fragment, {
                      children: [
                        (0, a.jsxs)(i.Text, {
                          tag: "span",
                          className: u.line,
                          variant: "text-xs/normal",
                          color: "text-muted",
                          children: [
                            "Host ",
                            f,
                            " ",
                            null != m
                              ? (0, a.jsxs)("span", {
                                  className: u.appArch,
                                  children: [m.toLowerCase(), " "],
                                })
                              : null,
                            null != _
                              ? (0, a.jsxs)("span", { children: ["(", _, ")"] })
                              : null,
                          ],
                        }),
                        " ",
                      ],
                    })
                  : null,
                null != g
                  ? (0, a.jsx)(i.Text, {
                      tag: "span",
                      className: u.line,
                      variant: "text-xs/normal",
                      color: "text-muted",
                      children: g,
                    })
                  : null,
              ],
            }),
          })
        );
      }
    },
    566126: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return m;
          },
        }),
        s("222007"),
        s("70102");
      var a = s("37983"),
        n = s("884691"),
        l = s("446674"),
        i = s("77078"),
        r = s("569272"),
        o = s("583711"),
        d = s("102985"),
        u = s("145131"),
        c = s("599110"),
        S = s("659632"),
        E = s("49111"),
        T = s("782340"),
        f = s("45829");
      class _ extends n.Component {
        get analyticsLocation() {
          let {
            analyticsContext: { location: e },
          } = this.props;
          return { ...e, object: E.AnalyticsObjects.BUTTON_CTA };
        }
        render() {
          let { obscureInput: e } = this.props,
            {
              codeInput: t,
              submitting: s,
              hasError: n,
              isPromoCode: l,
            } = this.state;
          return (0, a.jsxs)(i.FormSection, {
            tag: i.FormTitleTags.H1,
            title: T.default.Messages.GIFT_INVENTORY_REDEEM_CODES,
            children: [
              (0, a.jsx)(i.FormTitle, {
                children:
                  T.default.Messages
                    .APPLICATION_ENTITLEMENT_CODE_REDEMPTION_PROMPT,
              }),
              (0, a.jsx)("form", {
                onSubmit: this.handleSubmit,
                children: (0, a.jsxs)(u.default, {
                  children: [
                    (0, a.jsx)(i.TextInput, {
                      type: e ? "password" : "text",
                      value: t,
                      onChange: this.handleChange,
                      placeholder: "WUMP-AAAAA-BBBBB-CCCCC",
                      error:
                        !l && n
                          ? T.default.Messages
                              .APPLICATION_ENTITLEMENT_CODE_REDEMPTION_INVALID
                          : null,
                      className: f.codeRedemptionInput,
                    }),
                    (0, a.jsx)(i.Button, {
                      type: "submit",
                      submitting: s,
                      children:
                        T.default.Messages
                          .APPLICATION_ENTITLEMENT_CODE_REDEMPTION_REDEEM,
                    }),
                  ],
                }),
              }),
              l
                ? (0, a.jsx)(i.Text, {
                    className: f.errorMessage,
                    variant: "text-sm/normal",
                    children:
                      T.default.Messages.APPLICATION_ENTITLEMENT_CODE_REDEMPTION_PROMOTION.format(
                        {
                          promoLink: () => {
                            window.open(
                              "https://discord.com/billing/promotions/".concat(
                                t
                              )
                            );
                          },
                        }
                      ),
                  })
                : null,
            ],
          });
        }
        constructor(...e) {
          super(...e),
            (this.state = {
              codeInput: "",
              submitting: !1,
              hasError: !1,
              isPromoCode: !1,
            }),
            (this.handleChange = e => {
              this.setState({ codeInput: e, hasError: !1 });
            }),
            (this.handleSubmit = async e => {
              e.preventDefault();
              let { codeInput: t } = this.state;
              if ("" === t) return;
              let s = (0, S.processGiftCodeInput)(t);
              if (null == s) {
                this.setState({ hasError: !0 });
                return;
              }
              this.setState({ submitting: !0 });
              try {
                let e = await r.default.resolveGiftCode(s);
                if (null != e && null != e.giftCode.promotion)
                  throw (
                    (this.setState({ isPromoCode: !0 }),
                    Error("Cannnot redeem promotion code as gift"))
                  );
                c.default.track(E.AnalyticEvents.OPEN_MODAL, {
                  type: "gift_accept",
                  location: {
                    ...this.analyticsLocation,
                    object: E.AnalyticsObjects.BUTTON_CTA,
                  },
                }),
                  (0, o.openGiftCodeAcceptModal)({ processedCode: s }),
                  this.setState({ codeInput: "" });
              } catch (e) {
                this.setState({ hasError: !0 });
              } finally {
                this.setState({ submitting: !1 });
              }
            });
        }
      }
      function m() {
        let e = n.useContext(c.AnalyticsContext),
          t = (0, l.useStateFromStores)([d.default], () => d.default.enabled);
        return (0, a.jsx)(_, { analyticsContext: e, obscureInput: t });
      }
    },
    392409: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return m;
          },
        });
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("627445"),
        o = s.n(r),
        d = s("446674"),
        u = s("77078"),
        c = s("697218"),
        S = s("145131"),
        E = s("387225"),
        T = s("782340"),
        f = s("128601");
      class _ extends n.Component {
        renderNotice() {
          let {
            isClaimed: e,
            unclaimedNotice: t,
            unverifiedNotice: s,
          } = this.props;
          return e
            ? null != s
              ? s
              : T.default.Messages.NOTICE_UNVERIFIED_ACCOUNT
            : null != t
              ? t
              : T.default.Messages.NOTICE_UNCLAIMED_ACCOUNT;
        }
        renderPrimaryAction() {
          return this.props.isClaimed
            ? this.props.hasEmail
              ? (0, a.jsx)(S.default.Child, {
                  grow: 0,
                  shrink: 0,
                  children: (0, a.jsx)(E.default, {}),
                })
              : (0, a.jsx)(u.Button, {
                  size: u.Button.Sizes.MEDIUM,
                  color: u.Button.Colors.BRAND,
                  onClick: this.openChangeEmailModal,
                  children: T.default.Messages.ADD_EMAIL_SHORT,
                })
            : (0, a.jsx)(S.default.Child, {
                grow: 0,
                shrink: 0,
                children: (0, a.jsx)(u.Button, {
                  size: u.Button.Sizes.MEDIUM,
                  color: u.Button.Colors.BRAND,
                  onClick: this.openClaimAccountModal,
                  children: T.default.Messages.CLAIM_ACCOUNT,
                }),
              });
        }
        renderSecondaryAction() {
          return this.props.isClaimed && this.props.hasEmail
            ? (0, a.jsx)(S.default.Child, {
                grow: 0,
                shrink: 0,
                children: (0, a.jsx)(u.Button, {
                  color: u.Button.Colors.PRIMARY,
                  look: u.Button.Looks.LINK,
                  onClick: this.openChangeEmailModal,
                  children: T.default.Messages.CHANGE_EMAIL_SHORT,
                }),
              })
            : null;
        }
        openClaimAccountModal() {
          (0, u.openModalLazy)(async () => {
            let { default: e } = await s.el("633156").then(s.bind(s, "633156"));
            return t => (0, a.jsx)(e, { ...t });
          });
        }
        openChangeEmailModal() {
          (0, u.openModalLazy)(async () => {
            let { default: e } = await s.el("867693").then(s.bind(s, "867693"));
            return t => (0, a.jsx)(e, { ...t });
          });
        }
        render() {
          let { className: e, isClaimed: t, isVerified: s } = this.props;
          return t && s
            ? null
            : (0, a.jsx)(u.Card, {
                className: i(f.wrapper, e),
                children: (0, a.jsxs)(S.default, {
                  align: S.default.Align.CENTER,
                  children: [
                    (0, a.jsx)(S.default.Child, {
                      className: f.image,
                      grow: 0,
                      shrink: 0,
                    }),
                    (0, a.jsxs)(S.default.Child, {
                      children: [
                        (0, a.jsx)(u.Text, {
                          variant: "text-sm/normal",
                          children: this.renderNotice(),
                        }),
                        (0, a.jsxs)(S.default, {
                          justify: S.default.Justify.CENTER,
                          className: f.content,
                          children: [
                            this.renderPrimaryAction(),
                            this.renderSecondaryAction(),
                          ],
                        }),
                      ],
                    }),
                  ],
                }),
              });
        }
      }
      var m = d.default.connectStores([c.default], () => {
        let e = c.default.getCurrentUser();
        return (
          o(null != e, "EmailNotice: currentUser cannot be undefined"),
          {
            isClaimed: e.isClaimed(),
            isVerified: e.verified,
            hasEmail: null != e.email,
          }
        );
      })(_);
    },
    943927: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return L;
          },
        }),
        s("222007"),
        s("70102");
      var a = s("37983"),
        n = s("884691"),
        l = s("866227"),
        i = s.n(l),
        r = s("446674"),
        o = s("862337"),
        d = s("77078"),
        u = s("569272"),
        c = s("299285"),
        S = s("65324"),
        E = s("271938"),
        T = s("55411"),
        f = s("102985"),
        _ = s("10514"),
        m = s("552712"),
        g = s("233976"),
        h = s("920700"),
        N = s("145131"),
        I = s("953109"),
        p = s("461380"),
        C = s("306160"),
        A = s("659632"),
        O = s("380186"),
        x = s("646718"),
        M = s("782340"),
        R = s("43965");
      class D extends n.PureComponent {
        componentWillUnmount() {
          this._copyModeTimeout.stop();
        }
        get copyButtonText() {
          switch (this.state.copyMode) {
            case h.CopyInputModes.SUCCESS:
              return M.default.Messages.BILLING_GIFT_COPIED;
            case h.CopyInputModes.ERROR:
              return M.default.Messages.FAILED;
            default:
              return M.default.Messages.COPY;
          }
        }
        handleRevoke(e) {
          u.default.revokeGiftCode(e);
        }
        render() {
          let { hideCode: e, giftCode: t } = this.props,
            { copyMode: s } = this.state;
          return (0, a.jsxs)(N.default, {
            direction: N.default.Direction.VERTICAL,
            className: R.giftCodeRow,
            children: [
              (0, a.jsx)(h.default, {
                className: R.codeText,
                value: (0, A.getGiftCodeURL)(t.code),
                text: this.copyButtonText,
                mode: s,
                supportsCopy: C.SUPPORTS_COPY,
                hideMessage: e
                  ? M.default.Messages.GIFT_INVENTORY_HIDDEN
                  : null,
                onCopy: this.handleCopy,
                buttonColor: h.default.ButtonColors.BRAND,
                buttonLook: h.default.ButtonLooks.FILLED,
              }),
              (0, a.jsxs)("div", {
                className: R.subTextRow,
                children: [
                  null != t.expiresAt
                    ? (0, a.jsxs)(n.Fragment, {
                        children: [
                          M.default.Messages.GIFT_INVENTORY_EXPIRES_IN.format({
                            hours: t.expiresAt.diff(i(), "h"),
                          }),
                          " ",
                          "—\xa0",
                        ],
                      })
                    : null,
                  (0, a.jsx)(d.Clickable, {
                    tag: "a",
                    onClick: () => this.handleRevoke(t.code),
                    children: M.default.Messages.REVOKE,
                  }),
                ],
              }),
            ],
          });
        }
        constructor(...e) {
          super(...e),
            (this._copyModeTimeout = new o.Timeout()),
            (this.state = { copyMode: h.CopyInputModes.DEFAULT }),
            (this.handleCopy = e => {
              let { giftCode: t, sku: s } = this.props;
              (0, A.trackGiftCodeCopy)(t, s);
              try {
                (0, C.copy)(e),
                  this.setState({ copyMode: h.CopyInputModes.SUCCESS });
              } catch (e) {
                this.setState({ copyMode: h.CopyInputModes.ERROR });
              }
              this._copyModeTimeout.start(1e3, () => {
                this.setState({ copyMode: h.CopyInputModes.DEFAULT });
              });
            });
        }
      }
      class v extends n.PureComponent {
        componentDidMount() {
          this._loadedAt = Date.now();
        }
        renderTitle() {
          let e;
          let { sku: t, subscriptionPlan: s, giftCodeBatchId: n } = this.props;
          return (
            (e =
              n === x.BLACK_FRIDAY_2020_GIFT_CODE_BATCH_ID
                ? M.default.Messages.BLACK_FRIDAY_PROMOTION_GIFT_INVENTORY_TITLE
                : n === x.STICKERS_GIFT_CODE_BATCH_ID && null != s
                  ? (s.interval === x.SubscriptionIntervalTypes.MONTH
                      ? M.default.Messages.STICKERS_GIFT_INVENTORY_TITLE_MONTH
                      : M.default.Messages.STICKERS_GIFT_INVENTORY_TITLE_YEAR
                    ).format({
                      skuName: t.name,
                      intervalCount: s.intervalCount,
                    })
                  : null == s
                    ? t.name
                    : (s.interval === x.SubscriptionIntervalTypes.MONTH
                        ? M.default.Messages.GIFT_INVENTORY_SUBSCRIPTION_MONTHS
                        : M.default.Messages.GIFT_INVENTORY_SUBSCRIPTION_YEARS
                      ).format({
                        skuName: t.name,
                        intervalCount: s.intervalCount,
                      })),
            (0, a.jsx)("div", { className: R.gameName, children: e })
          );
        }
        renderGenerateGiftCodeRow() {
          return (0, a.jsxs)(N.default, {
            justify: N.default.Justify.BETWEEN,
            align: N.default.Align.CENTER,
            className: R.generateCodeRow,
            children: [
              (0, a.jsx)("div", {
                className: R.codeText,
                children: M.default.Messages.GIFT_INVENTORY_GENERATE_HELP,
              }),
              (0, a.jsx)(d.Button, {
                submitting: this.state.isCreating,
                size: d.Button.Sizes.SMALL,
                color: d.Button.Colors.BRAND,
                onClick: this.handleGenerateGiftCode,
                children: M.default.Messages.GIFT_INVENTORY_GENERATE_LINK,
              }),
            ],
          });
        }
        setIsHovered(e) {
          this.setState({ isHovered: e });
        }
        render() {
          let {
              entitlements: e,
              application: t,
              giftCodes: s,
              className: l,
              sku: i,
              isFetching: r,
              hideCodes: o,
              giftStyle: u,
            } = this.props,
            { isOpen: c } = this.state;
          return (0, a.jsxs)(g.default, {
            className: l,
            children: [
              (0, a.jsx)(d.Clickable, {
                onClick: this.handleToggleOpen,
                className: R.card,
                onMouseEnter: () => this.setIsHovered(!0),
                onMouseLeave: () => this.setIsHovered(!1),
                children: (0, a.jsx)(g.default.Header, {
                  splashArtURL: t.getSplashURL(512),
                  children: (0, a.jsxs)("div", {
                    className: R.cardHeader,
                    children: [
                      (0, a.jsxs)(N.default, {
                        align: N.default.Align.CENTER,
                        children: [
                          null != u
                            ? (0, a.jsx)(S.default, {
                                giftStyle: u,
                                className: R.seasonalGiftBox,
                                shouldAnimate: this.state.isHovered,
                              })
                            : (0, a.jsx)(I.default, {
                                game: t,
                                size: I.default.Sizes.MEDIUM,
                                skuId: i.id,
                              }),
                          (0, a.jsxs)("div", {
                            className: R.headerText,
                            children: [
                              this.renderTitle(),
                              (0, a.jsx)("div", {
                                className: R.subTextHeader,
                                children:
                                  M.default.Messages.GIFT_INVENTORY_COPIES.format(
                                    { copies: e.length }
                                  ),
                              }),
                            ],
                          }),
                        ],
                      }),
                      (0, a.jsx)(p.default, {
                        direction: c
                          ? p.default.Directions.UP
                          : p.default.Directions.DOWN,
                        className: R.expandIcon,
                      }),
                    ],
                  }),
                }),
              }),
              c
                ? (0, a.jsx)(g.default.Body, {
                    children: r
                      ? (0, a.jsx)(d.Spinner, { className: R.spinner })
                      : (0, a.jsxs)(n.Fragment, {
                          children: [
                            s.length < e.length
                              ? this.renderGenerateGiftCodeRow()
                              : null,
                            s.map(e =>
                              (0, a.jsx)(
                                D,
                                { giftCode: e, sku: i, hideCode: o },
                                e.code
                              )
                            ),
                          ],
                        }),
                  })
                : null,
            ],
          });
        }
        constructor(...e) {
          super(...e),
            (this._loadedAt = null),
            (this.state = { isOpen: !1, isCreating: !1, isHovered: !1 }),
            (this.handleGenerateGiftCode = async e => {
              e.stopPropagation();
              let {
                skuId: t,
                subscriptionPlanId: s,
                giftStyle: a,
              } = this.props;
              this.setState({ isCreating: !0 }),
                await u.default.createGiftCode(t, s, a),
                this.setState({ isCreating: !1, isOpen: !0 });
            }),
            (this.handleToggleOpen = () => {
              let { skuId: e, subscriptionPlanId: t, loadedAt: s } = this.props,
                a = !this.state.isOpen;
              (null == s || null == this._loadedAt || s < this._loadedAt) &&
                a &&
                u.default.fetchUserGiftCodesForSKU(e, t),
                this.setState({ isOpen: !this.state.isOpen });
            });
        }
      }
      var L = r.default.connectStores(
        [m.default, f.default, T.default, c.default, _.default, E.default],
        e => {
          let { skuId: t, subscriptionPlanId: s, giftStyle: a } = e,
            n = m.default.get(t);
          if (null == n)
            throw Error("SKU was unavailable while rendering gift.");
          let l = T.default
            .getForGifterSKUAndPlan(E.default.getId(), t, s)
            .filter(e => !e.isClaimed)
            .filter(e => e.giftStyle === a);
          return {
            sku: n,
            hideCodes: f.default.enabled,
            isFetching: T.default.getUserGiftCodesFetchingForSKUAndPlan(t, s),
            loadedAt: T.default.getUserGiftCodesLoadedAtForSKUAndPlan(t, s),
            application: c.default.getApplication(n.applicationId),
            subscriptionPlan:
              null != s ? (0, O.getOrFetchSubscriptionPlan)(s) : null,
            giftCodes: l,
          };
        }
      )(v);
    },
    832837: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return j;
          },
        }),
        s("222007");
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("917351"),
        o = s.n(r),
        d = s("446674"),
        u = s("77078"),
        c = s("913144"),
        S = s("316718"),
        E = s("79112"),
        T = s("841098"),
        f = s("376152"),
        _ = s("243632"),
        m = s("180273"),
        g = s("367376"),
        h = s("170788"),
        N = s("44678"),
        I = s("694540"),
        p = s("541840"),
        C = s("437712"),
        A = s("659632"),
        O = s("845579"),
        x = s("943927"),
        M = s("663952"),
        R = s("49111"),
        D = s("646718"),
        v = s("782340"),
        L = s("399953");
      function P(e) {
        let t,
          {
            outboundPromotion: s,
            code: l,
            addClaimedOutboundPromotionCode: r,
          } = e,
          [o, d] = n.useState(!1),
          [c, S] = n.useState(!1),
          E = () => d(e => !e),
          f = (0, T.default)(),
          _ = (0, N.getPromotionImageURL)(s.id, f),
          m = null != l,
          I = (0, h.default)(s, m);
        m && o
          ? (t =
              v.default.Messages.OUTBOUND_PROMOTION_CARD_CLAIMED_EXPANDED_BODY.format(
                { endDate: I, onClickDetails: E }
              ))
          : m && !o
            ? (t =
                v.default.Messages.OUTBOUND_PROMOTION_CARD_CLAIMED_UNEXPANDED_BODY.format(
                  { endDate: I, onClickDetails: E }
                ))
            : !m && o
              ? (t =
                  v.default.Messages.OUTBOUND_PROMOTION_CARD_UNCLAIMED_EXPANDED_BODY.format(
                    { endDate: I, onClickDetails: E }
                  ))
              : !m &&
                !o &&
                (t =
                  v.default.Messages.OUTBOUND_PROMOTION_CARD_UNCLAIMED_UNEXPANDED_BODY.format(
                    { endDate: I, onClickDetails: E }
                  ));
        let C = m
            ? v.default.Messages.OUTBOUND_PROMOTION_SEE_CODE
            : v.default.Messages.PROMOTION_CARD_ACTION_CLAIM,
          A = n.useCallback(() => S(!1), []),
          { outboundTitle: O, outboundTermsAndConditions: x } = s;
        return (0, a.jsxs)(a.Fragment, {
          children: [
            (0, a.jsxs)("div", {
              className: i(L.skuCard, L.promotionCard),
              children: [
                (0, a.jsxs)("div", {
                  className: L.mainPromotionCardContainer,
                  children: [
                    (0, a.jsxs)("div", {
                      className: L.promotionCardLeftContainer,
                      children: [
                        (0, a.jsx)("div", {
                          className: L.promotionIcon,
                          children: (0, a.jsx)("img", {
                            alt: "",
                            src: _,
                            className: L.promotionIconImage,
                          }),
                        }),
                        (0, a.jsxs)("div", {
                          children: [
                            (0, a.jsx)(u.Heading, {
                              variant: "heading-md/semibold",
                              children: O,
                            }),
                            (0, a.jsx)(u.Text, {
                              variant: "text-sm/normal",
                              color: "text-normal",
                              className: L.promotionText,
                              children: t,
                            }),
                          ],
                        }),
                      ],
                    }),
                    (0, a.jsx)(u.Button, {
                      className: L.promotionCardButton,
                      color: u.Button.Colors.BRAND,
                      size: u.Button.Sizes.SMALL,
                      onClick: () => S(!0),
                      children: C,
                    }),
                  ],
                }),
                o &&
                  (0, a.jsx)(u.Text, {
                    className: L.promotionLegalese,
                    variant: "text-xs/normal",
                    color: "header-secondary",
                    children: g.default.parse(x, !1, { allowLinks: !0 }),
                  }),
              ],
            }),
            c &&
              (0, a.jsx)(u.Modal, {
                renderModal: e =>
                  (0, a.jsx)(p.default, {
                    ...e,
                    onClose: A,
                    onClaim: r,
                    code: l,
                    outboundPromotion: s,
                  }),
                onCloseRequest: A,
              }),
          ],
        });
      }
      var j = function () {
        let e = (0, d.useStateFromStoresArray)([C.default], () =>
            C.default.getGiftable()
          ),
          [t, s] = o.partition(e, e => {
            let { giftCodeBatchId: t } = e;
            return null == t;
          }),
          l = o.groupBy(t, e =>
            (0, A.makeComboId)(e.skuId, e.subscriptionPlanId, e.giftStyle)
          ),
          [i, r] = n.useState(!1),
          T = (0, d.useStateFromStores)(
            [m.default],
            () => m.default.userStatus
          );
        n.useEffect(() => {
          c.default.wait(() => {
            (0, S.fetchGiftableEntitlements)().then(() => r(!0));
          });
        }, []);
        let g = (0, _.useAnyDropsEnabled)();
        n.useEffect(() => {
          g &&
            c.default.wait(async () => {
              await (0, f.fetchDropsUserStatus)();
            });
        }, [g]);
        let h = O.DropsOptedOut.useSetting(),
          N = null != T || !g,
          {
            promotionsLoaded: p,
            activeOutboundPromotions: j,
            claimedEndedOutboundPromotions: b,
            claimedOutboundPromotionCodeMap: U,
            addClaimedOutboundPromotionCode: y,
          } = (0, I.useOutboundPromotions)();
        function B() {
          E.default.open(R.UserSettingsSections.PREMIUM);
        }
        return i && p && N
          ? (0, a.jsxs)(a.Fragment, {
              children: [
                g
                  ? (0, a.jsx)(M.default, {
                      dropsOptedOut: h,
                      dropsStatuses: T,
                    })
                  : null,
                (function () {
                  var e;
                  let t = s.find(
                      e =>
                        e.giftCodeBatchId ===
                          D.BLACK_FRIDAY_2020_GIFT_CODE_BATCH_ID && !e.consumed
                    ),
                    n =
                      null !==
                        (e = s.filter(
                          e =>
                            e.giftCodeBatchId ===
                              D.STICKERS_GIFT_CODE_BATCH_ID && !e.consumed
                        )) && void 0 !== e
                        ? e
                        : [],
                    [l, i] = o.partition(n, e => {
                      let { subscriptionPlanId: t } = e;
                      return t === D.SubscriptionPlans.PREMIUM_YEAR_TIER_2;
                    }),
                    r = j.length + b.length > 0;
                  return (0, a.jsx)(u.FormSection, {
                    children: (0, a.jsxs)(u.HeadingLevel, {
                      component: (0, a.jsx)(u.Heading, {
                        variant: "heading-md/semibold",
                        children: r
                          ? v.default.Messages.GIFT_INVENTORY_YOUR_GIFTS
                          : void 0,
                      }),
                      children: [
                        r
                          ? (0, a.jsx)(u.FormDivider, { className: L.divider })
                          : null,
                        b.map(e => {
                          let { code: t, promotion: s } = e;
                          return (0, a.jsx)(
                            P,
                            {
                              outboundPromotion: s,
                              code: t,
                              addClaimedOutboundPromotionCode: y,
                            },
                            s.id
                          );
                        }),
                        j.map(e =>
                          (0, a.jsx)(
                            P,
                            {
                              outboundPromotion: e,
                              code: U[e.id],
                              addClaimedOutboundPromotionCode: y,
                            },
                            e.id
                          )
                        ),
                        null != t
                          ? (0, a.jsx)(
                              x.default,
                              {
                                className: L.skuCard,
                                skuId: t.skuId,
                                subscriptionPlanId: t.subscriptionPlanId,
                                entitlements: [t],
                                giftCodeBatchId:
                                  D.BLACK_FRIDAY_2020_GIFT_CODE_BATCH_ID,
                              },
                              (0, A.makeComboId)(t.skuId, t.subscriptionPlanId)
                            )
                          : null,
                        l.length > 0
                          ? (0, a.jsx)(
                              x.default,
                              {
                                className: L.skuCard,
                                skuId: l[0].skuId,
                                subscriptionPlanId: l[0].subscriptionPlanId,
                                entitlements: l,
                                giftCodeBatchId: D.STICKERS_GIFT_CODE_BATCH_ID,
                              },
                              (0, A.makeComboId)(
                                l[0].skuId,
                                l[0].subscriptionPlanId
                              )
                            )
                          : null,
                        i.length > 0
                          ? (0, a.jsx)(
                              x.default,
                              {
                                className: L.skuCard,
                                skuId: i[0].skuId,
                                subscriptionPlanId: i[0].subscriptionPlanId,
                                entitlements: i,
                                giftCodeBatchId: D.STICKERS_GIFT_CODE_BATCH_ID,
                              },
                              (0, A.makeComboId)(
                                i[0].skuId,
                                i[0].subscriptionPlanId
                              )
                            )
                          : null,
                      ],
                    }),
                  });
                })(),
                (0, a.jsx)(u.FormSection, {
                  children: (0, a.jsxs)(u.HeadingLevel, {
                    component: (0, a.jsx)(u.Heading, {
                      variant: "heading-md/semibold",
                      children:
                        v.default.Messages.GIFT_INVENTORY_GIFTS_YOU_PURCHASED,
                    }),
                    children: [
                      (0, a.jsx)(u.FormDivider, { className: L.divider }),
                      0 === Object.keys(l).length
                        ? (0, a.jsxs)("div", {
                            className: L.emptyState,
                            children: [
                              (0, a.jsx)("div", {
                                className: L.emptyStateImage,
                              }),
                              (0, a.jsx)(u.H, {
                                className: L.emptyStateHeader,
                                children:
                                  v.default.Messages.GIFT_INVENTORY_NO_GIFTS,
                              }),
                              (0, a.jsx)("p", {
                                className: L.emptyStateSubtext,
                                children:
                                  v.default.Messages.GIFT_INVENTORY_NO_GIFTS_SUBTEXT.format(
                                    { onClick: B }
                                  ),
                              }),
                            ],
                          })
                        : o.keys(l).map(e => {
                            let {
                              skuId: t,
                              subscriptionPlanId: s,
                              giftStyle: n,
                            } = (0, A.parseComboId)(e);
                            return (0, a.jsx)(
                              x.default,
                              {
                                className: L.skuCard,
                                skuId: t,
                                subscriptionPlanId: s,
                                entitlements: l[e],
                                giftStyle: n,
                              },
                              e
                            );
                          }),
                    ],
                  }),
                }),
              ],
            })
          : (0, a.jsx)(u.Spinner, { className: L.loading });
      };
    },
    413622: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return c;
          },
        }),
        s("222007");
      var a = s("37983");
      s("884691");
      var n = s("446674"),
        l = s("77078"),
        i = s("139321"),
        r = s("36694"),
        o = s("945330"),
        d = s("734724");
      function u(e) {
        let { hotspotLocation: t } = e,
          [s, u] = (0, n.useStateFromStoresArray)([i.HotspotStore], () => [
            i.HotspotStore.hasHotspot(t, !0),
            i.HotspotStore.getHotspotOverride(t),
          ]);
        return (0, a.jsxs)(a.Fragment, {
          children: [
            (0, a.jsxs)(l.FormItem, {
              title: t,
              className: d.hotspotSwitch,
              children: [
                s
                  ? (0, a.jsx)(l.TooltipContainer, {
                      className: d.iconContainer,
                      element: "span",
                      text: "Active",
                      children: (0, a.jsx)(r.default, {
                        className: d.checkmark,
                      }),
                    })
                  : (0, a.jsx)(l.TooltipContainer, {
                      className: d.iconContainer,
                      element: "span",
                      text: "Inactive",
                      children: (0, a.jsx)(o.default, { className: d.xmark }),
                    }),
                (0, a.jsx)(l.SingleSelect, {
                  className: d.overrideSelect,
                  value: u,
                  options: [
                    { value: void 0, label: "No Override" },
                    { value: !0, label: "Force Active" },
                    { value: !1, label: "Force Inactive" },
                  ],
                  onChange: e =>
                    null != e
                      ? (0, i.setHotspotOverride)(t, e)
                      : (0, i.clearHotspotOverride)(t),
                }),
              ],
            }),
            (0, a.jsx)(l.FormDivider, {}),
          ],
        });
      }
      function c(e) {
        let { className: t } = e;
        return (0, a.jsxs)(l.FormSection, {
          title: "Hotspots",
          tag: l.FormTitleTags.H1,
          className: t,
          children: [
            (0, a.jsx)(l.Text, {
              className: d.helpText,
              tag: "p",
              variant: "text-sm/normal",
              children:
                'All the "hotspots" in app, and their current status. Use the select menu to override them on or off.',
            }),
            Object.keys(i.HotspotLocations)
              .sort((e, t) => e.localeCompare(t))
              .map(e => (0, a.jsx)(u, { hotspotLocation: e }, e)),
          ],
        });
      }
    },
    216503: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          InfoBoxLooks: function () {
            return n;
          },
          default: function () {
            return T;
          },
        });
      var a,
        n,
        l = s("37983");
      s("884691");
      var i = s("414456"),
        r = s.n(i),
        o = s("77078"),
        d = s("266926"),
        u = s("423487"),
        c = s("235464");
      ((a = n || (n = {})).INFO = "info"), (a.WARNING = "warning");
      let S = { info: c.info, warning: c.warning },
        E = { info: d.default, warning: u.default };
      function T(e) {
        let { children: t, className: s, look: a = "info" } = e,
          n = E[a];
        return (0, l.jsxs)("div", {
          className: r(c.root, s, S[a]),
          children: [
            (0, l.jsx)(n, { className: c.icon }),
            (0, l.jsx)(o.Text, {
              className: c.text,
              variant: "text-sm/medium",
              color: "text-normal",
              children: t,
            }),
          ],
        });
      }
    },
    484894: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          OverridePremiumTypeDropDown: function () {
            return c;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("446674"),
        l = s("77078"),
        i = s("811199"),
        r = s("285471"),
        o = s("400205"),
        d = s("697218"),
        u = s("646718");
      let c = e => {
        let { isDevTools: t = !1 } = e,
          s = (0, n.useStateFromStores)([d.default], () =>
            d.default.getCurrentUser()
          ),
          c = (0, n.useStateFromStores)([o.default], () =>
            o.default.getPremiumTypeOverride()
          );
        return (0, a.jsxs)("div", {
          children: [
            (0, a.jsx)(l.FormSection, {
              title: "Override Client-Side Premium Type",
              tag: l.FormTitleTags.H3,
              children: (0, a.jsx)(l.SingleSelect, {
                options: u.PREMIUM_TYPE_OVERRIDE_OPTIONS,
                value: c,
                onChange: e => {
                  (0, r.updateClientPremiumTypeOverride)(e, s);
                },
                popoutLayerContext: t ? i.devToolsLayerContext : void 0,
              }),
            }),
            (0, a.jsx)(l.Button, {
              look: l.Button.Looks.LINK,
              style: { padding: "0" },
              onClick: () => {
                (0, r.updateClientPremiumTypeOverride)(
                  u.UNSELECTED_PREMIUM_TYPE_OVERRIDE,
                  s
                );
              },
              children: "Reset premium type override",
            }),
          ],
        });
      };
    },
    479290: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return R;
          },
        }),
        s("222007");
      var a = s("37983"),
        n = s("884691"),
        l = s("522632"),
        i = s("446674"),
        r = s("77078"),
        o = s("850068"),
        d = s("775433"),
        u = s("308757"),
        c = s("812204"),
        S = s("685665"),
        E = s("585653"),
        T = s("617917"),
        f = s("257869"),
        _ = s("837008"),
        m = s("108314"),
        g = s("946964"),
        h = s("649844"),
        N = s("509167"),
        I = s("635956"),
        p = s("305961"),
        C = s("521012"),
        A = s("49111"),
        O = s("646718"),
        x = s("369551");
      function M(e) {
        let { selectedGuildForGuildSub: t } = e,
          s = (0, _.useGroupListingsForGuild)(null == t ? void 0 : t.id)[0];
        return (0, a.jsx)(a.Fragment, {
          children:
            null != t && null != s
              ? (0, a.jsx)("div", {
                  className: x.formItem,
                  children: s.subscription_listings_ids.map(e =>
                    (0, a.jsx)(
                      m.default,
                      { guildId: t.id, groupListingId: e, listingId: e },
                      e
                    )
                  ),
                })
              : null,
        });
      }
      var R = function () {
        let [e, t] = n.useState(O.PremiumSubscriptionSKUs.TIER_2),
          [s, _] = n.useState(null),
          [m] = (0, i.useStateFromStoresArray)([p.default], () => [
            p.default.getGuilds(),
          ]),
          [R] = (0, i.useStateFromStoresArray)([C.default], () => [
            C.default.getPremiumSubscription(),
          ]),
          D = Object.values(m).map(e => ({ value: e, label: e.name })),
          [v, L] = n.useState(D.length > 0 ? D[0].value : null),
          [P, j] = n.useState(""),
          [b, U] = n.useState({
            plan_id: O.SubscriptionPlans.PREMIUM_MONTH_TIER_2,
            gift: "true",
          }),
          y = "true" !== b.gift && null != R,
          [B, F] = n.useState(D.length > 0 ? D[0].value : null),
          { AnalyticsLocationProvider: G, analyticsLocations: k } = (0,
          S.default)(c.default.PAYMENT_FLOW_TEST_PAGE),
          [H, w] = n.useState(""),
          [V, Y] = n.useState(A.EMPTY_STRING_SNOWFLAKE_ID),
          [K, W] = n.useState(""),
          [z, Q] = n.useState(A.EMPTY_STRING_SNOWFLAKE_ID),
          [X, q] = n.useState(A.EMPTY_STRING_SNOWFLAKE_ID);
        return (0, a.jsx)(G, {
          children: (0, a.jsxs)(r.FormSection, {
            title: "Payment Flow Modals",
            tag: r.FormTitleTags.H1,
            children: [
              (0, a.jsx)(r.FormTitle, { children: "Gift" }),
              (0, a.jsxs)(r.FormItem, {
                className: x.formItem,
                children: [
                  (0, a.jsx)(r.SingleSelect, {
                    value: e,
                    options: [
                      {
                        value: O.PremiumSubscriptionSKUs.TIER_2,
                        label: "Nitro",
                      },
                      {
                        value: O.PremiumSubscriptionSKUs.TIER_1,
                        label: "Nitro Classic",
                      },
                      {
                        value: O.PremiumSubscriptionSKUs.TIER_0,
                        label: "Nitro Basic",
                      },
                      { value: null, label: "None" },
                    ],
                    onChange: e => t(e),
                  }),
                  (0, a.jsx)(I.default, {
                    subscriptionTier: e,
                    isGift: !0,
                    premiumModalAnalyticsLocation: {},
                  }),
                ],
              }),
              (0, a.jsx)(r.FormDivider, { className: x.formDivider }),
              (0, a.jsx)(r.FormTitle, { children: "Premium Select Plan" }),
              (0, a.jsxs)(r.FormItem, {
                className: x.formItem,
                children: [
                  (0, a.jsx)(r.SingleSelect, {
                    value: s,
                    options: [
                      {
                        value: O.PremiumSubscriptionSKUs.TIER_2,
                        label: "Nitro",
                      },
                      {
                        value: O.PremiumSubscriptionSKUs.TIER_1,
                        label: "Nitro Classic",
                      },
                      {
                        value: O.PremiumSubscriptionSKUs.TIER_0,
                        label: "Nitro Basic",
                      },
                      { value: null, label: "None" },
                    ],
                    onChange: e => _(e),
                  }),
                  (0, a.jsx)(r.Button, {
                    onClick: () =>
                      (0, h.default)({
                        subscriptionTier: s,
                        analyticsLocations: k,
                      }),
                    children: "Select Plan",
                  }),
                ],
              }),
              (0, a.jsx)(r.FormDivider, { className: x.formDivider }),
              (0, a.jsx)(r.FormTitle, { children: "Boost" }),
              (0, a.jsxs)(r.FormItem, {
                className: x.formItem,
                children: [
                  (0, a.jsx)(r.SingleSelect, {
                    value: v,
                    options: D,
                    onChange: e => L(e),
                  }),
                  null != v
                    ? (0, a.jsx)(T.default, { guild: v, analyticsLocation: {} })
                    : (0, a.jsx)("div", { children: "No Guild to boost" }),
                ],
              }),
              (0, a.jsx)(r.FormDivider, { className: x.formDivider }),
              (0, a.jsxs)(r.FormTitle, {
                children: [
                  (0, a.jsx)("div", {
                    children: "Standalone: Trial Promotion Redemption",
                  }),
                  (0, a.jsx)(r.Anchor, {
                    href: "https://i.dis.gd/createPromo",
                    children: "How to create promotion",
                  }),
                ],
              }),
              (0, a.jsxs)(r.FormItem, {
                className: x.formItem,
                children: [
                  (0, a.jsx)(r.TextInput, {
                    placeholder: "Promotion Code",
                    value: P,
                    onChange: e => j(e),
                  }),
                  (0, a.jsx)(r.Tooltip, {
                    text: "Need Promotion Code",
                    shouldShow: P.length < 1,
                    children: e => {
                      let { onMouseEnter: t, onMouseLeave: s } = e;
                      return (0, a.jsx)(r.Button, {
                        disabled: P.length < 1,
                        onMouseEnter: t,
                        onMouseLeave: s,
                        onClick: () => {
                          window.open(A.Routes.BILLING_PROMOTION_REDEMPTION(P));
                        },
                        children: "Open Link",
                      });
                    },
                  }),
                ],
              }),
              (0, a.jsx)(r.FormDivider, { className: x.formDivider }),
              (0, a.jsx)(r.FormTitle, {
                children: "Standalone: Gift/Subscription Purchase",
              }),
              (0, a.jsxs)(r.FormItem, {
                className: x.formItem,
                children: [
                  (0, a.jsx)(r.SingleSelect, {
                    value: b.plan_id,
                    options: [
                      {
                        value: O.SubscriptionPlans.PREMIUM_MONTH_TIER_2,
                        label: "Nitro",
                      },
                      {
                        value: O.SubscriptionPlans.PREMIUM_MONTH_TIER_1,
                        label: "Nitro Classic",
                      },
                      {
                        value: O.SubscriptionPlans.PREMIUM_MONTH_TIER_0,
                        label: "Nitro Basic",
                      },
                    ],
                    onChange: e => U(t => ({ ...t, plan_id: e })),
                  }),
                  (0, a.jsx)(r.SingleSelect, {
                    value: b.gift,
                    options: [
                      { value: "true", label: "Gift" },
                      { value: "false", label: "Not Gift" },
                    ],
                    onChange: e => U(t => ({ ...t, gift: e })),
                  }),
                  (0, a.jsx)(r.Tooltip, {
                    text: "Already subscribed",
                    shouldShow: y,
                    children: e => {
                      let { onMouseEnter: t, onMouseLeave: s } = e;
                      return (0, a.jsx)(r.Button, {
                        onMouseLeave: s,
                        onMouseEnter: t,
                        disabled: y,
                        onClick: () => {
                          window.open(
                            A.Routes.BILLING_PREMIUM_SUBSCRIBE +
                              "?" +
                              l.stringify({ ...b })
                          );
                        },
                        children: "Open Link",
                      });
                    },
                  }),
                ],
              }),
              (0, a.jsx)(r.FormDivider, { className: x.formDivider }),
              (0, a.jsx)(r.FormTitle, { children: "Creator Revenue" }),
              (0, a.jsxs)(r.FormItem, {
                className: x.formItem,
                children: [
                  (0, a.jsx)(r.Text, {
                    className: x.guildServerDescription,
                    variant: "text-sm/normal",
                    children: "Premium Server Subscription For",
                  }),
                  (0, a.jsx)(r.SingleSelect, {
                    value: B,
                    options: D,
                    onChange: e => F(e),
                  }),
                ],
              }),
              (0, a.jsx)(f.GroupListingsFetchContextProvider, {
                guildId: null == B ? void 0 : B.id,
                children: (0, a.jsx)(M, { selectedGuildForGuildSub: B }),
              }),
              (0, a.jsx)(r.FormDivider, { className: x.formDivider }),
              (0, a.jsx)(r.FormTitle, {
                children: "Activities & Application Payment Modals",
              }),
              (0, a.jsxs)(r.FormItem, {
                className: x.formItem,
                children: [
                  (0, a.jsx)(r.TextInput, {
                    placeholder: "Application Id",
                    value: H,
                    onChange: w,
                  }),
                  (0, a.jsx)(r.TextInput, {
                    placeholder: "Sku Id",
                    value: V,
                    onChange: e => Y(e),
                  }),
                  (0, a.jsx)(r.Button, {
                    onClick: () =>
                      (0, u.openIAPPurchaseModal)({
                        applicationId: H,
                        skuId: V,
                        openPremiumPaymentModal: () => !0,
                        analyticsLocations: [],
                        analyticsLocationObject: {
                          page: A.AnalyticsPages.IN_APP,
                        },
                        context: A.AppContext.APP,
                      }),
                    children: "Open App Subs Modal for Activity",
                  }),
                ],
              }),
              (0, a.jsx)(r.FormDivider, { className: x.formDivider }),
              (0, a.jsx)(r.FormTitle, {
                children: "Standard Payment Modal Test",
              }),
              (0, a.jsxs)(r.FormItem, {
                className: x.formItem,
                children: [
                  (0, a.jsx)(r.TextInput, {
                    placeholder: "Application Id",
                    value: K,
                    onChange: W,
                  }),
                  (0, a.jsx)(r.TextInput, {
                    placeholder: "SKU ID",
                    value: z,
                    onChange: e => Q(e),
                  }),
                  (0, a.jsx)(r.Button, {
                    onClick: () =>
                      (0, N.default)({
                        applicationId: K,
                        skuId: z,
                        analyticsLocations: k,
                      }),
                    children: "Open Standard Payment Modal for SKU",
                  }),
                ],
              }),
              (0, a.jsx)(r.FormDivider, { className: x.formDivider }),
              (0, a.jsx)(r.FormTitle, {
                children: "Collectibles Payment Modal Test",
              }),
              (0, a.jsxs)(r.FormItem, {
                className: x.formItem,
                children: [
                  (0, a.jsx)(r.TextInput, {
                    placeholder: "SKU ID",
                    value: X,
                    onChange: e => q(e),
                  }),
                  (0, a.jsx)(r.Button, {
                    onClick: () =>
                      (0, g.default)({ skuId: X, analyticsLocations: k }),
                    children: "Open Collectibles Payment Modal for SKU",
                  }),
                ],
              }),
              (0, a.jsx)(r.FormDivider, { className: x.formDivider }),
              (0, a.jsx)(r.FormTitle, { children: "Helpers" }),
              (0, a.jsxs)(r.FormItem, {
                className: x.formItem,
                children: [
                  (0, a.jsx)(r.Button, {
                    onClick: () => (0, d.resetSubscriptionPlanData)(),
                    children: "Reset SubscriptionPlanStore",
                  }),
                  (0, a.jsx)(r.Button, {
                    onClick: () => (0, o.resetSubscriptionStore)(),
                    children: "Reset SubscriptionStore",
                  }),
                ],
              }),
              (0, a.jsx)(r.FormDivider, { className: x.formDivider }),
              (0, a.jsx)(r.FormTitle, {
                children: "Dismissible Content Framework",
              }),
              (0, a.jsx)(r.FormItem, {
                className: x.formItem,
                children: (0, a.jsx)(r.Button, {
                  onClick: () => (0, E.resetDismissibleContentFrameworkStore)(),
                  children: "Reset DismissibleContentFrameworkStore",
                }),
              }),
            ],
          }),
        });
      };
    },
    825958: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return u;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("446674"),
        l = s("743053"),
        i = s("595426"),
        r = s("697218"),
        o = s("719923"),
        d = s("646718");
      function u() {
        let e = (0, n.useStateFromStores)([r.default], () =>
            r.default.getCurrentUser()
          ),
          t = (0, o.isPremiumExactly)(e, d.PremiumTypes.TIER_2);
        return t ? (0, a.jsx)(l.default, {}) : (0, a.jsx)(i.default, {});
      }
    },
    20604: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return T;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("77078"),
        l = s("15649"),
        i = s("762740"),
        r = s("369952"),
        o = s("198911"),
        d = s("15435"),
        u = s("578521"),
        c = s("49111"),
        S = s("530894");
      let E = { offset: { top: -8 } };
      function T() {
        return (0, a.jsxs)("div", {
          className: S.socialLinks,
          children: [
            (0, a.jsx)(n.Anchor, {
              target: "_blank",
              tabIndex: -1,
              rel: "author",
              title: "Twitter",
              href: (0, l.default)(c.LocalizedLinks.TWITTER),
              className: S.link,
              focusProps: E,
              children: (0, a.jsx)(d.default, {
                width: 16,
                height: 16,
                foreground: S.foreground,
                "aria-hidden": !0,
              }),
            }),
            (0, a.jsx)(n.Anchor, {
              target: "_blank",
              rel: "author",
              title: "Instagram",
              tabIndex: -1,
              href: c.SOCIAL_LINKS.INSTAGRAM_URL,
              className: S.link,
              focusProps: E,
              children: (0, a.jsx)(r.default, {
                width: 16,
                height: 16,
                foreground: S.foreground,
                "aria-hidden": !0,
              }),
            }),
            (0, a.jsx)(n.Anchor, {
              target: "_blank",
              rel: "author",
              title: "Facebook",
              tabIndex: -1,
              href: c.SOCIAL_LINKS.FACEBOOK_URL,
              className: S.link,
              focusProps: E,
              children: (0, a.jsx)(i.default, {
                width: 16,
                height: 16,
                foreground: S.foreground,
                "aria-hidden": !0,
              }),
            }),
            (0, a.jsx)(n.Anchor, {
              target: "_blank",
              rel: "author",
              title: "YouTube",
              tabIndex: -1,
              href: c.SOCIAL_LINKS.YOUTUBE_URL,
              className: S.link,
              focusProps: E,
              children: (0, a.jsx)(u.default, {
                width: 16,
                height: 16,
                foreground: S.foreground,
                "aria-hidden": !0,
              }),
            }),
            (0, a.jsx)(n.Anchor, {
              target: "_blank",
              rel: "author",
              title: "TikTok",
              tabIndex: -1,
              href: c.SOCIAL_LINKS.TIKTOK_URL,
              className: S.link,
              focusProps: E,
              children: (0, a.jsx)(o.default, {
                width: 16,
                height: 16,
                foreground: S.foreground,
                "aria-hidden": !0,
              }),
            }),
          ],
        });
      }
    },
    836833: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return _;
          },
        }),
        s("222007"),
        s("424973");
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("446674"),
        o = s("77078"),
        d = s("913144"),
        u = s("456931"),
        c = s("610109"),
        S = s("414074"),
        E = s("84908"),
        T = s("890957");
      class f extends n.Component {
        renderTestCase(e, t, s, n, l) {
          let r = null == t ? void 0 : t.summary;
          return (0, a.jsxs)(o.FormText, {
            className: T.marginBottom20,
            children: [
              !0 === n
                ? "✅"
                : !0 === l
                  ? "❌"
                  : !0 === s
                    ? "\uD83C\uDFCE️"
                    : "",
              "speed test, bitrate = ",
              ((0, S.speedTestRate)(e) / 1e3).toFixed(0),
              " kbps, framerate =",
              " ",
              (0, S.speedTestFps)(e).toFixed(0),
              " fps, duration = ",
              (0, S.speedTestDuration)(e).toFixed(1),
              "s, direction =",
              " ",
              (0, S.speedTestDirection)(e),
              void 0 !== r &&
                (0, a.jsxs)("div", {
                  children: [
                    (0, a.jsxs)("div", {
                      className: i(T.marginTop8, T.marginBottom8),
                      children: [
                        "Loss ",
                        100 * r.loss.toFixed(2),
                        "%, Payload Bandwidth ",
                        r.payloadBandwidth.toFixed(0),
                        " kbps, Network Bandwidth ",
                        r.networkBandwidth.toFixed(0),
                        " kbps",
                      ],
                    }),
                    (0, a.jsxs)("div", {
                      className: i(T.marginTop8, T.marginBottom8),
                      children: [
                        "IAT p50=",
                        r.iatP50.toFixed(2),
                        "ms, p95=",
                        r.iatP95.toFixed(2),
                        "ms, max=",
                        r.iatMax.toFixed(2),
                        "ms",
                      ],
                    }),
                  ],
                }),
              !1 === n &&
                !0 === s &&
                !1 === l &&
                (0, a.jsx)("div", {
                  children: (0, a.jsx)("div", {
                    className: i(T.marginTop8, T.marginBottom8),
                    children:
                      "Test in progress. Results will appear when test completes.",
                  }),
                }),
              !1 === n &&
                !0 === l &&
                (0, a.jsx)("div", {
                  children: (0, a.jsx)("div", {
                    className: i(T.marginTop8, T.marginBottom8),
                    children: "Test skipped.",
                  }),
                }),
            ],
          });
        }
        renderTestCases(e, t, s, a, n) {
          if (!1 === e) return;
          let l = [];
          for (let [e, i] of s.entries()) {
            let s = e === n,
              r = null != n && e < n;
            l.push(this.renderTestCase(i, a[e], s, r, t));
          }
          return l;
        }
        renderPing(e, t, s) {
          if (!1 === e) return;
          let n = s.length > 0 ? (0, S.speedTestPingInfo)(s) : null;
          return (0, a.jsxs)(o.FormText, {
            className: T.marginBottom20,
            children: [
              t > E.SpeedTestLifecycles.PINGING
                ? "✅"
                : t === E.SpeedTestLifecycles.PINGING
                  ? "\uD83C\uDFCE️"
                  : "",
              "Ping endpoint",
              null !== n &&
                (0, a.jsxs)("div", {
                  className: i(T.marginTop8, T.marginBottom8),
                  children: [
                    "Pinged ",
                    n.count,
                    " time(s), min=",
                    n.min,
                    "ms, p50=",
                    n.p50,
                    "ms, max=",
                    n.max,
                    "ms",
                  ],
                }),
            ],
          });
        }
        renderConnect(e, t, s) {
          if (!1 !== e)
            return (0, a.jsxs)(o.FormText, {
              className: T.marginBottom20,
              children: [
                t > E.SpeedTestLifecycles.CONNECTING
                  ? "✅"
                  : t === E.SpeedTestLifecycles.CONNECTING
                    ? "\uD83C\uDFCE️"
                    : "",
                "Connect to ",
                null != s ? s : "endpoint",
              ],
            });
        }
        renderNotes() {
          return (0, a.jsx)(o.TextArea, {
            className: T.marginBottom20,
            value: this.state.notes,
            onChange: e => {
              c.default.setNotes(e), this.setState({ notes: e });
            },
            placeholder:
              "Anything we should know about this test? Enter any relevant information about location, connection strength, or recent call quality here.",
          });
        }
        renderAwaitingEndpoint(e, t) {
          if (!1 !== e)
            return (0, a.jsxs)(o.FormText, {
              className: T.marginBottom20,
              children: [
                t > E.SpeedTestLifecycles.AWAITING_ENDPOINT
                  ? "✅"
                  : t === E.SpeedTestLifecycles.AWAITING_ENDPOINT
                    ? "\uD83C\uDFCE️"
                    : "",
                "Select endpoint",
              ],
            });
        }
        renderUpload(e, t) {
          if (!1 !== e)
            return (0, a.jsxs)(o.FormText, {
              className: T.marginBottom20,
              children: [
                t > E.SpeedTestLifecycles.UPLOADING
                  ? "✅"
                  : t === E.SpeedTestLifecycles.UPLOADING
                    ? "\uD83C\uDFCE️"
                    : "",
                "Upload results",
              ],
            });
        }
        renderComplete(e, t) {
          if (!1 !== e) {
            if (t === E.SpeedTestLifecycles.COMPLETED)
              return (0, a.jsx)(o.FormText, {
                className: T.marginBottom20,
                children:
                  "Your Speed Test is completed and the results have been uploaded. You may safely close this page.",
              });
          }
        }
        render() {
          let e = this.props.available,
            t = this.props.active,
            s = this.props.failed,
            n = this.props.endpoint,
            l = this.props.lifecycle,
            i = this.props.testCases,
            r = this.props.currentTest,
            d = this.props.testResults,
            c = this.props.pings,
            S = t ? u.default.stopSpeedTest : u.default.startSpeedTest,
            f = l >= E.SpeedTestLifecycles.AWAITING_ENDPOINT;
          return !1 === e
            ? (0, a.jsx)(o.FormSection, {
                tag: o.FormTitleTags.H1,
                title: "Speed Test",
                children: (0, a.jsx)(o.FormText, {
                  className: T.marginBottom20,
                  children:
                    "Sorry! The Speed Test is not currently available. Disconnect from any existing calls and try again.",
                }),
              })
            : (0, a.jsxs)(o.FormSection, {
                tag: o.FormTitleTags.H1,
                title: "Speed Test",
                children: [
                  this.renderNotes(),
                  (0, a.jsx)(o.FormItem, {
                    className: T.marginBottom20,
                    children: (0, a.jsx)("div", {
                      children: (0, a.jsx)(o.Button, {
                        onClick: () => S(),
                        children: t ? "Stop Speed Test" : "Start Speed Test",
                      }),
                    }),
                  }),
                  this.renderAwaitingEndpoint(f, l),
                  this.renderConnect(f, l, n),
                  this.renderPing(f, l, c),
                  this.renderTestCases(f, s, i, d, r),
                  this.renderUpload(f, l),
                  this.renderComplete(f, l),
                ],
              });
        }
        constructor(...e) {
          super(...e), (this.state = { notes: this.props.notes });
        }
      }
      function _() {
        let e = (0, r.useStateFromStoresObject)([c.default], () => ({
            available: c.default.getAvailable(),
            active: c.default.getActive(),
            failed: c.default.getFailed(),
            endpoint: c.default.getEndpoint(),
            lifecycle: c.default.getLifecycle(),
            testCases: c.default.getTestCases(),
            testResults: c.default.getTestResults(),
            currentTest: c.default.getCurrentTest(),
            pings: c.default.getPings(),
            notes: c.default.getNotes(),
          })),
          [t, s] = n.useState(0),
          l = n.useCallback(
            e => {
              let {} = e;
              s(t + 1);
            },
            [t]
          );
        return (
          n.useEffect(
            () => (
              d.default.subscribe("RTC_SPEED_TEST_STATE_UPDATE", l),
              () => {
                d.default.unsubscribe("RTC_SPEED_TEST_STATE_UPDATE", l);
              }
            ),
            [l]
          ),
          (0, a.jsx)(f, { ...e })
        );
      }
    },
    264278: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return O;
          },
        }),
        s("424973"),
        s("222007");
      var a = s("37983"),
        n = s("884691"),
        l = s("446674"),
        i = s("77078"),
        r = s("913139"),
        o = s("850166"),
        d = s("42203"),
        u = s("923959"),
        c = s("305961"),
        S = s("162771"),
        E = s("145131"),
        T = s("409082"),
        f = s("375822"),
        _ = s("782340"),
        m = s("874425");
      function g() {}
      let h = [f.AutocompleterResultTypes.VOICE_CHANNEL];
      function N(e) {
        e.setOptions({ voiceChannelGuildFilter: null }), e.setLimit(1 / 0);
      }
      function I(e) {
        let { height: t } = e;
        return (0, a.jsx)("div", { style: { height: t } });
      }
      function p() {
        return (0, a.jsx)(I, { height: 16 }, "footer");
      }
      function C() {
        return (0, a.jsx)(I, { height: 8 }, "header");
      }
      function A() {
        return (0, a.jsx)("div", {
          className: m.voiceListSearchEmpty,
          children: (0, a.jsx)(i.Text, {
            variant: "text-md/medium",
            color: "text-muted",
            className: m.noVoiceChannelSelected,
            children:
              _.default.Messages.USER_SETTINGS_KEYBINDS_SEARCH_NO_RESULTS_FOUND,
          }),
        });
      }
      function O(e) {
        var t, s;
        let { keybind: l } = e,
          o = n.useRef(l);
        n.useEffect(() => void (o.current = l));
        let [d, u] = n.useState(
            null !==
              (s =
                null === (t = l.params) || void 0 === t
                  ? void 0
                  : t.channelId) && void 0 !== s
              ? s
              : void 0
          ),
          c = n.useCallback(() => {
            (0, i.openModalLazy)(
              async () => e =>
                (0, a.jsx)(x, {
                  ...e,
                  onSelect: e => {
                    u(e),
                      r.default.setKeybind({
                        ...o.current,
                        params: { channelId: e },
                      });
                  },
                })
            );
          }, []);
        return (0, a.jsx)(i.FormSection, {
          title:
            _.default.Messages
              .USER_SETTINGS_KEYBIND_SWITCH_SERVER_SETTINGS_SECTION,
          className: m.channelIdSection,
          children: (0, a.jsxs)(E.default, {
            align: E.default.Align.STRETCH,
            children: [
              (0, a.jsx)("div", {
                className: m.selectedVoiceChannel,
                children: (0, a.jsx)(M, { channelId: d }),
              }),
              (0, a.jsx)(E.default.Child, {
                grow: 0,
                shrink: 0,
                children: (0, a.jsx)(i.Button, {
                  onClick: c,
                  children:
                    _.default.Messages
                      .USER_SETTINGS_KEYBINDS_SELECT_VOICE_CHANNEL,
                }),
              }),
            ],
          }),
        });
      }
      function x(e) {
        let { transitionState: t, onClose: s, onSelect: r } = e,
          E = n.useId(),
          g = n.useRef(null),
          {
            mouseFocusEnabled: I,
            enableMouseFocus: O,
            disableMouseFocus: x,
          } = (function () {
            let e = n.useRef(!1),
              t = n.useCallback(() => {
                e.current = !0;
              }, []),
              s = n.useCallback(() => {
                e.current = !1;
              }, []);
            return {
              mouseFocusEnabled: e,
              enableMouseFocus: t,
              disableMouseFocus: s,
            };
          })(),
          {
            query: M,
            updateQuery: R,
            queryResults: D,
          } = (0, o.default)({
            visible: !0,
            autocompleterResultTypes: h,
            autocompleterBeforeCreateSearchContext: N,
          }),
          v = (function (e) {
            let t = "" !== e,
              s = (0, l.useStateFromStoresArray)(
                [u.default, d.default, S.default],
                () => {
                  let e = S.default.getGuildId();
                  if (t || null == e) return [];
                  let s = [];
                  for (let t of u.default.getVocalChannelIds(e)) {
                    let e = d.default.getChannel(t);
                    null != e && s.push(e);
                  }
                  return s;
                },
                [t]
              );
            return t ? null : s;
          })(M),
          { focusedIndex: L, setFocusedIndex: P } = (function (e) {
            let [t, s] = n.useState(0),
              a = n.useRef(e);
            return (
              e !== a.current && 0 !== t && s(0),
              n.useEffect(() => void (a.current = e)),
              { focusedIndex: t, setFocusedIndex: s }
            );
          })(M);
        n.useEffect(() => {
          let { current: e } = g;
          !(null == e || e.isItemVisible(0, L, !0)) &&
            e.scrollToIndex({ section: 0, row: L });
        }, [L]);
        let j = null != v ? v.length : D.length,
          b = (() => {
            if (null != v) {
              var e;
              return null === (e = v[L]) || void 0 === e ? void 0 : e.id;
            }
            let t = D[L];
            if (
              (null == t ? void 0 : t.type) ===
              f.AutocompleterResultTypes.VOICE_CHANNEL
            )
              return t.record.id;
          })();
        return (0, a.jsx)("div", {
          className: m.voiceModalContainer,
          onMouseMove: O,
          children: (0, a.jsxs)(i.ModalRoot, {
            transitionState: t,
            size: i.ModalSize.MEDIUM,
            className: m.voiceModalRootContainer,
            children: [
              (0, a.jsx)("div", {
                className: m.inputWrapper,
                children: (0, a.jsx)(i.TextInput, {
                  value: M,
                  onChange: R,
                  onKeyDown: function (e) {
                    x();
                    let t = e.key.toLowerCase();
                    if (
                      "arrowdown" === t ||
                      "arrowup" === t ||
                      "enter" === t ||
                      "escape" === t
                    )
                      switch ((e.preventDefault(), t)) {
                        case "escape":
                          s();
                          break;
                        case "enter": {
                          let e = (() => {
                            if (null != v) return v[L];
                            let e = D[L];
                            if (
                              (null == e ? void 0 : e.type) ===
                              f.AutocompleterResultTypes.VOICE_CHANNEL
                            )
                              return e.record;
                          })();
                          null == e ? r(void 0) : r(e.id), s();
                          break;
                        }
                        case "arrowup":
                          0 === L ? P(j - 1) : P(L - 1);
                          break;
                        case "arrowdown":
                          L >= j - 1 ? P(0) : P(L + 1);
                      }
                  },
                  placeholder:
                    _.default.Messages.USER_SETTINGS_KEYBINDS_SEARCH_VOICE,
                  role: "combobox",
                  "aria-controls": E,
                  "aria-expanded": j > 0,
                  "aria-activedescendant": j > 0 && null != b ? b : void 0,
                  "aria-autocomplete": "list",
                  spellCheck: !1,
                }),
              }),
              0 === j && "" !== M && (0, a.jsx)(A, {}),
              (j > 0 || "" === M) &&
                (0, a.jsx)(i.ListThin, {
                  innerId: E,
                  innerRole: "listbox",
                  "aria-label":
                    _.default.Messages
                      .USER_SETTINGS_KEYBIND_VOICE_CHANNEL_RESULTS,
                  ref: g,
                  sections: [j],
                  renderRow: function (e) {
                    let { row: t } = e,
                      n = (() => {
                        if (null != v) return v[t];
                        let e = D[t];
                        if (
                          (null == e ? void 0 : e.type) ===
                          f.AutocompleterResultTypes.VOICE_CHANNEL
                        )
                          return e.record;
                      })();
                    if (null == n) return null;
                    let l =
                        null != n.parent_id
                          ? d.default.getChannel(n.parent_id)
                          : void 0,
                      i = c.default.getGuild(n.guild_id);
                    return (0, a.jsx)(
                      T.Channel,
                      {
                        id: n.id,
                        channel: n,
                        category: l,
                        focused: L === t,
                        onMouseEnter: () => I.current && P(t),
                        onClick: () => {
                          r(n.id), s();
                        },
                        onFocus: () => P(t),
                        children:
                          null != i
                            ? (0, a.jsx)("div", {
                                className: m.guildName,
                                children: i.name,
                              })
                            : null,
                      },
                      n.id
                    );
                  },
                  renderListHeader: C,
                  renderFooter: p,
                  sectionHeight: 0,
                  rowHeight: 34,
                  className: m.voiceChannelList,
                  listHeaderHeight: 8,
                  footerHeight: 16,
                }),
            ],
          }),
        });
      }
      function M(e) {
        let { channelId: t } = e,
          {
            channel: s,
            category: n,
            guild: r,
          } = (0, l.useStateFromStoresObject)([d.default, c.default], () => {
            let e = null != t ? d.default.getChannel(t) : void 0;
            return null != e
              ? {
                  channel: e,
                  category:
                    null != e.parent_id
                      ? d.default.getChannel(e.parent_id)
                      : void 0,
                  guild:
                    null != e.guild_id
                      ? c.default.getGuild(e.guild_id)
                      : void 0,
                }
              : { channel: void 0, category: void 0, guild: void 0 };
          });
        return null == s
          ? (0, a.jsx)(i.Text, {
              variant: "text-md/medium",
              color: "text-muted",
              className: m.noVoiceChannelSelected,
              children:
                _.default.Messages
                  .USER_SETTINGS_KEYBINDS_NO_VOICE_CHANNEL_SELECTED,
            })
          : (0, a.jsx)(T.Channel, {
              channel: s,
              id: s.id,
              category: n,
              onClick: g,
              onFocus: g,
              onMouseEnter: g,
              focused: !1,
              children:
                null != r
                  ? (0, a.jsx)("div", {
                      className: m.guildName,
                      children: r.name,
                    })
                  : null,
            });
      }
    },
    271445: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return h;
          },
        }),
        s("222007");
      var a,
        n,
        l = s("37983"),
        i = s("884691"),
        r = s("446674"),
        o = s("77078"),
        d = s("913144"),
        u = s("70614"),
        c = s("711562"),
        S = s("167726"),
        E = s("145131"),
        T = s("476765"),
        f = s("782340"),
        _ = s("572458"),
        m = s("890957");
      let g = /^\d+$|^$/;
      ((n = a || (a = {})).LOCALHOST = "localhost"), (n.PROXY = "proxy");
      function h(e) {
        let { onClose: t, transitionState: s } = e,
          {
            authorizedApplicationId: a,
            authorizationError: n,
            authorizing: h,
          } = (0, r.useStateFromStoresObject)([S.default], () => ({
            authorizedApplicationId: S.default.testModeApplicationId,
            authorizationError: S.default.error,
            authorizing: S.default.isFetchingAuthorization,
          })),
          [N, I] = i.useState(null != a ? a : ""),
          [p, C] = i.useState("8080"),
          [A, O] = i.useState("localhost"),
          x = (0, T.useUID)(),
          M = g.test(N);
        async function R() {
          u.resetError();
          let e = (function (e, t, s) {
              if (null == e) return null;
              switch (e) {
                case "localhost":
                  return "https://localhost:".concat(t);
                case "proxy":
                  return (0, c.default)(s);
              }
            })(A, p, N),
            s = await u.authorizeAndSetTestModeApplication(N, e);
          null != s && t();
        }
        i.useEffect(() => () => d.default.wait(() => u.resetError()), []);
        let D = null != a && a === N,
          v = D
            ? function () {
                u.reset(), I(""), O(null);
              }
            : R;
        return (0, l.jsxs)(o.ModalRoot, {
          "aria-labelledby": x,
          transitionState: s,
          children: [
            (0, l.jsxs)(o.ModalHeader, {
              justify: E.default.Justify.BETWEEN,
              separator: !1,
              children: [
                (0, l.jsx)(o.FormTitle, {
                  id: x,
                  tag: "h1",
                  className: m.marginReset,
                  children:
                    f.default.Messages
                      .DEVELOPER_APPLICATION_TEST_MODE_MODAL_HEADER,
                }),
                (0, l.jsx)(o.ModalCloseButton, { onClick: t }),
              ],
            }),
            (0, l.jsxs)(o.ModalContent, {
              className: _.modalContent,
              children: [
                (0, l.jsx)(o.FormText, {
                  className: m.marginBottom20,
                  type: o.FormText.Types.DESCRIPTION,
                  children:
                    f.default.Messages
                      .DEVELOPER_APPLICATION_TEST_MODE_MODAL_BODY,
                }),
                null == n
                  ? null
                  : (0, l.jsx)(o.FormErrorBlock, {
                      className: m.marginBottom20,
                      children: n,
                    }),
                (0, l.jsx)("form", {
                  onSubmit: e => {
                    e.preventDefault(), v();
                  },
                  children: (0, l.jsxs)(E.default, {
                    direction: E.default.Direction.VERTICAL,
                    align: E.default.Align.START,
                    children: [
                      (0, l.jsx)(o.FormItem, {
                        className: _.inputWrapper,
                        title:
                          f.default.Messages
                            .DEVELOPER_APPLICATION_TEST_MODE_PLACEHOLDER,
                        required: !0,
                        children: (0, l.jsx)(o.TextInput, {
                          value: N,
                          maxLength: 19,
                          error: M
                            ? null
                            : f.default.Messages
                                .DEVELOPER_APPLICATION_TEST_MODE_INVALID,
                          onChange: function (e) {
                            I(e);
                          },
                          disabled: h,
                        }),
                      }),
                      (0, l.jsx)(o.FormItem, {
                        className: _.inputWrapper,
                        title:
                          f.default.Messages
                            .DEVELOPER_APPLICATION_TEST_MODE_ORIGIN_LABEL,
                        children: (0, l.jsx)(o.SingleSelect, {
                          isDisabled: !M || "" === N,
                          value: A,
                          options: [
                            {
                              value: "localhost",
                              label:
                                f.default.Messages
                                  .DEVELOPER_APPLICATION_TEST_MODE_LOCALHOST_OPTION,
                              key: "localhost",
                            },
                            {
                              value: "proxy",
                              label:
                                f.default.Messages
                                  .DEVELOPER_APPLICATION_TEST_MODE_PROXY_OPTION,
                              key: "proxy",
                            },
                          ],
                          onChange: function (e) {
                            O(e);
                          },
                          placeholder: "URL Origin Type",
                        }),
                      }),
                      "localhost" !== A
                        ? null
                        : (0, l.jsx)(o.FormItem, {
                            className: _.inputWrapper,
                            title:
                              f.default.Messages
                                .DEVELOPER_APPLICATION_TEST_MODE_PORT_NUMBER_LABEL,
                            required: !0,
                            children: (0, l.jsx)(o.TextInput, {
                              value: p,
                              maxLength: 5,
                              onChange: e => C(e),
                              disabled: h,
                            }),
                          }),
                      (0, l.jsx)(o.Button, {
                        submitting: h,
                        type: "submit",
                        disabled:
                          !M ||
                          0 === N.length ||
                          ("localhost" === A && 0 === p.length),
                        color: D ? o.Button.Colors.RED : o.Button.Colors.GREEN,
                        children: D
                          ? f.default.Messages
                              .DEVELOPER_APPLICATION_TEST_MODE_CLEAR
                          : f.default.Messages
                              .DEVELOPER_APPLICATION_TEST_MODE_ACTIVATE,
                      }),
                    ],
                  }),
                }),
              ],
            }),
          ],
        });
      }
    },
    625393: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return r;
          },
        }),
        s("222007");
      var a = s("37983"),
        n = s("884691"),
        l = s("927858"),
        i = s("77078");
      function r() {
        let [e, t] = n.useState("");
        return (0, a.jsxs)(i.FormSection, {
          title: "Text components",
          tag: i.FormTitleTags.H1,
          children: [
            (0, a.jsx)(i.TextInput, {
              placeholder: "Enter custom text...",
              onChange: e => t(e),
            }),
            (0, a.jsx)(i.FormDivider, { style: { margin: "10px 0" } }),
            l.TEXT_VARIANT.map(t =>
              "code" === t
                ? null
                : (0, a.jsx)(
                    i.Text,
                    {
                      variant: t,
                      children:
                        "" !== e ? "".concat(e, " (").concat(t, ")") : t,
                    },
                    t
                  )
            ),
          ],
        });
      }
    },
    152891: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          shouldShowTextPlayground: function () {
            return l;
          },
        });
      var a = s("862205");
      let n = (0, a.createExperiment)({
        kind: "user",
        id: "2023-03_text_playground_settings_pane",
        label: "Text Playground",
        defaultConfig: { showSetting: !1 },
        treatments: [
          { id: 1, label: "Enable settings pane", config: { showSetting: !0 } },
        ],
      });
      function l() {
        return n.getCurrentConfig(
          { location: "26c832_1" },
          { autoTrackExposure: !0 }
        ).showSetting;
      }
    },
    628235: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return L;
          },
        }),
        s("222007");
      var a = s("37983"),
        n = s("884691"),
        l = s("627445"),
        i = s.n(l),
        r = s("446674"),
        o = s("77078"),
        d = s("430713"),
        u = s("984557"),
        c = s("920636"),
        S = s("583227"),
        E = s("878720"),
        T = s("601745"),
        f = s("685223"),
        _ = s("271938"),
        m = s("650893"),
        g = s("697218"),
        h = s("145131"),
        N = s("306160"),
        I = s("222038"),
        p = s("462369"),
        C = s("803163"),
        A = s("49111"),
        O = s("482931"),
        x = s("782340"),
        M = s("858429"),
        R = s("890957");
      function D(e) {
        let {
            code: { code: t, consumed: s },
          } = e,
          l = "".concat(t.substr(0, 4), "-").concat(t.substr(4)),
          i = n.useRef(null),
          r = n.useCallback(
            e => {
              if ("c" === e.key && e.metaKey && N.SUPPORTS_COPY) {
                var t;
                e.preventDefault(),
                  e.stopPropagation(),
                  (0, N.copy)(l),
                  null == i ||
                    null === (t = i.current) ||
                    void 0 === t ||
                    t.focus();
              }
            },
            [l]
          );
        return (0, a.jsx)("li", {
          className: R.marginBottom20,
          children: (0, a.jsx)(o.Clickable, {
            innerRef: i,
            className: M.backupCode,
            onKeyDown: r,
            children: (0, a.jsx)(o.Checkbox, {
              displayOnly: !0,
              readOnly: !0,
              className: M.codeCheckbox,
              value: s,
              children: (0, a.jsx)("span", { className: M.code, children: l }),
            }),
          }),
        });
      }
      class v extends n.PureComponent {
        maskPhoneNumber(e) {
          return null == e
            ? ""
            : "".concat("*".repeat(e.length - 4)).concat(e.slice(-4));
        }
        renderMFASMS() {
          let e, t;
          let { revealed: s } = this.state,
            { currentUser: n, togglingSMS: l } = this.props,
            i = null != n.phone,
            r = n.hasFlag(A.UserFlags.MFA_SMS);
          if (i || r) {
            let e = s ? n.phone : this.maskPhoneNumber(n.phone);
            t = (0, a.jsxs)(o.FormText, {
              type: o.FormText.Types.DESCRIPTION,
              className: R.marginBottom8,
              children: [
                x.default.Messages.MFA_SMS_AUTH_CURRENT_PHONE.format({
                  phoneNumber: e,
                }),
                (0, a.jsx)(o.Anchor, {
                  onClick: this.togglePhoneNumberVisibility,
                  className: M.phoneRevealer,
                  children: s
                    ? x.default.Messages.MFA_SMS_PHONE_NUMBER_HIDE
                    : x.default.Messages.MFA_SMS_PHONE_NUMBER_REVEAL,
                }),
              ],
            });
          }
          if (r)
            e = (0, a.jsx)(h.default, {
              className: i ? "" : R.marginTop8,
              children: (0, a.jsx)(o.Button, {
                color: o.Button.Colors.RED,
                look: o.Button.Looks.OUTLINED,
                size: o.Button.Sizes.SMALL,
                submitting: l,
                onClick: this.handleDisableSMS,
                children: x.default.Messages.MFA_SMS_REMOVE,
              }),
            });
          else {
            let t = (0, p.getSMSBackupDisabledMessage)(n);
            e = (0, a.jsxs)(h.default, {
              className: i ? "" : R.marginTop8,
              children: [
                (0, a.jsx)(o.Button, {
                  onClick: this.handleEnableSMS,
                  size: o.Button.Sizes.SMALL,
                  submitting: l,
                  disabled: null != t,
                  children: null != t ? t : x.default.Messages.MFA_SMS_ENABLE,
                }),
                i
                  ? (0, a.jsx)(o.Button, {
                      onClick: this.handleChangePhoneNumber,
                      color: o.Button.Colors.PRIMARY,
                      size: o.Button.Sizes.SMALL,
                      look: o.Button.Looks.LINK,
                      children: x.default.Messages.CHANGE_PHONE_NUMBER,
                    })
                  : null,
              ],
            });
          }
          return (0, a.jsxs)(o.FormSection, {
            className: R.marginTop40,
            title: x.default.Messages.MFA_SMS_AUTH,
            children: [
              (0, a.jsx)(o.FormText, {
                type: o.FormText.Types.DESCRIPTION,
                children: x.default.Messages.MFA_SMS_AUTH_SALES_PITCH,
              }),
              t,
              e,
            ],
          });
        }
        renderEnabled() {
          let e;
          let { backupCodes: t } = this.props,
            s = (0, a.jsx)(o.Button, {
              onClick: this.sendMFABackupCodesVerificationKeyEmail,
              size: o.Button.Sizes.SMALL,
              children: x.default.Messages.TWO_FA_VIEW_BACKUP_CODES,
            });
          if (t.length > 0) {
            s = (0, a.jsx)(u.default, {
              fileContents: this.getDownloadFileContents,
              contentType: "text/plain",
              fileName: "discord_backup_codes.txt",
              children: (0, a.jsx)(o.Button, {
                size: o.Button.Sizes.SMALL,
                children: x.default.Messages.TWO_FA_DOWNLOAD_CODES,
              }),
            });
            let n = e => e.map(e => (0, a.jsx)(D, { code: e }, e.code));
            e = (0, a.jsxs)(o.FormSection, {
              title: x.default.Messages.TWO_FA_BACKUP_CODES_LABEL,
              children: [
                (0, a.jsx)(o.FormText, {
                  type: o.FormText.Types.DESCRIPTION,
                  className: R.marginBottom20,
                  children:
                    x.default.Messages.TWO_FA_BACKUP_CODES_BODY.format(),
                }),
                (0, a.jsxs)(h.default, {
                  children: [
                    (0, a.jsx)(h.default.Child, {
                      children: (0, a.jsx)("ul", {
                        className: M.checkboxGroup,
                        children: n(t.slice(0, t.length / 2)),
                      }),
                    }),
                    (0, a.jsx)(h.default.Child, {
                      children: (0, a.jsx)("ul", {
                        className: M.checkboxGroup,
                        children: n(t.slice(t.length / 2)),
                      }),
                    }),
                  ],
                }),
                (0, a.jsx)("div", {
                  children: (0, a.jsx)(o.Button, {
                    onClick: this.generateBackupCodes,
                    look: o.ButtonLooks.LINK,
                    size: o.ButtonSizes.MIN,
                    children: x.default.Messages.TWO_FA_GENERATE_CODES,
                  }),
                }),
                (0, a.jsx)(o.FormDivider, { className: R.marginTop20 }),
              ],
            });
          }
          return (0, a.jsxs)(o.FormSection, {
            children: [
              (0, a.jsx)(o.FormTitle, { children: x.default.Messages.TWO_FA }),
              (0, a.jsx)(o.FormText, {
                type: o.FormText.Types.DESCRIPTION,
                className: R.marginBottom20,
                children: x.default.Messages.TWO_FA_DESCRIPTION,
              }),
              (0, a.jsxs)(h.default, {
                justify: h.default.Justify.START,
                className: R.marginBottom20,
                children: [
                  (0, a.jsx)(h.default.Child, {
                    wrap: !0,
                    grow: 0,
                    children: s,
                  }),
                  (0, a.jsx)(h.default.Child, {
                    wrap: !0,
                    children: this.props.hasTOTPEnabled
                      ? (0, a.jsx)(o.Button, {
                          onClick: this.handleDisableMFA,
                          size: o.Button.Sizes.SMALL,
                          color: o.ButtonColors.RED,
                          look: o.ButtonLooks.OUTLINED,
                          children: x.default.Messages.TWO_FA_REMOVE,
                        })
                      : (0, a.jsx)(o.Button, {
                          onClick: C.default.enableMFA,
                          size: o.ButtonSizes.SMALL,
                          children: x.default.Messages.TWO_FA_ENABLE,
                        }),
                  }),
                ],
              }),
              e,
              this.renderMFASMS(),
              (0, a.jsx)(f.default, {}),
            ],
          });
        }
        renderDisabled() {
          return (0, a.jsxs)(o.FormSection, {
            title: x.default.Messages.TWO_FA,
            children: [
              (0, a.jsx)(o.FormText, {
                type: o.FormText.Types.DESCRIPTION,
                className: R.marginBottom20,
                children: x.default.Messages.TWO_FA_SALES_PITCH,
              }),
              (0, a.jsx)(o.FormItem, {
                children: (0, a.jsx)(o.Button, {
                  onClick: C.default.enableMFA,
                  size: o.ButtonSizes.SMALL,
                  children: x.default.Messages.TWO_FA_ENABLE,
                }),
              }),
              (0, a.jsx)(f.default, {}),
            ],
          });
        }
        render() {
          let { currentUser: e } = this.props;
          return I.hasCrypto
            ? e.verified
              ? e.mfaEnabled
                ? this.renderEnabled()
                : this.renderDisabled()
              : (0, a.jsx)(o.FormSection, {
                  title: x.default.Messages.TWO_FA,
                  children: (0, a.jsx)(o.FormText, {
                    type: o.FormText.Types.DESCRIPTION,
                    children: x.default.Messages.TWO_FA_NOT_VERIFIED,
                  }),
                })
            : (0, a.jsx)(o.FormSection, {
                title: x.default.Messages.TWO_FA,
                children: (0, a.jsx)(o.FormText, {
                  type: o.FormText.Types.DESCRIPTION,
                  children: x.default.Messages.TWO_FA_USE_DESKTOP_APP,
                }),
              });
        }
        openPhoneVerificationModal() {
          let e =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          (0, o.openModal)(
            t =>
              (0, a.jsx)(T.default, {
                reason: E.ChangePhoneReason.USER_SETTINGS_UPDATE,
                ...t,
                ...e,
              }),
            { modalKey: O.PHONE_VERIFICATION_MODAL_KEY }
          );
        }
        constructor(...e) {
          super(...e),
            (this.state = { revealed: !1, password: "" }),
            (this.togglePhoneNumberVisibility = e => {
              e.preventDefault(),
                this.setState({ revealed: !this.state.revealed });
            }),
            (this.handleDisableMFA = () => {
              d.default.disable();
            }),
            (this.generateBackupCodes = async () => {
              let e = m.default.getVerificationKey();
              await d.default.confirmViewBackupCodes(e, !0);
            }),
            (this.sendMFABackupCodesVerificationKeyEmail = () => {
              (0, o.openModal)(e =>
                (0, a.jsx)(S.default, {
                  ...e,
                  handleSubmit: e =>
                    d.default
                      .sendMFABackupCodesVerificationKeyEmail(e)
                      .then(() => {
                        this.viewBackupCodes(e);
                      }),
                  title:
                    x.default.Messages.TWO_FA_VIEW_BACKUP_CODES_ENTER_PASSWORD,
                  actionText:
                    x.default.Messages.TWO_FA_BACKUP_CODES_NEXT_ACTION,
                })
              );
            }),
            (this.viewBackupCodes = e => {
              (0, o.openModal)(t =>
                (0, a.jsx)(c.default, {
                  ...t,
                  handleSubmit: e =>
                    d.default
                      .confirmViewBackupCodes(e, !1)
                      .then(() => t.onClose()),
                  maxLength: 8,
                  title:
                    x.default.Messages.TWO_FA_CONFIRM_VIEW_BACKUP_CODES_LABEL,
                  label:
                    x.default.Messages
                      .TWO_FA_CONFIRM_VIEW_BACKUP_CODES_INPUT_LABEL,
                  forceNoPlaceholder: !0,
                  retryPrompt:
                    x.default.Messages.TWO_FA_CONFIRM_VIEW_RESEND_EMAIL_PROMPT,
                  retrySuccessMessage:
                    x.default.Messages.TWO_FA_CONFIRM_VIEW_RESEND_EMAIL_SUCCESS,
                  onRetry: () =>
                    d.default.sendMFABackupCodesVerificationKeyEmail(e),
                  actionText: x.default.Messages.TWO_FA_VIEW_CODES_SUBMIT,
                  helpMessage:
                    x.default.Messages.TWO_FA_CONFIRM_VIEW_BACKUP_CODES_BODY,
                })
              );
            }),
            (this.getDownloadFileContents = () => {
              let e = this.props.backupCodes
                  .map(e => {
                    let { consumed: t, code: s } = e;
                    return "* "
                      .concat(s.substr(0, 4), "-")
                      .concat(s.substr(4), " ")
                      .concat(t ? "(used)" : "");
                  })
                  .join("\r\n"),
                t = x.default.Messages.TWO_FA_DISCORD_BACKUP_CODES.format({
                  email: this.props.currentUser.email,
                });
              return "".concat(t, "\r\n\r\n").concat(e);
            }),
            (this.handleChangePhoneNumber = () => {
              this.openPhoneVerificationModal();
            }),
            (this.handleEnableSMS = () => {
              let { currentUser: e } = this.props,
                t = () => {
                  (0, o.openModal)(e =>
                    (0, a.jsx)(S.default, {
                      ...e,
                      handleSubmit: d.default.enableSMS,
                      title: x.default.Messages.MFA_SMS_ENABLE,
                    })
                  );
                };
              null == e.phone
                ? this.openPhoneVerificationModal({ onAddedPhone: t })
                : t();
            }),
            (this.handleDisableSMS = () => {
              (0, o.openModal)(e =>
                (0, a.jsx)(S.default, {
                  ...e,
                  handleSubmit: d.default.disableSMS,
                  title: x.default.Messages.MFA_SMS_REMOVE,
                  children: x.default.Messages._MFA_SMS_CONFIRM_REMOVE_BODY,
                })
              );
            });
        }
      }
      function L(e) {
        let t = (0, r.useStateFromStores)([g.default], () =>
          g.default.getCurrentUser()
        );
        i(null != t, "TwoFactorAuth: currentUser cannot be undefined");
        let s = (0, r.useStateFromStoresObject)([m.default, _.default], () => ({
          togglingSMS: m.default.togglingSMS,
          hasTOTPEnabled: _.default.hasTOTPEnabled(),
        }));
        return (0, a.jsx)(v, { currentUser: t, ...s, ...e });
      }
    },
    921600: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return K;
          },
        }),
        s("222007");
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("917351"),
        o = s.n(r),
        d = s("446674"),
        u = s("77078"),
        c = s("79112"),
        S = s("533280"),
        E = s("180748"),
        T = s("206230"),
        f = s("951212"),
        _ = s("692038"),
        m = s("815297"),
        g = s("574073"),
        h = s("291655"),
        N = s("67508"),
        I = s("76629"),
        p = s("981957"),
        C = s("145131"),
        A = s("476765"),
        O = s("830837"),
        x = s("132755"),
        M = s("599110"),
        R = s("701909"),
        D = s("845579"),
        v = s("186709"),
        L = s("225849"),
        P = s("397336"),
        j = s("49111"),
        b = s("560241"),
        U = s("357046"),
        y = s("782340"),
        B = s("680942"),
        F = s("890957"),
        G = s("307757");
      let k = (0, A.uid)(),
        H = (0, A.uid)(),
        w = (0, A.uid)(),
        V = o.debounce(e => {
          (0, E.setSaturation)(e);
        }, 250),
        Y = o.debounce(e => {
          (0, I.setSpeechRate)(e);
        }, 250);
      function K(e) {
        return (0, a.jsxs)(u.FormSection, {
          tag: u.FormTitleTags.H1,
          title: y.default.Messages.ACCESSIBILITY,
          children: [
            (0, a.jsx)(W, {}),
            (0, a.jsx)(z, {}),
            (0, a.jsx)(u.FormDivider, {}),
            (0, a.jsx)(Q, {}),
            (0, a.jsx)(X, {}),
            (0, a.jsx)(q, {}),
            (0, f.canEnableForcedColors)() ? (0, a.jsx)(Z, {}) : null,
            (0, a.jsx)(J, {}),
            (0, a.jsx)($, {}),
            (0, a.jsx)(ee, {}),
            (0, a.jsx)(et, {}),
            (0, a.jsx)(u.FormDivider, { className: F.marginBottom20 }),
            (0, a.jsx)(u.Text, {
              variant: "text-md/normal",
              children:
                y.default.Messages.ACCESSIBILITY_SETTINGS_APPEARANCE_LINK.format(
                  {
                    onAppearanceClick() {
                      c.default.open(j.UserSettingsSections.APPEARANCE);
                    },
                  }
                ),
            }),
          ],
        });
      }
      function W() {
        let e = D.MessageDisplayCompact.useSetting(),
          [t] = n.useState(() => {
            let e = (0, _.createMessageRecord)({
              ...(0, m.default)({
                channelId: "1337",
                content:
                  y.default.Messages.ACCESSIBILITY_SETTINGS_SATURATION_LINK_PREVIEW_MESSAGE.format(
                    { previewLink: "https://discord.com/accessibility" }
                  ),
              }),
              state: j.MessageStates.SENT,
              id: "".concat(0),
            });
            return (e.colorString = "green"), e;
          });
        return (0, a.jsx)(u.FocusBlock, {
          children: (0, a.jsxs)(u.Card, {
            className: B.preview,
            "aria-hidden": !0,
            children: [
              (0, a.jsxs)("div", {
                className: B.previewHeader,
                children: [
                  (0, a.jsx)(u.Button, {
                    size: u.Button.Sizes.SMALL,
                    color: u.Button.Colors.BRAND,
                    children:
                      y.default.Messages.ACCESSIBILITY_EXAMPLE_BUTTON_LABEL,
                  }),
                  (0, a.jsx)("div", {
                    className: B.previewAvatars,
                    children: [
                      j.StatusTypes.ONLINE,
                      j.StatusTypes.DND,
                      j.StatusTypes.IDLE,
                    ].map(e =>
                      (0, a.jsx)(
                        u.AnimatedAvatar,
                        {
                          "aria-label": y.default.Messages.USER_SETTINGS_AVATAR,
                          src: G,
                          size: u.AvatarSizes.SIZE_32,
                          status: e,
                        },
                        e
                      )
                    ),
                  }),
                ],
              }),
              (0, a.jsx)("div", {
                className: B.previewMessage,
                children: (0, a.jsx)(h.default, {
                  compact: e,
                  author: {
                    ...(0, g.getMessageAuthor)(t),
                    colorString: "#DD80F4",
                  },
                  message: t,
                }),
              }),
            ],
          }),
        });
      }
      function z() {
        let { saturation: e, desaturateUserColors: t } = (0,
        d.useStateFromStoresObject)([T.default], () => ({
          saturation: T.default.saturation,
          desaturateUserColors: T.default.desaturateUserColors,
        }));
        return (0, a.jsxs)(u.FormSection, {
          className: F.marginTop20,
          children: [
            (0, a.jsx)(u.FormTitle, {
              id: k,
              className: F.marginBottom8,
              children:
                y.default.Messages.ACCESSIBILITY_SETTINGS_SATURATION_TITLE,
            }),
            (0, a.jsx)(u.FormText, {
              id: H,
              type: u.FormText.Types.DESCRIPTION,
              className: F.marginBottom20,
              children:
                y.default.Messages
                  .ACCESSIBILITY_SETTINGS_SATURATION_DESCRIPTION,
            }),
            (0, a.jsx)(u.Slider, {
              "aria-labelledby": k,
              "aria-describedby": H,
              markers: j.Accessibility.SATURATION_INCREMENTS,
              equidistant: !0,
              stickToMarkers: !0,
              maxValue: 1,
              minValue: 0,
              initialValue: e,
              onValueChange: V,
              onMarkerRender: e =>
                (100 * e) % 2 == 0 ? "".concat(100 * e, "%") : void 0,
            }),
            (0, a.jsx)(u.FormSwitch, {
              hideBorder: !0,
              className: i(F.marginTop8, F.marginBottom20),
              value: t,
              onChange: E.toggleDesaturateUserColors,
              note: y.default.Messages
                .ACCESSIBILITY_SETTINGS_SATURATION_CUSTOM_COLORS_DESCRIPTION,
              children:
                y.default.Messages
                  .ACCESSIBILITY_SETTINGS_SATURATION_CUSTOM_COLORS_LABEL,
            }),
          ],
        });
      }
      function Q() {
        let e = (0, d.useStateFromStores)(
          [T.default],
          () => T.default.alwaysShowLinkDecorations
        );
        return (0, a.jsx)(u.FormItem, {
          className: F.marginTop20,
          children: (0, a.jsx)(u.FormSwitch, {
            note: y.default.Messages
              .ACCESSIBILITY_SETTINGS_ALWAYS_SHOW_LINK_DECORATIONS_NOTE,
            value: e,
            onChange: function () {
              (0, E.setAlwaysShowLinkDecorations)(!e);
            },
            children:
              y.default.Messages
                .ACCESSIBILITY_SETTINGS_ALWAYS_SHOW_LINK_DECORATIONS_LABEL,
          }),
        });
      }
      function X() {
        let e = (0, d.useStateFromStores)(
          [T.default],
          () => T.default.roleStyle
        );
        return (0, a.jsxs)(a.Fragment, {
          children: [
            (0, a.jsxs)(u.FormItem, {
              title: y.default.Messages.ACCESSIBILITY_SETTINGS_ROLE_STYLE_TITLE,
              className: F.marginTop20,
              children: [
                (0, a.jsx)(u.FormText, {
                  type: u.FormText.Types.DESCRIPTION,
                  className: F.marginBottom8,
                  children:
                    y.default.Messages
                      .ACCESSIBILITY_SETTINGS_ROLE_STYLE_DESCRIPTION,
                }),
                (0, a.jsx)(u.RadioGroup, {
                  options: [
                    {
                      name: y.default.Messages
                        .ACCESSIBILITY_SETTINGS_ROLE_STYLE_USERNAME_LABEL,
                      value: "username",
                    },
                    {
                      name: y.default.Messages
                        .ACCESSIBILITY_SETTINGS_ROLE_STYLE_DOT_LABEL,
                      value: "dot",
                    },
                    {
                      name: y.default.Messages
                        .ACCESSIBILITY_SETTINGS_ROLE_STYLE_HIDDEN_LABEL,
                      value: "hidden",
                    },
                  ],
                  onChange: function (e) {
                    (0, E.setRoleStyle)(e.value);
                  },
                  value: e,
                }),
              ],
            }),
            (0, a.jsx)(u.FormDivider, { className: F.marginTop20 }),
          ],
        });
      }
      function q() {
        let e = (0, d.useStateFromStores)(
            [T.default],
            () => T.default.syncProfileThemeWithUserTheme
          ),
          t = n.useRef(null);
        return (
          (0, L.default)(
            t,
            P.AccessibilityScrollPositions.SYNC_PROFILE_THEME_WITH_USER_THEME
          ),
          (0, a.jsx)(u.FormItem, {
            ref: t,
            title:
              y.default.Messages.ACCESSIBILITY_SETTINGS_PROFILE_COLORS_TITLE,
            className: i(F.marginTop20, B.syncProfileThemeWithUserTheme),
            children: (0, a.jsx)(u.FormSwitch, {
              note: y.default.Messages.ACCESSIBILITY_SETTINGS_PROFILE_THEMES_NOTE.format(
                {
                  onThemeClick() {
                    c.default.open(j.UserSettingsSections.APPEARANCE);
                  },
                }
              ),
              className: F.marginTop20,
              value: e,
              onChange: E.toggleSyncProfileThemeWithUserTheme,
              children:
                y.default.Messages
                  .ACCESSIBILITY_SETTINGS_PROFILE_THEMES_DESCRIPTION,
            }),
          })
        );
      }
      function Z() {
        let [e] = (0, d.useStateFromStoresArray)([T.default], () => [
            T.default.syncForcedColors,
            T.default.systemForcedColors,
          ]),
          [t, s] = n.useState(e);
        n.useEffect(() => {
          s(e);
        }, [e]);
        let l = n.useRef(null);
        n.useEffect(() => {
          null != l.current && (clearTimeout(l.current), (l.current = null)),
            t !== e &&
              (l.current = setTimeout(
                () => (0, E.setSyncForcedColors)(t),
                150
              ));
        }, [t, e]);
        let i =
          y.default.Messages.ACCESSIBILITY_SETTINGS_SYNC_FORCED_COLORS_DESCRIPTION.format(
            {
              learnMoreLink: R.default.getArticleURL(
                j.HelpdeskArticles.FORCED_COLORS
              ),
            }
          );
        return (0, a.jsx)(u.FormItem, {
          title: y.default.Messages.ACCESSIBILITY_SETTINGS_CONTRAST,
          className: F.marginTop20,
          children: (0, a.jsx)(u.FormSwitch, {
            value: t,
            note: i,
            onChange: s,
            children:
              y.default.Messages
                .ACCESSIBILITY_SETTINGS_SYNC_FORCED_COLORS_LABEL,
          }),
        });
      }
      function J() {
        let e = D.GifAutoPlay.useSetting(),
          t = D.AnimateEmoji.useSetting(),
          {
            useReducedMotion: s,
            rawPrefersReducedMotion: l,
            systemPrefersReducedMotion: r,
            gifAutoPlayOverrideReason: o,
            animateEmojiOverrideReason: c,
          } = (0, d.useStateFromStoresObject)([T.default, v.default], () => ({
            systemPrefersReducedMotion: T.default.systemPrefersReducedMotion,
            rawPrefersReducedMotion: T.default.rawPrefersReducedMotion,
            useReducedMotion: T.default.useReducedMotion,
            gifAutoPlayOverrideReason:
              v.default.getAppliedOverrideReasonKey("gifAutoPlay"),
            animateEmojiOverrideReason:
              v.default.getAppliedOverrideReasonKey("animateEmoji"),
          })),
          S = n.useRef(null);
        (0, L.default)(S, P.AccessibilityScrollPositions.REDUCED_MOTION);
        let f = n.useCallback(
            (e, t) => {
              (0, E.setPrefersReducedMotion)(t ? "auto" : r);
            },
            [r]
          ),
          _ = n.useCallback(e => {
            (0, E.setPrefersReducedMotion)(e ? "reduce" : "no-preference");
          }, []);
        return (0, a.jsxs)(u.FormItem, {
          ref: S,
          title: y.default.Messages.ACCESSIBILITY_PREFERS_REDUCED_MOTION,
          className: i(F.marginTop20, B.reducedMotion),
          children: [
            (0, a.jsx)(u.FormText, {
              type: u.FormText.Types.DESCRIPTION,
              className: F.marginBottom8,
              children:
                y.default.Messages.ACCESSIBILITY_PREFERS_REDUCED_MOTION_DESCRIPTION.format(
                  {
                    helpdeskArticle: R.default.getArticleURL(
                      j.HelpdeskArticles.REDUCED_MOTION
                    ),
                  }
                ),
            }),
            (0, a.jsx)(u.Checkbox, {
              className: F.marginTop20,
              value: "auto" === l,
              shape: u.Checkbox.Shapes.BOX,
              type: u.Checkbox.Types.INVERTED,
              onChange: f,
              children: (0, a.jsx)(u.Text, {
                variant: "text-sm/normal",
                children:
                  y.default.Messages.ACCESSIBILITY_PREFERS_REDUCED_MOTION_AUTO,
              }),
            }),
            (0, a.jsx)(u.FormSwitch, {
              className: F.marginTop20,
              value: s,
              onChange: _,
              children:
                y.default.Messages.ACCESSIBILITY_PREFERS_REDUCED_MOTION_ENABLE,
            }),
            (0, a.jsx)(u.FormSwitch, {
              className: F.marginBottom40,
              value: e,
              note: null != o ? (0, N.default)(o) : void 0,
              onChange: D.GifAutoPlay.updateSetting,
              children: y.default.Messages.GIF_AUTO_PLAY_LABEL,
            }),
            (0, a.jsx)(u.FormSwitch, {
              className: i(F.marginTop8, F.marginBottom20),
              value: t,
              note: null != c ? (0, N.default)(c) : void 0,
              onChange: D.AnimateEmoji.updateSetting,
              children: y.default.Messages.ANIMATE_EMOJI,
            }),
          ],
        });
      }
      function $() {
        let e = D.AnimateStickers.useSetting(),
          t = (0, d.useStateFromStores)([v.default], () =>
            v.default.getAppliedOverrideReasonKey("animateStickers")
          ),
          s = n.useCallback(e => {
            D.AnimateStickers.updateSetting(e.value);
          }, []);
        return (0, a.jsxs)(u.FormItem, {
          className: F.marginBottom40,
          title: y.default.Messages.STICKERS_AUTO_PLAY_HEADING,
          children: [
            (0, a.jsx)(u.FormText, {
              type: u.FormText.Types.DESCRIPTION,
              className: F.marginBottom8,
              children:
                null != t
                  ? (0, N.default)(t)
                  : y.default.Messages.STICKERS_AUTO_PLAY_HELP,
            }),
            (0, a.jsx)(u.RadioGroup, {
              options: [
                {
                  name: y.default.Messages.STICKERS_ALWAYS_ANIMATE,
                  value: b.StickerAnimationSettings.ALWAYS_ANIMATE,
                },
                {
                  name: y.default.Messages.STICKERS_ANIMATE_ON_INTERACTION,
                  desc: y.default.Messages
                    .STICKERS_ANIMATE_ON_INTERACTION_DESCRIPTION,
                  value: b.StickerAnimationSettings.ANIMATE_ON_INTERACTION,
                },
                {
                  name: y.default.Messages.STICKERS_NEVER_ANIMATE,
                  value: b.StickerAnimationSettings.NEVER_ANIMATE,
                },
              ],
              onChange: s,
              value: e,
            }),
          ],
        });
      }
      function ee() {
        let e = (0, d.useStateFromStores)(
            [T.default],
            () => T.default.isSubmitButtonEnabled
          ),
          t = D.UseLegacyChatInput.useSetting(),
          s = n.useRef(null);
        return (
          (0, L.default)(s, P.AccessibilityScrollPositions.LEGACY_CHAT_INPUT),
          (0, a.jsxs)(u.FormItem, {
            ref: s,
            children: [
              (0, a.jsx)(u.FormTitle, {
                className: F.marginBottom8,
                children:
                  y.default.Messages.FORM_LABEL_ACCESSIBILITY_CHAT_INPUT,
              }),
              (0, a.jsx)(u.FormSwitch, {
                className: F.marginTop20,
                value: e,
                onChange: E.toggleSubmitButton,
                children: y.default.Messages.DISPLAY_SUBMIT_BUTTON,
              }),
              (0, a.jsx)(u.FormSwitch, {
                className: F.marginTop8,
                value: t,
                note: y.default.Messages.LEGACY_CHAT_INPUT_DESCRIPTION,
                onChange: e => {
                  M.default.track(j.AnalyticEvents.LEGACY_CHAT_INPUT_TOGGLED, {
                    enabled: e,
                    location: {
                      section: j.AnalyticsSections.SETTINGS_ACCESSIBILITY,
                    },
                  }),
                    D.UseLegacyChatInput.updateSetting(e);
                },
                children: y.default.Messages.LEGACY_CHAT_INPUT,
              }),
            ],
          })
        );
      }
      function et() {
        let e = D.EnableTTSCommand.useSetting(),
          t = (0, d.useStateFromStores)(
            [p.default],
            () => p.default.speechRate
          ),
          [s, l] = n.useState(!1);
        return S.supported
          ? (0, a.jsxs)(a.Fragment, {
              children: [
                (0, a.jsxs)(u.FormItem, {
                  children: [
                    (0, a.jsx)(u.FormTitle, {
                      className: F.marginBottom8,
                      children: y.default.Messages.FORM_LABEL_TTS,
                    }),
                    (0, a.jsx)(u.FormSwitch, {
                      className: F.marginTop20,
                      value: e,
                      onChange: D.EnableTTSCommand.updateSetting,
                      children: y.default.Messages.ALLOW_TTS_COMMAND,
                    }),
                  ],
                }),
                (0, a.jsxs)(u.FormItem, {
                  className: F.marginBottom20,
                  children: [
                    (0, a.jsx)(u.FormTitle, {
                      id: w,
                      className: F.marginBottom20,
                      children:
                        y.default.Messages
                          .ACCESSIBILITY_SETTINGS_TTS_RATE_LABEL,
                    }),
                    (0, a.jsx)("div", {
                      className: B.ttsPreviewWrapper,
                      children: (0, a.jsx)(u.Button, {
                        color: u.ButtonColors.BRAND_NEW,
                        onClick: () => {
                          if (s) {
                            (0, I.stopSpeaking)(), l(!1);
                            return;
                          }
                          (0, I.speakText)(
                            y.default.Messages
                              .ACCESSIBILITY_SETTINGS_TTS_RATE_TEST,
                            !0,
                            void 0,
                            () => l(!0),
                            () => l(!1)
                          ),
                            l(!0);
                        },
                        children: (0, a.jsxs)(C.default, {
                          align: C.default.Align.CENTER,
                          children: [
                            s
                              ? (0, a.jsx)(O.default, { width: 24, height: 24 })
                              : (0, a.jsx)(x.default, {
                                  width: 24,
                                  height: 24,
                                }),
                            (0, a.jsx)("span", {
                              children:
                                y.default.Messages
                                  .ACCESSIBILITY_SETTINGS_TTS_RATE_PREVIEW,
                            }),
                            (0, a.jsx)(u.HiddenVisually, {
                              children:
                                y.default.Messages
                                  .ACCESSIBILITY_SETTINGS_TTS_RATE_LABEL,
                            }),
                          ],
                        }),
                      }),
                    }),
                    (0, a.jsx)(u.Slider, {
                      markers: U.SPEECH_RATE_INCREMENTS,
                      initialValue: t,
                      defaultValue: 1,
                      stickToMarkers: !0,
                      onValueChange: Y,
                      onValueRender: e => "x".concat(e.toFixed(2)),
                      onMarkerRender: e =>
                        0 === e
                          ? (0, a.jsx)("span", {
                              className: B.ttsSliderMarker,
                              children:
                                y.default.Messages
                                  .ACCESSIBILITY_SETTINGS_TTS_RATE_SLOWER,
                            })
                          : 10 === e
                            ? (0, a.jsx)("span", {
                                className: B.ttsSliderMarker,
                                children:
                                  y.default.Messages
                                    .ACCESSIBILITY_SETTINGS_TTS_RATE_FASTER,
                              })
                            : 1 === e
                              ? (0, a.jsx)("span", { children: "x1.0" })
                              : e % 1 == 0
                                ? ""
                                : void 0,
                      "aria-labelledby": w,
                    }),
                  ],
                }),
              ],
            })
          : null;
      }
    },
    250972: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return V;
          },
        }),
        s("222007");
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("627445"),
        o = s.n(r),
        d = s("446674"),
        u = s("819855"),
        c = s("77078"),
        S = s("430713"),
        E = s("152584"),
        T = s("642950"),
        f = s("583227"),
        _ = s("426902"),
        m = s("415133"),
        g = s("42060"),
        h = s("167209"),
        N = s("363861"),
        I = s("506885"),
        p = s("305961"),
        C = s("650893"),
        A = s("102985"),
        O = s("697218"),
        x = s("145131"),
        M = s("555158"),
        R = s("37785"),
        D = s("299039"),
        v = s("915639"),
        L = s("161778"),
        P = s("387225"),
        j = s("628235"),
        b = s("913299"),
        U = s("629145"),
        y = s("969927"),
        B = s("49111"),
        F = s("935583"),
        G = s("782340"),
        k = s("858429"),
        H = s("890957");
      class w extends n.PureComponent {
        componentDidMount() {
          let { currentUser: e } = this.props;
          (0, I.default)(e.id, e.getAvatarURL(void 0, 80));
        }
        componentWillUnmount() {
          S.default.clearBackupCodes(), (0, E.accountDetailsClose)();
        }
        renderAccountWarning() {
          let { currentUser: e } = this.props;
          if (!e.isClaimed()) {
            let e = (0, a.jsxs)("section", {
              children: [
                (0, a.jsx)("div", {
                  className: k.accountWarningBodyText,
                  children: G.default.Messages.UNCLAIMED_ACCOUNT_BODY_2,
                }),
                (0, a.jsx)(c.Button, {
                  look: c.ButtonLooks.INVERTED,
                  size: c.ButtonSizes.SMALL,
                  color: c.Button.Colors.RED,
                  onClick: () => _.default.openClaimAccountModal(),
                  children: G.default.Messages.CLAIM_ACCOUNT_LONG,
                }),
              ],
            });
            return (0, a.jsx)(c.FormNotice, {
              type: c.FormNotice.Types.DANGER,
              className: H.marginBottom20,
              imageData: { src: s("389671"), width: 60, height: 60 },
              title: G.default.Messages.UNCLAIMED_ACCOUNT_TITLE,
              body: e,
            });
          }
          if (null == e.email) return null;
          if (!e.verified) {
            let e = (0, a.jsxs)("section", {
              children: [
                (0, a.jsx)("div", {
                  className: k.accountWarningBodyText,
                  children:
                    G.default.Messages.USER_SETTINGS_UNVERIFIED_EMAIL_BODY,
                }),
                (0, a.jsx)(P.default, {
                  size: c.ButtonSizes.SMALL,
                  color: c.Button.Colors.PRIMARY,
                }),
              ],
            });
            return (0, a.jsx)(c.FormNotice, {
              type: c.FormNotice.Types.PRIMARY,
              className: H.marginBottom20,
              imageData: { src: s("445113"), width: 60, height: 60 },
              title: G.default.Messages.UNVERIFIED_EMAIL_TITLE,
              body: e,
            });
          }
        }
        renderPomeloWarning() {
          return this.props.shouldRenderPomeloWarning
            ? (0, a.jsxs)(M.default, {
                className: k.accountWarningBodyText,
                messageType: M.HelpMessageTypes.WARNING,
                children: [
                  this.props.forceMigrationExperiment
                    ? G.default.Messages.POMELO_ACTION_NEEDED_FORCE.format({
                        date: (0, m.getLocalizedForcedUUDate)(
                          this.props.locale
                        ),
                      })
                    : G.default.Messages.POMELO_ACTION_NEEDED.format(),
                  " ",
                  "",
                  (0, a.jsx)(R.default, {
                    className: k.noticeTextButton,
                    onClick: () =>
                      (0, N.default)(F.PomeloEntrypoints.USER_SETTINGS),
                    children: G.default.Messages.GET_STARTED,
                  }),
                ],
              })
            : null;
        }
        renderAccountSettings() {
          return (0, a.jsxs)(c.FormSection, {
            tag: c.FormTitleTags.H1,
            title: G.default.Messages.USER_SETTINGS_MY_ACCOUNT,
            className: k.userSettingsAccount,
            children: [
              this.renderPomeloWarning(),
              this.renderAccountWarning(),
              (0, a.jsx)(U.default, {}),
            ],
          });
        }
        renderSecuritySettings() {
          let { backupCodes: e, currentUser: t, theme: n } = this.props,
            l = (0, u.isThemeDark)(n) ? s("553847") : s("963040");
          return (0, a.jsxs)(c.FormSection, {
            className: i(k.userSettingsSecurity, H.marginTop40),
            title:
              G.default.Messages
                .USER_SETTINGS_ACCOUNT_PASSWORD_AND_AUTHENTICATION,
            tag: "h1",
            children: [
              t.mfaEnabled
                ? (0, a.jsx)(c.FormSection, {
                    children: (0, a.jsxs)(c.FormTitle, {
                      className: i(k.isEnabled, H.marginBottom20),
                      children: [
                        (0, a.jsx)("img", {
                          alt: "",
                          className: i(k.lockIcon),
                          src: s("507822"),
                        }),
                        G.default.Messages.TWO_FA_ENABLED,
                      ],
                    }),
                  })
                : null,
              (0, a.jsx)("div", {
                children: (0, a.jsx)(c.Button, {
                  size: c.Button.Sizes.SMALL,
                  className: k.changePasswordButton,
                  onClick: () =>
                    (0, c.openModal)(e =>
                      (0, a.jsx)(y.default, { ...e, onSuccess: e.onClose })
                    ),
                  children: G.default.Messages.CHANGE_PASSWORD,
                }),
              }),
              (0, a.jsxs)(x.default, {
                align: x.default.Align.STRETCH,
                children: [
                  (0, a.jsx)(x.default.Child, {
                    wrap: !0,
                    children: (0, a.jsx)(j.default, { backupCodes: e }),
                  }),
                  t.mfaEnabled
                    ? null
                    : (0, a.jsx)(x.default, {
                        align: x.default.Align.CENTER,
                        basis: "323px",
                        grow: 0,
                        children: (0, a.jsx)("img", {
                          src: l,
                          className: k.userSettingsSecurityImage,
                          alt: "",
                        }),
                      }),
                ],
              }),
            ],
          });
        }
        renderConfirmModals() {
          let {
            shouldRenderOwnedGuildsModal: e,
            shouldRenderDeleteAccountConfirmModal: t,
            shouldRenderDisableAccountErrorModal: s,
            disableAccountErrorMessage: n,
          } = this.state;
          if (e) {
            let e = () => this.setState({ shouldRenderOwnedGuildsModal: !1 });
            return (0, a.jsx)(c.DeclarativeConfirmModal, {
              dismissable: !0,
              header: G.default.Messages.DELETE_ACCOUNT_TRANSFER_OWNERSHIP,
              confirmText: G.default.Messages.OKAY,
              confirmButtonColor: c.ButtonColors.BRAND,
              onCancel: e,
              onConfirm: e,
              children: (0, a.jsx)(c.Text, {
                variant: "text-md/normal",
                children:
                  G.default.Messages.DELETE_ACCOUNT_TRANSFER_OWNERSHIP_BODY,
              }),
            });
          }
          if (t) {
            let e = () =>
              this.setState({ shouldRenderDeleteAccountConfirmModal: !1 });
            return (0, a.jsx)(c.DeclarativeConfirmModal, {
              dismissable: !0,
              header: G.default.Messages.DELETE_ACCOUNT,
              confirmText: G.default.Messages.DELETE_ACCOUNT,
              cancelText: G.default.Messages.CANCEL,
              onCancel: e,
              onConfirm: () => (0, E.disableAccount)("", !0).then(e),
              children: (0, a.jsx)(c.Text, {
                variant: "text-md/normal",
                children: G.default.Messages.DELETE_ACCOUNT_BODY,
              }),
            });
          }
          if (s) {
            let e = () =>
              this.setState({
                shouldRenderDisableAccountErrorModal: !1,
                disableAccountErrorMessage: null,
              });
            return (0, a.jsx)(c.DeclarativeConfirmModal, {
              dismissable: !0,
              header: G.default.Messages.DELETE_ACCOUNT_ERROR,
              confirmText: G.default.Messages.OKAY,
              confirmButtonColor: c.ButtonColors.BRAND,
              onCancel: e,
              onConfirm: e,
              children: (0, a.jsx)(c.Text, {
                variant: "text-md/normal",
                children: n,
              }),
            });
          }
        }
        render() {
          if (this.props.hide) return (0, a.jsx)(T.default, {});
          let { currentUser: e } = this.props;
          return (0, a.jsxs)("div", {
            children: [
              this.renderConfirmModals(),
              this.renderAccountSettings(),
              e.isClaimed()
                ? (0, a.jsxs)(a.Fragment, {
                    children: [
                      (0, a.jsx)(c.FormDivider, { className: H.marginTop40 }),
                      this.renderSecuritySettings(),
                      (0, a.jsx)(c.FormDivider, { className: H.marginTop40 }),
                    ],
                  })
                : null,
              (0, a.jsx)(b.default, {
                className: H.marginTop40,
                currentUser: e,
                handleDisableAccount: () => this.handleDisableAccount(!1),
                handleDeleteAccount: () => this.handleDisableAccount(!0),
              }),
            ],
          });
        }
        handleDisableAccountError(e) {
          if (e.body.code === B.AbortCodes.INVALID_PASSWORD) throw e;
          this.setState({
            shouldRenderDisableAccountErrorModal: !0,
            disableAccountErrorMessage: e.body.message,
          });
        }
        handleSubmitDisableAccount(e, t) {
          return (0, E.disableAccount)(e, t).then(
            B.NOOP,
            this.handleDisableAccountError
          );
        }
        handleDisableAccount() {
          let e =
              arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
            { currentUser: t } = this.props,
            s = p.default.getGuilds(),
            n = D.default.keys(s).filter(e => s[e].ownerId === t.id);
          if (n.length > 0) {
            this.setState({ shouldRenderOwnedGuildsModal: !0 });
            return;
          }
          t.isClaimed()
            ? (0, c.openModal)(t =>
                (0, a.jsx)(f.default, {
                  ...t,
                  handleSubmit: t => this.handleSubmitDisableAccount(t, e),
                  title: e
                    ? G.default.Messages.DELETE_ACCOUNT
                    : G.default.Messages.DISABLE_ACCOUNT,
                  actionText: e
                    ? G.default.Messages.DELETE_ACCOUNT
                    : G.default.Messages.DISABLE_ACCOUNT,
                  children: e
                    ? G.default.Messages.DELETE_ACCOUNT_BODY
                    : G.default.Messages.DISABLE_ACCOUNT_BODY,
                })
              )
            : this.setState({ shouldRenderDeleteAccountConfirmModal: !0 });
        }
        constructor(e) {
          super(e),
            (this.state = {
              disableAccountErrorMessage: null,
              shouldRenderOwnedGuildsModal: !1,
              shouldRenderDeleteAccountConfirmModal: !1,
              shouldRenderDisableAccountErrorModal: !1,
            });
        }
      }
      var V = () => {
        let e = (0, d.useStateFromStores)([O.default], () => {
            let e = O.default.getCurrentUser();
            return (
              o(
                null != e,
                "ConnectedUserAccountSettings: currentUser cannot be undefined"
              ),
              e
            );
          }),
          t = (0, d.useStateFromStores)([C.default], () =>
            C.default.getBackupCodes()
          ),
          s = (0, d.useStateFromStores)(
            [A.default],
            () => A.default.hidePersonalInformation
          ),
          n = (0, d.useStateFromStores)([L.default], () => L.default.theme),
          l = (0, h.useIsEligibleForPomelo)(),
          i = (0, g.useForceMigration)(),
          r = (0, d.useStateFromStores)([v.default], () => v.default.locale);
        return (0, a.jsx)(w, {
          theme: n,
          currentUser: e,
          backupCodes: t,
          hide: s,
          shouldRenderPomeloWarning: l,
          forceMigrationExperiment: i,
          locale: r,
        });
      };
    },
    89563: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return I;
          },
        }),
        s("222007");
      var a = s("37983");
      s("884691");
      var n = s("77078"),
        l = s("9759"),
        i = s("395635"),
        r = s("162236"),
        o = s("305961"),
        d = s("701909"),
        u = s("773336"),
        c = s("299039"),
        S = s("845579"),
        E = s("49111"),
        T = s("782340"),
        f = s("436557"),
        _ = s("890957");
      function m() {
        let e = S.ShowCurrentGame.useSetting(),
          t = S.DefaultGuildsActivityRestricted.useSetting(),
          s = u.isPlatformEmbedded
            ? T.default.Messages.SHOW_CURRENT_ACTIVITY_DESC_EMBEDDED
            : T.default.Messages.SHOW_CURRENT_ACTIVITY_DESC,
          l = e => {
            S.DefaultGuildsActivityRestricted.updateSetting(e),
              !(function (e) {
                let t = () => {
                  S.ActivityRestrictedGuilds.updateSetting(
                    e ? c.default.keys(o.default.getGuilds()) : []
                  );
                };
                (0, n.openModal)(e =>
                  (0, a.jsx)(n.ConfirmModal, {
                    header: T.default.Messages.USER_DM_SETTINGS_TITLE,
                    confirmText: T.default.Messages.NO_TEXT,
                    cancelText: T.default.Messages.YES_TEXT,
                    onCancel: t,
                    confirmButtonColor: n.Button.Colors.BRAND,
                    ...e,
                    children: (0, a.jsx)(n.Text, {
                      variant: "text-md/normal",
                      children:
                        T.default.Messages.ACTIVITY_RESTRICTION_MODAL_DESC,
                    }),
                  })
                );
              })(e);
          };
        return (0, a.jsxs)(n.FormSection, {
          className: _.marginBottom40,
          children: [
            (0, a.jsx)(n.FormTitle, {
              tag: n.FormTitleTags.H5,
              className: _.marginBottom8,
              children: T.default.Messages.ACTIVITY_STATUS,
            }),
            (0, a.jsx)(n.FormSwitch, {
              value: e,
              onChange: e => S.ShowCurrentGame.updateSetting(e),
              note: s,
              children: T.default.Messages.SHOW_CURRENT_ACTIVITY,
            }),
            (0, a.jsx)(n.FormSwitch, {
              value: !t,
              note: T.default.Messages.ACTIVITY_RESTRICTION_DEFAULT_NOTE.format(
                {
                  helpdeskArticle: d.default.getArticleURL(
                    E.HelpdeskArticles.ACTIVITY_STATUS_SETTINGS
                  ),
                }
              ),
              onChange: e => l(!e),
              children: T.default.Messages.ACTIVITY_RESTRICTION_DEFAULT,
            }),
          ],
        });
      }
      function g() {
        let e = S.AllowActivityPartyPrivacyFriends.useSetting(),
          t = S.AllowActivityPartyPrivacyVoiceChannel.useSetting();
        return (0, a.jsxs)(n.FormSection, {
          className: _.marginBottom40,
          children: [
            (0, a.jsx)(n.FormTitle, {
              tag: n.FormTitleTags.H5,
              className: _.marginBottom8,
              children: T.default.Messages.ACTIVITY_PARTY_PRIVACY,
            }),
            (0, a.jsx)(n.FormSwitch, {
              value: e,
              note: T.default.Messages.ACTIVITY_PARTY_PRIVACY_FRIENDS_HELP,
              onChange: e =>
                S.AllowActivityPartyPrivacyFriends.updateSetting(e),
              children: T.default.Messages.ACTIVITY_PARTY_PRIVACY_FRIENDS,
            }),
            (0, a.jsx)(n.FormSwitch, {
              value: t,
              note: T.default.Messages
                .ACTIVITY_PARTY_PRIVACY_VOICE_CHANNEL_HELP,
              onChange: e =>
                S.AllowActivityPartyPrivacyVoiceChannel.updateSetting(e),
              children: T.default.Messages.ACTIVITY_PARTY_PRIVACY_VOICE_CHANNEL,
            }),
          ],
        });
      }
      function h() {
        return (0, a.jsxs)(n.FormSection, {
          className: _.marginBottom40,
          children: [
            (0, a.jsxs)(n.FormTitle, {
              tag: n.FormTitleTags.H5,
              className: _.marginBottom8,
              children: [
                T.default.Messages.BROADCASTING_SETTINGS,
                (0, a.jsx)(i.default, { className: f.betaTag }),
              ],
            }),
            (0, a.jsx)(n.FormText, {
              type: n.FormText.Types.DESCRIPTION,
              className: _.marginBottom20,
              children: T.default.Messages.BROADCASTING_SETTINGS_DESCRIPTION,
            }),
            (0, a.jsx)(n.FormItem, {
              children: (0, a.jsx)(n.Button, {
                onClick: () => (0, r.openBroadcastingPrivacySettingsModal)(),
                size: n.ButtonSizes.SMALL,
                children: T.default.Messages.BROADCASTING_SETTINGS_CTA,
              }),
            }),
          ],
        });
      }
      function N() {
        return (0, a.jsx)(n.FormSection, {
          className: _.marginBottom40,
          children: (0, a.jsx)(n.FormNotice, {
            type: n.FormNotice.Types.PRIMARY,
            body: T.default.Messages.USER_SETTINGS_PRIVACY_TERMS.format({
              termsLink: E.MarketingURLs.TERMS,
              privacyLink: E.MarketingURLs.PRIVACY,
            }),
          }),
        });
      }
      function I() {
        let { canBroadcast: e } = l.default.useExperiment(
          { location: "user_settings_activity_privacy" },
          { autoTrackExposure: !0 }
        );
        return (0, a.jsxs)(n.FormSection, {
          tag: n.FormTitleTags.H1,
          title: T.default.Messages.ACTIVITY_PRIVACY,
          children: [
            (0, a.jsx)(m, {}),
            (0, a.jsx)(g, {}),
            e && (0, a.jsx)(h, {}),
            (0, a.jsx)(N, {}),
          ],
        });
      }
    },
    41525: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return I;
          },
        }),
        s("222007");
      var a = s("37983"),
        n = s("884691"),
        l = s("446674"),
        i = s("669491"),
        r = s("77078"),
        o = s("70614"),
        d = s("686470"),
        u = s("167726"),
        c = s("956089"),
        S = s("306160"),
        E = s("701909"),
        T = s("773336"),
        f = s("50885"),
        _ = s("845579"),
        m = s("271445"),
        g = s("49111"),
        h = s("782340"),
        N = s("26423");
      function I() {
        let [e] = n.useState(() => f.default.getEnableHardwareAcceleration()),
          t = _.DisableGamesTab.useSetting(),
          s = _.DeveloperMode.useSetting(),
          I = _.DisableHomeAutoNav.useSetting(),
          { hasLibraryApplication: p, testModeApplicationId: C } = (0,
          l.useStateFromStoresObject)([u.default, d.default], () => ({
            hasLibraryApplication: d.default.hasLibraryApplication(),
            testModeApplicationId: u.default.testModeApplicationId,
          })),
          A = n.useCallback(e => {
            _.DisableGamesTab.updateSetting(!e);
          }, []),
          O = n.useCallback(e => {
            e
              ? (0, r.openModal)(e => (0, a.jsx)(m.default, { ...e }))
              : o.reset();
          }, []),
          x = n.useCallback(e => {
            (0, r.openModal)(t =>
              (0, a.jsx)(r.ConfirmModal, {
                header: h.default.Messages.SWITCH_HARDWARE_ACCELERATION,
                confirmText: h.default.Messages.OKAY,
                cancelText: h.default.Messages.CANCEL,
                onConfirm: () => f.default.setEnableHardwareAcceleration(e),
                ...t,
                children: (0, a.jsx)(r.Text, {
                  variant: "text-sm/normal",
                  children:
                    h.default.Messages.SWITCH_HARDWARE_ACCELERATION_BODY,
                }),
              })
            );
          }, []),
          M = n.useCallback(e => {
            _.DisableHomeAutoNav.updateSetting(!e);
          }, []);
        return (0, a.jsxs)(r.FormSection, {
          tag: r.FormTitleTags.H1,
          title: h.default.Messages.SETTINGS_ADVANCED,
          children: [
            S.SUPPORTS_COPY &&
              (0, a.jsx)(r.FormSwitch, {
                value: s,
                onChange: _.DeveloperMode.updateSetting,
                note: h.default.Messages.DEVELOPER_MODE_HELP_TEXT.format({
                  apiDocsUrl: g.MarketingURLs.API_DOCS,
                }),
                children: h.default.Messages.DEVELOPER_MODE,
              }),
            T.isPlatformEmbedded &&
              (0, a.jsx)(r.FormSwitch, {
                value: e,
                onChange: x,
                note: h.default.Messages.HARDWARE_ACCELERATION_HELP_TEXT,
                children: h.default.Messages.HARDWARE_ACCELERATION,
              }),
            p &&
              (0, a.jsx)(r.FormSwitch, {
                value: !t,
                onChange: A,
                note: h.default.Messages.USER_SETTINGS_SHOW_LIBRARY_NOTE,
                children: h.default.Messages.USER_SETTINGS_SHOW_LIBRARY,
              }),
            s &&
              (0, a.jsx)(r.FormSwitch, {
                value: null != C,
                note: h.default.Messages.DEVELOPER_APPLICATION_TEST_MODE_NOTE,
                onChange: O,
                children: h.default.Messages.DEVELOPER_APPLICATION_TEST_MODE,
              }),
            (0, a.jsx)(r.FormSwitch, {
              value: !I,
              note: h.default.Messages.USER_SETTINGS_HOME_AUTO_NAV_HELP_TEXT.format(
                {
                  helpCenterLink: E.default.getArticleURL(
                    g.HelpdeskArticles.GUILD_HOME
                  ),
                }
              ),
              onChange: M,
              children: (0, a.jsxs)("div", {
                className: N.badgedItem,
                children: [
                  h.default.Messages.USER_SETTINGS_HOME_AUTO_NAV,
                  (0, a.jsx)(c.TextBadge, {
                    text: h.default.Messages.BETA,
                    color: i.default.unsafe_rawColors.BRAND_500.css,
                    className: N.betaTag,
                  }),
                ],
              }),
            }),
          ],
        });
      }
    },
    59574: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return K;
          },
        }),
        s("222007");
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("446674"),
        o = s("151426"),
        d = s("819855"),
        u = s("77078"),
        c = s("452804"),
        S = s("79112"),
        E = s("485328"),
        T = s("180748"),
        f = s("206230"),
        _ = s("951212"),
        m = s("714657"),
        g = s("10641"),
        h = s("692038"),
        N = s("815297"),
        I = s("574073"),
        p = s("291655"),
        C = s("697218"),
        A = s("145131"),
        O = s("476765"),
        x = s("773336"),
        M = s("161778"),
        R = s("168973"),
        D = s("845579"),
        v = s("403338"),
        L = s("449550"),
        P = s("49111"),
        j = s("994428"),
        b = s("894488"),
        U = s("782340"),
        y = s("795797"),
        B = s("890957");
      let F = { COZY: "cozy", COMPACT: "compact" },
        G = (0, O.uid)(),
        k = (0, O.uid)(),
        H = (0, O.uid)(),
        w = "1337",
        V = e => {
          let t = 0;
          return [
            (0, h.createMessageRecord)({
              ...(0, N.default)({
                channelId: w,
                content:
                  U.default.Messages.USER_SETTINGS_APPEARANCE_PREVIEW_MESSAGE_1,
              }),
              state: P.MessageStates.SENT,
              id: "".concat(t++),
            }),
            (0, h.createMessageRecord)({
              ...(0, N.default)({
                channelId: w,
                content: (0, d.isThemeDark)(e)
                  ? U.default.Messages
                      .USER_SETTINGS_APPEARANCE_PREVIEW_MESSAGE_2_DARK
                  : U.default.Messages
                      .USER_SETTINGS_APPEARANCE_PREVIEW_MESSAGE_2_LIGHT,
              }),
              state: P.MessageStates.SENT,
              id: "".concat(t++),
            }),
            (0, h.createMessageRecord)({
              ...(0, N.default)({
                channelId: w,
                content:
                  U.default.Messages.USER_SETTINGS_APPEARANCE_PREVIEW_MESSAGE_3,
              }),
              state: P.MessageStates.SENT,
              id: "".concat(t++),
            }),
            (0, h.createMessageRecord)({
              ...(0, N.default)({
                channelId: w,
                content:
                  U.default.Messages.USER_SETTINGS_APPEARANCE_PREVIEW_MESSAGE_4,
              }),
              state: P.MessageStates.SENT,
              id: "".concat(t++),
            }),
            (0, h.createMessageRecord)({
              ...(0, N.default)({
                channelId: w,
                content:
                  U.default.Messages.USER_SETTINGS_APPEARANCE_PREVIEW_MESSAGE_5,
              }),
              state: P.MessageStates.SENT,
              id: "".concat(t),
            }),
          ];
        };
      class Y extends n.Component {
        renderZoomSlider() {
          return x.isPlatformEmbedded
            ? (0, a.jsxs)(u.FormItem, {
                className: B.marginTop20,
                children: [
                  (0, a.jsx)(u.FormTitle, {
                    id: G,
                    tag: u.FormTitleTags.H5,
                    className: B.marginBottom8,
                    children: U.default.Messages.ACCESSIBILITY_ZOOM_LEVEL_LABEL,
                  }),
                  (0, a.jsx)(u.Slider, {
                    className: i(B.marginTop20, B.marginBottom4),
                    initialValue: this.props.zoom,
                    defaultValue: P.Accessibility.ZOOM_DEFAULT,
                    markers: P.Accessibility.ZOOM_SCALES,
                    stickToMarkers: !0,
                    onValueChange: this.handleZoomChange,
                    onValueRender: this.handleSliderRender,
                    "aria-labelledby": G,
                  }),
                  (0, a.jsx)(u.FormText, {
                    type: u.FormText.Types.DESCRIPTION,
                    children:
                      U.default.Messages.USER_SETTINGS_APPEARANCE_ZOOM_TIP.format(
                        { modKey: E.default.modKey }
                      ),
                  }),
                ],
              })
            : null;
        }
        renderFontScaleSlider() {
          return (0, a.jsxs)(u.FormItem, {
            className: B.marginTop20,
            children: [
              (0, a.jsx)(u.FormTitle, {
                id: k,
                tag: u.FormTitleTags.H5,
                className: B.marginBottom8,
                children: U.default.Messages.ACCESSIBILITY_FONT_SCALING_LABEL,
              }),
              (0, a.jsx)(A.default, {
                align: A.default.Align.CENTER,
                children: (0, a.jsx)(u.Slider, {
                  className: i(B.marginTop20, B.marginBottom4),
                  initialValue: this.props.fontSize,
                  defaultValue: P.Accessibility.FONT_SIZE_DEFAULT,
                  markers: P.Accessibility.FONT_SIZES,
                  stickToMarkers: !0,
                  onValueChange: this.handleFontSizeChange,
                  onValueRender: this.handleSliderRenderPX,
                  onMarkerRender: this.handleSliderRenderPX,
                  getAriaValueText: this.handleSliderValueText,
                  "aria-labelledby": k,
                }),
              }),
            ],
          });
        }
        renderMessageGroupSpacingSlider() {
          let { messageDisplayCompact: e, messageGroupSpacing: t } = this.props;
          return (0, a.jsxs)(u.FormItem, {
            className: B.marginTop20,
            children: [
              (0, a.jsx)(u.FormTitle, {
                id: H,
                tag: u.FormTitleTags.H5,
                className: B.marginBottom8,
                children:
                  U.default.Messages.ACCESSIBILITY_MESSAGE_GROUP_SPACING,
              }),
              (0, a.jsx)(u.Slider, {
                className: i(B.marginTop20, B.marginBottom4),
                initialValue: t,
                defaultValue: e
                  ? b.DEFAULT_COMPACT_SPACING
                  : b.DEFAULT_COZY_SPACING,
                markers: b.MESSAGE_GROUP_SPACING,
                stickToMarkers: !0,
                onValueChange: this.handleMessageSpacingChange,
                onValueRender: this.handleSliderRenderPX,
                onMarkerRender: this.handleSliderRenderPX,
                getAriaValueText: this.handleSliderValueText,
                "aria-labelledby": H,
              }),
            ],
          });
        }
        renderPreview() {
          let {
              messageDisplayCompact: e,
              theme: t,
              messageGroupSpacing: s,
              hideSimpleEmbedContent: n,
            } = this.props,
            l = (0, d.isThemeDark)(t) ? this.darkMessages : this.lightMessages;
          return (0, a.jsx)(u.FocusBlock, {
            children: (0, a.jsx)(u.Card, {
              className: i(
                y.preview,
                B.marginBottom40,
                e ? y.compactPreview : void 0,
                "group-spacing-".concat(
                  null != s
                    ? s
                    : e
                      ? b.DEFAULT_COMPACT_SPACING
                      : b.DEFAULT_COZY_SPACING
                )
              ),
              outline: !0,
              "aria-hidden": !0,
              children: l.map((t, s) =>
                (0, a.jsx)(
                  p.default,
                  {
                    author: (0, I.getMessageAuthor)(t),
                    message: t,
                    compact: e,
                    isGroupStart: s % 2 == 0,
                    className: 0 === s ? y.firstMessage : void 0,
                    hideSimpleEmbedContent: n,
                  },
                  t.id
                )
              ),
            }),
          });
        }
        renderTheme() {
          let {
            theme: e,
            useForcedColors: t,
            darkSidebar: s,
            gradientPreset: n,
          } = this.props;
          return t
            ? (0, a.jsx)(u.FormItem, {
                className: i(B.marginTop8, B.marginBottom40),
                title: (0, a.jsx)("div", {
                  className: y.themeTitle,
                  children: (0, a.jsx)("div", {
                    className: y.title,
                    children: U.default.Messages.THEME,
                  }),
                }),
                children: (0, a.jsx)(u.FormText, {
                  type: u.FormText.Types.DEFAULT,
                  className: y.forcedColorsWarning,
                  children: (0, _.canEnableForcedColors)()
                    ? U.default.Messages.THEME_DISABLED_FOR_CONTRAST_SYNC.format(
                        {
                          onClick: () => {
                            S.default.open(
                              P.UserSettingsSections.ACCESSIBILITY
                            );
                          },
                        }
                      )
                    : U.default.Messages.THEME_DISABLED_FOR_FORCED_COLORS,
                }),
              })
            : (0, a.jsxs)(u.FormItem, {
                className: B.marginTop8,
                title: (0, a.jsxs)("div", {
                  className: y.themeTitle,
                  children: [
                    (0, a.jsx)("div", {
                      className: y.title,
                      children: U.default.Messages.THEME,
                    }),
                    (0, a.jsx)(v.ClientThemesSidebarButton, {}),
                  ],
                }),
                children: [
                  (0, a.jsx)(v.UserSettingsAppearanceClientThemes, {}),
                  (0, a.jsx)(L.UserSettingsAppearanceInAppIcon, {}),
                  (0, a.jsx)(u.FormSwitch, {
                    value: s && (0, d.isThemeLight)(e) && !t,
                    disabled: e !== P.ThemeTypes.LIGHT || t || null != n,
                    onChange: this.handleDarkSidebarChecked,
                    className: B.marginTop20,
                    children: U.default.Messages.ACCESSIBILITY_DARK_SIDEBAR,
                  }),
                ],
              });
        }
        renderDisplayMode() {
          return (0, a.jsxs)(u.FormItem, {
            title: U.default.Messages.MESSAGE_DISPLAY_MODE_LABEL,
            className: B.marginTop8,
            children: [
              (0, a.jsx)(u.RadioGroup, {
                options: [
                  { name: U.default.Messages.COZY_MODE, value: F.COZY },
                  { name: U.default.Messages.COMPACT_MODE, value: F.COMPACT },
                ],
                onChange: this.handleMessageDisplayModeChange,
                value: this.props.messageDisplayCompact ? F.COMPACT : F.COZY,
              }),
              (0, a.jsx)(u.FormSwitch, {
                value:
                  this.props.messageDisplayCompact &&
                  this.props.displayCompactAvatars,
                disabled: !this.props.messageDisplayCompact,
                onChange: this.handleDisplayCompactAvatarsChanged,
                className: B.marginTop20,
                children: U.default.Messages.DISPLAY_COMPACT_AVATARS,
              }),
            ],
          });
        }
        handleDarkSidebarChecked() {
          (0, T.toggleDarkSidebar)();
        }
        renderScalingAndSpacing() {
          return (0, a.jsxs)(a.Fragment, {
            children: [
              this.renderFontScaleSlider(),
              this.renderMessageGroupSpacingSlider(),
              this.renderZoomSlider(),
              (0, a.jsx)(u.FormDivider, { className: B.marginTop20 }),
            ],
          });
        }
        render() {
          return (0, a.jsxs)(u.FormSection, {
            tag: u.FormTitleTags.H1,
            title: U.default.Messages.APPEARANCE,
            children: [
              this.renderPreview(),
              this.renderTheme(),
              this.renderDisplayMode(),
              this.renderScalingAndSpacing(),
              (0, a.jsx)(u.Text, {
                variant: "text-md/normal",
                className: B.marginTop20,
                children:
                  U.default.Messages.APPEARANCE_SETTINGS_ACCESSIBILITY_LINK.format(
                    {
                      onAccessibilityClick() {
                        S.default.open(P.UserSettingsSections.ACCESSIBILITY);
                      },
                    }
                  ),
              }),
            ],
          });
        }
        handleSliderRender(e) {
          return "".concat(e.toFixed(0), "%");
        }
        handleSliderRenderPX(e) {
          return "".concat(e.toFixed(0), "px");
        }
        handleSliderValueText(e) {
          return U.default.Messages.PIXEL_VALUE_A11Y_TEXT.format({ value: e });
        }
        handleFontSizeChange(e) {
          (0, T.setFontSize)(e);
        }
        handleMessageSpacingChange(e) {
          switch (e) {
            case 0:
            case 4:
            case 8:
            case 16:
            case 24:
              (0, T.setMessageGroupSpacing)(e);
          }
        }
        handleZoomChange(e) {
          (0, T.setZoom)(e);
        }
        constructor(...e) {
          super(...e),
            (this.darkMessages = V(P.ThemeTypes.DARK)),
            (this.lightMessages = V(P.ThemeTypes.LIGHT)),
            (this.handleDisplayCompactAvatarsChanged = e => {
              c.default.updatedUnsyncedSettings({ displayCompactAvatars: e });
            }),
            (this.handleMessageDisplayModeChange = e => {
              let { value: t } = e;
              D.MessageDisplayCompact.updateSetting(t === F.COMPACT),
                (0, T.setMessageGroupSpacing)();
            });
        }
      }
      function K() {
        let e = D.MessageDisplayCompact.useSetting(),
          t = D.InlineEmbedMedia.useSetting(),
          s = D.RenderEmbeds.useSetting(),
          l = D.ClientThemeSettings.useSetting();
        n.useEffect(() => {
          (0, g.markDismissibleContentAsDismissed)(
            o.DismissibleContent.CLIENT_THEMES_SETTINGS_BADGE,
            { dismissAction: j.ContentDismissActionType.AUTO, forceTrack: !0 }
          ),
            (0, g.markDismissibleContentAsDismissed)(
              o.DismissibleContent.DEKSTOP_CUSTOM_APP_ICON_BADGE,
              { dismissAction: j.ContentDismissActionType.AUTO, forceTrack: !0 }
            ),
            (0, g.markDismissibleContentAsDismissed)(
              o.DismissibleContent.DEKSTOP_CUSTOM_APP_ICON_COACHMARK,
              { dismissAction: j.ContentDismissActionType.AUTO, forceTrack: !0 }
            );
        }, []);
        let i = (0, r.useStateFromStoresObject)(
          [M.default, R.default, f.default, C.default, m.default],
          () => {
            var e, t;
            return {
              theme: M.default.theme,
              useForcedColors: f.default.useForcedColors,
              useSystemTheme: R.default.useSystemTheme,
              darkSidebar: M.default.darkSidebar,
              fontSize: f.default.fontSize,
              zoom: f.default.zoom,
              messageGroupSpacing: f.default.messageGroupSpacing,
              displayCompactAvatars: R.default.displayCompactAvatars,
              isStaff:
                null !==
                  (t =
                    null === (e = C.default.getCurrentUser()) || void 0 === e
                      ? void 0
                      : e.isStaff) &&
                void 0 !== t &&
                t,
              gradientPreset: m.default.gradientPreset,
            };
          }
        );
        return (0, a.jsx)(Y, {
          messageDisplayCompact: e,
          hideSimpleEmbedContent: t && s,
          clientTheme: l,
          ...i,
        });
      }
    },
    403338: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          UserSettingsAppearanceClientThemes: function () {
            return R;
          },
          ClientThemesSidebarButton: function () {
            return D;
          },
        });
      var a = s("37983"),
        n = s("884691"),
        l = s("446674"),
        i = s("151426"),
        r = s("77078"),
        o = s("54239"),
        d = s("812204"),
        u = s("685665"),
        c = s("32531"),
        S = s("714657"),
        E = s("648114"),
        T = s("10641"),
        f = s("154889"),
        _ = s("917247"),
        m = s("956597"),
        g = s("635956"),
        h = s("632892"),
        N = s("599110"),
        I = s("49111"),
        p = s("994428"),
        C = s("646718"),
        A = s("782340"),
        O = s("654261"),
        x = s("890957");
      let M = () => {
          (0, T.markDismissibleContentAsDismissed)(
            i.DismissibleContent.CLIENT_THEMES_SPARKLE_PREVIEW,
            {
              dismissAction: p.ContentDismissActionType.PRIMARY,
              forceTrack: !0,
            }
          ),
            (0, c.openEditor)(),
            (0, o.popLayer)();
        },
        R = () => {
          var e, t;
          let { analyticsLocations: s } = (0, u.default)(
              d.default.USER_SETTINGS
            ),
            i = (0, l.useStateFromStores)(
              [S.default],
              () => S.default.isPreview
            ),
            o =
              (null === (t = (0, _.usePremiumTrialOffer)()) || void 0 === t
                ? void 0
                : null === (e = t.subscription_trial) || void 0 === e
                  ? void 0
                  : e.sku_id) === C.PremiumSubscriptionSKUs.TIER_2,
            c = (0, f.usePremiumDiscountOffer)(),
            T = (0, f.discountOfferHasTier)(
              c,
              C.PremiumSubscriptionSKUs.TIER_2
            );
          return (
            n.useEffect(() => {
              i &&
                N.default.track(I.AnalyticEvents.PREMIUM_UPSELL_VIEWED, {
                  type: C.PremiumUpsellTypes.PREMIUM_CLIENT_THEME_TRY_IT_OUT,
                  location_stack: s,
                });
            }, [i, s]),
            (0, a.jsxs)("div", {
              children: [
                (0, a.jsxs)(E.default, {
                  type: E.ThemeSelectionGroupType.SETTINGS,
                  children: [
                    (0, a.jsx)(E.default.Basic, {
                      className: O.basicThemeSelectors,
                    }),
                    (0, a.jsxs)(h.default, {
                      className: O.featureBorder,
                      isShown: i,
                      type: h.FeatureBorderTypes.PREMIUM,
                      children: [
                        (0, a.jsx)(E.default.Gradient, {
                          disabled: i,
                          renderCTAButtons: () =>
                            !i || o
                              ? null
                              : (0, a.jsxs)("div", {
                                  className: O.tryItOutButtons,
                                  children: [
                                    (0, a.jsx)(r.Button, {
                                      color: r.Button.Colors.PRIMARY,
                                      onClick: () => M(),
                                      children:
                                        A.default.Messages
                                          .USER_SETTINGS_APPEARANCE_PREVIEW_THEME_TITLE,
                                    }),
                                    (0, a.jsx)(g.default, {
                                      subscriptionTier:
                                        C.PremiumSubscriptionSKUs.TIER_2,
                                      buttonText: T
                                        ? A.default.Messages.PREMIUM_DISCOUNT_CTA.format(
                                            {
                                              percent:
                                                null == c
                                                  ? void 0
                                                  : c.discount.amount,
                                            }
                                          )
                                        : A.default.Messages
                                            .USER_SETTINGS_CUSTOMIZATION_UPSELL,
                                      className: O.premiumCta,
                                    }),
                                  ],
                                }),
                        }),
                        o &&
                          i &&
                          (0, a.jsxs)("div", {
                            children: [
                              (0, a.jsx)(r.Button, {
                                className: O.previewThemeButtonWide,
                                color: r.Button.Colors.PRIMARY,
                                onClick: () => M(),
                                children:
                                  A.default.Messages
                                    .USER_SETTINGS_APPEARANCE_PREVIEW_THEME_TITLE,
                              }),
                              (0, a.jsx)("div", {
                                className: O.premiumTier2Divider,
                              }),
                              (0, a.jsx)(m.default, {
                                type: C.PremiumUpsellTypes
                                  .PREMIUM_CLIENT_THEME_SETTINGS_UPSELL,
                                subscriptionTier:
                                  C.PremiumSubscriptionSKUs.TIER_2,
                              }),
                            ],
                          }),
                      ],
                    }),
                  ],
                }),
                (0, a.jsx)(r.FormDivider, { className: x.marginTop20 }),
              ],
            })
          );
        },
        D = () => {
          let e = (0, l.useStateFromStores)(
            [S.default],
            () => S.default.isPreview
          );
          return e
            ? null
            : (0, a.jsx)(r.Button, {
                size: r.ButtonSizes.SMALL,
                onClick: () => M(),
                children:
                  A.default.Messages
                    .USER_SETTINGS_APPEARANCE_PREVIEW_THEMES_TITLE,
              });
        };
    },
    449550: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          UserSettingsAppearanceInAppIcon: function () {
            return I;
          },
        });
      var a = s("37983"),
        n = s("884691"),
        l = s("446674"),
        i = s("77078"),
        r = s("913144"),
        o = s("54239"),
        d = s("812204"),
        u = s("685665"),
        c = s("805199"),
        S = s("433724"),
        E = s("635956"),
        T = s("599110"),
        f = s("49111"),
        _ = s("646718"),
        m = s("782340"),
        g = s("307046"),
        h = s("890957");
      let N = () => {
          r.default.dispatch({ type: "APP_ICON_EDITOR_OPEN" }),
            (0, o.popLayer)();
        },
        I = () => {
          let { analyticsLocations: e } = (0, u.default)(
              d.default.USER_SETTINGS
            ),
            t = (0, l.useStateFromStores)(
              [c.default],
              () => c.default.isUpsellPreview
            );
          return (
            n.useEffect(() => {
              t &&
                T.default.track(f.AnalyticEvents.PREMIUM_UPSELL_VIEWED, {
                  type: _.PremiumUpsellTypes.APP_ICON_UPSELL,
                  location_stack: e,
                });
            }, []),
            (0, a.jsxs)("div", {
              className: g.selectionGroup,
              children: [
                (0, a.jsx)(S.default, {
                  disabled: t,
                  renderCTAButtons: () =>
                    (0, a.jsxs)("div", {
                      className: g.tryItOutButtons,
                      children: [
                        (0, a.jsx)(i.Button, {
                          color: t
                            ? i.Button.Colors.PRIMARY
                            : i.Button.Colors.BRAND,
                          onClick: () => N(),
                          children: m.default.Messages.APP_ICON_PREVIEW_TITLE,
                        }),
                        t
                          ? (0, a.jsx)(E.default, {
                              subscriptionTier:
                                _.PremiumSubscriptionSKUs.TIER_2,
                              buttonText:
                                m.default.Messages
                                  .USER_SETTINGS_CUSTOMIZATION_UPSELL,
                            })
                          : null,
                      ],
                    }),
                }),
                (0, a.jsx)(i.FormDivider, { className: h.marginTop20 }),
              ],
            })
          );
        };
    },
    602806: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return y;
          },
        }),
        s("424973"),
        s("222007");
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("448105"),
        o = s.n(r),
        d = s("446674"),
        u = s("77078"),
        c = s("776466"),
        S = s("79112"),
        E = s("642950"),
        T = s("135230"),
        f = s("550766"),
        _ = s("191225"),
        m = s("29479"),
        g = s("250404"),
        h = s("102985"),
        N = s("941886"),
        I = s("145131"),
        p = s("810567"),
        C = s("266926"),
        A = s("315102"),
        O = s("161778"),
        x = s("101787"),
        M = s("216503"),
        R = s("49111"),
        D = s("843455"),
        v = s("782340"),
        L = s("660747"),
        P = s("890957");
      let j = d.default.connectStores([O.default], () => ({
        theme: O.default.theme,
      }))(N.default);
      function b(e) {
        let { application: t } = e;
        return (0, a.jsxs)("div", {
          className: L.twoWayWarning,
          children: [
            (0, a.jsx)(C.default, { className: L.twoWayWarningIcon }),
            (0, a.jsx)(u.Text, {
              color: "text-normal",
              variant: "text-sm/medium",
              children:
                v.default.Messages.AUTHORIZED_APP_IS_CONNECTED_ACCOUNT.format({
                  applicationName: t.name,
                  onConnectionPress: () =>
                    S.default.setSection(
                      R.AnalyticsSections.SETTINGS_CONNECTIONS
                    ),
                }),
            }),
          ],
        });
      }
      let U = e => {
        let { scopes: t, application: s, onDelete: n } = e,
          l = () => {
            let e = v.default.Messages.DELETE_APP_CONFIRM_MSG;
            return (
              (0, x.default)(s.id) &&
                (e = (0, a.jsxs)(a.Fragment, {
                  children: [
                    e,
                    (0, a.jsx)(M.default, {
                      className: L.infoBox,
                      children:
                        v.default.Messages.AUTHORIZED_APP_IS_CONNECTED_ACCOUNT_DISCONNECT_WARNING.format(
                          { applicationName: s.name }
                        ),
                    }),
                  ],
                })),
              (0, u.openModal)(t =>
                (0, a.jsx)(T.default, {
                  title: v.default.Messages.DEAUTHORIZE_APP,
                  body: e,
                  confirmText: v.default.Messages.DEAUTHORIZE,
                  cancelText: v.default.Messages.CANCEL,
                  onConfirm: n,
                  ...t,
                })
              )
            );
          },
          r = (0, x.useShouldWarnAuthorizedAppTwoWay)(s.id);
        return (0, a.jsx)(u.Card, {
          className: i(L.authedApp, P.marginBottom8),
          outline: !0,
          children: (0, a.jsxs)(u.HeadingLevel, {
            component: (() => {
              let e = A.default.getApplicationIconURL({
                  id: s.id,
                  icon: s.icon,
                }),
                t =
                  null != e
                    ? (0, a.jsx)(I.default.Child, {
                        className: L.appAvatar,
                        grow: 0,
                        children: (0, a.jsx)("img", { src: e, alt: "" }),
                      })
                    : null;
              return (0, a.jsxs)(I.default, {
                className: i(L.header, P.marginBottom20),
                children: [
                  (0, a.jsxs)(I.default, {
                    className: L.headerInfo,
                    children: [
                      t,
                      (0, a.jsx)(I.default.Child, {
                        children: (0, a.jsx)(u.Heading, {
                          variant: "text-sm/semibold",
                          children: s.name,
                        }),
                      }),
                    ],
                  }),
                  (0, a.jsx)(I.default.Child, {
                    wrap: !0,
                    grow: 0,
                    children: (0, a.jsx)(u.Button, {
                      className: L.deleteApp,
                      color: u.ButtonColors.RED,
                      look: u.ButtonLooks.OUTLINED,
                      size: u.ButtonSizes.SMALL,
                      onClick: l,
                      children: v.default.Messages.DEAUTHORIZE,
                    }),
                  }),
                ],
              });
            })(),
            children: [
              (() => {
                if (null != s.description && "" !== s.description)
                  return (0, a.jsx)(u.FormItem, {
                    faded: !0,
                    title: v.default.Messages.ABOUT_THIS_APP,
                    children: (0, a.jsx)(u.FormText, {
                      children: s.description,
                    }),
                  });
              })(),
              (() => {
                let e = [];
                for (let s of t)
                  e.push((0, m.getScopeName)(s, t)),
                    s === D.OAuth2Scopes.APPLICATIONS_COMMANDS &&
                      e.push(v.default.Messages.SCOPE_DM_YOU);
                if (e.length > 0)
                  return (0, a.jsx)(u.FormItem, {
                    faded: !0,
                    title: v.default.Messages.PERMISSIONS,
                    className: P.marginTop20,
                    children: (0, a.jsx)("ul", {
                      children: e.map((e, t) =>
                        (0, a.jsxs)(
                          "li",
                          {
                            className: i(L.permission, P.marginTop8),
                            children: [
                              (0, a.jsx)("i", {
                                className: L.permissionCheckmark,
                              }),
                              (0, a.jsx)(u.FormText, { children: e }),
                            ],
                          },
                          t
                        )
                      ),
                    }),
                  });
              })(),
              r && (0, a.jsx)(b, { application: s }),
            ],
          }),
        });
      };
      var y = () => {
        let e = (0, d.useStateFromStores)(
            [h.default],
            () => h.default.hidePersonalInformation
          ),
          t = (0, d.useStateFromStores)([g.default], () => g.default.getApps()),
          l = (0, d.useStateFromStores)([_.default], () =>
            _.default.getSelfEmbeddedActivities()
          );
        n.useEffect(() => {
          c.default.fetch();
        }, []);
        let i = e => {
            let { id: t, application: s } = e;
            c.default.delete(t);
            let a = l.get(s.id);
            null != a &&
              (0, f.stopEmbeddedActivity)({
                channelId: a.channelId,
                applicationId: s.id,
              });
          },
          [r, S] = n.useState(""),
          T = e => {
            S(e);
          },
          m = () => {
            S("");
          },
          I = () =>
            (0, a.jsx)("div", {
              className: L.searchContainer,
              children: (0, a.jsx)(p.default, {
                size: p.default.Sizes.MEDIUM,
                query: r,
                onChange: T,
                onClear: m,
                placeholder: v.default.Messages.INTEGRATIONS_SEARCH,
                "aria-label": v.default.Messages.INTEGRATIONS_SEARCH,
              }),
            }),
          C = (e, t) =>
            (0, a.jsxs)(j, {
              className: L.marginTop20,
              children: [
                (0, a.jsx)(N.EmptyStateImage, {
                  darkSrc: s("541956"),
                  lightSrc: s("301037"),
                  width: 380,
                  height: 282,
                }),
                (0, a.jsx)(N.EmptyStateText, { note: e, children: t }),
              ],
            }),
          A = n.useMemo(() => {
            let e = r.trim().toLowerCase();
            return "" === e || null == t
              ? t
              : t.length < 100
                ? t.filter(t => o(e, t.application.name.toLowerCase()))
                : t.filter(t => t.application.name.toLowerCase().includes(e));
          }, [t, r]);
        return e
          ? (0, a.jsx)(E.default, {})
          : (0, a.jsx)(u.FormSection, {
              tag: u.FormTitleTags.H1,
              title: v.default.Messages.AUTHORIZED_APPS,
              children: (0, a.jsx)(u.HeadingLevel, {
                component: (0, a.jsx)(u.FormNotice, {
                  className: P.marginBottom40,
                  type: u.CardTypes.PRIMARY,
                  title: v.default.Messages.APPLICATIONS_AND_CONNECTIONS,
                  body: v.default.Messages.APPLICATIONS_AND_CONNECTIONS_BODY,
                }),
                children:
                  null == t || null == A
                    ? (0, a.jsx)(u.Spinner, {
                        className: P.marginTop20,
                        type: u.Spinner.Type.SPINNING_CIRCLE,
                      })
                    : 0 === t.length
                      ? C(
                          v.default.Messages.NO_AUTHORIZED_APPS_NOTE,
                          v.default.Messages.NO_AUTHORIZED_APPS
                        )
                      : 0 === A.length
                        ? (0, a.jsxs)(a.Fragment, {
                            children: [
                              I(),
                              C(
                                null,
                                v.default.Messages.INTEGRATIONS_SEARCH_NO_MATCH
                              ),
                            ],
                          })
                        : (0, a.jsxs)(a.Fragment, {
                            children: [
                              I(),
                              A.sort((e, t) =>
                                e.application.name.localeCompare(
                                  t.application.name
                                )
                              ).map(e =>
                                (0, a.jsx)(
                                  U,
                                  { onDelete: () => i(e), ...e },
                                  e.id
                                )
                              ),
                            ],
                          }),
              }),
            });
      };
    },
    462506: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return x;
          },
        });
      var a = s("37983"),
        n = s("884691"),
        l = s("627445"),
        i = s.n(l),
        r = s("446674"),
        o = s("77078"),
        d = s("913144"),
        u = s("850068"),
        c = s("79112"),
        S = s("642950"),
        E = s("404515"),
        T = s("87641"),
        f = s("245187"),
        _ = s("102985"),
        m = s("697218"),
        g = s("160299"),
        h = s("357957"),
        N = s("521012"),
        I = s("915639"),
        p = s("49111"),
        C = s("782340"),
        A = s("60638");
      class O extends n.PureComponent {
        componentDidMount() {
          d.default.wait(() => {
            u.fetchPaymentSources(), u.fetchSubscriptions();
          });
        }
        handleRedemptionRedirect() {
          c.default.setSection(p.UserSettingsSections.INVENTORY);
        }
        render() {
          let {
            syncing: e,
            hide: t,
            paymentSources: s,
            defaultPaymentSourceId: n,
            locale: l,
            premiumSubscription: i,
            isRemovingPaymentSource: r,
            isUpdatingPaymentSource: d,
          } = this.props;
          return t
            ? (0, a.jsx)(S.default, {})
            : (0, a.jsxs)("div", {
                className: A.userSettingsBilling,
                children: [
                  e && 0 === Object.keys(s).length
                    ? (0, a.jsx)("div", {
                        className: A.syncing,
                        children: (0, a.jsx)(o.Spinner, {}),
                      })
                    : (0, a.jsx)(T.default, {
                        paymentSources: s,
                        defaultPaymentSourceId: n,
                        premiumSubscriptionPaymentSourceId:
                          null != i &&
                          i.status !== p.SubscriptionStatusTypes.CANCELED
                            ? i.paymentSourceId
                            : null,
                        locale: l,
                        removing: r,
                        submitting: d,
                      }),
                  (0, a.jsx)("div", {
                    className: A.paymentHistory,
                    children: (0, a.jsxs)(o.HeadingLevel, {
                      component: (0, a.jsx)(o.FormTitle, {
                        tag: "h1",
                        children: C.default.Messages.BILLING_PAYMENT_HISTORY,
                      }),
                      children: [
                        (0, a.jsx)(f.BlockedPaymentsWarning, {}),
                        (0, a.jsx)(E.default, { locale: l }),
                      ],
                    }),
                  }),
                  (0, a.jsx)(o.Card, {
                    className: A.codeRedemptionRedirect,
                    type: o.Card.Types.CUSTOM,
                    children:
                      C.default.Messages.BILLING_CODE_REDEMPTION_REDIRECT.format(
                        { onClick: this.handleRedemptionRedirect }
                      ),
                  }),
                ],
              });
        }
      }
      function x() {
        let e = (0, r.useStateFromStoresObject)(
          [I.default, g.default, h.default, m.default, _.default, N.default],
          () => {
            let e = N.default.getPremiumTypeSubscription(),
              t = m.default.getCurrentUser();
            return (
              i(
                null != t,
                "UserSettingsBilling: currentUser cannot be undefined"
              ),
              {
                locale: I.default.locale,
                hide: _.default.enabled,
                isClaimed: t.isClaimed(),
                isVerified: t.verified,
                premiumSubscription: e,
                defaultPaymentSourceId: h.default.defaultPaymentSourceId,
                paymentSources: h.default.paymentSources,
                syncing: g.default.isSyncing,
                isRemovingPaymentSource: g.default.isRemovingPaymentSource,
                isUpdatingPaymentSource: g.default.isUpdatingPaymentSource,
              }
            );
          }
        );
        return (0, a.jsx)(O, { ...e });
      }
    },
    500517: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return $;
          },
        }),
        s("222007"),
        s("424973"),
        s("506083");
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("446674"),
        o = s("151426"),
        d = s("669491"),
        u = s("819855"),
        c = s("77078"),
        S = s("913144"),
        E = s("619340"),
        T = s("642950"),
        f = s("264044"),
        _ = s("135230"),
        m = s("841098"),
        g = s("376556"),
        h = s("572943"),
        N = s("535013"),
        I = s("816499"),
        p = s("926994"),
        C = s("10641"),
        A = s("47319"),
        O = s("305961"),
        x = s("677099"),
        M = s("102985"),
        R = s("941886"),
        D = s("931138"),
        v = s("476263"),
        L = s("945330"),
        P = s("772280"),
        j = s("486952"),
        b = s("956089"),
        U = s("599110"),
        y = s("701909"),
        B = s("915639"),
        F = s("333562"),
        G = s("216503"),
        k = s("187451"),
        H = s("470781"),
        w = s("49111"),
        V = s("214509"),
        Y = s("994428"),
        K = s("782340"),
        W = s("652827"),
        z = s("890957");
      let Q = e => {
        var t, s;
        let n,
          { integration: l } = e,
          {
            isJoining: i,
            joinErrorMessage: o,
            showJoinErrorMessage: d,
          } = (0, r.useStateFromStoresObject)(
            [A.default],
            () => ({
              isJoining: A.default.isJoining(l.id),
              joinErrorMessage:
                "" === A.default.joinErrorMessage(l.id)
                  ? K.default.Messages.ERROR
                  : A.default.joinErrorMessage(l.id),
              showJoinErrorMessage: void 0 !== A.default.joinErrorMessage(l.id),
            }),
            [l.id]
          ),
          u =
            null !=
            (0, r.useStateFromStores)(
              [O.default],
              () => O.default.getGuild(l.guild.id),
              [l.guild.id]
            );
        return (
          !u &&
            (n = (0, a.jsx)(c.Button, {
              size: c.ButtonSizes.SMALL,
              onClick: function () {
                E.default.joinServer(l.id, () => {});
              },
              disabled: i,
              children: (0, a.jsx)("span", {
                children: i
                  ? K.default.Messages.JOINING_GUILD
                  : K.default.Messages.JOIN_GUILD,
              }),
            })),
          (0, a.jsxs)("div", {
            className: W.integrationWrapper,
            children: [
              (0, a.jsxs)("div", {
                className: W.integration,
                children: [
                  (0, a.jsx)(v.default, {
                    size: v.default.Sizes.SMALL,
                    guild: l.guild,
                    className: W.guildIcon,
                  }),
                  (0, a.jsxs)("div", {
                    className: W.integrationInner,
                    children: [
                      (0, a.jsx)(c.Text, {
                        variant: "text-md/semibold",
                        color: "header-primary",
                        children: l.guild.toString(),
                      }),
                      (0, a.jsx)(c.Anchor, {
                        href:
                          null === (s = g.default.get(l.type)) || void 0 === s
                            ? void 0
                            : null === (t = s.getPlatformUserUrl) ||
                                void 0 === t
                              ? void 0
                              : t.call(s, l.account),
                        children: (0, a.jsx)(c.Text, {
                          variant: "text-xs/normal",
                          color: "header-secondary",
                          children: l.account.name,
                        }),
                      }),
                    ],
                  }),
                  n,
                ],
              }),
              d &&
                (0, a.jsx)(c.Text, {
                  variant: "text-xs/normal",
                  color: "text-danger",
                  className: W.integrationError,
                  children: o,
                }),
            ],
          })
        );
      };
      function X(e) {
        var t, s, l;
        let i,
          r,
          o,
          { onDisconnect: S, account: T, theme: f, locale: m } = e,
          [C, A] = n.useState(T.friendSync),
          [O, x] = n.useState(T.visibility),
          [M, R] = n.useState(T.metadataVisibility),
          [v, P] = n.useState(T.showActivity),
          [U, B] = n.useState(null),
          [Y, z] = n.useState(null),
          [X, q] = n.useState(!1),
          [Z, J] = n.useState([]),
          $ = (0, h.useLegacyPlatformType)(T.type),
          ee = g.default.get($);
        n.useEffect(() => {
          A(T.friendSync),
            x(T.visibility),
            R(T.metadataVisibility),
            P(T.showActivity);
        }, [T]),
          n.useEffect(() => {
            !1 !== T.verified &&
              (null != U &&
                (x(U), E.default.setVisibility(T.type, T.id, U), B(null)),
              null != Y &&
                (R(Y),
                E.default.setMetadataVisibility(T.type, T.id, Y),
                z(null)));
          }, [T]);
        function et() {
          (0, p.default)(T.type, "User Settings");
        }
        function es() {
          let e = g.default.get(T.type),
            t = K.default.Messages.DISCONNECT_ACCOUNT_BODY;
          (0, F.default)(T) &&
            (t = (0, a.jsxs)(a.Fragment, {
              children: [
                t,
                (0, a.jsx)(G.default, {
                  className: W.infoBox,
                  children:
                    K.default.Messages.CONNECTED_ACCOUNT_IS_AUTHORIZED_APP_DISCONNECT_WARNING.format(
                      { platformName: e.name }
                    ),
                }),
              ],
            })),
            (0, c.openModal)(s =>
              (0, a.jsx)(_.default, {
                title: K.default.Messages.DISCONNECT_ACCOUNT_TITLE.format({
                  name: e.name,
                }),
                body: t,
                confirmText: K.default.Messages.DISCONNECT_ACCOUNT,
                cancelText: K.default.Messages.CANCEL,
                onConfirm: S,
                ...s,
              })
            );
        }
        function ea(e) {
          let { verified: t } = T,
            s = e ? 1 : 0;
          if (e && !t) {
            B(s), (0, p.default)(T.type, "User Settings");
            return;
          }
          x(s), E.default.setVisibility(T.type, T.id, s);
        }
        function en(e) {
          let { verified: t } = T,
            s = e ? 1 : 0;
          if (e && !t) {
            z(s), (0, p.default)(T.type, "User Settings");
            return;
          }
          R(s), E.default.setMetadataVisibility(T.type, T.id, s);
        }
        function el(e) {
          A(e), E.default.setFriendSync(T.type, T.id, e);
        }
        function ei(e) {
          P(e), E.default.setShowActivity(T.type, T.id, e);
        }
        return (0, a.jsxs)("div", {
          className: W.connection,
          children: [
            (function (e) {
              var t;
              let s = g.default.get(e.type),
                n = g.default.get($),
                l = null !== (t = e.metadata) && void 0 !== t ? t : {},
                i = "1" === l[V.MetadataFields.TWITTER_VERIFIED],
                r = null;
              return (
                s.type === w.PlatformTypes.TWITTER &&
                  i &&
                  (r = (0, a.jsx)(c.Tooltip, {
                    text: K.default.Messages.CONNECTION_VERIFIED_ON_TWITTER,
                    children: e =>
                      (0, a.jsx)(D.default, {
                        ...e,
                        className: W.connectionAccountLabelVerified,
                        color: d.default.unsafe_rawColors.TWITTER.css,
                        children: (0, a.jsx)(j.default, {
                          color: d.default.unsafe_rawColors.WHITE_500.css,
                        }),
                      }),
                  })),
                (0, a.jsxs)("div", {
                  className: W.connectionHeader,
                  children: [
                    (0, a.jsx)("img", {
                      alt: n.name,
                      className: W.connectionIcon,
                      src: (0, u.isThemeDark)(f)
                        ? n.icon.darkSVG
                        : n.icon.lightSVG,
                    }),
                    (0, a.jsxs)("div", {
                      children: [
                        (0, a.jsx)(c.Text, {
                          color: "header-primary",
                          variant: "text-md/semibold",
                          className: W.connectionAccountValue,
                          children: (0, a.jsxs)("div", {
                            className: W.connectionAccountLabelContainer,
                            children: [e.name, r],
                          }),
                        }),
                        (0, a.jsx)(c.Text, {
                          variant: "text-xs/normal",
                          color: "header-secondary",
                          className: W.connectionAccountLabel,
                          children: n.name,
                        }),
                      ],
                    }),
                    (0, a.jsx)(c.Clickable, {
                      className: W.connectionDelete,
                      onClick: es,
                      "aria-label":
                        K.default.Messages.SERVICE_CONNECTIONS_DISCONNECT,
                      focusProps: { offset: { top: -4, left: -4, right: -4 } },
                      children: (0, a.jsx)(L.default, {
                        width: 16,
                        height: 16,
                      }),
                    }),
                  ],
                })
              );
            })(T),
            (t = T).twoWayLink
              ? null
              : t.type === w.PlatformTypes.XBOX
                ? (0, a.jsx)("div", {
                    className: W.upsellWrapper,
                    children: (0, a.jsx)(H.XboxTwoWayLinkUpsell, {}),
                  })
                : t.type === w.PlatformTypes.PLAYSTATION
                  ? (0, a.jsx)("div", {
                      className: W.upsellWrapper,
                      children: (0, a.jsx)(k.PlayStationTwoWayLinkUpsell, {}),
                    })
                  : null,
            (function (e) {
              var t;
              let s = null !== (t = e.metadata) && void 0 !== t ? t : {},
                n = null,
                l = (0, N.getCreatedAtDate)(s[V.MetadataFields.CREATED_AT], m);
              switch (e.type) {
                case w.PlatformTypes.REDDIT:
                  n = (0, I.generateRedditMetadataItems)(s, W.metadataItem);
                  break;
                case w.PlatformTypes.STEAM:
                  n = (0, I.generateSteamMetadataItems)(s, W.metadataItem);
                  break;
                case w.PlatformTypes.TWITTER:
                  n = (0, I.generateTwitterMetadataItems)(s, W.metadataItem);
                  break;
                case w.PlatformTypes.EBAY:
                  n = (0, I.generateEbayMetadataItems)(s, W.metadataItem);
                  break;
                case w.PlatformTypes.PAYPAL:
                  n = (0, I.generatePaypalMetadataItems)(s, W.metadataItem);
                  break;
                case w.PlatformTypes.TIKTOK:
                  n = (0, I.generateTikTokMetadataItems)(s, W.metadataItem);
              }
              null !== l &&
                (null == n && (n = []),
                null == n ||
                  n.push(
                    (0, a.jsx)(
                      c.Text,
                      {
                        variant: "text-xs/normal",
                        color: "interactive-active",
                        className: W.connectedAccountVanityMetadataCreatedAt,
                        children:
                          K.default.Messages.CONNECTIONS_PROFILE_MEMBER_SINCE.format(
                            { date: l }
                          ),
                      },
                      "member-since"
                    )
                  ));
              let i = Z.includes(e.id),
                r = K.default.Messages.REFRESH;
              if (null == n || 0 === n.length) {
                if (!0 !== g.default.get(e.type).hasMetadata) return null;
                (n = [
                  (0, a.jsx)(
                    b.TextBadge,
                    {
                      className: W.connectionMetadataUpsellTag,
                      text: K.default.Messages.NEW,
                    },
                    "badge"
                  ),
                  (0, a.jsx)(
                    c.Text,
                    {
                      variant: "text-xs/normal",
                      className: W.connectionMetadataUpsellDescription,
                      children:
                        K.default.Messages.CONNECTED_ACCOUNT_ADD_DETAILS_DESCRIPTION.format(
                          {
                            helpdeskUrl: y.default.getArticleURL(
                              w.HelpdeskArticles.CONNECTION_DETAILS
                            ),
                          }
                        ),
                    },
                    "label"
                  ),
                ]),
                  (r = K.default.Messages.CONNECTED_ACCOUNT_ADD_DETAILS);
              }
              return (
                i && (r = K.default.Messages.DONE),
                n.push(
                  (0, a.jsx)(
                    c.Button,
                    {
                      className: W.metadataRefreshButton,
                      color: i ? c.Button.Colors.GREEN : c.Button.Colors.BRAND,
                      size: c.Button.Sizes.SMALL,
                      submitting: X,
                      disabled: i,
                      onClick: i
                        ? void 0
                        : () => {
                            q(!0),
                              E.default.refresh(e.type, e.id).finally(() => {
                                setTimeout(() => {
                                  Z.push(e.id), J(Z), q(!1);
                                }, 2e3);
                              });
                          },
                      children: r,
                    },
                    "refresh-button"
                  )
                ),
                (0, a.jsx)("div", {
                  className: W.metadataContainer,
                  children: n,
                })
              );
            })(T),
            ((s = ee),
            w.FRIEND_SYNC_PLATFORM_TYPES.has(T.type) &&
              (i = (0, a.jsx)(c.FormSwitch, {
                className: W.connectionOptionSwitch,
                hideBorder: !0,
                value: C,
                onChange: el,
                children: (0, a.jsx)(c.Text, {
                  variant: "text-sm/semibold",
                  children: K.default.Messages.SYNC_FRIENDS,
                }),
              })),
            w.ACTIVITY_PLATFORM_TYPES.has(T.type) &&
              (r = (0, a.jsx)(c.FormSwitch, {
                className: W.connectionOptionSwitch,
                hideBorder: !0,
                value: v,
                onChange: ei,
                children: (0, a.jsx)(c.Text, {
                  variant: "text-sm/semibold",
                  children: K.default.Messages.DISPLAY_ACTIVITY.format({
                    platform: s.name,
                  }),
                }),
              })),
            (null === (l = g.default.get(T.type)) || void 0 === l
              ? void 0
              : l.hasMetadata) === !0 &&
              (o = (0, a.jsx)(c.FormSwitch, {
                className: W.connectionOptionSwitch,
                hideBorder: !0,
                value: 1 === M,
                onChange: en,
                disabled: 1 !== O || null == T.metadata,
                children: (0, a.jsx)(c.Text, {
                  variant: "text-sm/semibold",
                  children: K.default.Messages.DISPLAY_DETAILS_ON_PROFILE,
                }),
              })),
            (0, a.jsx)("div", {
              className: W.connectionOptionsWrapper,
              children: (0, a.jsxs)("div", {
                className: W.connectionOptions,
                children: [
                  (0, a.jsx)(c.FormSwitch, {
                    className: W.connectionOptionSwitch,
                    hideBorder: !0,
                    value: 1 === O,
                    onChange: ea,
                    children: (0, a.jsx)(c.Text, {
                      variant: "text-sm/semibold",
                      children: K.default.Messages.DISPLAY_ON_PROFILE,
                    }),
                  }),
                  o,
                  r,
                  i,
                ],
              }),
            })),
            (function () {
              if (T.revoked || T.integrations.length > 0)
                return (0, a.jsx)(c.FormDivider, {
                  className: W.connectedAccountSeparator,
                });
            })(),
            T.revoked
              ? (0, a.jsx)(c.FormItem, {
                  className: W.integrationsWrapper,
                  children: (0, a.jsx)(c.FormText, {
                    className: W.integrationRevoked,
                    children:
                      K.default.Messages.CONNECTED_ACCOUNT_REVOKED.format({
                        onReconnect: et,
                      }),
                  }),
                })
              : T.integrations.length > 0
                ? (0, a.jsxs)(c.FormItem, {
                    className: W.integrationsWrapper,
                    children: [
                      (0, a.jsx)(c.FormTitle, {
                        tag: c.FormTitleTags.H5,
                        children: (0, a.jsx)(c.Text, {
                          variant: "text-xs/semibold",
                          children: K.default.Messages.SUB_ENABLED_SERVERS,
                        }),
                      }),
                      (0, a.jsx)("div", {
                        children: T.integrations.map(e =>
                          (0, a.jsx)(Q, { integration: e }, e.id)
                        ),
                      }),
                    ],
                  })
                : void 0,
          ],
        });
      }
      function q() {
        return (
          n.useEffect(
            () => () => {
              (0, C.markDismissibleContentAsDismissed)(
                o.DismissibleContent.NEW_CRUNCHYROLL_CONNECTION,
                { dismissAction: Y.ContentDismissActionType.AUTO }
              );
            },
            []
          ),
          (0, a.jsxs)("div", {
            className: W.connectContainer,
            children: [
              (0, a.jsx)(c.Heading, {
                variant: "heading-md/bold",
                color: "interactive-active",
                className: W.connectHeader,
                children:
                  K.default.Messages
                    .CONNECTIONS_USER_SETTINGS_CONNECT_ACCOUNTS_HEADER,
              }),
              (0, a.jsx)(c.Text, {
                variant: "text-xs/normal",
                color: "header-secondary",
                children:
                  K.default.Messages.CONNECTIONS_USER_SETTINGS_CONNECT_ACCOUNTS_DESCRIPTION.format(
                    { privacyPolicyUrl: w.MarketingURLs.PRIVACY }
                  ),
              }),
              (0, a.jsx)(Z, {}),
            ],
          })
        );
      }
      function Z() {
        function e(e) {
          let t = g.default.get(e);
          (0, p.default)(t.type),
            U.default.track(w.AnalyticEvents.ACCOUNT_LINK_STEP, {
              previous_step: "desktop connections",
              current_step: "desktop oauth",
              platform_type: t.type,
            });
        }
        function t() {
          S.default.dispatch({
            type: "CONNECTIONS_GRID_MODAL_SHOW",
            onComplete: e,
          });
        }
        let s = (0, h.usePlatforms)(),
          n = (0, c.useRedesignIconContext)().enabled,
          l = n ? 24 : 18;
        return (0, a.jsxs)("div", {
          className: W.connectionsContainer,
          children: [
            s
              .slice(0, 10)
              .map(e =>
                (0, a.jsx)(
                  f.default,
                  {
                    type: e.type,
                    className: W.accountButton,
                    innerClassName: W.accountButtonInner,
                  },
                  e.type
                )
              ),
            (0, a.jsx)(c.Tooltip, {
              text: K.default.Messages.CONNECTIONS_VIEW_MORE,
              children: e => {
                let { onMouseEnter: s, onMouseLeave: n } = e;
                return (0, a.jsx)("div", {
                  className: i(W.accountAddWrapper, W.accountButton),
                  children: (0, a.jsx)(c.FocusRing, {
                    children: (0, a.jsx)("button", {
                      onMouseEnter: s,
                      onMouseLeave: n,
                      className: i(W.accountAddInner, W.accountButtonInner),
                      type: "button",
                      onClick: t,
                      "aria-label": K.default.Messages.ADD_NEW_CONNECTION,
                      children: (0, a.jsx)(P.default, {
                        height: l,
                        width: l,
                        "aria-label": K.default.Messages.CONNECTIONS_VIEW_MORE,
                      }),
                    }),
                  }),
                });
              },
            }),
          ],
        });
      }
      function J(e) {
        let t,
          { fetching: n, accounts: l, theme: i, locale: r } = e;
        return (
          (t = n
            ? (0, a.jsx)(c.Spinner, {
                className: z.marginTop20,
                type: c.Spinner.Type.SPINNING_CIRCLE,
              })
            : 0 === l.length
              ? (0, a.jsxs)(R.default, {
                  className: z.marginTop40,
                  theme: i,
                  children: [
                    (0, a.jsx)(R.EmptyStateImage, {
                      darkSrc: s("137718"),
                      lightSrc: s("631399"),
                      width: 230,
                      height: 220,
                    }),
                    (0, a.jsx)(R.EmptyStateText, {
                      note: K.default.Messages.CONNECTED_ACCOUNTS_NONE,
                      children:
                        K.default.Messages.CONNECTED_ACCOUNTS_NONE_TITLE,
                    }),
                  ],
                })
              : l
                  .filter(e => g.default.isSupported(e.type))
                  .map((e, t) =>
                    (0, a.jsx)(
                      X,
                      {
                        theme: i,
                        account: e,
                        locale: r,
                        onDisconnect: () =>
                          (function (e) {
                            let { type: t, id: s } = e;
                            E.default.disconnect(t, s);
                          })(e),
                      },
                      t
                    )
                  )),
          (0, a.jsx)(c.FormItem, { className: W.connectionList, children: t })
        );
      }
      var $ = () => {
        let e = (0, r.useStateFromStores)(
            [M.default],
            () => M.default.hidePersonalInformation
          ),
          t = (0, r.useStateFromStores)([A.default], () =>
            A.default.isFetching()
          ),
          s = (0, r.useStateFromStores)([A.default], () =>
            A.default.getAccounts()
          ),
          l = (0, m.default)();
        (0, r.useStateFromStores)([x.default], () =>
          x.default.getFlattenedGuildIds()
        );
        let i = (0, r.useStateFromStores)([B.default], () => B.default.locale);
        return (n.useEffect(() => {
          E.default.fetch();
        }, []),
        e)
          ? (0, a.jsx)(T.default, {})
          : (0, a.jsxs)(c.FormSection, {
              className: W.connections,
              tag: c.FormTitleTags.H1,
              title: K.default.Messages.CONNECTIONS,
              children: [
                (0, a.jsx)(q, {}),
                (0, a.jsx)(J, {
                  fetching: t,
                  accounts: s,
                  theme: l,
                  locale: i,
                }),
              ],
            });
      };
    },
    814953: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return ea;
          },
        }),
        s("222007"),
        s("70102");
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("917351"),
        o = s.n(r),
        d = s("771281"),
        u = s("446674"),
        c = s("669491"),
        S = s("77078"),
        E = s("913144"),
        T = s("776156"),
        f = s("527015"),
        _ = s("518888"),
        m = s("133403"),
        g = s("913801"),
        h = s("960460"),
        N = s("355025"),
        I = s("809310"),
        p = s("34966"),
        C = s("269936"),
        A = s("619443"),
        O = s("32128"),
        x = s("368694"),
        M = s("313915"),
        R = s("381684"),
        D = s("697218"),
        v = s("860957"),
        L = s("941886"),
        P = s("145131"),
        j = s("258078"),
        b = s("50885"),
        U = s("161778"),
        y = s("484894"),
        B = s("49111"),
        F = s("180855"),
        G = s("6791"),
        k = s("875884"),
        H = s("685691"),
        w = s("890957"),
        V = s("356410");
      let Y = [
          "discord_web",
          "discord_marketing",
          "discord_developers",
          "discord_ios",
          "discord_android",
        ],
        K = [
          { value: "branch", label: "Branch Name" },
          { value: "id", label: "Build ID" },
        ];
      function W(e) {
        return "discord_ios" in e || "discord_android" in e;
      }
      class z extends n.Component {
        render() {
          let {
            project: e,
            overrideType: t,
            overrideId: s,
            disabled: n,
            error: l,
          } = this.props;
          return (0, a.jsxs)(P.default, {
            direction: P.default.Direction.VERTICAL,
            className: i(k.buildOverrideGroup, w.marginBottom20, H.card, k.row),
            children: [
              (0, a.jsx)(m.default, {
                className: i(k.removeBuildOverride, {
                  [k.removeBuildOverrideDisabled]: n,
                }),
                onClick: n ? void 0 : this.handleRemoveBuildOverride,
              }),
              (0, a.jsxs)(P.default, {
                className: w.marginBottom8,
                children: [
                  (0, a.jsx)(P.default.Child, {
                    basis: "50%",
                    children: (0, a.jsx)(S.FormItem, {
                      title: "Override Type",
                      className: k.item,
                      children: (0, a.jsx)(S.SingleSelect, {
                        options: K,
                        onChange: this.handleOverrideTypeChanged,
                        value: t,
                        isDisabled: n,
                      }),
                    }),
                  }),
                  (0, a.jsx)(P.default.Child, {
                    basis: "50%",
                    children: (0, a.jsx)(S.FormItem, {
                      title: "branch" === t ? "Branch Name" : "Build ID",
                      className: k.item,
                      children: (0, a.jsx)(S.TextInput, {
                        value: s,
                        onChange: this.handleOverrideIdChanged,
                        disabled: n,
                      }),
                    }),
                  }),
                ],
              }),
              (0, a.jsxs)(P.default.Child, {
                children: [
                  null != l &&
                    "" !== l &&
                    (0, a.jsx)(S.FormText, {
                      className: k.item,
                      style: { color: c.default.unsafe_rawColors.RED_400.css },
                      type: S.FormText.Types.DESCRIPTION,
                      children: l,
                    }),
                  (0, a.jsxs)(S.FormText, {
                    className: k.item,
                    type: S.FormText.Types.DESCRIPTION,
                    children: [
                      "This controls the build that will be served for the ",
                      (0, a.jsx)("code", { children: e }),
                      " project.",
                    ],
                  }),
                ],
              }),
            ],
          });
        }
        constructor(...e) {
          super(...e),
            (this.handleRemoveBuildOverride = () => {
              this.props.onBuildOverrideRemoved(this.props.project);
            }),
            (this.handleOverrideIdChanged = e => {
              this.props.onBuildOverrideUpdated(this.props.project, { id: e });
            }),
            (this.handleOverrideTypeChanged = e => {
              this.props.onBuildOverrideUpdated(this.props.project, {
                type: e,
                id: "",
              });
            });
        }
      }
      class Q extends n.Component {
        async refreshBuildOverrides() {
          this.setState({ loading: !0 });
          let e = await (0, N.getBuildOverride)();
          this.setState({
            loading: !1,
            buildOverrides: e,
            loadedBuildOverrides: o.cloneDeep(e),
            errors: {},
          });
        }
        isDirty() {
          let { buildOverrides: e, loadedBuildOverrides: t } = this.state;
          return !o.isEqual(e, t);
        }
        componentDidMount() {
          this.refreshBuildOverrides();
        }
        getAvailableProjects() {
          let { buildOverrides: e } = this.state;
          if (null == e) return [];
          let t = Object.keys(e);
          return o.without(Y, ...t);
        }
        renderEmpty() {
          return (0, a.jsxs)(L.default, {
            theme: U.default.theme,
            className: i(w.marginTop40, w.marginBottom20),
            children: [
              (0, a.jsx)(L.EmptyStateImage, {
                darkSrc: s("522025"),
                lightSrc: s("471737"),
                width: 294,
                height: 192,
              }),
              (0, a.jsx)(L.EmptyStateText, {
                children: "You have no build overrides configured.",
              }),
            ],
          });
        }
        renderItems() {
          let { buildOverrides: e, saving: t, errors: s } = this.state;
          return null == e
            ? null
            : o.map(e, (e, n) =>
                (0, a.jsx)(
                  z,
                  {
                    project: n,
                    overrideType: e.type,
                    overrideId: e.id,
                    disabled: t,
                    error: s[n],
                    onBuildOverrideUpdated: this.handleBuildOverrideUpdated,
                    onBuildOverrideRemoved: this.handleBuildOverrideRemoved,
                  },
                  n
                )
              );
        }
        renderRefreshButton() {
          return !this.state.didSave || this.isDirty()
            ? null
            : (0, a.jsx)(P.default, {
                grow: 0,
                direction: P.default.Direction.HORIZONTAL_REVERSE,
                children: (0, a.jsx)(P.default.Child, {
                  grow: 0,
                  children: (0, a.jsx)(S.Button, {
                    onClick: () => location.reload(),
                    color: S.Button.Colors.PRIMARY,
                    children: "Reload App",
                  }),
                }),
              });
        }
        renderLinkButton() {
          let { buildOverrides: e } = this.state;
          return null == e || 0 === Object.keys(e).length
            ? null
            : (0, a.jsx)(P.default, {
                grow: 0,
                direction: P.default.Direction.HORIZONTAL_REVERSE,
                children: (0, a.jsx)(P.default.Child, {
                  grow: 0,
                  children: (0, a.jsx)(S.Button, {
                    onClick: this.handleLinkGeneration,
                    color: S.Button.Colors.BRAND,
                    children: "Generate Public Link",
                  }),
                }),
              });
        }
        renderSaveButton() {
          if (!this.isDirty()) return null;
          let { saving: e, buildOverrides: t } = this.state;
          return (0, a.jsxs)(P.default, {
            grow: 0,
            direction: P.default.Direction.HORIZONTAL_REVERSE,
            children: [
              (0, a.jsx)(P.default.Child, {
                grow: 0,
                children: (0, a.jsx)(S.Button, {
                  disabled: W(null != t ? t : {}),
                  onClick: this.handleSaveChanges,
                  submitting: e,
                  color: S.Button.Colors.GREEN,
                  children: "Save Build Overrides",
                }),
              }),
              (0, a.jsx)(P.default.Child, {
                grow: 0,
                children: (0, a.jsx)(S.Button, {
                  onClick: this.handleDiscardChanges,
                  disabled: e,
                  color: S.Button.Colors.RED,
                  children: "Discard Changes",
                }),
              }),
            ],
          });
        }
        render() {
          let e;
          let { loading: t, saving: s, buildOverrides: n } = this.state;
          e = t
            ? (0, a.jsx)(S.Spinner, { className: w.marginTop20 })
            : null != n && 0 === Object.keys(n).length
              ? this.renderEmpty()
              : this.renderItems();
          let l = !s && !t && this.getAvailableProjects().length > 0,
            i =
              W(null != n ? n : {}) &&
              "stable" !== window.GLOBAL_ENV.RELEASE_CHANNEL
                ? (0, a.jsx)(S.Text, {
                    color: "text-danger",
                    variant: "text-md/normal",
                    children:
                      "Mobile build overrides must be generated using the desktop/web stable client for now!",
                  })
                : null;
          return (0, a.jsxs)(S.FormSection, {
            className: w.marginTop60,
            children: [
              (0, a.jsxs)(P.default, {
                className: w.marginBottom20,
                children: [
                  (0, a.jsx)(P.default.Child, {
                    children: (0, a.jsx)(S.FormTitle, {
                      tag: S.FormTitleTags.H1,
                      children: "Build Overrides",
                    }),
                  }),
                  (0, a.jsx)(P.default.Child, {
                    grow: 0,
                    children: (0, a.jsx)(S.Button, {
                      size: S.ButtonSizes.SMALL,
                      onClick: this.handleAddBuildOverride,
                      disabled: !l,
                      children: "Add Build Override",
                    }),
                  }),
                ],
              }),
              (0, a.jsx)(S.FormDivider, {}),
              (0, a.jsxs)(P.default, {
                direction: P.default.Direction.VERTICAL,
                children: [
                  i,
                  e,
                  (0, a.jsxs)(P.default, {
                    grow: 0,
                    direction: P.default.Direction.HORIZONTAL_REVERSE,
                    children: [
                      this.renderRefreshButton(),
                      this.renderSaveButton(),
                      this.renderLinkButton(),
                    ],
                  }),
                ],
              }),
            ],
          });
        }
        constructor(...e) {
          super(...e),
            (this.state = {
              loading: !0,
              buildOverrides: {},
              loadedBuildOverrides: {},
              errors: {},
              saving: !1,
              didSave: !1,
            }),
            (this.handleAddBuildOverride = async () => {
              var e;
              let t = await ((e = this.getAvailableProjects()),
              new Promise(t => {
                (0, S.openModal)(s => {
                  let n = e => {
                    s.onClose(), t(e);
                  };
                  return (0, a.jsxs)(S.ModalRoot, {
                    ...s,
                    "aria-label": "Choose A Project to Override",
                    children: [
                      (0, a.jsx)(S.ModalHeader, {
                        separator: !1,
                        children: (0, a.jsx)(S.Heading, {
                          variant: "heading-lg/semibold",
                          children: "Choose A Project to Override",
                        }),
                      }),
                      (0, a.jsx)(S.ModalContent, {
                        children: (0, a.jsx)("div", {
                          className: k.buildOverrideList,
                          children: e.map(e =>
                            (0, a.jsx)(
                              S.Button,
                              {
                                value: e,
                                color: S.Button.Colors.GREEN,
                                onClick: () => n(e),
                                children: e,
                              },
                              e
                            )
                          ),
                        }),
                      }),
                      (0, a.jsx)(S.ModalFooter, {
                        children: (0, a.jsx)(S.Button, {
                          color: S.Button.Colors.PRIMARY,
                          look: S.Button.Looks.LINK,
                          onClick: () => n(null),
                          children: "Nevermind",
                        }),
                      }),
                    ],
                  });
                });
              }));
              if (null == t) return;
              let s = {
                ...this.state.buildOverrides,
                [t]: { type: "branch", id: "" },
              };
              this.setState({ buildOverrides: s });
            }),
            (this.handleBuildOverrideUpdated = (e, t) => {
              let { buildOverrides: s } = this.state,
                a = null != s ? s[e] : {},
                n = { ...a, ...t },
                l = { ...this.state.buildOverrides, [e]: n };
              this.setState({ buildOverrides: l });
            }),
            (this.handleBuildOverrideRemoved = e => {
              let t = { ...this.state.buildOverrides };
              delete t[e], this.setState({ buildOverrides: t });
            }),
            (this.handleDiscardChanges = () => {
              this.setState({
                buildOverrides: o.cloneDeep(this.state.loadedBuildOverrides),
                errors: {},
                didSave: !1,
              });
            }),
            (this.handleSaveChanges = async () => {
              let { buildOverrides: e } = this.state;
              if (null == e) return;
              this.setState({ saving: !0 });
              let t = await (0, h.applyStaffBuildOverride)(e);
              if (200 === t.status) {
                let e = t.body;
                this.setState({
                  buildOverrides: e,
                  loadedBuildOverrides: o.cloneDeep(e),
                  errors: {},
                  didSave: !0,
                  saving: !1,
                });
              } else if (400 === t.status) {
                let e = t.body;
                this.setState({ errors: e, saving: !1, didSave: !1 });
              } else this.setState({ saving: !1, didSave: !1 });
            }),
            (this.handleLinkGeneration = () => {
              let { buildOverrides: e } = this.state;
              (0, S.openModal)(t => (0, a.jsx)(X, { ...t, buildOverrides: e }));
            });
        }
      }
      class X extends n.Component {
        isMobile() {
          var e;
          return W(
            null !== (e = this.props.buildOverrides) && void 0 !== e ? e : {}
          );
        }
        renderSettingsForm() {
          let {
              ttlSeconds: e,
              releaseChannel: t,
              userIdEntry: s,
              userIdEntryError: n,
              allowedVersions: l,
              allowedVersionEntry: i,
              allowedVersionEntryError: r,
              allowLoggedOut: o,
              experiments: d,
              experimentsError: u,
            } = this.state,
            c = F.BUILD_OVERRIDE_EXPIRATION_OPTIONS.find(t => t.value === e),
            E = l.map(e => ({ label: e, value: e }));
          return (0, a.jsxs)(P.default.Child, {
            basis: "70%",
            children: [
              (0, a.jsx)(S.FormItem, {
                title: "Expire After",
                className: w.marginBottom20,
                children: (0, a.jsx)(S.SingleSelect, {
                  value: null != c ? c.value : null,
                  options: F.BUILD_OVERRIDE_EXPIRATION_OPTIONS,
                  onChange: this.handleExpirationChange,
                }),
              }),
              this.isMobile()
                ? null
                : (0, a.jsx)(S.FormItem, {
                    title: "Release Channel",
                    className: w.marginBottom20,
                    children: (0, a.jsx)(S.SingleSelect, {
                      value: t,
                      options: F.BUILD_OVERRIDE_RELEASE_CHANNEL_OPTIONS,
                      onChange: this.handleReleaseChannelChange,
                    }),
                  }),
              this.isMobile()
                ? (0, a.jsxs)(a.Fragment, {
                    children: [
                      (0, a.jsx)(S.FormItem, {
                        title: "Add allowed app version (required)",
                        className: w.marginBottom20,
                        children: (0, a.jsxs)(P.default, {
                          direction: P.default.Direction.HORIZONTAL,
                          children: [
                            (0, a.jsx)(P.default.Child, {
                              wrap: !0,
                              basis: "90%",
                              children: (0, a.jsx)(S.TextInput, {
                                autoFocus: !0,
                                value: i,
                                onKeyPress: this.handleAllowedVersionEnter,
                                error: r,
                                onChange: this.handleAllowedVersionEntry,
                                placeholder: "Example: 34",
                              }),
                            }),
                            (0, a.jsx)(S.Button, {
                              onClick: this.handleAddAllowedVersion,
                              children: "Add",
                            }),
                          ],
                        }),
                      }),
                      (0, a.jsx)(S.FormItem, {
                        title: "Remove allowed app version",
                        className: w.marginBottom20,
                        children: (0, a.jsx)(S.SingleSelect, {
                          value: null,
                          options: E,
                          onChange: this.handleRemoveAllowedVersion,
                          isDisabled: 0 === l.length,
                        }),
                      }),
                    ],
                  })
                : null,
              this.isMobile()
                ? null
                : (0, a.jsx)(a.Fragment, {
                    children: (0, a.jsxs)(S.FormItem, {
                      title: "Limit to User IDs (optional)",
                      className: w.marginBottom20,
                      children: [
                        (0, a.jsx)(P.default, {
                          direction: P.default.Direction.HORIZONTAL,
                          children: (0, a.jsx)(P.default.Child, {
                            wrap: !0,
                            basis: "90%",
                            children: (0, a.jsx)(S.TextArea, {
                              value: s,
                              error: n,
                              onBlur: () => this.setUserEntryError(""),
                              onChange: this.handleUserIDEntry,
                            }),
                          }),
                        }),
                        (0, a.jsx)(S.Text, {
                          variant: "text-sm/normal",
                          color: "text-muted",
                          className: w.marginTop8,
                          children:
                            "User IDs can be separated by whitespace or commas.",
                        }),
                      ],
                    }),
                  }),
              (0, a.jsxs)(S.FormItem, {
                title: "Client Experiment Override",
                className: w.marginBottom20,
                children: [
                  (0, a.jsx)(P.default, {
                    direction: P.default.Direction.HORIZONTAL,
                    children: (0, a.jsx)(P.default.Child, {
                      wrap: !0,
                      basis: "90%",
                      children: (0, a.jsx)(S.TextArea, {
                        value: d,
                        error: u,
                        onChange: this.handleExperiments,
                        placeholder: '{"2022-01_threads":1}',
                      }),
                    }),
                  }),
                  (0, a.jsx)(S.Text, {
                    variant: "text-sm/normal",
                    color: "text-muted",
                    className: w.marginTop8,
                    children:
                      "Locally override the given experiments to the given bucket. This ONLY applies locally and WILL NOT affect the server. When the user clears build override, the experiment override is removed as well.",
                  }),
                ],
              }),
              (0, a.jsx)(S.FormSwitch, {
                onChange: this.handleAllowLoggedOut,
                value: o,
                children: "Allow logged out users",
              }),
            ],
          });
        }
        renderPayloadBlock() {
          let e = JSON.stringify(this.generatePayload(), null, 2),
            t = () => e,
            n = (0, a.jsx)(C.LazyLibrary, {
              createPromise: () => s.el("86256").then(s.bind(s, "86256")),
              webpackId: "86256",
              renderFallback: t,
              render: s => {
                let n = s.highlight("json", e, !0);
                return null == n
                  ? t()
                  : (0, a.jsx)("code", {
                      className: "hljs scroller "
                        .concat(n.language, " ")
                        .concat(V.scrollbarGhost, " ")
                        .concat(k.codebox),
                      dangerouslySetInnerHTML: { __html: n.value },
                    });
              },
            });
          return (0, a.jsx)(P.default.Child, {
            children: (0, a.jsx)(S.Card, {
              children: (0, a.jsx)("pre", { children: n }),
            }),
          });
        }
        renderLinkForm() {
          let { statusTextColor: e, statusText: t, publicLink: s } = this.state;
          return (0, a.jsxs)("div", {
            children: [
              (0, a.jsx)(S.FormItem, {
                title: "Signed Link",
                children: (0, a.jsxs)(P.default, {
                  children: [
                    (0, a.jsx)(P.default.Child, {
                      wrap: !0,
                      basis: "75%",
                      children: (0, a.jsx)(g.default, { value: s }),
                    }),
                    (0, a.jsx)(S.Button, {
                      onClick: this.handleGenerateLink,
                      children: "Generate Link",
                    }),
                  ],
                }),
              }),
              (0, a.jsx)(j.default, {
                color: e,
                className: "".concat(w.marginBottom8, " ").concat(w.marginTop8),
                children: t,
              }),
            ],
          });
        }
        render() {
          let { onClose: e, transitionState: t } = this.props;
          return (0, a.jsxs)(S.ModalRoot, {
            size: S.ModalSize.LARGE,
            transitionState: t,
            "aria-label": "Generate Public Build Override Link",
            children: [
              (0, a.jsxs)(S.ModalHeader, {
                justify: P.default.Justify.BETWEEN,
                separator: !1,
                children: [
                  (0, a.jsx)(S.Heading, {
                    variant: "heading-lg/semibold",
                    children: "Generate Public Build Override Link",
                  }),
                  (0, a.jsx)(S.ModalCloseButton, { onClick: e }),
                ],
              }),
              (0, a.jsxs)(S.ModalContent, {
                children: [
                  (0, a.jsxs)(P.default, {
                    children: [
                      this.renderSettingsForm(),
                      this.renderPayloadBlock(),
                    ],
                  }),
                  this.renderLinkForm(),
                ],
              }),
            ],
          });
        }
        constructor(...e) {
          super(...e),
            (this.state = {
              ttlSeconds: 3600,
              releaseChannel: "all",
              userIds: new Set(),
              userIdEntry: "",
              userIdEntryError: null,
              allowedVersions: [],
              allowedVersionEntry: "",
              allowedVersionEntryError: null,
              publicLink: " ",
              statusText: null,
              statusTextColor: j.default.Colors.STATUS_RED,
              allowLoggedOut: !1,
            }),
            (this.setUserEntryError = e => {
              this.setState({ userIdEntryError: e });
            }),
            (this.setStatusMessage = (e, t) => {
              this.setState({
                statusText: e,
                statusTextColor: null != t ? t : j.default.Colors.STATUS_RED,
              });
            }),
            (this.handleUserIDEntry = e => {
              if (!/^[\d\s,]*$/.test(e))
                return this.setUserEntryError("User IDs are numbers!");
              let t = new Set(e.split(/[,\s]+/).filter(Boolean));
              this.setState({ userIdEntry: e, userIds: t });
            }),
            (this.setAllowedVersionError = e => {
              this.setState({ allowedVersionEntryError: e });
            }),
            (this.handleAllowedVersionEntry = e => {
              this.setState({ allowedVersionEntry: e });
            }),
            (this.handleAllowedVersionEnter = e => {
              e.charCode === B.KeyboardKeys.ENTER &&
                this.handleAddAllowedVersion();
            }),
            (this.handleAddAllowedVersion = () => {
              let { allowedVersions: e, allowedVersionEntry: t } = this.state;
              return 0 === (t = t.trim()).length
                ? this.setAllowedVersionError("Enter a valid version number!")
                : e.indexOf(t) >= 0
                  ? this.setAllowedVersionError(
                      "You already added that version!"
                    )
                  : void this.setState({
                      allowedVersions: [...e, t],
                      allowedVersionEntry: "",
                      allowedVersionEntryError: "",
                    });
            }),
            (this.handleRemoveAllowedVersion = e => {
              let { allowedVersions: t } = this.state;
              (t = t.filter(t => t !== e)),
                this.setState({ allowedVersions: t });
            }),
            (this.handleAllowLoggedOut = e => {
              this.setState({ allowLoggedOut: e });
            }),
            (this.handleExpirationChange = e => {
              this.setState({ ttlSeconds: e });
            }),
            (this.handleReleaseChannelChange = e => {
              this.setState({ releaseChannel: e });
            }),
            (this.handleExperiments = e => {
              if (0 === e.trim().length) {
                this.setState({ experimentsError: void 0 });
                return;
              }
              try {
                let t = JSON.parse(e);
                for (let e in t) {
                  if (null == e.match(/^[0-9]{4}\-[0-9]{2}_[a-z0-9_]+$/)) {
                    this.setState({
                      experimentsError: "".concat(
                        e,
                        " is an invalid experiment name"
                      ),
                    });
                    return;
                  }
                  if ("number" != typeof t[e]) {
                    this.setState({
                      experimentsError: "".concat(
                        e,
                        " has an invalid bucket override"
                      ),
                    });
                    return;
                  }
                }
              } catch (e) {
                this.setState({
                  experimentsError: "Unable to parse experiments ".concat(
                    e.message
                  ),
                });
                return;
              }
              this.setState({ experiments: e, experimentsError: void 0 });
            }),
            (this.generatePayload = () => ({
              overrides: this.props.buildOverrides,
              meta: {
                release_channel:
                  "all" === this.state.releaseChannel
                    ? null
                    : this.state.releaseChannel,
                ttl_seconds: this.state.ttlSeconds,
                user_ids: Array.from(this.state.userIds),
                allowed_versions: this.isMobile()
                  ? this.state.allowedVersions
                  : void 0,
                allow_logged_out: this.state.allowLoggedOut,
                experiments:
                  null == this.state.experiments
                    ? null
                    : JSON.parse(this.state.experiments),
              },
            })),
            (this.handleGenerateLink = async () => {
              if (this.isMobile() && 0 === this.state.allowedVersions.length) {
                this.setAllowedVersionError(
                  "You must add at least one allowed version for iOS"
                );
                return;
              }
              this.setStatusMessage(null);
              let e = this.generatePayload(),
                t = await (0, h.getPublicBuildOverrideLink)(e);
              !1 !== t.error
                ? this.setStatusMessage(
                    JSON.stringify(t.error),
                    j.default.Colors.STATUS_RED
                  )
                : (this.setState({ publicLink: t.url.toString() }),
                  0 === e.meta.user_ids.length &&
                    this.setStatusMessage(
                      "Warning! No users added to the whitelist! This link could be used by anyone to override their build.",
                      j.default.Colors.STATUS_YELLOW
                    ));
            });
        }
      }
      function q() {
        throw Error("Send help");
      }
      function Z() {
        let [e, t] = n.useState(!1),
          [s, l] = n.useState("");
        return (n.useEffect(() => {
          (async () => {
            let e = await (0, v.getOverlayURL)();
            l(e);
          })();
        }, []),
        e)
          ? {}
          : (0, a.jsxs)(a.Fragment, {
              children: [
                (0, a.jsxs)("div", {
                  className: [k.buttonsContainer, w.marginBottom20].join(" "),
                  children: [
                    (0, a.jsx)(S.Button, {
                      onClick: () => window.open(s, "_blank"),
                      disabled: "" === s,
                      children: "Open Overlay",
                    }),
                    (0, a.jsx)(S.Button, {
                      onClick: () => {
                        A.default.getSocket().close(),
                          A.default.getSocket().connect();
                      },
                      children: "Reset Socket",
                    }),
                    I.ENABLE_CACHE_STORE &&
                      (0, a.jsx)(S.Button, {
                        onClick: () => {
                          E.default.dispatch({
                            type: "CLEAR_CACHES",
                            reason: "Requested by user",
                            preventWritingCachesAgainThisSession: !0,
                            resetSocket: !0,
                          });
                        },
                        children: "Clear Caches",
                      }),
                  ],
                }),
                (0, a.jsx)(S.FormSection, {
                  title: "Crashes",
                  tag: S.FormTitleTags.H1,
                  children: (0, a.jsxs)("div", {
                    className: k.buttonsContainer,
                    children: [
                      (0, a.jsx)(S.SingleSelect, {
                        value: void 0,
                        options: [
                          { value: void 0, label: "Native libdiscord crash" },
                          { value: 0, label: "Abort()" },
                          { value: 1, label: "SIGSEGV()" },
                          { value: 2, label: "EXCEPTION_ACCESS_VIOLATION" },
                          { value: 3, label: "RaiseFailFastException" },
                          { value: 4, label: "Out of Memory" },
                        ],
                        onChange: e => null != e && b.default.crash(e),
                      }),
                      (0, a.jsx)(S.SingleSelect, {
                        value: void 0,
                        options: [
                          { value: void 0, label: "Native JS crash" },
                          {
                            value: d.JSExceptionLocation.RendererProcessDelayed,
                            label: "Delayed exception in renderer process",
                          },
                          {
                            value: d.JSExceptionLocation.RendererProcess,
                            label: "Exception in renderer process",
                          },
                          {
                            value: d.JSExceptionLocation.MainProcess,
                            label: "Exception in main process",
                          },
                        ],
                        onChange: e => {
                          var t;
                          return null != e
                            ? ((t = e), void b.default.triggerJSException(t))
                            : void 0;
                        },
                      }),
                      (0, a.jsx)(S.Button, {
                        onClick: () => t(!0),
                        children: "React Crash",
                      }),
                      (0, a.jsx)(S.Button, {
                        onClick: q,
                        children: "onClick Throw",
                      }),
                    ],
                  }),
                }),
              ],
            });
      }
      let J = u.default.connectStores([M.default], () => ({
        isTracingRequests: M.default.isTracingRequests,
        isForcedCanary: M.default.isForcedCanary,
        isLoggingGatewayEvents: M.default.isLoggingGatewayEvents,
        isLoggingOverlayEvents: M.default.isLoggingOverlayEvents,
        isLoggingAnalyticsEvents: M.default.isLoggingAnalyticsEvents,
        isAxeEnabled: M.default.isAxeEnabled,
        isSourceMapsEnabled: M.default.sourceMapsEnabled,
        isAnalyticsDebuggerEnabled: M.default.isAnalyticsDebuggerEnabled,
        isIdleStatusIndicatorEnabled: M.default.isIdleStatusIndicatorEnabled,
        appDirectoryIncludesInactiveCollections:
          M.default.appDirectoryIncludesInactiveCollections,
      }))(e => {
        let {
            isTracingRequests: t,
            isForcedCanary: s,
            isLoggingGatewayEvents: n,
            isLoggingOverlayEvents: l,
            isLoggingAnalyticsEvents: i,
            isAxeEnabled: r,
            isSourceMapsEnabled: o,
            isAnalyticsDebuggerEnabled: d,
            isIdleStatusIndicatorEnabled: c,
            appDirectoryIncludesInactiveCollections: E,
          } = e,
          T = (0, u.useStateFromStores)([D.default], () =>
            D.default.getCurrentUser()
          );
        return (0, a.jsxs)(S.FormSection, {
          title: "Developer Flags",
          tag: S.FormTitleTags.H1,
          children: [
            (0, a.jsx)(S.FormSwitch, {
              value: t,
              note: "Force trace all client requests with APM",
              onChange: e => (0, f.setDeveloperOptionSettings)({ trace: e }),
              children: "Enable Tracing Requests",
            }),
            (0, a.jsx)(S.FormSwitch, {
              value: s,
              note: "Force all API requests to canary instances",
              onChange: e => (0, f.setDeveloperOptionSettings)({ canary: e }),
              children: "Enable Forced Canary",
            }),
            (0, a.jsx)(S.FormSwitch, {
              value: n,
              note: "Logs all incoming and outgoing gateway events to the developer console, enable verbose logging in the developer console to see! This includes all message content.",
              onChange: e =>
                (0, f.setDeveloperOptionSettings)({ logGatewayEvents: e }),
              children: "Enable Logging of Gateway Events to Console",
            }),
            (0, a.jsx)(S.FormSwitch, {
              value: l,
              note: "Logs all overlay related RPC events. Super noisy if an overlay is connected",
              onChange: e =>
                (0, f.setDeveloperOptionSettings)({ logOverlayEvents: e }),
              children: "Enable Logging of Overlay RPC Events & Commands",
            }),
            (0, a.jsx)(S.FormSwitch, {
              value: i,
              note: "Logs all analytics events to the developer console",
              onChange: e =>
                (0, f.setDeveloperOptionSettings)({ logAnalyticsEvents: e }),
              children: "Enable Logging of Analytics Events",
            }),
            (0, a.jsx)(S.FormSwitch, {
              value: o,
              note: "Only enable on devices you trust.",
              onChange: e =>
                (0, f.setDeveloperOptionSettings)({ sourceMapsEnabled: e }),
              children: "Enable source maps to be loaded on this client",
            }),
            (0, a.jsx)(S.FormSwitch, {
              value: d,
              note: "Displays a floating debugger with viewed impressions",
              onChange: e =>
                (0, f.setDeveloperOptionSettings)({
                  analyticsDebuggerEnabled: e,
                }),
              children: "Enable standard analytics debugger view",
            }),
            (null == T ? void 0 : T.isStaff())
              ? (0, a.jsx)(S.FormSwitch, {
                  value: c,
                  note: "Displays a floating idle status indicator",
                  onChange: e =>
                    (0, f.setDeveloperOptionSettings)({
                      idleStatusIndicatorEnabled: e,
                    }),
                  children: "Enable idle status indicator",
                })
              : null,
            null,
            (null == T ? void 0 : T.isStaff())
              ? (0, a.jsx)(S.FormSwitch, {
                  value: E,
                  note: "In App Directory, include inactive collections on the homepage. Use this to preview changes to collections before publishing them.",
                  onChange: e =>
                    (0, f.setDeveloperOptionSettings)({
                      appDirectoryIncludesInactiveCollections: e,
                    }),
                  children:
                    "Preview Unpublished Collections on App Directory Homepage",
                })
              : null,
            x.default.isDeveloper
              ? (0, a.jsxs)(a.Fragment, {
                  children: [
                    (0, a.jsx)("div", {
                      className: [k.buttonsContainer, w.marginBottom20].join(
                        " "
                      ),
                      children: (0, a.jsx)(y.OverridePremiumTypeDropDown, {}),
                    }),
                    (0, a.jsx)(S.FormDivider, { className: k.divider }),
                  ],
                })
              : null,
          ],
        });
      });
      function $() {
        let e = (0, u.useStateFromStores)([R.default], () =>
            R.default.getSurveyOverride()
          ),
          [t, s] = n.useState(null != e ? e : "");
        return (0, a.jsxs)(S.FormSection, {
          tag: S.FormTitleTags.H1,
          title: "Survey Override",
          className: w.marginTop60,
          children: [
            (0, a.jsx)(S.FormTitle, {
              children: "Copy the ID of the Survey you want to test:",
            }),
            (0, a.jsxs)("form", {
              className: k.surveyOverride,
              onSubmit: e => {
                e.preventDefault(),
                  t.length > 0 ? _.overrideSurvey(t) : _.overrideSurvey(null);
              },
              children: [
                (0, a.jsx)(S.TextInput, {
                  className: k.surveyOverrideInput,
                  value: t,
                  onChange: s,
                }),
                (0, a.jsx)(S.Button, {
                  type: "submit",
                  children: "Save Override",
                }),
              ],
            }),
          ],
        });
      }
      function ee() {
        let e = O.OverlayStoredSettings.methodOverride,
          [t, s] = n.useState(e);
        return (0, a.jsxs)(S.FormSection, {
          tag: S.FormTitleTags.H1,
          title: "In-Game Overlay Method Override",
          className: w.marginTop60,
          children: [
            (0, a.jsx)(S.FormTitle, {
              children:
                "Force all overlay enabled games to use a specific overlay method:",
            }),
            (0, a.jsx)(S.SingleSelect, {
              value: t,
              options: [
                { value: void 0, label: "No override" },
                {
                  value: G.OverlayMethod.OutOfProcess,
                  label: "Out of process",
                },
                { value: G.OverlayMethod.Hook, label: "In-process hook" },
              ],
              onChange: e => {
                O.OverlayStoredSettings.update({ methodOverride: e }), s(e);
              },
            }),
          ],
        });
      }
      function et() {
        var e;
        let t = (0, u.useStateFromStores)([p.default], () =>
            p.default.overrideId()
          ),
          [s, l] = n.useState(
            null !== (e = p.default.overrideId()) && void 0 !== e ? e : ""
          );
        return (0, a.jsxs)(S.FormSection, {
          tag: S.FormTitleTags.H1,
          title: "Changelog Override",
          className: w.marginTop60,
          children: [
            (0, a.jsx)(S.FormTitle, {
              children: "Enter the ID of the changelog you want to test",
            }),
            (0, a.jsxs)("div", {
              className: k.surveyOverride,
              children: [
                (0, a.jsx)(S.TextInput, {
                  className: k.surveyOverrideInput,
                  value: s,
                  onChange: l,
                }),
                (0, a.jsx)(S.Button, {
                  onClick: () => {
                    "" === s
                      ? T.default.setChangelogOverride(null)
                      : T.default.setChangelogOverride(s);
                  },
                  disabled: t === s,
                  children: "Update Changelog",
                }),
              ],
            }),
          ],
        });
      }
      class es extends n.PureComponent {
        render() {
          return (0, a.jsxs)(n.Fragment, {
            children: [
              (0, a.jsx)(J, {}),
              (0, a.jsx)(Z, {}),
              (0, a.jsx)($, {}),
              (0, a.jsx)(ee, {}),
              (0, a.jsx)(et, {}),
              (0, a.jsx)(Q, {}),
            ],
          });
        }
      }
      var ea = es;
    },
    409862: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return l;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("153935");
      function l() {
        return (0, a.jsx)(n.UserSettingsFamilyCenterPage, {});
      }
    },
    803163: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          showMFASuccessModal: function () {
            return E;
          },
          default: function () {
            return T;
          },
        }),
        s("70102"),
        s("222007");
      var a = s("37983"),
        n = s("884691"),
        l = s("627929"),
        i = s("77078"),
        r = s("430713"),
        o = s("663657"),
        d = s("49111"),
        u = s("782340");
      function c(e) {
        let { onError: t, onSuccess: s, PasswordConfirm: i, ...o } = e,
          [c, S] = n.useState("");
        return (0, a.jsx)(i, {
          ...o,
          handleSubmit: e => r.default.enableMFAStart(e),
          onError: e => {
            var a;
            if (
              ("object" == typeof (a = e) &&
              null != a &&
              (0, l.hasOwnProperty)(a, "code") &&
              "number" == typeof a.code
                ? a.code
                : 0) === d.AbortCodes.MFA_INVALID_SECRET
            )
              s(c), o.onClose();
            else t(e);
          },
          onPasswordChange: S,
          title: u.default.Messages.TWO_FA_ENABLE,
          actionText: u.default.Messages.CONTINUE,
          skipErrorMsgAbortCode: d.AbortCodes.MFA_INVALID_SECRET,
        });
      }
      function S(e, t) {
        return new Promise(n => {
          (0, i.openModalLazy)(async () => {
            let { default: l } = await s.el("936380").then(s.bind(s, "936380"));
            return s =>
              (0, a.jsx)(l, {
                ...s,
                password: e,
                emailToken: t,
                handleEnableMFASuccess: n,
              });
          });
        });
      }
      function E() {
        let e =
          !(arguments.length > 0) || void 0 === arguments[0] || arguments[0];
        return new Promise(t => {
          (0, i.openModalLazy)(
            async () => {
              let { default: t } = await s
                .el("184504")
                .then(s.bind(s, "184504"));
              return s => (0, a.jsx)(t, { ...s, isTotp: e });
            },
            { onCloseCallback: t, onCloseRequest: d.NOOP_NULL }
          );
        });
      }
      var T = {
        enableMFA: async function e() {
          let e = await new Promise((e, t) => {
            (0, i.openModalLazy)(async () => {
              let { default: n } = await s
                .el("583227")
                .then(s.bind(s, "583227"));
              return s =>
                (0, a.jsx)(c, {
                  ...s,
                  onSuccess: e,
                  onError: t,
                  PasswordConfirm: n,
                });
            });
          });
          if ((0, o.isMfaEmailVerificationEnabled)()) {
            var t;
            let n = await ((t = e),
            new Promise(e => {
              (0, i.openModalLazy)(async () => {
                let { default: n } = await s
                  .el("644512")
                  .then(s.bind(s, "644512"));
                return s =>
                  (0, a.jsx)(n, {
                    ...s,
                    onFormSubmit: async e => await r.default.verifyEmailCode(e),
                    onResend: async () => {
                      await r.default.resendEmailCode(t);
                    },
                    onSuccess: e,
                    headerText:
                      u.default.Messages
                        .USER_SETTINGS_ACCOUNT_CHANGE_EMAIL_CONFIRM_TITLE_DESKTOP,
                    confirmButtonText: u.default.Messages.NEXT,
                  });
              });
            }));
            await S(e, null == n ? void 0 : n.token);
          } else await S(e);
          await E();
        },
      };
    },
    175077: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return T;
          },
        });
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("77078"),
        o = s("568734"),
        d = s("241088"),
        u = s("845579"),
        c = s("49111"),
        S = s("782340"),
        E = s("890957");
      function T() {
        let e = u.FriendSourceFlagsSetting.useSetting(),
          t = n.useMemo(() => (0, d.computeFlags)(e), [e]);
        return (0, a.jsx)(r.FormSection, {
          tag: r.FormTitleTags.H1,
          title: S.default.Messages.FRIEND_REQUESTS,
          children: (0, a.jsxs)(r.FormSection, {
            title: S.default.Messages.FRIEND_PERMITTED_SOURCE,
            className: E.marginBottom40,
            children: [
              (0, a.jsx)(r.FormSwitch, {
                className: i(E.marginTop8, E.marginBottom20),
                value: t.all,
                onChange: e =>
                  u.FriendSourceFlagsSetting.updateSetting(
                    e
                      ? c.AllFriendSourceFlags
                      : c.AllFriendSourceFlags &
                          ~c.FriendSourceFlags.NO_RELATION
                  ),
                children: S.default.Messages.FRIEND_PERMITTED_SOURCE_ALL,
              }),
              (0, a.jsx)(r.FormSwitch, {
                value: t.all || t.mutualFriends,
                onChange: t =>
                  u.FriendSourceFlagsSetting.updateSetting(
                    t
                      ? o.addFlag(e, c.FriendSourceFlags.MUTUAL_FRIENDS)
                      : o.removeFlags(
                          e,
                          c.FriendSourceFlags.MUTUAL_FRIENDS,
                          c.FriendSourceFlags.NO_RELATION
                        )
                  ),
                children:
                  S.default.Messages.FRIEND_PERMITTED_SOURCE_MUTUAL_FRIENDS,
              }),
              (0, a.jsx)(r.FormSwitch, {
                value: t.all || t.mutualGuilds,
                onChange: t =>
                  u.FriendSourceFlagsSetting.updateSetting(
                    t
                      ? o.addFlag(e, c.FriendSourceFlags.MUTUAL_GUILDS)
                      : o.removeFlags(
                          e,
                          c.FriendSourceFlags.MUTUAL_GUILDS,
                          c.FriendSourceFlags.NO_RELATION
                        )
                  ),
                children:
                  S.default.Messages.FRIEND_PERMITTED_SOURCE_MUTUAL_GUILDS,
              }),
            ],
          }),
        });
      }
    },
    688413: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return V;
          },
        }),
        s("222007");
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("446674"),
        o = s("669491"),
        d = s("77078"),
        u = s("823411"),
        c = s("133403"),
        S = s("161454"),
        E = s("810549"),
        T = s("546463"),
        f = s("686470"),
        _ = s("941886"),
        m = s("931138"),
        g = s("398288"),
        h = s("462579"),
        N = s("867544"),
        I = s("907566"),
        p = s("267675"),
        C = s("688342"),
        A = s("486952"),
        O = s("599110"),
        x = s("117362"),
        M = s("773336"),
        R = s("161778"),
        D = s("49111"),
        v = s("782340"),
        L = s("148277"),
        P = s("678016"),
        j = s("125047"),
        b = s("685691"),
        U = s("890957");
      let y = r.default.connectStores([R.default], () => ({
          theme: R.default.theme,
        }))(_.default),
        B = (0, M.isWindows)();
      function F(e) {
        let { onClose: t } = e,
          s = (0, r.useStateFromStores)([S.default], () =>
            S.default.getCandidateGames()
          ),
          [l, o] = n.useState(null),
          c = s.map(e => ({
            value: e.pid,
            label: null != e.name ? e.name : "",
          }));
        return (0, a.jsxs)(d.Dialog, {
          className: i(L.addGamePopout, P.elevationBorderHigh),
          "aria-label": v.default.Messages.SETTINGS_GAMES_ADD_NEW_GAME,
          children: [
            (0, a.jsx)(d.SearchableSelect, {
              placeholder: v.default.Messages.SELECT,
              value: l,
              options: c,
              onChange: function (e) {
                o(e);
              },
            }),
            (0, a.jsx)(d.FormDivider, {
              className: i(U.marginTop8, U.marginBottom8),
            }),
            (0, a.jsxs)("div", {
              className: i(L.actions, j.horizontal),
              children: [
                (0, a.jsx)(d.Button, {
                  className: L.cancelButton,
                  look: d.ButtonLooks.LINK,
                  color: d.ButtonColors.PRIMARY,
                  onClick: t,
                  children: v.default.Messages.CANCEL,
                }),
                (0, a.jsx)(d.Button, {
                  disabled: null == l,
                  onClick: function () {
                    null != l && (u.default.addGame(l), t());
                  },
                  children: v.default.Messages.SETTINGS_GAMES_ADD_NEW_GAME,
                }),
              ],
            }),
          ],
        });
      }
      function G(e) {
        var t;
        let { rawGame: s, nowPlaying: l = !1, isOverride: E } = e,
          _ = (0, r.useStateFromStoresObject)(
            [T.default, S.default, f.default],
            () => (0, S.transformForGameSettings)(s)
          ),
          [x, M] = n.useState(!1),
          [R, P] = n.useState(
            null !== (t = _.name) && void 0 !== t ? t : "???"
          ),
          U = i(j.flexCenter, {
            [L.game]: !l,
            [L.activeGame]: l,
            [b.card]: !l,
            [L.nowPlaying]: null != _ && l,
          });
        function y() {
          u.default.deleteEntry(_);
        }
        function F() {
          _.name !== R && u.default.editName(_, R);
        }
        function G(e) {
          13 === e.keyCode && (e.currentTarget.blur(), e.preventDefault());
        }
        function k() {
          u.default.toggleDetection(_);
        }
        function H() {
          if (x) return;
          let e = null != _.id ? T.default.getDetectableGame(_.id) : null;
          O.default.track(
            D.AnalyticEvents.USER_SETTINGS_REPORT_INCORRECT_GAME_DETECTION,
            { application_id: null == e ? void 0 : e.id, game_name: _.name }
          ),
            (0, d.showToast)(
              (0, d.createToast)(
                v.default.Messages.SETTINGS_GAMES_REPORT_INCORRECT_DETECTION_CONFIRMATION.format(
                  { gameName: _.name }
                ),
                d.ToastType.SUCCESS
              )
            ),
            M(!0);
        }
        return (0, a.jsxs)("div", {
          className: U,
          children: [
            (0, a.jsxs)("div", {
              className: i(L.gameNameLastPlayed, j.vertical),
              children: [
                _.verified && !E
                  ? (0, a.jsxs)("div", {
                      className: L.detectedApplication,
                      children: [
                        (0, a.jsx)("div", {
                          className: L.gameName,
                          children: _.name,
                        }),
                        (0, a.jsx)(d.Tooltip, {
                          text: v.default.Messages.SETTINGS_GAMES_VERIFIED_ICON,
                          children: e =>
                            (0, a.jsx)(m.default, {
                              className: L.gameVerifiedIcon,
                              size: 18,
                              color: o.default.unsafe_rawColors.BRAND_500.css,
                              ...e,
                              children: (0, a.jsx)(A.default, {
                                width: 18,
                                height: 18,
                                color: o.default.unsafe_rawColors.WHITE_500.css,
                              }),
                            }),
                        }),
                      ],
                    })
                  : (0, a.jsx)("input", {
                      className: i(L.gameName, L.gameNameInput),
                      type: "text",
                      maxLength: 128,
                      value: R,
                      onBlur: F,
                      onKeyDown: G,
                      onChange: e => P(e.target.value),
                    }),
                (function () {
                  let e;
                  let { played: t, exePath: s } = _;
                  return (
                    l
                      ? (e =
                          v.default.Messages.SETTINGS_GAMES_NOW_PLAYING_STATE)
                      : null != t &&
                        "" !== t &&
                        (e =
                          v.default.Messages.SETTINGS_GAMES_LAST_PLAYED.format({
                            when: t,
                          })),
                    (0, a.jsx)("div", {
                      className: L.lastPlayed,
                      children: (0, a.jsx)(g.default, {
                        hoverText: null != s && "" !== s ? s.toUpperCase() : "",
                        children: e,
                      }),
                    })
                  );
                })(),
              ],
            }),
            E
              ? null
              : x
                ? null
                : (0, a.jsx)("div", {
                    className: i(
                      j.flexCenter,
                      j.noWrap,
                      j.justifyBetween,
                      L.toggleContainer
                    ),
                    children: (0, a.jsx)(d.Tooltip, {
                      text: v.default.Messages
                        .SETTINGS_GAMES_REPORT_INCORRECT_DETECTION,
                      children: e => {
                        let { onMouseEnter: t, onMouseLeave: s } = e;
                        return (0, a.jsx)(d.Clickable, {
                          "aria-label":
                            v.default.Messages
                              .SETTINGS_GAMES_REPORT_INCORRECT_DETECTION,
                          className: L.toggleIcon,
                          onClick: H,
                          onMouseEnter: t,
                          onMouseLeave: s,
                          children: (0, a.jsx)(I.default, {
                            className: L.toggleIconOn,
                            foreground: L.fill,
                            width: 24,
                            height: 24,
                          }),
                        });
                      },
                    }),
                  }),
            (function () {
              let { detectable: e } = _,
                t = e
                  ? (0, a.jsx)(h.default, {
                      className: L.toggleIconOn,
                      foreground: L.fill,
                      width: 24,
                      height: 24,
                    })
                  : (0, a.jsx)(N.default, {
                      className: L.toggleIconOff,
                      background: L.fill,
                      foreground: L.fill,
                      width: 24,
                      height: 24,
                    });
              return (0, a.jsx)("div", {
                className: i(
                  j.flexCenter,
                  j.noWrap,
                  j.justifyBetween,
                  L.toggleContainer
                ),
                children: (0, a.jsx)(d.Tooltip, {
                  text: v.default.Messages.SETTINGS_GAMES_TOGGLE_DETECTION,
                  children: e => {
                    let { onMouseEnter: s, onMouseLeave: n } = e;
                    return (0, a.jsx)(d.Clickable, {
                      "aria-label":
                        v.default.Messages.SETTINGS_GAMES_TOGGLE_DETECTION,
                      className: L.toggleIcon,
                      onClick: k,
                      onMouseEnter: s,
                      onMouseLeave: n,
                      children: t,
                    });
                  },
                }),
              });
            })(),
            (function () {
              if (!B) return null;
              let { overlay: e, overlayWarn: t } = _,
                s = e
                  ? (0, a.jsx)(p.default, {
                      className: L.toggleIconOn,
                      foreground: L.fill,
                    })
                  : (0, a.jsx)(C.default, {
                      className: L.toggleIconOff,
                      foreground: L.fill,
                    }),
                n = t
                  ? (0, a.jsx)(d.Tooltip, {
                      text: v.default.Messages.SETTINGS_GAMES_OVERLAY_WARNING,
                      children: e =>
                        (0, a.jsx)("i", {
                          className: L.overlayWarningIcon,
                          ...e,
                        }),
                    })
                  : null;
              return (0, a.jsxs)("div", {
                className: i(
                  j.flexCenter,
                  j.noWrap,
                  j.justifyBetween,
                  L.toggleContainer
                ),
                children: [
                  n,
                  (0, a.jsx)(d.Tooltip, {
                    text: v.default.Messages.SETTINGS_GAMES_TOGGLE_OVERLAY,
                    children: t => {
                      let { onMouseEnter: n, onMouseLeave: l } = t;
                      return (0, a.jsx)(d.Clickable, {
                        "aria-label":
                          v.default.Messages.SETTINGS_GAMES_TOGGLE_OVERLAY,
                        className: L.toggleIcon,
                        onClick: () => {
                          var t;
                          return (t = !e), void u.default.toggleOverlay(_, t);
                        },
                        onMouseEnter: n,
                        onMouseLeave: l,
                        children: s,
                      });
                    },
                  }),
                ],
              });
            })(),
            !l || E
              ? (0, a.jsx)(c.default, { className: L.removeGame, onClick: y })
              : null,
          ],
        });
      }
      function k() {
        return (0, a.jsx)("div", {
          className: i(j.flexCenter, L.notDetected, L.activeGame),
          children: (0, a.jsxs)("div", {
            className: i(L.gameNameLastPlayed, j.vertical),
            children: [
              (0, a.jsx)("div", {
                className: L.gameName,
                children: v.default.Messages.SETTINGS_GAMES_NO_GAME_DETECTED,
              }),
              (0, a.jsx)("div", {
                className: L.lastPlayed,
                children: v.default.Messages.SETTINGS_GAMES_NOT_PLAYING,
              }),
            ],
          }),
        });
      }
      function H(e) {
        let { children: t } = e;
        return (0, a.jsxs)(y, {
          className: U.marginTop40,
          children: [
            (0, a.jsx)(_.EmptyStateImage, {
              darkSrc: s("867369"),
              lightSrc: s("200324"),
              width: 430,
              height: 250,
            }),
            t,
          ],
        });
      }
      let w = (0, x.cachedFunction)(function () {
        for (var e = arguments.length, t = Array(e), s = 0; s < e; s++)
          t[s] = arguments[s];
        return new Set(t.map(e => e.exePath));
      });
      var V = function () {
        let e = (0, r.useStateFromStoresArray)([S.default], () =>
            S.default.getGamesSeen(!0)
          ),
          { runningGame: t, overrideExePaths: s } = (0,
          r.useStateFromStoresObject)([S.default], () => ({
            runningGame: S.default.getVisibleGame(),
            overrideExePaths: w(...S.default.getOverrides()),
          }));
        return (
          n.useEffect(
            () => ((0, E.watchCandidateGames)(), E.stopWatchingCandidateGames),
            []
          ),
          (0, a.jsxs)(d.FormSection, {
            tag: "h1",
            title: v.default.Messages.REGISTERED_GAMES,
            children: [
              null != t
                ? (0, a.jsx)(
                    G,
                    {
                      rawGame: t,
                      isOverride: s.has(t.exePath),
                      nowPlaying: !0,
                    },
                    (0, S.gameKey)(t)
                  )
                : (0, a.jsx)(k, {}),
              (0, a.jsxs)("div", {
                className: i(
                  L.nowPlayingAdd,
                  U.marginReset,
                  U.marginTop8,
                  U.marginBottom20
                ),
                children: [
                  (0, a.jsx)("span", {
                    children: v.default.Messages.SETTINGS_GAMES_NOT_SEEING_GAME,
                  }),
                  (0, a.jsx)(d.Popout, {
                    renderPopout: e => {
                      let { closePopout: t } = e;
                      return (0, a.jsx)(F, { onClose: t });
                    },
                    align: "center",
                    position: "bottom",
                    children: e =>
                      (0, a.jsx)(d.Button, {
                        ...e,
                        look: d.ButtonLooks.LINK,
                        size: d.ButtonSizes.MIN,
                        color: d.ButtonColors.LINK,
                        children: v.default.Messages.SETTINGS_GAMES_ADD_GAME,
                      }),
                  }),
                ],
              }),
              0 === e.length
                ? (0, a.jsx)(H, {
                    children: (0, a.jsx)(_.EmptyStateText, {
                      children:
                        v.default.Messages.SETTINGS_GAMES_NO_GAMES_HEADER,
                    }),
                  })
                : (0, a.jsxs)(d.FormSection, {
                    className: U.marginTop40,
                    children: [
                      (0, a.jsx)(d.FormTitle, {
                        className: U.marginBottom4,
                        children:
                          v.default.Messages.SETTINGS_GAMES_ADDED_GAMES_LABEL,
                      }),
                      e.map(e =>
                        (0, a.jsx)(
                          G,
                          { rawGame: e, isOverride: s.has(e.exePath) },
                          (0, S.gameKey)(e)
                        )
                      ),
                    ],
                  }),
            ],
          })
        );
      };
    },
    477596: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return N;
          },
        });
      var a = s("37983"),
        n = s("884691"),
        l = s("627445"),
        i = s.n(l),
        r = s("446674"),
        o = s("77078"),
        d = s("433426"),
        u = s("240760"),
        c = s("12013"),
        S = s("353802"),
        E = s("697218"),
        T = s("701909"),
        f = s("392409"),
        _ = s("49111"),
        m = s("782340"),
        g = s("384234");
      class h extends n.PureComponent {
        renderIntroHeader() {
          let { houseMembership: e } = this.props;
          return null == e
            ? m.default.Messages.HYPESQUAD_HEADING
            : m.default.Messages.HYPESQUAD_HEADING_EXISTING_MEMBER;
        }
        render() {
          let { houseMembership: e, isClaimed: t, isVerified: s } = this.props;
          return (0, a.jsxs)(o.HeadingLevel, {
            component: (0, a.jsxs)("div", {
              className: g.intro,
              children: [
                (0, a.jsx)(o.Heading, {
                  variant: "heading-xxl/semibold",
                  className: g.introHeader,
                  children: this.renderIntroHeader(),
                }),
                (0, a.jsx)(o.Text, {
                  variant: "text-lg/normal",
                  children: m.default.Messages.HYPESQUAD_SUBHEADING,
                }),
              ],
            }),
            children: [
              (0, a.jsx)(f.default, {
                className: g.verificationNotice,
                unclaimedNotice:
                  m.default.Messages.HYPESQUAD_UNCLAIMED_ACCOUNT_NOTICE,
                unverifiedNotice:
                  m.default.Messages.HYPESQUAD_UNVERIFIED_EMAIL_NOTICE,
              }),
              (0, a.jsx)(u.default, {
                houseMembership: e,
                isClaimed: t,
                isVerified: s,
              }),
              (0, a.jsx)(d.default, {}),
              (0, a.jsx)(c.default, { isHypeSquadOnlineMember: null != e }),
              (0, a.jsx)(o.Card, {
                className: g.attendeeCTA,
                children: m.default.Messages.HYPESQUAD_ATTENDEE_CTA.format({
                  url: T.default.getArticleURL(
                    _.HelpdeskArticles.PROFILE_BADGES
                  ),
                }),
              }),
            ],
          });
        }
      }
      var N = r.default.connectStores([E.default, S.default], () => {
        let e = E.default.getCurrentUser();
        return (
          i(
            null != e,
            "UserSettingsHypeSquad: currentUser cannot be undefined"
          ),
          {
            houseMembership: S.default.getHouseMembership(),
            isClaimed: e.isClaimed(),
            isVerified: e.verified,
          }
        );
      })(h);
    },
    9047: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return g;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("77078"),
        l = s("901582"),
        i = s("812204"),
        r = s("619935"),
        o = s("245187"),
        d = s("388817"),
        u = s("835618"),
        c = s("374023"),
        S = s("49470"),
        E = s("566126"),
        T = s("832837"),
        f = s("49111"),
        _ = s("166604"),
        m = s("619351");
      function g() {
        let e = (0, c.useIsEligibleForQuests)({
            location: _.QuestsExperimentLocations.USER_SETTINGS_GIFT_INVENTORY,
            autoTrackExposure: !0,
          }),
          { enabled: t } = d.default.useExperiment(
            { location: "UserSettingsInventory" },
            { autoTrackExposure: !0 }
          ),
          s = (0, r.useBlockedPaymentsConfig)();
        return s
          ? (0, a.jsx)(o.BlockedPaymentsContentSettings, {})
          : (0, a.jsxs)(a.Fragment, {
              children: [
                t &&
                  (0, a.jsx)(u.default, {
                    location: i.default.USER_SETTINGS_GIFT_INVENTORY,
                    className: m.giftNitro,
                    imageClassName: m.giftNitroImage,
                    textContainerOverrideStyles: {
                      padding: "32px",
                      width: "360px",
                    },
                    analyticsLocation: {
                      page: f.AnalyticsPages.GIFTING_SETTINGS,
                      section: f.AnalyticsSections.GIFT_BANNER,
                    },
                  }),
                (0, a.jsx)(l.default, {
                  section:
                    f.AnalyticsSections.LIBRARY_INVENTORY_CODE_REDEMPTION,
                  children: (0, a.jsx)(E.default, {}),
                }),
                e &&
                  (0, a.jsx)(l.default, {
                    section: f.AnalyticsSections.QUESTS,
                    children: (0, a.jsx)(S.default, {}),
                  }),
                (0, a.jsx)(n.FormDivider, { className: m.divider }),
                (0, a.jsx)(l.default, {
                  section: f.AnalyticsSections.LIBRARY_INVENTORY_GIFTS_LIST,
                  children: (0, a.jsx)(T.default, {}),
                }),
              ],
            });
      }
    },
    656395: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return w;
          },
        }),
        s("222007"),
        s("424973");
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("917351"),
        o = s.n(r),
        d = s("446674"),
        u = s("669491"),
        c = s("77078"),
        S = s("913139"),
        E = s("133403"),
        T = s("278108"),
        f = s("347445"),
        _ = s("493765"),
        m = s("485328"),
        g = s("56947"),
        h = s("479788"),
        N = s("42887"),
        I = s("227602"),
        p = s("860957"),
        C = s("941886"),
        A = s("145131"),
        O = s("555158"),
        x = s("701909"),
        M = s("773336"),
        R = s("13798"),
        D = s("161778"),
        v = s("264278"),
        L = s("49111"),
        P = s("894282"),
        j = s("782340"),
        b = s("579937"),
        U = s("685691"),
        y = s("890957");
      function B(e) {
        let { children: t } = e,
          s = [
            _.KeybindGroup.MESSAGE,
            _.KeybindGroup.NAVIGATION,
            _.KeybindGroup.DND,
            _.KeybindGroup.CHAT,
            _.KeybindGroup.VOICE_AND_VIDEO,
            _.KeybindGroup.MISCELLANEOUS,
          ];
        return t(s);
      }
      let F = o((0, _.getDefaultLayoutContent)())
          .filter(
            e =>
              e.description !==
              j.default.Messages.KEYBIND_DESCRIPTION_MODAL_EASTER_EGG
          )
          .groupBy(e => e.group)
          .value(),
        G = d.default.connectStores([D.default], () => ({
          theme: D.default.theme,
        }))(C.default);
      class k extends n.PureComponent {
        renderMessage() {
          let { keybind: e } = this.props,
            t = R.toString(e.shortcut);
          return m.default.hasBind(t)
            ? (0, a.jsx)(c.FormText, {
                className: b.keybindMessage,
                type: c.FormTextTypes.DESCRIPTION,
                style: { color: u.default.unsafe_rawColors.RED_400.css },
                children: j.default.Messages.KEYBIND_CONFLICT,
              })
            : P.NavigationShortcuts.has(t)
              ? (0, a.jsx)(c.FormText, {
                  className: b.keybindMessage,
                  type: c.FormTextTypes.DESCRIPTION,
                  style: { color: u.default.unsafe_rawColors.RED_400.css },
                  children:
                    j.default.Messages.KEYBIND_NAVIGATION_CONFLICT.format({
                      keyboardNavArticle: x.default.getArticleURL(
                        L.HelpdeskArticles.KEYBOARD_NAVIGATION
                      ),
                    }),
                })
              : (0, a.jsx)(c.FormText, {
                  className: b.keybindMessage,
                  type: c.FormTextTypes.DESCRIPTION,
                  children: this.props.keybindDescriptions[e.action],
                });
        }
        render() {
          let { managed: e, enabled: t } = this.props.keybind;
          return (0, a.jsxs)(A.default, {
            direction: A.default.Direction.VERTICAL,
            className: i(b.keybindGroup, U.card),
            children: [
              !e &&
                (0, a.jsx)(E.default, {
                  "aria-label": j.default.Messages.REMOVE_KEYBIND,
                  className: b.removeKeybind,
                  onClick: this.handleDeleteKeybind,
                  look: E.default.Looks.FILLED,
                }),
              (0, a.jsxs)(A.default, {
                className: y.marginBottom8,
                children: [
                  (0, a.jsx)(A.default.Child, {
                    basis: "45%",
                    children: (0, a.jsx)(c.FormItem, {
                      title: j.default.Messages.USER_SETTINGS_KEYBINDS_ACTION,
                      className: b.item,
                      children: (0, a.jsx)(c.SingleSelect, {
                        value: this.props.keybind.action,
                        options: this.props.keybindActionTypes,
                        onChange: this.handleActionChanged,
                        isDisabled: e,
                      }),
                    }),
                  }),
                  (0, a.jsx)(A.default.Child, {
                    basis: "45%",
                    children: (0, a.jsx)(c.FormItem, {
                      title: j.default.Messages.USER_SETTINGS_KEYBINDS_KEYBIND,
                      className: b.item,
                      children: (0, a.jsx)(T.default, {
                        defaultValue: this.props.keybind.shortcut,
                        onChange: this.handleShortcutChange,
                      }),
                    }),
                  }),
                  (0, a.jsx)(A.default.Child, {
                    grow: 0,
                    shrink: 0,
                    children: (0, a.jsx)(c.FormItem, {
                      className: b.switch,
                      children: (0, a.jsx)(c.Tooltip, {
                        text: j.default.Messages
                          .USER_SETTINGS_KEYBIND_ENABLE_DISABLE,
                        children: e =>
                          (0, a.jsx)("div", {
                            ...e,
                            children: (0, a.jsx)(c.Switch, {
                              checked: t,
                              onChange: this.handleEnableDisable,
                            }),
                          }),
                      }),
                    }),
                  }),
                ],
              }),
              (0, a.jsx)(A.default.Child, { children: this.renderMessage() }),
              this.renderExtraSettings(),
            ],
          });
        }
        renderExtraSettings() {
          let { action: e } = this.props.keybind;
          if (e === L.GlobalKeybindActions.SWITCH_TO_VOICE_CHANNEL)
            return (0, a.jsx)(v.default, { keybind: this.props.keybind });
        }
        constructor(...e) {
          super(...e),
            (this.handleActionChanged = e => {
              S.default.setKeybind({ ...this.props.keybind, action: e });
            }),
            (this.handleShortcutChange = e => {
              S.default.setKeybind({ ...this.props.keybind, shortcut: e });
            }),
            (this.handleDeleteKeybind = () => {
              S.default.deleteKeybind(this.props.keybind.id);
            }),
            (this.handleEnableDisable = () => {
              let { keybind: e } = this.props;
              S.default.setKeybind({
                ...this.props.keybind,
                enabled: !e.enabled,
              });
            });
        }
      }
      class H extends n.PureComponent {
        componentDidMount() {
          S.default.enableAll(!1);
        }
        componentWillUnmount() {
          S.default.enableAll(!0);
        }
        get keybindActionTypes() {
          let {
              overlaySupported: e,
              canGoLive: t,
              allowSoundboard: s,
              enableClips: a,
            } = this.props,
            n = [
              {
                value: L.GlobalKeybindActions.UNASSIGNED,
                label: j.default.Messages.KEYBIND_UNASSIGNED,
              },
              {
                value: L.GlobalKeybindActions.PUSH_TO_TALK,
                label: j.default.Messages.KEYBIND_PUSH_TO_TALK,
              },
              {
                value: L.GlobalKeybindActions.PUSH_TO_TALK_PRIORITY,
                label: j.default.Messages.KEYBIND_PUSH_TO_TALK_PRIORITY,
              },
              {
                value: L.GlobalKeybindActions.PUSH_TO_MUTE,
                label: j.default.Messages.KEYBIND_PUSH_TO_MUTE,
              },
              {
                value: L.GlobalKeybindActions.TOGGLE_MUTE,
                label: j.default.Messages.KEYBIND_TOGGLE_MUTE,
              },
              {
                value: L.GlobalKeybindActions.TOGGLE_DEAFEN,
                label: j.default.Messages.KEYBIND_TOGGLE_DEAFEN,
              },
              {
                value: L.GlobalKeybindActions.TOGGLE_VOICE_MODE,
                label: j.default.Messages.KEYBIND_TOGGLE_VOICE_MODE,
              },
              {
                value: L.GlobalKeybindActions.TOGGLE_STREAMER_MODE,
                label: j.default.Messages.KEYBIND_TOGGLE_STREAM_MODE,
              },
            ];
          return (
            e &&
              (n.push({
                value: L.GlobalKeybindActions.TOGGLE_OVERLAY,
                label: j.default.Messages.KEYBIND_TOGGLE_OVERLAY,
              }),
              n.push({
                value: L.GlobalKeybindActions.TOGGLE_OVERLAY_INPUT_LOCK,
                label: j.default.Messages.KEYBIND_TOGGLE_OVERLAY_INPUT_LOCK,
              }),
              n.push({
                value:
                  L.GlobalKeybindActions.OVERLAY_ACTIVATE_REGION_TEXT_WIDGET,
                label: j.default.Messages.KEYBIND_ACTIVATE_OVERLAY_CHAT,
              })),
            t &&
              (0, M.isWindows)() &&
              n.push({
                value: L.GlobalKeybindActions.TOGGLE_GO_LIVE_STREAMING,
                label: j.default.Messages.KEYBIND_TOGGLE_GO_LIVE_STREAMING,
              }),
            (0, M.isDesktop)() &&
              (n.push(
                {
                  value: L.GlobalKeybindActions.NAVIGATE_BACK,
                  label: j.default.Messages.KEYBIND_NAVIGATE_BACK,
                },
                {
                  value: L.GlobalKeybindActions.NAVIGATE_FORWARD,
                  label: j.default.Messages.KEYBIND_NAVIGATE_FORWARD,
                },
                {
                  value: L.GlobalKeybindActions.SWITCH_TO_VOICE_CHANNEL,
                  label:
                    j.default.Messages
                      .USER_SETTINGS_KEYBINDS_SWITCH_TO_VOICE_CHANNEL_LABEL,
                },
                {
                  value: L.GlobalKeybindActions.DISCONNECT_FROM_VOICE_CHANNEL,
                  label:
                    j.default.Messages
                      .USER_SETTINGS_KEYBINDS_VOICE_CHANNEL_DISCONNECT_LABEL,
                }
              ),
              s &&
                n.push(
                  {
                    value: L.GlobalKeybindActions.SOUNDBOARD,
                    label: j.default.Messages.KEYBIND_SOUNDBOARD,
                  },
                  {
                    value: L.GlobalKeybindActions.SOUNDBOARD_HOLD,
                    label: j.default.Messages.KEYBIND_SOUNDBOARD_HOLD,
                  }
                ),
              a &&
                n.push({
                  value: L.GlobalKeybindActions.SAVE_CLIP,
                  label: j.default.Messages.CLIPS_SAVE,
                })),
            n
          );
        }
        get keybindDescriptions() {
          let {
              overlaySupported: e,
              canGoLive: t,
              enableClips: s,
            } = this.props,
            a = {
              [L.GlobalKeybindActions.UNASSIGNED]:
                j.default.Messages.KEYBIND_DESCRIPTION_UNASSIGNED,
              [L.GlobalKeybindActions.PUSH_TO_MUTE]:
                j.default.Messages.KEYBIND_DESCRIPTION_PUSH_TO_MUTE,
              [L.GlobalKeybindActions.PUSH_TO_TALK]:
                j.default.Messages.KEYBIND_DESCRIPTION_PUSH_TO_TALK,
              [L.GlobalKeybindActions.PUSH_TO_TALK_PRIORITY]:
                j.default.Messages.KEYBIND_DESCRIPTION_PUSH_TO_TALK_PRIORITY,
              [L.GlobalKeybindActions.TOGGLE_MUTE]:
                j.default.Messages.KEYBIND_DESCRIPTION_TOGGLE_MUTE,
              [L.GlobalKeybindActions.TOGGLE_DEAFEN]:
                j.default.Messages.KEYBIND_DESCRIPTION_TOGGLE_DEAFEN,
              [L.GlobalKeybindActions.TOGGLE_VOICE_MODE]:
                j.default.Messages.KEYBIND_DESCRIPTION_TOGGLE_VOICE_MODE,
              [L.GlobalKeybindActions.TOGGLE_STREAMER_MODE]:
                j.default.Messages.KEYBIND_DESCRIPTION_TOGGLE_STREAMER_MODE,
            };
          return (
            e &&
              ((a[L.GlobalKeybindActions.TOGGLE_OVERLAY] =
                j.default.Messages.KEYBIND_DESCRIPTION_TOGGLE_OVERLAY),
              (a[L.GlobalKeybindActions.TOGGLE_OVERLAY_INPUT_LOCK] =
                j.default.Messages.KEYBIND_DESCRIPTION_TOGGLE_OVERLAY_INPUT_LOCK)),
            t &&
              (0, M.isWindows)() &&
              (a[L.GlobalKeybindActions.TOGGLE_GO_LIVE_STREAMING] =
                j.default.Messages.KEYBIND_DESCRIPTION_TOGGLE_GO_LIVE_STREAMING),
            (0, M.isDesktop)() &&
              ((a[L.GlobalKeybindActions.NAVIGATE_BACK] =
                j.default.Messages.KEYBIND_DESCRIPTION_NAVIGATE_BACK),
              (a[L.GlobalKeybindActions.NAVIGATE_FORWARD] =
                j.default.Messages.KEYBIND_DESCRIPTION_NAVIGATE_FORWARD),
              (a[L.GlobalKeybindActions.SOUNDBOARD] = (0, M.isWindows)()
                ? j.default.Messages
                    .KEYBIND_DESCRIPTION_SOUNDBOARD_NO_POPOUT_WHEEL_SUPPORT
                : j.default.Messages.KEYBIND_DESCRIPTION_SOUNDBOARD),
              (a[L.GlobalKeybindActions.SOUNDBOARD_HOLD] = (0, M.isWindows)()
                ? j.default.Messages
                    .KEYBIND_DESCRIPTION_SOUNDBOARD_HOLD_NO_POPOUT_WHEEL_SUPPORT
                : j.default.Messages.KEYBIND_DESCRIPTION_SOUNDBOARD_HOLD),
              s &&
                (a[L.GlobalKeybindActions.SAVE_CLIP] =
                  j.default.Messages.CLIPS_KEYBIND_DESCRIPTION)),
            a
          );
        }
        renderKeybinds(e) {
          return e.map(e =>
            (0, a.jsx)(
              "div",
              {
                className: b.row,
                children: (0, a.jsx)(
                  k,
                  {
                    keybind: e,
                    keybindDescriptions: this.keybindDescriptions,
                    keybindActionTypes: this.keybindActionTypes,
                  },
                  e.id
                ),
              },
              e.id
            )
          );
        }
        renderEmpty(e) {
          if (0 === e.length)
            return (0, a.jsx)(G, {
              className: y.marginTop60,
              children: (0, a.jsx)(C.EmptyStateImage, {
                darkSrc: s("605149"),
                lightSrc: s("203017"),
                width: 320,
                height: 170,
              }),
            });
        }
        render() {
          let e = this.props.enableClips,
            t = o(this.props.keybinds)
              .reject(
                e =>
                  e.managed &&
                  ![
                    L.GlobalKeybindActions.OVERLAY_ACTIVATE_REGION_TEXT_WIDGET,
                    L.GlobalKeybindActions.SAVE_CLIP,
                  ].includes(e.action)
              )
              .reject(t => !e && t.action === L.GlobalKeybindActions.SAVE_CLIP)
              .reject(
                e =>
                  !this.props.allowSoundboard &&
                  (e.action === L.GlobalKeybindActions.SOUNDBOARD ||
                    e.action === L.GlobalKeybindActions.SOUNDBOARD_HOLD)
              )
              .sortBy(e => e.id)
              .sortBy(e => (!0 === e.managed ? -1 : 0))
              .value();
          return (0, a.jsxs)(a.Fragment, {
            children: [
              (0, a.jsx)(c.FormSection, {
                tag: c.FormTitleTags.H1,
                title: j.default.Messages.KEYBINDS,
                children: M.isPlatformEmbedded
                  ? (0, a.jsxs)(a.Fragment, {
                      children: [
                        (0, a.jsxs)(A.default, {
                          justify: A.default.Justify.BETWEEN,
                          className: y.marginBottom20,
                          children: [
                            (0, a.jsx)(A.default.Child, {
                              grow: 0,
                              children: (0, a.jsx)(O.default, {
                                messageType: O.HelpMessageTypes.WARNING,
                                children:
                                  j.default.Messages.ADD_KEYBIND_WARNING,
                              }),
                            }),
                            (0, a.jsx)(A.default.Child, {
                              wrap: !0,
                              grow: 0,
                              children: (0, a.jsx)(c.Button, {
                                size: c.ButtonSizes.LARGE,
                                onClick: this.handleAddKeybind,
                                children: j.default.Messages.ADD_KEYBIND,
                              }),
                            }),
                          ],
                        }),
                        (0, a.jsx)(c.FormDivider, {}),
                        (0, a.jsxs)(c.FormSection, {
                          children: [
                            this.renderKeybinds(t),
                            this.renderEmpty(t),
                          ],
                        }),
                      ],
                    })
                  : (0, a.jsx)(O.default, {
                      messageType: O.HelpMessageTypes.INFO,
                      textVariant: "text-lg/medium",
                      className: b.browserNotice,
                      children:
                        j.default.Messages.KEYBIND_IN_BROSWER_NOTICE.format({
                          downloadLink: L.MarketingURLs.DOWNLOAD,
                        }),
                    }),
              }),
              (0, a.jsx)(c.FormDivider, {}),
              (0, a.jsxs)(c.FormSection, {
                tag: c.FormTitleTags.H1,
                title:
                  j.default.Messages
                    .USER_SETTINGS_KEYBINDS_DEFAULT_KEYBINDS_TITLE,
                className: y.marginTop60,
                children: [
                  (0, a.jsxs)("div", {
                    className: b.defaultKeybind,
                    children: [
                      (0, a.jsx)(c.Text, {
                        variant: "text-md/normal",
                        children:
                          j.default.Messages
                            .USER_SETTINGS_KEYBINDS_SHOW_LIST_TITLE,
                      }),
                      (0, a.jsx)("div", {
                        className: b.defaultKeybindShortcutGroup,
                        children: (0, a.jsx)(c.KeyCombo, {
                          shortcut: f.TOGGLE_HOTKEYS.binds[0],
                          className: b.defaultKeybindShortcut,
                        }),
                      }),
                    ],
                  }),
                  (0, a.jsx)(c.FormDivider, {}),
                  (0, a.jsx)(B, {
                    children: e =>
                      (0, a.jsx)(a.Fragment, {
                        children: e.map((e, t) => {
                          let s = (0, _.getNameForKeybindGroup)(e),
                            l = (0, _.getDescriptionForKeybindGroup)(e),
                            r = F[e];
                          return (0, a.jsxs)(
                            "div",
                            {
                              className: b.defaultKeybindGroup,
                              children: [
                                (0, a.jsx)(c.Heading, {
                                  variant: "heading-deprecated-12/semibold",
                                  className: i(b.defaultKeybindGroupHeader, {
                                    [b.defaultKeybindGroupWithDescription]:
                                      null != l,
                                  }),
                                  children: s,
                                }),
                                null != l &&
                                  (0, a.jsx)(c.Text, {
                                    color: "header-secondary",
                                    className: b.defaultKeybindGroupDescription,
                                    variant: "text-sm/normal",
                                    children: l,
                                  }),
                                (0, a.jsx)(c.FormDivider, {}),
                                r.map(e =>
                                  (0, a.jsxs)(
                                    n.Fragment,
                                    {
                                      children: [
                                        (0, a.jsxs)("div", {
                                          className: b.defaultKeybind,
                                          children: [
                                            (0, a.jsx)(c.Text, {
                                              variant: "text-md/normal",
                                              children: e.description,
                                            }),
                                            (0, a.jsx)("div", {
                                              className:
                                                b.defaultKeybindShortcutGroup,
                                              children: e.binds.map(e =>
                                                (0, a.jsx)(
                                                  c.KeyCombo,
                                                  { shortcut: e },
                                                  e
                                                )
                                              ),
                                            }),
                                          ],
                                        }),
                                        (0, a.jsx)(c.FormDivider, {}),
                                      ],
                                    },
                                    e.description
                                  )
                                ),
                              ],
                            },
                            t
                          );
                        }),
                      }),
                  }),
                ],
              }),
            ],
          });
        }
        constructor(...e) {
          super(...e),
            (this.handleAddKeybind = () => {
              S.default.addKeybind();
            });
        }
      }
      function w() {
        let e = (0, d.useStateFromStores)([I.default], () =>
            I.default.getState()
          ),
          t = (0, d.useStateFromStores)([N.default], () =>
            (0, h.default)(N.default)
          ),
          s = (0, d.useStateFromStores)([p.default], () =>
            p.default.isSupported()
          ),
          n = (0, g.useEnableClips)();
        return (0, a.jsx)(H, {
          keybinds: e,
          canGoLive: t,
          overlaySupported: s,
          allowSoundboard: (0, M.isWindows)(),
          enableClips: n,
        });
      }
    },
    960261: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return S;
          },
        }),
        s("222007");
      var a = s("37983"),
        n = s("884691"),
        l = s("446674"),
        i = s("77078"),
        r = s("452804"),
        o = s("915639"),
        d = s("782340"),
        u = s("295592"),
        c = s("390493"),
        S = l.default.connectStores([o.default], () => ({
          currentLocale: o.default.locale,
        }))(function (e) {
          let [t, l] = n.useState(e.currentLocale),
            [o] = n.useState(() =>
              d.default.getAvailableLocales().map(e => {
                let t;
                try {
                  t = s("20860")(
                    "@discordapp/common/images/flags/"
                      .concat(e.value, ".png")
                      .replace("@discordapp/common/images/flags/", "./")
                  );
                } catch (e) {
                  t = s("799987");
                }
                return {
                  ...e,
                  name: (0, a.jsxs)("div", {
                    className: u.option,
                    children: [
                      (0, a.jsx)("span", {
                        className: u.localeName,
                        children: e.name,
                      }),
                      (0, a.jsx)("span", {
                        className: u.localizedName,
                        children: e.localizedName,
                      }),
                      (0, a.jsx)("div", {
                        className: u.flag,
                        "aria-hidden": !0,
                        children: (0, a.jsx)("img", {
                          alt: "",
                          src: t,
                          className: u.flagImage,
                        }),
                      }),
                    ],
                  }),
                };
              })
            ),
            S = n.useCallback(e => {
              let { value: t } = e;
              l(t), c.nextTick(() => r.default.updateLocale(t));
            }, []);
          return (0, a.jsx)(i.FormSection, {
            tag: i.FormTitleTags.H1,
            title: d.default.Messages.LANGUAGE,
            children: (0, a.jsx)(i.FormSection, {
              children: (0, a.jsx)(i.FormItem, {
                title: d.default.Messages.LANGUAGE_SELECT,
                children: (0, a.jsx)(i.RadioGroup, {
                  onChange: S,
                  options: o,
                  value: t,
                }),
              }),
            }),
          });
        });
    },
    699501: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return w;
          },
        }),
        s("222007"),
        s("808653");
      var a,
        n,
        l = s("37983"),
        i = s("884691"),
        r = s("414456"),
        o = s.n(r),
        d = s("768961"),
        u = s("300036"),
        c = s("446674"),
        S = s("862337"),
        E = s("225389"),
        T = s("998460"),
        f = s("77078"),
        _ = s("206230"),
        m = s("812204"),
        g = s("685665"),
        h = s("841026"),
        N = s("204062"),
        I = s("976028"),
        p = s("4452"),
        C = s("724001"),
        A = s("193694"),
        O = s("508577"),
        x = s("638131"),
        M = s("471671"),
        R = s("181114"),
        D = s("703712"),
        v = s("718517"),
        L = s("630615"),
        P = s("782340"),
        j = s("449617");
      function b() {
        let e = (0, c.useStateFromStores)([M.default], () =>
            M.default.isFocused()
          ),
          t = (0, c.useStateFromStores)(
            [_.default],
            () => _.default.useReducedMotion
          ),
          [s, a] = i.useState(0),
          n = -1 === s;
        return (0, l.jsxs)(f.Clickable, {
          className: j.headerContainer,
          onClick: n
            ? void 0
            : () => {
                s > 0 && (s + 1) % 5 == 0 ? a(-1) : a(s + 1);
              },
          children: [
            (0, l.jsx)(x.default, {
              className: j.headerBackground,
              pageMultiplier: 10,
            }),
            (0, l.jsx)(f.Heading, {
              variant: "display-md",
              className: j.header,
              color: "always-white",
              children: P.default.Messages.PACKAGES,
            }),
            (0, l.jsx)("div", {
              className: j.headerCTA,
              children: (0, l.jsxs)(R.default, {
                className: j.headerButton,
                innerClassName: j.innerButton,
                pauseAnimation: !e || t,
                onClick: e => {
                  e.stopPropagation(), (0, h.openLootbox)();
                },
                size: f.ButtonSizes.SMALL,
                color: f.ButtonColors.CUSTOM,
                children: [
                  (0, l.jsx)(C.default, {
                    className: j.buttonIconLarge,
                    color: f.tokens.colors.WHITE,
                  }),
                  P.default.Messages.USER_SETTINGS_PACKAGES_HEADER_CTA,
                ],
              }),
            }),
            n
              ? (0, l.jsx)("div", {
                  className: j.headerEasterEgg,
                  children: (0, l.jsx)(D.EasterEggAnimation, {
                    position: D.EasterEggPosition.BOTTOM_LEFT,
                    onAnimationComplete: () => {
                      a(0);
                    },
                    size: 120,
                  }),
                })
              : null,
          ],
        });
      }
      function U(e) {
        let { icon: t, text: s, count: a, fetchState: n } = e;
        return (0, l.jsxs)("div", {
          className: j.stat,
          children: [
            (0, l.jsx)(t, { color: f.tokens.colors.TEXT_MUTED }),
            (0, l.jsx)(f.Text, {
              className: j.statText,
              variant: "text-xs/bold",
              color: "text-muted",
              children: s,
            }),
            (0, l.jsx)(f.Text, {
              variant: "text-lg/bold",
              color: "text-primary",
              children:
                n === N.FetchState.FETCHED
                  ? a.toLocaleString()
                  : (0, l.jsx)(f.Spinner, {}),
            }),
          ],
        });
      }
      let y = v.default.Millis.SECOND,
        B = 2 * v.default.Millis.SECOND;
      function F() {
        let e = (0, L.getLootboxes)(),
          [t, s, a, n, r, o, E] = (0, c.useStateFromStoresArray)(
            [N.default],
            () => [
              N.default.userDataFetchState,
              N.default.globalOpenedCountFetchState,
              N.default.openedItems,
              N.default.globalOpenedCount,
              N.default.lastGlobalOpenedCount,
              N.default.globalOpenedCountFetchTime,
              N.default.nextGlobalOpenedCountFetchDelay,
            ]
          ),
          T = i.useMemo(() => Object.values(a).reduce((e, t) => e + t, 0), [a]),
          [f] = i.useState(() => new S.Timeout()),
          [_, m] = i.useState(0),
          g = Math.floor((0, p.default)(r, n, _));
        return (
          i.useEffect(() => {
            m(0);
          }, [n, r]),
          i.useEffect(
            () => (
              f.start((0, I.randomBetween)(y, B), () => {
                if (_ < 1) {
                  let e = Math.min((Date.now() - o) / E, 1);
                  m(e);
                }
              }),
              () => f.stop()
            ),
            [r, E, n, o, f, _]
          ),
          (0, l.jsxs)("div", {
            className: j.stats,
            children: [
              (0, l.jsx)(U, {
                icon: u.TicketIcon,
                text: P.default.Messages.PACKAGES_PACKAGES_OPENED,
                count: T,
                fetchState: t,
              }),
              (0, l.jsx)(U, {
                icon: C.default,
                text: P.default.Messages.PACKAGES_UNIQUE_PACKAGES_OPENED,
                count: P.default.Messages.PACKAGES_OPENED_OUT_OF.format({
                  count: Object.keys(a).filter(e => a[e] > 0).length,
                  total: Object.keys(e).length,
                }),
                fetchState: t,
              }),
              (0, l.jsx)(U, {
                icon: d.GlobeEarthIcon,
                text: P.default.Messages.PACKAGES_GLOBAL_PACKAGES_OPENED,
                count: g,
                fetchState: s,
              }),
            ],
          })
        );
      }
      function G() {
        let [e, t, a] = (0, c.useStateFromStoresArray)([N.default], () => [
            N.default.openedItems,
            N.default.redeemedPrize,
            N.default.userDataFetchState,
          ]),
          n = (0, L.getLootboxes)(),
          r = i.useMemo(
            () =>
              Object.keys(e).length === Object.keys(n).length &&
              !Object.values(e).some(e => 0 === e),
            [e, n]
          ),
          o = async () => {
            await (0, h.redeemPrize)(),
              (0, f.openModalLazy)(async () => {
                let { default: e } = await s
                  .el("657437")
                  .then(s.bind(s, "657437"));
                return t => (0, l.jsx)(e, { ...t });
              });
          },
          d =
            a === N.FetchState.FETCHED
              ? (0, l.jsxs)(l.Fragment, {
                  children: [
                    !t &&
                      r &&
                      (0, l.jsxs)("div", {
                        className: j.banner,
                        children: [
                          (0, l.jsxs)("div", {
                            className: j.inline,
                            children: [
                              (0, l.jsx)(E.CircleInformationIcon, {
                                width: 16,
                                height: 16,
                                color: f.tokens.colors.WHITE,
                              }),
                              (0, l.jsx)(f.Text, {
                                variant: "text-sm/medium",
                                color: "always-white",
                                children:
                                  P.default.Messages
                                    .USER_SETTINGS_PACKAGE_BANNER_DEFAULT,
                              }),
                            ],
                          }),
                          (0, l.jsxs)(f.Button, {
                            className: j.headerButton,
                            innerClassName: j.innerButton,
                            onClick: o,
                            size: f.ButtonSizes.TINY,
                            color: f.ButtonColors.CUSTOM,
                            children: [
                              (0, l.jsx)(T.GiftIcon, {
                                className: j.buttonIconSmall,
                                color: f.tokens.colors.WHITE,
                              }),
                              P.default.Messages
                                .USER_SETTINGS_PACKAGE_BANNER_CTA,
                            ],
                          }),
                        ],
                      }),
                    (0, l.jsx)("div", {
                      className: j.inventoryItems,
                      children: Object.keys(n).map(t => {
                        var s;
                        let a = n[t];
                        return (0, l.jsx)(
                          O.default,
                          {
                            image: a.image,
                            name: a.name,
                            sound: a.sound,
                            openedCount:
                              null !== (s = null == e ? void 0 : e[t]) &&
                              void 0 !== s
                                ? s
                                : 0,
                          },
                          t
                        );
                      }),
                    }),
                  ],
                })
              : (0, l.jsx)(f.Spinner, {});
        return (0, l.jsxs)(l.Fragment, {
          children: [
            (0, l.jsxs)(f.Heading, {
              variant: "heading-md/semibold",
              className: j.inventoryHeader,
              children: [
                P.default.Messages.USER_SETTINGS_PACKAGES_MAILBOX_HEADER,
                (0, l.jsx)(A.default, { className: j.inventoryHelpIcon }),
              ],
            }),
            (0, l.jsx)("div", { className: j.inventoryContainer, children: d }),
          ],
        });
      }
      function k(e) {
        let { children: t, className: s, onClick: a } = e;
        return (0, l.jsx)(f.Clickable, {
          className: o(j.noTextToSpeechButton, s),
          onClick: a,
          children: t,
        });
      }
      function H() {
        let [e, t] = i.useState(1),
          [s, a] = i.useState(!1),
          [n] = i.useState(new S.Timeout()),
          r = () => {
            a(!0),
              n.start((0, I.randomBetween)(200, 1e3), () => {
                t(e + 1), a(!1);
              });
          };
        return (
          i.useEffect(() => n.stop(), [n]),
          (0, l.jsx)("div", {
            className: j.noTextToSpeech,
            children: s
              ? (0, l.jsx)(f.Spinner, { className: j.noTextToSpeechSpinner })
              : (0, l.jsxs)(l.Fragment, {
                  children: [
                    (0, l.jsx)(f.Text, {
                      variant: "text-sm/bold",
                      children: (() => {
                        switch (e) {
                          case 1:
                            return P.default.Messages
                              .PACKAGES_NO_TEXT_TO_SPEECH_QUESTION_1;
                          case 2:
                            return P.default.Messages
                              .PACKAGES_NO_TEXT_TO_SPEECH_QUESTION_2;
                          case 3:
                            return P.default.Messages
                              .PACKAGES_NO_TEXT_TO_SPEECH_QUESTION_3;
                          case 4:
                            return P.default.Messages
                              .PACKAGES_NO_TEXT_TO_SPEECH_QUESTION_4;
                          case 5:
                            return P.default.Messages
                              .PACKAGES_NO_TEXT_TO_SPEECH_QUESTION_5;
                          case 6:
                            return P.default.Messages
                              .PACKAGES_NO_TEXT_TO_SPEECH_QUESTION_6;
                          case 7:
                            return P.default.Messages
                              .PACKAGES_NO_TEXT_TO_SPEECH_QUESTION_7;
                        }
                      })(),
                    }),
                    (() => {
                      switch (e) {
                        case 1:
                        case 4:
                        case 5:
                          return [
                            P.default.Messages
                              .PACKAGES_NO_TEXT_TO_SPEECH_ANSWER_YES,
                            P.default.Messages
                              .PACKAGES_NO_TEXT_TO_SPEECH_ANSWER_NO,
                          ];
                        case 2:
                          return [
                            P.default.Messages
                              .PACKAGES_NO_TEXT_TO_SPEECH_QUESTION_2_ANSWER_1,
                            P.default.Messages
                              .PACKAGES_NO_TEXT_TO_SPEECH_QUESTION_2_ANSWER_2,
                          ];
                        case 3:
                          return [
                            P.default.Messages
                              .PACKAGES_NO_TEXT_TO_SPEECH_QUESTION_3_ANSWER_1,
                            P.default.Messages
                              .PACKAGES_NO_TEXT_TO_SPEECH_QUESTION_3_ANSWER_2,
                          ];
                        case 6:
                          return [
                            P.default.Messages
                              .PACKAGES_NO_TEXT_TO_SPEECH_QUESTION_6_ANSWER_1,
                          ];
                        case 7:
                          return [];
                      }
                    })().map((e, t) =>
                      (0, l.jsx)(
                        k,
                        {
                          className:
                            0 === t ? j.noTextToSpeechButtonFirst : null,
                          onClick: r,
                          children: e,
                        },
                        t
                      )
                    ),
                  ],
                }),
          })
        );
      }
      function w() {
        let { AnalyticsLocationProvider: e } = (0, g.default)(
            m.default.PACKAGES
          ),
          t = (0, c.useStateFromStores)(
            [N.default],
            () => N.default.nextGlobalOpenedCountFetchDelay
          ),
          [s] = i.useState(() => new S.Timeout());
        return (
          i.useEffect(() => {
            (0, h.fetchUserLootboxData)();
          }, []),
          i.useEffect(
            () => (s.start(t, h.fetchCountStat), () => s.stop()),
            [t, s]
          ),
          (0, l.jsxs)(e, {
            children: [
              (0, l.jsx)(b, {}),
              (0, l.jsx)(F, {}),
              (0, l.jsx)(G, {}),
              (0, l.jsx)(H, {}),
            ],
          })
        );
      }
      ((n = a || (a = {}))[(n.QUESTION_1 = 1)] = "QUESTION_1"),
        (n[(n.QUESTION_2 = 2)] = "QUESTION_2"),
        (n[(n.QUESTION_3 = 3)] = "QUESTION_3"),
        (n[(n.QUESTION_4 = 4)] = "QUESTION_4"),
        (n[(n.QUESTION_5 = 5)] = "QUESTION_5"),
        (n[(n.QUESTION_6 = 6)] = "QUESTION_6"),
        (n[(n.QUESTION_7 = 7)] = "QUESTION_7");
    },
    436112: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return J;
          },
        }),
        s("424973"),
        s("222007");
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("917351"),
        o = s.n(r),
        d = s("446674"),
        u = s("77078"),
        c = s("404118"),
        S = s("193990"),
        E = s("519705"),
        T = s("533280"),
        f = s("862205"),
        _ = s("298878"),
        m = s("54346"),
        g = s("684581"),
        h = s("488284"),
        N = s("726778"),
        I = s("649649"),
        p = s("640497"),
        C = s("699668"),
        A = s("748021"),
        O = s("168067"),
        x = s("820974"),
        M = s("385649"),
        R = s("282109"),
        D = s("368121"),
        v = s("599110"),
        L = s("566673"),
        P = s("773336"),
        j = s("299039"),
        b = s("709681"),
        U = s("845579"),
        y = s("872173"),
        B = s("77809"),
        F = s("49111"),
        G = s("76618"),
        k = s("782340"),
        H = s("535831"),
        w = s("890957");
      function V(e) {
        let {
          label: t,
          enabled: s,
          disabled: n,
          onPreview: l,
          onChange: i,
          tooltip: r,
        } = e;
        return (0, a.jsx)(u.FormSwitch, {
          className: H.soundRow,
          value: s,
          onChange: i,
          disabled: n,
          tooltipNote: r,
          children: (0, a.jsxs)("div", {
            className: H.notificationSound,
            children: [
              (0, a.jsx)("div", { className: H.soundName, children: t }),
              (0, a.jsx)(u.Clickable, {
                className: H.soundIcon,
                onClick: l,
                "aria-label":
                  k.default.Messages.USER_SETTINGS_NOTIFICATIONS_PREVIEW_SOUND,
                children: (0, a.jsx)(D.default, {
                  width: 16,
                  height: 16,
                  className: H.icon,
                  "aria-hidden": !0,
                }),
              }),
            ],
          }),
        });
      }
      function Y(e) {
        let {
            disabledSounds: t,
            disableAllSounds: s,
            notifyMessagesInSelectedChannel: l,
          } = e,
          { allowAprilFoolsSoundpack: r } = O.default.useExperiment(
            { location: "791c79_1" },
            { autoTrackExposure: !1 }
          ),
          o = h.default.useIsRingtoneEligible();
        n.useEffect(() => {
          O.default.trackExposure({ location: "791c79_3" });
        }, []);
        let d = n.useRef(),
          c = (0, N.useFocusModeEnabled)(),
          E = n.useCallback((e, t) => {
            t.stopPropagation(),
              t.preventDefault(),
              null != d.current && d.current.stop(),
              (d.current = b.playSound(e));
          }, []),
          T = n.useCallback(
            (e, s) => {
              let a = t.filter(t => t !== e);
              !s && a.push(e),
                e === g.default.ringtone &&
                  v.default.track(F.AnalyticEvents.EVENT_RINGTONE_TOGGLED, {
                    toggled_on: s,
                    sound_name: e,
                  }),
                S.default.setDisabledSounds(a);
            },
            [t]
          );
        n.useEffect(() => () => {
          var e;
          null === (e = d.current) || void 0 === e || e.stop();
        });
        let f = [
          {
            label: k.default.Messages.SOUND_MESSAGE,
            sound: "message1",
            focusModeDisabled: c,
          },
          { label: k.default.Messages.SOUND_DEAFEN, sound: "deafen" },
          { label: k.default.Messages.SOUND_UNDEAFEN, sound: "undeafen" },
          { label: k.default.Messages.MUTE, sound: "mute" },
          { label: k.default.Messages.UNMUTE, sound: "unmute" },
          {
            label: k.default.Messages.SOUND_VOICE_DISCONNECTED,
            sound: "disconnect",
          },
          { label: k.default.Messages.SOUND_PTT_ACTIVATE, sound: "ptt_start" },
          { label: k.default.Messages.SOUND_PTT_DEACTIVATE, sound: "ptt_stop" },
          { label: k.default.Messages.SOUND_USER_JOIN, sound: "user_join" },
          { label: k.default.Messages.SOUND_USER_LEAVE, sound: "user_leave" },
          { label: k.default.Messages.SOUND_USER_MOVED, sound: "user_moved" },
          {
            label: k.default.Messages.SOUND_OUTGOING_RING,
            sound: "call_calling",
          },
          {
            label: k.default.Messages.SOUND_INCOMING_RING,
            sound: "call_ringing",
          },
          ...(o
            ? [
                {
                  label: g.default.getRingtoneSettingsLabel(),
                  sound: g.default.ringtone,
                  disabled: t.includes("call_ringing"),
                },
              ]
            : []),
          {
            label: k.default.Messages.SOUND_STREAM_STARTED,
            sound: "stream_started",
          },
          {
            label: k.default.Messages.SOUND_STREAM_STOPPED,
            sound: "stream_ended",
          },
          {
            label: k.default.Messages.SOUND_VIEWER_JOIN,
            sound: "stream_user_joined",
          },
          {
            label: k.default.Messages.SOUND_VIEWER_LEAVE,
            sound: "stream_user_left",
          },
          {
            label: k.default.Messages.SOUND_ACTIVITY_START,
            sound: "activity_launch",
          },
          {
            label: k.default.Messages.SOUND_ACTIVITY_END,
            sound: "activity_end",
          },
          {
            label: k.default.Messages.SOUND_ACTIVITY_USER_JOIN,
            sound: "activity_user_join",
          },
          {
            label: k.default.Messages.SOUND_ACTIVITY_USER_LEAVE,
            sound: "activity_user_left",
          },
          {
            label: k.default.Messages.SOUND_INVITED_TO_SPEAK,
            sound: "reconnect",
          },
        ];
        return (0, a.jsxs)(u.FormSection, {
          tag: u.FormTitleTags.H1,
          title: k.default.Messages.SOUNDS,
          children: [
            r
              ? (0, a.jsxs)(a.Fragment, {
                  children: [
                    (0, a.jsx)(u.FormTitle, {
                      className: w.marginBottom20,
                      children: k.default.Messages.SOUNDPACK_LABEL,
                    }),
                    (0, a.jsx)(x.default, {
                      className: i(H.soundpackSelect, w.marginBottom40),
                    }),
                  ],
                })
              : null,
            (0, a.jsx)(u.FormSwitch, {
              note: k.default.Messages
                .USER_SETTINGS_NOTIFICATIONS_NOTIFY_MESSAGES_IN_SELECTED_CHANNEL_NOTE,
              value: l,
              onChange: S.default.setNotifyMessagesInSelectedChannel,
              children:
                k.default.Messages
                  .USER_SETTINGS_NOTIFICATIONS_NOTIFY_MESSAGES_IN_SELECTED_CHANNEL_LABEL,
            }),
            (0, a.jsx)(u.FormSwitch, {
              note: k.default.Messages.SOUND_DISABLE_ALL_NOTE,
              value: s,
              onChange: S.default.toggleDisableAllSounds,
              children: k.default.Messages.SOUND_DISABLE_ALL,
            }),
            f.map(e => {
              let { label: n, sound: l, disabled: i, focusModeDisabled: r } = e;
              return (0, a.jsx)(
                V,
                {
                  label: n,
                  disabled: s || !0 === i || !0 === r,
                  tooltip: r
                    ? k.default.Messages.QUIET_MODE_DISABLED_BY
                    : void 0,
                  onChange: e => T(l, e),
                  onPreview: e => E(l, e),
                  enabled: !s && !t.includes(l) && !0 !== r,
                },
                l
              );
            }),
          ],
        });
      }
      function K() {
        let e = (0, d.useStateFromStores)([m.default], () =>
            m.default.getGuildAlertSettings()
          ),
          [t, s] = n.useState(null),
          l = j.default.keys(e).map(t => {
            let s = e[t];
            return { label: s.guildName, value: s.guildId };
          });
        return 0 === Object.keys(e).length
          ? null
          : (0, a.jsxs)(a.Fragment, {
              children: [
                (0, a.jsxs)(u.Heading, {
                  variant: "heading-lg/semibold",
                  className: i(H.titleWithBeta, w.marginBottom20),
                  children: [
                    k.default.Messages.GUILD_COMMUNITY_ALERTS_HEADER,
                    (0, a.jsx)(_.default, {}),
                  ],
                }),
                (0, a.jsx)(u.FormText, {
                  type: u.FormTextTypes.DESCRIPTION,
                  className: w.marginBottom20,
                  children:
                    k.default.Messages.GUILD_COMMUNITY_ALERTS_DESCRIPTION,
                }),
                (0, a.jsxs)(u.FormItem, {
                  title:
                    k.default.Messages.GUILD_COMMUNITY_ALERTS_CHOOSE_SERVER,
                  children: [
                    (0, a.jsx)(u.SingleSelect, {
                      value: t,
                      onChange: e => {
                        s(e);
                      },
                      options: l,
                    }),
                    null != t
                      ? (0, a.jsxs)(a.Fragment, {
                          children: [
                            (0, a.jsx)(u.FormSwitch, {
                              className: i(w.marginBottom20, w.marginTop20),
                              note: k.default.Messages
                                .GUILD_COMMUNITY_ALERTS_NAG_DESCRIPTION,
                              value: !e[t].disableRaidAlertNag,
                              onChange: () => {
                                (0, y.updateUserGuildSettings)(
                                  t,
                                  e => {
                                    e.disableRaidAlertNag =
                                      !e.disableRaidAlertNag;
                                  },
                                  y.UserSettingsDelay.INFREQUENT_USER_ACTION
                                );
                              },
                              children:
                                k.default.Messages
                                  .GUILD_COMMUNITY_ALERTS_NAG_HEADER,
                            }),
                            (0, a.jsx)(u.FormSwitch, {
                              className: w.marginBottom20,
                              note: k.default.Messages
                                .GUILD_COMMUNITY_ALERTS_PUSH_DESCRIPTION,
                              value: !e[t].disableRaidAlertPush,
                              onChange: () => {
                                (0, y.updateUserGuildSettings)(
                                  t,
                                  e => {
                                    e.disableRaidAlertPush =
                                      !e.disableRaidAlertPush;
                                  },
                                  y.UserSettingsDelay.INFREQUENT_USER_ACTION
                                );
                              },
                              hideBorder: !0,
                              children:
                                k.default.Messages
                                  .GUILD_COMMUNITY_ALERTS_PUSH_HEADER,
                            }),
                          ],
                        })
                      : null,
                  ],
                }),
                (0, a.jsx)(u.FormDivider, {
                  className: i(
                    null != t ? w.marginTop20 : w.marginTop40,
                    w.marginBottom40
                  ),
                }),
              ],
            });
      }
      class W extends n.PureComponent {
        handleDesktopChange(e) {
          let t = e
            ? F.DesktopNotificationTypes.ALL
            : F.DesktopNotificationTypes.NEVER;
          if (t !== F.DesktopNotificationTypes.NEVER) {
            var s;
            (s = "UserSettingsModal"),
              L.default.requestPermission(e => {
                let t = e
                  ? F.NotificationPermissionTypes.ENABLED
                  : F.NotificationPermissionTypes.BLOCKED;
                S.default.setPermissionsState(t, s);
              });
          } else S.default.setDesktopType(t);
        }
        handleTTSChange(e) {
          let t = e.value;
          S.default.setTTSType(t);
        }
        render() {
          let {
              desktopType: e,
              afkTimeout: t,
              disableUnreadBadge: s,
              taskbarFlash: n,
              disabledSounds: l,
              disableAllSounds: r,
              notifyMessagesInSelectedChannel: d,
              focusMode: c,
            } = this.props,
            S = P.isPlatformEmbedded && (0, P.isWindows)(),
            E = o
              .range(1, 11)
              .map(e => ({
                value: 60 * e,
                label: k.default.Messages.DURATION_MINUTES.format({
                  minutes: e,
                }),
              }));
          return (0, a.jsxs)(u.FormSection, {
            tag: u.FormTitleTags.H1,
            title: k.default.Messages.NOTIFICATIONS,
            children: [
              (0, a.jsx)(u.FormSwitch, {
                className: w.marginBottom20,
                value: e !== F.DesktopNotificationTypes.NEVER && !c,
                onChange: this.handleDesktopChange,
                note: k.default.Messages.DESKTOP_NOTIFICATIONS_ENABLE_BODY,
                disabled: c,
                tooltipNote: c
                  ? k.default.Messages.QUIET_MODE_DISABLED_BY
                  : void 0,
                children: k.default.Messages.DESKTOP_NOTIFICATIONS_ENABLE,
              }),
              (0, a.jsx)(Q, {}),
              (0, a.jsx)(u.FormSwitch, {
                className: S ? w.marginBottom20 : w.marginBottom40,
                value: !s,
                note: k.default.Messages
                  .USER_SETTINGS_NOTIFICATIONS_SHOW_BADGE_BODY,
                onChange: this.handleToggleShowUnreadBadge,
                children:
                  k.default.Messages
                    .USER_SETTINGS_NOTIFICATIONS_SHOW_BADGE_LABEL,
              }),
              S
                ? (0, a.jsx)(u.FormSwitch, {
                    className: w.marginBottom40,
                    value: n,
                    note: k.default.Messages
                      .USER_SETTINGS_NOTIFICATIONS_SHOW_FLASH_BODY,
                    onChange: this.handleToggleShowFlash,
                    children:
                      k.default.Messages
                        .USER_SETTINGS_NOTIFICATIONS_SHOW_FLASH_LABEL,
                  })
                : null,
              (0, a.jsx)(X, {}),
              (0, a.jsxs)(u.FormItem, {
                title: k.default.Messages.FORM_LABEL_PUSH_AFK_TIMEOUT,
                children: [
                  (0, a.jsx)(u.SingleSelect, {
                    value: t,
                    onChange: U.AfkTimeout.updateSetting,
                    options: E,
                  }),
                  (0, a.jsx)(u.FormText, {
                    type: u.FormTextTypes.DESCRIPTION,
                    className: w.marginTop8,
                    children:
                      k.default.Messages.FORM_DESCRIPTION_PUSH_AFK_TIMEOUT,
                  }),
                  (0, a.jsx)(u.FormDivider, {
                    className: i(w.marginTop40, w.marginBottom40),
                  }),
                ],
              }),
              this.renderTTS(),
              (0, a.jsx)(u.FormDivider, {
                className: i(w.marginTop40, w.marginBottom40),
              }),
              (0, a.jsx)(K, {}),
              (0, a.jsx)(u.FormItem, {
                children: (0, a.jsx)(Y, {
                  disabledSounds: l,
                  disableAllSounds: r,
                  notifyMessagesInSelectedChannel: d,
                }),
              }),
              (0, a.jsx)(B.default, {}),
            ],
          });
        }
        constructor(...e) {
          super(...e),
            (this.handleToggleShowUnreadBadge = () => {
              S.default.setDisableUnreadBadge(!this.props.disableUnreadBadge);
            }),
            (this.handleToggleShowFlash = () => {
              S.default.setTaskbarFlash(!this.props.taskbarFlash);
            }),
            (this.renderTTS = () => {
              if (!T.supported) return null;
              let e = [
                {
                  name: k.default.Messages.TTS_ALLS,
                  value: F.TTSNotificationTypes.ALL_CHANNELS,
                },
                {
                  name: k.default.Messages.TTS_CURRENT,
                  value: F.TTSNotificationTypes.SELECTED_CHANNEL,
                },
                {
                  name: k.default.Messages.TTS_NEVER,
                  value: F.TTSNotificationTypes.NEVER,
                },
              ];
              return (0, a.jsxs)(u.FormItem, {
                title: k.default.Messages.FORM_LABEL_TTS_NOTIFICATIONS,
                children: [
                  (0, a.jsx)(u.FormText, {
                    type: u.FormTextTypes.DESCRIPTION,
                    className: w.marginBottom8,
                    children: k.default.Messages.FORM_DESCRIPTION_TTS,
                  }),
                  (0, a.jsx)(u.RadioGroup, {
                    options: e,
                    onChange: this.handleTTSChange,
                    value: this.props.ttsType,
                  }),
                ],
              });
            });
        }
      }
      let z = (0, f.createExperiment)({
        kind: "user",
        id: "2024-01_mention_on_all_messages",
        label: "Mention on all messages",
        defaultConfig: { enabled: !1 },
        treatments: [
          {
            id: 1,
            label:
              "Increment mention count when receiving a message in a channel set to all messages",
            config: { enabled: !0 },
          },
        ],
      });
      function Q() {
        let e = z.useExperiment(
            { location: "settings" },
            { autoTrackExposure: !1 }
          ).enabled,
          t = (0, d.useStateFromStores)(
            [R.default],
            () => R.default.mentionOnAllMessages
          );
        return e
          ? (0, a.jsx)(u.FormSwitch, {
              className: w.marginBottom20,
              value: t,
              onChange: e => {
                E.default.setAccountFlag(
                  G.AccountNotificationFlags.MENTION_ON_ALL_MESSAGES,
                  e
                );
              },
              note: "Increments the mention count when receiving a message in a channel set to 'All Messages'",
              children: "Mention on all messages?",
            })
          : null;
      }
      function X() {
        let e = p.NotificationsExperiment.useExperiment(
            { location: "UserSettingsNotifications" },
            { autoTrackExposure: !1 }
          ).enabled,
          { manuallyOpen: t } = p.UnreadsEntryPointExperiment.useExperiment(
            { location: "UserSettingsNotifications" },
            { autoTrackExposure: !1 }
          ),
          s = (0, d.useStateFromStores)(
            [R.default],
            () => R.default.useNewNotifications
          ),
          [l, i] = n.useState(!1);
        return e && (s || t)
          ? (0, a.jsxs)(a.Fragment, {
              children: [
                s
                  ? (0, a.jsx)(u.FormSwitch, {
                      className: w.marginBottom40,
                      style: { marginTop: -20 },
                      value: s,
                      disabled: l || !s,
                      note: k.default.Messages
                        .NOTIF_MIGRATION_SETTINGS_SUBTITLE,
                      onChange: () => q(i),
                      children:
                        k.default.Messages.NOTIF_MIGRATION_SETTINGS_TITLE,
                    })
                  : t
                    ? (0, a.jsx)(u.FormSwitch, {
                        className: w.marginBottom40,
                        style: { marginTop: -20 },
                        value: s,
                        disabled: l || s,
                        note: "Turns on the new notification system",
                        onChange: () => (0, A.openMigrationModal)(!0),
                        children:
                          k.default.Messages.NOTIF_MIGRATION_SETTINGS_TITLE,
                      })
                    : null,
                null,
              ],
            })
          : null;
      }
      async function q(e) {
        e(!0);
        let t = await (0, I.listSnapshots)();
        0 === t.length
          ? await (0, C.revertToOldSystem)()
          : c.default.show({
              title: k.default.Messages.CONFIRM,
              body: k.default.Messages.NOTIF_MIGRATION_SETTINGS_CONFIRM_BODY.format(
                { date: new Date(t[t.length - 1].recorded_at) }
              ),
              cancelText: k.default.Messages.CANCEL,
              confirmText:
                k.default.Messages.NOTIF_MIGRATION_SETTINGS_CONFIRM_ACTION,
              onConfirm: C.revertToOldSystem,
            }),
          e(!1);
      }
      function Z(e) {
        let t = (0, N.useFocusModeEnabled)();
        return (0, a.jsx)(W, { ...e, focusMode: t });
      }
      function J() {
        let e = (0, d.useStateFromStoresObject)([M.default], () => ({
          disableUnreadBadge: M.default.getDisableUnreadBadge(),
          taskbarFlash: M.default.taskbarFlash,
          disabledSounds: M.default.getDisabledSounds(),
          disableAllSounds: M.default.getDisableAllSounds(),
          desktopType: M.default.getDesktopType(),
          ttsType: M.default.getTTSType(),
          notifyMessagesInSelectedChannel:
            M.default.getNotifyMessagesInSelectedChannel(),
        }));
        return (0, a.jsx)(Z, { ...e, afkTimeout: U.AfkTimeout.useSetting() });
      }
    },
    194200: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return M;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("627445"),
        l = s.n(n),
        i = s("917351"),
        r = s.n(i),
        o = s("446674"),
        d = s("77078"),
        u = s("913139"),
        c = s("539405"),
        S = s("278108"),
        E = s("6193"),
        T = s("999819"),
        f = s("227602"),
        _ = s("860957"),
        m = s("901165"),
        g = s("314892"),
        h = s("599110");
      s("701909");
      var N = s("13798"),
        I = s("49111"),
        p = s("782340"),
        C = s("736353");
      let A = O(null);
      function O(e) {
        var t;
        let s = m.default.getNotificationPositionMode(),
          a = s !== I.OverlayNotificationPositions.DISABLED,
          n = f.default.getOverlayKeybind(),
          l = f.default.getOverlayChatKeybind();
        return {
          enabled: _.default.enabled,
          notifications_enabled: a,
          notifications_position: a ? s : null,
          text_notifications_mode: m.default.getTextChatNotificationMode(),
          hotkey: null != n ? (0, N.toString)(n.shortcut) : null,
          text_activation_hotkey:
            null != l ? (0, N.toString)(l.shortcut) : null,
          text_opacity_slider: m.default.getTextWidgetOpacity(),
          old_enabled:
            null !== (t = null == e ? void 0 : e.enabled) && void 0 !== t
              ? t
              : _.default.enabled,
        };
      }
      function x(e) {
        let { children: t, title: s } = e;
        return (0, a.jsx)(d.FormItem, {
          title: s,
          className: C.userSettingsOverlayField,
          children: t,
        });
      }
      function M() {
        let e = (0, o.useStateFromStores)([_.default], () => _.default.enabled),
          {
            avatarSizeMode: t,
            displayNameMode: s,
            displayUserMode: n,
            notificationPositionMode: i,
            textChatNotificationMode: N,
            shouldShowKeybindIndicators: M,
          } = (0, o.useStateFromStoresObject)([m.default], () => ({
            avatarSizeMode: m.default.getAvatarSizeMode(),
            displayNameMode: m.default.getDisplayNameMode(),
            displayUserMode: m.default.getDisplayUserMode(),
            notificationPositionMode: m.default.getNotificationPositionMode(),
            textChatNotificationMode: m.default.getTextChatNotificationMode(),
            shouldShowKeybindIndicators: m.default.showKeybindIndicators,
          })),
          R = (0, o.useStateFromStores)([f.default], () =>
            f.default.getOverlayKeybind()
          ),
          { showKeybindIndicators: D } = T.default.useExperiment({
            location: "overlay_user_settings",
          }),
          v = (0, E.isHookModuleTooOld)();
        return (
          !(function () {
            let e = O(A);
            !r.isEqual(e, A) &&
              (h.default.track(I.AnalyticEvents.OVERLAY_SETTINGS_UPDATED, e),
              (A = e));
          })(),
          (0, a.jsxs)(a.Fragment, {
            children: [
              (0, a.jsxs)(d.FormSection, {
                tag: d.FormTitleTags.H1,
                title: p.default.Messages.OVERLAY,
                children: [
                  !1,
                  (0, a.jsxs)("div", {
                    className: C.enableOverlaySection,
                    children: [
                      (0, a.jsx)(d.FormItem, {
                        title:
                          p.default.Messages
                            .SETTINGS_GAMES_ENABLE_OVERLAY_LABEL,
                        className: C.enableOverlayItem,
                        children: (0, a.jsx)(d.FormSwitch, {
                          className: C.enableSwitch,
                          value: e,
                          disabled: v,
                          note: v
                            ? p.default.Messages.OVERLAY_DISABLED_OLD_CLIENT
                            : null,
                          hideBorder: !0,
                          onChange: function (e) {
                            c.default.setEnabled(e),
                              h.default.track(
                                I.AnalyticEvents.OVERLAY_TOGGLED,
                                {
                                  enabled: e,
                                  setting_type: "overlay toggled - global",
                                }
                              );
                          },
                          children: p.default.Messages.ENABLE_INGAME_OVERLAY,
                        }),
                      }),
                      (0, a.jsx)(d.FormItem, {
                        title:
                          p.default.Messages.KEYBIND_TOGGLE_OVERLAY_INPUT_LOCK,
                        className: C.enableOverlayItem,
                        children: (0, a.jsx)(S.default, {
                          disabled: !e,
                          defaultValue: null != R ? R.shortcut : [],
                          onChange: function (e) {
                            l(null != R, "Keybind should never be undefined"),
                              u.default.setKeybind({ ...R, shortcut: e });
                          },
                        }),
                      }),
                    ],
                  }),
                  (0, a.jsx)(x, {
                    title: p.default.Messages.FORM_LABEL_AVATAR_SIZE,
                    children: (0, a.jsx)(d.RadioGroup, {
                      options: [
                        {
                          name: p.default.Messages.AVATAR_SIZE_OPTION_LARGE,
                          value: I.OverlayAvatarSizes.LARGE,
                        },
                        {
                          name: p.default.Messages.AVATAR_SIZE_OPTION_SMALL,
                          value: I.OverlayAvatarSizes.SMALL,
                        },
                      ],
                      onChange: e => {
                        let { value: t } = e;
                        return c.default.setAvatarSizeMode(t);
                      },
                      value: t,
                    }),
                  }),
                  (0, a.jsx)(x, {
                    title: p.default.Messages.FORM_LABEL_DISPLAY_NAMES,
                    children: (0, a.jsx)(d.RadioGroup, {
                      options: [
                        {
                          name: p.default.Messages.DISPLAY_OPTION_ALWAYS,
                          value: I.OverlayDisplayNames.ALWAYS,
                        },
                        {
                          name: p.default.Messages
                            .DISPLAY_OPTION_ONLY_WHILE_SPEAKING,
                          value: I.OverlayDisplayNames.ONLY_WHILE_SPEAKING,
                        },
                        {
                          name: p.default.Messages.DISPLAY_OPTION_NEVER,
                          value: I.OverlayDisplayNames.NEVER,
                        },
                      ],
                      onChange: e => {
                        let { value: t } = e;
                        return c.default.setDisplayNameMode(t);
                      },
                      value: s,
                    }),
                  }),
                  (0, a.jsx)(x, {
                    title: p.default.Messages.FORM_LABEL_DISPLAY_USERS,
                    children: (0, a.jsx)(d.RadioGroup, {
                      options: [
                        {
                          name: p.default.Messages.DISPLAY_OPTION_ALWAYS,
                          value: I.OverlayDisplayUsers.ALWAYS,
                        },
                        {
                          name: p.default.Messages
                            .DISPLAY_OPTION_ONLY_WHILE_SPEAKING,
                          value: I.OverlayDisplayUsers.ONLY_WHILE_SPEAKING,
                        },
                      ],
                      onChange: e => {
                        let { value: t } = e;
                        return c.default.setDisplayUserMode(t);
                      },
                      value: n,
                    }),
                  }),
                  D &&
                    (0, a.jsx)(x, {
                      children: (0, a.jsx)(d.FormSwitch, {
                        value: M,
                        onChange: e => c.default.setShowKeybindIndicators(e),
                        hideBorder: !0,
                        children:
                          p.default.Messages
                            .FORM_LABEL_OVERLAY_SHOW_MUTE_DEAFEN_KEYBINDS,
                      }),
                    }),
                ],
              }),
              (0, a.jsxs)(d.FormSection, {
                tag: d.FormTitleTags.H1,
                title: p.default.Messages.OVERLAY_NOTIFICATIONS_SETTINGS,
                className: C.notificationSection,
                children: [
                  (0, a.jsx)(x, {
                    title: p.default.Messages.FORM_LABEL_NOTIFICATION_POSITION,
                    children: (0, a.jsx)("div", {
                      className: C.notificationSettings,
                      children: (0, a.jsx)(g.default, {
                        position: i,
                        onChange: (e, t) =>
                          c.default.setNotificationPositionMode(t),
                      }),
                    }),
                  }),
                  (0, a.jsx)(x, {
                    children: (0, a.jsx)(d.FormSwitch, {
                      value:
                        i !== I.OverlayNotificationPositions.DISABLED &&
                        N === I.OverlayNotificationTextChatTypes.ENABLED,
                      disabled: i === I.OverlayNotificationPositions.DISABLED,
                      onChange: function () {
                        let { ENABLED: e, DISABLED: t } =
                          I.OverlayNotificationTextChatTypes;
                        c.default.setTextChatNotificationMode(N === e ? t : e);
                      },
                      hideBorder: !0,
                      children:
                        p.default.Messages
                          .FORM_LABEL_OVERLAY_TEXT_CHAT_NOTIFICATIONS,
                    }),
                  }),
                ],
              }),
            ],
          })
        );
      }
    },
    974926: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return h;
          },
        });
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("446674"),
        o = s("77078"),
        d = s("913144"),
        u = s("850068"),
        c = s("583367"),
        S = s("775433"),
        E = s("308592"),
        T = s("357957"),
        f = s("521012"),
        _ = s("889285"),
        m = s("49111"),
        g = s("263689");
      function h() {
        n.useEffect(() => {
          d.default.wait(() => {
            u.fetchSubscriptions(),
              u.fetchPaymentSources(),
              (0, c.fetchGuildBoostSlots)(),
              (0, S.fetchPremiumSubscriptionPlans)(
                null,
                null,
                m.RevenueSurfaces.DISCOVERY
              );
          });
        }, []);
        let { hasFetchedSubscriptions: e, premiumSubscription: t } = (0,
          r.useStateFromStoresObject)([f.default], () => ({
            hasFetchedSubscriptions: f.default.hasFetchedSubscriptions(),
            premiumSubscription: f.default.getPremiumTypeSubscription(),
          })),
          s = (0, E.useSubscriptionPlansLoaded)(),
          l = (0, r.useStateFromStores)(
            [T.default],
            () => T.default.hasFetchedPaymentSources
          );
        return e && s && l
          ? (0, a.jsxs)("div", {
              className: g.container,
              children: [
                (0, a.jsx)("div", { className: g.background }),
                (0, a.jsx)("div", {
                  className: g.content,
                  children: (0, a.jsx)(_.default, { premiumSubscription: t }),
                }),
              ],
            })
          : (0, a.jsx)("div", {
              className: i(g.container, g.loading),
              children: (0, a.jsx)(o.Spinner, {}),
            });
      }
    },
    905818: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return q;
          },
        }),
        s("222007"),
        s("843762"),
        s("506083");
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("627445"),
        o = s.n(r),
        d = s("866227"),
        u = s.n(d),
        c = s("446674"),
        S = s("151426"),
        E = s("77078"),
        T = s("404118"),
        f = s("629803"),
        _ = s("152584"),
        m = s("79112"),
        g = s("457971"),
        h = s("447435"),
        N = s("10130"),
        I = s("298878"),
        p = s("916650"),
        C = s("775032"),
        A = s("646356"),
        O = s("861348"),
        x = s("761771"),
        M = s("328564"),
        R = s("281098"),
        D = s("350522"),
        v = s("305961"),
        L = s("26092"),
        P = s("697218"),
        j = s("145131"),
        b = s("476765"),
        U = s("599110"),
        y = s("701909"),
        B = s("62418"),
        F = s("299039"),
        G = s("241088"),
        k = s("845579"),
        H = s("568456"),
        w = s("49111"),
        V = s("170213"),
        Y = s("782340"),
        K = s("718074"),
        W = s("890957");
      function z(e) {
        let { body: t, ...s } = e;
        (0, E.openModal)(e =>
          (0, a.jsx)(E.ConfirmModal, {
            ...e,
            ...s,
            children: (0, a.jsx)(E.Text, {
              variant: "text-md/normal",
              children: t,
            }),
          })
        );
      }
      function Q(e) {
        let { message: t } = e;
        z({
          header:
            Y.default.Messages.DATA_PRIVACY_CONTROLS_REQUEST_DATA_FAILURE_TITLE,
          confirmText: Y.default.Messages.OKAY,
          body: t,
        });
      }
      class X extends n.PureComponent {
        componentDidMount() {
          (0, f.fetchConsents)(),
            (0, _.getHarvestStatus)().then(
              e => {
                let t = {
                  requestingHarvest: !1,
                  currentHarvestRequest: e.body,
                };
                this.setState(t);
              },
              () => {
                this.setState({ requestingHarvest: !1 });
              }
            );
        }
        componentDidUpdate(e) {
          e.defaultGuildsRestricted !== this.props.defaultGuildsRestricted &&
            this.setState({
              defaultGuildsRestricted: this.props.defaultGuildsRestricted,
            });
        }
        showGuildRestrictionModal(e) {
          z({
            header: Y.default.Messages.USER_DM_SETTINGS_TITLE,
            body: Y.default.Messages.USER_DM_SETTINGS_DESCRIPTION,
            confirmText: Y.default.Messages.NO_TEXT,
            cancelText: Y.default.Messages.YES_TEXT,
            confirmButtonColor: E.Button.Colors.BRAND,
            onConfirm: () => {
              k.DefaultGuildsRestricted.updateSetting(e),
                this.trackDefaultDmsUpdated(e, !1);
            },
            onCancel: () => {
              k.DefaultGuildsRestricted.updateSetting(e),
                k.RestrictedGuildIds.updateSetting(
                  e ? F.default.keys(v.default.getGuilds()) : []
                ),
                this.trackDefaultDmsUpdated(e, !0);
            },
          });
        }
        trackDefaultDmsUpdated(e, t) {
          U.default.track(w.AnalyticEvents.GUILD_DEFAULT_DMS_UPDATED, {
            default_guilds_restricted: e,
            applied_to_existing_guilds: t,
          });
        }
        showMessageRequestRestrictionModal(e) {
          z({
            header:
              Y.default.Messages.MESSAGE_REQUESTS_SETTING_GENERAL_MODAL_HEADER,
            body: Y.default.Messages
              .MESSAGE_REQUESTS_SETTING_GENERAL_MODAL_DESCRIPTION,
            confirmText: Y.default.Messages.NO_TEXT,
            cancelText: Y.default.Messages.YES_TEXT,
            confirmButtonColor: E.Button.Colors.BRAND,
            onConfirm: () => {
              k.MessageRequestRestrictedDefault.updateSetting(e),
                this.trackDefaultMessageRequestUpdated(e, !1);
            },
            onCancel: () => {
              k.MessageRequestRestrictedDefault.updateSetting(e),
                k.MessageRequestRestrictedGuildIds.updateSetting(
                  e ? F.default.keys(v.default.getGuilds()) : []
                ),
                this.trackDefaultMessageRequestUpdated(e, !0);
            },
          });
        }
        trackDefaultMessageRequestUpdated(e, t) {
          U.default.track(
            w.AnalyticEvents.GUILD_DEFAULT_MESSAGE_REQUEST_UPDATED,
            { default_guilds_restricted: e, applied_to_existing_guilds: t }
          );
        }
        renderLegacyExplicitContentFilter(e) {
          return (0, a.jsx)(a.Fragment, {
            children: (0, a.jsxs)(E.FormItem, {
              tag: E.FormTitleTags.H3,
              className: W.marginBottom20,
              title: Y.default.Messages.USER_EXPLICIT_CONTENT_FILTER_V2,
              children: [
                (0, a.jsx)(E.FormText, {
                  type: E.FormTextTypes.DESCRIPTION,
                  className: W.marginBottom8,
                  children:
                    Y.default.Messages.USER_EXPLICIT_CONTENT_FILTER_HELP_V3.format(
                      {
                        appealLink: y.default.getArticleURL(
                          w.HelpdeskArticles.SAFE_DIRECT_MESSAGING
                        ),
                      }
                    ),
                }),
                (0, a.jsx)(E.RadioGroup, {
                  value: this.props.explicitContentFilter,
                  options: (0, B.generateExplicitImageOptions)(),
                  onChange: t => {
                    let { value: s } = t;
                    this.props.dmSpamFilter === S.DmSpamFilterV2.DEFAULT_UNSET
                      ? k.DmSpamFilterV2.updateSetting(e).then(() => {
                          k.ExplicitContentFilter.updateSetting(s);
                        })
                      : k.ExplicitContentFilter.updateSetting(s);
                  },
                }),
              ],
            }),
          });
        }
        renderSelfModExplicitContentSettings() {
          let {
              explicitContentSettingGuilds: e,
              explicitContentSettingFriendDm: t,
              explicitContentSettingNonFriendDm: s,
              userIsConsideredAdult: n,
            } = this.props,
            l = [
              {
                value: S.ExplicitContentRedaction.BLUR,
                label: Y.default.Messages.OBSCURED_CONTENT_SETTINGS_OPTION_BLUR,
              },
              {
                value: S.ExplicitContentRedaction.BLOCK,
                label:
                  Y.default.Messages.OBSCURED_CONTENT_SETTINGS_OPTION_BLOCK,
              },
            ],
            r = [
              {
                value: S.ExplicitContentRedaction.BLUR,
                label: Y.default.Messages.OBSCURED_CONTENT_SETTINGS_OPTION_BLUR,
              },
            ],
            o = {
              value: S.ExplicitContentRedaction.SHOW,
              label: Y.default.Messages.OBSCURED_CONTENT_SETTINGS_OPTION_SHOW,
            };
          return (
            n && (l.unshift(o), r.unshift(o)),
            (0, a.jsxs)(a.Fragment, {
              children: [
                (0, a.jsx)(E.FormTitle, {
                  tag: E.FormTitleTags.H5,
                  faded: !0,
                  className: W.marginBottom8,
                  children: (0, a.jsxs)("div", {
                    className: i(K.betaTagContainer),
                    children: [
                      Y.default.Messages.OBSCURED_CONTENT_SETTINGS_HEADER,
                      (0, a.jsx)(I.default, { className: K.betaTagIcon }),
                    ],
                  }),
                }),
                (0, a.jsx)(E.FormText, {
                  type: E.FormTextTypes.DESCRIPTION,
                  className: W.marginBottom8,
                  children:
                    Y.default.Messages.OBSCURED_CONTENT_SETTINGS_DESC.format({
                      learnMoreLink: y.default.getArticleURL(
                        w.HelpdeskArticles.EXPLICIT_MEDIA_REDACTION
                      ),
                    }),
                }),
                (0, a.jsx)(E.FormItem, {
                  tag: E.FormTitleTags.H3,
                  className: W.marginBottom20,
                  title: Y.default.Messages.OBSCURED_CONTENT_SETTING_FRIENDS,
                  children: (0, a.jsx)(E.SingleSelect, {
                    options: l,
                    value: t,
                    onChange: e =>
                      (0, h.updateExplicitContentSetting)({
                        explicitContentFriendDm: e,
                      }),
                  }),
                }),
                (0, a.jsx)(E.FormItem, {
                  tag: E.FormTitleTags.H3,
                  className: W.marginBottom20,
                  title:
                    Y.default.Messages.OBSCURED_CONTENT_SETTING_NON_FRIENDS,
                  children: (0, a.jsx)(E.SingleSelect, {
                    options: l,
                    value: s,
                    onChange: e =>
                      (0, h.updateExplicitContentSetting)({
                        explicitContentNonFriendDm: e,
                      }),
                  }),
                }),
                n &&
                  (0, a.jsx)(E.FormItem, {
                    tag: E.FormTitleTags.H3,
                    className: W.marginBottom20,
                    title: Y.default.Messages.OBSCURED_CONTENT_SETTING_GUILDS,
                    children: (0, a.jsx)(E.SingleSelect, {
                      options: r,
                      value: e,
                      onChange: e =>
                        (0, h.updateExplicitContentSetting)({
                          explicitContentGuilds: e,
                        }),
                    }),
                  }),
                (0, a.jsx)(E.FormDivider, { className: W.marginBottom20 }),
              ],
            })
          );
        }
        renderDmSafetyAlerts() {
          let {
            isEligibleForSafetyAlerts: e,
            dmSafetyAlerts: t,
            userIsConsideredAdult: s,
          } = this.props;
          return s || !e
            ? null
            : (0, a.jsxs)(a.Fragment, {
                children: [
                  (0, a.jsx)(E.FormDivider, { className: W.marginBottom20 }),
                  (0, a.jsxs)(E.FormSection, {
                    className: W.marginBottom20,
                    children: [
                      (0, a.jsx)(E.FormTitle, {
                        tag: E.FormTitleTags.H5,
                        faded: !0,
                        className: W.marginBottom8,
                        children:
                          Y.default.Messages.SAFETY_ALERTS_SETTINGS_HEADER,
                      }),
                      (0, a.jsx)(E.FormItem, {
                        children: (0, a.jsx)(E.FormSwitch, {
                          value: t,
                          note: Y.default.Messages.SAFETY_ALERTS_SETTING_DESCRIPTION.format(
                            {
                              learnMoreLink: y.default.getArticleURL(
                                w.HelpdeskArticles.SAFETY_ALERTS
                              ),
                            }
                          ),
                          onChange: R.updateDmSafetyAlertsSetting,
                          children:
                            Y.default.Messages.SAFETY_ALERTS_SETTING_TITLE,
                        }),
                      }),
                    ],
                  }),
                ],
              });
        }
        renderDMSafety() {
          var e;
          let t =
            this.props.dmSpamFilter !== S.DmSpamFilterV2.DEFAULT_UNSET
              ? this.props.dmSpamFilter
              : null !==
                    (e = H.ExplicitContentFilterToDmSpamFilterV2.get(
                      this.props.explicitContentFilter
                    )) && void 0 !== e
                ? e
                : S.DmSpamFilterV2.NON_FRIENDS;
          return this.props.mediaRedactionIsEnabled
            ? (0, a.jsxs)(a.Fragment, {
                children: [
                  (0, a.jsxs)(E.FormSection, {
                    tag: E.FormTitleTags.H3,
                    className: W.marginBottom20,
                    children: [
                      this.renderSelfModExplicitContentSettings(),
                      (0, a.jsxs)(E.FormItem, {
                        tag: E.FormTitleTags.H5,
                        className: W.marginBottom4,
                        title: Y.default.Messages.USER_DM_SPAM_FILTER,
                        children: [
                          (0, a.jsx)(E.FormText, {
                            type: E.FormTextTypes.DESCRIPTION,
                            className: W.marginBottom8,
                            children:
                              Y.default.Messages.USER_DM_SPAM_FILTER_HELP.format(
                                {
                                  appealLink: y.default.getArticleURL(
                                    w.HelpdeskArticles.SAFE_DIRECT_MESSAGING
                                  ),
                                }
                              ),
                          }),
                          (0, a.jsx)(E.RadioGroup, {
                            value: t,
                            options: (0, B.generateDmSpamOptions)(),
                            onChange: e => {
                              let { value: t } = e;
                              return k.DmSpamFilterV2.updateSetting(t);
                            },
                          }),
                        ],
                      }),
                    ],
                  }),
                  this.renderDmSafetyAlerts(),
                ],
              })
            : (0, a.jsxs)(a.Fragment, {
                children: [
                  (0, a.jsxs)(E.FormSection, {
                    tag: E.FormTitleTags.H5,
                    className: W.marginBottom40,
                    title: Y.default.Messages.USER_DIRECT_MESSAGE_FILTERS,
                    children: [
                      this.renderLegacyExplicitContentFilter(t),
                      (0, a.jsxs)(E.FormItem, {
                        tag: E.FormTitleTags.H3,
                        className: W.marginBottom4,
                        title: Y.default.Messages.USER_DM_SPAM_FILTER,
                        children: [
                          (0, a.jsx)(E.FormText, {
                            type: E.FormTextTypes.DESCRIPTION,
                            className: W.marginBottom8,
                            children:
                              Y.default.Messages.USER_DM_SPAM_FILTER_HELP.format(
                                {
                                  appealLink: y.default.getArticleURL(
                                    w.HelpdeskArticles.SAFE_DIRECT_MESSAGING
                                  ),
                                }
                              ),
                          }),
                          (0, a.jsx)(E.RadioGroup, {
                            value: t,
                            options: (0, B.generateDmSpamOptions)(),
                            onChange: e => {
                              let { value: t } = e;
                              return k.DmSpamFilterV2.updateSetting(t);
                            },
                          }),
                        ],
                      }),
                    ],
                  }),
                  this.renderDmSafetyAlerts(),
                ],
              });
        }
        renderServerPrivacy() {
          let {
              viewNsfwGuilds: e,
              currentUser: t,
              isStricterMessageRequests: s,
              viewNsfwCommands: n,
            } = this.props,
            { defaultGuildsRestricted: l, defaultMessageRequestRestricted: i } =
              this.state,
            r = !0 === t.nsfwAllowed;
          return (0, a.jsxs)(E.FormSection, {
            className: W.marginBottom40,
            children: [
              (0, a.jsx)(E.FormTitle, {
                tag: E.FormTitleTags.H5,
                className: W.marginBottom8,
                children: Y.default.Messages.USER_DM_SETTINGS,
              }),
              (0, a.jsx)(E.FormSwitch, {
                value: !l,
                note: Y.default.Messages.USER_DM_SETTINGS_HELP,
                onChange: this.handleChangeDefaultGuildsRestricted,
                children: Y.default.Messages.NEW_GUILDS_DM_ALLOWED,
              }),
              (0, a.jsx)(E.FormSwitch, {
                value: !!r && e,
                note: Y.default.Messages.NSFW_GUILDS_TOGGLE_CAPTION,
                disabled: !r,
                onChange: k.ViewNsfwGuilds.updateSetting,
                children: Y.default.Messages.NSFW_GUILDS_TOGGLE_HEADER,
              }),
              !s &&
                (0, a.jsx)(E.FormSwitch, {
                  value: !i,
                  note: Y.default.Messages.MESSAGE_REQUESTS_SETTING_GENERAL_CAPTION.format(
                    {
                      helpdeskArticle: y.default.getArticleURL(
                        w.HelpdeskArticles.MESSAGE_REQUESTS
                      ),
                    }
                  ),
                  disabled: l,
                  onChange: this.handleChangeDefaultMessageRequestRestricted,
                  children:
                    Y.default.Messages.MESSAGE_REQUESTS_SETTING_GENERAL_HEADER,
                }),
              (0, a.jsx)(E.FormSwitch, {
                value: !!r && n,
                note: Y.default.Messages.NSFW_DM_COMMANDS_CAPTION,
                disabled: !r,
                onChange: k.ViewNsfwCommands.updateSetting,
                children: Y.default.Messages.NSFW_DM_COMMANDS_HEADER,
              }),
            ],
          });
        }
        renderDataPrivacy() {
          let {
            usageStatistics: e,
            personalization: t,
            dropsOptedOut: s,
          } = this.props;
          return (0, a.jsxs)(E.FormSection, {
            className: W.marginBottom40,
            children: [
              (0, a.jsx)(E.FormTitle, {
                tag: E.FormTitleTags.H5,
                className: W.marginBottom8,
                children: Y.default.Messages.DATA_PRIVACY_CONTROLS,
              }),
              (0, a.jsx)(E.FormSwitch, {
                value: e,
                note: Y.default.Messages.DATA_PRIVACY_CONTROLS_USAGE_STATISTICS_NOTE.format(
                  {
                    helpdeskArticle: y.default.getArticleURL(
                      w.HelpdeskArticles.DATA_USED_TO_IMPROVE_DISCORD
                    ),
                  }
                ),
                onChange: this.handleUsageStatisticsChange,
                children:
                  Y.default.Messages
                    .DATA_PRIVACY_CONTROLS_USAGE_STATISTICS_TITLE,
              }),
              (0, a.jsx)(E.FormSwitch, {
                value: t,
                note: Y.default.Messages.DATA_PRIVACY_CONTROLS_PERSONALIZATION_NOTE_LEARN_MORE.format(
                  {
                    helpdeskArticle: y.default.getArticleURL(
                      w.HelpdeskArticles.DATA_USED_FOR_RECOMMENDED
                    ),
                  }
                ),
                hideBorder: !0,
                onChange: this.handlePersonalizationChange,
                children:
                  Y.default.Messages
                    .DATA_PRIVACY_CONTROLS_PERSONALIZATION_TITLE,
              }),
              (0, a.jsx)(E.FormSwitch, {
                value: !s,
                note: Y.default.Messages.USER_DROPS_SETTINGS_DROPS_OPTED_OUT_FORMATTED.format(
                  {
                    helpdeskArticle: y.default.getArticleURL(
                      w.HelpdeskArticles.DATA_PRIVACY_CONTROLS
                    ),
                  }
                ),
                onChange: this.handleChangeDropsOptedOut,
                children: (0, a.jsx)("div", {
                  children:
                    Y.default.Messages.USER_DROPS_SETTINGS_DROPS_OPTED_OUT,
                }),
              }),
              (0, a.jsx)(E.FormTitle, {
                tag: E.FormTitleTags.H3,
                className: i(W.marginTop20, W.marginBottom8),
                children:
                  Y.default.Messages.DATA_PRIVACY_CONTROLS_BASIC_SERVICE_TITLE,
              }),
              (0, a.jsx)(E.FormText, {
                type: E.FormTextTypes.DESCRIPTION,
                className: W.marginBottom20,
                children:
                  Y.default.Messages.DATA_PRIVACY_CONTROLS_BASIC_SERVICE_NOTE.format(
                    {
                      onClick: () => {
                        m.default.setSection(w.UserSettingsSections.ACCOUNT);
                      },
                    }
                  ),
              }),
              this.renderHarvestRequest(),
            ],
          });
        }
        renderHarvestRequest() {
          let e;
          let { currentUser: t } = this.props,
            { requestingHarvest: s, currentHarvestRequest: l } = this.state,
            i = (0, G.harvestDisabled)(l, t),
            r = (0, a.jsx)(E.Tooltip, {
              text: t.verified
                ? null
                : Y.default.Messages.DATA_PRIVACY_CONTROLS_REQUEST_DATA_TOOLTIP,
              children: e => {
                let { onMouseEnter: t, onMouseLeave: n } = e;
                return (0, a.jsx)(E.Button, {
                  disabled: i,
                  onClick: this.handleDataDownloadRequest,
                  onMouseEnter: t,
                  onMouseLeave: n,
                  look: E.Button.Looks.OUTLINED,
                  color: E.Button.Colors.BRAND,
                  submitting: s,
                  children:
                    Y.default.Messages
                      .DATA_PRIVACY_CONTROLS_REQUEST_DATA_DOWNLOAD,
                });
              },
            });
          return (
            i &&
              null != l &&
              ((e = (0, a.jsx)(E.Card, {
                className: K.card,
                children: (0, a.jsx)(E.Text, {
                  variant: "text-md/normal",
                  children:
                    Y.default.Messages.DATA_DOWNLOAD_REQUESTED_STATUS_NOTE.format(
                      {
                        date: u(l.created_at)
                          .add(w.REQUEST_DATA_LIMIT_DAYS, "days")
                          .format("MMMM Do YYYY"),
                      }
                    ),
                }),
              })),
              (r = null)),
            null != r && (r = (0, a.jsx)(j.default, { children: r })),
            (0, a.jsxs)(n.Fragment, {
              children: [
                (0, a.jsx)(E.FormDivider, { className: W.marginBottom20 }),
                (0, a.jsx)(E.FormTitle, {
                  tag: E.FormTitleTags.H3,
                  children:
                    Y.default.Messages
                      .DATA_PRIVACY_CONTROLS_PERSONAL_DATA_TITLE,
                }),
                (0, a.jsx)(E.FormText, {
                  type: E.FormTextTypes.DESCRIPTION,
                  className: W.marginBottom20,
                  children:
                    Y.default.Messages.DATA_PRIVACY_CONTROLS_REQUEST_DATA_NOTE.format(
                      {
                        helpdeskArticle: y.default.getArticleURL(
                          w.HelpdeskArticles.GDPR_REQUEST_DATA
                        ),
                      }
                    ),
                }),
                e,
                r,
              ],
            })
          );
        }
        renderPrivacyAndTermsNote() {
          return (0, a.jsx)(E.FormSection, {
            className: W.marginBottom40,
            children: (0, a.jsx)(E.FormNotice, {
              type: E.FormNotice.Types.PRIMARY,
              body: Y.default.Messages.USER_SETTINGS_PRIVACY_TERMS.format({
                termsLink: w.MarketingURLs.TERMS,
                privacyLink: w.MarketingURLs.PRIVACY,
              }),
            }),
          });
        }
        renderStaffOnlySettings() {
          let { currentUser: e, nonSpamRetrainingOptIn: t } = this.props;
          return e.isStaff()
            ? (0, a.jsxs)(a.Fragment, {
                children: [
                  (0, a.jsx)(E.FormDivider, { className: W.marginBottom20 }),
                  (0, a.jsxs)(E.FormSection, {
                    className: W.marginBottom40,
                    children: [
                      (0, a.jsx)(E.FormTitle, {
                        tag: E.FormTitleTags.H5,
                        className: W.marginBottom8,
                        children:
                          Y.default.Messages.PRIVACY_SETTINGS_STAFF_ONLY_HEADER,
                      }),
                      (0, a.jsxs)(E.FormItem, {
                        tag: E.FormTitleTags.H5,
                        className: W.marginBottom4,
                        children: [
                          (0, a.jsx)(E.FormText, {
                            type: E.FormTextTypes.DESCRIPTION,
                            className: W.marginBottom8,
                            children:
                              Y.default.Messages
                                .PRIVACY_SETTINGS_STAFF_ONLY_DESC,
                          }),
                          (0, a.jsx)(E.RadioGroup, {
                            options: (0,
                            G.generateNonSpamRetrainingOptInSettingOptions)(),
                            value:
                              null == t
                                ? G.NonSpamRetrainingOptInOptions.UNDECIDED
                                : t
                                  ? G.NonSpamRetrainingOptInOptions.OPTIN
                                  : G.NonSpamRetrainingOptInOptions.OPTOUT,
                            onChange: e => {
                              let { value: t } = e;
                              return k.NonSpamRetrainingOptIn.updateSetting(
                                G.NonSpamRetrainingOptInOptionsToValue[t]
                              );
                            },
                          }),
                        ],
                      }),
                    ],
                  }),
                ],
              })
            : null;
        }
        renderSettingsBody() {
          let { fetchedConsents: e } = this.props;
          return (0, a.jsxs)(E.FormSection, {
            tag: E.FormTitleTags.H1,
            title: Y.default.Messages.PRIVACY_AND_SAFETY,
            children: [
              this.renderDMSafety(),
              this.renderServerPrivacy(),
              e ? this.renderDataPrivacy() : null,
              this.renderPrivacyAndTermsNote(),
              this.renderStaffOnlySettings(),
            ],
          });
        }
        render() {
          let { safetyHubFetchError: e, subsection: t } = this.props,
            { selectedTab: s } = this.state;
          null != t && this.setState({ selectedTab: t });
          let n = s === V.SafetyHubView.ACCOUNT_STANDING && null != e;
          return (0, a.jsxs)(a.Fragment, {
            children: [
              (0, a.jsxs)(E.TabBar, {
                className: K.settingsTabBar,
                "aria-label": Y.default.Messages.SAFETY_HUB_PAGE_TITLE,
                selectedItem: s,
                type: "top",
                look: "brand",
                onItemSelect: this.handleTabSelect,
                children: [
                  (0, a.jsx)(E.TabBar.Item, {
                    className: K.settingsTabBarItem,
                    id: V.SafetyHubView.SETTINGS,
                    "aria-label":
                      Y.default.Messages.PRIVACY_AND_SAFETY_TAB_TITLE_SETTINGS,
                    children:
                      Y.default.Messages.PRIVACY_AND_SAFETY_TAB_TITLE_SETTINGS,
                  }),
                  (0, a.jsx)(E.TabBar.Item, {
                    className: K.settingsTabBarItem,
                    id: V.SafetyHubView.ACCOUNT_STANDING,
                    "aria-label":
                      Y.default.Messages
                        .PRIVACY_AND_SAFETY_TAB_TITLE_SUPPORT_V2,
                    children:
                      Y.default.Messages
                        .PRIVACY_AND_SAFETY_TAB_TITLE_SUPPORT_V2,
                  }),
                ],
              }),
              (0, a.jsx)(E.TabBar.Panel, {
                id: s,
                "aria-labelledby": (0, b.uid)(),
                className: [n ? K.contentPanelNagbar : "", K.contentPanel].join(
                  " "
                ),
                children: (0, a.jsx)("div", {
                  children: this.SETTINGS_TABS[s](),
                }),
              }),
            ],
          });
        }
        constructor(e) {
          super(e),
            (this.SETTINGS_TABS = {
              [V.SafetyHubView.SETTINGS]: () => this.renderSettingsBody(),
              [V.SafetyHubView.ACCOUNT_STANDING]: () =>
                (0, a.jsx)(O.default, {}),
            }),
            (this.handleChangeDefaultGuildsRestricted = e => {
              this.setState({ defaultGuildsRestricted: !e }, () =>
                this.showGuildRestrictionModal(!e)
              );
            }),
            (this.handleChangeDropsOptedOut = () => {
              k.DropsOptedOut.updateSetting(!this.props.dropsOptedOut);
            }),
            (this.handleChangeDefaultMessageRequestRestricted = e => {
              this.setState({ defaultMessageRequestRestricted: !e }, () =>
                this.showMessageRequestRestrictionModal(!e)
              );
            }),
            (this.handleUsageStatisticsChange = () => {
              let e = !this.props.usageStatistics;
              e
                ? (0, f.setConsents)([w.Consents.USAGE_STATISTICS], []).catch(Q)
                : z({
                    header:
                      Y.default.Messages.USAGE_STATISTICS_DISABLE_MODAL_TITLE,
                    body: Y.default.Messages
                      .USAGE_STATISTICS_DISABLE_MODAL_BODY,
                    confirmText:
                      Y.default.Messages.USAGE_STATISTICS_DISABLE_MODAL_CONFIRM,
                    cancelText:
                      Y.default.Messages.USAGE_STATISTICS_DISABLE_MODAL_CANCEL,
                    onConfirm: () =>
                      (0, f.setConsents)(
                        [],
                        [w.Consents.USAGE_STATISTICS]
                      ).catch(Q),
                  });
            }),
            (this.handlePersonalizationChange = () => {
              let e = !this.props.personalization;
              e
                ? (0, f.setConsents)([w.Consents.PERSONALIZATION], []).catch(Q)
                : z({
                    header:
                      Y.default.Messages.PERSONALIZATION_DISABLE_MODAL_TITLE,
                    confirmText:
                      Y.default.Messages.PERSONALIZATION_DISABLE_MODAL_CONFIRM,
                    cancelText:
                      Y.default.Messages.PERSONALIZATION_DISABLE_MODAL_CANCEL,
                    onConfirm: () => {
                      (0, f.setConsents)(
                        [],
                        [w.Consents.PERSONALIZATION]
                      ).catch(Q);
                    },
                    body: Y.default.Messages.PERSONALIZATION_DISABLE_MODAL_BODY,
                  });
            }),
            (this.handleDataDownloadRequest = () => {
              z({
                header:
                  Y.default.Messages
                    .DATA_PRIVACY_CONTROLS_REQUEST_DATA_MODAL_TITLE,
                body: Y.default.Messages
                  .DATA_PRIVACY_CONTROLS_REQUEST_DATA_MODAL_NOTE,
                confirmText:
                  Y.default.Messages
                    .DATA_PRIVACY_CONTROLS_REQUEST_DATA_MODAL_CONFIRM,
                cancelText:
                  Y.default.Messages
                    .DATA_PRIVACY_CONTROLS_REQUEST_DATA_MODAL_CANCEL,
                onConfirm: () => {
                  this.setState({ requestingHarvest: !0 }, () => {
                    (0, _.requestHarvest)()
                      .then(
                        e => {
                          null != e && null != e.body
                            ? (this.setState({ currentHarvestRequest: e.body }),
                              T.default.show({
                                body: Y.default.Messages
                                  .DATA_PRIVACY_CONTROLS_REQUEST_DATA_MODAL_SUCCESS,
                              }))
                            : T.default.show({
                                title:
                                  Y.default.Messages
                                    .DATA_PRIVACY_CONTROLS_REQUEST_DATA_FAILURE_TITLE,
                                body: Y.default.Messages
                                  .DATA_PRIVACY_CONTROLS_REQUEST_DATA_FAILURE_BODY,
                              });
                        },
                        () =>
                          T.default.show({
                            title:
                              Y.default.Messages
                                .DATA_PRIVACY_CONTROLS_REQUEST_DATA_FAILURE_TITLE,
                            body: Y.default.Messages
                              .DATA_PRIVACY_CONTROLS_REQUEST_DATA_FAILURE_BODY,
                          })
                      )
                      .finally(() => this.setState({ requestingHarvest: !1 }));
                  });
                },
              });
            }),
            (this.handleTabSelect = e => {
              this.setState({ selectedTab: e });
            });
          let {
            defaultGuildsRestricted: t,
            defaultMessageRequestRestricted: s,
          } = e;
          this.state = {
            defaultGuildsRestricted: t,
            defaultMessageRequestRestricted: s,
            currentHarvestRequest: null,
            requestingHarvest: !0,
            selectedTab: V.SafetyHubView.SETTINGS,
          };
        }
      }
      function q() {
        let e = (0, c.useStateFromStores)([P.default], () => {
            let e = P.default.getCurrentUser();
            return (
              o(
                null != e,
                "ConnectedUserSettingsPrivacySafety: currentUser cannot be undefined"
              ),
              e
            );
          }),
          t = (0, c.useStateFromStoresObject)([D.default], () => ({
            fetchedConsents: D.default.fetchedConsents,
            usageStatistics: D.default.hasConsented(
              w.Consents.USAGE_STATISTICS
            ),
            personalization: D.default.hasConsented(w.Consents.PERSONALIZATION),
          })),
          s = (0, c.useStateFromStores)([A.default], () =>
            A.default.getFetchError()
          ),
          n = (0, c.useStateFromStores)([L.default], () =>
            L.default.getSubsection()
          ),
          l = (0, g.useIsEligibleForExplicitMediaRedaction)(),
          i = (0, N.useExplicitContentSettingOrDefault)(),
          r = (0, C.default)(),
          d = (0, x.useIsEligibleForInappropriateConversationWarning)({
            location: "user_settings_web",
          }),
          u = (0, M.useSafetyAlertsSettingOrDefault)();
        return (0, a.jsx)(X, {
          currentUser: e,
          defaultGuildsRestricted: k.DefaultGuildsRestricted.useSetting(),
          defaultMessageRequestRestricted:
            k.MessageRequestRestrictedDefault.useSetting(),
          nonSpamRetrainingOptIn: k.NonSpamRetrainingOptIn.useSetting(),
          isStricterMessageRequests: (0, p.default)(),
          viewNsfwGuilds: k.ViewNsfwGuilds.useSetting(),
          viewNsfwCommands: k.ViewNsfwCommands.useSetting(),
          explicitContentFilter: k.ExplicitContentFilter.useSetting(),
          dmSpamFilter: k.DmSpamFilterV2.useSetting(),
          showCurrentGame: k.ShowCurrentGame.useSetting(),
          dropsOptedOut: k.DropsOptedOut.useSetting(),
          safetyHubFetchError: s,
          mediaRedactionIsEnabled: l,
          explicitContentSettingGuilds: i.explicitContentGuilds,
          explicitContentSettingFriendDm: i.explicitContentFriendDm,
          explicitContentSettingNonFriendDm: i.explicitContentNonFriendDm,
          userIsConsideredAdult: null == r || r,
          isEligibleForSafetyAlerts: d,
          dmSafetyAlerts: u,
          subsection: n,
          ...t,
        });
      }
    },
    819638: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return M;
          },
        }),
        s("222007");
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("446674"),
        o = s("872717"),
        d = s("151426"),
        u = s("77078"),
        c = s("79112"),
        S = s("642950"),
        E = s("158645"),
        T = s("917454"),
        f = s("10641"),
        _ = s("102985"),
        m = s("697218"),
        g = s("104359"),
        h = s("945330"),
        N = s("216947"),
        I = s("267675"),
        p = s("449008"),
        C = s("49111"),
        A = s("994428"),
        O = s("782340"),
        x = s("37082");
      function M() {
        let e;
        let { currentSession: t, otherSessions: s } = (0, T.useAuthSessions)(),
          l = (0, r.useStateFromStores)(
            [_.default],
            () => _.default.hidePersonalInformation
          ),
          i = (0, r.useStateFromStores)([m.default], () =>
            m.default.getCurrentUser()
          ),
          [c, g] = n.useState(!1);
        n.useEffect(() => {
          (0, f.markDismissibleContentAsDismissed)(
            d.DismissibleContent.AUTH_SESSIONS_NEW,
            { dismissAction: A.ContentDismissActionType.AUTO }
          ),
            (0, E.fetchAuthSessions)();
          let e = setTimeout(() => g(!0), 500);
          return () => {
            clearTimeout(e), (0, E.clearAuthSessions)();
          };
        }, []);
        let h = () => {
            o.default.post({
              url: C.Endpoints.AUTH_SESSION_NOTIFICATIONS_DEBUG,
            });
          },
          [N, I] = n.useState(new Set());
        return l
          ? (0, a.jsx)(S.default, {})
          : ((e =
              null == t && 0 === s.length
                ? c
                  ? (0, a.jsx)("div", {
                      className: x.loading,
                      children: (0, a.jsx)(u.Spinner, {}),
                    })
                  : null
                : (0, a.jsxs)(a.Fragment, {
                    children: [
                      (0, a.jsxs)("div", {
                        className: x.sessions,
                        children: [
                          (0, a.jsx)(u.FormSection, {
                            tag: u.FormTitleTags.H5,
                            title: O.default.Messages.AUTH_SESSIONS_CURRENT,
                            titleClassName: x.groupTitle,
                            children:
                              null != t
                                ? (0, a.jsx)(R, { session: t, current: !0 })
                                : null,
                          }),
                          !(s.length > 0) && (null == i ? void 0 : i.mfaEnabled)
                            ? null
                            : (0, a.jsxs)(u.FormSection, {
                                tag: u.FormTitleTags.H5,
                                title: O.default.Messages.AUTH_SESSIONS_OTHERS,
                                titleClassName: x.groupTitle,
                                className: x.otherSessions,
                                children: [
                                  s.map(e =>
                                    (0, a.jsx)(
                                      R,
                                      {
                                        session: e,
                                        useChecks: N.size > 0,
                                        checked: N.has(e.id_hash),
                                        setChecked: t => {
                                          let s = new Set(N);
                                          t
                                            ? s.add(e.id_hash)
                                            : s.delete(e.id_hash),
                                            I(s);
                                        },
                                      },
                                      e.id_hash
                                    )
                                  ),
                                  (null == i ? void 0 : i.mfaEnabled)
                                    ? null
                                    : (0, a.jsx)(D, {}),
                                ],
                              }),
                        ],
                      }),
                      s.length > 0
                        ? (0, a.jsxs)(u.FormSection, {
                            tag: u.FormTitleTags.H5,
                            title:
                              N.size > 0
                                ? O.default.Messages
                                    .AUTH_SESSIONS_OTHERS_LOG_OUT_SELECTED_TITLE
                                : O.default.Messages
                                    .AUTH_SESSIONS_OTHERS_LOG_OUT_TITLE,
                            children: [
                              (0, a.jsx)(u.FormText, {
                                type: u.FormTextTypes.DESCRIPTION,
                                children:
                                  O.default.Messages
                                    .AUTH_SESSIONS_OTHERS_LOG_OUT_DESCRIPTION,
                              }),
                              (0, a.jsx)(u.Button, {
                                look: u.Button.Looks.OUTLINED,
                                color: u.Button.Colors.RED,
                                size: u.Button.Sizes.SMALL,
                                className: x.logOutAllButton,
                                onClick: () => {
                                  N.size > 0
                                    ? (0, E.logOutSessions)(Array.from(N))
                                    : (0, E.logOutSessions)(
                                        s.map(e => e.id_hash)
                                      );
                                },
                                children:
                                  N.size > 0
                                    ? O.default.Messages.AUTH_SESSIONS_OTHERS_LOG_OUT_SELECTED_ACTION.format(
                                        { count: N.size }
                                      )
                                    : O.default.Messages
                                        .AUTH_SESSIONS_OTHERS_LOG_OUT_ACTION,
                              }),
                            ],
                          })
                        : null,
                    ],
                  })),
            (0, a.jsxs)(u.FormSection, {
              tag: u.FormTitleTags.H1,
              title: O.default.Messages.AUTH_SESSIONS,
              children: [
                (0, a.jsx)(u.FormText, {
                  type: u.FormTextTypes.DESCRIPTION,
                  className: x.description,
                  children: O.default.Messages.AUTH_SESSIONS_DESCRIPTION,
                }),
                (null == i ? void 0 : i.isStaff())
                  ? (0, a.jsxs)("div", {
                      className: x.tools,
                      children: [
                        (0, a.jsx)(u.Text, {
                          className: x.toolsTitle,
                          variant: "text-md/bold",
                          children: "DEV TOOLS",
                        }),
                        (0, a.jsx)(u.Text, {
                          className: x.toolsTitle,
                          variant: "text-sm/normal",
                          color: "text-danger",
                          children:
                            "These tools are only shown to staff users.",
                        }),
                        (0, a.jsx)(u.Tooltip, {
                          text: "Triggers mobile and email suspicious session notifications for the current user",
                          children: e => {
                            let { onMouseEnter: t, onMouseLeave: s } = e;
                            return (0, a.jsx)(u.Button, {
                              size: u.Button.Sizes.SMALL,
                              color: u.Button.Colors.PRIMARY,
                              onClick: h,
                              onMouseEnter: t,
                              onMouseLeave: s,
                              children:
                                "Trigger Suspicious Sessions Notification",
                            });
                          },
                        }),
                      ],
                    })
                  : null,
                e,
              ],
            }));
      }
      function R(e) {
        var t, s, n, l, r;
        let {
            session: o,
            current: d,
            setChecked: c,
            checked: S,
            useChecks: f,
          } = e,
          _ =
            null !==
              (r =
                null === (t = o.client_info) || void 0 === t
                  ? void 0
                  : t.location) && void 0 !== r
              ? r
              : null === (s = o.client_info) || void 0 === s
                ? void 0
                : s.ip,
          m =
            null === (n = o.client_info) || void 0 === n ? void 0 : n.platform,
          { text: g, icon: C } = (function (e) {
            switch (null == e ? void 0 : e.toLowerCase().trim()) {
              case null:
              case void 0:
              case "":
                return {
                  text: O.default.Messages.AUTH_SESSIONS_OS_UNKNOWN,
                  icon: I.default,
                };
              case "ios":
              case "android":
                return { text: e, icon: N.default };
              default:
                return { text: e, icon: I.default };
            }
          })(null === (l = o.client_info) || void 0 === l ? void 0 : l.os),
          A = d ? null : (0, T.formatDate)(o.approx_last_used_time),
          M = [g, m].filter(p.isNotNullish),
          R = [_, A].filter(p.isNotNullish),
          D = (0, u.useRedesignIconContext)().enabled,
          v = D ? 24 : 32;
        return (0, a.jsxs)(
          "div",
          {
            className: i(x.session, d ? x.currentSession : null),
            children: [
              (0, a.jsx)("div", {
                className: x.sessionIcon,
                children: (0, a.jsx)(C, { width: v, height: v }),
              }),
              (0, a.jsxs)("div", {
                className: x.sessionInfo,
                children: [
                  (0, a.jsxs)(u.Text, {
                    variant: "eyebrow",
                    className: x.sessionInfoRow,
                    children: [
                      (0, a.jsx)("span", { children: M[0] }),
                      M.length > 1 &&
                        (0, a.jsxs)(a.Fragment, {
                          children: [
                            (0, a.jsx)("span", { children: "\xb7" }),
                            (0, a.jsx)("span", { children: M[1] }),
                          ],
                        }),
                    ],
                  }),
                  (0, a.jsxs)(u.Text, {
                    variant: "text-sm/medium",
                    className: x.sessionInfoRow,
                    children: [
                      (0, a.jsx)("span", { children: R[0] }),
                      R.length > 1 &&
                        (0, a.jsxs)(a.Fragment, {
                          children: [
                            (0, a.jsx)("span", { children: "\xb7" }),
                            (0, a.jsx)("span", { children: R[1] }),
                          ],
                        }),
                    ],
                  }),
                ],
              }),
              d
                ? null
                : f
                  ? (0, a.jsx)("div", {
                      className: x.sessionCheckbox,
                      children: (0, a.jsx)(u.Checkbox, {
                        onChange: (e, t) => {
                          null == c || c(t);
                        },
                        value: S,
                      }),
                    })
                  : (0, a.jsx)(u.Clickable, {
                      className: x.sessionMoreButton,
                      onClick: e => {
                        e.shiftKey
                          ? null == c || c(!0)
                          : (0, E.logOutSessions)(o.id_hash);
                      },
                      "aria-label":
                        O.default.Messages.AUTH_SESSIONS_SESSION_LOG_OUT,
                      children: (0, a.jsx)(h.default, {}),
                    }),
            ],
          },
          o.id_hash
        );
      }
      function D() {
        return (0, a.jsxs)("div", {
          className: i(x.session, x.legacySession),
          children: [
            (0, a.jsx)("div", {
              className: x.sessionIcon,
              children: (0, a.jsx)(g.default, { width: "32", height: "32" }),
            }),
            (0, a.jsxs)("div", {
              className: x.sessionInfo,
              children: [
                (0, a.jsx)(u.Text, {
                  variant: "eyebrow",
                  className: x.sessionInfoRow,
                  color: "text-muted",
                  children: (0, a.jsx)("span", {
                    children: O.default.Messages.AUTH_SESSIONS_UNKNOWN_LEGACY,
                  }),
                }),
                (0, a.jsx)(u.Text, {
                  variant: "text-sm/medium",
                  className: x.sessionInfoRow,
                  color: "text-muted",
                  children: (0, a.jsx)("span", {
                    children:
                      O.default.Messages.AUTH_SESSIONS_UNKNOWN_LEGACY_LOG_OUT.format(
                        {
                          onClick: () =>
                            c.default.setSection(
                              C.UserSettingsSections.ACCOUNT
                            ),
                        }
                      ),
                  }),
                }),
              ],
            }),
          ],
        });
      }
    },
    114582: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return m;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("414456"),
        l = s.n(n),
        i = s("446674"),
        r = s("77078"),
        o = s("52289"),
        d = s("79112"),
        u = s("49671"),
        c = s("102985"),
        S = s("773336"),
        E = s("49111"),
        T = s("782340"),
        f = s("45036"),
        _ = s("890957");
      function m() {
        var e, t, n;
        let {
            enabled: m,
            autoToggle: g,
            hideInstantInvites: h,
            hidePersonalInformation: N,
            disableSounds: I,
            disableNotifications: p,
            enableContentProtection: C,
          } = (0, i.useStateFromStoresObject)([c.default], () => ({
            ...c.default.getSettings(),
          })),
          A = (e, t) => {
            o.default.update({ [e]: t });
          },
          O =
            null !==
              (n =
                null === u.default || void 0 === u.default
                  ? void 0
                  : null === (t = u.default.window) || void 0 === t
                    ? void 0
                    : null === (e = t.supportsContentProtection) || void 0 === e
                      ? void 0
                      : e.call(t)) &&
            void 0 !== n &&
            n;
        return (0, a.jsxs)(r.FormSection, {
          className: f.container,
          tag: r.FormTitleTags.H1,
          title: T.default.Messages.STREAMER_MODE,
          children: [
            (0, a.jsx)(r.FormNotice, {
              className: _.marginBottom40,
              iconClassName: f.noticeIcon,
              type: r.FormNoticeTypes.PRIMARY,
              imageData: {
                src: s("471208"),
                width: 184,
                height: 110,
                position: r.FormNoticeImagePositions.RIGHT,
              },
              title: T.default.Messages.USER_SETTINGS_STREAMER_NOTICE_TITLE,
              body: T.default.Messages.USER_SETTINGS_STREAMER_NOTICE_BODY.format(
                { streamkitURL: E.MarketingURLs.STREAMKIT }
              ),
            }),
            (0, a.jsx)(r.FormSwitch, {
              value: m,
              onChange: e => A("enabled", e),
              note: T.default.Messages.ENABLE_STREAMER_MODE_DESCRIPTION.format({
                onClick: () => {
                  d.default.setSection(E.UserSettingsSections.KEYBINDS);
                },
              }),
              children: T.default.Messages.ENABLE_STREAMER_MODE_LABEL,
            }),
            (() => {
              if (S.isPlatformEmbedded)
                return (0, a.jsx)(r.FormSwitch, {
                  value: g,
                  onChange: e => A("autoToggle", e),
                  note: T.default.Messages
                    .AUTO_TOGGLE_STREAMER_MODE_DESCRIPTION,
                  children: T.default.Messages.AUTO_TOGGLE_STREAMER_MODE_LABEL,
                });
            })(),
            (0, a.jsx)(r.FormTitle, {
              className: l(_.marginTop40, _.marginBottom8),
              children: T.default.Messages.OPTIONS,
            }),
            (0, a.jsx)(r.FormSwitch, {
              value: N,
              onChange: e => A("hidePersonalInformation", e),
              note: T.default.Messages.HIDE_PERSONAL_INFORMATION_DESCRIPTION,
              children: T.default.Messages.HIDE_PERSONAL_INFORMATION_LABEL,
            }),
            (0, a.jsx)(r.FormSwitch, {
              value: h,
              onChange: e => A("hideInstantInvites", e),
              note: T.default.Messages.HIDE_INSTANT_INVITES_DESCRIPTION,
              children: T.default.Messages.HIDE_INSTANT_INVITES_LABEL,
            }),
            (0, a.jsx)(r.FormSwitch, {
              value: I,
              onChange: e => A("disableSounds", e),
              note: T.default.Messages.DISABLE_SOUNDS_DESCRIPTION,
              children: T.default.Messages.DISABLE_SOUNDS_LABEL,
            }),
            (0, a.jsx)(r.FormSwitch, {
              value: p,
              onChange: e => A("disableNotifications", e),
              note: T.default.Messages.DISABLE_NOTIFICATIONS_DESCRIPTION,
              children: T.default.Messages.DISABLE_NOTIFICATIONS_LABEL,
            }),
            O &&
              (0, a.jsx)(r.FormSwitch, {
                value: C,
                onChange: e => A("enableContentProtection", e),
                note: T.default.Messages.HIDE_WINDOW_FROM_STREAM_DESCRIPTION,
                children: T.default.Messages.HIDE_WINDOW_FROM_STREAM_LABEL,
              }),
          ],
        });
      }
    },
    995350: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return f;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("414456"),
        l = s.n(n),
        i = s("77078"),
        r = s("812204"),
        o = s("685665"),
        d = s("367376"),
        u = s("599110"),
        c = s("845579"),
        S = s("49111"),
        E = s("782340"),
        T = s("890957");
      function f() {
        let e = c.ExpressionSuggestionsEnabled.useSetting(),
          t = c.IncludeStickersInAutocomplete.useSetting(),
          s = c.UseRichChatInput.useSetting(),
          n = c.RenderSpoilers.useSetting(),
          f = c.UseThreadSidebar.useSetting(),
          _ = c.ViewImageDescriptions.useSetting(),
          m = c.ConvertEmoticons.useSetting(),
          g = c.InlineAttachmentMedia.useSetting(),
          h = c.InlineEmbedMedia.useSetting(),
          N = c.RenderEmbeds.useSetting(),
          I = c.RenderReactions.useSetting(),
          { analyticsLocations: p } = (0, o.default)(r.default.TEXT_AND_IMAGES);
        return (0, a.jsxs)(i.FormSection, {
          tag: i.FormTitleTags.H1,
          title: E.default.Messages.CHAT,
          children: [
            (0, a.jsx)(i.FormTitle, {
              className: T.marginBottom8,
              children: E.default.Messages.INLINE_MEDIA_LABEL,
            }),
            (0, a.jsx)(i.FormSwitch, {
              className: l(T.marginTop8, T.marginBottom20),
              value: h,
              onChange: c.InlineEmbedMedia.updateSetting,
              children: E.default.Messages.INLINE_EMBED_MEDIA,
            }),
            (0, a.jsx)(i.FormSwitch, {
              className: l(T.marginTop8, T.marginBottom20),
              value: g,
              note: E.default.Messages.INLINE_ATTACHMENT_MEDIA_HELP.format({
                maxSize: 10,
              }),
              onChange: c.InlineAttachmentMedia.updateSetting,
              children: E.default.Messages.INLINE_ATTACHMENT_MEDIA,
            }),
            (0, a.jsx)(i.FormSwitch, {
              className: l(T.marginTop8, T.marginBottom20),
              value: _,
              note: E.default.Messages.IMAGE_DESCRIPTION_HELP,
              onChange: c.ViewImageDescriptions.updateSetting,
              children:
                E.default.Messages.USER_SETTINGS_WITH_IMAGE_DESCRIPTIONS,
            }),
            (0, a.jsx)(i.FormTitle, {
              className: T.marginBottom8,
              children: E.default.Messages.RENDER_EMBEDS_LABEL,
            }),
            (0, a.jsx)(i.FormSwitch, {
              className: l(T.marginTop8, T.marginBottom40),
              value: N,
              onChange: c.RenderEmbeds.updateSetting,
              children: E.default.Messages.RENDER_EMBEDS,
            }),
            (0, a.jsx)(i.FormTitle, {
              className: T.marginBottom8,
              children: E.default.Messages.EMOJI,
            }),
            (0, a.jsx)(i.FormSwitch, {
              className: l(T.marginTop8, T.marginBottom20),
              value: I,
              onChange: c.RenderReactions.updateSetting,
              children: E.default.Messages.RENDER_REACTIONS,
            }),
            (0, a.jsx)(i.FormSwitch, {
              className: T.marginBottom40,
              value: m,
              note: d.default.parse(E.default.Messages.CONVERT_EMOTICONS_HELP),
              onChange: c.ConvertEmoticons.updateSetting,
              children: E.default.Messages.CONVERT_EMOTICONS,
            }),
            (0, a.jsxs)(i.FormSection, {
              className: T.marginBottom8,
              children: [
                (0, a.jsx)(i.FormTitle, {
                  className: T.marginBottom8,
                  children: E.default.Messages.STICKERS_AUTO_PLAY_HEADING,
                }),
                (0, a.jsx)(i.FormSwitch, {
                  className: l(T.marginTop8, T.marginBottom20),
                  value: e,
                  note: E.default.Messages.AUTO_SUGGEST_STICKERS_DESCRIPTION,
                  onChange: t => {
                    u.default.track(
                      S.AnalyticEvents.STICKER_SUGGESTIONS_ENABLED_TOGGLED,
                      {
                        enabled: !e,
                        location: {
                          section: S.AnalyticsSections.SETTINGS_TEXT_AND_IMAGES,
                        },
                        location_stack: p,
                      }
                    ),
                      c.ExpressionSuggestionsEnabled.updateSetting(!e);
                  },
                  children: E.default.Messages.AUTO_SUGGEST_STICKERS,
                }),
                (0, a.jsx)(i.FormSwitch, {
                  className: T.marginBottom40,
                  value: t,
                  note: E.default.Messages
                    .INCLUDE_STICKER_RESULTS_IN_AUTOCOMPLETE,
                  onChange: e => {
                    u.default.track(
                      S.AnalyticEvents.STICKERS_IN_AUTOCOMPLETE_TOGGLED,
                      {
                        enabled: e,
                        location: {
                          section: S.AnalyticsSections.SETTINGS_TEXT_AND_IMAGES,
                        },
                        location_stack: p,
                      }
                    ),
                      c.IncludeStickersInAutocomplete.updateSetting(e);
                  },
                  children: E.default.Messages.STICKERS_IN_AUTOCOMPLETE,
                }),
              ],
            }),
            (0, a.jsxs)(i.FormSection, {
              className: T.marginBottom8,
              children: [
                (0, a.jsx)(i.FormTitle, {
                  className: T.marginBottom8,
                  children: E.default.Messages.FORM_LABEL_USE_RICH_CHAT_BOX,
                }),
                (0, a.jsx)(i.FormSwitch, {
                  className: T.marginTop8,
                  value: s,
                  onChange: e => {
                    u.default.track(S.AnalyticEvents.PREVIEW_MARKDOWN_TOGGLED, {
                      enabled: e,
                      location: {
                        section: S.AnalyticsSections.SETTINGS_TEXT_AND_IMAGES,
                      },
                    }),
                      c.UseRichChatInput.updateSetting(e);
                  },
                  children: E.default.Messages.PREVIEW_MARKDOWN_DESCRIPTION,
                }),
              ],
            }),
            (0, a.jsxs)(i.FormSection, {
              className: T.marginBottom40,
              children: [
                (0, a.jsx)(i.FormTitle, {
                  className: T.marginBottom8,
                  children: E.default.Messages.THREADS,
                }),
                (0, a.jsx)(i.FormSwitch, {
                  className: T.marginTop8,
                  value: f,
                  onChange: c.UseThreadSidebar.updateSetting,
                  children: E.default.Messages.USE_THREADS_SIDEBAR_DESCRIPTION,
                }),
              ],
            }),
            (0, a.jsxs)(i.FormItem, {
              title: E.default.Messages.SHOW_SPOILER_CONTENT,
              children: [
                (0, a.jsx)(i.FormText, {
                  type: i.FormText.Types.DESCRIPTION,
                  className: T.marginBottom8,
                  children: E.default.Messages.SHOW_SPOILER_CONTENT_HELP,
                }),
                (0, a.jsx)(i.RadioGroup, {
                  options: [
                    {
                      name: E.default.Messages.SHOW_SPOILER_ON_CLICK,
                      value: S.SpoilerRenderSetting.ON_CLICK,
                    },
                    {
                      name: E.default.Messages.SHOW_SPOILER_ON_SERVERS_I_MOD,
                      value: S.SpoilerRenderSetting.IF_MODERATOR,
                    },
                    {
                      name: E.default.Messages.SHOW_SPOILER_ALWAYS,
                      value: S.SpoilerRenderSetting.ALWAYS,
                    },
                  ],
                  onChange: e => c.RenderSpoilers.updateSetting(e.value),
                  value: n,
                }),
              ],
            }),
          ],
        });
      }
    },
    409462: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return C;
          },
        }),
        s("222007");
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("446674"),
        o = s("95410"),
        d = s("77078"),
        u = s("54239"),
        c = s("452804"),
        S = s("304580"),
        E = s("206230"),
        T = s("489740"),
        f = s("355025"),
        _ = s("773336"),
        m = s("161778"),
        g = s("49111"),
        h = s("782340"),
        N = s("845906");
      let I = [
        { label: "Latin alphabet", value: "aBcDeFgHiJkLmNoPqRsTuVwXyZ" },
        {
          label: "Latin pangram",
          value: "The quick brown fox jumps over the lazy dog",
        },
        { label: "Greek alphabet", value: "ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩΆΈΉΊΌΎΏ" },
        {
          label: "Greek pangram",
          value:
            "ΤΑΧΊΣΤΗ ΑΛΏΠΗΞ ΒΑΦΉΣ ΨΗΜΈΝΗ ΓΗ, ΔΡΑΣΚΕΛΊΖΕΙ ΥΠΈΡ ΝΩΘΡΟΎ ΚΥΝΌΣ",
        },
        {
          label: "Cyrillic alphabet",
          value: "АБВГЃҐДЕЀЁЖЗИЙЍКЌЛМНОПРСТУЎФХЧЦШЩЏЬЪЫЉЊЅЄЭІЇЈЋЮЯЂѢѲѴ",
        },
        {
          label: "Cyrillic pangram",
          value: "В ЧАЩАХ ЮГА ЖИЛ БЫ ЦИТРУС? ДА, НО ФАЛЬШИВЫЙ ЭКЗЕМПЛЯР!",
        },
        { label: "Custom", value: "custom" },
      ];
      function p(e, t) {
        let [s, a] = n.useState(() => {
          let s = o.default.get(e);
          return null != s ? s : t;
        });
        return (
          n.useEffect(() => {
            o.default.set(e, s);
          }, [e, s]),
          [s, a]
        );
      }
      function C() {
        let [e, t] = n.useState(
            Math.round((window.outerWidth / window.innerWidth) * 100)
          ),
          { platformZoom: s, theme: l } = (0, r.useStateFromStoresObject)(
            [m.default, E.default],
            () => ({ theme: m.default.theme, platformZoom: E.default.zoom })
          ),
          [o, C] = n.useState(""),
          A = ["normal", "medium", "semibold", "bold", "extrabold"],
          O = new Map([
            ["normal", 400],
            ["medium", 500],
            ["semibold", 600],
            ["bold", 700],
            ["extrabold", 800],
          ]);
        n.useEffect(() => {
          !_.isPlatformEmbedded &&
            window.addEventListener("resize", () => {
              t(Math.round((window.outerWidth / window.innerWidth) * 100));
            });
        }, []);
        let x = _.isPlatformEmbedded ? s : e,
          M = (0, r.useStateFromStores)([T.default], () => {
            var e, t;
            return (0, f.probablyHasBuildOverride)()
              ? null === (t = T.default.getCurrentBuildOverride()) ||
                void 0 === t
                ? void 0
                : null === (e = t.overrides) || void 0 === e
                  ? void 0
                  : e.discord_web
              : null;
          }),
          [R, D] = p("playground-overrideText", null),
          [v, L] = p("playground-defaultText", I[0].value),
          P = n.useCallback(
            e => {
              let t = I.find(t => {
                let { value: s } = t;
                return s === e;
              });
              "" === e || null == e
                ? (L(I[0].value), D(null))
                : null != t
                  ? L(t.value)
                  : (L("custom"), D(e));
            },
            [D, L]
          );
        return (0, a.jsx)("div", {
          className: N.fullscreen,
          style: "" !== o ? { "--playground-font-family": o } : {},
          children: (0, a.jsxs)(d.FormSection, {
            tag: d.FormTitleTags.H1,
            children: [
              (0, a.jsxs)("div", {
                className: N.toolbar,
                children: [
                  (0, a.jsxs)("div", {
                    children: [
                      (0, a.jsxs)(d.Text, {
                        tag: "div",
                        variant: "heading-lg/bold",
                        style: { display: "inline-block" },
                        children: ["Zoom: ", x, "%"],
                      }),
                      null != M
                        ? (0, a.jsxs)(d.Text, {
                            tag: "div",
                            variant: "heading-lg/bold",
                            style: {
                              display: "inline-block",
                              marginLeft: "1em",
                            },
                            color: "header-secondary",
                            children: ["(", M.id, ")"],
                          })
                        : null,
                    ],
                  }),
                  (0, a.jsx)(d.FormItem, {
                    children: (0, a.jsx)(d.SingleSelect, {
                      className: N.select,
                      options: I,
                      onChange: e => P(e),
                      value: v,
                    }),
                  }),
                  (0, a.jsx)(d.FormItem, {
                    children: (0, a.jsx)("div", {
                      className: N.input,
                      children: (0, a.jsx)(d.TextInput, {
                        placeholder: "Enter custom input...",
                        value: null != R ? R : "",
                        onChange: P,
                      }),
                    }),
                  }),
                  (0, a.jsx)(d.FormItem, {
                    children: (0, a.jsx)("div", {
                      className: N.input,
                      children: (0, a.jsx)(d.TextInput, {
                        placeholder: "Font family...",
                        value: o,
                        onChange: C,
                      }),
                    }),
                  }),
                  (0, a.jsx)(d.FormItem, {
                    children: (0, a.jsx)(d.RadioGroup, {
                      withTransparentBackground: !0,
                      className: N.theme,
                      orientation: "horizontal",
                      options: [
                        {
                          name: h.default.Messages.THEME_DARK,
                          value: g.ThemeTypes.DARK,
                        },
                        {
                          name: h.default.Messages.THEME_LIGHT,
                          value: g.ThemeTypes.LIGHT,
                        },
                      ],
                      onChange: e => {
                        (0, c.saveClientTheme)({ theme: e.value });
                      },
                      value: l,
                    }),
                  }),
                  (0, a.jsx)(S.default, {
                    closeAction: u.popLayer,
                    keybind: "ESC",
                  }),
                ],
              }),
              (0, a.jsxs)("div", {
                className: N.textGrid,
                children: [
                  (0, a.jsx)("div", {}),
                  A.map(e =>
                    (0, a.jsx)(
                      "div",
                      {
                        className: N.columnHeading,
                        children: (0, a.jsx)(d.Heading, {
                          variant: "eyebrow",
                          children: e,
                        }),
                      },
                      e
                    )
                  ),
                  [10, 12, 14, 15, 16, 18, 20, 24].map(e =>
                    (0, a.jsxs)(
                      n.Fragment,
                      {
                        children: [
                          (0, a.jsxs)(
                            "div",
                            {
                              className: N.fontSize,
                              children: [
                                (0, a.jsxs)(d.Heading, {
                                  variant: "eyebrow",
                                  children: [e, "px"],
                                }),
                                100 !== x
                                  ? (0, a.jsxs)(d.Heading, {
                                      variant: "eyebrow",
                                      color: "text-muted",
                                      children: ["(", (e * x) / 100, ")"],
                                    })
                                  : null,
                              ],
                            },
                            e
                          ),
                          A.map(t => {
                            var s;
                            let n =
                              null !== (s = "custom" === v ? R : v) &&
                              void 0 !== s
                                ? s
                                : "";
                            return (0, a.jsx)(
                              "div",
                              {
                                children: (0, a.jsxs)("div", {
                                  title: "".concat(e, "px at ").concat(t),
                                  className: i(N.text, {
                                    [N.breakAnywhere]: !n.includes(" "),
                                  }),
                                  style: { fontSize: e, fontWeight: O.get(t) },
                                  children: [
                                    (0, a.jsx)("p", { children: n }),
                                    (0, a.jsx)("p", {
                                      style: { textTransform: "lowercase" },
                                      children: n,
                                    }),
                                    (0, a.jsx)("p", {
                                      style: { textTransform: "uppercase" },
                                      children: n,
                                    }),
                                  ],
                                }),
                              },
                              "".concat(e, "-").concat(t)
                            );
                          }),
                        ],
                      },
                      e
                    )
                  ),
                ],
              }),
            ],
          }),
        });
      }
    },
    799458: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return E;
          },
        });
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("77078"),
        o = s("773336"),
        d = s("50885"),
        u = s("782340"),
        c = s("890957");
      class S extends n.PureComponent {
        async componentDidMount() {
          this.setState({
            openOnStartup: await d.default.getSetting("OPEN_ON_STARTUP", !0),
            startMinimized: await d.default.getSetting("START_MINIMIZED", !1),
            minimizeToTray: await d.default.getSetting("MINIMIZE_TO_TRAY", !0),
          });
        }
        render() {
          let {
              openOnStartup: e,
              startMinimized: t,
              minimizeToTray: s,
            } = this.state,
            n = (0, o.isLinux)()
              ? u.default.Messages.USER_SETTINGS_LINUX_SETTINGS
              : u.default.Messages.USER_SETTINGS_WINDOWS_SETTINGS;
          return (0, a.jsxs)(r.FormSection, {
            tag: r.FormTitleTags.H1,
            title: n,
            children: [
              (0, a.jsx)(r.FormTitle, {
                children: u.default.Messages.USER_SETTINGS_STARTUP_BEHAVIOR,
              }),
              (0, a.jsx)(r.FormSwitch, {
                className: c.marginBottom20,
                value: e,
                note: u.default.Messages.USER_SETTINGS_OPEN_ON_STARTUP_BODY,
                onChange: this.handleToggleOpenOnStartup,
                children:
                  u.default.Messages.USER_SETTINGS_OPEN_ON_STARTUP_LABEL,
              }),
              (0, o.isWindows)()
                ? (0, a.jsx)(r.FormSwitch, {
                    disabled: !e,
                    className: i(c.marginTop8, c.marginBottom20),
                    value: !!e && t,
                    note: u.default.Messages.USER_SETTINGS_START_MINIMIZED_BODY,
                    onChange: this.handleToggleStartMinimized,
                    children:
                      u.default.Messages.USER_SETTINGS_START_MINIMIZED_LABEL,
                  })
                : null,
              (0, a.jsx)(r.FormTitle, {
                className: i(c.marginTop20, c.marginBottom8),
                children: u.default.Messages.USER_SETTINGS_CLOSE_BUTTON,
              }),
              (0, a.jsx)(r.FormSwitch, {
                className: c.marginBottom20,
                value: s,
                note: u.default.Messages.USER_SETTINGS_MINIMIZE_TO_TRAY_BODY,
                onChange: this.handleToggleMinimizeToTray,
                children:
                  u.default.Messages.USER_SETTINGS_MINIMIZE_TO_TRAY_LABEL,
              }),
            ],
          });
        }
        constructor(e) {
          super(e),
            (this.handleToggleOpenOnStartup = () => {
              let e = !this.state.openOnStartup;
              this.setState({ openOnStartup: e }),
                d.default.send("TOGGLE_OPEN_ON_STARTUP", e);
            }),
            (this.handleToggleStartMinimized = () => {
              let e = !this.state.startMinimized;
              this.setState({ startMinimized: e }),
                d.default.send("TOGGLE_START_MINIMIZED", e);
            }),
            (this.handleToggleMinimizeToTray = () => {
              let e = !this.state.minimizeToTray;
              this.setState({ minimizeToTray: e }),
                d.default.send("TOGGLE_MINIMIZE_TO_TRAY", e);
            }),
            (this.state = {
              openOnStartup: !0,
              startMinimized: !1,
              minimizeToTray: !0,
            });
        }
      }
      var E = S;
    },
    227473: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return g;
          },
        }),
        s("222007"),
        s("424973");
      var a = s("37983"),
        n = s("884691"),
        l = s("917351"),
        i = s.n(l),
        r = s("446674"),
        o = s("77078"),
        d = s("211470"),
        u = s("789563"),
        c = s("305961"),
        S = s("810567"),
        E = s("843039"),
        T = s("327350"),
        f = s("565034"),
        _ = s("889245");
      function m(e, t) {
        return e.map((e, s) => {
          let a =
            "object" == typeof t ? t[s] : E.default.getExperimentBucketName(e);
          return { label: a, value: e };
        });
      }
      function g() {
        let e = (0, r.useStateFromStoresObject)([u.default], () =>
            u.default.getAllExperimentOverrideDescriptors()
          ),
          t = (0, r.useStateFromStoresObject)([u.default], () =>
            u.default.getRegisteredExperiments()
          ),
          [s, l] = n.useState(""),
          i = (0, T.getBestMatches)(
            (0, T.sortEntries)((0, T.getEntries)(t), e),
            s
          );
        return (0, a.jsxs)(o.FormSection, {
          tag: o.FormTitleTags.H1,
          title: "Experiments",
          children: [
            (0, a.jsx)(S.default, {
              size: S.default.Sizes.LARGE,
              query: s,
              onChange: l,
              onClear: () => l(""),
            }),
            i.length > 0
              ? i.map(t => {
                  let s = t.experiment.type === f.ExperimentTypes.GUILD ? N : h;
                  return (0, a.jsx)(
                    s,
                    {
                      experiment: t.experiment,
                      experimentId: t.id,
                      overrideDescriptor: e[t.id],
                    },
                    t.id
                  );
                })
              : (0, a.jsx)("div", {
                  className: _.emptyState,
                  children: (0, a.jsx)(o.Heading, {
                    variant: "heading-md/semibold",
                    children: "No Experiments Found",
                  }),
                }),
          ],
        });
      }
      function h(e) {
        var t;
        let { experiment: s, experimentId: l, overrideDescriptor: c } = e,
          [S, E] = n.useState(null != c),
          [T, g] = n.useState(!1),
          h = n.useCallback(() => {
            E(e => !e);
          }, []),
          N = (0, r.useStateFromStores)([u.default], () =>
            u.default.getUserExperimentDescriptor(l)
          ),
          I = (0, r.useStateFromStores)([u.default], () =>
            u.default.getLoadedUserExperiment(l)
          ),
          p = (0, r.useStateFromStores)([u.default], () =>
            i
              .sortBy(
                u.default.getRecentExposures(f.ExperimentTypes.USER, l),
                e => {
                  let [t, s] = e;
                  return -s;
                }
              )
              .map(e => {
                let [t, s] = e;
                return ""
                  .concat(new Date(s).toLocaleString(), " (")
                  .concat(t, ")");
              })
          ),
          C = (0, a.jsx)(o.Clickable, {
            onClick: h,
            children: (0, a.jsxs)(o.FormTitle, {
              tag: o.FormTitleTags.H3,
              className: _.title,
              children: [
                (0, a.jsxs)("div", {
                  children: [
                    (0, a.jsx)("span", { children: s.title }),
                    (0, a.jsx)(o.Text, {
                      color: "text-muted",
                      variant: "text-sm/normal",
                      children: l,
                    }),
                  ],
                }),
                (0, a.jsx)("span", {
                  className: _.experimentDate,
                  children: "User",
                }),
              ],
            }),
          });
        return S
          ? (0, a.jsxs)("div", {
              className: _.group,
              children: [
                (0, a.jsxs)(o.FormSection, {
                  children: [
                    C,
                    (0, a.jsxs)("div", {
                      children: [
                        (0, a.jsx)(o.FormItem, {
                          title: "Bucket Override",
                          children: (0, a.jsx)(o.SingleSelect, {
                            value: null != c ? c.bucket : null,
                            clearable: null != c,
                            options: m(s.buckets, s.description),
                            onChange: e => {
                              (0, d.overrideBucket)(l, e);
                            },
                          }),
                        }),
                        "string" == typeof s.description
                          ? (0, a.jsx)("div", {
                              className: _.description,
                              children: (0, a.jsx)(o.FormText, {
                                type: o.FormTextTypes.DESCRIPTION,
                                children: s.description,
                              }),
                            })
                          : null,
                      ],
                    }),
                    (0, a.jsxs)("div", {
                      className: _.description,
                      children: [
                        (0, a.jsxs)(o.FormText, {
                          type: o.FormTextTypes.DESCRIPTION,
                          children: [
                            "Current assigned to bucket ",
                            null !== (t = null == N ? void 0 : N.bucket) &&
                            void 0 !== t
                              ? t
                              : f.ExperimentBuckets.NOT_ELIGIBLE,
                          ],
                        }),
                        null == I
                          ? (0, a.jsx)(o.FormText, {
                              type: o.FormTextTypes.DESCRIPTION,
                              children:
                                'Warning: Server did not send any experiment config. You may need to check the "Send to Client" box in the admin UI.',
                            })
                          : null,
                      ],
                    }),
                    T
                      ? (0, a.jsxs)("div", {
                          children: [
                            (0, a.jsx)(o.FormTitle, {
                              tag: "h5",
                              className: _.debugTitle,
                              children: "Server Descriptor",
                            }),
                            (0, a.jsx)(o.Text, {
                              variant: "code",
                              className: _.pre,
                              children:
                                null == I
                                  ? "None"
                                  : JSON.stringify(I, void 0, 2),
                            }),
                            (0, a.jsx)(o.FormTitle, {
                              tag: "h5",
                              className: _.debugTitle,
                              children: "Override Descriptor",
                            }),
                            (0, a.jsx)(o.Text, {
                              variant: "code",
                              className: _.pre,
                              children:
                                null == c
                                  ? "None"
                                  : JSON.stringify(c, void 0, 2),
                            }),
                            (0, a.jsx)(o.FormTitle, {
                              tag: "h5",
                              className: _.debugTitle,
                              children: "Recent Exposures",
                            }),
                            (0, a.jsx)(o.Text, {
                              variant: "code",
                              className: _.pre,
                              children: 0 === p.length ? "None" : p.join("\n"),
                            }),
                          ],
                        })
                      : (0, a.jsx)(o.Button, {
                          className: _.debugButton,
                          size: o.Button.Sizes.SMALL,
                          look: o.Button.Looks.BLANK,
                          onClick: () => g(!0),
                          children: "More Details \xbb",
                        }),
                  ],
                }),
                (0, a.jsx)(o.FormDivider, { className: _.divider }),
              ],
            })
          : (0, a.jsx)("div", {
              className: _.group,
              children: (0, a.jsx)(o.FormSection, { children: C }),
            });
      }
      function N(e) {
        let { experiment: t, experimentId: s, overrideDescriptor: l } = e,
          [S, E] = n.useState(null != l),
          [T, g] = n.useState(!1),
          h = n.useCallback(() => {
            E(e => !e);
          }, []),
          N = (0, r.useStateFromStores)([u.default], () =>
            u.default.getLoadedGuildExperiment(s)
          ),
          I = (0, r.useStateFromStores)([u.default], () =>
            i
              .sortBy(
                u.default.getRecentExposures(f.ExperimentTypes.GUILD, s),
                e => {
                  let [t, s] = e;
                  return -s;
                }
              )
              .map(e => {
                let [t, s] = e;
                return ""
                  .concat(new Date(s).toLocaleString(), " (")
                  .concat(t, ")");
              })
          ),
          [p, C] = (0, r.useStateFromStoresArray)(
            [c.default, u.default],
            () => {
              let e = i.sortBy(i.values(c.default.getGuilds()), e =>
                  e.name.toLowerCase()
                ),
                t = {},
                a = [];
              for (let l of e) {
                var n;
                let e = u.default.getGuildExperimentDescriptor(s, l.id),
                  i =
                    null !== (n = null == e ? void 0 : e.bucket) && void 0 !== n
                      ? n
                      : f.ExperimentBuckets.NOT_ELIGIBLE;
                !(i in t) && (t[i] = 0),
                  t[i]++,
                  a.push("".concat(l.name, ": ").concat(i));
              }
              let l = i(t)
                .keys()
                .map(Number)
                .sort()
                .map(e => "".concat(t[e], " guilds in bucket ").concat(e))
                .join(", ");
              return [a, l];
            }
          ),
          A = (0, a.jsx)(o.Clickable, {
            onClick: h,
            children: (0, a.jsxs)(o.FormTitle, {
              tag: o.FormTitleTags.H3,
              className: _.title,
              children: [
                (0, a.jsxs)("div", {
                  children: [
                    (0, a.jsx)("span", { children: t.title }),
                    (0, a.jsx)(o.Text, {
                      color: "text-muted",
                      variant: "text-sm/normal",
                      children: s,
                    }),
                  ],
                }),
                (0, a.jsx)("span", {
                  className: _.experimentDate,
                  children: "Guild",
                }),
              ],
            }),
          });
        return S
          ? (0, a.jsxs)("div", {
              className: _.group,
              children: [
                (0, a.jsxs)(o.FormSection, {
                  children: [
                    A,
                    (0, a.jsxs)("div", {
                      children: [
                        (0, a.jsx)(o.FormItem, {
                          title: "Bucket Override",
                          children: (0, a.jsx)(o.SingleSelect, {
                            value: null != l ? l.bucket : null,
                            clearable: null != l,
                            options: m(t.buckets, t.description),
                            onChange: e => {
                              (0, d.overrideBucket)(s, e);
                            },
                          }),
                        }),
                        "string" == typeof t.description
                          ? (0, a.jsx)("div", {
                              className: _.description,
                              children: (0, a.jsx)(o.FormText, {
                                type: o.FormTextTypes.DESCRIPTION,
                                children: t.description,
                              }),
                            })
                          : null,
                      ],
                    }),
                    (0, a.jsxs)("div", {
                      className: _.description,
                      children: [
                        (0, a.jsxs)(o.FormText, {
                          type: o.FormTextTypes.DESCRIPTION,
                          children: ["Current Assignments: ", C],
                        }),
                        null == N
                          ? (0, a.jsx)(o.FormText, {
                              type: o.FormTextTypes.DESCRIPTION,
                              children:
                                'Warning: Server did not send any experiment config. You may need to check the "Send to Client" box in the admin UI.',
                            })
                          : null,
                      ],
                    }),
                    T
                      ? (0, a.jsxs)("div", {
                          children: [
                            (0, a.jsx)(o.FormTitle, {
                              tag: "h5",
                              className: _.debugTitle,
                              children: "Guild Assignments",
                            }),
                            (0, a.jsx)(o.Text, {
                              variant: "code",
                              className: _.pre,
                              children: p.join("\n"),
                            }),
                            (0, a.jsx)(o.FormTitle, {
                              tag: "h5",
                              className: _.debugTitle,
                              children: "Server Descriptor",
                            }),
                            (0, a.jsx)(o.Text, {
                              variant: "code",
                              className: _.pre,
                              children:
                                null == N
                                  ? "None"
                                  : JSON.stringify(N, void 0, 2),
                            }),
                            (0, a.jsx)(o.FormTitle, {
                              tag: "h5",
                              className: _.debugTitle,
                              children: "Override Descriptor",
                            }),
                            (0, a.jsx)(o.Text, {
                              variant: "code",
                              className: _.pre,
                              children:
                                null == l
                                  ? "None"
                                  : JSON.stringify(l, void 0, 2),
                            }),
                            (0, a.jsx)(o.FormTitle, {
                              tag: "h5",
                              className: _.debugTitle,
                              children: "Recent Exposures",
                            }),
                            (0, a.jsx)(o.Text, {
                              variant: "code",
                              className: _.pre,
                              children: 0 === I.length ? "None" : I.join("\n"),
                            }),
                          ],
                        })
                      : (0, a.jsx)(o.Button, {
                          className: _.debugButton,
                          size: o.Button.Sizes.SMALL,
                          look: o.Button.Looks.BLANK,
                          onClick: () => g(!0),
                          children: "More Details \xbb",
                        }),
                  ],
                }),
                (0, a.jsx)(o.FormDivider, { className: _.divider }),
              ],
            })
          : (0, a.jsx)("div", {
              className: _.group,
              children: (0, a.jsx)(o.FormSection, { children: A }),
            });
      }
    },
    913299: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return r;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("77078"),
        l = s("782340"),
        i = s("37346");
      function r(e) {
        let {
            className: t,
            currentUser: s,
            handleDisableAccount: r,
            handleDeleteAccount: o,
          } = e,
          d = s.isClaimed();
        return (0, a.jsxs)(n.FormSection, {
          className: t,
          title: l.default.Messages.USER_SETTINGS_ACCOUNT_REMOVAL_SECTION,
          children: [
            (0, a.jsx)(n.FormText, {
              className: i.description,
              type: n.FormText.Types.DESCRIPTION,
              children: d
                ? l.default.Messages.USER_SETTINGS_ACCOUNT_REMOVAL_DESCRIPTION
                : l.default.Messages
                    .USER_SETTINGS_ACCOUNT_REMOVAL_DESCRIPTION_UNCLAIMED,
            }),
            (0, a.jsxs)("div", {
              className: i.buttonContainer,
              children: [
                d
                  ? (0, a.jsx)(n.Button, {
                      className: i.disableButton,
                      look: n.ButtonLooks.FILLED,
                      color: n.ButtonColors.RED,
                      size: n.ButtonSizes.SMALL,
                      onClick: r,
                      children: l.default.Messages.DISABLE_ACCOUNT,
                    })
                  : null,
                (0, a.jsx)(n.Button, {
                  look: n.ButtonLooks.OUTLINED,
                  color: n.ButtonColors.RED,
                  size: n.ButtonSizes.SMALL,
                  onClick: o,
                  children: l.default.Messages.DELETE_ACCOUNT,
                }),
              ],
            }),
          ],
        });
      }
    },
    735690: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return S;
          },
        }),
        s("222007");
      var a = s("37983"),
        n = s("884691"),
        l = s("446674"),
        i = s("152584"),
        r = s("45299"),
        o = s("880397"),
        d = s("783142"),
        u = s("790618"),
        c = s("648661");
      function S() {
        let e = (0, l.useStateFromStores)([u.default], () =>
            u.default.getIsDisableSubmit()
          ),
          [t, s] = n.useState(!1),
          S = n.useCallback(async () => {
            var e, t, a;
            s(!0);
            let n = u.default.getAllPending(),
              l = (0, o.getAccountUpdateForUpdateRequest)(n),
              r = (0, o.getProfileChangesForUpdateRequest)(n),
              S = !0;
            if (Object.keys(l).length > 0) {
              let s = await (0, i.saveAccountChanges)(l);
              (S =
                S &&
                null !== (t = null == s ? void 0 : s.ok) &&
                void 0 !== t &&
                t),
                (null == s ? void 0 : s.ok)
                  ? (0, i.resetPendingAccountChanges)()
                  : (null == s
                      ? void 0
                      : null === (e = s.body) || void 0 === e
                        ? void 0
                        : e.username) != null &&
                    (0, c.showInvalidUsernameToast)();
            }
            if (Object.keys(r).length > 0) {
              let e = await (0, d.saveProfileChanges)(r);
              (S =
                S &&
                null !== (a = null == e ? void 0 : e.ok) &&
                void 0 !== a &&
                a),
                (null == e ? void 0 : e.ok) &&
                  (0, d.resetPendingProfileChanges)();
            }
            S && (0, i.clearErrors)(), s(!1);
          }, []),
          E = n.useCallback(() => {
            (0, i.resetAllPending)();
          }, []);
        return (0, a.jsx)(r.default, {
          submitting: t,
          onSave: S,
          onReset: E,
          disabled: e,
        });
      }
    },
    629145: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return Q;
          },
        }),
        s("222007");
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("627445"),
        o = s.n(r),
        d = s("446674"),
        u = s("669491"),
        c = s("77078"),
        S = s("79112"),
        E = s("145079"),
        T = s("583227"),
        f = s("426902"),
        _ = s("861370"),
        m = s("956967"),
        g = s("878720"),
        h = s("553257"),
        N = s("167209"),
        I = s("217513"),
        p = s("289918"),
        C = s("590006"),
        A = s("106435"),
        O = s("790618"),
        x = s("697218"),
        M = s("433487"),
        R = s("423487"),
        D = s("306160"),
        v = s("158998"),
        L = s("50885"),
        P = s("845579"),
        j = s("760947"),
        b = s("49111"),
        U = s("482931"),
        y = s("935583"),
        B = s("590456"),
        F = s("782340"),
        G = s("648663");
      let k = L.default.getEnableHardwareAcceleration()
        ? c.AnimatedAvatar
        : c.Avatar;
      function H(e) {
        var t, l;
        let { className: r, user: o } = e,
          d = n.useRef(null),
          S = (0, h.usePomeloEligibility)(),
          E = (0, N.useIsEligibleForPomelo)(),
          T = (0, m.useGuildAutomodProfileQuarantineErrors)(),
          f =
            null !==
              (l =
                null == T
                  ? void 0
                  : null === (t = T.nick) || void 0 === t
                    ? void 0
                    : t[0]) && void 0 !== l
              ? l
              : null,
          [_, g] = n.useState(!1);
        n.useEffect(() => {
          g(null != d.current && d.current.scrollWidth > d.current.clientWidth);
        }, [o.username]);
        let I = !o.isClaimed(),
          p = (S && !o.isPomelo() && !o.hasVerifiedEmailOrPhone()) || I,
          C = p ? F.default.Messages.POMELO_UPDATE_DISABLED_MESSAGE : void 0;
        return (0, a.jsxs)("div", {
          className: i(G.field, r),
          children: [
            (0, a.jsx)("div", {
              className: G.constrainedRow,
              children: (0, a.jsxs)("div", {
                className: G.usernameRow,
                children: [
                  (0, a.jsx)(c.FormTitle, {
                    className: G.fieldTitle,
                    children: F.default.Messages.USER_SETTINGS_LABEL_USERNAME,
                  }),
                  (0, a.jsxs)("div", {
                    className: G.usernameInnerRow,
                    ref: d,
                    children: [
                      (0, a.jsx)(c.Text, {
                        tag: "span",
                        color: "header-primary",
                        variant: "text-md/normal",
                        children: o.username,
                      }),
                      !o.isPomelo() &&
                        (0, a.jsxs)(c.Text, {
                          tag: "span",
                          color: "header-secondary",
                          variant: "text-md/normal",
                          children: ["#", o.discriminator],
                        }),
                    ],
                  }),
                ],
              }),
            }),
            E &&
              (0, a.jsx)("div", {
                className: G.pomeloWarning,
                children: (0, a.jsx)(c.Tooltip, {
                  text: F.default.Messages.ACTION_NEEDED,
                  children: e =>
                    (0, a.jsx)(R.default, {
                      ...e,
                      color: u.default.colors.STATUS_WARNING.css,
                    }),
                }),
              }),
            null != f &&
              (0, a.jsx)("div", {
                className: G.pomeloWarning,
                children: (0, a.jsx)(c.Tooltip, {
                  text: f,
                  "aria-label": !1,
                  children: e =>
                    (0, a.jsx)(R.default, {
                      ...e,
                      color: u.default.colors.STATUS_WARNING.css,
                    }),
                }),
              }),
            (0, a.jsx)(c.Tooltip, {
              text: C,
              children: e =>
                (0, a.jsx)(c.Button, {
                  ...e,
                  disabled: p,
                  size: c.Button.Sizes.SMALL,
                  className: G.fieldButton,
                  color: c.Button.Colors.PRIMARY,
                  "aria-label":
                    F.default.Messages
                      .USER_SETTINGS_ACCOUNT_EDIT_USERNAME_A11Y_LABEL,
                  onClick: () =>
                    (0, c.openModalLazy)(async () => {
                      if (E) {
                        let { default: e } = await s
                          .el("892845")
                          .then(s.bind(s, "892845"));
                        return t =>
                          (0, a.jsx)(e, {
                            source: y.PomeloEntrypoints.USER_SETTINGS_EDIT,
                            ...t,
                          });
                      }
                      {
                        let { default: e } = await s
                          .el("385559")
                          .then(s.bind(s, "385559"));
                        return t => (0, a.jsx)(e, { ...t });
                      }
                    }),
                  children: _
                    ? F.default.Messages.DISAPPROVAL
                    : F.default.Messages.EDIT,
                }),
            }),
          ],
        });
      }
      function w(e) {
        var t, s;
        let { user: l, className: r } = e,
          o = (0, m.useGuildAutomodProfileQuarantineErrors)(),
          d =
            null !==
              (s =
                null == o
                  ? void 0
                  : null === (t = o.nick) || void 0 === t
                    ? void 0
                    : t[0]) && void 0 !== s
              ? s
              : null,
          S = v.default.getGlobalName(l),
          E = n.useRef(null),
          [T, f] = n.useState(!1);
        return (
          n.useEffect(() => {
            f(
              null != E.current && E.current.scrollWidth > E.current.clientWidth
            );
          }, [S]),
          (0, a.jsxs)("div", {
            className: i(G.field, r),
            children: [
              (0, a.jsx)("div", {
                className: G.constrainedRow,
                children: (0, a.jsxs)("div", {
                  className: G.usernameRow,
                  children: [
                    (0, a.jsx)(c.FormTitle, {
                      className: G.fieldTitle,
                      children: F.default.Messages.DISPLAY_NAME,
                    }),
                    (0, a.jsx)("div", {
                      className: G.usernameInnerRow,
                      ref: E,
                      children: (0, a.jsx)(c.Text, {
                        tag: "span",
                        color: "header-primary",
                        variant: "text-md/normal",
                        children:
                          null == S
                            ? F.default.Messages
                                .USER_SETTINGS_NO_DISPLAYNAME_PLACEHOLDER
                            : S,
                      }),
                    }),
                  ],
                }),
              }),
              null != d &&
                (0, a.jsx)("div", {
                  className: G.pomeloWarning,
                  children: (0, a.jsx)(c.Tooltip, {
                    text: d,
                    "aria-label": !1,
                    children: e =>
                      (0, a.jsx)(R.default, {
                        ...e,
                        color: u.default.colors.STATUS_WARNING.css,
                      }),
                  }),
                }),
              (0, a.jsx)(c.Button, {
                className: G.fieldButton,
                size: c.Button.Sizes.SMALL,
                color: c.Button.Colors.PRIMARY,
                "aria-label":
                  F.default.Messages
                    .USER_SETTINGS_ACCOUNT_EDIT_DISPLAYNAME_A11Y_LABEL,
                onClick: z,
                children: T
                  ? F.default.Messages.DISAPPROVAL
                  : F.default.Messages.EDIT,
              }),
            ],
          })
        );
      }
      function V(e) {
        let { text: t, censor: s, revealLabel: l, hideLabel: i } = e,
          [r, o] = n.useState(!1),
          d = r ? t : s(t);
        return (0, a.jsxs)(a.Fragment, {
          children: [
            d,
            (0, a.jsx)(c.Button, {
              look: c.Button.Looks.LINK,
              size: c.Button.Sizes.MIN,
              color: c.Button.Colors.LINK,
              "aria-label": r ? i : l,
              onClick: () => o(!r),
              children: r ? F.default.Messages.HIDE : F.default.Messages.REVEAL,
            }),
          ],
        });
      }
      function Y(e) {
        let t,
          { className: n, user: l } = e;
        if (l.isClaimed()) {
          if (null == l.email)
            t = {
              buttonText: F.default.Messages.ADD,
              buttonAriaLabel:
                F.default.Messages.USER_SETTINGS_ACCOUNT_ADD_EMAIL_A11Y_LABEL,
              buttonColor: c.Button.Colors.PRIMARY,
              valueMessage:
                F.default.Messages.USER_SETTINGS_NO_EMAIL_PLACEHOLDER,
              handleClick: () =>
                (0, c.openModalLazy)(async () => {
                  let { default: e } = await s
                    .el("867693")
                    .then(s.bind(s, "867693"));
                  return t => (0, a.jsx)(e, { ...t });
                }),
            };
          else {
            let { email: e } = l;
            t = {
              buttonText: F.default.Messages.EDIT,
              buttonAriaLabel:
                F.default.Messages.USER_SETTINGS_ACCOUNT_EDIT_EMAIL_A11Y_LABEL,
              buttonColor: c.Button.Colors.PRIMARY,
              valueMessage: (0, a.jsx)(V, {
                text: e,
                censor: j.censorEmail,
                revealLabel:
                  F.default.Messages
                    .USER_SETTINGS_ACCOUNT_REVEAL_EMAIL_A11Y_LABEL,
                hideLabel:
                  F.default.Messages
                    .USER_SETTINGS_ACCOUNT_HIDE_EMAIL_A11Y_LABEL,
              }),
              handleClick: () =>
                (0, c.openModalLazy)(async () => {
                  let { default: e } = await s
                    .el("867693")
                    .then(s.bind(s, "867693"));
                  return t => (0, a.jsx)(e, { ...t });
                }),
            };
          }
        } else
          t = {
            buttonText: F.default.Messages.CLAIM_ACCOUNT_SHORT,
            buttonAriaLabel: F.default.Messages.CLAIM_ACCOUNT_SHORT,
            buttonColor: c.Button.Colors.BRAND,
            valueMessage: F.default.Messages.USER_SETTINGS_ADD_EMAIL_CLAIM,
            handleClick: () => f.default.openClaimAccountModal(),
          };
        return (0, a.jsxs)("div", {
          className: i(G.field, n),
          children: [
            (0, a.jsx)("div", {
              className: G.constrainedRow,
              children: (0, a.jsxs)("div", {
                children: [
                  (0, a.jsx)(c.FormTitle, {
                    className: G.fieldTitle,
                    children: F.default.Messages.USER_SETTINGS_LABEL_EMAIL,
                  }),
                  (0, a.jsx)("div", {
                    children: (0, a.jsx)(c.Text, {
                      tag: "span",
                      color: "header-primary",
                      variant: "text-md/normal",
                      children: t.valueMessage,
                    }),
                  }),
                ],
              }),
            }),
            (0, a.jsx)(c.Button, {
              className: G.fieldButton,
              size: c.Button.Sizes.SMALL,
              color: c.Button.Colors.PRIMARY,
              "aria-label": t.buttonAriaLabel,
              onClick: t.handleClick,
              children: t.buttonText,
            }),
          ],
        });
      }
      function K(e) {
        let t,
          { className: n, user: l } = e;
        if (!l.isClaimed()) return null;
        let { phone: r, email: o } = l,
          d = null != r;
        return (
          (t = d
            ? (0, a.jsx)(V, {
                text: r,
                censor: j.censorPhone,
                revealLabel:
                  F.default.Messages
                    .USER_SETTINGS_ACCOUNT_REVEAL_PHONE_A11Y_LABEL,
                hideLabel:
                  F.default.Messages
                    .USER_SETTINGS_ACCOUNT_HIDE_PHONE_A11Y_LABEL,
              })
            : F.default.Messages.USER_SETTINGS_NO_PHONE_PLACEHOLDER),
          (0, a.jsxs)("div", {
            className: i(G.field, n),
            children: [
              (0, a.jsx)("div", {
                className: G.constrainedRow,
                children: (0, a.jsxs)("div", {
                  children: [
                    (0, a.jsx)(c.FormTitle, {
                      className: G.fieldTitle,
                      children:
                        F.default.Messages.USER_SETTINGS_LABEL_PHONE_NUMBER,
                    }),
                    (0, a.jsx)("div", {
                      children: (0, a.jsx)(c.Text, {
                        tag: "span",
                        color: "header-primary",
                        variant: "text-md/normal",
                        children: t,
                      }),
                    }),
                  ],
                }),
              }),
              (0, a.jsxs)("div", {
                className: G.fieldButtonList,
                children: [
                  d && null != o
                    ? (0, a.jsx)(c.Button, {
                        className: i(G.fieldButton, G.removeButton),
                        size: c.Button.Sizes.SMALL,
                        look: c.Button.Looks.LINK,
                        color: c.Button.Colors.PRIMARY,
                        "aria-label":
                          F.default.Messages
                            .USER_SETTINGS_ACCOUNT_REMOVE_PHONE_A11Y_LABEL,
                        onClick: function () {
                          (0, c.openModal)(e =>
                            (0, a.jsx)(T.default, {
                              ...e,
                              title:
                                F.default.Messages
                                  .USER_SETTINGS_ACCOUNT_REMOVE_PHONE_NUMBER_TITLE,
                              children: l.hasFlag(b.UserFlags.MFA_SMS)
                                ? F.default.Messages
                                    .USER_SETTINGS_ACCOUNT_REMOVE_PHONE_SMS_BACKUP_WARNING
                                : void 0,
                              actionText: F.default.Messages.REMOVE,
                              handleSubmit: e =>
                                g.default.removePhone(
                                  e,
                                  g.ChangePhoneReason.USER_SETTINGS_UPDATE
                                ),
                            })
                          );
                        },
                        children: F.default.Messages.REMOVE,
                      })
                    : null,
                  (0, a.jsx)(c.Button, {
                    className: G.fieldButton,
                    size: c.Button.Sizes.SMALL,
                    color: c.Button.Colors.PRIMARY,
                    "aria-label": d
                      ? F.default.Messages
                          .USER_SETTINGS_ACCOUNT_EDIT_PHONE_A11Y_LABEL
                      : F.default.Messages
                          .USER_SETTINGS_ACCOUNT_ADD_PHONE_A11Y_LABEL,
                    onClick: function () {
                      (0, c.openModalLazy)(
                        async () => {
                          let { default: e } = await s
                            .el("601745")
                            .then(s.bind(s, "601745"));
                          return t =>
                            (0, a.jsx)(e, {
                              reason: g.ChangePhoneReason.USER_SETTINGS_UPDATE,
                              ...t,
                            });
                        },
                        { modalKey: U.PHONE_VERIFICATION_MODAL_KEY }
                      );
                    },
                    children: d
                      ? F.default.Messages.EDIT
                      : F.default.Messages.ADD,
                  }),
                ],
              }),
            ],
          })
        );
      }
      function W(e) {
        let { user: t } = e,
          s = (0, _.default)({
            id: t.id,
            label: F.default.Messages.COPY_ID_USER,
          }),
          n = P.DeveloperMode.useSetting();
        return n && D.SUPPORTS_COPY
          ? (0, a.jsx)(c.Popout, {
              renderPopout: e => {
                let { closePopout: t } = e;
                return (0, a.jsx)(c.Menu, {
                  onClose: t,
                  onSelect: void 0,
                  navId: "copy-id",
                  "aria-label": F.default.Messages.USER_MORE_ACTIONS_MENU_LABEL,
                  children: s,
                });
              },
              children: e =>
                (0, a.jsx)(c.Clickable, {
                  ...e,
                  className: G.overflowMenuButton,
                  "aria-label": F.default.Messages.ACTIONS,
                  children: (0, a.jsx)(M.default, {
                    className: G.overflowMenuIcon,
                    height: 24,
                    width: 24,
                  }),
                }),
            })
          : null;
      }
      function z() {
        S.default.setSection(b.UserSettingsSections.PROFILE_CUSTOMIZATION);
      }
      function Q() {
        var e;
        let t = (0, d.useStateFromStores)([x.default], () => {
            let e = x.default.getCurrentUser();
            return (
              o(
                null != e,
                "UserSettingsAccountProfileCard: currentUser cannot be undefined"
              ),
              e
            );
          }),
          s = (0, I.default)(t.id),
          n = P.StatusSetting.useSetting(),
          l = (0, d.useStateFromStores)([O.default], () =>
            O.default.getErrors()
          ),
          i =
            null == l
              ? void 0
              : null === (e = l.avatar) || void 0 === e
                ? void 0
                : e[0],
          { avatarSrc: r, avatarDecorationSrc: u } = (0, A.default)({
            user: t,
            size: c.AvatarSizes.SIZE_80,
          });
        return (0, a.jsxs)("div", {
          className: G.accountProfileCard,
          children: [
            (0, a.jsx)(p.default, {
              displayProfile: s,
              user: t,
              allowEdit: !1,
              guildId: void 0,
              profileType: B.UserProfileTypes.SETTINGS,
            }),
            (0, a.jsxs)("div", {
              className: G.userInfo,
              children: [
                (0, a.jsx)(k, {
                  className: G.avatar,
                  src: r,
                  avatarDecoration: u,
                  status: n,
                  size: c.AvatarSizes.SIZE_80,
                  "aria-label": t.username,
                }),
                (0, a.jsxs)("div", {
                  children: [
                    (0, a.jsxs)("div", {
                      className: G.profileCardUsernameRow,
                      children: [
                        (0, a.jsx)(E.default, {
                          user: t,
                          className: G.userTag,
                          discriminatorClass: G.discriminator,
                        }),
                        (0, a.jsx)(W, { user: t }),
                      ],
                    }),
                    (0, a.jsx)(C.default, {
                      className: G.badgeList,
                      user: t,
                      size: C.BadgeSizes.SIZE_22,
                    }),
                  ],
                }),
                (0, a.jsx)(c.Button, {
                  onClick: z,
                  size: c.Button.Sizes.SMALL,
                  children: F.default.Messages.USER_SETTINGS_EDIT_USER_PROFILE,
                }),
              ],
            }),
            (0, a.jsxs)("div", {
              className: G.background,
              children: [
                null != i
                  ? (0, a.jsx)(c.Text, {
                      className: G.avatarError,
                      variant: "text-xs/normal",
                      color: "text-danger",
                      children: i,
                    })
                  : null,
                (0, a.jsxs)("div", {
                  className: G.fieldList,
                  children: [
                    (0, a.jsx)(w, { className: G.fieldSpacerBottom, user: t }),
                    (0, a.jsx)(H, { user: t }),
                    (0, a.jsx)(Y, { className: G.fieldSpacer, user: t }),
                    (0, a.jsx)(K, { className: G.fieldSpacer, user: t }),
                  ],
                }),
              ],
            }),
          ],
        });
      }
    },
    969927: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return T;
          },
        }),
        s("222007");
      var a = s("37983"),
        n = s("884691"),
        l = s("446674"),
        i = s("77078"),
        r = s("152584"),
        o = s("790618"),
        d = s("258078"),
        u = s("648661"),
        c = s("49111"),
        S = s("782340"),
        E = s("742813");
      function T(e) {
        var t, s, T, f;
        let {
            transitionState: _,
            onSuccess: m,
            onClose: g,
            requirementsUpdated: h,
            noSkip: N = !1,
          } = e,
          [I, p] = n.useState(""),
          [C, A] = n.useState(""),
          [O, x] = n.useState(""),
          [M, R] = n.useState(null),
          [D, v] = n.useState(null),
          L = (0, l.useStateFromStores)([o.default], () =>
            o.default.getErrors()
          ),
          P = (0, l.useStateFromStores)([o.default], () =>
            o.default.getFormState()
          ),
          j = n.useRef(null);
        async function b(e) {
          e.preventDefault(), (0, r.clearErrors)();
          let t = !1;
          if (
            ("" === C
              ? (R(S.default.Messages.PASSWORD_REQUIREMENTS_EMPTY), (t = !0))
              : R(null),
            C !== O
              ? (v(S.default.Messages.FORM_LABEL_NEW_PASSWORD_MISMATCH),
                (t = !0))
              : v(null),
            t)
          )
            return;
          let s = await (0, r.saveAccountChanges)({
            password: I,
            newPassword: C,
          });
          if (null == s ? void 0 : s.ok) m();
          else {
            var a;
            (null == s
              ? void 0
              : null === (a = s.body) || void 0 === a
                ? void 0
                : a.username) != null && (0, u.showInvalidUsernameToast)();
          }
        }
        return (
          n.useEffect(() => {
            if (_ === i.ModalTransitionState.ENTERED) {
              var e;
              null === (e = j.current) || void 0 === e || e.focus();
            }
          }, [_]),
          (0, a.jsxs)(i.ModalRoot, {
            transitionState: _,
            children: [
              (0, a.jsxs)(i.ModalHeader, {
                separator: !1,
                className: E.header,
                children: [
                  (0, a.jsx)(d.default, {
                    color: d.default.Colors.HEADER_PRIMARY,
                    size: d.default.Sizes.SIZE_24,
                    className: E.title,
                    children: S.default.Messages.UPDATE_PASSWORD,
                  }),
                  (0, a.jsx)(i.Text, {
                    color: "header-secondary",
                    variant: "text-md/normal",
                    className: E.subtitle,
                    children: h
                      ? S.default.Messages.FORCE_PASSWORD_UPDATE_DESCRIPTION
                      : S.default.Messages
                          .USER_SETTINGS_ACCOUNT_CHANGE_PASSWORD_PROMPT_DESKTOP,
                  }),
                  !0 !== N &&
                    (0, a.jsx)(i.ModalCloseButton, {
                      onClick: g,
                      className: E.modalCloseButton,
                    }),
                ],
              }),
              (0, a.jsxs)("form", {
                onSubmit: b,
                children: [
                  (0, a.jsxs)(i.ModalContent, {
                    className: E.content,
                    children: [
                      (0, a.jsx)(i.FormItem, {
                        title: S.default.Messages.FORM_LABEL_CURRENT_PASSWORD,
                        error:
                          null == L
                            ? void 0
                            : null === (t = L.password) || void 0 === t
                              ? void 0
                              : t[0],
                        children: (0, a.jsx)(i.TextInput, {
                          type: "password",
                          value: I,
                          onChange: p,
                          inputRef: j,
                        }),
                      }),
                      (0, a.jsx)(i.FormItem, {
                        className: E.newPassword,
                        title: S.default.Messages.FORM_LABEL_NEW_PASSWORD,
                        error:
                          null !==
                            (f =
                              null !==
                                (T =
                                  null == L
                                    ? void 0
                                    : null === (s = L.new_password) ||
                                        void 0 === s
                                      ? void 0
                                      : s[0]) && void 0 !== T
                                ? T
                                : M) && void 0 !== f
                            ? f
                            : void 0,
                        children: (0, a.jsx)(i.TextInput, {
                          type: "password",
                          value: C,
                          onChange: A,
                        }),
                      }),
                      (0, a.jsx)(i.FormItem, {
                        className: E.newPassword,
                        title:
                          S.default.Messages.FORM_LABEL_CONFIRM_NEW_PASSWORD,
                        error: null != D ? D : void 0,
                        children: (0, a.jsx)(i.TextInput, {
                          type: "password",
                          value: O,
                          onChange: x,
                        }),
                      }),
                    ],
                  }),
                  (0, a.jsxs)(i.ModalFooter, {
                    children: [
                      (0, a.jsx)(i.Button, {
                        type: "submit",
                        color: i.Button.Colors.BRAND,
                        size: i.Button.Sizes.MEDIUM,
                        submitting: P === c.FormStates.SUBMITTING,
                        children: S.default.Messages.DONE,
                      }),
                      !0 !== N &&
                        (0, a.jsx)(i.Button, {
                          className: E.cancel,
                          look: i.Button.Looks.LINK,
                          color: i.Button.Colors.PRIMARY,
                          onClick: g,
                          children: S.default.Messages.CANCEL,
                        }),
                    ],
                  }),
                ],
              }),
            ],
          })
        );
      }
    },
    663952: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return x;
          },
        }),
        s("222007"),
        s("424973");
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("866227"),
        o = s.n(r),
        d = s("118810"),
        u = s("65597"),
        c = s("77078"),
        S = s("913144"),
        E = s("54239"),
        T = s("376152"),
        f = s("579565"),
        _ = s("778695"),
        m = s("298878"),
        g = s("697218"),
        h = s("888400"),
        N = s("411511"),
        I = s("782340"),
        p = s("399953");
      let C = "YYYY-MM-DD HH:mm";
      function A(e) {
        let { drop: t, enrolled: s, completed: l } = e,
          i = n.useRef(null),
          r = e => {
            let t = e.target;
            (0, d.isElement)(t, HTMLAnchorElement) && (0, E.popLayer)();
          };
        (0, n.useEffect)(() => {
          let e = i.current;
          return (
            null != e && e.addEventListener("click", r),
            () => {
              null != e && e.removeEventListener("click", r);
            }
          );
        }, []);
        let {
            title: u,
            endDate: _,
            dropsQuestId: m,
            assets: g,
            articleUrl: h,
          } = t,
          N = (0, f.getDropByQuestId)(m);
        if (null == N) return null;
        let C = () => {
          (0, T.enrollDropsUser)(m).then(() => {
            S.default.wait(async () => {
              await (0, T.fetchDropsUserStatus)();
            });
          });
        };
        return (0, a.jsxs)("div", {
          className: p.dropContainer,
          children: [
            (0, a.jsx)("div", {
              className: p.dropCard,
              children: (0, a.jsxs)("div", {
                className: p.mainPromotionCardContainer,
                children: [
                  (0, a.jsxs)("div", {
                    className: p.promotionCardLeftContainer,
                    children: [
                      (0, a.jsx)("div", {
                        className: p.promotionIcon,
                        children: (0, a.jsx)("img", {
                          alt: "",
                          src: g.iconSrc,
                          className: p.promotionIconImage,
                        }),
                      }),
                      (0, a.jsxs)("div", {
                        children: [
                          (0, a.jsx)(c.Heading, {
                            variant: "heading-md/semibold",
                            children: u,
                          }),
                          (0, a.jsx)(c.Text, {
                            variant: "text-xs/medium",
                            color: "text-normal",
                            className: p.availableUntil,
                            children:
                              I.default.Messages.DROPS_CARD_REDEEM_UNTIL.format(
                                {
                                  endDate: o(_, "YYYY-MM-DD HH:mm").format(
                                    "MMMM Do, YYYY"
                                  ),
                                }
                              ),
                          }),
                        ],
                      }),
                    ],
                  }),
                  (0, a.jsx)(c.Tooltip, {
                    text:
                      s && !l
                        ? I.default.Messages
                            .DROPS_GIFT_INVENTORY_REDEMPTION_TOOLTIP
                        : null,
                    tooltipContentClassName: p.redeemTooltipContent,
                    children: e =>
                      (0, a.jsx)(c.Button, {
                        className: p.promotionCardButton,
                        color: c.Button.Colors.BRAND,
                        size: c.Button.Sizes.SMALL,
                        onClick: C,
                        disabled: s && !l,
                        ...e,
                        children: s
                          ? I.default.Messages.REDEEM
                          : I.default.Messages.DROPS_GIFT_INVENTORY_ENROLL,
                      }),
                  }),
                ],
              }),
            }),
            (0, a.jsxs)("div", {
              className: p.dropCriteria,
              children: [
                (0, a.jsx)("img", {
                  alt: "",
                  src: g.rewardSrc,
                  className: p.dropRewardImage,
                }),
                (0, a.jsx)("div", {
                  ref: i,
                  children: (0, a.jsx)(c.Text, {
                    color: "text-muted",
                    variant: "text-sm/normal",
                    className: p.dropCriteriaText,
                    children: N.messages.giftInfo(),
                  }),
                }),
                (0, a.jsx)(c.Text, {
                  color: "text-muted",
                  variant: "text-sm/normal",
                  className: p.dropLearnMore,
                  children: I.default.Messages.DROPS_LEARN_MORE.format({
                    faqUrl: h,
                  }),
                }),
              ],
            }),
          ],
        });
      }
      function O(e) {
        let { drop: t, code: s, platform: l } = e,
          [r, d] = n.useState(!1),
          u = void 0 !== s,
          S = (0, h.dateFormat)(o(t.endDate), "LL"),
          E = I.default.Messages.DROPS_CARD_REDEEM_UNTIL.format({ endDate: S }),
          T = u
            ? I.default.Messages.OUTBOUND_PROMOTION_SEE_CODE
            : I.default.Messages.PROMOTION_CARD_ACTION_CLAIM,
          f = n.useCallback(() => d(!1), []);
        return (0, a.jsxs)(a.Fragment, {
          children: [
            (0, a.jsx)("div", {
              className: i(p.skuCard, p.promotionCard),
              children: (0, a.jsxs)("div", {
                className: p.mainPromotionCardContainer,
                children: [
                  (0, a.jsxs)("div", {
                    className: p.promotionCardLeftContainer,
                    children: [
                      (0, a.jsx)("div", {
                        className: p.promotionIcon,
                        children: (0, a.jsx)("img", {
                          alt: "",
                          src: t.assets.iconSrc,
                          className: p.promotionIconImage,
                        }),
                      }),
                      (0, a.jsxs)("div", {
                        children: [
                          (0, a.jsx)(c.Heading, {
                            variant: "heading-md/semibold",
                            children: t.title,
                          }),
                          (0, a.jsx)(c.Text, {
                            variant: "text-sm/normal",
                            color: "text-normal",
                            className: p.promotionText,
                            children: E,
                          }),
                        ],
                      }),
                    ],
                  }),
                  (0, a.jsx)(c.Button, {
                    color: c.Button.Colors.BRAND,
                    size: c.Button.Sizes.SMALL,
                    onClick: () => d(!0),
                    children: T,
                  }),
                ],
              }),
            }),
            r &&
              (0, a.jsx)(c.Modal, {
                renderModal: e =>
                  (0, a.jsx)(_.default, {
                    ...e,
                    onClose: f,
                    code: s,
                    drop: t,
                    platform: l,
                  }),
                onCloseRequest: f,
              }),
          ],
        });
      }
      var x = function (e) {
        var t;
        let { dropsOptedOut: s, dropsStatuses: n } = e,
          l = [],
          i = [],
          r = (0, u.default)([g.default], () => g.default.getCurrentUser()),
          d = !1;
        if (null == n) return null;
        for (let e of Object.keys(n)) {
          let t = (0, f.getDropByQuestId)(e);
          if (null == t) continue;
          let s = n[e],
            a = (0, f.getDropsPartnerGameNameByQuestId)(e);
          if (null == a) continue;
          let u = (0, f.getEligibilityByRunningGameDetection)(a),
            c = s.eligible && u,
            S = (0, f.getDropsExperiment)(a);
          if (null == S) continue;
          c && S.trackExposure({ location: "ENTITLEMENT_GIFTS" });
          let E = !!(
              (null == r ? void 0 : r.isStaff()) &&
              S.getCurrentConfig(
                { location: "076035_2" },
                { autoTrackExposure: !1 }
              ).showUnenroll
            ),
            T = S.getCurrentConfig(
              { location: "076035_3" },
              { autoTrackExposure: !1 }
            ).dropsEnabled;
          if (!T) continue;
          d = !0;
          let _ = o(t.endDate, C),
            m = o();
          if (
            (c && null == s.completed_at) ||
            (null != s.enrolled_at && null == s.completed_at && s.eligible)
          )
            m < _ &&
              l.push({
                dropsQuestId: e,
                dropsStatus: s,
                showUnenroll: E,
                experiment: S,
              });
          else if (null != s.code || null != s.completed_at) {
            let a = o(t.finalClaimDate, C);
            m < a &&
              i.push({
                dropsQuestId: e,
                dropsStatus: s,
                showUnenroll: E,
                experiment: S,
              });
          }
        }
        let S = (0, a.jsxs)("div", {
          className: p.dropsHeaderContainer,
          children: [
            (0, a.jsx)(c.Heading, {
              variant: "heading-md/semibold",
              children: I.default.Messages.DROPS_GIFT_INVENTORY_TITLE,
            }),
            (0, a.jsx)(m.default, { className: p.betaTagIcon }),
          ],
        });
        return d && 0 === l.length && 0 === i.length && s
          ? (0, a.jsxs)(c.FormSection, {
              children: [
                S,
                (0, a.jsx)(c.FormDivider, { className: p.divider }),
                (0, a.jsx)("div", {
                  className: p.dropsHelpText,
                  children: I.default.Messages.DROPS_READ_BLOG_TO_ENABLE.format(
                    { blogURL: N.DropsFaqUrl }
                  ),
                }),
              ],
            })
          : 0 === l.length && 0 === i.length
            ? null
            : (0, a.jsxs)(c.FormSection, {
                children: [
                  S,
                  (0, a.jsx)(c.FormDivider, { className: p.divider }),
                  l.map(e => {
                    let t = (0, f.getDropByQuestId)(e.dropsQuestId),
                      s = null != e.dropsStatus.enrolled_at,
                      n = null != e.dropsStatus.completed_at;
                    return null != t
                      ? (0, a.jsxs)(a.Fragment, {
                          children: [
                            (0, a.jsx)(
                              A,
                              { drop: { ...t }, enrolled: s, completed: n },
                              t.dropsQuestId
                            ),
                            e.showUnenroll &&
                              (0, a.jsx)(c.Button, {
                                size: c.Button.Sizes.SMALL,
                                onClick: () =>
                                  (0, T.unenrollDropsUser)(e.dropsQuestId),
                                children: "UNENROLL",
                              }),
                          ],
                        })
                      : null;
                  }),
                  i.map(e => {
                    var t, s;
                    let n = (0, f.getDropByQuestId)(e.dropsQuestId);
                    return null != n
                      ? (0, a.jsxs)(a.Fragment, {
                          children: [
                            (0, a.jsx)(
                              O,
                              {
                                drop: n,
                                code:
                                  null !== (t = e.dropsStatus.code) &&
                                  void 0 !== t
                                    ? t
                                    : void 0,
                                platform:
                                  null !== (s = e.dropsStatus.platform) &&
                                  void 0 !== s
                                    ? s
                                    : void 0,
                              },
                              e.dropsQuestId
                            ),
                            e.showUnenroll &&
                              (0, a.jsx)(c.Button, {
                                size: c.Button.Sizes.SMALL,
                                onClick: () =>
                                  (0, T.unenrollDropsUser)(e.dropsQuestId),
                                children: "UNENROLL",
                              }),
                          ],
                        })
                      : null;
                  }),
                  "string" == typeof (null == r ? void 0 : r.id) && i.length > 0
                    ? (0, a.jsx)("div", {
                        className: p.feedback,
                        children:
                          I.default.Messages.DROPS_REQUEST_FEEDBACK_SUCCESS.format(
                            {
                              feedbackURL:
                                "https://survey.alchemer.com/s3/7043098/Discord-Drops-CSAT?user_id=".concat(
                                  null !== (t = null == r ? void 0 : r.id) &&
                                    void 0 !== t
                                    ? t
                                    : ""
                                ),
                            }
                          ),
                      })
                    : null,
                ],
              });
      };
    },
    889285: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return C;
          },
        });
      var a = s("37983"),
        n = s("884691"),
        l = s("446674"),
        i = s("245187"),
        r = s("677591"),
        o = s("904519"),
        d = s("695561"),
        u = s("555826"),
        c = s("677099"),
        S = s("697218"),
        E = s("625634"),
        T = s("719923"),
        f = s("619383"),
        _ = s("358189"),
        m = s("313577"),
        g = s("236972"),
        h = s("995956"),
        N = s("664671"),
        I = s("646718"),
        p = s("949193");
      function C(e) {
        let { premiumSubscription: t } = e,
          s = (0, l.useStateFromStores)(
            [E.default],
            () => E.default.boostSlots
          ),
          C = n.useMemo(() => Object.values(s), [s]),
          A = (0, l.useStateFromStores)([S.default], () =>
            S.default.getCurrentUser()
          ),
          O = T.default.isPremium(A, I.PremiumTypes.TIER_2),
          x = (0, l.useStateFromStores)(
            [u.default],
            () => u.default.affinities
          ),
          M = (0, l.useStateFromStores)([c.default], () =>
            c.default.getFlattenedGuildIds()
          ),
          R = x.length > 0 || M.length > 0,
          D = C.length > 0,
          v = n.useMemo(
            () => C.some(e => null != e.premiumGuildSubscription),
            [C]
          );
        return (0, a.jsxs)("div", {
          children: [
            (0, a.jsx)(i.BlockedPaymentsWarning, {
              className: p.blockedPaymentsWarning,
            }),
            (0, a.jsx)(_.default, {
              hasGuildBoostSlots: D,
              hasAppliedGuildBoosts: v,
              isUserPremiumTier2: O,
            }),
            (0, a.jsx)(h.default, {
              hasAppliedGuildBoosts: v,
              isUserPremiumTier2: O,
              hasGuildAffinitiesOrInGuild: R,
            }),
            !R && (0, a.jsx)(m.default, {}),
            (0, a.jsx)(f.default, {
              guildBoostSlots: s,
              premiumSubscription: t,
            }),
            (0, a.jsx)(N.default, { guildBoostSlots: C }),
            (0, a.jsx)(g.default, { hasAppliedGuildBoosts: v }),
            (0, a.jsx)(d.default, {
              className: p.tierComparisonTable,
              hideHeading: !0,
              hideTier0: !0,
            }),
            (0, a.jsx)(r.default, { cardClassName: p.boosterRecognitionCard }),
            (0, a.jsx)(o.default, { className: p.faq }),
          ],
        });
      }
    },
    619383: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return x;
          },
        }),
        s("424973"),
        s("222007");
      var a = s("37983"),
        n = s("884691"),
        l = s("907002"),
        i = s("65597"),
        r = s("77078"),
        o = s("206230"),
        d = s("36685"),
        u = s("308086"),
        c = s("359499"),
        S = s("305961"),
        E = s("663745"),
        T = s("427459"),
        f = s("299039"),
        _ = s("397723"),
        m = s("717266"),
        g = s("131424"),
        h = s("49111"),
        N = s("646718"),
        I = s("782340"),
        p = s("8741");
      function C(e) {
        let {
            guildTier: t,
            guildBoostSlot: s,
            showAltText: i,
            isCanceled: o,
            premiumSubscription: d,
          } = e,
          u = n.useMemo(() => {
            if (o)
              return I.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_PENDING_CANCELATION.format(
                { date: d.currentPeriodEnd }
              );
            let e =
              null != s.premiumGuildSubscription
                ? f.default.extractTimestamp(s.premiumGuildSubscription.id)
                : 0;
            return I.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_DURATION_SHORTENED.format(
              { date: new Date(e) }
            );
          }, [s, o, d]),
          c = n.useMemo(
            () =>
              (function (e) {
                if (null == e || e === h.BoostedGuildTiers.NONE) return "";
                let t = [
                  I.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PERK_EMOJI_SLOTS.format(
                    { numEmojiSlots: N.BoostedGuildFeatures[e].limits.emoji }
                  ),
                  I.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PERK_STICKER_SLOTS.format(
                    {
                      numStickerSlots:
                        N.BoostedGuildFeatures[e].limits.stickers,
                    }
                  ),
                  I.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PERK_SOUNDBOARD_SLOTS.format(
                    {
                      numSoundboardSlots:
                        N.BoostedGuildFeatures[e].limits.soundboardSounds,
                    }
                  ),
                  I.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PERK_STREAM_QUALITY.format(
                    {
                      resolution:
                        N.BoostedGuildFeatures[e].limits
                          .screenShareQualityResolution,
                      framerate:
                        N.BoostedGuildFeatures[e].limits
                          .screenShareQualityFramerate,
                    }
                  ),
                  I.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PERK_AUDIO_QUALITY.format(
                    { bitrate: N.BoostedGuildFeatures[e].limits.bitrate / 1e3 }
                  ),
                  I.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PERK_UPLOAD_SIZE_LIMIT.format(
                    {
                      filesize:
                        N.BoostedGuildFeatures[e].limits.fileSize / 1024 / 1024,
                    }
                  ),
                  I.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PERK_VIDEO_STAGE_SEATS.format(
                    {
                      numVideoStageSeats:
                        N.BoostedGuildFeatures[e].limits.stageVideoUsers,
                    }
                  ),
                  I.default.Messages
                    .GUILD_BOOSTING_USER_SETTINGS_PERK_ANIMATED_GUILD_ICON,
                  I.default.Messages
                    .GUILD_BOOSTING_USER_SETTINGS_PERK_GUILD_INVITE_BACKGROUND,
                ];
                e >= h.BoostedGuildTiers.TIER_2 &&
                  (t.push(
                    I.default.Messages
                      .GUILD_BOOSTING_USER_SETTINGS_PERK_GUILD_BANNER
                  ),
                  t.push(
                    I.default.Messages
                      .GUILD_BOOSTING_USER_SETTINGS_PERK_CUSTOM_ROLE_ICONS
                  )),
                  e >= h.BoostedGuildTiers.TIER_3 &&
                    t.push(
                      I.default.Messages
                        .GUILD_BOOSTING_USER_SETTINGS_PERK_VANITY_URL
                    );
                let s = t[Math.floor(Math.random() * t.length)];
                return I.default.Messages.GUILD_BOOSTING_USER_SETTINGS_PERK_TEMPLATE.format(
                  { perk: s }
                );
              })(t),
            [t]
          ),
          S = (0, l.useTransition)(i, {
            from: { opacity: 0 },
            enter: { opacity: 1 },
            leave: { opacity: 0 },
          });
        return o || t === h.BoostedGuildTiers.NONE
          ? (0, a.jsx)("div", {
              className: p.boostDescriptionInnerContainer,
              children: (0, a.jsx)(r.Text, {
                variant: "text-sm/medium",
                color: "text-muted",
                children: u,
              }),
            })
          : S((e, t) =>
              (0, a.jsx)(l.animated.div, {
                style: e,
                className: p.boostDescriptionInnerContainer,
                children: (0, a.jsx)(r.Text, {
                  variant: "text-sm/medium",
                  color: "text-muted",
                  children: t ? c : u,
                }),
              })
            );
      }
      function A(e) {
        let {
            guildTier: t,
            guildBoostSlot: s,
            premiumSubscription: l,
            hasCancelableGuildBoostSlot: d,
            showAltText: c,
            isLastGuildBoostSlot: S,
          } = e,
          f = (0, i.default)([o.default], () => o.default.useReducedMotion),
          g = n.useMemo(
            () =>
              null != s.cooldownEndsAt ? new Date(s.cooldownEndsAt) : null,
            [s]
          ),
          h = n.useMemo(() => null != g && g > new Date(), [g]),
          N = (0, T.isGuildBoostSlotCanceled)(s);
        return (0, a.jsxs)("div", {
          className: p.boostContainer,
          children: [
            (0, a.jsxs)("div", {
              className: p.boostInnerContainer,
              children: [
                (0, a.jsx)(m.default, {
                  isCanceled: N,
                  hasCooldown: h,
                  useReducedMotion: f,
                }),
                (0, a.jsx)("div", {
                  className: p.boostDescriptionContainer,
                  children:
                    null != g && h && !N
                      ? (0, a.jsx)(_.default, {
                          className: p.boostDescriptionInnerContainer,
                          cooldown: g.getTime(),
                        })
                      : (0, a.jsx)(C, {
                          guildTier: t,
                          guildBoostSlot: s,
                          showAltText: c,
                          isCanceled: N,
                          premiumSubscription: l,
                        }),
                }),
                (0, a.jsx)(r.Popout, {
                  renderPopout: function (e) {
                    let { closePopout: t } = e;
                    return (0, a.jsx)(u.default, {
                      onClose: t,
                      guildBoostSlot: s,
                      premiumSubscription: l,
                      hasCancelableGuildBoostSlot: d,
                    });
                  },
                  position: "right",
                  align: "center",
                  children: e =>
                    (0, a.jsx)(r.Clickable, {
                      ...e,
                      "aria-label": I.default.Messages.MORE_OPTIONS,
                      className: p.boostSlotMenuIcon,
                      children: (0, a.jsx)(E.default, {}),
                    }),
                }),
              ],
            }),
            !S && (0, a.jsx)("div", { className: p.boostContainerSeparator }),
          ],
        });
      }
      function O(e) {
        let {
            guildId: t,
            guildBoostSlotRecords: s,
            premiumSubscription: n,
            hasCancelableGuildBoostSlot: l,
            showAltText: r,
          } = e,
          o = (0, i.default)([S.default], () => S.default.getGuild(t), [t]);
        return (0, a.jsxs)("div", {
          className: p.appliedBoostContainer,
          children: [
            (0, a.jsx)(g.default, { guildId: t, boostingVariant: !1 }),
            s.map((e, t) =>
              (0, a.jsx)(
                A,
                {
                  guildTier: null == o ? void 0 : o.premiumTier,
                  guildBoostSlot: e,
                  premiumSubscription: n,
                  hasCancelableGuildBoostSlot: l,
                  showAltText: r,
                  isLastGuildBoostSlot: t === s.length - 1,
                },
                e.id
              )
            ),
          ],
        });
      }
      function x(e) {
        let { guildBoostSlots: t, premiumSubscription: s } = e,
          [l, i] = n.useState(!1),
          r = (0, c.useFreeBoostTenureRewardEntitlement)();
        n.useEffect(() => {
          let e = -1;
          return (
            null != s &&
              (e = setInterval(() => {
                i(e => !e);
              }, 3e3)),
            () => {
              clearInterval(e);
            }
          );
        }, [s]);
        let { boostsByGuildId: o, numActiveGuildBoostSlots: u } =
          n.useMemo(() => {
            let e = 0,
              s = {};
            return (
              Object.keys(t).forEach(a => {
                let n = t[a];
                if (
                  (!(0, T.isGuildBoostSlotCanceled)(n) && e++,
                  null != n.premiumGuildSubscription)
                ) {
                  let e = n.premiumGuildSubscription.guildId;
                  !(e in s) && (s[e] = []), s[e].push(n);
                }
              }),
              { boostsByGuildId: s, numActiveGuildBoostSlots: e }
            );
          }, [t]);
        if (null == s || 0 === Object.keys(o).length) return null;
        let S = (0,
          d.getNumIncludedAndTenureRewardPremiumGuildSubscriptionSlots)(s, r),
          E = u > S;
        return (0, a.jsxs)("div", {
          className: p.wrapper,
          children: [
            (0, a.jsx)("div", {
              className: p.container,
              children: f.default
                .keys(o)
                .map(e =>
                  (0, a.jsx)(
                    O,
                    {
                      guildId: e,
                      guildBoostSlotRecords: o[e],
                      premiumSubscription: s,
                      hasCancelableGuildBoostSlot: E,
                      showAltText: l,
                    },
                    e
                  )
                ),
            }),
            (0, a.jsx)("div", { className: p.mainSeparator }),
          ],
        });
      }
    },
    840022: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return E;
          },
        });
      var a = s("37983"),
        n = s("884691"),
        l = s("77078"),
        i = s("685665"),
        r = s("954296"),
        o = s("118503"),
        d = s("427459"),
        u = s("49111"),
        c = s("782340"),
        S = s("157674"),
        E = function () {
          let e = n.useRef(null),
            { analyticsLocations: t } = (0, i.default)();
          function E(s) {
            null != e.current && (0, l.closeModal)(e.current),
              (0, r.addAppliedGuildBoosts)({
                analyticsLocation: {
                  page: u.AnalyticsPages.GUILD_BOOSTING_USER_SETTINGS,
                  section:
                    u.AnalyticsSections.GUILD_BOOSTING_BOOST_ANY_GUILD_CTA,
                  object: u.AnalyticsObjects.BUTTON_CTA,
                  objectType: u.AnalyticsObjectTypes.BUY,
                },
                analyticsLocations: t,
                guild: s,
              });
          }
          async function T() {
            e.current = await (0, l.openModalLazy)(
              async () => {
                let { default: e } = await s
                  .el("936992")
                  .then(s.bind(s, "936992"));
                return t => (0, a.jsx)(e, { ...t, onSelectGuild: E });
              },
              {
                onCloseRequest: () => {
                  null != e.current && (0, l.closeModal)(e.current);
                },
              }
            );
          }
          let f = (0, d.generateBlockGuildSubscriptionPurchasesNode)();
          return (0, a.jsxs)("div", {
            className: S.wrapper,
            children: [
              (0, a.jsx)(o.default, {
                className: S.boostIcon,
                width: 16,
                height: 16,
              }),
              (0, a.jsx)(l.Text, {
                className: S.copy,
                color: "header-secondary",
                variant: "text-sm/medium",
                children:
                  c.default.Messages.GUILD_BOOSTING_USER_SETTINGS_BOOST_ANY_GUILD_CTA.format(
                    {
                      boostAnyGuildHook: (e, t) => {
                        let s = null != f,
                          n = (0, a.jsx)(
                            l.Button,
                            {
                              className: S.cta,
                              disabled: s,
                              color: l.Button.Colors.LINK,
                              look: l.Button.Looks.LINK,
                              onClick: s ? void 0 : T,
                              children: e,
                            },
                            t
                          );
                        return s
                          ? (0, a.jsx)(
                              l.Tooltip,
                              {
                                text: f,
                                children: e =>
                                  (0, a.jsx)("span", { ...e, children: n }),
                              },
                              t
                            )
                          : n;
                      },
                    }
                  ),
              }),
            ],
          });
        };
    },
    560437: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return r;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("414456"),
        l = s.n(n),
        i = s("301381"),
        r = function (e) {
          let {
            className: t,
            imageClassName: n,
            boostInCooldown: r,
            useReducedMotion: o,
          } = e;
          return (0, a.jsx)("div", {
            className: l(i.imageWrapper, t, { [i.cooldown]: r }),
            children: (0, a.jsx)("img", {
              className: l(i.image, n, { [i.cooldownImage]: r }),
              src: r ? s("834461") : o ? s("591779") : s("106785"),
              alt: "",
            }),
          });
        };
    },
    397723: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return o;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("77078"),
        l = s("174727"),
        i = s("888400"),
        r = s("782340"),
        o = function (e) {
          let { className: t, cooldown: s } = e,
            o = (0, l.default)(s);
          return (0, a.jsx)(n.Text, {
            className: t,
            variant: "text-sm/medium",
            color: "text-muted",
            children: (0, i.unitsAsStrings)(o, {
              days: r.default.Messages
                .PREMIUM_GUILD_COOLDOWN_AVAILABLE_COUNTDOWN_DAYS,
              hours:
                r.default.Messages
                  .PREMIUM_GUILD_COOLDOWN_AVAILABLE_COUNTDOWN_HOURS,
              minutes:
                r.default.Messages
                  .PREMIUM_GUILD_COOLDOWN_AVAILABLE_COUNTDOWN_MINUTES,
            }),
          });
        };
    },
    717266: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return o;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("414456"),
        l = s.n(n),
        i = s("560437"),
        r = s("830875"),
        o = function (e) {
          let {
            className: t,
            hasCooldown: n,
            isCanceled: o,
            useReducedMotion: d,
          } = e;
          return (0, a.jsxs)("div", {
            className: l(r.boostIconContainer, t),
            children: [
              o
                ? (0, a.jsx)("img", {
                    className: l(r.boostIcon, r.boostIconCanceled),
                    src: s("430208"),
                    alt: "",
                  })
                : (0, a.jsx)(i.default, {
                    className: r.boostIcon,
                    boostInCooldown: n,
                    useReducedMotion: d,
                  }),
              !o &&
                n &&
                (0, a.jsx)("img", {
                  className: r.snowflake,
                  src: s("203705"),
                  alt: "",
                }),
            ],
          });
        };
    },
    131424: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return m;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("414456"),
        l = s.n(n),
        i = s("65597"),
        r = s("77078"),
        o = s("95039"),
        d = s("617917"),
        u = s("305961"),
        c = s("476263"),
        S = s("118503"),
        E = s("427459"),
        T = s("49111"),
        f = s("782340"),
        _ = s("605566"),
        m = function (e) {
          let { className: t, guildId: s, boostingVariant: n } = e,
            m = (0, i.default)([u.default], () => u.default.getGuild(s), [s]);
          return null == m
            ? (0, a.jsx)("div", {
                className: l(t, _.guildContainer),
                children: (0, a.jsx)("div", {
                  className: _.guildInfoContainer,
                  children: (0, a.jsx)(r.Text, {
                    variant: "text-lg/bold",
                    children:
                      f.default.Messages
                        .GUILD_BOOSTING_USER_SETTINGS_APPLIED_GUILD_BOOST_UNKNOWN_GUILD,
                  }),
                }),
              })
            : (0, a.jsxs)("div", {
                className: l(t, _.guildContainer),
                children: [
                  (0, a.jsx)(c.default, {
                    className: _.guildIcon,
                    guild: m,
                    size: c.default.Sizes.LARGER,
                  }),
                  (0, a.jsxs)("div", {
                    className: _.guildInfoContainer,
                    children: [
                      (0, a.jsx)(r.Text, {
                        variant: "text-lg/bold",
                        children: m.name,
                      }),
                      (0, a.jsxs)("div", {
                        className: _.guildBoostStatsContainer,
                        children: [
                          (0, a.jsx)(S.default, {
                            className: _.guildBoostBadge,
                            width: 16,
                            height: 16,
                          }),
                          (0, a.jsx)(r.Text, {
                            variant: "text-sm/bold",
                            color: "text-muted",
                            children:
                              f.default.Messages.PREMIUM_GUILD_PERKS_MODAL_HEADER_SUBSCRIPTION_COUNT.format(
                                { subscriptions: m.premiumSubscriberCount }
                              ),
                          }),
                          (0, a.jsx)("div", { className: _.separator }),
                          (0, a.jsx)(r.Text, {
                            variant: "text-sm/bold",
                            color: "text-muted",
                            children: (0, E.getTierName)(m.premiumTier, {
                              useLevels: !1,
                            }),
                          }),
                        ],
                      }),
                    ],
                  }),
                  n
                    ? (0, a.jsx)(d.default, {
                        guild: m,
                        analyticsLocation: {
                          page: T.AnalyticsPages.GUILD_BOOSTING_USER_SETTINGS,
                          section:
                            T.AnalyticsSections
                              .GUILD_BOOSTING_RECOMMENDED_SERVER_BOOST_THIS_SERVER_CTA,
                          object: T.AnalyticsObjects.BUTTON_CTA,
                          objectType: T.AnalyticsObjectTypes.BUY,
                        },
                        pauseAnimation: !0,
                        size: r.Button.Sizes.MEDIUM,
                        color: r.Button.Colors.PRIMARY,
                        buttonText:
                          f.default.Messages
                            .GUILD_BOOSTING_USER_SETTINGS_BOOST_THIS_SERVER,
                      })
                    : (0, a.jsx)(r.Button, {
                        color: r.Button.Colors.PRIMARY,
                        onClick: () => {
                          (0, o.openGuildBoostingMarketingModal)({
                            guildId: m.id,
                            location: {
                              section:
                                T.AnalyticsSections
                                  .GUILD_BOOSTING_RECOMMENDED_SERVER_GO_TO_SERVER_CTA,
                            },
                          });
                        },
                        size: r.Button.Sizes.MEDIUM,
                        children: f.default.Messages.NAVIGATE_TO_GUILD,
                      }),
                ],
              });
        };
    },
    358189: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return r;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("77078"),
        l = s("782340"),
        i = s("340455"),
        r = function (e) {
          let {
            hasGuildBoostSlots: t,
            hasAppliedGuildBoosts: r,
            isUserPremiumTier2: o,
          } = e;
          return (0, a.jsxs)("div", {
            className: i.wrapper,
            children: [
              (0, a.jsx)("div", {
                className: i.guildBoostGemWrapper,
                children: (0, a.jsx)("img", {
                  alt: "",
                  className: i.guildBoostGem,
                  src: s("591779"),
                }),
              }),
              (0, a.jsxs)("div", {
                className: i.gradient,
                children: [
                  (0, a.jsx)(n.Heading, {
                    variant: "display-md",
                    className: i.heading,
                    children: (function (e) {
                      let {
                        hasGuildBoostSlots: t,
                        hasAppliedGuildBoosts: s,
                        isUserPremiumTier2: a,
                      } = e;
                      return t
                        ? a && !s
                          ? l.default.Messages.GUILD_BOOSTING_USER_SETTINGS_HEADING_HAS_UNAPPLIED_FREE_GUILD_BOOSTS.format()
                          : l.default.Messages.GUILD_BOOSTING_USER_SETTINGS_HEADING_YOUR_GUILD_BOOSTS.format()
                        : l.default.Messages
                            .GUILD_BOOSTING_USER_SETTINGS_HEADING_NO_GUILD_BOOSTS;
                    })({
                      hasGuildBoostSlots: t,
                      isUserPremiumTier2: o,
                      hasAppliedGuildBoosts: r,
                    }),
                  }),
                  (0, a.jsx)("svg", {
                    viewBox: "0 0 660 210",
                    className: i.wave,
                    children: (0, a.jsx)("path", {
                      d: "M101.3,45.5C57.5,45.9,15.9,82.2,0,99.5V210h660V53.5c-164-137-265.2,32.4-385.8,33.6  C177.7,88.1,158.1,45,101.3,45.5z",
                    }),
                  }),
                ],
              }),
            ],
          });
        };
    },
    313577: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return c;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("77078"),
        l = s("54239"),
        i = s("393414"),
        r = s("49111"),
        o = s("782340"),
        d = s("517892"),
        u = s("156465");
      function c() {
        return (0, a.jsxs)("div", {
          className: d.wrapper,
          children: [
            (0, a.jsx)("img", { className: d.icon, alt: "", src: u }),
            (0, a.jsxs)("div", {
              className: d.info,
              children: [
                (0, a.jsx)(n.Text, {
                  variant: "text-lg/bold",
                  children:
                    o.default.Messages
                      .GUILD_BOOSTING_USER_SETTINGS_PUBLIC_SERVER_TITLE,
                }),
                (0, a.jsx)(n.Text, {
                  variant: "text-sm/medium",
                  color: "text-muted",
                  children:
                    o.default.Messages
                      .GUILD_BOOSTING_USER_SETTINGS_PUBLIC_SERVER_SUBTITLE,
                }),
              ],
            }),
            (0, a.jsx)(n.Button, {
              color: n.Button.Colors.PRIMARY,
              onClick: () => {
                (0, i.transitionTo)(r.Routes.GUILD_DISCOVERY),
                  (0, l.popLayer)();
              },
              size: n.Button.Sizes.LARGE,
              children:
                o.default.Messages
                  .GUILD_BOOSTING_USER_SETTINGS_PUBLIC_SERVER_CTA,
            }),
          ],
        });
      }
    },
    236972: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return E;
          },
        }),
        s("424973");
      var a = s("37983"),
        n = s("884691"),
        l = s("446674"),
        i = s("77078"),
        r = s("555826"),
        o = s("677099"),
        d = s("840022"),
        u = s("131424"),
        c = s("782340"),
        S = s("561275"),
        E = function (e) {
          let { hasAppliedGuildBoosts: t } = e,
            s = (0, l.useStateFromStores)(
              [r.default],
              () => r.default.affinities
            ),
            E = (0, l.useStateFromStores)([o.default], () =>
              o.default.getFlattenedGuildIds()
            ),
            T = n.useMemo(() => {
              let e = s.slice(0, 3).map(e => e.guildId);
              for (let t = 0; t < E.length && !(e.length >= 3); t++) {
                let s = E[t];
                !e.includes(s) && e.push(s);
              }
              return e;
            }, [s, E]);
          return 0 === T.length
            ? null
            : (0, a.jsxs)("div", {
                className: S.wrapper,
                children: [
                  t &&
                    (0, a.jsx)(i.Heading, {
                      variant: "heading-lg/semibold",
                      className: S.header,
                      children:
                        c.default.Messages
                          .GUILD_BOOSTING_USER_SETTINGS_RECOMMENDED_SERVERS_HEADING,
                    }),
                  T.map(e =>
                    (0, a.jsx)(
                      u.default,
                      {
                        className: S.recommendedServerCard,
                        guildId: e,
                        boostingVariant: !0,
                      },
                      e
                    )
                  ),
                  E.length > 3 && (0, a.jsx)(d.default, {}),
                ],
              });
        };
    },
    995956: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return S;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("77078"),
        l = s("701909"),
        i = s("719923"),
        r = s("153160"),
        o = s("49111"),
        d = s("646718"),
        u = s("782340"),
        c = s("999509"),
        S = function (e) {
          let {
              hasAppliedGuildBoosts: t,
              isUserPremiumTier2: s,
              hasGuildAffinitiesOrInGuild: S,
            } = e,
            { subtitle: E, flavor: T } = (function (e) {
              let {
                hasAppliedGuildBoosts: t,
                isUserPremiumTier2: s,
                hasGuildAffinitiesOrInGuild: a,
              } = e;
              if (!a)
                return {
                  subtitle:
                    u.default.Messages
                      .GUILD_BOOSTING_USER_SETTINGS_NO_JOINED_SERVER_SUBTITLE,
                };
              if (t)
                return {
                  subtitle:
                    u.default.Messages
                      .GUILD_BOOSTING_USER_SETTINGS_SUBTITLE_ACTIVE_BOOSTS,
                  flavor:
                    u.default.Messages.GUILD_BOOSTING_USER_SETTINGS_SUBTITLE_ACTIVE_BOOSTS_FLAVOR.format(
                      {
                        helpdeskArticle: l.default.getArticleURL(
                          o.HelpdeskArticles.GUILD_SUBSCRIPTIONS
                        ),
                      }
                    ),
                };
              let n =
                  d.SubscriptionPlanInfo[
                    d.SubscriptionPlans.PREMIUM_MONTH_GUILD
                  ],
                c = i.default.getDefaultPrice(n.id, s),
                S = (0, r.formatRate)(
                  (0, r.formatPrice)(c.amount, c.currency),
                  n.interval,
                  n.intervalCount
                );
              return {
                subtitle: s
                  ? u.default.Messages
                      .GUILD_BOOSTING_USER_SETTINGS_SUBTITLE_SUBBED_NO_ACTIVE_BOOSTS
                  : u.default.Messages
                      .GUILD_BOOSTING_USER_SETTINGS_SUBTITLE_NO_SUB_NO_ACTIVE_BOOSTS,
                flavor:
                  u.default.Messages.GUILD_BOOSTING_USER_SETTINGS_SUBTITLE_NO_ACTIVE_BOOSTS_FLAVOR.format(
                    { monthlyGuildBoostPrice: S }
                  ),
              };
            })({
              hasAppliedGuildBoosts: t,
              isUserPremiumTier2: s,
              hasGuildAffinitiesOrInGuild: S,
            });
          return (0, a.jsxs)("div", {
            className: c.wrapper,
            children: [
              (0, a.jsx)(n.Heading, {
                variant: "heading-lg/bold",
                className: c.subtitle,
                children: E,
              }),
              null != T &&
                (0, a.jsx)(n.Text, { variant: "text-sm/normal", children: T }),
            ],
          });
        };
    },
    664671: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return x;
          },
        }),
        s("424973");
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("446674"),
        o = s("77078"),
        d = s("206230"),
        u = s("36685"),
        c = s("626301"),
        S = s("359499"),
        E = s("697218"),
        T = s("521012"),
        f = s("427459"),
        _ = s("719923"),
        m = s("560437"),
        g = s("397723"),
        h = s("717266"),
        N = s("49111"),
        I = s("782340"),
        p = s("998228");
      function C(e) {
        let {
            guildBoostSlot: t,
            isCancellable: s,
            onCancel: l,
            onUncancel: i,
            premiumSubscription: r,
            useReducedMotion: d,
          } = e,
          u = n.useMemo(
            () =>
              null != t.cooldownEndsAt ? new Date(t.cooldownEndsAt) : null,
            [t]
          ),
          c = (0, f.isGuildBoostSlotCanceled)(t);
        return (0, a.jsxs)(
          "li",
          {
            className: p.unappliedGuildBoostSlot,
            children: [
              (0, a.jsxs)("div", {
                className: p.unappliedGuildBoostSlotContentPrimary,
                children: [
                  (0, a.jsx)(h.default, {
                    className: p.unappliedGuildBoostSlotIcon,
                    hasCooldown: t.isOnCooldown(),
                    isCanceled: c,
                    useReducedMotion: d,
                  }),
                  c && null != r
                    ? (0, a.jsx)(o.Text, {
                        color: "text-muted",
                        variant: "text-sm/medium",
                        children:
                          I.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_PENDING_CANCELATION.format(
                            { date: r.currentPeriodEnd }
                          ),
                      })
                    : t.isOnCooldown() && null != u
                      ? (0, a.jsx)(g.default, { cooldown: u.getTime() })
                      : (0, a.jsx)(o.Text, {
                          className: p.unappliedGuildBoostSlotDescription,
                          color: "text-muted",
                          variant: "text-sm/medium",
                          children:
                            I.default.Messages
                              .GUILD_BOOSTING_USER_SETTINGS_UNAPPLIED_GUILD_BOOST_DESCRIPTION,
                        }),
                ],
              }),
              (0, a.jsxs)("div", {
                className: p.unappliedGuildBoostSlotContentSecondary,
                children: [
                  s &&
                    !c &&
                    (0, a.jsx)(o.Button, {
                      className: p.unappliedGuildBoostSlotCta,
                      color: o.Button.Colors.PRIMARY,
                      look: o.Button.Looks.LINK,
                      onClick: () => l(t),
                      size: o.Button.Sizes.NONE,
                      children:
                        I.default.Messages
                          .PREMIUM_GUILD_SUBSCRIPTION_SLOT_CANCEL_BUTTON,
                    }),
                  c &&
                    (0, a.jsx)(o.Button, {
                      className: p.unappliedGuildBoostSlotCta,
                      color: o.Button.Colors.PRIMARY,
                      look: o.Button.Looks.LINK,
                      onClick: () => i(t),
                      size: o.Button.Sizes.NONE,
                      children:
                        I.default.Messages
                          .PREMIUM_GUILD_SUBSCRIPTION_SLOT_UNCANCEL_BUTTON,
                    }),
                ],
              }),
            ],
          },
          t.id
        );
      }
      function A(e) {
        (0, o.openModalLazy)(async () => {
          let { default: t } = await s.el("933182").then(s.bind(s, "933182"));
          return s => (0, a.jsx)(t, { ...s, guildBoostSlot: e });
        });
      }
      function O(e) {
        (0, o.openModalLazy)(async () => {
          let { default: t } = await s.el("738400").then(s.bind(s, "738400"));
          return s => (0, a.jsx)(t, { ...s, guildBoostSlotId: e.id });
        });
      }
      var x = function (e) {
        let { guildBoostSlots: t } = e,
          l = (0, r.useStateFromStores)([T.default], () =>
            T.default.getPremiumTypeSubscription()
          ),
          g = (0, r.useStateFromStores)(
            [d.default],
            () => d.default.useReducedMotion
          ),
          h = (0, r.useStateFromStores)([E.default], () =>
            E.default.getCurrentUser()
          ),
          x = (0, S.useFreeBoostTenureRewardEntitlement)(),
          {
            appliedGuildBoostSlots: M,
            unappliedGuildBoostSlots: R,
            numActiveGuildBoostSlots: D,
          } = n.useMemo(() => {
            let e = [],
              s = [],
              a = 0;
            return (
              t.forEach(t => {
                !(0, f.isGuildBoostSlotCanceled)(t) && a++,
                  null != t.premiumGuildSubscription ? e.push(t) : s.push(t);
              }),
              {
                appliedGuildBoostSlots: e,
                unappliedGuildBoostSlots: s,
                numActiveGuildBoostSlots: a,
              }
            );
          }, [t]),
          v =
            null != l
              ? (0,
                u.getNumIncludedAndTenureRewardPremiumGuildSubscriptionSlots)(
                  l,
                  x
                )
              : 0,
          L = Math.max(0, v - M.length),
          P = D > v,
          j = v === t.length,
          b = j && L === v ? v : 1,
          U = n.useMemo(() => {
            let e = [];
            for (let t = 0; t < b; t++)
              e.push(
                (0, a.jsx)(
                  m.default,
                  { className: p.headerBoostGem, useReducedMotion: g },
                  t
                )
              );
            return e;
          }, [b, g]),
          y = n.useMemo(() => R.find(e => e.isAvailable()), [R]);
        if (0 === R.length) return null;
        let B = R.length;
        return (0, a.jsxs)("div", {
          className: p.wrapper,
          children: [
            !1,
            (0, a.jsxs)("div", {
              className: i(p.header, {
                [p.headerWithBoost]: !1,
                [p.headerWithoutSpecialHeader]: true,
              }),
              children: [
                (0, a.jsxs)("div", {
                  className: p.headerContentPrimary,
                  children: [
                    (0, a.jsx)("div", {
                      className: p.headerBoostGems,
                      children: U,
                    }),
                    (0, a.jsxs)("div", {
                      className: p.headerCopy,
                      children: [
                        (0, a.jsx)(o.Heading, {
                          className: p.headerHeading,
                          variant: "heading-lg/bold",
                          children: j
                            ? I.default.Messages.GUILD_BOOSTING_USER_SETTINGS_HEADING_UNAPPLIED_GUILD_BOOST_HEADING_INCLUDED_WITH_SUBSCRIPTION.format(
                                { numUnappliedGuildBoostSlots: B }
                              )
                            : I.default.Messages.GUILD_BOOSTING_USER_SETTINGS_HEADING_UNAPPLIED_GUILD_BOOST_HEADING_V2.format(
                                { numUnappliedGuildBoostSlots: B }
                              ),
                        }),
                        (0, a.jsx)(o.Text, {
                          className: p.headerSubheading,
                          color: "text-primary",
                          variant: "text-sm/normal",
                          children: _.default.isPremium(h)
                            ? I.default.Messages.GUILD_BOOSTING_USER_SETTINGS_HEADING_UNAPPLIED_GUILD_BOOST_SUBHEADING_WITH_PREMIUM_SUBSCRIPTION.format(
                                {
                                  numUnappliedGuildBoostSlots: B,
                                  learnMoreHook: (e, t) =>
                                    (0, a.jsx)(
                                      o.Clickable,
                                      {
                                        className: p.headerLearnMoreLink,
                                        tag: "span",
                                        onClick: () => {
                                          (0,
                                          c.navigateToPremiumMarketingPage)();
                                        },
                                        children: e,
                                      },
                                      t
                                    ),
                                }
                              )
                            : I.default.Messages.GUILD_BOOSTING_USER_SETTINGS_HEADING_UNAPPLIED_GUILD_BOOST_SUBHEADING.format(
                                { numUnappliedGuildBoostSlots: B }
                              ),
                        }),
                      ],
                    }),
                  ],
                }),
                (0, a.jsx)("div", {
                  className: p.headerContentSecondary,
                  children: (0, a.jsx)(o.Tooltip, {
                    shouldShow: null == y,
                    text: I.default.Messages
                      .GUILD_BOOSTING_USER_SETTINGS_NO_AVAILABLE_GUILD_BOOST_SLOTS,
                    children: e =>
                      (0, a.jsx)(o.Button, {
                        ...e,
                        disabled: null == y,
                        onClick:
                          null != y
                            ? () => {
                                var e;
                                return (
                                  (e = y),
                                  void (0, o.openModalLazy)(async () => {
                                    let { default: t } = await s
                                      .el("247760")
                                      .then(s.bind(s, "247760"));
                                    return s =>
                                      (0, a.jsx)(t, {
                                        ...s,
                                        guildBoostSlots: [e],
                                        locationSection:
                                          N.AnalyticsSections.SETTINGS_PREMIUM,
                                      });
                                  })
                                );
                              }
                            : void 0,
                        children:
                          I.default.Messages
                            .GUILD_BOOSTING_USER_SETTINGS_BOOST_ANY_SERVER,
                      }),
                  }),
                }),
              ],
            }),
            !j &&
              (0, a.jsx)("ul", {
                className: p.unappliedBoostSlots,
                children: R.map(e =>
                  (0, a.jsx)(
                    C,
                    {
                      guildBoostSlot: e,
                      isCancellable: P,
                      onCancel: A,
                      onUncancel: O,
                      premiumSubscription: l,
                      useReducedMotion: g,
                    },
                    e.id
                  )
                ),
              }),
          ],
        });
      };
    },
    77809: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return m;
          },
        }),
        s("808653");
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("446674"),
        o = s("77078"),
        d = s("26092"),
        u = s("389434"),
        c = s("521128"),
        S = s("853994"),
        E = s("782340"),
        T = s("796670"),
        f = s("890957");
      function _(e) {
        let { label: t, onChange: s, enabled: n, subLabel: l } = e;
        return (0, a.jsx)(o.FormSwitch, {
          value: !!n,
          onChange: s,
          note: l,
          children: t,
        });
      }
      function m() {
        let e = (0, r.useStateFromStores)([d.default], () =>
            d.default.getSubsection()
          ),
          t = n.createRef(),
          { categories: s, initialized: l } = (0, r.useStateFromStoresObject)(
            [c.default],
            () => c.default.getEmailSettings()
          );
        n.useEffect(() => {
          if (null == l) (0, u.fetchEmailSettings)();
          else if (e === S.EMAILS_SUBSECTION.toUpperCase()) {
            var s;
            null == t ||
              null === (s = t.current) ||
              void 0 === s ||
              s.scrollIntoView(!0);
          }
        }, [l, t, e]);
        let m = S.MarketingEmailCategories.reduce((e, t) => e || !!s[t], !1);
        return l
          ? (0, a.jsxs)(a.Fragment, {
              children: [
                (0, a.jsx)("div", { ref: t }),
                (0, a.jsxs)(o.FormSection, {
                  className: i(f.marginTop40),
                  tag: o.FormTitleTags.H1,
                  title: E.default.Messages.USER_SETTINGS_EMAIL_NOTIFICATIONS,
                  children: [
                    S.EmailCategoriesList.map(e => {
                      let { category: t, label: n, subLabel: l } = e;
                      return (0, a.jsx)(
                        _,
                        {
                          label: n(),
                          subLabel: l(),
                          enabled: s[t],
                          onChange: e => {
                            var s, a;
                            return (
                              (s = t),
                              (a = e),
                              void (0, u.updateEmailSetting)(s, a)
                            );
                          },
                        },
                        n()
                      );
                    }),
                    (0, a.jsx)(o.Button, {
                      className: T.marketingUnsubscribeButton,
                      disabled: !m,
                      look: o.ButtonLooks.LINK,
                      color: o.ButtonColors.LINK,
                      onClick: u.updateMarketingEmailSettings,
                      children:
                        E.default.Messages
                          .USER_SETTINGS_EMAIL_NOTIFICATIONS_UNSUB_MARKETING,
                    }),
                    (0, a.jsx)(o.FormText, {
                      type: o.FormTextTypes.DESCRIPTION,
                      children:
                        E.default.Messages
                          .USER_SETTINGS_EMAIL_NOTIFICATIONS_UNSUB_MARKETING_DESCRIPTION,
                    }),
                    (0, a.jsx)(o.FormDivider, {
                      className: i(f.marginTop40, f.marginBottom40),
                    }),
                  ],
                }),
              ],
            })
          : null;
      }
    },
    907148: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return v;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("627445"),
        l = s.n(n),
        i = s("446674"),
        r = s("152584"),
        o = s("875212"),
        d = s("956967"),
        u = s("906932"),
        c = s("702877"),
        S = s("668688"),
        E = s("447645"),
        T = s("569460"),
        f = s("97747"),
        _ = s("52704"),
        m = s("79685"),
        g = s("741781"),
        h = s("121370"),
        N = s("370505"),
        I = s("783142"),
        p = s("713135"),
        C = s("217513"),
        A = s("790618"),
        O = s("697218"),
        x = s("719923"),
        M = s("49111"),
        R = s("782340"),
        D = s("141990");
      function v() {
        var e, t, s, n, v, L, P, j;
        let b = (0, i.useStateFromStores)([O.default], () => {
            let e = O.default.getCurrentUser();
            return (
              l(
                null != e,
                "DefaultCustomizationSections: user cannot be undefined"
              ),
              e
            );
          }),
          U = (0, i.useStateFromStores)([p.default], () =>
            p.default.getUserProfile(b.id)
          ),
          {
            pendingAvatar: y,
            pendingGlobalName: B,
            pendingBanner: F,
            pendingBio: G,
            pendingPronouns: k,
            pendingAccentColor: H,
            pendingThemeColors: w,
            errors: V,
          } = (0, i.useStateFromStoresObject)([A.default], () => {
            let e = A.default.getAllPending(),
              t = A.default.getErrors();
            return { ...e, errors: t };
          }),
          Y = (0, d.useGuildAutomodProfileQuarantineErrors)(),
          K = x.default.canUsePremiumProfileCustomization(b),
          W = (0, u.showRemoveAvatar)(y, b.avatar),
          z = (0, u.showRemoveBanner)(F, null == U ? void 0 : U.banner),
          Q = "DefaultCustomizationSections";
        (0, o.useTriggerDebuggingAA)({
          location: Q + " auto on",
          autoTrackExposure: !0,
        }),
          (0, o.useTriggerDebuggingAA)({
            location: Q + " auto off",
            autoTrackExposure: !1,
          });
        let X = (0, C.default)(b.id),
          q = null == X ? void 0 : X.getLegacyUsername(),
          Z =
            (null !==
              (s =
                null === (e = V.global_name) || void 0 === e
                  ? void 0
                  : e.length) && void 0 !== s
              ? s
              : 0) > 0
              ? V.global_name
              : null !== (n = null == Y ? void 0 : Y.nick) && void 0 !== n
                ? n
                : [],
          J =
            (null !==
              (v = null === (t = V.bio) || void 0 === t ? void 0 : t.length) &&
            void 0 !== v
              ? v
              : 0) > 0
              ? V.bio
              : null !== (L = null == Y ? void 0 : Y.bio) && void 0 !== L
                ? L
                : [];
        return (0, a.jsxs)("div", {
          className: D.sectionsContainer,
          children: [
            (0, a.jsx)(T.default, {
              placeholder: b.username,
              errors: Z,
              currentGlobalName: b.globalName,
              pendingGlobalName: B,
              onGlobalNameChange: r.setPendingGlobalNameName,
            }),
            (0, a.jsx)(
              N.default,
              {
                sectionTitle: R.default.Messages.USER_SETTINGS_PRONOUNS,
                errors: V.pronouns,
                onPronounsChange: I.setPendingPronouns,
                pendingPronouns: k,
                currentPronouns:
                  null !== (P = null == U ? void 0 : U.pronouns) && void 0 !== P
                    ? P
                    : "",
              },
              "pronouns"
            ),
            (0, a.jsx)(
              E.default,
              {
                onAvatarChange: r.setPendingAvatar,
                showRemoveAvatarButton: W,
                errors: V.avatar,
                sectionTitle: R.default.Messages.USER_SETTINGS_AVATAR,
                forcedDivider: !0,
              },
              "avatar"
            ),
            (0, a.jsx)(
              S.default,
              {
                user: b,
                sectionTitle:
                  R.default.Messages.USER_SETTINGS_AVATAR_DECORATION,
              },
              "decoration"
            ),
            (0, a.jsx)(
              g.default,
              {
                user: b,
                sectionTitle: R.default.Messages.USER_SETTINGS_PROFILE_EFFECT,
              },
              "effect"
            ),
            K
              ? (0, a.jsxs)(a.Fragment, {
                  children: [
                    (0, a.jsx)(
                      _.default,
                      {
                        showRemoveBannerButton: z,
                        errors: V.banner,
                        onBannerChange: I.setPendingBanner,
                        forcedDivider: !0,
                      },
                      "banner"
                    ),
                    (0, a.jsx)(h.default, {
                      user: b,
                      pendingAvatar: y,
                      pendingColors: w,
                      onThemeColorsChange: I.setPendingThemeColors,
                      forcedDivider: !0,
                    }),
                  ],
                })
              : (0, a.jsx)(
                  m.default,
                  {
                    user: b,
                    savedUserColor: null == U ? void 0 : U.accentColor,
                    pendingColor: H,
                    setPendingAccentColor: I.setPendingAccentColor,
                  },
                  "color"
                ),
            (0, a.jsx)(
              c.default,
              {
                sectionTitle: R.default.Messages.USER_SETTINGS_ABOUT_ME,
                errors: J,
                onBioChange: e => {
                  (0, u.setNewPendingUserBio)(e, null == U ? void 0 : U.bio),
                    (0, r.setDisableSubmit)(
                      null != e && e.length > M.BIO_MAX_LENGTH
                    );
                },
                pendingBio: G,
                currentBio:
                  null !== (j = null == U ? void 0 : U.bio) && void 0 !== j
                    ? j
                    : "",
              },
              "bio"
            ),
            null != q &&
              (0, a.jsx)(f.default, { legacyUsername: q }, "legacy_username"),
          ],
        });
      }
    },
    621200: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return R;
          },
        });
      var a = s("37983"),
        n = s("884691"),
        l = s("627445"),
        i = s.n(l),
        r = s("446674"),
        o = s("913144"),
        d = s("327037"),
        u = s("152584"),
        c = s("642950"),
        S = s("875212"),
        E = s("812204"),
        T = s("685665"),
        f = s("104385"),
        _ = s("884351"),
        m = s("184900"),
        g = s("11899"),
        h = s("635415"),
        N = s("783142"),
        I = s("102985"),
        p = s("790618"),
        C = s("697218"),
        A = s("719923"),
        O = s("845579"),
        x = s("415167"),
        M = s("907148");
      function R() {
        let e = (0, r.useStateFromStores)([C.default], () => {
          let e = C.default.getCurrentUser();
          return (
            i(
              null != e,
              "UserSettingsProfileCustomization: user cannot be undefined"
            ),
            e
          );
        });
        n.useEffect(() => {
          (0, d.fetchProfile)(e.id);
        }, [e.id]);
        let t = (0, r.useStateFromStores)(
            [I.default],
            () => I.default.hidePersonalInformation
          ),
          {
            pendingAvatar: s,
            pendingBanner: l,
            pendingBio: R,
            pendingPronouns: D,
            pendingGlobalName: v,
            pendingAccentColor: L,
            pendingAvatarDecoration: P,
            pendingThemeColors: j,
            pendingProfileEffectId: b,
          } = (0, r.useStateFromStoresObject)([p.default], () => {
            let e = p.default.getAllPending(),
              t = p.default.getErrors();
            return { ...e, errors: t };
          }),
          U = O.UseLegacyChatInput.useSetting(),
          y = U && null != R ? _.default.parse(void 0, R).content : R,
          B = A.default.canUsePremiumProfileCustomization(e),
          { AnalyticsLocationProvider: F } = (0, T.default)(E.default.PROFILE),
          G = {
            user: e,
            canUsePremiumCustomization: B,
            onUpsellClick: x.default,
            onAvatarChange: u.setPendingAvatar,
            onBannerChange: N.setPendingBanner,
            pendingBanner: l,
            pendingBio: y,
            pendingPronouns: D,
            pendingAvatar: s,
            pendingGlobalName: v,
            pendingAvatarDecoration: P,
            pendingProfileEffectId: b,
          };
        n.useEffect(() => () => o.default.wait(u.resetAllPending), []);
        let k = "UserSettingsProfileCustomization";
        return ((0, S.useTriggerDebuggingAA)({
          location: k + " auto on",
          autoTrackExposure: !0,
        }),
        (0, S.useTriggerDebuggingAA)({
          location: k + " auto off",
          autoTrackExposure: !1,
        }),
        t)
          ? (0, a.jsx)(c.default, {})
          : (0, a.jsx)(F, {
              children: (0, a.jsxs)(a.Fragment, {
                children: [
                  (0, a.jsx)(f.default, {}),
                  (0, a.jsx)(g.default, {
                    profilePreview: (0, a.jsx)(m.default, {
                      ...G,
                      pendingThemeColors: j,
                      pendingAccentColor: L,
                    }),
                    children: (0, a.jsx)(M.default, {}),
                  }),
                  !A.default.canUsePremiumProfileCustomization(e) &&
                    (0, a.jsx)(h.default, { user: e }),
                ],
              }),
            });
      }
    },
    934810: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return R;
          },
        }),
        s("222007");
      var a = s("37983"),
        n = s("884691"),
        l = s("446674"),
        i = s("77078"),
        r = s("430568"),
        o = s("685665"),
        d = s("185153"),
        u = s("570697"),
        c = s("305122"),
        S = s("235004"),
        E = s("78581"),
        T = s("675961"),
        f = s("561847"),
        _ = s("555158"),
        m = s("216422"),
        g = s("368121"),
        h = s("701909"),
        N = s("374363"),
        I = s("267823"),
        p = s("49111"),
        C = s("846325"),
        A = s("782340"),
        O = s("832420"),
        x = s("890957");
      function M(e) {
        return (0, l.useStateFromStores)([S.default], () => {
          if (null == e) return null;
          let { guildId: t, soundId: s } = e;
          return S.default.getSound(
            t === C.CUSTOM_CALL_SOUND_GLOBAL_GUILD_ID
              ? C.DEFAULT_SOUND_GUILD_ID
              : t,
            s
          );
        });
      }
      function R() {
        let { analyticsLocations: e } = (0, o.default)(),
          [t, s] = n.useState(C.CUSTOM_CALL_SOUND_GLOBAL_GUILD_ID),
          r = (0, T.useCustomJoinSound)(t),
          g = M(r),
          N = (0, l.useStateFromStores)([S.default], () =>
            S.default.hasFetchedAllSounds()
          ),
          R = (null == r ? void 0 : r.type) === T.CustomSoundType.GLOBAL,
          v = N && null != r && null == g;
        n.useEffect(() => {
          v && (0, E.trackCustomCallSoundExternallyDeleted)({ location: e });
        }, [v, e]),
          n.useEffect(() => {
            (0, c.maybeFetchSoundboardSounds)();
          }, []);
        let L = n.useCallback((e, t) => {
          let { inDropdown: s } = t;
          return null == e
            ? null
            : s
              ? (0, a.jsx)(D, { guildId: e.value })
              : null;
        }, []);
        return (0, a.jsxs)(i.FormSection, {
          className: O.container,
          tag: i.FormTitleTags.H1,
          titleClassName: x.marginBottom16,
          title: A.default.Messages.SOUNDBOARD,
          children: [
            (0, a.jsx)(I.default, {}),
            (0, a.jsx)(i.FormDivider, { className: O.callSoundsDivider }),
            (0, a.jsx)(i.Heading, {
              variant: "text-md/medium",
              color: "header-primary",
              className: O.callSoundsTitle,
              children: A.default.Messages.CALL_SOUNDS_SETTINGS,
            }),
            (0, a.jsx)(i.Text, {
              variant: "text-sm/medium",
              color: "header-secondary",
              children:
                A.default.Messages.CALL_SOUNDS_SETTINGS_DESCRIPTION_2.format({
                  helpdeskArticle: h.default.getArticleURL(
                    p.HelpdeskArticles.SOUNDBOARD
                  ),
                }),
            }),
            (0, a.jsx)(d.default, {
              guildId: t,
              className: O.guildSelector,
              globalOption: {
                label:
                  A.default.Messages.CALL_SOUNDS_SETTINGS_GLOBAL_GUILD_SEARCH,
                value: C.CUSTOM_CALL_SOUND_GLOBAL_GUILD_ID,
              },
              onChange: e =>
                s(null == e ? C.CUSTOM_CALL_SOUND_GLOBAL_GUILD_ID : e.id),
              renderOptionSuffix: L,
              hideDivider: !0,
            }),
            (0, a.jsxs)(u.default, {
              className: x.marginTop20,
              title: A.default.Messages.CALL_SOUNDS_SETTINGS_JOIN_SOUND.format({
                nitroWheelHook: () =>
                  (0, a.jsx)(m.default, { className: O.nitroWheel }),
              }),
              forcedDivider: !0,
              children: [
                (0, a.jsx)(f.default, {
                  sound: g,
                  isGlobal: R,
                  onSelect: s => {
                    null == s
                      ? (0, E.removeCustomJoinSound)(t, e)
                      : (0, E.updateCustomJoinSound)(t, s, e);
                  },
                }),
                v &&
                  (0, a.jsx)(_.default, {
                    className: O.notice,
                    messageType: _.HelpMessageTypes.WARNING,
                    children:
                      A.default.Messages.CALL_SOUNDS_SETTINGS_SOUND_REMOVED,
                  }),
              ],
            }),
          ],
        });
      }
      function D(e) {
        let { guildId: t } = e,
          s = (0, l.useStateFromStores)([N.default], () => {
            var e, s, a;
            return null === (a = N.default.settings.guilds) || void 0 === a
              ? void 0
              : null === (s = a.guilds) || void 0 === s
                ? void 0
                : null === (e = s[t]) || void 0 === e
                  ? void 0
                  : e.joinSound;
          }),
          n = M(s);
        if (null == s || null == n) return null;
        let { emojiId: o, emojiName: d } = n,
          u = null != o || null != d;
        return (0, a.jsxs)("div", {
          className: O.pill,
          children: [
            u
              ? (0, a.jsx)(r.default, {
                  emojiId: o,
                  emojiName: d,
                  className: O.pillIcon,
                })
              : (0, a.jsx)(g.default, { className: O.pillIcon }),
            (0, a.jsx)(i.Text, {
              className: O.pillText,
              variant: "text-xs/medium",
              children: n.name,
            }),
          ],
        });
      }
    },
    789854: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return M;
          },
        });
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("446674"),
        o = s("819855"),
        d = s("77078"),
        u = s("629109"),
        c = s("42887"),
        S = s("145131"),
        E = s("599110"),
        T = s("773336"),
        f = s("50885"),
        _ = s("161778"),
        m = s("225849"),
        g = s("397336"),
        h = s("49111"),
        N = s("353927"),
        I = s("782340"),
        p = s("890957");
      let C = s("305213"),
        A = s("629551");
      function O(e) {
        u.default.setAV1Enabled(e),
          E.default.track(h.AnalyticEvents.VOICE_SETTINGS_CHANGED, {
            av1_disabled: !e,
            av1_enabled: e,
          });
      }
      function x() {
        let { experimentalEncoders: e } = (0, r.useStateFromStoresObject)(
          [c.default],
          () => ({ experimentalEncoders: c.default.getExperimentalEncoders() })
        );
        return "stable" !== f.default.releaseChannel &&
          c.default.isExperimentalEncodersSupported()
          ? (0, a.jsx)(d.FormSwitch, {
              className: i(p.marginTop8, p.marginBottom20),
              value: e,
              onChange: e => u.default.setExperimentalEncoders(e),
              disabled: !1,
              children: I.default.Messages.EXPERIMENTAL_ENCODERS,
            })
          : null;
      }
      function M() {
        let e = (0, r.useStateFromStores)([_.default], () => _.default.theme),
          {
            openH264: t,
            hardwareH264: s,
            supportsOpenH264: l,
            av1Enabled: E,
          } = (0, r.useStateFromStoresObject)([c.default], () => ({
            openH264: c.default.getOpenH264(),
            hardwareH264: c.default.getHardwareH264(),
            supportsOpenH264: c.default.supports(N.Features.OPEN_H264),
            av1Enabled: c.default.getAv1Enabled(),
          })),
          f = n.useRef(null);
        return (
          (0, m.default)(
            f,
            g.UserSettingsScrollPositions.VoiceAndVideoScrollPositions
              .HARDWARE_ACCELERATION
          ),
          (0, a.jsxs)(a.Fragment, {
            children: [
              (0, a.jsx)(d.FormSection, {
                className: p.marginBottom20,
                title: I.default.Messages.USER_SETTINGS_VOICE_CODEC_TITLE,
                children: (0, a.jsx)(d.FormNotice, {
                  className: p.marginBottom20,
                  type: d.FormNoticeTypes.PRIMARY,
                  imageData: {
                    src: (0, o.isThemeLight)(e) ? C : A,
                    width: 70,
                    height: 40,
                  },
                  align: S.default.Align.CENTER,
                  body: I.default.Messages
                    .USER_SETTINGS_VOICE_CODEC_DESCRIPTION,
                }),
              }),
              l &&
                (0, a.jsxs)(d.FormSection, {
                  className: p.marginBottom20,
                  title:
                    I.default.Messages.USER_SETTINGS_VOICE_VIDEO_CODEC_TITLE,
                  children: [
                    (0, a.jsx)(d.FormSwitch, {
                      className: i(p.marginTop8, p.marginBottom20),
                      value: t,
                      onChange: e => {
                        u.default.setOpenH264(e), u.default.setHardwareH264(e);
                      },
                      disabled: !1,
                      note: I.default.Messages.FORM_HELP_OPEN_H264,
                      children:
                        I.default.Messages.USER_SETTINGS_VOICE_OPEN_H264,
                    }),
                    (0, a.jsx)("div", {
                      style: { scrollMarginTop: "48px" },
                      ref: f,
                    }),
                    (0, a.jsx)(d.FormSwitch, {
                      className: i(p.marginTop8, p.marginBottom20),
                      value: s,
                      onChange: e => {
                        (0, T.isWindows)() && u.default.setAV1Enabled(e && E),
                          u.default.setHardwareH264(e);
                      },
                      disabled: !t,
                      note: I.default.Messages.FORM_HELP_HARDWARE_H264,
                      children:
                        I.default.Messages.USER_SETTINGS_VOICE_HARDWARE_H264,
                    }),
                    (0, T.isWindows)() &&
                      (0, a.jsx)(d.FormSwitch, {
                        className: i(p.marginTop8, p.marginBottom20),
                        value: (0, T.isWindows)() ? E && s : E,
                        onChange: e => {
                          (0, T.isWindows)() ? O(e && s) : O(e);
                        },
                        note:
                          (0, T.isWindows)() &&
                          I.default.Messages.FORM_HELP_HARDWARE_AV1,
                        disabled: (0, T.isWindows)() && !s,
                        children: I.default.Messages.USER_SETTINGS_VOICE_AV1,
                      }),
                    (0, a.jsx)(x, {}),
                  ],
                }),
            ],
          })
        );
      }
    },
    988231: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return C;
          },
        }),
        s("222007");
      var a = s("37983"),
        n = s("884691"),
        l = s("446674"),
        i = s("77078"),
        r = s("629109"),
        o = s("673777"),
        d = s("49671"),
        u = s("147746"),
        c = s("42887"),
        S = s("661919"),
        E = s("697218"),
        T = s("145131"),
        f = s("922932"),
        _ = s("50885"),
        m = s("49111"),
        g = s("353927"),
        h = s("782340"),
        N = s("890957");
      async function I() {
        let e = await d.default.fileManager.getModulePath(),
          t = d.default.fileManager.join(e, "discord_voice");
        d.default.fileManager.showItemInFolder(t);
      }
      function p(e) {
        (0, i.openModal)(t =>
          (0, a.jsx)(i.ConfirmModal, {
            header: h.default.Messages.SET_DEBUG_LOGGING,
            confirmText: h.default.Messages.OKAY,
            cancelText: h.default.Messages.CANCEL,
            onCancel: t.onClose,
            onConfirm: () => r.default.setDebugLogging(e),
            ...t,
            children: (0, a.jsx)(i.Text, {
              variant: "text-md/normal",
              children: h.default.Messages.SET_DEBUG_LOGGING_BODY,
            }),
          })
        );
      }
      function C() {
        let [e, t] = n.useState(!1),
          {
            aecDumpSupported: s,
            debugLogging: d,
            aecDumpEnabled: C,
            supportsConnectionReplay: A,
          } = (0, l.useStateFromStoresObject)([c.default], () => ({
            aecDumpSupported: c.default.isAecDumpSupported(),
            debugLogging: c.default.getDebugLogging(),
            aecDumpEnabled: c.default.getAecDump(),
            supportsConnectionReplay: c.default.supports(
              g.Features.CONNECTION_REPLAY
            ),
          })),
          O = (0, l.useStateFromStores)([S.default], () =>
            S.default.shouldRecordNextConnection()
          ),
          x = (0, l.useStateFromStores)([E.default], () => {
            var e, t;
            return (
              null !==
                (t =
                  null === (e = E.default.getCurrentUser()) || void 0 === e
                    ? void 0
                    : e.isStaff()) &&
              void 0 !== t &&
              t
            );
          }),
          M =
            ("canary" === _.default.releaseChannel ||
              "development" === _.default.releaseChannel) &&
            x &&
            A;
        async function R() {
          t(!0);
          try {
            await c.default.getMediaEngine().writeAudioDebugState(),
              await f.default.submitLiveCrashReport({
                message: { message: "User Live Dump" },
              }),
              await (0, u.uploadDebugLogFiles)(m.DebugLogCategory.RTC),
              !(function () {
                let e = h.default.Messages.UPLOAD_DEBUG_LOG_SUCCESS_HEADER,
                  t = h.default.Messages.UPLOAD_DEBUG_LOG_SUCCESS;
                (0, i.openModal)(s =>
                  (0, a.jsx)(i.ConfirmModal, {
                    header: e,
                    confirmButtonColor: i.Button.Colors.BRAND,
                    confirmText: h.default.Messages.OKAY,
                    ...s,
                    children: (0, a.jsx)(i.Text, {
                      variant: "text-md/normal",
                      children: t,
                    }),
                  })
                );
              })();
          } catch (e) {
            !(function (e) {
              let t = h.default.Messages.UPLOAD_DEBUG_LOG_FAILURE_HEADER,
                s = null != e ? e : h.default.Messages.UPLOAD_DEBUG_LOG_FAILURE;
              (0, i.openModal)(e =>
                (0, a.jsx)(i.ConfirmModal, {
                  header: t,
                  confirmButtonColor: i.Button.Colors.BRAND,
                  confirmText: h.default.Messages.OKAY,
                  ...e,
                  children: (0, a.jsx)(i.Text, {
                    variant: "text-md/normal",
                    children: s,
                  }),
                })
              );
            })(e.displayMessage);
          }
        }
        return (0, a.jsxs)(i.FormSection, {
          className: N.marginBottom40,
          title: h.default.Messages.FORM_LABEL_DEBUG,
          children: [
            s &&
              (0, a.jsx)(i.FormSwitch, {
                value: C,
                onChange: e => r.default.setAecDump(e),
                note: h.default.Messages.FORM_HELP_AEC_DUMP,
                children: h.default.Messages.FORM_CHECKBOX_AEC_DUMP,
              }),
            M &&
              (0, a.jsxs)(a.Fragment, {
                children: [
                  (0, a.jsx)(i.FormSwitch, {
                    hideBorder: !0,
                    value: O,
                    onChange: e => o.setShouldRecordNextConnection(e),
                    note: h.default.Messages.FORM_HELP_CONNECTION_LOG,
                    children: h.default.Messages.FORM_CHECKBOX_CONNECTION_LOG,
                  }),
                  (0, a.jsx)(i.FormItem, {
                    children: (0, a.jsx)(T.default, {
                      className: N.marginBottom20,
                      children: (0, a.jsx)(T.default.Child, {
                        grow: 0,
                        shrink: 0,
                        children: (0, a.jsx)(i.Button, {
                          size: i.Button.Sizes.SMALL,
                          onClick: () => o.openReplay(),
                          children: h.default.Messages.OPEN_CONNECTION_REPLAY,
                        }),
                      }),
                    }),
                  }),
                ],
              }),
            (0, a.jsx)(i.FormSwitch, {
              hideBorder: !0,
              value: d,
              onChange: p,
              note: h.default.Messages.FORM_HELP_DEBUG_LOGGING,
              children: h.default.Messages.FORM_CHECKBOX_DEBUG_LOGGING,
            }),
            (0, a.jsx)(i.FormItem, {
              children: (0, a.jsxs)(T.default, {
                children: [
                  (0, a.jsx)(T.default.Child, {
                    grow: 0,
                    shrink: 0,
                    children: (0, a.jsx)(i.Button, {
                      disabled: e,
                      size: i.Button.Sizes.SMALL,
                      onClick: R,
                      children: h.default.Messages.UPLOAD,
                    }),
                  }),
                  (0, a.jsx)(T.default.Child, {
                    grow: 0,
                    shrink: 0,
                    children: (0, a.jsx)(i.Button, {
                      size: i.Button.Sizes.SMALL,
                      onClick: I,
                      children: h.default.Messages.SHOW_FOLDER,
                    }),
                  }),
                ],
              }),
            }),
          ],
        });
      }
    },
    173364: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return h;
          },
        }),
        s("222007");
      var a = s("37983");
      s("884691");
      var n = s("917351"),
        l = s.n(n),
        i = s("446674"),
        r = s("819855"),
        o = s("77078"),
        d = s("629109"),
        u = s("533222"),
        c = s("42887"),
        S = s("145131"),
        E = s("161778"),
        T = s("597870"),
        f = s("353927"),
        _ = s("782340"),
        m = s("63635"),
        g = s("890957");
      function h() {
        let e, t;
        let n = (0, i.useStateFromStores)([E.default], () => E.default.theme),
          {
            canSetInputDevice: h,
            canSetOutputDevice: N,
            inputDeviceId: I,
            outputDeviceId: p,
          } = (0, i.useStateFromStoresObject)([c.default], () => ({
            canSetInputDevice: c.default.supports(
              f.Features.AUDIO_INPUT_DEVICE
            ),
            canSetOutputDevice: c.default.supports(
              f.Features.AUDIO_OUTPUT_DEVICE
            ),
            inputDeviceId: c.default.getInputDeviceId(),
            outputDeviceId: c.default.getOutputDeviceId(),
          })),
          C = (0, i.useStateFromStores)([c.default], () =>
            c.default.getInputDevices()
          ),
          A = (0, i.useStateFromStores)([c.default], () =>
            c.default.getOutputDevices()
          );
        !h &&
          (e = (0, a.jsx)(o.FormText, {
            type: o.FormText.Types.DESCRIPTION,
            className: g.marginTop8,
            children: _.default.Messages.BROWSER_INPUT_DEVICE_WARNING.format({
              onDownloadClick: () =>
                (0, T.openDownloadAppsModal)("Help Text Input Devices"),
            }),
          })),
          !N &&
            (t = (0, a.jsx)(o.FormText, {
              type: o.FormText.Types.DESCRIPTION,
              className: g.marginTop8,
              children: _.default.Messages.BROWSER_OUTPUT_DEVICE_WARNING.format(
                {
                  onDownloadClick: () =>
                    (0, T.openDownloadAppsModal)("Help Text Output Devices"),
                }
              ),
            }));
        let O = l(C).values().first(),
          x = null != O ? O.disabled : null != e,
          M = l(A).values().first(),
          R = null != M ? M.disabled : null != t;
        function D(e) {
          let t,
            { label: l, value: i } = e;
          if (u.default.isCertified(i)) {
            let e = (0, r.isThemeLight)(n) ? s("345598") : s("295450");
            t = (0, a.jsx)("img", {
              src: e,
              alt: "Certified",
              className: m.deviceOptionCertified,
            });
          }
          return (0, a.jsxs)(
            "span",
            {
              className: m.deviceOption,
              children: [
                (0, a.jsx)("span", {
                  className: m.deviceOptionLabel,
                  children: u.default.getCertifiedDeviceName(i, l),
                }),
                t,
              ],
            },
            i
          );
        }
        function v(e) {
          return D(e[0]);
        }
        return (0, a.jsxs)(S.default, {
          className: g.marginBottom20,
          children: [
            (0, a.jsxs)(S.default.Child, {
              basis: "50%",
              children: [
                (0, a.jsx)(o.FormTitle, {
                  tag: o.FormTitleTags.H5,
                  className: g.marginBottom8,
                  children: _.default.Messages.FORM_LABEL_INPUT_DEVICE,
                }),
                (0, a.jsx)(o.SingleSelect, {
                  value: I,
                  onChange: e => d.default.setInputDevice(e, "Settings"),
                  options: l.map(C, e => {
                    let { id: t, name: s } = e;
                    return { value: t, label: s };
                  }),
                  isDisabled: x,
                  renderOptionValue: v,
                  renderOptionLabel: D,
                }),
                e,
              ],
            }),
            (0, a.jsxs)(S.default.Child, {
              basis: "50%",
              children: [
                (0, a.jsx)(o.FormTitle, {
                  tag: o.FormTitleTags.H5,
                  className: g.marginBottom8,
                  children: _.default.Messages.FORM_LABEL_OUTPUT_DEVICE,
                }),
                (0, a.jsx)(o.SingleSelect, {
                  value: p,
                  onChange: e => d.default.setOutputDevice(e, "Settings"),
                  options: l.map(A, e => {
                    let { id: t, name: s } = e;
                    return { value: t, label: s };
                  }),
                  isDisabled: R,
                  renderOptionValue: v,
                  renderOptionLabel: D,
                }),
                t,
              ],
            }),
          ],
        });
      }
    },
    201114: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return O;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("414456"),
        l = s.n(n),
        i = s("446674"),
        r = s("77078"),
        o = s("629109"),
        d = s("79112"),
        u = s("278108"),
        c = s("42887"),
        S = s("145131"),
        E = s("476765"),
        T = s("773336"),
        f = s("597870"),
        _ = s("49111"),
        m = s("782340"),
        g = s("192255"),
        h = s("890957");
      let N = !T.isPlatformEmbedded,
        I = (0, E.uid)();
      function p(e) {
        let { value: t } = e;
        t === _.InputModes.PUSH_TO_TALK &&
          N &&
          (0, r.openModalLazy)(async () => {
            let { default: e } = await s.el("135230").then(s.bind(s, "135230"));
            return t =>
              (0, a.jsx)(e, {
                title: m.default.Messages.PTT_LIMITED_TITLE,
                confirmText: m.default.Messages.DOWNLOAD,
                cancelText: m.default.Messages.OKAY,
                onConfirm: () =>
                  (0, f.openDownloadAppsModal)("PTT Limited Modal"),
                body: m.default.Messages.PTT_LIMITED_BODY,
                ...t,
              });
          }),
          o.default.setMode(t);
      }
      function C(e) {
        return e >= 1e3
          ? ((e /= 1e3), "".concat(e.toFixed(2), "s"))
          : "".concat(e.toFixed(0), " ms");
      }
      function A(e) {
        let t,
          { inputMode: s } = e,
          { shortcut: n, delay: E } = (0, i.useStateFromStoresObject)(
            [c.default],
            () => c.default.getModeOptions()
          );
        return (
          (t =
            T.isPlatformEmbedded || s !== _.InputModes.PUSH_TO_TALK
              ? (0, a.jsx)(r.FormText, {
                  type: r.FormText.Types.DESCRIPTION,
                  className: l(g.pttToolsMessage, h.marginBottom8),
                  children:
                    m.default.Messages.USER_SETTINGS_VOICE_ADD_MULTIPLE.format({
                      onClick: () =>
                        d.default.setSection(_.UserSettingsSections.KEYBINDS),
                    }),
                })
              : (0, a.jsx)(r.FormText, {
                  type: r.FormText.Types.DESCRIPTION,
                  className: l(
                    g.pttToolsMessage,
                    g.pttToolsWarning,
                    h.marginBottom8
                  ),
                  children: m.default.Messages.PTT_LIMITED_WARNING.format({
                    onDownloadClick: () =>
                      (0, f.openDownloadAppsModal)("Help Text PTT"),
                  }),
                })),
          (0, a.jsxs)("div", {
            className: g.pttTools,
            children: [
              (0, a.jsxs)(S.default, {
                children: [
                  (0, a.jsx)(S.default.Child, {
                    basis: "50%",
                    children: (0, a.jsx)(r.FormItem, {
                      title: m.default.Messages.FORM_LABEL_SHORTCUT,
                      children: (0, a.jsx)(u.default, {
                        defaultValue: n,
                        onChange: e => o.default.setMode(s, { shortcut: e }),
                      }),
                    }),
                  }),
                  (0, a.jsx)(S.default.Child, {
                    basis: "50%",
                    children: (0, a.jsxs)(r.FormItem, {
                      children: [
                        (0, a.jsx)(r.FormTitle, {
                          id: I,
                          tag: r.FormTitleTags.H5,
                          className: h.marginBottom8,
                          children:
                            m.default.Messages.INPUT_MODE_PTT_RELEASE_DELAY,
                        }),
                        (0, a.jsx)(r.Slider, {
                          initialValue: E,
                          onValueChange: e =>
                            o.default.setMode(s, { delay: e }),
                          onValueRender: C,
                          maxValue: _.MAX_PTT_RELEASE_DELAY,
                          "aria-labelledby": I,
                        }),
                      ],
                    }),
                  }),
                ],
              }),
              t,
            ],
          })
        );
      }
      function O() {
        let e = (0, i.useStateFromStores)([c.default], () =>
            c.default.getMode()
          ),
          t = [
            {
              value: _.InputModes.VOICE_ACTIVITY,
              name: m.default.Messages.INPUT_MODE_VAD,
            },
            {
              value: _.InputModes.PUSH_TO_TALK,
              name: N
                ? m.default.Messages.INPUT_MODE_PTT_LIMITED
                : m.default.Messages.INPUT_MODE_PTT,
            },
          ];
        return (0, a.jsxs)(a.Fragment, {
          children: [
            (0, a.jsx)(r.FormItem, {
              title: m.default.Messages.FORM_LABEL_INPUT_MODE,
              className: h.marginBottom20,
              children: (0, a.jsx)(r.RadioGroup, {
                onChange: p,
                options: t,
                value: e,
              }),
            }),
            e === _.InputModes.PUSH_TO_TALK && (0, a.jsx)(A, { inputMode: e }),
          ],
        });
      }
    },
    593647: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return E;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("65597"),
        l = s("77078"),
        i = s("32296"),
        r = s("42887"),
        o = s("701909"),
        d = s("49111"),
        u = s("353927"),
        c = s("782340"),
        S = s("288061");
      function E() {
        let e = (0, n.default)([r.default], () =>
          r.default.supports(u.Features.LOOPBACK)
        );
        return e
          ? (0, a.jsx)("div", {
              className: S.micTest,
              children: (0, a.jsx)(i.default, {
                title: c.default.Messages.USER_SETTINGS_VOICE_MIC_TEST_TITLE,
                description:
                  c.default.Messages.USER_SETTINGS_VOICE_MIC_TEST_DESCRIPTION,
                notchBackground: i.NotchBackground.GRAY,
                captionVoice:
                  c.default.Messages.USER_SETTINGS_VOICE_MIC_TEST_VOICE_CAPTION,
                captionNoVoice: (0, a.jsxs)(a.Fragment, {
                  children: [
                    c.default.Messages
                      .USER_SETTINGS_VOICE_MIC_TEST_VOICE_NO_INPUT_NOTICE,
                    (0, a.jsx)(l.Anchor, {
                      className: S.micTestHelpLink,
                      href: o.default.getArticleURL(
                        d.HelpdeskArticles.NO_INPUT_DETECTED
                      ),
                      children:
                        c.default.Messages
                          .NOTICE_NO_INPUT_DETECTED_HELP_LINK_TEXT,
                    }),
                  ],
                }),
                buttonTest:
                  c.default.Messages
                    .USER_SETTINGS_VOICE_MIC_TEST_BUTTON_INACTIVE,
                buttonStop:
                  c.default.Messages.USER_SETTINGS_VOICE_MIC_TEST_BUTTON_ACTIVE,
                buttonClassName: S.micTestButton,
                buttonColor: l.Button.Colors.BRAND,
                location: {
                  page: d.AnalyticsPages.USER_SETTINGS,
                  section: d.AnalyticsSections.SETTINGS_VOICE_AND_VIDEO,
                },
              }),
            })
          : null;
      }
    },
    366662: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return u;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("446674"),
        l = s("77078"),
        i = s("629109"),
        r = s("42887"),
        o = s("782340"),
        d = s("890957");
      function u() {
        let {
          videoHook: e,
          experimentalSoundshare: t,
          supportsVideoHook: s,
          supportsExperimentalSoundshare: u,
        } = (0, n.useStateFromStoresObject)([r.default], () => ({
          videoHook: r.default.getVideoHook(),
          experimentalSoundshare: r.default.getExperimentalSoundshare(),
          supportsVideoHook: r.default.supportsVideoHook(),
          supportsExperimentalSoundshare:
            r.default.supportsExperimentalSoundshare(),
        }));
        return s || u
          ? (0, a.jsxs)(l.FormSection, {
              className: d.marginBottom20,
              title: o.default.Messages.FORM_LABEL_SCREENSHARE,
              children: [
                s &&
                  (0, a.jsx)(l.FormSwitch, {
                    value: e,
                    onChange: e => i.default.setVideoHook(e),
                    note: o.default.Messages.FORM_HELP_VIDEO_HOOK,
                    children:
                      o.default.Messages.USER_SETTINGS_VOICE_VIDEO_HOOK_LABEL,
                  }),
                u &&
                  (0, a.jsx)(l.FormSwitch, {
                    value: t,
                    onChange: e => i.default.setExperimentalSoundshare(e),
                    children:
                      o.default.Messages
                        .USER_SETTINGS_VOICE_EXPERIMENTAL_SOUNDSHARE_LABEL,
                  }),
              ],
            })
          : null;
      }
    },
    267823: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return _;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("414456"),
        l = s.n(n),
        i = s("77078"),
        r = s("305122"),
        o = s("78581"),
        d = s("476765"),
        u = s("701909"),
        c = s("829536"),
        S = s("49111"),
        E = s("782340"),
        T = s("933726");
      let f = (0, d.uid)();
      function _() {
        let e = (0, o.getAmplitudinalSoundboardVolume)();
        return (0, a.jsxs)("div", {
          className: l(T.soundboardRow),
          children: [
            (0, a.jsxs)("div", {
              className: l(T.soundboardColumn, T.leftColumn),
              children: [
                (0, a.jsx)(i.FormTitle, {
                  tag: i.FormTitleTags.H5,
                  className: T.soundboardTitle,
                  children: E.default.Messages.USER_SETTINGS_SOUNDBOARD,
                }),
                (0, a.jsx)(i.Text, {
                  color: "header-secondary",
                  variant: "text-sm/normal",
                  children:
                    E.default.Messages.USER_SETTINGS_SOUNDBOARD_VOLUME_DESCRIPTION_WITH_LINK.format(
                      {
                        helpCenterArticle: u.default.getArticleURL(
                          S.HelpdeskArticles.SOUNDBOARD
                        ),
                      }
                    ),
                }),
              ],
            }),
            (0, a.jsxs)("div", {
              className: l(T.soundboardColumn, T.rightColumn),
              children: [
                (0, a.jsx)(i.FormTitle, {
                  id: f,
                  tag: i.FormTitleTags.H5,
                  className: T.soundboardSubtitle,
                  children: E.default.Messages.USER_SETTINGS_SOUNDBOARD_VOLUME,
                }),
                (0, a.jsx)(i.Slider, {
                  initialValue: (0, c.amplitudeToPerceptual)(e),
                  maxValue: 100,
                  onValueRender: e => "".concat(e.toFixed(0), "%"),
                  asValueChanges: function (t) {
                    (e = (0, c.perceptualToAmplitude)(t)),
                      (0, r.updateUserSoundboardVolume)(e);
                  },
                  "aria-labelledby": f,
                }),
              ],
            }),
          ],
        });
      }
    },
    992121: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return _;
          },
        }),
        s("222007");
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("446674"),
        o = s("77078"),
        d = s("42887"),
        u = s("597870"),
        c = s("831490"),
        S = s("353927"),
        E = s("782340"),
        T = s("890957");
      function f() {
        return (0, a.jsx)(o.FormNotice, {
          type: o.CardTypes.PRIMARY,
          title: E.default.Messages.VIDEO_UNSUPPORTED_BROWSER_TITLE,
          body: E.default.Messages.VIDEO_UNSUPPORTED_BROWSER_BODY,
          button: (0, a.jsx)(o.Button, {
            size: o.Button.Sizes.SMALL,
            className: T.marginTop20,
            onClick: () =>
              (0, u.openDownloadAppsModal)("Video unsupported browser"),
            children: E.default.Messages.DOWNLOAD_APP,
          }),
        });
      }
      function _() {
        let e = (0, r.useStateFromStores)([d.default], () =>
            d.default.supports(S.Features.VIDEO)
          ),
          [t, s] = n.useState(!1);
        return (0, a.jsxs)("div", {
          children: [
            (0, a.jsx)(o.HeadingLevel, {
              component: (0, a.jsx)(o.FormTitle, {
                tag: o.FormTitleTags.H1,
                className: T.marginBottom20,
                children: E.default.Messages.VIDEO_SETTINGS,
              }),
              children: e
                ? (0, a.jsx)(c.default, {
                    previewEnabled: t,
                    onEnablePreview: () => s(!0),
                  })
                : (0, a.jsx)(f, {}),
            }),
            (0, a.jsx)(o.FormDivider, {
              className: i(T.marginBottom40, T.marginTop40),
            }),
          ],
        });
      }
    },
    21811: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return y;
          },
        }),
        s("424973");
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("446674"),
        o = s("77078"),
        d = s("629109"),
        u = s("79112"),
        c = s("49671"),
        S = s("42887"),
        E = s("26092"),
        T = s("476765"),
        f = s("701909"),
        _ = s("773336"),
        m = s("934810"),
        g = s("789854"),
        h = s("988231"),
        N = s("173364"),
        I = s("201114"),
        p = s("593647"),
        C = s("366662"),
        A = s("992121"),
        O = s("338601"),
        x = s("555066"),
        M = s("904725"),
        R = s("397336"),
        D = s("49111"),
        v = s("353927"),
        L = s("782340"),
        P = s("890957");
      let j = (0, T.uid)(),
        b = "".concat(
          f.default.getArticleURL(
            D.HelpdeskArticles.VOICE_VIDEO_TROUBLESHOOTING
          ),
          "?utm_source=discord&utm_medium=blog&utm_campaign=2020-06_help-voice-video&utm_content=--t%3Apm"
        );
      function U(e, t, s) {
        (0, o.openModal)(n =>
          (0, a.jsx)(o.ConfirmModal, {
            header: e,
            confirmText: L.default.Messages.OKAY,
            cancelText: L.default.Messages.CANCEL,
            onConfirm: s,
            ...n,
            children: (0, a.jsx)(o.Text, {
              variant: "text-md/normal",
              children: t,
            }),
          })
        );
      }
      function y() {
        let {
            inputMode: e,
            qosEnabled: t,
            attenuation: s,
            attenuateWhileSpeakingSelf: l,
            attenuateWhileSpeakingOthers: T,
            audioSubsystem: f,
            silenceWarning: D,
            debugLoggingEnabled: y,
            legacyAudioSubsystemSupported: B,
            experimentalAudioSubsystemSupported: F,
            qosSupported: G,
            attenuationSupported: k,
          } = (0, r.useStateFromStoresObject)([S.default], () => ({
            inputMode: S.default.getMode(),
            qosEnabled: S.default.getQoS(),
            attenuation: S.default.getAttenuation(),
            attenuateWhileSpeakingSelf:
              S.default.getAttenuateWhileSpeakingSelf(),
            attenuateWhileSpeakingOthers:
              S.default.getAttenuateWhileSpeakingOthers(),
            audioSubsystem: S.default.getAudioSubsystem(),
            silenceWarning: S.default.getEnableSilenceWarning(),
            debugLoggingEnabled: S.default.supports(v.Features.DEBUG_LOGGING),
            legacyAudioSubsystemSupported: S.default.supports(
              v.Features.LEGACY_AUDIO_SUBSYSTEM
            ),
            experimentalAudioSubsystemSupported: S.default.supports(
              v.Features.EXPERIMENTAL_AUDIO_SUBSYSTEM
            ),
            qosSupported: S.default.supports(v.Features.QOS),
            attenuationSupported: S.default.supports(v.Features.ATTENUATION),
          })),
          H = (0, r.useStateFromStores)([E.default], () =>
            E.default.getSubsection()
          ),
          w = n.createRef(),
          V =
            _.isPlatformEmbedded &&
            y &&
            null != c.default.fileManager.readLogFiles;
        return (
          n.useEffect(() => {
            if (H === R.SOUNDBOARD_SUBSECTION) {
              var e;
              null == w ||
                null === (e = w.current) ||
                void 0 === e ||
                e.scrollIntoView(),
                u.default.clearSubsection();
            }
          }, [w, H]),
          (0, a.jsxs)(o.FormSection, {
            tag: o.FormTitleTags.H1,
            title: L.default.Messages.VOICE_SETTINGS,
            children: [
              (0, a.jsx)(N.default, {}),
              (0, a.jsx)(M.default, {}),
              (0, a.jsx)(p.default, {}),
              (0, a.jsx)(o.FormText, {
                className: P.marginBottom20,
                type: o.FormText.Types.DESCRIPTION,
                children:
                  L.default.Messages.FORM_HELP_VOICE_VIDEO_TROUBLESHOOTING_GUIDE.format(
                    { guideURL: b }
                  ),
              }),
              (0, a.jsx)(o.FormDivider, { className: i(P.marginBottom20) }),
              (0, a.jsx)(I.default, {}),
              e === v.InputModes.VOICE_ACTIVITY && (0, a.jsx)(x.default, {}),
              (0, a.jsx)(o.FormDivider, { className: P.marginBottom40 }),
              (0, a.jsx)("div", { style: { scrollMarginTop: "48px" }, ref: w }),
              (0, a.jsx)(m.default, {}),
              (0, a.jsx)(A.default, {}),
              (0, a.jsxs)(o.HeadingLevel, {
                component: (0, a.jsx)(o.FormTitle, {
                  tag: o.FormTitleTags.H1,
                  className: P.marginBottom20,
                  children: L.default.Messages.SETTINGS_ADVANCED,
                }),
                children: [
                  (0, a.jsx)(g.default, {}),
                  (0, a.jsx)(O.default, {}),
                  G &&
                    (0, a.jsx)(o.FormSection, {
                      className: P.marginBottom20,
                      title: L.default.Messages.FORM_LABEL_QOS,
                      children: (0, a.jsx)(o.FormSwitch, {
                        value: t,
                        onChange: e => d.default.setQoS(e),
                        note: L.default.Messages.FORM_HELP_QOS,
                        children: L.default.Messages.FORM_CHECKBOX_QOS,
                      }),
                    }),
                  k &&
                    (0, a.jsxs)(o.FormSection, {
                      className: P.marginBottom20,
                      children: [
                        (0, a.jsx)(o.FormTitle, {
                          id: j,
                          tag: o.FormTitleTags.H5,
                          className: P.marginBottom8,
                          children: L.default.Messages.FORM_LABEL_ATTENUATION,
                        }),
                        (0, a.jsx)(o.Slider, {
                          initialValue: s,
                          onValueChange: e => {
                            d.default.setAttenuation(e, l, T);
                          },
                          "aria-labelledby": j,
                        }),
                        (0, a.jsx)(o.FormText, {
                          className: P.marginBottom20,
                          type: o.FormText.Types.DESCRIPTION,
                          children: L.default.Messages.FORM_HELP_ATTENUATION,
                        }),
                        (0, a.jsx)(o.FormDivider, {
                          className: P.marginBottom20,
                        }),
                        (0, a.jsx)(o.FormSwitch, {
                          value: l,
                          onChange: e => d.default.setAttenuation(s, e, T),
                          children:
                            L.default.Messages.ATTENUATE_WHILE_SPEAKING_SELF,
                        }),
                        (0, a.jsx)(o.FormSwitch, {
                          value: T,
                          onChange: e => d.default.setAttenuation(s, l, e),
                          children:
                            L.default.Messages.ATTENUATE_WHILE_SPEAKING_OTHERS,
                        }),
                      ],
                    }),
                  (B || F) &&
                    (0, a.jsxs)(o.FormSection, {
                      className: P.marginBottom20,
                      title: L.default.Messages.FORM_LABEL_SUBSYSTEM,
                      children: [
                        (0, a.jsx)(o.SingleSelect, {
                          className: P.marginBottom20,
                          value: f,
                          options: (function (e, t) {
                            let s = [
                              {
                                value: v.AudioSubsystems.STANDARD,
                                label: "Standard",
                              },
                            ];
                            return (
                              e &&
                                s.push({
                                  value: v.AudioSubsystems.LEGACY,
                                  label: "Legacy",
                                }),
                              t &&
                                s.push({
                                  value: v.AudioSubsystems.EXPERIMENTAL,
                                  label: "Experimental",
                                }),
                              s
                            );
                          })(B, F),
                          onChange: e => {
                            U(
                              L.default.Messages.SWITCH_SUBSYSTEM,
                              L.default.Messages.SWITCH_SUBSYSTEM_BODY,
                              () => d.default.setAudioSubsystem(e)
                            );
                          },
                        }),
                        (0, a.jsx)(o.FormDivider, {
                          className: P.marginBottom20,
                        }),
                      ],
                    }),
                  _.isPlatformEmbedded &&
                    (0, a.jsxs)(a.Fragment, {
                      children: [
                        (0, a.jsx)(C.default, {}),
                        (0, a.jsx)(o.FormSection, {
                          className: P.marginBottom20,
                          title:
                            L.default.Messages.FORM_LABEL_VOICE_DIAGNOSTICS,
                          children: (0, a.jsx)(o.FormSwitch, {
                            value: D,
                            onChange: e => d.default.setSilenceWarning(e),
                            children:
                              L.default.Messages.DISPLAY_SILENCE_WARNING,
                          }),
                        }),
                      ],
                    }),
                  V && (0, a.jsx)(h.default, {}),
                  (0, a.jsx)(o.FormItem, {
                    children: (0, a.jsx)(o.Button, {
                      look: o.Button.Looks.OUTLINED,
                      color: o.Button.Colors.RED,
                      onClick: () => {
                        U(
                          L.default.Messages.RESET_VOICE_SETTINGS,
                          L.default.Messages.RESET_VOICE_SETTINGS_BODY,
                          d.default.reset
                        );
                      },
                      size: o.Button.Sizes.SMALL,
                      children: L.default.Messages.RESET_VOICE_SETTINGS,
                    }),
                  }),
                ],
              }),
            ],
          })
        );
      }
    },
    338601: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return R;
          },
        }),
        s("424973");
      var a,
        n,
        l = s("37983");
      s("884691");
      var i = s("414456"),
        r = s.n(i),
        o = s("446674"),
        d = s("819855"),
        u = s("77078"),
        c = s("629109"),
        S = s("533222"),
        E = s("42887"),
        T = s("145131"),
        f = s("476765"),
        _ = s("599110"),
        m = s("701909"),
        g = s("161778"),
        h = s("49111"),
        N = s("782340"),
        I = s("890957");
      let p = s("247431"),
        C = s("529115"),
        A = (0, f.uid)();
      ((n = a || (a = {}))[(n.NONE = 0)] = "NONE"),
        (n[(n.STANDARD = 1)] = "STANDARD"),
        (n[(n.KRISP = 2)] = "KRISP");
      let O = {
        page: h.AnalyticsPages.USER_SETTINGS,
        section: h.AnalyticsSections.SETTINGS_VOICE_AND_VIDEO,
      };
      function x(e) {
        let t = e.currentTarget;
        _.default.track(h.AnalyticEvents.NOISE_CANCELLATION_LINK_CLICKED, {
          text: t.text,
          href: t.href,
          location: {
            page: h.AnalyticsPages.USER_SETTINGS,
            section: h.AnalyticsSections.SETTINGS_VOICE_AND_VIDEO,
          },
        });
      }
      function M() {
        let e = (0, o.useStateFromStores)([g.default], () => g.default.theme),
          {
            noiseCancellation: t,
            noiseSuppression: s,
            noiseSuppressionSupported: a,
            noiseCancellationSupported: n,
          } = (0, o.useStateFromStoresObject)([E.default], () => ({
            noiseCancellation: E.default.getNoiseCancellation(),
            noiseSuppression: E.default.getNoiseSuppression(),
            noiseSuppressionSupported: E.default.isNoiseSuppressionSupported(),
            noiseCancellationSupported:
              E.default.isNoiseCancellationSupported(),
          }));
        if (!a && !n) return null;
        let i = [];
        return (
          n &&
            i.push({
              name: N.default.Messages.USER_SETTINGS_NOISE_CANCELLATION_KRISP,
              value: 2,
            }),
          a &&
            i.push({
              name: N.default.Messages
                .USER_SETTINGS_NOISE_CANCELLATION_STANDARD,
              value: 1,
            }),
          i.push({
            name: N.default.Messages.USER_SETTINGS_NOISE_CANCELLATION_DISABLED,
            value: 0,
          }),
          (0, l.jsxs)(u.FormSection, {
            className: I.marginBottom20,
            children: [
              (0, l.jsx)(u.FormTitle, {
                id: A,
                tag: u.FormTitleTags.H3,
                className: I.marginBottom8,
                children: N.default.Messages.NOISE_SUPPRESSION,
              }),
              (0, l.jsx)(u.FormText, {
                type: u.FormText.Types.DESCRIPTION,
                className: I.marginBottom8,
                children:
                  N.default.Messages
                    .USER_SETTINGS_NOISE_CANCELLATION_DESCRIPTION,
              }),
              (0, l.jsx)(u.RadioGroup, {
                options: i,
                onChange: e => {
                  c.default.setNoiseCancellation(2 === e.value, O),
                    c.default.setNoiseSuppression(1 === e.value, O);
                },
                value: t ? 2 : s ? 1 : 0,
              }),
              n &&
                (0, l.jsx)(u.FormNotice, {
                  className: I.marginBottom8,
                  type: u.FormNoticeTypes.PRIMARY,
                  imageData: {
                    src: (0, d.isThemeLight)(e) ? p : C,
                    width: 70,
                    height: 40,
                  },
                  align: T.default.Align.CENTER,
                  body: (0, l.jsx)(u.Anchor, {
                    href: m.default.getArticleURL(
                      h.HelpdeskArticles.NOISE_SUPPRESSION
                    ),
                    onClick: x,
                    children: N.default.Messages.LEARN_MORE,
                  }),
                }),
              (0, l.jsx)(u.FormDivider, {}),
            ],
          })
        );
      }
      function R() {
        let {
            inputMode: e,
            inputDeviceId: t,
            echoCancellation: s,
            automaticGainControl: a,
            vadAutoThreshold: n,
            vadUseKrisp: i,
            advancedVoiceActivitySupported: d,
            automaticGainControlSupported: T,
          } = (0, o.useStateFromStoresObject)([E.default], () => ({
            inputMode: E.default.getMode(),
            inputDeviceId: E.default.getInputDeviceId(),
            echoCancellation: E.default.getEchoCancellation(),
            automaticGainControl: E.default.getAutomaticGainControl(),
            vadAutoThreshold: E.default.getModeOptions().autoThreshold,
            vadUseKrisp: E.default.getModeOptions().vadUseKrisp,
            advancedVoiceActivitySupported:
              E.default.isAdvancedVoiceActivitySupported(),
            automaticGainControlSupported:
              E.default.isAutomaticGainControlSupported(),
          })),
          {
            hasEchoCancellation: f,
            hasNoiseSuppression: _,
            hasAutomaticGainControl: m,
          } = (0, o.useStateFromStoresObject)(
            [S.default],
            () => ({
              hasEchoCancellation: S.default.hasEchoCancellation(t),
              hasNoiseSuppression: S.default.hasNoiseSuppression(t),
              hasAutomaticGainControl: S.default.hasAutomaticGainControl(t),
            }),
            [t]
          ),
          g = f || _ || m,
          p = e === h.InputModes.VOICE_ACTIVITY && n;
        return (0, l.jsxs)(u.FormSection, {
          className: I.marginBottom20,
          title: N.default.Messages.FORM_LABEL_VOICE_PROCESSING,
          children: [
            g &&
              (0, l.jsx)(u.FormText, {
                className: I.marginBottom20,
                type: u.FormText.Types.DESCRIPTION,
                children:
                  N.default.Messages.FORM_HELP_CERTIFIED_VOICE_PROCESSING,
              }),
            (0, l.jsx)(u.FormSwitch, {
              className: r(I.marginTop8, I.marginBottom20),
              value: s,
              onChange: e =>
                c.default.setEchoCancellation(e, {
                  page: h.AnalyticsPages.USER_SETTINGS,
                  section: h.AnalyticsSections.SETTINGS_VOICE_AND_VIDEO,
                }),
              disabled: f,
              children: N.default.Messages.ECHO_CANCELLATION,
            }),
            (0, l.jsx)(M, {}),
            d &&
              (0, l.jsx)(u.FormSwitch, {
                value: i,
                onChange: t => c.default.setMode(e, { vadUseKrisp: t }),
                note: N.default.Messages
                  .USER_SETTINGS_DISABLE_ADVANCED_VOICE_ACTIVITY,
                disabled: !p,
                children: N.default.Messages.ADVANCED_VOICE_ACTIVITY,
              }),
            T &&
              (0, l.jsx)(u.FormSwitch, {
                className: "",
                value: a,
                onChange: e =>
                  c.default.setAutomaticGainControl(e, {
                    page: h.AnalyticsPages.USER_SETTINGS,
                    section: h.AnalyticsSections.SETTINGS_VOICE_AND_VIDEO,
                  }),
                disabled: m,
                children: N.default.Messages.AUTOMATIC_GAIN_CONTROL,
              }),
          ],
        });
      }
    },
    555066: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return I;
          },
        }),
        s("222007");
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("446674"),
        o = s("773364"),
        d = s("862337"),
        u = s("669491"),
        c = s("77078"),
        S = s("629109"),
        E = s("42887"),
        T = s("476765"),
        f = s("353927"),
        _ = s("782340"),
        m = s("579944"),
        g = s("125047"),
        h = s("890957");
      let N = (0, T.uid)();
      function I() {
        let [e, t] = n.useState(-100),
          [s, l] = n.useState(!1),
          { threshold: I, autoThreshold: p } = (0, r.useStateFromStoresObject)(
            [E.default],
            () => E.default.getModeOptions()
          ),
          {
            inputMode: C,
            automaticVADSupported: A,
            isEnabled: O,
          } = (0, r.useStateFromStoresObject)([E.default], () => ({
            inputMode: E.default.getMode(),
            automaticVADSupported: E.default.supports(f.Features.AUTOMATIC_VAD),
            isEnabled: E.default.isEnabled(),
          }));
        function x(e, s) {
          t(e), l((s & f.SpeakingFlags.VOICE) === f.SpeakingFlags.VOICE);
        }
        function M(e, t) {
          S.default.setMode(C, { threshold: e, autoThreshold: t });
        }
        n.useEffect(() => {
          let e = new d.Timeout();
          return (
            e.start(1e3, () => {
              E.default
                .getMediaEngine()
                .on(o.MediaEngineEvent.VoiceActivity, x),
                e.stop();
            }),
            () => {
              E.default
                .getMediaEngine()
                .removeListener(o.MediaEngineEvent.VoiceActivity, x),
                e.stop();
            }
          );
        }, []);
        let R = (0, a.jsx)("section", {
          className: i(m.inputSensitivityToggle, m.manual),
          children: (0, a.jsx)(c.Slider, {
            initialValue: I + 100,
            onValueRender: e => "".concat((-((100 - e) * 1)).toFixed(0), "dB"),
            onValueChange: e => M(-((100 - e) * 1), p),
            barStyles: { background: u.default.unsafe_rawColors.GREEN_360.css },
            fillStyles: {
              background: u.default.unsafe_rawColors.YELLOW_300.css,
            },
            "aria-labelledby": N,
            children: (0, a.jsxs)("div", {
              className: i(m.sliderBar, m.microphone, m.inputSensitivityBar),
              children: [
                (0, a.jsx)("div", {
                  className: i(m.fill, m.inputSensitivityBarFill),
                  style: { width: e + 100 + "%" },
                }),
                (0, a.jsx)("div", { className: "grow" }),
              ],
            }),
          }),
        });
        return (
          p &&
            (R = (0, a.jsxs)("section", {
              className: m.inputSensitivityToggle,
              children: [
                (0, a.jsx)("div", {
                  className: m.inputSensitivitySlider,
                  children: (0, a.jsx)("div", {
                    className: i(m.inputSensitivityBar, m.sliderBar, {
                      [m.speaking]: s,
                    }),
                  }),
                }),
                (0, a.jsx)(c.FormText, {
                  type: c.FormText.Types.DESCRIPTION,
                  className: h.marginBottom8,
                  children: _.default.Messages.FORM_HELP_AUTOMATIC_VAD,
                }),
              ],
            })),
          (0, a.jsxs)(c.FormItem, {
            className: m.sensitivity,
            children: [
              (0, a.jsx)(c.FormTitle, {
                id: N,
                tag: c.FormTitleTags.H5,
                className: h.marginBottom8,
                children: _.default.Messages.FORM_LABEL_INPUT_SENSITIVTY,
              }),
              (0, a.jsxs)("div", {
                children: [
                  A &&
                    (0, a.jsx)(T.UID, {
                      children: e =>
                        (0, a.jsxs)("div", {
                          className: i(g.horizontal, h.marginBottom4),
                          children: [
                            (0, a.jsx)(c.FormTitle, {
                              tag: c.FormTitleTags.H3,
                              className: h.marginReset,
                              children: (0, a.jsx)("label", {
                                htmlFor: e,
                                children:
                                  _.default.Messages.FORM_LABEL_AUTOMATIC_VAD,
                              }),
                            }),
                            (0, a.jsx)(c.Switch, {
                              id: e,
                              checked: p,
                              onChange: e => M(I, e),
                            }),
                          ],
                        }),
                    }),
                  R,
                ],
              }),
              !O &&
                (0, a.jsx)(c.FormText, {
                  type: c.FormText.Types.DESCRIPTION,
                  className: i(m.inputDisabledWarning, h.marginBottom8),
                  children:
                    _.default.Messages.FORM_WARNING_INPUT_SENSITIVTY.format({
                      onEnableClick: S.default.enable,
                    }),
                }),
            ],
          })
        );
      }
    },
    597870: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          openDownloadAppsModal: function () {
            return l;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("77078");
      function l(e) {
        (0, n.openModalLazy)(async () => {
          let { default: t } = await s.el("649486").then(s.bind(s, "649486"));
          return s => (0, a.jsx)(t, { source: e, ...s });
        });
      }
    },
    904725: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return f;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("446674"),
        l = s("77078"),
        i = s("629109"),
        r = s("42887"),
        o = s("145131"),
        d = s("476765"),
        u = s("829536"),
        c = s("782340"),
        S = s("890957");
      let E = (0, d.uid)(),
        T = (0, d.uid)();
      function f() {
        let { inputVolume: e, outputVolume: t } = (0,
        n.useStateFromStoresObject)([r.default], () => ({
          inputVolume: r.default.getInputVolume(),
          outputVolume: r.default.getOutputVolume(),
        }));
        return (0, a.jsxs)(o.default, {
          className: "volume",
          children: [
            (0, a.jsxs)(o.default.Child, {
              basis: "50%",
              children: [
                (0, a.jsx)(l.FormTitle, {
                  id: E,
                  tag: l.FormTitleTags.H5,
                  className: S.marginBottom4,
                  children: c.default.Messages.FORM_LABEL_INPUT_VOLUME,
                }),
                (0, a.jsx)(l.Slider, {
                  initialValue: (0, u.amplitudeToPerceptual)(e),
                  asValueChanges: e =>
                    i.default.setInputVolume((0, u.perceptualToAmplitude)(e)),
                  "aria-labelledby": E,
                }),
              ],
            }),
            (0, a.jsxs)(o.default.Child, {
              basis: "50%",
              children: [
                (0, a.jsx)(l.FormTitle, {
                  id: T,
                  tag: l.FormTitleTags.H5,
                  className: S.marginBottom4,
                  children: c.default.Messages.FORM_LABEL_OUTPUT_VOLUME,
                }),
                (0, a.jsx)(l.Slider, {
                  initialValue: (0, u.amplitudeToPerceptual)(t),
                  maxValue: 200,
                  onValueRender: e => "".concat(e.toFixed(0), "%"),
                  asValueChanges: e =>
                    i.default.setOutputVolume((0, u.perceptualToAmplitude)(e)),
                  "aria-labelledby": T,
                }),
              ],
            }),
          ],
        });
      }
    },
    831490: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return h;
          },
        }),
        s("222007");
      var a = s("37983"),
        n = s("884691"),
        l = s("446674"),
        i = s("77078"),
        r = s("913144"),
        o = s("997289"),
        d = s("659558"),
        u = s("154867"),
        c = s("439141"),
        S = s("739477"),
        E = s("42887"),
        T = s("697218"),
        f = s("49111"),
        _ = s("782340"),
        m = s("438631");
      let g = { width: 387, height: 218 };
      function h(e) {
        let { previewEnabled: t, onEnablePreview: s } = e,
          h = E.default.getCameraComponent(),
          [N, I] = n.useState(
            (0, d.getLastUsedVideoBackgroundOption)(T.default.getCurrentUser())
          ),
          p = n.useRef(!1),
          C = n.useRef(N),
          A = (0, o.useAnalyticsContext)(),
          O = (0, l.useStateFromStores)(
            [E.default],
            () => Object.values(E.default.getVideoDevices()).length > 0
          );
        return (
          n.useEffect(
            () => () => {
              p.current &&
                r.default.wait(() =>
                  (0, u.saveLastUsedBackgroundOption)(C.current)
                );
            },
            []
          ),
          (0, a.jsx)(S.default, {
            selectedBackgroundOption: N,
            onSelectBackgroundOption: e => {
              (p.current = !0),
                (C.current = e),
                I(e),
                (0, c.applyBackgroundOptionLive)(e, {
                  location: A.location,
                }).catch(f.NOOP);
            },
            renderCamera: e =>
              t
                ? (0, a.jsx)("div", {
                    className: m.cameraWrapper,
                    children: (0, a.jsxs)("div", {
                      className: m.camera,
                      children: [
                        (0, a.jsx)(h, {
                          deviceId: e,
                          width: g.width,
                          height: g.height,
                          disabled: !t,
                        }),
                        (0, a.jsx)(S.FilterLoadingIndicator, {}),
                      ],
                    }),
                  })
                : (0, a.jsxs)("div", {
                    className: m.cameraWrapper,
                    children: [
                      (0, a.jsx)("div", { className: m.previewImage }),
                      (0, a.jsx)(i.Tooltip, {
                        text: O ? null : _.default.Messages.CAMERA_UNAVAILABLE,
                        children: e =>
                          (0, a.jsx)(i.Button, {
                            ...e,
                            onClick: s,
                            disabled: !O,
                            children: _.default.Messages.TEST_VIDEO,
                          }),
                      }),
                    ],
                  }),
          })
        );
      }
    },
    435645: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return ex;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("759843"),
        l = s("151426"),
        i = s("669491"),
        r = s("77078"),
        o = s("913144"),
        d = s("437822"),
        u = s("152584"),
        c = s("79112"),
        S = s("534291"),
        E = s("545158"),
        T = s("788434"),
        f = s("311207"),
        _ = s("824357"),
        m = s("20606"),
        g = s("192845"),
        h = s("929423"),
        N = s("424562"),
        I = s("447845"),
        p = s("880731"),
        C = s("317654"),
        A = s("580758"),
        O = s("763417"),
        x = s("470022"),
        M = s("610109"),
        R = s("368694"),
        D = s("42887"),
        v = s("790618"),
        L = s("860957"),
        P = s("893011"),
        j = s("423487"),
        b = s("956089"),
        U = s("599110"),
        y = s("128259"),
        B = s("773336"),
        F = s("546605"),
        G = s("733051"),
        k = s("474775"),
        H = s("413622"),
        w = s("479290"),
        V = s("825958"),
        Y = s("20604"),
        K = s("836833"),
        W = s("625393"),
        z = s("152891"),
        Q = s("921600"),
        X = s("250972"),
        q = s("89563"),
        Z = s("41525"),
        J = s("59574"),
        $ = s("602806"),
        ee = s("462506"),
        et = s("500517"),
        es = s("814953"),
        ea = s("409862"),
        en = s("175077"),
        el = s("688413"),
        ei = s("477596"),
        er = s("9047"),
        eo = s("656395"),
        ed = s("960261"),
        eu = s("699501"),
        ec = s("436112"),
        eS = s("194200"),
        eE = s("974926"),
        eT = s("905818"),
        ef = s("819638"),
        e_ = s("114582"),
        em = s("995350"),
        eg = s("409462"),
        eh = s("799458"),
        eN = s("227473"),
        eI = s("21811"),
        ep = s("49111"),
        eC = s("782340"),
        eA = s("528174");
      let eO = eh.default;
      function ex(e) {
        let {
            unseenGiftCount: t,
            showPrepaidPaymentPastDueWarning: ex,
            impressionSource: eM,
            numOfPendingFamilyRequests: eR,
            isClipsBetaTagShowing: eD = !1,
          } = e,
          ev = [
            {
              section: S.SectionTypes.HEADER,
              label: eC.default.Messages.USER_SETTINGS,
            },
            {
              section: ep.UserSettingsSections.ACCOUNT,
              label: eC.default.Messages.USER_SETTINGS_MY_ACCOUNT,
              ariaLabel: eC.default.Messages.USER_SETTINGS_MY_ACCOUNT,
              element: X.default,
            },
            {
              section: ep.UserSettingsSections.PROFILE_CUSTOMIZATION,
              type: S.ContentTypes.WIDE,
              label: eC.default.Messages.USER_SETTINGS_PROFILES,
              ariaLabel: eC.default.Messages.USER_SETTINGS_PROFILES,
              element: x.default,
              newIndicator: (0, a.jsx)(b.PremiumBadge, {
                text: eC.default.Messages.NEW,
              }),
              notice: { stores: [v.default, N.default], element: O.default },
              onSettingsClose: () => {
                o.default.wait(() => {
                  (0, h.resetAndCloseGuildIdentityForm)(),
                    (0, u.resetAndCloseUserProfileForm)(),
                    c.default.clearSubsection(
                      ep.UserSettingsSections.PROFILE_CUSTOMIZATION
                    );
                });
              },
            },
            {
              section: ep.UserSettingsSections.PRIVACY_AND_SAFETY,
              label: eC.default.Messages.PRIVACY_AND_SAFETY,
              element: eT.default,
            },
            {
              section: ep.UserSettingsSections.FAMILY_CENTER,
              label: eC.default.Messages.FAMILY_CENTER_SETTINGS_TITLE,
              ariaLabel: eC.default.Messages.FAMILY_CENTER_SETTINGS_TITLE,
              element: ea.default,
              badgeCount: eR,
              newIndicator: (0, a.jsx)(b.TextBadge, {
                text: eC.default.Messages.NEW,
                color: m.default.BG_BRAND,
              }),
              newIndicatorDismissibleContentTypes: [
                l.DismissibleContent.FAMILY_CENTER_NEW_BADGE,
              ],
            },
            {
              section: ep.UserSettingsSections.AUTHORIZED_APPS,
              label: eC.default.Messages.AUTHORIZED_APPS,
              element: $.default,
            },
            {
              section: ep.UserSettingsSections.SESSIONS,
              label: eC.default.Messages.AUTH_SESSIONS,
              ariaLabel: eC.default.Messages.AUTH_SESSIONS,
              element: ef.default,
              newIndicatorDismissibleContentTypes: [
                l.DismissibleContent.AUTH_SESSIONS_NEW,
              ],
              predicate: () =>
                F.default.getCurrentConfig(
                  { location: "9f7d84_1" },
                  { autoTrackExposure: !1 }
                ).showSettings,
            },
            {
              section: ep.UserSettingsSections.CONNECTIONS,
              label: eC.default.Messages.CONNECTIONS,
              ariaLabel: eC.default.Messages.CONNECTIONS,
              element: et.default,
              impressionName: n.ImpressionNames.USER_SETTINGS_CONNECTIONS,
              impressionProperties: { source: eM },
              newIndicatorDismissibleContentTypes: [
                l.DismissibleContent.NEW_CRUNCHYROLL_CONNECTION,
              ],
            },
            {
              section: ep.UserSettingsSections.CLIPS,
              label: eC.default.Messages.CLIPS,
              ariaLabel: eC.default.Messages.CLIPS,
              icon: eD ? (0, a.jsx)(f.default, {}) : void 0,
              element: _.default,
            },
            {
              section: ep.UserSettingsSections.LOOTBOXES,
              label: eC.default.Messages.PACKAGES,
              ariaLabel: eC.default.Messages.PACKAGES,
              element: eu.default,
              predicate: () =>
                I.default.getCurrentConfig(
                  { location: "user_settings" },
                  { autoTrackExposure: !1 }
                ).allowOpeningLootboxes,
            },
            {
              section: ep.UserSettingsSections.FRIEND_REQUESTS,
              label: eC.default.Messages.FRIEND_REQUESTS,
              element: en.default,
            },
            { section: S.SectionTypes.DIVIDER },
            {
              section: S.SectionTypes.HEADER,
              label: eC.default.Messages.BILLING_SETTINGS,
            },
            {
              section: ep.UserSettingsSections.PREMIUM,
              ariaLabel: eC.default.Messages.PREMIUM,
              label: eC.default.Messages.PREMIUM,
              element: V.default,
              className: eA.premiumTab,
            },
            {
              section: ep.UserSettingsSections.GUILD_BOOSTING,
              label: eC.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_TITLE,
              element: eE.default,
            },
            {
              section: ep.UserSettingsSections.SUBSCRIPTIONS,
              ariaLabel: eC.default.Messages.SUBSCRIPTIONS_TITLE,
              label: eC.default.Messages.SUBSCRIPTIONS_TITLE,
              element: A.default,
              icon: ex
                ? (0, a.jsx)(j.default, {
                    width: 16,
                    height: 16,
                    color: i.default.unsafe_rawColors.YELLOW_300.css,
                  })
                : null,
            },
            {
              section: ep.UserSettingsSections.INVENTORY,
              label: eC.default.Messages.GIFT_INVENTORY,
              element: er.default,
              ariaLabel: eC.default.Messages.GIFT_INVENTORY,
              badgeCount: t,
            },
            {
              section: ep.UserSettingsSections.BILLING,
              label: eC.default.Messages.BILLING,
              element: ee.default,
            },
            { section: S.SectionTypes.DIVIDER },
            {
              section: S.SectionTypes.HEADER,
              label: eC.default.Messages.APP_SETTINGS,
            },
            {
              section: ep.UserSettingsSections.APPEARANCE,
              label: eC.default.Messages.APPEARANCE,
              ariaLabel: eC.default.Messages.APPEARANCE,
              element: J.default,
              newIndicator: (0, a.jsx)(b.PremiumBadge, {
                text: eC.default.Messages.NEW,
              }),
              newIndicatorDismissibleContentTypes: [
                l.DismissibleContent.CLIENT_THEMES_SETTINGS_BADGE,
                l.DismissibleContent.DEKSTOP_CUSTOM_APP_ICON_BADGE,
              ],
            },
            {
              section: ep.UserSettingsSections.ACCESSIBILITY,
              label: eC.default.Messages.ACCESSIBILITY,
              element: Q.default,
            },
            {
              section: ep.UserSettingsSections.VOICE,
              label: eC.default.Messages.VOICE_AND_VIDEO,
              element: eI.default,
              predicate: () => D.default.isSupported(),
            },
            {
              section: ep.UserSettingsSections.POGGERMODE,
              label: eC.default.Messages.POGGERMODE,
              ariaLabel: eC.default.Messages.POGGERMODE,
              element: C.default,
              predicate: () => p.default.settingsVisible,
              icon: (0, a.jsx)("img", {
                alt: "",
                src: s("226992"),
                className: eA.poggermodeIcon,
              }),
            },
            {
              section: ep.UserSettingsSections.TEXT,
              label: eC.default.Messages.CHAT,
              element: em.default,
            },
            {
              section: ep.UserSettingsSections.NOTIFICATIONS,
              label: eC.default.Messages.NOTIFICATIONS,
              element: ec.default,
            },
            {
              section: ep.UserSettingsSections.KEYBINDS,
              label: eC.default.Messages.KEYBINDS,
              element: eo.default,
            },
            {
              section: ep.UserSettingsSections.LOCALE,
              label: eC.default.Messages.LANGUAGE,
              element: ed.default,
            },
            {
              section: ep.UserSettingsSections.WINDOWS,
              label: eC.default.Messages.USER_SETTINGS_WINDOWS_SETTINGS,
              element: eh.default,
              predicate: () => B.isPlatformEmbedded && (0, B.isWindows)(),
            },
            {
              section: ep.UserSettingsSections.LINUX,
              label: eC.default.Messages.USER_SETTINGS_LINUX_SETTINGS,
              element: eO,
              predicate: () => B.isPlatformEmbedded && (0, B.isLinux)(),
            },
            {
              section: ep.UserSettingsSections.STREAMER_MODE,
              label: eC.default.Messages.STREAMER_MODE,
              element: e_.default,
            },
            {
              section: ep.UserSettingsSections.SPEED_TEST,
              label: "Speed Test",
              element: K.default,
              predicate: () =>
                M.default.isSupported() &&
                G.default.getCurrentConfig({ location: "9f7d84_2" })
                  .showSettings,
            },
            {
              section: ep.UserSettingsSections.ADVANCED,
              label: eC.default.Messages.SETTINGS_ADVANCED,
              element: Z.default,
            },
            { section: S.SectionTypes.DIVIDER },
            {
              section: S.SectionTypes.HEADER,
              label: eC.default.Messages.ACTIVITY_SETTINGS,
            },
            {
              section: ep.UserSettingsSections.ACTIVITY_PRIVACY,
              label: eC.default.Messages.ACTIVITY_PRIVACY,
              element: q.default,
            },
            {
              section: ep.UserSettingsSections.REGISTERED_GAMES,
              label: eC.default.Messages.REGISTERED_GAMES,
              element: el.default,
              predicate: () => B.isPlatformEmbedded,
            },
            {
              section: ep.UserSettingsSections.OVERLAY,
              label: eC.default.Messages.OVERLAY,
              element: eS.default,
              predicate: () => L.default.isSupported() || !1,
            },
            { section: S.SectionTypes.DIVIDER },
            {
              section: "changelog",
              onClick: () => (0, T.openChangelog)(!0),
              label: eC.default.Messages.WHATS_NEW,
            },
            {
              section: "merchandise",
              onClick: () => {
                let e = "https://discordmerch.com/Dsktopprm";
                U.default.track(
                  ep.AnalyticEvents.USER_SETTINGS_MERCH_LINK_CLICKED
                ),
                  (0, y.handleClick)({
                    href: e,
                    shouldConfirm: !0,
                    onConfirm: () => {
                      U.default.track(
                        ep.AnalyticEvents.USER_SETTINGS_MERCH_LINK_CONFIRMED
                      ),
                        (0, E.default)(e);
                    },
                  });
              },
              label: eC.default.Messages.MERCHANDISE,
              ariaLabel: eC.default.Messages.MERCHANDISE,
            },
            {
              section: ep.UserSettingsSections.HYPESQUAD_ONLINE,
              label: eC.default.Messages.USER_SETTINGS_HYPESQUAD,
              element: ei.default,
            },
            {
              section: ep.UserSettingsSections.EXPERIMENTS,
              label: "Experiments",
              element: eN.default,
              predicate: () => R.default.isDeveloper,
            },
            {
              section: ep.UserSettingsSections.DEVELOPER_OPTIONS,
              label: "Developer Options",
              element: es.default,
              predicate: () => R.default.isDeveloper,
            },
            {
              section: ep.UserSettingsSections.HOTSPOT_OPTIONS,
              label: "Hotspot Options",
              element: H.default,
              predicate: () => R.default.isDeveloper,
            },
            {
              section: ep.UserSettingsSections.DISMISSIBLE_CONTENT_OPTIONS,
              label: "Dismissible Contents",
              element: g.default,
              predicate: () => R.default.isDeveloper,
            },
            {
              section: ep.UserSettingsSections.PAYMENT_FLOW_MODAL_TEST_PAGE,
              label: "Payment Flow Modals",
              element: w.default,
              predicate: () => R.default.isDeveloper,
            },
            {
              section: ep.UserSettingsSections.TEXT_PLAYGROUND,
              label: "Text Playground",
              element: eg.default,
              predicate: () =>
                (0, z.shouldShowTextPlayground)() || R.default.isDeveloper,
            },
            {
              section: ep.UserSettingsSections.TEXT_COMPONENT,
              label: "Text Components",
              element: W.default,
              predicate: () =>
                (0, z.shouldShowTextPlayground)() || R.default.isDeveloper,
            },
            { section: S.SectionTypes.DIVIDER },
            {
              section: "logout",
              onClick() {
                (0, r.openModal)(e =>
                  (0, a.jsx)(r.ConfirmModal, {
                    header: eC.default.Messages.LOGOUT,
                    confirmText: eC.default.Messages.LOGOUT,
                    cancelText: eC.default.Messages.CANCEL,
                    onCancel: e.onClose,
                    onConfirm: () => d.default.logout(),
                    ...e,
                    children: (0, a.jsx)(r.Text, {
                      variant: "text-md/normal",
                      children:
                        eC.default.Messages.USER_SETTINGS_CONFIRM_LOGOUT,
                    }),
                  })
                );
              },
              label: eC.default.Messages.LOGOUT,
              ariaLabel: eC.default.Messages.LOGOUT,
              icon: (0, a.jsx)(P.default, { width: 16, height: 16 }),
            },
            { section: S.SectionTypes.DIVIDER },
            { section: S.SectionTypes.CUSTOM, element: Y.default },
            { section: S.SectionTypes.CUSTOM, element: k.default },
          ];
        return ev;
      }
    },
    415167: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return i;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("77078"),
        l = s("49111");
      function i() {
        (0, n.openModalLazy)(async () => {
          let { default: e } = await s.el("920067").then(s.bind(s, "920067"));
          return t =>
            (0, a.jsx)(e, {
              ...t,
              source: {
                page: l.AnalyticsPages.USER_SETTINGS,
                section: l.AnalyticsSections.SETTINGS_CUSTOMIZE_PROFILE,
                object: l.AnalyticsObjects.BUTTON_CTA,
                type: l.AnalyticsObjectTypes.BUY,
              },
            });
        });
      }
    },
    648661: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          showInvalidUsernameToast: function () {
            return l;
          },
        });
      var a = s("77078"),
        n = s("782340");
      function l() {
        (0, a.showToast)(
          (0, a.createToast)(
            n.default.Messages.USER_SETTINGS_UPDATE_FAILURE,
            a.ToastType.FAILURE
          )
        );
      }
    },
    886213: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          OneWayToTwoWayLinkUpsell: function () {
            return S;
          },
        });
      var a = s("37983"),
        n = s("884691"),
        l = s("77078"),
        i = s("384997"),
        r = s("956089"),
        o = s("994428"),
        d = s("782340"),
        u = s("688404");
      let c = e => {
          let { markAsDismissed: t } = e;
          return (
            n.useEffect(() => t(o.ContentDismissActionType.UNKNOWN), [t]),
            (0, a.jsx)(r.TextBadge, {
              className: u.newBadge,
              text: d.default.Messages.NEW,
            })
          );
        },
        S = e => {
          let {
            title: t,
            body: s,
            img: n,
            newIndicatorDismissibleContent: r,
            onClick: o,
          } = e;
          return (0, a.jsxs)("div", {
            className: u.container,
            children: [
              n,
              (0, a.jsxs)("div", {
                className: u.textContainer,
                children: [
                  (0, a.jsxs)("div", {
                    className: u.headerText,
                    children: [
                      (0, a.jsx)(i.default, {
                        contentTypes: [r],
                        children: e => {
                          let { visibleContent: t, markAsDismissed: s } = e;
                          return t === r
                            ? (0, a.jsx)(c, { markAsDismissed: s })
                            : null;
                        },
                      }),
                      (0, a.jsx)(l.Text, {
                        variant: "text-md/semibold",
                        children: t,
                      }),
                    ],
                  }),
                  (0, a.jsx)(l.Text, {
                    variant: "text-xs/normal",
                    children: s,
                  }),
                ],
              }),
              (0, a.jsx)(l.Button, {
                size: l.ButtonSizes.MEDIUM,
                onClick: o,
                className: u.reconnectButton,
                children: d.default.Messages.RECONNECT,
              }),
            ],
          });
        };
    },
    187451: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          PlayStationTwoWayLinkUpsell: function () {
            return c;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("151426"),
        l = s("926994"),
        i = s("701909"),
        r = s("886213"),
        o = s("49111"),
        d = s("782340"),
        u = s("337695");
      let c = () => {
        let e = i.default.getArticleURL(o.HelpdeskArticles.PS_CONNECTION);
        return (0, a.jsx)(r.OneWayToTwoWayLinkUpsell, {
          title: d.default.Messages.PS_TWO_WAY_UPSELL_TITLE,
          body: d.default.Messages.PS_TWO_WAY_UPSELL_BODY.format({
            help_article: e,
          }),
          img: (0, a.jsx)("img", {
            src: u,
            width: "82",
            height: "auto",
            alt: "",
          }),
          newIndicatorDismissibleContent:
            n.DismissibleContent.PS_ONE_WAY_RECONNECT,
          onClick: () =>
            (0, l.default)(o.PlatformTypes.PLAYSTATION, "PS two way upsell"),
        });
      };
    },
    470781: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          XboxTwoWayLinkUpsell: function () {
            return c;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("151426"),
        l = s("926994"),
        i = s("701909"),
        r = s("886213"),
        o = s("49111"),
        d = s("782340"),
        u = s("682407");
      let c = () => {
        let e = i.default.getArticleURL(o.HelpdeskArticles.XBOX_CONNECTION);
        return (0, a.jsx)(r.OneWayToTwoWayLinkUpsell, {
          title: d.default.Messages.XBOX_TWO_WAY_UPSELL_TITLE,
          body: d.default.Messages.XBOX_TWO_WAY_UPSELL_BODY.format({
            help_article: e,
          }),
          img: (0, a.jsx)("img", {
            src: u,
            width: "auto",
            height: "45",
            alt: "",
          }),
          newIndicatorDismissibleContent:
            n.DismissibleContent.XBOX_ONE_WAY_RECONNECT,
          onClick: () =>
            (0, l.default)(o.PlatformTypes.XBOX, "Xbox two way upsell"),
        });
      };
    },
    373798: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return E;
          },
        }),
        s("222007");
      var a = s("446674"),
        n = s("151426"),
        l = s("875212"),
        i = s("56947"),
        r = s("235145"),
        o = s("25132"),
        d = s("921149"),
        u = s("694540"),
        c = s("26092"),
        S = s("435645");
      function E() {
        let e = (0, u.useUnseenOutboundPromotions)(),
          t = e.length,
          s = (0, d.useIsPrepaidPaymentPastDue)(),
          E = (0, a.useStateFromStores)(
            [c.default],
            () => c.default.getProps().impressionSource
          ),
          T = (0, o.usePendingRequestCount)(),
          f = (0, i.useEnableClips)(),
          [_] = (0, r.useGetDismissibleContent)(
            f ? [n.DismissibleContent.CLIPS_SETTINGS_BETA_TAG] : []
          ),
          m = "useGenerateUserSettingsSections";
        return (
          (0, l.useTriggerDebuggingAA)({
            location: m + " auto on",
            autoTrackExposure: !0,
          }),
          (0, l.useTriggerDebuggingAA)({
            location: m + " auto off",
            autoTrackExposure: !1,
          }),
          (0, S.default)({
            unseenGiftCount: t,
            showPrepaidPaymentPastDueWarning: s,
            impressionSource: E,
            numOfPendingFamilyRequests: T,
            isClipsBetaTagShowing:
              _ === n.DismissibleContent.CLIPS_SETTINGS_BETA_TAG,
          })
        );
      }
    },
    425922: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          fetchWebAuthnCredentials: function () {
            return i;
          },
          deleteWebAuthnCredential: function () {
            return r;
          },
          editWebAuthnCredential: function () {
            return o;
          },
          startRegisterWebAuthnCredential: function () {
            return d;
          },
          finishRegisterWebAuthnCredential: function () {
            return u;
          },
        });
      var a = s("872717"),
        n = s("913144"),
        l = s("49111");
      function i() {
        n.default.dispatch({ type: "MFA_WEBAUTHN_CREDENTIALS_LOADING" }),
          a.default.get(l.Endpoints.MFA_WEBAUTHN_CREDENTIALS).then(e => {
            n.default.dispatch({
              type: "MFA_WEBAUTHN_CREDENTIALS_LOADED",
              credentials: e.body,
            });
          });
      }
      function r(e) {
        a.default.delete(l.Endpoints.MFA_WEBAUTHN_CREDENTIAL(e.id)).then(() => {
          n.default.dispatch({ type: "AUTHENTICATOR_DELETE", credential: e });
        });
      }
      async function o(e, t) {
        let s = await a.default.patch({
          url: l.Endpoints.MFA_WEBAUTHN_CREDENTIAL(e),
          body: { name: t },
        });
        n.default.dispatch({
          type: "AUTHENTICATOR_UPDATE",
          credential: s.body,
        });
      }
      async function d() {
        let {
          body: { ticket: e, challenge: t },
        } = await a.default.post({
          url: l.Endpoints.MFA_WEBAUTHN_CREDENTIALS,
          body: {},
        });
        return { ticket: e, challenge: t };
      }
      async function u(e, t, s) {
        let i = await a.default.post({
          url: l.Endpoints.MFA_WEBAUTHN_CREDENTIALS,
          body: { name: e, ticket: t, credential: s },
        });
        n.default.dispatch({
          type: "AUTHENTICATOR_CREATE",
          credential: i.body,
        }),
          n.default.dispatch({
            type: "MFA_ENABLE_SUCCESS",
            codes: i.body.backup_codes,
          });
      }
    },
    426353: function (e, t, s) {
      "use strict";
      var a, n;
      s.r(t),
        s.d(t, {
          WebAuthnScreens: function () {
            return a;
          },
        }),
        ((n = a || (a = {})).INIT = "INIT"),
        (n.REGISTER = "REGISTER"),
        (n.NAME = "NAME"),
        (n.SUCCESS = "SUCCESS");
    },
    52408: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return d;
          },
        }),
        s("222007");
      var a = s("446674"),
        n = s("913144"),
        l = s("798609");
      let i = !1,
        r = [];
      class o extends a.default.Store {
        hasFetchedCredentials() {
          return i;
        }
        getCredentials() {
          return r;
        }
      }
      o.displayName = "WebAuthnStore";
      var d = new o(n.default, {
        LOGOUT: function () {
          (r = []), (i = !1);
        },
        MFA_WEBAUTHN_CREDENTIALS_LOADING: () => ((i = !0), !0),
        MFA_WEBAUTHN_CREDENTIALS_LOADED: e => ((r = e.credentials), !0),
        AUTHENTICATOR_CREATE(e) {
          let { credential: t } = e;
          t.type === l.AuthenticatorType.WEBAUTHN &&
            void 0 === r.find(e => e.id === t.id) &&
            (r = [...r, t]);
        },
        AUTHENTICATOR_UPDATE(e) {
          let { credential: t } = e;
          t.type === l.AuthenticatorType.WEBAUTHN &&
            (r = r.map(e => (e.id === t.id ? t : e)));
        },
        AUTHENTICATOR_DELETE(e) {
          let { credential: t } = e;
          t.type === l.AuthenticatorType.WEBAUTHN &&
            (r = r.filter(e => e.id !== t.id));
        },
      });
    },
    685223: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return O;
          },
        }),
        s("222007"),
        s("506083");
      var a = s("37983"),
        n = s("884691"),
        l = s("376507"),
        i = s("446674"),
        r = s("77078"),
        o = s("272030"),
        d = s("803163"),
        u = s("476765"),
        c = s("663745"),
        S = s("11056"),
        E = s("222038"),
        T = s("773336"),
        f = s("286235"),
        _ = s("50885"),
        m = s("425922"),
        g = s("52408"),
        h = s("426353"),
        N = s("49111"),
        I = s("782340"),
        p = s("562936");
      function C(e) {
        let { transitionState: t, onClose: i, ticket: o, challenge: c } = e,
          S = (0, u.useUID)(),
          [E, g] = n.useState(""),
          [C, A] = n.useState(!0),
          [O, x] = n.useState(h.WebAuthnScreens.INIT),
          [M, R] = n.useState(""),
          [D, v] = n.useState(null),
          L = async () => {
            let e;
            x(h.WebAuthnScreens.REGISTER);
            let t =
              T.isPlatformEmbedded &&
              _.default.supportsFeature(N.NativeFeatures.WEBAUTHN)
                ? _.default.webAuthnRegister(c)
                : l.create(JSON.parse(c)).then(e => JSON.stringify(e));
            try {
              e = await t;
            } catch (e) {
              f.default.captureException(e),
                v(I.default.Messages.MFA_V2_WEBAUTHN_GENERIC_ERROR),
                x(h.WebAuthnScreens.INIT);
              return;
            }
            R(e), x(h.WebAuthnScreens.NAME);
          };
        return (0, a.jsxs)(r.ModalRoot, {
          transitionState: t,
          "aria-labelledby": S,
          children: [
            (0, a.jsxs)(r.ModalHeader, {
              className: p.header,
              separator: !1,
              children: [
                (0, a.jsxs)(r.Heading, {
                  id: S,
                  variant: "heading-lg/semibold",
                  children: [
                    O === h.WebAuthnScreens.INIT &&
                      I.default.Messages.TWO_FA_WEBAUTHN_REGISTER,
                    O === h.WebAuthnScreens.REGISTER &&
                      I.default.Messages.TWO_FA_WEBAUTHN_INTERACT,
                    O === h.WebAuthnScreens.NAME &&
                      I.default.Messages.TWO_FA_WEBAUTHN_NAME,
                  ],
                }),
                (0, a.jsx)(r.ModalCloseButton, {
                  onClick: i,
                  className: p.modalCloseButton,
                }),
              ],
            }),
            (0, a.jsxs)(r.Slides, {
              activeSlide: O,
              width: 440,
              children: [
                (0, a.jsxs)(r.Slide, {
                  id: h.WebAuthnScreens.INIT,
                  children: [
                    (0, a.jsxs)(r.ModalContent, {
                      className: p.content,
                      children: [
                        (0, a.jsx)("div", {
                          className: p.icon,
                          children: (0, a.jsx)("img", {
                            alt: "",
                            src: s("473604"),
                          }),
                        }),
                        (0, a.jsx)("div", {
                          children:
                            null != D &&
                            (0, a.jsx)(r.Text, {
                              variant: "text-md/normal",
                              color: "status-danger",
                              children: D,
                            }),
                        }),
                        (0, a.jsx)("div", {
                          children: (0, a.jsx)(r.Text, {
                            variant: "text-md/normal",
                            children:
                              I.default.Messages
                                .TWO_FA_WEBAUTHN_REGISTER_INSTRUCTIONS,
                          }),
                        }),
                      ],
                    }),
                    (0, a.jsx)(r.ModalFooter, {
                      children: (0, a.jsx)(r.Button, {
                        onClick: L,
                        children:
                          I.default.Messages.TWO_FA_WEBAUTHN_REGISTER_CONFIRM,
                      }),
                    }),
                  ],
                }),
                (0, a.jsxs)(r.Slide, {
                  id: h.WebAuthnScreens.REGISTER,
                  children: [
                    (0, a.jsxs)(r.ModalContent, {
                      className: p.content,
                      children: [
                        (0, a.jsx)("div", {
                          className: p.icon,
                          children: (0, a.jsx)("img", {
                            alt: "",
                            src: s("473604"),
                          }),
                        }),
                        (0, a.jsx)("div", {
                          children: (0, a.jsx)(r.Text, {
                            variant: "text-md/normal",
                            children:
                              I.default.Messages
                                .TWO_FA_WEBAUTHN_INTERACT_INSTRUCTIONS,
                          }),
                        }),
                      ],
                    }),
                    (0, a.jsx)(r.ModalFooter, {
                      children: (0, a.jsx)(r.Button, { submitting: !0 }),
                    }),
                  ],
                }),
                (0, a.jsx)(r.Slide, {
                  id: h.WebAuthnScreens.NAME,
                  children: (0, a.jsxs)("form", {
                    onSubmit: e => {
                      e.preventDefault(),
                        (0, m.finishRegisterWebAuthnCredential)(E, o, M)
                          .then(async () => {
                            await (0, d.showMFASuccessModal)(!1);
                          })
                          .then(() => i())
                          .catch(() => {
                            v(I.default.Messages.ERROR_OCCURRED_TRY_AGAIN),
                              x(h.WebAuthnScreens.INIT);
                          });
                    },
                    children: [
                      (0, a.jsxs)(r.ModalContent, {
                        className: p.content,
                        children: [
                          (0, a.jsx)("div", {
                            className: p.icon,
                            children: (0, a.jsx)("img", {
                              alt: "",
                              src: s("47919"),
                            }),
                          }),
                          (0, a.jsxs)("div", {
                            children: [
                              (0, a.jsx)(r.Text, {
                                variant: "text-md/normal",
                                children:
                                  I.default.Messages
                                    .TWO_FA_WEBAUTHN_NAME_INSTRUCTIONS,
                              }),
                              (0, a.jsx)(r.TextInput, {
                                className: p.input,
                                value: E,
                                onChange: e => {
                                  g(e), A(0 === e.length);
                                },
                                autoFocus: !0,
                                minLength: 1,
                              }),
                            ],
                          }),
                        ],
                      }),
                      (0, a.jsxs)(r.ModalFooter, {
                        className: p.footer,
                        children: [
                          (0, a.jsx)(r.Button, {
                            type: "submit",
                            disabled: C,
                            children:
                              I.default.Messages
                                .TWO_FA_WEBAUTHN_REGISTER_FINISH,
                          }),
                          (0, a.jsx)(r.Button, {
                            look: r.Button.Looks.LINK,
                            color: r.Button.Colors.PRIMARY,
                            onClick: () => {
                              x(h.WebAuthnScreens.INIT);
                            },
                            children: I.default.Messages.BACK,
                          }),
                        ],
                      }),
                    ],
                  }),
                }),
              ],
            }),
          ],
        });
      }
      function A(e) {
        let { onSelect: t, credential: n } = e;
        return (0, a.jsxs)(r.Menu, {
          navId: "webauthn-credential-actions",
          onClose: o.closeContextMenu,
          "aria-label": I.default.Messages.TWO_FA_WEBAUTHN_CREDENTIAL_OPTIONS,
          onSelect: t,
          children: [
            (0, a.jsx)(r.MenuItem, {
              id: "webauthn-edit-credential-".concat(n.id),
              label: I.default.Messages.EDIT,
              action: () => {
                (0, r.openModalLazy)(async () => {
                  let { default: e } = await s
                    .el("629759")
                    .then(s.bind(s, "629759"));
                  return t => (0, a.jsx)(e, { credential: n, ...t });
                });
              },
            }),
            (0, a.jsx)(r.MenuItem, {
              id: "webauthn-delete-credential-".concat(n.id),
              label: I.default.Messages.TWO_FA_WEBAUTHN_DELETE_CREDENTIAL,
              color: "danger",
              action: () => {
                (0, m.deleteWebAuthnCredential)(n);
              },
            }),
          ],
        });
      }
      function O() {
        let { credentials: e, hasFetchedCredentials: t } = (0,
        i.useStateFromStoresObject)([g.default], () => ({
          hasFetchedCredentials: g.default.hasFetchedCredentials(),
          credentials: g.default.getCredentials(),
        }));
        n.useEffect(() => {
          !t && (0, m.fetchWebAuthnCredentials)();
        }, [t]);
        let [s, l] = n.useState(!1);
        return (0, a.jsxs)(r.FormSection, {
          title: I.default.Messages.TWO_FA_WEBAUTHN_TITLE,
          className: p.settings,
          children: [
            (0, a.jsx)(r.FormText, {
              type: r.FormText.Types.DESCRIPTION,
              className: p.description,
              children: I.default.Messages.TWO_FA_WEBAUTHN_DESCRIPTION,
            }),
            e.length > 0 &&
              (0, a.jsx)("div", {
                className: p.credentialList,
                children: e.map(e =>
                  (0, a.jsx)(
                    S.default,
                    {
                      avatar: null,
                      name: e.name,
                      className: p.credentialItem,
                      onContextMenu: t => {
                        (0, o.openContextMenu)(t, t =>
                          (0, a.jsx)(A, { ...t, credential: e })
                        );
                      },
                      children: (0, a.jsx)(r.Button, {
                        look: r.Button.Looks.BLANK,
                        color: r.Button.Colors.TRANSPARENT,
                        size: r.Button.Sizes.ICON,
                        onClick: t => {
                          (0, o.openContextMenu)(t, t =>
                            (0, a.jsx)(A, { ...t, credential: e })
                          );
                        },
                        "aria-label":
                          I.default.Messages.TWO_FA_WEBAUTHN_CREDENTIAL_OPTIONS,
                        innerClassName: p.credentialOptions,
                        children: (0, a.jsx)(c.default, {
                          className: p.overflowIcon,
                          foreground: p.overflowIconFg,
                          "aria-hidden": !0,
                        }),
                      }),
                    },
                    e.id
                  )
                ),
              }),
            (0, a.jsx)("div", {
              children: (0, a.jsx)(r.Button, {
                onClick: () => {
                  l(!0),
                    (0, m.startRegisterWebAuthnCredential)()
                      .then(e => {
                        let { ticket: t, challenge: s } = e;
                        (0, r.openModal)(e =>
                          (0, a.jsx)(C, { ...e, ticket: t, challenge: s })
                        );
                      })
                      .catch(e => {
                        e.message !== I.default.Messages.MFA_V2_CANCELED &&
                          f.default.captureException(e);
                      })
                      .finally(() => {
                        l(!1);
                      });
                },
                submitting: s,
                disabled: !E.hasWebAuthn,
                size: r.Button.Sizes.SMALL,
                children: I.default.Messages.TWO_FA_WEBAUTHN_REGISTER,
              }),
            }),
          ],
        });
      }
    },
    650893: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return f;
          },
        });
      var a = s("917351"),
        n = s.n(a),
        l = s("171718"),
        i = s("446674"),
        r = s("913144");
      let o = !1,
        d = [],
        u = "",
        c = "",
        S = !1,
        E = { viewNonce: "", regenerateNonce: "" };
      class T extends i.default.Store {
        getVerificationKey() {
          return u;
        }
        getBackupCodes() {
          return d;
        }
        get togglingSMS() {
          return o;
        }
        getNonces() {
          return E;
        }
        get emailToken() {
          return c;
        }
        get hasSeenBackupPrompt() {
          return S;
        }
      }
      T.displayName = "MFAStore";
      var f = new T(r.default, {
        MFA_ENABLE_SUCCESS: function (e) {
          let { token: t, codes: s } = e;
          void 0 !== t && l.default.setToken(t), (d = s);
        },
        MFA_ENABLE_EMAIL_TOKEN: function (e) {
          let { token: t } = e;
          c = t;
        },
        MFA_DISABLE_SUCCESS: function (e) {
          let { token: t } = e;
          l.default.setToken(t);
        },
        MFA_SMS_TOGGLE: function () {
          o = !0;
        },
        MFA_SMS_TOGGLE_COMPLETE: function () {
          o = !1;
        },
        MFA_CLEAR_BACKUP_CODES: function () {
          d = [];
        },
        MFA_VIEW_BACKUP_CODES: function (e) {
          let { codes: t, key: s } = e;
          (d = n.sortBy(t, "code")), (u = s);
        },
        MFA_SEND_VERIFICATION_KEY: function (e) {
          let { nonces: t } = e;
          E = t;
        },
        MFA_SEEN_BACKUP_CODE_PROMPT: function () {
          S = !0;
        },
      });
    },
    233976: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return u;
          },
        });
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("145131"),
        o = s("409570");
      class d extends n.PureComponent {
        render() {
          let {
            children: e,
            className: t,
            onMouseEnter: s,
            onMouseLeave: n,
          } = this.props;
          return (0, a.jsx)("div", {
            className: i(o.card, t),
            onMouseEnter: s,
            onMouseLeave: n,
            children: e,
          });
        }
      }
      (d.Header = e => {
        let { children: t, className: s, splashArtURL: n } = e;
        return (0, a.jsxs)(r.default, {
          className: i(o.header, s),
          align: r.default.Align.CENTER,
          children: [
            (0, a.jsx)("div", {
              className: o.splashArt,
              style:
                null != n ? { backgroundImage: "url(".concat(n, ")") } : void 0,
            }),
            t,
          ],
        });
      }),
        (d.Body = e => {
          let { children: t, className: s } = e;
          return (0, a.jsx)("div", { className: i(o.body, s), children: t });
        });
      var u = d;
    },
    3958: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          RecordModes: function () {
            return a;
          },
          default: function () {
            return N;
          },
        }),
        s("222007");
      var a,
        n,
        l = s("37983"),
        i = s("884691"),
        r = s("414456"),
        o = s.n(r),
        d = s("800648"),
        u = s.n(d),
        c = s("917351"),
        S = s.n(c),
        E = s("77078"),
        T = s("13798"),
        f = s("145131"),
        _ = s("782340"),
        m = s("363172");
      ((n = a || (a = {})).DEFAULT = "DEFAULT"), (n.RECORDING = "RECORDING");
      let g = { DEFAULT: m.default, RECORDING: m.recording };
      class h extends i.PureComponent {
        componentWillUnmount() {
          null != this._unregisterNativeRecorder &&
            this._unregisterNativeRecorder();
        }
        componentDidUpdate(e) {
          let { mode: t } = this.props,
            { mode: s } = e;
          if (s === t) return;
          let { _inputRef: a } = this;
          if (null == a.current) return;
          let { activeElement: n } = document;
          "DEFAULT" === t && a.current === n && a.current.blur(),
            "RECORDING" === t && a.current !== n && a.current.focus();
        }
        render() {
          let e;
          let { mode: t, value: s, disabled: a } = this.props,
            n = (0, T.toString)(s, !0);
          e =
            "RECORDING" === t
              ? _.default.Messages.SHORTCUT_RECORDER_BUTTON_RECORDING
              : 0 === s.length
                ? _.default.Messages.SHORTCUT_RECORDER_BUTTON
                : _.default.Messages.SHORTCUT_RECORDER_BUTTON_EDIT;
          let i = "DEFAULT" === t && s.length > 0;
          return (0, l.jsx)(E.FocusRing, {
            focusTarget: this._inputRef,
            ringTarget: this._containerRef,
            children: (0, l.jsx)("div", {
              onClick: this.handleClick,
              onMouseDown: this.handleMouseDown,
              ref: this._containerRef,
              className: o(m.container, g[t], {
                [m.hasValue]: i,
                [m.disabled]: a,
              }),
              children: (0, l.jsxs)(f.default, {
                className: m.layout,
                children: [
                  (0, l.jsx)(f.default.Child, {
                    className: m.input,
                    children: (0, l.jsx)("input", {
                      id: this._inputId,
                      placeholder: _.default.Messages.SHORTCUT_RECORDER_NO_BIND,
                      type: "text",
                      ref: this.setInputRef,
                      readOnly: !0,
                      value: n,
                      disabled: "RECORDING" !== this.props.mode || a,
                    }),
                  }),
                  (0, l.jsx)(f.default, {
                    shrink: 1,
                    grow: 0,
                    style: { margin: 0 },
                    children: (0, l.jsxs)(E.Button, {
                      className: m.button,
                      disabled: a,
                      onClick: e => {
                        e.stopPropagation(),
                          e.preventDefault(),
                          this.handleClick(e);
                      },
                      size: E.Button.Sizes.MIN,
                      color: E.ButtonColors.PRIMARY,
                      children: [
                        (0, l.jsx)("span", { className: m.text, children: e }),
                        (0, l.jsx)("span", { className: m.editIcon }),
                      ],
                    }),
                  }),
                ],
              }),
            }),
          });
        }
        constructor(...e) {
          super(...e),
            (this._inputId = S.uniqueId("key-recorder-")),
            (this._unregisterNativeRecorder = null),
            (this._mousedownMode = null),
            (this._inputRef = i.createRef()),
            (this._containerRef = i.createRef()),
            (this.setInputRef = e => {
              var t;
              let { registerNativeRecorder: s, onChange: a } = this.props;
              if (
                ((this._inputRef.current = e),
                null === (t = this._unregisterNativeRecorder) ||
                  void 0 === t ||
                  t.call(this),
                null != e)
              ) {
                if (null != s && null != a)
                  this._unregisterNativeRecorder = s(e.id, a);
                else if (null != a) {
                  let t = new u(e);
                  t.handleKey = a;
                }
              }
            }),
            (this.handleClick = e => {
              e.stopPropagation(), e.preventDefault();
              let { onClick: t, disableOnClickWhileRecording: s } = this.props;
              (!s || "RECORDING" !== this._mousedownMode) && t();
            }),
            (this.handleMouseDown = () => {
              this._mousedownMode = this.props.mode;
            });
        }
      }
      var N = h;
    },
    876269: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return r;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("77078"),
        l = s("837899"),
        i = s("621153"),
        r = e => {
          let { label: t, onClick: s, submitting: r } = e;
          return (0, a.jsx)(n.Clickable, {
            onClick: r ? void 0 : s,
            className: i.button,
            children: (0, a.jsxs)("div", {
              className: i.contentContainer,
              children: [
                r
                  ? (0, a.jsx)(n.Spinner, {
                      type: n.Spinner.Type.PULSING_ELLIPSIS,
                      className: i.spinner,
                    })
                  : (0, a.jsx)(n.Text, {
                      variant: "text-md/medium",
                      className: i.label,
                      children: t,
                    }),
                (0, a.jsx)(l.default, { className: i.arrow }),
              ],
            }),
          });
        };
    },
    762740: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return r;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("469563"),
        l = s("491589"),
        i = s("75196"),
        r = (0, n.replaceIcon)(
          function (e) {
            let {
              width: t = 16,
              height: s = 16,
              color: n = "currentColor",
              className: l,
              foreground: r,
              ...o
            } = e;
            return (0, a.jsx)("svg", {
              className: l,
              width: t,
              height: s,
              viewBox: "0 0 16 16",
              ...(0, i.default)(o),
              children: (0, a.jsxs)("g", {
                fill: "none",
                fillRule: "evenodd",
                children: [
                  (0, a.jsx)("path", {
                    className: r,
                    fill: n,
                    d: "M0,1.99406028 C0,0.892771196 0.894513756,0 1.99406028,0 L14.0059397,0 C15.1072288,0 16,0.894513756 16,1.99406028 L16,14.0059397 C16,15.1072288 15.1054862,16 14.0059397,16 L1.99406028,16 C0.892771196,16 0,15.1054862 0,14.0059397 L0,1.99406028 Z M8.23182341,16 L10.3991764,16 L10.3991764,9.93141161 L12.5663127,9.93141161 L13,7.76405862 L10.3991764,7.76405862 L10.3246195,6.3468265 C10.3246195,5.66107601 10.5049432,5.17342158 11.4698488,5.17342158 L12.974642,5.17385505 L12.974642,3.12202197 C12.7618079,3.09319618 12.3142495,3 11.4644304,3 C9.69001851,3 8.18500859,4.20353112 8.18500859,6.23043964 L8.23182341,7.76405862 L6.06425368,7.76405862 L6.06425368,9.93141161 L8.23182341,9.93141161 L8.23182341,16 Z",
                  }),
                  (0, a.jsx)("rect", { width: "16", height: "16" }),
                ],
              }),
            });
          },
          l.FacebookIcon,
          void 0,
          { size: 16 }
        );
    },
    369952: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return r;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("469563"),
        l = s("887560"),
        i = s("75196"),
        r = (0, n.replaceIcon)(
          function (e) {
            let {
              width: t = 16,
              height: s = 16,
              color: n = "currentColor",
              className: l,
              foreground: r,
              ...o
            } = e;
            return (0, a.jsx)("svg", {
              className: l,
              xmlns: "http://www.w3.org/2000/svg",
              width: t,
              height: s,
              viewBox: "0 0 16 16",
              ...(0, i.default)(o),
              children: (0, a.jsxs)("g", {
                fill: "none",
                fillRule: "evenodd",
                children: [
                  (0, a.jsx)("path", {
                    className: r,
                    fill: n,
                    d: "M4.70012698,0.0531746 C3.84888888,0.092 3.2675238,0.22720635 2.7588254,0.42492063 C2.23292063,0.62926983 1.78692063,0.90273016 1.3422857,1.34733333 C0.89768254,1.79196825 0.62422222,2.23796825 0.41987302,2.76387303 C0.22215872,3.27257143 0.08695238,3.85393651 0.04812698,4.7051746 C0.00920635,5.55819048 0,5.83053968 0,8.00253968 C0,10.1745079 0.00920635,10.4468571 0.04812698,11.299873 C0.08695238,12.1511111 0.22215873,12.7324762 0.41987302,13.2411746 C0.62422222,13.7670794 0.89768254,14.2130794 1.34228572,14.6577143 C1.78692062,15.1023175 2.23292062,15.3757778 2.7588254,15.5801587 C3.2675238,15.7778413 3.8488889,15.9130476 4.70012698,15.951873 C5.55314286,15.9907937 5.82549206,16 7.99749206,16 C10.1694603,16 10.4418095,15.9907937 11.2948254,15.951873 C12.1460635,15.9130476 12.7274286,15.7778413 13.236127,15.5801587 C13.7620317,15.3757778 14.2080317,15.1023175 14.6526667,14.6577143 C15.0972698,14.2130794 15.3707302,13.7670794 15.5751111,13.2411746 C15.7727937,12.7324762 15.908,12.1511111 15.9468254,11.299873 C15.985746,10.4468571 15.9949524,10.1745079 15.9949524,8.00253968 C15.9949524,5.83053968 15.985746,5.55819048 15.9468254,4.7051746 C15.908,3.8539365 15.7727937,3.27257143 15.5751111,2.76387302 C15.3707302,2.23796825 15.0972698,1.79196825 14.6526667,1.34733332 C14.2080317,0.90273016 13.7620317,0.62926984 13.236127,0.42492064 C12.7274286,0.22720634 12.1460635,0.092 11.2948254,0.0531746 C10.4418095,0.01425397 10.1694603,0.00504762 7.99749206,0.00504762 C5.82549206,0.00504762 5.55314286,0.01425397 4.70012698,0.0531746 L4.70012698,0.0531746 Z M8.00001453,2.00504762 C9.95416635,2.00504762 10.185649,2.01251386 10.9573741,2.04772432 C11.6709381,2.08026206 12.0584565,2.19948958 12.3163471,2.29971739 C12.6579641,2.43248289 12.9017646,2.59107525 13.157854,2.84719363 C13.4139723,3.10328295 13.5725647,3.34708347 13.7053302,3.68870053 C13.805558,3.94659105 13.9247856,4.33410953 13.9573233,5.04767346 C13.9925338,5.8193986 14,6.05088127 14,8.00506213 C14,9.95921396 13.9925338,10.1906966 13.9573233,10.9624217 C13.9247856,11.6759857 13.805558,12.0635042 13.7053302,12.3213947 C13.5725647,12.6630117 13.4139723,12.9068123 13.157854,13.1629016 C12.9017646,13.41902 12.6579641,13.5776123 12.3163471,13.7103779 C12.0584565,13.8106057 11.6709381,13.9298332 10.9573741,13.9623709 C10.1857652,13.9975814 9.9543116,14.0050476 8.00001453,14.0050476 C6.04568839,14.0050476 5.81426383,13.9975814 5.04262587,13.9623709 C4.32906195,13.9298332 3.94154347,13.8106057 3.68365294,13.7103779 C3.34203588,13.5776123 3.09823536,13.41902 2.84214604,13.1629016 C2.58605671,12.9068123 2.42743531,12.6630117 2.29466977,12.3213947 C2.19444197,12.0635042 2.07521444,11.6759857 2.04267671,10.9624217 C2.00746628,10.1906966 2,9.95921395 2,8.00506212 C2,6.05088125 2.00746625,5.81939858 2.0426767,5.04767347 C2.07521444,4.33410953 2.19444196,3.94659104 2.29466977,3.68870052 C2.42743531,3.34708346 2.58602767,3.10328294 2.84214604,2.84719362 C3.09823536,2.59107524 3.34203588,2.43248288 3.68365294,2.29971735 C3.94154346,2.19948953 4.32906194,2.08026201 5.04262587,2.04772428 C5.81435097,2.01251381 6.04583365,2.00504758 8.00001453,2.00504758 L8.00001453,2.00504762 Z",
                  }),
                  (0, a.jsx)("path", {
                    className: r,
                    fill: n,
                    d: "M8.0000119,10 C6.89542535,10 6,9.10457466 6,8.0000119 C6,6.89542535 6.89542534,6 8.0000119,6 C9.10457467,6 10,6.89542534 10,8.0000119 C10,9.10457467 9.10457466,10 8.0000119,10 L8.0000119,10 Z M8.00001546,4 C5.7908468,4 4,5.7908468 4,8.00001546 C4,10.2091532 5.7908468,12 8.00001546,12 C10.2091532,12 12,10.2091532 12,8.00001546 C12,5.7908468 10.2091532,4 8.00001546,4 L8.00001546,4 Z M13,4.00001654 C13,4.55230644 12.5522734,5 11.9999835,5 C11.4477266,5 11,4.55230645 11,4.00001654 C11,3.44772664 11.4477266,3 11.9999835,3 C12.5522734,3 13,3.44772663 13,4.00001654 L13,4.00001654 Z",
                  }),
                  (0, a.jsx)("rect", { width: "16", height: "16" }),
                ],
              }),
            });
          },
          l.InstagramIcon,
          void 0,
          { size: 16 }
        );
    },
    198911: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return l;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("75196"),
        l = e => {
          let {
            width: t = 24,
            height: s = 24,
            color: l = "currentColor",
            className: i,
            foreground: r,
            ...o
          } = e;
          return (0, a.jsx)("svg", {
            width: t,
            height: s,
            viewBox: "0 0 24 24",
            className: i,
            ...(0, n.default)(o),
            children: (0, a.jsx)("path", {
              className: r,
              fill: l,
              d: "M17.836 6.009A4.794 4.794 0 0 1 15.658 2h-3.439l-.005 13.78a2.892 2.892 0 0 1-2.885 2.782 2.893 2.893 0 0 1-2.89-2.89 2.894 2.894 0 0 1 2.89-2.89c.298 0 .583.048.853.133v-3.51a6.308 6.308 0 0 0-.853-.062A6.336 6.336 0 0 0 3 15.672a6.324 6.324 0 0 0 2.702 5.181A6.29 6.29 0 0 0 9.329 22a6.336 6.336 0 0 0 6.329-6.329V8.683c1.348.968 3 1.539 4.784 1.539V6.783c-.96 0-1.855-.285-2.605-.775v.001Z",
            }),
          });
        };
    },
    578521: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return l;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("75196"),
        l = e => {
          let {
            width: t = 24,
            height: s = 24,
            color: l = "currentColor",
            className: i,
            foreground: r,
            ...o
          } = e;
          return (0, a.jsx)("svg", {
            width: t,
            height: s,
            viewBox: "0 0 24 24",
            className: i,
            ...(0, n.default)(o),
            children: (0, a.jsx)("path", {
              fillRule: "evenodd",
              clipRule: "evenodd",
              d: "M21.3766 4.10479C22.4093 4.38257 23.2225 5.20102 23.4985 6.24038C24 8.12411 24 12.0545 24 12.0545C24 12.0545 24 15.9848 23.4985 17.8688C23.2225 18.908 22.4093 19.7265 21.3766 20.0044C19.505 20.5091 12 20.5091 12 20.5091C12 20.5091 4.49496 20.5091 2.62336 20.0044C1.59082 19.7265 0.777545 18.908 0.501545 17.8688C0 15.9848 0 12.0545 0 12.0545C0 12.0545 0 8.12411 0.501545 6.24038C0.777545 5.20102 1.59082 4.38257 2.62336 4.10479C4.49496 3.59998 12 3.59998 12 3.59998C12 3.59998 19.505 3.59998 21.3766 4.10479ZM15.8182 12.0546L9.54551 15.623V8.48596L15.8182 12.0546Z",
              fill: l,
              className: r,
            }),
          });
        };
    },
    314892: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return g;
          },
        }),
        s("222007");
      var a = s("37983"),
        n = s("884691"),
        l = s("414456"),
        i = s.n(l),
        r = s("77078"),
        o = s("468759"),
        d = s("49111"),
        u = s("782340"),
        c = s("299867"),
        S = s("890957");
      let E = 0,
        T = () => "notification-position-selector-".concat(E++),
        f = e => {
          switch (e) {
            case d.OverlayNotificationPositions.TOP_LEFT:
              return u.default.Messages.OVERLAY_NOTIFICATIONS_TOP_LEFT;
            case d.OverlayNotificationPositions.TOP_RIGHT:
              return u.default.Messages.OVERLAY_NOTIFICATIONS_TOP_RIGHT;
            case d.OverlayNotificationPositions.BOTTOM_LEFT:
              return u.default.Messages.OVERLAY_NOTIFICATIONS_BOTTOM_LEFT;
            case d.OverlayNotificationPositions.BOTTOM_RIGHT:
              return u.default.Messages.OVERLAY_NOTIFICATIONS_BOTTOM_RIGHT;
            default:
              return u.default.Messages.OVERLAY_NOTIFICATIONS_DISABLED;
          }
        },
        _ = [
          d.OverlayNotificationPositions.DISABLED,
          d.OverlayNotificationPositions.TOP_LEFT,
          d.OverlayNotificationPositions.TOP_RIGHT,
          d.OverlayNotificationPositions.BOTTOM_LEFT,
          d.OverlayNotificationPositions.BOTTOM_RIGHT,
        ];
      function m(e) {
        let { position: t, onChange: s } = e,
          [l] = n.useState(() => T()),
          E =
            t === d.OverlayNotificationPositions.DISABLED
              ? u.default.Messages.OVERLAY_NOTIFICATION_SETTINGS_DISABLED
              : u.default.Messages.OVERLAY_NOTIFICATION_SETTINGS_POSITION.format(
                  { position: f(t) }
                );
        return (0, a.jsxs)("div", {
          children: [
            (0, a.jsx)(r.FocusRing, {
              within: !0,
              offset: -2,
              children: (0, a.jsx)("div", {
                className: i(c.wrapper, {
                  [c.disabledSelected]:
                    t === d.OverlayNotificationPositions.DISABLED,
                }),
                children: _.map(e =>
                  (0, a.jsxs)(
                    "label",
                    {
                      className: i({
                        [c.selected]: e === t,
                        [c.disabled]:
                          e === d.OverlayNotificationPositions.DISABLED,
                        [c.topRight]:
                          e === d.OverlayNotificationPositions.TOP_RIGHT,
                        [c.topLeft]:
                          e === d.OverlayNotificationPositions.TOP_LEFT,
                        [c.bottomRight]:
                          e === d.OverlayNotificationPositions.BOTTOM_RIGHT,
                        [c.bottomLeft]:
                          e === d.OverlayNotificationPositions.BOTTOM_LEFT,
                      }),
                      children: [
                        f(e),
                        e === d.OverlayNotificationPositions.DISABLED
                          ? (0, a.jsx)(o.default, { className: c.disabledIcon })
                          : null,
                        (0, a.jsx)("input", {
                          type: "radio",
                          name: l,
                          value: e,
                          onChange: t => s(t, e),
                          className: c.hiddenInput,
                        }),
                      ],
                    },
                    e
                  )
                ),
              }),
            }),
            (0, a.jsx)(r.FormText, {
              type: r.FormTextTypes.DESCRIPTION,
              className: S.marginTop8,
              children: E,
            }),
          ],
        });
      }
      m.Positions = d.OverlayNotificationPositions;
      var g = m;
    },
    417809: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          formatExpiration: function () {
            return n;
          },
        }),
        s("781738"),
        s("424973");
      let a = /[^0-9/]/g;
      function n(e) {
        let t = e.replace(a, "").split("/"),
          s = t[0],
          n = t[1],
          l = [];
        return (
          parseInt(s, 10) > 12 && (s = s.substring(0, 1)),
          l.push(s),
          (parseInt(s, 10) > 1 || 2 === s.length || (null != n && "" !== n)) &&
            l.push("/"),
          null != n &&
            "" !== n &&
            parseInt(n, 10) > 99 &&
            (n = (n + "").substring(0, 2)),
          l.push(n),
          l.join("")
        );
      }
    },
    575209: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          getCurrencyFullName: function () {
            return n;
          },
        });
      var a = s("782340");
      function n(e) {
        switch (e) {
          case "brl":
            return a.default.Messages.BRL_NAME;
          case "pln":
            return a.default.Messages.PLN_NAME;
          case "try":
            return a.default.Messages.TRY_NAME;
          case "usd":
            return a.default.Messages.USD_NAME;
          case "aud":
            return a.default.Messages.AUD_NAME;
          case "pen":
            return a.default.Messages.PEN_NAME;
          case "php":
            return a.default.Messages.PHP_NAME;
          case "ars":
            return a.default.Messages.ARS_NAME;
          case "cop":
            return a.default.Messages.COP_NAME;
          case "clr":
            return a.default.Messages.CLR_NAME;
          case "jpy":
            return a.default.Messages.JPY_NAME;
          case "idr":
            return a.default.Messages.IDR_NAME;
          case "vnd":
            return a.default.Messages.VND_NAME;
          case "thb":
            return a.default.Messages.THB_NAME;
          case "myr":
            return a.default.Messages.MYR_NAME;
          case "krw":
            return a.default.Messages.KRW_NAME;
          case "mxn":
            return a.default.Messages.MXN_NAME;
          case "bgn":
            return a.default.Messages.BGN_NAME;
          case "czk":
            return a.default.Messages.CZK_NAME;
          case "dkk":
            return a.default.Messages.DKK_NAME;
          case "huf":
            return a.default.Messages.HUF_NAME;
          case "ron":
            return a.default.Messages.RON_NAME;
          case "sek":
            return a.default.Messages.SEK_NAME;
          case "eur":
            return a.default.Messages.EUR_NAME;
          default:
            return "";
        }
      }
    },
    843039: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          default: function () {
            return d;
          },
        }),
        s("222007");
      var a = s("917351"),
        n = s.n(a),
        l = s("211470"),
        i = s("760190"),
        r = s("565034");
      function o(e) {
        for (let t of e) {
          let e = i.default.getEligibleExperiment(t);
          if (null != e) return [t, e];
        }
        return null;
      }
      var d = {
        getFirstEligibleUserExperiment: o,
        isInExperimentBucket: function (e, t) {
          let s = i.default.getExperimentBucket(e);
          return s === t;
        },
        experimentDescriptorEquals: function (e, t) {
          if ((null == e && null == t) || e === t) return !0;
          if ((null == e && null != t) || (null != e && null == t)) return !1;
          if (null != e && null != t) {
            if (
              e.type !== t.type ||
              e.bucket !== t.bucket ||
              e.revision !== t.revision
            )
              return !1;
            if (
              e.type === r.ExperimentTypes.USER &&
              t.type === r.ExperimentTypes.USER
            )
              return n.isEqual(e.context, t.context);
          }
          return !0;
        },
        trackExposureToFirstEligibleUserExperiment: function (e) {
          let t = o(e);
          if (null != t) {
            let [e, s] = t;
            return (0, l.trackExposureToExperiment)(e, s), s;
          }
        },
        getExperimentBucketName: function (e) {
          let t;
          return (t =
            e === r.ExperimentBuckets.CONTROL
              ? "Control"
              : e === r.ExperimentBuckets.NOT_ELIGIBLE
                ? "Not Eligible"
                : "Treatment ".concat(e));
        },
      };
    },
    259051: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          getRandomHouse: function () {
            return r;
          },
          getQuestions: function () {
            return S;
          },
          getHouseNameFromHouseID: function () {
            return E;
          },
        }),
        s("424973");
      var a = s("627445"),
        n = s.n(a),
        l = s("49111"),
        i = s("782340");
      let r = () => {
          let e = Object.keys(l.HypeSquadHouses);
          return e[Math.floor(Math.random() * e.length)];
        },
        o = () => {
          let e = [];
          for (; e.length < 5; ) {
            let t = Math.floor(15 * Math.random());
            !e.includes(t) && e.push(t);
          }
          return e;
        },
        d = () => [
          i.default.Messages.HYPESQUAD_QUESTION_0_PROMPT,
          i.default.Messages.HYPESQUAD_QUESTION_1_PROMPT,
          i.default.Messages.HYPESQUAD_QUESTION_2_PROMPT,
          i.default.Messages.HYPESQUAD_QUESTION_3_PROMPT,
          i.default.Messages.HYPESQUAD_QUESTION_4_PROMPT,
          i.default.Messages.HYPESQUAD_QUESTION_5_PROMPT,
          i.default.Messages.HYPESQUAD_QUESTION_6_PROMPT,
          i.default.Messages.HYPESQUAD_QUESTION_7_PROMPT,
          i.default.Messages.HYPESQUAD_QUESTION_8_PROMPT,
          i.default.Messages.HYPESQUAD_QUESTION_9_PROMPT,
          i.default.Messages.HYPESQUAD_QUESTION_10_PROMPT,
          i.default.Messages.HYPESQUAD_QUESTION_11_PROMPT,
          i.default.Messages.HYPESQUAD_QUESTION_12_PROMPT,
          i.default.Messages.HYPESQUAD_QUESTION_13_PROMPT,
          i.default.Messages.HYPESQUAD_QUESTION_14_PROMPT,
        ],
        u = () => [
          [
            i.default.Messages.HYPESQUAD_QUESTION_0_RESPONSE_A,
            i.default.Messages.HYPESQUAD_QUESTION_0_RESPONSE_B,
            i.default.Messages.HYPESQUAD_QUESTION_0_RESPONSE_C,
            i.default.Messages.HYPESQUAD_QUESTION_0_RESPONSE_D,
          ],
          [
            i.default.Messages.HYPESQUAD_QUESTION_1_RESPONSE_A,
            i.default.Messages.HYPESQUAD_QUESTION_1_RESPONSE_B,
            i.default.Messages.HYPESQUAD_QUESTION_1_RESPONSE_C,
            i.default.Messages.HYPESQUAD_QUESTION_1_RESPONSE_D,
          ],
          [
            i.default.Messages.HYPESQUAD_QUESTION_2_RESPONSE_A,
            i.default.Messages.HYPESQUAD_QUESTION_2_RESPONSE_B,
            i.default.Messages.HYPESQUAD_QUESTION_2_RESPONSE_C,
            i.default.Messages.HYPESQUAD_QUESTION_2_RESPONSE_D,
          ],
          [
            i.default.Messages.HYPESQUAD_QUESTION_3_RESPONSE_A,
            i.default.Messages.HYPESQUAD_QUESTION_3_RESPONSE_B,
            i.default.Messages.HYPESQUAD_QUESTION_3_RESPONSE_C,
            i.default.Messages.HYPESQUAD_QUESTION_3_RESPONSE_D,
          ],
          [
            i.default.Messages.HYPESQUAD_QUESTION_4_RESPONSE_A,
            i.default.Messages.HYPESQUAD_QUESTION_4_RESPONSE_B,
            i.default.Messages.HYPESQUAD_QUESTION_4_RESPONSE_C,
            i.default.Messages.HYPESQUAD_QUESTION_4_RESPONSE_D,
          ],
          [
            i.default.Messages.HYPESQUAD_QUESTION_5_RESPONSE_A,
            i.default.Messages.HYPESQUAD_QUESTION_5_RESPONSE_B,
            i.default.Messages.HYPESQUAD_QUESTION_5_RESPONSE_C,
            i.default.Messages.HYPESQUAD_QUESTION_5_RESPONSE_D,
          ],
          [
            i.default.Messages.HYPESQUAD_QUESTION_6_RESPONSE_A,
            i.default.Messages.HYPESQUAD_QUESTION_6_RESPONSE_B,
            i.default.Messages.HYPESQUAD_QUESTION_6_RESPONSE_C,
            i.default.Messages.HYPESQUAD_QUESTION_6_RESPONSE_D,
          ],
          [
            i.default.Messages.HYPESQUAD_QUESTION_7_RESPONSE_A,
            i.default.Messages.HYPESQUAD_QUESTION_7_RESPONSE_B,
            i.default.Messages.HYPESQUAD_QUESTION_7_RESPONSE_C,
            i.default.Messages.HYPESQUAD_QUESTION_7_RESPONSE_D,
          ],
          [
            i.default.Messages.HYPESQUAD_QUESTION_8_RESPONSE_A,
            i.default.Messages.HYPESQUAD_QUESTION_8_RESPONSE_B,
            i.default.Messages.HYPESQUAD_QUESTION_8_RESPONSE_C,
            i.default.Messages.HYPESQUAD_QUESTION_8_RESPONSE_D,
          ],
          [
            i.default.Messages.HYPESQUAD_QUESTION_9_RESPONSE_A,
            i.default.Messages.HYPESQUAD_QUESTION_9_RESPONSE_B,
            i.default.Messages.HYPESQUAD_QUESTION_9_RESPONSE_C,
            i.default.Messages.HYPESQUAD_QUESTION_9_RESPONSE_D,
          ],
          [
            i.default.Messages.HYPESQUAD_QUESTION_10_RESPONSE_A,
            i.default.Messages.HYPESQUAD_QUESTION_10_RESPONSE_B,
            i.default.Messages.HYPESQUAD_QUESTION_10_RESPONSE_C,
            i.default.Messages.HYPESQUAD_QUESTION_10_RESPONSE_D,
          ],
          [
            i.default.Messages.HYPESQUAD_QUESTION_11_RESPONSE_A,
            i.default.Messages.HYPESQUAD_QUESTION_11_RESPONSE_B,
            i.default.Messages.HYPESQUAD_QUESTION_11_RESPONSE_C,
            i.default.Messages.HYPESQUAD_QUESTION_11_RESPONSE_D,
          ],
          [
            i.default.Messages.HYPESQUAD_QUESTION_12_RESPONSE_A,
            i.default.Messages.HYPESQUAD_QUESTION_12_RESPONSE_B,
            i.default.Messages.HYPESQUAD_QUESTION_12_RESPONSE_C,
            i.default.Messages.HYPESQUAD_QUESTION_12_RESPONSE_D,
          ],
          [
            i.default.Messages.HYPESQUAD_QUESTION_13_RESPONSE_A,
            i.default.Messages.HYPESQUAD_QUESTION_13_RESPONSE_B,
            i.default.Messages.HYPESQUAD_QUESTION_13_RESPONSE_C,
            i.default.Messages.HYPESQUAD_QUESTION_13_RESPONSE_D,
          ],
          [
            i.default.Messages.HYPESQUAD_QUESTION_14_RESPONSE_A,
            i.default.Messages.HYPESQUAD_QUESTION_14_RESPONSE_B,
            i.default.Messages.HYPESQUAD_QUESTION_14_RESPONSE_C,
            i.default.Messages.HYPESQUAD_QUESTION_14_RESPONSE_D,
          ],
        ],
        c = () => [
          l.HypeSquadHouses.HOUSE_1,
          l.HypeSquadHouses.HOUSE_2,
          l.HypeSquadHouses.HOUSE_3,
          l.RANDOM_HYPESQUAD_HOUSE,
        ],
        S = () => {
          let e = c(),
            t = d(),
            s = u(),
            a = o();
          return a.map(a => {
            let l = t[a],
              i = s[a];
            return (
              n(
                null != l && null != i,
                "Invalid HypeSquad quiz question index"
              ),
              {
                prompt: l,
                options: i.map((t, s) => {
                  let a = e[s];
                  return (
                    n(
                      null !== a,
                      "Invalid HypeSquad quiz question option index"
                    ),
                    { copy: t, house: a }
                  );
                }),
              }
            );
          });
        },
        E = e => {
          let t = {
            [l.HypeSquadHouses.HOUSE_1]: i.default.Messages.HYPESQUAD_HOUSE_1,
            [l.HypeSquadHouses.HOUSE_2]: i.default.Messages.HYPESQUAD_HOUSE_2,
            [l.HypeSquadHouses.HOUSE_3]: i.default.Messages.HYPESQUAD_HOUSE_3,
          };
          return t[e];
        };
    },
    222038: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          hasCrypto: function () {
            return d;
          },
          hasWebAuthn: function () {
            return u;
          },
          generateTotpSecret: function () {
            return c;
          },
          encodeTotpSecret: function () {
            return S;
          },
          encodeTotpSecretAsUrl: function () {
            return E;
          },
        }),
        s("311790"),
        s("477657"),
        s("811875"),
        s("90301"),
        s("652153"),
        s("28797"),
        s("817884"),
        s("597349"),
        s("667536"),
        s("690341"),
        s("781738");
      var a,
        n,
        l,
        i = s("584811");
      let r =
          null !==
            (l = null === (a = window) || void 0 === a ? void 0 : a.crypto) &&
          void 0 !== l
            ? l
            : null === (n = window) || void 0 === n
              ? void 0
              : n.msCrypto,
        o = "Uint8Array" in window,
        d = null != r && "getRandomValues" in r && o,
        u = "PublicKeyCredential" in window && o;
      function c() {
        var e;
        return (function (e) {
          let t = i.encode(e).toString("utf8").replace(/=/g, "");
          return t
            .toLowerCase()
            .replace(/(\w{4})/g, "$1 ")
            .trim();
        })(((e = 20), r.getRandomValues(new Uint8Array(20))));
      }
      function S(e) {
        return e.replace(/[\s._-]+/g, "").toUpperCase();
      }
      function E(e, t) {
        let s =
          arguments.length > 2 && void 0 !== arguments[2]
            ? arguments[2]
            : "Discord";
        return "otpauth://totp/"
          .concat(encodeURI(s), ":")
          .concat(encodeURI(e), "?secret=")
          .concat(S(t), "&issuer=")
          .concat(encodeURIComponent(s));
      }
    },
    241088: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          getSanitizedRestrictedGuilds: function () {
            return c;
          },
          getSanitizedMessageRequestRestrictedGuilds: function () {
            return S;
          },
          getSanitizedActivityRestrictedGuilds: function () {
            return E;
          },
          getSanitizedActivityJoiningRestrictedGuilds: function () {
            return T;
          },
          computeFlags: function () {
            return f;
          },
          harvestDisabled: function () {
            return _;
          },
          NonSpamRetrainingOptInOptions: function () {
            return n;
          },
          NonSpamRetrainingOptInOptionsToValue: function () {
            return m;
          },
          generateNonSpamRetrainingOptInSettingOptions: function () {
            return g;
          },
        });
      var a,
        n,
        l = s("845579"),
        i = s("341542"),
        r = s("305961");
      s("599110");
      var o = s("49111"),
        d = s("782340");
      let u = 864e5 * o.REQUEST_DATA_LIMIT_DAYS;
      function c() {
        let e = l.RestrictedGuildIds.getSetting();
        return (
          0 === i.default.totalUnavailableGuilds &&
            (e = e.filter(e => null != r.default.getGuild(e))),
          e
        );
      }
      function S() {
        let e = l.MessageRequestRestrictedGuildIds.getSetting();
        return (
          0 === i.default.totalUnavailableGuilds &&
            (e = e.filter(e => null != r.default.getGuild(e))),
          e
        );
      }
      function E() {
        let e = l.ActivityRestrictedGuilds.getSetting();
        return (
          0 === i.default.totalUnavailableGuilds &&
            (e = e.filter(e => null != r.default.getGuild(e))),
          e
        );
      }
      function T() {
        let e = l.ActivityJoiningRestrictedGuilds.getSetting();
        return (
          0 === i.default.totalUnavailableGuilds &&
            (e = e.filter(e => null != r.default.getGuild(e))),
          e
        );
      }
      function f(e) {
        return (e & o.AllFriendSourceFlags) === o.AllFriendSourceFlags
          ? { all: !0, mutualFriends: !0, mutualGuilds: !0 }
          : {
              all: !1,
              mutualFriends:
                (e & o.FriendSourceFlags.MUTUAL_FRIENDS) ===
                o.FriendSourceFlags.MUTUAL_FRIENDS,
              mutualGuilds:
                (e & o.FriendSourceFlags.MUTUAL_GUILDS) ===
                o.FriendSourceFlags.MUTUAL_GUILDS,
            };
      }
      function _(e, t) {
        return (
          !t.verified ||
          (null != e && u > Date.now() - new Date(e.created_at).getTime())
        );
      }
      ((a = n || (n = {}))[(a.UNDECIDED = 0)] = "UNDECIDED"),
        (a[(a.OPTIN = 1)] = "OPTIN"),
        (a[(a.OPTOUT = 2)] = "OPTOUT");
      let m = { 0: void 0, 1: !0, 2: !1 };
      function g() {
        return [
          {
            name: d.default.Messages
              .PRIVACY_SETTINGS_NON_SPAM_RETRAINING_SETTING_OPT_IN_HEADER,
            desc: d.default.Messages
              .PRIVACY_SETTINGS_NON_SPAM_RETRAINING_SETTING_OPT_IN_DESC,
            value: 1,
          },
          {
            name: d.default.Messages
              .PRIVACY_SETTINGS_NON_SPAM_RETRAINING_SETTING_OPT_OUT_HEADER,
            desc: d.default.Messages
              .PRIVACY_SETTINGS_NON_SPAM_RETRAINING_SETTING_OPT_OUT_DESC,
            value: 2,
          },
          {
            name: d.default.Messages
              .PRIVACY_SETTINGS_NON_SPAM_RETRAINING_SETTING_UNSET_HEADER,
            desc: d.default.Messages
              .PRIVACY_SETTINGS_NON_SPAM_RETRAINING_SETTING_UNSET_DESC,
            value: 0,
          },
        ];
      }
    },
    281069: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          FacebookIcon: function () {
            return i;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("669491"),
        l = s("82169");
      let i = e => {
        let {
          width: t = 24,
          height: s = 24,
          color: i = n.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...o
        } = e;
        return (0, a.jsx)("svg", {
          ...(0, l.default)(o),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: s,
          fill: "none",
          viewBox: "0 0 24 24",
          children: (0, a.jsx)("path", {
            fill: "string" == typeof i ? i : i.css,
            d: "M23 12a11 11 0 1 0-12.72 10.87v-7.69h-2.8V12h2.8V9.58c0-2.76 1.64-4.28 4.16-4.28 1.2 0 2.46.21 2.46.21v2.7H15.5c-1.37 0-1.8.86-1.8 1.73V12h3.06l-.49 3.18h-2.56v7.69A11 11 0 0 0 23 12Z",
            className: r,
          }),
        });
      };
    },
    125174: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          InstagramIcon: function () {
            return i;
          },
        });
      var a = s("37983");
      s("884691");
      var n = s("669491"),
        l = s("82169");
      let i = e => {
        let {
          width: t = 24,
          height: s = 24,
          color: i = n.default.colors.INTERACTIVE_NORMAL,
          colorClass: r = "",
          ...o
        } = e;
        return (0, a.jsxs)("svg", {
          ...(0, l.default)(o),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: s,
          fill: "none",
          viewBox: "0 0 24 24",
          children: [
            (0, a.jsx)("path", {
              fill: "string" == typeof i ? i : i.css,
              fillRule: "evenodd",
              d: "M7 12a5 5 0 1 1 10 0 5 5 0 0 1-10 0Zm5-3a3 3 0 1 0 0 6 3 3 0 0 0 0-6Z",
              clipRule: "evenodd",
              className: r,
            }),
            (0, a.jsx)("path", {
              fill: "string" == typeof i ? i : i.css,
              d: "M17.25 8a1.25 1.25 0 1 0 0-2.5 1.25 1.25 0 0 0 0 2.5Z",
              className: r,
            }),
            (0, a.jsx)("path", {
              fill: "string" == typeof i ? i : i.css,
              fillRule: "evenodd",
              d: "M7.86 2.07a7.3 7.3 0 0 0-2.43.47A4.9 4.9 0 0 0 3.66 3.7a4.9 4.9 0 0 0-1.15 1.77 7.35 7.35 0 0 0-.46 2.43C2.01 8.96 2 9.3 2 12.02c0 2.71.02 3.06.07 4.12.05 1.07.22 1.8.47 2.43.26.66.6 1.21 1.16 1.77.55.55 1.11.9 1.77 1.15.64.24 1.36.41 2.43.46 1.06.04 1.4.05 4.12.05 2.71 0 3.06-.02 4.12-.07a6.14 6.14 0 0 0 4.2-1.63 6.15 6.15 0 0 0 1.6-4.2c.05-1.06.06-1.4.06-4.12 0-2.71-.02-3.05-.07-4.12a6.15 6.15 0 0 0-1.63-4.2 6.14 6.14 0 0 0-4.2-1.6C15.04 2 14.7 2 11.98 2c-2.71 0-3.05.02-4.12.07Zm.1 2c-.88.04-1.39.17-1.8.33a2.9 2.9 0 0 0-1.08.7 2.9 2.9 0 0 0-.7 1.09c-.16.4-.29.92-.33 1.8A68.6 68.6 0 0 0 4 12.01c0 2.7.02 3 .07 4.03.04.87.17 1.38.33 1.79.17.42.36.73.7 1.08.35.34.67.54 1.09.7.41.16.92.29 1.8.33 1.01.04 1.32.05 4.03.05 2.7 0 3-.02 4.03-.07 1.28-.06 2.23-.4 2.87-1.04.64-.64.97-1.6 1.03-2.87.04-1.02.05-1.33.05-4.04 0-2.7-.02-3-.07-4.03-.06-1.28-.4-2.23-1.04-2.87-.64-.64-1.6-.97-2.87-1.03A69.44 69.44 0 0 0 11.98 4c-2.7 0-3 .02-4.02.07Z",
              clipRule: "evenodd",
              className: r,
            }),
          ],
        });
      };
    },
    927858: function (e, t, s) {
      "use strict";
      s.r(t),
        s.d(t, {
          TEXT_VARIANT: function () {
            return a;
          },
        });
      let a = [
        "heading-sm/normal",
        "heading-sm/medium",
        "heading-sm/semibold",
        "heading-sm/bold",
        "heading-sm/extrabold",
        "heading-md/normal",
        "heading-md/medium",
        "heading-md/semibold",
        "heading-md/bold",
        "heading-md/extrabold",
        "heading-lg/normal",
        "heading-lg/medium",
        "heading-lg/semibold",
        "heading-lg/bold",
        "heading-lg/extrabold",
        "heading-xl/normal",
        "heading-xl/medium",
        "heading-xl/semibold",
        "heading-xl/bold",
        "heading-xl/extrabold",
        "heading-xxl/normal",
        "heading-xxl/medium",
        "heading-xxl/semibold",
        "heading-xxl/bold",
        "heading-xxl/extrabold",
        "eyebrow",
        "heading-deprecated-12/normal",
        "heading-deprecated-12/medium",
        "heading-deprecated-12/semibold",
        "heading-deprecated-12/bold",
        "heading-deprecated-12/extrabold",
        "redesign/heading-18/bold",
        "text-xxs/normal",
        "text-xxs/medium",
        "text-xxs/semibold",
        "text-xxs/bold",
        "text-xs/normal",
        "text-xs/medium",
        "text-xs/semibold",
        "text-xs/bold",
        "text-sm/normal",
        "text-sm/medium",
        "text-sm/semibold",
        "text-sm/bold",
        "text-md/normal",
        "text-md/medium",
        "text-md/semibold",
        "text-md/bold",
        "text-lg/normal",
        "text-lg/medium",
        "text-lg/semibold",
        "text-lg/bold",
        "redesign/message-preview/normal",
        "redesign/message-preview/medium",
        "redesign/message-preview/semibold",
        "redesign/message-preview/bold",
        "redesign/channel-title/normal",
        "redesign/channel-title/medium",
        "redesign/channel-title/semibold",
        "redesign/channel-title/bold",
        "display-sm",
        "display-md",
        "display-lg",
        "code",
      ];
    },
    106076: function (e, t, s) {
      "use strict";
      var a, n;
      s.r(t),
        s.d(t, {
          ConsoleOAuthApplications: function () {
            return a;
          },
          ConsoleOAuthApplicationsSets: function () {
            return l;
          },
        }),
        s("222007"),
        ((n = a || (a = {})).XBOX_APPLICATION_ID = "622174530214821906"),
        (n.PLAYSTATION_APPLICATION_ID = "1008890872156405890"),
        (n.PLAYSTATION_STAGING_APPLICATION_ID = "984193235868065795");
      let l = {
        PLAYSTATION_APPLICATION_IDS: new Set([
          "984193235868065795",
          "1008890872156405890",
        ]),
        ALL: new Set([
          "622174530214821906",
          "984193235868065795",
          "1008890872156405890",
        ]),
      };
    },
  },
]);
//# sourceMappingURL=6937298a7558fddc4d86.js.map
